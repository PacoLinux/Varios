VERSION A05

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:1    
        1        1        /*M* VDE$IPATTERN - Move FilePointer by pattern operands */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P* NAME: VDE$IPATTERN
       12       12            PURPOSE:
       13       13                Move the FilePointer over pattern operands.
       14       14            DESCRIPTION:
       15       15                Given an operand's IT_OPERAND node specifying a pattern,
       16       16                will search for the pattern and return the range of the
       17       17                pattern match and a signal indicating success or failure.
       18       18        */
       19       19
       20       20        /*D* NAME: VDE$IPATTERN
       21       21            PARAMETERS:
       22       22                OPERAND - VD$OPERAND for the operand.  It's:
       23       23                    .STREAM$ must point to the VD$STREAM to use.
       24       24                    .INTREE$ must point to the root VD$IT_BLOCK_EXPR node
       25       25                        of the InTree.  VD$IT_BLOCK_EXPR.OPTIONS must be set
       26       26                        appropriately for the block expression which this
       27       27                        pattern operand is a part of.
       28       28                    .EVAL$ must point to the top VD$EVAL on the evaluation
       29       29                        stack.  This VD$EVAL's .RANGE and .STATE# specify
       30       30                        where to start the search; its .ENCLOSING specifies
       31       31                        the bounds of the search area.
       32       32                IT_OPERAND - A VD$IT_OPERAND node specifying the pattern
       33       33                    movement to make.  Its .CODE# must be %OPAND_PATTERN,
       34       34                    and its .PARAM$ must point to a VD$PATTERN.
       35       35                    If IT$OPERAND.OPTIONS.SKIP# > 0, we'll move one byte from
       36       36                    the initial location before searching.
       37       37                MATCHED_RANGE - Uninitialized VD$RANGE.
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:2    
       38       38                SIGNAL - Uninitialized BIT(1) ALIGNED.
       39       39            INPUT:
       40       40                VD_$CASE - VD$NUMBER containing the value of the $CASE
       41       41                    predefined name.
       42       42                    A non-zero value says to match the alphabetic
       43       43                    case of literals against the file data exactly; a value
       44       44                    of 0 says to ignore the case of both the literal
       45       45                    and the file data when making comparisons.
       46       46                VD_$MATCH_LIMIT - VD$NUMBER containing the value of the
       47       47                    $MATCH_LIMIT predefined name.  This number specifies the
       48       48                    maximum number of records to read (including the initial
       49       49                    record) when trying to match the pattern expression.
       50       50                    This limit is the maximum number of records which can be
       51       51                    occupied by the match of the entire pattern expression.
       52       52            OUTPUT:
       53       53                MATCHED_RANGE will specify the location of the match found; if none
       54       54                    found, will be %CLEAR.
       55       55                SIGNAL will contain %TRUE if we were able to find a pattern match
       56       56                    which lies entirely within the enclosing block.
       57       57                    Otherwise, SIGNAL will contain %FALSE.
       58       58                TOS$EVAL.REMAINING# will be set to 0 if we didn't find a match.
       59       59                    We do this to indicate that we've tried all alternatives
       60       60                    for the pattern, the alternatives being the different
       61       61                    locations in the file.
       62       62            DESCRIPTION:
       63       63                For each entry in the VD$PATTERN:
       64       64                Search for the symbol specified in the entry, starting at
       65       65                    the current location.  The search is bounded by 3 limits:
       66       66                    o REMAINING_RECS - Set initially to %INFINITY; as soon as we match
       67       67                        any symbol in VD$PATTERN, set to $MATCH_LIMIT and decremented
       68       68                        as we read records to match symbols.
       69       69                    o REMAINING_BYTES - Initially set to %INFINITY (indefinite search);
       70       70                        after matching any symbol except %PS_WILD_STRING, set to 0
       71       71                        (match at current location); after matching %PS_WILD_STRING,
       72       72                        value is taken from 2nd parameter of the %PS_WILD_STRING
       73       73                        function.
       74       74                    o TOS$EVAL.ENCLOSING - enclosing block boundaries.
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:3    
       75       75                If we find a match for the symbol:
       76       76                    If REMAINING_BYTES isn't 0, then "checkpoint":  push a new entry onto
       77       77                        the pattern evaluation stack, including the record and byte
       78       78                        search limits in case we need to backtrack later.
       79       79                        We don't checkpoint if we didn't search for this symbol (that
       80       80                        is, if REMAINING_BYTES = 0), but only matched it at the
       81       81                        current location, 'cause when we backtrack, we don't want to
       82       82                        retry this state.
       83       83                    Bump the index into the VD$PATTERN, copy RANGE.ENDD to RANGE.START
       84       84                        in the top VD$EVAL_PATTERN, and reset the REMAINING_BYTES
       85       85                        to 0.  If, however, the just-matched symbol is a
       86       86                        %PS_WILD_STRING, then set REMAINING_BYTES to the max # of
       87       87                        bytes to match.
       88       88                If we didn't find a match for this symbol:
       89       89        *N**N*      Search ahead in the VD$PATTERN entries for the next alternative.
       90       90        *N**N*      If there are no more alternatives in this VD$PATTERN:
       91       91                    Pop the top entry off the pattern evaluation stack.
       92       92                        If the stack is empty, the pattern expression has failed:
       93       93                        return SIGNAL = %FALSE.
       94       94                        Else move off the current RANGE.START location by 1 position,
       95       95                        and search for the pattern entry specified in the top
       96       96                        VD$EVAL_PATTERN.
       97       97                If we don't find the requested number of matches for the
       98       98                    entire pattern expression, return SIGNAL = %FALSE.
       99       99                    Also set TOS$EVAL.REMAINING# to 0 to get out of the
      100      100                    "try the next alternative" loop in VDE$IRANGE.
      101      101        */
      102      102
      103      103        VDE$IPATTERN: PROC (OPERAND, IT_OPERAND, MATCHED_RANGE, SIGNAL) ALTRET;
      104      104
      105      105        %INCLUDE VD_MACROS_M;
      106     2320        %INCLUDE B$TABLES_C;
      107     2428
      108     2429
      109     2430        %VD$OPERAND (NAME=OPERAND, STCLASS=PARAM);
      110     2444        %VD$IT_OPERAND (NAME=IT_OPERAND, STCLASS=PARAM);
      111     2510        %VD$RANGE (NAME=MATCHED_RANGE, STCLASS=PARAM);
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:4    
      112     2579    1   DCL SIGNAL BIT(1) ALIGNED;
      113     2580
      114     2581
      115     2582    1   DCL VDA$LREAD                   ENTRY (4) ALTRET;
      116     2583    1   DCL VDE$IMOVE_BY_POSITIONS      ENTRY (7) ALTRET;
      117     2584    1   DCL VDE$RREAD                   ENTRY (4) ALTRET;
      118     2585    1   DCL VDE$RGET                    ENTRY (3) ALTRET;
      119     2586    1   DCL VDI$BINSERT                 ENTRY (4) ALTRET;
      120     2587    1   DCL VDI$CSET_COUNT              ENTRY (2) ALTRET;
      121     2588    1   DCL VDG$LOCATION_TO_PTRS        ENTRY (2) ALTRET;
      122     2589    1   DCL VDG$COMPARE_LOC_W_PTRS      ENTRY (4) ALTRET;
      123     2590    1   DCL VDG$COMPARE_LOCS            ENTRY (3) ALTRET;
      124     2591    1   DCL VDG$OALLOC                  ENTRY (3) ALTRET;
      125     2592    1   DCL VDG$OFREE                   ENTRY (1) ALTRET;
      126     2593    1   DCL VDG$OCOPY                   ENTRY (2) ALTRET;
      127     2594    1   DCL VDG$OCLEAR_RANGE            ENTRY (1) ALTRET;
      128     2595    1   DCL VDG$OCOPY_RANGE             ENTRY (2) ALTRET;
      129     2596    1   DCL VDG$OCLEAR_LOCATION         ENTRY (1) ALTRET;
      130     2597    1   DCL VDG$OCOPY_LOCATION          ENTRY (2) ALTRET;
      131     2598    1   DCL VDG$ESCREECH                ENTRY (3);
      132     2599
      133     2600
      134     2601        %VD_6E (STCLASS=SYMREF);
      135     2637        %VD$NUMBER (NAME=VD_$CASE, STCLASS=SYMREF);
      136     2682        %VD$NUMBER (NAME=VD_$MATCH_LIMIT, STCLASS=SYMREF);
      137     2727        %VD$LOCATION (NAME=VD_LOC_$MATCHES, STCLASS=SYMREF);
      138     2755        %B$XL_UPPER;
      139     2759    1   DCL 1 VD_STATIC_TEMP SYMREF ALIGNED,    /* Used as a SEARCH table */
      140     2760    1         2 FLAGS CHAR(STRING_LENGTH);
      141     2761    1   DCL 1 SEARCH_TABLE REDEF VD_STATIC_TEMP,
      142     2762    1         2 * CHAR(512),
      143     2763    1         2 FLAGS CHAR(512);
      144     2764    1   DCL 1 LITERAL REDEF VD_STATIC_TEMP,
      145     2765    1         2 * CHAR(512),
      146     2766    1         2 BYTES CHAR(STRING_LENGTH);
      147     2767
      148     2768
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:5    
      149     2769
      150     2770    1   DCL MX_RECORDS SBIN;
      151     2771    1   DCL TOS_EVAL_PATT$ PTR;
      152     2772    1   DCL NEW_TOS_EVAL_PATT$ PTR;
      153     2773    1   DCL EVAL_PATT_FOR_BO_MATCH$ PTR;
      154     2774    1   DCL EVAL_PATT_FOR_EO_MATCH$ PTR;
      155     2775    1   DCL LEVEL SBIN;
      156     2776        %VD$LOCATION (NAME=START_SEARCH_LOC, STCLASS=AUTO); /* Owns objects!! */
      157     2804        %VD$LOCATION;
      158     2832        %VD$LOCATION_PTRS (NAME=ENCLOSING_START_PTRS, STCLASS=AUTO);
      159     2847        %VD$LOCATION_PTRS (NAME=ENCLOSING_END_PTRS, STCLASS=AUTO);
      160     2862    1   DCL SKIP_COUNT SBIN;
      161     2863    1   DCL MOVE_BEFORE_SEARCH BIT(1) ALIGNED;
      162     2864    1   DCL CURR_PATTERN$ PTR;
      163     2865    1   DCL PATT_ENTRY$ PTR;
      164     2866    1   DCL FOUND BIT(1) ALIGNED;
      165     2867    1   DCL N_MATCHES SBIN;
      166     2868    1   DCL RCCL SBIN;
      167     2869    1   DCL STRING_LENGTH SBIN;
      168     2870    1   DCL PART_MATCH SBIN; /* For Across-record matching, how much is matched yet. */
      169     2871    1   DCL MOVE_POSITIONS SBIN;
      170     2872
      171     2873
      172     2874        %VD$STREAM (NAME=STREAM, STCLASS="BASED(OPERAND.STREAM$)");
      173     2980        %VD$EVAL (NAME=TOS$EVAL, STCLASS="BASED(OPERAND.EVAL$)");
      174     3225        %VD$PATTERN (NAME=CURR$PATTERN, STCLASS="BASED(CURR_PATTERN$)");
      175     3276        %VD$PATT_ENTRY (NAME=PATT$ENTRY, STCLASS="BASED(PATT_ENTRY$)");
      176     3291        %VD$EVAL_PATTERN (NAME=TOS$EVAL_PATT, STCLASS="BASED(TOS_EVAL_PATT$)");
      177     3398        %VD$EVAL_PATTERN (NAME=NEW$TOS_EVAL_PATT, STCLASS="BASED(NEW_TOS_EVAL_PATT$)");
      178     3505        %VD$EVAL_PATTERN (NAME=EVAL$PATT_FOR_BO_MATCH,
      179     3506            STCLASS="BASED(EVAL_PATT_FOR_BO_MATCH$)");
      180     3613        %VD$EVAL_PATTERN (NAME=EVAL$PATT_FOR_EO_MATCH,
      181     3614            STCLASS="BASED(EVAL_PATT_FOR_EO_MATCH$)");
      182     3721        %VD$PATTERN;
      183     3772        %VD$TEXTC;
      184     3795        %VD$TEXTC_REMOTE;
      185     3856        %VD$IT_BLOCK_EXPR;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:6    
      186     4006        %VD$PORT;
      187     4104
      188     4105
      189     4106
      190     4107    1           TOS_EVAL_PATT$ = ADDR(NIL);
      191     4108    1           PART_MATCH = 0;
      192     4109    1           MATCHED_RANGE = %CLEAR;
      193     4110    1           START_SEARCH_LOC = %CLEAR;
      194     4111    1           N_MATCHES = 0;
      195     4112
      196     4113    1           LEVEL = OPERAND.INTREE$ -> VD$IT_BLOCK_EXPR.OPTIONS.LEVEL#;
      197     4114    1           CALL VDG$LOCATION_TO_PTRS (TOS$EVAL.ENCLOSING.START,
      198     4115    1             ENCLOSING_START_PTRS)
      199     4116    1             ALTRET (LOCATION_TO_PTRS_FAILED);
      200     4117    1           CALL VDG$LOCATION_TO_PTRS (TOS$EVAL.ENCLOSING.ENDD,
      201     4118    1             ENCLOSING_END_PTRS)
      202     4119    1             ALTRET (LOCATION_TO_PTRS_FAILED);
      203     4120    2           IF IT_OPERAND.OPTIONS.DIRECTION#~=%DIR_FORWARD THEN DO;
      204     4121    2              CALL VDG$OCOPY_LOCATION (TOS$EVAL.RANGE.START, START_SEARCH_LOC)
      205     4122    2                ALTRET (OCOPY_LOCATION_FAILED);
      206     4123    2              CALL VDG$LOCATION_TO_PTRS (TOS$EVAL.RANGE.START, ENCLOSING_END_PTRS)
      207     4124    2                ALTRET (LOCATION_TO_PTRS_FAILED);
      208     4125    2              END;
      209     4126    1           ELSE
      210     4127    1              CALL VDG$OCOPY_LOCATION (TOS$EVAL.RANGE.ENDD, START_SEARCH_LOC)
      211     4128    1                ALTRET (OCOPY_LOCATION_FAILED);
      212     4129
      213     4130    1           SKIP_COUNT = IT_OPERAND.OPTIONS.SKIP#;  /* So I can change it */
      214     4131    1           MOVE_BEFORE_SEARCH = %FALSE;     /* Start search at curr location */
      215     4132    2           IF SKIP_COUNT~=0 THEN DO;
      216     4133    2              CALL VDG$COMPARE_LOCS (TOS$EVAL.RANGE.START, TOS$EVAL.RANGE.ENDD,
      217     4134    2                RCCL) ALTRET (COMPARE_LOCS_FAILED);
      218     4135    2              IF RCCL~=%RCCL_EQUAL THEN EXIT; /* Already moving to block edge */
      219     4136    2              MOVE_BEFORE_SEARCH = %TRUE;
      220     4137    2              END;
      221     4138
      222     4139
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:7    
      223     4140    1   EACH_MATCH_OF_ENTIRE_PATTERN:
      224     4141    2           DO %FOREVER; /* Will exit if no match or SKIP_COUNT done */
      225     4142    2              SIGNAL = %FALSE;     /* In case we EXIT early */
      226     4143    2              EVAL_PATT_FOR_BO_MATCH$ = ADDR(NIL);
      227     4144    2              EVAL_PATT_FOR_EO_MATCH$ = ADDR(NIL);
      228     4145                   /*
      229     4146                   *    Begin looking for next match of the pattern expression.
      230     4147                   *    START_SEARCH_LOC tells where to start searching.
      231     4148                   *    Initialize stack with first entry.
      232     4149                   */
      233     4150    2              CALL VDG$OALLOC (%CLS_EVAL_PATTERN, NEW_TOS_EVAL_PATT$)
      234     4151    2                ALTRET (OALLOC_FAILED);
      235     4152    2              TOS_EVAL_PATT$ = NEW_TOS_EVAL_PATT$;
      236     4153    2              TOS$EVAL_PATT.PATTERN$ = IT_OPERAND.PARAM$;
      237     4154    2              TOS$EVAL_PATT.PATT_INDEX# = 0;
      238     4155    2              IF IT_OPERAND.OPTIONS.DIRECTION# = %DIR_FORWARD THEN
      239     4156    2                 TOS$EVAL_PATT.RANGE.ENDD = START_SEARCH_LOC;
      240     4157    2              ELSE
      241     4158    2                 TOS$EVAL_PATT.RANGE.START = START_SEARCH_LOC;
      242     4159    2              START_SEARCH_LOC = %CLEAR;
      243     4160    2              TOS$EVAL_PATT.DIRECTION# = IT_OPERAND.OPTIONS.DIRECTION#;
      244     4161    2              TOS$EVAL_PATT.REMAINING_RECS# = %INFINITY;
      245     4162    2              TOS$EVAL_PATT.REMAINING_BYTES# = %INFINITY;
      246     4163
      247     4164    2              CURR_PATTERN$ = TOS$EVAL_PATT.PATTERN$;
      248     4165    2              IF CURR$PATTERN.N_ENTRIES# = 0 THEN EXIT;
      249     4166
      250     4167    2   EACH_PATTERN_ENTRY:
      251     4168    3              DO UNTIL TOS$EVAL_PATT.PATT_INDEX# = CURR$PATTERN.N_ENTRIES#;
      252     4169    3                 PATT_ENTRY$ =
      253     4170    3                   ADDR(CURR$PATTERN.ENTRIES (TOS$EVAL_PATT.PATT_INDEX#));
      254     4171    4                 IF TOS$EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN DO;
      255     4172                         /* Start testing from end of last matched symbol */
      256     4173    4                    CALL VDG$OCLEAR_LOCATION (TOS$EVAL_PATT.RANGE.START)
      257     4174    4                      ALTRET (OCLEAR_LOCATION_FAILED);
      258     4175    4                    TOS$EVAL_PATT.RANGE.START = TOS$EVAL_PATT.RANGE.ENDD;
      259     4176    4                    TOS$EVAL_PATT.RANGE.ENDD = %CLEAR;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:8    
      260     4177    4                    END;
      261     4178    4                 ELSE DO;
      262     4179    4                    CALL VDG$OCLEAR_LOCATION (TOS$EVAL_PATT.RANGE.ENDD)
      263     4180    4                      ALTRET (OCLEAR_LOCATION_FAILED);
      264     4181    4                    END;
      265     4182    4                 IF MOVE_BEFORE_SEARCH THEN DO;
      266     4183    4                    MX_RECORDS = %HALF_INFINITY;
      267     4184    4                    MOVE_POSITIONS = 1;
      268     4185    4                    IF PATT$ENTRY.N# > %MXNB_DATA
      269     4186    4                      AND PATT$ENTRY.CODE# = %PS_WILD_STRING
      270     4187    5                      AND TOS$EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN DO;
      271     4188    5                       MX_RECORDS = 1;
      272     4189    5                       MOVE_POSITIONS = %HALF_INFINITY;
      273     4190    5                       END;
      274     4191    4                    CALL VDE$IMOVE_BY_POSITIONS (STREAM, TOS$EVAL_PATT.RANGE.START,
      275     4192    4                      TOS$EVAL.ENCLOSING, MX_RECORDS, TOS$EVAL_PATT.DIRECTION#,
      276     4193    4                      MOVE_POSITIONS, FOUND)
      277     4194    4                      ALTRET (IMOVE_BY_POSITIONS_FAILED);
      278     4195    4                    MOVE_BEFORE_SEARCH = %FALSE; /* Only move again for retries */
      279     4196    4                    IF NOT FOUND AND MX_RECORDS>0 THEN         /* Hit a limit */
      280     4197    4                       EXIT EACH_MATCH_OF_ENTIRE_PATTERN;
      281     4198    4                    END;
      282     4199
      283     4200    3                 CALL FIND_SYMBOL (PATT$ENTRY, TOS$EVAL_PATT, SIGNAL)
      284     4201    3                   ALTRET (FIND_SYMBOL_FAILED);
      285     4202    3                 CURR_PATTERN$ = TOS$EVAL_PATT.PATTERN$;  /* May have switched */
      286     4203
      287     4204    3                 IF SIGNAL THEN
      288     4205    4   MATCHED_A_SYMBOL: DO;
      289     4206                         /*  We've matched a symbol */
      290     4207    5                    IF EVAL_PATT_FOR_BO_MATCH$ = ADDR(NIL) THEN DO;
      291     4208                            /*
      292     4209                            *  Matched first symbol in pattern expression.
      293     4210                            *  Save pointer to current TOS_EVAL_PATT now; we
      294     4211                            *       may push a new one in a few statements.
      295     4212                            */
      296     4213    5                       EVAL_PATT_FOR_BO_MATCH$ = TOS_EVAL_PATT$;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:9    
      297     4214    5                       END;
      298     4215
      299     4216    4                    IF TOS$EVAL_PATT.REMAINING_BYTES# > 0
      300     4217    4                      OR PATT$ENTRY.CODE# = %PS_WILD_STRING
      301     4218    4                      OR TOS_EVAL_PATT$ = EVAL_PATT_FOR_BO_MATCH$
      302     4219    5                      OR TOS_EVAL_PATT$ = EVAL_PATT_FOR_EO_MATCH$ THEN DO;
      303     4220                            /* Push a new entry onto pattern stack */
      304     4221    5                       CALL VDG$OCOPY (TOS$EVAL_PATT, NEW_TOS_EVAL_PATT$)
      305     4222    5                         ALTRET (OCOPY_FAILED);
      306     4223    5                       NEW$TOS_EVAL_PATT.BLINK$ = TOS_EVAL_PATT$;
      307     4224    5                       TOS_EVAL_PATT$ = NEW_TOS_EVAL_PATT$;
      308     4225
      309     4226    5                       IF PATT$ENTRY.CODE# = %PS_WILD_STRING THEN
      310     4227    5                          TOS$EVAL_PATT.BLINK$->TOS$EVAL_PATT.REMAINING_BYTES# = 0;
      311     4228
      312     4229    5                       IF TOS$EVAL_PATT.BLINK$ ~= EVAL_PATT_FOR_BO_MATCH$
      313     4230    5                       THEN EXIT;
      314     4231                            /*
      315     4232                            *   Now do the rest of the "first symbol in pattern"
      316     4233                            *       processing, which should affect the
      317     4234                            *       new TOS_EVAL_PATT$.
      318     4235                            */
      319     4236    5                       TOS$EVAL_PATT.DIRECTION# = %DIR_FORWARD;
      320     4237    5                       TOS$EVAL_PATT.REMAINING_RECS# =
      321     4238    5                         MAXIMUM (0, VD_$MATCH_LIMIT.V# - 1);
      322     4239    5                       END;
      323     4240
      324     4241    5                    IF PATT$ENTRY.CODE# = %PS_WILD_STRING THEN DO;
      325     4242                            /* Matched wildcard:  do a bounded search now */
      326     4243    5                       TOS$EVAL_PATT.REMAINING_BYTES# = PATT$ENTRY.N# -
      327     4244    5                         PATT$ENTRY.M#;
      328     4245    5                       END;
      329     4246    4                    ELSE    /* Match at RANGE.START */
      330     4247    4                       TOS$EVAL_PATT.REMAINING_BYTES# = 0;
      331     4248                         /* Bump to next entry in VD$PATTERN */
      332     4249    5                    IF PART_MATCH = 0 THEN DO;
      333     4250    5                       TOS$EVAL_PATT.PATT_INDEX# = TOS$EVAL_PATT.PATT_INDEX# + 1;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:10   
      334     4251    5                       END;
      335     4252    4                    END MATCHED_A_SYMBOL;
      336     4253
      337     4254    3                 ELSE
      338     4255    4   DIDNT_MATCH_A_SYMBOL: DO;
      339     4256                         /*N* Someday, scan forward in CURR$PATTERN for alternatives */
      340     4257                         /* Can't match pattern symbol:  backtrack to last success */
      341     4258    4                    PART_MATCH = 0;
      342     4259    4                    IF TOS$EVAL_PATT.BLINK$ = ADDR(NIL)
      343     4260    4                      OR TOS$EVAL.CTRL_REC_MATCHED_EOF THEN
      344     4261                            /* Pattern failed (for this SKIP iteration) */
      345     4262    4                       EXIT EACH_MATCH_OF_ENTIRE_PATTERN;
      346     4263    5                    DO UNTIL TOS$EVAL_PATT.BLINK$ = ADDR(NIL) OR
      347     4264    5                      TOS$EVAL_PATT.REMAINING_BYTES# ~= 0;
      348     4265    5                       NEW_TOS_EVAL_PATT$ = TOS$EVAL_PATT.BLINK$;
      349     4266    5                       CALL VDG$OFREE (TOS$EVAL_PATT)
      350     4267    5                         ALTRET (OFREE_FAILED);
      351     4268    5                       TOS_EVAL_PATT$ = NEW_TOS_EVAL_PATT$;
      352     4269    5                       END;
      353     4270    4                    MOVE_BEFORE_SEARCH = %TRUE;    /* Try starting a bit later */
      354     4271    4                    START_SEARCH_LOC = TOS$EVAL_PATT.RANGE.START;
      355     4272    4                    TOS$EVAL_PATT.RANGE.START = TOS$EVAL_PATT.RANGE.ENDD;
      356     4273    4                    TOS$EVAL_PATT.RANGE.ENDD = START_SEARCH_LOC;
      357     4274    4                    START_SEARCH_LOC = %CLEAR;
      358     4275    4                    END DIDNT_MATCH_A_SYMBOL;
      359     4276
      360     4277    3                 END EACH_PATTERN_ENTRY;
      361     4278
      362     4279                   /*
      363     4280                   *   Found one match for the entire pattern expression.
      364     4281                   *   Save the matched range for this iteration.
      365     4282                   *   MATCHED_RANGE must be %CLEAR at this point.
      366     4283                   */
      367     4284    2              N_MATCHES = N_MATCHES + 1;
      368     4285    2              IF EVAL_PATT_FOR_EO_MATCH$ = ADDR(NIL) THEN
      369     4286    2                 EVAL_PATT_FOR_EO_MATCH$ = TOS_EVAL_PATT$;
      370     4287    2              SKIP_COUNT = SKIP_COUNT - 1;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:11   
      371     4288    3              IF SKIP_COUNT <= 0 THEN DO;
      372     4289    3                 MATCHED_RANGE.ENDD = EVAL$PATT_FOR_EO_MATCH.RANGE.ENDD;
      373     4290    3                 EVAL$PATT_FOR_EO_MATCH.RANGE.ENDD = %CLEAR;
      374     4291    3                 MATCHED_RANGE.START = EVAL$PATT_FOR_BO_MATCH.RANGE.START;
      375     4292    3                 EVAL$PATT_FOR_BO_MATCH.RANGE.START = %CLEAR;
      376     4293    3                 EXIT EACH_MATCH_OF_ENTIRE_PATTERN;
      377     4294    3                 END;
      378     4295
      379     4296                   /*
      380     4297                   *   Setup start location for possible next iteration.
      381     4298                   */
      382     4299    2              IF EVAL$PATT_FOR_BO_MATCH.DIRECTION# ~= %DIR_FORWARD THEN
      383     4300    2                 PATT_ENTRY$ = ADDR(EVAL$PATT_FOR_BO_MATCH.RANGE.START);
      384     4301    2              ELSE
      385     4302    2                 PATT_ENTRY$ = ADDR(EVAL$PATT_FOR_EO_MATCH.RANGE.ENDD);
      386     4303    2              START_SEARCH_LOC = PATT_ENTRY$->VD$LOCATION;
      387     4304    2              PATT_ENTRY$->VD$LOCATION = %CLEAR;
      388     4305
      389     4306                   /* Pop the entire pattern stack */
      390     4307    3              DO UNTIL TOS_EVAL_PATT$ = ADDR(NIL);
      391     4308    3                 NEW_TOS_EVAL_PATT$ = TOS$EVAL_PATT.BLINK$;
      392     4309    3                 CALL VDG$OFREE (TOS$EVAL_PATT)
      393     4310    3                   ALTRET (OFREE_FAILED);
      394     4311    3                 TOS_EVAL_PATT$ = NEW_TOS_EVAL_PATT$;
      395     4312    3                 END;
      396     4313    2              END EACH_MATCH_OF_ENTIRE_PATTERN;
      397     4314
      398     4315    2           IF NOT SIGNAL THEN DO;
      399     4316    2              TOS$EVAL.REMAINING# = 0;
      400     4317    2              END;
      401     4318
      402     4319    1           CALL CLEAN_UP
      403     4320    1             ALTRET (CLEAN_UP_FAILED);
      404     4321
      405     4322    1           RETURN;
      406     4323
      407     4324
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:12   
      408     4325
      409     4326    1   COMPARE_LOCS_FAILED: ;
      410     4327    1   OALLOC_FAILED: ;
      411     4328    1   OFREE_FAILED: ;
      412     4329    1   OCOPY_FAILED: ;
      413     4330    1   OCLEAR_LOCATION_FAILED: ;
      414     4331    1   IMOVE_BY_POSITIONS_FAILED: ;
      415     4332    1   FIND_SYMBOL_FAILED: ;
      416     4333    1           CALL CLEAN_UP
      417     4334    1             ALTRET (CLEAN_UP_FAILED);
      418     4335    1           ALTRETURN;
      419     4336
      420     4337
      421     4338    1   LOCATION_TO_PTRS_FAILED: ;
      422     4339    1   OCOPY_LOCATION_FAILED: ;
      423     4340    1   CLEAN_UP_FAILED: ;
      424     4341    1           ALTRETURN;
      425     4342
      426     4343        %BOX (TITLE=CLEAN_UP);

              4355    1   /***************************************************************************
              4357    1    *                                                                         *
              4361    1            *                                  CLEAN_UP                               *
              4363    1            *                                                                         *
              4365    1           ***************************************************************************/

      427     4369
      428     4370        /*I* NAME: CLEAN_UP
      429     4371            DESCRIPTION:
      430     4372                Cleans up before [alt]returning.
      431     4373                Frees any dynamic storage our AUTO owns.
      432     4374        */
      433     4375
      434     4376    1   CLEAN_UP: PROC ALTRET;
      435     4377
      436     4378    2   DCL PREV_TOS_EVAL_PATT$ PTR;
      437     4379    2   DCL THIS_WILD$ PTR;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:13   
      438     4380    2   DCL WILD_COUNT SBIN;
      439     4381
      440     4382        %VD$WILD_STRINGS (STCLASS="BASED(VD_6E.WILD_STRINGS$)");
      441     4497        %VD$WILD_STRINGS (NAME=WILD, STCLASS="BASED(THIS_WILD$)");
      442     4612        %VD$EVAL_PATTERN (NAME=PREV$PATT, STCLASS="BASED(PREV_TOS_EVAL_PATT$)");
      443     4719
      444     4720
      445     4721
      446     4722    2           CALL VDI$CSET_COUNT (VD_LOC_$MATCHES, N_MATCHES)
      447     4723    2             ALTRET (CSET_COUNT_FAILED);
      448     4724
      449     4725    3           IF START_SEARCH_LOC ~= %CLEAR THEN DO;
      450     4726    3              CALL VDG$OCLEAR_LOCATION (START_SEARCH_LOC)
      451     4727    3                ALTRET (OCLEAR_LOCATION_FAILED);
      452     4728    3              END;
      453     4729
      454     4730                /*
      455     4731                * If we're matching wildcards, write them to the strings file.
      456     4732                *
      457     4733                * First count them.
      458     4734                */
      459     4735    2           WILD_COUNT = 0;
      460     4736    2           PREV_TOS_EVAL_PATT$ = TOS_EVAL_PATT$;
      461     4737    2           IF SIGNAL AND VD_6E.SOURCE.WILD_STRINGS THEN
      462     4738    3           DO UNTIL PREV_TOS_EVAL_PATT$ = ADDR(NIL);
      463     4739
      464     4740    3              IF PREV$PATT.PATTERN$ ->
      465     4741    3                VD$PATTERN.ENTRIES.CODE# (PREV$PATT.PATT_INDEX#) = %PS_WILD_STRING
      466     4742    3              THEN WILD_COUNT = WILD_COUNT + 1;
      467     4743    3              PREV_TOS_EVAL_PATT$ = PREV$PATT.BLINK$;
      468     4744    3              END;
      469     4745
      470     4746                /* Pop the entire pattern stack */
      471     4747    3           DO WHILE TOS_EVAL_PATT$ ~= ADDR(NIL);
      472     4748    3              PREV_TOS_EVAL_PATT$ = TOS$EVAL_PATT.BLINK$;
      473     4749                   /*
      474     4750                   *  The wildcard entries are in the stack backwards (like
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:14   
      475     4751                   *  everything else), so the next one's index is WILD_COUNT.
      476     4752                   */
      477     4753    3              IF WILD_COUNT > 0 AND PREV$PATT.PATTERN$ -> VD$PATTERN.ENTRIES.CODE#
      478     4754    4                (PREV$PATT.PATT_INDEX#) = %PS_WILD_STRING THEN DO;
      479     4755
      480     4756                      /*
      481     4757                      *  The matched range goes from PREV$PATT.ENDD to TOS$PATT.START,
      482     4758                      *  so switch things around to make the proper range.
      483     4759                      */
      484     4760    4                 START_SEARCH_LOC = PREV$PATT.RANGE.START;
      485     4761    4                 PREV$PATT.RANGE.START = PREV$PATT.RANGE.ENDD;
      486     4762    4                 PREV$PATT.RANGE.ENDD = TOS$EVAL_PATT.RANGE.START;
      487     4763    4                 TOS$EVAL_PATT.RANGE.START = START_SEARCH_LOC;
      488     4764
      489     4765                      /*
      490     4766                      *  Find any corresponding entries in WILD$STRINGS,
      491     4767                      *  and call VDI$BINSERT to stuff the match into the
      492     4768                      *  source file.
      493     4769                      */
      494     4770
      495     4771    4                 THIS_WILD$ = PINCRW (VD_6E.WILD_STRINGS$,
      496     4772    4                   SIZEW(WILD.W) * VD$WILD_STRINGS.N_WILDCARDS#);
      497     4773    5                 DO UNTIL THIS_WILD$ = VD_6E.WILD_STRINGS$;
      498     4774
      499     4775    5                    THIS_WILD$ = PINCRW (THIS_WILD$, -SIZEW(WILD.W));
      500     4776    5                    IF WILD.W.N# = WILD_COUNT THEN
      501     4777    5                       CALL VDI$BINSERT (PREV$PATT.RANGE, STREAM,
      502     4778    5                         WILD.W.RANGE, VD_6E.SOURCE.OPERAND.STREAM$->STREAM)
      503     4779    5                         ALTRET (BINSERT_FAILED);
      504     4780    5                    END;
      505     4781
      506     4782    4                 WILD_COUNT = WILD_COUNT - 1;
      507     4783    4                 END;
      508     4784
      509     4785    3              CALL VDG$OFREE (TOS$EVAL_PATT)
      510     4786    3                ALTRET (OFREE_FAILED);
      511     4787    3              TOS_EVAL_PATT$ = PREV_TOS_EVAL_PATT$;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:15   
      512     4788    3              END;
      513     4789
      514     4790    2           RETURN;
      515     4791
      516     4792
      517     4793    2   BINSERT_FAILED: ;
      518     4794    2   CSET_COUNT_FAILED: ;
      519     4795    2   OCLEAR_RANGE_FAILED: ;
      520     4796    2   OCLEAR_LOCATION_FAILED: ;
      521     4797    2   OFREE_FAILED: ;
      522     4798    2           ALTRETURN;
      523     4799
      524     4800    2   END CLEAN_UP;
      525     4801
      526     4802                %BOX (TITLE=FIND_SYMBOL, PAGE=YES);
              4810    2
              4814    2   /***************************************************************************
              4816    2    *                                                                         *
              4820    2            *                                FIND_SYMBOL                              *
              4822    2            *                                                                         *
              4824    2           ***************************************************************************/

      527     4828
      528     4829        /*I* NAME: FIND_SYMBOL
      529     4830            PARAMETERS:
      530     4831                PATT_ENTRY - VD$PATT_ENTRY describing the symbol to find.
      531     4832                TOS_EVAL_PATT - Top VD$EVAL_PATTERN on the pattern stack.  Its:
      532     4833                    .RANGE - VD$RANGE whose .START specifies where to start the search
      533     4834                        for the symbol.
      534     4835                        .RANGE.ENDD must be %CLEAR at entry.
      535     4836                    .DIRECTION# - A %DIR_ def.  The direction in which to search.
      536     4837                    .REMAINING_RECS# - Max # of additional records to read (beyond the
      537     4838                        .RANGE.START record) when searching for a match for the symbol.
      538     4839                        0 means the match must lie entirely within the .RANGE.START
      539     4840                        record.
      540     4841                    .REMAINING_BYTES# - Max # of bytes to skip when searching for the
      541     4842                        start of a symbol.  0 means symbol must match at .RANGE.START.
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:16   
      542     4843                FOUND - An uninitialized BIT(1) ALIGNED.
      543     4844            INPUT:
      544     4845                STREAM - The stream to use.
      545     4846                ENCLOSING_START_PTRS, ENCLOSING_END_PTRS - VD$LOCATION_PTRS
      546     4847                    containing the bounds of the enclosing block for the
      547     4848                    search.
      548     4849                LEVEL - Level of file structure to search.
      549     4850                TOS$EVAL.CTRL_REC_MATCHED_EOF should be set if any $CONTROL-Record
      550     4851                    in any pattern has matched at EOF in this editing operation
      551     4852                    (NOT just in this repetition, but between any two editing verbs).
      552     4853                VD_$CASE - Current value of $CASE predefined variable.  Value ~= 0
      553     4854                    means that "alphabetic case matters":  do exact comparisons to
      554     4855                    file data; value = 0 means case doesn't matter:  do
      555     4856                    case-insensitive searches.
      556     4857            OUTPUT:
      557     4858                FOUND will be set %TRUE if the match succeeds; else %FALSE.
      558     4859                If the match succeeds:
      559     4860                    TOS_EVAL_PATT.RANGE.START and .ENDD will specify the start and end
      560     4861                        locations of the matching block in the file.
      561     4862                    TOS_EVAL_PATT.REMAINING_RECS# will be decremented if any
      562     4863                        additional records were read to match the symbol.
      563     4864                TOS$EVAL.CTRL_REC_MATCHED_EOF will be set if a $CONTROL-Record
      564     4865                    in a pattern matched EOF.
      565     4866            DESCRIPTION:
      566     4867                If PATT_ENTRY is %PS_LITERAL or _VALUE:
      567     4868                    Call FIND_LITERAL to search from .RANGE.START for the literal
      568     4869                    string or byte value.  If found, set .RANGE.START and .ENDD
      569     4870                    to the start and end of the matching data in the file.
      570     4871                If PATT_ENTRY is %PS_WILD_STRING:
      571     4872                    Skip forward the minumum # of bytes to match.  This symbol
      572     4873                    always succeeds.
      573     4874        *N*     If PATT_ENTRY is %PS_PATTERN:
      574     4875        *N*         Change patterns?  Always succeeds??????????
      575     4876                If PATT_ENTRY is %PS_RECORD or _CURRENT:
      576     4877                    Set or test .RANGE.START and .ENDD for the specified block.
      577     4878                    Note that %PS_RECORD is a non-empty block:  it starts at the end
      578     4879                    of one record and ends at the start of the next record.
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:17   
      579     4880                    Note also the interaction of %PS_RECORD and
      580     4881                    TOS$EVAL.CTRL_REC_MATCHED_EOF (see star 22441 case 1): to
      581     4882                    prevent a command such as CO ST 'ABC' OV REPE SE '%R' from forever
      582     4883                    finding a record break at EOF, we use the .CTRL_REC_MATCHED_EOF
      583     4884                    flag to allow %PS_RECORD match at EOF just once, then fail at EOF
      584     4885                    from then on.
      585     4886        *??**??*    Should we use this technique for BOF, too????? *??**??*
      586     4887
      587     4888                Guarantee .RANGE is within LIMITS; if not, the match fails.
      588     4889                If the match succeeds, set FOUND to %TRUE.
      589     4890        */
      590     4891
      591     4892    1   FIND_SYMBOL: PROC (PATT_ENTRY, TOS_EVAL_PATT, FOUND) ALTRET;
      592     4893
      593     4894        %VD$PATT_ENTRY (NAME=PATT_ENTRY, STCLASS=PARAM);
      594     4909        %VD$EVAL_PATTERN (NAME=TOS_EVAL_PATT, STCLASS=PARAM);
      595     5016    2   DCL FOUND BIT(1) ALIGNED;
      596     5017
      597     5018
      598     5019    2   DCL POSITIONS_TO_MOVE SBIN;
      599     5020    2   DCL SKIPPED_BYTES SBIN;
      600     5021    2   DCL SEARCH_KEY$ PTR;
      601     5022    2   DCL STREAM_KEY$ PTR;
      602     5023    2   DCL SEARCH_RECORD$ PTR;
      603     5024    2   DCL WILD_LOC$ PTR;
      604     5025
      605     5026
      606     5027        %VD$TEXTC (NAME=SEARCH$KEY, STCLASS="BASED(SEARCH_KEY$)");
      607     5050        %VD$TEXTC (NAME=STREAM$KEY, STCLASS="BASED(STREAM_KEY$)");
      608     5073        %VD$BUFFER (NAME=SEARCH$RECORD, STCLASS="BASED(SEARCH_RECORD$)");
      609     5131        %VD$LOCATION (NAME=WILD$LOC, STCLASS = "BASED(WILD_LOC$)");
      610     5159
      611     5160
      612     5161
      613     5162    2           FOUND = %FALSE;
      614     5163
      615     5164    2   PATT_ENTRY_CODE_CASES:
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:18   
      616     5165    3           DO CASE (PATT_ENTRY.CODE#);
      617     5166
      618     5167    3            CASE (%PS_LITERAL);
      619     5168    3              STRING_LENGTH =
      620     5169    3                PATT_ENTRY.MATCH$ -> VD$TEXTC_REMOTE.LENGTH# - PART_MATCH;
      621     5170    4              IF VD_$CASE.V# = 0 THEN DO;
      622     5171    4                 CALL XLATE (LITERAL.BYTES, B$XL_UPPER,
      623     5172    4                   SUBSTR (PATT_ENTRY.MATCH$ -> VD$TEXTC_REMOTE.BYTES,
      624     5173    4                   PART_MATCH, STRING_LENGTH));
      625     5174    4                 END;
      626     5175    3              ELSE LITERAL.BYTES =
      627     5176    3                   SUBSTR (PATT_ENTRY.MATCH$ -> VD$TEXTC_REMOTE.BYTES,
      628     5177    3                   PART_MATCH, STRING_LENGTH);
      629     5178    3              CALL FIND_STRING ALTRET (FIND_STRING_FAILED);
      630     5179
      631     5180
      632     5181    3            CASE (%PS_VALUE);
      633     5182    3              SEARCH_TABLE = %CLEAR;
      634     5183    3              RCCL = MINIMUM (PATT_ENTRY.M#, 511);
      635     5184    3              IF RCCL > PATT_ENTRY.N# THEN RETURN;
      636     5185    3              SUBSTR (SEARCH_TABLE.FLAGS, RCCL,
      637     5186    3                MINIMUM (PATT_ENTRY.N#, 511) - RCCL + 1) = ' '; /* Anything ~=0 */
      638     5187    3              STRING_LENGTH = 1;
      639     5188    3              CALL FIND_STRING ALTRET (FIND_STRING_FAILED);
      640     5189
      641     5190
      642     5191    3            CASE (%PS_WILD_STRING);
      643     5192    3              CALL VDG$OCOPY_LOCATION (TOS_EVAL_PATT.RANGE.START,
      644     5193    3                TOS_EVAL_PATT.RANGE.ENDD)
      645     5194    3                ALTRET (OCOPY_LOCATION_FAILED);
      646     5195    4              IF PATT_ENTRY.M# > 0 THEN DO;
      647     5196    4                 POSITIONS_TO_MOVE = PATT_ENTRY.M#;
      648     5197    4                 IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN
      649     5198    4                    WILD_LOC$ = ADDR(TOS_EVAL_PATT.RANGE.ENDD);
      650     5199    4                 ELSE
      651     5200    4                    WILD_LOC$ = ADDR(TOS_EVAL_PATT.RANGE.START);
      652     5201    4                 CALL VDE$IMOVE_BY_POSITIONS (STREAM, WILD$LOC,
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:19   
      653     5202    4                   TOS$EVAL.ENCLOSING, TOS_EVAL_PATT.REMAINING_RECS#,
      654     5203    4                   TOS_EVAL_PATT.DIRECTION#, POSITIONS_TO_MOVE, FOUND)
      655     5204    4                   ALTRET (IMOVE_BY_POSITIONS_FAILED);
      656     5205    4                 IF FOUND = %FALSE THEN
      657     5206    4                    RETURN;
      658     5207    4                 END;
      659     5208    3              FOUND = %TRUE;
      660     5209
      661     5210
      662     5211    3            CASE (%PS_RECORD);
      663     5212                   /*
      664     5213                   *  Here, we want to:
      665     5214                   *    o Set TOS_EVAL_PATT.RANGE.START to the length of the
      666     5215                   *        current/previous record (forward/backward).
      667     5216                   *    o Decrement .REMAINING_BYTES# by the number of bytes skipped
      668     5217                   *        in order to get from .RANGE.START's initial position
      669     5218                   *        to the end/beginning of the current record (FO/BA).
      670     5219                   *    o Set .RANGE.ENDD to the first position of the next
      671     5220                   *        existing/current record (foward/backward).
      672     5221                   */
      673     5222    3              SKIPPED_BYTES = 0;
      674     5223    4              IF TOS_EVAL_PATT.RANGE.START.EOF THEN DO;
      675     5224    4                 TOS_EVAL_PATT.RANGE.ENDD.EOF = %TRUE;
      676     5225    4                 END;
      677     5226    4              ELSE DO;
      678     5227    4                 CALL VDA$LREAD (STREAM, TOS_EVAL_PATT.RANGE.START, 0, %TRUE)
      679     5228    4                   ALTRET (LREAD_FAILED);
      680     5229
      681     5230    4                 IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN
      682     5231    5   MOVE_FORWARD_TO_EOR: DO;
      683     5232                         /* See if the .RANGE.START record exists */
      684     5233    6                    IF NOT STREAM.CURRENT.EOF THEN DO;
      685     5234                            %GETKEY (KEY=TOS_EVAL_PATT.RANGE.START.KEY, INDX=LEVEL-1,
      686     5235                            PTR=SEARCH_KEY$);
      687     5245                            %GETKEY (KEY=STREAM.CURRENT.KEY, INDX=LEVEL-1,
      688     5246                            PTR=STREAM_KEY$);
      689     5256    7                       IF SEARCH$KEY.BYTES = STREAM$KEY.BYTES THEN DO;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:20   
      690     5257                               /* .RANGE.START record exists */
      691     5258    7                          SEARCH_RECORD$ = STREAM.PORT$ ->
      692     5259    7                            VD$PORT.LEVEL.DATA$ (LEVEL);
      693     5260    7                          SKIPPED_BYTES = MAXIMUM (0, SEARCH$RECORD.LENGTH# -
      694     5261    7                            TOS_EVAL_PATT.RANGE.START.POSITION#);
      695     5262    7                          TOS_EVAL_PATT.RANGE.START.POSITION# =
      696     5263    7                            SEARCH$RECORD.LENGTH#;
      697     5264    7                          CALL VDA$LREAD (STREAM, , 1, %TRUE)
      698     5265    7                            ALTRET (LREAD_FAILED);
      699     5266    7                          END;
      700     5267    7                       ELSE DO;
      701     5268    7                          CALL VDG$OCLEAR_LOCATION (TOS_EVAL_PATT.RANGE.START);
      702     5269    7                          CALL VDG$OCOPY_LOCATION (STREAM.CURRENT,
      703     5270    7                            TOS_EVAL_PATT.RANGE.START);
      704     5271    7                          GOTO MOVE_FORWARD_TO_EOR;
      705     5272    7                          END;
      706     5273    6                       END;
      707     5274    5                    CALL VDG$OCOPY_LOCATION (STREAM.CURRENT,
      708     5275    5                      TOS_EVAL_PATT.RANGE.ENDD)
      709     5276    5                      ALTRET (OCOPY_LOCATION_FAILED);
      710     5277    5                    END MOVE_FORWARD_TO_EOR;
      711     5278    4                 ELSE
      712     5279    5   MOVE_BACKWARD_TO_EOR: DO;
      713     5280    5                    SKIPPED_BYTES = TOS_EVAL_PATT.RANGE.START.POSITION#;
      714     5281    5                    TOS_EVAL_PATT.RANGE.ENDD = TOS_EVAL_PATT.RANGE.START;
      715     5282    5                    TOS_EVAL_PATT.RANGE.START = %CLEAR;
      716     5283    5                    TOS_EVAL_PATT.RANGE.ENDD.POSITION# = 0;
      717     5284    5                    CALL VDA$LREAD (STREAM, , -1, %TRUE)
      718     5285    5                      ALTRET (LREAD_FAILED);
      719     5286                         /* Did we hit BOF? */
      720     5287                         %GETKEY (KEY=TOS_EVAL_PATT.RANGE.START.KEY, INDX=LEVEL-1,
      721     5288                         PTR=SEARCH_KEY$);
      722     5298                         %GETKEY (KEY=STREAM.CURRENT.KEY, INDX=LEVEL-1,
      723     5299                         PTR=STREAM_KEY$);
      724     5309    6                    IF SEARCH$KEY.BYTES <= STREAM$KEY.BYTES THEN DO;
      725     5310                            /* Hit BOF:  both .START and .ENDD get .START position 0 */
      726     5311    6                       CALL VDG$OCOPY_LOCATION (TOS_EVAL_PATT.RANGE.ENDD,
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:21   
      727     5312    6                         TOS_EVAL_PATT.RANGE.START)
      728     5313    6                         ALTRET (OCOPY_LOCATION_FAILED);
      729     5314    6                       END;
      730     5315    6                    ELSE DO;
      731     5316    6                       CALL VDG$OCOPY_LOCATION (STREAM.CURRENT,
      732     5317    6                         TOS_EVAL_PATT.RANGE.START)
      733     5318    6                         ALTRET (OCOPY_LOCATION_FAILED);
      734     5319    6                       SEARCH_RECORD$ = STREAM.PORT$ ->
      735     5320    6                         VD$PORT.LEVEL.DATA$ (LEVEL);
      736     5321    6                       TOS_EVAL_PATT.RANGE.START.POSITION# =
      737     5322    6                         SEARCH$RECORD.LENGTH#;
      738     5323    6                       END;
      739     5324    5                    END MOVE_BACKWARD_TO_EOR;
      740     5325    4                 END;
      741     5326
      742     5327    3              IF SKIPPED_BYTES <= TOS_EVAL_PATT.REMAINING_BYTES#
      743     5328    3                AND NOT (TOS$EVAL.CTRL_REC_MATCHED_EOF
      744     5329    4                AND TOS_EVAL_PATT.RANGE.ENDD.EOF) THEN DO;
      745     5330    4                 FOUND = %TRUE;
      746     5331    4                 TOS_EVAL_PATT.REMAINING_BYTES# =
      747     5332    4                   TOS_EVAL_PATT.REMAINING_BYTES# - SKIPPED_BYTES;
      748     5333    4                 END;
      749     5334    3              IF SKIPPED_BYTES <= TOS_EVAL_PATT.REMAINING_BYTES# THEN
      750     5335    3                 TOS$EVAL.CTRL_REC_MATCHED_EOF = TOS_EVAL_PATT.RANGE.ENDD.EOF;
      751     5336
      752     5337
      753     5338        /*N*
      754     5339        *N*      CASE (%PS_CURRENT);
      755     5340        *N*        IF TOS_EVAL_PATT.REMAINING_BYTES# = 0 THEN DO;
      756     5341        *N*           \* S_LOC must be BOF (real or virtual) *\
      757     5342        *N*            IF NOT SEARCH_LOC.BOF# THEN
      758     5343        *N*               Set SEARCH_LOC to existing key near its initial value.
      759     5344        *N*                 IF SEARCH_LOC.BOF# THEN DO;
      760     5345        *N*               E_LOC = S_LOC;
      761     5346        *N*               FOUND = %TRUE;
      762     5347        *N*               END;
      763     5348        *N*            END;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:22   
      764     5349        *N*         ELSE DO;
      765     5350        *N*           \*
      766     5351        *N*           * Here we should count the # of recs and bytes between
      767     5352        *N*           *     TOS_EVAL_PATT.RANGE.START and BOF, to guarantee it's within
      768     5353        *N*           *     TOS_EVAL_PATT.REMAINING_RECS# records and .REMAINING_BYTES#
      769     5354        *N*           *     bytes; also we should decrement both counts.
      770     5355        *N*           *\
      771     5356        *N*            SEARCH_LOC = %CLEAR;
      772     5357        *N*            SEARCH_LOC.BOF# = %TRUE;
      773     5358        *N*            E_LOC = SEARCH_LOC;
      774     5359        *N*            FOUND = %TRUE;
      775     5360        *N*            END;
      776     5361        *N*
      777     5362        *N*       CASE (%PS_EOF);
      778     5363        *N*         IF TOS_EVAL_PATT.REMAINING_BYTES# = 0 THEN DO;
      779     5364        *N*            \* S_LOC must be EOF (real or virutal) *\
      780     5365        *N*              IF NOT SEARCH_LOC.EOF THEN
      781     5366        *N*               Set SEARCH_LOC to existing key near its initial value.
      782     5367        *N*                 IF SEARCH_LOC.EOF THEN DO;
      783     5368        *N*               E_LOC = S_LOC;
      784     5369        *N*               FOUND = %TRUE;
      785     5370        *N*               END;
      786     5371        *N*            END;
      787     5372        *N*         ELSE DO;
      788     5373        *N*           \*
      789     5374        *N*           * Here we should count the # of recs and bytes between
      790     5375        *N*           *     SEARCH_LOC and EOF, to guarantee it's within
      791     5376        *N*           *     TOS_EVAL_PATT.REMAINING_RECS# records and .REMAINING_BYTES
      792     5377        *N*           *     bytes; also we should decrement both counts.
      793     5378        *N*           *\
      794     5379        *N*            SEARCH_LOC = %CLEAR;
      795     5380        *N*            SEARCH_LOC.EOF = %TRUE;
      796     5381        *N*            E_LOC = SEARCH_LOC;
      797     5382        *N*            FOUND = %TRUE;
      798     5383        *N*            END;
      799     5384        *N*/
      800     5385
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:23   
      801     5386
      802     5387    3            CASE (%PS_BO_MATCH);
      803     5388    3              IF EVAL_PATT_FOR_EO_MATCH$ ~= ADDR(NIL) THEN
      804     5389    3                 CALL VDG$ESCREECH;
      805     5390    3              CALL VDG$OCOPY_LOCATION (TOS_EVAL_PATT.RANGE.START,
      806     5391    3                TOS_EVAL_PATT.RANGE.ENDD)
      807     5392    3                ALTRET (OCOPY_LOCATION_FAILED);
      808     5393    3              FOUND = %TRUE;
      809     5394    3              EVAL_PATT_FOR_BO_MATCH$ = ADDR(TOS_EVAL_PATT);
      810     5395
      811     5396
      812     5397    3            CASE (%PS_EO_MATCH);
      813     5398    3              CALL VDG$OCOPY_LOCATION (TOS_EVAL_PATT.RANGE.START,
      814     5399    3                TOS_EVAL_PATT.RANGE.ENDD)
      815     5400    3                ALTRET (OCOPY_LOCATION_FAILED);
      816     5401    3              FOUND = %TRUE;
      817     5402    3              EVAL_PATT_FOR_EO_MATCH$ = ADDR(TOS_EVAL_PATT);
      818     5403
      819     5404    3            CASE (ELSE);
      820     5405    3              CALL VDG$ESCREECH (PATT_ENTRY.CODE#);
      821     5406
      822     5407    3            END PATT_ENTRY_CODE_CASES;
      823     5408
      824     5409    3           IF FOUND THEN DO;
      825     5410    3              CALL VDG$COMPARE_LOC_W_PTRS (TOS_EVAL_PATT.RANGE.START,
      826     5411    3                ENCLOSING_START_PTRS, ENCLOSING_END_PTRS)
      827     5412    3                ALTRET (NOT_WITHIN_RANGE);
      828     5413    3              CALL VDG$COMPARE_LOC_W_PTRS (TOS_EVAL_PATT.RANGE.ENDD,
      829     5414    3                ENCLOSING_START_PTRS, ENCLOSING_END_PTRS)
      830     5415    4              WHENALTRETURN DO;
      831     5416    4   NOT_WITHIN_RANGE:;
      832     5417    4                 FOUND = %FALSE;
      833     5418    4                 END;
      834     5419    3              END;
      835     5420
      836     5421    2           RETURN;
      837     5422
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:24   
      838     5423
      839     5424    2   LREAD_FAILED: ;
      840     5425    2   FIND_STRING_FAILED: ;
      841     5426    2   IMOVE_BY_POSITIONS_FAILED: ;
      842     5427    2   OCOPY_LOCATION_FAILED: ;
      843     5428    2           ALTRETURN;
      844     5429
      845     5430
      846     5431                %BOX (TITLE=FIND_STRING, PAGE=YES);
              5439    2
              5443    2   /***************************************************************************
              5445    2    *                                                                         *
              5449    2            *                                FIND_STRING                              *
              5451    2            *                                                                         *
              5453    2           ***************************************************************************/

      847     5457
      848     5458        /*I* NAME: FIND_STRING
      849     5459            PARAMETERS:
      850     5460                NONE - uses the FIND_SYMBOL parameters.
      851     5461            INPUT:
      852     5462                STREAM - The stream to use.
      853     5463                ENCLOSING_START_PTRS, ENCLOSING_END_PTRS - VD$LOCATION_PTRS
      854     5464                    containing the bounds of the enclosing block for the
      855     5465                    search.
      856     5466                LEVEL - Level of file structure to search.
      857     5467                VD_$CASE - Current value of $CASE predefined variable.  Value ~= 0
      858     5468                    means that "alphabetic case matters":  do exact comparisons to
      859     5469                    file data; value = 0 means case doesn't matter:  do
      860     5470                    case-insensitive searches.
      861     5471            OUTPUT:
      862     5472                FOUND will contain %TRUE if we found a match, %FALSE otherwise.
      863     5473                If a match was found:
      864     5474                    TOS_EVAL_PATT.RANGE.START will point to the start of the matching
      865     5475                        data in the file.
      866     5476                    .RANGE.ENDD will point to the end of the matching data.
      867     5477                    .REMAINING_RECS# will be decremented if any additional records
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:25   
      868     5478                        were read to find the complete match; it will not
      869     5479                        be decremented beyond 0.
      870     5480                    .REMAINING_BYTES# will be decremented by the number of bytes
      871     5481                        actually skipped, plus the length of the literal that
      872     5482                        was matched.  This new value is then valid if we
      873     5483                        backtrack to this VD$EVAL_PATTERN to find another
      874     5484                        match for this literal.
      875     5485                If a match was not found, the above three fields will not
      876     5486                    contain any useful information.
      877     5487            DESCRIPTION:
      878     5488                Read a record.  The first "record" is the remainder of the
      879     5489                    TOS_EVAL_PATT.RANGE.START record, from .POSITION# thru to the
      880     5490                    start or end (backward or forward search) of the record.
      881     5491                    If .RANGE.START starts out pointing to a non-existent location,
      882     5492                    then force it forward to the next existing location, or EOF.
      883     5493                Guarantee the .RANGE.START location is within the ENCLOSING boundary
      884     5494                    in the direction we're searching; if not, the match fails.
      885     5495                Call INDEX to see if the literal is entirely contained
      886     5496                    within the record; also make sure it starts within the
      887     5497                    range of the remainder of .REMAINING_BYTES#; if so, set
      888     5498                    .RANGE.START and .ENDD appropriately and return FOUND = %TRUE.
      889     5499                If INDEX couldn't find the literal, we still have to
      890     5500                    see if literal matches data that crosses a record
      891     5501                    boundary.  For each match of the first byte
      892     5502                    of the literal which appears in that portion of the
      893     5503                    record from <start or end of record> +/- LENGTHC(literal)
      894     5504                    thru <start or end of record>, call
      895     5505                    MATCH_LITERAL_ACROSS_RECORDS to see if we find a
      896     5506                    match.
      897     5507                If we find no matches starting in this record and crossing
      898     5508                    its start or end, then check our .REMAINING_RECS# and
      899     5509                    .REMAINING_BYTES# counts:  if neither is zero, decrement the
      900     5510                    remaining .REMAINING_BYTES# count by the length of the record
      901     5511                    just scanned, and decrement the .REMAINING_RECS# count
      902     5512                    by one.  Go to the top of the search loop to try the
      903     5513                    next sequential record.
      904     5514        */
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:26   
      905     5515
      906     5516    2   FIND_STRING: PROC ALTRET;
      907     5517
      908     5518    3   DCL PORT$ PTR;
      909     5519    3   DCL SEARCH_LOCATION$ PTR;
      910     5520    3   DCL SEARCH_RELATIVE SBIN;
      911     5521        %VD$KEY (NAME=FIRST_SEARCH_KEY, STCLASS=AUTO);
      912     5535    3   DCL FIRST_SEARCH_KEY$ PTR;
      913     5536        %VD$KEY (NAME=ORIGINAL_KEY, STCLASS=AUTO);
      914     5550        %VD$NODE_DESC (NAME=SEARCH_NODE, STCLASS=AUTO);
      915     5592    3   DCL N_WDS UBIN;
      916     5593    3   DCL BOUND_PTRS$ PTR;
      917     5594    3   DCL S_POS SBIN;
      918     5595    3   DCL MATCH_POS SBIN;
      919     5596    3   DCL ORIG_REC_LEN SBIN;
      920     5597    3   DCL VIRTUAL_BOR SBIN;
      921     5598
      922     5599
      923     5600        %VD$LOCATION (NAME=SEARCH$LOCATION, STCLASS="BASED(SEARCH_LOCATION$)");
      924     5628        %VD$TEXTC (NAME=FIRST$SEARCH_KEY, STCLASS="BASED(FIRST_SEARCH_KEY$)");
      925     5651        %VD$BUFFER (NAME=SEARCH$DATA, STCLASS="BASED(SEARCH_NODE.DATA$)");
      926     5709        %VD$LOCATION_PTRS (NAME=BOUND$PTRS, STCLASS="BASED(BOUND_PTRS$)");
      927     5724        %VD$PORT (NAME=PORT, STCLASS="BASED(PORT$)");
      928     5822        %VD$BUFFER;
      929     5880
      930     5881
      931     5882
      932     5883                /*
      933     5884                *   In the following loop, TOS_EVAL_PATT.RANGE.START specifies our
      934     5885                *       current location, and SEARCH_NODE contains the
      935     5886                *       TOS_EVAL_PATT.RANGE.START record.
      936     5887                */
      937     5888
      938     5889    3           PORT$ = STREAM.PORT$;
      939     5890    3           SEARCH_LOCATION$ = ADDR(TOS_EVAL_PATT.RANGE.START);
      940     5891    3           SEARCH_RELATIVE = 0;
      941     5892                %COPYKEY (FKEY=TOS_EVAL_PATT.RANGE.START.KEY, FINDX=LEVEL-1,
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:27   
      942     5893                TKEY=FIRST_SEARCH_KEY);
      943     5909    3           SEARCH_NODE = %CLEAR;
      944     5910    3           SEARCH_NODE.DATA$ = ADDR(NIL);
      945     5911    3           ORIGINAL_KEY = %CLEAR;
      946     5912
      947     5913    3   EACH_RECORD:
      948     5914    4           DO %FOREVER;    /* Match or exceeding a limit will exit loop */
      949     5915                   /*
      950     5916                   *  At top of each iteration of loop:
      951     5917                   *    SEARCH_LOCATION$ either points to the search-start location
      952     5918                   *        (first time only), or is NIL to read relative (all other
      953     5919                   *        iterations).  The first time, SEARCH$LOCATION.POSITION#:
      954     5920                   *        If we're moving forward, .POSITION# says where to start
      955     5921                   *          searching in the record.  This may be > 0, telling us to
      956     5922                   *          search just the end portion of the first record.
      957     5923                   *        If we're moving backward, .POSITION# says where to start
      958     5924                   *          searching in the record (the virtual end of the record).
      959     5925                   *          This is usually > 0, telling us to search just the
      960     5926                   *          beginning portion of the first record.  Note
      961     5927                   *          that we're looking for a match up to but not including
      962     5928                   *          the .POSITION# position (since that position is off the
      963     5929                   *          end of the "record").
      964     5930                   *    SEARCH_RELATIVE is either 0 to read the SEARCH$LOCATION record,
      965     5931                   *        or 1 or -1 to read forward or backward sequentially.
      966     5932                   *    SEARCH_NODE is %CLEAR.
      967     5933                   */
      968     5934
      969     5935    5              IF SEARCH_RELATIVE < 0 THEN DO;
      970     5936                      /* Save a copy of original position for BO-enclosing check */
      971     5937                      %COPYKEY (FKEY=STREAM.CURRENT.KEY, FINDX=LEVEL-1,
      972     5938                      TKEY=ORIGINAL_KEY);
      973     5954    5                 END;
      974     5955    4              CALL VDE$RREAD (STREAM, TOS$EVAL.ENCLOSING, SEARCH$LOCATION,
      975     5956    4                SEARCH_RELATIVE)
      976     5957    4                ALTRET (RREAD_FAILED);
      977     5958    5              IF SEARCH_RELATIVE < 0 THEN DO;
      978     5959                      /* Searching backward, we have to check for BO enclosing */
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:28   
      979     5960                      %GETKEY (KEY=ORIGINAL_KEY, PTR=SEARCH_KEY$);
      980     5970                      %GETKEY (KEY=STREAM.CURRENT.KEY, INDX=LEVEL-1, PTR=STREAM_KEY$);
      981     5980    5                 IF STREAM.CURRENT.EOF
      982     5981    5                   OR STREAM$KEY.BYTES >= SEARCH$KEY.BYTES THEN
      983     5982    5                    EXIT EACH_RECORD;  /* Hit BO enclosing:  match failed */
      984     5983    5                 END;
      985     5984                   /* Don't let VDE$RGET do left-truncating - we want proper positions
      986     5985                      in the data buffer, and do our own bounds checking. */
      987     5986    4              TOS$EVAL.ENCLOSING.START.POSITION# = 0;
      988     5987    4              CALL VDE$RGET (STREAM, TOS$EVAL.ENCLOSING, SEARCH_NODE)
      989     5988    4                ALTRET (RGET_FAILED);
      990     5989    4              TOS$EVAL.ENCLOSING.START.POSITION# = ENCLOSING_START_PTRS.POSITION#;
      991     5990    5              IF SEARCH_NODE.KEY = %CLEAR THEN DO;
      992     5991                      /* Hit end of enclosing block */
      993     5992    5                 IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN
      994     5993    5                    EXIT EACH_RECORD;      /* Match failed */
      995     5994    5                 TOS_EVAL_PATT.RANGE.START.EOF = %FALSE;
      996     5995    5                 GOTO ON_TO_NEXT_RECORD;    /* Move backwards from EOB */
      997     5996    5                 END;
      998     5997                   %CLEARKEY (KEY=TOS_EVAL_PATT.RANGE.START.KEY, INDX=LEVEL-1);
      999     6007    4              TOS_EVAL_PATT.RANGE.START.KEY (LEVEL-1) = SEARCH_NODE.KEY;
     1000     6008    4              SEARCH_NODE.KEY = %CLEAR;
     1001     6009    5              IF VD_$CASE.V# = 0 AND PATT_ENTRY.CODE# = %PS_LITERAL THEN DO;
     1002     6010    5                 CALL XLATE (SEARCH$DATA.BYTES, B$XL_UPPER, SEARCH$DATA.BYTES);
     1003     6011    5                 END;
     1004     6012
     1005     6013                   /*
     1006     6014                   *   Set starting .POSITION# for searching this record.
     1007     6015                   */
     1008     6016    5              IF FIRST_SEARCH_KEY ~= %CLEAR THEN DO;
     1009     6017                      %GETKEY (KEY=TOS_EVAL_PATT.RANGE.START.KEY, INDX=LEVEL-1,
     1010     6018                      PTR=SEARCH_KEY$);
     1011     6028                      %GETKEY (KEY=FIRST_SEARCH_KEY, PTR=FIRST_SEARCH_KEY$);
     1012     6038    6                 IF SEARCH$KEY.BYTES = FIRST$SEARCH_KEY.BYTES THEN DO;
     1013     6039                         /* Use only part of first record */
     1014     6040    7                    IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN DO;
     1015     6041    7                       IF TOS_EVAL_PATT.RANGE.START.POSITION# >=
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:29   
     1016     6042    7                         SEARCH$DATA.LENGTH# THEN
     1017     6043    7                          GOTO ON_TO_NEXT_RECORD;  /* Move to existing loc */
     1018     6044    7                       END;
     1019     6045    7                    ELSE DO;
     1020     6046    7                       SEARCH$DATA.LENGTH# = MINIMUM (SEARCH$DATA.LENGTH#,
     1021     6047    7                         TOS_EVAL_PATT.RANGE.START.POSITION#);
     1022     6048    7                       TOS_EVAL_PATT.RANGE.START.POSITION# = SEARCH$DATA.LENGTH#;
     1023     6049    7                       END;
     1024     6050    6                    END;
     1025     6051    6                 ELSE DO;
     1026     6052                         /*
     1027     6053                         *  FIRST_SEARCH_KEY record doesn't exist - the record we got
     1028     6054                         *     is the record following the FIRST_SEARCH_KEY record.
     1029     6055                         *  If we're moving forward, use all of this record;
     1030     6056                         *  If we're moving backward, skip this record.
     1031     6057                         */
     1032     6058    6                    IF TOS_EVAL_PATT.DIRECTION# = %DIR_BACKWARD THEN
     1033     6059    6                       GOTO ON_TO_NEXT_RECORD;
     1034     6060    6                    TOS_EVAL_PATT.RANGE.START.POSITION# = 0;
     1035     6061    6                    END;
     1036     6062    5                 END;
     1037     6063    5              ELSE DO;
     1038     6064                      /* Not first time thru loop:  use entire record */
     1039     6065    5                 IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN
     1040     6066    5                    TOS_EVAL_PATT.RANGE.START.POSITION# = 0;
     1041     6067    5                 ELSE
     1042     6068    5                    TOS_EVAL_PATT.RANGE.START.POSITION# = SEARCH$DATA.LENGTH#;
     1043     6069    5                 END;
     1044     6070
     1045     6071
     1046     6072                   /*
     1047     6073                   *   Is this record beyond an ENCLOSING boundary?
     1048     6074                   */
     1049     6075    4              IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN
     1050     6076    4                 BOUND_PTRS$ = ADDR(ENCLOSING_END_PTRS);
     1051     6077    5              ELSE DO;
     1052     6078    5                 BOUND_PTRS$ = ADDR(ENCLOSING_START_PTRS);
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:30   
     1053     6079    5                 VIRTUAL_BOR = 0;  /* Assumption */
     1054     6080    5                 END;
     1055     6081                   %GETKEY (KEY=TOS_EVAL_PATT.RANGE.START.KEY, INDX=LEVEL-1,
     1056     6082                   PTR=SEARCH_KEY$);
     1057     6092    4              IF BOUND$PTRS.EOF THEN
     1058     6093    4                 RCCL = %RCCL_LESS;    /* Any search key is < EOF */
     1059     6094    4              ELSE IF SEARCH$KEY.BYTES = BOUND$PTRS.KEY$ (LEVEL-1) ->
     1060     6095    5                   VD$TEXTC.BYTES THEN DO;
     1061     6096    5                    IF LEVEL < BOUND$PTRS.COUNT# THEN
     1062     6097    5                       RCCL = %RCCL_EQUAL; /* Searching at < record-level */
     1063     6098    6                    ELSE DO;
     1064     6099                            /*
     1065     6100                            *  Searching at record level, and this record is on
     1066     6101                            *   boundary:
     1067     6102                            *       o VDE$RGET has already right-truncated this record
     1068     6103                            *           so only in-bounds portion will be searched.
     1069     6104                            *       o Compare positions, to see if we're actually
     1070     6105                            *           beyond the boundary.
     1071     6106                            */
     1072     6107    6                       IF TOS_EVAL_PATT.DIRECTION# ~= %DIR_FORWARD THEN
     1073     6108    6                          VIRTUAL_BOR = BOUND$PTRS.POSITION#;
     1074     6109    6                       IF TOS_EVAL_PATT.RANGE.START.POSITION# <
     1075     6110    6                         BOUND$PTRS.POSITION# THEN
     1076     6111    6                          RCCL = %RCCL_LESS;
     1077     6112    6                       ELSE IF TOS_EVAL_PATT.RANGE.START.POSITION# >
     1078     6113    6                            BOUND$PTRS.POSITION# THEN
     1079     6114    6                             RCCL = %RCCL_GREATER;
     1080     6115    6                          ELSE
     1081     6116    6                             RCCL = %RCCL_EQUAL;
     1082     6117    6                       END;
     1083     6118    5                    END;
     1084     6119    4                 ELSE IF SEARCH$KEY.BYTES > BOUND$PTRS.KEY$ (LEVEL-1) ->
     1085     6120    4                      VD$TEXTC.BYTES THEN
     1086     6121    4                       RCCL = %RCCL_GREATER;
     1087     6122    4                    ELSE
     1088     6123    4                       RCCL = %RCCL_LESS;
     1089     6124
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:31   
     1090     6125                   /*
     1091     6126                   *   Search the record for the literal.
     1092     6127                   */
     1093     6128
     1094     6129    4              IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN
     1095     6130    5   FORWARD_SEARCH: DO;
     1096     6131    5                 IF RCCL >= %RCCL_EQUAL THEN
     1097     6132    5                    EXIT EACH_RECORD;     /* Hit end of enclosing: match failed */
     1098     6133    5                 IF SEARCH$DATA.LENGTH# = 0 THEN
     1099     6134    5                    EXIT FORWARD_SEARCH;
     1100     6135    5                 IF PATT_ENTRY.CODE# = %PS_VALUE THEN
     1101     6136    5                    CALL SEARCH (MATCH_POS, RCCL, SEARCH_TABLE.FLAGS,
     1102     6137    5                      SEARCH$DATA.BYTES, TOS_EVAL_PATT.RANGE.START.POSITION#)
     1103     6138    5                      ALTRET (ON_TO_NEXT_RECORD);
     1104     6139    6                 ELSE DO;
     1105     6140    6                    CALL INDEX (MATCH_POS, LITERAL.BYTES,
     1106     6141    6                      SEARCH$DATA.BYTES, TOS_EVAL_PATT.RANGE.START.POSITION#)
     1107     6142    7                    WHENRETURN DO;
     1108     6143    7                       PART_MATCH = 0; /* Found a complete match */
     1109     6144    7                       GOTO FOUND_MATCH;
     1110     6145    7                       END;
     1111     6146    6                    IF VD_$MATCH_LIMIT.V# <= 1 OR STRING_LENGTH <= 1
     1112     6147    6                      OR TOS_EVAL_PATT.REMAINING_RECS# = 0 THEN
     1113     6148    6                       EXIT FORWARD_SEARCH;
     1114     6149    6                    MATCH_POS = MAXIMUM (TOS_EVAL_PATT.RANGE.START.POSITION#,
     1115     6150    6                      SEARCH$DATA.LENGTH# - STRING_LENGTH);
     1116     6151    7                    DO %FOREVER;
     1117     6152    7                       CALL INDEX (MATCH_POS, SUBSTR(LITERAL.BYTES,0,1),
     1118     6153    7                         SEARCH$DATA.BYTES, MATCH_POS);
     1119     6154    7                       IF MATCH_POS >= SEARCH$DATA.LENGTH#
     1120     6155    7                         AND PART_MATCH = 0 THEN
     1121     6156                            /* Only match "nothing" if we've matched some so far. */
     1122     6157    7                          EXIT FORWARD_SEARCH;
     1123     6158    7                       IF SUBSTR (SEARCH$DATA.BYTES, MATCH_POS) =
     1124     6159    7                         SUBSTR (LITERAL.BYTES, 0,
     1125     6160    7                         SEARCH$DATA.LENGTH# - MATCH_POS) THEN EXIT;
     1126     6161    7                       MATCH_POS = MATCH_POS + 1;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:32   
     1127     6162    7                       END;
     1128     6163                         /*
     1129     6164                         * Found a partial match at the end of this record
     1130     6165                         * Set STRING_LENGTH to its length, and bump PART_MATCH
     1131     6166                         */
     1132     6167    6                    S_POS = STRING_LENGTH + PART_MATCH; /* Save original length */
     1133     6168    6                    STRING_LENGTH = SEARCH$DATA.LENGTH# - MATCH_POS;
     1134     6169    6                    PART_MATCH = PART_MATCH + STRING_LENGTH;
     1135     6170                         /*
     1136     6171                         * Match any blanks with the record boundary.
     1137     6172                         */
     1138     6173    7                    DO WHILE SUBSTR(LITERAL.BYTES, STRING_LENGTH, 1) = ' ';
     1139     6174    7                       IF PART_MATCH >= S_POS THEN EXIT;
     1140     6175    7                       PART_MATCH = PART_MATCH + 1;
     1141     6176    7                       LITERAL.BYTES = SUBSTR (LITERAL.BYTES, 1);
     1142     6177    7                       END;
     1143     6178    6                    IF PART_MATCH >= S_POS THEN PART_MATCH = 0; /* Got it all */
     1144     6179
     1145     6180    6                    END;
     1146     6181    5   FOUND_MATCH:  ;
     1147     6182    5                 IF MATCH_POS - TOS_EVAL_PATT.RANGE.START.POSITION# >
     1148     6183    5                   TOS_EVAL_PATT.REMAINING_BYTES# THEN
     1149     6184    5                    EXIT EACH_RECORD;
     1150     6185    5                 TOS_EVAL_PATT.REMAINING_BYTES# = MAXIMUM (0,
     1151     6186    5                   TOS_EVAL_PATT.REMAINING_BYTES# - (MATCH_POS -
     1152     6187    5                   TOS_EVAL_PATT.RANGE.START.POSITION#) -
     1153     6188    5                   STRING_LENGTH);
     1154     6189    5                 TOS_EVAL_PATT.RANGE.START.POSITION# = MATCH_POS;
     1155     6190    5                 CALL VDG$OCOPY_LOCATION (TOS_EVAL_PATT.RANGE.START,
     1156     6191    5                   TOS_EVAL_PATT.RANGE.ENDD)
     1157     6192    5                   ALTRET (OCOPY_LOCATION_FAILED);
     1158     6193    5                 TOS_EVAL_PATT.RANGE.ENDD.POSITION# =
     1159     6194    5                   TOS_EVAL_PATT.RANGE.ENDD.POSITION# + STRING_LENGTH;
     1160     6195    5                 FOUND = %TRUE;
     1161     6196    5                 EXIT EACH_RECORD;   /* Found match in one record */
     1162     6197    5                 END FORWARD_SEARCH;
     1163     6198
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:33   
     1164     6199    4              ELSE
     1165     6200
     1166     6201    4   BACKWARD_SEARCH:
     1167     6202    5              DO;
     1168     6203    5                 IF RCCL = %RCCL_LESS THEN
     1169     6204    5                    EXIT EACH_RECORD;      /* Match failed */
     1170     6205    5                 IF TOS_EVAL_PATT.RANGE.START.POSITION# - VIRTUAL_BOR >=
     1171     6206    6                   STRING_LENGTH THEN DO;
     1172     6207    6                    S_POS = TOS_EVAL_PATT.RANGE.START.POSITION# - VIRTUAL_BOR;
     1173     6208    6                    IF PATT_ENTRY.CODE# = %PS_VALUE THEN
     1174     6209    6                       CALL SEARCHR (MATCH_POS, RCCL, SEARCH_TABLE.FLAGS,
     1175     6210    6                         SUBSTR (SEARCH$DATA.BYTES, VIRTUAL_BOR, S_POS))
     1176     6211    6                         ALTRET (ON_TO_NEXT_RECORD);
     1177     6212    6                    ELSE IF STRING_LENGTH = 1 THEN
     1178     6213    6                          CALL INDEX1R (MATCH_POS, SUBSTR(LITERAL.BYTES,0,1),
     1179     6214    6                            SUBSTR (SEARCH$DATA.BYTES, VIRTUAL_BOR, S_POS))
     1180     6215    6                            ALTRET (ON_TO_NEXT_RECORD);
     1181     6216    7                       ELSE DO;
     1182     6217    7                          S_POS = S_POS - STRING_LENGTH + 2;
     1183     6218    8                          DO %FOREVER;
     1184     6219    8                             CALL INDEX2R (MATCH_POS, SUBSTR(LITERAL.BYTES,0,2),
     1185     6220    8                               SUBSTR (SEARCH$DATA.BYTES, VIRTUAL_BOR, S_POS))
     1186     6221    8                               ALTRET (ON_TO_NEXT_RECORD);
     1187     6222    8                             MATCH_POS = MATCH_POS - 1;
     1188     6223    8                             IF SUBSTR(SEARCH$DATA.BYTES, VIRTUAL_BOR+MATCH_POS,
     1189     6224    8                               STRING_LENGTH) = LITERAL.BYTES THEN EXIT;
     1190     6225    8                             IF MATCH_POS <= 0 THEN GOTO ON_TO_NEXT_RECORD;
     1191     6226    8                             S_POS = MATCH_POS + 1;
     1192     6227    8                             END;
     1193     6228    7                          END;
     1194     6229    6                    MATCH_POS = MATCH_POS + VIRTUAL_BOR;
     1195     6230    6                    IF TOS_EVAL_PATT.RANGE.START.POSITION# - MATCH_POS <=
     1196     6231    7                      TOS_EVAL_PATT.REMAINING_BYTES# THEN DO;
     1197     6232    7                       TOS_EVAL_PATT.REMAINING_BYTES# =
     1198     6233    7                         TOS_EVAL_PATT.REMAINING_BYTES# -
     1199     6234    7                         (TOS_EVAL_PATT.RANGE.START.POSITION# - MATCH_POS);
     1200     6235    7                       TOS_EVAL_PATT.RANGE.START.POSITION# = MATCH_POS;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:34   
     1201     6236    7                       CALL VDG$OCOPY_LOCATION (TOS_EVAL_PATT.RANGE.START,
     1202     6237    7                         TOS_EVAL_PATT.RANGE.ENDD)
     1203     6238    7                         ALTRET (OCOPY_LOCATION_FAILED);
     1204     6239    7                       TOS_EVAL_PATT.RANGE.ENDD.POSITION# =
     1205     6240    7                         TOS_EVAL_PATT.RANGE.ENDD.POSITION# + STRING_LENGTH;
     1206     6241    7                       FOUND = %TRUE;
     1207     6242    7                       EXIT EACH_RECORD;    /* Found match in 1 record */
     1208     6243    7                       END;
     1209     6244    6                    END;
     1210     6245
     1211     6246                      /********************************************************
     1212     6247                      *   Backward cross-record searches not yet implemented!!!
     1213     6248                      *   Will always fail!!!
     1214     6249                      ********************************************************/
     1215     6250    5                 END BACKWARD_SEARCH;
     1216     6251
     1217     6252                   /*
     1218     6253                   *   Couldn't find a match anywhere in this record.
     1219     6254                   *   Free the record, and set up to go on to the next
     1220     6255                   *       sequential record (either backward or forward).
     1221     6256                   */
     1222     6257
     1223     6258    4   ON_TO_NEXT_RECORD:
     1224     6259                   /* Any records left we can search? */
     1225     6260    4              IF TOS_EVAL_PATT.REMAINING_RECS# <= 0 THEN
     1226     6261    4                 EXIT EACH_RECORD; /* Match failed */
     1227     6262    4              TOS_EVAL_PATT.REMAINING_RECS# = TOS_EVAL_PATT.REMAINING_RECS# - 1;
     1228     6263
     1229     6264                   /* Count bytes left to search, and set direction */
     1230     6265    5              IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN DO;
     1231     6266    5                 ORIG_REC_LEN = MAXIMUM (0,
     1232     6267    5                   SEARCH$DATA.LENGTH# - TOS_EVAL_PATT.RANGE.START.POSITION#);
     1233     6268    5                 IF ORIG_REC_LEN > TOS_EVAL_PATT.REMAINING_BYTES# THEN
     1234     6269    5                    EXIT EACH_RECORD;  /* Match failed */
     1235     6270    5                 TOS_EVAL_PATT.REMAINING_BYTES# =
     1236     6271    5                   TOS_EVAL_PATT.REMAINING_BYTES# - ORIG_REC_LEN;
     1237     6272    5                 SEARCH_RELATIVE = 1;    /* Read next record */
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:35   
     1238     6273    5                 END;
     1239     6274    5              ELSE DO;
     1240     6275    5                 IF TOS_EVAL_PATT.RANGE.START.POSITION# >
     1241     6276    5                   TOS_EVAL_PATT.REMAINING_BYTES# THEN
     1242     6277    5                    EXIT EACH_RECORD;  /* Match failed */
     1243     6278    5                 TOS_EVAL_PATT.REMAINING_BYTES# =
     1244     6279    5                   TOS_EVAL_PATT.REMAINING_BYTES# -
     1245     6280    5                   TOS_EVAL_PATT.RANGE.START.POSITION#;
     1246     6281    5                 SEARCH_RELATIVE = -1;   /* Read previous record */
     1247     6282    5                 END;
     1248     6283
     1249     6284                   /* Flag "not first time thru loop" condition */
     1250     6285    4              SEARCH_LOCATION$ = ADDR(NIL);
     1251     6286                   %CLEARKEY (KEY=FIRST_SEARCH_KEY);
     1252     6296
     1253     6297                   /* Free dynamic objects we no longer need */
     1254     6298    4              CALL VDG$OFREE (SEARCH$DATA)
     1255     6299    4                ALTRET (OFREE_FAILED);
     1256     6300    4              SEARCH_NODE.DATA$ = ADDR(NIL);
     1257     6301                   %CLEARKEY (KEY=SEARCH_NODE.KEY);
     1258     6311                   %CLEARSPEC (SPEC=SEARCH_NODE.SPEC);
     1259     6321                   %CLEARKEY (KEY=ORIGINAL_KEY);
     1260     6331    4              END EACH_RECORD;
     1261     6332
     1262     6333
     1263     6334
     1264     6335                /*
     1265     6336                *   We may have exited the EACH_RECORD loop prematurely:
     1266     6337                *     make sure we don't leave any dynamic objects stranded.
     1267     6338                */
     1268     6339
     1269     6340                %CLEARKEY (KEY=FIRST_SEARCH_KEY);
     1270     6350    3           CALL VDG$OFREE (SEARCH$DATA)
     1271     6351    3             ALTRET (OFREE_FAILED);
     1272     6352    3           SEARCH_NODE.DATA$ = ADDR(NIL);
     1273     6353                %CLEARKEY (KEY=SEARCH_NODE.KEY);
     1274     6363                %CLEARSPEC (SPEC=SEARCH_NODE.SPEC);
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:36   
     1275     6373                %CLEARKEY (KEY=ORIGINAL_KEY);
     1276     6383
     1277     6384    3           RETURN;
     1278     6385
     1279     6386
     1280     6387
     1281     6388    3   RREAD_FAILED: ;
     1282     6389    3   RGET_FAILED: ;
     1283     6390    3   MATCH_LIT_ACROSS_RECS_FAILED: ;
     1284     6391    3   OCOPY_LOCATION_FAILED: ;
     1285     6392    3   OFREE_FAILED: ;
     1286     6393    3           ALTRETURN;
     1287     6394
     1288     6395    3   END FIND_STRING;
     1289     6396
     1290     6397    2   END FIND_SYMBOL;
     1291     6398    1   END VDE$IPATTERN;

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:37   
--  Include file information  --

   B$TABLES_C.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDE$IPATTERN.

   Procedure VDE$IPATTERN requires 1747 words for executable code.
   Procedure VDE$IPATTERN requires 82 words of local(AUTO) storage.

    No errors detected in file VDE$IPATTERN.:VDA5TSI    .

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:38   

 Object Unit name= VDE$IPATTERN                               File name= VDE$IPATTERN.:VDA5TOU
 UTS= JUL 04 '97 11:12:50.04 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none  1747   3323  VDE$IPATTERN
    1  RoData even  none    16     20  VDE$IPATTERN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        4  VDE$IPATTERN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
 yes     yes           Std       3 VDG$OALLOC
 yes     yes           Std       2 VDG$LOCATION_TO_PTRS
 yes     yes           Std       2 VDG$OCOPY_LOCATION
 yes     yes           Std       3 VDG$COMPARE_LOCS
 yes     yes           Std       1 VDG$OFREE
 yes     yes           Std       1 VDG$OCLEAR_LOCATION
 yes     yes           Std       2 VDG$OCOPY
 yes     yes           Std       7 VDE$IMOVE_BY_POSITIONS
 yes     yes           Std       2 VDI$CSET_COUNT
 yes     yes           Std       4 VDI$BINSERT
 yes     yes           Std       4 VDA$LREAD
         yes           Std       3 VDG$ESCREECH
 yes     yes           Std       4 VDG$COMPARE_LOC_W_PTRS
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:39   
 yes     yes           Std       3 VDE$RGET
 yes     yes           Std       4 VDE$RREAD
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
                       nStd      0 X66_INDEX

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 VD_$CASE                              VD_$MATCH_LIMIT
     VD_LOC_$MATCHES                  r    B$XL_UPPER$                           VD_STATIC_TEMP
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:40   


        1        1        /*M* VDE$IPATTERN - Move FilePointer by pattern operands */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P* NAME: VDE$IPATTERN
       12       12            PURPOSE:
       13       13                Move the FilePointer over pattern operands.
       14       14            DESCRIPTION:
       15       15                Given an operand's IT_OPERAND node specifying a pattern,
       16       16                will search for the pattern and return the range of the
       17       17                pattern match and a signal indicating success or failure.
       18       18        */
       19       19
       20       20        /*D* NAME: VDE$IPATTERN
       21       21            PARAMETERS:
       22       22                OPERAND - VD$OPERAND for the operand.  It's:
       23       23                    .STREAM$ must point to the VD$STREAM to use.
       24       24                    .INTREE$ must point to the root VD$IT_BLOCK_EXPR node
       25       25                        of the InTree.  VD$IT_BLOCK_EXPR.OPTIONS must be set
       26       26                        appropriately for the block expression which this
       27       27                        pattern operand is a part of.
       28       28                    .EVAL$ must point to the top VD$EVAL on the evaluation
       29       29                        stack.  This VD$EVAL's .RANGE and .STATE# specify
       30       30                        where to start the search; its .ENCLOSING specifies
       31       31                        the bounds of the search area.
       32       32                IT_OPERAND - A VD$IT_OPERAND node specifying the pattern
       33       33                    movement to make.  Its .CODE# must be %OPAND_PATTERN,
       34       34                    and its .PARAM$ must point to a VD$PATTERN.
       35       35                    If IT$OPERAND.OPTIONS.SKIP# > 0, we'll move one byte from
       36       36                    the initial location before searching.
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:41   
       37       37                MATCHED_RANGE - Uninitialized VD$RANGE.
       38       38                SIGNAL - Uninitialized BIT(1) ALIGNED.
       39       39            INPUT:
       40       40                VD_$CASE - VD$NUMBER containing the value of the $CASE
       41       41                    predefined name.
       42       42                    A non-zero value says to match the alphabetic
       43       43                    case of literals against the file data exactly; a value
       44       44                    of 0 says to ignore the case of both the literal
       45       45                    and the file data when making comparisons.
       46       46                VD_$MATCH_LIMIT - VD$NUMBER containing the value of the
       47       47                    $MATCH_LIMIT predefined name.  This number specifies the
       48       48                    maximum number of records to read (including the initial
       49       49                    record) when trying to match the pattern expression.
       50       50                    This limit is the maximum number of records which can be
       51       51                    occupied by the match of the entire pattern expression.
       52       52            OUTPUT:
       53       53                MATCHED_RANGE will specify the location of the match found; if none
       54       54                    found, will be %CLEAR.
       55       55                SIGNAL will contain %TRUE if we were able to find a pattern match
       56       56                    which lies entirely within the enclosing block.
       57       57                    Otherwise, SIGNAL will contain %FALSE.
       58       58                TOS$EVAL.REMAINING# will be set to 0 if we didn't find a match.
       59       59                    We do this to indicate that we've tried all alternatives
       60       60                    for the pattern, the alternatives being the different
       61       61                    locations in the file.
       62       62            DESCRIPTION:
       63       63                For each entry in the VD$PATTERN:
       64       64                Search for the symbol specified in the entry, starting at
       65       65                    the current location.  The search is bounded by 3 limits:
       66       66                    o REMAINING_RECS - Set initially to %INFINITY; as soon as we match
       67       67                        any symbol in VD$PATTERN, set to $MATCH_LIMIT and decremented
       68       68                        as we read records to match symbols.
       69       69                    o REMAINING_BYTES - Initially set to %INFINITY (indefinite search);
       70       70                        after matching any symbol except %PS_WILD_STRING, set to 0
       71       71                        (match at current location); after matching %PS_WILD_STRING,
       72       72                        value is taken from 2nd parameter of the %PS_WILD_STRING
       73       73                        function.
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:42   
       74       74                    o TOS$EVAL.ENCLOSING - enclosing block boundaries.
       75       75                If we find a match for the symbol:
       76       76                    If REMAINING_BYTES isn't 0, then "checkpoint":  push a new entry onto
       77       77                        the pattern evaluation stack, including the record and byte
       78       78                        search limits in case we need to backtrack later.
       79       79                        We don't checkpoint if we didn't search for this symbol (that
       80       80                        is, if REMAINING_BYTES = 0), but only matched it at the
       81       81                        current location, 'cause when we backtrack, we don't want to
       82       82                        retry this state.
       83       83                    Bump the index into the VD$PATTERN, copy RANGE.ENDD to RANGE.START
       84       84                        in the top VD$EVAL_PATTERN, and reset the REMAINING_BYTES
       85       85                        to 0.  If, however, the just-matched symbol is a
       86       86                        %PS_WILD_STRING, then set REMAINING_BYTES to the max # of
       87       87                        bytes to match.
       88       88                If we didn't find a match for this symbol:
       89       89        *N**N*      Search ahead in the VD$PATTERN entries for the next alternative.
       90       90        *N**N*      If there are no more alternatives in this VD$PATTERN:
       91       91                    Pop the top entry off the pattern evaluation stack.
       92       92                        If the stack is empty, the pattern expression has failed:
       93       93                        return SIGNAL = %FALSE.
       94       94                        Else move off the current RANGE.START location by 1 position,
       95       95                        and search for the pattern entry specified in the top
       96       96                        VD$EVAL_PATTERN.
       97       97                If we don't find the requested number of matches for the
       98       98                    entire pattern expression, return SIGNAL = %FALSE.
       99       99                    Also set TOS$EVAL.REMAINING# to 0 to get out of the
      100      100                    "try the next alternative" loop in VDE$IRANGE.
      101      101        */
      102      102
      103      103        VDE$IPATTERN: PROC (OPERAND, IT_OPERAND, MATCHED_RANGE, SIGNAL) ALTRET;

    103  0 000000   000000 700200 xent  VDE$IPATTERN TSX0  ! X66_AUTO_4
         0 000001   000122 000004                    ZERO    82,4

      104      104
      105      105        %INCLUDE VD_MACROS_M;
      106     2320        %INCLUDE B$TABLES_C;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:43   
      107     2428
      108     2429
      109     2430        %VD$OPERAND (NAME=OPERAND, STCLASS=PARAM);
      110     2444        %VD$IT_OPERAND (NAME=IT_OPERAND, STCLASS=PARAM);
      111     2510        %VD$RANGE (NAME=MATCHED_RANGE, STCLASS=PARAM);
      112     2579    1   DCL SIGNAL BIT(1) ALIGNED;
      113     2580
      114     2581
      115     2582    1   DCL VDA$LREAD                   ENTRY (4) ALTRET;
      116     2583    1   DCL VDE$IMOVE_BY_POSITIONS      ENTRY (7) ALTRET;
      117     2584    1   DCL VDE$RREAD                   ENTRY (4) ALTRET;
      118     2585    1   DCL VDE$RGET                    ENTRY (3) ALTRET;
      119     2586    1   DCL VDI$BINSERT                 ENTRY (4) ALTRET;
      120     2587    1   DCL VDI$CSET_COUNT              ENTRY (2) ALTRET;
      121     2588    1   DCL VDG$LOCATION_TO_PTRS        ENTRY (2) ALTRET;
      122     2589    1   DCL VDG$COMPARE_LOC_W_PTRS      ENTRY (4) ALTRET;
      123     2590    1   DCL VDG$COMPARE_LOCS            ENTRY (3) ALTRET;
      124     2591    1   DCL VDG$OALLOC                  ENTRY (3) ALTRET;
      125     2592    1   DCL VDG$OFREE                   ENTRY (1) ALTRET;
      126     2593    1   DCL VDG$OCOPY                   ENTRY (2) ALTRET;
      127     2594    1   DCL VDG$OCLEAR_RANGE            ENTRY (1) ALTRET;
      128     2595    1   DCL VDG$OCOPY_RANGE             ENTRY (2) ALTRET;
      129     2596    1   DCL VDG$OCLEAR_LOCATION         ENTRY (1) ALTRET;
      130     2597    1   DCL VDG$OCOPY_LOCATION          ENTRY (2) ALTRET;
      131     2598    1   DCL VDG$ESCREECH                ENTRY (3);
      132     2599
      133     2600
      134     2601        %VD_6E (STCLASS=SYMREF);
      135     2637        %VD$NUMBER (NAME=VD_$CASE, STCLASS=SYMREF);
      136     2682        %VD$NUMBER (NAME=VD_$MATCH_LIMIT, STCLASS=SYMREF);
      137     2727        %VD$LOCATION (NAME=VD_LOC_$MATCHES, STCLASS=SYMREF);
      138     2755        %B$XL_UPPER;
      139     2759    1   DCL 1 VD_STATIC_TEMP SYMREF ALIGNED,    /* Used as a SEARCH table */
      140     2760    1         2 FLAGS CHAR(STRING_LENGTH);
      141     2761    1   DCL 1 SEARCH_TABLE REDEF VD_STATIC_TEMP,
      142     2762    1         2 * CHAR(512),
      143     2763    1         2 FLAGS CHAR(512);
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:44   
      144     2764    1   DCL 1 LITERAL REDEF VD_STATIC_TEMP,
      145     2765    1         2 * CHAR(512),
      146     2766    1         2 BYTES CHAR(STRING_LENGTH);
      147     2767
      148     2768
      149     2769
      150     2770    1   DCL MX_RECORDS SBIN;
      151     2771    1   DCL TOS_EVAL_PATT$ PTR;
      152     2772    1   DCL NEW_TOS_EVAL_PATT$ PTR;
      153     2773    1   DCL EVAL_PATT_FOR_BO_MATCH$ PTR;
      154     2774    1   DCL EVAL_PATT_FOR_EO_MATCH$ PTR;
      155     2775    1   DCL LEVEL SBIN;
      156     2776        %VD$LOCATION (NAME=START_SEARCH_LOC, STCLASS=AUTO); /* Owns objects!! */
      157     2804        %VD$LOCATION;
      158     2832        %VD$LOCATION_PTRS (NAME=ENCLOSING_START_PTRS, STCLASS=AUTO);
      159     2847        %VD$LOCATION_PTRS (NAME=ENCLOSING_END_PTRS, STCLASS=AUTO);
      160     2862    1   DCL SKIP_COUNT SBIN;
      161     2863    1   DCL MOVE_BEFORE_SEARCH BIT(1) ALIGNED;
      162     2864    1   DCL CURR_PATTERN$ PTR;
      163     2865    1   DCL PATT_ENTRY$ PTR;
      164     2866    1   DCL FOUND BIT(1) ALIGNED;
      165     2867    1   DCL N_MATCHES SBIN;
      166     2868    1   DCL RCCL SBIN;
      167     2869    1   DCL STRING_LENGTH SBIN;
      168     2870    1   DCL PART_MATCH SBIN; /* For Across-record matching, how much is matched yet. */
      169     2871    1   DCL MOVE_POSITIONS SBIN;
      170     2872
      171     2873
      172     2874        %VD$STREAM (NAME=STREAM, STCLASS="BASED(OPERAND.STREAM$)");
      173     2980        %VD$EVAL (NAME=TOS$EVAL, STCLASS="BASED(OPERAND.EVAL$)");
      174     3225        %VD$PATTERN (NAME=CURR$PATTERN, STCLASS="BASED(CURR_PATTERN$)");
      175     3276        %VD$PATT_ENTRY (NAME=PATT$ENTRY, STCLASS="BASED(PATT_ENTRY$)");
      176     3291        %VD$EVAL_PATTERN (NAME=TOS$EVAL_PATT, STCLASS="BASED(TOS_EVAL_PATT$)");
      177     3398        %VD$EVAL_PATTERN (NAME=NEW$TOS_EVAL_PATT, STCLASS="BASED(NEW_TOS_EVAL_PATT$)");
      178     3505        %VD$EVAL_PATTERN (NAME=EVAL$PATT_FOR_BO_MATCH,
      179     3506            STCLASS="BASED(EVAL_PATT_FOR_BO_MATCH$)");
      180     3613        %VD$EVAL_PATTERN (NAME=EVAL$PATT_FOR_EO_MATCH,
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:45   
      181     3614            STCLASS="BASED(EVAL_PATT_FOR_EO_MATCH$)");
      182     3721        %VD$PATTERN;
      183     3772        %VD$TEXTC;
      184     3795        %VD$TEXTC_REMOTE;
      185     3856        %VD$IT_BLOCK_EXPR;
      186     4006        %VD$PORT;
      187     4104
      188     4105
      189     4106
      190     4107    1           TOS_EVAL_PATT$ = ADDR(NIL);

   4107  0 000002   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000003   200010 756100                    STQ     TOS_EVAL_PATT$,,AUTO

      191     4108    1           PART_MATCH = 0;

   4108  0 000004   200050 450100                    STZ     PART_MATCH,,AUTO

      192     4109    1           MATCHED_RANGE = %CLEAR;

   4109  0 000005   200005 470500                    LDP0    @MATCHED_RANGE,,AUTO
         0 000006   000100 100400                    MLR     fill='000'O
         0 000007   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000010   000000 000110                    ADSC9   0,,PR0                   cn=0,n=72

      193     4110    1           START_SEARCH_LOC = %CLEAR;

   4110  0 000011   000100 100400                    MLR     fill='000'O
         0 000012   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000013   200015 000044                    ADSC9   START_SEARCH_LOC,,AUTO   cn=0,n=36

      194     4111    1           N_MATCHES = 0;

   4111  0 000014   200045 450100                    STZ     N_MATCHES,,AUTO

      195     4112
      196     4113    1           LEVEL = OPERAND.INTREE$ -> VD$IT_BLOCK_EXPR.OPTIONS.LEVEL#;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:46   

   4113  0 000015   200003 471500                    LDP1    @OPERAND,,AUTO
         0 000016   100001 473500                    LDP3    1,,PR1
         0 000017   300031 236100                    LDQ     25,,PR3
         0 000020   000022 732000                    QRS     18
         0 000021   200014 756100                    STQ     LEVEL,,AUTO

      197     4114    1           CALL VDG$LOCATION_TO_PTRS (TOS$EVAL.ENCLOSING.START,

   4114  0 000022   100003 474500                    LDP4    3,,PR1
         0 000023   200026 635500                    EPPR5   ENCLOSING_START_PTRS,,AUTO
         0 000024   200113 455500                    STP5    VIRTUAL_BOR+3,,AUTO
         0 000025   400002 633500                    EPPR3   2,,PR4
         0 000026   200112 453500                    STP3    VIRTUAL_BOR+2,,AUTO
         0 000027   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000030   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000031   000000 701000 xent               TSX1    VDG$LOCATION_TO_PTRS
         0 000032   000627 702000 0                  TSX2    LOCATION_TO_PTRS_FAILED

      198     4115    1             ENCLOSING_START_PTRS)
      199     4116    1             ALTRET (LOCATION_TO_PTRS_FAILED);
      200     4117    1           CALL VDG$LOCATION_TO_PTRS (TOS$EVAL.ENCLOSING.ENDD,

   4117  0 000033   200003 470500                    LDP0    @OPERAND,,AUTO
         0 000034   000003 471500                    LDP1    3,,PR0
         0 000035   200033 633500                    EPPR3   ENCLOSING_END_PTRS,,AUTO
         0 000036   200113 453500                    STP3    VIRTUAL_BOR+3,,AUTO
         0 000037   100013 634500                    EPPR4   11,,PR1
         0 000040   200112 454500                    STP4    VIRTUAL_BOR+2,,AUTO
         0 000041   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000042   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000043   000000 701000 xent               TSX1    VDG$LOCATION_TO_PTRS
         0 000044   000627 702000 0                  TSX2    LOCATION_TO_PTRS_FAILED

      201     4118    1             ENCLOSING_END_PTRS)
      202     4119    1             ALTRET (LOCATION_TO_PTRS_FAILED);
      203     4120    2           IF IT_OPERAND.OPTIONS.DIRECTION#~=%DIR_FORWARD THEN DO;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:47   

   4120  0 000045   200004 470500                    LDP0    @IT_OPERAND,,AUTO
         0 000046   000005 720100                    LXL0    5,,PR0
         0 000047   000001 100003                    CMPX0   1,DU
         0 000050   000076 600000 0                  TZE     s:4127

      204     4121    2              CALL VDG$OCOPY_LOCATION (TOS$EVAL.RANGE.START, START_SEARCH_LOC)

   4121  0 000051   200003 471500                    LDP1    @OPERAND,,AUTO
         0 000052   100003 473500                    LDP3    3,,PR1
         0 000053   200015 634500                    EPPR4   START_SEARCH_LOC,,AUTO
         0 000054   200113 454500                    STP4    VIRTUAL_BOR+3,,AUTO
         0 000055   300024 635500                    EPPR5   20,,PR3
         0 000056   200112 455500                    STP5    VIRTUAL_BOR+2,,AUTO
         0 000057   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000060   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000061   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 000062   000627 702000 0                  TSX2    LOCATION_TO_PTRS_FAILED

      205     4122    2                ALTRET (OCOPY_LOCATION_FAILED);
      206     4123    2              CALL VDG$LOCATION_TO_PTRS (TOS$EVAL.RANGE.START, ENCLOSING_END_PTRS)

   4123  0 000063   200003 470500                    LDP0    @OPERAND,,AUTO
         0 000064   000003 471500                    LDP1    3,,PR0
         0 000065   200033 633500                    EPPR3   ENCLOSING_END_PTRS,,AUTO
         0 000066   200113 453500                    STP3    VIRTUAL_BOR+3,,AUTO
         0 000067   100024 634500                    EPPR4   20,,PR1
         0 000070   200112 454500                    STP4    VIRTUAL_BOR+2,,AUTO
         0 000071   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000072   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000073   000000 701000 xent               TSX1    VDG$LOCATION_TO_PTRS
         0 000074   000627 702000 0                  TSX2    LOCATION_TO_PTRS_FAILED

      207     4124    2                ALTRET (LOCATION_TO_PTRS_FAILED);
      208     4125    2              END;

   4125  0 000075   000110 710000 0                  TRA     s:4130
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:48   

      209     4126    1           ELSE
      210     4127    1              CALL VDG$OCOPY_LOCATION (TOS$EVAL.RANGE.ENDD, START_SEARCH_LOC)

   4127  0 000076   200003 471500                    LDP1    @OPERAND,,AUTO
         0 000077   100003 473500                    LDP3    3,,PR1
         0 000100   200015 634500                    EPPR4   START_SEARCH_LOC,,AUTO
         0 000101   200113 454500                    STP4    VIRTUAL_BOR+3,,AUTO
         0 000102   300035 635500                    EPPR5   29,,PR3
         0 000103   200112 455500                    STP5    VIRTUAL_BOR+2,,AUTO
         0 000104   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000105   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000106   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 000107   000627 702000 0                  TSX2    LOCATION_TO_PTRS_FAILED

      211     4128    1                ALTRET (OCOPY_LOCATION_FAILED);
      212     4129
      213     4130    1           SKIP_COUNT = IT_OPERAND.OPTIONS.SKIP#;  /* So I can change it */

   4130  0 000110   200004 470500                    LDP0    @IT_OPERAND,,AUTO
         0 000111   000004 236100                    LDQ     4,,PR0
         0 000112   000022 736000                    QLS     18
         0 000113   000022 732000                    QRS     18
         0 000114   200040 756100                    STQ     SKIP_COUNT,,AUTO

      214     4131    1           MOVE_BEFORE_SEARCH = %FALSE;     /* Start search at curr location */

   4131  0 000115   200041 450100                    STZ     MOVE_BEFORE_SEARCH,,AUTO

      215     4132    2           IF SKIP_COUNT~=0 THEN DO;

   4132  0 000116   000137 600000 0                  TZE     EACH_MATCH_OF_ENTIRE_PATTERN

      216     4133    2              CALL VDG$COMPARE_LOCS (TOS$EVAL.RANGE.START, TOS$EVAL.RANGE.ENDD,

   4133  0 000117   200003 471500                    LDP1    @OPERAND,,AUTO
         0 000120   100003 473500                    LDP3    3,,PR1
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:49   
         0 000121   200046 634500                    EPPR4   RCCL,,AUTO
         0 000122   200114 454500                    STP4    VIRTUAL_BOR+4,,AUTO
         0 000123   300035 635500                    EPPR5   29,,PR3
         0 000124   200113 455500                    STP5    VIRTUAL_BOR+3,,AUTO
         0 000125   300024 636500                    EPPR6   20,,PR3
         0 000126   200112 456500                    STP6    VIRTUAL_BOR+2,,AUTO
         0 000127   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000130   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000131   000000 701000 xent               TSX1    VDG$COMPARE_LOCS
         0 000132   000624 702000 0                  TSX2    COMPARE_LOCS_FAILED

      217     4134    2                RCCL) ALTRET (COMPARE_LOCS_FAILED);
      218     4135    2              IF RCCL~=%RCCL_EQUAL THEN EXIT; /* Already moving to block edge */

   4135  0 000133   200046 235100                    LDA     RCCL,,AUTO
         0 000134   000137 601000 0                  TNZ     EACH_MATCH_OF_ENTIRE_PATTERN

      219     4136    2              MOVE_BEFORE_SEARCH = %TRUE;

   4136  0 000135   400000 236003                    LDQ     -131072,DU
         0 000136   200041 756100                    STQ     MOVE_BEFORE_SEARCH,,AUTO

      220     4137    2              END;

      221     4138
      222     4139
      223     4140    1   EACH_MATCH_OF_ENTIRE_PATTERN:
      224     4141    2           DO %FOREVER; /* Will exit if no match or SKIP_COUNT done */

   4141  0 000137                       EACH_MATCH_* null
      225     4142    2              SIGNAL = %FALSE;     /* In case we EXIT early */

   4142  0 000137   200006 470500                    LDP0    @SIGNAL,,AUTO
         0 000140   000000 450100                    STZ     0,,PR0

      226     4143    2              EVAL_PATT_FOR_BO_MATCH$ = ADDR(NIL);

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:50   
   4143  0 000141   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000142   200012 756100                    STQ     EVAL_PATT_FOR_BO_MATCH$,,AUTO

      227     4144    2              EVAL_PATT_FOR_EO_MATCH$ = ADDR(NIL);

   4144  0 000143   200013 756100                    STQ     EVAL_PATT_FOR_EO_MATCH$,,AUTO

      228     4145                   /*
      229     4146                   *    Begin looking for next match of the pattern expression.
      230     4147                   *    START_SEARCH_LOC tells where to start searching.
      231     4148                   *    Initialize stack with first entry.
      232     4149                   */
      233     4150    2              CALL VDG$OALLOC (%CLS_EVAL_PATTERN, NEW_TOS_EVAL_PATT$)

   4150  0 000144   200011 631500                    EPPR1   NEW_TOS_EVAL_PATT$,,AUTO
         0 000145   200113 451500                    STP1    VIRTUAL_BOR+3,,AUTO
         0 000146   000001 236000 1                  LDQ     1
         0 000147   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 000150   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000151   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000152   000000 701000 xent               TSX1    VDG$OALLOC
         0 000153   000624 702000 0                  TSX2    COMPARE_LOCS_FAILED

      234     4151    2                ALTRET (OALLOC_FAILED);
      235     4152    2              TOS_EVAL_PATT$ = NEW_TOS_EVAL_PATT$;

   4152  0 000154   200011 236100                    LDQ     NEW_TOS_EVAL_PATT$,,AUTO
         0 000155   200010 756100                    STQ     TOS_EVAL_PATT$,,AUTO

      236     4153    2              TOS$EVAL_PATT.PATTERN$ = IT_OPERAND.PARAM$;

   4153  0 000156   200004 470500                    LDP0    @IT_OPERAND,,AUTO
         0 000157   000010 236100                    LDQ     8,,PR0
         0 000160   200010 471500                    LDP1    TOS_EVAL_PATT$,,AUTO
         0 000161   100024 756100                    STQ     20,,PR1

      237     4154    2              TOS$EVAL_PATT.PATT_INDEX# = 0;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:51   

   4154  0 000162   000000 220003                    LDX0    0,DU
         0 000163   100025 740100                    STX0    21,,PR1

      238     4155    2              IF IT_OPERAND.OPTIONS.DIRECTION# = %DIR_FORWARD THEN

   4155  0 000164   000005 721100                    LXL1    5,,PR0
         0 000165   000001 101003                    CMPX1   1,DU
         0 000166   000173 601000 0                  TNZ     s:4158

      239     4156    2                 TOS$EVAL_PATT.RANGE.ENDD = START_SEARCH_LOC;

   4156  0 000167   000100 100500                    MLR     fill='000'O
         0 000170   200015 000044                    ADSC9   START_SEARCH_LOC,,AUTO   cn=0,n=36
         0 000171   100013 000044                    ADSC9   11,,PR1                  cn=0,n=36
         0 000172   000176 710000 0                  TRA     s:4159

      240     4157    2              ELSE
      241     4158    2                 TOS$EVAL_PATT.RANGE.START = START_SEARCH_LOC;

   4158  0 000173   000100 100500                    MLR     fill='000'O
         0 000174   200015 000044                    ADSC9   START_SEARCH_LOC,,AUTO   cn=0,n=36
         0 000175   100002 000044                    ADSC9   2,,PR1                   cn=0,n=36

      242     4159    2              START_SEARCH_LOC = %CLEAR;

   4159  0 000176   000100 100400                    MLR     fill='000'O
         0 000177   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000200   200015 000044                    ADSC9   START_SEARCH_LOC,,AUTO   cn=0,n=36

      243     4160    2              TOS$EVAL_PATT.DIRECTION# = IT_OPERAND.OPTIONS.DIRECTION#;

   4160  0 000201   000005 721100                    LXL1    5,,PR0
         0 000202   100025 441100                    SXL1    21,,PR1

      244     4161    2              TOS$EVAL_PATT.REMAINING_RECS# = %INFINITY;

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:52   
   4161  0 000203   000031 235000 xsym               LDA     B_VECTNIL+25
         0 000204   100026 755100                    STA     22,,PR1

      245     4162    2              TOS$EVAL_PATT.REMAINING_BYTES# = %INFINITY;

   4162  0 000205   100027 755100                    STA     23,,PR1

      246     4163
      247     4164    2              CURR_PATTERN$ = TOS$EVAL_PATT.PATTERN$;

   4164  0 000206   100024 236100                    LDQ     20,,PR1
         0 000207   200042 756100                    STQ     CURR_PATTERN$,,AUTO

      248     4165    2              IF CURR$PATTERN.N_ENTRIES# = 0 THEN EXIT;

   4165  0 000210   200042 473500                    LDP3    CURR_PATTERN$,,AUTO
         0 000211   300002 222100                    LDX2    2,,PR3
         0 000212   000613 600000 0                  TZE     s:4315

      249     4166
      250     4167    2   EACH_PATTERN_ENTRY:
      251     4168    3              DO UNTIL TOS$EVAL_PATT.PATT_INDEX# = CURR$PATTERN.N_ENTRIES#;

   4168  0 000213                       EACH_PATTER* null
      252     4169    3                 PATT_ENTRY$ =

   4169  0 000213   200010 470500                    LDP0    TOS_EVAL_PATT$,,AUTO
         0 000214   000025 236100                    LDQ     21,,PR0
         0 000215   000020 732000                    QRS     16
         0 000216   000002 376000 1                  ANQ     2
         0 000217   000022 736000                    QLS     18
         0 000220   000003 036003                    ADLQ    3,DU
         0 000221   200042 036100                    ADLQ    CURR_PATTERN$,,AUTO
         0 000222   200043 756100                    STQ     PATT_ENTRY$,,AUTO

      253     4170    3                   ADDR(CURR$PATTERN.ENTRIES (TOS$EVAL_PATT.PATT_INDEX#));
      254     4171    4                 IF TOS$EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN DO;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:53   

   4171  0 000223   000025 720100                    LXL0    21,,PR0
         0 000224   000001 100003                    CMPX0   1,DU
         0 000225   000245 601000 0                  TNZ     s:4179

      255     4172                         /* Start testing from end of last matched symbol */
      256     4173    4                    CALL VDG$OCLEAR_LOCATION (TOS$EVAL_PATT.RANGE.START)

   4173  0 000226   200010 236100                    LDQ     TOS_EVAL_PATT$,,AUTO
         0 000227   000002 036003                    ADLQ    2,DU
         0 000230   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 000231   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000232   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000233   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 000234   000624 702000 0                  TSX2    COMPARE_LOCS_FAILED

      257     4174    4                      ALTRET (OCLEAR_LOCATION_FAILED);
      258     4175    4                    TOS$EVAL_PATT.RANGE.START = TOS$EVAL_PATT.RANGE.ENDD;

   4175  0 000235   200010 470500                    LDP0    TOS_EVAL_PATT$,,AUTO
         0 000236   000100 100500                    MLR     fill='000'O
         0 000237   000013 000044                    ADSC9   11,,PR0                  cn=0,n=36
         0 000240   000002 000044                    ADSC9   2,,PR0                   cn=0,n=36

      259     4176    4                    TOS$EVAL_PATT.RANGE.ENDD = %CLEAR;

   4176  0 000241   000100 100400                    MLR     fill='000'O
         0 000242   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000243   000013 000044                    ADSC9   11,,PR0                  cn=0,n=36

      260     4177    4                    END;

   4177  0 000244   000254 710000 0                  TRA     s:4182

      261     4178    4                 ELSE DO;

      262     4179    4                    CALL VDG$OCLEAR_LOCATION (TOS$EVAL_PATT.RANGE.ENDD)
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:54   

   4179  0 000245   200010 236100                    LDQ     TOS_EVAL_PATT$,,AUTO
         0 000246   000013 036003                    ADLQ    11,DU
         0 000247   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 000250   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000251   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000252   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 000253   000624 702000 0                  TSX2    COMPARE_LOCS_FAILED

      263     4180    4                      ALTRET (OCLEAR_LOCATION_FAILED);
      264     4181    4                    END;

      265     4182    4                 IF MOVE_BEFORE_SEARCH THEN DO;

   4182  0 000254   200041 234100                    SZN     MOVE_BEFORE_SEARCH,,AUTO
         0 000255   000333 605000 0                  TPL     s:4200

      266     4183    4                    MX_RECORDS = %HALF_INFINITY;

   4183  0 000256   377777 235007                    LDA     131071,DL
         0 000257   200007 755100                    STA     MX_RECORDS,,AUTO

      267     4184    4                    MOVE_POSITIONS = 1;

   4184  0 000260   000001 236007                    LDQ     1,DL
         0 000261   200051 756100                    STQ     MOVE_POSITIONS,,AUTO

      268     4185    4                    IF PATT$ENTRY.N# > %MXNB_DATA

   4185  0 000262   200043 470500                    LDP0    PATT_ENTRY$,,AUTO
         0 000263   000002 235100                    LDA     2,,PR0
         0 000264   004000 115007                    CMPA    2048,DL
         0 000265   000300 604400 0                  TMOZ    s:4191
         0 000266   000000 720100                    LXL0    0,,PR0
         0 000267   000003 100003                    CMPX0   3,DU
         0 000270   000300 601000 0                  TNZ     s:4191
         0 000271   200010 471500                    LDP1    TOS_EVAL_PATT$,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:55   
         0 000272   100025 721100                    LXL1    21,,PR1
         0 000273   000001 101003                    CMPX1   1,DU
         0 000274   000300 601000 0                  TNZ     s:4191

      269     4186    4                      AND PATT$ENTRY.CODE# = %PS_WILD_STRING
      270     4187    5                      AND TOS$EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN DO;

      271     4188    5                       MX_RECORDS = 1;

   4188  0 000275   200007 756100                    STQ     MX_RECORDS,,AUTO

      272     4189    5                       MOVE_POSITIONS = %HALF_INFINITY;

   4189  0 000276   377777 235007                    LDA     131071,DL
         0 000277   200051 755100                    STA     MOVE_POSITIONS,,AUTO

      273     4190    5                       END;

      274     4191    4                    CALL VDE$IMOVE_BY_POSITIONS (STREAM, TOS$EVAL_PATT.RANGE.START,

   4191  0 000300   200003 471500                    LDP1    @OPERAND,,AUTO
         0 000301   100000 473500                    LDP3    0,,PR1
         0 000302   100003 474500                    LDP4    3,,PR1
         0 000303   200044 635500                    EPPR5   FOUND,,AUTO
         0 000304   200120 455500                    STP5    VIRTUAL_BOR+8,,AUTO
         0 000305   200051 636500                    EPPR6   MOVE_POSITIONS,,AUTO
         0 000306   200117 456500                    STP6    VIRTUAL_BOR+7,,AUTO
         0 000307   200010 236100                    LDQ     TOS_EVAL_PATT$,,AUTO
         0 000310   000003 036000 1                  ADLQ    3
         0 000311   200116 756100                    STQ     VIRTUAL_BOR+6,,AUTO
         0 000312   200007 637500                    EPPR7   MX_RECORDS,,AUTO
         0 000313   200115 457500                    STP7    VIRTUAL_BOR+5,,AUTO
         0 000314   400002 630500                    EPPR0   2,,PR4
         0 000315   200114 450500                    STP0    VIRTUAL_BOR+4,,AUTO
         0 000316   200010 236100                    LDQ     TOS_EVAL_PATT$,,AUTO
         0 000317   000002 036003                    ADLQ    2,DU
         0 000320   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:56   
         0 000321   200112 453500                    STP3    VIRTUAL_BOR+2,,AUTO
         0 000322   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000323   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000324   000000 701000 xent               TSX1    VDE$IMOVE_BY_POSITIONS
         0 000325   000624 702000 0                  TSX2    COMPARE_LOCS_FAILED

      275     4192    4                      TOS$EVAL.ENCLOSING, MX_RECORDS, TOS$EVAL_PATT.DIRECTION#,
      276     4193    4                      MOVE_POSITIONS, FOUND)
      277     4194    4                      ALTRET (IMOVE_BY_POSITIONS_FAILED);
      278     4195    4                    MOVE_BEFORE_SEARCH = %FALSE; /* Only move again for retries */

   4195  0 000326   200041 450100                    STZ     MOVE_BEFORE_SEARCH,,AUTO

      279     4196    4                    IF NOT FOUND AND MX_RECORDS>0 THEN         /* Hit a limit */

   4196  0 000327   200044 234100                    SZN     FOUND,,AUTO
         0 000330   000333 604000 0                  TMI     s:4200
         0 000331   200007 235100                    LDA     MX_RECORDS,,AUTO
         0 000332   000613 605400 0                  TPNZ    s:4315

      280     4197    4                       EXIT EACH_MATCH_OF_ENTIRE_PATTERN;
      281     4198    4                    END;

      282     4199
      283     4200    3                 CALL FIND_SYMBOL (PATT$ENTRY, TOS$EVAL_PATT, SIGNAL)

   4200  0 000333   200006 236100                    LDQ     @SIGNAL,,AUTO
         0 000334   200010 235100                    LDA     TOS_EVAL_PATT$,,AUTO
         0 000335   200054 757100                    STAQ    @PATT_ENTRY+1,,AUTO
         0 000336   200043 236100                    LDQ     PATT_ENTRY$,,AUTO
         0 000337   200053 756100                    STQ     MOVE_POSITIONS+2,,AUTO
         0 000340   001011 701000 0                  TSX1    FIND_SYMBOL
         0 000341   000624 702000 0                  TSX2    COMPARE_LOCS_FAILED

      284     4201    3                   ALTRET (FIND_SYMBOL_FAILED);
      285     4202    3                 CURR_PATTERN$ = TOS$EVAL_PATT.PATTERN$;  /* May have switched */

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:57   
   4202  0 000342   200010 470500                    LDP0    TOS_EVAL_PATT$,,AUTO
         0 000343   000024 236100                    LDQ     20,,PR0
         0 000344   200042 756100                    STQ     CURR_PATTERN$,,AUTO

      286     4203
      287     4204    3                 IF SIGNAL THEN

   4204  0 000345   200006 471500                    LDP1    @SIGNAL,,AUTO
         0 000346   100000 234100                    SZN     0,,PR1
         0 000347   000451 605000 0                  TPL     DIDNT_MATCH_A_SYMBOL

      288     4205    4   MATCHED_A_SYMBOL: DO;

   4205  0 000350                       MATCHED_A_S* null
      289     4206                         /*  We've matched a symbol */
      290     4207    5                    IF EVAL_PATT_FOR_BO_MATCH$ = ADDR(NIL) THEN DO;

   4207  0 000350   200012 236100                    LDQ     EVAL_PATT_FOR_BO_MATCH$,,AUTO
         0 000351   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000352   000355 601000 0                  TNZ     s:4216

      291     4208                            /*
      292     4209                            *  Matched first symbol in pattern expression.
      293     4210                            *  Save pointer to current TOS_EVAL_PATT now; we
      294     4211                            *       may push a new one in a few statements.
      295     4212                            */
      296     4213    5                       EVAL_PATT_FOR_BO_MATCH$ = TOS_EVAL_PATT$;

   4213  0 000353   200010 236100                    LDQ     TOS_EVAL_PATT$,,AUTO
         0 000354   200012 756100                    STQ     EVAL_PATT_FOR_BO_MATCH$,,AUTO

      297     4214    5                       END;

      298     4215
      299     4216    4                    IF TOS$EVAL_PATT.REMAINING_BYTES# > 0

   4216  0 000355   000027 235100                    LDA     23,,PR0
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:58   
         0 000356   000370 605400 0                  TPNZ    s:4221
         0 000357   200043 473500                    LDP3    PATT_ENTRY$,,AUTO
         0 000360   300000 720100                    LXL0    0,,PR3
         0 000361   000003 100003                    CMPX0   3,DU
         0 000362   000370 600000 0                  TZE     s:4221
         0 000363   200010 116100                    CMPQ    TOS_EVAL_PATT$,,AUTO
         0 000364   000370 600000 0                  TZE     s:4221
         0 000365   200010 236100                    LDQ     TOS_EVAL_PATT$,,AUTO
         0 000366   200013 116100                    CMPQ    EVAL_PATT_FOR_EO_MATCH$,,AUTO
         0 000367   000430 601000 0                  TNZ     s:4241

      300     4217    4                      OR PATT$ENTRY.CODE# = %PS_WILD_STRING
      301     4218    4                      OR TOS_EVAL_PATT$ = EVAL_PATT_FOR_BO_MATCH$
      302     4219    5                      OR TOS_EVAL_PATT$ = EVAL_PATT_FOR_EO_MATCH$ THEN DO;

      303     4220                            /* Push a new entry onto pattern stack */
      304     4221    5                       CALL VDG$OCOPY (TOS$EVAL_PATT, NEW_TOS_EVAL_PATT$)

   4221  0 000370   200011 633500                    EPPR3   NEW_TOS_EVAL_PATT$,,AUTO
         0 000371   200113 453500                    STP3    VIRTUAL_BOR+3,,AUTO
         0 000372   200010 236100                    LDQ     TOS_EVAL_PATT$,,AUTO
         0 000373   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 000374   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000375   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000376   000000 701000 xent               TSX1    VDG$OCOPY
         0 000377   000624 702000 0                  TSX2    COMPARE_LOCS_FAILED

      305     4222    5                         ALTRET (OCOPY_FAILED);
      306     4223    5                       NEW$TOS_EVAL_PATT.BLINK$ = TOS_EVAL_PATT$;

   4223  0 000400   200010 236100                    LDQ     TOS_EVAL_PATT$,,AUTO
         0 000401   200011 470500                    LDP0    NEW_TOS_EVAL_PATT$,,AUTO
         0 000402   000001 756100                    STQ     1,,PR0

      307     4224    5                       TOS_EVAL_PATT$ = NEW_TOS_EVAL_PATT$;

   4224  0 000403   200011 236100                    LDQ     NEW_TOS_EVAL_PATT$,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:59   
         0 000404   200010 756100                    STQ     TOS_EVAL_PATT$,,AUTO

      308     4225
      309     4226    5                       IF PATT$ENTRY.CODE# = %PS_WILD_STRING THEN

   4226  0 000405   200043 470500                    LDP0    PATT_ENTRY$,,AUTO
         0 000406   000000 720100                    LXL0    0,,PR0
         0 000407   000003 100003                    CMPX0   3,DU
         0 000410   000414 601000 0                  TNZ     s:4229

      310     4227    5                          TOS$EVAL_PATT.BLINK$->TOS$EVAL_PATT.REMAINING_BYTES# = 0;

   4227  0 000411   200010 471500                    LDP1    TOS_EVAL_PATT$,,AUTO
         0 000412   100001 473500                    LDP3    1,,PR1
         0 000413   300027 450100                    STZ     23,,PR3

      311     4228
      312     4229    5                       IF TOS$EVAL_PATT.BLINK$ ~= EVAL_PATT_FOR_BO_MATCH$

   4229  0 000414   200010 471500                    LDP1    TOS_EVAL_PATT$,,AUTO
         0 000415   100001 236100                    LDQ     1,,PR1
         0 000416   200012 116100                    CMPQ    EVAL_PATT_FOR_BO_MATCH$,,AUTO
         0 000417   000430 601000 0                  TNZ     s:4241

      313     4230    5                       THEN EXIT;
      314     4231                            /*
      315     4232                            *   Now do the rest of the "first symbol in pattern"
      316     4233                            *       processing, which should affect the
      317     4234                            *       new TOS_EVAL_PATT$.
      318     4235                            */
      319     4236    5                       TOS$EVAL_PATT.DIRECTION# = %DIR_FORWARD;

   4236  0 000420   000001 220003                    LDX0    1,DU
         0 000421   100025 440100                    SXL0    21,,PR1

      320     4237    5                       TOS$EVAL_PATT.REMAINING_RECS# =

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:60   
   4237  0 000422   000003 236000 xsym               LDQ     VD_$MATCH_LIMIT+3
         0 000423   000001 136007                    SBLQ    1,DL
         0 000424   000000 116003                    CMPQ    0,DU
         0 000425   000427 605000 0                  TPL     s:4237+5
         0 000426   000000 236003                    LDQ     0,DU
         0 000427   100026 756100                    STQ     22,,PR1

      321     4238    5                         MAXIMUM (0, VD_$MATCH_LIMIT.V# - 1);
      322     4239    5                       END;

      323     4240
      324     4241    5                    IF PATT$ENTRY.CODE# = %PS_WILD_STRING THEN DO;

   4241  0 000430   200043 470500                    LDP0    PATT_ENTRY$,,AUTO
         0 000431   000000 720100                    LXL0    0,,PR0
         0 000432   000003 100003                    CMPX0   3,DU
         0 000433   000441 601000 0                  TNZ     s:4247

      325     4242                            /* Matched wildcard:  do a bounded search now */
      326     4243    5                       TOS$EVAL_PATT.REMAINING_BYTES# = PATT$ENTRY.N# -

   4243  0 000434   000002 236100                    LDQ     2,,PR0
         0 000435   000001 136100                    SBLQ    1,,PR0
         0 000436   200010 471500                    LDP1    TOS_EVAL_PATT$,,AUTO
         0 000437   100027 756100                    STQ     23,,PR1

      327     4244    5                         PATT$ENTRY.M#;
      328     4245    5                       END;

   4245  0 000440   000443 710000 0                  TRA     s:4249

      329     4246    4                    ELSE    /* Match at RANGE.START */
      330     4247    4                       TOS$EVAL_PATT.REMAINING_BYTES# = 0;

   4247  0 000441   200010 471500                    LDP1    TOS_EVAL_PATT$,,AUTO
         0 000442   100027 450100                    STZ     23,,PR1

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:61   
      331     4248                         /* Bump to next entry in VD$PATTERN */
      332     4249    5                    IF PART_MATCH = 0 THEN DO;

   4249  0 000443   200050 235100                    LDA     PART_MATCH,,AUTO
         0 000444   000517 601000 0                  TNZ     s:4277

      333     4250    5                       TOS$EVAL_PATT.PATT_INDEX# = TOS$EVAL_PATT.PATT_INDEX# + 1;

   4250  0 000445   100025 220100                    LDX0    21,,PR1
         0 000446   000001 621010                    EAX1    1,X0
         0 000447   100025 741100                    STX1    21,,PR1

      334     4251    5                       END;

      335     4252    4                    END MATCHED_A_SYMBOL;

   4252  0 000450   000517 710000 0                  TRA     s:4277

      336     4253
      337     4254    3                 ELSE
      338     4255    4   DIDNT_MATCH_A_SYMBOL: DO;

   4255  0 000451                       DIDNT_MATCH* null
      339     4256                         /*N* Someday, scan forward in CURR$PATTERN for alternatives */
      340     4257                         /* Can't match pattern symbol:  backtrack to last success */
      341     4258    4                    PART_MATCH = 0;

   4258  0 000451   200050 450100                    STZ     PART_MATCH,,AUTO

      342     4259    4                    IF TOS$EVAL_PATT.BLINK$ = ADDR(NIL)

   4259  0 000452   000001 236100                    LDQ     1,,PR0
         0 000453   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000454   000613 600000 0                  TZE     s:4315
         0 000455   200003 473500                    LDP3    @OPERAND,,AUTO
         0 000456   300003 474500                    LDP4    3,,PR3
         0 000457   400070 236100                    LDQ     56,,PR4
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:62   
         0 000460   400000 316007                    CANQ    -131072,DL
         0 000461   000613 601000 0                  TNZ     s:4315

      343     4260    4                      OR TOS$EVAL.CTRL_REC_MATCHED_EOF THEN
      344     4261                            /* Pattern failed (for this SKIP iteration) */
      345     4262    4                       EXIT EACH_MATCH_OF_ENTIRE_PATTERN;
      346     4263    5                    DO UNTIL TOS$EVAL_PATT.BLINK$ = ADDR(NIL) OR

      347     4264    5                      TOS$EVAL_PATT.REMAINING_BYTES# ~= 0;
      348     4265    5                       NEW_TOS_EVAL_PATT$ = TOS$EVAL_PATT.BLINK$;

   4265  0 000462   200010 470500                    LDP0    TOS_EVAL_PATT$,,AUTO
         0 000463   000001 236100                    LDQ     1,,PR0
         0 000464   200011 756100                    STQ     NEW_TOS_EVAL_PATT$,,AUTO

      349     4266    5                       CALL VDG$OFREE (TOS$EVAL_PATT)

   4266  0 000465   200010 630500                    EPPR0   TOS_EVAL_PATT$,,AUTO
         0 000466   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000467   000000 701000 xent               TSX1    VDG$OFREE
         0 000470   000624 702000 0                  TSX2    COMPARE_LOCS_FAILED

      350     4267    5                         ALTRET (OFREE_FAILED);
      351     4268    5                       TOS_EVAL_PATT$ = NEW_TOS_EVAL_PATT$;

   4268  0 000471   200011 236100                    LDQ     NEW_TOS_EVAL_PATT$,,AUTO
         0 000472   200010 756100                    STQ     TOS_EVAL_PATT$,,AUTO

      352     4269    5                       END;

   4269  0 000473   200010 470500                    LDP0    TOS_EVAL_PATT$,,AUTO
         0 000474   000001 236100                    LDQ     1,,PR0
         0 000475   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000476   000501 600000 0                  TZE     s:4270
         0 000477   000027 235100                    LDA     23,,PR0
         0 000500   000462 600000 0                  TZE     s:4265

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:63   
      353     4270    4                    MOVE_BEFORE_SEARCH = %TRUE;    /* Try starting a bit later */

   4270  0 000501   400000 236003                    LDQ     -131072,DU
         0 000502   200041 756100                    STQ     MOVE_BEFORE_SEARCH,,AUTO

      354     4271    4                    START_SEARCH_LOC = TOS$EVAL_PATT.RANGE.START;

   4271  0 000503   000100 100500                    MLR     fill='000'O
         0 000504   000002 000044                    ADSC9   2,,PR0                   cn=0,n=36
         0 000505   200015 000044                    ADSC9   START_SEARCH_LOC,,AUTO   cn=0,n=36

      355     4272    4                    TOS$EVAL_PATT.RANGE.START = TOS$EVAL_PATT.RANGE.ENDD;

   4272  0 000506   000100 100500                    MLR     fill='000'O
         0 000507   000013 000044                    ADSC9   11,,PR0                  cn=0,n=36
         0 000510   000002 000044                    ADSC9   2,,PR0                   cn=0,n=36

      356     4273    4                    TOS$EVAL_PATT.RANGE.ENDD = START_SEARCH_LOC;

   4273  0 000511   000100 100500                    MLR     fill='000'O
         0 000512   200015 000044                    ADSC9   START_SEARCH_LOC,,AUTO   cn=0,n=36
         0 000513   000013 000044                    ADSC9   11,,PR0                  cn=0,n=36

      357     4274    4                    START_SEARCH_LOC = %CLEAR;

   4274  0 000514   000100 100400                    MLR     fill='000'O
         0 000515   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000516   200015 000044                    ADSC9   START_SEARCH_LOC,,AUTO   cn=0,n=36

      358     4275    4                    END DIDNT_MATCH_A_SYMBOL;

      359     4276
      360     4277    3                 END EACH_PATTERN_ENTRY;

   4277  0 000517   200010 470500                    LDP0    TOS_EVAL_PATT$,,AUTO
         0 000520   000025 220100                    LDX0    21,,PR0
         0 000521   200042 471500                    LDP1    CURR_PATTERN$,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:64   
         0 000522   100002 100100                    CMPX0   2,,PR1
         0 000523   000213 601000 0                  TNZ     EACH_PATTERN_ENTRY

      361     4278
      362     4279                   /*
      363     4280                   *   Found one match for the entire pattern expression.
      364     4281                   *   Save the matched range for this iteration.
      365     4282                   *   MATCHED_RANGE must be %CLEAR at this point.
      366     4283                   */
      367     4284    2              N_MATCHES = N_MATCHES + 1;

   4284  0 000524   200045 054100                    AOS     N_MATCHES,,AUTO

      368     4285    2              IF EVAL_PATT_FOR_EO_MATCH$ = ADDR(NIL) THEN

   4285  0 000525   200013 236100                    LDQ     EVAL_PATT_FOR_EO_MATCH$,,AUTO
         0 000526   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000527   000532 601000 0                  TNZ     s:4287

      369     4286    2                 EVAL_PATT_FOR_EO_MATCH$ = TOS_EVAL_PATT$;

   4286  0 000530   200010 236100                    LDQ     TOS_EVAL_PATT$,,AUTO
         0 000531   200013 756100                    STQ     EVAL_PATT_FOR_EO_MATCH$,,AUTO

      370     4287    2              SKIP_COUNT = SKIP_COUNT - 1;

   4287  0 000532   000001 336007                    LCQ     1,DL
         0 000533   200040 056100                    ASQ     SKIP_COUNT,,AUTO

      371     4288    3              IF SKIP_COUNT <= 0 THEN DO;

   4288  0 000534   000555 605400 0                  TPNZ    s:4299

      372     4289    3                 MATCHED_RANGE.ENDD = EVAL$PATT_FOR_EO_MATCH.RANGE.ENDD;

   4289  0 000535   200013 473500                    LDP3    EVAL_PATT_FOR_EO_MATCH$,,AUTO
         0 000536   200005 474500                    LDP4    @MATCHED_RANGE,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:65   
         0 000537   000100 100500                    MLR     fill='000'O
         0 000540   300013 000044                    ADSC9   11,,PR3                  cn=0,n=36
         0 000541   400011 000044                    ADSC9   9,,PR4                   cn=0,n=36

      373     4290    3                 EVAL$PATT_FOR_EO_MATCH.RANGE.ENDD = %CLEAR;

   4290  0 000542   000100 100400                    MLR     fill='000'O
         0 000543   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000544   300013 000044                    ADSC9   11,,PR3                  cn=0,n=36

      374     4291    3                 MATCHED_RANGE.START = EVAL$PATT_FOR_BO_MATCH.RANGE.START;

   4291  0 000545   200012 475500                    LDP5    EVAL_PATT_FOR_BO_MATCH$,,AUTO
         0 000546   000100 100500                    MLR     fill='000'O
         0 000547   500002 000044                    ADSC9   2,,PR5                   cn=0,n=36
         0 000550   400000 000044                    ADSC9   0,,PR4                   cn=0,n=36

      375     4292    3                 EVAL$PATT_FOR_BO_MATCH.RANGE.START = %CLEAR;

   4292  0 000551   000100 100400                    MLR     fill='000'O
         0 000552   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000553   500002 000044                    ADSC9   2,,PR5                   cn=0,n=36

      376     4293    3                 EXIT EACH_MATCH_OF_ENTIRE_PATTERN;

   4293  0 000554   000613 710000 0                  TRA     s:4315

      377     4294    3                 END;
      378     4295
      379     4296                   /*
      380     4297                   *   Setup start location for possible next iteration.
      381     4298                   */
      382     4299    2              IF EVAL$PATT_FOR_BO_MATCH.DIRECTION# ~= %DIR_FORWARD THEN

   4299  0 000555   200012 473500                    LDP3    EVAL_PATT_FOR_BO_MATCH$,,AUTO
         0 000556   300025 720100                    LXL0    21,,PR3
         0 000557   000001 100003                    CMPX0   1,DU
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:66   
         0 000560   000565 600000 0                  TZE     s:4302

      383     4300    2                 PATT_ENTRY$ = ADDR(EVAL$PATT_FOR_BO_MATCH.RANGE.START);

   4300  0 000561   200012 236100                    LDQ     EVAL_PATT_FOR_BO_MATCH$,,AUTO
         0 000562   000002 036003                    ADLQ    2,DU
         0 000563   200043 756100                    STQ     PATT_ENTRY$,,AUTO
         0 000564   000570 710000 0                  TRA     s:4303

      384     4301    2              ELSE
      385     4302    2                 PATT_ENTRY$ = ADDR(EVAL$PATT_FOR_EO_MATCH.RANGE.ENDD);

   4302  0 000565   200013 236100                    LDQ     EVAL_PATT_FOR_EO_MATCH$,,AUTO
         0 000566   000013 036003                    ADLQ    11,DU
         0 000567   200043 756100                    STQ     PATT_ENTRY$,,AUTO

      386     4303    2              START_SEARCH_LOC = PATT_ENTRY$->VD$LOCATION;

   4303  0 000570   200043 474500                    LDP4    PATT_ENTRY$,,AUTO
         0 000571   000100 100500                    MLR     fill='000'O
         0 000572   400000 000044                    ADSC9   0,,PR4                   cn=0,n=36
         0 000573   200015 000044                    ADSC9   START_SEARCH_LOC,,AUTO   cn=0,n=36

      387     4304    2              PATT_ENTRY$->VD$LOCATION = %CLEAR;

   4304  0 000574   000100 100400                    MLR     fill='000'O
         0 000575   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000576   400000 000044                    ADSC9   0,,PR4                   cn=0,n=36

      388     4305
      389     4306                   /* Pop the entire pattern stack */
      390     4307    3              DO UNTIL TOS_EVAL_PATT$ = ADDR(NIL);

      391     4308    3                 NEW_TOS_EVAL_PATT$ = TOS$EVAL_PATT.BLINK$;

   4308  0 000577   200010 470500                    LDP0    TOS_EVAL_PATT$,,AUTO
         0 000600   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:67   
         0 000601   200011 756100                    STQ     NEW_TOS_EVAL_PATT$,,AUTO

      392     4309    3                 CALL VDG$OFREE (TOS$EVAL_PATT)

   4309  0 000602   200010 630500                    EPPR0   TOS_EVAL_PATT$,,AUTO
         0 000603   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000604   000000 701000 xent               TSX1    VDG$OFREE
         0 000605   000624 702000 0                  TSX2    COMPARE_LOCS_FAILED

      393     4310    3                   ALTRET (OFREE_FAILED);
      394     4311    3                 TOS_EVAL_PATT$ = NEW_TOS_EVAL_PATT$;

   4311  0 000606   200011 236100                    LDQ     NEW_TOS_EVAL_PATT$,,AUTO
         0 000607   200010 756100                    STQ     TOS_EVAL_PATT$,,AUTO

      395     4312    3                 END;

   4312  0 000610   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000611   000577 601000 0                  TNZ     s:4308

      396     4313    2              END EACH_MATCH_OF_ENTIRE_PATTERN;

   4313  0 000612   000137 710000 0                  TRA     EACH_MATCH_OF_ENTIRE_PATTERN

      397     4314
      398     4315    2           IF NOT SIGNAL THEN DO;

   4315  0 000613   200006 470500                    LDP0    @SIGNAL,,AUTO
         0 000614   000000 234100                    SZN     0,,PR0
         0 000615   000621 604000 0                  TMI     s:4319

      399     4316    2              TOS$EVAL.REMAINING# = 0;

   4316  0 000616   200003 471500                    LDP1    @OPERAND,,AUTO
         0 000617   100003 473500                    LDP3    3,,PR1
         0 000620   300072 450100                    STZ     58,,PR3

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:68   
      400     4317    2              END;

      401     4318
      402     4319    1           CALL CLEAN_UP

   4319  0 000621   000630 701000 0                  TSX1    CLEAN_UP
         0 000622   000627 702000 0                  TSX2    LOCATION_TO_PTRS_FAILED

      403     4320    1             ALTRET (CLEAN_UP_FAILED);
      404     4321
      405     4322    1           RETURN;

   4322  0 000623   000000 702200 xent               TSX2  ! X66_ARET

   4315  0 000624                       COMPARE_LOC* null
   4315  0 000624                       OALLOC_FAIL* null
   4315  0 000624                       OFREE_FAILED null
   4315  0 000624                       OCOPY_FAILED null
   4315  0 000624                       OCLEAR_LOCA* null
   4315  0 000624                       IMOVE_BY_PO* null
   4315  0 000624                       FIND_SYMBOL* null
      406     4323
      407     4324
      408     4325
      409     4326    1   COMPARE_LOCS_FAILED: ;
      410     4327    1   OALLOC_FAILED: ;
      411     4328    1   OFREE_FAILED: ;
      412     4329    1   OCOPY_FAILED: ;
      413     4330    1   OCLEAR_LOCATION_FAILED: ;
      414     4331    1   IMOVE_BY_POSITIONS_FAILED: ;
      415     4332    1   FIND_SYMBOL_FAILED: ;
      416     4333    1           CALL CLEAN_UP

   4333  0 000624   000630 701000 0                  TSX1    CLEAN_UP
         0 000625   000627 702000 0                  TSX2    LOCATION_TO_PTRS_FAILED

      417     4334    1             ALTRET (CLEAN_UP_FAILED);
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:69   
      418     4335    1           ALTRETURN;

   4335  0 000626   000000 702200 xent               TSX2  ! X66_AALT

   4335  0 000627                       LOCATION_TO* null
   4335  0 000627                       OCOPY_LOCAT* null
   4335  0 000627                       CLEAN_UP_FA* null
      419     4336
      420     4337
      421     4338    1   LOCATION_TO_PTRS_FAILED: ;
      422     4339    1   OCOPY_LOCATION_FAILED: ;
      423     4340    1   CLEAN_UP_FAILED: ;
      424     4341    1           ALTRETURN;

   4341  0 000627   000000 702200 xent               TSX2  ! X66_AALT

      425     4342
      426     4343        %BOX (TITLE=CLEAN_UP);

              4355    1   /***************************************************************************
              4357    1    *                                                                         *
              4361    1            *                                  CLEAN_UP                              *
              4363    1            *                                                                        *
              4365    1          ***************************************************************************/

      427     4369
      428     4370        /*I* NAME: CLEAN_UP
      429     4371            DESCRIPTION:
      430     4372                Cleans up before [alt]returning.
      431     4373                Frees any dynamic storage our AUTO owns.
      432     4374        */
      433     4375
      434     4376    1   CLEAN_UP: PROC ALTRET;

   4376  0 000630   200052 741300       CLEAN_UP     STX1  ! MOVE_POSITIONS+1,,AUTO

      435     4377
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:70   
      436     4378    2   DCL PREV_TOS_EVAL_PATT$ PTR;
      437     4379    2   DCL THIS_WILD$ PTR;
      438     4380    2   DCL WILD_COUNT SBIN;
      439     4381
      440     4382        %VD$WILD_STRINGS (STCLASS="BASED(VD_6E.WILD_STRINGS$)");
      441     4497        %VD$WILD_STRINGS (NAME=WILD, STCLASS="BASED(THIS_WILD$)");
      442     4612        %VD$EVAL_PATTERN (NAME=PREV$PATT, STCLASS="BASED(PREV_TOS_EVAL_PATT$)");
      443     4719
      444     4720
      445     4721
      446     4722    2           CALL VDI$CSET_COUNT (VD_LOC_$MATCHES, N_MATCHES)

   4722  0 000631   200045 630500                    EPPR0   N_MATCHES,,AUTO
         0 000632   200113 450500                    STP0    VIRTUAL_BOR+3,,AUTO
         0 000633   000004 236000 1                  LDQ     4
         0 000634   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 000635   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000636   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000637   000000 701000 xent               TSX1    VDI$CSET_COUNT
         0 000640   001007 702000 0                  TSX2    BINSERT_FAILED

      447     4723    2             ALTRET (CSET_COUNT_FAILED);
      448     4724
      449     4725    3           IF START_SEARCH_LOC ~= %CLEAR THEN DO;

   4725  0 000641   000000 106500                    CMPC    fill='000'O
         0 000642   200015 000044                    ADSC9   START_SEARCH_LOC,,AUTO   cn=0,n=36
         0 000643   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
         0 000644   000653 600000 0                  TZE     s:4735

      450     4726    3              CALL VDG$OCLEAR_LOCATION (START_SEARCH_LOC)

   4726  0 000645   200015 630500                    EPPR0   START_SEARCH_LOC,,AUTO
         0 000646   200112 450500                    STP0    VIRTUAL_BOR+2,,AUTO
         0 000647   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000650   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000651   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:71   
         0 000652   001007 702000 0                  TSX2    BINSERT_FAILED

      451     4727    3                ALTRET (OCLEAR_LOCATION_FAILED);
      452     4728    3              END;

      453     4729
      454     4730                /*
      455     4731                * If we're matching wildcards, write them to the strings file.
      456     4732                *
      457     4733                * First count them.
      458     4734                */
      459     4735    2           WILD_COUNT = 0;

   4735  0 000653   200055 450100                    STZ     WILD_COUNT,,AUTO

      460     4736    2           PREV_TOS_EVAL_PATT$ = TOS_EVAL_PATT$;

   4736  0 000654   200010 236100                    LDQ     TOS_EVAL_PATT$,,AUTO
         0 000655   200053 756100                    STQ     PREV_TOS_EVAL_PATT$,,AUTO

      461     4737    2           IF SIGNAL AND VD_6E.SOURCE.WILD_STRINGS THEN

   4737  0 000656   200006 470500                    LDP0    @SIGNAL,,AUTO
         0 000657   000000 234100                    SZN     0,,PR0
         0 000660   000701 605000 0                  TPL     s:4747
         0 000661   000024 236000 xsym               LDQ     VD_6E+20
         0 000662   200000 316003                    CANQ    65536,DU
         0 000663   000701 600000 0                  TZE     s:4747

      462     4738    3           DO UNTIL PREV_TOS_EVAL_PATT$ = ADDR(NIL);

      463     4739
      464     4740    3              IF PREV$PATT.PATTERN$ ->

   4740  0 000664   200053 470500                    LDP0    PREV_TOS_EVAL_PATT$,,AUTO
         0 000665   000024 471500                    LDP1    20,,PR0
         0 000666   000025 236100                    LDQ     21,,PR0
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:72   
         0 000667   000020 732000                    QRS     16
         0 000670   000002 376000 1                  ANQ     2
         0 000671   100003 720106                    LXL0    3,QL,PR1
         0 000672   000003 100003                    CMPX0   3,DU
         0 000673   000675 601000 0                  TNZ     s:4743

      465     4741    3                VD$PATTERN.ENTRIES.CODE# (PREV$PATT.PATT_INDEX#) = %PS_WILD_STRING
      466     4742    3              THEN WILD_COUNT = WILD_COUNT + 1;

   4742  0 000674   200055 054100                    AOS     WILD_COUNT,,AUTO

      467     4743    3              PREV_TOS_EVAL_PATT$ = PREV$PATT.BLINK$;

   4743  0 000675   000001 236100                    LDQ     1,,PR0
         0 000676   200053 756100                    STQ     PREV_TOS_EVAL_PATT$,,AUTO

      468     4744    3              END;

   4744  0 000677   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000700   000664 601000 0                  TNZ     s:4740

      469     4745
      470     4746                /* Pop the entire pattern stack */
      471     4747    3           DO WHILE TOS_EVAL_PATT$ ~= ADDR(NIL);

   4747  0 000701   001002 710000 0                  TRA     s:4788

      472     4748    3              PREV_TOS_EVAL_PATT$ = TOS$EVAL_PATT.BLINK$;

   4748  0 000702   200010 470500                    LDP0    TOS_EVAL_PATT$,,AUTO
         0 000703   000001 236100                    LDQ     1,,PR0
         0 000704   200053 756100                    STQ     PREV_TOS_EVAL_PATT$,,AUTO

      473     4749                   /*
      474     4750                   *  The wildcard entries are in the stack backwards (like
      475     4751                   *  everything else), so the next one's index is WILD_COUNT.
      476     4752                   */
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:73   
      477     4753    3              IF WILD_COUNT > 0 AND PREV$PATT.PATTERN$ -> VD$PATTERN.ENTRIES.CODE#

   4753  0 000705   200055 235100                    LDA     WILD_COUNT,,AUTO
         0 000706   000774 604400 0                  TMOZ    s:4785
         0 000707   200053 471500                    LDP1    PREV_TOS_EVAL_PATT$,,AUTO
         0 000710   100024 473500                    LDP3    20,,PR1
         0 000711   100025 236100                    LDQ     21,,PR1
         0 000712   000020 732000                    QRS     16
         0 000713   000002 376000 1                  ANQ     2
         0 000714   300003 720106                    LXL0    3,QL,PR3
         0 000715   000003 100003                    CMPX0   3,DU
         0 000716   000774 601000 0                  TNZ     s:4785

      478     4754    4                (PREV$PATT.PATT_INDEX#) = %PS_WILD_STRING THEN DO;

      479     4755
      480     4756                      /*
      481     4757                      *  The matched range goes from PREV$PATT.ENDD to TOS$PATT.START,
      482     4758                      *  so switch things around to make the proper range.
      483     4759                      */
      484     4760    4                 START_SEARCH_LOC = PREV$PATT.RANGE.START;

   4760  0 000717   000100 100500                    MLR     fill='000'O
         0 000720   100002 000044                    ADSC9   2,,PR1                   cn=0,n=36
         0 000721   200015 000044                    ADSC9   START_SEARCH_LOC,,AUTO   cn=0,n=36

      485     4761    4                 PREV$PATT.RANGE.START = PREV$PATT.RANGE.ENDD;

   4761  0 000722   000100 100500                    MLR     fill='000'O
         0 000723   100013 000044                    ADSC9   11,,PR1                  cn=0,n=36
         0 000724   100002 000044                    ADSC9   2,,PR1                   cn=0,n=36

      486     4762    4                 PREV$PATT.RANGE.ENDD = TOS$EVAL_PATT.RANGE.START;

   4762  0 000725   000100 100500                    MLR     fill='000'O
         0 000726   000002 000044                    ADSC9   2,,PR0                   cn=0,n=36
         0 000727   100013 000044                    ADSC9   11,,PR1                  cn=0,n=36
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:74   

      487     4763    4                 TOS$EVAL_PATT.RANGE.START = START_SEARCH_LOC;

   4763  0 000730   000100 100500                    MLR     fill='000'O
         0 000731   200015 000044                    ADSC9   START_SEARCH_LOC,,AUTO   cn=0,n=36
         0 000732   000002 000044                    ADSC9   2,,PR0                   cn=0,n=36

      488     4764
      489     4765                      /*
      490     4766                      *  Find any corresponding entries in WILD$STRINGS,
      491     4767                      *  and call VDI$BINSERT to stuff the match into the
      492     4768                      *  source file.
      493     4769                      */
      494     4770
      495     4771    4                 THIS_WILD$ = PINCRW (VD_6E.WILD_STRINGS$,

   4771  0 000733   000025 473400 xsym               LDP3    VD_6E+21
         0 000734   300002 720100                    LXL0    2,,PR3
         0 000735   000000 636010                    EAQ     0,X0
         0 000736   000023 402007                    MPY     19,DL
         0 000737   000025 036000 xsym               ADLQ    VD_6E+21
         0 000740   200054 756100                    STQ     THIS_WILD$,,AUTO

      496     4772    4                   SIZEW(WILD.W) * VD$WILD_STRINGS.N_WILDCARDS#);
      497     4773    5                 DO UNTIL THIS_WILD$ = VD_6E.WILD_STRINGS$;

      498     4774
      499     4775    5                    THIS_WILD$ = PINCRW (THIS_WILD$, -SIZEW(WILD.W));

   4775  0 000741   200054 236100                    LDQ     THIS_WILD$,,AUTO
         0 000742   777755 036003                    ADLQ    -19,DU
         0 000743   200054 756100                    STQ     THIS_WILD$,,AUTO

      500     4776    5                    IF WILD.W.N# = WILD_COUNT THEN

   4776  0 000744   200054 470500                    LDP0    THIS_WILD$,,AUTO
         0 000745   000003 236100                    LDQ     3,,PR0
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:75   
         0 000746   200055 116100                    CMPQ    WILD_COUNT,,AUTO
         0 000747   000767 601000 0                  TNZ     s:4780

      501     4777    5                       CALL VDI$BINSERT (PREV$PATT.RANGE, STREAM,

   4777  0 000750   200003 471500                    LDP1    @OPERAND,,AUTO
         0 000751   100000 473500                    LDP3    0,,PR1
         0 000752   000020 236000 xsym               LDQ     VD_6E+16
         0 000753   200115 756100                    STQ     VIRTUAL_BOR+5,,AUTO
         0 000754   200054 236100                    LDQ     THIS_WILD$,,AUTO
         0 000755   000004 036003                    ADLQ    4,DU
         0 000756   200114 756100                    STQ     VIRTUAL_BOR+4,,AUTO
         0 000757   200113 453500                    STP3    VIRTUAL_BOR+3,,AUTO
         0 000760   200053 236100                    LDQ     PREV_TOS_EVAL_PATT$,,AUTO
         0 000761   000002 036003                    ADLQ    2,DU
         0 000762   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 000763   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 000764   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000765   000000 701000 xent               TSX1    VDI$BINSERT
         0 000766   001007 702000 0                  TSX2    BINSERT_FAILED

      502     4778    5                         WILD.W.RANGE, VD_6E.SOURCE.OPERAND.STREAM$->STREAM)
      503     4779    5                         ALTRET (BINSERT_FAILED);
      504     4780    5                    END;

   4780  0 000767   200054 236100                    LDQ     THIS_WILD$,,AUTO
         0 000770   000025 116000 xsym               CMPQ    VD_6E+21
         0 000771   000741 601000 0                  TNZ     s:4775

      505     4781
      506     4782    4                 WILD_COUNT = WILD_COUNT - 1;

   4782  0 000772   000001 336007                    LCQ     1,DL
         0 000773   200055 056100                    ASQ     WILD_COUNT,,AUTO

      507     4783    4                 END;

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:76   
      508     4784
      509     4785    3              CALL VDG$OFREE (TOS$EVAL_PATT)

   4785  0 000774   200010 630500                    EPPR0   TOS_EVAL_PATT$,,AUTO
         0 000775   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000776   000000 701000 xent               TSX1    VDG$OFREE
         0 000777   001007 702000 0                  TSX2    BINSERT_FAILED

      510     4786    3                ALTRET (OFREE_FAILED);
      511     4787    3              TOS_EVAL_PATT$ = PREV_TOS_EVAL_PATT$;

   4787  0 001000   200053 236100                    LDQ     PREV_TOS_EVAL_PATT$,,AUTO
         0 001001   200010 756100                    STQ     TOS_EVAL_PATT$,,AUTO

      512     4788    3              END;

   4788  0 001002   200010 236100                    LDQ     TOS_EVAL_PATT$,,AUTO
         0 001003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001004   000702 601000 0                  TNZ     s:4748

      513     4789
      514     4790    2           RETURN;

   4790  0 001005   200052 221300                    LDX1  ! MOVE_POSITIONS+1,,AUTO
         0 001006   000001 702211                    TSX2  ! 1,X1

   4780  0 001007                       BINSERT_FAI* null
   4780  0 001007                       CSET_COUNT_* null
   4780  0 001007                       OCLEAR_RANG* null
   4780  0 001007                       OCLEAR_LOCA* null
   4780  0 001007                       OFREE_FAILED null
      515     4791
      516     4792
      517     4793    2   BINSERT_FAILED: ;
      518     4794    2   CSET_COUNT_FAILED: ;
      519     4795    2   OCLEAR_RANGE_FAILED: ;
      520     4796    2   OCLEAR_LOCATION_FAILED: ;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:77   
      521     4797    2   OFREE_FAILED: ;
      522     4798    2           ALTRETURN;

   4798  0 001007   200052 221300                    LDX1  ! MOVE_POSITIONS+1,,AUTO
         0 001010   000000 702211                    TSX2  ! 0,X1

      523     4799
      524     4800    2   END CLEAN_UP;
      525     4801
      526     4802                %BOX (TITLE=FIND_SYMBOL, PAGE=YES);
              4810    2
              4814    2   /***************************************************************************
              4816    2    *                                                                         *
              4820    2            *                                FIND_SYMBOL                             *
              4822    2            *                                                                        *
              4824    2          ***************************************************************************/

      527     4828
      528     4829        /*I* NAME: FIND_SYMBOL
      529     4830            PARAMETERS:
      530     4831                PATT_ENTRY - VD$PATT_ENTRY describing the symbol to find.
      531     4832                TOS_EVAL_PATT - Top VD$EVAL_PATTERN on the pattern stack.  Its:
      532     4833                    .RANGE - VD$RANGE whose .START specifies where to start the search
      533     4834                        for the symbol.
      534     4835                        .RANGE.ENDD must be %CLEAR at entry.
      535     4836                    .DIRECTION# - A %DIR_ def.  The direction in which to search.
      536     4837                    .REMAINING_RECS# - Max # of additional records to read (beyond the
      537     4838                        .RANGE.START record) when searching for a match for the symbol.
      538     4839                        0 means the match must lie entirely within the .RANGE.START
      539     4840                        record.
      540     4841                    .REMAINING_BYTES# - Max # of bytes to skip when searching for the
      541     4842                        start of a symbol.  0 means symbol must match at .RANGE.START.
      542     4843                FOUND - An uninitialized BIT(1) ALIGNED.
      543     4844            INPUT:
      544     4845                STREAM - The stream to use.
      545     4846                ENCLOSING_START_PTRS, ENCLOSING_END_PTRS - VD$LOCATION_PTRS
      546     4847                    containing the bounds of the enclosing block for the
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:78   
      547     4848                    search.
      548     4849                LEVEL - Level of file structure to search.
      549     4850                TOS$EVAL.CTRL_REC_MATCHED_EOF should be set if any $CONTROL-Record
      550     4851                    in any pattern has matched at EOF in this editing operation
      551     4852                    (NOT just in this repetition, but between any two editing verbs).
      552     4853                VD_$CASE - Current value of $CASE predefined variable.  Value ~= 0
      553     4854                    means that "alphabetic case matters":  do exact comparisons to
      554     4855                    file data; value = 0 means case doesn't matter:  do
      555     4856                    case-insensitive searches.
      556     4857            OUTPUT:
      557     4858                FOUND will be set %TRUE if the match succeeds; else %FALSE.
      558     4859                If the match succeeds:
      559     4860                    TOS_EVAL_PATT.RANGE.START and .ENDD will specify the start and end
      560     4861                        locations of the matching block in the file.
      561     4862                    TOS_EVAL_PATT.REMAINING_RECS# will be decremented if any
      562     4863                        additional records were read to match the symbol.
      563     4864                TOS$EVAL.CTRL_REC_MATCHED_EOF will be set if a $CONTROL-Record
      564     4865                    in a pattern matched EOF.
      565     4866            DESCRIPTION:
      566     4867                If PATT_ENTRY is %PS_LITERAL or _VALUE:
      567     4868                    Call FIND_LITERAL to search from .RANGE.START for the literal
      568     4869                    string or byte value.  If found, set .RANGE.START and .ENDD
      569     4870                    to the start and end of the matching data in the file.
      570     4871                If PATT_ENTRY is %PS_WILD_STRING:
      571     4872                    Skip forward the minumum # of bytes to match.  This symbol
      572     4873                    always succeeds.
      573     4874        *N*     If PATT_ENTRY is %PS_PATTERN:
      574     4875        *N*         Change patterns?  Always succeeds??????????
      575     4876                If PATT_ENTRY is %PS_RECORD or _CURRENT:
      576     4877                    Set or test .RANGE.START and .ENDD for the specified block.
      577     4878                    Note that %PS_RECORD is a non-empty block:  it starts at the end
      578     4879                    of one record and ends at the start of the next record.
      579     4880                    Note also the interaction of %PS_RECORD and
      580     4881                    TOS$EVAL.CTRL_REC_MATCHED_EOF (see star 22441 case 1): to
      581     4882                    prevent a command such as CO ST 'ABC' OV REPE SE '%R' from forever
      582     4883                    finding a record break at EOF, we use the .CTRL_REC_MATCHED_EOF
      583     4884                    flag to allow %PS_RECORD match at EOF just once, then fail at EOF
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:79   
      584     4885                    from then on.
      585     4886        *??**??*    Should we use this technique for BOF, too????? *??**??*
      586     4887
      587     4888                Guarantee .RANGE is within LIMITS; if not, the match fails.
      588     4889                If the match succeeds, set FOUND to %TRUE.
      589     4890        */
      590     4891
      591     4892    1   FIND_SYMBOL: PROC (PATT_ENTRY, TOS_EVAL_PATT, FOUND) ALTRET;

   4892  0 001011   200052 741300       FIND_SYMBOL  STX1  ! MOVE_POSITIONS+1,,AUTO

      592     4893
      593     4894        %VD$PATT_ENTRY (NAME=PATT_ENTRY, STCLASS=PARAM);
      594     4909        %VD$EVAL_PATTERN (NAME=TOS_EVAL_PATT, STCLASS=PARAM);
      595     5016    2   DCL FOUND BIT(1) ALIGNED;
      596     5017
      597     5018
      598     5019    2   DCL POSITIONS_TO_MOVE SBIN;
      599     5020    2   DCL SKIPPED_BYTES SBIN;
      600     5021    2   DCL SEARCH_KEY$ PTR;
      601     5022    2   DCL STREAM_KEY$ PTR;
      602     5023    2   DCL SEARCH_RECORD$ PTR;
      603     5024    2   DCL WILD_LOC$ PTR;
      604     5025
      605     5026
      606     5027        %VD$TEXTC (NAME=SEARCH$KEY, STCLASS="BASED(SEARCH_KEY$)");
      607     5050        %VD$TEXTC (NAME=STREAM$KEY, STCLASS="BASED(STREAM_KEY$)");
      608     5073        %VD$BUFFER (NAME=SEARCH$RECORD, STCLASS="BASED(SEARCH_RECORD$)");
      609     5131        %VD$LOCATION (NAME=WILD$LOC, STCLASS = "BASED(WILD_LOC$)");
      610     5159
      611     5160
      612     5161
      613     5162    2           FOUND = %FALSE;

   5162  0 001012   200055 470500                    LDP0    @FOUND,,AUTO
         0 001013   000000 450100                    STZ     0,,PR0

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:80   
      614     5163
      615     5164    2   PATT_ENTRY_CODE_CASES:
      616     5165    3           DO CASE (PATT_ENTRY.CODE#);

   5165  0 001014   200053 471500       PATT_ENTRY_* LDP1    @PATT_ENTRY,,AUTO
         0 001015   100000 720100                    LXL0    0,,PR1
         0 001016   000011 100003                    CMPX0   9,DU
         0 001017   001021 602010 0                  TNC     PATT_ENTRY_CODE_CASES+5,X0
         0 001020   001644 710000 0                  TRA     s:5405
         0 001021   001644 710000 0                  TRA     s:5405
         0 001022   001032 710000 0                  TRA     s:5168
         0 001023   001065 710000 0                  TRA     s:5182
         0 001024   001122 710000 0                  TRA     s:5192
         0 001025   001644 710000 0                  TRA     s:5405
         0 001026   001212 710000 0                  TRA     s:5222
         0 001027   001644 710000 0                  TRA     s:5405
         0 001030   001576 710000 0                  TRA     s:5388
         0 001031   001624 710000 0                  TRA     s:5398

      617     5166
      618     5167    3            CASE (%PS_LITERAL);

      619     5168    3              STRING_LENGTH =

   5168  0 001032   100003 473500                    LDP3    3,,PR1
         0 001033   300002 236100                    LDQ     2,,PR3
         0 001034   000033 772000                    QRL     27
         0 001035   200050 136100                    SBLQ    PART_MATCH,,AUTO
         0 001036   200047 756100                    STQ     STRING_LENGTH,,AUTO

      620     5169    3                PATT_ENTRY.MATCH$ -> VD$TEXTC_REMOTE.LENGTH# - PART_MATCH;
      621     5170    4              IF VD_$CASE.V# = 0 THEN DO;

   5170  0 001037   000003 235000 xsym               LDA     VD_$CASE+3
         0 001040   001053 601000 0                  TNZ     s:5175

      622     5171    4                 CALL XLATE (LITERAL.BYTES, B$XL_UPPER,
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:81   

   5171  0 001041   300002 236100                    LDQ     2,,PR3
         0 001042   000033 772000                    QRL     27
         0 001043   200047 721100                    LXL1    STRING_LENGTH,,AUTO
         0 001044   200050 235100                    LDA     PART_MATCH,,AUTO
         0 001045   000000 474400 xsym               LDP4    B$XL_UPPER$
         0 001046   040040 160545                    MVT     fill='040'O
         0 001047   300002 200011                    ADSC9   2,A,PR3                  cn=1,n=*X1
         0 001050   000200 000011 xsym               ADSC9   VD_STATIC_TEMP+128       cn=0,n=*X1
         0 001051   400000 000100                    ARG     0,,PR4

      623     5172    4                   SUBSTR (PATT_ENTRY.MATCH$ -> VD$TEXTC_REMOTE.BYTES,
      624     5173    4                   PART_MATCH, STRING_LENGTH));
      625     5174    4                 END;

   5174  0 001052   001062 710000 0                  TRA     s:5178

      626     5175    3              ELSE LITERAL.BYTES =

   5175  0 001053   300002 236100                    LDQ     2,,PR3
         0 001054   000033 772000                    QRL     27
         0 001055   200047 721100                    LXL1    STRING_LENGTH,,AUTO
         0 001056   200050 235100                    LDA     PART_MATCH,,AUTO
         0 001057   040040 100545                    MLR     fill='040'O
         0 001060   300002 200011                    ADSC9   2,A,PR3                  cn=1,n=*X1
         0 001061   000200 000011 xsym               ADSC9   VD_STATIC_TEMP+128       cn=0,n=*X1

      627     5176    3                   SUBSTR (PATT_ENTRY.MATCH$ -> VD$TEXTC_REMOTE.BYTES,
      628     5177    3                   PART_MATCH, STRING_LENGTH);
      629     5178    3              CALL FIND_STRING ALTRET (FIND_STRING_FAILED);

   5178  0 001062   001713 701000 0                  TSX1    FIND_STRING
         0 001063   001711 702000 0                  TSX2    LREAD_FAILED
         0 001064   001653 710000 0                  TRA     s:5409

      630     5179
      631     5180
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:82   
      632     5181    3            CASE (%PS_VALUE);

      633     5182    3              SEARCH_TABLE = %CLEAR;

   5182  0 001065   000000 100400                    MLR     fill='000'O
         0 001066   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 001067   000000 002000 xsym               ADSC9   VD_STATIC_TEMP           cn=0,n=1024

      634     5183    3              RCCL = MINIMUM (PATT_ENTRY.M#, 511);

   5183  0 001070   000777 236007                    LDQ     511,DL
         0 001071   001074 604000 0                  TMI     s:5183+4
         0 001072   100001 116100                    CMPQ    1,,PR1
         0 001073   001075 604400 0                  TMOZ    s:5183+5
         0 001074   100001 236100                    LDQ     1,,PR1
         0 001075   200046 756100                    STQ     RCCL,,AUTO

      635     5184    3              IF RCCL > PATT_ENTRY.N# THEN RETURN;

   5184  0 001076   100002 116100                    CMPQ    2,,PR1
         0 001077   001102 604400 0                  TMOZ    s:5185

   5184  0 001100   200052 221300                    LDX1  ! MOVE_POSITIONS+1,,AUTO
         0 001101   000001 702211                    TSX2  ! 1,X1

      636     5185    3              SUBSTR (SEARCH_TABLE.FLAGS, RCCL,

   5185  0 001102   000777 236007                    LDQ     511,DL
         0 001103   001106 604000 0                  TMI     s:5185+4
         0 001104   100002 116100                    CMPQ    2,,PR1
         0 001105   001107 604400 0                  TMOZ    s:5185+5
         0 001106   100002 236100                    LDQ     2,,PR1
         0 001107   200046 136100                    SBLQ    RCCL,,AUTO
         0 001110   000001 620006                    EAX0    1,QL
         0 001111   200046 235100                    LDA     RCCL,,AUTO
         0 001112   040045 100400                    MLR     fill='040'O
         0 001113   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:83   
         0 001114   000200 000010 xsym               ADSC9   VD_STATIC_TEMP+128,A     cn=0,n=*X0

      637     5186    3                MINIMUM (PATT_ENTRY.N#, 511) - RCCL + 1) = ' '; /* Anything ~=0 */
      638     5187    3              STRING_LENGTH = 1;

   5187  0 001115   000001 236007                    LDQ     1,DL
         0 001116   200047 756100                    STQ     STRING_LENGTH,,AUTO

      639     5188    3              CALL FIND_STRING ALTRET (FIND_STRING_FAILED);

   5188  0 001117   001713 701000 0                  TSX1    FIND_STRING
         0 001120   001711 702000 0                  TSX2    LREAD_FAILED
         0 001121   001653 710000 0                  TRA     s:5409

      640     5189
      641     5190
      642     5191    3            CASE (%PS_WILD_STRING);

      643     5192    3              CALL VDG$OCOPY_LOCATION (TOS_EVAL_PATT.RANGE.START,

   5192  0 001122   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001123   000013 036003                    ADLQ    11,DU
         0 001124   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 001125   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001126   000002 036003                    ADLQ    2,DU
         0 001127   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 001130   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001131   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001132   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 001133   001711 702000 0                  TSX2    LREAD_FAILED

      644     5193    3                TOS_EVAL_PATT.RANGE.ENDD)
      645     5194    3                ALTRET (OCOPY_LOCATION_FAILED);
      646     5195    4              IF PATT_ENTRY.M# > 0 THEN DO;

   5195  0 001134   200053 470500                    LDP0    @PATT_ENTRY,,AUTO
         0 001135   000001 235100                    LDA     1,,PR0
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:84   
         0 001136   001206 604400 0                  TMOZ    s:5208

      647     5196    4                 POSITIONS_TO_MOVE = PATT_ENTRY.M#;

   5196  0 001137   200056 755100                    STA     POSITIONS_TO_MOVE,,AUTO

      648     5197    4                 IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN

   5197  0 001140   200054 471500                    LDP1    @TOS_EVAL_PATT,,AUTO
         0 001141   100025 720100                    LXL0    21,,PR1
         0 001142   000001 100003                    CMPX0   1,DU
         0 001143   001150 601000 0                  TNZ     s:5200

      649     5198    4                    WILD_LOC$ = ADDR(TOS_EVAL_PATT.RANGE.ENDD);

   5198  0 001144   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001145   000013 036003                    ADLQ    11,DU
         0 001146   200063 756100                    STQ     WILD_LOC$,,AUTO
         0 001147   001153 710000 0                  TRA     s:5201

      650     5199    4                 ELSE
      651     5200    4                    WILD_LOC$ = ADDR(TOS_EVAL_PATT.RANGE.START);

   5200  0 001150   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001151   000002 036003                    ADLQ    2,DU
         0 001152   200063 756100                    STQ     WILD_LOC$,,AUTO

      652     5201    4                 CALL VDE$IMOVE_BY_POSITIONS (STREAM, WILD$LOC,

   5201  0 001153   200003 473500                    LDP3    @OPERAND,,AUTO
         0 001154   300000 474500                    LDP4    0,,PR3
         0 001155   300003 475500                    LDP5    3,,PR3
         0 001156   200055 236100                    LDQ     @FOUND,,AUTO
         0 001157   200120 756100                    STQ     VIRTUAL_BOR+8,,AUTO
         0 001160   200056 636500                    EPPR6   POSITIONS_TO_MOVE,,AUTO
         0 001161   200117 456500                    STP6    VIRTUAL_BOR+7,,AUTO
         0 001162   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:85   
         0 001163   000003 036000 1                  ADLQ    3
         0 001164   200116 756100                    STQ     VIRTUAL_BOR+6,,AUTO
         0 001165   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001166   000026 036003                    ADLQ    22,DU
         0 001167   200115 756100                    STQ     VIRTUAL_BOR+5,,AUTO
         0 001170   500002 637500                    EPPR7   2,,PR5
         0 001171   200114 457500                    STP7    VIRTUAL_BOR+4,,AUTO
         0 001172   200063 236100                    LDQ     WILD_LOC$,,AUTO
         0 001173   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 001174   200112 454500                    STP4    VIRTUAL_BOR+2,,AUTO
         0 001175   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001176   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 001177   000000 701000 xent               TSX1    VDE$IMOVE_BY_POSITIONS
         0 001200   001711 702000 0                  TSX2    LREAD_FAILED

      653     5202    4                   TOS$EVAL.ENCLOSING, TOS_EVAL_PATT.REMAINING_RECS#,
      654     5203    4                   TOS_EVAL_PATT.DIRECTION#, POSITIONS_TO_MOVE, FOUND)
      655     5204    4                   ALTRET (IMOVE_BY_POSITIONS_FAILED);
      656     5205    4                 IF FOUND = %FALSE THEN

   5205  0 001201   200055 470500                    LDP0    @FOUND,,AUTO
         0 001202   000000 234100                    SZN     0,,PR0
         0 001203   001206 604000 0                  TMI     s:5208

      657     5206    4                    RETURN;

   5206  0 001204   200052 221300                    LDX1  ! MOVE_POSITIONS+1,,AUTO
         0 001205   000001 702211                    TSX2  ! 1,X1

      658     5207    4                 END;
      659     5208    3              FOUND = %TRUE;

   5208  0 001206   400000 236003                    LDQ     -131072,DU
         0 001207   200055 470500                    LDP0    @FOUND,,AUTO
         0 001210   000000 756100                    STQ     0,,PR0
         0 001211   001653 710000 0                  TRA     s:5409

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:86   
      660     5209
      661     5210
      662     5211    3            CASE (%PS_RECORD);

      663     5212                   /*
      664     5213                   *  Here, we want to:
      665     5214                   *    o Set TOS_EVAL_PATT.RANGE.START to the length of the
      666     5215                   *        current/previous record (forward/backward).
      667     5216                   *    o Decrement .REMAINING_BYTES# by the number of bytes skipped
      668     5217                   *        in order to get from .RANGE.START's initial position
      669     5218                   *        to the end/beginning of the current record (FO/BA).
      670     5219                   *    o Set .RANGE.ENDD to the first position of the next
      671     5220                   *        existing/current record (foward/backward).
      672     5221                   */
      673     5222    3              SKIPPED_BYTES = 0;

   5222  0 001212   200057 450100                    STZ     SKIPPED_BYTES,,AUTO

      674     5223    4              IF TOS_EVAL_PATT.RANGE.START.EOF THEN DO;

   5223  0 001213   200054 473500                    LDP3    @TOS_EVAL_PATT,,AUTO
         0 001214   300012 236100                    LDQ     10,,PR3
         0 001215   400000 316007                    CANQ    -131072,DL
         0 001216   001222 600000 0                  TZE     s:5227

      675     5224    4                 TOS_EVAL_PATT.RANGE.ENDD.EOF = %TRUE;

   5224  0 001217   400000 236007                    LDQ     -131072,DL
         0 001220   300023 256100                    ORSQ    19,,PR3

      676     5225    4                 END;

   5225  0 001221   001542 710000 0                  TRA     s:5327

      677     5226    4              ELSE DO;

      678     5227    4                 CALL VDA$LREAD (STREAM, TOS_EVAL_PATT.RANGE.START, 0, %TRUE)
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:87   

   5227  0 001222   200003 474500                    LDP4    @OPERAND,,AUTO
         0 001223   400000 475500                    LDP5    0,,PR4
         0 001224   000006 237000 1                  LDAQ    6
         0 001225   200114 757100                    STAQ    VIRTUAL_BOR+4,,AUTO
         0 001226   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001227   000002 036003                    ADLQ    2,DU
         0 001230   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 001231   200112 455500                    STP5    VIRTUAL_BOR+2,,AUTO
         0 001232   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001233   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 001234   000000 701000 xent               TSX1    VDA$LREAD
         0 001235   001711 702000 0                  TSX2    LREAD_FAILED

      679     5228    4                   ALTRET (LREAD_FAILED);
      680     5229
      681     5230    4                 IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN

   5230  0 001236   200054 470500                    LDP0    @TOS_EVAL_PATT,,AUTO
         0 001237   000025 720100                    LXL0    21,,PR0
         0 001240   000001 100003                    CMPX0   1,DU
         0 001241   001407 601000 0                  TNZ     MOVE_BACKWARD_TO_EOR

      682     5231    5   MOVE_FORWARD_TO_EOR: DO;

   5231  0 001242                       MOVE_FORWAR* null
      683     5232                         /* See if the .RANGE.START record exists */
      684     5233    6                    IF NOT STREAM.CURRENT.EOF THEN DO;

   5233  0 001242   200003 470500                    LDP0    @OPERAND,,AUTO
         0 001243   000000 471500                    LDP1    0,,PR0
         0 001244   100016 236100                    LDQ     14,,PR1
         0 001245   400000 316007                    CANQ    -131072,DL
         0 001246   001373 601000 0                  TNZ     s:5274

      685     5234                            %GETKEY (KEY=TOS_EVAL_PATT.RANGE.START.KEY, INDX=LEVEL-1,
      686     5235                            PTR=SEARCH_KEY$);
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:88   

   5242  0 001247   200014 235100                    LDA     LEVEL,,AUTO
         0 001250   000001 735000                    ALS     1
         0 001251   200054 473500                    LDP3    @TOS_EVAL_PATT,,AUTO
         0 001252   300000 720105                    LXL0    0,AL,PR3
         0 001253   000002 100003                    CMPX0   2,DU
         0 001254   001261 601000 0                  TNZ     s:5242+10

   5242  0 001255   300001 474505                    LDP4    1,AL,PR3
         0 001256   400002 635500                    EPPR5   2,,PR4
         0 001257   200060 455500                    STP5    SEARCH_KEY$,,AUTO
         0 001260   001266 710000 0                  TRA     s:5253

   5242  0 001261   200014 236100                    LDQ     LEVEL,,AUTO
         0 001262   000023 736000                    QLS     19
         0 001263   000001 036003                    ADLQ    1,DU
         0 001264   200054 036100                    ADLQ    @TOS_EVAL_PATT,,AUTO
         0 001265   200060 756100                    STQ     SEARCH_KEY$,,AUTO

      687     5245                            %GETKEY (KEY=STREAM.CURRENT.KEY, INDX=LEVEL-1,
      688     5246                            PTR=STREAM_KEY$);

   5253  0 001266   100004 721105                    LXL1    4,AL,PR1
         0 001267   000002 101003                    CMPX1   2,DU
         0 001270   001275 601000 0                  TNZ     s:5253+7

   5253  0 001271   100005 474505                    LDP4    5,AL,PR1
         0 001272   400002 635500                    EPPR5   2,,PR4
         0 001273   200061 455500                    STP5    STREAM_KEY$,,AUTO
         0 001274   001277 710000 0                  TRA     s:5256

   5253  0 001275   100005 634505                    EPPR4   5,AL,PR1
         0 001276   200061 454500                    STP4    STREAM_KEY$,,AUTO

      689     5256    7                       IF SEARCH$KEY.BYTES = STREAM$KEY.BYTES THEN DO;

   5256  0 001277   200060 474500                    LDP4    SEARCH_KEY$,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:89   
         0 001300   400000 236100                    LDQ     0,,PR4
         0 001301   000033 772000                    QRL     27
         0 001302   200061 475500                    LDP5    STREAM_KEY$,,AUTO
         0 001303   000000 622006                    EAX2    0,QL
         0 001304   500000 236100                    LDQ     0,,PR5
         0 001305   000033 772000                    QRL     27
         0 001306   000000 623006                    EAX3    0,QL
         0 001307   040140 106540                    CMPC    fill='040'O
         0 001310   400000 200012                    ADSC9   0,,PR4                   cn=1,n=*X2
         0 001311   500000 200013                    ADSC9   0,,PR5                   cn=1,n=*X3
         0 001312   001350 601000 0                  TNZ     s:5268

      690     5257                               /* .RANGE.START record exists */
      691     5258    7                          SEARCH_RECORD$ = STREAM.PORT$ ->

   5258  0 001313   100001 476500                    LDP6    1,,PR1
         0 001314   200014 236100                    LDQ     LEVEL,,AUTO
         0 001315   000007 402007                    MPY     7,DL
         0 001316   600027 236106                    LDQ     23,QL,PR6
         0 001317   200062 756100                    STQ     SEARCH_RECORD$,,AUTO

      692     5259    7                            VD$PORT.LEVEL.DATA$ (LEVEL);
      693     5260    7                          SKIPPED_BYTES = MAXIMUM (0, SEARCH$RECORD.LENGTH# -

   5260  0 001320   300012 236100                    LDQ     10,,PR3
         0 001321   000022 732000                    QRS     18
         0 001322   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 001323   200062 471500                    LDP1    SEARCH_RECORD$,,AUTO
         0 001324   100002 236100                    LDQ     2,,PR1
         0 001325   000022 732000                    QRS     18
         0 001326   200112 136100                    SBLQ    VIRTUAL_BOR+2,,AUTO
         0 001327   000000 116003                    CMPQ    0,DU
         0 001330   001332 605000 0                  TPL     s:5260+10
         0 001331   000000 236003                    LDQ     0,DU
         0 001332   200057 756100                    STQ     SKIPPED_BYTES,,AUTO

      694     5261    7                            TOS_EVAL_PATT.RANGE.START.POSITION#);
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:90   
      695     5262    7                          TOS_EVAL_PATT.RANGE.START.POSITION# =

   5262  0 001333   100002 220100                    LDX0    2,,PR1
         0 001334   300012 740100                    STX0    10,,PR3

      696     5263    7                            SEARCH$RECORD.LENGTH#;
      697     5264    7                          CALL VDA$LREAD (STREAM, , 1, %TRUE)

   5264  0 001335   000000 476500                    LDP6    0,,PR0
         0 001336   000010 237000 1                  LDAQ    8
         0 001337   200114 757100                    STAQ    VIRTUAL_BOR+4,,AUTO
         0 001340   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001341   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 001342   200112 456500                    STP6    VIRTUAL_BOR+2,,AUTO
         0 001343   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001344   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 001345   000000 701000 xent               TSX1    VDA$LREAD
         0 001346   001711 702000 0                  TSX2    LREAD_FAILED

      698     5265    7                            ALTRET (LREAD_FAILED);
      699     5266    7                          END;

   5266  0 001347   001373 710000 0                  TRA     s:5274

      700     5267    7                       ELSE DO;

      701     5268    7                          CALL VDG$OCLEAR_LOCATION (TOS_EVAL_PATT.RANGE.START);

   5268  0 001350   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001351   000002 036003                    ADLQ    2,DU
         0 001352   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 001353   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001354   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001355   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 001356   000000 011000                    NOP     0

      702     5269    7                          CALL VDG$OCOPY_LOCATION (STREAM.CURRENT,
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:91   

   5269  0 001357   200003 470500                    LDP0    @OPERAND,,AUTO
         0 001360   000000 471500                    LDP1    0,,PR0
         0 001361   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001362   000002 036003                    ADLQ    2,DU
         0 001363   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 001364   100006 633500                    EPPR3   6,,PR1
         0 001365   200112 453500                    STP3    VIRTUAL_BOR+2,,AUTO
         0 001366   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001367   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001370   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 001371   000000 011000                    NOP     0

      703     5270    7                            TOS_EVAL_PATT.RANGE.START);
      704     5271    7                          GOTO MOVE_FORWARD_TO_EOR;

   5271  0 001372   001242 710000 0                  TRA     MOVE_FORWARD_TO_EOR

      705     5272    7                          END;
      706     5273    6                       END;
      707     5274    5                    CALL VDG$OCOPY_LOCATION (STREAM.CURRENT,

   5274  0 001373   200003 470500                    LDP0    @OPERAND,,AUTO
         0 001374   000000 471500                    LDP1    0,,PR0
         0 001375   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001376   000013 036003                    ADLQ    11,DU
         0 001377   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 001400   100006 633500                    EPPR3   6,,PR1
         0 001401   200112 453500                    STP3    VIRTUAL_BOR+2,,AUTO
         0 001402   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001403   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001404   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 001405   001711 702000 0                  TSX2    LREAD_FAILED

      708     5275    5                      TOS_EVAL_PATT.RANGE.ENDD)
      709     5276    5                      ALTRET (OCOPY_LOCATION_FAILED);
      710     5277    5                    END MOVE_FORWARD_TO_EOR;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:92   

   5277  0 001406   001542 710000 0                  TRA     s:5327

      711     5278    4                 ELSE
      712     5279    5   MOVE_BACKWARD_TO_EOR: DO;

   5279  0 001407                       MOVE_BACKWA* null
      713     5280    5                    SKIPPED_BYTES = TOS_EVAL_PATT.RANGE.START.POSITION#;

   5280  0 001407   000012 236100                    LDQ     10,,PR0
         0 001410   000022 732000                    QRS     18
         0 001411   200057 756100                    STQ     SKIPPED_BYTES,,AUTO

      714     5281    5                    TOS_EVAL_PATT.RANGE.ENDD = TOS_EVAL_PATT.RANGE.START;

   5281  0 001412   000100 100500                    MLR     fill='000'O
         0 001413   000002 000044                    ADSC9   2,,PR0                   cn=0,n=36
         0 001414   000013 000044                    ADSC9   11,,PR0                  cn=0,n=36

      715     5282    5                    TOS_EVAL_PATT.RANGE.START = %CLEAR;

   5282  0 001415   000100 100400                    MLR     fill='000'O
         0 001416   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 001417   000002 000044                    ADSC9   2,,PR0                   cn=0,n=36

      716     5283    5                    TOS_EVAL_PATT.RANGE.ENDD.POSITION# = 0;

   5283  0 001420   000000 221003                    LDX1    0,DU
         0 001421   000023 741100                    STX1    19,,PR0

      717     5284    5                    CALL VDA$LREAD (STREAM, , -1, %TRUE)

   5284  0 001422   200003 471500                    LDP1    @OPERAND,,AUTO
         0 001423   100000 473500                    LDP3    0,,PR1
         0 001424   000012 237000 1                  LDAQ    10
         0 001425   200114 757100                    STAQ    VIRTUAL_BOR+4,,AUTO
         0 001426   000001 236000 xsym               LDQ     B_VECTNIL+1
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:93   
         0 001427   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 001430   200112 453500                    STP3    VIRTUAL_BOR+2,,AUTO
         0 001431   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001432   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 001433   000000 701000 xent               TSX1    VDA$LREAD
         0 001434   001711 702000 0                  TSX2    LREAD_FAILED

      718     5285    5                      ALTRET (LREAD_FAILED);
      719     5286                         /* Did we hit BOF? */
      720     5287                         %GETKEY (KEY=TOS_EVAL_PATT.RANGE.START.KEY, INDX=LEVEL-1,
      721     5288                         PTR=SEARCH_KEY$);

   5295  0 001435   200014 235100                    LDA     LEVEL,,AUTO
         0 001436   000001 735000                    ALS     1
         0 001437   200054 470500                    LDP0    @TOS_EVAL_PATT,,AUTO
         0 001440   000000 720105                    LXL0    0,AL,PR0
         0 001441   000002 100003                    CMPX0   2,DU
         0 001442   001447 601000 0                  TNZ     s:5295+10

   5295  0 001443   000001 471505                    LDP1    1,AL,PR0
         0 001444   100002 633500                    EPPR3   2,,PR1
         0 001445   200060 453500                    STP3    SEARCH_KEY$,,AUTO
         0 001446   001454 710000 0                  TRA     s:5306

   5295  0 001447   200014 236100                    LDQ     LEVEL,,AUTO
         0 001450   000023 736000                    QLS     19
         0 001451   000001 036003                    ADLQ    1,DU
         0 001452   200054 036100                    ADLQ    @TOS_EVAL_PATT,,AUTO
         0 001453   200060 756100                    STQ     SEARCH_KEY$,,AUTO

      722     5298                         %GETKEY (KEY=STREAM.CURRENT.KEY, INDX=LEVEL-1,
      723     5299                         PTR=STREAM_KEY$);

   5306  0 001454   200003 471500                    LDP1    @OPERAND,,AUTO
         0 001455   100000 473500                    LDP3    0,,PR1
         0 001456   300004 721105                    LXL1    4,AL,PR3
         0 001457   000002 101003                    CMPX1   2,DU
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:94   
         0 001460   001465 601000 0                  TNZ     s:5306+9

   5306  0 001461   300005 474505                    LDP4    5,AL,PR3
         0 001462   400002 635500                    EPPR5   2,,PR4
         0 001463   200061 455500                    STP5    STREAM_KEY$,,AUTO
         0 001464   001467 710000 0                  TRA     s:5309

   5306  0 001465   300005 634505                    EPPR4   5,AL,PR3
         0 001466   200061 454500                    STP4    STREAM_KEY$,,AUTO

      724     5309    6                    IF SEARCH$KEY.BYTES <= STREAM$KEY.BYTES THEN DO;

   5309  0 001467   200060 474500                    LDP4    SEARCH_KEY$,,AUTO
         0 001470   400000 236100                    LDQ     0,,PR4
         0 001471   000033 772000                    QRL     27
         0 001472   200061 475500                    LDP5    STREAM_KEY$,,AUTO
         0 001473   000000 622006                    EAX2    0,QL
         0 001474   500000 236100                    LDQ     0,,PR5
         0 001475   000033 772000                    QRL     27
         0 001476   000000 623006                    EAX3    0,QL
         0 001477   040140 106540                    CMPC    fill='040'O
         0 001500   500000 200013                    ADSC9   0,,PR5                   cn=1,n=*X3
         0 001501   400000 200012                    ADSC9   0,,PR4                   cn=1,n=*X2
         0 001502   001516 602000 0                  TNC     s:5316

      725     5310                            /* Hit BOF:  both .START and .ENDD get .START position 0 */
      726     5311    6                       CALL VDG$OCOPY_LOCATION (TOS_EVAL_PATT.RANGE.ENDD,

   5311  0 001503   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001504   000002 036003                    ADLQ    2,DU
         0 001505   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 001506   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001507   000013 036003                    ADLQ    11,DU
         0 001510   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 001511   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001512   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001513   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:95   
         0 001514   001711 702000 0                  TSX2    LREAD_FAILED

      727     5312    6                         TOS_EVAL_PATT.RANGE.START)
      728     5313    6                         ALTRET (OCOPY_LOCATION_FAILED);
      729     5314    6                       END;

   5314  0 001515   001542 710000 0                  TRA     s:5327

      730     5315    6                    ELSE DO;

      731     5316    6                       CALL VDG$OCOPY_LOCATION (STREAM.CURRENT,

   5316  0 001516   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001517   000002 036003                    ADLQ    2,DU
         0 001520   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 001521   300006 636500                    EPPR6   6,,PR3
         0 001522   200112 456500                    STP6    VIRTUAL_BOR+2,,AUTO
         0 001523   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001524   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001525   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 001526   001711 702000 0                  TSX2    LREAD_FAILED

      732     5317    6                         TOS_EVAL_PATT.RANGE.START)
      733     5318    6                         ALTRET (OCOPY_LOCATION_FAILED);
      734     5319    6                       SEARCH_RECORD$ = STREAM.PORT$ ->

   5319  0 001527   200003 470500                    LDP0    @OPERAND,,AUTO
         0 001530   000000 471500                    LDP1    0,,PR0
         0 001531   100001 473500                    LDP3    1,,PR1
         0 001532   200014 236100                    LDQ     LEVEL,,AUTO
         0 001533   000007 402007                    MPY     7,DL
         0 001534   300027 236106                    LDQ     23,QL,PR3
         0 001535   200062 756100                    STQ     SEARCH_RECORD$,,AUTO

      735     5320    6                         VD$PORT.LEVEL.DATA$ (LEVEL);
      736     5321    6                       TOS_EVAL_PATT.RANGE.START.POSITION# =

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:96   
   5321  0 001536   200062 474500                    LDP4    SEARCH_RECORD$,,AUTO
         0 001537   400002 220100                    LDX0    2,,PR4
         0 001540   200054 475500                    LDP5    @TOS_EVAL_PATT,,AUTO
         0 001541   500012 740100                    STX0    10,,PR5

      737     5322    6                         SEARCH$RECORD.LENGTH#;
      738     5323    6                       END;

      739     5324    5                    END MOVE_BACKWARD_TO_EOR;

      740     5325    4                 END;

      741     5326
      742     5327    3              IF SKIPPED_BYTES <= TOS_EVAL_PATT.REMAINING_BYTES#

   5327  0 001542   200054 470500                    LDP0    @TOS_EVAL_PATT,,AUTO
         0 001543   200057 236100                    LDQ     SKIPPED_BYTES,,AUTO
         0 001544   000027 116100                    CMPQ    23,,PR0
         0 001545   001564 605400 0                  TPNZ    s:5334
         0 001546   200003 471500                    LDP1    @OPERAND,,AUTO
         0 001547   100003 473500                    LDP3    3,,PR1
         0 001550   300070 236100                    LDQ     56,,PR3
         0 001551   400000 316007                    CANQ    -131072,DL
         0 001552   001556 600000 0                  TZE     s:5330
         0 001553   000023 236100                    LDQ     19,,PR0
         0 001554   400000 316007                    CANQ    -131072,DL
         0 001555   001564 601000 0                  TNZ     s:5334

      743     5328    3                AND NOT (TOS$EVAL.CTRL_REC_MATCHED_EOF
      744     5329    4                AND TOS_EVAL_PATT.RANGE.ENDD.EOF) THEN DO;

      745     5330    4                 FOUND = %TRUE;

   5330  0 001556   400000 236003                    LDQ     -131072,DU
         0 001557   200055 474500                    LDP4    @FOUND,,AUTO
         0 001560   400000 756100                    STQ     0,,PR4

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:97   
      746     5331    4                 TOS_EVAL_PATT.REMAINING_BYTES# =

   5331  0 001561   000027 236100                    LDQ     23,,PR0
         0 001562   200057 136100                    SBLQ    SKIPPED_BYTES,,AUTO
         0 001563   000027 756100                    STQ     23,,PR0

      747     5332    4                   TOS_EVAL_PATT.REMAINING_BYTES# - SKIPPED_BYTES;
      748     5333    4                 END;

      749     5334    3              IF SKIPPED_BYTES <= TOS_EVAL_PATT.REMAINING_BYTES# THEN

   5334  0 001564   200057 236100                    LDQ     SKIPPED_BYTES,,AUTO
         0 001565   000027 116100                    CMPQ    23,,PR0
         0 001566   001653 605400 0                  TPNZ    s:5409

      750     5335    3                 TOS$EVAL.CTRL_REC_MATCHED_EOF = TOS_EVAL_PATT.RANGE.ENDD.EOF;

   5335  0 001567   200003 471500                    LDP1    @OPERAND,,AUTO
         0 001570   100003 473500                    LDP3    3,,PR1
         0 001571   000023 236100                    LDQ     19,,PR0
         0 001572   300070 676100                    ERQ     56,,PR3
         0 001573   400000 376007                    ANQ     -131072,DL
         0 001574   300070 656100                    ERSQ    56,,PR3
         0 001575   001653 710000 0                  TRA     s:5409

      751     5336
      752     5337
      753     5338        /*N*
      754     5339        *N*      CASE (%PS_CURRENT);
      755     5340        *N*        IF TOS_EVAL_PATT.REMAINING_BYTES# = 0 THEN DO;
      756     5341        *N*           \* S_LOC must be BOF (real or virtual) *\
      757     5342        *N*            IF NOT SEARCH_LOC.BOF# THEN
      758     5343        *N*               Set SEARCH_LOC to existing key near its initial value.
      759     5344        *N*                 IF SEARCH_LOC.BOF# THEN DO;
      760     5345        *N*               E_LOC = S_LOC;
      761     5346        *N*               FOUND = %TRUE;
      762     5347        *N*               END;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:98   
      763     5348        *N*            END;
      764     5349        *N*         ELSE DO;
      765     5350        *N*           \*
      766     5351        *N*           * Here we should count the # of recs and bytes between
      767     5352        *N*           *     TOS_EVAL_PATT.RANGE.START and BOF, to guarantee it's within
      768     5353        *N*           *     TOS_EVAL_PATT.REMAINING_RECS# records and .REMAINING_BYTES#
      769     5354        *N*           *     bytes; also we should decrement both counts.
      770     5355        *N*           *\
      771     5356        *N*            SEARCH_LOC = %CLEAR;
      772     5357        *N*            SEARCH_LOC.BOF# = %TRUE;
      773     5358        *N*            E_LOC = SEARCH_LOC;
      774     5359        *N*            FOUND = %TRUE;
      775     5360        *N*            END;
      776     5361        *N*
      777     5362        *N*       CASE (%PS_EOF);
      778     5363        *N*         IF TOS_EVAL_PATT.REMAINING_BYTES# = 0 THEN DO;
      779     5364        *N*            \* S_LOC must be EOF (real or virutal) *\
      780     5365        *N*              IF NOT SEARCH_LOC.EOF THEN
      781     5366        *N*               Set SEARCH_LOC to existing key near its initial value.
      782     5367        *N*                 IF SEARCH_LOC.EOF THEN DO;
      783     5368        *N*               E_LOC = S_LOC;
      784     5369        *N*               FOUND = %TRUE;
      785     5370        *N*               END;
      786     5371        *N*            END;
      787     5372        *N*         ELSE DO;
      788     5373        *N*           \*
      789     5374        *N*           * Here we should count the # of recs and bytes between
      790     5375        *N*           *     SEARCH_LOC and EOF, to guarantee it's within
      791     5376        *N*           *     TOS_EVAL_PATT.REMAINING_RECS# records and .REMAINING_BYTES
      792     5377        *N*           *     bytes; also we should decrement both counts.
      793     5378        *N*           *\
      794     5379        *N*            SEARCH_LOC = %CLEAR;
      795     5380        *N*            SEARCH_LOC.EOF = %TRUE;
      796     5381        *N*            E_LOC = SEARCH_LOC;
      797     5382        *N*            FOUND = %TRUE;
      798     5383        *N*            END;
      799     5384        *N*/
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:99   
      800     5385
      801     5386
      802     5387    3            CASE (%PS_BO_MATCH);

      803     5388    3              IF EVAL_PATT_FOR_EO_MATCH$ ~= ADDR(NIL) THEN

   5388  0 001576   200013 236100                    LDQ     EVAL_PATT_FOR_EO_MATCH$,,AUTO
         0 001577   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001600   001604 600000 0                  TZE     s:5390

      804     5389    3                 CALL VDG$ESCREECH;

   5389  0 001601   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001602   000000 701000 xent               TSX1    VDG$ESCREECH
         0 001603   000000 011000                    NOP     0

      805     5390    3              CALL VDG$OCOPY_LOCATION (TOS_EVAL_PATT.RANGE.START,

   5390  0 001604   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001605   000013 036003                    ADLQ    11,DU
         0 001606   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 001607   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001610   000002 036003                    ADLQ    2,DU
         0 001611   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 001612   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001613   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001614   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 001615   001711 702000 0                  TSX2    LREAD_FAILED

      806     5391    3                TOS_EVAL_PATT.RANGE.ENDD)
      807     5392    3                ALTRET (OCOPY_LOCATION_FAILED);
      808     5393    3              FOUND = %TRUE;

   5393  0 001616   400000 236003                    LDQ     -131072,DU
         0 001617   200055 470500                    LDP0    @FOUND,,AUTO
         0 001620   000000 756100                    STQ     0,,PR0

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:100  
      809     5394    3              EVAL_PATT_FOR_BO_MATCH$ = ADDR(TOS_EVAL_PATT);

   5394  0 001621   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001622   200012 756100                    STQ     EVAL_PATT_FOR_BO_MATCH$,,AUTO
         0 001623   001653 710000 0                  TRA     s:5409

      810     5395
      811     5396
      812     5397    3            CASE (%PS_EO_MATCH);

      813     5398    3              CALL VDG$OCOPY_LOCATION (TOS_EVAL_PATT.RANGE.START,

   5398  0 001624   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001625   000013 036003                    ADLQ    11,DU
         0 001626   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 001627   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001630   000002 036003                    ADLQ    2,DU
         0 001631   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 001632   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001633   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001634   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 001635   001711 702000 0                  TSX2    LREAD_FAILED

      814     5399    3                TOS_EVAL_PATT.RANGE.ENDD)
      815     5400    3                ALTRET (OCOPY_LOCATION_FAILED);
      816     5401    3              FOUND = %TRUE;

   5401  0 001636   400000 236003                    LDQ     -131072,DU
         0 001637   200055 470500                    LDP0    @FOUND,,AUTO
         0 001640   000000 756100                    STQ     0,,PR0

      817     5402    3              EVAL_PATT_FOR_EO_MATCH$ = ADDR(TOS_EVAL_PATT);

   5402  0 001641   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001642   200013 756100                    STQ     EVAL_PATT_FOR_EO_MATCH$,,AUTO
         0 001643   001653 710000 0                  TRA     s:5409

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:101  
      818     5403
      819     5404    3            CASE (ELSE);

      820     5405    3              CALL VDG$ESCREECH (PATT_ENTRY.CODE#);

   5405  0 001644   200053 236100                    LDQ     @PATT_ENTRY,,AUTO
         0 001645   400000 036007                    ADLQ    -131072,DL
         0 001646   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 001647   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001650   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001651   000000 701000 xent               TSX1    VDG$ESCREECH
         0 001652   000000 011000                    NOP     0

      821     5406
      822     5407    3            END PATT_ENTRY_CODE_CASES;

      823     5408
      824     5409    3           IF FOUND THEN DO;

   5409  0 001653   200055 470500                    LDP0    @FOUND,,AUTO
         0 001654   000000 234100                    SZN     0,,PR0
         0 001655   001707 605000 0                  TPL     s:5421

      825     5410    3              CALL VDG$COMPARE_LOC_W_PTRS (TOS_EVAL_PATT.RANGE.START,

   5410  0 001656   200033 631500                    EPPR1   ENCLOSING_END_PTRS,,AUTO
         0 001657   200114 451500                    STP1    VIRTUAL_BOR+4,,AUTO
         0 001660   200026 633500                    EPPR3   ENCLOSING_START_PTRS,,AUTO
         0 001661   200113 453500                    STP3    VIRTUAL_BOR+3,,AUTO
         0 001662   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001663   000002 036003                    ADLQ    2,DU
         0 001664   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 001665   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001666   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 001667   000000 701000 xent               TSX1    VDG$COMPARE_LOC_W_PTRS
         0 001670   001705 702000 0                  TSX2    NOT_WITHIN_RANGE

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:102  
      826     5411    3                ENCLOSING_START_PTRS, ENCLOSING_END_PTRS)
      827     5412    3                ALTRET (NOT_WITHIN_RANGE);
      828     5413    3              CALL VDG$COMPARE_LOC_W_PTRS (TOS_EVAL_PATT.RANGE.ENDD,

   5413  0 001671   200033 630500                    EPPR0   ENCLOSING_END_PTRS,,AUTO
         0 001672   200114 450500                    STP0    VIRTUAL_BOR+4,,AUTO
         0 001673   200026 631500                    EPPR1   ENCLOSING_START_PTRS,,AUTO
         0 001674   200113 451500                    STP1    VIRTUAL_BOR+3,,AUTO
         0 001675   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001676   000013 036003                    ADLQ    11,DU
         0 001677   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 001700   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001701   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 001702   000000 701000 xent               TSX1    VDG$COMPARE_LOC_W_PTRS
         0 001703   001705 702000 0                  TSX2    NOT_WITHIN_RANGE
         0 001704   001707 710000 0                  TRA     s:5421

      829     5414    3                ENCLOSING_START_PTRS, ENCLOSING_END_PTRS)
      830     5415    4              WHENALTRETURN DO;

   5405  0 001705                       NOT_WITHIN_* null
      831     5416    4   NOT_WITHIN_RANGE:;
      832     5417    4                 FOUND = %FALSE;

   5417  0 001705   200055 470500                    LDP0    @FOUND,,AUTO
         0 001706   000000 450100                    STZ     0,,PR0

      833     5418    4                 END;

      834     5419    3              END;

      835     5420
      836     5421    2           RETURN;

   5421  0 001707   200052 221300                    LDX1  ! MOVE_POSITIONS+1,,AUTO
         0 001710   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:103  
      837     5422
      838     5423
      839     5424    2   LREAD_FAILED: ;

   5424  0 001711                       LREAD_FAILED null
   5424  0 001711                       FIND_STRING* null
   5424  0 001711                       IMOVE_BY_PO* null
   5424  0 001711                       OCOPY_LOCAT* null
      840     5425    2   FIND_STRING_FAILED: ;
      841     5426    2   IMOVE_BY_POSITIONS_FAILED: ;
      842     5427    2   OCOPY_LOCATION_FAILED: ;
      843     5428    2           ALTRETURN;

   5428  0 001711   200052 221300                    LDX1  ! MOVE_POSITIONS+1,,AUTO
         0 001712   000000 702211                    TSX2  ! 0,X1

      844     5429
      845     5430
      846     5431                %BOX (TITLE=FIND_STRING, PAGE=YES);
              5439    2
              5443    2   /***************************************************************************
              5445    2    *                                                                         *
              5449    2            *                                FIND_STRING                             *
              5451    2            *                                                                        *
              5453    2          ***************************************************************************/

      847     5457
      848     5458        /*I* NAME: FIND_STRING
      849     5459            PARAMETERS:
      850     5460                NONE - uses the FIND_SYMBOL parameters.
      851     5461            INPUT:
      852     5462                STREAM - The stream to use.
      853     5463                ENCLOSING_START_PTRS, ENCLOSING_END_PTRS - VD$LOCATION_PTRS
      854     5464                    containing the bounds of the enclosing block for the
      855     5465                    search.
      856     5466                LEVEL - Level of file structure to search.
      857     5467                VD_$CASE - Current value of $CASE predefined variable.  Value ~= 0
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:104  
      858     5468                    means that "alphabetic case matters":  do exact comparisons to
      859     5469                    file data; value = 0 means case doesn't matter:  do
      860     5470                    case-insensitive searches.
      861     5471            OUTPUT:
      862     5472                FOUND will contain %TRUE if we found a match, %FALSE otherwise.
      863     5473                If a match was found:
      864     5474                    TOS_EVAL_PATT.RANGE.START will point to the start of the matching
      865     5475                        data in the file.
      866     5476                    .RANGE.ENDD will point to the end of the matching data.
      867     5477                    .REMAINING_RECS# will be decremented if any additional records
      868     5478                        were read to find the complete match; it will not
      869     5479                        be decremented beyond 0.
      870     5480                    .REMAINING_BYTES# will be decremented by the number of bytes
      871     5481                        actually skipped, plus the length of the literal that
      872     5482                        was matched.  This new value is then valid if we
      873     5483                        backtrack to this VD$EVAL_PATTERN to find another
      874     5484                        match for this literal.
      875     5485                If a match was not found, the above three fields will not
      876     5486                    contain any useful information.
      877     5487            DESCRIPTION:
      878     5488                Read a record.  The first "record" is the remainder of the
      879     5489                    TOS_EVAL_PATT.RANGE.START record, from .POSITION# thru to the
      880     5490                    start or end (backward or forward search) of the record.
      881     5491                    If .RANGE.START starts out pointing to a non-existent location,
      882     5492                    then force it forward to the next existing location, or EOF.
      883     5493                Guarantee the .RANGE.START location is within the ENCLOSING boundary
      884     5494                    in the direction we're searching; if not, the match fails.
      885     5495                Call INDEX to see if the literal is entirely contained
      886     5496                    within the record; also make sure it starts within the
      887     5497                    range of the remainder of .REMAINING_BYTES#; if so, set
      888     5498                    .RANGE.START and .ENDD appropriately and return FOUND = %TRUE.
      889     5499                If INDEX couldn't find the literal, we still have to
      890     5500                    see if literal matches data that crosses a record
      891     5501                    boundary.  For each match of the first byte
      892     5502                    of the literal which appears in that portion of the
      893     5503                    record from <start or end of record> +/- LENGTHC(literal)
      894     5504                    thru <start or end of record>, call
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:105  
      895     5505                    MATCH_LITERAL_ACROSS_RECORDS to see if we find a
      896     5506                    match.
      897     5507                If we find no matches starting in this record and crossing
      898     5508                    its start or end, then check our .REMAINING_RECS# and
      899     5509                    .REMAINING_BYTES# counts:  if neither is zero, decrement the
      900     5510                    remaining .REMAINING_BYTES# count by the length of the record
      901     5511                    just scanned, and decrement the .REMAINING_RECS# count
      902     5512                    by one.  Go to the top of the search loop to try the
      903     5513                    next sequential record.
      904     5514        */
      905     5515
      906     5516    2   FIND_STRING: PROC ALTRET;

   5516  0 001713   200064 741300       FIND_STRING  STX1  ! WILD_LOC$+1,,AUTO

      907     5517
      908     5518    3   DCL PORT$ PTR;
      909     5519    3   DCL SEARCH_LOCATION$ PTR;
      910     5520    3   DCL SEARCH_RELATIVE SBIN;
      911     5521        %VD$KEY (NAME=FIRST_SEARCH_KEY, STCLASS=AUTO);
      912     5535    3   DCL FIRST_SEARCH_KEY$ PTR;
      913     5536        %VD$KEY (NAME=ORIGINAL_KEY, STCLASS=AUTO);
      914     5550        %VD$NODE_DESC (NAME=SEARCH_NODE, STCLASS=AUTO);
      915     5592    3   DCL N_WDS UBIN;
      916     5593    3   DCL BOUND_PTRS$ PTR;
      917     5594    3   DCL S_POS SBIN;
      918     5595    3   DCL MATCH_POS SBIN;
      919     5596    3   DCL ORIG_REC_LEN SBIN;
      920     5597    3   DCL VIRTUAL_BOR SBIN;
      921     5598
      922     5599
      923     5600        %VD$LOCATION (NAME=SEARCH$LOCATION, STCLASS="BASED(SEARCH_LOCATION$)");
      924     5628        %VD$TEXTC (NAME=FIRST$SEARCH_KEY, STCLASS="BASED(FIRST_SEARCH_KEY$)");
      925     5651        %VD$BUFFER (NAME=SEARCH$DATA, STCLASS="BASED(SEARCH_NODE.DATA$)");
      926     5709        %VD$LOCATION_PTRS (NAME=BOUND$PTRS, STCLASS="BASED(BOUND_PTRS$)");
      927     5724        %VD$PORT (NAME=PORT, STCLASS="BASED(PORT$)");
      928     5822        %VD$BUFFER;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:106  
      929     5880
      930     5881
      931     5882
      932     5883                /*
      933     5884                *   In the following loop, TOS_EVAL_PATT.RANGE.START specifies our
      934     5885                *       current location, and SEARCH_NODE contains the
      935     5886                *       TOS_EVAL_PATT.RANGE.START record.
      936     5887                */
      937     5888
      938     5889    3           PORT$ = STREAM.PORT$;

   5889  0 001714   200003 470500                    LDP0    @OPERAND,,AUTO
         0 001715   000000 471500                    LDP1    0,,PR0
         0 001716   100001 236100                    LDQ     1,,PR1
         0 001717   200065 756100                    STQ     PORT$,,AUTO

      939     5890    3           SEARCH_LOCATION$ = ADDR(TOS_EVAL_PATT.RANGE.START);

   5890  0 001720   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 001721   000002 036003                    ADLQ    2,DU
         0 001722   200066 756100                    STQ     SEARCH_LOCATION$,,AUTO

      940     5891    3           SEARCH_RELATIVE = 0;

   5891  0 001723   200067 450100                    STZ     SEARCH_RELATIVE,,AUTO

      941     5892                %COPYKEY (FKEY=TOS_EVAL_PATT.RANGE.START.KEY, FINDX=LEVEL-1,
      942     5893                TKEY=FIRST_SEARCH_KEY);

   5906  0 001724   200014 235100                    LDA     LEVEL,,AUTO
         0 001725   000003 735000                    ALS     3
         0 001726   200054 471500                    LDP1    @TOS_EVAL_PATT,,AUTO
         0 001727   000100 100505                    MLR     fill='000'O
         0 001730   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=8
         0 001731   200070 000010                    ADSC9   FIRST_SEARCH_KEY,,AUTO   cn=0,n=8

   5906  0 001732   200014 235100                    LDA     LEVEL,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:107  
         0 001733   000001 735000                    ALS     1
         0 001734   100000 720105                    LXL0    0,AL,PR1
         0 001735   000002 100003                    CMPX0   2,DU
         0 001736   001752 601000 0                  TNZ     s:5909

   5906  0 001737   100001 473505                    LDP3    1,AL,PR1
         0 001740   200071 634500                    EPPR4   FIRST_SEARCH_KEY+1,,AUTO
         0 001741   200113 454500                    STP4    VIRTUAL_BOR+3,,AUTO
         0 001742   200112 453500                    STP3    VIRTUAL_BOR+2,,AUTO
         0 001743   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 001744   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001745   000000 701000 xent               TSX1    VDG$OCOPY
         0 001746   001750 702000 0                  TSX2    s:5907
         0 001747   001752 710000 0                  TRA     s:5909

   5907  0 001750   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
         0 001751   000000 702211                    TSX2  ! 0,X1

      943     5909    3           SEARCH_NODE = %CLEAR;

   5909  0 001752   000100 100400                    MLR     fill='000'O
         0 001753   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 001754   200075 000030                    ADSC9   SEARCH_NODE,,AUTO        cn=0,n=24

      944     5910    3           SEARCH_NODE.DATA$ = ADDR(NIL);

   5910  0 001755   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001756   200101 756100                    STQ     SEARCH_NODE+4,,AUTO

      945     5911    3           ORIGINAL_KEY = %CLEAR;

   5911  0 001757   200073 450100                    STZ     ORIGINAL_KEY,,AUTO
         0 001760   200074 450100                    STZ     ORIGINAL_KEY+1,,AUTO

      946     5912
      947     5913    3   EACH_RECORD:
      948     5914    4           DO %FOREVER;    /* Match or exceeding a limit will exit loop */
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:108  

   5914  0 001761                       EACH_RECORD  null
      949     5915                   /*
      950     5916                   *  At top of each iteration of loop:
      951     5917                   *    SEARCH_LOCATION$ either points to the search-start location
      952     5918                   *        (first time only), or is NIL to read relative (all other
      953     5919                   *        iterations).  The first time, SEARCH$LOCATION.POSITION#:
      954     5920                   *        If we're moving forward, .POSITION# says where to start
      955     5921                   *          searching in the record.  This may be > 0, telling us to
      956     5922                   *          search just the end portion of the first record.
      957     5923                   *        If we're moving backward, .POSITION# says where to start
      958     5924                   *          searching in the record (the virtual end of the record).
      959     5925                   *          This is usually > 0, telling us to search just the
      960     5926                   *          beginning portion of the first record.  Note
      961     5927                   *          that we're looking for a match up to but not including
      962     5928                   *          the .POSITION# position (since that position is off the
      963     5929                   *          end of the "record").
      964     5930                   *    SEARCH_RELATIVE is either 0 to read the SEARCH$LOCATION record,
      965     5931                   *        or 1 or -1 to read forward or backward sequentially.
      966     5932                   *    SEARCH_NODE is %CLEAR.
      967     5933                   */
      968     5934
      969     5935    5              IF SEARCH_RELATIVE < 0 THEN DO;

   5935  0 001761   200067 235100                    LDA     SEARCH_RELATIVE,,AUTO
         0 001762   002013 605000 0                  TPL     s:5955

      970     5936                      /* Save a copy of original position for BO-enclosing check */
      971     5937                      %COPYKEY (FKEY=STREAM.CURRENT.KEY, FINDX=LEVEL-1,
      972     5938                      TKEY=ORIGINAL_KEY);

   5951  0 001763   200003 470500                    LDP0    @OPERAND,,AUTO
         0 001764   000000 471500                    LDP1    0,,PR0
         0 001765   200014 236100                    LDQ     LEVEL,,AUTO
         0 001766   000003 736000                    QLS     3
         0 001767   000100 100506                    MLR     fill='000'O
         0 001770   100004 000010                    ADSC9   4,Q,PR1                  cn=0,n=8
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:109  
         0 001771   200073 000010                    ADSC9   ORIGINAL_KEY,,AUTO       cn=0,n=8

   5951  0 001772   000000 471500                    LDP1    0,,PR0
         0 001773   200014 235100                    LDA     LEVEL,,AUTO
         0 001774   000001 735000                    ALS     1
         0 001775   100004 720105                    LXL0    4,AL,PR1
         0 001776   000002 100003                    CMPX0   2,DU
         0 001777   002013 601000 0                  TNZ     s:5955

   5951  0 002000   100005 473505                    LDP3    5,AL,PR1
         0 002001   200074 634500                    EPPR4   ORIGINAL_KEY+1,,AUTO
         0 002002   200113 454500                    STP4    VIRTUAL_BOR+3,,AUTO
         0 002003   200112 453500                    STP3    VIRTUAL_BOR+2,,AUTO
         0 002004   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 002005   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 002006   000000 701000 xent               TSX1    VDG$OCOPY
         0 002007   002011 702000 0                  TSX2    s:5952
         0 002010   002013 710000 0                  TRA     s:5955

   5952  0 002011   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
         0 002012   000000 702211                    TSX2  ! 0,X1

      973     5954    5                 END;

      974     5955    4              CALL VDE$RREAD (STREAM, TOS$EVAL.ENCLOSING, SEARCH$LOCATION,

   5955  0 002013   200003 470500                    LDP0    @OPERAND,,AUTO
         0 002014   000000 471500                    LDP1    0,,PR0
         0 002015   000003 473500                    LDP3    3,,PR0
         0 002016   200067 634500                    EPPR4   SEARCH_RELATIVE,,AUTO
         0 002017   200115 454500                    STP4    VIRTUAL_BOR+5,,AUTO
         0 002020   200066 236100                    LDQ     SEARCH_LOCATION$,,AUTO
         0 002021   200114 756100                    STQ     VIRTUAL_BOR+4,,AUTO
         0 002022   300002 635500                    EPPR5   2,,PR3
         0 002023   200113 455500                    STP5    VIRTUAL_BOR+3,,AUTO
         0 002024   200112 451500                    STP1    VIRTUAL_BOR+2,,AUTO
         0 002025   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:110  
         0 002026   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 002027   000000 701000 xent               TSX1    VDE$RREAD
         0 002030   003321 702000 0                  TSX2    RREAD_FAILED

      975     5956    4                SEARCH_RELATIVE)
      976     5957    4                ALTRET (RREAD_FAILED);
      977     5958    5              IF SEARCH_RELATIVE < 0 THEN DO;

   5958  0 002031   200067 235100                    LDA     SEARCH_RELATIVE,,AUTO
         0 002032   002100 605000 0                  TPL     s:5986

      978     5959                      /* Searching backward, we have to check for BO enclosing */
      979     5960                      %GETKEY (KEY=ORIGINAL_KEY, PTR=SEARCH_KEY$);

   5967  0 002033   200073 720100                    LXL0    ORIGINAL_KEY,,AUTO
         0 002034   000002 100003                    CMPX0   2,DU
         0 002035   002042 601000 0                  TNZ     s:5967+7

   5967  0 002036   200074 236100                    LDQ     ORIGINAL_KEY+1,,AUTO
         0 002037   000002 036003                    ADLQ    2,DU
         0 002040   200060 756100                    STQ     SEARCH_KEY$,,AUTO
         0 002041   002044 710000 0                  TRA     s:5977

   5967  0 002042   200074 630500                    EPPR0   ORIGINAL_KEY+1,,AUTO
         0 002043   200060 450500                    STP0    SEARCH_KEY$,,AUTO

      980     5970                      %GETKEY (KEY=STREAM.CURRENT.KEY, INDX=LEVEL-1, PTR=STREAM_KEY$);

   5977  0 002044   200003 470500                    LDP0    @OPERAND,,AUTO
         0 002045   000000 471500                    LDP1    0,,PR0
         0 002046   200014 236100                    LDQ     LEVEL,,AUTO
         0 002047   000001 736000                    QLS     1
         0 002050   100004 721106                    LXL1    4,QL,PR1
         0 002051   000002 101003                    CMPX1   2,DU
         0 002052   002057 601000 0                  TNZ     s:5977+11

   5977  0 002053   100005 473506                    LDP3    5,QL,PR1
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:111  
         0 002054   300002 634500                    EPPR4   2,,PR3
         0 002055   200061 454500                    STP4    STREAM_KEY$,,AUTO
         0 002056   002061 710000 0                  TRA     s:5980

   5977  0 002057   100005 633506                    EPPR3   5,QL,PR1
         0 002060   200061 453500                    STP3    STREAM_KEY$,,AUTO

      981     5980    5                 IF STREAM.CURRENT.EOF

   5980  0 002061   100016 236100                    LDQ     14,,PR1
         0 002062   400000 316007                    CANQ    -131072,DL
         0 002063   003230 601000 0                  TNZ     s:6347
         0 002064   200061 473500                    LDP3    STREAM_KEY$,,AUTO
         0 002065   300000 236100                    LDQ     0,,PR3
         0 002066   000033 772000                    QRL     27
         0 002067   200060 474500                    LDP4    SEARCH_KEY$,,AUTO
         0 002070   000000 621006                    EAX1    0,QL
         0 002071   400000 236100                    LDQ     0,,PR4
         0 002072   000033 772000                    QRL     27
         0 002073   000000 622006                    EAX2    0,QL
         0 002074   040140 106540                    CMPC    fill='040'O
         0 002075   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         0 002076   400000 200012                    ADSC9   0,,PR4                   cn=1,n=*X2
         0 002077   003230 603000 0                  TRC     s:6347

      982     5981    5                   OR STREAM$KEY.BYTES >= SEARCH$KEY.BYTES THEN
      983     5982    5                    EXIT EACH_RECORD;  /* Hit BO enclosing:  match failed */
      984     5983    5                 END;

      985     5984                   /* Don't let VDE$RGET do left-truncating - we want proper positions
      986     5985                      in the data buffer, and do our own bounds checking. */
      987     5986    4              TOS$EVAL.ENCLOSING.START.POSITION# = 0;

   5986  0 002100   200003 470500                    LDP0    @OPERAND,,AUTO
         0 002101   000003 471500                    LDP1    3,,PR0
         0 002102   000000 220003                    LDX0    0,DU
         0 002103   100012 740100                    STX0    10,,PR1
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:112  

      988     5987    4              CALL VDE$RGET (STREAM, TOS$EVAL.ENCLOSING, SEARCH_NODE)

   5987  0 002104   000000 471500                    LDP1    0,,PR0
         0 002105   000003 473500                    LDP3    3,,PR0
         0 002106   200075 634500                    EPPR4   SEARCH_NODE,,AUTO
         0 002107   200114 454500                    STP4    VIRTUAL_BOR+4,,AUTO
         0 002110   300002 635500                    EPPR5   2,,PR3
         0 002111   200113 455500                    STP5    VIRTUAL_BOR+3,,AUTO
         0 002112   200112 451500                    STP1    VIRTUAL_BOR+2,,AUTO
         0 002113   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 002114   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 002115   000000 701000 xent               TSX1    VDE$RGET
         0 002116   003321 702000 0                  TSX2    RREAD_FAILED

      989     5988    4                ALTRET (RGET_FAILED);
      990     5989    4              TOS$EVAL.ENCLOSING.START.POSITION# = ENCLOSING_START_PTRS.POSITION#;

   5989  0 002117   200003 470500                    LDP0    @OPERAND,,AUTO
         0 002120   000003 471500                    LDP1    3,,PR0
         0 002121   200026 220100                    LDX0    ENCLOSING_START_PTRS,,AUTO
         0 002122   100012 740100                    STX0    10,,PR1

      991     5990    5              IF SEARCH_NODE.KEY = %CLEAR THEN DO;

   5990  0 002123   000000 106500                    CMPC    fill='000'O
         0 002124   200075 000010                    ADSC9   SEARCH_NODE,,AUTO        cn=0,n=8
         0 002125   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
         0 002126   002136 601000 0                  TNZ     s:6004

      992     5991                      /* Hit end of enclosing block */
      993     5992    5                 IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN

   5992  0 002127   200054 471500                    LDP1    @TOS_EVAL_PATT,,AUTO
         0 002130   100025 720100                    LXL0    21,,PR1
         0 002131   000001 100003                    CMPX0   1,DU
         0 002132   003230 600000 0                  TZE     s:6347
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:113  

      994     5993    5                    EXIT EACH_RECORD;      /* Match failed */
      995     5994    5                 TOS_EVAL_PATT.RANGE.START.EOF = %FALSE;

   5994  0 002133   000014 236000 1                  LDQ     12
         0 002134   100012 356100                    ANSQ    10,,PR1

      996     5995    5                 GOTO ON_TO_NEXT_RECORD;    /* Move backwards from EOB */

   5995  0 002135   003071 710000 0                  TRA     ON_TO_NEXT_RECORD

      997     5996    5                 END;
      998     5997                   %CLEARKEY (KEY=TOS_EVAL_PATT.RANGE.START.KEY, INDX=LEVEL-1);

   6004  0 002136   200014 235100                    LDA     LEVEL,,AUTO
         0 002137   000001 735000                    ALS     1
         0 002140   200054 471500                    LDP1    @TOS_EVAL_PATT,,AUTO
         0 002141   100000 720105                    LXL0    0,AL,PR1
         0 002142   000002 100003                    CMPX0   2,DU
         0 002143   002155 601000 0                  TNZ     s:6005+2

   6004  0 002144   100001 473505                    LDP3    1,AL,PR1
         0 002145   200112 453500                    STP3    VIRTUAL_BOR+2,,AUTO
         0 002146   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 002147   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002150   000000 701000 xent               TSX1    VDG$OFREE
         0 002151   002153 702000 0                  TSX2    s:6005
         0 002152   002155 710000 0                  TRA     s:6005+2

   6005  0 002153   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
         0 002154   000000 702211                    TSX2  ! 0,X1

   6005  0 002155   200014 235100                    LDA     LEVEL,,AUTO
         0 002156   000001 735000                    ALS     1
         0 002157   200054 470500                    LDP0    @TOS_EVAL_PATT,,AUTO
         0 002160   000000 450105                    STZ     0,AL,PR0
         0 002161   000001 450105                    STZ     1,AL,PR0
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:114  

      999     6007    4              TOS_EVAL_PATT.RANGE.START.KEY (LEVEL-1) = SEARCH_NODE.KEY;

   6007  0 002162   000002 735000                    ALS     2
         0 002163   000105 100500                    MLR     fill='000'O
         0 002164   200075 000010                    ADSC9   SEARCH_NODE,,AUTO        cn=0,n=8
         0 002165   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=8

     1000     6008    4              SEARCH_NODE.KEY = %CLEAR;

   6008  0 002166   200075 450100                    STZ     SEARCH_NODE,,AUTO
         0 002167   200076 450100                    STZ     SEARCH_NODE+1,,AUTO

     1001     6009    5              IF VD_$CASE.V# = 0 AND PATT_ENTRY.CODE# = %PS_LITERAL THEN DO;

   6009  0 002170   000003 235000 xsym               LDA     VD_$CASE+3
         0 002171   002205 601000 0                  TNZ     s:6016
         0 002172   200053 471500                    LDP1    @PATT_ENTRY,,AUTO
         0 002173   100000 720100                    LXL0    0,,PR1
         0 002174   000001 100003                    CMPX0   1,DU
         0 002175   002205 601000 0                  TNZ     s:6016

     1002     6010    5                 CALL XLATE (SEARCH$DATA.BYTES, B$XL_UPPER, SEARCH$DATA.BYTES);

   6010  0 002176   200101 473500                    LDP3    SEARCH_NODE+4,,AUTO
         0 002177   300002 221100                    LDX1    2,,PR3
         0 002200   000000 474400 xsym               LDP4    B$XL_UPPER$
         0 002201   040140 160540                    MVT     fill='040'O
         0 002202   300002 400011                    ADSC9   2,,PR3                   cn=2,n=*X1
         0 002203   300002 400011                    ADSC9   2,,PR3                   cn=2,n=*X1
         0 002204   400000 000100                    ARG     0,,PR4

     1003     6011    5                 END;

     1004     6012
     1005     6013                   /*
     1006     6014                   *   Set starting .POSITION# for searching this record.
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:115  
     1007     6015                   */
     1008     6016    5              IF FIRST_SEARCH_KEY ~= %CLEAR THEN DO;

   6016  0 002205   200070 237100                    LDAQ    FIRST_SEARCH_KEY,,AUTO
         0 002206   000016 117000 1                  CMPAQ   14
         0 002207   002310 600000 0                  TZE     s:6065

     1009     6017                      %GETKEY (KEY=TOS_EVAL_PATT.RANGE.START.KEY, INDX=LEVEL-1,
     1010     6018                      PTR=SEARCH_KEY$);

   6025  0 002210   200014 235100                    LDA     LEVEL,,AUTO
         0 002211   000001 735000                    ALS     1
         0 002212   000000 720105                    LXL0    0,AL,PR0
         0 002213   000002 100003                    CMPX0   2,DU
         0 002214   002221 601000 0                  TNZ     s:6025+9

   6025  0 002215   000001 471505                    LDP1    1,AL,PR0
         0 002216   100002 633500                    EPPR3   2,,PR1
         0 002217   200060 453500                    STP3    SEARCH_KEY$,,AUTO
         0 002220   002226 710000 0                  TRA     s:6035

   6025  0 002221   200014 236100                    LDQ     LEVEL,,AUTO
         0 002222   000023 736000                    QLS     19
         0 002223   000001 036003                    ADLQ    1,DU
         0 002224   200054 036100                    ADLQ    @TOS_EVAL_PATT,,AUTO
         0 002225   200060 756100                    STQ     SEARCH_KEY$,,AUTO

     1011     6028                      %GETKEY (KEY=FIRST_SEARCH_KEY, PTR=FIRST_SEARCH_KEY$);

   6035  0 002226   200070 721100                    LXL1    FIRST_SEARCH_KEY,,AUTO
         0 002227   000002 101003                    CMPX1   2,DU
         0 002230   002235 601000 0                  TNZ     s:6035+7

   6035  0 002231   200071 236100                    LDQ     FIRST_SEARCH_KEY+1,,AUTO
         0 002232   000002 036003                    ADLQ    2,DU
         0 002233   200072 756100                    STQ     FIRST_SEARCH_KEY$,,AUTO
         0 002234   002237 710000 0                  TRA     s:6038
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:116  

   6035  0 002235   200071 631500                    EPPR1   FIRST_SEARCH_KEY+1,,AUTO
         0 002236   200072 451500                    STP1    FIRST_SEARCH_KEY$,,AUTO

     1012     6038    6                 IF SEARCH$KEY.BYTES = FIRST$SEARCH_KEY.BYTES THEN DO;

   6038  0 002237   200060 471500                    LDP1    SEARCH_KEY$,,AUTO
         0 002240   100000 236100                    LDQ     0,,PR1
         0 002241   000033 772000                    QRL     27
         0 002242   200072 473500                    LDP3    FIRST_SEARCH_KEY$,,AUTO
         0 002243   000000 622006                    EAX2    0,QL
         0 002244   300000 236100                    LDQ     0,,PR3
         0 002245   000033 772000                    QRL     27
         0 002246   000000 623006                    EAX3    0,QL
         0 002247   040140 106540                    CMPC    fill='040'O
         0 002250   100000 200012                    ADSC9   0,,PR1                   cn=1,n=*X2
         0 002251   300000 200013                    ADSC9   0,,PR3                   cn=1,n=*X3
         0 002252   002302 601000 0                  TNZ     s:6058

     1013     6039                         /* Use only part of first record */
     1014     6040    7                    IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN DO;

   6040  0 002253   000025 724100                    LXL4    21,,PR0
         0 002254   000001 104003                    CMPX4   1,DU
         0 002255   002263 601000 0                  TNZ     s:6046

     1015     6041    7                       IF TOS_EVAL_PATT.RANGE.START.POSITION# >=

   6041  0 002256   000012 225100                    LDX5    10,,PR0
         0 002257   200101 474500                    LDP4    SEARCH_NODE+4,,AUTO
         0 002260   400002 105100                    CMPX5   2,,PR4
         0 002261   003071 605000 0                  TPL     ON_TO_NEXT_RECORD

     1016     6042    7                         SEARCH$DATA.LENGTH# THEN
     1017     6043    7                          GOTO ON_TO_NEXT_RECORD;  /* Move to existing loc */
     1018     6044    7                       END;

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:117  
   6044  0 002262   002321 710000 0                  TRA     s:6075

     1019     6045    7                    ELSE DO;

     1020     6046    7                       SEARCH$DATA.LENGTH# = MINIMUM (SEARCH$DATA.LENGTH#,

   6046  0 002263   000012 236100                    LDQ     10,,PR0
         0 002264   000022 732000                    QRS     18
         0 002265   200101 474500                    LDP4    SEARCH_NODE+4,,AUTO
         0 002266   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 002267   400002 236100                    LDQ     2,,PR4
         0 002270   000022 732000                    QRS     18
         0 002271   200112 116100                    CMPQ    VIRTUAL_BOR+2,,AUTO
         0 002272   002274 604400 0                  TMOZ    s:6046+9
         0 002273   200112 236100                    LDQ     VIRTUAL_BOR+2,,AUTO
         0 002274   000000 620006                    EAX0    0,QL
         0 002275   400002 740100                    STX0    2,,PR4

     1021     6047    7                         TOS_EVAL_PATT.RANGE.START.POSITION#);
     1022     6048    7                       TOS_EVAL_PATT.RANGE.START.POSITION# = SEARCH$DATA.LENGTH#;

   6048  0 002276   200101 474500                    LDP4    SEARCH_NODE+4,,AUTO
         0 002277   400002 220100                    LDX0    2,,PR4
         0 002300   000012 740100                    STX0    10,,PR0

     1023     6049    7                       END;

     1024     6050    6                    END;

   6050  0 002301   002321 710000 0                  TRA     s:6075

     1025     6051    6                 ELSE DO;

     1026     6052                         /*
     1027     6053                         *  FIRST_SEARCH_KEY record doesn't exist - the record we got
     1028     6054                         *     is the record following the FIRST_SEARCH_KEY record.
     1029     6055                         *  If we're moving forward, use all of this record;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:118  
     1030     6056                         *  If we're moving backward, skip this record.
     1031     6057                         */
     1032     6058    6                    IF TOS_EVAL_PATT.DIRECTION# = %DIR_BACKWARD THEN

   6058  0 002302   000025 724100                    LXL4    21,,PR0
         0 002303   000002 104003                    CMPX4   2,DU
         0 002304   003071 600000 0                  TZE     ON_TO_NEXT_RECORD

     1033     6059    6                       GOTO ON_TO_NEXT_RECORD;
     1034     6060    6                    TOS_EVAL_PATT.RANGE.START.POSITION# = 0;

   6060  0 002305   000000 225003                    LDX5    0,DU
         0 002306   000012 745100                    STX5    10,,PR0

     1035     6061    6                    END;

     1036     6062    5                 END;

   6062  0 002307   002321 710000 0                  TRA     s:6075

     1037     6063    5              ELSE DO;

     1038     6064                      /* Not first time thru loop:  use entire record */
     1039     6065    5                 IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN

   6065  0 002310   000025 720100                    LXL0    21,,PR0
         0 002311   000001 100003                    CMPX0   1,DU
         0 002312   002316 601000 0                  TNZ     s:6068

     1040     6066    5                    TOS_EVAL_PATT.RANGE.START.POSITION# = 0;

   6066  0 002313   000000 221003                    LDX1    0,DU
         0 002314   000012 741100                    STX1    10,,PR0
         0 002315   002321 710000 0                  TRA     s:6075

     1041     6067    5                 ELSE
     1042     6068    5                    TOS_EVAL_PATT.RANGE.START.POSITION# = SEARCH$DATA.LENGTH#;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:119  

   6068  0 002316   200101 471500                    LDP1    SEARCH_NODE+4,,AUTO
         0 002317   100002 221100                    LDX1    2,,PR1
         0 002320   000012 741100                    STX1    10,,PR0

     1043     6069    5                 END;

     1044     6070
     1045     6071
     1046     6072                   /*
     1047     6073                   *   Is this record beyond an ENCLOSING boundary?
     1048     6074                   */
     1049     6075    4              IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN

   6075  0 002321   000025 720100                    LXL0    21,,PR0
         0 002322   000001 100003                    CMPX0   1,DU
         0 002323   002327 601000 0                  TNZ     s:6078

     1050     6076    4                 BOUND_PTRS$ = ADDR(ENCLOSING_END_PTRS);

   6076  0 002324   200033 631500                    EPPR1   ENCLOSING_END_PTRS,,AUTO
         0 002325   200104 451500                    STP1    BOUND_PTRS$,,AUTO
         0 002326   002332 710000 0                  TRA     s:6089

     1051     6077    5              ELSE DO;

     1052     6078    5                 BOUND_PTRS$ = ADDR(ENCLOSING_START_PTRS);

   6078  0 002327   200026 631500                    EPPR1   ENCLOSING_START_PTRS,,AUTO
         0 002330   200104 451500                    STP1    BOUND_PTRS$,,AUTO

     1053     6079    5                 VIRTUAL_BOR = 0;  /* Assumption */

   6079  0 002331   200110 450100                    STZ     VIRTUAL_BOR,,AUTO

     1054     6080    5                 END;

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:120  
     1055     6081                   %GETKEY (KEY=TOS_EVAL_PATT.RANGE.START.KEY, INDX=LEVEL-1,
     1056     6082                   PTR=SEARCH_KEY$);

   6089  0 002332   200014 235100                    LDA     LEVEL,,AUTO
         0 002333   000001 735000                    ALS     1
         0 002334   000000 721105                    LXL1    0,AL,PR0
         0 002335   000002 101003                    CMPX1   2,DU
         0 002336   002343 601000 0                  TNZ     s:6089+9

   6089  0 002337   000001 473505                    LDP3    1,AL,PR0
         0 002340   300002 634500                    EPPR4   2,,PR3
         0 002341   200060 454500                    STP4    SEARCH_KEY$,,AUTO
         0 002342   002350 710000 0                  TRA     s:6092

   6089  0 002343   200014 236100                    LDQ     LEVEL,,AUTO
         0 002344   000023 736000                    QLS     19
         0 002345   000001 036003                    ADLQ    1,DU
         0 002346   200054 036100                    ADLQ    @TOS_EVAL_PATT,,AUTO
         0 002347   200060 756100                    STQ     SEARCH_KEY$,,AUTO

     1057     6092    4              IF BOUND$PTRS.EOF THEN

   6092  0 002350   100000 236100                    LDQ     0,,PR1
         0 002351   400000 316007                    CANQ    -131072,DL
         0 002352   002356 600000 0                  TZE     s:6094

     1058     6093    4                 RCCL = %RCCL_LESS;    /* Any search key is < EOF */

   6093  0 002353   000001 335007                    LCA     1,DL
         0 002354   200046 755100                    STA     RCCL,,AUTO
         0 002355   002431 710000 0                  TRA     s:6129

     1059     6094    4              ELSE IF SEARCH$KEY.BYTES = BOUND$PTRS.KEY$ (LEVEL-1) ->

   6094  0 002356   200060 473500                    LDP3    SEARCH_KEY$,,AUTO
         0 002357   300000 236100                    LDQ     0,,PR3
         0 002360   000033 772000                    QRL     27
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:121  
         0 002361   200014 722100                    LXL2    LEVEL,,AUTO
         0 002362   100000 474512                    LDP4    0,X2,PR1
         0 002363   000000 623006                    EAX3    0,QL
         0 002364   400000 236100                    LDQ     0,,PR4
         0 002365   000033 772000                    QRL     27
         0 002366   000000 624006                    EAX4    0,QL
         0 002367   040140 106540                    CMPC    fill='040'O
         0 002370   300000 200013                    ADSC9   0,,PR3                   cn=1,n=*X3
         0 002371   400000 200014                    ADSC9   0,,PR4                   cn=1,n=*X4
         0 002372   002422 601000 0                  TNZ     s:6119

     1060     6095    5                   VD$TEXTC.BYTES THEN DO;

     1061     6096    5                    IF LEVEL < BOUND$PTRS.COUNT# THEN

   6096  0 002373   100000 236100                    LDQ     0,,PR1
         0 002374   000777 376007                    ANQ     511,DL
         0 002375   200014 116100                    CMPQ    LEVEL,,AUTO
         0 002376   002401 604400 0                  TMOZ    s:6107

     1062     6097    5                       RCCL = %RCCL_EQUAL; /* Searching at < record-level */

   6097  0 002377   200046 450100                    STZ     RCCL,,AUTO
         0 002400   002431 710000 0                  TRA     s:6129

     1063     6098    6                    ELSE DO;

     1064     6099                            /*
     1065     6100                            *  Searching at record level, and this record is on
     1066     6101                            *   boundary:
     1067     6102                            *       o VDE$RGET has already right-truncated this record
     1068     6103                            *           so only in-bounds portion will be searched.
     1069     6104                            *       o Compare positions, to see if we're actually
     1070     6105                            *           beyond the boundary.
     1071     6106                            */
     1072     6107    6                       IF TOS_EVAL_PATT.DIRECTION# ~= %DIR_FORWARD THEN

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:122  
   6107  0 002401   000001 100003                    CMPX0   1,DU
         0 002402   002406 600000 0                  TZE     s:6109

     1073     6108    6                          VIRTUAL_BOR = BOUND$PTRS.POSITION#;

   6108  0 002403   100000 236100                    LDQ     0,,PR1
         0 002404   000022 732000                    QRS     18
         0 002405   200110 756100                    STQ     VIRTUAL_BOR,,AUTO

     1074     6109    6                       IF TOS_EVAL_PATT.RANGE.START.POSITION# <

   6109  0 002406   000012 225100                    LDX5    10,,PR0
         0 002407   100000 105100                    CMPX5   0,,PR1
         0 002410   002414 605000 0                  TPL     s:6112

     1075     6110    6                         BOUND$PTRS.POSITION# THEN
     1076     6111    6                          RCCL = %RCCL_LESS;

   6111  0 002411   000001 336007                    LCQ     1,DL
         0 002412   200046 756100                    STQ     RCCL,,AUTO
         0 002413   002431 710000 0                  TRA     s:6129

     1077     6112    6                       ELSE IF TOS_EVAL_PATT.RANGE.START.POSITION# >

   6112  0 002414   002420 604400 0                  TMOZ    s:6116

     1078     6113    6                            BOUND$PTRS.POSITION# THEN
     1079     6114    6                             RCCL = %RCCL_GREATER;

   6114  0 002415   000001 236007                    LDQ     1,DL
         0 002416   200046 756100                    STQ     RCCL,,AUTO
         0 002417   002431 710000 0                  TRA     s:6129

     1080     6115    6                          ELSE
     1081     6116    6                             RCCL = %RCCL_EQUAL;

   6116  0 002420   200046 450100                    STZ     RCCL,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:123  

     1082     6117    6                       END;

     1083     6118    5                    END;

   6118  0 002421   002431 710000 0                  TRA     s:6129

     1084     6119    4                 ELSE IF SEARCH$KEY.BYTES > BOUND$PTRS.KEY$ (LEVEL-1) ->

   6119  0 002422   002427 602000 0                  TNC     s:6123
         0 002423   002427 600000 0                  TZE     s:6123

     1085     6120    4                      VD$TEXTC.BYTES THEN
     1086     6121    4                       RCCL = %RCCL_GREATER;

   6121  0 002424   000001 235007                    LDA     1,DL
         0 002425   200046 755100                    STA     RCCL,,AUTO
         0 002426   002431 710000 0                  TRA     s:6129

     1087     6122    4                    ELSE
     1088     6123    4                       RCCL = %RCCL_LESS;

   6123  0 002427   000001 335007                    LCA     1,DL
         0 002430   200046 755100                    STA     RCCL,,AUTO

     1089     6124
     1090     6125                   /*
     1091     6126                   *   Search the record for the literal.
     1092     6127                   */
     1093     6128
     1094     6129    4              IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN

   6129  0 002431   000025 720100                    LXL0    21,,PR0
         0 002432   000001 100003                    CMPX0   1,DU
         0 002433   002704 601000 0                  TNZ     BACKWARD_SEARCH

     1095     6130    5   FORWARD_SEARCH: DO;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:124  

   6130  0 002434                       FORWARD_SEA* null
     1096     6131    5                 IF RCCL >= %RCCL_EQUAL THEN

   6131  0 002434   200046 235100                    LDA     RCCL,,AUTO
         0 002435   003230 605000 0                  TPL     s:6347

     1097     6132    5                    EXIT EACH_RECORD;     /* Hit end of enclosing: match failed */
     1098     6133    5                 IF SEARCH$DATA.LENGTH# = 0 THEN

   6133  0 002436   200101 473500                    LDP3    SEARCH_NODE+4,,AUTO
         0 002437   300002 221100                    LDX1    2,,PR3
         0 002440   002703 600000 0                  TZE     s:6196+1

     1099     6134    5                    EXIT FORWARD_SEARCH;
     1100     6135    5                 IF PATT_ENTRY.CODE# = %PS_VALUE THEN

   6135  0 002441   200053 474500                    LDP4    @PATT_ENTRY,,AUTO
         0 002442   400000 722100                    LXL2    0,,PR4
         0 002443   000002 102003                    CMPX2   2,DU
         0 002444   002464 601000 0                  TNZ     s:6140

     1101     6136    5                    CALL SEARCH (MATCH_POS, RCCL, SEARCH_TABLE.FLAGS,

   6136  0 002445   200112 741100                    STX1    VIRTUAL_BOR+2,,AUTO
         0 002446   000012 121100                    SBLX1   10,,PR0
         0 002447   000012 236100                    LDQ     10,,PR0
         0 002450   000022 732000                    QRS     18
         0 002451   000000 164546                    TCT
         0 002452   300002 400011                    ADSC9   2,Q,PR3                  cn=2,n=*X1
         0 002453   000200 000000 xsym               ARG     VD_STATIC_TEMP+128
         0 002454   200106 000100                    ARG     MATCH_POS,,AUTO
         0 002455   200106 235100                    LDA     MATCH_POS,,AUTO
         0 002456   000033 771000                    ARL     27
         0 002457   200046 755100                    STA     RCCL,,AUTO
         0 002460   200106 551140                    STBA    MATCH_POS,'40'O,AUTO
         0 002461   200106 056100                    ASQ     MATCH_POS,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:125  
         0 002462   003071 606400 0                  TTN     ON_TO_NEXT_RECORD
         0 002463   002630 710000 0                  TRA     FOUND_MATCH

     1102     6137    5                      SEARCH$DATA.BYTES, TOS_EVAL_PATT.RANGE.START.POSITION#)
     1103     6138    5                      ALTRET (ON_TO_NEXT_RECORD);
     1104     6139    6                 ELSE DO;

     1105     6140    6                    CALL INDEX (MATCH_POS, LITERAL.BYTES,

   6140  0 002464   200106 631500                    EPPR1   MATCH_POS,,AUTO
         0 002465   000200 633400 xsym               EPPR3   VD_STATIC_TEMP+128
         0 002466   200047 723100                    LXL3    STRING_LENGTH,,AUTO
         0 002467   200101 470500                    LDP0    SEARCH_NODE+4,,AUTO
         0 002470   000012 220003                    LDX0    10,DU
         0 002471   000000 500510                    A9BD    0,X0,PR0
         0 002472   000000 620011                    EAX0    0,X1
         0 002473   200054 475500                    LDP5    @TOS_EVAL_PATT,,AUTO
         0 002474   500012 236100                    LDQ     10,,PR5
         0 002475   000022 732000                    QRS     18
         0 002476   000000 701000 xent               TSX1    X66_INDEX
         0 002477   002502 710000 0                  TRA     s:6146

     1106     6141    6                      SEARCH$DATA.BYTES, TOS_EVAL_PATT.RANGE.START.POSITION#)
     1107     6142    7                    WHENRETURN DO;

     1108     6143    7                       PART_MATCH = 0; /* Found a complete match */

   6143  0 002500   200050 450100                    STZ     PART_MATCH,,AUTO

     1109     6144    7                       GOTO FOUND_MATCH;

   6144  0 002501   002630 710000 0                  TRA     FOUND_MATCH

     1110     6145    7                       END;
     1111     6146    6                    IF VD_$MATCH_LIMIT.V# <= 1 OR STRING_LENGTH <= 1

   6146  0 002502   000003 235000 xsym               LDA     VD_$MATCH_LIMIT+3
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:126  
         0 002503   000001 115007                    CMPA    1,DL
         0 002504   002703 604400 0                  TMOZ    s:6196+1
         0 002505   200047 236100                    LDQ     STRING_LENGTH,,AUTO
         0 002506   000001 116007                    CMPQ    1,DL
         0 002507   002703 604400 0                  TMOZ    s:6196+1
         0 002510   200054 470500                    LDP0    @TOS_EVAL_PATT,,AUTO
         0 002511   000026 235100                    LDA     22,,PR0
         0 002512   002703 600000 0                  TZE     s:6196+1

     1112     6147    6                      OR TOS_EVAL_PATT.REMAINING_RECS# = 0 THEN
     1113     6148    6                       EXIT FORWARD_SEARCH;
     1114     6149    6                    MATCH_POS = MAXIMUM (TOS_EVAL_PATT.RANGE.START.POSITION#,

   6149  0 002513   200101 471500                    LDP1    SEARCH_NODE+4,,AUTO
         0 002514   100002 236100                    LDQ     2,,PR1
         0 002515   000022 732000                    QRS     18
         0 002516   200047 136100                    SBLQ    STRING_LENGTH,,AUTO
         0 002517   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 002520   000012 236100                    LDQ     10,,PR0
         0 002521   000022 732000                    QRS     18
         0 002522   200112 116100                    CMPQ    VIRTUAL_BOR+2,,AUTO
         0 002523   002525 605000 0                  TPL     s:6149+10
         0 002524   200112 236100                    LDQ     VIRTUAL_BOR+2,,AUTO
         0 002525   200106 756100                    STQ     MATCH_POS,,AUTO

     1115     6150    6                      SEARCH$DATA.LENGTH# - STRING_LENGTH);
     1116     6151    7                    DO %FOREVER;

     1117     6152    7                       CALL INDEX (MATCH_POS, SUBSTR(LITERAL.BYTES,0,1),

   6152  0 002526   200101 470500                    LDP0    SEARCH_NODE+4,,AUTO
         0 002527   000002 220100                    LDX0    2,,PR0
         0 002530   000000 636010                    EAQ     0,X0
         0 002531   000022 732000                    QRS     18
         0 002532   200106 136100                    SBLQ    MATCH_POS,,AUTO
         0 002533   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 002534   200106 236100                    LDQ     MATCH_POS,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:127  
         0 002535   200112 720100                    LXL0    VIRTUAL_BOR+2,,AUTO
         0 002536   200106 235100                    LDA     MATCH_POS,,AUTO
         0 002537   000000 124545                    SCM     mask='000'O
         0 002540   000002 400010                    ADSC9   2,A,PR0                  cn=2,n=*X0
         0 002541   000200 000001 xsym               ADSC9   VD_STATIC_TEMP+128       cn=0,n=1
         0 002542   200106 000100                    ARG     MATCH_POS,,AUTO
         0 002543   200106 056100                    ASQ     MATCH_POS,,AUTO

     1118     6153    7                         SEARCH$DATA.BYTES, MATCH_POS);
     1119     6154    7                       IF MATCH_POS >= SEARCH$DATA.LENGTH#

   6154  0 002544   000002 236100                    LDQ     2,,PR0
         0 002545   000022 732000                    QRS     18
         0 002546   200106 116100                    CMPQ    MATCH_POS,,AUTO
         0 002547   002552 605400 0                  TPNZ    s:6158
         0 002550   200050 235100                    LDA     PART_MATCH,,AUTO
         0 002551   002703 600000 0                  TZE     s:6196+1

     1120     6155    7                         AND PART_MATCH = 0 THEN
     1121     6156                            /* Only match "nothing" if we've matched some so far. */
     1122     6157    7                          EXIT FORWARD_SEARCH;
     1123     6158    7                       IF SUBSTR (SEARCH$DATA.BYTES, MATCH_POS) =

   6158  0 002552   000002 220100                    LDX0    2,,PR0
         0 002553   000000 636010                    EAQ     0,X0
         0 002554   000022 732000                    QRS     18
         0 002555   200106 136100                    SBLQ    MATCH_POS,,AUTO
         0 002556   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 002557   000002 236100                    LDQ     2,,PR0
         0 002560   000022 732000                    QRS     18
         0 002561   200106 136100                    SBLQ    MATCH_POS,,AUTO
         0 002562   200112 720100                    LXL0    VIRTUAL_BOR+2,,AUTO
         0 002563   200106 235100                    LDA     MATCH_POS,,AUTO
         0 002564   000000 621006                    EAX1    0,QL
         0 002565   040040 106545                    CMPC    fill='040'O
         0 002566   000002 400010                    ADSC9   2,A,PR0                  cn=2,n=*X0
         0 002567   000200 000011 xsym               ADSC9   VD_STATIC_TEMP+128       cn=0,n=*X1
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:128  
         0 002570   002573 600000 0                  TZE     s:6167

     1124     6159    7                         SUBSTR (LITERAL.BYTES, 0,
     1125     6160    7                         SEARCH$DATA.LENGTH# - MATCH_POS) THEN EXIT;
     1126     6161    7                       MATCH_POS = MATCH_POS + 1;

   6161  0 002571   200106 054100                    AOS     MATCH_POS,,AUTO

     1127     6162    7                       END;

   6162  0 002572   002526 710000 0                  TRA     s:6152

     1128     6163                         /*
     1129     6164                         * Found a partial match at the end of this record
     1130     6165                         * Set STRING_LENGTH to its length, and bump PART_MATCH
     1131     6166                         */
     1132     6167    6                    S_POS = STRING_LENGTH + PART_MATCH; /* Save original length */

   6167  0 002573   200047 236100                    LDQ     STRING_LENGTH,,AUTO
         0 002574   200050 036100                    ADLQ    PART_MATCH,,AUTO
         0 002575   200105 756100                    STQ     S_POS,,AUTO

     1133     6168    6                    STRING_LENGTH = SEARCH$DATA.LENGTH# - MATCH_POS;

   6168  0 002576   000002 236100                    LDQ     2,,PR0
         0 002577   000022 732000                    QRS     18
         0 002600   200106 136100                    SBLQ    MATCH_POS,,AUTO
         0 002601   200047 756100                    STQ     STRING_LENGTH,,AUTO

     1134     6169    6                    PART_MATCH = PART_MATCH + STRING_LENGTH;

   6169  0 002602   200050 036100                    ADLQ    PART_MATCH,,AUTO
         0 002603   200050 756100                    STQ     PART_MATCH,,AUTO

     1135     6170                         /*
     1136     6171                         * Match any blanks with the record boundary.
     1137     6172                         */
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:129  
     1138     6173    7                    DO WHILE SUBSTR(LITERAL.BYTES, STRING_LENGTH, 1) = ' ';

   6173  0 002604   002617 710000 0                  TRA     s:6177

     1139     6174    7                       IF PART_MATCH >= S_POS THEN EXIT;

   6174  0 002605   200050 236100                    LDQ     PART_MATCH,,AUTO
         0 002606   200105 116100                    CMPQ    S_POS,,AUTO
         0 002607   002624 605000 0                  TPL     s:6178

     1140     6175    7                       PART_MATCH = PART_MATCH + 1;

   6175  0 002610   200050 054100                    AOS     PART_MATCH,,AUTO

     1141     6176    7                       LITERAL.BYTES = SUBSTR (LITERAL.BYTES, 1);

   6176  0 002611   200047 720100                    LXL0    STRING_LENGTH,,AUTO
         0 002612   777777 621010                    EAX1    -1,X0
         0 002613   200047 722100                    LXL2    STRING_LENGTH,,AUTO
         0 002614   040040 100440                    MLR     fill='040'O
         0 002615   000200 200011 xsym               ADSC9   VD_STATIC_TEMP+128       cn=1,n=*X1
         0 002616   000200 000012 xsym               ADSC9   VD_STATIC_TEMP+128       cn=0,n=*X2

     1142     6177    7                       END;

   6177  0 002617   200047 235100                    LDA     STRING_LENGTH,,AUTO
         0 002620   040000 106405                    CMPC    fill='040'O
         0 002621   000200 000001 xsym               ADSC9   VD_STATIC_TEMP+128,A     cn=0,n=1
         0 002622   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         0 002623   002605 600000 0                  TZE     s:6174

     1143     6178    6                    IF PART_MATCH >= S_POS THEN PART_MATCH = 0; /* Got it all */

   6178  0 002624   200050 236100                    LDQ     PART_MATCH,,AUTO
         0 002625   200105 116100                    CMPQ    S_POS,,AUTO
         0 002626   002630 604000 0                  TMI     FOUND_MATCH

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:130  
   6178  0 002627   200050 450100                    STZ     PART_MATCH,,AUTO

     1144     6179
     1145     6180    6                    END;

   6178  0 002630                       FOUND_MATCH  null
     1146     6181    5   FOUND_MATCH:  ;
     1147     6182    5                 IF MATCH_POS - TOS_EVAL_PATT.RANGE.START.POSITION# >

   6182  0 002630   200054 470500                    LDP0    @TOS_EVAL_PATT,,AUTO
         0 002631   000012 236100                    LDQ     10,,PR0
         0 002632   000022 732000                    QRS     18
         0 002633   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 002634   200106 236100                    LDQ     MATCH_POS,,AUTO
         0 002635   200112 136100                    SBLQ    VIRTUAL_BOR+2,,AUTO
         0 002636   000027 116100                    CMPQ    23,,PR0
         0 002637   003230 605400 0                  TPNZ    s:6347

     1148     6183    5                   TOS_EVAL_PATT.REMAINING_BYTES# THEN
     1149     6184    5                    EXIT EACH_RECORD;
     1150     6185    5                 TOS_EVAL_PATT.REMAINING_BYTES# = MAXIMUM (0,

   6185  0 002640   000012 236100                    LDQ     10,,PR0
         0 002641   000022 732000                    QRS     18
         0 002642   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 002643   200106 236100                    LDQ     MATCH_POS,,AUTO
         0 002644   200112 136100                    SBLQ    VIRTUAL_BOR+2,,AUTO
         0 002645   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 002646   000027 236100                    LDQ     23,,PR0
         0 002647   200113 136100                    SBLQ    VIRTUAL_BOR+3,,AUTO
         0 002650   200047 136100                    SBLQ    STRING_LENGTH,,AUTO
         0 002651   000000 116003                    CMPQ    0,DU
         0 002652   002654 605000 0                  TPL     s:6185+12
         0 002653   000000 236003                    LDQ     0,DU
         0 002654   000027 756100                    STQ     23,,PR0

     1151     6186    5                   TOS_EVAL_PATT.REMAINING_BYTES# - (MATCH_POS -
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:131  
     1152     6187    5                   TOS_EVAL_PATT.RANGE.START.POSITION#) -
     1153     6188    5                   STRING_LENGTH);
     1154     6189    5                 TOS_EVAL_PATT.RANGE.START.POSITION# = MATCH_POS;

   6189  0 002655   200106 720100                    LXL0    MATCH_POS,,AUTO
         0 002656   000012 740100                    STX0    10,,PR0

     1155     6190    5                 CALL VDG$OCOPY_LOCATION (TOS_EVAL_PATT.RANGE.START,

   6190  0 002657   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 002660   000013 036003                    ADLQ    11,DU
         0 002661   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 002662   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 002663   000002 036003                    ADLQ    2,DU
         0 002664   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 002665   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 002666   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 002667   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 002670   003321 702000 0                  TSX2    RREAD_FAILED

     1156     6191    5                   TOS_EVAL_PATT.RANGE.ENDD)
     1157     6192    5                   ALTRET (OCOPY_LOCATION_FAILED);
     1158     6193    5                 TOS_EVAL_PATT.RANGE.ENDD.POSITION# =

   6193  0 002671   200054 470500                    LDP0    @TOS_EVAL_PATT,,AUTO
         0 002672   000023 236100                    LDQ     19,,PR0
         0 002673   000022 732000                    QRS     18
         0 002674   200047 036100                    ADLQ    STRING_LENGTH,,AUTO
         0 002675   000000 620006                    EAX0    0,QL
         0 002676   000023 740100                    STX0    19,,PR0

     1159     6194    5                   TOS_EVAL_PATT.RANGE.ENDD.POSITION# + STRING_LENGTH;
     1160     6195    5                 FOUND = %TRUE;

   6195  0 002677   400000 236003                    LDQ     -131072,DU
         0 002700   200055 471500                    LDP1    @FOUND,,AUTO
         0 002701   100000 756100                    STQ     0,,PR1
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:132  

     1161     6196    5                 EXIT EACH_RECORD;   /* Found match in one record */

   6196  0 002702   003230 710000 0                  TRA     s:6347
         0 002703   003071 710000 0                  TRA     ON_TO_NEXT_RECORD

     1162     6197    5                 END FORWARD_SEARCH;
     1163     6198
     1164     6199    4              ELSE
     1165     6200
     1166     6201    4   BACKWARD_SEARCH:
     1167     6202    5              DO;

   6202  0 002704                       BACKWARD_SE* null
     1168     6203    5                 IF RCCL = %RCCL_LESS THEN

   6203  0 002704   200046 235100                    LDA     RCCL,,AUTO
         0 002705   000027 115000 xsym               CMPA    B_VECTNIL+23
         0 002706   003230 600000 0                  TZE     s:6347

     1169     6204    5                    EXIT EACH_RECORD;      /* Match failed */
     1170     6205    5                 IF TOS_EVAL_PATT.RANGE.START.POSITION# - VIRTUAL_BOR >=

   6205  0 002707   000012 236100                    LDQ     10,,PR0
         0 002710   000022 732000                    QRS     18
         0 002711   200110 136100                    SBLQ    VIRTUAL_BOR,,AUTO
         0 002712   200047 116100                    CMPQ    STRING_LENGTH,,AUTO
         0 002713   003071 604000 0                  TMI     ON_TO_NEXT_RECORD

     1171     6206    6                   STRING_LENGTH THEN DO;

     1172     6207    6                    S_POS = TOS_EVAL_PATT.RANGE.START.POSITION# - VIRTUAL_BOR;

   6207  0 002714   000012 236100                    LDQ     10,,PR0
         0 002715   000022 732000                    QRS     18
         0 002716   200110 136100                    SBLQ    VIRTUAL_BOR,,AUTO
         0 002717   200105 756100                    STQ     S_POS,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:133  

     1173     6208    6                    IF PATT_ENTRY.CODE# = %PS_VALUE THEN

   6208  0 002720   200053 473500                    LDP3    @PATT_ENTRY,,AUTO
         0 002721   300000 721100                    LXL1    0,,PR3
         0 002722   000002 101003                    CMPX1   2,DU
         0 002723   002744 601000 0                  TNZ     s:6212

     1174     6209    6                       CALL SEARCHR (MATCH_POS, RCCL, SEARCH_TABLE.FLAGS,

   6209  0 002724   200101 474500                    LDP4    SEARCH_NODE+4,,AUTO
         0 002725   400002 222100                    LDX2    2,,PR4
         0 002726   000000 623006                    EAX3    0,QL
         0 002727   200110 235100                    LDA     VIRTUAL_BOR,,AUTO
         0 002730   000000 165545                    TCTR
         0 002731   400002 400013                    ADSC9   2,A,PR4                  cn=2,n=*X3
         0 002732   000200 000000 xsym               ARG     VD_STATIC_TEMP+128
         0 002733   200106 000100                    ARG     MATCH_POS,,AUTO
         0 002734   200106 235100                    LDA     MATCH_POS,,AUTO
         0 002735   000033 771000                    ARL     27
         0 002736   200046 755100                    STA     RCCL,,AUTO
         0 002737   200106 551140                    STBA    MATCH_POS,'40'O,AUTO
         0 002740   003071 606400 0                  TTN     ON_TO_NEXT_RECORD
         0 002741   200106 054100                    AOS     MATCH_POS,,AUTO
         0 002742   200106 156100                    SSQ     MATCH_POS,,AUTO
         0 002743   003023 710000 0                  TRA     s:6229

     1175     6210    6                         SUBSTR (SEARCH$DATA.BYTES, VIRTUAL_BOR, S_POS))
     1176     6211    6                         ALTRET (ON_TO_NEXT_RECORD);
     1177     6212    6                    ELSE IF STRING_LENGTH = 1 THEN

   6212  0 002744   200047 235100                    LDA     STRING_LENGTH,,AUTO
         0 002745   000001 115007                    CMPA    1,DL
         0 002746   002763 601000 0                  TNZ     s:6217

     1178     6213    6                          CALL INDEX1R (MATCH_POS, SUBSTR(LITERAL.BYTES,0,1),

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:134  
   6213  0 002747   200101 474500                    LDP4    SEARCH_NODE+4,,AUTO
         0 002750   400002 222100                    LDX2    2,,PR4
         0 002751   200105 723100                    LXL3    S_POS,,AUTO
         0 002752   200110 235100                    LDA     VIRTUAL_BOR,,AUTO
         0 002753   000000 125545                    SCMR    mask='000'O
         0 002754   400002 400013                    ADSC9   2,A,PR4                  cn=2,n=*X3
         0 002755   000200 000001 xsym               ADSC9   VD_STATIC_TEMP+128       cn=0,n=1
         0 002756   200106 000100                    ARG     MATCH_POS,,AUTO
         0 002757   003071 606400 0                  TTN     ON_TO_NEXT_RECORD
         0 002760   200106 054100                    AOS     MATCH_POS,,AUTO
         0 002761   200106 156100                    SSQ     MATCH_POS,,AUTO
         0 002762   003023 710000 0                  TRA     s:6229

     1179     6214    6                            SUBSTR (SEARCH$DATA.BYTES, VIRTUAL_BOR, S_POS))
     1180     6215    6                            ALTRET (ON_TO_NEXT_RECORD);
     1181     6216    7                       ELSE DO;

     1182     6217    7                          S_POS = S_POS - STRING_LENGTH + 2;

   6217  0 002763   200047 136100                    SBLQ    STRING_LENGTH,,AUTO
         0 002764   000002 036007                    ADLQ    2,DL
         0 002765   200105 756100                    STQ     S_POS,,AUTO

     1183     6218    8                          DO %FOREVER;

     1184     6219    8                             CALL INDEX2R (MATCH_POS, SUBSTR(LITERAL.BYTES,0,2),

   6219  0 002766   200101 470500                    LDP0    SEARCH_NODE+4,,AUTO
         0 002767   000002 220100                    LDX0    2,,PR0
         0 002770   200105 236100                    LDQ     S_POS,,AUTO
         0 002771   200105 721100                    LXL1    S_POS,,AUTO
         0 002772   200110 235100                    LDA     VIRTUAL_BOR,,AUTO
         0 002773   000000 121545                    SCDR
         0 002774   000002 400011                    ADSC9   2,A,PR0                  cn=2,n=*X1
         0 002775   000200 000002 xsym               ADSC9   VD_STATIC_TEMP+128       cn=0,n=2
         0 002776   200106 000100                    ARG     MATCH_POS,,AUTO
         0 002777   003003 606400 0                  TTN     s:6219+13
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:135  
         0 003000   200106 054100                    AOS     MATCH_POS,,AUTO
         0 003001   200106 156100                    SSQ     MATCH_POS,,AUTO
         0 003002   003005 710000 0                  TRA     s:6222
         0 003003   200106 054100                    AOS     MATCH_POS,,AUTO
         0 003004   003071 710000 0                  TRA     ON_TO_NEXT_RECORD

     1185     6220    8                               SUBSTR (SEARCH$DATA.BYTES, VIRTUAL_BOR, S_POS))
     1186     6221    8                               ALTRET (ON_TO_NEXT_RECORD);
     1187     6222    8                             MATCH_POS = MATCH_POS - 1;

   6222  0 003005   000001 336007                    LCQ     1,DL
         0 003006   200106 056100                    ASQ     MATCH_POS,,AUTO

     1188     6223    8                             IF SUBSTR(SEARCH$DATA.BYTES, VIRTUAL_BOR+MATCH_POS,

   6223  0 003007   200110 236100                    LDQ     VIRTUAL_BOR,,AUTO
         0 003010   200106 036100                    ADLQ    MATCH_POS,,AUTO
         0 003011   200047 722100                    LXL2    STRING_LENGTH,,AUTO
         0 003012   040040 106546                    CMPC    fill='040'O
         0 003013   000002 400012                    ADSC9   2,Q,PR0                  cn=2,n=*X2
         0 003014   000200 000012 xsym               ADSC9   VD_STATIC_TEMP+128       cn=0,n=*X2
         0 003015   003023 600000 0                  TZE     s:6229

     1189     6224    8                               STRING_LENGTH) = LITERAL.BYTES THEN EXIT;
     1190     6225    8                             IF MATCH_POS <= 0 THEN GOTO ON_TO_NEXT_RECORD;

   6225  0 003016   200106 236100                    LDQ     MATCH_POS,,AUTO
         0 003017   003071 604400 0                  TMOZ    ON_TO_NEXT_RECORD

     1191     6226    8                             S_POS = MATCH_POS + 1;

   6226  0 003020   000001 036007                    ADLQ    1,DL
         0 003021   200105 756100                    STQ     S_POS,,AUTO

     1192     6227    8                             END;

   6227  0 003022   002766 710000 0                  TRA     s:6219
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:136  

     1193     6228    7                          END;

     1194     6229    6                    MATCH_POS = MATCH_POS + VIRTUAL_BOR;

   6229  0 003023   200106 236100                    LDQ     MATCH_POS,,AUTO
         0 003024   200110 036100                    ADLQ    VIRTUAL_BOR,,AUTO
         0 003025   200106 756100                    STQ     MATCH_POS,,AUTO

     1195     6230    6                    IF TOS_EVAL_PATT.RANGE.START.POSITION# - MATCH_POS <=

   6230  0 003026   200054 470500                    LDP0    @TOS_EVAL_PATT,,AUTO
         0 003027   000012 236100                    LDQ     10,,PR0
         0 003030   000022 732000                    QRS     18
         0 003031   200106 136100                    SBLQ    MATCH_POS,,AUTO
         0 003032   000027 116100                    CMPQ    23,,PR0
         0 003033   003071 605400 0                  TPNZ    ON_TO_NEXT_RECORD

     1196     6231    7                      TOS_EVAL_PATT.REMAINING_BYTES# THEN DO;

     1197     6232    7                       TOS_EVAL_PATT.REMAINING_BYTES# =

   6232  0 003034   000012 236100                    LDQ     10,,PR0
         0 003035   000022 732000                    QRS     18
         0 003036   200106 136100                    SBLQ    MATCH_POS,,AUTO
         0 003037   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 003040   000027 236100                    LDQ     23,,PR0
         0 003041   200112 136100                    SBLQ    VIRTUAL_BOR+2,,AUTO
         0 003042   000027 756100                    STQ     23,,PR0

     1198     6233    7                         TOS_EVAL_PATT.REMAINING_BYTES# -
     1199     6234    7                         (TOS_EVAL_PATT.RANGE.START.POSITION# - MATCH_POS);
     1200     6235    7                       TOS_EVAL_PATT.RANGE.START.POSITION# = MATCH_POS;

   6235  0 003043   200106 720100                    LXL0    MATCH_POS,,AUTO
         0 003044   000012 740100                    STX0    10,,PR0

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:137  
     1201     6236    7                       CALL VDG$OCOPY_LOCATION (TOS_EVAL_PATT.RANGE.START,

   6236  0 003045   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 003046   000013 036003                    ADLQ    11,DU
         0 003047   200113 756100                    STQ     VIRTUAL_BOR+3,,AUTO
         0 003050   200054 236100                    LDQ     @TOS_EVAL_PATT,,AUTO
         0 003051   000002 036003                    ADLQ    2,DU
         0 003052   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 003053   200112 630500                    EPPR0   VIRTUAL_BOR+2,,AUTO
         0 003054   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 003055   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 003056   003321 702000 0                  TSX2    RREAD_FAILED

     1202     6237    7                         TOS_EVAL_PATT.RANGE.ENDD)
     1203     6238    7                         ALTRET (OCOPY_LOCATION_FAILED);
     1204     6239    7                       TOS_EVAL_PATT.RANGE.ENDD.POSITION# =

   6239  0 003057   200054 470500                    LDP0    @TOS_EVAL_PATT,,AUTO
         0 003060   000023 236100                    LDQ     19,,PR0
         0 003061   000022 732000                    QRS     18
         0 003062   200047 036100                    ADLQ    STRING_LENGTH,,AUTO
         0 003063   000000 620006                    EAX0    0,QL
         0 003064   000023 740100                    STX0    19,,PR0

     1205     6240    7                         TOS_EVAL_PATT.RANGE.ENDD.POSITION# + STRING_LENGTH;
     1206     6241    7                       FOUND = %TRUE;

   6241  0 003065   400000 236003                    LDQ     -131072,DU
         0 003066   200055 471500                    LDP1    @FOUND,,AUTO
         0 003067   100000 756100                    STQ     0,,PR1

     1207     6242    7                       EXIT EACH_RECORD;    /* Found match in 1 record */

   6242  0 003070   003230 710000 0                  TRA     s:6347

     1208     6243    7                       END;
     1209     6244    6                    END;
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:138  
     1210     6245
     1211     6246                      /********************************************************
     1212     6247                      *   Backward cross-record searches not yet implemented!!!
     1213     6248                      *   Will always fail!!!
     1214     6249                      ********************************************************/
     1215     6250    5                 END BACKWARD_SEARCH;
     1216     6251
     1217     6252                   /*
     1218     6253                   *   Couldn't find a match anywhere in this record.
     1219     6254                   *   Free the record, and set up to go on to the next
     1220     6255                   *       sequential record (either backward or forward).
     1221     6256                   */
     1222     6257
     1223     6258    4   ON_TO_NEXT_RECORD:
     1224     6259                   /* Any records left we can search? */
     1225     6260    4              IF TOS_EVAL_PATT.REMAINING_RECS# <= 0 THEN

   6260  0 003071   200054 470500       ON_TO_NEXT_* LDP0    @TOS_EVAL_PATT,,AUTO
         0 003072   000026 235100                    LDA     22,,PR0
         0 003073   003230 604400 0                  TMOZ    s:6347

     1226     6261    4                 EXIT EACH_RECORD; /* Match failed */
     1227     6262    4              TOS_EVAL_PATT.REMAINING_RECS# = TOS_EVAL_PATT.REMAINING_RECS# - 1;

   6262  0 003074   000001 336007                    LCQ     1,DL
         0 003075   000026 056100                    ASQ     22,,PR0

     1228     6263
     1229     6264                   /* Count bytes left to search, and set direction */
     1230     6265    5              IF TOS_EVAL_PATT.DIRECTION# = %DIR_FORWARD THEN DO;

   6265  0 003076   000025 720100                    LXL0    21,,PR0
         0 003077   000001 100003                    CMPX0   1,DU
         0 003100   003124 601000 0                  TNZ     s:6275

     1231     6266    5                 ORIG_REC_LEN = MAXIMUM (0,

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:139  
   6266  0 003101   000012 236100                    LDQ     10,,PR0
         0 003102   000022 732000                    QRS     18
         0 003103   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 003104   200101 471500                    LDP1    SEARCH_NODE+4,,AUTO
         0 003105   100002 236100                    LDQ     2,,PR1
         0 003106   000022 732000                    QRS     18
         0 003107   200112 136100                    SBLQ    VIRTUAL_BOR+2,,AUTO
         0 003110   000000 116003                    CMPQ    0,DU
         0 003111   003113 605000 0                  TPL     s:6266+10
         0 003112   000000 236003                    LDQ     0,DU
         0 003113   200107 756100                    STQ     ORIG_REC_LEN,,AUTO

     1232     6267    5                   SEARCH$DATA.LENGTH# - TOS_EVAL_PATT.RANGE.START.POSITION#);
     1233     6268    5                 IF ORIG_REC_LEN > TOS_EVAL_PATT.REMAINING_BYTES# THEN

   6268  0 003114   000027 116100                    CMPQ    23,,PR0
         0 003115   003230 605400 0                  TPNZ    s:6347

     1234     6269    5                    EXIT EACH_RECORD;  /* Match failed */
     1235     6270    5                 TOS_EVAL_PATT.REMAINING_BYTES# =

   6270  0 003116   000027 236100                    LDQ     23,,PR0
         0 003117   200107 136100                    SBLQ    ORIG_REC_LEN,,AUTO
         0 003120   000027 756100                    STQ     23,,PR0

     1236     6271    5                   TOS_EVAL_PATT.REMAINING_BYTES# - ORIG_REC_LEN;
     1237     6272    5                 SEARCH_RELATIVE = 1;    /* Read next record */

   6272  0 003121   000001 235007                    LDA     1,DL
         0 003122   200067 755100                    STA     SEARCH_RELATIVE,,AUTO

     1238     6273    5                 END;

   6273  0 003123   003136 710000 0                  TRA     s:6285

     1239     6274    5              ELSE DO;

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:140  
     1240     6275    5                 IF TOS_EVAL_PATT.RANGE.START.POSITION# >

   6275  0 003124   000012 236100                    LDQ     10,,PR0
         0 003125   000022 732000                    QRS     18
         0 003126   000027 116100                    CMPQ    23,,PR0
         0 003127   003230 605400 0                  TPNZ    s:6347

     1241     6276    5                   TOS_EVAL_PATT.REMAINING_BYTES# THEN
     1242     6277    5                    EXIT EACH_RECORD;  /* Match failed */
     1243     6278    5                 TOS_EVAL_PATT.REMAINING_BYTES# =

   6278  0 003130   200112 756100                    STQ     VIRTUAL_BOR+2,,AUTO
         0 003131   000027 236100                    LDQ     23,,PR0
         0 003132   200112 136100                    SBLQ    VIRTUAL_BOR+2,,AUTO
         0 003133   000027 756100                    STQ     23,,PR0

     1244     6279    5                   TOS_EVAL_PATT.REMAINING_BYTES# -
     1245     6280    5                   TOS_EVAL_PATT.RANGE.START.POSITION#;
     1246     6281    5                 SEARCH_RELATIVE = -1;   /* Read previous record */

   6281  0 003134   000001 335007                    LCA     1,DL
         0 003135   200067 755100                    STA     SEARCH_RELATIVE,,AUTO

     1247     6282    5                 END;

     1248     6283
     1249     6284                   /* Flag "not first time thru loop" condition */
     1250     6285    4              SEARCH_LOCATION$ = ADDR(NIL);

   6285  0 003136   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 003137   200066 756100                    STQ     SEARCH_LOCATION$,,AUTO

     1251     6286                   %CLEARKEY (KEY=FIRST_SEARCH_KEY);

   6293  0 003140   200070 720100                    LXL0    FIRST_SEARCH_KEY,,AUTO
         0 003141   000002 100003                    CMPX0   2,DU
         0 003142   003152 601000 0                  TNZ     s:6294+2
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:141  

   6293  0 003143   200071 630500                    EPPR0   FIRST_SEARCH_KEY+1,,AUTO
         0 003144   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003145   000000 701000 xent               TSX1    VDG$OFREE
         0 003146   003150 702000 0                  TSX2    s:6294
         0 003147   003152 710000 0                  TRA     s:6294+2

   6294  0 003150   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
         0 003151   000000 702211                    TSX2  ! 0,X1

   6294  0 003152   000000 235003                    LDA     0,DU
         0 003153   000000 236003                    LDQ     0,DU
         0 003154   200070 757100                    STAQ    FIRST_SEARCH_KEY,,AUTO

     1252     6296
     1253     6297                   /* Free dynamic objects we no longer need */
     1254     6298    4              CALL VDG$OFREE (SEARCH$DATA)

   6298  0 003155   200101 630500                    EPPR0   SEARCH_NODE+4,,AUTO
         0 003156   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003157   000000 701000 xent               TSX1    VDG$OFREE
         0 003160   003321 702000 0                  TSX2    RREAD_FAILED

     1255     6299    4                ALTRET (OFREE_FAILED);
     1256     6300    4              SEARCH_NODE.DATA$ = ADDR(NIL);

   6300  0 003161   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 003162   200101 756100                    STQ     SEARCH_NODE+4,,AUTO

     1257     6301                   %CLEARKEY (KEY=SEARCH_NODE.KEY);

   6308  0 003163   200075 720100                    LXL0    SEARCH_NODE,,AUTO
         0 003164   000002 100003                    CMPX0   2,DU
         0 003165   003175 601000 0                  TNZ     s:6309+2

   6308  0 003166   200076 630500                    EPPR0   SEARCH_NODE+1,,AUTO
         0 003167   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:142  
         0 003170   000000 701000 xent               TSX1    VDG$OFREE
         0 003171   003173 702000 0                  TSX2    s:6309
         0 003172   003175 710000 0                  TRA     s:6309+2

   6309  0 003173   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
         0 003174   000000 702211                    TSX2  ! 0,X1

   6309  0 003175   200075 450100                    STZ     SEARCH_NODE,,AUTO
         0 003176   200076 450100                    STZ     SEARCH_NODE+1,,AUTO

     1258     6311                   %CLEARSPEC (SPEC=SEARCH_NODE.SPEC);

   6318  0 003177   200077 720100                    LXL0    SEARCH_NODE+2,,AUTO
         0 003200   000002 100003                    CMPX0   2,DU
         0 003201   003211 601000 0                  TNZ     s:6319+2

   6318  0 003202   200100 630500                    EPPR0   SEARCH_NODE+3,,AUTO
         0 003203   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003204   000000 701000 xent               TSX1    VDG$OFREE
         0 003205   003207 702000 0                  TSX2    s:6319
         0 003206   003211 710000 0                  TRA     s:6319+2

   6319  0 003207   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
         0 003210   000000 702211                    TSX2  ! 0,X1

   6319  0 003211   200077 450100                    STZ     SEARCH_NODE+2,,AUTO
         0 003212   200100 450100                    STZ     SEARCH_NODE+3,,AUTO

     1259     6321                   %CLEARKEY (KEY=ORIGINAL_KEY);

   6328  0 003213   200073 720100                    LXL0    ORIGINAL_KEY,,AUTO
         0 003214   000002 100003                    CMPX0   2,DU
         0 003215   003225 601000 0                  TNZ     s:6329+2

   6328  0 003216   200074 630500                    EPPR0   ORIGINAL_KEY+1,,AUTO
         0 003217   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003220   000000 701000 xent               TSX1    VDG$OFREE
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:143  
         0 003221   003223 702000 0                  TSX2    s:6329
         0 003222   003225 710000 0                  TRA     s:6329+2

   6329  0 003223   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
         0 003224   000000 702211                    TSX2  ! 0,X1

   6329  0 003225   200073 450100                    STZ     ORIGINAL_KEY,,AUTO
         0 003226   200074 450100                    STZ     ORIGINAL_KEY+1,,AUTO

     1260     6331    4              END EACH_RECORD;

   6331  0 003227   001761 710000 0                  TRA     EACH_RECORD

     1261     6332
     1262     6333
     1263     6334
     1264     6335                /*
     1265     6336                *   We may have exited the EACH_RECORD loop prematurely:
     1266     6337                *     make sure we don't leave any dynamic objects stranded.
     1267     6338                */
     1268     6339
     1269     6340                %CLEARKEY (KEY=FIRST_SEARCH_KEY);

   6347  0 003230   200070 720100                    LXL0    FIRST_SEARCH_KEY,,AUTO
         0 003231   000002 100003                    CMPX0   2,DU
         0 003232   003242 601000 0                  TNZ     s:6348+2

   6347  0 003233   200071 630500                    EPPR0   FIRST_SEARCH_KEY+1,,AUTO
         0 003234   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003235   000000 701000 xent               TSX1    VDG$OFREE
         0 003236   003240 702000 0                  TSX2    s:6348
         0 003237   003242 710000 0                  TRA     s:6348+2

   6348  0 003240   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
         0 003241   000000 702211                    TSX2  ! 0,X1

   6348  0 003242   000000 235003                    LDA     0,DU
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:144  
         0 003243   000000 236003                    LDQ     0,DU
         0 003244   200070 757100                    STAQ    FIRST_SEARCH_KEY,,AUTO

     1270     6350    3           CALL VDG$OFREE (SEARCH$DATA)

   6350  0 003245   200101 630500                    EPPR0   SEARCH_NODE+4,,AUTO
         0 003246   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003247   000000 701000 xent               TSX1    VDG$OFREE
         0 003250   003321 702000 0                  TSX2    RREAD_FAILED

     1271     6351    3             ALTRET (OFREE_FAILED);
     1272     6352    3           SEARCH_NODE.DATA$ = ADDR(NIL);

   6352  0 003251   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 003252   200101 756100                    STQ     SEARCH_NODE+4,,AUTO

     1273     6353                %CLEARKEY (KEY=SEARCH_NODE.KEY);

   6360  0 003253   200075 720100                    LXL0    SEARCH_NODE,,AUTO
         0 003254   000002 100003                    CMPX0   2,DU
         0 003255   003265 601000 0                  TNZ     s:6361+2

   6360  0 003256   200076 630500                    EPPR0   SEARCH_NODE+1,,AUTO
         0 003257   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003260   000000 701000 xent               TSX1    VDG$OFREE
         0 003261   003263 702000 0                  TSX2    s:6361
         0 003262   003265 710000 0                  TRA     s:6361+2

   6361  0 003263   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
         0 003264   000000 702211                    TSX2  ! 0,X1

   6361  0 003265   200075 450100                    STZ     SEARCH_NODE,,AUTO
         0 003266   200076 450100                    STZ     SEARCH_NODE+1,,AUTO

     1274     6363                %CLEARSPEC (SPEC=SEARCH_NODE.SPEC);

   6370  0 003267   200077 720100                    LXL0    SEARCH_NODE+2,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:145  
         0 003270   000002 100003                    CMPX0   2,DU
         0 003271   003301 601000 0                  TNZ     s:6371+2

   6370  0 003272   200100 630500                    EPPR0   SEARCH_NODE+3,,AUTO
         0 003273   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003274   000000 701000 xent               TSX1    VDG$OFREE
         0 003275   003277 702000 0                  TSX2    s:6371
         0 003276   003301 710000 0                  TRA     s:6371+2

   6371  0 003277   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
         0 003300   000000 702211                    TSX2  ! 0,X1

   6371  0 003301   200077 450100                    STZ     SEARCH_NODE+2,,AUTO
         0 003302   200100 450100                    STZ     SEARCH_NODE+3,,AUTO

     1275     6373                %CLEARKEY (KEY=ORIGINAL_KEY);

   6380  0 003303   200073 720100                    LXL0    ORIGINAL_KEY,,AUTO
         0 003304   000002 100003                    CMPX0   2,DU
         0 003305   003315 601000 0                  TNZ     s:6381+2

   6380  0 003306   200074 630500                    EPPR0   ORIGINAL_KEY+1,,AUTO
         0 003307   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003310   000000 701000 xent               TSX1    VDG$OFREE
         0 003311   003313 702000 0                  TSX2    s:6381
         0 003312   003315 710000 0                  TRA     s:6381+2

   6381  0 003313   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
         0 003314   000000 702211                    TSX2  ! 0,X1

   6381  0 003315   200073 450100                    STZ     ORIGINAL_KEY,,AUTO
         0 003316   200074 450100                    STZ     ORIGINAL_KEY+1,,AUTO

     1276     6383
     1277     6384    3           RETURN;

   6384  0 003317   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:146  
         0 003320   000001 702211                    TSX2  ! 1,X1

   6381  0 003321                       RREAD_FAILED null
   6381  0 003321                       RGET_FAILED  null
   6381  0 003321                       MATCH_LIT_A* null
   6381  0 003321                       OCOPY_LOCAT* null
   6381  0 003321                       OFREE_FAILED null
     1278     6385
     1279     6386
     1280     6387
     1281     6388    3   RREAD_FAILED: ;
     1282     6389    3   RGET_FAILED: ;
     1283     6390    3   MATCH_LIT_ACROSS_RECS_FAILED: ;
     1284     6391    3   OCOPY_LOCATION_FAILED: ;
     1285     6392    3   OFREE_FAILED: ;
     1286     6393    3           ALTRETURN;

   6393  0 003321   200064 221300                    LDX1  ! WILD_LOC$+1,,AUTO
         0 003322   000000 702211                    TSX2  ! 0,X1
     1287     6394
     1288     6395    3   END FIND_STRING;
     1289     6396
     1290     6397    2   END FIND_SYMBOL;
     1291     6398    1   END VDE$IPATTERN;

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:147  
--  Include file information  --

   B$TABLES_C.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDE$IPATTERN.
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:148  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    55-0-0/w PTR         r     1 @FOUND                     4-0-0/w PTR         r     1 @IT_OPERAND
     5-0-0/w PTR         r     1 @MATCHED_RANGE             3-0-0/w PTR         r     1 @OPERAND
    53-0-0/w PTR         r     1 @PATT_ENTRY                6-0-0/w PTR         r     1 @SIGNAL
    54-0-0/w PTR         r     1 @TOS_EVAL_PATT           104-0-0/w PTR         r     1 BOUND_PTRS$
    42-0-0/w PTR         r     1 CURR_PATTERN$             33-0-0/w STRC(180)   r     1 ENCLOSING_END_PTRS
    26-0-0/w STRC(180)   r     1 ENCLOSING_START_PTRS
    12-0-0/w PTR         r     1 EVAL_PATT_FOR_BO_MATCH$
    13-0-0/w PTR         r     1 EVAL_PATT_FOR_EO_MATCH$
    70-0-0/w STRC(72)    r     1 FIRST_SEARCH_KEY          72-0-0/w PTR         r     1 FIRST_SEARCH_KEY$
    44-0-0/w BIT         r     1 FOUND                     *0-0-0/w BIT         r     1 FOUND
    *0-0-0/w STRC(324)   r     1 IT_OPERAND                14-0-0/w SBIN        r     1 LEVEL
    *0-0-0/w STRC(648)   r     1 MATCHED_RANGE            106-0-0/w SBIN        r     1 MATCH_POS
    41-0-0/w BIT         r     1 MOVE_BEFORE_SEARCH        51-0-0/w SBIN        r     1 MOVE_POSITIONS
     7-0-0/w SBIN        r     1 MX_RECORDS                11-0-0/w PTR         r     1 NEW_TOS_EVAL_PATT$
    45-0-0/w SBIN        r     1 N_MATCHES                 *0-0-0/w STRC(144)   r     1 OPERAND
    73-0-0/w STRC(72)    r     1 ORIGINAL_KEY             107-0-0/w SBIN        r     1 ORIG_REC_LEN
    50-0-0/w SBIN        r     1 PART_MATCH                *0-0-0/w STRC(144)   r     1 PATT_ENTRY
    43-0-0/w PTR         r     1 PATT_ENTRY$               65-0-0/w PTR         r     1 PORT$
    56-0-0/w SBIN        r     1 POSITIONS_TO_MOVE         53-0-0/w PTR         r     1 PREV_TOS_EVAL_PATT$
    46-0-0/w SBIN        r     1 RCCL                      60-0-0/w PTR         r     1 SEARCH_KEY$
    66-0-0/w PTR         r     1 SEARCH_LOCATION$          75-0-0/w STRC(216)   r     1 SEARCH_NODE
    62-0-0/w PTR         r     1 SEARCH_RECORD$            67-0-0/w SBIN        r     1 SEARCH_RELATIVE
    *0-0-0/w BIT         r     1 SIGNAL                    57-0-0/w SBIN        r     1 SKIPPED_BYTES
    40-0-0/w SBIN        r     1 SKIP_COUNT                15-0-0/w STRC(324)   r     1 START_SEARCH_LOC
    61-0-0/w PTR         r     1 STREAM_KEY$               47-0-0/w SBIN        r     1 STRING_LENGTH
   105-0-0/w SBIN        r     1 S_POS                     54-0-0/w PTR         r     1 THIS_WILD$
    *0-0-0/w STRC(864)   r     1 TOS_EVAL_PATT             10-0-0/w PTR         r     1 TOS_EVAL_PATT$
   110-0-0/w SBIN        r     1 VIRTUAL_BOR               55-0-0/w SBIN        r     1 WILD_COUNT
    63-0-0/w PTR         r     1 WILD_LOC$

PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:149  
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$XL_UPPER$                0-0-0/w ASTR(4608)  r     1 LITERAL
     0-0-0/w STRC(9216)  r     1 SEARCH_TABLE               0-0-0/w STRC(144)   r     1 VD_$CASE
     0-0-0/w STRC(144)   r     1 VD_$MATCH_LIMIT            0-0-0/w STRC(22644) r     1 VD_6E
     0-0-0/w STRC(324)   r     1 VD_LOC_$MATCHES            0-0-0/w ASTR(0)     r     1 VD_STATIC_TEMP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4608)  r     1 B$XL_UPPER                 0-0-0/w STRC(180)   r     1 BOUND$PTRS
     0-0-0/w STRC(252)   r     1 CURR$PATTERN
     0-0-0/w STRC(864)   r     1 EVAL$PATT_FOR_BO_MATCH
     0-0-0/w STRC(864)   r     1 EVAL$PATT_FOR_EO_MATCH
     0-0-0/w ASTR(9)     r     1 FIRST$SEARCH_KEY           0-0-0/w STRC(864)   r     1 NEW$TOS_EVAL_PATT
     0-0-0/w STRC(144)   r     1 PATT$ENTRY                 0-0-0/w STRC(864)   r     1 PREV$PATT
     0-0-0/w ASTR(90)    r     1 SEARCH$DATA                0-0-0/w ASTR(9)     r     1 SEARCH$KEY
     0-0-0/w STRC(324)   r     1 SEARCH$LOCATION            0-0-0/w ASTR(90)    r     1 SEARCH$RECORD
     0-0-0/w STRC(864)   r     1 STREAM                     0-0-0/w ASTR(9)     r     1 STREAM$KEY
     0-0-0/w STRC(2124)  r     1 TOS$EVAL                   0-0-0/w STRC(864)   r     1 TOS$EVAL_PATT
     0-0-0/w ASTR(90)    r     1 VD$BUFFER                  0-0-0/w STRC(1116)  r     1 VD$IT_BLOCK_EXPR
     0-0-0/w STRC(324)   r     1 VD$LOCATION                0-0-0/w STRC(252)   r     1 VD$PATTERN
     0-0-0/w STRC(1944)  r     1 VD$PORT                    0-0-0/w ASTR(9)     r     1 VD$TEXTC
     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE            0-0-0/w STRC(792)   r     1 VD$WILD_STRINGS
     0-0-0/w STRC(792)   r     1 WILD                       0-0-0/w STRC(324)   r     1 WILD$LOC


   Procedure VDE$IPATTERN requires 1747 words for executable code.
   Procedure VDE$IPATTERN requires 82 words of local(AUTO) storage.
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:150  

    No errors detected in file VDE$IPATTERN.:VDA5TSI    .
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:151  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:152  
          MINI XREF LISTING

B$XL_UPPER
      2757**DCL      5171>>CALLBLT  6010>>CALLBLT
B$XL_UPPER$
      2756**DCL      2757--IMP-PTR  5171>>CALLBLT  6010>>CALLBLT
BINSERT_FAILED IN PROCEDURE CLEAN_UP
      4780**LABEL    4777--CALLALT
BOUND$PTRS.COUNT# IN PROCEDURE FIND_STRING
      5721**DCL      6096>>IF
BOUND$PTRS.EOF IN PROCEDURE FIND_STRING
      5721**DCL      6092>>IF
BOUND$PTRS.KEY$ IN PROCEDURE FIND_STRING
      5721**DCL      6094>>IF       6094>>IF       6119>>IF       6119>>IF
BOUND$PTRS.POSITION# IN PROCEDURE FIND_STRING
      5721**DCL      6108>>ASSIGN   6109>>IF       6112>>IF
BOUND_PTRS$ IN PROCEDURE FIND_STRING
      5593**DCL      5717--IMP-PTR  6076<<ASSIGN   6078<<ASSIGN   6092>>IF       6094>>IF       6094>>IF
      6096>>IF       6108>>ASSIGN   6109>>IF       6112>>IF       6119>>IF       6119>>IF
CLEAN_UP
      4376**PROC     4319--CALL     4333--CALL
CLEAN_UP_FAILED
      4335**LABEL    4319--CALLALT  4333--CALLALT
COMPARE_LOCS_FAILED
      4315**LABEL    4133--CALLALT
CSET_COUNT_FAILED IN PROCEDURE CLEAN_UP
      4780**LABEL    4722--CALLALT
CURR$PATTERN.ENTRIES
      3270**DCL      4169--ASSIGN
CURR$PATTERN.N_ENTRIES#
      3259**DCL      4165>>IF       4168>>DOUNTIL
CURR_PATTERN$
      2864**DCL      3233--IMP-PTR  4164<<ASSIGN   4165>>IF       4168>>DOUNTIL  4169>>ASSIGN   4202<<ASSIGN
EACH_MATCH_OF_ENTIRE_PATTERN
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:153  
      4141**LABEL    4197--EXIT     4262--EXIT     4293--EXIT
EACH_RECORD IN PROCEDURE FIND_STRING
      5914**LABEL    5982--EXIT     5993--EXIT     6132--EXIT     6184--EXIT     6196--EXIT     6204--EXIT
      6242--EXIT     6261--EXIT     6269--EXIT     6277--EXIT
ENCLOSING_END_PTRS
      2855**DCL      4117<>CALL     4123<>CALL     5410<>CALL     5413<>CALL     6076--ASSIGN
ENCLOSING_START_PTRS
      2840**DCL      4114<>CALL     5410<>CALL     5413<>CALL     6078--ASSIGN
ENCLOSING_START_PTRS.POSITION#
      2844**DCL      5989>>ASSIGN
EVAL$PATT_FOR_BO_MATCH.DIRECTION#
      3610**DCL      4299>>IF
EVAL$PATT_FOR_BO_MATCH.RANGE.START
      3563**DCL      4291>>ASSIGN   4292<<ASSIGN   4300--ASSIGN
EVAL$PATT_FOR_EO_MATCH.RANGE.ENDD
      3699**DCL      4289>>ASSIGN   4290<<ASSIGN   4302--ASSIGN
EVAL_PATT_FOR_BO_MATCH$
      2773**DCL      3514--IMP-PTR  4143<<ASSIGN   4207>>IF       4213<<ASSIGN   4216>>IF       4229>>IF
      4291>>ASSIGN   4292>>ASSIGN   4299>>IF       4300>>ASSIGN   5394<<ASSIGN
EVAL_PATT_FOR_EO_MATCH$
      2774**DCL      3622--IMP-PTR  4144<<ASSIGN   4216>>IF       4285>>IF       4286<<ASSIGN   4289>>ASSIGN
      4290>>ASSIGN   4302>>ASSIGN   5388>>IF       5402<<ASSIGN
FIND_STRING IN PROCEDURE FIND_SYMBOL
      5516**PROC     5178--CALL     5188--CALL
FIND_STRING_FAILED IN PROCEDURE FIND_SYMBOL
      5424**LABEL    5178--CALLALT  5188--CALLALT
FIND_SYMBOL
      4892**PROC     4200--CALL
FIND_SYMBOL_FAILED
      4315**LABEL    4200--CALLALT
FIRST$SEARCH_KEY.BYTES IN PROCEDURE FIND_STRING
      5646**DCL      6038>>IF
FIRST$SEARCH_KEY.LENGTH# IN PROCEDURE FIND_STRING
      5644**DCL      5646--IMP-SIZ  6038>>IF
FIRST_SEARCH_KEY IN PROCEDURE FIND_STRING
      5529**DCL      5906<<ASSIGN   6016>>IF       6294<<ASSIGN   6348<<ASSIGN
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:154  
FIRST_SEARCH_KEY.REP# IN PROCEDURE FIND_STRING
      5533**DCL      6035>>IF       6293>>IF       6347>>IF
FIRST_SEARCH_KEY.V$ IN PROCEDURE FIND_STRING
      5533**DCL      5906<>CALL     6035>>ASSIGN   6035--ASSIGN   6293>>CALL     6293>>CALL     6347>>CALL
      6347>>CALL
FIRST_SEARCH_KEY$ IN PROCEDURE FIND_STRING
      5535**DCL      5636--IMP-PTR  6035<<ASSIGN   6035<<ASSIGN   6038>>IF       6038>>IF
FORWARD_SEARCH IN PROCEDURE FIND_STRING
      6130**LABEL    6134--EXIT     6148--EXIT     6157--EXIT
FOUND
      2866**DCL      4191<>CALL     4196>>IF
FOUND IN PROCEDURE FIND_SYMBOL
      5016**DCL      4892--PROC     5162<<ASSIGN   5201<>CALL     5205>>IF       5208<<ASSIGN   5330<<ASSIGN
      5393<<ASSIGN   5401<<ASSIGN   5409>>IF       5417<<ASSIGN   6195<<ASSIGN   6241<<ASSIGN
FOUND_MATCH IN PROCEDURE FIND_STRING
      6178**LABEL    6144--GOTO
IMOVE_BY_POSITIONS_FAILED
      4315**LABEL    4191--CALLALT
IMOVE_BY_POSITIONS_FAILED IN PROCEDURE FIND_SYMBOL
      5424**LABEL    5201--CALLALT
IT_OPERAND
      2452**DCL       103--PROC
IT_OPERAND.OPTIONS.DIRECTION#
      2491**DCL      4120>>IF       4155>>IF       4160>>ASSIGN
IT_OPERAND.OPTIONS.SKIP#
      2491**DCL      4130>>ASSIGN
IT_OPERAND.PARAM$
      2508**DCL      4153>>ASSIGN
LEVEL
      2775**DCL      4113<<ASSIGN   5242>>IF       5242>>ASSIGN   5242>>ASSIGN   5253>>IF       5253>>ASSIGN
      5253>>ASSIGN   5258>>ASSIGN   5295>>IF       5295>>ASSIGN   5295>>ASSIGN   5306>>IF       5306>>ASSIGN
      5306>>ASSIGN   5319>>ASSIGN   5906>>ASSIGN   5906>>IF       5906>>CALL     5906>>CALL     5951>>ASSIGN
      5951>>IF       5951>>CALL     5951>>CALL     5977>>IF       5977>>ASSIGN   5977>>ASSIGN   6004>>IF
      6004>>CALL     6004>>CALL     6005>>ASSIGN   6007>>ASSIGN   6025>>IF       6025>>ASSIGN   6025>>ASSIGN
      6089>>IF       6089>>ASSIGN   6089>>ASSIGN   6094>>IF       6094>>IF       6096>>IF       6119>>IF
      6119>>IF
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:155  
LITERAL.BYTES
      2766**DCL      5171<<CALLBLT  5175<<ASSIGN   6140>>CALLBLT  6152>>CALLBLT  6158>>IF       6173>>DOWHILE
      6176<<ASSIGN   6176>>ASSIGN   6213>>CALLBLT  6219>>CALLBLT  6223>>IF
LOCATION_TO_PTRS_FAILED
      4335**LABEL    4114--CALLALT  4117--CALLALT  4123--CALLALT
LREAD_FAILED IN PROCEDURE FIND_SYMBOL
      5424**LABEL    5227--CALLALT  5264--CALLALT  5284--CALLALT
MATCHED_RANGE
      2518**DCL       103--PROC     4109<<ASSIGN
MATCHED_RANGE.ENDD
      2560**DCL      4289<<ASSIGN
MATCHED_RANGE.START
      2532**DCL      4291<<ASSIGN
MATCH_POS IN PROCEDURE FIND_STRING
      5595**DCL      6136<<CALLBLT  6140<<CALLBLT  6149<<ASSIGN   6152<<CALLBLT  6152>>CALLBLT  6154>>IF
      6158>>IF       6158>>IF       6161<<ASSIGN   6161>>ASSIGN   6168>>ASSIGN   6182>>IF       6185>>ASSIGN
      6189>>ASSIGN   6209<<CALLBLT  6213<<CALLBLT  6219<<CALLBLT  6222<<ASSIGN   6222>>ASSIGN   6223>>IF
      6225>>IF       6226>>ASSIGN   6229<<ASSIGN   6229>>ASSIGN   6230>>IF       6232>>ASSIGN   6235>>ASSIGN
MOVE_BEFORE_SEARCH
      2863**DCL      4131<<ASSIGN   4136<<ASSIGN   4182>>IF       4195<<ASSIGN   4270<<ASSIGN
MOVE_FORWARD_TO_EOR IN PROCEDURE FIND_SYMBOL
      5231**LABEL    5271--GOTO
MOVE_POSITIONS
      2871**DCL      4184<<ASSIGN   4189<<ASSIGN   4191<>CALL
MX_RECORDS
      2770**DCL      4183<<ASSIGN   4188<<ASSIGN   4191<>CALL     4196>>IF
NEW$TOS_EVAL_PATT.BLINK$
      3432**DCL      4223<<ASSIGN
NEW_TOS_EVAL_PATT$
      2772**DCL      3406--IMP-PTR  4150<>CALL     4152>>ASSIGN   4221<>CALL     4223>>ASSIGN   4224>>ASSIGN
      4265<<ASSIGN   4268>>ASSIGN   4308<<ASSIGN   4311>>ASSIGN
NOT_WITHIN_RANGE IN PROCEDURE FIND_SYMBOL
      5405**LABEL    5410--CALLALT
N_MATCHES
      2867**DCL      4111<<ASSIGN   4284<<ASSIGN   4284>>ASSIGN   4722<>CALL
OALLOC_FAILED
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:156  
      4315**LABEL    4150--CALLALT
OCLEAR_LOCATION_FAILED
      4315**LABEL    4173--CALLALT  4179--CALLALT
OCLEAR_LOCATION_FAILED IN PROCEDURE CLEAN_UP
      4780**LABEL    4726--CALLALT
OCOPY_FAILED
      4315**LABEL    4221--CALLALT
OCOPY_LOCATION_FAILED
      4335**LABEL    4121--CALLALT  4127--CALLALT
OCOPY_LOCATION_FAILED IN PROCEDURE FIND_STRING
      6381**LABEL    6190--CALLALT  6236--CALLALT
OCOPY_LOCATION_FAILED IN PROCEDURE FIND_SYMBOL
      5424**LABEL    5192--CALLALT  5274--CALLALT  5311--CALLALT  5316--CALLALT  5390--CALLALT  5398--CALLALT
OFREE_FAILED
      4315**LABEL    4266--CALLALT  4309--CALLALT
OFREE_FAILED IN PROCEDURE CLEAN_UP
      4780**LABEL    4785--CALLALT
OFREE_FAILED IN PROCEDURE FIND_STRING
      6381**LABEL    6298--CALLALT  6350--CALLALT
ON_TO_NEXT_RECORD IN PROCEDURE FIND_STRING
      6260**LABEL    5995--GOTO     6043--GOTO     6059--GOTO     6136--CALLALT  6209--CALLALT  6213--CALLALT
      6219--CALLALT  6225--GOTO
OPERAND
      2438**DCL       103--PROC
OPERAND.EVAL$
      2442**DCL      2988--IMP-PTR  4114>>CALL     4117>>CALL     4121>>CALL     4123>>CALL     4127>>CALL
      4133>>CALL     4133>>CALL     4191>>CALL     4259>>IF       4316>>ASSIGN   5201>>CALL     5327>>IF
      5335>>ASSIGN   5955>>CALL     5986>>ASSIGN   5987>>CALL     5989>>ASSIGN
OPERAND.INTREE$
      2442**DCL      4113>>ASSIGN
OPERAND.STREAM$
      2442**DCL      2882--IMP-PTR  4191>>CALL     4777>>CALL     5201>>CALL     5227>>CALL     5233>>IF
      5253>>IF       5253>>ASSIGN   5253>>ASSIGN   5258>>ASSIGN   5264>>CALL     5269>>CALL     5274>>CALL
      5284>>CALL     5306>>IF       5306>>ASSIGN   5306>>ASSIGN   5316>>CALL     5319>>ASSIGN   5889>>ASSIGN
      5951>>ASSIGN   5951>>IF       5951>>CALL     5951>>CALL     5955>>CALL     5977>>IF       5977>>ASSIGN
      5977>>ASSIGN   5980>>IF       5987>>CALL
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:157  
ORIGINAL_KEY IN PROCEDURE FIND_STRING
      5544**DCL      5911<<ASSIGN   5951<<ASSIGN   6329<<ASSIGN   6381<<ASSIGN
ORIGINAL_KEY.REP# IN PROCEDURE FIND_STRING
      5548**DCL      5967>>IF       6328>>IF       6380>>IF
ORIGINAL_KEY.V$ IN PROCEDURE FIND_STRING
      5548**DCL      5951<>CALL     5967>>ASSIGN   5967--ASSIGN   6328>>CALL     6328>>CALL     6380>>CALL
      6380>>CALL
ORIG_REC_LEN IN PROCEDURE FIND_STRING
      5596**DCL      6266<<ASSIGN   6268>>IF       6270>>ASSIGN
PART_MATCH
      2870**DCL      4108<<ASSIGN   4249>>IF       4258<<ASSIGN   5168>>ASSIGN   5171>>CALLBLT  5175>>ASSIGN
      6143<<ASSIGN   6154>>IF       6167>>ASSIGN   6169<<ASSIGN   6169>>ASSIGN   6174>>IF       6175<<ASSIGN
      6175>>ASSIGN   6178>>IF       6178<<ASSIGN
PATT$ENTRY
      3284**DCL      4200<>CALL
PATT$ENTRY.CODE#
      3288**DCL      4185>>IF       4216>>IF       4226>>IF       4241>>IF
PATT$ENTRY.M#
      3288**DCL      4243>>ASSIGN
PATT$ENTRY.N#
      3288**DCL      4185>>IF       4243>>ASSIGN
PATT_ENTRY IN PROCEDURE FIND_SYMBOL
      4902**DCL      4892--PROC
PATT_ENTRY.CODE# IN PROCEDURE FIND_SYMBOL
      4906**DCL      5165>>DOCASE   5405<>CALL     6009>>IF       6135>>IF       6208>>IF
PATT_ENTRY.M# IN PROCEDURE FIND_SYMBOL
      4906**DCL      5183>>ASSIGN   5195>>IF       5196>>ASSIGN
PATT_ENTRY.MATCH$ IN PROCEDURE FIND_SYMBOL
      4907**DCL      5168>>ASSIGN   5171>>CALLBLT  5171>>CALLBLT  5175>>ASSIGN   5175>>ASSIGN
PATT_ENTRY.N# IN PROCEDURE FIND_SYMBOL
      4906**DCL      5184>>IF       5185>>ASSIGN
PATT_ENTRY$
      2865**DCL      3284--IMP-PTR  4169<<ASSIGN   4185>>IF       4185>>IF       4200>>CALL     4216>>IF
      4226>>IF       4241>>IF       4243>>ASSIGN   4243>>ASSIGN   4300<<ASSIGN   4302<<ASSIGN   4303>>ASSIGN
      4304>>ASSIGN
PORT$ IN PROCEDURE FIND_STRING
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:158  
      5518**DCL      5732--IMP-PTR  5889<<ASSIGN
POSITIONS_TO_MOVE IN PROCEDURE FIND_SYMBOL
      5019**DCL      5196<<ASSIGN   5201<>CALL
PREV$PATT.BLINK$ IN PROCEDURE CLEAN_UP
      4646**DCL      4743>>ASSIGN
PREV$PATT.PATTERN$ IN PROCEDURE CLEAN_UP
      4716**DCL      4740>>IF       4753>>IF
PREV$PATT.PATT_INDEX# IN PROCEDURE CLEAN_UP
      4716**DCL      4740>>IF       4753>>IF
PREV$PATT.RANGE IN PROCEDURE CLEAN_UP
      4657**DCL      4777<>CALL
PREV$PATT.RANGE.ENDD IN PROCEDURE CLEAN_UP
      4697**DCL      4761>>ASSIGN   4762<<ASSIGN
PREV$PATT.RANGE.START IN PROCEDURE CLEAN_UP
      4669**DCL      4760>>ASSIGN   4761<<ASSIGN
PREV_TOS_EVAL_PATT$ IN PROCEDURE CLEAN_UP
      4378**DCL      4620--IMP-PTR  4736<<ASSIGN   4738>>DOUNTIL  4740>>IF       4740>>IF       4743<<ASSIGN
      4743>>ASSIGN   4748<<ASSIGN   4753>>IF       4753>>IF       4760>>ASSIGN   4761>>ASSIGN   4761>>ASSIGN
      4762>>ASSIGN   4777>>CALL     4787>>ASSIGN
RCCL
      2868**DCL      4133<>CALL     4135>>IF       5183<<ASSIGN   5184>>IF       5185>>ASSIGN   5185>>ASSIGN
      6093<<ASSIGN   6097<<ASSIGN   6111<<ASSIGN   6114<<ASSIGN   6116<<ASSIGN   6121<<ASSIGN   6123<<ASSIGN
      6131>>IF       6136<<CALLBLT  6203>>IF       6209<<CALLBLT
RGET_FAILED IN PROCEDURE FIND_STRING
      6381**LABEL    5987--CALLALT
RREAD_FAILED IN PROCEDURE FIND_STRING
      6381**LABEL    5955--CALLALT
SEARCH$DATA IN PROCEDURE FIND_STRING
      5676**DCL      6298<>CALL     6350<>CALL
SEARCH$DATA.BYTES IN PROCEDURE FIND_STRING
      5704**DCL      6010<<CALLBLT  6010>>CALLBLT  6136>>CALLBLT  6140>>CALLBLT  6152>>CALLBLT  6158>>IF
      6209>>CALLBLT  6213>>CALLBLT  6219>>CALLBLT  6223>>IF
SEARCH$DATA.LENGTH# IN PROCEDURE FIND_STRING
      5702**DCL      5704--IMP-SIZ  6010>>CALLBLT  6010>>CALLBLT  6041>>IF       6046<<ASSIGN   6046>>ASSIGN
      6048>>ASSIGN   6068>>ASSIGN   6133>>IF       6136>>CALLBLT  6140>>CALLBLT  6149>>ASSIGN   6152>>CALLBLT
      6154>>IF       6158>>IF       6158>>IF       6168>>ASSIGN   6209>>CALLBLT  6213>>CALLBLT  6219>>CALLBLT
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:159  
      6223>>IF       6266>>ASSIGN   6298>>CALL     6350>>CALL
SEARCH$KEY.BYTES IN PROCEDURE FIND_SYMBOL
      5045**DCL      5256>>IF       5309>>IF       5980>>IF       6038>>IF       6094>>IF       6119>>IF
SEARCH$KEY.LENGTH# IN PROCEDURE FIND_SYMBOL
      5043**DCL      5045--IMP-SIZ  5256>>IF       5309>>IF       5980>>IF       6038>>IF       6094>>IF
      6119>>IF
SEARCH$LOCATION IN PROCEDURE FIND_STRING
      5608**DCL      5955<>CALL
SEARCH$RECORD.LENGTH# IN PROCEDURE FIND_SYMBOL
      5124**DCL      5126--IMP-SIZ  5260>>ASSIGN   5262>>ASSIGN   5321>>ASSIGN
SEARCH_KEY$ IN PROCEDURE FIND_SYMBOL
      5021**DCL      5035--IMP-PTR  5242<<ASSIGN   5242<<ASSIGN   5256>>IF       5256>>IF       5295<<ASSIGN
      5295<<ASSIGN   5309>>IF       5309>>IF       5967<<ASSIGN   5967<<ASSIGN   5980>>IF       5980>>IF
      6025<<ASSIGN   6025<<ASSIGN   6038>>IF       6038>>IF       6089<<ASSIGN   6089<<ASSIGN   6094>>IF
      6094>>IF       6119>>IF       6119>>IF
SEARCH_LOCATION$ IN PROCEDURE FIND_STRING
      5519**DCL      5608--IMP-PTR  5890<<ASSIGN   5955>>CALL     6285<<ASSIGN
SEARCH_NODE IN PROCEDURE FIND_STRING
      5558**DCL      5909<<ASSIGN   5987<>CALL
SEARCH_NODE.DATA$ IN PROCEDURE FIND_STRING
      5590**DCL      5676--IMP-PTR  5910<<ASSIGN   6010>>CALLBLT  6010>>CALLBLT  6010>>CALLBLT  6010>>CALLBLT
      6041>>IF       6046>>ASSIGN   6046>>ASSIGN   6048>>ASSIGN   6068>>ASSIGN   6133>>IF       6136>>CALLBLT
      6136>>CALLBLT  6140>>CALLBLT  6140>>CALLBLT  6149>>ASSIGN   6152>>CALLBLT  6152>>CALLBLT  6154>>IF
      6158>>IF       6158>>IF       6158>>IF       6168>>ASSIGN   6209>>CALLBLT  6209>>CALLBLT  6213>>CALLBLT
      6213>>CALLBLT  6219>>CALLBLT  6219>>CALLBLT  6223>>IF       6223>>IF       6266>>ASSIGN   6298>>CALL
      6298>>CALL     6300<<ASSIGN   6350>>CALL     6350>>CALL     6352<<ASSIGN
SEARCH_NODE.KEY IN PROCEDURE FIND_STRING
      5572**DCL      5990>>IF       6007>>ASSIGN   6008<<ASSIGN   6309<<ASSIGN   6361<<ASSIGN
SEARCH_NODE.KEY.REP# IN PROCEDURE FIND_STRING
      5574**DCL      6308>>IF       6360>>IF
SEARCH_NODE.KEY.V$ IN PROCEDURE FIND_STRING
      5574**DCL      6308>>CALL     6308>>CALL     6360>>CALL     6360>>CALL
SEARCH_NODE.SPEC IN PROCEDURE FIND_STRING
      5586**DCL      6319<<ASSIGN   6371<<ASSIGN
SEARCH_NODE.SPEC.REP# IN PROCEDURE FIND_STRING
      5588**DCL      6318>>IF       6370>>IF
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:160  
SEARCH_NODE.SPEC.V$ IN PROCEDURE FIND_STRING
      5588**DCL      6318>>CALL     6318>>CALL     6370>>CALL     6370>>CALL
SEARCH_RECORD$ IN PROCEDURE FIND_SYMBOL
      5023**DCL      5098--IMP-PTR  5258<<ASSIGN   5260>>ASSIGN   5262>>ASSIGN   5319<<ASSIGN   5321>>ASSIGN
SEARCH_RELATIVE IN PROCEDURE FIND_STRING
      5520**DCL      5891<<ASSIGN   5935>>IF       5955<>CALL     5958>>IF       6272<<ASSIGN   6281<<ASSIGN
SEARCH_TABLE
      2761**DCL      5182<<ASSIGN
SEARCH_TABLE.FLAGS
      2763**DCL      5185<<ASSIGN   6136>>CALLBLT  6209>>CALLBLT
SIGNAL
      2579**DCL       103--PROC     4142<<ASSIGN   4200<>CALL     4204>>IF       4315>>IF       4737>>IF
SKIPPED_BYTES IN PROCEDURE FIND_SYMBOL
      5020**DCL      5222<<ASSIGN   5260<<ASSIGN   5280<<ASSIGN   5327>>IF       5331>>ASSIGN   5334>>IF
SKIP_COUNT
      2862**DCL      4130<<ASSIGN   4132>>IF       4287<<ASSIGN   4287>>ASSIGN   4288>>IF
START_SEARCH_LOC
      2784**DCL      4110<<ASSIGN   4121<>CALL     4127<>CALL     4156>>ASSIGN   4158>>ASSIGN   4159<<ASSIGN
      4271<<ASSIGN   4273>>ASSIGN   4274<<ASSIGN   4303<<ASSIGN   4725>>IF       4726<>CALL     4760<<ASSIGN
      4763>>ASSIGN
STREAM
      2882**DCL      4191<>CALL     4777<>CALL     4777<>CALL     5201<>CALL     5227<>CALL     5264<>CALL
      5284<>CALL     5955<>CALL     5987<>CALL
STREAM.CURRENT
      2933**DCL      5269<>CALL     5274<>CALL     5316<>CALL
STREAM.CURRENT.EOF
      2949**DCL      5233>>IF       5980>>IF
STREAM.CURRENT.KEY
      2945**DCL      5951>>ASSIGN
STREAM.CURRENT.KEY.REP#
      2947**DCL      5253>>IF       5306>>IF       5951>>IF       5977>>IF
STREAM.CURRENT.KEY.V$
      2947**DCL      5253>>ASSIGN   5253--ASSIGN   5306>>ASSIGN   5306--ASSIGN   5951>>CALL     5951>>CALL
      5977>>ASSIGN   5977--ASSIGN
STREAM.PORT$
      2908**DCL      5258>>ASSIGN   5319>>ASSIGN   5889>>ASSIGN
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:161  
STREAM$KEY.BYTES IN PROCEDURE FIND_SYMBOL
      5068**DCL      5256>>IF       5309>>IF       5980>>IF
STREAM$KEY.LENGTH# IN PROCEDURE FIND_SYMBOL
      5066**DCL      5068--IMP-SIZ  5256>>IF       5309>>IF       5980>>IF
STREAM_KEY$ IN PROCEDURE FIND_SYMBOL
      5022**DCL      5058--IMP-PTR  5253<<ASSIGN   5253<<ASSIGN   5256>>IF       5256>>IF       5306<<ASSIGN
      5306<<ASSIGN   5309>>IF       5309>>IF       5977<<ASSIGN   5977<<ASSIGN   5980>>IF       5980>>IF
STRING_LENGTH
      2869**DCL      2760--IMP-SIZ  2766--IMP-SIZ  5168<<ASSIGN   5171>>CALLBLT  5171>>CALLBLT  5175>>ASSIGN
      5175>>ASSIGN   5187<<ASSIGN   6140>>CALLBLT  6146>>IF       6149>>ASSIGN   6152>>CALLBLT  6158>>IF
      6167>>ASSIGN   6168<<ASSIGN   6169>>ASSIGN   6173>>DOWHILE  6173>>DOWHILE  6176>>ASSIGN   6176>>ASSIGN
      6185>>ASSIGN   6193>>ASSIGN   6205>>IF       6212>>IF       6213>>CALLBLT  6217>>ASSIGN   6219>>CALLBLT
      6223>>IF       6223>>IF       6239>>ASSIGN
S_POS IN PROCEDURE FIND_STRING
      5594**DCL      6167<<ASSIGN   6174>>IF       6178>>IF       6207<<ASSIGN   6209>>CALLBLT  6213>>CALLBLT
      6217<<ASSIGN   6217>>ASSIGN   6219>>CALLBLT  6226<<ASSIGN
THIS_WILD$ IN PROCEDURE CLEAN_UP
      4379**DCL      4512--IMP-PTR  4771<<ASSIGN   4773>>DOUNTIL  4775<<ASSIGN   4775>>ASSIGN   4776>>IF
      4777>>CALL
TOS$EVAL.CTRL_REC_MATCHED_EOF
      3222**DCL      4259>>IF       5327>>IF       5335<<ASSIGN
TOS$EVAL.ENCLOSING
      3025**DCL      4191<>CALL     5201<>CALL     5955<>CALL     5987<>CALL
TOS$EVAL.ENCLOSING.ENDD
      3065**DCL      4117<>CALL
TOS$EVAL.ENCLOSING.START
      3037**DCL      4114<>CALL
TOS$EVAL.ENCLOSING.START.POSITION#
      3053**DCL      5986<<ASSIGN   5989<<ASSIGN
TOS$EVAL.RANGE.ENDD
      3134**DCL      4127<>CALL     4133<>CALL
TOS$EVAL.RANGE.START
      3106**DCL      4121<>CALL     4123<>CALL     4133<>CALL
TOS$EVAL.REMAINING#
      3222**DCL      4316<<ASSIGN
TOS$EVAL_PATT
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:162  
      3299**DCL      4200<>CALL     4221<>CALL     4266<>CALL     4309<>CALL     4785<>CALL
TOS$EVAL_PATT.BLINK$
      3325**DCL      4227>>ASSIGN   4229>>IF       4259>>IF       4263>>DOUNTIL  4265>>ASSIGN   4308>>ASSIGN
      4748>>ASSIGN
TOS$EVAL_PATT.DIRECTION#
      3395**DCL      4160<<ASSIGN   4171>>IF       4185>>IF       4191<>CALL     4236<<ASSIGN
TOS$EVAL_PATT.PATTERN$
      3395**DCL      4153<<ASSIGN   4164>>ASSIGN   4202>>ASSIGN
TOS$EVAL_PATT.PATT_INDEX#
      3395**DCL      4154<<ASSIGN   4168>>DOUNTIL  4169>>ASSIGN   4250<<ASSIGN   4250>>ASSIGN
TOS$EVAL_PATT.RANGE.ENDD
      3376**DCL      4156<<ASSIGN   4175>>ASSIGN   4176<<ASSIGN   4179<>CALL     4272>>ASSIGN   4273<<ASSIGN
TOS$EVAL_PATT.RANGE.START
      3348**DCL      4158<<ASSIGN   4173<>CALL     4175<<ASSIGN   4191<>CALL     4271>>ASSIGN   4272<<ASSIGN
      4762>>ASSIGN   4763<<ASSIGN
TOS$EVAL_PATT.REMAINING_BYTES#
      3396**DCL      4162<<ASSIGN   4216>>IF       4227<<ASSIGN   4243<<ASSIGN   4247<<ASSIGN   4263>>DOUNTIL
TOS$EVAL_PATT.REMAINING_RECS#
      3395**DCL      4161<<ASSIGN   4237<<ASSIGN
TOS_EVAL_PATT IN PROCEDURE FIND_SYMBOL
      4917**DCL      4892--PROC     5394--ASSIGN   5402--ASSIGN
TOS_EVAL_PATT.DIRECTION# IN PROCEDURE FIND_SYMBOL
      5013**DCL      5197>>IF       5201<>CALL     5230>>IF       5992>>IF       6040>>IF       6058>>IF
      6065>>IF       6075>>IF       6107>>IF       6129>>IF       6265>>IF
TOS_EVAL_PATT.RANGE.ENDD IN PROCEDURE FIND_SYMBOL
      4994**DCL      5192<>CALL     5198--ASSIGN   5274<>CALL     5281<<ASSIGN   5311<>CALL     5390<>CALL
      5398<>CALL     5413<>CALL     6190<>CALL     6236<>CALL
TOS_EVAL_PATT.RANGE.ENDD.EOF IN PROCEDURE FIND_SYMBOL
      5010**DCL      5224<<ASSIGN   5327>>IF       5335>>ASSIGN
TOS_EVAL_PATT.RANGE.ENDD.POSITION# IN PROCEDURE FIND_SYMBOL
      5010**DCL      5283<<ASSIGN   6193<<ASSIGN   6193>>ASSIGN   6239<<ASSIGN   6239>>ASSIGN
TOS_EVAL_PATT.RANGE.START IN PROCEDURE FIND_SYMBOL
      4966**DCL      5192<>CALL     5200--ASSIGN   5227<>CALL     5268<>CALL     5269<>CALL     5281>>ASSIGN
      5282<<ASSIGN   5311<>CALL     5316<>CALL     5390<>CALL     5398<>CALL     5410<>CALL     5890--ASSIGN
      6190<>CALL     6236<>CALL
TOS_EVAL_PATT.RANGE.START.EOF IN PROCEDURE FIND_SYMBOL
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:163  
      4982**DCL      5223>>IF       5994<<ASSIGN
TOS_EVAL_PATT.RANGE.START.KEY IN PROCEDURE FIND_SYMBOL
      4978**DCL      5906>>ASSIGN   6005<<ASSIGN   6007<<ASSIGN
TOS_EVAL_PATT.RANGE.START.KEY.REP# IN PROCEDURE FIND_SYMBOL
      4980**DCL      5242>>IF       5295>>IF       5906>>IF       6004>>IF       6025>>IF       6089>>IF
TOS_EVAL_PATT.RANGE.START.KEY.V$ IN PROCEDURE FIND_SYMBOL
      4980**DCL      5242>>ASSIGN   5242--ASSIGN   5295>>ASSIGN   5295--ASSIGN   5906>>CALL     5906>>CALL
      6004>>CALL     6004>>CALL     6025>>ASSIGN   6025--ASSIGN   6089>>ASSIGN   6089--ASSIGN
TOS_EVAL_PATT.RANGE.START.POSITION# IN PROCEDURE FIND_SYMBOL
      4982**DCL      5260>>ASSIGN   5262<<ASSIGN   5280>>ASSIGN   5321<<ASSIGN   6041>>IF       6046>>ASSIGN
      6048<<ASSIGN   6060<<ASSIGN   6066<<ASSIGN   6068<<ASSIGN   6109>>IF       6112>>IF       6136>>CALLBLT
      6140>>CALLBLT  6149>>ASSIGN   6182>>IF       6185>>ASSIGN   6189<<ASSIGN   6205>>IF       6207>>ASSIGN
      6230>>IF       6232>>ASSIGN   6235<<ASSIGN   6266>>ASSIGN   6275>>IF       6278>>ASSIGN
TOS_EVAL_PATT.REMAINING_BYTES# IN PROCEDURE FIND_SYMBOL
      5014**DCL      5327>>IF       5331<<ASSIGN   5331>>ASSIGN   5334>>IF       6182>>IF       6185<<ASSIGN
      6185>>ASSIGN   6230>>IF       6232<<ASSIGN   6232>>ASSIGN   6268>>IF       6270<<ASSIGN   6270>>ASSIGN
      6275>>IF       6278<<ASSIGN   6278>>ASSIGN
TOS_EVAL_PATT.REMAINING_RECS# IN PROCEDURE FIND_SYMBOL
      5013**DCL      5201<>CALL     6146>>IF       6260>>IF       6262<<ASSIGN   6262>>ASSIGN
TOS_EVAL_PATT$
      2771**DCL      3299--IMP-PTR  4107<<ASSIGN   4152<<ASSIGN   4153>>ASSIGN   4154>>ASSIGN   4156>>ASSIGN
      4158>>ASSIGN   4160>>ASSIGN   4161>>ASSIGN   4162>>ASSIGN   4164>>ASSIGN   4168>>DOUNTIL  4169>>ASSIGN
      4171>>IF       4173>>CALL     4175>>ASSIGN   4175>>ASSIGN   4176>>ASSIGN   4179>>CALL     4185>>IF
      4191>>CALL     4191>>CALL     4200>>CALL     4202>>ASSIGN   4213>>ASSIGN   4216>>IF       4216>>IF
      4216>>IF       4221>>CALL     4223>>ASSIGN   4224<<ASSIGN   4227>>ASSIGN   4229>>IF       4236>>ASSIGN
      4237>>ASSIGN   4243>>ASSIGN   4247>>ASSIGN   4250>>ASSIGN   4250>>ASSIGN   4259>>IF       4263>>DOUNTIL
      4263>>DOUNTIL  4265>>ASSIGN   4266>>CALL     4268<<ASSIGN   4271>>ASSIGN   4272>>ASSIGN   4272>>ASSIGN
      4273>>ASSIGN   4286>>ASSIGN   4307>>DOUNTIL  4308>>ASSIGN   4309>>CALL     4311<<ASSIGN   4736>>ASSIGN
      4747>>DOWHILE  4748>>ASSIGN   4762>>ASSIGN   4763>>ASSIGN   4785>>CALL     4787<<ASSIGN
VD$BUFFER.LENGTH# IN PROCEDURE FIND_STRING
      5873**DCL      5875--IMP-SIZ
VD$IT_BLOCK_EXPR.OPTIONS.LEVEL#
      3987**DCL      4113>>ASSIGN
VD$LOCATION
      2812**DCL      4303>>ASSIGN   4304<<ASSIGN
VD$PATTERN.ENTRIES.CODE#
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:164  
      3768**DCL      4740>>IF       4753>>IF
VD$PORT.LEVEL.DATA$
      4101**DCL      5258>>ASSIGN   5319>>ASSIGN
VD$TEXTC.BYTES
      3790**DCL      6094>>IF       6119>>IF
VD$TEXTC.LENGTH#
      3788**DCL      3790--IMP-SIZ  6094>>IF       6119>>IF
VD$TEXTC_REMOTE
      3820**DCL      5906<>CALL     5951<>CALL     6004<>CALL     6293<>CALL     6308<>CALL     6318<>CALL
      6328<>CALL     6347<>CALL     6360<>CALL     6370<>CALL     6380<>CALL
VD$TEXTC_REMOTE.BYTES
      3851**DCL      5171>>CALLBLT  5175>>ASSIGN
VD$TEXTC_REMOTE.LENGTH#
      3849**DCL      3851--IMP-SIZ  5168>>ASSIGN   5171>>CALLBLT  5175>>ASSIGN   5242--ASSIGN   5253--ASSIGN
      5295--ASSIGN   5306--ASSIGN   5906>>CALL     5951>>CALL     5967--ASSIGN   5977--ASSIGN   6004>>CALL
      6025--ASSIGN   6035--ASSIGN   6089--ASSIGN   6293>>CALL     6308>>CALL     6318>>CALL     6328>>CALL
      6347>>CALL     6360>>CALL     6370>>CALL     6380>>CALL
VD$WILD_STRINGS.N_WILDCARDS# IN PROCEDURE CLEAN_UP
      4425**DCL      4771>>ASSIGN
VDA$LREAD
      2582**DCL-ENT  5227--CALL     5264--CALL     5284--CALL
VDE$IMOVE_BY_POSITIONS
      2583**DCL-ENT  4191--CALL     5201--CALL
VDE$RGET
      2585**DCL-ENT  5987--CALL
VDE$RREAD
      2584**DCL-ENT  5955--CALL
VDG$COMPARE_LOCS
      2590**DCL-ENT  4133--CALL
VDG$COMPARE_LOC_W_PTRS
      2589**DCL-ENT  5410--CALL     5413--CALL
VDG$ESCREECH
      2598**DCL-ENT  5389--CALL     5405--CALL
VDG$LOCATION_TO_PTRS
      2588**DCL-ENT  4114--CALL     4117--CALL     4123--CALL
VDG$OALLOC
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:165  
      2591**DCL-ENT  4150--CALL
VDG$OCLEAR_LOCATION
      2596**DCL-ENT  4173--CALL     4179--CALL     4726--CALL     5268--CALL
VDG$OCOPY
      2593**DCL-ENT  4221--CALL     5906--CALL     5951--CALL
VDG$OCOPY_LOCATION
      2597**DCL-ENT  4121--CALL     4127--CALL     5192--CALL     5269--CALL     5274--CALL     5311--CALL
      5316--CALL     5390--CALL     5398--CALL     6190--CALL     6236--CALL
VDG$OFREE
      2592**DCL-ENT  4266--CALL     4309--CALL     4785--CALL     6004--CALL     6293--CALL     6298--CALL
      6308--CALL     6318--CALL     6328--CALL     6347--CALL     6350--CALL     6360--CALL     6370--CALL
      6380--CALL
VDI$BINSERT
      2586**DCL-ENT  4777--CALL
VDI$CSET_COUNT
      2587**DCL-ENT  4722--CALL
VD_$CASE.V#
      2679**DCL      5170>>IF       6009>>IF
VD_$MATCH_LIMIT.V#
      2724**DCL      4237>>ASSIGN   6146>>IF
VD_6E.SOURCE.OPERAND.STREAM$
      2630**DCL      4777>>CALL
VD_6E.SOURCE.WILD_STRINGS
      2632**DCL      4737>>IF
VD_6E.WILD_STRINGS$
      2632**DCL      4397--IMP-PTR  4771>>ASSIGN   4771>>ASSIGN   4773>>DOUNTIL
VD_LOC_$MATCHES
      2735**DCL      4722<>CALL
VD_STATIC_TEMP
      2759**DCL      2761--REDEF    2764--REDEF
VIRTUAL_BOR IN PROCEDURE FIND_STRING
      5597**DCL      6079<<ASSIGN   6108<<ASSIGN   6205>>IF       6207>>ASSIGN   6209>>CALLBLT  6213>>CALLBLT
      6219>>CALLBLT  6223>>IF       6229>>ASSIGN
WILD.W IN PROCEDURE CLEAN_UP
      4540**DCL      4771--ASSIGN   4775--ASSIGN
WILD.W.N# IN PROCEDURE CLEAN_UP
PL6.E3A0      #001=VDE$IPATTERN File=VDE$IPATTERN.:VDA5TSI                       FRI 07/04/97 11:12 Page:166  
      4540**DCL      4776>>IF
WILD.W.RANGE IN PROCEDURE CLEAN_UP
      4552**DCL      4777<>CALL
WILD$LOC IN PROCEDURE FIND_SYMBOL
      5139**DCL      5201<>CALL
WILD_COUNT IN PROCEDURE CLEAN_UP
      4380**DCL      4735<<ASSIGN   4742<<ASSIGN   4742>>ASSIGN   4753>>IF       4776>>IF       4782<<ASSIGN
      4782>>ASSIGN
WILD_LOC$ IN PROCEDURE FIND_SYMBOL
      5024**DCL      5139--IMP-PTR  5198<<ASSIGN   5200<<ASSIGN   5201>>CALL
