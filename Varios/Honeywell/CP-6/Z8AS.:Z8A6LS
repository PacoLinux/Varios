VERSION A06

PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:1    
        1        1        /*M* Z8AS$SR_ETT -- Search the ETT table for a particular triad */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9        /*P*   NAME: Z8AS$SR_ETT
       10       10            PURPOSE: Given an ID, a LOP, and a ROP; search the ETT table
       11       11                     looking for a triad to match said (ID, LOP, ROP).
       12       12        */
       13       13
       14       14        /*D*   NAME: Z8AS$SR_ETT
       15       15              CALL:: SRCH.ID  = %id ;
       16       16                     SRCH.LOP = pointer_to_left_operand ;
       17       17                     SRCH.ROP = pointer_to_right_operand ;
       18       18                     CALL Z8AS$SR_ETT (Returned_pointer) ;
       19       19          INTERFACE: Uses %RESERVE_ETT if triad is not found.
       20       20              INPUT: SRCH.ID, SRCH.LOP, SRCH.ROP
       21       21             OUTPUT: RESULT$ (arg#1) -- Ptr to ETT item found or reserved.
       22       22        DESCRIPTION:
       23       23           Search the ETT for the (ID,LOP,ROP) triad.
       24       24           Set RESULT$ equal to the found triad.
       25       25           The hash used is simply the ID field.
       26       26           ETT_BUCKETS is the array of head links.
       27       27           The ADDO field is used to link triads together.
       28       28        */
       29       29
       30       30        %EJECT;
PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:2    
       31       31        Z8AS$SR_ETT: PROC (RESULT$) ;
       32       32
       33       33        %EQU PHASE = 1 ;
       34       34        %INCLUDE Z8A_DEFC ;
       35      102        %INCLUDE Z8A_COMCOM ;
       36      752        %INCLUDE Z8A_SUPP_MAC ;
       37     3152        %INCLUDE Z8A_ILL ;
       38     3845        %INCLUDE Z8A_ETT ;
       39     4146        %INCLUDE Z8A_SRCH;
       40     4195
       41     4196    1   DCL   HASH        UBIN WORD ;
       42     4197    1   DCL 1 HSH         REDEF HASH,
       43     4198    1       2 *           UBIN (27) UNAL,
       44     4199    1       2 BUCKET      UBIN ( 9) UNAL ;
       45     4200    1   DCL   RESULT$     PTR ;
       46     4201    1   DCL   BUCKET#     UBIN WORD ;
       47     4202
       48     4203        %EJECT;
PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:3    
       49     4204    2          IF COMCOM.CURRENT.PHASE <= 2 THEN DO ;
       50     4205
       51     4206    2            HASH = SRCH.ID + SRCH.LOPCON.UPPER + SRCH.LOPCON.LOWER ;
       52     4207    2            BUCKET# = HSH.BUCKET ;
       53     4208
       54     4209
       55     4210    2            RESULT$ = ETT_BUCKETS (BUCKET#) ;
       56     4211    3            DO WHILE (RESULT$ ~= ADDR(NIL)) ;
       57     4212    3              IF  SRCH.LOP = RESULT$->ETT.LOP
       58     4213    3              AND SRCH.ID  = RESULT$->ETT.ID
       59     4214    4              THEN DO ;
       60     4215    4                IF  SRCH.ID = %BASE
       61     4216    5                AND SRCH.ROP = ADDR (NIL) THEN DO ;
       62     4217    5                  GOTO EXIT_STAGE_LEFT ;
       63     4218    5                END ;
       64     4219    5                ELSE DO ;
       65     4220    5                  IF SRCH.ROP = RESULT$->ETT.ROP
       66     4221    5                  THEN GOTO EXIT_STAGE_LEFT ;
       67     4222    5                END ;
       68     4223    4              END ;
       69     4224    3              RESULT$ = RESULT$->ETT.NEXT$ ;
       70     4225    3            END /* DO WHILE */ ;
       71     4226
       72     4227    2          END /* If Phase <= 2 */ ;
       73     4228
       74     4229               %RESERVE_ETT (ITEM=SRCH.ID, POINTER=RESULT$) ;
       75     4256    1          RESULT$->ETT.LOP = SRCH.LOP ;
       76     4257    1          RESULT$->ETT.ROP = SRCH.ROP ;
       77     4258
       78     4259    2          IF COMCOM.CURRENT.PHASE <= 2 THEN DO ;
       79     4260    2            RESULT$->ETT.NEXT$ = ETT_BUCKETS(BUCKET#) ;
       80     4261    2            ETT_BUCKETS(BUCKET#) = RESULT$ ;
       81     4262    2          END ;
       82     4263    2          ELSE DO ;
       83     4264    2            RESULT$->ETT.NEXT$ = ADDR(NIL) ;
       84     4265    2          END ;
       85     4266
PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:4    
       86     4267    1          IF  SRCH.ID = %BASE
       87     4268    2          AND SRCH.ROP = ADDR (NIL) THEN DO ;
       88     4269                 %INSERT_INTO_SL_LIST (PTR = RESULT$, ITEM = ETT,
       89     4270                                       HEAD = "COMCOM.H_BASE", NEXT = ROP) ;
       90     4283    2          END ;
       91     4284
       92     4285    1   EXIT_STAGE_LEFT:
       93     4286
       94     4287    1          RETURN ;
       95     4288
       96     4289    1   END Z8AS$SR_ETT ;

PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:5    
--  Include file information  --

   Z8A_SRCH.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ILL.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8AS$SR_ETT.

   Procedure Z8AS$SR_ETT requires 108 words for executable code.
   Procedure Z8AS$SR_ETT requires 8 words of local(AUTO) storage.

    No errors detected in file Z8AS.:Z8A6TSI    .

PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:6    

 Object Unit name= Z8AS$SR_ETT                                File name= Z8AS.:Z8A6TOU
 UTS= AUG 09 '97 10:49:49.24 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  ILL$
    2  LblCom even  none     5      5  ILL_
    3  LblCom even  none     1      1  ETT$
    4  LblCom even  none     1      1  HEAD_ETT$
    5  LblCom even  none   512   1000  ETT_BUCKETS
    6  LblCom even  none     5      5  ETT_
    7  LblCom even  none     3      3  SRCH
    8   Proc  even  none   108    154  Z8AS$SR_ETT
    9  RoData even  none     3      3  Z8AS$SR_ETT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes            yes      Std        1  Z8AS$SR_ETT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 Z8AR$RESERVER
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM                           r    ILL_STEP

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:8    


        1        1        /*M* Z8AS$SR_ETT -- Search the ETT table for a particular triad */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9        /*P*   NAME: Z8AS$SR_ETT
       10       10            PURPOSE: Given an ID, a LOP, and a ROP; search the ETT table
       11       11                     looking for a triad to match said (ID, LOP, ROP).
       12       12        */
       13       13
       14       14        /*D*   NAME: Z8AS$SR_ETT
       15       15              CALL:: SRCH.ID  = %id ;
       16       16                     SRCH.LOP = pointer_to_left_operand ;
       17       17                     SRCH.ROP = pointer_to_right_operand ;
       18       18                     CALL Z8AS$SR_ETT (Returned_pointer) ;
       19       19          INTERFACE: Uses %RESERVE_ETT if triad is not found.
       20       20              INPUT: SRCH.ID, SRCH.LOP, SRCH.ROP
       21       21             OUTPUT: RESULT$ (arg#1) -- Ptr to ETT item found or reserved.
       22       22        DESCRIPTION:
       23       23           Search the ETT for the (ID,LOP,ROP) triad.
       24       24           Set RESULT$ equal to the found triad.
       25       25           The hash used is simply the ID field.
       26       26           ETT_BUCKETS is the array of head links.
       27       27           The ADDO field is used to link triads together.
       28       28        */
       29       29
       30       30        %EJECT;
PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:9    
       31       31        Z8AS$SR_ETT: PROC (RESULT$) ;

     31  8 000000   000000 700200 xent  Z8AS$SR_ETT  TSX0  ! X66_AUTO_1
         8 000001   000010 000001                    ZERO    8,1

       32       32
       33       33        %EQU PHASE = 1 ;
       34       34        %INCLUDE Z8A_DEFC ;
       35      102        %INCLUDE Z8A_COMCOM ;
       36      752        %INCLUDE Z8A_SUPP_MAC ;
       37     3152        %INCLUDE Z8A_ILL ;
       38     3845        %INCLUDE Z8A_ETT ;
       39     4146        %INCLUDE Z8A_SRCH;
       40     4195
       41     4196    1   DCL   HASH        UBIN WORD ;
       42     4197    1   DCL 1 HSH         REDEF HASH,
       43     4198    1       2 *           UBIN (27) UNAL,
       44     4199    1       2 BUCKET      UBIN ( 9) UNAL ;
       45     4200    1   DCL   RESULT$     PTR ;
       46     4201    1   DCL   BUCKET#     UBIN WORD ;
       47     4202
       48     4203        %EJECT;
PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:10   
       49     4204    2          IF COMCOM.CURRENT.PHASE <= 2 THEN DO ;

   4204  8 000002   000132 235000 xsym               LDA     COMCOM+90
         8 000003   000003 115007                    CMPA    3,DL
         8 000004   000056 603000 8                  TRC     s:4231

       50     4205
       51     4206    2            HASH = SRCH.ID + SRCH.LOPCON.UPPER + SRCH.LOPCON.LOWER ;

   4206  8 000005   000001 236000 7                  LDQ     SRCH+1
         8 000006   000022 732000                    QRS     18
         8 000007   000000 036000 7                  ADLQ    SRCH
         8 000010   200006 756100                    STQ     BUCKET#+1,,AUTO
         8 000011   000001 236000 7                  LDQ     SRCH+1
         8 000012   000022 736000                    QLS     18
         8 000013   000022 732000                    QRS     18
         8 000014   200007 756100                    STQ     BUCKET#+2,,AUTO
         8 000015   200006 236100                    LDQ     BUCKET#+1,,AUTO
         8 000016   200007 036100                    ADLQ    BUCKET#+2,,AUTO
         8 000017   200004 756100                    STQ     HASH,,AUTO

       52     4207    2            BUCKET# = HSH.BUCKET ;

   4207  8 000020   200004 236100                    LDQ     HASH,,AUTO
         8 000021   000777 376007                    ANQ     511,DL
         8 000022   200005 756100                    STQ     BUCKET#,,AUTO

       53     4208
       54     4209
       55     4210    2            RESULT$ = ETT_BUCKETS (BUCKET#) ;

   4210  8 000023   000000 236006 5                  LDQ     ETT_BUCKETS,QL
         8 000024   200003 470500                    LDP0    @RESULT$,,AUTO
         8 000025   000000 756100                    STQ     0,,PR0

       56     4211    3            DO WHILE (RESULT$ ~= ADDR(NIL)) ;

PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:11   
   4211  8 000026   000054 710000 8                  TRA     s:4225

       57     4212    3              IF  SRCH.LOP = RESULT$->ETT.LOP

   4212  8 000027   200003 470500                    LDP0    @RESULT$,,AUTO
         8 000030   000000 471500                    LDP1    0,,PR0
         8 000031   000001 236000 7                  LDQ     SRCH+1
         8 000032   100001 116100                    CMPQ    1,,PR1
         8 000033   000052 601000 8                  TNZ     s:4224
         8 000034   100000 236100                    LDQ     0,,PR1
         8 000035   000022 772000                    QRL     18
         8 000036   000000 116000 7                  CMPQ    SRCH
         8 000037   000052 601000 8                  TNZ     s:4224

       58     4213    3              AND SRCH.ID  = RESULT$->ETT.ID
       59     4214    4              THEN DO ;

       60     4215    4                IF  SRCH.ID = %BASE

   4215  8 000040   000000 235000 7                  LDA     SRCH
         8 000041   000001 115007                    CMPA    1,DL
         8 000042   000047 601000 8                  TNZ     s:4220
         8 000043   000002 236000 7                  LDQ     SRCH+2
         8 000044   000000 116000 9                  CMPQ    0
         8 000045   000047 601000 8                  TNZ     s:4220

       61     4216    5                AND SRCH.ROP = ADDR (NIL) THEN DO ;

       62     4217    5                  GOTO EXIT_STAGE_LEFT ;

   4217  8 000046   000153 710000 8                  TRA     EXIT_STAGE_LEFT

       63     4218    5                END ;
       64     4219    5                ELSE DO ;

       65     4220    5                  IF SRCH.ROP = RESULT$->ETT.ROP

PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:12   
   4220  8 000047   000002 236000 7                  LDQ     SRCH+2
         8 000050   100002 116100                    CMPQ    2,,PR1
         8 000051   000153 600000 8                  TZE     EXIT_STAGE_LEFT

       66     4221    5                  THEN GOTO EXIT_STAGE_LEFT ;
       67     4222    5                END ;

       68     4223    4              END ;

       69     4224    3              RESULT$ = RESULT$->ETT.NEXT$ ;

   4224  8 000052   100003 236100                    LDQ     3,,PR1
         8 000053   000000 756100                    STQ     0,,PR0

       70     4225    3            END /* DO WHILE */ ;

   4225  8 000054   000000 116000 9                  CMPQ    0
         8 000055   000027 601000 8                  TNZ     s:4212

       71     4226
       72     4227    2          END /* If Phase <= 2 */ ;

       73     4228
       74     4229               %RESERVE_ETT (ITEM=SRCH.ID, POINTER=RESULT$) ;

   4231  8 000056   000000 236000 4                  LDQ     HEAD_ETT$
         8 000057   000000 116000 9                  CMPQ    0
         8 000060   000105 601000 8                  TNZ     s:4243

   4233  8 000061   000002 236000 6                  LDQ     ETT_+2
         8 000062   000005 036007                    ADLQ    5,DL
         8 000063   000003 116000 6                  CMPQ    ETT_+3
         8 000064   000075 604000 8                  TMI     s:4235

   4234  8 000065   000002 236000 9                  LDQ     2
         8 000066   200006 756100                    STQ     BUCKET#+1,,AUTO
         8 000067   200006 630500                    EPPR0   BUCKET#+1,,AUTO
PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:13   
         8 000070   200007 450500                    STP0    BUCKET#+2,,AUTO
         8 000071   200007 630500                    EPPR0   BUCKET#+2,,AUTO
         8 000072   000001 631400 9                  EPPR1   1
         8 000073   000000 701000 xent               TSX1    Z8AR$RESERVER
         8 000074   000000 011000                    NOP     0

   4235  8 000075   000002 236000 6                  LDQ     ETT_+2
         8 000076   000022 736000                    QLS     18
         8 000077   000001 036000 6                  ADLQ    ETT_+1
         8 000100   200003 470500                    LDP0    @RESULT$,,AUTO
         8 000101   000000 756100                    STQ     0,,PR0

   4236  8 000102   000005 236007                    LDQ     5,DL
         8 000103   000002 056000 6                  ASQ     ETT_+2

   4237  8 000104   000112 710000 8                  TRA     s:4253

   4243  8 000105   200003 470500                    LDP0    @RESULT$,,AUTO
         8 000106   000000 756100                    STQ     0,,PR0

   4244  8 000107   000000 471400 4                  LDP1    HEAD_ETT$
         8 000110   100003 236100                    LDQ     3,,PR1
         8 000111   000000 756000 4                  STQ     HEAD_ETT$

   4253  8 000112   000000 471500                    LDP1    0,,PR0
         8 000113   000000 720000 7                  LXL0    SRCH
         8 000114   100000 740100                    STX0    0,,PR1

       75     4256    1          RESULT$->ETT.LOP = SRCH.LOP ;

   4256  8 000115   000000 471500                    LDP1    0,,PR0
         8 000116   000001 236000 7                  LDQ     SRCH+1
         8 000117   100001 756100                    STQ     1,,PR1

       76     4257    1          RESULT$->ETT.ROP = SRCH.ROP ;

   4257  8 000120   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:14   
         8 000121   000002 236000 7                  LDQ     SRCH+2
         8 000122   100002 756100                    STQ     2,,PR1

       77     4258
       78     4259    2          IF COMCOM.CURRENT.PHASE <= 2 THEN DO ;

   4259  8 000123   000132 235000 xsym               LDA     COMCOM+90
         8 000124   000003 115007                    CMPA    3,DL
         8 000125   000135 603000 8                  TRC     s:4264

       79     4260    2            RESULT$->ETT.NEXT$ = ETT_BUCKETS(BUCKET#) ;

   4260  8 000126   000000 471500                    LDP1    0,,PR0
         8 000127   200005 720100                    LXL0    BUCKET#,,AUTO
         8 000130   000000 236010 5                  LDQ     ETT_BUCKETS,X0
         8 000131   100003 756100                    STQ     3,,PR1

       80     4261    2            ETT_BUCKETS(BUCKET#) = RESULT$ ;

   4261  8 000132   000000 236100                    LDQ     0,,PR0
         8 000133   000000 756010 5                  STQ     ETT_BUCKETS,X0

       81     4262    2          END ;

   4262  8 000134   000140 710000 8                  TRA     s:4267

       82     4263    2          ELSE DO ;

       83     4264    2            RESULT$->ETT.NEXT$ = ADDR(NIL) ;

   4264  8 000135   000000 471500                    LDP1    0,,PR0
         8 000136   000000 236000 9                  LDQ     0
         8 000137   100003 756100                    STQ     3,,PR1

       84     4265    2          END ;

       85     4266
PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:15   
       86     4267    1          IF  SRCH.ID = %BASE

   4267  8 000140   000000 235000 7                  LDA     SRCH
         8 000141   000001 115007                    CMPA    1,DL
         8 000142   000153 601000 8                  TNZ     EXIT_STAGE_LEFT
         8 000143   000002 236000 7                  LDQ     SRCH+2
         8 000144   000000 116000 9                  CMPQ    0
         8 000145   000153 601000 8                  TNZ     EXIT_STAGE_LEFT

       87     4268    2          AND SRCH.ROP = ADDR (NIL) THEN DO ;

       88     4269                 %INSERT_INTO_SL_LIST (PTR = RESULT$, ITEM = ETT,
       89     4270                                       HEAD = "COMCOM.H_BASE", NEXT = ROP) ;

   4273  8 000146   000000 471500                    LDP1    0,,PR0
         8 000147   000323 236000 xsym               LDQ     COMCOM+211
         8 000150   100002 756100                    STQ     2,,PR1

   4274  8 000151   000000 236100                    LDQ     0,,PR0
         8 000152   000323 756000 xsym               STQ     COMCOM+211

       90     4283    2          END ;

       91     4284
       92     4285    1   EXIT_STAGE_LEFT:
       93     4286
       94     4287    1          RETURN ;

   4287  8 000153   000000 702200 xent  EXIT_STAGE_* TSX2  ! X66_ARET
       95     4288
       96     4289    1   END Z8AS$SR_ETT ;

PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:16   
--  Include file information  --

   Z8A_SRCH.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ILL.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8AS$SR_ETT.
PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:17   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom ILL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ILL$

  ****  Section 002 LblCom ILL_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ILL_

  ****  Section 003 LblCom ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ETT$

  ****  Section 004 LblCom HEAD_ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 HEAD_ETT$

PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:18   
  ****  Section 005 LblCom ETT_BUCKETS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ETT_BUCKETS(0:511)

  ****  Section 006 LblCom ETT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 ETT_

  ****  Section 007 LblCom SRCH

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)   r     1 SRCH

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @RESULT$                   5-0-0/w UBIN        r     1 BUCKET#
     4-0-0/w UBIN        r     1 HASH                       4-0-0/w STRC        r     1 HSH
    *0-0-0/w PTR         r     1 RESULT$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM                     0-0-0/w UBIN              1 ILL_STEP(0:144)

PL6.E3A0      #001=Z8AS$SR_ETT File=Z8AS.:Z8A6TSI                                SAT 08/09/97 10:49 Page:19   
  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)         1 ACCEPT_DISPLAY             0-0-0/w STRC(108)         1 BINARY_ILL
     0-0-0/w STRC(144)         1 BRANCH_ILL                 0-0-0/w STRC(216)         1 CCOSU
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(108)         1 CODED_MOVE
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(144)         1 DEFLB
     0-0-0/w STRC(144)         1 DOEND                      0-0-0/w STRC(396)         1 DO_N
     0-0-0/w STRC(180)         1 DV4I                       0-0-0/w STRC(180)         1 ENTRY_ILL
     0-0-0/w STRC(180)   r     1 ETT                        0-0-0/w STRC(108)         1 EVALU
     0-0-0/w STRC(144)         1 GO                         0-0-0/w STRC(180)         1 ILL
     0-0-0/w STRC              1 ILL_NO_OPS                 0-0-0/w STRC(108)         1 LINOI
     0-0-0/w STRC(72)          1 MFILL                      0-0-0/w STRC(180)         1 MULTI_GO
     0-0-0/w STRC(180)         1 MVEAL                      0-0-0/w STRC(108)         1 MVFIL
     0-0-0/w STRC(72)          1 MVIIS                      0-0-0/w STRC(180)         1 OS_CALL
     0-0-0/w STRC(36864)       1 PAGE                       0-0-0/w STRC(216)         1 PFORM
     0-0-0/w STRC(144)         1 PINC                       0-0-0/w STRC(144)         1 PREOFF
     0-0-0/w STRC(108)         1 PRESET                     0-0-0/w STRC(144)         1 P_A_PRESET
     0-0-0/w STRC(144)         1 P_P_PRESET                 0-0-0/w STRC(144)         1 REMEM
     0-0-0/w STRC(144)         1 SCOPE                      0-0-0/w STRC(216)         1 SEARCH_
     0-0-0/w STRC(72)          1 STP2                       0-0-0/w STRC(144)         1 TRINARY_ILL
     0-0-0/w STRC(72)          1 UNARY_ILL                  0-0-0/w STRC(216)         1 USER_CALL
     0-0-0/w STRC(108)         1 VAL                        0-0-0/w STRC(108)         1 VAL_END
     0-0-0/w STRC(72)          1 WHEN


   Procedure Z8AS$SR_ETT requires 108 words for executable code.
   Procedure Z8AS$SR_ETT requires 8 words of local(AUTO) storage.

    No errors detected in file Z8AS.:Z8A6TSI    .
