VERSION A02

PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:1    
        1        1        /*M* FUU$NFSU - NFS utility program. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3 */
        8        8        /*P*  NAME: FUU$NFSU
        9        9              Purpose:
       10       10                    The main routine for the CP-6 nfs utility.
       11       11        */
       12       12        /*F*  NAME: FUU$NFSU
       13       13              Purpose:
       14       14                    To process all of the commands for NFSU - set, display, build, ...
       15       15        */
       16       16
       17       17        FUU$NFSU: PROC MAIN;
       18       18        %INCLUDE CP_6;
       19       99        %INCLUDE CP_6_SUBS;
       20      639        %INCLUDE FU_NFSSUBS_C;
       21      734        %INCLUDE FU_NFS_M;
       22     1249        %INCLUDE FUU_EQU_E;
       23     1274        %INCLUDE XU_MACRO_C;
       24     4380        %INCLUDE XUG_ENTRY;
       25     4411    1   DCL X$PRE_PROCESS ENTRY(1) ALTRET;
       26     4412        %XUG_GETCMD (NODES=FUU_CMD, PROMPT=PROMPT);
       27     4750    1   DCL FUU_CMD SBIN SYMREF;
       28     4751    1   DCL PROMPT CONSTANT CHAR(0) INIT('?');
       29     4752        %XUG_INIT (PREPROCESS=YES, PREPROCESSOR=X$PRE_PROCESS, GOODCMD=YES,
       30     4753                   PROCNAME=HELPNAME,PROCACCT=HELPACCT);
       31     5166    1   DCL HELPNAME CHAR(0) CONSTANT INIT (%CONCAT(BINASC(3),'NFS'));
       32     5167    1   DCL HELPACCT CHAR(8) CONSTANT INIT (':SYS');
       33     5168        %PARSE$OUT (STCLASS="BASED(P$)");
       34     5213        %PARSE$OUT (NAME=OUT$TOP, STCLASS="BASED(XUG_GETCMD.OUT$)");
       35     5258        %PARSE$SYM (STCLASS=BASED);
       36     5296
       37     5297            %M$DCB( DCBN=M$DS, ASN=FILE, NAME='nfsd:', ACCT=':SYS', FUN=UPDATE,
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:2    
       38     5298                    SHARE=ALL, ACS=DS8, ORG=RANDOM);
       39     5372    1   DCL B$DS8 CONSTANT SYMDEF UBIN INIT(%(11+6*512));
       40     5373    1   DCL B$DS8$ REDEF B$DS8 PTR;
       41     5374            %FU$NFSDS( NAME=DS, STCLASS="BASED(B$DS8$)");
       42     5404            %M$DCB( DCBN=M$X364, RES='UC10', ORG=X364, FUN=UPDATE, DVFC='@');
       43     5478            %FPT_WRITE( DCB=M$LO, BUF=OUTBUF);
       44     5509    1   DCL M$LO DCB;
       45     5510            %FPT_INT( UENTRY=FUU$INT, STCLASS=CONSTANT);
       46     5524    1   DCL FUU$INT ENTRY ASYNC;
       47     5525    1   DCL BREAK BIT(1) STATIC SYMDEF;
       48     5526            %FPT_EXTEND( DCB=M$DS, SIZ=1, STCLASS=CONSTANT SYMDEF);
       49     5540            %FPT_WAIT( UNITS=3);
       50     5554            %FPT_YC( STCLASS=CONSTANT, CMD="CMD(0)", LINK=YES);
       51     5571            %M$DCB( DCBN=M$FMT, ASN=FILE, NAME=':FORMAT');
       52     5645            %M$DCB( DCBN=M$FMTSYS, ASN=FILE, NAME=':FORMAT', ACCT=':SYS');
       53     5719
       54     5720    1   DCL 1 B_VERSION SYMREF,2 L UBIN(9) UNAL,2 T CHAR(B_VERSION.L);
       55     5721
       56     5722    1   DCL OUTX UBIN;
       57     5723    1   DCL OUTBUF CHAR(1024) STATIC;
       58     5724    1   DCL 1 CMD(0:3) REDEF OUTBUF,
       59     5725    1         2 NFSA CHAR(8),                   /* Gets !NFSA in it                   */
       60     5726    1         2 FROM CHAR(60),             /* Gets etc:users_equiv.:SYS by default    */
       61     5727    1         2 OVER CHAR(8),                   /* duuuuuh!                           */
       62     5728    1         2 DEST CHAR(100),
       63     5729    1         2 FMTBUF CHAR(80);
       64     5730    1   DCL 1 DFLNFSA CONSTANT,
       65     5731    1         2 * CHAR(8) INIT('!NFSA'),
       66     5732    1         2 * CHAR(60) INIT('etc:user_equiv.:SYS'),
       67     5733    1         2 * CHAR(8) INIT(' OVER '),
       68     5734    1         2 * CHAR(0) INIT(':nfssec.:SYS');
       69     5735
       70     5736        %INCLUDE XU_FORMAT_C;
       71     5898    1   DCL X$WRITE ENTRY(22);
       72     5899        %F_FDS( NAME=FDS, DCB=M$LO, TRUNC=NO, BUF="CMD.FMTBUF(3)");
       73     6012
       74     6013        %ERROR(DS_OPENLIM#~=DS_BUFLIM#+1,,'*** this structure needs rearranging',3);
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:3    
       75     6014        %ERROR(DS_BUFLIM#~=DS_DCBLIM#+1,,'*** this structure needs rearranging',3);
       76     6015        %ERROR(DS_DCBLIM#~=DS_CTXLIM#+1,,'*** this structure needs rearranging',3);
       77     6016    1   DCL DSMINWRD(0:6) UBIN CONSTANT INIT(20, 20, 20, 1, 0, 0, 512);
       78     6017    1   DCL DSMAXWRD(0:6) UBIN CONSTANT INIT(2000, 120, 255, 4000, 10000, 10000, 8192);
       79     6018
       80     6019        %EQU NL = CONCAT(BINASC(13),BINASC(10));
       81     6020
       82     6021            %MACRO F(T='.',LAST(YES=";")=",");
       83     6022              2 * CHAR(0) INIT(T),2 * CHAR(2)INIT(%NL)LAST
       84     6023            %MEND;
       85     6024    1   DCL 1 STATSMSG CONSTANT,
       86     6025    1         2 T CHAR(0) INIT(%CONCAT(BINASC(27),'[H',BINASC(27),'[J')),
       87     6026        /*   0         1         2         3         4         5         6         7 */
       88     6027        /*   0    5    0    5    0    5    0    5    0    5    0    5    0    5    0 */
       89     6028        %F(T='N F S   S T A T S:                                 Master sysid =     0');
       90     6031        %F(T=' ');
       91     6034        %F(T='Messages in:                              Messages out:');
       92     6037        %F(T='   Count      0  Bytes      0                Count      0  Bytes      0');
       93     6040        %F(T='              0             0                           0             0');
       94     6043        %F(T='NFS messages by function:');
       95     6046        %F(T='   Getatr     0  Setatr     0  Lookup     0  Create     0  Remove     0');
       96     6049        %F(T='              0             0             0             0             0');
       97     6052        %F(T='   Rename     0  Dirlst     0  Statfs     0  Read       0  Write      0');
       98     6055        %F(T='              0             0             0             0             0');
       99     6058        %F(T='Context:');
      100     6061        %F(T='   Hosts      0  Files      0  Users      0  DCBs       0  Bufpgs     0');
      101     6064        %F(T='              0             0             0             0             0');
      102     6067        %F(T='Accounting:');
      103     6070        %F(T='   PMMEs      0  DiskIO     0  ServTm     0  ExecTm     0');
      104     6073        %F(T='              0             0             0             0',LAST=YES);
      105     6076
      106     6077        %EQU LSTENT = 46;
      107     6078    1   DCL DSX(0:%LSTENT) UBIN CONSTANT INIT( %DS_P_SYSID#,
      108     6079    1    %DS_MSGCNT#, %DS_BYTESIN#, %DS_P_MSGCNT#, %DS_BYTESOUT#,
      109     6080    1    %DS_MSGCNT#, %DS_BYTESIN#, %DS_P_MSGCNT#, %DS_BYTESOUT#,
      110     6081        %EQU DS_NFS# = DS_NFSRQS#;
      111     6082    1        %(DS_NFS#+1), %(DS_NFS#+2), %(DS_NFS#+4), %(DS_NFS#+9), %(DS_NFS#+10),
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:4    
      112     6083    1        %(DS_NFS#+1), %(DS_NFS#+2), %(DS_NFS#+4), %(DS_NFS#+9), %(DS_NFS#+10),
      113     6084    1        %(DS_NFS#+11), %(DS_NFS#+16), %(DS_NFS#+17), %(DS_NFS#+6), %(DS_NFS#+8),
      114     6085    1        %(DS_NFS#+11), %(DS_NFS#+16), %(DS_NFS#+17), %(DS_NFS#+6), %(DS_NFS#+8),
      115     6086    1        %DS_HCNT#, %DS_FCNT#, %DS_UCNT#, %DS_P_FCNT#, %DS_P_UCNT#,
      116     6087    1        %DS_HCNT#, %DS_FCNT#, %DS_UCNT#, %DS_P_FCNT#, %DS_P_UCNT#,
      117     6088    1        %DS_P_PMMECNT#, %DS_P_DISKIOS#, %DS_P_STIME#, %DS_P_XTIME#,
      118     6089    1        %DS_P_PMMECNT#, %DS_P_DISKIOS#, %DS_P_STIME#, %DS_P_XTIME#);
      119     6090
      120     6091    1   DCL TYPE(0:%LSTENT) UBIN CONSTANT INIT(
      121     6092        %EQU NORM_TYPE = 0;
      122     6093        %EQU HALF_TYPE = 1;
      123     6094        %EQU DELTA_TYPE = 50;
      124     6095    1        %HALF_TYPE, %(DELTA_TYPE+4)*4, %NORM_TYPE*4, %(DELTA_TYPE+5)*5, %NORM_TYPE*5,
      125     6096    1        %(DELTA_TYPE+5)*5, %NORM_TYPE*5, %(DELTA_TYPE+5)*5, %NORM_TYPE*5,
      126     6097    1        %(DELTA_TYPE+4)*4, %NORM_TYPE*4);
      127     6098
      128     6099        /* array used for positioning into STATSMSG on an X364 device for each of
      129     6100           the display elements.
      130     6101        */
      131     6102    1   DCL POS(0:%LSTENT) CHAR(8) CONSTANT INIT(
      132     6103        %MACRO POS(L=01,C=01,LAST(YES=");")=",");
      133     6104             %CONCAT(BINASC(27),'[',TEXTCHAR(L),';',TEXTCHAR(C),'H')LAST
      134     6105        %MEND;
      135     6106             %POS(L=01,C=66);
      136     6109        %POS(L=04,C=10);
      137     6112        %POS(L=04,C=24);
      138     6115        %POS(L=04,C=52);
      139     6118        %POS(L=04,C=66);
      140     6121        %POS(L=05,C=10);
      141     6124        %POS(L=05,C=24);
      142     6127        %POS(L=05,C=52);
      143     6130        %POS(L=05,C=66);
      144     6133        %POS(L=07,C=10);
      145     6136        %POS(L=07,C=24);
      146     6139        %POS(L=07,C=38);
      147     6142        %POS(L=07,C=52);
      148     6145        %POS(L=07,C=66);
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:5    
      149     6148        %POS(L=08,C=10);
      150     6151        %POS(L=08,C=24);
      151     6154        %POS(L=08,C=38);
      152     6157        %POS(L=08,C=52);
      153     6160        %POS(L=08,C=66);
      154     6163        %POS(L=09,C=10);
      155     6166        %POS(L=09,C=24);
      156     6169        %POS(L=09,C=38);
      157     6172        %POS(L=09,C=52);
      158     6175        %POS(L=09,C=66);
      159     6178        %POS(L=10,C=10);
      160     6181        %POS(L=10,C=24);
      161     6184        %POS(L=10,C=38);
      162     6187        %POS(L=10,C=52);
      163     6190        %POS(L=10,C=66);
      164     6193        %POS(L=12,C=10);
      165     6196        %POS(L=12,C=24);
      166     6199        %POS(L=12,C=38);
      167     6202        %POS(L=12,C=52);
      168     6205        %POS(L=12,C=66);
      169     6208        %POS(L=13,C=10);
      170     6211        %POS(L=13,C=24);
      171     6214        %POS(L=13,C=38);
      172     6217        %POS(L=13,C=52);
      173     6220        %POS(L=13,C=66);
      174     6223        %POS(L=15,C=10);
      175     6226        %POS(L=15,C=24);
      176     6229        %POS(L=15,C=38);
      177     6232        %POS(L=15,C=52);
      178     6235        %POS(L=16,C=10);
      179     6238        %POS(L=16,C=24);
      180     6241        %POS(L=16,C=38);
      181     6244        %POS(L=16,C=52,LAST=YES);
      182     6247
      183     6248
      184     6249        %EJECT;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:6    
      185     6250        /* AUTO */
      186     6251
      187     6252    1   DCL P$ PTR;
      188     6253    1   DCL COUNT(0:%LSTENT) UBIN;
      189     6254    1   DCL OLDCOUNT(0:%LSTENT) UBIN;
      190     6255    1   DCL I UBIN;
      191     6256
      192     6257
      193     6258
      194     6259
      195     6260        /* Based items */
      196     6261
      197     6262    1   DCL DSWORD(0:0) UBIN BASED(B$DS8$) ALIGNED;
      198     6263        %FU$HCTX( NAME=HCTX);
      199     6286        %FU$FCTX( NAME=FCTX);
      200     6389        %FU$UCTX( NAME=UCTX);
      201     6442    1   DCL PCTX(0:127) UBIN BASED(P$);
      202     6443
      203     6444
      204     6445
      205     6446
      206     6447
      207     6448        %EJECT;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:7    
      208     6449    1      CALL M$INT( FPT_INT);
      209     6450    1      CALL XUG$INIT( XUG_GETCMD, XUG_INIT);
      210     6451    1      CALL CONCAT( OUTBUF, 'nsfu ', B_VERSION.T, ' here');
      211     6452    1      FPT_WRITE.BUF_.BOUND = B_VERSION.L + 9;
      212     6453    1      CALL M$WRITE( FPT_WRITE);
      213     6454
      214     6455
      215     6456
      216     6457    1      CALL M$REW( FPT_EXTEND);
      217     6458    1   NXTCMD: ;
      218     6459    2      CALL XUG$GETCMD( XUG_GETCMD) WHENALTRETURN DO;
      219     6460    2         CALL M$EXIT;
      220     6461    2         END;
      221     6462    1      BREAK = '0'B;
      222     6463
      223     6464    1      P$ = OUT$TOP.SUBLK$( 0);
      224     6465    2      DO CASE( OUT$BLK.CODE);
      225     6466
      226     6467    2       CASE( 1);                           /* build                              */
      227     6468    2         CMD( 0) = DFLNFSA;
      228     6469    3         DO I = 1 TO OUT$TOP.NSUBLKS-1;
      229     6470    3            P$ = OUT$TOP.SUBLK$( I);
      230     6471    3            IF OUT$BLK.CODE = 0
      231     6472    3            THEN CMD.FROM( 0) = OUT$BLK.SUBLK$( 0)-> OUT$SYM.TEXT;
      232     6473    3            ELSE CMD.DEST( 0) = OUT$BLK.SUBLK$( 0)-> OUT$SYM.TEXT;
      233     6474    3            END;
      234     6475    3         CALL M$YC( FPT_YC) WHENALTRETURN DO; END;
      235     6476                                      /* SET SOMETHING IN DS TO TELL NFDS IT CHANGED  */
      236     6477
      237     6478    2       CASE( 2);                           /* display                            */
      238     6479    2         CALL DISPLAY;
      239     6480
      240     6481    2       CASE( 3);                           /* restart                            */
      241     6482                                                /* DS.SOMETHING = %FU_RESTART         */
      242     6483
      243     6484    2       CASE( 4);                           /* set                                */
      244     6485    2         CALL CHARBIN( I, OUT$TOP.SUBLK$( 2)-> OUT$SYM.TEXT);
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:8    
      245     6486    2         P$ = OUT$TOP.SUBLK$( 1);
      246     6487    2         IF DSMINWRD( OUT$BLK.CODE - %DS_CTXLIM#) > I
      247     6488    2           OR DSMAXWRD( OUT$BLK.CODE - %DS_CTXLIM#) < I
      248     6489    3         THEN DO;
      249     6490    3            OUTBUF = 'Bad Value';
      250     6491    3            FPT_WRITE.BUF_.BOUND = 8;
      251     6492    3            CALL M$WRITE( FPT_WRITE);
      252     6493    3            END;
      253     6494    2         ELSE DSWORD( OUT$BLK.CODE) = I;
      254     6495
      255     6496    2       CASE( 5);                           /* stats                              */
      256     6497    2         CALL STATS;
      257     6498    2         FPT_WRITE.V.DCB# = DCBNUM( M$LO);
      258     6499
      259     6500    2       END;
      260     6501    1      GOTO NXTCMD;
      261     6502        %EJECT;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:9    
      262     6503        /*I*  NAME:    DISPLAY
      263     6504              Purpose: To display stuff (DS header, FCTXs, UCTXs, or HCTXs) in the
      264     6505                       NFS common "memory".
      265     6506              Algorithm: Look for the display format string in M$FMT and then M$FMTSYS.
      266     6507                       If we find it, then start displaying the appropriate structures
      267     6508                       following through their appropriate linked lists.
      268     6509        */
      269     6510    1   DISPLAY: PROC;
      270     6511        %FPT_READ( BUF=OUTBUF, KEY=FMTKEY, KEYS=YES);
      271     6550    2   DCL FMTKEY(0:1) STATIC UBIN;
      272     6551    2   DCL 1 FMTKEYS(0:4) CONSTANT,
      273     6552    2         2 L UBIN(9) UNAL INIT(5*2,7*0),
      274     6553    2         2 T CHAR(7) INIT('FU$DS'*2, 'FU$FCTX', 'FU$HCTX', 'FU$UCTX');
      275     6554
      276     6555    2      I = 0;
      277     6556    2      IF OUT$TOP.NSUBLKS > 1 THEN I = OUT$TOP.SUBLK$(1)-> OUT$BLK.CODE;
      278     6557    2      FMTKEY = FMTKEYS( I);
      279     6558    2      FPT_READ.V.DCB# = DCBNUM( M$FMT);
      280     6559    3      CALL M$READ( FPT_READ) WHENALTRETURN DO;
      281     6560    3         FPT_READ.V.DCB# = DCBNUM( M$FMTSYS);
      282     6561    4         CALL M$READ( FPT_READ) WHENALTRETURN DO;
      283     6562    4            OUTBUF = 'Not installed in :FORMAT';
      284     6563    4            FPT_WRITE.BUF_.BOUND = 23;
      285     6564    4            CALL M$WRITE( FPT_WRITE);
      286     6565    4            RETURN;
      287     6566    4            END;
      288     6567    3         END;
      289     6568
      290     6569    3      DO CASE( I);
      291     6570    3       CASE( 0, 1);                        /* Data seg                           */
      292     6571    3         P$ = B$DS8$;
      293     6572    3       CASE( 2);                           /* FCTX's                             */
      294     6573    3         P$ = DS.FCTX$;
      295     6574    3       CASE( 3);                           /* HCTX's                             */
      296     6575    3         P$ = DS.HCTX$;
      297     6576    3       CASE( 4);                           /* UCTX's                             */
      298     6577    3         P$ = DS.HCTX$;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:10   
      299     6578    4         DO WHILE P$ ~= ADDR( NIL);
      300     6579    4            IF P$-> HCTX.UCTX$ ~= ADDR( NIL) THEN EXIT;
      301     6580    4            P$ = P$-> HCTX.LNK$;
      302     6581    4            END;
      303     6582    3         IF P$ ~= ADDR( NIL) THEN P$ = P$-> HCTX.UCTX$;
      304     6583    3       END;
      305     6584    2      SUBSTR( OUTBUF,0,4) = '%(%)';
      306     6585
      307     6586    2   AGAIN:;
      308     6587    2      IF P$ = ADDR( NIL) OR BREAK THEN RETURN;
      309     6588    2      CALL X$WRITE( FDS, VECTOR( OUTBUF), VECTOR( P$), VECTOR( PCTX));
      310     6589    2      IF SUBSTR( OUTBUF, 4, 3) = '%1(' THEN SUBSTR( OUTBUF, 5, 1) = '0';
      311     6590    3      DO CASE( I);
      312     6591    3       CASE( 0, 1);
      313     6592    3         RETURN;
      314     6593    3       CASE( 2);
      315     6594    3         P$ = P$-> FCTX.LNK$;
      316     6595    3       CASE( 3);
      317     6596    3         P$ = P$-> HCTX.LNK$;
      318     6597    3       CASE( 4);
      319     6598    3         IF P$-> UCTX.HLNK$ ~= ADDR( NIL)
      320     6599    3         THEN P$ = P$-> UCTX.HLNK$;
      321     6600    4         ELSE DO;
      322     6601    4            P$ = P$-> UCTX.HCTX$-> HCTX.LNK$;
      323     6602    5            DO WHILE P$ ~= ADDR( NIL);
      324     6603    5               IF P$-> HCTX.UCTX$ ~= ADDR( NIL) THEN EXIT;
      325     6604    5               P$ = P$-> HCTX.LNK$;
      326     6605    5               END;
      327     6606    4            IF P$ ~= ADDR( NIL) THEN P$ = P$-> HCTX.UCTX$;
      328     6607    4            END;
      329     6608    3       END;
      330     6609    2      GOTO AGAIN;
      331     6610    2   END DISPLAY;
      332     6611
      333     6612        %EJECT;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:11   
      334     6613        /*I*  NAME:    STATS
      335     6614              Purpose: To print out data in the DS structure out to the screen in an
      336     6615                       easy to view, formatted way, that updates every 3 seconds.
      337     6616        */
      338     6617    1   STATS: PROC;
      339     6618    2      FPT_WRITE.V.DCB# = DCBNUM( M$X364);
      340     6619    2      FPT_WRITE.BUF_ = VECTOR( STATSMSG);
      341     6620    2      CALL M$WRITE( FPT_WRITE);
      342     6621    2      FPT_WRITE.BUF_.BUF$ = ADDR( OUTBUF);
      343     6622    2      COUNT = '0'B;
      344     6623
      345     6624    3      DO WHILE '1'B;
      346     6625    3         OUTX = 0;
      347     6626    3         OLDCOUNT = COUNT;
      348     6627    4         DO I = 0 TO %LSTENT;
      349     6628    5            DO CASE( TYPE( I));
      350     6629    5             CASE( %HALF_TYPE);
      351     6630    5               COUNT( I) = DSWORD( DSX( I))/262144;
      352     6631    5             CASE( %NORM_TYPE);
      353     6632    5               COUNT( I) = DSWORD( DSX( I));
      354     6633    5             CASE( ELSE);
      355     6634    5               IF DS.MSGCNT ~= OLDCOUNT( 5)
      356     6635    5               THEN COUNT( I) =
      357     6636    5                    DSWORD( DSX( I)) - OLDCOUNT( I + TYPE( I) - %DELTA_TYPE);
      358     6637    5             END;
      359     6638    5            IF COUNT( I) ~= OLDCOUNT( I) THEN DO;
      360     6639    5               SUBSTR( OUTBUF,OUTX,8) = POS( I); /* \E[ll;ccH                    */
      361     6640    5               CALL BINCHAR( SUBSTR( OUTBUF, OUTX+8, 6), COUNT( I));
      362     6641    5               CALL EDITCHAR( OUTBUF, OUTX+8, 5, '105'O,
      363     6642    5                 SUBSTR( OUTBUF, OUTX+8, 5));
      364     6643    5               OUTX = OUTX + 14;
      365     6644    5               END;
      366     6645    4            END;
      367     6646    3         SUBSTR( OUTBUF,OUTX,3) = STATSMSG.T;
      368     6647    4         IF BREAK THEN DO;
      369     6648    4            SUBSTR( OUTBUF,OUTX+3,4) = POS( %LSTENT);
      370     6649    4            SUBSTR( OUTBUF,OUTX+7,1) = 'B';
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:12   
      371     6650    4            OUTX = OUTX + 5;
      372     6651    4            END;
      373     6652    3         FPT_WRITE.BUF_.BOUND = OUTX+2;
      374     6653    3         IF OUTX > 0 THEN CALL M$WRITE( FPT_WRITE);
      375     6654    3         IF BREAK THEN RETURN;
      376     6655    3         CALL M$WAIT( FPT_WAIT);
      377     6656    3         END;
      378     6657    2   END STATS;
      379     6658
      380     6659    1   END FUU$NFSU;
      381     6660        %EOD;

PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:13   
--  Include file information  --

   XU_FORMAT_C.:LIBRARY  is referenced.
   XUG_ENTRY.:LIBRARY  cannot be made into a system file and is referenced.
   XU_MACRO_C.:LIBRARY  is referenced.
   FUU_EQU_E.:FUA2TOU  is referenced.
   FU_NFS_M.:FUA2TOU  is referenced.
   FU_NFSSUBS_C.:FUA2TOU  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FUU$NFSU.

   Procedure FUU$NFSU requires 412 words for executable code.
   Procedure FUU$NFSU requires 116 words of local(AUTO) storage.

PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:14   

 Object Unit name= FUU$NFSU                                   File name= FUU$NFSU.:FUA2TOU
 UTS= NOV 21 '97 11:37:08.92 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   400    620  FUU$NFSU
    2  RoData even  UTS    494    756  FUU$NFSU
    3   DCB   even  none    98    142  M$DS
    4   DCB   even  none    98    142  M$X364
    5   DCB   even  none     0      0  M$LO
    6   DCB   even  none    98    142  M$FMT
    7   DCB   even  none    98    142  M$FMTSYS
    8   Proc  even  none   412    634  FUU$NFSU
    9  RoData even  none    13     15  FUU$NFSU

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes            yes      Main       0  FUU$NFSU

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    2      4  B$DS8                              1    132  BREAK
    2     12  FPT_EXTEND
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:15   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 X$PRE_PROCESS
 yes     yes           Std       2 XTX$ADAPT
         yes          Async      0 FUU$INT
 yes     yes           Std       1 XUG$GETCMD
 yes     yes           Std       2 XUG$INIT
         yes           Std      22 X$WRITE
                       nStd      0 X66_MAUTO
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  FUU_CMD                               M$DS
     M$X364                                M$LO                                  M$FMT
     M$FMTSYS                              B_VERSION                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:16   


        1        1        /*M* FUU$NFSU - NFS utility program. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3 */
        8        8        /*P*  NAME: FUU$NFSU
        9        9              Purpose:
       10       10                    The main routine for the CP-6 nfs utility.
       11       11        */
       12       12        /*F*  NAME: FUU$NFSU
       13       13              Purpose:
       14       14                    To process all of the commands for NFSU - set, display, build, ...
       15       15        */
       16       16
       17       17        FUU$NFSU: PROC MAIN;

     17  8 000000   000000 700200 xent  FUU$NFSU     TSX0  ! X66_MAUTO
         8 000001   000164 000000                    ZERO    116,0

       18       18        %INCLUDE CP_6;
       19       99        %INCLUDE CP_6_SUBS;
       20      639        %INCLUDE FU_NFSSUBS_C;
       21      734        %INCLUDE FU_NFS_M;
       22     1249        %INCLUDE FUU_EQU_E;
       23     1274        %INCLUDE XU_MACRO_C;
       24     4380        %INCLUDE XUG_ENTRY;
       25     4411    1   DCL X$PRE_PROCESS ENTRY(1) ALTRET;
       26     4412        %XUG_GETCMD (NODES=FUU_CMD, PROMPT=PROMPT);
       27     4750    1   DCL FUU_CMD SBIN SYMREF;
       28     4751    1   DCL PROMPT CONSTANT CHAR(0) INIT('?');
       29     4752        %XUG_INIT (PREPROCESS=YES, PREPROCESSOR=X$PRE_PROCESS, GOODCMD=YES,
       30     4753                   PROCNAME=HELPNAME,PROCACCT=HELPACCT);
       31     5166    1   DCL HELPNAME CHAR(0) CONSTANT INIT (%CONCAT(BINASC(3),'NFS'));
       32     5167    1   DCL HELPACCT CHAR(8) CONSTANT INIT (':SYS');
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:17   
       33     5168        %PARSE$OUT (STCLASS="BASED(P$)");
       34     5213        %PARSE$OUT (NAME=OUT$TOP, STCLASS="BASED(XUG_GETCMD.OUT$)");
       35     5258        %PARSE$SYM (STCLASS=BASED);
       36     5296
       37     5297            %M$DCB( DCBN=M$DS, ASN=FILE, NAME='nfsd:', ACCT=':SYS', FUN=UPDATE,
       38     5298                    SHARE=ALL, ACS=DS8, ORG=RANDOM);
       39     5372    1   DCL B$DS8 CONSTANT SYMDEF UBIN INIT(%(11+6*512));
       40     5373    1   DCL B$DS8$ REDEF B$DS8 PTR;
       41     5374            %FU$NFSDS( NAME=DS, STCLASS="BASED(B$DS8$)");
       42     5404            %M$DCB( DCBN=M$X364, RES='UC10', ORG=X364, FUN=UPDATE, DVFC='@');
       43     5478            %FPT_WRITE( DCB=M$LO, BUF=OUTBUF);
       44     5509    1   DCL M$LO DCB;
       45     5510            %FPT_INT( UENTRY=FUU$INT, STCLASS=CONSTANT);
       46     5524    1   DCL FUU$INT ENTRY ASYNC;
       47     5525    1   DCL BREAK BIT(1) STATIC SYMDEF;
       48     5526            %FPT_EXTEND( DCB=M$DS, SIZ=1, STCLASS=CONSTANT SYMDEF);
       49     5540            %FPT_WAIT( UNITS=3);
       50     5554            %FPT_YC( STCLASS=CONSTANT, CMD="CMD(0)", LINK=YES);
       51     5571            %M$DCB( DCBN=M$FMT, ASN=FILE, NAME=':FORMAT');
       52     5645            %M$DCB( DCBN=M$FMTSYS, ASN=FILE, NAME=':FORMAT', ACCT=':SYS');
       53     5719
       54     5720    1   DCL 1 B_VERSION SYMREF,2 L UBIN(9) UNAL,2 T CHAR(B_VERSION.L);
       55     5721
       56     5722    1   DCL OUTX UBIN;
       57     5723    1   DCL OUTBUF CHAR(1024) STATIC;
       58     5724    1   DCL 1 CMD(0:3) REDEF OUTBUF,
       59     5725    1         2 NFSA CHAR(8),                   /* Gets !NFSA in it                   */
       60     5726    1         2 FROM CHAR(60),             /* Gets etc:users_equiv.:SYS by default    */
       61     5727    1         2 OVER CHAR(8),                   /* duuuuuh!                           */
       62     5728    1         2 DEST CHAR(100),
       63     5729    1         2 FMTBUF CHAR(80);
       64     5730    1   DCL 1 DFLNFSA CONSTANT,
       65     5731    1         2 * CHAR(8) INIT('!NFSA'),
       66     5732    1         2 * CHAR(60) INIT('etc:user_equiv.:SYS'),
       67     5733    1         2 * CHAR(8) INIT(' OVER '),
       68     5734    1         2 * CHAR(0) INIT(':nfssec.:SYS');
       69     5735
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:18   
       70     5736        %INCLUDE XU_FORMAT_C;
       71     5898    1   DCL X$WRITE ENTRY(22);
       72     5899        %F_FDS( NAME=FDS, DCB=M$LO, TRUNC=NO, BUF="CMD.FMTBUF(3)");
       73     6012
       74     6013        %ERROR(DS_OPENLIM#~=DS_BUFLIM#+1,,'*** this structure needs rearranging',3);
       75     6014        %ERROR(DS_BUFLIM#~=DS_DCBLIM#+1,,'*** this structure needs rearranging',3);
       76     6015        %ERROR(DS_DCBLIM#~=DS_CTXLIM#+1,,'*** this structure needs rearranging',3);
       77     6016    1   DCL DSMINWRD(0:6) UBIN CONSTANT INIT(20, 20, 20, 1, 0, 0, 512);
       78     6017    1   DCL DSMAXWRD(0:6) UBIN CONSTANT INIT(2000, 120, 255, 4000, 10000, 10000, 8192);
       79     6018
       80     6019        %EQU NL = CONCAT(BINASC(13),BINASC(10));
       81     6020
       82     6021            %MACRO F(T='.',LAST(YES=";")=",");
       83     6022              2 * CHAR(0) INIT(T),2 * CHAR(2)INIT(%NL)LAST
       84     6023            %MEND;
       85     6024    1   DCL 1 STATSMSG CONSTANT,
       86     6025    1         2 T CHAR(0) INIT(%CONCAT(BINASC(27),'[H',BINASC(27),'[J')),
       87     6026        /*   0         1         2         3         4         5         6         7 */
       88     6027        /*   0    5    0    5    0    5    0    5    0    5    0    5    0    5    0 */
       89     6028        %F(T='N F S   S T A T S:                                 Master sysid =     0');
       90     6031        %F(T=' ');
       91     6034        %F(T='Messages in:                              Messages out:');
       92     6037        %F(T='   Count      0  Bytes      0                Count      0  Bytes      0');
       93     6040        %F(T='              0             0                           0             0');
       94     6043        %F(T='NFS messages by function:');
       95     6046        %F(T='   Getatr     0  Setatr     0  Lookup     0  Create     0  Remove     0');
       96     6049        %F(T='              0             0             0             0             0');
       97     6052        %F(T='   Rename     0  Dirlst     0  Statfs     0  Read       0  Write      0');
       98     6055        %F(T='              0             0             0             0             0');
       99     6058        %F(T='Context:');
      100     6061        %F(T='   Hosts      0  Files      0  Users      0  DCBs       0  Bufpgs     0');
      101     6064        %F(T='              0             0             0             0             0');
      102     6067        %F(T='Accounting:');
      103     6070        %F(T='   PMMEs      0  DiskIO     0  ServTm     0  ExecTm     0');
      104     6073        %F(T='              0             0             0             0',LAST=YES);
      105     6076
      106     6077        %EQU LSTENT = 46;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:19   
      107     6078    1   DCL DSX(0:%LSTENT) UBIN CONSTANT INIT( %DS_P_SYSID#,
      108     6079    1    %DS_MSGCNT#, %DS_BYTESIN#, %DS_P_MSGCNT#, %DS_BYTESOUT#,
      109     6080    1    %DS_MSGCNT#, %DS_BYTESIN#, %DS_P_MSGCNT#, %DS_BYTESOUT#,
      110     6081        %EQU DS_NFS# = DS_NFSRQS#;
      111     6082    1        %(DS_NFS#+1), %(DS_NFS#+2), %(DS_NFS#+4), %(DS_NFS#+9), %(DS_NFS#+10),
      112     6083    1        %(DS_NFS#+1), %(DS_NFS#+2), %(DS_NFS#+4), %(DS_NFS#+9), %(DS_NFS#+10),
      113     6084    1        %(DS_NFS#+11), %(DS_NFS#+16), %(DS_NFS#+17), %(DS_NFS#+6), %(DS_NFS#+8),
      114     6085    1        %(DS_NFS#+11), %(DS_NFS#+16), %(DS_NFS#+17), %(DS_NFS#+6), %(DS_NFS#+8),
      115     6086    1        %DS_HCNT#, %DS_FCNT#, %DS_UCNT#, %DS_P_FCNT#, %DS_P_UCNT#,
      116     6087    1        %DS_HCNT#, %DS_FCNT#, %DS_UCNT#, %DS_P_FCNT#, %DS_P_UCNT#,
      117     6088    1        %DS_P_PMMECNT#, %DS_P_DISKIOS#, %DS_P_STIME#, %DS_P_XTIME#,
      118     6089    1        %DS_P_PMMECNT#, %DS_P_DISKIOS#, %DS_P_STIME#, %DS_P_XTIME#);
      119     6090
      120     6091    1   DCL TYPE(0:%LSTENT) UBIN CONSTANT INIT(
      121     6092        %EQU NORM_TYPE = 0;
      122     6093        %EQU HALF_TYPE = 1;
      123     6094        %EQU DELTA_TYPE = 50;
      124     6095    1        %HALF_TYPE, %(DELTA_TYPE+4)*4, %NORM_TYPE*4, %(DELTA_TYPE+5)*5, %NORM_TYPE*5,
      125     6096    1        %(DELTA_TYPE+5)*5, %NORM_TYPE*5, %(DELTA_TYPE+5)*5, %NORM_TYPE*5,
      126     6097    1        %(DELTA_TYPE+4)*4, %NORM_TYPE*4);
      127     6098
      128     6099        /* array used for positioning into STATSMSG on an X364 device for each of
      129     6100           the display elements.
      130     6101        */
      131     6102    1   DCL POS(0:%LSTENT) CHAR(8) CONSTANT INIT(
      132     6103        %MACRO POS(L=01,C=01,LAST(YES=");")=",");
      133     6104             %CONCAT(BINASC(27),'[',TEXTCHAR(L),';',TEXTCHAR(C),'H')LAST
      134     6105        %MEND;
      135     6106             %POS(L=01,C=66);
      136     6109        %POS(L=04,C=10);
      137     6112        %POS(L=04,C=24);
      138     6115        %POS(L=04,C=52);
      139     6118        %POS(L=04,C=66);
      140     6121        %POS(L=05,C=10);
      141     6124        %POS(L=05,C=24);
      142     6127        %POS(L=05,C=52);
      143     6130        %POS(L=05,C=66);
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:20   
      144     6133        %POS(L=07,C=10);
      145     6136        %POS(L=07,C=24);
      146     6139        %POS(L=07,C=38);
      147     6142        %POS(L=07,C=52);
      148     6145        %POS(L=07,C=66);
      149     6148        %POS(L=08,C=10);
      150     6151        %POS(L=08,C=24);
      151     6154        %POS(L=08,C=38);
      152     6157        %POS(L=08,C=52);
      153     6160        %POS(L=08,C=66);
      154     6163        %POS(L=09,C=10);
      155     6166        %POS(L=09,C=24);
      156     6169        %POS(L=09,C=38);
      157     6172        %POS(L=09,C=52);
      158     6175        %POS(L=09,C=66);
      159     6178        %POS(L=10,C=10);
      160     6181        %POS(L=10,C=24);
      161     6184        %POS(L=10,C=38);
      162     6187        %POS(L=10,C=52);
      163     6190        %POS(L=10,C=66);
      164     6193        %POS(L=12,C=10);
      165     6196        %POS(L=12,C=24);
      166     6199        %POS(L=12,C=38);
      167     6202        %POS(L=12,C=52);
      168     6205        %POS(L=12,C=66);
      169     6208        %POS(L=13,C=10);
      170     6211        %POS(L=13,C=24);
      171     6214        %POS(L=13,C=38);
      172     6217        %POS(L=13,C=52);
      173     6220        %POS(L=13,C=66);
      174     6223        %POS(L=15,C=10);
      175     6226        %POS(L=15,C=24);
      176     6229        %POS(L=15,C=38);
      177     6232        %POS(L=15,C=52);
      178     6235        %POS(L=16,C=10);
      179     6238        %POS(L=16,C=24);
      180     6241        %POS(L=16,C=38);
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:21   
      181     6244        %POS(L=16,C=52,LAST=YES);
      182     6247
      183     6248
      184     6249        %EJECT;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:22   
      185     6250        /* AUTO */
      186     6251
      187     6252    1   DCL P$ PTR;
      188     6253    1   DCL COUNT(0:%LSTENT) UBIN;
      189     6254    1   DCL OLDCOUNT(0:%LSTENT) UBIN;
      190     6255    1   DCL I UBIN;
      191     6256
      192     6257
      193     6258
      194     6259
      195     6260        /* Based items */
      196     6261
      197     6262    1   DCL DSWORD(0:0) UBIN BASED(B$DS8$) ALIGNED;
      198     6263        %FU$HCTX( NAME=HCTX);
      199     6286        %FU$FCTX( NAME=FCTX);
      200     6389        %FU$UCTX( NAME=UCTX);
      201     6442    1   DCL PCTX(0:127) UBIN BASED(P$);
      202     6443
      203     6444
      204     6445
      205     6446
      206     6447
      207     6448        %EJECT;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:23   
      208     6449    1      CALL M$INT( FPT_INT);

   6449  8 000002   000006 630400 2                  EPPR0   FPT_INT
         8 000003   010002 713400                    CLIMB   4098
         8 000004   400000 401760                    pmme    nvectors=1

      209     6450    1      CALL XUG$INIT( XUG_GETCMD, XUG_INIT);

   6450  8 000005   000000 630400 9                  EPPR0   0
         8 000006   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000007   000000 701000 xent               TSX1    XUG$INIT
         8 000010   000000 011000                    NOP     0

      210     6451    1      CALL CONCAT( OUTBUF, 'nsfu ', B_VERSION.T, ' here');

   6451  8 000011   000000 236000 xsym               LDQ     B_VERSION
         8 000012   000033 772000                    QRL     27
         8 000013   040000 100400                    MLR     fill='040'O
         8 000014   000737 000005 2                  ADSC9   FMTKEYS+10               cn=0,n=5
         8 000015   000142 000005 1                  ADSC9   OUTBUF                   cn=0,n=5
         8 000016   000000 620006                    EAX0    0,QL
         8 000017   040000 100440                    MLR     fill='040'O
         8 000020   000000 200010 xsym               ADSC9   B_VERSION                cn=1,n=*X0
         8 000021   000143 201773 1                  ADSC9   OUTBUF+1                 cn=1,n=1019
         8 000022   001773 116007                    CMPQ    1019,DL
         8 000023   000031 603000 8                  TRC     s:6452
         8 000024   776004 621006                    EAX1    -1020,QL
         8 000025   777777 661003                    ERX1    -1,DU
         8 000026   040046 100400                    MLR     fill='040'O
         8 000027   000741 000005 2                  ADSC9   FMTKEYS+12               cn=0,n=5
         8 000030   000143 200011 1                  ADSC9   OUTBUF+1,Q               cn=1,n=*X1

      211     6452    1      FPT_WRITE.BUF_.BOUND = B_VERSION.L + 9;

   6452  8 000031   000011 036007                    ADLQ    9,DL
         8 000032   000020 736000                    QLS     16
         8 000033   000122 676000 1                  ERQ     FPT_WRITE+4
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:24   
         8 000034   000034 376000 xsym               ANQ     B_VECTNIL+28
         8 000035   000122 656000 1                  ERSQ    FPT_WRITE+4

      212     6453    1      CALL M$WRITE( FPT_WRITE);

   6453  8 000036   000116 630400 1                  EPPR0   FPT_WRITE
         8 000037   040001 713400                    CLIMB   write
         8 000040   401400 401760                    pmme    nvectors=4

      213     6454
      214     6455
      215     6456
      216     6457    1      CALL M$REW( FPT_EXTEND);

   6457  8 000041   000012 630400 2                  EPPR0   FPT_EXTEND
         8 000042   040006 713400                    CLIMB   16390
         8 000043   400000 401760                    pmme    nvectors=1

   6452  8 000044                       NXTCMD       null
      217     6458    1   NXTCMD: ;
      218     6459    2      CALL XUG$GETCMD( XUG_GETCMD) WHENALTRETURN DO;

   6459  8 000044   000000 630400 9                  EPPR0   0
         8 000045   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000046   000000 701000 xent               TSX1    XUG$GETCMD
         8 000047   000051 702000 8                  TSX2    s:6460
         8 000050   000053 710000 8                  TRA     s:6462

      219     6460    2         CALL M$EXIT;

   6460  8 000051   000001 713400                    CLIMB   exit
         8 000052   000000 401760                    pmme    nvectors=0

      220     6461    2         END;

      221     6462    1      BREAK = '0'B;

PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:25   
   6462  8 000053   000132 450000 1                  STZ     BREAK

      222     6463
      223     6464    1      P$ = OUT$TOP.SUBLK$( 0);

   6464  8 000054   000001 470400 1                  LDP0    XUG_GETCMD+1
         8 000055   000003 236100                    LDQ     3,,PR0
         8 000056   200004 756100                    STQ     P$,,AUTO

      224     6465    2      DO CASE( OUT$BLK.CODE);

   6465  8 000057   200004 471500                    LDP1    P$,,AUTO
         8 000060   100000 720100                    LXL0    0,,PR1
         8 000061   000006 100003                    CMPX0   6,DU
         8 000062   000064 602010 8                  TNC     s:6465+5,X0
         8 000063   000215 710000 8                  TRA     s:6501
         8 000064   000215 710000 8                  TRA     s:6501
         8 000065   000072 710000 8                  TRA     s:6468
         8 000066   000144 710000 8                  TRA     s:6479
         8 000067   000215 710000 8                  TRA     s:6501
         8 000070   000147 710000 8                  TRA     s:6485
         8 000071   000210 710000 8                  TRA     s:6497

      225     6466
      226     6467    2       CASE( 1);                           /* build                              */

      227     6468    2         CMD( 0) = DFLNFSA;

   6468  8 000072   000000 100400                    MLR     fill='000'O
         8 000073   000026 000130 2                  ADSC9   DFLNFSA                  cn=0,n=88
         8 000074   000142 000400 1                  ADSC9   OUTBUF                   cn=0,n=256

      228     6469    3         DO I = 1 TO OUT$TOP.NSUBLKS-1;

   6469  8 000075   000001 235007                    LDA     1,DL
         8 000076   200143 755100                    STA     I,,AUTO
         8 000077   000131 710000 8                  TRA     s:6474+3
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:26   

      229     6470    3            P$ = OUT$TOP.SUBLK$( I);

   6470  8 000100   000001 470400 1                  LDP0    XUG_GETCMD+1
         8 000101   200143 720100                    LXL0    I,,AUTO
         8 000102   000003 236110                    LDQ     3,X0,PR0
         8 000103   200004 756100                    STQ     P$,,AUTO

      230     6471    3            IF OUT$BLK.CODE = 0

   6471  8 000104   200004 471500                    LDP1    P$,,AUTO
         8 000105   100000 721100                    LXL1    0,,PR1
         8 000106   000117 601000 8                  TNZ     s:6473

      231     6472    3            THEN CMD.FROM( 0) = OUT$BLK.SUBLK$( 0)-> OUT$SYM.TEXT;

   6472  8 000107   100003 473500                    LDP3    3,,PR1
         8 000110   300004 236100                    LDQ     4,,PR3
         8 000111   000033 772000                    QRL     27
         8 000112   000000 622006                    EAX2    0,QL
         8 000113   040000 100540                    MLR     fill='040'O
         8 000114   300004 200012                    ADSC9   4,,PR3                   cn=1,n=*X2
         8 000115   000144 000074 1                  ADSC9   OUTBUF+2                 cn=0,n=60
         8 000116   000126 710000 8                  TRA     s:6474

      232     6473    3            ELSE CMD.DEST( 0) = OUT$BLK.SUBLK$( 0)-> OUT$SYM.TEXT;

   6473  8 000117   100003 473500                    LDP3    3,,PR1
         8 000120   300004 236100                    LDQ     4,,PR3
         8 000121   000033 772000                    QRL     27
         8 000122   000000 622006                    EAX2    0,QL
         8 000123   040000 100540                    MLR     fill='040'O
         8 000124   300004 200012                    ADSC9   4,,PR3                   cn=1,n=*X2
         8 000125   000165 000144 1                  ADSC9   OUTBUF+19                cn=0,n=100

      233     6474    3            END;

PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:27   
   6474  8 000126   200143 235100                    LDA     I,,AUTO
         8 000127   000001 035007                    ADLA    1,DL
         8 000130   200143 755100                    STA     I,,AUTO
         8 000131   000001 236100                    LDQ     1,,PR0
         8 000132   000022 772000                    QRL     18
         8 000133   200143 116100                    CMPQ    I,,AUTO
         8 000134   000136 600000 8                  TZE     s:6475
         8 000135   000100 603000 8                  TRC     s:6470

      234     6475    3         CALL M$YC( FPT_YC) WHENALTRETURN DO; END;

   6475  8 000136   000016 630400 2                  EPPR0   FPT_YC
         8 000137   400011 713400                    CLIMB   alt,+9
         8 000140   401000 401760                    pmme    nvectors=3
         8 000141   000143 702000 8                  TSX2    s:6475+5
         8 000142   000143 710000 8                  TRA     s:6475+5

   6475  8 000143   000215 710000 8                  TRA     s:6501

      235     6476                                      /* SET SOMETHING IN DS TO TELL NFDS IT CHANGED  */
      236     6477
      237     6478    2       CASE( 2);                           /* display                            */

      238     6479    2         CALL DISPLAY;

   6479  8 000144   000216 701000 8                  TSX1    DISPLAY
         8 000145   000000 011000                    NOP     0
         8 000146   000215 710000 8                  TRA     s:6501

      239     6480
      240     6481    2       CASE( 3);                           /* restart                            */

      241     6482                                                /* DS.SOMETHING = %FU_RESTART         */
      242     6483
      243     6484    2       CASE( 4);                           /* set                                */

      244     6485    2         CALL CHARBIN( I, OUT$TOP.SUBLK$( 2)-> OUT$SYM.TEXT);
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:28   

   6485  8 000147   000005 473500                    LDP3    5,,PR0
         8 000150   300004 236100                    LDQ     4,,PR3
         8 000151   000033 772000                    QRL     27
         8 000152   000000 621006                    EAX1    0,QL
         8 000153   000100 305540                    DTB
         8 000154   300004 230011                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X1
         8 000155   200146 000010                    NDSC9   I+3,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         8 000156   200147 235100                    LDA     I+4,,AUTO
         8 000157   200143 755100                    STA     I,,AUTO

      245     6486    2         P$ = OUT$TOP.SUBLK$( 1);

   6486  8 000160   000004 236100                    LDQ     4,,PR0
         8 000161   200004 756100                    STQ     P$,,AUTO

      246     6487    2         IF DSMINWRD( OUT$BLK.CODE - %DS_CTXLIM#) > I

   6487  8 000162   200004 471500                    LDP1    P$,,AUTO
         8 000163   100000 720100                    LXL0    0,,PR1
         8 000164   200143 236100                    LDQ     I,,AUTO
         8 000165   000042 116010 2                  CMPQ    DFLNFSA+12,X0
         8 000166   000172 602000 8                  TNC     s:6490
         8 000167   000051 116010 2                  CMPQ    DFLNFSA+19,X0
         8 000170   000205 602000 8                  TNC     s:6494
         8 000171   000205 600000 8                  TZE     s:6494

      247     6488    2           OR DSMAXWRD( OUT$BLK.CODE - %DS_CTXLIM#) < I
      248     6489    3         THEN DO;

      249     6490    3            OUTBUF = 'Bad Value';

   6490  8 000172   040000 100400                    MLR     fill='040'O
         8 000173   000743 000011 2                  ADSC9   FMTKEYS+14               cn=0,n=9
         8 000174   000142 002000 1                  ADSC9   OUTBUF                   cn=0,n=1024

      250     6491    3            FPT_WRITE.BUF_.BOUND = 8;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:29   

   6491  8 000175   000122 236000 1                  LDQ     FPT_WRITE+4
         8 000176   177777 376007                    ANQ     65535,DL
         8 000177   000002 276003                    ORQ     2,DU
         8 000200   000122 756000 1                  STQ     FPT_WRITE+4

      251     6492    3            CALL M$WRITE( FPT_WRITE);

   6492  8 000201   000116 630400 1                  EPPR0   FPT_WRITE
         8 000202   040001 713400                    CLIMB   write
         8 000203   401400 401760                    pmme    nvectors=4

      252     6493    3            END;

   6493  8 000204   000215 710000 8                  TRA     s:6501

      253     6494    2         ELSE DSWORD( OUT$BLK.CODE) = I;

   6494  8 000205   000004 473400 2                  LDP3    B$DS8
         8 000206   300000 756110                    STQ     0,X0,PR3
         8 000207   000215 710000 8                  TRA     s:6501

      254     6495
      255     6496    2       CASE( 5);                           /* stats                              */

      256     6497    2         CALL STATS;

   6497  8 000210   000460 701000 8                  TSX1    STATS
         8 000211   000000 011000                    NOP     0

      257     6498    2         FPT_WRITE.V.DCB# = DCBNUM( M$LO);

   6498  8 000212   000000 236007 xsym               LDQ     M$LO,DL
         8 000213   000000 620006                    EAX0    0,QL
         8 000214   000126 740000 1                  STX0    FPT_WRITE+8

      258     6499
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:30   
      259     6500    2       END;

      260     6501    1      GOTO NXTCMD;

   6501  8 000215   000044 710000 8                  TRA     NXTCMD

      261     6502        %EJECT;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:31   
      262     6503        /*I*  NAME:    DISPLAY
      263     6504              Purpose: To display stuff (DS header, FCTXs, UCTXs, or HCTXs) in the
      264     6505                       NFS common "memory".
      265     6506              Algorithm: Look for the display format string in M$FMT and then M$FMTSYS.
      266     6507                       If we find it, then start displaying the appropriate structures
      267     6508                       following through their appropriate linked lists.
      268     6509        */
      269     6510    1   DISPLAY: PROC;

   6510  8 000216   200144 741300       DISPLAY      STX1  ! I+1,,AUTO

      270     6511        %FPT_READ( BUF=OUTBUF, KEY=FMTKEY, KEYS=YES);
      271     6550    2   DCL FMTKEY(0:1) STATIC UBIN;
      272     6551    2   DCL 1 FMTKEYS(0:4) CONSTANT,
      273     6552    2         2 L UBIN(9) UNAL INIT(5*2,7*0),
      274     6553    2         2 T CHAR(7) INIT('FU$DS'*2, 'FU$FCTX', 'FU$HCTX', 'FU$UCTX');
      275     6554
      276     6555    2      I = 0;

   6555  8 000217   200143 450100                    STZ     I,,AUTO

      277     6556    2      IF OUT$TOP.NSUBLKS > 1 THEN I = OUT$TOP.SUBLK$(1)-> OUT$BLK.CODE;

   6556  8 000220   000001 470400 1                  LDP0    XUG_GETCMD+1
         8 000221   000001 220100                    LDX0    1,,PR0
         8 000222   000002 100003                    CMPX0   2,DU
         8 000223   000230 602000 8                  TNC     s:6557

   6556  8 000224   000004 471500                    LDP1    4,,PR0
         8 000225   100000 236100                    LDQ     0,,PR1
         8 000226   777777 376007                    ANQ     -1,DL
         8 000227   200143 756100                    STQ     I,,AUTO

      278     6557    2      FMTKEY = FMTKEYS( I);

   6557  8 000230   200143 235100                    LDA     I,,AUTO
         8 000231   000003 735000                    ALS     3
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:32   
         8 000232   000000 100405                    MLR     fill='000'O
         8 000233   000725 000010 2                  ADSC9   FMTKEYS,A                cn=0,n=8
         8 000234   000616 000010 1                  ADSC9   FMTKEY                   cn=0,n=8

      279     6558    2      FPT_READ.V.DCB# = DCBNUM( M$FMT);

   6558  8 000235   000000 236007 xsym               LDQ     M$FMT,DL
         8 000236   000000 620006                    EAX0    0,QL
         8 000237   000610 740000 1                  STX0    FPT_READ+8

      280     6559    3      CALL M$READ( FPT_READ) WHENALTRETURN DO;

   6559  8 000240   000600 630400 1                  EPPR0   FPT_READ
         8 000241   440000 713400                    CLIMB   alt,read
         8 000242   401400 401760                    pmme    nvectors=4
         8 000243   000245 702000 8                  TSX2    s:6560
         8 000244   000271 710000 8                  TRA     s:6569

      281     6560    3         FPT_READ.V.DCB# = DCBNUM( M$FMTSYS);

   6560  8 000245   000000 236007 xsym               LDQ     M$FMTSYS,DL
         8 000246   000000 620006                    EAX0    0,QL
         8 000247   000610 740000 1                  STX0    FPT_READ+8

      282     6561    4         CALL M$READ( FPT_READ) WHENALTRETURN DO;

   6561  8 000250   000600 630400 1                  EPPR0   FPT_READ
         8 000251   440000 713400                    CLIMB   alt,read
         8 000252   401400 401760                    pmme    nvectors=4
         8 000253   000255 702000 8                  TSX2    s:6562
         8 000254   000271 710000 8                  TRA     s:6569

      283     6562    4            OUTBUF = 'Not installed in :FORMAT';

   6562  8 000255   040000 100400                    MLR     fill='040'O
         8 000256   000746 000030 2                  ADSC9   FMTKEYS+17               cn=0,n=24
         8 000257   000142 002000 1                  ADSC9   OUTBUF                   cn=0,n=1024
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:33   

      284     6563    4            FPT_WRITE.BUF_.BOUND = 23;

   6563  8 000260   000122 236000 1                  LDQ     FPT_WRITE+4
         8 000261   177777 376007                    ANQ     65535,DL
         8 000262   000002 276000 9                  ORQ     2
         8 000263   000122 756000 1                  STQ     FPT_WRITE+4

      285     6564    4            CALL M$WRITE( FPT_WRITE);

   6564  8 000264   000116 630400 1                  EPPR0   FPT_WRITE
         8 000265   040001 713400                    CLIMB   write
         8 000266   401400 401760                    pmme    nvectors=4

      286     6565    4            RETURN;

   6565  8 000267   200144 221300                    LDX1  ! I+1,,AUTO
         8 000270   000001 702211                    TSX2  ! 1,X1

      287     6566    4            END;
      288     6567    3         END;

      289     6568
      290     6569    3      DO CASE( I);

   6569  8 000271   200143 235100                    LDA     I,,AUTO
         8 000272   000005 115007                    CMPA    5,DL
         8 000273   000275 602005 8                  TNC     s:6569+4,AL
         8 000274   000337 710000 8                  TRA     s:6584
         8 000275   000302 710000 8                  TRA     s:6571
         8 000276   000302 710000 8                  TRA     s:6571
         8 000277   000305 710000 8                  TRA     s:6573
         8 000300   000311 710000 8                  TRA     s:6575
         8 000301   000315 710000 8                  TRA     s:6577

      291     6570    3       CASE( 0, 1);                        /* Data seg                           */

PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:34   
      292     6571    3         P$ = B$DS8$;

   6571  8 000302   000004 236000 2                  LDQ     B$DS8
         8 000303   200004 756100                    STQ     P$,,AUTO
         8 000304   000337 710000 8                  TRA     s:6584

      293     6572    3       CASE( 2);                           /* FCTX's                             */

      294     6573    3         P$ = DS.FCTX$;

   6573  8 000305   000004 470400 2                  LDP0    B$DS8
         8 000306   000004 236100                    LDQ     4,,PR0
         8 000307   200004 756100                    STQ     P$,,AUTO
         8 000310   000337 710000 8                  TRA     s:6584

      295     6574    3       CASE( 3);                           /* HCTX's                             */

      296     6575    3         P$ = DS.HCTX$;

   6575  8 000311   000004 470400 2                  LDP0    B$DS8
         8 000312   000006 236100                    LDQ     6,,PR0
         8 000313   200004 756100                    STQ     P$,,AUTO
         8 000314   000337 710000 8                  TRA     s:6584

      297     6576    3       CASE( 4);                           /* UCTX's                             */

      298     6577    3         P$ = DS.HCTX$;

   6577  8 000315   000004 470400 2                  LDP0    B$DS8
         8 000316   000006 236100                    LDQ     6,,PR0
         8 000317   200004 756100                    STQ     P$,,AUTO

      299     6578    4         DO WHILE P$ ~= ADDR( NIL);

   6578  8 000320   000327 710000 8                  TRA     s:6581

      300     6579    4            IF P$-> HCTX.UCTX$ ~= ADDR( NIL) THEN EXIT;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:35   

   6579  8 000321   200004 470500                    LDP0    P$,,AUTO
         8 000322   000001 236100                    LDQ     1,,PR0
         8 000323   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000324   000331 601000 8                  TNZ     s:6582

      301     6580    4            P$ = P$-> HCTX.LNK$;

   6580  8 000325   000000 236100                    LDQ     0,,PR0
         8 000326   200004 756100                    STQ     P$,,AUTO

      302     6581    4            END;

   6581  8 000327   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000330   000321 601000 8                  TNZ     s:6579

      303     6582    3         IF P$ ~= ADDR( NIL) THEN P$ = P$-> HCTX.UCTX$;

   6582  8 000331   200004 236100                    LDQ     P$,,AUTO
         8 000332   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000333   000337 600000 8                  TZE     s:6584

   6582  8 000334   200004 470500                    LDP0    P$,,AUTO
         8 000335   000001 236100                    LDQ     1,,PR0
         8 000336   200004 756100                    STQ     P$,,AUTO

      304     6583    3       END;

      305     6584    2      SUBSTR( OUTBUF,0,4) = '%(%)';

   6584  8 000337   000754 236000 2                  LDQ     FMTKEYS+23
         8 000340   000142 756000 1                  STQ     OUTBUF

   6584  8 000341                       AGAIN        null
      306     6585
      307     6586    2   AGAIN:;
      308     6587    2      IF P$ = ADDR( NIL) OR BREAK THEN RETURN;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:36   

   6587  8 000341   200004 236100                    LDQ     P$,,AUTO
         8 000342   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000343   000346 600000 8                  TZE     s:6587
         8 000344   000132 234000 1                  SZN     BREAK
         8 000345   000350 605000 8                  TPL     s:6588

   6587  8 000346   200144 221300                    LDX1  ! I+1,,AUTO
         8 000347   000001 702211                    TSX2  ! 1,X1

      309     6588    2      CALL X$WRITE( FDS, VECTOR( OUTBUF), VECTOR( P$), VECTOR( PCTX));

   6588  8 000350   777640 235007                    LDA     -96,DL
         8 000351   200146 452500                    STP2    I+3,,AUTO
         8 000352   200146 236100                    LDQ     I+3,,AUTO
         8 000353   000004 036003                    ADLQ    4,DU
         8 000354   200150 757100                    STAQ    I+5,,AUTO
         8 000355   000003 235000 9                  LDA     3
         8 000356   200004 236100                    LDQ     P$,,AUTO
         8 000357   200154 757100                    STAQ    I+9,,AUTO
         8 000360   200150 237100                    LDAQ    I+5,,AUTO
         8 000361   200152 757100                    STAQ    I+7,,AUTO
         8 000362   200154 237100                    LDAQ    I+9,,AUTO
         8 000363   200156 757100                    STAQ    I+11,,AUTO
         8 000364   200156 630500                    EPPR0   I+11,,AUTO
         8 000365   200163 450500                    STP0    I+16,,AUTO
         8 000366   200152 631500                    EPPR1   I+7,,AUTO
         8 000367   200162 451500                    STP1    I+15,,AUTO
         8 000370   000006 237000 9                  LDAQ    6
         8 000371   200160 757100                    STAQ    I+13,,AUTO
         8 000372   200160 630500                    EPPR0   I+13,,AUTO
         8 000373   000022 631400 xsym               EPPR1   B_VECTNIL+18
         8 000374   000000 701000 xent               TSX1    X$WRITE
         8 000375   000000 011000                    NOP     0

      310     6589    2      IF SUBSTR( OUTBUF, 4, 3) = '%1(' THEN SUBSTR( OUTBUF, 5, 1) = '0';

PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:37   
   6589  8 000376   000143 236000 1                  LDQ     OUTBUF+1
         8 000377   000755 676000 2                  ERQ     FMTKEYS+24
         8 000400   000010 376000 9                  ANQ     8
         8 000401   000404 601000 8                  TNZ     s:6590

   6589  8 000402   000060 236003                    LDQ     48,DU
         8 000403   000143 552020 1                  STBQ    OUTBUF+1,'20'O

      311     6590    3      DO CASE( I);

   6590  8 000404   200143 235100                    LDA     I,,AUTO
         8 000405   000005 115007                    CMPA    5,DL
         8 000406   000410 602005 8                  TNC     s:6590+4,AL
         8 000407   000457 710000 8                  TRA     s:6609
         8 000410   000415 710000 8                  TRA     s:6592
         8 000411   000415 710000 8                  TRA     s:6592
         8 000412   000417 710000 8                  TRA     s:6594
         8 000413   000423 710000 8                  TRA     s:6596
         8 000414   000427 710000 8                  TRA     s:6598

      312     6591    3       CASE( 0, 1);

      313     6592    3         RETURN;

   6592  8 000415   200144 221300                    LDX1  ! I+1,,AUTO
         8 000416   000001 702211                    TSX2  ! 1,X1

      314     6593    3       CASE( 2);

      315     6594    3         P$ = P$-> FCTX.LNK$;

   6594  8 000417   200004 470500                    LDP0    P$,,AUTO
         8 000420   000000 236100                    LDQ     0,,PR0
         8 000421   200004 756100                    STQ     P$,,AUTO
         8 000422   000457 710000 8                  TRA     s:6609

      316     6595    3       CASE( 3);
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:38   

      317     6596    3         P$ = P$-> HCTX.LNK$;

   6596  8 000423   200004 470500                    LDP0    P$,,AUTO
         8 000424   000000 236100                    LDQ     0,,PR0
         8 000425   200004 756100                    STQ     P$,,AUTO
         8 000426   000457 710000 8                  TRA     s:6609

      318     6597    3       CASE( 4);

      319     6598    3         IF P$-> UCTX.HLNK$ ~= ADDR( NIL)

   6598  8 000427   200004 470500                    LDP0    P$,,AUTO
         8 000430   000000 236100                    LDQ     0,,PR0
         8 000431   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000432   000435 600000 8                  TZE     s:6601

      320     6599    3         THEN P$ = P$-> UCTX.HLNK$;

   6599  8 000433   200004 756100                    STQ     P$,,AUTO
         8 000434   000457 710000 8                  TRA     s:6609

      321     6600    4         ELSE DO;

      322     6601    4            P$ = P$-> UCTX.HCTX$-> HCTX.LNK$;

   6601  8 000435   000001 471500                    LDP1    1,,PR0
         8 000436   100000 236100                    LDQ     0,,PR1
         8 000437   200004 756100                    STQ     P$,,AUTO

      323     6602    5            DO WHILE P$ ~= ADDR( NIL);

   6602  8 000440   000447 710000 8                  TRA     s:6605

      324     6603    5               IF P$-> HCTX.UCTX$ ~= ADDR( NIL) THEN EXIT;

   6603  8 000441   200004 470500                    LDP0    P$,,AUTO
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:39   
         8 000442   000001 236100                    LDQ     1,,PR0
         8 000443   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000444   000451 601000 8                  TNZ     s:6606

      325     6604    5               P$ = P$-> HCTX.LNK$;

   6604  8 000445   000000 236100                    LDQ     0,,PR0
         8 000446   200004 756100                    STQ     P$,,AUTO

      326     6605    5               END;

   6605  8 000447   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000450   000441 601000 8                  TNZ     s:6603

      327     6606    4            IF P$ ~= ADDR( NIL) THEN P$ = P$-> HCTX.UCTX$;

   6606  8 000451   200004 236100                    LDQ     P$,,AUTO
         8 000452   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000453   000457 600000 8                  TZE     s:6609

   6606  8 000454   200004 470500                    LDP0    P$,,AUTO
         8 000455   000001 236100                    LDQ     1,,PR0
         8 000456   200004 756100                    STQ     P$,,AUTO

      328     6607    4            END;

      329     6608    3       END;

      330     6609    2      GOTO AGAIN;

   6609  8 000457   000341 710000 8                  TRA     AGAIN

      331     6610    2   END DISPLAY;
      332     6611
      333     6612        %EJECT;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:40   
      334     6613        /*I*  NAME:    STATS
      335     6614              Purpose: To print out data in the DS structure out to the screen in an
      336     6615                       easy to view, formatted way, that updates every 3 seconds.
      337     6616        */
      338     6617    1   STATS: PROC;

   6617  8 000460   200144 741300       STATS        STX1  ! I+1,,AUTO

      339     6618    2      FPT_WRITE.V.DCB# = DCBNUM( M$X364);

   6618  8 000461   000000 236007 xsym               LDQ     M$X364,DL
         8 000462   000000 620006                    EAX0    0,QL
         8 000463   000126 740000 1                  STX0    FPT_WRITE+8

      340     6619    2      FPT_WRITE.BUF_ = VECTOR( STATSMSG);

   6619  8 000464   000012 237000 9                  LDAQ    10
         8 000465   000122 757000 1                  STAQ    FPT_WRITE+4

      341     6620    2      CALL M$WRITE( FPT_WRITE);

   6620  8 000466   000116 630400 1                  EPPR0   FPT_WRITE
         8 000467   040001 713400                    CLIMB   write
         8 000470   401400 401760                    pmme    nvectors=4

      342     6621    2      FPT_WRITE.BUF_.BUF$ = ADDR( OUTBUF);

   6621  8 000471   000005 236000 9                  LDQ     5
         8 000472   000123 756000 1                  STQ     FPT_WRITE+5

      343     6622    2      COUNT = '0'B;

   6622  8 000473   000100 100400                    MLR     fill='000'O
         8 000474   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         8 000475   200005 000274                    ADSC9   COUNT,,AUTO              cn=0,n=188

      344     6623
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:41   
      345     6624    3      DO WHILE '1'B;

      346     6625    3         OUTX = 0;

   6625  8 000476   200003 450100                    STZ     OUTX,,AUTO

      347     6626    3         OLDCOUNT = COUNT;

   6626  8 000477   000100 100500                    MLR     fill='000'O
         8 000500   200005 000274                    ADSC9   COUNT,,AUTO              cn=0,n=188
         8 000501   200064 000274                    ADSC9   OLDCOUNT,,AUTO           cn=0,n=188

      348     6627    4         DO I = 0 TO %LSTENT;

   6627  8 000502   200143 450100                    STZ     I,,AUTO

      349     6628    5            DO CASE( TYPE( I));

   6628  8 000503   200143 720100                    LXL0    I,,AUTO
         8 000504   000510 235010 2                  LDA     TYPE,X0
         8 000505   000002 115007                    CMPA    2,DL
         8 000506   000510 602005 8                  TNC     s:6628+5,AL
         8 000507   000525 710000 8                  TRA     s:6634
         8 000510   000520 710000 8                  TRA     s:6632
         8 000511   000512 710000 8                  TRA     s:6630

      350     6629    5             CASE( %HALF_TYPE);

      351     6630    5               COUNT( I) = DSWORD( DSX( I))/262144;

   6630  8 000512   000431 721010 2                  LXL1    DSX,X0
         8 000513   000004 470400 2                  LDP0    B$DS8
         8 000514   000000 236111                    LDQ     0,X1,PR0
         8 000515   000022 772000                    QRL     18
         8 000516   200005 756110                    STQ     COUNT,X0,AUTO
         8 000517   000541 710000 8                  TRA     s:6638

PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:42   
      352     6631    5             CASE( %NORM_TYPE);

      353     6632    5               COUNT( I) = DSWORD( DSX( I));

   6632  8 000520   000431 721010 2                  LXL1    DSX,X0
         8 000521   000004 470400 2                  LDP0    B$DS8
         8 000522   000000 235111                    LDA     0,X1,PR0
         8 000523   200005 755110                    STA     COUNT,X0,AUTO
         8 000524   000541 710000 8                  TRA     s:6638

      354     6633    5             CASE( ELSE);

      355     6634    5               IF DS.MSGCNT ~= OLDCOUNT( 5)

   6634  8 000525   000004 470400 2                  LDP0    B$DS8
         8 000526   000001 236100                    LDQ     1,,PR0
         8 000527   000532 604000 8                  TMI     s:6635
         8 000530   200071 116100                    CMPQ    OLDCOUNT+5,,AUTO
         8 000531   000541 600000 8                  TZE     s:6638

      356     6635    5               THEN COUNT( I) =

   6635  8 000532   000431 721010 2                  LXL1    DSX,X0
         8 000533   200143 236100                    LDQ     I,,AUTO
         8 000534   000510 036010 2                  ADLQ    TYPE,X0
         8 000535   000000 622006                    EAX2    0,QL
         8 000536   000000 236111                    LDQ     0,X1,PR0
         8 000537   200002 136112                    SBLQ    2,X2,AUTO
         8 000540   200005 756110                    STQ     COUNT,X0,AUTO

      357     6636    5                    DSWORD( DSX( I)) - OLDCOUNT( I + TYPE( I) - %DELTA_TYPE);
      358     6637    5             END;

      359     6638    5            IF COUNT( I) ~= OLDCOUNT( I) THEN DO;

   6638  8 000541   200005 236110                    LDQ     COUNT,X0,AUTO
         8 000542   200064 116110                    CMPQ    OLDCOUNT,X0,AUTO
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:43   
         8 000543   000567 600000 8                  TZE     s:6645

      360     6639    5               SUBSTR( OUTBUF,OUTX,8) = POS( I); /* \E[ll;ccH                    */

   6639  8 000544   200143 235100                    LDA     I,,AUTO
         8 000545   000003 735000                    ALS     3
         8 000546   200003 236100                    LDQ     OUTX,,AUTO
         8 000547   040006 100405                    MLR     fill='040'O
         8 000550   000567 000010 2                  ADSC9   POS,A                    cn=0,n=8
         8 000551   000142 000010 1                  ADSC9   OUTBUF,Q                 cn=0,n=8

      361     6640    5               CALL BINCHAR( SUBSTR( OUTBUF, OUTX+8, 6), COUNT( I));

   6640  8 000552   200005 235110                    LDA     COUNT,X0,AUTO
         8 000553   000044 773000                    LRL     36
         8 000554   200146 757100                    STAQ    I+3,,AUTO
         8 000555   200003 235100                    LDA     OUTX,,AUTO
         8 000556   000005 301500                    BTD
         8 000557   200146 000010                    NDSC9   I+3,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         8 000560   000144 030006 1                  NDSC9   OUTBUF+2,A               cn=0,s=nosgn,sf=0,n=6

      362     6641    5               CALL EDITCHAR( OUTBUF, OUTX+8, 5, '105'O,

   6641  8 000561   005000 024405                    MVNE
         8 000562   000144 030005 1                  NDSC9   OUTBUF+2,A               cn=0,s=nosgn,sf=0,n=5
         8 000563   000011 000001 9                  ADSC9   9                        cn=0,n=1
         8 000564   000144 000005 1                  ADSC9   OUTBUF+2,A               cn=0,n=5

      363     6642    5                 SUBSTR( OUTBUF, OUTX+8, 5));
      364     6643    5               OUTX = OUTX + 14;

   6643  8 000565   000016 035007                    ADLA    14,DL
         8 000566   200003 755100                    STA     OUTX,,AUTO

      365     6644    5               END;

      366     6645    4            END;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:44   

   6645  8 000567   200143 235100                    LDA     I,,AUTO
         8 000570   000001 035007                    ADLA    1,DL
         8 000571   200143 755100                    STA     I,,AUTO
         8 000572   000057 115007                    CMPA    47,DL
         8 000573   000503 602000 8                  TNC     s:6628

      367     6646    3         SUBSTR( OUTBUF,OUTX,3) = STATSMSG.T;

   6646  8 000574   200003 236100                    LDQ     OUTX,,AUTO
         8 000575   040006 100400                    MLR     fill='040'O
         8 000576   000072 000003 2                  ADSC9   STATSMSG                 cn=0,n=3
         8 000577   000142 000003 1                  ADSC9   OUTBUF,Q                 cn=0,n=3

      368     6647    4         IF BREAK THEN DO;

   6647  8 000600   000132 234000 1                  SZN     BREAK
         8 000601   000612 605000 8                  TPL     s:6652

      369     6648    4            SUBSTR( OUTBUF,OUTX+3,4) = POS( %LSTENT);

   6648  8 000602   040006 100400                    MLR     fill='040'O
         8 000603   000723 000004 2                  ADSC9   POS+92                   cn=0,n=4
         8 000604   000142 600004 1                  ADSC9   OUTBUF,Q                 cn=3,n=4

      370     6649    4            SUBSTR( OUTBUF,OUTX+7,1) = 'B';

   6649  8 000605   040006 100400                    MLR     fill='040'O
         8 000606   000014 000001 9                  ADSC9   12                       cn=0,n=1
         8 000607   000143 600001 1                  ADSC9   OUTBUF+1,Q               cn=3,n=1

      371     6650    4            OUTX = OUTX + 5;

   6650  8 000610   000005 036007                    ADLQ    5,DL
         8 000611   200003 756100                    STQ     OUTX,,AUTO

      372     6651    4            END;
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:45   

      373     6652    3         FPT_WRITE.BUF_.BOUND = OUTX+2;

   6652  8 000612   000002 036007                    ADLQ    2,DL
         8 000613   000020 736000                    QLS     16
         8 000614   000122 676000 1                  ERQ     FPT_WRITE+4
         8 000615   000034 376000 xsym               ANQ     B_VECTNIL+28
         8 000616   000122 656000 1                  ERSQ    FPT_WRITE+4

      374     6653    3         IF OUTX > 0 THEN CALL M$WRITE( FPT_WRITE);

   6653  8 000617   200003 236100                    LDQ     OUTX,,AUTO
         8 000620   000624 600000 8                  TZE     s:6654

   6653  8 000621   000116 630400 1                  EPPR0   FPT_WRITE
         8 000622   040001 713400                    CLIMB   write
         8 000623   401400 401760                    pmme    nvectors=4

      375     6654    3         IF BREAK THEN RETURN;

   6654  8 000624   000132 234000 1                  SZN     BREAK
         8 000625   000630 605000 8                  TPL     s:6655

   6654  8 000626   200144 221300                    LDX1  ! I+1,,AUTO
         8 000627   000001 702211                    TSX2  ! 1,X1

      376     6655    3         CALL M$WAIT( FPT_WAIT);

   6655  8 000630   000134 630400 1                  EPPR0   FPT_WAIT
         8 000631   020006 713400                    CLIMB   8198
         8 000632   400400 401760                    pmme    nvectors=2

      377     6656    3         END;

   6656  8 000633   000476 710000 8                  TRA     s:6625
      378     6657    2   END STATS;
      379     6658
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:46   
      380     6659    1   END FUU$NFSU;
      381     6660        %EOD;

PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:47   
--  Include file information  --

   XU_FORMAT_C.:LIBRARY  is referenced.
   XUG_ENTRY.:LIBRARY  cannot be made into a system file and is referenced.
   XU_MACRO_C.:LIBRARY  is referenced.
   FUU_EQU_E.:FUA2TOU  is referenced.
   FU_NFS_M.:FUA2TOU  is referenced.
   FU_NFSSUBS_C.:FUA2TOU  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FUU$NFSU.
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:48   

 **** Variables and constants ****

  ****  Section 001  Data  FUU$NFSU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   132-0-0/b BIT         r     1 BREAK                    142-0-0/c STRC(2304)  r     1 CMD(0:3)
   542-0-0/w STRC(1080)  r     1 FDS                      616-0-0/w UBIN        r     1 FMTKEY(0:1)
   600-0-0/d STRC(504)   r     1 FPT_READ                 134-0-0/d STRC(216)   r     1 FPT_WAIT
   116-0-0/d STRC(432)   r     1 FPT_WRITE                142-0-0/c CHAR(1024)  r     1 OUTBUF
     0-0-0/d STRC(1512)  r     1 XUG_GETCMD                52-0-0/d STRC(1296)  r     1 XUG_INIT

  ****  Section 002 RoData FUU$NFSU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w UBIN        r     1 B$DS8                      4-0-0/w PTR         r     1 B$DS8$
    26-0-0/c STRC(792)   r     1 DFLNFSA
    63-0-0/w UBIN        r     1 DSMAXWRD(0:6)
    54-0-0/w UBIN        r     1 DSMINWRD(0:6)
   431-0-0/w UBIN        r     1 DSX(0:46)
   725-0-0/c STRC(72)    r     1 FMTKEYS(0:4)
    12-0-0/d STRC(144)   r     1 FPT_EXTEND                 6-0-0/d STRC(144)   r     1 FPT_INT
    16-0-0/d STRC(288)   r     1 FPT_YC                     2-0-0/c CHAR(8)     r     1 HELPACCT
     1-0-0/c CHAR(4)     r     1 HELPNAME                 567-0-0/c CHAR(8)     r     1 POS(0:46)
     0-0-0/c CHAR        r     1 PROMPT                    72-0-0/c STRC(8019)  r     1 STATSMSG
   510-0-0/w UBIN        r     1 TYPE(0:46)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w UBIN        r     1 COUNT(0:46)              143-0-0/w UBIN        r     1 I
    64-0-0/w UBIN        r     1 OLDCOUNT(0:46)
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:49   
     3-0-0/w UBIN        r     1 OUTX                       4-0-0/w PTR         r     1 P$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ASTR(9)     r     1 B_VERSION                  0-0-0/w SBIN        r     1 FUU_CMD

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(4716)  r     1 DS                         0-0-0/w UBIN        r     1 DSWORD(0:0)
     0-0-0/w STRC(1656)  r     1 FCTX                       0-0-0/w ASTR(900)   r     1 HCTX
     0-0-0/d ASTR(3528)  r     1 M$DS                       0-0-0/d ASTR(3528)  r     1 M$FMT
     0-0-0/d ASTR(3528)  r     1 M$FMTSYS                   0-0-0N  NULL        r     1 M$LO
     0-0-0/d ASTR(3528)  r     1 M$X364                     0-0-0/w STRC(144)   r     1 OUT$BLK
     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(144)   r     1 OUT$TOP
     0-0-0/w UBIN        r     1 PCTX(0:127)                0-0-0/w STRC(1296)  r     1 UCTX


   Procedure FUU$NFSU requires 412 words for executable code.
   Procedure FUU$NFSU requires 116 words of local(AUTO) storage.
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:50   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:51   
          MINI XREF LISTING

AGAIN IN PROCEDURE DISPLAY
      6584**LABEL    6609--GOTO
B$DS8
      5372**DCL      5373--REDEF
B$DS8$
      5373**DCL      5388--IMP-PTR  6262--IMP-PTR  6494>>ASSIGN   6571>>ASSIGN   6573>>ASSIGN   6575>>ASSIGN
      6577>>ASSIGN   6630>>ASSIGN   6632>>ASSIGN   6634>>IF       6635>>ASSIGN
BREAK
      5525**DCL      6462<<ASSIGN   6587>>IF       6647>>IF       6654>>IF
B_VERSION.L
      5720**DCL      5720--IMP-SIZ  6451>>CALLBLT  6452>>ASSIGN
B_VERSION.T
      5720**DCL      6451>>CALLBLT
CMD
      5724**DCL      5567--DCLINIT  6468<<ASSIGN
CMD.DEST
      5728**DCL      6473<<ASSIGN
CMD.FMTBUF
      5729**DCL      5931--DCLINIT  5933--DCLINIT
CMD.FROM
      5726**DCL      6472<<ASSIGN
COUNT
      6253**DCL      6622<<ASSIGN   6626>>ASSIGN   6630<<ASSIGN   6632<<ASSIGN   6635<<ASSIGN   6638>>IF
      6640>>CALLBLT
DFLNFSA
      5730**DCL      6468>>ASSIGN
DISPLAY
      6510**PROC     6479--CALL
DS.FCTX$
      5393**DCL      6573>>ASSIGN
DS.HCTX$
      5393**DCL      6575>>ASSIGN   6577>>ASSIGN
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:52   
DS.MSGCNT
      5392**DCL      6634>>IF
DSMAXWRD
      6017**DCL      6487>>IF
DSMINWRD
      6016**DCL      6487>>IF
DSWORD
      6262**DCL      6494<<ASSIGN   6630>>ASSIGN   6632>>ASSIGN   6635>>ASSIGN
DSX
      6078**DCL      6630>>ASSIGN   6632>>ASSIGN   6635>>ASSIGN
FCTX.FID.ASN
      6378**DCL      6379--REDEF
FCTX.FOFFSET
      6387**DCL      6387--REDEF
FCTX.LNK$
      6304**DCL      6594>>ASSIGN
FDS
      5913**DCL      6588<>CALL
FMTKEY IN PROCEDURE DISPLAY
      6550**DCL      6528--DCLINIT  6529--DCLINIT  6557<<ASSIGN
FMTKEYS IN PROCEDURE DISPLAY
      6551**DCL      6557>>ASSIGN
FPT_EXTEND
      5537**DCL      6457<>CALL
FPT_EXTEND.V
      5537**DCL      5537--DCLINIT
FPT_INT
      5521**DCL      6449<>CALL
FPT_INT.V
      5521**DCL      5521--DCLINIT
FPT_READ IN PROCEDURE DISPLAY
      6528**DCL      6559<>CALL     6561<>CALL
FPT_READ.STATION_ IN PROCEDURE DISPLAY
      6531**DCL      6532--REDEF
FPT_READ.V IN PROCEDURE DISPLAY
      6532**DCL      6528--DCLINIT
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:53   
FPT_READ.V.DCB# IN PROCEDURE DISPLAY
      6532**DCL      6558<<ASSIGN   6560<<ASSIGN
FPT_READ.V.DVBYTE.REREAD# IN PROCEDURE DISPLAY
      6543**DCL      6543--REDEF
FPT_READ.V.INDX# IN PROCEDURE DISPLAY
      6541**DCL      6541--REDEF
FPT_WAIT
      5551**DCL      6655<>CALL
FPT_WAIT.V
      5552**DCL      5551--DCLINIT
FPT_WRITE
      5495**DCL      6453<>CALL     6492<>CALL     6564<>CALL     6620<>CALL     6653<>CALL
FPT_WRITE.BUF_
      5495**DCL      6619<<ASSIGN
FPT_WRITE.BUF_.BOUND
      5495**DCL      6452<<ASSIGN   6491<<ASSIGN   6563<<ASSIGN   6652<<ASSIGN
FPT_WRITE.BUF_.BUF$
      5497**DCL      6621<<ASSIGN
FPT_WRITE.STATION_
      5497**DCL      5497--REDEF
FPT_WRITE.V
      5498**DCL      5495--DCLINIT
FPT_WRITE.V.DCB#
      5498**DCL      6498<<ASSIGN   6618<<ASSIGN
FPT_WRITE.V.DVBYTE.VFC#
      5504**DCL      5504--REDEF
FPT_YC
      5567**DCL      6475<>CALL
FPT_YC.V
      5568**DCL      5567--DCLINIT
FUU$INT
      5524**DCL-ENT  5521--DCLINIT
FUU_CMD
      4750**DCL      4426--DCLINIT
HCTX.LNK$
      6281**DCL      6580>>ASSIGN   6596>>ASSIGN   6601>>ASSIGN   6604>>ASSIGN
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:54   
HCTX.NAME.L
      6283**DCL      6284--IMP-SIZ
HCTX.UCTX$
      6281**DCL      6579>>IF       6582>>ASSIGN   6603>>IF       6606>>ASSIGN
HELPACCT
      5167**DCL      4885--DCLINIT
HELPNAME
      5166**DCL      4880--DCLINIT
I
      6255**DCL      6469<<DOINDEX  6470>>ASSIGN   6485<<CALLBLT  6487>>IF       6487>>IF       6494>>ASSIGN
      6555<<ASSIGN   6556<<ASSIGN   6557>>ASSIGN   6569>>DOCASE   6590>>DOCASE   6627<<DOINDEX  6628>>DOCASE
      6630>>ASSIGN   6630>>ASSIGN   6632>>ASSIGN   6632>>ASSIGN   6635>>ASSIGN   6635>>ASSIGN   6635>>ASSIGN
      6635>>ASSIGN   6638>>IF       6638>>IF       6639>>ASSIGN   6640>>CALLBLT
M$DS.ACTPOS
      5340**DCL      5340--REDEF
M$DS.ARS#
      5299**DCL      5299--REDEF
M$DS.ATTR#
      5329**DCL      5329--REDEF    5331--REDEF
M$DS.BORROW
      5351**DCL      5351--REDEF    5351--REDEF    5351--REDEF
M$DS.DCBNAME.L
      5370**DCL      5370--IMP-SIZ
M$DS.EOMCHAR#
      5306**DCL      5307--REDEF
M$DS.FLDID
      5343**DCL      5344--REDEF
M$DS.FORM$
      5335**DCL      5335--REDEF
M$DS.FSECT
      5358**DCL      5358--REDEF
M$DS.FSN#
      5325**DCL      5325--REDEF    5325--REDEF    5326--REDEF
M$DS.HEADER$
      5334**DCL      5335--REDEF
M$DS.IXTNSIZE#
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:55   
      5331**DCL      5332--REDEF
M$DS.LASTSTA$
      5315**DCL      5315--REDEF
M$DS.LVL
      5352**DCL      5352--REDEF
M$DS.NAME#.C
      5315**DCL      5316--REDEF
M$DS.NOEOF
      5347**DCL      5347--REDEF
M$DS.NRECS#
      5332**DCL      5332--REDEF
M$DS.NRECX
      5359**DCL      5359--REDEF
M$DS.OHDR
      5348**DCL      5348--REDEF
M$DS.ORG#
      5323**DCL      5324--REDEF
M$DS.PRECNO
      5356**DCL      5356--REDEF
M$DS.RCSZ
      5364**DCL      5364--REDEF
M$DS.RES#
      5317**DCL      5317--REDEF
M$DS.SETX
      5336**DCL      5336--REDEF
M$DS.TAB$
      5335**DCL      5335--REDEF
M$DS.TDA
      5355**DCL      5356--REDEF
M$DS.WSN#
      5317**DCL      5318--REDEF
M$EXIT
        39**DCL-ENT  6460--CALL
M$FMT
      5572**DCL      6558>>ASSIGN
M$FMT.ACTPOS
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:56   
      5613**DCL      5613--REDEF
M$FMT.ARS#
      5572**DCL      5572--REDEF
M$FMT.ATTR#
      5602**DCL      5602--REDEF    5604--REDEF
M$FMT.BORROW
      5624**DCL      5624--REDEF    5624--REDEF    5624--REDEF
M$FMT.DCBNAME.L
      5643**DCL      5643--IMP-SIZ  6558>>ASSIGN
M$FMT.EOMCHAR#
      5579**DCL      5580--REDEF
M$FMT.FLDID
      5616**DCL      5617--REDEF
M$FMT.FORM$
      5608**DCL      5608--REDEF
M$FMT.FSECT
      5631**DCL      5631--REDEF
M$FMT.FSN#
      5598**DCL      5598--REDEF    5598--REDEF    5599--REDEF
M$FMT.HEADER$
      5607**DCL      5608--REDEF
M$FMT.IXTNSIZE#
      5604**DCL      5605--REDEF
M$FMT.LASTSTA$
      5588**DCL      5588--REDEF
M$FMT.LVL
      5625**DCL      5625--REDEF
M$FMT.NAME#.C
      5588**DCL      5589--REDEF
M$FMT.NOEOF
      5620**DCL      5620--REDEF
M$FMT.NRECS#
      5605**DCL      5605--REDEF
M$FMT.NRECX
      5632**DCL      5632--REDEF
M$FMT.OHDR
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:57   
      5621**DCL      5621--REDEF
M$FMT.ORG#
      5596**DCL      5597--REDEF
M$FMT.PRECNO
      5629**DCL      5629--REDEF
M$FMT.RCSZ
      5637**DCL      5637--REDEF
M$FMT.RES#
      5590**DCL      5590--REDEF
M$FMT.SETX
      5609**DCL      5609--REDEF
M$FMT.TAB$
      5608**DCL      5608--REDEF
M$FMT.TDA
      5628**DCL      5629--REDEF
M$FMT.WSN#
      5590**DCL      5591--REDEF
M$FMTSYS
      5646**DCL      6560>>ASSIGN
M$FMTSYS.ACTPOS
      5687**DCL      5687--REDEF
M$FMTSYS.ARS#
      5646**DCL      5646--REDEF
M$FMTSYS.ATTR#
      5676**DCL      5676--REDEF    5678--REDEF
M$FMTSYS.BORROW
      5698**DCL      5698--REDEF    5698--REDEF    5698--REDEF
M$FMTSYS.DCBNAME.L
      5717**DCL      5717--IMP-SIZ  6560>>ASSIGN
M$FMTSYS.EOMCHAR#
      5653**DCL      5654--REDEF
M$FMTSYS.FLDID
      5690**DCL      5691--REDEF
M$FMTSYS.FORM$
      5682**DCL      5682--REDEF
M$FMTSYS.FSECT
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:58   
      5705**DCL      5705--REDEF
M$FMTSYS.FSN#
      5672**DCL      5672--REDEF    5672--REDEF    5673--REDEF
M$FMTSYS.HEADER$
      5681**DCL      5682--REDEF
M$FMTSYS.IXTNSIZE#
      5678**DCL      5679--REDEF
M$FMTSYS.LASTSTA$
      5662**DCL      5662--REDEF
M$FMTSYS.LVL
      5699**DCL      5699--REDEF
M$FMTSYS.NAME#.C
      5662**DCL      5663--REDEF
M$FMTSYS.NOEOF
      5694**DCL      5694--REDEF
M$FMTSYS.NRECS#
      5679**DCL      5679--REDEF
M$FMTSYS.NRECX
      5706**DCL      5706--REDEF
M$FMTSYS.OHDR
      5695**DCL      5695--REDEF
M$FMTSYS.ORG#
      5670**DCL      5671--REDEF
M$FMTSYS.PRECNO
      5703**DCL      5703--REDEF
M$FMTSYS.RCSZ
      5711**DCL      5711--REDEF
M$FMTSYS.RES#
      5664**DCL      5664--REDEF
M$FMTSYS.SETX
      5683**DCL      5683--REDEF
M$FMTSYS.TAB$
      5682**DCL      5682--REDEF
M$FMTSYS.TDA
      5702**DCL      5703--REDEF
M$FMTSYS.WSN#
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:59   
      5664**DCL      5665--REDEF
M$INT
        82**DCL-ENT  6449--CALL
M$LO
      5509**DCL      6498>>ASSIGN
M$READ
        28**DCL-ENT  6559--CALL     6561--CALL
M$REW
        30**DCL-ENT  6457--CALL
M$WAIT
        85**DCL-ENT  6655--CALL
M$WRITE
        28**DCL-ENT  6453--CALL     6492--CALL     6564--CALL     6620--CALL     6653--CALL
M$X364
      5405**DCL      6618>>ASSIGN
M$X364.ACTPOS
      5446**DCL      5446--REDEF
M$X364.ARS#
      5405**DCL      5405--REDEF
M$X364.ATTR#
      5435**DCL      5435--REDEF    5437--REDEF
M$X364.BORROW
      5457**DCL      5457--REDEF    5457--REDEF    5457--REDEF
M$X364.DCBNAME.L
      5476**DCL      5476--IMP-SIZ  6618>>ASSIGN
M$X364.EOMCHAR#
      5412**DCL      5413--REDEF
M$X364.FLDID
      5449**DCL      5450--REDEF
M$X364.FORM$
      5441**DCL      5441--REDEF
M$X364.FSECT
      5464**DCL      5464--REDEF
M$X364.FSN#
      5431**DCL      5431--REDEF    5431--REDEF    5432--REDEF
M$X364.HEADER$
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:60   
      5440**DCL      5441--REDEF
M$X364.IXTNSIZE#
      5437**DCL      5438--REDEF
M$X364.LASTSTA$
      5421**DCL      5421--REDEF
M$X364.LVL
      5458**DCL      5458--REDEF
M$X364.NAME#.C
      5421**DCL      5422--REDEF
M$X364.NOEOF
      5453**DCL      5453--REDEF
M$X364.NRECS#
      5438**DCL      5438--REDEF
M$X364.NRECX
      5465**DCL      5465--REDEF
M$X364.OHDR
      5454**DCL      5454--REDEF
M$X364.ORG#
      5429**DCL      5430--REDEF
M$X364.PRECNO
      5462**DCL      5462--REDEF
M$X364.RCSZ
      5470**DCL      5470--REDEF
M$X364.RES#
      5423**DCL      5423--REDEF
M$X364.SETX
      5442**DCL      5442--REDEF
M$X364.TAB$
      5441**DCL      5441--REDEF
M$X364.TDA
      5461**DCL      5462--REDEF
M$X364.WSN#
      5423**DCL      5424--REDEF
M$YC
        41**DCL-ENT  6475--CALL
NXTCMD
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:61   
      6452**LABEL    6501--GOTO
OLDCOUNT
      6254**DCL      6626<<ASSIGN   6634>>IF       6635>>ASSIGN   6638>>IF
OUT$BLK.CODE
      5182**DCL      6465>>DOCASE   6471>>IF       6487>>IF       6487>>IF       6494>>ASSIGN   6556>>ASSIGN
OUT$BLK.SUBLK$
      5207**DCL      6472>>ASSIGN   6472>>ASSIGN   6473>>ASSIGN   6473>>ASSIGN
OUT$SYM.COUNT
      5288**DCL      5291--IMP-SIZ  6472>>ASSIGN   6473>>ASSIGN   6485>>CALLBLT
OUT$SYM.TEXT
      5291**DCL      6472>>ASSIGN   6473>>ASSIGN   6485>>CALLBLT
OUT$TOP.NSUBLKS
      5231**DCL      6469>>DOINDEX  6556>>IF
OUT$TOP.SUBLK$
      5252**DCL      6464>>ASSIGN   6470>>ASSIGN   6485>>CALLBLT  6485>>CALLBLT  6486>>ASSIGN   6556>>ASSIGN
OUTBUF
      5723**DCL      5496--DCLINIT  5497--DCLINIT  5724--REDEF    6451<<CALLBLT  6490<<ASSIGN   6530--DCLINIT
      6531--DCLINIT  6562<<ASSIGN   6584<<ASSIGN   6588--CALL     6589>>IF       6589<<ASSIGN   6621--ASSIGN
      6639<<ASSIGN   6640<<CALLBLT  6641<<CALLBLT  6641>>CALLBLT  6646<<ASSIGN   6648<<ASSIGN   6649<<ASSIGN
OUTX
      5722**DCL      6625<<ASSIGN   6639>>ASSIGN   6640>>CALLBLT  6641>>CALLBLT  6641>>CALLBLT  6643<<ASSIGN
      6643>>ASSIGN   6646>>ASSIGN   6648>>ASSIGN   6649>>ASSIGN   6650<<ASSIGN   6650>>ASSIGN   6652>>ASSIGN
      6653>>IF
P$
      6252**DCL      5174--IMP-PTR  6442--IMP-PTR  6464<<ASSIGN   6465>>DOCASE   6470<<ASSIGN   6471>>IF
      6472>>ASSIGN   6472>>ASSIGN   6473>>ASSIGN   6473>>ASSIGN   6486<<ASSIGN   6487>>IF       6487>>IF
      6494>>ASSIGN   6571<<ASSIGN   6573<<ASSIGN   6575<<ASSIGN   6577<<ASSIGN   6578>>DOWHILE  6579>>IF
      6580<<ASSIGN   6580>>ASSIGN   6582>>IF       6582<<ASSIGN   6582>>ASSIGN   6587>>IF       6588--CALL
      6588>>CALL     6594<<ASSIGN   6594>>ASSIGN   6596<<ASSIGN   6596>>ASSIGN   6598>>IF       6599<<ASSIGN
      6599>>ASSIGN   6601<<ASSIGN   6601>>ASSIGN   6602>>DOWHILE  6603>>IF       6604<<ASSIGN   6604>>ASSIGN
      6606>>IF       6606<<ASSIGN   6606>>ASSIGN
PCTX
      6442**DCL      6588--CALL
POS
      6102**DCL      6639>>ASSIGN   6648>>ASSIGN
PROMPT
PL6.E3A0      #001=FUU$NFSU File=FUU$NFSU.:FUA2TSI                               FRI 11/21/97 11:37 Page:62   
      4751**DCL      4634--DCLINIT
STATS
      6617**PROC     6497--CALL
STATSMSG
      6024**DCL      6619--ASSIGN
STATSMSG.T
      6025**DCL      6646>>ASSIGN
TYPE
      6091**DCL      6628>>DOCASE   6635>>ASSIGN
UCTX.FFLG#
      6434**DCL      6434--REDEF
UCTX.FILEPOS
      6438**DCL      6439--REDEF
UCTX.FILEPOS.FOFFSET
      6438**DCL      6439--REDEF
UCTX.HCTX$
      6408**DCL      6601>>ASSIGN
UCTX.HLNK$
      6408**DCL      6598>>IF       6599>>ASSIGN
X$PRE_PROCESS
      4411**DCL-ENT  4871--DCLINIT
X$WRITE
      5898**DCL-ENT  6588--CALL
XTX$ADAPT
      4770**DCL-ENT  5086--DCLINIT
XUG$GETCMD
      4387**DCL-ENT  6459--CALL
XUG$INIT
      4391**DCL-ENT  6450--CALL
XUG_GETCMD
      4425**DCL      6450<>CALL     6459<>CALL
XUG_GETCMD.OUT$
      4430**DCL      4436--REDEF    5219--IMP-PTR  6464>>ASSIGN   6469>>DOINDEX  6470>>ASSIGN   6485>>CALLBLT
      6485>>CALLBLT  6486>>ASSIGN   6556>>IF       6556>>ASSIGN
XUG_INIT
      4775**DCL      6450<>CALL

PL6.E3A0      #002=FUU$INT File=FUU$NFSU.:FUA2TSI                                FRI 11/21/97 11:37 Page:63   
      382        1        /*T***********************************************************/
      383        2        /*T*                                                         */
      384        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      385        4        /*T*                                                         */
      386        5        /*T***********************************************************/
      387        6        FUU$INT: PROC ASYNC;
      388        7        %INCLUDE CP_6;
      389       88        %FPT_TRMPRG( STCLASS=CONSTANT, RESETBREAK=YES);
      390      117    1   DCL BREAK BIT(1) SYMREF;
      391      118
      392      119    1      CALL M$TRMPRG( FPT_TRMPRG);
      393      120    1      BREAK = '1'B;
      394      121    1   END FUU$INT;

PL6.E3A0      #002=FUU$INT File=FUU$NFSU.:FUA2TSI                                FRI 11/21/97 11:37 Page:64   
--  Include file information  --

   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FUU$INT.

   Procedure FUU$INT requires 8 words for executable code.
   Procedure FUU$INT requires 4 words of local(AUTO) storage.

    No errors detected in file FUU$NFSU.:FUA2TSI    .

PL6.E3A0      #002=FUU$INT File=FUU$NFSU.:FUA2TSI                                FRI 11/21/97 11:37 Page:65   

 Object Unit name= FUU$INT                                    File name= FUU$NFSU.:FUA2TOU
 UTS= NOV 21 '97 11:37:43.28 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      8     10  FUU$INT
    2   Proc  even  none     8     10  FUU$INT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes     Async       0  FUU$INT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AAUTO
                       nStd      0 X66_AARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  BREAK
PL6.E3A0      #002=FUU$INT File=FUU$NFSU.:FUA2TSI                                FRI 11/21/97 11:37 Page:66   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=FUU$INT File=FUU$NFSU.:FUA2TSI                                FRI 11/21/97 11:37 Page:67   


      382        1        /*T***********************************************************/
      383        2        /*T*                                                         */
      384        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      385        4        /*T*                                                         */
      386        5        /*T***********************************************************/
      387        6        FUU$INT: PROC ASYNC;

      6  2 000000   000000 700200 xent  FUU$INT      TSX0  ! X66_AAUTO
         2 000001   000004 000000                    ZERO    4,0

      388        7        %INCLUDE CP_6;
      389       88        %FPT_TRMPRG( STCLASS=CONSTANT, RESETBREAK=YES);
      390      117    1   DCL BREAK BIT(1) SYMREF;
      391      118
      392      119    1      CALL M$TRMPRG( FPT_TRMPRG);

    119  2 000002   000000 630400 1                  EPPR0   FPT_TRMPRG
         2 000003   160004 713400                    CLIMB   57348
         2 000004   400400 401760                    pmme    nvectors=2

      393      120    1      BREAK = '1'B;

    120  2 000005   400000 236003                    LDQ     -131072,DU
         2 000006   000000 756000 xsym               STQ     BREAK

      394      121    1   END FUU$INT;

    121  2 000007   000000 702200 xent               TSX2  ! X66_AARET

PL6.E3A0      #002=FUU$INT File=FUU$NFSU.:FUA2TSI                                FRI 11/21/97 11:37 Page:68   
--  Include file information  --

   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FUU$INT.
PL6.E3A0      #002=FUU$INT File=FUU$NFSU.:FUA2TSI                                FRI 11/21/97 11:37 Page:69   

 **** Variables and constants ****

  ****  Section 001 RoData FUU$INT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(288)   r     1 FPT_TRMPRG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 BREAK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$UC


   Procedure FUU$INT requires 8 words for executable code.
   Procedure FUU$INT requires 4 words of local(AUTO) storage.

    No errors detected in file FUU$NFSU.:FUA2TSI    .
PL6.E3A0      #002=FUU$INT File=FUU$NFSU.:FUA2TSI                                FRI 11/21/97 11:37 Page:70   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FUU$INT File=FUU$NFSU.:FUA2TSI                                FRI 11/21/97 11:37 Page:71   
          MINI XREF LISTING

BREAK
       117**DCL       120<<ASSIGN
FPT_TRMPRG
       104**DCL       119<>CALL
FPT_TRMPRG.V
       111**DCL       106--DCLINIT
FPT_TRMPRG.V.CTLFLG.RSTBRK#
       112**DCL       113--REDEF
M$TRMPRG
        41**DCL-ENT   119--CALL
