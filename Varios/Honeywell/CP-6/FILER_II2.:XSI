/***   DO ALL INITIALIZATION   ***/
DCL   UT_INIT_ALL            ENTRY;
 
/***   LOOK UP THE CURRENT NAME   ***/
DCL   UT_LOOKUP              ENTRY(3);
 
/***   RECORD POSSIBLE ERROR CONDITIONS   ***/
DCL   UT_PSBL_ERR            ENTRY(1);
 
/***   DEALLOCATE A DESCRIPTOR AND ASSOCIATED BLOCK   ***/
DCL   UT_DEALLOC_BUF         ENTRY(1);
 
/***   INCREMENT THE CURRENT CHARACTER INDEX   ***/
DCL   UT_INC_CHARX           ENTRY;
 
/***   IGNORE BLANKS STARTING WITH THE CURRENT CHARACTER   ***/
DCL   UT_IGNORE_BLANKS       ENTRY;
 
/***   CONVERT A BLOCKED VALUE TO AN SBIN WORD   ***/
DCL   UT_ONE_WORD_VALUE      ENTRY(3);
 
/***   MOVE BITS IN A BLOCK TO THE LEFT   ***/
DCL   UT_MOVE_BITS_RWD       ENTRY(3);
 
/***   MOVE BITS IN A BLOCK TO THE RIGHT AND ZERO FILL   ***/
DCL   UT_MOVE_BITS_FWD       ENTRY(3);
 
/***   IDENTIFY THE BUFFER SPECIFIED BY THE CURRENT STRING   ***/
DCL   UT_IDENTIFY_BUFFER     ENTRY(2);
 
/***   ALLOCATE A BLOCK OF BLOCK SPACE   ***/
DCL   AM_ALLOC_BLK           ENTRY(3);
 
/***   ALLOCATE A NEW BLOCK OF BLOCK SPACE   ***/
DCL   AM_ALLOC_NEW_BLK       ENTRY(2);
 
/***   SPLIT OFF UNUSED AREA FROM A USED BLOCK   ***/
DCL   AM_SPLIT_BLK           ENTRY(2);
 
/***   GET DYNAMIC PAGES   ***/
DCL   AM_GET_PAGES           ENTRY(1);
 
/***   FREE DYNAMIC PAGES   ***/
DCL   AM_FREE_PAGES          ENTRY(1);
 
/***   DEALLOCATE A BLOCK   ***/
DCL   AM_DEALLOC_BLK         ENTRY(1);
 
/***   CONTRACT A BLOCK   ***/
DCL   AM_CONTRACT_BLK        ENTRY(2);
 
/***   EXPAND A BLOCK   ***/
DCL   AM_EXPAND_BLK          ENTRY(2);
 
/***   ROTATE A REGION OF BLOCK SPACE   ***/
DCL   AM_ROTATE_BLKS         ENTRY(3);
 
/***   MOVE A BLOCK   ***/
DCL   AM_MOVE_BLK            ENTRY(3);
 
/***   COMPACT THE BLOCK SPACE   ***/
DCL   AM_COMPACT             ENTRY(1);
 
/***   INDICATE THAT BLOCKS HAVE BEEN MOVED   ***/
DCL   UT_INDICATE_COMPACTION ENTRY(2);
 
/***   COMPRESS A REGION OF BLOCK SPACE TOWARD THE FRONT   ***/
DCL   AM_COMPRESS_FWD        ENTRY(3);
 
/***   COMPRESS A REGION OF BLOCK SPACE TOWARD THE REAR   ***/
DCL   AM_COMPRESS_RWD        ENTRY(3);
 
/***   CREATE NEW VALUE DESCRIPTORS   ***/
DCL   EV_NEW_VALUE_DESCS     ENTRY(2);
 
/***   GET A VALUE DESCRIPTOR   ***/
DCL   EV_GET_VALUE_DESC      ENTRY(1);
 
/***   CONVERT DECIMAL STRING TO 36 BIT VALUE   ***/
DCL   EV_DECIMAL             ENTRY;
 
/***   CONVERT BASED STRING TO N BIT VALUE   ***/
DCL   EV_BASED               ENTRY(2);
 
/***   CONVERT TEXT STRING TO N BIT VALUE   ***/
DCL   EV_TEXT                ENTRY;
 
/***   CONVERT TEXTC STRING TO N+1 BIT VALUE   ***/
DCL   EV_TEXTC               ENTRY;
 
/***   CONVERT Z_REGISTER STRING TO 36 BIT VALUE   ***/
DCL   EV_Z_REG               ENTRY;
 
/***   INCREASE WIDTH OF CURRENT VALUE   ***/
DCL   EV_INCREASE_WIDTH      ENTRY(1);
 
/***   ADD BITS TO THE CURRENT VALUE   ***/
DCL   EV_ADD_VAL_BITS        ENTRY(2);
 
/***   CONVERT OFFSET SPECIFICATION TO BIT OFFSET   ***/
DCL   EV_GET_OFFSET          ENTRY(5);
 
/***   CONVERT RANGE SPECIFICATION TO BIT OFFSET AND BIT SIZE   ***/
DCL   EV_GET_RANGE           ENTRY(2);
 
/***   GET VALUE   ***/
DCL   EV_GET_VALUE           ENTRY(2);
 
/***   CONVERT BUFFER VALUE STRING TO VALUE   ***/
DCL   EV_BUF                 ENTRY;
 
/***   CONVERT FPT RANGE SPECIFICATION TO BIT OFFSET AND BIT SIZE   ***/
DCL   EV_FPT_RANGE           ENTRY(2);
 
/***   INTERPRET VALUE MODIFIER AND MODIFY VALUE WIDTH   ***/
DCL   EV_MODIFY_VAL_WIDTH    ENTRY(1);
 
/***   EVALUATE VALUE   ***/
DCL   EV_EVALUATE            ENTRY;
 
/***   OUTPUT THE PROMPT CHARACTER   ***/
DCL   UT_PROMPT              ENTRY(1);
 
/***   GET THE NEXT COMMAND   ***/
DCL   UT_GET_CMND            ENTRY(3);
 
/***   READ THE NEXT COMMAND SEGMENT   ***/
DCL   UT_READ_CMND           ENTRY(4);
 
/***   LIST A BUFFER   ***/
DCL   UT_WRITE_BUF           ENTRY(2);
 
 
/***   REPORT A VALUE FAULT   ***/
DCL   UT_REPORT_VAL_FAULT    ENTRY;
 
/***   REPORT THE POSSIBLE ERROR CONDITIONS   ***/
DCL   UT_REPORT_PSBL_ERR     ENTRY;
 
/***   OUTPUT A CHARACTER (STORE IT IN THE OUTPUT BUFFER)   ***/
DCL   UT_OUTPUT_CHAR         ENTRY(1);
 
/***   OUTPUT A STRING OF CHARACTERS   ***/
DCL   UT_OUTPUT_CHARS        ENTRY(2);
/***   MAKE THE NEXT NAME IN THE STRING THE CURRENT NAME   **/
DCL   UT_GET_NAME            ENTRY;
 
/***   DISPLAY A VALUE IN SPECIFIED FORMAT   ***/
DCL   UT_DISPLAY        ENTRY(3);
 
 
/***   ADJUST A BUFFER'S SIZE   **/
DCL   UT_NEW_SIZE       ENTRY(2);
 
/***   FLUSH THE OUTPUT BUFFER   ***/
DCL   UT_FLUSH_BUF           ENTRY;
 
/***   READ FROM COMMAND INPUT   ***/
DCL   UT_READ_BUF            ENTRY(4);
 
/***   DISPLAY A SIZE IN FILER FORMAT   ***/
DCL   UT_PRINT_SIZE               ENTRY(1);
 
/***   GET A SBIN WORD VALUE   ***/
DCL   UT_SBIN_VALUE               ENTRY(1);
 
/***   INCREMENT THE CHARACTER INDEX AND IGNORE BLANKS   ***/
DCL   UT_INC_IGNORE               ENTRY;
 
/***   SHOW LOCATION OF ERROR   ***/
DCL   UT_SHOW_ERR            ENTRY(5);
 
/***  CONVERT BUFFER REFERENCE TO SIZE   ***/
DCL   EV_BUFFER_SIZE              ENTRY;
 
/***   EDIT FUNCTION   ***/
DCL   XQC_EDIT          ENTRY;
 
/***   CHECK IF ANY JUNK FOLLOWS LEGAL COMMAND   ***/
DCL   UT_JUNK_CHK            ENTRY;
 
/***   EVALUATE SIZE SPECIFICATION   ***/
DCL   EV_EVAL_SIZE           ENTRY(2);
 
/***   REPORT BUFFER USE   ***/
DCL   XQC_BUF_STATS          ENTRY;
 
/***   EXECUTE THE READ FILE COMMAND   ***/
DCL   XQC_READ_FILE               ENTRY;
 
/***   EXECUTE SPECIAL COMMANDS   ***/
DCL   XQC_SPECIAL_COMMANDS        ENTRY;
 
/***   INTERRUPT HANDLER   ***/
DCL   UT_INT_HANDLER         ENTRY     ASYNC;
