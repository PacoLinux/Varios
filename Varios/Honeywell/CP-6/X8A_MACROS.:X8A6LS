

09:07 AUG 09 '97 X8A_MACROS.:X8A6SI                                        1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6      /* X8A_MACROS:  Library macro include file                          */
    7
    8      /*      include the library/compiler common macro file              */
    9
   10      %INCLUDE X8A_COM_MACS;
   11
   12      %EJECT;

09:07 AUG 09 '97 X8A_MACROS.:X8A6SI                                        2    
   13      %MACRO DCL_NUM_DESC_LIB (@NAME=NUM_DESC);
   14
   15          DCL 1 @NAME               ALIGNED,
   16               2 DIGITS_LEFT        SBIN WORD,
   17               2 LEFT_POS           SBIN WORD,
   18               2 DIGITS_RIGHT       SBIN WORD,
   19               2 RIGHT_POS          SBIN WORD,
   20               2 DIGITS_EXP         SBIN WORD,
   21               2 EXP_POS            SBIN WORD,
   22               2 MANTISSA_SIGN      CHAR(1),
   23               2 EXP_SIGN           CHAR(1);
   24      %MEND;
   25      %EJECT;

09:07 AUG 09 '97 X8A_MACROS.:X8A6SI                                        3    
   26      %MACRO SCAN_SEARCH(TABLE=,SYMBOL=SYMBOL);
   27         CALL SEARCH(COL,
   28                     CLASS,
   29                     TABLE,
   30                     SUBSTR(SYMBOL,0,80),
   31                     LAST_COL);
   32      %MEND;
   33      %EJECT;

09:07 AUG 09 '97 X8A_MACROS.:X8A6SI                                        4    
   34      %MACRO ADD_OVP(@OVRCHR=);
   35        DO SELECT (@OVRCHR);
   36
   37           SELECT ('1','2','3','4','5','6','7','8','9');
   38             IF OVP_SIGN = '-' THEN
   39               @OVRCHR=BINASC(ASCBIN(@OVRCHR)+25);
   40             ELSE
   41               @OVRCHR=BINASC(ASCBIN(@OVRCHR)+16);
   42
   43           SELECT ('0');
   44             IF OVP_SIGN = '-' THEN
   45               @OVRCHR = '}';
   46             ELSE
   47               @OVRCHR = '{';
   48
   49           SELECT (ELSE);
   50             CALL X8ER$ERROR (%UNEXPECTED_CASE,'ADD_OVP',7);
   51        END;
   52      %MEND;
   53      %EJECT;

09:07 AUG 09 '97 X8A_MACROS.:X8A6SI                                        5    
   54          %MACRO CHECK_EOT;
   55            DO;
   56              IF COL < LENGTH THEN
   57                LAST_COL = COL;
   58              ELSE
   59                RETURN;
   60            END;
   61          %MEND;
   62
   63
   64          %MACRO ADV_COL;
   65            DO;
   66              COL = COL + 1;
   67              %CHECK_EOT;
   68              %SCAN_SEARCH(TABLE=ASCII_SEARCH_TABLE);
   69            END;
   70          %MEND;
   71
   72
   73          %MACRO SKIP_LEADING_SPACES;
   74            DO;
   75              %SCAN_SEARCH( TABLE = ASCII_SEARCH_TABLE );
   76              DO WHILE  CLASS = %SPACE;
   77                %ADV_COL;
   78              END;
   79            END;
   80          %MEND;
   81      %EJECT;

09:07 AUG 09 '97 X8A_MACROS.:X8A6SI                                        6    
   82      %MACRO  REMOVE_OVP(@OVRCHR=);
   83                           DO SELECT( @OVRCHR );
   84
   85      /*V*                 Remove_Overpunched_Sign
   86           The overpunched sign is separated into its components.  For
   87           characters, the overpunched character is converted to binary
   88           and the appropriate offset is subtracted.  For special symbols,
   89           (which represent zero plus an overpunched sign) the appropriate
   90           sign is selected.  The following table shows the conversion rules:
   91                   A thru I and  a thru i                 = +1 thru +9
   92                   J thru R and  j thru r                 = -1 thru -9
   93                   Open brace '{', Plus '+', Blank ' '    = +0
   94                   Close brace '}', Minus '-', Carrot '^' = -0
   95      */
   96                           SELECT('A','B','C','D','E','F','G','H','I');
   97                             OVPNUM=BINASC(ASCBIN(@OVRCHR)-16);
   98                             OVP_SIGN ='+';
   99
  100                           SELECT('a','b','c','d','e','f','g','h','i');
  101                             OVPNUM = BINASC(ASCBIN(@OVRCHR)-48);
  102                             OVP_SIGN = '+';
  103
  104                           SELECT('J','K','L','M','N','O','P','Q','R');
  105                           /*  NEGATIVE NUMBER   */
  106                             OVPNUM=BINASC(ASCBIN(@OVRCHR)-25);
  107                             OVP_SIGN ='-';
  108
  109                           SELECT('j','k','l','m','n','o','p','q','r');
  110                             OVPNUM = BINASC(ASCBIN(@OVRCHR)-57);
  111                             OVP_SIGN = '-';
  112
  113                           SELECT ('{','+',' ');
  114                             OVPNUM = '0';
  115                             OVP_SIGN ='+';
  116
  117                           SELECT ('}','-','^');
  118                             OVPNUM = '0';
09:07 AUG 09 '97 X8A_MACROS.:X8A6SI                                        7    
  119                             OVP_SIGN ='-';
  120
  121                           SELECT(ELSE);
  122                             OVPNUM=' ';
  123                             OVP_SIGN = ' ';
  124
  125      /*V*
  126                                   ILLEGAL_CHARS
  127           An illegal character could be a number or a character not used, in which
  128           case it is just passed by and left in the arg.
  129
  130      */
  131                           END ; /* END SELECT  */
  132      %MEND;
  133      %EJECT;

09:07 AUG 09 '97 X8A_MACROS.:X8A6SI                                        8    
  134      %MACRO SAVE_POSITION ( @N# = -1 );
  135         IF  FAB.ACS#  = %FAB_DYNAMIC_ACCESS
  136         AND M$XX.FUN# = %UPDATE THEN
  137           IF LIBCOM.COBOL_74 THEN
  138             CALL X9WS$REPOS (FAB, NO#, 0);
  139           ELSE
  140             CALL X9WS$REPOS( FAB, NO#, @N# );
  141      %MEND;
  142
  143
  144
  145      %MACRO REPOSITION( @N# = 1 );
  146         IF  FAB.ACS#  = %FAB_DYNAMIC_ACCESS
  147         AND M$XX.FUN# = %UPDATE THEN
  148           IF LIBCOM.COBOL_74 THEN
  149             CALL X9WS$REPOS (FAB, YES#, 0);
  150           ELSE
  151             CALL X9WS$REPOS (FAB, YES#, @N#);
  152      %MEND;
  153      %EJECT;


