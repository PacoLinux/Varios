VERSION E05

PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:1    
        1        1        /*M* JGP$PMME Pmme handler for the M$GJOB pmme */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=2,THI=2,CSI=2,ECI=2,STI=2,IND=2,ENI=2 */
        8        8        /**/
        9        9        /**/
       10       10        JGP$PMME: PROC(WSR);
       11       11        /*D* NAME:        JGP$PMME
       12       12             PURPOSE:     To handle the M$GJOB pmme
       13       13             CALL:        CALL JGP$PMME(WSR);
       14       14             INPUT:       WSR (WSR of caller)
       15       15                          B$PS0$->FPT$GJOB_V.TPU (MING Ghost or MON only)
       16       16                          B$PS0$->FPT$GJOB_V.SLEAZE (MING Ghost or MON only)
       17       17                          B$PS0$->FPT$GJOB_V.PRIINC
       18       18                          B$PS1$->VLP$ACCT
       19       19                          B$PS2$->VLP$NAME
       20       20                          B$PS3$->VLP$PASS
       21       21                          B$PS4$->STRING_FOR_CCBUF
       22       22             OUTPUT:      B$PS5$->VLR$GJOB_V.SYSID
       23       23             DESCRIPTION: JGP$PMME formats a user logon request message from
       24       24                          the information passed via the parameter stack. This
       25       25                          message is then written to SLUG so that SLUG may
       26       26                          attempt to log this user on as a GHOST or TPU. If all
       27       27                          is successful, the sysid of the started user is returned
       28       28                          in B$PS5$->VLR$GJOB_V.SYSID. If any errors occur,
       29       29                          B$JIT.ERR will reflect that fact and sysid will not be
       30       30                          returned.
       31       31        */
       32       32    1   DCL WSR SBIN;
       33       33        %INCLUDE B$JIT_C;
       34      347        %INCLUDE B_STRINGS_C;
       35      476        %INCLUDE CP_6_SUBS;
       36     1016        %INCLUDE F$CP6V_C;
       37     1242        %INCLUDE F_FPTCODE_C;
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:2    
       38     1278        %INCLUDE JG_EVID_C;
       39     1503        %INCLUDE JC_MACRO_C;
       40     1617        %INCLUDE JG_ERRORS_C;
       41     1631        %INCLUDE JG_GHOSTS_C;
       42     1721        %INCLUDE JG_MACRO_C;
       43     1737        %INCLUDE KC$CP6V_C;
       44     1857        %INCLUDE UD_ERRORS_C;
       45     1899        %INCLUDE UD_SEV_C;
       46     1913        %INCLUDE UM$CP6V_C;
       47     2100        %B$JIT0;
       48     2189        %U$JIT1X;
       49     2192        %M$JIT2X;
       50     2195        %F$JIT3;
       51     2200        %A$JIT6X;
       52     2203        %FPT$GJOB_V(BASED="BASED ALIGNED");
       53     2206        %VLP$ACCT_V (FPTN=VLP$ACCT);
       54     2209        %VLP$PASS_V (FPTN=VLP$PASS);
       55     2212        %VLR$GJOB_V;
       56     2215    1   DCL 1 TEXT$C BASED UNAL,
       57     2216    1         2 CNT UBIN BYTE UNAL,
       58     2217    1         2 TXT CHAR(TEXT$C.CNT);
       59     2218    1   DCL CHAR$CCSZ CHAR(CCSZ) BASED UNAL;
       60     2219    1   DCL PASS CHAR(8) ALIGNED;
       61     2220    1   DCL CCSZ UBIN WORD;
       62     2221    1   DCL TEMP SBIN;
       63     2222    1   DCL GMSGLEN UBIN;
       64     2223    1   DCL RSLTSLEN UBIN;
       65     2224        %JC_CITE (FPTN=JG_GMSG,TYP=UGJOB,STCLASS=AUTO);
       66     2274        %JG_RSLTS (NAME=JG_RSLTS,STCLASS=AUTO);
       67     2280    1   DCL 1 RSERR CONSTANT ALIGNED,
       68     2281    1         2 MID BIT(18) UNAL INIT('120720'O),
       69     2282    1         2 ERR UBIN(15) UNAL INIT(0),
       70     2283    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       71     2284    1   DCL 1 BDGNM CONSTANT ALIGNED,
       72     2285    1         2 FCG BIT(18) UNAL INIT('120720'O),
       73     2286    1         2 ERR UBIN(15) UNAL INIT(%E$BGHNM),
       74     2287    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:3    
       75     2288    1   DCL 1 CCGT256 CONSTANT ALIGNED,
       76     2289    1         2 FCG BIT(18) UNAL INIT('120720'O),
       77     2290    1         2 ERR UBIN(15) UNAL INIT(%E$CCGT256),
       78     2291    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       79     2292    1   DCL J_SLUG CHAR(8) SYMREF READONLY;
       80     2293    1   DCL S_CUN SBIN SYMREF;
       81     2294    1   DCL B$JIT$ PTR SYMREF;
       82     2295    1   DCL B$PS0$ PTR SYMREF;
       83     2296    1   DCL B$PS1$ PTR SYMREF;
       84     2297    1   DCL B$PS2$ PTR SYMREF;
       85     2298    1   DCL B$PS3$ PTR SYMREF;
       86     2299    1   DCL B$PS4$ PTR SYMREF;
       87     2300    1   DCL B$PS5$ PTR SYMREF;
       88     2301    1   DCL FMM$SCRAMBLE ENTRY(1);
       89     2302    1   DCL HFF$DSIZ ENTRY(2) ALTRET;
       90     2303    1   DCL HFF$NILERASE ENTRY(1) ALTRET;
       91     2304    1   DCL KUR$RESUS ENTRY(5);
       92     2305        %EJECT;
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:4    
       93     2306    1           JG_GMSG = '0'B;
       94     2307    1           JG_GMSG.CODE=JCEV_UGJOB#;
       95     2308    1           IF S_CUN<=JG_MING# OR WSR=%MONWSR
       96     2309    1             OR (B$JIT.ACCN=':SYS' AND B$JIT.UNAME='RCVR2')
       97     2310                                      /* Gee, this is sleazy. Ought to fix it someday */
       98     2311    2             THEN DO;                      /* Honor the SLEAZE and PRIINC vals   */
       99     2312    2               JG_GMSG.SLEAZE = B$PS0$->FPT$GJOB_V.SLEAZE;
      100     2313    2               JG_GMSG.PRIINC = B$PS0$->FPT$GJOB_V.PRIINC;
      101     2314    2               END;
      102     2315    1           JG_GMSG.TP = B$PS0$->FPT$GJOB_V.TPU;
      103     2316    1           IF JG_GMSG.TP
      104     2317    1             THEN JG_GMSG.SSID = 3;        /* TP special originator's sysid      */
      105     2318    1             ELSE IF WSR=%MONWSR OR JG_GMSG.SLEAZE
      106     2319    1                 THEN JG_GMSG.SSID = 1;    /* System ghost special originator's  */
      107     2320                                                /* sysid                              */
      108     2321    1                 ELSE JG_GMSG.SSID = B$JIT.SYSID;
      109     2322    1           CALL HFF$NILERASE(1) ALTRET(NOACCT);
      110     2323    1           JG_GMSG.ACCT = B$PS1$->VLP$ACCT.ACCT;
      111     2324    2           DO WHILE('0'B);
      112     2325    2   NOACCT:   JG_GMSG.ACCT = B$JIT.ACCN;
      113     2326    2             END;
      114     2327    1           CALL HFF$NILERASE(2) ALTRET(NOUNAME);
      115     2328    1           JG_GMSG.UNAME=B$PS2$->TEXT$C;
      116     2329    1           IF JG_GMSG.UNAME.CNT=0 OR JG_GMSG.UNAME.CNT>12
      117     2330    2             THEN DO;
      118     2331    2               B$JIT.ERR=BDGNM;
      119     2332        /*E*  ERROR:         JGP-E$BGHNM-E
      120     2333               MESSAGE: Illegal user name
      121     2334              MESSAGE1: User names must be > 0 and <= 12 bytes in length
      122     2335              DESCRIPTION:   His name is too big.
      123     2336        */
      124     2337    2               RETURN;
      125     2338    2               END;
      126     2339    2           DO WHILE('0'B);
      127     2340    2   NOUNAME:  JG_GMSG.UNAME.TXT = B$JIT.UNAME;
      128     2341    2             CALL INDEX(TEMP,' ',JG_GMSG.UNAME.TXT);
      129     2342    2             JG_GMSG.UNAME.CNT = TEMP;
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:5    
      130     2343    2             END;
      131     2344    1           CALL HFF$NILERASE(3) ALTRET(NOPASS);
      132     2345    1           JG_GMSG.PASS = B$PS3$->VLP$PASS.PASS;
      133     2346    2           DO WHILE('0'B);
      134     2347    2   NOPASS:   IF JG_GMSG.ACCT=B$JIT.ACCN
      135     2348    2               AND ADDR(JG_GMSG.UNAME)->TEXT$C.TXT=B$JIT.UNAME
      136     2349    2               THEN JG_GMSG.NOPASSCK = '1'B; /* No need to check password since  */
      137     2350                                                /* this user is starting himself      */
      138     2351    2               ELSE JG_GMSG.PASS = ' ';
      139     2352    2             END;
      140     2353    1           IF JG_GMSG.ACCT = B$JIT.ACCN AND JG_GMSG.TP
      141     2354    1             THEN JG_GMSG.NOPASSCK = '1'B;
      142     2355                                           /* Don't check passwords when starting     */
      143     2356                                           /* TP from the same acct; uname may be     */
      144     2357                                                /* different                          */
      145     2358    1           PASS = JG_GMSG.PASS;
      146     2359    1           CALL FMM$SCRAMBLE(PASS);
      147     2360    1           JG_GMSG.PASS = PASS;
      148     2361    1           CALL HFF$DSIZ(4,CCSZ);
      149     2362    1           IF CCSZ>0
      150     2363    2             THEN DO;
      151     2364    2               IF CCSZ>256
      152     2365    3                 THEN DO;
      153     2366    3                   B$JIT.ERR=CCGT256;
      154     2367        /*E*  ERROR:         JGP-E$CCGT256-E
      155     2368              MESSAGE: M$GJOB CCBUF string exceeds 256 bytes
      156     2369              DESCRIPTION:  Can't pass a CCBUF string longer than 256 bytes
      157     2370                            since it won't fit into B$JIT.CCBUF
      158     2371        */
      159     2372    3                   RETURN;
      160     2373    3                   END;
      161     2374    2               JG_GMSG.CCBUF.TXT=B$PS4$->CHAR$CCSZ;
      162     2375    2               JG_GMSG.CCBUF.CNT = CCSZ;
      163     2376    2               END;
      164     2377    1           GMSGLEN = CCSZ+LENGTHC(JG_GMSG)-LENGTHC(JG_GMSG.CCBUF.TXT);
      165     2378    1           RSLTSLEN = LENGTHC(JG_RSLTS);
      166     2379    1           CALL KUR$RESUS (JG_GMSG,GMSGLEN,J_SLUG,JG_RSLTS,RSLTSLEN);
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:6    
      167     2380    1           B$JIT.ERR=RSERR;
      168     2381    1           B$JIT.ERR.CODE = JG_RSLTS.ERR;
      169     2382        /*E*  ERROR:         JGP-E$NGHMEM-E
      170     2383              MESSAGE: No memory available to start user
      171     2384              DESCRIPTION:   SLUG could not get memory to make the initial user
      172     2385                             image.
      173     2386        */
      174     2387        /*E*  ERROR:         JGP-E$NGHUSR-E
      175     2388               MESSAGE: No user slots available to start user
      176     2389              MESSAGE1: Either the maximum users on the system or the
      177     2390                        maximum users of the requested mode on the system
      178     2391                        would be exceeded by starting your user or there are
      179     2392                        no sysids available.
      180     2393              DESCRIPTION:   SLUG cant get a user slot to start the user
      181     2394        */
      182     2395        /*E*  ERROR:         JGP-E$NGLGN-E
      183     2396               MESSAGE: No such user logon from M$GJOB
      184     2397        */
      185     2398        /*E*  ERROR:         JGP-E$NGAUTH-E
      186     2399               MESSAGE: Requested user not authorized to run in requested mode
      187     2400        */
      188     2401    1           CALL HFF$NILERASE(5) ALTRET(RTN);
      189     2402    1           B$PS5$->VLR$GJOB_V.SYSID=JG_RSLTS.SYSID;
      190     2403    1   RTN:    RETURN;
      191     2404    1   END JGP$PMME;

PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:7    
--  Include file information  --

   UM$CP6V_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   JG_MACRO_C.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   JG_ERRORS_C.:E05TOU  is referenced.
   JC_MACRO_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JGP$PMME.

   Procedure JGP$PMME requires 212 words for executable code.
   Procedure JGP$PMME requires 92 words of local(AUTO) storage.

    No errors detected in file JGP$PMME.:E05TSI    .

PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:8    

 Object Unit name= JGP$PMME                                   File name= JGP$PMME.:E05TOU
 UTS= JUL 29 '97 23:23:41.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      6      6  JGP$PMME
    1   Proc  even  none   212    324  JGP$PMME
    2  RoData even  none     6      6  JGP$PMME

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  JGP$PMME

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 HFF$NILERASE
         yes           Std       1 FMM$SCRAMBLE
 yes     yes           Std       2 HFF$DSIZ
         yes           Std       5 KUR$RESUS
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:9    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    J_SLUG                                S_CUN                                 B$JIT$
     B$PS0$                                B$PS1$                                B$PS2$
     B$PS3$                                B$PS4$                                B$PS5$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:10   


        1        1        /*M* JGP$PMME Pmme handler for the M$GJOB pmme */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=2,THI=2,CSI=2,ECI=2,STI=2,IND=2,ENI=2 */
        8        8        /**/
        9        9        /**/
       10       10        JGP$PMME: PROC(WSR);

     10  1 000000   000000 700200 xent  JGP$PMME     TSX0  ! X66_AUTO_1
         1 000001   000134 000001                    ZERO    92,1

       11       11        /*D* NAME:        JGP$PMME
       12       12             PURPOSE:     To handle the M$GJOB pmme
       13       13             CALL:        CALL JGP$PMME(WSR);
       14       14             INPUT:       WSR (WSR of caller)
       15       15                          B$PS0$->FPT$GJOB_V.TPU (MING Ghost or MON only)
       16       16                          B$PS0$->FPT$GJOB_V.SLEAZE (MING Ghost or MON only)
       17       17                          B$PS0$->FPT$GJOB_V.PRIINC
       18       18                          B$PS1$->VLP$ACCT
       19       19                          B$PS2$->VLP$NAME
       20       20                          B$PS3$->VLP$PASS
       21       21                          B$PS4$->STRING_FOR_CCBUF
       22       22             OUTPUT:      B$PS5$->VLR$GJOB_V.SYSID
       23       23             DESCRIPTION: JGP$PMME formats a user logon request message from
       24       24                          the information passed via the parameter stack. This
       25       25                          message is then written to SLUG so that SLUG may
       26       26                          attempt to log this user on as a GHOST or TPU. If all
       27       27                          is successful, the sysid of the started user is returned
       28       28                          in B$PS5$->VLR$GJOB_V.SYSID. If any errors occur,
       29       29                          B$JIT.ERR will reflect that fact and sysid will not be
       30       30                          returned.
       31       31        */
       32       32    1   DCL WSR SBIN;
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:11   
       33       33        %INCLUDE B$JIT_C;
       34      347        %INCLUDE B_STRINGS_C;
       35      476        %INCLUDE CP_6_SUBS;
       36     1016        %INCLUDE F$CP6V_C;
       37     1242        %INCLUDE F_FPTCODE_C;
       38     1278        %INCLUDE JG_EVID_C;
       39     1503        %INCLUDE JC_MACRO_C;
       40     1617        %INCLUDE JG_ERRORS_C;
       41     1631        %INCLUDE JG_GHOSTS_C;
       42     1721        %INCLUDE JG_MACRO_C;
       43     1737        %INCLUDE KC$CP6V_C;
       44     1857        %INCLUDE UD_ERRORS_C;
       45     1899        %INCLUDE UD_SEV_C;
       46     1913        %INCLUDE UM$CP6V_C;
       47     2100        %B$JIT0;
       48     2189        %U$JIT1X;
       49     2192        %M$JIT2X;
       50     2195        %F$JIT3;
       51     2200        %A$JIT6X;
       52     2203        %FPT$GJOB_V(BASED="BASED ALIGNED");
       53     2206        %VLP$ACCT_V (FPTN=VLP$ACCT);
       54     2209        %VLP$PASS_V (FPTN=VLP$PASS);
       55     2212        %VLR$GJOB_V;
       56     2215    1   DCL 1 TEXT$C BASED UNAL,
       57     2216    1         2 CNT UBIN BYTE UNAL,
       58     2217    1         2 TXT CHAR(TEXT$C.CNT);
       59     2218    1   DCL CHAR$CCSZ CHAR(CCSZ) BASED UNAL;
       60     2219    1   DCL PASS CHAR(8) ALIGNED;
       61     2220    1   DCL CCSZ UBIN WORD;
       62     2221    1   DCL TEMP SBIN;
       63     2222    1   DCL GMSGLEN UBIN;
       64     2223    1   DCL RSLTSLEN UBIN;
       65     2224        %JC_CITE (FPTN=JG_GMSG,TYP=UGJOB,STCLASS=AUTO);
       66     2274        %JG_RSLTS (NAME=JG_RSLTS,STCLASS=AUTO);
       67     2280    1   DCL 1 RSERR CONSTANT ALIGNED,
       68     2281    1         2 MID BIT(18) UNAL INIT('120720'O),
       69     2282    1         2 ERR UBIN(15) UNAL INIT(0),
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:12   
       70     2283    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       71     2284    1   DCL 1 BDGNM CONSTANT ALIGNED,
       72     2285    1         2 FCG BIT(18) UNAL INIT('120720'O),
       73     2286    1         2 ERR UBIN(15) UNAL INIT(%E$BGHNM),
       74     2287    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       75     2288    1   DCL 1 CCGT256 CONSTANT ALIGNED,
       76     2289    1         2 FCG BIT(18) UNAL INIT('120720'O),
       77     2290    1         2 ERR UBIN(15) UNAL INIT(%E$CCGT256),
       78     2291    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       79     2292    1   DCL J_SLUG CHAR(8) SYMREF READONLY;
       80     2293    1   DCL S_CUN SBIN SYMREF;
       81     2294    1   DCL B$JIT$ PTR SYMREF;
       82     2295    1   DCL B$PS0$ PTR SYMREF;
       83     2296    1   DCL B$PS1$ PTR SYMREF;
       84     2297    1   DCL B$PS2$ PTR SYMREF;
       85     2298    1   DCL B$PS3$ PTR SYMREF;
       86     2299    1   DCL B$PS4$ PTR SYMREF;
       87     2300    1   DCL B$PS5$ PTR SYMREF;
       88     2301    1   DCL FMM$SCRAMBLE ENTRY(1);
       89     2302    1   DCL HFF$DSIZ ENTRY(2) ALTRET;
       90     2303    1   DCL HFF$NILERASE ENTRY(1) ALTRET;
       91     2304    1   DCL KUR$RESUS ENTRY(5);
       92     2305        %EJECT;
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:13   
       93     2306    1           JG_GMSG = '0'B;

   2306  1 000002   000100 100400                    MLR     fill='000'O
         1 000003   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000004   200012 000446                    ADSC9   JG_GMSG,,AUTO            cn=0,n=294

       94     2307    1           JG_GMSG.CODE=JCEV_UGJOB#;

   2307  1 000005   000004 220003                    LDX0    4,DU
         1 000006   200012 440100                    SXL0    JG_GMSG,,AUTO

       95     2308    1           IF S_CUN<=JG_MING# OR WSR=%MONWSR

   2308  1 000007   000000 235000 xsym               LDA     S_CUN
         1 000010   000017 115007                    CMPA    15,DL
         1 000011   000026 604400 1                  TMOZ    s:2312
         1 000012   200003 470500                    LDP0    @WSR,,AUTO
         1 000013   000000 235100                    LDA     0,,PR0
         1 000014   000026 600000 1                  TZE     s:2312
         1 000015   000000 471400 xsym               LDP1    B$JIT$
         1 000016   040000 106500                    CMPC    fill='040'O
         1 000017   100001 000010                    ADSC9   1,,PR1                   cn=0,n=8
         1 000020   000003 000004 0                  ADSC9   CCGT256+1                cn=0,n=4
         1 000021   000037 601000 1                  TNZ     s:2315
         1 000022   040000 106500                    CMPC    fill='040'O
         1 000023   100003 000014                    ADSC9   3,,PR1                   cn=0,n=12
         1 000024   000004 000005 0                  ADSC9   CCGT256+2                cn=0,n=5
         1 000025   000037 601000 1                  TNZ     s:2315

       96     2309    1             OR (B$JIT.ACCN=':SYS' AND B$JIT.UNAME='RCVR2')
       97     2310                                      /* Gee, this is sleazy. Ought to fix it someday */
       98     2311    2             THEN DO;                      /* Honor the SLEAZE and PRIINC vals   */

       99     2312    2               JG_GMSG.SLEAZE = B$PS0$->FPT$GJOB_V.SLEAZE;

   2312  1 000026   000000 470400 xsym               LDP0    B$PS0$
         1 000027   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:14   
         1 000030   000033 772000                    QRL     27
         1 000031   200013 676100                    ERQ     JG_GMSG+1,,AUTO
         1 000032   000200 376007                    ANQ     128,DL
         1 000033   200013 656100                    ERSQ    JG_GMSG+1,,AUTO

      100     2313    2               JG_GMSG.PRIINC = B$PS0$->FPT$GJOB_V.PRIINC;

   2313  1 000034   000000 236100                    LDQ     0,,PR0
         1 000035   000011 736000                    QLS     9
         1 000036   200013 552140                    STBQ    JG_GMSG+1,'40'O,AUTO

      101     2314    2               END;

      102     2315    1           JG_GMSG.TP = B$PS0$->FPT$GJOB_V.TPU;

   2315  1 000037   000000 470400 xsym               LDP0    B$PS0$
         1 000040   000000 236100                    LDQ     0,,PR0
         1 000041   000033 772000                    QRL     27
         1 000042   200013 676100                    ERQ     JG_GMSG+1,,AUTO
         1 000043   000400 376007                    ANQ     256,DL
         1 000044   200013 656100                    ERSQ    JG_GMSG+1,,AUTO

      103     2316    1           IF JG_GMSG.TP

   2316  1 000045   200013 236100                    LDQ     JG_GMSG+1,,AUTO
         1 000046   000400 316007                    CANQ    256,DL
         1 000047   000053 600000 1                  TZE     s:2318

      104     2317    1             THEN JG_GMSG.SSID = 3;        /* TP special originator's sysid      */

   2317  1 000050   003000 236007                    LDQ     1536,DL
         1 000051   200013 552130                    STBQ    JG_GMSG+1,'30'O,AUTO
         1 000052   000067 710000 1                  TRA     s:2322

      105     2318    1             ELSE IF WSR=%MONWSR OR JG_GMSG.SLEAZE

   2318  1 000053   200003 471500                    LDP1    @WSR,,AUTO
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:15   
         1 000054   100000 235100                    LDA     0,,PR1
         1 000055   000060 600000 1                  TZE     s:2319
         1 000056   000200 316007                    CANQ    128,DL
         1 000057   000063 600000 1                  TZE     s:2321

      106     2319    1                 THEN JG_GMSG.SSID = 1;    /* System ghost special originator's  */

   2319  1 000060   001000 236007                    LDQ     512,DL
         1 000061   200013 552130                    STBQ    JG_GMSG+1,'30'O,AUTO
         1 000062   000067 710000 1                  TRA     s:2322

      107     2320                                                /* sysid                              */
      108     2321    1                 ELSE JG_GMSG.SSID = B$JIT.SYSID;

   2321  1 000063   000000 473400 xsym               LDP3    B$JIT$
         1 000064   300000 236100                    LDQ     0,,PR3
         1 000065   000011 736000                    QLS     9
         1 000066   200013 552130                    STBQ    JG_GMSG+1,'30'O,AUTO

      109     2322    1           CALL HFF$NILERASE(1) ALTRET(NOACCT);

   2322  1 000067   000000 630400 2                  EPPR0   0
         1 000070   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000071   000000 701000 xent               TSX1    HFF$NILERASE
         1 000072   000100 702000 1                  TSX2    NOACCT

      110     2323    1           JG_GMSG.ACCT = B$PS1$->VLP$ACCT.ACCT;

   2323  1 000073   000000 470400 xsym               LDP0    B$PS1$
         1 000074   040100 100500                    MLR     fill='040'O
         1 000075   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 000076   200014 000010                    ADSC9   JG_GMSG+2,,AUTO          cn=0,n=8

      111     2324    2           DO WHILE('0'B);

   2324  1 000077   000104 710000 1                  TRA     s:2327

PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:16   
      112     2325    2   NOACCT:   JG_GMSG.ACCT = B$JIT.ACCN;

   2325  1 000100   000000 470400 xsym  NOACCT       LDP0    B$JIT$
         1 000101   040100 100500                    MLR     fill='040'O
         1 000102   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         1 000103   200014 000010                    ADSC9   JG_GMSG+2,,AUTO          cn=0,n=8

      113     2326    2             END;

      114     2327    1           CALL HFF$NILERASE(2) ALTRET(NOUNAME);

   2327  1 000104   000001 630400 2                  EPPR0   1
         1 000105   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000106   000000 701000 xent               TSX1    HFF$NILERASE
         1 000107   000135 702000 1                  TSX2    NOUNAME

      115     2328    1           JG_GMSG.UNAME=B$PS2$->TEXT$C;

   2328  1 000110   000000 470400 xsym               LDP0    B$PS2$
         1 000111   000100 101500                    MRL     fill='000'O
         1 000112   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000113   200126 000002                    ADSC9   JG_RSLTS+2,,AUTO         cn=0,n=2
         1 000114   200126 220100                    LDX0    JG_RSLTS+2,,AUTO
         1 000115   000001 621010                    EAX1    1,X0
         1 000116   000100 100540                    MLR     fill='000'O
         1 000117   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         1 000120   200016 000015                    ADSC9   JG_GMSG+4,,AUTO          cn=0,n=13

      116     2329    1           IF JG_GMSG.UNAME.CNT=0 OR JG_GMSG.UNAME.CNT>12

   2329  1 000121   200016 236100                    LDQ     JG_GMSG+4,,AUTO
         1 000122   777000 316003                    CANQ    -512,DU
         1 000123   000130 600000 1                  TZE     s:2331
         1 000124   200016 236100                    LDQ     JG_GMSG+4,,AUTO
         1 000125   777000 376003                    ANQ     -512,DU
         1 000126   015000 116003                    CMPQ    6656,DU
         1 000127   000134 602000 1                  TNC     s:2339
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:17   

      117     2330    2             THEN DO;

      118     2331    2               B$JIT.ERR=BDGNM;

   2331  1 000130   000001 236000 0                  LDQ     BDGNM
         1 000131   000000 471400 xsym               LDP1    B$JIT$
         1 000132   100012 756100                    STQ     10,,PR1

      119     2332        /*E*  ERROR:         JGP-E$BGHNM-E
      120     2333               MESSAGE: Illegal user name
      121     2334              MESSAGE1: User names must be > 0 and <= 12 bytes in length
      122     2335              DESCRIPTION:   His name is too big.
      123     2336        */
      124     2337    2               RETURN;

   2337  1 000133   000000 702200 xent               TSX2  ! X66_ARET

      125     2338    2               END;
      126     2339    2           DO WHILE('0'B);

   2339  1 000134   000150 710000 1                  TRA     s:2344

      127     2340    2   NOUNAME:  JG_GMSG.UNAME.TXT = B$JIT.UNAME;

   2340  1 000135   000000 470400 xsym  NOUNAME      LDP0    B$JIT$
         1 000136   040100 100500                    MLR     fill='040'O
         1 000137   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
         1 000140   200016 200014                    ADSC9   JG_GMSG+4,,AUTO          cn=1,n=12

      128     2341    2             CALL INDEX(TEMP,' ',JG_GMSG.UNAME.TXT);

   2341  1 000141   000000 124500                    SCM     mask='000'O
         1 000142   200016 200014                    ADSC9   JG_GMSG+4,,AUTO          cn=1,n=12
         1 000143   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000144   200007 000100                    ARG     TEMP,,AUTO

PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:18   
      129     2342    2             JG_GMSG.UNAME.CNT = TEMP;

   2342  1 000145   200007 236100                    LDQ     TEMP,,AUTO
         1 000146   000033 736000                    QLS     27
         1 000147   200016 552140                    STBQ    JG_GMSG+4,'40'O,AUTO

      130     2343    2             END;

      131     2344    1           CALL HFF$NILERASE(3) ALTRET(NOPASS);

   2344  1 000150   000002 630400 2                  EPPR0   2
         1 000151   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000152   000000 701000 xent               TSX1    HFF$NILERASE
         1 000153   000161 702000 1                  TSX2    NOPASS

      132     2345    1           JG_GMSG.PASS = B$PS3$->VLP$PASS.PASS;

   2345  1 000154   000000 470400 xsym               LDP0    B$PS3$
         1 000155   040100 100500                    MLR     fill='040'O
         1 000156   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 000157   200021 200010                    ADSC9   JG_GMSG+7,,AUTO          cn=1,n=8

      133     2346    2           DO WHILE('0'B);

   2346  1 000160   000203 710000 1                  TRA     s:2353

      134     2347    2   NOPASS:   IF JG_GMSG.ACCT=B$JIT.ACCN

   2347  1 000161   000000 470400 xsym  NOPASS       LDP0    B$JIT$
         1 000162   040100 106500                    CMPC    fill='040'O
         1 000163   200014 000010                    ADSC9   JG_GMSG+2,,AUTO          cn=0,n=8
         1 000164   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         1 000165   000200 601000 1                  TNZ     s:2351
         1 000166   200016 236100                    LDQ     JG_GMSG+4,,AUTO
         1 000167   000033 772000                    QRL     27
         1 000170   000000 620006                    EAX0    0,QL
         1 000171   040100 106540                    CMPC    fill='040'O
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:19   
         1 000172   200016 200010                    ADSC9   JG_GMSG+4,,AUTO          cn=1,n=*X0
         1 000173   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
         1 000174   000200 601000 1                  TNZ     s:2351

      135     2348    2               AND ADDR(JG_GMSG.UNAME)->TEXT$C.TXT=B$JIT.UNAME
      136     2349    2               THEN JG_GMSG.NOPASSCK = '1'B; /* No need to check password since  */

   2349  1 000175   000100 236007                    LDQ     64,DL
         1 000176   200013 256100                    ORSQ    JG_GMSG+1,,AUTO
         1 000177   000203 710000 1                  TRA     s:2353

      137     2350                                                /* this user is starting himself      */
      138     2351    2               ELSE JG_GMSG.PASS = ' ';

   2351  1 000200   040100 100400                    MLR     fill='040'O
         1 000201   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000202   200021 200010                    ADSC9   JG_GMSG+7,,AUTO          cn=1,n=8

      139     2352    2             END;

      140     2353    1           IF JG_GMSG.ACCT = B$JIT.ACCN AND JG_GMSG.TP

   2353  1 000203   000000 470400 xsym               LDP0    B$JIT$
         1 000204   040100 106500                    CMPC    fill='040'O
         1 000205   200014 000010                    ADSC9   JG_GMSG+2,,AUTO          cn=0,n=8
         1 000206   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         1 000207   000215 601000 1                  TNZ     s:2358
         1 000210   200013 236100                    LDQ     JG_GMSG+1,,AUTO
         1 000211   000400 316007                    CANQ    256,DL
         1 000212   000215 600000 1                  TZE     s:2358

      141     2354    1             THEN JG_GMSG.NOPASSCK = '1'B;

   2354  1 000213   000100 236007                    LDQ     64,DL
         1 000214   200013 256100                    ORSQ    JG_GMSG+1,,AUTO

      142     2355                                           /* Don't check passwords when starting     */
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:20   
      143     2356                                           /* TP from the same acct; uname may be     */
      144     2357                                                /* different                          */
      145     2358    1           PASS = JG_GMSG.PASS;

   2358  1 000215   040100 100500                    MLR     fill='040'O
         1 000216   200021 200010                    ADSC9   JG_GMSG+7,,AUTO          cn=1,n=8
         1 000217   200004 000010                    ADSC9   PASS,,AUTO               cn=0,n=8

      146     2359    1           CALL FMM$SCRAMBLE(PASS);

   2359  1 000220   200004 631500                    EPPR1   PASS,,AUTO
         1 000221   200126 451500                    STP1    JG_RSLTS+2,,AUTO
         1 000222   200126 630500                    EPPR0   JG_RSLTS+2,,AUTO
         1 000223   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000224   000000 701000 xent               TSX1    FMM$SCRAMBLE
         1 000225   000000 011000                    NOP     0

      147     2360    1           JG_GMSG.PASS = PASS;

   2360  1 000226   040100 100500                    MLR     fill='040'O
         1 000227   200004 000010                    ADSC9   PASS,,AUTO               cn=0,n=8
         1 000230   200021 200010                    ADSC9   JG_GMSG+7,,AUTO          cn=1,n=8

      148     2361    1           CALL HFF$DSIZ(4,CCSZ);

   2361  1 000231   200006 630500                    EPPR0   CCSZ,,AUTO
         1 000232   200127 450500                    STP0    JG_RSLTS+3,,AUTO
         1 000233   000003 236000 2                  LDQ     3
         1 000234   200126 756100                    STQ     JG_RSLTS+2,,AUTO
         1 000235   200126 630500                    EPPR0   JG_RSLTS+2,,AUTO
         1 000236   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000237   000000 701000 xent               TSX1    HFF$DSIZ
         1 000240   000000 011000                    NOP     0

      149     2362    1           IF CCSZ>0

   2362  1 000241   200006 235100                    LDA     CCSZ,,AUTO
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:21   
         1 000242   000261 600000 1                  TZE     s:2377

      150     2363    2             THEN DO;

      151     2364    2               IF CCSZ>256

   2364  1 000243   000401 115007                    CMPA    257,DL
         1 000244   000251 602000 1                  TNC     s:2374

      152     2365    3                 THEN DO;

      153     2366    3                   B$JIT.ERR=CCGT256;

   2366  1 000245   000002 236000 0                  LDQ     CCGT256
         1 000246   000000 470400 xsym               LDP0    B$JIT$
         1 000247   000012 756100                    STQ     10,,PR0

      154     2367        /*E*  ERROR:         JGP-E$CCGT256-E
      155     2368              MESSAGE: M$GJOB CCBUF string exceeds 256 bytes
      156     2369              DESCRIPTION:  Can't pass a CCBUF string longer than 256 bytes
      157     2370                            since it won't fit into B$JIT.CCBUF
      158     2371        */
      159     2372    3                   RETURN;

   2372  1 000250   000000 702200 xent               TSX2  ! X66_ARET

      160     2373    3                   END;
      161     2374    2               JG_GMSG.CCBUF.TXT=B$PS4$->CHAR$CCSZ;

   2374  1 000251   000000 470400 xsym               LDP0    B$PS4$
         1 000252   000000 620005                    EAX0    0,AL
         1 000253   040100 100540                    MLR     fill='040'O
         1 000254   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         1 000255   200023 400400                    ADSC9   JG_GMSG+9,,AUTO          cn=2,n=256

      162     2375    2               JG_GMSG.CCBUF.CNT = CCSZ;

PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:22   
   2375  1 000256   200006 236100                    LDQ     CCSZ,,AUTO
         1 000257   000022 736000                    QLS     18
         1 000260   200023 552120                    STBQ    JG_GMSG+9,'20'O,AUTO

      163     2376    2               END;

      164     2377    1           GMSGLEN = CCSZ+LENGTHC(JG_GMSG)-LENGTHC(JG_GMSG.CCBUF.TXT);

   2377  1 000261   200006 235100                    LDA     CCSZ,,AUTO
         1 000262   000046 035007                    ADLA    38,DL
         1 000263   200010 755100                    STA     GMSGLEN,,AUTO

      165     2378    1           RSLTSLEN = LENGTHC(JG_RSLTS);

   2378  1 000264   000010 236007                    LDQ     8,DL
         1 000265   200011 756100                    STQ     RSLTSLEN,,AUTO

      166     2379    1           CALL KUR$RESUS (JG_GMSG,GMSGLEN,J_SLUG,JG_RSLTS,RSLTSLEN);

   2379  1 000266   200011 630500                    EPPR0   RSLTSLEN,,AUTO
         1 000267   200132 450500                    STP0    JG_RSLTS+6,,AUTO
         1 000270   200124 631500                    EPPR1   JG_RSLTS,,AUTO
         1 000271   200131 451500                    STP1    JG_RSLTS+5,,AUTO
         1 000272   000004 236000 2                  LDQ     4
         1 000273   200130 756100                    STQ     JG_RSLTS+4,,AUTO
         1 000274   200010 633500                    EPPR3   GMSGLEN,,AUTO
         1 000275   200127 453500                    STP3    JG_RSLTS+3,,AUTO
         1 000276   200012 634500                    EPPR4   JG_GMSG,,AUTO
         1 000277   200126 454500                    STP4    JG_RSLTS+2,,AUTO
         1 000300   200126 630500                    EPPR0   JG_RSLTS+2,,AUTO
         1 000301   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000302   000000 701000 xent               TSX1    KUR$RESUS
         1 000303   000000 011000                    NOP     0

      167     2380    1           B$JIT.ERR=RSERR;

   2380  1 000304   000000 236000 0                  LDQ     RSERR
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:23   
         1 000305   000000 470400 xsym               LDP0    B$JIT$
         1 000306   000012 756100                    STQ     10,,PR0

      168     2381    1           B$JIT.ERR.CODE = JG_RSLTS.ERR;

   2381  1 000307   200125 236100                    LDQ     JG_RSLTS+1,,AUTO
         1 000310   000003 736000                    QLS     3
         1 000311   000012 676100                    ERQ     10,,PR0
         1 000312   377770 376007                    ANQ     131064,DL
         1 000313   000012 656100                    ERSQ    10,,PR0

      169     2382        /*E*  ERROR:         JGP-E$NGHMEM-E
      170     2383              MESSAGE: No memory available to start user
      171     2384              DESCRIPTION:   SLUG could not get memory to make the initial user
      172     2385                             image.
      173     2386        */
      174     2387        /*E*  ERROR:         JGP-E$NGHUSR-E
      175     2388               MESSAGE: No user slots available to start user
      176     2389              MESSAGE1: Either the maximum users on the system or the
      177     2390                        maximum users of the requested mode on the system
      178     2391                        would be exceeded by starting your user or there are
      179     2392                        no sysids available.
      180     2393              DESCRIPTION:   SLUG cant get a user slot to start the user
      181     2394        */
      182     2395        /*E*  ERROR:         JGP-E$NGLGN-E
      183     2396               MESSAGE: No such user logon from M$GJOB
      184     2397        */
      185     2398        /*E*  ERROR:         JGP-E$NGAUTH-E
      186     2399               MESSAGE: Requested user not authorized to run in requested mode
      187     2400        */
      188     2401    1           CALL HFF$NILERASE(5) ALTRET(RTN);

   2401  1 000314   000005 630400 2                  EPPR0   5
         1 000315   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000316   000000 701000 xent               TSX1    HFF$NILERASE
         1 000317   000323 702000 1                  TSX2    RTN

PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:24   
      189     2402    1           B$PS5$->VLR$GJOB_V.SYSID=JG_RSLTS.SYSID;

   2402  1 000320   200124 720100                    LXL0    JG_RSLTS,,AUTO
         1 000321   000000 470400 xsym               LDP0    B$PS5$
         1 000322   000000 740100                    STX0    0,,PR0

      190     2403    1   RTN:    RETURN;

   2403  1 000323   000000 702200 xent  RTN          TSX2  ! X66_ARET

RSERR
 Sect OctLoc
   0     000   120720 000004                                                    P...

BDGNM
 Sect OctLoc
   0     001   120720 021504                                                    P...

CCGT256
 Sect OctLoc
   0     002   120720 021514                                                    P...

(unnamed)
 Sect OctLoc
   0     003   072123 131123   122103 126122   062040 040040                    :SYSRCVR2

(unnamed)
 Sect OctLoc
   2     000   000003 006000   000004 006000   000005 006000   000006 006000    ................
   2     004   000000 006000   000007 006000                                    ........
      191     2404    1   END JGP$PMME;

PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:25   
--  Include file information  --

   UM$CP6V_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   JG_MACRO_C.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   JG_ERRORS_C.:E05TOU  is referenced.
   JC_MACRO_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JGP$PMME.
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:26   

 **** Variables and constants ****

  ****  Section 000 RoData JGP$PMME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w STRC        r     1 BDGNM                      2-0-0/w STRC        r     1 CCGT256
     0-0-0/w STRC        r     1 RSERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @WSR                       6-0-0/w UBIN        r     1 CCSZ
    10-0-0/w UBIN        r     1 GMSGLEN                   12-0-0/w STRC(2646)  r     1 JG_GMSG
   124-0-0/w STRC(72)    r     1 JG_RSLTS                   4-0-0/w CHAR(8)     r     1 PASS
    11-0-0/w UBIN        r     1 RSLTSLEN                   7-0-0/w SBIN        r     1 TEMP
    *0-0-0/w SBIN        r     1 WSR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS0$
     0-0-0/w PTR         r     1 B$PS1$                     0-0-0/w PTR         r     1 B$PS2$
     0-0-0/w PTR         r     1 B$PS3$                     0-0-0/w PTR         r     1 B$PS4$
     0-0-0/w PTR         r     1 B$PS5$                     0-0-0/c CHAR(8)     r     1 J_SLUG
     0-0-0/w SBIN        r     1 S_CUN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:27   
     0-0-0/d STRC(7560)  r     1 B$JIT                      0-0-0/c ACHR        r     1 CHAR$CCSZ
     0-0-0/w STRC(72)    r     1 FPT$GJOB_V                 0-0-0/c ASTR(9)     r     1 TEXT$C
     0-0-0/c STRC(72)    r     1 VLP$ACCT                   0-0-0/c STRC(72)    r     1 VLP$PASS
     0-0-0/d STRC(72)    r     1 VLR$GJOB_V


   Procedure JGP$PMME requires 212 words for executable code.
   Procedure JGP$PMME requires 92 words of local(AUTO) storage.

    No errors detected in file JGP$PMME.:E05TSI    .
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:28   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:29   
          MINI XREF LISTING

B$JIT.ACCN
      2106**DCL      2308>>IF       2325>>ASSIGN   2347>>IF       2353>>IF
B$JIT.ERR
      2106**DCL      2331<<ASSIGN   2366<<ASSIGN   2380<<ASSIGN
B$JIT.ERR.CODE
      2107**DCL      2381<<ASSIGN
B$JIT.ERR.MID
      2107**DCL      2107--REDEF
B$JIT.SYSID
      2106**DCL      2321>>ASSIGN
B$JIT.UNAME
      2106**DCL      2308>>IF       2340>>ASSIGN   2347>>IF
B$JIT$
      2294**DCL      2101--IMP-PTR  2308>>IF       2308>>IF       2321>>ASSIGN   2325>>ASSIGN   2331>>ASSIGN
      2340>>ASSIGN   2347>>IF       2347>>IF       2353>>IF       2366>>ASSIGN   2380>>ASSIGN   2381>>ASSIGN
B$PS0$
      2295**DCL      2312>>ASSIGN   2313>>ASSIGN   2315>>ASSIGN
B$PS1$
      2296**DCL      2323>>ASSIGN
B$PS2$
      2297**DCL      2328>>ASSIGN   2328>>ASSIGN
B$PS3$
      2298**DCL      2345>>ASSIGN
B$PS4$
      2299**DCL      2374>>ASSIGN
B$PS5$
      2300**DCL      2402>>ASSIGN
BDGNM
      2284**DCL      2331>>ASSIGN
CCGT256
      2288**DCL      2366>>ASSIGN
CCSZ
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:30   
      2220**DCL      2218--IMP-SIZ  2361<>CALL     2362>>IF       2364>>IF       2374>>ASSIGN   2375>>ASSIGN
      2377>>ASSIGN
CHAR$CCSZ
      2218**DCL      2374>>ASSIGN
FMM$SCRAMBLE
      2301**DCL-ENT  2359--CALL
FPT$GJOB_V.PRIINC
      2204**DCL      2313>>ASSIGN
FPT$GJOB_V.SLEAZE
      2204**DCL      2312>>ASSIGN
FPT$GJOB_V.TPU
      2204**DCL      2315>>ASSIGN
GMSGLEN
      2222**DCL      2377<<ASSIGN   2379<>CALL
HFF$DSIZ
      2302**DCL-ENT  2361--CALL
HFF$NILERASE
      2303**DCL-ENT  2322--CALL     2327--CALL     2344--CALL     2401--CALL
JG_GMSG
      2237**DCL      2306<<ASSIGN   2377--ASSIGN   2379<>CALL
JG_GMSG.ACCT
      2263**DCL      2323<<ASSIGN   2325<<ASSIGN   2347>>IF       2353>>IF
JG_GMSG.CCBUF.CNT
      2270**DCL      2375<<ASSIGN
JG_GMSG.CCBUF.TXT
      2271**DCL      2374<<ASSIGN   2377--ASSIGN
JG_GMSG.CODE
      2241**DCL      2307<<ASSIGN
JG_GMSG.NOPASSCK
      2260**DCL      2349<<ASSIGN   2354<<ASSIGN
JG_GMSG.PASS
      2267**DCL      2345<<ASSIGN   2351<<ASSIGN   2358>>ASSIGN   2360<<ASSIGN
JG_GMSG.PRIINC
      2253**DCL      2313<<ASSIGN
JG_GMSG.SLEAZE
      2258**DCL      2312<<ASSIGN   2318>>IF
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:31   
JG_GMSG.SSID
      2254**DCL      2317<<ASSIGN   2319<<ASSIGN   2321<<ASSIGN
JG_GMSG.TP
      2256**DCL      2315<<ASSIGN   2316>>IF       2353>>IF
JG_GMSG.UNAME
      2264**DCL      2328<<ASSIGN   2347--IF       2347--IF
JG_GMSG.UNAME.CNT
      2265**DCL      2329>>IF       2329>>IF       2342<<ASSIGN
JG_GMSG.UNAME.TXT
      2266**DCL      2340<<ASSIGN   2341>>CALLBLT
JG_RSLTS
      2275**DCL      2378--ASSIGN   2379<>CALL
JG_RSLTS.ERR
      2277**DCL      2381>>ASSIGN
JG_RSLTS.SYSID
      2276**DCL      2402>>ASSIGN
J_SLUG
      2292**DCL      2379<>CALL
KUR$RESUS
      2304**DCL-ENT  2379--CALL
NOACCT
      2325**LABEL    2322--CALLALT
NOPASS
      2347**LABEL    2344--CALLALT
NOUNAME
      2340**LABEL    2327--CALLALT
PASS
      2219**DCL      2358<<ASSIGN   2359<>CALL     2360>>ASSIGN
RSERR
      2280**DCL      2380>>ASSIGN
RSLTSLEN
      2223**DCL      2378<<ASSIGN   2379<>CALL
RTN
      2403**LABEL    2401--CALLALT
S_CUN
      2293**DCL      2308>>IF
PL6.E3A0      #001=JGP$PMME File=JGP$PMME.:E05TSI                                TUE 07/29/97 23:23 Page:32   
TEMP
      2221**DCL      2341<<CALLBLT  2342>>ASSIGN
TEXT$C
      2215**DCL      2328>>ASSIGN
TEXT$C.CNT
      2216**DCL      2217--IMP-SIZ  2328>>ASSIGN   2347>>IF
TEXT$C.TXT
      2217**DCL      2347>>IF
VLP$ACCT.ACCT
      2207**DCL      2323>>ASSIGN
VLP$PASS.PASS
      2210**DCL      2345>>ASSIGN
VLR$GJOB_V.SYSID
      2213**DCL      2402<<ASSIGN
WSR
        32**DCL        10--PROC     2308>>IF       2318>>IF
