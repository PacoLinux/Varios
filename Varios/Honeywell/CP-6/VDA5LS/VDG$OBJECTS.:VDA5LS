VERSION A05

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:1    
        1        1        /*M* VDG$OBJECTS - Common operations on dynamic objects */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P* NAME:  VDG$OBJECTS
       12       12            PURPOSE:
       13       13                Common operations on objects on the heap.
       14       14            DESCRIPTION:
       15       15                This module contains several external routines.
       16       16
       17       17                VDG$OALLOC
       18       18                Uses XUM$MANAGE to dynamically allocate objects.  Automatically
       19       19                determines size to allocate based on object class.  Clears
       20       20                the entire object, except object header, to %CLEAR; also
       21       21                stores ADDR(NIL) in all pointer cells in the object.  For
       22       22                some object classes, also "pushes" the object onto a stack or
       23       23                chain of similar objects.
       24       24                Two data segments contain XUM$MANAGE'd storage:  one for
       25       25                small objects, one for large objects.
       26       26
       27       27                VDG$OALLOC_DCB
       28       28                Returns an unused DCB.  Pulls one from our list of unused
       29       29                DCBs; if list is empty, M$GETDCBs one.
       30       30
       31       31                VDG$OCOPY
       32       32                Creates a new object which is a copy of an existing object.
       33       33                If the original object points to other objects, VDG$OCOPY
       34       34                will make new copies of the attached objects, too.
       35       35
       36       36                VDG$OCOPY_x     (x = RANGE, LOCATION, KEY)
       37       37                Special version of VDG$OCOPY for specific PL6 structures
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:2    
       38       38                which aren't objects themselves, but which may point to
       39       39                other objects.  VDG$OCOPY_x copies all attached objects
       40       40                as well as the original structure.
       41       41
       42       42                VDG$OFREE
       43       43                Uses XUM$MANAGE to free dynamically-allocated objects.
       44       44                If the object points to other objects, will free the attached
       45       45                objects, too.
       46       46                For some object classes, will also "pop" the object from a global
       47       47                stack.
       48       48
       49       49                VDG$OFREE_DCB
       50       50                Free a DCB.  Puts it into our list of unused DCBs; if list
       51       51                is full, M$RELDCBs it.
       52       52
       53       53                VDG$OCLEAR_x        (x = RANGE, LOCATION)
       54       54                Special version of VDG$OFREE for specific PL6 structures
       55       55                which aren't objects themselves, but which may point to
       56       56                other objects.  VDG$OCLEAR_x frees any attached objects,
       57       57                then %CLEARs/NILs the original structure.
       58       58        */
       59       59
       60       60        /*D* NAME: VDG$OALLOC
       61       61            PARAMETERS:
       62       62                CLASS - A %CLS_ def; class of object to allocate.
       63       63                PTR$ - An uninitialized PTR.
       64       64                SIZE - Optional: # words to allocate for variable-length objects.
       65       65            INPUT:
       66       66                VD_MCB_LARGE - XUM$MCB for large-object heap.
       67       67                VD_MCB_SMALL - XUM$MCB for small-object heap.
       68       68                VD_OBJECTS - Info about object classes.
       69       69            OUTPUT:
       70       70                PTR$ will contain a pointer to the first word of the object;
       71       71                    this is the address of the VD$OBJECT_HEADER element of
       72       72                    the allocated structure; this element will be filled in.
       73       73                CAUTION:  Callers must not %CLEAR the storage allocated for
       74       74                    them, since this would also clear the VD$OBJECT_HEADER
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:3    
       75       75                    (which we just filled in).  VDG$OALLOC will clear the
       76       76                    storage allocated before returning, including storing
       77       77                    ADDR(NIL) in any pointer cells.
       78       78            DESCRIPTION:
       79       79                Calls X$ALLOCATE to allocate the storage.  If we can't get
       80       80                    enough storage, expands the data segment and calls
       81       81                    X$ALLOCATE again.
       82       82                Clear the allocated storage to %CLEAR, then fill in any
       83       83                    pointer cells with ADDR(NIL).
       84       84                        NOTE - VD$KEY.V$ and VD$SPEC.V$ are not filled in
       85       85                        with NIL, 'cause in their %CLEAR state .REP# = 0,
       86       86                        and .V$ is only a pointer when .REP# = %REP_REMOTE.
       87       87
       88       88                Certain objects get linked to the end of a predefined chain when
       89       89                    they are allocated:
       90       90                    Object:          Is linked to the tail of:
       91       91                    -----------      ----------------------------
       92       92                    %CLS_CMD_STREAM  VD_6E.CMD_STREAM$ (points to tail)
       93       93                    %CLS_ERR         VD_6E.ERR_HEAD$/.ERR_TAIL$
       94       94                    %CLS_PORT        VD_6E.PORT_HEAD$/.PORT_TAIL$
       95       95        */
       96       96
       97       97        VDG$OALLOC: PROC (CLASS, PTR_PARAM$, SIZE) ALTRET;
       98       98
       99       99
      100      100        %INCLUDE VD_MACROS_M;
      101     2315        %INCLUDE VD_PERR_C;
      102     2463        %INCLUDE CP_6;
      103     2544        %INCLUDE XU_PERR_C;
      104     2735        %INCLUDE XUM_MACRO_C;
      105     2762
      106     2763
      107     2764    1   DCL CLASS UBIN;
      108     2765    1   DCL PTR_PARAM$ PTR;
      109     2766    1   DCL SIZE UBIN;
      110     2767
      111     2768
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:4    
      112     2769    1   DCL X$ALLOCATE      ENTRY (1) ALTRET;
      113     2770    1   DCL VDG$ESCREECH    ENTRY (3);
      114     2771
      115     2772
      116     2773    1   DCL B$TCB$ PTR SYMREF;
      117     2774        %VD_6E (STCLASS=SYMREF);
      118     2810        %VD_OBJECTS (NAME=VD_OBJECTS, STCLASS=SYMREF);
      119     2850        %XUM$MCB (NAME=VD_MCB_LARGE, STCLASS=SYMREF);
      120     2854        %XUM$MCB (NAME=VD_MCB_SMALL, STCLASS=SYMREF);
      121     2858
      122     2859
      123     2860        %FPT_GDS (RESULTS=GDS_RESULTS, SEGSIZE=%NW_DATA_SEG_INCR);
      124     2876    1   DCL GDS_RESULTS VECTOR STATIC;
      125     2877
      126     2878
      127     2879    1   DCL PTR$ PTR;
      128     2880    1   DCL LEVEL_INDEX UBIN;
      129     2881    1   DCL MCB$ PTR;
      130     2882    1   DCL NWORDS SBIN;
      131     2883    1   DCL NBYTES SBIN;
      132     2884    1   DCL SEG_PTR$ PTR;
      133     2885    1   DCL 1 SEG_PTR REDEF SEG_PTR$,
      134     2886    1         2 * UBIN(24) UNAL,
      135     2887    1         2 SEGID BIT(12) UNAL;
      136     2888    1   DCL SEG_PTR2$ PTR;
      137     2889    1   DCL 1 SEG_PTR2 REDEF SEG_PTR2$,
      138     2890    1         2 * UBIN(24) UNAL,
      139     2891    1         2 SEGID BIT(12) UNAL;
      140     2892    1   DCL PTR2$ PTR;
      141     2893    1   DCL I SBIN;
      142     2894
      143     2895
      144     2896        %XUM$MCB (NAME=MCB, STCLASS="BASED(MCB$)");
      145     2900    1   DCL 1 VAR_LEN_STRUCTURE BASED(PTR$),
      146     2901    1         2 * CHAR(NBYTES);
      147     2902        %VD$OBJECT_HEADER (NAME=OBJECT$HEADER, STCLASS="BASED(PTR$)");
      148     2924        %VD$STRING_HEADER;
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:5    
      149     2960        %VD$BUFFER_HEADER;
      150     2996        %VD$BLOCK_DESC;
      151     3143        %VD$BUFFER;
      152     3201        %VD$CMD_STREAM;
      153     3240        %VD$DIR_NODE;
      154     3278        %VD$ENCODED_NODE;
      155     3399        %VD$ERR;
      156     3452        %VD$EVAL;
      157     3697        %VD$FILE_KEY;
      158     3746        %VD$FILE_NODE;
      159     3839        %VD$FIT;
      160     3875        %VD$IT_ADJUST;
      161     3912        %VD$IT_BLOCK_EXPR;
      162     4062        %VD$IT_COMMAND;
      163     4100        %VD$IT_OPERAND;
      164     4166        %VD$IT_OPERATOR;
      165     4203        %VD$IT_SELECT;
      166     4240        %VD$PATTERN;
      167     4291        %VD$EVAL_PATTERN;
      168     4398        %VD$POINTER;
      169     4443        %VD$PORT;
      170     4541        %VD$RECORD_SET;
      171     4619        %VD$STREAM;
      172     4725        %VD$STRUCTURE_SPEC;
      173     4762        %VD$TABS;
      174     4799        %VD$TEXTC_REMOTE;
      175     4860        %VD$WINDOW_BLOCK;
      176     4897        %VD$WINDOW_SPEC;
      177     4963        %VD$XLATE_LOCATIONS;
      178     5099        %B$TCB;
      179     5102        %B$ALT;
      180     5110        %VD$ERR (NAME=ERR$HEAD, STCLASS="BASED(VD_6E.ERR_HEAD$)");
      181     5163
      182     5164
      183     5165    1   OALLOC:
      184     5166    1           IF CLASS >= %CLS_MX
      185     5167    1             OR VD_OBJECTS.SIZE (CLASS) < 0 THEN
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:6    
      186     5168    1              CALL VDG$ESCREECH (CLASS);
      187     5169    1           IF ADDR(SIZE) = ADDR(NIL) THEN
      188     5170    1              NWORDS = VD_OBJECTS.SIZE (CLASS);
      189     5171    1           ELSE
      190     5172    1              NWORDS = SIZE;
      191     5173    1           IF NWORDS <= 0 THEN
      192     5174    1              CALL VDG$ESCREECH (CLASS, NWORDS);
      193     5175
      194     5176    1           IF NWORDS > %MXNW_SMALL_SEGMENT_CHUNK THEN
      195     5177    1              MCB$ = ADDR(VD_MCB_LARGE);
      196     5178    1           ELSE
      197     5179    1              MCB$ = ADDR(VD_MCB_SMALL);
      198     5180    1           MCB.SIZE = NWORDS;
      199     5181    1           CALL X$ALLOCATE (MCB) ALTRET (ALLOCATE_FAILED);
      200     5182    1           PTR$ = MCB.ADDRESS$;
      201     5183    1           PTR_PARAM$ = MCB.ADDRESS$;
      202     5184
      203     5185                /*
      204     5186                *  Check to make sure we got the storage from the segment we
      205     5187                *   asked to get it from.
      206     5188                */
      207     5189    1           SEG_PTR$ = PTR$;
      208     5190    1           SEG_PTR2$ = MCB.SEGMENT_BASE$;
      209     5191    1           IF SEG_PTR.SEGID ~= SEG_PTR2.SEGID THEN
      210     5192    1              CALL VDG$ESCREECH;
      211     5193
      212     5194    1           NBYTES = NWORDS * %NB_PER_WORD;
      213     5195    1           VAR_LEN_STRUCTURE = %CLEAR;
      214     5196    1           OBJECT$HEADER.CLASS# = CLASS;
      215     5197    1           OBJECT$HEADER.SIZE# = NWORDS;
      216     5198    2           IF VD_OBJECTS.STR (CLASS) THEN DO;
      217     5199    2              PTR$->VD$TEXTC_REMOTE.FLINK$ = ADDR(NIL);
      218     5200    2              PTR$->VD$TEXTC_REMOTE.LENGTH# = NBYTES - LENGTHC(VD$STRING_HEADER);
      219     5201    2              END;
      220     5202    2           ELSE IF VD_OBJECTS.BUF (CLASS) THEN DO;
      221     5203    2                 PTR$->VD$BUFFER.FLINK$ = ADDR(NIL);
      222     5204    2                 PTR$->VD$BUFFER.LENGTH# = NBYTES - LENGTHC(VD$BUFFER_HEADER);
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:7    
      223     5205    2                 END;
      224     5206                %INCREMENT (ARRAY=STATS_OBJECTS#, INDX=CLASS);
      225     5209
      226     5210                /*
      227     5211                *   If appropriate, link the object onto the end of a chain.
      228     5212                *   Also, NIL out any pointers in the structure.
      229     5213                */
      230     5214
      231     5215    2           DO CASE (CLASS);
      232     5216    2            CASE (%CLS_BLOCK_DESC);
      233     5217    2              PTR$->VD$BLOCK_DESC.OPTIONS.STRUCTURE$ = ADDR(NIL);
      234     5218
      235     5219    2            CASE (%CLS_BLOCK_BUFFER);
      236     5220    2              PTR2$ = PALIGNW(ADDR(PTR$->VD$BUFFER.BYTES));
      237     5221    2              PTR2$->VD$BLOCK_DESC.OBJECT.CLASS# = %CLS_BLOCK_DESC;
      238     5222    2              PTR2$->VD$BLOCK_DESC.OPTIONS.STRUCTURE$ = ADDR(NIL);
      239     5223
      240     5224    2            CASE (%CLS_CMD_STREAM);
      241     5225    2              PTR$->VD$CMD_STREAM.BLINK$ = VD_6E.CMD_STREAM$;
      242     5226    2              VD_6E.CMD_STREAM$ = PTR$;
      243     5227    2              PTR$->VD$CMD_STREAM.RECORD$ = ADDR(NIL);
      244     5228    2              PTR$->VD$CMD_STREAM.INTREE$ = ADDR(NIL);
      245     5229
      246     5230    2            CASE (%CLS_DIR_NODE);
      247     5231                   /*
      248     5232                   *    DIR_NODEs are linked together by the caller since
      249     5233                   *    there isn't a global pointer to the tail of the chain.
      250     5234                   */
      251     5235    2              PTR$->VD$DIR_NODE.BLINK$ = ADDR(NIL);
      252     5236    2              PTR$->VD$DIR_NODE.FLINK$ = ADDR(NIL);
      253     5237    2              PTR$->VD$DIR_NODE.STRUCTURE$ = ADDR(NIL);
      254     5238    2              PTR$->VD$DIR_NODE.HEAD$ = ADDR(NIL);
      255     5239    2              PTR$->VD$DIR_NODE.TAIL$ = ADDR(NIL);
      256     5240
      257     5241    2            CASE (%CLS_ENCODED_NODE);
      258     5242    2              PTR$->VD$ENCODED_NODE.DESC.DATA$ = ADDR(NIL);
      259     5243
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:8    
      260     5244    2            CASE (%CLS_ERR);
      261     5245    2              PTR$->VD$ERR.FLINK$ = ADDR(NIL);
      262     5246    2              PTR$->VD$ERR.CMDLINE_INDEX# = -1;
      263     5247    2              IF VD_6E.ERR_HEAD$ = ADDR(NIL) THEN
      264     5248    2                 VD_6E.ERR_HEAD$ = PTR$;
      265     5249    2              ELSE
      266     5250    2                 VD_6E.ERR_TAIL$->VD$ERR.FLINK$ = PTR$;
      267     5251    2              VD_6E.ERR_TAIL$ = PTR$;
      268     5252
      269     5253    2            CASE (%CLS_EVAL);
      270     5254    2              PTR$->VD$EVAL.BLINK$ = ADDR(NIL);
      271     5255    2              PTR$->VD$EVAL.NODE$ = ADDR(NIL);
      272     5256
      273     5257    2            CASE (%CLS_FILE_KEY);
      274     5258    2              PTR$->VD$FILE_KEY.FLINK$ = ADDR(NIL);
      275     5259    2              PTR$->VD$FILE_KEY.UNIQUE.ACCT = %CHR_SPACE;
      276     5260    2              PTR$->VD$FILE_KEY.RES = %CHR_SPACE;
      277     5261    2              PTR$->VD$FILE_KEY.PSN = %CHR_SPACE;
      278     5262    2              PTR$->VD$FILE_KEY.PASS = %CHR_SPACE;
      279     5263
      280     5264    2            CASE (%CLS_FILE_NODE);
      281     5265    2              PTR$->VD$FILE_NODE.BLINK$ = ADDR(NIL);
      282     5266    2              PTR$->VD$FILE_NODE.FLINK$ = ADDR(NIL);
      283     5267    2              PTR$->VD$FILE_NODE.DESC.DATA$ = ADDR(NIL);
      284     5268    2              PTR$->VD$FILE_NODE.HEAD$ = ADDR(NIL);
      285     5269    2              PTR$->VD$FILE_NODE.TAIL$ = ADDR(NIL);
      286     5270
      287     5271    2            CASE (%CLS_FIT);
      288     5272    2              PTR$->VD$FIT.CODE2$ = ADDR(NIL);
      289     5273    2              PTR$->VD$FIT.CODE3$ = ADDR(NIL);
      290     5274
      291     5275    2            CASE (%CLS_IT_ADJUST);
      292     5276    2              PTR$->VD$IT_ADJUST.PARENT$ = ADDR(NIL);
      293     5277    2              PTR$->VD$IT_ADJUST.FLINK$ = ADDR(NIL);
      294     5278    2              PTR$->VD$IT_ADJUST.MOVEMENTS$ = ADDR(NIL);
      295     5279    2              PTR$->VD$IT_ADJUST.MOVEMENTS_TAIL$ = ADDR(NIL);
      296     5280
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:9    
      297     5281    2            CASE (%CLS_IT_BLOCK_EXPR);
      298     5282    2              PTR$->VD$IT_BLOCK_EXPR.PARENT$ = ADDR(NIL);
      299     5283    2              PTR$->VD$IT_BLOCK_EXPR.FLINK$ = ADDR(NIL);
      300     5284    2              PTR$->VD$IT_BLOCK_EXPR.OPTIONS.STRUCTURE$ = ADDR(NIL);
      301     5285    2              PTR$->VD$IT_BLOCK_EXPR.SELECTS$ = ADDR(NIL);
      302     5286    2              PTR$->VD$IT_BLOCK_EXPR.SELECTS_TAIL$ = ADDR(NIL);
      303     5287
      304     5288    2            CASE (%CLS_IT_COMMAND);
      305     5289    2              PTR$->VD$IT_COMMAND.PARENT$ = ADDR(NIL);
      306     5290    2              PTR$->VD$IT_COMMAND.FLINK$ = ADDR(NIL);
      307     5291    2              PTR$->VD$IT_COMMAND.PT_BLOCK_EXPR$ = ADDR(NIL);
      308     5292    3              DO I = 0 TO %(MX_COMMAND_PARAMS-1);
      309     5293    3                 PTR$->VD$IT_COMMAND.PARAM$ (I) = ADDR(NIL);
      310     5294    3                 END;
      311     5295
      312     5296    2            CASE (%CLS_IT_OPERAND);
      313     5297    2              PTR$->VD$IT_OPERAND.PARENT$ = ADDR(NIL);
      314     5298    2              PTR$->VD$IT_OPERAND.FLINK$ = ADDR(NIL);
      315     5299    2              PTR$->VD$IT_OPERAND.PARAM$ = ADDR(NIL);
      316     5300
      317     5301    2            CASE (%CLS_IT_OPERATOR);
      318     5302    2              PTR$->VD$IT_OPERATOR.PARENT$ = ADDR(NIL);
      319     5303    2              PTR$->VD$IT_OPERATOR.FLINK$ = ADDR(NIL);
      320     5304    2              PTR$->VD$IT_OPERATOR.OPERAND$ = ADDR(NIL);
      321     5305    2              PTR$->VD$IT_OPERATOR.R_OPERAND$ = ADDR(NIL);
      322     5306
      323     5307    2            CASE (%CLS_IT_SELECT);
      324     5308    2              PTR$->VD$IT_SELECT.PARENT$ = ADDR(NIL);
      325     5309    2              PTR$->VD$IT_SELECT.FLINK$ = ADDR(NIL);
      326     5310    2              PTR$->VD$IT_SELECT.ADJUSTS$ = ADDR(NIL);
      327     5311    2              PTR$->VD$IT_SELECT.ADJUSTS_TAIL$ = ADDR(NIL);
      328     5312
      329     5313    2            CASE (%CLS_PATTERN);
      330     5314    2              PTR$->VD$PATTERN.MX_ENTRIES# = (NWORDS -
      331     5315    2                POFFW(ADDR(PTR$->VD$PATTERN.ENTRIES), PTR$)) /
      332     5316    2                SIZEW(VD$PATTERN.ENTRIES);
      333     5317    3              DO I = 0 TO (PTR$->VD$PATTERN.MX_ENTRIES# - 1);
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:10   
      334     5318    3                 PTR$->VD$PATTERN.ENTRIES.MATCH$ (I) = ADDR(NIL);
      335     5319    3                 END;
      336     5320
      337     5321    2            CASE (%CLS_EVAL_PATTERN);
      338     5322    2              PTR$->VD$EVAL_PATTERN.BLINK$ = ADDR(NIL);
      339     5323    2              PTR$->VD$EVAL_PATTERN.PATTERN$ = ADDR(NIL);
      340     5324
      341     5325    2            CASE (%CLS_PORT);
      342     5326    2              PTR$->VD$PORT.FLINK$ = ADDR(NIL);
      343     5327    2              PTR$->VD$PORT.BLINK$ = VD_6E.PORT_TAIL$;
      344     5328    2              IF VD_6E.PORT_TAIL$ = ADDR(NIL) THEN
      345     5329    2                 VD_6E.PORT_HEAD$ = PTR$;
      346     5330    2              ELSE
      347     5331    2                 VD_6E.PORT_TAIL$->VD$PORT.FLINK$ = PTR$;
      348     5332    2              VD_6E.PORT_TAIL$ = PTR$;
      349     5333    2              PTR$->VD$PORT.FIT$ = ADDR(NIL);
      350     5334    2              PTR$->VD$PORT.STRUCTURE$ = ADDR(NIL);
      351     5335    3              DO LEVEL_INDEX = 0 TO %MX_ACCESS_LEVELS - 1;
      352     5336    3                 PTR$->VD$PORT.LEVEL.DATA$ (LEVEL_INDEX) = ADDR(NIL);
      353     5337    3                 PTR$->VD$PORT.LEVEL.INTERNAL$ (LEVEL_INDEX) = ADDR(NIL);
      354     5338    3                 END;
      355     5339
      356     5340    2            CASE (%CLS_PTR_BLOCK_DESC, %CLS_PTR_FILE_NODE, %CLS_PTR_INTREE,
      357     5341    2                   %CLS_PTR_KEY, %CLS_PTR_LOCATION, %CLS_PTR_TEXTC);
      358     5342    2              PTR$->VD$POINTER.V$ = ADDR(NIL);
      359     5343
      360     5344    2            CASE (%CLS_RECORD_SET);
      361     5345    2              PTR$->VD$RECORD_SET.MX_ENTRIES# = (NWORDS -
      362     5346    2                POFFW(ADDR(PTR$->VD$RECORD_SET.DESC), PTR$)) /
      363     5347    2                SIZEW(VD$RECORD_SET.DESC);
      364     5348    3              DO I = 0 TO (PTR$->VD$RECORD_SET.MX_ENTRIES# - 1);
      365     5349    3                 PTR$->VD$RECORD_SET.DESC.DATA$ (I) = ADDR(NIL);
      366     5350    3                 END;
      367     5351
      368     5352    2            CASE (%CLS_STREAM);
      369     5353    2              PTR$->VD$STREAM.PORT$ = ADDR(NIL);
      370     5354
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:11   
      371     5355    2            CASE (%CLS_STRUCTURE_SPEC);
      372     5356    2              PTR$->VD$STRUCTURE_SPEC.ACCESSOR$ = ADDR(NIL);
      373     5357    2              PTR$->VD$STRUCTURE_SPEC.FIT$ = ADDR(NIL);
      374     5358
      375     5359    2            CASE (%CLS_TABS);
      376     5360    2              PTR$->VD$TABS.FLINK$ = ADDR(NIL);
      377     5361    2              PTR$->VD$TABS.MX_ENTRIES# = ((NWORDS * %NB_PER_WORD) -
      378     5362    2                POFFC(ADDR(PTR$->VD$TABS.STOPS#), PTR$)) /
      379     5363    2                LENGTHC(VD$TABS.STOPS# (0));
      380     5364
      381     5365    2            CASE (%CLS_WINDOW_BLOCK);
      382     5366    2              PTR$->VD$WINDOW_BLOCK.EDIT_BLOCK$ = ADDR(NIL);
      383     5367    2              PTR$->VD$WINDOW_BLOCK.EVAL$ = ADDR(NIL);
      384     5368
      385     5369    2            CASE (%CLS_WINDOW_SPEC);
      386     5370    2              PTR$->VD$WINDOW_SPEC.OPERAND.STREAM$ = ADDR(NIL);
      387     5371    2              PTR$->VD$WINDOW_SPEC.OPERAND.INTREE$ = ADDR(NIL);
      388     5372    2              PTR$->VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$ = ADDR(NIL);
      389     5373    2              PTR$->VD$WINDOW_SPEC.OPERAND.EVAL$ = ADDR(NIL);
      390     5374    2              PTR$->VD$WINDOW_SPEC.RECORD_SET$ = ADDR(NIL);
      391     5375    2              PTR$->VD$WINDOW_SPEC.SCREEN_UPDATED = %TRUE;
      392     5376    2              PTR$->VD$WINDOW_SPEC.TABS$ = ADDR(NIL);
      393     5377    2              PTR$->VD$WINDOW_SPEC.EOFMARK$ = ADDR(NIL);
      394     5378    2              PTR$->VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$ = ADDR(NIL);
      395     5379
      396     5380    2            CASE (%CLS_XLATE_LOCATIONS);
      397     5381    2              PTR$->VD$XLATE_LOCATIONS.FLINK$ = ADDR(NIL);
      398     5382    2              PTR$->VD$XLATE_LOCATIONS.MX_ENTRIES# = (NWORDS -
      399     5383    2                POFFW(ADDR(PTR$->VD$XLATE_LOCATIONS.XLATES), PTR$)) /
      400     5384    2                SIZEW(VD$XLATE_LOCATIONS.XLATES);
      401     5385
      402     5386    2            CASE (ELSE);
      403     5387    2              ;       /* No linking/NILing for other objects */
      404     5388    2            END;
      405     5389
      406     5390
      407     5391    1   OALLOC_RET:                 /* Label here so can debug w/o listings */
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:12   
      408     5392    1           RETURN;
      409     5393
      410     5394
      411     5395    1   ALLOCATE_FAILED:
      412     5396    2           IF MCB.ERR.CODE = %E$NOSPACE THEN DO;
      413     5397    2              VBASE(GDS_RESULTS) = MCB.SEGMENT_BASE$;
      414     5398    2              CALL M$GDS (FPT_GDS)
      415     5399    2                ALTRET (GDS_FAILED);
      416     5400    2              MCB.WKSZ = (VBOUND(GDS_RESULTS) + 1) / %NB_PER_WORD;
      417     5401
      418     5402    2              IF ADDR(MCB) = ADDR(VD_MCB_SMALL) THEN
      419     5403                      %INCREMENT (INDX=%STG_EXPAND_SEG_SMALL);
      420     5406    2              ELSE IF ADDR(MCB) = ADDR(VD_MCB_LARGE) THEN
      421     5407                         %INCREMENT (INDX=%STG_EXPAND_SEG_LARGE);
      422     5410
      423     5411    2              GOTO OALLOC;
      424     5412    2              END;
      425     5413
      426     5414    1           ERR$HEAD.ERR.CODE# = %E$ALLOCATE_FAILED;
      427     5415    1           ERR$HEAD.FLAGLEV# = %FLV_FATAL;
      428     5416    1           ALTRETURN;
      429     5417
      430     5418
      431     5419    1   GDS_FAILED:
      432     5420    1           ERR$HEAD.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      433     5421    1           ERR$HEAD.FLAGLEV# = %FLV_FATAL;
      434     5422    1           ALTRETURN;
      435     5423
      436     5424    1   END VDG$OALLOC;
      437     5425        %EOD;

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:13   
--  Include file information  --

   XUM_MACRO_C.:LIBRARY  is referenced.
   XU_PERR_C.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDG$OALLOC.

   Procedure VDG$OALLOC requires 485 words for executable code.
   Procedure VDG$OALLOC requires 20 words of local(AUTO) storage.

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:14   

 Object Unit name= VDG$OALLOC                                 File name= VDG$OBJECTS.:VDA5TOU
 UTS= JUL 04 '97 11:20:51.20 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none     8     10  VDG$OALLOC
    2   Proc  even  none   485    745  VDG$OALLOC
    3  RoData even  none     6      6  VDG$OALLOC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        3  VDG$OALLOC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 VDG$ESCREECH
 yes     yes           Std       1 X$ALLOCATE
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:15   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                VD_6E
     VD_OBJECTS                            VD_MCB_LARGE                          VD_MCB_SMALL
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:16   


        1        1        /*M* VDG$OBJECTS - Common operations on dynamic objects */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P* NAME:  VDG$OBJECTS
       12       12            PURPOSE:
       13       13                Common operations on objects on the heap.
       14       14            DESCRIPTION:
       15       15                This module contains several external routines.
       16       16
       17       17                VDG$OALLOC
       18       18                Uses XUM$MANAGE to dynamically allocate objects.  Automatically
       19       19                determines size to allocate based on object class.  Clears
       20       20                the entire object, except object header, to %CLEAR; also
       21       21                stores ADDR(NIL) in all pointer cells in the object.  For
       22       22                some object classes, also "pushes" the object onto a stack or
       23       23                chain of similar objects.
       24       24                Two data segments contain XUM$MANAGE'd storage:  one for
       25       25                small objects, one for large objects.
       26       26
       27       27                VDG$OALLOC_DCB
       28       28                Returns an unused DCB.  Pulls one from our list of unused
       29       29                DCBs; if list is empty, M$GETDCBs one.
       30       30
       31       31                VDG$OCOPY
       32       32                Creates a new object which is a copy of an existing object.
       33       33                If the original object points to other objects, VDG$OCOPY
       34       34                will make new copies of the attached objects, too.
       35       35
       36       36                VDG$OCOPY_x     (x = RANGE, LOCATION, KEY)
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:17   
       37       37                Special version of VDG$OCOPY for specific PL6 structures
       38       38                which aren't objects themselves, but which may point to
       39       39                other objects.  VDG$OCOPY_x copies all attached objects
       40       40                as well as the original structure.
       41       41
       42       42                VDG$OFREE
       43       43                Uses XUM$MANAGE to free dynamically-allocated objects.
       44       44                If the object points to other objects, will free the attached
       45       45                objects, too.
       46       46                For some object classes, will also "pop" the object from a global
       47       47                stack.
       48       48
       49       49                VDG$OFREE_DCB
       50       50                Free a DCB.  Puts it into our list of unused DCBs; if list
       51       51                is full, M$RELDCBs it.
       52       52
       53       53                VDG$OCLEAR_x        (x = RANGE, LOCATION)
       54       54                Special version of VDG$OFREE for specific PL6 structures
       55       55                which aren't objects themselves, but which may point to
       56       56                other objects.  VDG$OCLEAR_x frees any attached objects,
       57       57                then %CLEARs/NILs the original structure.
       58       58        */
       59       59
       60       60        /*D* NAME: VDG$OALLOC
       61       61            PARAMETERS:
       62       62                CLASS - A %CLS_ def; class of object to allocate.
       63       63                PTR$ - An uninitialized PTR.
       64       64                SIZE - Optional: # words to allocate for variable-length objects.
       65       65            INPUT:
       66       66                VD_MCB_LARGE - XUM$MCB for large-object heap.
       67       67                VD_MCB_SMALL - XUM$MCB for small-object heap.
       68       68                VD_OBJECTS - Info about object classes.
       69       69            OUTPUT:
       70       70                PTR$ will contain a pointer to the first word of the object;
       71       71                    this is the address of the VD$OBJECT_HEADER element of
       72       72                    the allocated structure; this element will be filled in.
       73       73                CAUTION:  Callers must not %CLEAR the storage allocated for
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:18   
       74       74                    them, since this would also clear the VD$OBJECT_HEADER
       75       75                    (which we just filled in).  VDG$OALLOC will clear the
       76       76                    storage allocated before returning, including storing
       77       77                    ADDR(NIL) in any pointer cells.
       78       78            DESCRIPTION:
       79       79                Calls X$ALLOCATE to allocate the storage.  If we can't get
       80       80                    enough storage, expands the data segment and calls
       81       81                    X$ALLOCATE again.
       82       82                Clear the allocated storage to %CLEAR, then fill in any
       83       83                    pointer cells with ADDR(NIL).
       84       84                        NOTE - VD$KEY.V$ and VD$SPEC.V$ are not filled in
       85       85                        with NIL, 'cause in their %CLEAR state .REP# = 0,
       86       86                        and .V$ is only a pointer when .REP# = %REP_REMOTE.
       87       87
       88       88                Certain objects get linked to the end of a predefined chain when
       89       89                    they are allocated:
       90       90                    Object:          Is linked to the tail of:
       91       91                    -----------      ----------------------------
       92       92                    %CLS_CMD_STREAM  VD_6E.CMD_STREAM$ (points to tail)
       93       93                    %CLS_ERR         VD_6E.ERR_HEAD$/.ERR_TAIL$
       94       94                    %CLS_PORT        VD_6E.PORT_HEAD$/.PORT_TAIL$
       95       95        */
       96       96
       97       97        VDG$OALLOC: PROC (CLASS, PTR_PARAM$, SIZE) ALTRET;

     97  2 000000   000000 700200 xent  VDG$OALLOC   TSX0  ! X66_AUTO_3
         2 000001   000024 000003                    ZERO    20,3

       98       98
       99       99
      100      100        %INCLUDE VD_MACROS_M;
      101     2315        %INCLUDE VD_PERR_C;
      102     2463        %INCLUDE CP_6;
      103     2544        %INCLUDE XU_PERR_C;
      104     2735        %INCLUDE XUM_MACRO_C;
      105     2762
      106     2763
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:19   
      107     2764    1   DCL CLASS UBIN;
      108     2765    1   DCL PTR_PARAM$ PTR;
      109     2766    1   DCL SIZE UBIN;
      110     2767
      111     2768
      112     2769    1   DCL X$ALLOCATE      ENTRY (1) ALTRET;
      113     2770    1   DCL VDG$ESCREECH    ENTRY (3);
      114     2771
      115     2772
      116     2773    1   DCL B$TCB$ PTR SYMREF;
      117     2774        %VD_6E (STCLASS=SYMREF);
      118     2810        %VD_OBJECTS (NAME=VD_OBJECTS, STCLASS=SYMREF);
      119     2850        %XUM$MCB (NAME=VD_MCB_LARGE, STCLASS=SYMREF);
      120     2854        %XUM$MCB (NAME=VD_MCB_SMALL, STCLASS=SYMREF);
      121     2858
      122     2859
      123     2860        %FPT_GDS (RESULTS=GDS_RESULTS, SEGSIZE=%NW_DATA_SEG_INCR);
      124     2876    1   DCL GDS_RESULTS VECTOR STATIC;
      125     2877
      126     2878
      127     2879    1   DCL PTR$ PTR;
      128     2880    1   DCL LEVEL_INDEX UBIN;
      129     2881    1   DCL MCB$ PTR;
      130     2882    1   DCL NWORDS SBIN;
      131     2883    1   DCL NBYTES SBIN;
      132     2884    1   DCL SEG_PTR$ PTR;
      133     2885    1   DCL 1 SEG_PTR REDEF SEG_PTR$,
      134     2886    1         2 * UBIN(24) UNAL,
      135     2887    1         2 SEGID BIT(12) UNAL;
      136     2888    1   DCL SEG_PTR2$ PTR;
      137     2889    1   DCL 1 SEG_PTR2 REDEF SEG_PTR2$,
      138     2890    1         2 * UBIN(24) UNAL,
      139     2891    1         2 SEGID BIT(12) UNAL;
      140     2892    1   DCL PTR2$ PTR;
      141     2893    1   DCL I SBIN;
      142     2894
      143     2895
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:20   
      144     2896        %XUM$MCB (NAME=MCB, STCLASS="BASED(MCB$)");
      145     2900    1   DCL 1 VAR_LEN_STRUCTURE BASED(PTR$),
      146     2901    1         2 * CHAR(NBYTES);
      147     2902        %VD$OBJECT_HEADER (NAME=OBJECT$HEADER, STCLASS="BASED(PTR$)");
      148     2924        %VD$STRING_HEADER;
      149     2960        %VD$BUFFER_HEADER;
      150     2996        %VD$BLOCK_DESC;
      151     3143        %VD$BUFFER;
      152     3201        %VD$CMD_STREAM;
      153     3240        %VD$DIR_NODE;
      154     3278        %VD$ENCODED_NODE;
      155     3399        %VD$ERR;
      156     3452        %VD$EVAL;
      157     3697        %VD$FILE_KEY;
      158     3746        %VD$FILE_NODE;
      159     3839        %VD$FIT;
      160     3875        %VD$IT_ADJUST;
      161     3912        %VD$IT_BLOCK_EXPR;
      162     4062        %VD$IT_COMMAND;
      163     4100        %VD$IT_OPERAND;
      164     4166        %VD$IT_OPERATOR;
      165     4203        %VD$IT_SELECT;
      166     4240        %VD$PATTERN;
      167     4291        %VD$EVAL_PATTERN;
      168     4398        %VD$POINTER;
      169     4443        %VD$PORT;
      170     4541        %VD$RECORD_SET;
      171     4619        %VD$STREAM;
      172     4725        %VD$STRUCTURE_SPEC;
      173     4762        %VD$TABS;
      174     4799        %VD$TEXTC_REMOTE;
      175     4860        %VD$WINDOW_BLOCK;
      176     4897        %VD$WINDOW_SPEC;
      177     4963        %VD$XLATE_LOCATIONS;
      178     5099        %B$TCB;
      179     5102        %B$ALT;
      180     5110        %VD$ERR (NAME=ERR$HEAD, STCLASS="BASED(VD_6E.ERR_HEAD$)");
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:21   
      181     5163
      182     5164
      183     5165    1   OALLOC:
      184     5166    1           IF CLASS >= %CLS_MX

   5166  2 000002   200003 470500       OALLOC       LDP0    @CLASS,,AUTO
         2 000003   000000 235100                    LDA     0,,PR0
         2 000004   000143 115007                    CMPA    99,DL
         2 000005   000012 603000 2                  TRC     s:5168
         2 000006   000000 235100                    LDA     0,,PR0
         2 000007   000001 735000                    ALS     1
         2 000010   000000 220005 xsym               LDX0    VD_OBJECTS,AL
         2 000011   000016 605000 2                  TPL     s:5169

      185     5167    1             OR VD_OBJECTS.SIZE (CLASS) < 0 THEN
      186     5168    1              CALL VDG$ESCREECH (CLASS);

   5168  2 000012   200003 630500                    EPPR0   @CLASS,,AUTO
         2 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000014   000000 701000 xent               TSX1    VDG$ESCREECH
         2 000015   000000 011000                    NOP     0

      187     5169    1           IF ADDR(SIZE) = ADDR(NIL) THEN

   5169  2 000016   200005 236100                    LDQ     @SIZE,,AUTO
         2 000017   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000020   000030 601000 2                  TNZ     s:5172

      188     5170    1              NWORDS = VD_OBJECTS.SIZE (CLASS);

   5170  2 000021   200003 470500                    LDP0    @CLASS,,AUTO
         2 000022   000000 235100                    LDA     0,,PR0
         2 000023   000001 735000                    ALS     1
         2 000024   000000 236005 xsym               LDQ     VD_OBJECTS,AL
         2 000025   000022 732000                    QRS     18
         2 000026   200011 756100                    STQ     NWORDS,,AUTO
         2 000027   000033 710000 2                  TRA     s:5173
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:22   

      189     5171    1           ELSE
      190     5172    1              NWORDS = SIZE;

   5172  2 000030   200005 470500                    LDP0    @SIZE,,AUTO
         2 000031   000000 235100                    LDA     0,,PR0
         2 000032   200011 755100                    STA     NWORDS,,AUTO

      191     5173    1           IF NWORDS <= 0 THEN

   5173  2 000033   200011 235100                    LDA     NWORDS,,AUTO
         2 000034   000045 605400 2                  TPNZ    s:5176

      192     5174    1              CALL VDG$ESCREECH (CLASS, NWORDS);

   5174  2 000035   200011 630500                    EPPR0   NWORDS,,AUTO
         2 000036   200021 450500                    STP0    I+3,,AUTO
         2 000037   200003 236100                    LDQ     @CLASS,,AUTO
         2 000040   200020 756100                    STQ     I+2,,AUTO
         2 000041   200020 630500                    EPPR0   I+2,,AUTO
         2 000042   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000043   000000 701000 xent               TSX1    VDG$ESCREECH
         2 000044   000000 011000                    NOP     0

      193     5175
      194     5176    1           IF NWORDS > %MXNW_SMALL_SEGMENT_CHUNK THEN

   5176  2 000045   200011 235100                    LDA     NWORDS,,AUTO
         2 000046   000013 115007                    CMPA    11,DL
         2 000047   000053 604400 2                  TMOZ    s:5179

      195     5177    1              MCB$ = ADDR(VD_MCB_LARGE);

   5177  2 000050   000000 236000 3                  LDQ     0
         2 000051   200010 756100                    STQ     MCB$,,AUTO
         2 000052   000055 710000 2                  TRA     s:5180

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:23   
      196     5178    1           ELSE
      197     5179    1              MCB$ = ADDR(VD_MCB_SMALL);

   5179  2 000053   000001 236000 3                  LDQ     1
         2 000054   200010 756100                    STQ     MCB$,,AUTO

      198     5180    1           MCB.SIZE = NWORDS;

   5180  2 000055   200010 470500                    LDP0    MCB$,,AUTO
         2 000056   000006 755100                    STA     6,,PR0

      199     5181    1           CALL X$ALLOCATE (MCB) ALTRET (ALLOCATE_FAILED);

   5181  2 000057   200010 630500                    EPPR0   MCB$,,AUTO
         2 000060   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000061   000000 701000 xent               TSX1    X$ALLOCATE
         2 000062   000670 702000 2                  TSX2    ALLOCATE_FAILED

      200     5182    1           PTR$ = MCB.ADDRESS$;

   5182  2 000063   200010 470500                    LDP0    MCB$,,AUTO
         2 000064   000000 236100                    LDQ     0,,PR0
         2 000065   200006 756100                    STQ     PTR$,,AUTO

      201     5183    1           PTR_PARAM$ = MCB.ADDRESS$;

   5183  2 000066   200004 471500                    LDP1    @PTR_PARAM$,,AUTO
         2 000067   100000 756100                    STQ     0,,PR1

      202     5184
      203     5185                /*
      204     5186                *  Check to make sure we got the storage from the segment we
      205     5187                *   asked to get it from.
      206     5188                */
      207     5189    1           SEG_PTR$ = PTR$;

   5189  2 000070   200013 756100                    STQ     SEG_PTR$,,AUTO
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:24   

      208     5190    1           SEG_PTR2$ = MCB.SEGMENT_BASE$;

   5190  2 000071   000002 236100                    LDQ     2,,PR0
         2 000072   200014 756100                    STQ     SEG_PTR2$,,AUTO

      209     5191    1           IF SEG_PTR.SEGID ~= SEG_PTR2.SEGID THEN

   5191  2 000073   200013 236100                    LDQ     SEG_PTR$,,AUTO
         2 000074   200014 676100                    ERQ     SEG_PTR2$,,AUTO
         2 000075   007777 376007                    ANQ     4095,DL
         2 000076   000102 600000 2                  TZE     s:5194

      210     5192    1              CALL VDG$ESCREECH;

   5192  2 000077   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000100   000000 701000 xent               TSX1    VDG$ESCREECH
         2 000101   000000 011000                    NOP     0

      211     5193
      212     5194    1           NBYTES = NWORDS * %NB_PER_WORD;

   5194  2 000102   200011 235100                    LDA     NWORDS,,AUTO
         2 000103   000002 735000                    ALS     2
         2 000104   200012 755100                    STA     NBYTES,,AUTO

      213     5195    1           VAR_LEN_STRUCTURE = %CLEAR;

   5195  2 000105   200006 470500                    LDP0    PTR$,,AUTO
         2 000106   000000 620005                    EAX0    0,AL
         2 000107   000140 100400                    MLR     fill='000'O
         2 000110   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000111   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      214     5196    1           OBJECT$HEADER.CLASS# = CLASS;

   5196  2 000112   200003 471500                    LDP1    @CLASS,,AUTO
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:25   
         2 000113   100000 720100                    LXL0    0,,PR1
         2 000114   000000 740100                    STX0    0,,PR0

      215     5197    1           OBJECT$HEADER.SIZE# = NWORDS;

   5197  2 000115   200011 721100                    LXL1    NWORDS,,AUTO
         2 000116   000000 441100                    SXL1    0,,PR0

      216     5198    2           IF VD_OBJECTS.STR (CLASS) THEN DO;

   5198  2 000117   100000 235100                    LDA     0,,PR1
         2 000120   000001 735000                    ALS     1
         2 000121   000000 236005 xsym               LDQ     VD_OBJECTS,AL
         2 000122   040000 316007                    CANQ    16384,DL
         2 000123   000133 600000 2                  TZE     s:5202

      217     5199    2              PTR$->VD$TEXTC_REMOTE.FLINK$ = ADDR(NIL);

   5199  2 000124   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000125   000001 756100                    STQ     1,,PR0

      218     5200    2              PTR$->VD$TEXTC_REMOTE.LENGTH# = NBYTES - LENGTHC(VD$STRING_HEADER);

   5200  2 000126   200012 236100                    LDQ     NBYTES,,AUTO
         2 000127   000011 136007                    SBLQ    9,DL
         2 000130   000033 736000                    QLS     27
         2 000131   000002 552140                    STBQ    2,'40'O,PR0

      219     5201    2              END;

   5201  2 000132   000142 710000 2                  TRA     s:5207

      220     5202    2           ELSE IF VD_OBJECTS.BUF (CLASS) THEN DO;

   5202  2 000133   400000 316007                    CANQ    -131072,DL
         2 000134   000142 600000 2                  TZE     s:5207

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:26   
      221     5203    2                 PTR$->VD$BUFFER.FLINK$ = ADDR(NIL);

   5203  2 000135   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000136   000001 756100                    STQ     1,,PR0

      222     5204    2                 PTR$->VD$BUFFER.LENGTH# = NBYTES - LENGTHC(VD$BUFFER_HEADER);

   5204  2 000137   200012 722100                    LXL2    NBYTES,,AUTO
         2 000140   777766 623012                    EAX3    -10,X2
         2 000141   000002 743100                    STX3    2,,PR0

      223     5205    2                 END;

      224     5206                %INCREMENT (ARRAY=STATS_OBJECTS#, INDX=CLASS);

   5207  2 000142   100000 722100                    LXL2    0,,PR1
         2 000143   000201 054012 xsym               AOS     VD_6E+129,X2

      225     5209
      226     5210                /*
      227     5211                *   If appropriate, link the object onto the end of a chain.
      228     5212                *   Also, NIL out any pointers in the structure.
      229     5213                */
      230     5214
      231     5215    2           DO CASE (CLASS);

   5215  2 000144   100000 235100                    LDA     0,,PR1
         2 000145   000057 115007                    CMPA    47,DL
         2 000146   000150 602005 2                  TNC     s:5215+4,AL
         2 000147   000667 710000 2                  TRA     OALLOC_RET
         2 000150   000667 710000 2                  TRA     OALLOC_RET
         2 000151   000232 710000 2                  TRA     s:5220
         2 000152   000227 710000 2                  TRA     s:5217
         2 000153   000667 710000 2                  TRA     OALLOC_RET
         2 000154   000667 710000 2                  TRA     OALLOC_RET
         2 000155   000245 710000 2                  TRA     s:5225
         2 000156   000667 710000 2                  TRA     OALLOC_RET
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:27   
         2 000157   000667 710000 2                  TRA     OALLOC_RET
         2 000160   000255 710000 2                  TRA     s:5235
         2 000161   000265 710000 2                  TRA     s:5242
         2 000162   000270 710000 2                  TRA     s:5245
         2 000163   000307 710000 2                  TRA     s:5254
         2 000164   000466 710000 2                  TRA     s:5322
         2 000165   000667 710000 2                  TRA     OALLOC_RET
         2 000166   000314 710000 2                  TRA     s:5258
         2 000167   000334 710000 2                  TRA     s:5265
         2 000170   000667 710000 2                  TRA     OALLOC_RET
         2 000171   000344 710000 2                  TRA     s:5272
         2 000172   000351 710000 2                  TRA     s:5276
         2 000173   000360 710000 2                  TRA     s:5282
         2 000174   000370 710000 2                  TRA     s:5289
         2 000175   000407 710000 2                  TRA     s:5297
         2 000176   000415 710000 2                  TRA     s:5302
         2 000177   000424 710000 2                  TRA     s:5308
         2 000200   000667 710000 2                  TRA     OALLOC_RET
         2 000201   000667 710000 2                  TRA     OALLOC_RET
         2 000202   000667 710000 2                  TRA     OALLOC_RET
         2 000203   000667 710000 2                  TRA     OALLOC_RET
         2 000204   000667 710000 2                  TRA     OALLOC_RET
         2 000205   000433 710000 2                  TRA     s:5314
         2 000206   000667 710000 2                  TRA     OALLOC_RET
         2 000207   000473 710000 2                  TRA     s:5326
         2 000210   000535 710000 2                  TRA     s:5342
         2 000211   000535 710000 2                  TRA     s:5342
         2 000212   000535 710000 2                  TRA     s:5342
         2 000213   000535 710000 2                  TRA     s:5342
         2 000214   000535 710000 2                  TRA     s:5342
         2 000215   000535 710000 2                  TRA     s:5342
         2 000216   000540 710000 2                  TRA     s:5345
         2 000217   000574 710000 2                  TRA     s:5353
         2 000220   000667 710000 2                  TRA     OALLOC_RET
         2 000221   000577 710000 2                  TRA     s:5356
         2 000222   000603 710000 2                  TRA     s:5360
         2 000223   000667 710000 2                  TRA     OALLOC_RET
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:28   
         2 000224   000626 710000 2                  TRA     s:5366
         2 000225   000632 710000 2                  TRA     s:5370
         2 000226   000647 710000 2                  TRA     s:5381

      232     5216    2            CASE (%CLS_BLOCK_DESC);

      233     5217    2              PTR$->VD$BLOCK_DESC.OPTIONS.STRUCTURE$ = ADDR(NIL);

   5217  2 000227   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000230   000025 756100                    STQ     21,,PR0
         2 000231   000667 710000 2                  TRA     OALLOC_RET

      234     5218
      235     5219    2            CASE (%CLS_BLOCK_BUFFER);

      236     5220    2              PTR2$ = PALIGNW(ADDR(PTR$->VD$BUFFER.BYTES));

   5220  2 000232   200006 236100                    LDQ     PTR$,,AUTO
         2 000233   000002 036000 3                  ADLQ    2
         2 000234   770000 036007                    ADLQ    -4096,DL
         2 000235   000003 376000 3                  ANQ     3
         2 000236   200015 756100                    STQ     PTR2$,,AUTO

      237     5221    2              PTR2$->VD$BLOCK_DESC.OBJECT.CLASS# = %CLS_BLOCK_DESC;

   5221  2 000237   000002 220003                    LDX0    2,DU
         2 000240   200015 473500                    LDP3    PTR2$,,AUTO
         2 000241   300000 740100                    STX0    0,,PR3

      238     5222    2              PTR2$->VD$BLOCK_DESC.OPTIONS.STRUCTURE$ = ADDR(NIL);

   5222  2 000242   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000243   300025 756100                    STQ     21,,PR3
         2 000244   000667 710000 2                  TRA     OALLOC_RET

      239     5223
      240     5224    2            CASE (%CLS_CMD_STREAM);
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:29   

      241     5225    2              PTR$->VD$CMD_STREAM.BLINK$ = VD_6E.CMD_STREAM$;

   5225  2 000245   000026 236000 xsym               LDQ     VD_6E+22
         2 000246   000001 756100                    STQ     1,,PR0

      242     5226    2              VD_6E.CMD_STREAM$ = PTR$;

   5226  2 000247   200006 236100                    LDQ     PTR$,,AUTO
         2 000250   000026 756000 xsym               STQ     VD_6E+22

      243     5227    2              PTR$->VD$CMD_STREAM.RECORD$ = ADDR(NIL);

   5227  2 000251   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000252   000025 756100                    STQ     21,,PR0

      244     5228    2              PTR$->VD$CMD_STREAM.INTREE$ = ADDR(NIL);

   5228  2 000253   000026 756100                    STQ     22,,PR0
         2 000254   000667 710000 2                  TRA     OALLOC_RET

      245     5229
      246     5230    2            CASE (%CLS_DIR_NODE);

      247     5231                   /*
      248     5232                   *    DIR_NODEs are linked together by the caller since
      249     5233                   *    there isn't a global pointer to the tail of the chain.
      250     5234                   */
      251     5235    2              PTR$->VD$DIR_NODE.BLINK$ = ADDR(NIL);

   5235  2 000255   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000256   000001 756100                    STQ     1,,PR0

      252     5236    2              PTR$->VD$DIR_NODE.FLINK$ = ADDR(NIL);

   5236  2 000257   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000260   000002 756100                    STQ     2,,PR0
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:30   

      253     5237    2              PTR$->VD$DIR_NODE.STRUCTURE$ = ADDR(NIL);

   5237  2 000261   000014 756100                    STQ     12,,PR0

      254     5238    2              PTR$->VD$DIR_NODE.HEAD$ = ADDR(NIL);

   5238  2 000262   000015 756100                    STQ     13,,PR0

      255     5239    2              PTR$->VD$DIR_NODE.TAIL$ = ADDR(NIL);

   5239  2 000263   000016 756100                    STQ     14,,PR0
         2 000264   000667 710000 2                  TRA     OALLOC_RET

      256     5240
      257     5241    2            CASE (%CLS_ENCODED_NODE);

      258     5242    2              PTR$->VD$ENCODED_NODE.DESC.DATA$ = ADDR(NIL);

   5242  2 000265   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000266   000030 756100                    STQ     24,,PR0
         2 000267   000667 710000 2                  TRA     OALLOC_RET

      259     5243
      260     5244    2            CASE (%CLS_ERR);

      261     5245    2              PTR$->VD$ERR.FLINK$ = ADDR(NIL);

   5245  2 000270   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000271   000001 756100                    STQ     1,,PR0

      262     5246    2              PTR$->VD$ERR.CMDLINE_INDEX# = -1;

   5246  2 000272   777777 220003                    LDX0    -1,DU
         2 000273   000003 440100                    SXL0    3,,PR0

      263     5247    2              IF VD_6E.ERR_HEAD$ = ADDR(NIL) THEN
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:31   

   5247  2 000274   000031 236000 xsym               LDQ     VD_6E+25
         2 000275   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000276   000302 601000 2                  TNZ     s:5250

      264     5248    2                 VD_6E.ERR_HEAD$ = PTR$;

   5248  2 000277   200006 236100                    LDQ     PTR$,,AUTO
         2 000300   000031 756000 xsym               STQ     VD_6E+25
         2 000301   000305 710000 2                  TRA     s:5251

      265     5249    2              ELSE
      266     5250    2                 VD_6E.ERR_TAIL$->VD$ERR.FLINK$ = PTR$;

   5250  2 000302   200006 236100                    LDQ     PTR$,,AUTO
         2 000303   000032 473400 xsym               LDP3    VD_6E+26
         2 000304   300001 756100                    STQ     1,,PR3

      267     5251    2              VD_6E.ERR_TAIL$ = PTR$;

   5251  2 000305   000032 756000 xsym               STQ     VD_6E+26
         2 000306   000667 710000 2                  TRA     OALLOC_RET

      268     5252
      269     5253    2            CASE (%CLS_EVAL);

      270     5254    2              PTR$->VD$EVAL.BLINK$ = ADDR(NIL);

   5254  2 000307   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000310   000001 756100                    STQ     1,,PR0

      271     5255    2              PTR$->VD$EVAL.NODE$ = ADDR(NIL);

   5255  2 000311   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000312   000071 756100                    STQ     57,,PR0
         2 000313   000667 710000 2                  TRA     OALLOC_RET

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:32   
      272     5256
      273     5257    2            CASE (%CLS_FILE_KEY);

      274     5258    2              PTR$->VD$FILE_KEY.FLINK$ = ADDR(NIL);

   5258  2 000314   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000315   000001 756100                    STQ     1,,PR0

      275     5259    2              PTR$->VD$FILE_KEY.UNIQUE.ACCT = %CHR_SPACE;

   5259  2 000316   040100 100400                    MLR     fill='040'O
         2 000317   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000320   000002 200010                    ADSC9   2,,PR0                   cn=1,n=8

      276     5260    2              PTR$->VD$FILE_KEY.RES = %CHR_SPACE;

   5260  2 000321   040100 100400                    MLR     fill='040'O
         2 000322   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000323   000014 400004                    ADSC9   12,,PR0                  cn=2,n=4

      277     5261    2              PTR$->VD$FILE_KEY.PSN = %CHR_SPACE;

   5261  2 000324   040100 100400                    MLR     fill='040'O
         2 000325   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000326   000015 400006                    ADSC9   13,,PR0                  cn=2,n=6

      278     5262    2              PTR$->VD$FILE_KEY.PASS = %CHR_SPACE;

   5262  2 000327   000035 235000 xsym               LDA     B_VECTNIL+29
         2 000330   000035 236000 xsym               LDQ     B_VECTNIL+29
         2 000331   000017 755100                    STA     15,,PR0
         2 000332   000020 756100                    STQ     16,,PR0
         2 000333   000667 710000 2                  TRA     OALLOC_RET

      279     5263
      280     5264    2            CASE (%CLS_FILE_NODE);

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:33   
      281     5265    2              PTR$->VD$FILE_NODE.BLINK$ = ADDR(NIL);

   5265  2 000334   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000335   000001 756100                    STQ     1,,PR0

      282     5266    2              PTR$->VD$FILE_NODE.FLINK$ = ADDR(NIL);

   5266  2 000336   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000337   000002 756100                    STQ     2,,PR0

      283     5267    2              PTR$->VD$FILE_NODE.DESC.DATA$ = ADDR(NIL);

   5267  2 000340   000010 756100                    STQ     8,,PR0

      284     5268    2              PTR$->VD$FILE_NODE.HEAD$ = ADDR(NIL);

   5268  2 000341   000012 756100                    STQ     10,,PR0

      285     5269    2              PTR$->VD$FILE_NODE.TAIL$ = ADDR(NIL);

   5269  2 000342   000013 756100                    STQ     11,,PR0
         2 000343   000667 710000 2                  TRA     OALLOC_RET

      286     5270
      287     5271    2            CASE (%CLS_FIT);

      288     5272    2              PTR$->VD$FIT.CODE2$ = ADDR(NIL);

   5272  2 000344   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000345   000001 756100                    STQ     1,,PR0

      289     5273    2              PTR$->VD$FIT.CODE3$ = ADDR(NIL);

   5273  2 000346   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000347   000002 756100                    STQ     2,,PR0
         2 000350   000667 710000 2                  TRA     OALLOC_RET

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:34   
      290     5274
      291     5275    2            CASE (%CLS_IT_ADJUST);

      292     5276    2              PTR$->VD$IT_ADJUST.PARENT$ = ADDR(NIL);

   5276  2 000351   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000352   000001 756100                    STQ     1,,PR0

      293     5277    2              PTR$->VD$IT_ADJUST.FLINK$ = ADDR(NIL);

   5277  2 000353   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000354   000002 756100                    STQ     2,,PR0

      294     5278    2              PTR$->VD$IT_ADJUST.MOVEMENTS$ = ADDR(NIL);

   5278  2 000355   000004 756100                    STQ     4,,PR0

      295     5279    2              PTR$->VD$IT_ADJUST.MOVEMENTS_TAIL$ = ADDR(NIL);

   5279  2 000356   000005 756100                    STQ     5,,PR0
         2 000357   000667 710000 2                  TRA     OALLOC_RET

      296     5280
      297     5281    2            CASE (%CLS_IT_BLOCK_EXPR);

      298     5282    2              PTR$->VD$IT_BLOCK_EXPR.PARENT$ = ADDR(NIL);

   5282  2 000360   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000361   000001 756100                    STQ     1,,PR0

      299     5283    2              PTR$->VD$IT_BLOCK_EXPR.FLINK$ = ADDR(NIL);

   5283  2 000362   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000363   000002 756100                    STQ     2,,PR0

      300     5284    2              PTR$->VD$IT_BLOCK_EXPR.OPTIONS.STRUCTURE$ = ADDR(NIL);

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:35   
   5284  2 000364   000030 756100                    STQ     24,,PR0

      301     5285    2              PTR$->VD$IT_BLOCK_EXPR.SELECTS$ = ADDR(NIL);

   5285  2 000365   000035 756100                    STQ     29,,PR0

      302     5286    2              PTR$->VD$IT_BLOCK_EXPR.SELECTS_TAIL$ = ADDR(NIL);

   5286  2 000366   000036 756100                    STQ     30,,PR0
         2 000367   000667 710000 2                  TRA     OALLOC_RET

      303     5287
      304     5288    2            CASE (%CLS_IT_COMMAND);

      305     5289    2              PTR$->VD$IT_COMMAND.PARENT$ = ADDR(NIL);

   5289  2 000370   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000371   000001 756100                    STQ     1,,PR0

      306     5290    2              PTR$->VD$IT_COMMAND.FLINK$ = ADDR(NIL);

   5290  2 000372   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000373   000002 756100                    STQ     2,,PR0

      307     5291    2              PTR$->VD$IT_COMMAND.PT_BLOCK_EXPR$ = ADDR(NIL);

   5291  2 000374   000004 756100                    STQ     4,,PR0

      308     5292    3              DO I = 0 TO %(MX_COMMAND_PARAMS-1);

   5292  2 000375   200016 450100                    STZ     I,,AUTO

      309     5293    3                 PTR$->VD$IT_COMMAND.PARAM$ (I) = ADDR(NIL);

   5293  2 000376   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000377   200006 470500                    LDP0    PTR$,,AUTO
         2 000400   200016 720100                    LXL0    I,,AUTO
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:36   
         2 000401   000006 756110                    STQ     6,X0,PR0

      310     5294    3                 END;

   5294  2 000402   200016 054100                    AOS     I,,AUTO
         2 000403   200016 235100                    LDA     I,,AUTO
         2 000404   000010 115007                    CMPA    8,DL
         2 000405   000376 604400 2                  TMOZ    s:5293
         2 000406   000667 710000 2                  TRA     OALLOC_RET

      311     5295
      312     5296    2            CASE (%CLS_IT_OPERAND);

      313     5297    2              PTR$->VD$IT_OPERAND.PARENT$ = ADDR(NIL);

   5297  2 000407   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000410   000001 756100                    STQ     1,,PR0

      314     5298    2              PTR$->VD$IT_OPERAND.FLINK$ = ADDR(NIL);

   5298  2 000411   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000412   000002 756100                    STQ     2,,PR0

      315     5299    2              PTR$->VD$IT_OPERAND.PARAM$ = ADDR(NIL);

   5299  2 000413   000010 756100                    STQ     8,,PR0
         2 000414   000667 710000 2                  TRA     OALLOC_RET

      316     5300
      317     5301    2            CASE (%CLS_IT_OPERATOR);

      318     5302    2              PTR$->VD$IT_OPERATOR.PARENT$ = ADDR(NIL);

   5302  2 000415   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000416   000001 756100                    STQ     1,,PR0

      319     5303    2              PTR$->VD$IT_OPERATOR.FLINK$ = ADDR(NIL);
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:37   

   5303  2 000417   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000420   000002 756100                    STQ     2,,PR0

      320     5304    2              PTR$->VD$IT_OPERATOR.OPERAND$ = ADDR(NIL);

   5304  2 000421   000004 756100                    STQ     4,,PR0

      321     5305    2              PTR$->VD$IT_OPERATOR.R_OPERAND$ = ADDR(NIL);

   5305  2 000422   000005 756100                    STQ     5,,PR0
         2 000423   000667 710000 2                  TRA     OALLOC_RET

      322     5306
      323     5307    2            CASE (%CLS_IT_SELECT);

      324     5308    2              PTR$->VD$IT_SELECT.PARENT$ = ADDR(NIL);

   5308  2 000424   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000425   000001 756100                    STQ     1,,PR0

      325     5309    2              PTR$->VD$IT_SELECT.FLINK$ = ADDR(NIL);

   5309  2 000426   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000427   000002 756100                    STQ     2,,PR0

      326     5310    2              PTR$->VD$IT_SELECT.ADJUSTS$ = ADDR(NIL);

   5310  2 000430   000004 756100                    STQ     4,,PR0

      327     5311    2              PTR$->VD$IT_SELECT.ADJUSTS_TAIL$ = ADDR(NIL);

   5311  2 000431   000005 756100                    STQ     5,,PR0
         2 000432   000667 710000 2                  TRA     OALLOC_RET

      328     5312
      329     5313    2            CASE (%CLS_PATTERN);
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:38   

      330     5314    2              PTR$->VD$PATTERN.MX_ENTRIES# = (NWORDS -

   5314  2 000433   200006 236100                    LDQ     PTR$,,AUTO
         2 000434   000003 036003                    ADLQ    3,DU
         2 000435   000022 772000                    QRL     18
         2 000436   200006 235100                    LDA     PTR$,,AUTO
         2 000437   000022 771000                    ARL     18
         2 000440   200020 755100                    STA     I+2,,AUTO
         2 000441   200020 136100                    SBLQ    I+2,,AUTO
         2 000442   200021 756100                    STQ     I+3,,AUTO
         2 000443   200011 236100                    LDQ     NWORDS,,AUTO
         2 000444   200021 136100                    SBLQ    I+3,,AUTO
         2 000445   000004 506007                    DIV     4,DL
         2 000446   000000 620006                    EAX0    0,QL
         2 000447   000002 440100                    SXL0    2,,PR0

      331     5315    2                POFFW(ADDR(PTR$->VD$PATTERN.ENTRIES), PTR$)) /
      332     5316    2                SIZEW(VD$PATTERN.ENTRIES);
      333     5317    3              DO I = 0 TO (PTR$->VD$PATTERN.MX_ENTRIES# - 1);

   5317  2 000450   200016 450100                    STZ     I,,AUTO
         2 000451   000460 710000 2                  TRA     s:5319+1

      334     5318    3                 PTR$->VD$PATTERN.ENTRIES.MATCH$ (I) = ADDR(NIL);

   5318  2 000452   200016 235100                    LDA     I,,AUTO
         2 000453   000002 735000                    ALS     2
         2 000454   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000455   200006 470500                    LDP0    PTR$,,AUTO
         2 000456   000006 756105                    STQ     6,AL,PR0

      335     5319    3                 END;

   5319  2 000457   200016 054100                    AOS     I,,AUTO
         2 000460   000002 236100                    LDQ     2,,PR0
         2 000461   000022 736000                    QLS     18
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:39   
         2 000462   000022 732000                    QRS     18
         2 000463   200016 116100                    CMPQ    I,,AUTO
         2 000464   000452 605400 2                  TPNZ    s:5318
         2 000465   000667 710000 2                  TRA     OALLOC_RET

      336     5320
      337     5321    2            CASE (%CLS_EVAL_PATTERN);

      338     5322    2              PTR$->VD$EVAL_PATTERN.BLINK$ = ADDR(NIL);

   5322  2 000466   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000467   000001 756100                    STQ     1,,PR0

      339     5323    2              PTR$->VD$EVAL_PATTERN.PATTERN$ = ADDR(NIL);

   5323  2 000470   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000471   000024 756100                    STQ     20,,PR0
         2 000472   000667 710000 2                  TRA     OALLOC_RET

      340     5324
      341     5325    2            CASE (%CLS_PORT);

      342     5326    2              PTR$->VD$PORT.FLINK$ = ADDR(NIL);

   5326  2 000473   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000474   000002 756100                    STQ     2,,PR0

      343     5327    2              PTR$->VD$PORT.BLINK$ = VD_6E.PORT_TAIL$;

   5327  2 000475   000034 236000 xsym               LDQ     VD_6E+28
         2 000476   000001 756100                    STQ     1,,PR0

      344     5328    2              IF VD_6E.PORT_TAIL$ = ADDR(NIL) THEN

   5328  2 000477   000034 236000 xsym               LDQ     VD_6E+28
         2 000500   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000501   000505 601000 2                  TNZ     s:5331
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:40   

      345     5329    2                 VD_6E.PORT_HEAD$ = PTR$;

   5329  2 000502   200006 236100                    LDQ     PTR$,,AUTO
         2 000503   000033 756000 xsym               STQ     VD_6E+27
         2 000504   000510 710000 2                  TRA     s:5332

      346     5330    2              ELSE
      347     5331    2                 VD_6E.PORT_TAIL$->VD$PORT.FLINK$ = PTR$;

   5331  2 000505   200006 236100                    LDQ     PTR$,,AUTO
         2 000506   000034 473400 xsym               LDP3    VD_6E+28
         2 000507   300002 756100                    STQ     2,,PR3

      348     5332    2              VD_6E.PORT_TAIL$ = PTR$;

   5332  2 000510   000034 756000 xsym               STQ     VD_6E+28

      349     5333    2              PTR$->VD$PORT.FIT$ = ADDR(NIL);

   5333  2 000511   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000512   000005 756100                    STQ     5,,PR0

      350     5334    2              PTR$->VD$PORT.STRUCTURE$ = ADDR(NIL);

   5334  2 000513   000006 756100                    STQ     6,,PR0

      351     5335    3              DO LEVEL_INDEX = 0 TO %MX_ACCESS_LEVELS - 1;

   5335  2 000514   200007 450100                    STZ     LEVEL_INDEX,,AUTO
         2 000515   000531 710000 2                  TRA     s:5338+3

      352     5336    3                 PTR$->VD$PORT.LEVEL.DATA$ (LEVEL_INDEX) = ADDR(NIL);

   5336  2 000516   200007 236100                    LDQ     LEVEL_INDEX,,AUTO
         2 000517   000007 402007                    MPY     7,DL
         2 000520   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:41   
         2 000521   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000522   200006 470500                    LDP0    PTR$,,AUTO
         2 000523   000027 756110                    STQ     23,X0,PR0

      353     5337    3                 PTR$->VD$PORT.LEVEL.INTERNAL$ (LEVEL_INDEX) = ADDR(NIL);

   5337  2 000524   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000525   000031 756110                    STQ     25,X0,PR0

      354     5338    3                 END;

   5338  2 000526   200007 235100                    LDA     LEVEL_INDEX,,AUTO
         2 000527   000001 035007                    ADLA    1,DL
         2 000530   200007 755100                    STA     LEVEL_INDEX,,AUTO
         2 000531   200007 235100                    LDA     LEVEL_INDEX,,AUTO
         2 000532   000005 115007                    CMPA    5,DL
         2 000533   000516 602000 2                  TNC     s:5336
         2 000534   000667 710000 2                  TRA     OALLOC_RET

      355     5339
      356     5340    2            CASE (%CLS_PTR_BLOCK_DESC, %CLS_PTR_FILE_NODE, %CLS_PTR_INTREE,

      357     5341    2                   %CLS_PTR_KEY, %CLS_PTR_LOCATION, %CLS_PTR_TEXTC);
      358     5342    2              PTR$->VD$POINTER.V$ = ADDR(NIL);

   5342  2 000535   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000536   000003 756100                    STQ     3,,PR0
         2 000537   000667 710000 2                  TRA     OALLOC_RET

      359     5343
      360     5344    2            CASE (%CLS_RECORD_SET);

      361     5345    2              PTR$->VD$RECORD_SET.MX_ENTRIES# = (NWORDS -

   5345  2 000540   200006 236100                    LDQ     PTR$,,AUTO
         2 000541   000003 036003                    ADLQ    3,DU
         2 000542   000022 772000                    QRL     18
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:42   
         2 000543   200006 235100                    LDA     PTR$,,AUTO
         2 000544   000022 771000                    ARL     18
         2 000545   200020 755100                    STA     I+2,,AUTO
         2 000546   200020 136100                    SBLQ    I+2,,AUTO
         2 000547   200021 756100                    STQ     I+3,,AUTO
         2 000550   200011 236100                    LDQ     NWORDS,,AUTO
         2 000551   200021 136100                    SBLQ    I+3,,AUTO
         2 000552   000006 506007                    DIV     6,DL
         2 000553   000000 620006                    EAX0    0,QL
         2 000554   000002 440100                    SXL0    2,,PR0

      362     5346    2                POFFW(ADDR(PTR$->VD$RECORD_SET.DESC), PTR$)) /
      363     5347    2                SIZEW(VD$RECORD_SET.DESC);
      364     5348    3              DO I = 0 TO (PTR$->VD$RECORD_SET.MX_ENTRIES# - 1);

   5348  2 000555   200016 450100                    STZ     I,,AUTO
         2 000556   000566 710000 2                  TRA     s:5350+1

      365     5349    3                 PTR$->VD$RECORD_SET.DESC.DATA$ (I) = ADDR(NIL);

   5349  2 000557   200016 236100                    LDQ     I,,AUTO
         2 000560   000006 402007                    MPY     6,DL
         2 000561   000000 620006                    EAX0    0,QL
         2 000562   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000563   200006 470500                    LDP0    PTR$,,AUTO
         2 000564   000007 756110                    STQ     7,X0,PR0

      366     5350    3                 END;

   5350  2 000565   200016 054100                    AOS     I,,AUTO
         2 000566   000002 236100                    LDQ     2,,PR0
         2 000567   000022 736000                    QLS     18
         2 000570   000022 732000                    QRS     18
         2 000571   200016 116100                    CMPQ    I,,AUTO
         2 000572   000557 605400 2                  TPNZ    s:5349
         2 000573   000667 710000 2                  TRA     OALLOC_RET

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:43   
      367     5351
      368     5352    2            CASE (%CLS_STREAM);

      369     5353    2              PTR$->VD$STREAM.PORT$ = ADDR(NIL);

   5353  2 000574   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000575   000001 756100                    STQ     1,,PR0
         2 000576   000667 710000 2                  TRA     OALLOC_RET

      370     5354
      371     5355    2            CASE (%CLS_STRUCTURE_SPEC);

      372     5356    2              PTR$->VD$STRUCTURE_SPEC.ACCESSOR$ = ADDR(NIL);

   5356  2 000577   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000600   000003 756100                    STQ     3,,PR0

      373     5357    2              PTR$->VD$STRUCTURE_SPEC.FIT$ = ADDR(NIL);

   5357  2 000601   000004 756100                    STQ     4,,PR0
         2 000602   000667 710000 2                  TRA     OALLOC_RET

      374     5358
      375     5359    2            CASE (%CLS_TABS);

      376     5360    2              PTR$->VD$TABS.FLINK$ = ADDR(NIL);

   5360  2 000603   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000604   000001 756100                    STQ     1,,PR0

      377     5361    2              PTR$->VD$TABS.MX_ENTRIES# = ((NWORDS * %NB_PER_WORD) -

   5361  2 000605   200006 236100                    LDQ     PTR$,,AUTO
         2 000606   000004 036000 3                  ADLQ    4
         2 000607   000020 772000                    QRL     16
         2 000610   200020 756100                    STQ     I+2,,AUTO
         2 000611   200006 236100                    LDQ     PTR$,,AUTO
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:44   
         2 000612   000020 772000                    QRL     16
         2 000613   200021 756100                    STQ     I+3,,AUTO
         2 000614   200020 236100                    LDQ     I+2,,AUTO
         2 000615   200021 136100                    SBLQ    I+3,,AUTO
         2 000616   200022 756100                    STQ     I+4,,AUTO
         2 000617   200011 336100                    LCQ     NWORDS,,AUTO
         2 000620   000002 736000                    QLS     2
         2 000621   200022 036100                    ADLQ    I+4,,AUTO
         2 000622   777777 620006                    EAX0    -1,QL
         2 000623   777777 660003                    ERX0    -1,DU
         2 000624   000002 440100                    SXL0    2,,PR0
         2 000625   000667 710000 2                  TRA     OALLOC_RET

      378     5362    2                POFFC(ADDR(PTR$->VD$TABS.STOPS#), PTR$)) /
      379     5363    2                LENGTHC(VD$TABS.STOPS# (0));
      380     5364
      381     5365    2            CASE (%CLS_WINDOW_BLOCK);

      382     5366    2              PTR$->VD$WINDOW_BLOCK.EDIT_BLOCK$ = ADDR(NIL);

   5366  2 000626   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000627   000003 756100                    STQ     3,,PR0

      383     5367    2              PTR$->VD$WINDOW_BLOCK.EVAL$ = ADDR(NIL);

   5367  2 000630   000004 756100                    STQ     4,,PR0
         2 000631   000667 710000 2                  TRA     OALLOC_RET

      384     5368
      385     5369    2            CASE (%CLS_WINDOW_SPEC);

      386     5370    2              PTR$->VD$WINDOW_SPEC.OPERAND.STREAM$ = ADDR(NIL);

   5370  2 000632   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000633   000010 756100                    STQ     8,,PR0

      387     5371    2              PTR$->VD$WINDOW_SPEC.OPERAND.INTREE$ = ADDR(NIL);
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:45   

   5371  2 000634   000011 756100                    STQ     9,,PR0

      388     5372    2              PTR$->VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$ = ADDR(NIL);

   5372  2 000635   000012 756100                    STQ     10,,PR0

      389     5373    2              PTR$->VD$WINDOW_SPEC.OPERAND.EVAL$ = ADDR(NIL);

   5373  2 000636   000013 756100                    STQ     11,,PR0

      390     5374    2              PTR$->VD$WINDOW_SPEC.RECORD_SET$ = ADDR(NIL);

   5374  2 000637   000016 756100                    STQ     14,,PR0

      391     5375    2              PTR$->VD$WINDOW_SPEC.SCREEN_UPDATED = %TRUE;

   5375  2 000640   100000 236003                    LDQ     32768,DU
         2 000641   000015 256100                    ORSQ    13,,PR0

      392     5376    2              PTR$->VD$WINDOW_SPEC.TABS$ = ADDR(NIL);

   5376  2 000642   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000643   000024 756100                    STQ     20,,PR0

      393     5377    2              PTR$->VD$WINDOW_SPEC.EOFMARK$ = ADDR(NIL);

   5377  2 000644   000025 756100                    STQ     21,,PR0

      394     5378    2              PTR$->VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$ = ADDR(NIL);

   5378  2 000645   000030 756100                    STQ     24,,PR0
         2 000646   000667 710000 2                  TRA     OALLOC_RET

      395     5379
      396     5380    2            CASE (%CLS_XLATE_LOCATIONS);

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:46   
      397     5381    2              PTR$->VD$XLATE_LOCATIONS.FLINK$ = ADDR(NIL);

   5381  2 000647   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000650   000002 756100                    STQ     2,,PR0

      398     5382    2              PTR$->VD$XLATE_LOCATIONS.MX_ENTRIES# = (NWORDS -

   5382  2 000651   200006 236100                    LDQ     PTR$,,AUTO
         2 000652   000017 036003                    ADLQ    15,DU
         2 000653   000022 772000                    QRL     18
         2 000654   200006 235100                    LDA     PTR$,,AUTO
         2 000655   000022 771000                    ARL     18
         2 000656   200020 755100                    STA     I+2,,AUTO
         2 000657   200020 136100                    SBLQ    I+2,,AUTO
         2 000660   200021 756100                    STQ     I+3,,AUTO
         2 000661   200011 236100                    LDQ     NWORDS,,AUTO
         2 000662   200021 136100                    SBLQ    I+3,,AUTO
         2 000663   000010 506007                    DIV     8,DL
         2 000664   000000 620006                    EAX0    0,QL
         2 000665   000001 440100                    SXL0    1,,PR0
         2 000666   000667 710000 2                  TRA     OALLOC_RET

      399     5383    2                POFFW(ADDR(PTR$->VD$XLATE_LOCATIONS.XLATES), PTR$)) /
      400     5384    2                SIZEW(VD$XLATE_LOCATIONS.XLATES);
      401     5385
      402     5386    2            CASE (ELSE);

      403     5387    2              ;       /* No linking/NILing for other objects */
      404     5388    2            END;

      405     5389
      406     5390
      407     5391    1   OALLOC_RET:                 /* Label here so can debug w/o listings */
      408     5392    1           RETURN;

   5392  2 000667   000000 702200 xent  OALLOC_RET   TSX2  ! X66_ARET

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:47   
      409     5393
      410     5394
      411     5395    1   ALLOCATE_FAILED:
      412     5396    2           IF MCB.ERR.CODE = %E$NOSPACE THEN DO;

   5396  2 000670   200010 470500       ALLOCATE_FA* LDP0    MCB$,,AUTO
         2 000671   000010 236100                    LDQ     8,,PR0
         2 000672   377770 376007                    ANQ     131064,DL
         2 000673   003120 116007                    CMPQ    1616,DL
         2 000674   000723 601000 2                  TNZ     s:5414

      413     5397    2              VBASE(GDS_RESULTS) = MCB.SEGMENT_BASE$;

   5397  2 000675   000002 236100                    LDQ     2,,PR0
         2 000676   000007 756000 1                  STQ     GDS_RESULTS+1

      414     5398    2              CALL M$GDS (FPT_GDS)

   5398  2 000677   000000 630400 1                  EPPR0   FPT_GDS
         2 000700   430001 713400                    CLIMB   alt,gds
         2 000701   400400 401760                    pmme    nvectors=2
         2 000702   000734 702000 2                  TSX2    GDS_FAILED

      415     5399    2                ALTRET (GDS_FAILED);
      416     5400    2              MCB.WKSZ = (VBOUND(GDS_RESULTS) + 1) / %NB_PER_WORD;

   5400  2 000703   000006 236000 1                  LDQ     GDS_RESULTS
         2 000704   000020 772000                    QRL     16
         2 000705   000001 036007                    ADLQ    1,DL
         2 000706   000002 772000                    QRL     2
         2 000707   200010 470500                    LDP0    MCB$,,AUTO
         2 000710   000004 756100                    STQ     4,,PR0

      417     5401
      418     5402    2              IF ADDR(MCB) = ADDR(VD_MCB_SMALL) THEN

   5402  2 000711   000001 236000 3                  LDQ     1
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:48   
         2 000712   200010 116100                    CMPQ    MCB$,,AUTO
         2 000713   000716 601000 2                  TNZ     s:5406

      419     5403                      %INCREMENT (INDX=%STG_EXPAND_SEG_SMALL);

   5404  2 000714   000047 054000 xsym               AOS     VD_6E+39
         2 000715   000722 710000 2                  TRA     s:5411

      420     5406    2              ELSE IF ADDR(MCB) = ADDR(VD_MCB_LARGE) THEN

   5406  2 000716   000000 236000 3                  LDQ     0
         2 000717   200010 116100                    CMPQ    MCB$,,AUTO
         2 000720   000722 601000 2                  TNZ     s:5411

      421     5407                         %INCREMENT (INDX=%STG_EXPAND_SEG_LARGE);

   5408  2 000721   000050 054000 xsym               AOS     VD_6E+40

      422     5410
      423     5411    2              GOTO OALLOC;

   5411  2 000722   000002 710000 2                  TRA     OALLOC

      424     5412    2              END;
      425     5413
      426     5414    1           ERR$HEAD.ERR.CODE# = %E$ALLOCATE_FAILED;

   5414  2 000723   000031 471400 xsym               LDP1    VD_6E+25
         2 000724   100002 236100                    LDQ     2,,PR1
         2 000725   000005 376000 3                  ANQ     5
         2 000726   000020 276007                    ORQ     16,DL
         2 000727   100002 756100                    STQ     2,,PR1

      427     5415    1           ERR$HEAD.FLAGLEV# = %FLV_FATAL;

   5415  2 000730   000004 220003                    LDX0    4,DU
         2 000731   000031 471400 xsym               LDP1    VD_6E+25
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:49   
         2 000732   100003 740100                    STX0    3,,PR1

      428     5416    1           ALTRETURN;

   5416  2 000733   000000 702200 xent               TSX2  ! X66_AALT

      429     5417
      430     5418
      431     5419    1   GDS_FAILED:
      432     5420    1           ERR$HEAD.ERR = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   5420  2 000734   000000 470400 xsym  GDS_FAILED   LDP0    B$TCB$
         2 000735   000000 471500                    LDP1    0,,PR0
         2 000736   100102 236100                    LDQ     66,,PR1
         2 000737   000031 473400 xsym               LDP3    VD_6E+25
         2 000740   300002 756100                    STQ     2,,PR3

      433     5421    1           ERR$HEAD.FLAGLEV# = %FLV_FATAL;

   5421  2 000741   000004 220003                    LDX0    4,DU
         2 000742   000031 471400 xsym               LDP1    VD_6E+25
         2 000743   100003 740100                    STX0    3,,PR1

      434     5422    1           ALTRETURN;

   5422  2 000744   000000 702200 xent               TSX2  ! X66_AALT
      435     5423
      436     5424    1   END VDG$OALLOC;
      437     5425        %EOD;

PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:50   
--  Include file information  --

   XUM_MACRO_C.:LIBRARY  is referenced.
   XU_PERR_C.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDG$OALLOC.
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:51   

 **** Variables and constants ****

  ****  Section 001  Data  VDG$OALLOC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(216)   r     1 FPT_GDS                    6-0-0/d VECT        r     1 GDS_RESULTS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CLASS                     4-0-0/w PTR         r     1 @PTR_PARAM$
     5-0-0/w PTR         r     1 @SIZE                     *0-0-0/w UBIN        r     1 CLASS
    16-0-0/w SBIN        r     1 I                          7-0-0/w UBIN        r     1 LEVEL_INDEX
    10-0-0/w PTR         r     1 MCB$                      12-0-0/w SBIN        r     1 NBYTES
    11-0-0/w SBIN        r     1 NWORDS                     6-0-0/w PTR         r     1 PTR$
    15-0-0/w PTR         r     1 PTR2$                     *0-0-0/w PTR         r     1 PTR_PARAM$
    13-0-0/w STRC        r     1 SEG_PTR                   13-0-0/w PTR         r     1 SEG_PTR$
    14-0-0/w STRC        r     1 SEG_PTR2                  14-0-0/w PTR         r     1 SEG_PTR2$
    *0-0-0/w UBIN        r     1 SIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC(22644) r     1 VD_6E
     0-0-0/w STRC(324)   r     1 VD_MCB_LARGE               0-0-0/w STRC(324)   r     1 VD_MCB_SMALL
     0-0-0/w STRC(72)    r     1 VD_OBJECTS(0:98)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:52   

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(180)   r     1 ERR$HEAD                   0-0-0/w STRC(324)   r     1 MCB
     0-0-0/w STRC        r     1 OBJECT$HEADER              0-0-0/c ASTR(0)     r     1 VAR_LEN_STRUCTURE
     0-0-0/w STRC(936)   r     1 VD$BLOCK_DESC              0-0-0/w ASTR(90)    r     1 VD$BUFFER
     0-0-0/w STRC(90)    r     1 VD$BUFFER_HEADER           0-0-0/w STRC(900)   r     1 VD$CMD_STREAM
     0-0-0/w STRC(576)   r     1 VD$DIR_NODE                0-0-0/w STRC(900)   r     1 VD$ENCODED_NODE
     0-0-0/w STRC(180)   r     1 VD$ERR                     0-0-0/w STRC(2124)  r     1 VD$EVAL
     0-0-0/w STRC(864)   r     1 VD$EVAL_PATTERN            0-0-0/w STRC(648)   r     1 VD$FILE_KEY
     0-0-0/w STRC(468)   r     1 VD$FILE_NODE               0-0-0/w STRC(36972) r     1 VD$FIT
     0-0-0/w STRC(216)   r     1 VD$IT_ADJUST               0-0-0/w STRC(1116)  r     1 VD$IT_BLOCK_EXPR
     0-0-0/w STRC(540)   r     1 VD$IT_COMMAND              0-0-0/w STRC(324)   r     1 VD$IT_OPERAND
     0-0-0/w STRC(216)   r     1 VD$IT_OPERATOR             0-0-0/w STRC(216)   r     1 VD$IT_SELECT
     0-0-0/w STRC(252)   r     1 VD$PATTERN                 0-0-0/w STRC(144)   r     1 VD$POINTER
     0-0-0/w STRC(1944)  r     1 VD$PORT                    0-0-0/w STRC(324)   r     1 VD$RECORD_SET
     0-0-0/w STRC(864)   r     1 VD$STREAM                  0-0-0/w STRC(81)    r     1 VD$STRING_HEADER
     0-0-0/w STRC(180)   r     1 VD$STRUCTURE_SPEC          0-0-0/w STRC(396)   r     1 VD$TABS
     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE            0-0-0/w STRC(180)   r     1 VD$WINDOW_BLOCK
     0-0-0/w STRC(900)   r     1 VD$WINDOW_SPEC             0-0-0/w STRC(828)   r     1 VD$XLATE_LOCATIONS


   Procedure VDG$OALLOC requires 485 words for executable code.
   Procedure VDG$OALLOC requires 20 words of local(AUTO) storage.
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:53   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:54   
          MINI XREF LISTING

ALLOCATE_FAILED
      5396**LABEL    5181--CALLALT
B$ALT.CODE
      5104**DCL      5104--REDEF    5105--REDEF    5105--REDEF
B$ALT.ERR
      5105**DCL      5420>>ASSIGN
B$ALT.ERR.ERR#
      5106**DCL      5106--REDEF
B$ALT.EVID
      5105**DCL      5105--REDEF    5105--REDEF
B$TCB.ALT$
      5100**DCL      5420>>ASSIGN
B$TCB$
      2773**DCL      5420>>ASSIGN
CLASS
      2764**DCL        97--PROC     5166>>IF       5166>>IF       5168<>CALL     5170>>ASSIGN   5174<>CALL
      5196>>ASSIGN   5198>>IF       5202>>IF       5207>>ASSIGN   5207>>ASSIGN   5215>>DOCASE
ERR$HEAD.ERR
      5155**DCL      5420<<ASSIGN
ERR$HEAD.ERR.CODE#
      5157**DCL      5414<<ASSIGN
ERR$HEAD.FLAGLEV#
      5160**DCL      5415<<ASSIGN   5421<<ASSIGN
FPT_GDS
      2871**DCL      5398<>CALL
FPT_GDS.V
      2871**DCL      2871--DCLINIT
GDS_FAILED
      5420**LABEL    5398--CALLALT
GDS_RESULTS
      2876**DCL      2871--DCLINIT  5397<<ASSIGN   5400>>ASSIGN
I
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:55   
      2893**DCL      5292<<DOINDEX  5293>>ASSIGN   5317<<DOINDEX  5318>>ASSIGN   5348<<DOINDEX  5349>>ASSIGN
LEVEL_INDEX
      2880**DCL      5335<<DOINDEX  5336>>ASSIGN   5337>>ASSIGN
M$GDS
      2507**DCL-ENT  5398--CALL
MCB
      2897**DCL      5181<>CALL     5402--IF       5406--IF
MCB.ADDRESS$
      2897**DCL      5182>>ASSIGN   5183>>ASSIGN
MCB.ERR.CODE
      2898**DCL      5396>>IF
MCB.SEGMENT_BASE$
      2897**DCL      5190>>ASSIGN   5397>>ASSIGN
MCB.SIZE
      2897**DCL      5180<<ASSIGN
MCB.WKSZ
      2897**DCL      5400<<ASSIGN
MCB$
      2881**DCL      2897--IMP-PTR  5177<<ASSIGN   5179<<ASSIGN   5180>>ASSIGN   5181>>CALL     5182>>ASSIGN
      5183>>ASSIGN   5190>>ASSIGN   5396>>IF       5397>>ASSIGN   5400>>ASSIGN   5402>>IF       5406>>IF
NBYTES
      2883**DCL      2901--IMP-SIZ  5194<<ASSIGN   5195>>ASSIGN   5200>>ASSIGN   5204>>ASSIGN
NWORDS
      2882**DCL      5170<<ASSIGN   5172<<ASSIGN   5173>>IF       5174<>CALL     5176>>IF       5180>>ASSIGN
      5194>>ASSIGN   5197>>ASSIGN   5314>>ASSIGN   5345>>ASSIGN   5361>>ASSIGN   5382>>ASSIGN
OALLOC
      5166**LABEL    5411--GOTO
OBJECT$HEADER.CLASS#
      2922**DCL      5196<<ASSIGN
OBJECT$HEADER.SIZE#
      2922**DCL      5197<<ASSIGN
PTR$
      2879**DCL      2900--IMP-PTR  2918--IMP-PTR  5182<<ASSIGN   5189>>ASSIGN   5195>>ASSIGN   5196>>ASSIGN
      5197>>ASSIGN   5199>>ASSIGN   5200>>ASSIGN   5203>>ASSIGN   5204>>ASSIGN   5217>>ASSIGN   5220>>ASSIGN
      5225>>ASSIGN   5226>>ASSIGN   5227>>ASSIGN   5228>>ASSIGN   5235>>ASSIGN   5236>>ASSIGN   5237>>ASSIGN
      5238>>ASSIGN   5239>>ASSIGN   5242>>ASSIGN   5245>>ASSIGN   5246>>ASSIGN   5248>>ASSIGN   5250>>ASSIGN
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:56   
      5251>>ASSIGN   5254>>ASSIGN   5255>>ASSIGN   5258>>ASSIGN   5259>>ASSIGN   5260>>ASSIGN   5261>>ASSIGN
      5262>>ASSIGN   5265>>ASSIGN   5266>>ASSIGN   5267>>ASSIGN   5268>>ASSIGN   5269>>ASSIGN   5272>>ASSIGN
      5273>>ASSIGN   5276>>ASSIGN   5277>>ASSIGN   5278>>ASSIGN   5279>>ASSIGN   5282>>ASSIGN   5283>>ASSIGN
      5284>>ASSIGN   5285>>ASSIGN   5286>>ASSIGN   5289>>ASSIGN   5290>>ASSIGN   5291>>ASSIGN   5293>>ASSIGN
      5297>>ASSIGN   5298>>ASSIGN   5299>>ASSIGN   5302>>ASSIGN   5303>>ASSIGN   5304>>ASSIGN   5305>>ASSIGN
      5308>>ASSIGN   5309>>ASSIGN   5310>>ASSIGN   5311>>ASSIGN   5314>>ASSIGN   5314>>ASSIGN   5314>>ASSIGN
      5317>>DOINDEX  5318>>ASSIGN   5322>>ASSIGN   5323>>ASSIGN   5326>>ASSIGN   5327>>ASSIGN   5329>>ASSIGN
      5331>>ASSIGN   5332>>ASSIGN   5333>>ASSIGN   5334>>ASSIGN   5336>>ASSIGN   5337>>ASSIGN   5342>>ASSIGN
      5345>>ASSIGN   5345>>ASSIGN   5345>>ASSIGN   5348>>DOINDEX  5349>>ASSIGN   5353>>ASSIGN   5356>>ASSIGN
      5357>>ASSIGN   5360>>ASSIGN   5361>>ASSIGN   5361>>ASSIGN   5361>>ASSIGN   5366>>ASSIGN   5367>>ASSIGN
      5370>>ASSIGN   5371>>ASSIGN   5372>>ASSIGN   5373>>ASSIGN   5374>>ASSIGN   5375>>ASSIGN   5376>>ASSIGN
      5377>>ASSIGN   5378>>ASSIGN   5381>>ASSIGN   5382>>ASSIGN   5382>>ASSIGN   5382>>ASSIGN
PTR2$
      2892**DCL      5220<<ASSIGN   5221>>ASSIGN   5222>>ASSIGN
PTR_PARAM$
      2765**DCL        97--PROC     5183<<ASSIGN
SEG_PTR.SEGID
      2887**DCL      5191>>IF
SEG_PTR$
      2884**DCL      2885--REDEF    5189<<ASSIGN
SEG_PTR2.SEGID
      2891**DCL      5191>>IF
SEG_PTR2$
      2888**DCL      2889--REDEF    5190<<ASSIGN
SIZE
      2766**DCL        97--PROC     5169--IF       5172>>ASSIGN
VAR_LEN_STRUCTURE
      2900**DCL      5195<<ASSIGN
VD$BLOCK_DESC.OBJECT.CLASS#
      3028**DCL      5221<<ASSIGN
VD$BLOCK_DESC.OPTIONS.STRUCTURE$
      3125**DCL      5217<<ASSIGN   5222<<ASSIGN
VD$BUFFER.BYTES
      3196**DCL      5220--ASSIGN
VD$BUFFER.FLINK$
      3194**DCL      5203<<ASSIGN
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:57   
VD$BUFFER.LENGTH#
      3194**DCL      3196--IMP-SIZ  5204<<ASSIGN
VD$BUFFER_HEADER
      2968**DCL      5204--ASSIGN
VD$CMD_STREAM.BLINK$
      3235**DCL      5225<<ASSIGN
VD$CMD_STREAM.INTREE$
      3236**DCL      5228<<ASSIGN
VD$CMD_STREAM.RECORD$
      3236**DCL      5227<<ASSIGN
VD$DIR_NODE.BLINK$
      3274**DCL      5235<<ASSIGN
VD$DIR_NODE.FLINK$
      3274**DCL      5236<<ASSIGN
VD$DIR_NODE.HEAD$
      3275**DCL      5238<<ASSIGN
VD$DIR_NODE.STRUCTURE$
      3275**DCL      5237<<ASSIGN
VD$DIR_NODE.TAIL$
      3275**DCL      5239<<ASSIGN
VD$ENCODED_NODE.DESC.DATA$
      3396**DCL      5242<<ASSIGN
VD$ERR.CMDLINE_INDEX#
      3449**DCL      5246<<ASSIGN
VD$ERR.FLINK$
      3433**DCL      5245<<ASSIGN   5250<<ASSIGN
VD$EVAL.BLINK$
      3486**DCL      5254<<ASSIGN
VD$EVAL.NODE$
      3694**DCL      5255<<ASSIGN
VD$EVAL_PATTERN.BLINK$
      4325**DCL      5322<<ASSIGN
VD$EVAL_PATTERN.PATTERN$
      4395**DCL      5323<<ASSIGN
VD$FILE_KEY.FLINK$
      3740**DCL      5258<<ASSIGN
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:58   
VD$FILE_KEY.PASS
      3743**DCL      5262<<ASSIGN
VD$FILE_KEY.PSN
      3743**DCL      5261<<ASSIGN
VD$FILE_KEY.RES
      3742**DCL      5260<<ASSIGN
VD$FILE_KEY.UNIQUE.ACCT
      3741**DCL      5259<<ASSIGN
VD$FILE_NODE.BLINK$
      3780**DCL      5265<<ASSIGN
VD$FILE_NODE.DESC.DATA$
      3835**DCL      5267<<ASSIGN
VD$FILE_NODE.FLINK$
      3780**DCL      5266<<ASSIGN
VD$FILE_NODE.HEAD$
      3837**DCL      5268<<ASSIGN
VD$FILE_NODE.TAIL$
      3837**DCL      5269<<ASSIGN
VD$FIT.CODE2$
      3873**DCL      5272<<ASSIGN
VD$FIT.CODE3$
      3873**DCL      5273<<ASSIGN
VD$IT_ADJUST.FLINK$
      3909**DCL      5277<<ASSIGN
VD$IT_ADJUST.MOVEMENTS$
      3909**DCL      5278<<ASSIGN
VD$IT_ADJUST.MOVEMENTS_TAIL$
      3910**DCL      5279<<ASSIGN
VD$IT_ADJUST.PARENT$
      3909**DCL      5276<<ASSIGN
VD$IT_BLOCK_EXPR.FLINK$
      3946**DCL      5283<<ASSIGN
VD$IT_BLOCK_EXPR.OPTIONS.STRUCTURE$
      4043**DCL      5284<<ASSIGN
VD$IT_BLOCK_EXPR.PARENT$
      3946**DCL      5282<<ASSIGN
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:59   
VD$IT_BLOCK_EXPR.SELECTS$
      4060**DCL      5285<<ASSIGN
VD$IT_BLOCK_EXPR.SELECTS_TAIL$
      4060**DCL      5286<<ASSIGN
VD$IT_COMMAND.FLINK$
      4096**DCL      5290<<ASSIGN
VD$IT_COMMAND.PARAM$
      4097**DCL      5293<<ASSIGN
VD$IT_COMMAND.PARENT$
      4096**DCL      5289<<ASSIGN
VD$IT_COMMAND.PT_BLOCK_EXPR$
      4097**DCL      5291<<ASSIGN
VD$IT_OPERAND.FLINK$
      4134**DCL      5298<<ASSIGN
VD$IT_OPERAND.PARAM$
      4164**DCL      5299<<ASSIGN
VD$IT_OPERAND.PARENT$
      4134**DCL      5297<<ASSIGN
VD$IT_OPERATOR.FLINK$
      4200**DCL      5303<<ASSIGN
VD$IT_OPERATOR.OPERAND$
      4200**DCL      5304<<ASSIGN
VD$IT_OPERATOR.PARENT$
      4200**DCL      5302<<ASSIGN
VD$IT_OPERATOR.R_OPERAND$
      4201**DCL      5305<<ASSIGN
VD$IT_SELECT.ADJUSTS$
      4238**DCL      5310<<ASSIGN
VD$IT_SELECT.ADJUSTS_TAIL$
      4238**DCL      5311<<ASSIGN
VD$IT_SELECT.FLINK$
      4237**DCL      5309<<ASSIGN
VD$IT_SELECT.PARENT$
      4237**DCL      5308<<ASSIGN
VD$PATTERN.ENTRIES
      4285**DCL      5314--ASSIGN   5314--ASSIGN
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:60   
VD$PATTERN.ENTRIES.MATCH$
      4288**DCL      5318<<ASSIGN
VD$PATTERN.MX_ENTRIES#
      4274**DCL      5314<<ASSIGN   5317>>DOINDEX
VD$POINTER.V$
      4440**DCL      5342<<ASSIGN
VD$PORT.BLINK$
      4477**DCL      5327<<ASSIGN
VD$PORT.FIT$
      4478**DCL      5333<<ASSIGN
VD$PORT.FLINK$
      4477**DCL      5326<<ASSIGN   5331<<ASSIGN
VD$PORT.LEVEL.DATA$
      4538**DCL      5336<<ASSIGN
VD$PORT.LEVEL.INTERNAL$
      4538**DCL      5337<<ASSIGN
VD$PORT.STRUCTURE$
      4479**DCL      5334<<ASSIGN
VD$RECORD_SET.DESC
      4586**DCL      5345--ASSIGN   5345--ASSIGN
VD$RECORD_SET.DESC.DATA$
      4616**DCL      5349<<ASSIGN
VD$RECORD_SET.MX_ENTRIES#
      4575**DCL      5345<<ASSIGN   5348>>DOINDEX
VD$STREAM.PORT$
      4653**DCL      5353<<ASSIGN
VD$STRING_HEADER
      2932**DCL      5200--ASSIGN
VD$STRUCTURE_SPEC.ACCESSOR$
      4759**DCL      5356<<ASSIGN
VD$STRUCTURE_SPEC.FIT$
      4759**DCL      5357<<ASSIGN
VD$TABS.FLINK$
      4796**DCL      5360<<ASSIGN
VD$TABS.MX_ENTRIES#
      4796**DCL      5361<<ASSIGN
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:61   
VD$TABS.STOPS#
      4797**DCL      5361--ASSIGN   5361--ASSIGN
VD$TEXTC_REMOTE.FLINK$
      4853**DCL      5199<<ASSIGN
VD$TEXTC_REMOTE.LENGTH#
      4853**DCL      4855--IMP-SIZ  5200<<ASSIGN
VD$WINDOW_BLOCK.EDIT_BLOCK$
      4894**DCL      5366<<ASSIGN
VD$WINDOW_BLOCK.EVAL$
      4894**DCL      5367<<ASSIGN
VD$WINDOW_SPEC.EOFMARK$
      4959**DCL      5377<<ASSIGN
VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$
      4960**DCL      5378<<ASSIGN
VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$
      4946**DCL      5372<<ASSIGN
VD$WINDOW_SPEC.OPERAND.EVAL$
      4946**DCL      5373<<ASSIGN
VD$WINDOW_SPEC.OPERAND.INTREE$
      4946**DCL      5371<<ASSIGN
VD$WINDOW_SPEC.OPERAND.STREAM$
      4946**DCL      5370<<ASSIGN
VD$WINDOW_SPEC.RECORD_SET$
      4949**DCL      5374<<ASSIGN
VD$WINDOW_SPEC.SCREEN_UPDATED
      4949**DCL      5375<<ASSIGN
VD$WINDOW_SPEC.TABS$
      4958**DCL      5376<<ASSIGN
VD$XLATE_LOCATIONS.FLINK$
      4996**DCL      5381<<ASSIGN
VD$XLATE_LOCATIONS.MX_ENTRIES#
      4996**DCL      5382<<ASSIGN
VD$XLATE_LOCATIONS.XLATES
      5051**DCL      5382--ASSIGN   5382--ASSIGN
VDG$ESCREECH
      2770**DCL-ENT  5168--CALL     5174--CALL     5192--CALL
PL6.E3A0      #001=VDG$OALLOC File=VDG$OBJECTS.:VDA5TSI                          FRI 07/04/97 11:20 Page:62   
VD_6E.CMD_STREAM$
      2805**DCL      5225>>ASSIGN   5226<<ASSIGN
VD_6E.ERR_HEAD$
      2806**DCL      5118--IMP-PTR  5247>>IF       5248<<ASSIGN   5414>>ASSIGN   5415>>ASSIGN   5420>>ASSIGN
      5421>>ASSIGN
VD_6E.ERR_TAIL$
      2806**DCL      5250>>ASSIGN   5251<<ASSIGN
VD_6E.PORT_HEAD$
      2807**DCL      5329<<ASSIGN
VD_6E.PORT_TAIL$
      2807**DCL      5327>>ASSIGN   5328>>IF       5331>>ASSIGN   5332<<ASSIGN
VD_6E.STATS#
      2807**DCL      5404<<ASSIGN   5404>>ASSIGN   5408<<ASSIGN   5408>>ASSIGN
VD_6E.STATS_OBJECTS#
      2807**DCL      5207<<ASSIGN   5207>>ASSIGN
VD_MCB_LARGE
      2851**DCL      5177--ASSIGN   5406--IF
VD_MCB_SMALL
      2855**DCL      5179--ASSIGN   5402--IF
VD_OBJECTS.BUF
      2821**DCL      5202>>IF
VD_OBJECTS.SIZE
      2817**DCL      5166>>IF       5170>>ASSIGN
VD_OBJECTS.STR
      2831**DCL      5198>>IF
X$ALLOCATE
      2769**DCL-ENT  5181--CALL

PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:63   
      438        1        /*T***********************************************************/
      439        2        /*T*                                                         */
      440        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      441        4        /*T*                                                         */
      442        5        /*T***********************************************************/
      443        6
      444        7        /*D* NAME: VDG$OALLOC_DCB
      445        8            PARAMETERS:
      446        9                DCB# - Uninitialized UBIN HALF HALIGNED.
      447       10            INPUT:
      448       11                VD_DCBS must contain info about the currently allocated
      449       12                    DCBs.
      450       13            OUTPUT:
      451       14                DCB# will contain the number of a closed DCB.  This may
      452       15                    have been pulled from VD_DCBS (and so may still be
      453       16                    assigned to a file or device), or may be a newly-
      454       17                    allocated DCB.
      455       18            DESCRIPTION:
      456       19                See if there are any free DCBs in VD_DCBs; if so, pull one
      457       20                from the list.  Else call M$GETDCB to allocate a new DCB.
      458       21        */
      459       22
      460       23        VDG$OALLOC_DCB: PROC (DCB#) ALTRET;
      461       24
      462       25
      463       26        %INCLUDE VD_MACROS_M;
      464     2241        %INCLUDE CP_6;
      465     2322
      466     2323    1   DCL DCB# UBIN HALF HALIGNED;
      467     2324
      468     2325
      469     2326    1   DCL B$TCB$ PTR SYMREF;
      470     2327        %VD_6E (STCLASS=SYMREF);
      471     2363        %VD$DCBS (NAME=VD_DCBS, STCLASS=SYMREF);
      472     2378
      473     2379
      474     2380        %FPT_GETDCB (DCBNAME=DCB_NAME);
PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:64   
      475     2395    1   DCL 1 DCB_NAME STATIC,
      476     2396    1         2 * UBIN BYTE CALIGNED INIT(%(LENGTHC(CHR_DCB_PREFIX)+2)),
      477     2397    1         2 * CHAR(0) CALIGNED INIT(%CHR_DCB_PREFIX),
      478     2398    1         2 NUM CHAR(2) CALIGNED;
      479     2399
      480     2400
      481     2401        %VD$ERR (NAME=ERR$HEAD, STCLASS="BASED(VD_6E.ERR_HEAD$)");
      482     2454        %B$TCB (NAME=B$TCB, STCLASS="BASED(B$TCB$)");
      483     2457        %B$ALT;
      484     2465
      485     2466
      486     2467
      487     2468    2           IF VD_DCBS.N_FREE# <= 0 THEN DO;
      488     2469    2              CALL BINCHAR (DCB_NAME.NUM, VD_DCBS.N_DYNAMIC#);
      489     2470    2              FPT_GETDCB.DCBNUM_ = VECTOR(DCB#);
      490     2471    2              CALL M$GETDCB (FPT_GETDCB)
      491     2472    2                ALTRET (GETDCB_FAILED);
      492     2473    2              VD_DCBS.N_DYNAMIC# = VD_DCBS.N_DYNAMIC# + 1;
      493     2474    2              END;
      494     2475    2           ELSE DO;
      495     2476    2              VD_DCBS.N_FREE# = VD_DCBS.N_FREE# - 1;
      496     2477    2              DCB# = VD_DCBS.FREE_DCB# (VD_DCBS.N_FREE#);
      497     2478    2              END;
      498     2479
      499     2480    1           RETURN;
      500     2481
      501     2482
      502     2483
      503     2484    1   GETDCB_FAILED:
      504     2485    1           ERR$HEAD.ERR = B$TCB.ALT$->B$ALT.ERR;
      505     2486    1           ERR$HEAD.FLAGLEV# = %FLV_FATAL;
      506     2487    1           ALTRETURN;
      507     2488
      508     2489    1   END VDG$OALLOC_DCB;
      509     2490        %EOD;

PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:65   
--  Include file information  --

   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDG$OALLOC_DCB.

   Procedure VDG$OALLOC_DCB requires 38 words for executable code.
   Procedure VDG$OALLOC_DCB requires 4 words of local(AUTO) storage.

PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:66   

 Object Unit name= VDG$OALLOC_DCB                             File name= VDG$OBJECTS.:VDA5TOU
 UTS= JUL 04 '97 11:21:13.88 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    10     12  VDG$OALLOC_DCB
    2   Proc  even  none    38     46  VDG$OALLOC_DCB

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  VDG$OALLOC_DCB

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                VD_6E
     VD_DCBS
PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:67   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:68   


      438        1        /*T***********************************************************/
      439        2        /*T*                                                         */
      440        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      441        4        /*T*                                                         */
      442        5        /*T***********************************************************/
      443        6
      444        7        /*D* NAME: VDG$OALLOC_DCB
      445        8            PARAMETERS:
      446        9                DCB# - Uninitialized UBIN HALF HALIGNED.
      447       10            INPUT:
      448       11                VD_DCBS must contain info about the currently allocated
      449       12                    DCBs.
      450       13            OUTPUT:
      451       14                DCB# will contain the number of a closed DCB.  This may
      452       15                    have been pulled from VD_DCBS (and so may still be
      453       16                    assigned to a file or device), or may be a newly-
      454       17                    allocated DCB.
      455       18            DESCRIPTION:
      456       19                See if there are any free DCBs in VD_DCBs; if so, pull one
      457       20                from the list.  Else call M$GETDCB to allocate a new DCB.
      458       21        */
      459       22
      460       23        VDG$OALLOC_DCB: PROC (DCB#) ALTRET;

     23  2 000000   000000 700200 xent  VDG$OALLOC_* TSX0  ! X66_AUTO_1
         2 000001   000004 000001                    ZERO    4,1

      461       24
      462       25
      463       26        %INCLUDE VD_MACROS_M;
      464     2241        %INCLUDE CP_6;
      465     2322
      466     2323    1   DCL DCB# UBIN HALF HALIGNED;
      467     2324
      468     2325
      469     2326    1   DCL B$TCB$ PTR SYMREF;
PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:69   
      470     2327        %VD_6E (STCLASS=SYMREF);
      471     2363        %VD$DCBS (NAME=VD_DCBS, STCLASS=SYMREF);
      472     2378
      473     2379
      474     2380        %FPT_GETDCB (DCBNAME=DCB_NAME);
      475     2395    1   DCL 1 DCB_NAME STATIC,
      476     2396    1         2 * UBIN BYTE CALIGNED INIT(%(LENGTHC(CHR_DCB_PREFIX)+2)),
      477     2397    1         2 * CHAR(0) CALIGNED INIT(%CHR_DCB_PREFIX),
      478     2398    1         2 NUM CHAR(2) CALIGNED;
      479     2399
      480     2400
      481     2401        %VD$ERR (NAME=ERR$HEAD, STCLASS="BASED(VD_6E.ERR_HEAD$)");
      482     2454        %B$TCB (NAME=B$TCB, STCLASS="BASED(B$TCB$)");
      483     2457        %B$ALT;
      484     2465
      485     2466
      486     2467
      487     2468    2           IF VD_DCBS.N_FREE# <= 0 THEN DO;

   2468  2 000002   000000 720000 xsym               LXL0    VD_DCBS
         2 000003   000022 605400 2                  TPNZ    s:2476

      488     2469    2              CALL BINCHAR (DCB_NAME.NUM, VD_DCBS.N_DYNAMIC#);

   2469  2 000004   000000 301400                    BTD
         2 000005   000000 000002 xsym               NDSC9   VD_DCBS                  cn=0,s=lsgnf,sf=0,n=2
         2 000006   000011 230002 1                  NDSC9   DCB_NAME+1               cn=1,s=nosgn,sf=0,n=2

      489     2470    2              FPT_GETDCB.DCBNUM_ = VECTOR(DCB#);

   2470  2 000007   377640 235007                    LDA     130976,DL
         2 000010   200003 236100                    LDQ     @DCB#,,AUTO
         2 000011   000004 757000 1                  STAQ    FPT_GETDCB+4

      490     2471    2              CALL M$GETDCB (FPT_GETDCB)

   2471  2 000012   000000 630400 1                  EPPR0   FPT_GETDCB
PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:70   
         2 000013   460002 713400                    CLIMB   alt,+24578
         2 000014   401000 401760                    pmme    nvectors=3
         2 000015   000035 702000 2                  TSX2    GETDCB_FAILED

      491     2472    2                ALTRET (GETDCB_FAILED);
      492     2473    2              VD_DCBS.N_DYNAMIC# = VD_DCBS.N_DYNAMIC# + 1;

   2473  2 000016   000000 220000 xsym               LDX0    VD_DCBS
         2 000017   000001 621010                    EAX1    1,X0
         2 000020   000000 741000 xsym               STX1    VD_DCBS

      493     2474    2              END;

   2474  2 000021   000034 710000 2                  TRA     s:2480

      494     2475    2           ELSE DO;

      495     2476    2              VD_DCBS.N_FREE# = VD_DCBS.N_FREE# - 1;

   2476  2 000022   777777 621010                    EAX1    -1,X0
         2 000023   000000 441000 xsym               SXL1    VD_DCBS

      496     2477    2              DCB# = VD_DCBS.FREE_DCB# (VD_DCBS.N_FREE#);

   2477  2 000024   000000 236000 xsym               LDQ     VD_DCBS
         2 000025   000022 736000                    QLS     18
         2 000026   000022 732000                    QRS     18
         2 000027   000001 736000                    QLS     1
         2 000030   200003 470500                    LDP0    @DCB#,,AUTO
         2 000031   000100 100406                    MLR     fill='000'O
         2 000032   000001 000002 xsym               ADSC9   VD_DCBS+1,Q              cn=0,n=2
         2 000033   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

      497     2478    2              END;

      498     2479
      499     2480    1           RETURN;
PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:71   

   2480  2 000034   000000 702200 xent               TSX2  ! X66_ARET

      500     2481
      501     2482
      502     2483
      503     2484    1   GETDCB_FAILED:
      504     2485    1           ERR$HEAD.ERR = B$TCB.ALT$->B$ALT.ERR;

   2485  2 000035   000000 470400 xsym  GETDCB_FAIL* LDP0    B$TCB$
         2 000036   000000 471500                    LDP1    0,,PR0
         2 000037   100102 236100                    LDQ     66,,PR1
         2 000040   000031 473400 xsym               LDP3    VD_6E+25
         2 000041   300002 756100                    STQ     2,,PR3

      505     2486    1           ERR$HEAD.FLAGLEV# = %FLV_FATAL;

   2486  2 000042   000004 220003                    LDX0    4,DU
         2 000043   000031 471400 xsym               LDP1    VD_6E+25
         2 000044   100003 740100                    STX0    3,,PR1

      506     2487    1           ALTRETURN;

   2487  2 000045   000000 702200 xent               TSX2  ! X66_AALT
      507     2488
      508     2489    1   END VDG$OALLOC_DCB;
      509     2490        %EOD;

PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:72   
--  Include file information  --

   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDG$OALLOC_DCB.
PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:73   

 **** Variables and constants ****

  ****  Section 001  Data  VDG$OALLOC_DCB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/c STRC(63)    r     1 DCB_NAME                   0-0-0/d STRC(288)   r     1 FPT_GETDCB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DCB#                     *0-0-0/h UBIN(18)    r     1 DCB#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC(22644) r     1 VD_6E
     0-0-0/w STRC(72)    r     1 VD_DCBS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(180)   r     1 ERR$HEAD


   Procedure VDG$OALLOC_DCB requires 38 words for executable code.
   Procedure VDG$OALLOC_DCB requires 4 words of local(AUTO) storage.
PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:74   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:75   
          MINI XREF LISTING

B$ALT.CODE
      2459**DCL      2459--REDEF    2460--REDEF    2460--REDEF
B$ALT.ERR
      2460**DCL      2485>>ASSIGN
B$ALT.ERR.ERR#
      2461**DCL      2461--REDEF
B$ALT.EVID
      2460**DCL      2460--REDEF    2460--REDEF
B$TCB.ALT$
      2455**DCL      2485>>ASSIGN
B$TCB$
      2326**DCL      2455--IMP-PTR  2485>>ASSIGN
DCB#
      2323**DCL        23--PROC     2470--ASSIGN   2477<<ASSIGN
DCB_NAME
      2395**DCL      2391--DCLINIT
DCB_NAME.NUM
      2398**DCL      2469<<CALLBLT
ERR$HEAD.ERR
      2446**DCL      2485<<ASSIGN
ERR$HEAD.FLAGLEV#
      2451**DCL      2486<<ASSIGN
FPT_GETDCB
      2391**DCL      2471<>CALL
FPT_GETDCB.DCBNUM_
      2391**DCL      2470<<ASSIGN
FPT_GETDCB.V
      2392**DCL      2391--DCLINIT
GETDCB_FAILED
      2485**LABEL    2471--CALLALT
M$GETDCB
      2256**DCL-ENT  2471--CALL
PL6.E3A0      #002=VDG$OALLOC_DCB File=VDG$OBJECTS.:VDA5TSI                      FRI 07/04/97 11:21 Page:76   
VD_6E.ERR_HEAD$
      2359**DCL      2409--IMP-PTR  2485>>ASSIGN   2486>>ASSIGN
VD_DCBS.FREE_DCB#
      2375**DCL      2477>>ASSIGN
VD_DCBS.N_DYNAMIC#
      2375**DCL      2469>>CALLBLT  2473<<ASSIGN   2473>>ASSIGN
VD_DCBS.N_FREE#
      2375**DCL      2468>>IF       2476<<ASSIGN   2476>>ASSIGN   2477>>ASSIGN

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:77   
      510        1        /*T***********************************************************/
      511        2        /*T*                                                         */
      512        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      513        4        /*T*                                                         */
      514        5        /*T***********************************************************/
      515        6
      516        7        /*D* NAME: VDG$OCOPY
      517        8            PARAMETERS:
      518        9                ORIGINAL - Actual VD$OBJECT_HEADER (or any sub- or super-part
      519       10                    thereof) in object to make new copy of.
      520       11                    NOTE:  During initialization, we OCOPY "objects" which
      521       12                        actually reside in static or constant storage.  These
      522       13                        "objects" have .OBJECT.SIZE# and .LENGTH# values of
      523       14                        0; instead, the fixed-length of these structures
      524       15                        should be used (based on their object class, which
      525       16                        is accurate) and legal .SIZE#s and .LENGTH#s should
      526       17                        be stored in the new copy of the object.  To
      527       18                        determine if ORIGINAL is one of these static or
      528       19                        constant "objects", test if:
      529       20                            (1) ORIGINAL.OBJECT.SIZE# is 0 or (for string
      530       21                                    and buffer objects) ORIGINAL.LENGTH# is 0;
      531       22                        and (2) ORIGINAL.OBJECT.CLASS# is neither
      532       23                                    %CLS_TEXTC_REMOTE nor %CLS_BUFFER.
      533       24                        Note that we may normally be called with a 0-length
      534       25                        string or buffer to copy; however, this will only
      535       26                        happen when ORIGINAL.OBJECT.CLASS# is either
      536       27                        %CLS_TEXTC_REMOTE or %CLS_BUFFER.
      537       28                NEW$ - Uninitialized ptr.
      538       29            INPUT:
      539       30                None.
      540       31            OUTPUT:
      541       32                NEW$ will contain a pointer to the new copy of the object.
      542       33                Pointers within the object pointed-to by NEW$ which themselves point
      543       34                to objects will be initialized with pointers to new copies of those
      544       35                objects, with the following exceptions:
      545       36                    o Objects pointed-to by ORIGINAL but which ORIGINAL doesn't
      546       37                        "own" (ie, ORIGINAL doesn't have the primary pointer to the
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:78   
      547       38                        object and isn't responsible for freeing it when done with it)
      548       39                        will not be copied, but NEW$'s object will contain a copy
      549       40                        of the pointer from ORIGINAL.
      550       41                    o For most object classes, if they have a .BLINK$ pointer,
      551       42                        it will be NIL in the NEW$ copy of the object.
      552       43                        EXCEPTION:  %CLS_EVAL objects will have their .BLINK$s
      553       44                        copied.
      554       45                        NOTE:  If ORIGINAL has a .FLINK$ pointer, NEW$'s object will
      555       46                        contain a pointer to a new copy of the FLINK$'d object.
      556       47                    o If an object class has a .PARENT$ pointer, it will be NIL
      557       48                        in the NEW$ copy of the object.
      558       49                    o If an object class points to a VD$STREAM or VD$RECORD_SET, the
      559       50                        pointer will be NIL in the NEW$ copy of the object.
      560       51            DESCRIPTION:
      561       52                Calls VDG$OALLOC to allocate a new object of some class,
      562       53                then fills in the new object with the original one.
      563       54                Certain pointers within the original object point to
      564       55                objects which themselves must be OCOPY'ed by calling
      565       56                VDG$OCOPY recursively.
      566       57        */
      567       58
      568       59        VDG$OCOPY: PROC (ORIGINAL, NEW_PARAM$) ALTRET;
      569       60
      570       61
      571       62        %INCLUDE VD_MACROS_M;
      572     2277
      573     2278
      574     2279        %VD$OBJECT_HEADER (NAME=ORIGINAL, STCLASS=PARAM);
      575     2301    1   DCL NEW_PARAM$ PTR PARAM;
      576     2302
      577     2303
      578     2304    1   DCL VDG$OALLOC         ENTRY (3) ALTRET;
      579     2305    1   DCL VDG$OCOPY_RANGE    ENTRY (2) ALTRET;
      580     2306    1   DCL VDG$OCOPY_LOCATION ENTRY (2) ALTRET;
      581     2307    1   DCL VDG$ESCREECH       ENTRY (3);
      582     2308
      583     2309
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:79   
      584     2310        %VD_OBJECTS (NAME=VD_OBJECTS, STCLASS=SYMREF);
      585     2350
      586     2351
      587     2352    1   DCL ORIGINAL$ PTR;
      588     2353    1   DCL NEW$ PTR;
      589     2354    1   DCL ORIGINAL_CLASS SBIN;
      590     2355    1   DCL OBJECT_LENGTH UBIN;
      591     2356    1   DCL NBYTES UBIN;
      592     2357    1   DCL N_ENTRIES SBIN;
      593     2358    1   DCL PTR$ PTR;
      594     2359    1   DCL NEW_PTR$ PTR;
      595     2360    1   DCL I SBIN;
      596     2361
      597     2362
      598     2363    1   DCL VARIABLE$OBJECT CHAR(NBYTES) BASED;
      599     2364        %VD$INTREE_NODE (STCLASS="BASED(ORIGINAL$)");
      600     2400        %VD$BLOCK_DESC (STCLASS="BASED(ORIGINAL$)");
      601     2547        %VD$BUFFER (STCLASS="BASED(ORIGINAL$)");
      602     2605        %VD$BUFFER_HEADER (STCLASS="BASED(ORIGINAL$)");
      603     2641        %VD$ENCODED_NODE (STCLASS="BASED(ORIGINAL$)");
      604     2762        %VD$EVAL (STCLASS="BASED(ORIGINAL$)");
      605     3007        %VD$EVAL_PATTERN (STCLASS="BASED(ORIGINAL$)");
      606     3114        %VD$FILE_KEY (STCLASS="BASED(ORIGINAL$)");
      607     3163        %VD$FILE_NODE (STCLASS="BASED(ORIGINAL$)");
      608     3256        %VD$FIT (STCLASS="BASED(ORIGINAL$)");
      609     3292        %VD$IT_ADJUST (STCLASS="BASED(ORIGINAL$)");
      610     3329        %VD$IT_BLOCK_EXPR (STCLASS="BASED(ORIGINAL$)");
      611     3479        %VD$IT_COMMAND (STCLASS="BASED(ORIGINAL$)");
      612     3517        %VD$IT_OPERAND (STCLASS="BASED(ORIGINAL$)");
      613     3583        %VD$IT_OPERATOR (STCLASS="BASED(ORIGINAL$)");
      614     3620        %VD$IT_SELECT (STCLASS="BASED(ORIGINAL$)");
      615     3657        %VD$OBJECT_HEADER (STCLASS="BASED(ORIGINAL$)");
      616     3679        %VD$PATTERN (STCLASS="BASED(ORIGINAL$)");
      617     3730        %VD$RECORD_SET (STCLASS="BASED(ORIGINAL$)");
      618     3808        %VD$STRING_HEADER (STCLASS="BASED(ORIGINAL$)");
      619     3844        %VD$STRUCTURE_SPEC (STCLASS="BASED(ORIGINAL$)");
      620     3881        %VD$TABS (STCLASS="BASED(ORIGINAL$)");
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:80   
      621     3918        %VD$TEXTC_REMOTE (STCLASS="BASED(ORIGINAL$)");
      622     3979        %VD$WINDOW_BLOCK (STCLASS="BASED(ORIGINAL$)");
      623     4016        %VD$WINDOW_SPEC (STCLASS="BASED(ORIGINAL$)");
      624     4082
      625     4083
      626     4084
      627     4085    1           ORIGINAL$ = ADDR(ORIGINAL);
      628     4086    1           ORIGINAL_CLASS = ORIGINAL.CLASS#;
      629     4087    1           IF ORIGINAL_CLASS >= %CLS_MX
      630     4088    2             OR VD_OBJECTS.SIZE (ORIGINAL_CLASS) < 0 THEN DO;
      631     4089    2              CALL VDG$ESCREECH (ORIGINAL_CLASS);
      632     4090    2              END;
      633     4091
      634     4092    2           DO CASE (ORIGINAL_CLASS);
      635     4093    2            CASE (%CLS_BUFFER);
      636     4094    2              OBJECT_LENGTH =
      637     4095    2                (VD$BUFFER.LENGTH#
      638     4096    2                + SIZEC(VD$BUFFER_HEADER)
      639     4097    2                + 3) / %NB_PER_WORD;
      640     4098    2            CASE (%CLS_TEXTC_REMOTE);
      641     4099    2              OBJECT_LENGTH =
      642     4100    2                (VD$TEXTC_REMOTE.LENGTH#
      643     4101    2                + SIZEC(VD$STRING_HEADER)
      644     4102    2                + 3) / %NB_PER_WORD;
      645     4103    2            CASE (ELSE);
      646     4104    2              IF ORIGINAL.SIZE# = 0 THEN
      647     4105    2                 OBJECT_LENGTH = VD_OBJECTS.SIZE (ORIGINAL_CLASS);
      648     4106    2              ELSE
      649     4107    2                 OBJECT_LENGTH =
      650     4108    2                   ORIGINAL.SIZE#;
      651     4109    2            END;
      652     4110
      653     4111    1           CALL VDG$OALLOC (ORIGINAL_CLASS, NEW_PARAM$, OBJECT_LENGTH)
      654     4112    1             ALTRET (OALLOC_FAILED);
      655     4113    1           NEW$ = NEW_PARAM$;
      656     4114
      657     4115    1           NBYTES = (OBJECT_LENGTH * %NB_PER_WORD) - SIZEC(VD$OBJECT_HEADER);
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:81   
      658     4116
      659     4117    2           IF VD_OBJECTS.STR (ORIGINAL_CLASS) THEN DO;
      660     4118    2              IF VD$TEXTC_REMOTE.LENGTH# = 0
      661     4119    2                AND ORIGINAL_CLASS ~= %CLS_TEXTC_REMOTE THEN
      662     4120    2                 NBYTES = NBYTES - (LENGTHC(VD$STRING_HEADER) -
      663     4121    2                   LENGTHC(VD$OBJECT_HEADER));
      664     4122    2              ELSE
      665     4123    2                 NBYTES = VD$TEXTC_REMOTE.LENGTH#;
      666     4124    2              NEW$->VD$TEXTC_REMOTE.LENGTH# = NBYTES;
      667     4125    2              NEW$->VD$TEXTC_REMOTE.BYTES =
      668     4126    2                ADDR(VD$TEXTC_REMOTE.BYTES)->VARIABLE$OBJECT;
      669     4127    2              IF VD$STRING_HEADER.FLINK$ ~= ADDR(NIL) THEN
      670     4128    3   OCOPY_STRING_FLINK: DO;
      671     4129    3                 CALL VDG$OCOPY (VD$STRING_HEADER.FLINK$->VD$STRING_HEADER,
      672     4130    3                   NEW$->VD$STRING_HEADER.FLINK$)
      673     4131    3                   ALTRET (OCOPY_FAILED);
      674     4132    3                 END OCOPY_STRING_FLINK;
      675     4133    2              END;
      676     4134    2           ELSE IF VD_OBJECTS.BUF (ORIGINAL_CLASS) THEN DO;
      677     4135    2                 IF VD$BUFFER.LENGTH# = 0
      678     4136    2                   AND ORIGINAL_CLASS ~= %CLS_BUFFER THEN
      679     4137    2                    NBYTES = NBYTES - (LENGTHC(VD$BUFFER_HEADER) -
      680     4138    2                      LENGTHC(VD$OBJECT_HEADER));
      681     4139    2                 ELSE
      682     4140    2                    NBYTES = VD$BUFFER.LENGTH#;
      683     4141    2                 NEW$->VD$BUFFER.LENGTH# = VD$BUFFER.LENGTH#;
      684     4142    2                 ADDR(NEW$->VD$BUFFER.BYTES)->VARIABLE$OBJECT =
      685     4143    2                   ADDR(VD$BUFFER.BYTES)->VARIABLE$OBJECT;
      686     4144    2                 IF VD$BUFFER_HEADER.FLINK$ ~= ADDR(NIL) THEN
      687     4145    3   OCOPY_BUFFER_FLINK: DO;
      688     4146    3                    CALL VDG$OCOPY (VD$BUFFER_HEADER.FLINK$->VD$BUFFER_HEADER,
      689     4147    3                      NEW$->VD$BUFFER_HEADER.FLINK$)
      690     4148    3                      ALTRET (OCOPY_FAILED);
      691     4149    3                    END OCOPY_BUFFER_FLINK;
      692     4150    2                 END;
      693     4151    2              ELSE DO;
      694     4152    2                 PINCRW(NEW$, SIZEW(VD$OBJECT_HEADER))->
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:82   
      695     4153    2                   VARIABLE$OBJECT =
      696     4154    2                   PINCRW(ORIGINAL$, SIZEW(VD$OBJECT_HEADER))->
      697     4155    2                   VARIABLE$OBJECT;
      698     4156    2                 END;
      699     4157
      700     4158
      701     4159    2           DO CASE (ORIGINAL_CLASS);
      702     4160
      703     4161    2            CASE (%CLS_BLOCK_DESC, %CLS_BLOCK_BUFFER);
      704     4162    2              PTR$ = ORIGINAL$;
      705     4163    2              NEW_PTR$ = NEW$;
      706     4164    3              IF ORIGINAL_CLASS = %CLS_BLOCK_BUFFER THEN DO;
      707     4165    3                 PTR$ = PALIGNW(ADDR(VD$BUFFER.BYTES));
      708     4166    3                 NEW_PTR$ = PALIGNW(ADDR(NEW$->VD$BUFFER.BYTES));
      709     4167    3                 NEW_PTR$->VD$BLOCK_DESC.OBJECT = PTR$->VD$BLOCK_DESC.OBJECT;
      710     4168    3                 END;
      711     4169                   %COPYKEY (FKEY=PTR$->VD$BLOCK_DESC.FILE_KEY,
      712     4170                   TKEY=NEW_PTR$->VD$BLOCK_DESC.FILE_KEY);
      713     4186
      714     4187    2              CALL VDG$OCOPY_RANGE (PTR$->VD$BLOCK_DESC.RANGE,
      715     4188    2                NEW_PTR$->VD$BLOCK_DESC.RANGE)
      716     4189    2                ALTRET (OCOPY_RANGE_FAILED);
      717     4190
      718     4191                   /* BlockDesc doesn't own .OPTIONS.STRUCTURE$->: don't make a new copy */
      719     4192                   %COPYKEY (FKEY=PTR$->VD$BLOCK_DESC.OPTIONS.KEY_INCR,
      720     4193                   TKEY=NEW_PTR$->VD$BLOCK_DESC.OPTIONS.KEY_INCR);
      721     4209
      722     4210
      723     4211    2            CASE (%CLS_ENCODED_NODE);
      724     4212                   %COPYKEY (FKEY=VD$ENCODED_NODE.DESC.FILE_KEY,
      725     4213                   TKEY=NEW$->VD$ENCODED_NODE.DESC.FILE_KEY);
      726     4229
      727     4230    2              CALL VDG$OCOPY_LOCATION (VD$ENCODED_NODE.DESC.LOCATION,
      728     4231    2                NEW$->VD$ENCODED_NODE.DESC.LOCATION)
      729     4232    2                ALTRET (OCOPY_LOCATION_FAILED);
      730     4233
      731     4234                   %COPYSPEC (FSPEC=VD$ENCODED_NODE.DESC.SPEC,
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:83   
      732     4235                   TSPEC=NEW$->VD$ENCODED_NODE.DESC.SPEC);
      733     4251
      734     4252    2              IF VD$ENCODED_NODE.DESC.DATA$ ~= ADDR(NIL) THEN
      735     4253    3   OCOPY_ENCODED_NODE_DESC_DATA: DO;
      736     4254    3                 CALL VDG$OCOPY (VD$ENCODED_NODE.DESC.DATA$->VD$BUFFER,
      737     4255    3                   NEW$->VD$ENCODED_NODE.DESC.DATA$)
      738     4256    3                   ALTRET (OCOPY_FAILED);
      739     4257    3                 END OCOPY_ENCODED_NODE_DESC_DATA;
      740     4258
      741     4259
      742     4260    2            CASE (%CLS_EVAL);
      743     4261    2              NEW$->VD$EVAL.BLINK$ = ADDR(NIL); /* Don't copy */
      744     4262    2              CALL VDG$OCOPY_RANGE (VD$EVAL.ENCLOSING, NEW$->VD$EVAL.ENCLOSING)
      745     4263    2                ALTRET (OCOPY_RANGE_FAILED);
      746     4264    2              CALL VDG$OCOPY_RANGE (VD$EVAL.RANGE, NEW$->VD$EVAL.RANGE)
      747     4265    2                ALTRET (OCOPY_RANGE_FAILED);
      748     4266    2              CALL VDG$OCOPY_RANGE (VD$EVAL.LAST_FOUND_RANGE,
      749     4267    2                NEW$->VD$EVAL.LAST_FOUND_RANGE)
      750     4268    2                ALTRET (OCOPY_RANGE_FAILED);
      751     4269                   /* Eval doesn't own .NODE$->: don't make a new copy */
      752     4270
      753     4271
      754     4272    2            CASE (%CLS_EVAL_PATTERN);
      755     4273    2              NEW$->VD$EVAL_PATTERN.BLINK$ = ADDR(NIL); /* Don't copy */
      756     4274    2              CALL VDG$OCOPY_RANGE (VD$EVAL_PATTERN.RANGE,
      757     4275    2                NEW$->VD$EVAL_PATTERN.RANGE)
      758     4276    2                ALTRET (OCOPY_RANGE_FAILED);
      759     4277                   /* EVAL_PATTERN doesn't own .PATTERN$->: don't make a new copy */
      760     4278
      761     4279
      762     4280    2            CASE (%CLS_FILE_KEY);
      763     4281    2              IF VD$FILE_KEY.FLINK$ ~= ADDR(NIL) THEN
      764     4282    3   OCOPY_FILE_KEY_FLINK: DO;
      765     4283    3                 CALL VDG$OCOPY (VD$FILE_KEY.FLINK$->VD$STRING_HEADER,
      766     4284    3                   NEW$->VD$FILE_KEY.FLINK$)
      767     4285    3                   ALTRET (OCOPY_FAILED);
      768     4286    3                 END OCOPY_FILE_KEY_FLINK;
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:84   
      769     4287
      770     4288
      771     4289    2            CASE (%CLS_FILE_NODE);
      772     4290    2              NEW$->VD$FILE_NODE.BLINK$ = ADDR(NIL); /* Don't copy */
      773     4291    2              IF VD$FILE_NODE.FLINK$ ~= ADDR(NIL) THEN
      774     4292    3   OCOPY_FILE_NODE_FLINK: DO;
      775     4293    3                 CALL VDG$OCOPY (VD$FILE_NODE.FLINK$->VD$FILE_NODE,
      776     4294    3                   NEW$->VD$FILE_NODE.FLINK$)
      777     4295    3                   ALTRET (OCOPY_FAILED);
      778     4296    3                 END OCOPY_FILE_NODE_FLINK;
      779     4297
      780     4298                   %COPYKEY (FKEY=VD$FILE_NODE.DESC.KEY,
      781     4299                   TKEY=NEW$->VD$FILE_NODE.DESC.KEY);
      782     4315
      783     4316                   %COPYSPEC (FSPEC=VD$FILE_NODE.DESC.SPEC,
      784     4317                   TSPEC=NEW$->VD$FILE_NODE.DESC.SPEC);
      785     4333    2              IF VD$FILE_NODE.DESC.DATA$ ~= ADDR(NIL) THEN
      786     4334    3   OCOPY_FILE_NODE_DESC_DATA: DO;
      787     4335    3                 CALL VDG$OCOPY (VD$FILE_NODE.DESC.DATA$->VD$BUFFER,
      788     4336    3                   NEW$->VD$FILE_NODE.DESC.DATA$)
      789     4337    3                   ALTRET (OCOPY_FAILED);
      790     4338    3                 END OCOPY_FILE_NODE_DESC_DATA;
      791     4339
      792     4340    2              IF VD$FILE_NODE.HEAD$ ~= ADDR(NIL) THEN
      793     4341    3   OCOPY_FILE_NODE_HEAD: DO;
      794     4342    3                 CALL VDG$OCOPY (VD$FILE_NODE.HEAD$->VD$FILE_NODE,
      795     4343    3                   NEW$->VD$FILE_NODE.HEAD$)
      796     4344    3                   ALTRET (OCOPY_FAILED);
      797     4345
      798     4346    3                 NEW$->VD$FILE_NODE.TAIL$ = NEW$->VD$FILE_NODE.HEAD$;
      799     4347    4                 DO WHILE (NEW$->VD$FILE_NODE.TAIL$ ~= ADDR(NIL));
      800     4348    4                    NEW$->VD$FILE_NODE.TAIL$ = NEW$->VD$FILE_NODE.TAIL$->
      801     4349    4                      VD$FILE_NODE.FLINK$;
      802     4350    4                    END;
      803     4351    3                 END OCOPY_FILE_NODE_HEAD;
      804     4352
      805     4353
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:85   
      806     4354    2            CASE (%CLS_FIT);
      807     4355    2              NEW$->VD$FIT.CODE2$ =
      808     4356    2                PINCRW(NEW$, POFFW(VD$FIT.CODE2$, ORIGINAL$));
      809     4357    2              NEW$->VD$FIT.CODE3$ =
      810     4358    2                PINCRW(NEW$, POFFW(VD$FIT.CODE3$, ORIGINAL$));
      811     4359
      812     4360
      813     4361    2            CASE (%CLS_IT_ADJUST);
      814     4362    2              NEW$->VD$IT_ADJUST.PARENT$ = ADDR(NIL); /* Don't copy */
      815     4363    2              IF VD$IT_ADJUST.FLINK$ ~= ADDR(NIL) THEN
      816     4364    3   OCOPY_IT_ADJUST_FLINK: DO;
      817     4365    3                 CALL VDG$OCOPY (VD$IT_ADJUST.FLINK$->VD$IT_ADJUST,
      818     4366    3                   NEW$->VD$IT_ADJUST.FLINK$)
      819     4367    3                   ALTRET (OCOPY_FAILED);
      820     4368    3                 END OCOPY_IT_ADJUST_FLINK;
      821     4369
      822     4370    2              IF VD$IT_ADJUST.MOVEMENTS$ ~= ADDR(NIL) THEN
      823     4371    3   OCOPY_IT_ADJUST_MOVEMENTS: DO;
      824     4372                      /* VD$IT_ADJUST.MOVEMENTS$ actually points to any InTree node */
      825     4373    3                 CALL VDG$OCOPY (VD$IT_ADJUST.MOVEMENTS$->VD$INTREE_NODE,
      826     4374    3                   NEW$->VD$IT_ADJUST.MOVEMENTS$)
      827     4375    3                   ALTRET (OCOPY_FAILED);
      828     4376
      829     4377    3                 NEW$->VD$IT_ADJUST.MOVEMENTS_TAIL$ =
      830     4378    3                   NEW$->VD$IT_ADJUST.MOVEMENTS$;
      831     4379    4                 DO WHILE (NEW$->VD$IT_ADJUST.MOVEMENTS_TAIL$ ~= ADDR(NIL));
      832     4380    4                    NEW$->VD$IT_ADJUST.MOVEMENTS_TAIL$->
      833     4381    4                      VD$INTREE_NODE.PARENT$ = NEW$;
      834     4382    4                    NEW$->VD$IT_ADJUST.MOVEMENTS_TAIL$ =
      835     4383    4                      NEW$->VD$IT_ADJUST.MOVEMENTS_TAIL$->
      836     4384    4                      VD$INTREE_NODE.FLINK$;
      837     4385    4                    END;
      838     4386    3                 END OCOPY_IT_ADJUST_MOVEMENTS;
      839     4387
      840     4388
      841     4389    2            CASE (%CLS_IT_BLOCK_EXPR);
      842     4390    2              IF VD$IT_BLOCK_EXPR.FLINK$ ~= ADDR(NIL) THEN
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:86   
      843     4391    3   OCOPY_IT_BLOCK_EXPR_FLINK: DO;
      844     4392    3                 CALL VDG$OCOPY (VD$IT_BLOCK_EXPR.FLINK$->VD$IT_BLOCK_EXPR,
      845     4393    3                   NEW$->VD$IT_BLOCK_EXPR.FLINK$)
      846     4394    3                   ALTRET (OCOPY_FAILED);
      847     4395    3                 END OCOPY_IT_BLOCK_EXPR_FLINK;
      848     4396
      849     4397                   %COPYKEY (FKEY="VD$IT_BLOCK_EXPR.DOMAINN.FILE_KEY",
      850     4398                   TKEY="NEW$->VD$IT_BLOCK_EXPR.DOMAINN.FILE_KEY");
      851     4414    2              CALL VDG$OCOPY_RANGE (VD$IT_BLOCK_EXPR.DOMAINN.RANGE,
      852     4415    2                NEW$->VD$IT_BLOCK_EXPR.DOMAINN.RANGE)
      853     4416    2                ALTRET (OCOPY_RANGE_FAILED);
      854     4417
      855     4418                  /* ItBlockExpr doesn't own .OPTIONS.STRUCTURE$->: don't make a new copy */
      856     4419                   %COPYKEY (FKEY=VD$IT_BLOCK_EXPR.OPTIONS.KEY_INCR,
      857     4420                   TKEY=NEW$->VD$IT_BLOCK_EXPR.OPTIONS.KEY_INCR);
      858     4436
      859     4437    2              IF VD$IT_BLOCK_EXPR.SELECTS$ ~= ADDR(NIL) THEN
      860     4438    3   OCOPY_IT_BLOCK_EXPR_SELECTS: DO;
      861     4439    3                 CALL VDG$OCOPY (VD$IT_BLOCK_EXPR.SELECTS$->VD$IT_SELECT,
      862     4440    3                   NEW$->VD$IT_BLOCK_EXPR.SELECTS$)
      863     4441    3                   ALTRET (OCOPY_FAILED);
      864     4442
      865     4443    3                 NEW$->VD$IT_BLOCK_EXPR.SELECTS_TAIL$ =
      866     4444    3                   NEW$->VD$IT_BLOCK_EXPR.SELECTS$;
      867     4445    4                 DO WHILE (NEW$->VD$IT_BLOCK_EXPR.SELECTS_TAIL$ ~= ADDR(NIL));
      868     4446    4                    NEW$->VD$IT_BLOCK_EXPR.SELECTS_TAIL$->
      869     4447    4                      VD$IT_SELECT.PARENT$ = NEW$;
      870     4448    4                    NEW$->VD$IT_BLOCK_EXPR.SELECTS_TAIL$ =
      871     4449    4                      NEW$->VD$IT_BLOCK_EXPR.SELECTS_TAIL$->
      872     4450    4                      VD$IT_SELECT.FLINK$;
      873     4451    4                    END;
      874     4452    3                 END OCOPY_IT_BLOCK_EXPR_SELECTS;
      875     4453
      876     4454
      877     4455    2            CASE (%CLS_IT_COMMAND);
      878     4456    2              NEW$->VD$IT_COMMAND.PARENT$ = ADDR(NIL); /* Don't copy */
      879     4457    2              IF VD$IT_COMMAND.FLINK$ ~= ADDR(NIL) THEN
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:87   
      880     4458    3   OCOPY_IT_COMMAND_FLINK: DO;
      881     4459    3                 CALL VDG$OCOPY (VD$IT_COMMAND.FLINK$->VD$INTREE_NODE,
      882     4460    3                   NEW$->VD$IT_COMMAND.FLINK$)
      883     4461    3                   ALTRET (OCOPY_FAILED);
      884     4462    3                 END OCOPY_IT_COMMAND_FLINK;
      885     4463
      886     4464                   /* IT_COMMAND doesn't own .PT_BLOCK_EXPR$->: don't make new copy */
      887     4465
      888     4466    3              DO I = 0 TO %(MX_COMMAND_PARAMS-1);
      889     4467    3                 IF VD$IT_COMMAND.PARAM$ (I) ~= ADDR(NIL) THEN
      890     4468    4   OCOPY_IT_COMMAND_PARAM: DO;
      891     4469    4                    CALL VDG$OCOPY (VD$IT_COMMAND.PARAM$ (I)->
      892     4470    4                      VD$OBJECT_HEADER,
      893     4471    4                      NEW$->VD$IT_COMMAND.PARAM$ (I))
      894     4472    4                      ALTRET (OCOPY_FAILED);
      895     4473    4                    END OCOPY_IT_COMMAND_PARAM;
      896     4474    3                 END;
      897     4475
      898     4476
      899     4477    2            CASE (%CLS_IT_OPERAND);
      900     4478    2              NEW$->VD$IT_OPERAND.PARENT$ = ADDR(NIL); /* Don't copy */
      901     4479    2              IF VD$IT_OPERAND.FLINK$ ~= ADDR(NIL) THEN
      902     4480    3   OCOPY_IT_OPERAND_FLINK: DO;
      903     4481    3                 CALL VDG$OCOPY (VD$IT_OPERAND.FLINK$->VD$INTREE_NODE,
      904     4482    3                   NEW$->VD$IT_OPERAND.FLINK$)
      905     4483    3                   ALTRET (OCOPY_FAILED);
      906     4484    3                 END OCOPY_IT_OPERAND_FLINK;
      907     4485
      908     4486                   %COPYKEY (FKEY=VD$IT_OPERAND.KEY, TKEY=NEW$->VD$IT_OPERAND.KEY);
      909     4502    2              IF VD$IT_OPERAND.PARAM$ ~= ADDR(NIL) THEN
      910     4503    3   OCOPY_IT_OPERAND_PARAM: DO;
      911     4504    3                 CALL VDG$OCOPY (VD$IT_OPERAND.PARAM$->VD$OBJECT_HEADER,
      912     4505    3                   NEW$->VD$IT_OPERAND.PARAM$)
      913     4506    3                   ALTRET (OCOPY_FAILED);
      914     4507    3                 END OCOPY_IT_OPERAND_PARAM;
      915     4508
      916     4509
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:88   
      917     4510    2            CASE (%CLS_IT_OPERATOR);
      918     4511    2              NEW$->VD$IT_OPERATOR.PARENT$ = ADDR(NIL); /* Don't copy */
      919     4512    2              IF VD$IT_OPERATOR.FLINK$ ~= ADDR(NIL) THEN
      920     4513    3   OCOPY_IT_OPERATOR_FLINK: DO;
      921     4514    3                 CALL VDG$OCOPY (VD$IT_OPERATOR.FLINK$->VD$INTREE_NODE,
      922     4515    3                   NEW$->VD$IT_OPERATOR.FLINK$)
      923     4516    3                   ALTRET (OCOPY_FAILED);
      924     4517    3                 END OCOPY_IT_OPERATOR_FLINK;
      925     4518
      926     4519    2              IF VD$IT_OPERATOR.OPERAND$ ~= ADDR(NIL) THEN
      927     4520    3   OCOPY_IT_OPERATOR_OPERAND: DO;
      928     4521    3                 CALL VDG$OCOPY (VD$IT_OPERATOR.OPERAND$->VD$INTREE_NODE,
      929     4522    3                   NEW$->VD$IT_OPERATOR.OPERAND$)
      930     4523    3                   ALTRET (OCOPY_FAILED);
      931     4524    3                 END OCOPY_IT_OPERATOR_OPERAND;
      932     4525
      933     4526    2              IF VD$IT_OPERATOR.R_OPERAND$ ~= ADDR(NIL) THEN
      934     4527    3   OCOPY_IT_OPERATOR_R_OPERAND: DO;
      935     4528    3                 CALL VDG$OCOPY (VD$IT_OPERATOR.R_OPERAND$->VD$INTREE_NODE,
      936     4529    3                   NEW$->VD$IT_OPERATOR.R_OPERAND$)
      937     4530    3                   ALTRET (OCOPY_FAILED);
      938     4531    3                 END OCOPY_IT_OPERATOR_R_OPERAND;
      939     4532
      940     4533
      941     4534    2            CASE (%CLS_IT_SELECT);
      942     4535    2              NEW$->VD$IT_SELECT.PARENT$ = ADDR(NIL); /* Don't copy */
      943     4536    2              IF VD$IT_SELECT.FLINK$ ~= ADDR(NIL) THEN
      944     4537    3   OCOPY_IT_SELECT_FLINK: DO;
      945     4538    3                 CALL VDG$OCOPY (VD$IT_SELECT.FLINK$->VD$IT_SELECT,
      946     4539    3                   NEW$->VD$IT_SELECT.FLINK$)
      947     4540    3                   ALTRET (OCOPY_FAILED);
      948     4541    3                 END OCOPY_IT_SELECT_FLINK;
      949     4542
      950     4543    2              IF VD$IT_SELECT.ADJUSTS$ ~= ADDR(NIL) THEN
      951     4544    3   OCOPY_IT_SELECT_ADJUSTS: DO;
      952     4545    3                 CALL VDG$OCOPY (VD$IT_SELECT.ADJUSTS$->VD$IT_ADJUST,
      953     4546    3                   NEW$->VD$IT_SELECT.ADJUSTS$)
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:89   
      954     4547    3                   ALTRET (OCOPY_FAILED);
      955     4548
      956     4549    3                 NEW$->VD$IT_SELECT.ADJUSTS_TAIL$ =
      957     4550    3                   NEW$->VD$IT_SELECT.ADJUSTS$;
      958     4551    4                 DO WHILE (NEW$->VD$IT_SELECT.ADJUSTS_TAIL$ ~= ADDR(NIL));
      959     4552    4                    NEW$->VD$IT_SELECT.ADJUSTS_TAIL$->
      960     4553    4                      VD$IT_ADJUST.PARENT$ = NEW$;
      961     4554    4                    NEW$->VD$IT_SELECT.ADJUSTS_TAIL$ =
      962     4555    4                      NEW$->VD$IT_SELECT.ADJUSTS_TAIL$->
      963     4556    4                      VD$IT_ADJUST.FLINK$;
      964     4557    4                    END;
      965     4558    3                 END OCOPY_IT_SELECT_ADJUSTS;
      966     4559
      967     4560
      968     4561    2            CASE (%CLS_PATTERN);
      969     4562    2              N_ENTRIES = (VD$PATTERN.OBJECT.SIZE# -
      970     4563    2                POFFW(ADDR(VD$PATTERN.ENTRIES), ORIGINAL$)) /
      971     4564    2                SIZEW(VD$PATTERN.ENTRIES);
      972     4565    2              IF N_ENTRIES ~= VD$PATTERN.MX_ENTRIES#
      973     4566    2                OR VD$PATTERN.N_ENTRIES# > N_ENTRIES THEN
      974     4567    2                 CALL VDG$ESCREECH (VD$PATTERN.N_ENTRIES#);
      975     4568    3              DO I = 0 TO (VD$PATTERN.N_ENTRIES# - 1);
      976     4569    4                 IF VD$PATTERN.ENTRIES.MATCH$ (I) ~= ADDR(NIL) THEN DO;
      977     4570    4                    CALL VDG$OCOPY (VD$PATTERN.ENTRIES.MATCH$ (I) ->
      978     4571    4                      VD$OBJECT_HEADER, NEW$->VD$PATTERN.ENTRIES.MATCH$ (I))
      979     4572    4                      ALTRET (OCOPY_FAILED);
      980     4573    4                    END;
      981     4574    3                 END;
      982     4575
      983     4576
      984     4577    2            CASE (%CLS_WINDOW_BLOCK);
      985     4578    2              IF VD$WINDOW_BLOCK.EDIT_BLOCK$ ~= ADDR(NIL) THEN
      986     4579    3   OCOPY_WINDOW_BLOCK_EDIT_BLOCK: DO;
      987     4580    3                 CALL VDG$OCOPY (VD$WINDOW_BLOCK.EDIT_BLOCK$->
      988     4581    3                   VD$BLOCK_DESC,
      989     4582    3                   NEW$->VD$WINDOW_BLOCK.EDIT_BLOCK$)
      990     4583    3                   ALTRET (OCOPY_FAILED);
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:90   
      991     4584    3                 END OCOPY_WINDOW_BLOCK_EDIT_BLOCK;
      992     4585
      993     4586    2              IF VD$WINDOW_BLOCK.EVAL$ ~= ADDR(NIL) THEN
      994     4587    3   OCOPY_WINDOW_BLOCK_EVAL: DO;
      995     4588    3                 CALL VDG$OCOPY (VD$WINDOW_BLOCK.EVAL$->VD$EVAL,
      996     4589    3                   NEW$->VD$WINDOW_BLOCK.EVAL$)
      997     4590    3                   ALTRET (OCOPY_FAILED);
      998     4591    3                 PTR$ = VD$WINDOW_BLOCK.EVAL$->VD$EVAL.BLINK$;
      999     4592    3                 NEW_PTR$ = NEW$->VD$WINDOW_BLOCK.EVAL$;
     1000     4593    4                 DO WHILE PTR$ ~= ADDR(NIL);
     1001     4594    4                    CALL VDG$OCOPY (PTR$->VD$EVAL, NEW_PTR$->VD$EVAL.BLINK$)
     1002     4595    4                      ALTRET (OCOPY_FAILED);
     1003     4596    4                    PTR$ = PTR$->VD$EVAL.BLINK$;
     1004     4597    4                    NEW_PTR$ = NEW_PTR$->VD$EVAL.BLINK$;
     1005     4598    4                    END;
     1006     4599    3                 END OCOPY_WINDOW_BLOCK_EVAL;
     1007     4600
     1008     4601
     1009     4602    2            CASE (%CLS_WINDOW_SPEC);
     1010     4603    2              NEW$->VD$WINDOW_SPEC.OPERAND.STREAM$ = ADDR(NIL); /* Don't copy */
     1011     4604
     1012     4605    2              IF VD$WINDOW_SPEC.OPERAND.INTREE$ ~= ADDR(NIL) THEN
     1013     4606    3   OCOPY_WINDOW_SPEC_INTREE: DO;
     1014     4607    3                 CALL VDG$OCOPY (VD$WINDOW_SPEC.OPERAND.INTREE$->VD$IT_BLOCK_EXPR,
     1015     4608    3                   NEW$->VD$WINDOW_SPEC.OPERAND.INTREE$)
     1016     4609    3                   ALTRET (OCOPY_FAILED);
     1017     4610    3                 END OCOPY_WINDOW_SPEC_INTREE;
     1018     4611
     1019     4612    2              IF VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$ ~= ADDR(NIL) THEN
     1020     4613    3   OCOPY_WINDOW_SPEC_EDIT_BLOCK: DO;
     1021     4614    3                 CALL VDG$OCOPY (VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$->
     1022     4615    3                   VD$BLOCK_DESC,
     1023     4616    3                   NEW$->VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$)
     1024     4617    3                   ALTRET (OCOPY_FAILED);
     1025     4618    3                 END OCOPY_WINDOW_SPEC_EDIT_BLOCK;
     1026     4619
     1027     4620    2              IF VD$WINDOW_SPEC.OPERAND.EVAL$ ~= ADDR(NIL) THEN
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:91   
     1028     4621    3   OCOPY_WINDOW_SPEC_EVAL: DO;
     1029     4622    3                 CALL VDG$OCOPY (VD$WINDOW_SPEC.OPERAND.EVAL$->VD$EVAL,
     1030     4623    3                   NEW$->VD$WINDOW_SPEC.OPERAND.EVAL$)
     1031     4624    3                   ALTRET (OCOPY_FAILED);
     1032     4625    3                 PTR$ = VD$WINDOW_SPEC.OPERAND.EVAL$->VD$EVAL.BLINK$;
     1033     4626    3                 NEW_PTR$ = NEW$->VD$WINDOW_SPEC.OPERAND.EVAL$;
     1034     4627    4                 DO WHILE PTR$ ~= ADDR(NIL);
     1035     4628    4                    CALL VDG$OCOPY (PTR$->VD$EVAL, NEW_PTR$->VD$EVAL.BLINK$)
     1036     4629    4                      ALTRET (OCOPY_FAILED);
     1037     4630    4                    PTR$ = PTR$->VD$EVAL.BLINK$;
     1038     4631    4                    NEW_PTR$ = NEW_PTR$->VD$EVAL.BLINK$;
     1039     4632    4                    END;
     1040     4633    3                 END OCOPY_WINDOW_SPEC_EVAL;
     1041     4634
     1042     4635    2              NEW$->VD$WINDOW_SPEC.RECORD_SET$ = ADDR(NIL); /* Don't copy */
     1043     4636
     1044     4637
     1045     4638    2              IF VD$WINDOW_SPEC.TABS$ ~= ADDR(NIL) THEN
     1046     4639    3   OCOPY_WINDOW_SPEC_TABS: DO;
     1047     4640    3                 CALL VDG$OCOPY (VD$WINDOW_SPEC.TABS$->VD$TABS,
     1048     4641    3                   NEW$->VD$WINDOW_SPEC.TABS$)
     1049     4642    3                   ALTRET (OCOPY_FAILED);
     1050     4643    3                 END OCOPY_WINDOW_SPEC_TABS;
     1051     4644
     1052     4645    2              IF VD$WINDOW_SPEC.EOFMARK$ ~= ADDR(NIL) THEN
     1053     4646    3   OCOPY_WINDOW_SPEC_EOFMARK: DO;
     1054     4647    3                 CALL VDG$OCOPY (VD$WINDOW_SPEC.EOFMARK$->VD$BUFFER,
     1055     4648    3                   NEW$->VD$WINDOW_SPEC.EOFMARK$)
     1056     4649    3                   ALTRET (OCOPY_FAILED);
     1057     4650    3                 END OCOPY_WINDOW_SPEC_EOFMARK;
     1058     4651
     1059     4652    2              IF VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$ ~= ADDR(NIL) THEN
     1060     4653    3   OCOPY_WINDOW_SPEC_KEY_DEF_BUF: DO;
     1061     4654    3                 CALL VDG$OCOPY (VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$->
     1062     4655    3                   VD$BUFFER,
     1063     4656    3                   NEW$->VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$)
     1064     4657    3                   ALTRET (OCOPY_FAILED);
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:92   
     1065     4658    3                 END OCOPY_WINDOW_SPEC_KEY_DEF_BUF;
     1066     4659
     1067     4660
     1068     4661    2            CASE (%CLS_BUFFER,
     1069     4662    2                   %CLS_TEXTC_REMOTE,
     1070     4663    2                   %CLS_NAME_SPEC,
     1071     4664    2                   %CLS_STRUCTURE_LEVEL,
     1072     4665    2                   %CLS_NUMBER,
     1073     4666    2                   %CLS_BOOLEAN,
     1074     4667    2                   %CLS_FILE_STCLASS,
     1075     4668    2                   %CLS_ORG,
     1076     4669    2                   %CLS_KEY_TYPE,
     1077     4670    2                   %CLS_EXIST,
     1078     4671    2                   %CLS_NAME_DATA_TYPE,
     1079     4672    2                   %CLS_COMPONENT,
     1080     4673    2                   %CLS_DIRECTION,
     1081     4674    2                   %CLS_POINT,
     1082     4675    2                   %CLS_PROTECT,
     1083     4676    2                   %CLS_STRUCTURE_SPEC,
     1084     4677                     /*
     1085     4678                     *  The %CLS_PTR_x pointers point to objects owned by others:
     1086     4679                     *      just copy the pointers (which we've already done)
     1087     4680                     */
     1088     4681    2                   %CLS_PTR_BLOCK_DESC,
     1089     4682    2                   %CLS_PTR_LOCATION,
     1090     4683    2                   %CLS_PTR_KEY,
     1091     4684    2                   %CLS_PTR_TEXTC,
     1092     4685    2                   %CLS_PTR_FILE_NODE,
     1093     4686    2                   %CLS_PTR_INTREE);
     1094     4687                   /*  Don' do nuthin':
     1095     4688                       these objects need no further processing.  */
     1096     4689
     1097     4690
     1098     4691    2            CASE (%CLS_CMD_STREAM,
     1099     4692    2                   %CLS_DIR_NODE,
     1100     4693    2                   %CLS_ERR,
     1101     4694    2                   %CLS_STREAM,
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:93   
     1102     4695    2                   %CLS_PORT,
     1103     4696    2                   %CLS_RECORD_SET,
     1104     4697    2                   ELSE);
     1105     4698                   /*  Internal error:
     1106     4699                       either a non-OCOPY-able object class was passed,
     1107     4700                       or an unknown object class was passed.  */
     1108     4701    2              CALL VDG$ESCREECH (ORIGINAL_CLASS);
     1109     4702
     1110     4703    2            END;
     1111     4704
     1112     4705    1           RETURN;
     1113     4706
     1114     4707
     1115     4708
     1116     4709    1   OALLOC_FAILED: ;
     1117     4710    1   OCOPY_FAILED: ;
     1118     4711    1   OCOPY_RANGE_FAILED: ;
     1119     4712    1   OCOPY_LOCATION_FAILED: ;
     1120     4713    1           ALTRETURN;
     1121     4714
     1122     4715    1   END VDG$OCOPY;
     1123     4716        %EOD;

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:94   
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$OCOPY.

   Procedure VDG$OCOPY requires 1081 words for executable code.
   Procedure VDG$OCOPY requires 18 words of local(AUTO) storage.

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:95   

 Object Unit name= VDG$OCOPY                                  File name= VDG$OBJECTS.:VDA5TOU
 UTS= JUL 04 '97 11:21:20.12 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none  1081   2071  VDG$OCOPY
    1  RoData even  none     2      2  VDG$OCOPY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  VDG$OCOPY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 VDG$ESCREECH
 yes     yes           Std       3 VDG$OALLOC
 yes     yes           Std       2 VDG$OCOPY_LOCATION
 yes     yes           Std       2 VDG$OCOPY_RANGE
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:96   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_OBJECTS                            B_VECTNIL
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:97   


      510        1        /*T***********************************************************/
      511        2        /*T*                                                         */
      512        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      513        4        /*T*                                                         */
      514        5        /*T***********************************************************/
      515        6
      516        7        /*D* NAME: VDG$OCOPY
      517        8            PARAMETERS:
      518        9                ORIGINAL - Actual VD$OBJECT_HEADER (or any sub- or super-part
      519       10                    thereof) in object to make new copy of.
      520       11                    NOTE:  During initialization, we OCOPY "objects" which
      521       12                        actually reside in static or constant storage.  These
      522       13                        "objects" have .OBJECT.SIZE# and .LENGTH# values of
      523       14                        0; instead, the fixed-length of these structures
      524       15                        should be used (based on their object class, which
      525       16                        is accurate) and legal .SIZE#s and .LENGTH#s should
      526       17                        be stored in the new copy of the object.  To
      527       18                        determine if ORIGINAL is one of these static or
      528       19                        constant "objects", test if:
      529       20                            (1) ORIGINAL.OBJECT.SIZE# is 0 or (for string
      530       21                                    and buffer objects) ORIGINAL.LENGTH# is 0;
      531       22                        and (2) ORIGINAL.OBJECT.CLASS# is neither
      532       23                                    %CLS_TEXTC_REMOTE nor %CLS_BUFFER.
      533       24                        Note that we may normally be called with a 0-length
      534       25                        string or buffer to copy; however, this will only
      535       26                        happen when ORIGINAL.OBJECT.CLASS# is either
      536       27                        %CLS_TEXTC_REMOTE or %CLS_BUFFER.
      537       28                NEW$ - Uninitialized ptr.
      538       29            INPUT:
      539       30                None.
      540       31            OUTPUT:
      541       32                NEW$ will contain a pointer to the new copy of the object.
      542       33                Pointers within the object pointed-to by NEW$ which themselves point
      543       34                to objects will be initialized with pointers to new copies of those
      544       35                objects, with the following exceptions:
      545       36                    o Objects pointed-to by ORIGINAL but which ORIGINAL doesn't
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:98   
      546       37                        "own" (ie, ORIGINAL doesn't have the primary pointer to the
      547       38                        object and isn't responsible for freeing it when done with it)
      548       39                        will not be copied, but NEW$'s object will contain a copy
      549       40                        of the pointer from ORIGINAL.
      550       41                    o For most object classes, if they have a .BLINK$ pointer,
      551       42                        it will be NIL in the NEW$ copy of the object.
      552       43                        EXCEPTION:  %CLS_EVAL objects will have their .BLINK$s
      553       44                        copied.
      554       45                        NOTE:  If ORIGINAL has a .FLINK$ pointer, NEW$'s object will
      555       46                        contain a pointer to a new copy of the FLINK$'d object.
      556       47                    o If an object class has a .PARENT$ pointer, it will be NIL
      557       48                        in the NEW$ copy of the object.
      558       49                    o If an object class points to a VD$STREAM or VD$RECORD_SET, the
      559       50                        pointer will be NIL in the NEW$ copy of the object.
      560       51            DESCRIPTION:
      561       52                Calls VDG$OALLOC to allocate a new object of some class,
      562       53                then fills in the new object with the original one.
      563       54                Certain pointers within the original object point to
      564       55                objects which themselves must be OCOPY'ed by calling
      565       56                VDG$OCOPY recursively.
      566       57        */
      567       58
      568       59        VDG$OCOPY: PROC (ORIGINAL, NEW_PARAM$) ALTRET;

     59  0 000000   000000 700200 xent  VDG$OCOPY    TSX0  ! X66_AUTO_2
         0 000001   000022 000002                    ZERO    18,2

      569       60
      570       61
      571       62        %INCLUDE VD_MACROS_M;
      572     2277
      573     2278
      574     2279        %VD$OBJECT_HEADER (NAME=ORIGINAL, STCLASS=PARAM);
      575     2301    1   DCL NEW_PARAM$ PTR PARAM;
      576     2302
      577     2303
      578     2304    1   DCL VDG$OALLOC         ENTRY (3) ALTRET;
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:99   
      579     2305    1   DCL VDG$OCOPY_RANGE    ENTRY (2) ALTRET;
      580     2306    1   DCL VDG$OCOPY_LOCATION ENTRY (2) ALTRET;
      581     2307    1   DCL VDG$ESCREECH       ENTRY (3);
      582     2308
      583     2309
      584     2310        %VD_OBJECTS (NAME=VD_OBJECTS, STCLASS=SYMREF);
      585     2350
      586     2351
      587     2352    1   DCL ORIGINAL$ PTR;
      588     2353    1   DCL NEW$ PTR;
      589     2354    1   DCL ORIGINAL_CLASS SBIN;
      590     2355    1   DCL OBJECT_LENGTH UBIN;
      591     2356    1   DCL NBYTES UBIN;
      592     2357    1   DCL N_ENTRIES SBIN;
      593     2358    1   DCL PTR$ PTR;
      594     2359    1   DCL NEW_PTR$ PTR;
      595     2360    1   DCL I SBIN;
      596     2361
      597     2362
      598     2363    1   DCL VARIABLE$OBJECT CHAR(NBYTES) BASED;
      599     2364        %VD$INTREE_NODE (STCLASS="BASED(ORIGINAL$)");
      600     2400        %VD$BLOCK_DESC (STCLASS="BASED(ORIGINAL$)");
      601     2547        %VD$BUFFER (STCLASS="BASED(ORIGINAL$)");
      602     2605        %VD$BUFFER_HEADER (STCLASS="BASED(ORIGINAL$)");
      603     2641        %VD$ENCODED_NODE (STCLASS="BASED(ORIGINAL$)");
      604     2762        %VD$EVAL (STCLASS="BASED(ORIGINAL$)");
      605     3007        %VD$EVAL_PATTERN (STCLASS="BASED(ORIGINAL$)");
      606     3114        %VD$FILE_KEY (STCLASS="BASED(ORIGINAL$)");
      607     3163        %VD$FILE_NODE (STCLASS="BASED(ORIGINAL$)");
      608     3256        %VD$FIT (STCLASS="BASED(ORIGINAL$)");
      609     3292        %VD$IT_ADJUST (STCLASS="BASED(ORIGINAL$)");
      610     3329        %VD$IT_BLOCK_EXPR (STCLASS="BASED(ORIGINAL$)");
      611     3479        %VD$IT_COMMAND (STCLASS="BASED(ORIGINAL$)");
      612     3517        %VD$IT_OPERAND (STCLASS="BASED(ORIGINAL$)");
      613     3583        %VD$IT_OPERATOR (STCLASS="BASED(ORIGINAL$)");
      614     3620        %VD$IT_SELECT (STCLASS="BASED(ORIGINAL$)");
      615     3657        %VD$OBJECT_HEADER (STCLASS="BASED(ORIGINAL$)");
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:100  
      616     3679        %VD$PATTERN (STCLASS="BASED(ORIGINAL$)");
      617     3730        %VD$RECORD_SET (STCLASS="BASED(ORIGINAL$)");
      618     3808        %VD$STRING_HEADER (STCLASS="BASED(ORIGINAL$)");
      619     3844        %VD$STRUCTURE_SPEC (STCLASS="BASED(ORIGINAL$)");
      620     3881        %VD$TABS (STCLASS="BASED(ORIGINAL$)");
      621     3918        %VD$TEXTC_REMOTE (STCLASS="BASED(ORIGINAL$)");
      622     3979        %VD$WINDOW_BLOCK (STCLASS="BASED(ORIGINAL$)");
      623     4016        %VD$WINDOW_SPEC (STCLASS="BASED(ORIGINAL$)");
      624     4082
      625     4083
      626     4084
      627     4085    1           ORIGINAL$ = ADDR(ORIGINAL);

   4085  0 000002   200003 236100                    LDQ     @ORIGINAL,,AUTO
         0 000003   200005 756100                    STQ     ORIGINAL$,,AUTO

      628     4086    1           ORIGINAL_CLASS = ORIGINAL.CLASS#;

   4086  0 000004   200003 470500                    LDP0    @ORIGINAL,,AUTO
         0 000005   000000 236100                    LDQ     0,,PR0
         0 000006   000022 772000                    QRL     18
         0 000007   200007 756100                    STQ     ORIGINAL_CLASS,,AUTO

      629     4087    1           IF ORIGINAL_CLASS >= %CLS_MX

   4087  0 000010   000143 116007                    CMPQ    99,DL
         0 000011   000016 605000 0                  TPL     s:4089
         0 000012   200007 235100                    LDA     ORIGINAL_CLASS,,AUTO
         0 000013   000001 735000                    ALS     1
         0 000014   000000 220005 xsym               LDX0    VD_OBJECTS,AL
         0 000015   000024 605000 0                  TPL     s:4092

      630     4088    2             OR VD_OBJECTS.SIZE (ORIGINAL_CLASS) < 0 THEN DO;

      631     4089    2              CALL VDG$ESCREECH (ORIGINAL_CLASS);

   4089  0 000016   200007 631500                    EPPR1   ORIGINAL_CLASS,,AUTO
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:101  
         0 000017   200016 451500                    STP1    I+1,,AUTO
         0 000020   200016 630500                    EPPR0   I+1,,AUTO
         0 000021   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000022   000000 701000 xent               TSX1    VDG$ESCREECH
         0 000023   000000 011000                    NOP     0

      632     4090    2              END;

      633     4091
      634     4092    2           DO CASE (ORIGINAL_CLASS);

   4092  0 000024   200007 235100                    LDA     ORIGINAL_CLASS,,AUTO
         0 000025   000004 135007                    SBLA    4,DL
         0 000026   000050 115007                    CMPA    40,DL
         0 000027   000031 602005 0                  TNC     s:4092+5,AL
         0 000030   000117 710000 0                  TRA     s:4104
         0 000031   000101 710000 0                  TRA     s:4094
         0 000032   000117 710000 0                  TRA     s:4104
         0 000033   000117 710000 0                  TRA     s:4104
         0 000034   000117 710000 0                  TRA     s:4104
         0 000035   000117 710000 0                  TRA     s:4104
         0 000036   000117 710000 0                  TRA     s:4104
         0 000037   000117 710000 0                  TRA     s:4104
         0 000040   000117 710000 0                  TRA     s:4104
         0 000041   000117 710000 0                  TRA     s:4104
         0 000042   000117 710000 0                  TRA     s:4104
         0 000043   000117 710000 0                  TRA     s:4104
         0 000044   000117 710000 0                  TRA     s:4104
         0 000045   000117 710000 0                  TRA     s:4104
         0 000046   000117 710000 0                  TRA     s:4104
         0 000047   000117 710000 0                  TRA     s:4104
         0 000050   000117 710000 0                  TRA     s:4104
         0 000051   000117 710000 0                  TRA     s:4104
         0 000052   000117 710000 0                  TRA     s:4104
         0 000053   000117 710000 0                  TRA     s:4104
         0 000054   000117 710000 0                  TRA     s:4104
         0 000055   000117 710000 0                  TRA     s:4104
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:102  
         0 000056   000117 710000 0                  TRA     s:4104
         0 000057   000117 710000 0                  TRA     s:4104
         0 000060   000117 710000 0                  TRA     s:4104
         0 000061   000117 710000 0                  TRA     s:4104
         0 000062   000117 710000 0                  TRA     s:4104
         0 000063   000117 710000 0                  TRA     s:4104
         0 000064   000117 710000 0                  TRA     s:4104
         0 000065   000117 710000 0                  TRA     s:4104
         0 000066   000117 710000 0                  TRA     s:4104
         0 000067   000117 710000 0                  TRA     s:4104
         0 000070   000117 710000 0                  TRA     s:4104
         0 000071   000117 710000 0                  TRA     s:4104
         0 000072   000117 710000 0                  TRA     s:4104
         0 000073   000117 710000 0                  TRA     s:4104
         0 000074   000117 710000 0                  TRA     s:4104
         0 000075   000117 710000 0                  TRA     s:4104
         0 000076   000117 710000 0                  TRA     s:4104
         0 000077   000117 710000 0                  TRA     s:4104
         0 000100   000110 710000 0                  TRA     s:4099

      635     4093    2            CASE (%CLS_BUFFER);

      636     4094    2              OBJECT_LENGTH =

   4094  0 000101   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 000102   000002 236100                    LDQ     2,,PR0
         0 000103   000022 732000                    QRS     18
         0 000104   000017 036007                    ADLQ    15,DL
         0 000105   000004 506007                    DIV     4,DL
         0 000106   200010 756100                    STQ     OBJECT_LENGTH,,AUTO
         0 000107   000134 710000 0                  TRA     s:4111

      637     4095    2                (VD$BUFFER.LENGTH#
      638     4096    2                + SIZEC(VD$BUFFER_HEADER)
      639     4097    2                + 3) / %NB_PER_WORD;
      640     4098    2            CASE (%CLS_TEXTC_REMOTE);

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:103  
      641     4099    2              OBJECT_LENGTH =

   4099  0 000110   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 000111   000002 236100                    LDQ     2,,PR0
         0 000112   000033 772000                    QRL     27
         0 000113   000017 036007                    ADLQ    15,DL
         0 000114   000002 772000                    QRL     2
         0 000115   200010 756100                    STQ     OBJECT_LENGTH,,AUTO
         0 000116   000134 710000 0                  TRA     s:4111

      642     4100    2                (VD$TEXTC_REMOTE.LENGTH#
      643     4101    2                + SIZEC(VD$STRING_HEADER)
      644     4102    2                + 3) / %NB_PER_WORD;
      645     4103    2            CASE (ELSE);

      646     4104    2              IF ORIGINAL.SIZE# = 0 THEN

   4104  0 000117   200003 470500                    LDP0    @ORIGINAL,,AUTO
         0 000120   000000 720100                    LXL0    0,,PR0
         0 000121   000130 601000 0                  TNZ     s:4107

      647     4105    2                 OBJECT_LENGTH = VD_OBJECTS.SIZE (ORIGINAL_CLASS);

   4105  0 000122   200007 236100                    LDQ     ORIGINAL_CLASS,,AUTO
         0 000123   000001 736000                    QLS     1
         0 000124   000000 236006 xsym               LDQ     VD_OBJECTS,QL
         0 000125   000022 732000                    QRS     18
         0 000126   200010 756100                    STQ     OBJECT_LENGTH,,AUTO
         0 000127   000134 710000 0                  TRA     s:4111

      648     4106    2              ELSE
      649     4107    2                 OBJECT_LENGTH =

   4107  0 000130   000000 236100                    LDQ     0,,PR0
         0 000131   000022 736000                    QLS     18
         0 000132   000022 732000                    QRS     18
         0 000133   200010 756100                    STQ     OBJECT_LENGTH,,AUTO
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:104  

      650     4108    2                   ORIGINAL.SIZE#;
      651     4109    2            END;

      652     4110
      653     4111    1           CALL VDG$OALLOC (ORIGINAL_CLASS, NEW_PARAM$, OBJECT_LENGTH)

   4111  0 000134   200010 630500                    EPPR0   OBJECT_LENGTH,,AUTO
         0 000135   200020 450500                    STP0    I+3,,AUTO
         0 000136   200004 236100                    LDQ     @NEW_PARAM$,,AUTO
         0 000137   200017 756100                    STQ     I+2,,AUTO
         0 000140   200007 631500                    EPPR1   ORIGINAL_CLASS,,AUTO
         0 000141   200016 451500                    STP1    I+1,,AUTO
         0 000142   200016 630500                    EPPR0   I+1,,AUTO
         0 000143   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000144   000000 701000 xent               TSX1    VDG$OALLOC
         0 000145   002070 702000 0                  TSX2    OALLOC_FAILED

      654     4112    1             ALTRET (OALLOC_FAILED);
      655     4113    1           NEW$ = NEW_PARAM$;

   4113  0 000146   200004 470500                    LDP0    @NEW_PARAM$,,AUTO
         0 000147   000000 236100                    LDQ     0,,PR0
         0 000150   200006 756100                    STQ     NEW$,,AUTO

      656     4114
      657     4115    1           NBYTES = (OBJECT_LENGTH * %NB_PER_WORD) - SIZEC(VD$OBJECT_HEADER);

   4115  0 000151   200010 235100                    LDA     OBJECT_LENGTH,,AUTO
         0 000152   000002 735000                    ALS     2
         0 000153   000004 135007                    SBLA    4,DL
         0 000154   200011 755100                    STA     NBYTES,,AUTO

      658     4116
      659     4117    2           IF VD_OBJECTS.STR (ORIGINAL_CLASS) THEN DO;

   4117  0 000155   200007 235100                    LDA     ORIGINAL_CLASS,,AUTO
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:105  
         0 000156   000001 735000                    ALS     1
         0 000157   000000 236005 xsym               LDQ     VD_OBJECTS,AL
         0 000160   040000 316007                    CANQ    16384,DL
         0 000161   000230 600000 0                  TZE     s:4134

      660     4118    2              IF VD$TEXTC_REMOTE.LENGTH# = 0

   4118  0 000162   200005 471500                    LDP1    ORIGINAL$,,AUTO
         0 000163   100002 236100                    LDQ     2,,PR1
         0 000164   777000 316003                    CANQ    -512,DU
         0 000165   000175 601000 0                  TNZ     s:4123
         0 000166   200007 235100                    LDA     ORIGINAL_CLASS,,AUTO
         0 000167   000053 115007                    CMPA    43,DL
         0 000170   000175 600000 0                  TZE     s:4123

      661     4119    2                AND ORIGINAL_CLASS ~= %CLS_TEXTC_REMOTE THEN
      662     4120    2                 NBYTES = NBYTES - (LENGTHC(VD$STRING_HEADER) -

   4120  0 000171   200011 235100                    LDA     NBYTES,,AUTO
         0 000172   000005 135007                    SBLA    5,DL
         0 000173   200011 755100                    STA     NBYTES,,AUTO
         0 000174   000200 710000 0                  TRA     s:4124

      663     4121    2                   LENGTHC(VD$OBJECT_HEADER));
      664     4122    2              ELSE
      665     4123    2                 NBYTES = VD$TEXTC_REMOTE.LENGTH#;

   4123  0 000175   100002 236100                    LDQ     2,,PR1
         0 000176   000033 772000                    QRL     27
         0 000177   200011 756100                    STQ     NBYTES,,AUTO

      666     4124    2              NEW$->VD$TEXTC_REMOTE.LENGTH# = NBYTES;

   4124  0 000200   200006 473500                    LDP3    NEW$,,AUTO
         0 000201   200011 236100                    LDQ     NBYTES,,AUTO
         0 000202   000033 736000                    QLS     27
         0 000203   300002 552140                    STBQ    2,'40'O,PR3
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:106  

      667     4125    2              NEW$->VD$TEXTC_REMOTE.BYTES =

   4125  0 000204   300002 236100                    LDQ     2,,PR3
         0 000205   000033 772000                    QRL     27
         0 000206   200011 720100                    LXL0    NBYTES,,AUTO
         0 000207   000000 621006                    EAX1    0,QL
         0 000210   040140 100540                    MLR     fill='040'O
         0 000211   100002 200010                    ADSC9   2,,PR1                   cn=1,n=*X0
         0 000212   300002 200011                    ADSC9   2,,PR3                   cn=1,n=*X1

      668     4126    2                ADDR(VD$TEXTC_REMOTE.BYTES)->VARIABLE$OBJECT;
      669     4127    2              IF VD$STRING_HEADER.FLINK$ ~= ADDR(NIL) THEN

   4127  0 000213   100001 236100                    LDQ     1,,PR1
         0 000214   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000215   000301 600000 0                  TZE     s:4159

      670     4128    3   OCOPY_STRING_FLINK: DO;

   4128  0 000216                       OCOPY_STRIN* null
      671     4129    3                 CALL VDG$OCOPY (VD$STRING_HEADER.FLINK$->VD$STRING_HEADER,

   4129  0 000216   100001 474500                    LDP4    1,,PR1
         0 000217   200006 236100                    LDQ     NEW$,,AUTO
         0 000220   000001 036003                    ADLQ    1,DU
         0 000221   200017 756100                    STQ     I+2,,AUTO
         0 000222   200016 454500                    STP4    I+1,,AUTO
         0 000223   200016 630500                    EPPR0   I+1,,AUTO
         0 000224   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000225   000000 701000 0                  TSX1    s:59
         0 000226   002070 702000 0                  TSX2    OALLOC_FAILED

      672     4130    3                   NEW$->VD$STRING_HEADER.FLINK$)
      673     4131    3                   ALTRET (OCOPY_FAILED);
      674     4132    3                 END OCOPY_STRING_FLINK;

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:107  
      675     4133    2              END;

   4133  0 000227   000301 710000 0                  TRA     s:4159

      676     4134    2           ELSE IF VD_OBJECTS.BUF (ORIGINAL_CLASS) THEN DO;

   4134  0 000230   400000 316007                    CANQ    -131072,DL
         0 000231   000273 600000 0                  TZE     s:4152

      677     4135    2                 IF VD$BUFFER.LENGTH# = 0

   4135  0 000232   200005 471500                    LDP1    ORIGINAL$,,AUTO
         0 000233   100002 220100                    LDX0    2,,PR1
         0 000234   000244 601000 0                  TNZ     s:4140
         0 000235   200007 235100                    LDA     ORIGINAL_CLASS,,AUTO
         0 000236   000004 115007                    CMPA    4,DL
         0 000237   000244 600000 0                  TZE     s:4140

      678     4136    2                   AND ORIGINAL_CLASS ~= %CLS_BUFFER THEN
      679     4137    2                    NBYTES = NBYTES - (LENGTHC(VD$BUFFER_HEADER) -

   4137  0 000240   200011 236100                    LDQ     NBYTES,,AUTO
         0 000241   000006 136007                    SBLQ    6,DL
         0 000242   200011 756100                    STQ     NBYTES,,AUTO
         0 000243   000247 710000 0                  TRA     s:4141

      680     4138    2                      LENGTHC(VD$OBJECT_HEADER));
      681     4139    2                 ELSE
      682     4140    2                    NBYTES = VD$BUFFER.LENGTH#;

   4140  0 000244   100002 236100                    LDQ     2,,PR1
         0 000245   000022 732000                    QRS     18
         0 000246   200011 756100                    STQ     NBYTES,,AUTO

      683     4141    2                 NEW$->VD$BUFFER.LENGTH# = VD$BUFFER.LENGTH#;

   4141  0 000247   200006 473500                    LDP3    NEW$,,AUTO
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:108  
         0 000250   300002 740100                    STX0    2,,PR3

      684     4142    2                 ADDR(NEW$->VD$BUFFER.BYTES)->VARIABLE$OBJECT =

   4142  0 000251   000000 621006                    EAX1    0,QL
         0 000252   200011 722100                    LXL2    NBYTES,,AUTO
         0 000253   040140 100540                    MLR     fill='040'O
         0 000254   100002 400011                    ADSC9   2,,PR1                   cn=2,n=*X1
         0 000255   300002 400012                    ADSC9   2,,PR3                   cn=2,n=*X2

      685     4143    2                   ADDR(VD$BUFFER.BYTES)->VARIABLE$OBJECT;
      686     4144    2                 IF VD$BUFFER_HEADER.FLINK$ ~= ADDR(NIL) THEN

   4144  0 000256   100001 236100                    LDQ     1,,PR1
         0 000257   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000260   000301 600000 0                  TZE     s:4159

      687     4145    3   OCOPY_BUFFER_FLINK: DO;

   4145  0 000261                       OCOPY_BUFFE* null
      688     4146    3                    CALL VDG$OCOPY (VD$BUFFER_HEADER.FLINK$->VD$BUFFER_HEADER,

   4146  0 000261   100001 474500                    LDP4    1,,PR1
         0 000262   200006 236100                    LDQ     NEW$,,AUTO
         0 000263   000001 036003                    ADLQ    1,DU
         0 000264   200017 756100                    STQ     I+2,,AUTO
         0 000265   200016 454500                    STP4    I+1,,AUTO
         0 000266   200016 630500                    EPPR0   I+1,,AUTO
         0 000267   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000270   000000 701000 0                  TSX1    s:59
         0 000271   002070 702000 0                  TSX2    OALLOC_FAILED

      689     4147    3                      NEW$->VD$BUFFER_HEADER.FLINK$)
      690     4148    3                      ALTRET (OCOPY_FAILED);
      691     4149    3                    END OCOPY_BUFFER_FLINK;

      692     4150    2                 END;
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:109  

   4150  0 000272   000301 710000 0                  TRA     s:4159

      693     4151    2              ELSE DO;

      694     4152    2                 PINCRW(NEW$, SIZEW(VD$OBJECT_HEADER))->

   4152  0 000273   200005 471500                    LDP1    ORIGINAL$,,AUTO
         0 000274   200011 720100                    LXL0    NBYTES,,AUTO
         0 000275   200006 473500                    LDP3    NEW$,,AUTO
         0 000276   040140 100540                    MLR     fill='040'O
         0 000277   100001 000010                    ADSC9   1,,PR1                   cn=0,n=*X0
         0 000300   300001 000010                    ADSC9   1,,PR3                   cn=0,n=*X0

      695     4153    2                   VARIABLE$OBJECT =
      696     4154    2                   PINCRW(ORIGINAL$, SIZEW(VD$OBJECT_HEADER))->
      697     4155    2                   VARIABLE$OBJECT;
      698     4156    2                 END;

      699     4157
      700     4158
      701     4159    2           DO CASE (ORIGINAL_CLASS);

   4159  0 000301   200007 235100                    LDA     ORIGINAL_CLASS,,AUTO
         0 000302   000060 115007                    CMPA    48,DL
         0 000303   000305 602005 0                  TNC     s:4159+4,AL
         0 000304   002061 710000 0                  TRA     s:4701
         0 000305   002061 710000 0                  TRA     s:4701
         0 000306   000365 710000 0                  TRA     s:4162
         0 000307   000365 710000 0                  TRA     s:4162
         0 000310   002067 710000 0                  TRA     s:4705
         0 000311   002067 710000 0                  TRA     s:4705
         0 000312   002061 710000 0                  TRA     s:4701
         0 000313   002067 710000 0                  TRA     s:4705
         0 000314   002067 710000 0                  TRA     s:4705
         0 000315   002061 710000 0                  TRA     s:4701
         0 000316   000472 710000 0                  TRA     s:4226
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:110  
         0 000317   002061 710000 0                  TRA     s:4701
         0 000320   000570 710000 0                  TRA     s:4261
         0 000321   000632 710000 0                  TRA     s:4273
         0 000322   002067 710000 0                  TRA     s:4705
         0 000323   000650 710000 0                  TRA     s:4281
         0 000324   000666 710000 0                  TRA     s:4290
         0 000325   002067 710000 0                  TRA     s:4705
         0 000326   001021 710000 0                  TRA     s:4355
         0 000327   001046 710000 0                  TRA     s:4362
         0 000330   001121 710000 0                  TRA     s:4390
         0 000331   001251 710000 0                  TRA     s:4456
         0 000332   001317 710000 0                  TRA     s:4478
         0 000333   001400 710000 0                  TRA     s:4511
         0 000334   001453 710000 0                  TRA     s:4535
         0 000335   002067 710000 0                  TRA     s:4705
         0 000336   002067 710000 0                  TRA     s:4705
         0 000337   002067 710000 0                  TRA     s:4705
         0 000340   002067 710000 0                  TRA     s:4705
         0 000341   002067 710000 0                  TRA     s:4705
         0 000342   001526 710000 0                  TRA     s:4562
         0 000343   002067 710000 0                  TRA     s:4705
         0 000344   002061 710000 0                  TRA     s:4701
         0 000345   002067 710000 0                  TRA     s:4705
         0 000346   002067 710000 0                  TRA     s:4705
         0 000347   002067 710000 0                  TRA     s:4705
         0 000350   002067 710000 0                  TRA     s:4705
         0 000351   002067 710000 0                  TRA     s:4705
         0 000352   002067 710000 0                  TRA     s:4705
         0 000353   002061 710000 0                  TRA     s:4701
         0 000354   002061 710000 0                  TRA     s:4701
         0 000355   002067 710000 0                  TRA     s:4705
         0 000356   002067 710000 0                  TRA     s:4705
         0 000357   002061 710000 0                  TRA     s:4701
         0 000360   002067 710000 0                  TRA     s:4705
         0 000361   001617 710000 0                  TRA     s:4578
         0 000362   001703 710000 0                  TRA     s:4603
         0 000363   002061 710000 0                  TRA     s:4701
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:111  
         0 000364   002067 710000 0                  TRA     s:4705

      702     4160
      703     4161    2            CASE (%CLS_BLOCK_DESC, %CLS_BLOCK_BUFFER);

      704     4162    2              PTR$ = ORIGINAL$;

   4162  0 000365   200005 236100                    LDQ     ORIGINAL$,,AUTO
         0 000366   200013 756100                    STQ     PTR$,,AUTO

      705     4163    2              NEW_PTR$ = NEW$;

   4163  0 000367   200006 236100                    LDQ     NEW$,,AUTO
         0 000370   200014 756100                    STQ     NEW_PTR$,,AUTO

      706     4164    3              IF ORIGINAL_CLASS = %CLS_BLOCK_BUFFER THEN DO;

   4164  0 000371   000001 115007                    CMPA    1,DL
         0 000372   000411 601000 0                  TNZ     s:4183

      707     4165    3                 PTR$ = PALIGNW(ADDR(VD$BUFFER.BYTES));

   4165  0 000373   200005 236100                    LDQ     ORIGINAL$,,AUTO
         0 000374   000000 036000 1                  ADLQ    0
         0 000375   770000 036007                    ADLQ    -4096,DL
         0 000376   000001 376000 1                  ANQ     1
         0 000377   200013 756100                    STQ     PTR$,,AUTO

      708     4166    3                 NEW_PTR$ = PALIGNW(ADDR(NEW$->VD$BUFFER.BYTES));

   4166  0 000400   200006 236100                    LDQ     NEW$,,AUTO
         0 000401   000000 036000 1                  ADLQ    0
         0 000402   770000 036007                    ADLQ    -4096,DL
         0 000403   000001 376000 1                  ANQ     1
         0 000404   200014 756100                    STQ     NEW_PTR$,,AUTO

      709     4167    3                 NEW_PTR$->VD$BLOCK_DESC.OBJECT = PTR$->VD$BLOCK_DESC.OBJECT;
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:112  

   4167  0 000405   200013 470500                    LDP0    PTR$,,AUTO
         0 000406   000000 236100                    LDQ     0,,PR0
         0 000407   200014 471500                    LDP1    NEW_PTR$,,AUTO
         0 000410   100000 756100                    STQ     0,,PR1

      710     4168    3                 END;

      711     4169                   %COPYKEY (FKEY=PTR$->VD$BLOCK_DESC.FILE_KEY,
      712     4170                   TKEY=NEW_PTR$->VD$BLOCK_DESC.FILE_KEY);

   4183  0 000411   200013 470500                    LDP0    PTR$,,AUTO
         0 000412   200014 471500                    LDP1    NEW_PTR$,,AUTO
         0 000413   000100 100500                    MLR     fill='000'O
         0 000414   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         0 000415   100001 000010                    ADSC9   1,,PR1                   cn=0,n=8

   4183  0 000416   000001 720100                    LXL0    1,,PR0
         0 000417   000002 100003                    CMPX0   2,DU
         0 000420   000434 601000 0                  TNZ     s:4187

   4183  0 000421   000002 473500                    LDP3    2,,PR0
         0 000422   200014 236100                    LDQ     NEW_PTR$,,AUTO
         0 000423   000002 036003                    ADLQ    2,DU
         0 000424   200017 756100                    STQ     I+2,,AUTO
         0 000425   200016 453500                    STP3    I+1,,AUTO
         0 000426   200016 630500                    EPPR0   I+1,,AUTO
         0 000427   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000430   000000 701000 0                  TSX1    s:59
         0 000431   000433 702000 0                  TSX2    s:4184
         0 000432   000434 710000 0                  TRA     s:4187

   4184  0 000433   000000 702200 xent               TSX2  ! X66_AALT

      713     4186
      714     4187    2              CALL VDG$OCOPY_RANGE (PTR$->VD$BLOCK_DESC.RANGE,

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:113  
   4187  0 000434   200014 236100                    LDQ     NEW_PTR$,,AUTO
         0 000435   000003 036003                    ADLQ    3,DU
         0 000436   200017 756100                    STQ     I+2,,AUTO
         0 000437   200013 236100                    LDQ     PTR$,,AUTO
         0 000440   000003 036003                    ADLQ    3,DU
         0 000441   200016 756100                    STQ     I+1,,AUTO
         0 000442   200016 630500                    EPPR0   I+1,,AUTO
         0 000443   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000444   000000 701000 xent               TSX1    VDG$OCOPY_RANGE
         0 000445   002070 702000 0                  TSX2    OALLOC_FAILED

      715     4188    2                NEW_PTR$->VD$BLOCK_DESC.RANGE)
      716     4189    2                ALTRET (OCOPY_RANGE_FAILED);
      717     4190
      718     4191                   /* BlockDesc doesn't own .OPTIONS.STRUCTURE$->: don't make a new copy */
      719     4192                   %COPYKEY (FKEY=PTR$->VD$BLOCK_DESC.OPTIONS.KEY_INCR,
      720     4193                   TKEY=NEW_PTR$->VD$BLOCK_DESC.OPTIONS.KEY_INCR);

   4206  0 000446   200013 470500                    LDP0    PTR$,,AUTO
         0 000447   200014 471500                    LDP1    NEW_PTR$,,AUTO
         0 000450   000100 100500                    MLR     fill='000'O
         0 000451   000030 000010                    ADSC9   24,,PR0                  cn=0,n=8
         0 000452   100030 000010                    ADSC9   24,,PR1                  cn=0,n=8

   4206  0 000453   000030 720100                    LXL0    24,,PR0
         0 000454   000002 100003                    CMPX0   2,DU
         0 000455   002067 601000 0                  TNZ     s:4705

   4206  0 000456   000031 473500                    LDP3    25,,PR0
         0 000457   200014 236100                    LDQ     NEW_PTR$,,AUTO
         0 000460   000031 036003                    ADLQ    25,DU
         0 000461   200017 756100                    STQ     I+2,,AUTO
         0 000462   200016 453500                    STP3    I+1,,AUTO
         0 000463   200016 630500                    EPPR0   I+1,,AUTO
         0 000464   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000465   000000 701000 0                  TSX1    s:59
         0 000466   000470 702000 0                  TSX2    s:4207
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:114  
         0 000467   000471 710000 0                  TRA     s:4207+1

   4207  0 000470   000000 702200 xent               TSX2  ! X66_AALT

   4207  0 000471   002067 710000 0                  TRA     s:4705

      721     4209
      722     4210
      723     4211    2            CASE (%CLS_ENCODED_NODE);

      724     4212                   %COPYKEY (FKEY=VD$ENCODED_NODE.DESC.FILE_KEY,
      725     4213                   TKEY=NEW$->VD$ENCODED_NODE.DESC.FILE_KEY);

   4226  0 000472   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 000473   200006 471500                    LDP1    NEW$,,AUTO
         0 000474   000100 100500                    MLR     fill='000'O
         0 000475   000012 000010                    ADSC9   10,,PR0                  cn=0,n=8
         0 000476   100012 000010                    ADSC9   10,,PR1                  cn=0,n=8

   4226  0 000477   000012 720100                    LXL0    10,,PR0
         0 000500   000002 100003                    CMPX0   2,DU
         0 000501   000515 601000 0                  TNZ     s:4230

   4226  0 000502   000013 473500                    LDP3    11,,PR0
         0 000503   200006 236100                    LDQ     NEW$,,AUTO
         0 000504   000013 036003                    ADLQ    11,DU
         0 000505   200017 756100                    STQ     I+2,,AUTO
         0 000506   200016 453500                    STP3    I+1,,AUTO
         0 000507   200016 630500                    EPPR0   I+1,,AUTO
         0 000510   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000511   000000 701000 0                  TSX1    s:59
         0 000512   000514 702000 0                  TSX2    s:4227
         0 000513   000515 710000 0                  TRA     s:4230

   4227  0 000514   000000 702200 xent               TSX2  ! X66_AALT

      726     4229
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:115  
      727     4230    2              CALL VDG$OCOPY_LOCATION (VD$ENCODED_NODE.DESC.LOCATION,

   4230  0 000515   200006 236100                    LDQ     NEW$,,AUTO
         0 000516   000014 036003                    ADLQ    12,DU
         0 000517   200017 756100                    STQ     I+2,,AUTO
         0 000520   200005 236100                    LDQ     ORIGINAL$,,AUTO
         0 000521   000014 036003                    ADLQ    12,DU
         0 000522   200016 756100                    STQ     I+1,,AUTO
         0 000523   200016 630500                    EPPR0   I+1,,AUTO
         0 000524   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000525   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 000526   002070 702000 0                  TSX2    OALLOC_FAILED

      728     4231    2                NEW$->VD$ENCODED_NODE.DESC.LOCATION)
      729     4232    2                ALTRET (OCOPY_LOCATION_FAILED);
      730     4233
      731     4234                   %COPYSPEC (FSPEC=VD$ENCODED_NODE.DESC.SPEC,
      732     4235                   TSPEC=NEW$->VD$ENCODED_NODE.DESC.SPEC);

   4248  0 000527   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 000530   200006 471500                    LDP1    NEW$,,AUTO
         0 000531   000100 100500                    MLR     fill='000'O
         0 000532   000026 000010                    ADSC9   22,,PR0                  cn=0,n=8
         0 000533   100026 000010                    ADSC9   22,,PR1                  cn=0,n=8

   4248  0 000534   000026 720100                    LXL0    22,,PR0
         0 000535   000002 100003                    CMPX0   2,DU
         0 000536   000552 601000 0                  TNZ     s:4252

   4248  0 000537   000027 473500                    LDP3    23,,PR0
         0 000540   200006 236100                    LDQ     NEW$,,AUTO
         0 000541   000027 036003                    ADLQ    23,DU
         0 000542   200017 756100                    STQ     I+2,,AUTO
         0 000543   200016 453500                    STP3    I+1,,AUTO
         0 000544   200016 630500                    EPPR0   I+1,,AUTO
         0 000545   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000546   000000 701000 0                  TSX1    s:59
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:116  
         0 000547   000551 702000 0                  TSX2    s:4249
         0 000550   000552 710000 0                  TRA     s:4252

   4249  0 000551   000000 702200 xent               TSX2  ! X66_AALT

      733     4251
      734     4252    2              IF VD$ENCODED_NODE.DESC.DATA$ ~= ADDR(NIL) THEN

   4252  0 000552   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 000553   000030 236100                    LDQ     24,,PR0
         0 000554   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000555   002067 600000 0                  TZE     s:4705

      735     4253    3   OCOPY_ENCODED_NODE_DESC_DATA: DO;

   4253  0 000556                       OCOPY_ENCOD* null
      736     4254    3                 CALL VDG$OCOPY (VD$ENCODED_NODE.DESC.DATA$->VD$BUFFER,

   4254  0 000556   000030 471500                    LDP1    24,,PR0
         0 000557   200006 236100                    LDQ     NEW$,,AUTO
         0 000560   000030 036003                    ADLQ    24,DU
         0 000561   200017 756100                    STQ     I+2,,AUTO
         0 000562   200016 451500                    STP1    I+1,,AUTO
         0 000563   200016 630500                    EPPR0   I+1,,AUTO
         0 000564   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000565   000000 701000 0                  TSX1    s:59
         0 000566   002070 702000 0                  TSX2    OALLOC_FAILED

      737     4255    3                   NEW$->VD$ENCODED_NODE.DESC.DATA$)
      738     4256    3                   ALTRET (OCOPY_FAILED);
      739     4257    3                 END OCOPY_ENCODED_NODE_DESC_DATA;

   4257  0 000567   002067 710000 0                  TRA     s:4705

      740     4258
      741     4259
      742     4260    2            CASE (%CLS_EVAL);
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:117  

      743     4261    2              NEW$->VD$EVAL.BLINK$ = ADDR(NIL); /* Don't copy */

   4261  0 000570   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000571   200006 470500                    LDP0    NEW$,,AUTO
         0 000572   000001 756100                    STQ     1,,PR0

      744     4262    2              CALL VDG$OCOPY_RANGE (VD$EVAL.ENCLOSING, NEW$->VD$EVAL.ENCLOSING)

   4262  0 000573   200006 236100                    LDQ     NEW$,,AUTO
         0 000574   000002 036003                    ADLQ    2,DU
         0 000575   200017 756100                    STQ     I+2,,AUTO
         0 000576   200005 236100                    LDQ     ORIGINAL$,,AUTO
         0 000577   000002 036003                    ADLQ    2,DU
         0 000600   200016 756100                    STQ     I+1,,AUTO
         0 000601   200016 630500                    EPPR0   I+1,,AUTO
         0 000602   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000603   000000 701000 xent               TSX1    VDG$OCOPY_RANGE
         0 000604   002070 702000 0                  TSX2    OALLOC_FAILED

      745     4263    2                ALTRET (OCOPY_RANGE_FAILED);
      746     4264    2              CALL VDG$OCOPY_RANGE (VD$EVAL.RANGE, NEW$->VD$EVAL.RANGE)

   4264  0 000605   200006 236100                    LDQ     NEW$,,AUTO
         0 000606   000024 036003                    ADLQ    20,DU
         0 000607   200017 756100                    STQ     I+2,,AUTO
         0 000610   200005 236100                    LDQ     ORIGINAL$,,AUTO
         0 000611   000024 036003                    ADLQ    20,DU
         0 000612   200016 756100                    STQ     I+1,,AUTO
         0 000613   200016 630500                    EPPR0   I+1,,AUTO
         0 000614   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000615   000000 701000 xent               TSX1    VDG$OCOPY_RANGE
         0 000616   002070 702000 0                  TSX2    OALLOC_FAILED

      747     4265    2                ALTRET (OCOPY_RANGE_FAILED);
      748     4266    2              CALL VDG$OCOPY_RANGE (VD$EVAL.LAST_FOUND_RANGE,

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:118  
   4266  0 000617   200006 236100                    LDQ     NEW$,,AUTO
         0 000620   000046 036003                    ADLQ    38,DU
         0 000621   200017 756100                    STQ     I+2,,AUTO
         0 000622   200005 236100                    LDQ     ORIGINAL$,,AUTO
         0 000623   000046 036003                    ADLQ    38,DU
         0 000624   200016 756100                    STQ     I+1,,AUTO
         0 000625   200016 630500                    EPPR0   I+1,,AUTO
         0 000626   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000627   000000 701000 xent               TSX1    VDG$OCOPY_RANGE
         0 000630   002070 702000 0                  TSX2    OALLOC_FAILED
         0 000631   002067 710000 0                  TRA     s:4705

      749     4267    2                NEW$->VD$EVAL.LAST_FOUND_RANGE)
      750     4268    2                ALTRET (OCOPY_RANGE_FAILED);
      751     4269                   /* Eval doesn't own .NODE$->: don't make a new copy */
      752     4270
      753     4271
      754     4272    2            CASE (%CLS_EVAL_PATTERN);

      755     4273    2              NEW$->VD$EVAL_PATTERN.BLINK$ = ADDR(NIL); /* Don't copy */

   4273  0 000632   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000633   200006 470500                    LDP0    NEW$,,AUTO
         0 000634   000001 756100                    STQ     1,,PR0

      756     4274    2              CALL VDG$OCOPY_RANGE (VD$EVAL_PATTERN.RANGE,

   4274  0 000635   200006 236100                    LDQ     NEW$,,AUTO
         0 000636   000002 036003                    ADLQ    2,DU
         0 000637   200017 756100                    STQ     I+2,,AUTO
         0 000640   200005 236100                    LDQ     ORIGINAL$,,AUTO
         0 000641   000002 036003                    ADLQ    2,DU
         0 000642   200016 756100                    STQ     I+1,,AUTO
         0 000643   200016 630500                    EPPR0   I+1,,AUTO
         0 000644   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000645   000000 701000 xent               TSX1    VDG$OCOPY_RANGE
         0 000646   002070 702000 0                  TSX2    OALLOC_FAILED
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:119  
         0 000647   002067 710000 0                  TRA     s:4705

      757     4275    2                NEW$->VD$EVAL_PATTERN.RANGE)
      758     4276    2                ALTRET (OCOPY_RANGE_FAILED);
      759     4277                   /* EVAL_PATTERN doesn't own .PATTERN$->: don't make a new copy */
      760     4278
      761     4279
      762     4280    2            CASE (%CLS_FILE_KEY);

      763     4281    2              IF VD$FILE_KEY.FLINK$ ~= ADDR(NIL) THEN

   4281  0 000650   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 000651   000001 236100                    LDQ     1,,PR0
         0 000652   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000653   002067 600000 0                  TZE     s:4705

      764     4282    3   OCOPY_FILE_KEY_FLINK: DO;

   4282  0 000654                       OCOPY_FILE_* null
      765     4283    3                 CALL VDG$OCOPY (VD$FILE_KEY.FLINK$->VD$STRING_HEADER,

   4283  0 000654   000001 471500                    LDP1    1,,PR0
         0 000655   200006 236100                    LDQ     NEW$,,AUTO
         0 000656   000001 036003                    ADLQ    1,DU
         0 000657   200017 756100                    STQ     I+2,,AUTO
         0 000660   200016 451500                    STP1    I+1,,AUTO
         0 000661   200016 630500                    EPPR0   I+1,,AUTO
         0 000662   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000663   000000 701000 0                  TSX1    s:59
         0 000664   002070 702000 0                  TSX2    OALLOC_FAILED

      766     4284    3                   NEW$->VD$FILE_KEY.FLINK$)
      767     4285    3                   ALTRET (OCOPY_FAILED);
      768     4286    3                 END OCOPY_FILE_KEY_FLINK;

   4286  0 000665   002067 710000 0                  TRA     s:4705

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:120  
      769     4287
      770     4288
      771     4289    2            CASE (%CLS_FILE_NODE);

      772     4290    2              NEW$->VD$FILE_NODE.BLINK$ = ADDR(NIL); /* Don't copy */

   4290  0 000666   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000667   200006 470500                    LDP0    NEW$,,AUTO
         0 000670   000001 756100                    STQ     1,,PR0

      773     4291    2              IF VD$FILE_NODE.FLINK$ ~= ADDR(NIL) THEN

   4291  0 000671   200005 471500                    LDP1    ORIGINAL$,,AUTO
         0 000672   100002 236100                    LDQ     2,,PR1
         0 000673   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000674   000706 600000 0                  TZE     s:4312

      774     4292    3   OCOPY_FILE_NODE_FLINK: DO;

   4292  0 000675                       OCOPY_FILE_* null
      775     4293    3                 CALL VDG$OCOPY (VD$FILE_NODE.FLINK$->VD$FILE_NODE,

   4293  0 000675   100002 473500                    LDP3    2,,PR1
         0 000676   200006 236100                    LDQ     NEW$,,AUTO
         0 000677   000002 036003                    ADLQ    2,DU
         0 000700   200017 756100                    STQ     I+2,,AUTO
         0 000701   200016 453500                    STP3    I+1,,AUTO
         0 000702   200016 630500                    EPPR0   I+1,,AUTO
         0 000703   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000704   000000 701000 0                  TSX1    s:59
         0 000705   002070 702000 0                  TSX2    OALLOC_FAILED

      776     4294    3                   NEW$->VD$FILE_NODE.FLINK$)
      777     4295    3                   ALTRET (OCOPY_FAILED);
      778     4296    3                 END OCOPY_FILE_NODE_FLINK;

      779     4297
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:121  
      780     4298                   %COPYKEY (FKEY=VD$FILE_NODE.DESC.KEY,
      781     4299                   TKEY=NEW$->VD$FILE_NODE.DESC.KEY);

   4312  0 000706   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 000707   200006 471500                    LDP1    NEW$,,AUTO
         0 000710   000100 100500                    MLR     fill='000'O
         0 000711   000004 000010                    ADSC9   4,,PR0                   cn=0,n=8
         0 000712   100004 000010                    ADSC9   4,,PR1                   cn=0,n=8

   4312  0 000713   000004 720100                    LXL0    4,,PR0
         0 000714   000002 100003                    CMPX0   2,DU
         0 000715   000731 601000 0                  TNZ     s:4330

   4312  0 000716   000005 473500                    LDP3    5,,PR0
         0 000717   200006 236100                    LDQ     NEW$,,AUTO
         0 000720   000005 036003                    ADLQ    5,DU
         0 000721   200017 756100                    STQ     I+2,,AUTO
         0 000722   200016 453500                    STP3    I+1,,AUTO
         0 000723   200016 630500                    EPPR0   I+1,,AUTO
         0 000724   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000725   000000 701000 0                  TSX1    s:59
         0 000726   000730 702000 0                  TSX2    s:4313
         0 000727   000731 710000 0                  TRA     s:4330

   4313  0 000730   000000 702200 xent               TSX2  ! X66_AALT

      782     4315
      783     4316                   %COPYSPEC (FSPEC=VD$FILE_NODE.DESC.SPEC,
      784     4317                   TSPEC=NEW$->VD$FILE_NODE.DESC.SPEC);

   4330  0 000731   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 000732   200006 471500                    LDP1    NEW$,,AUTO
         0 000733   000100 100500                    MLR     fill='000'O
         0 000734   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8
         0 000735   100006 000010                    ADSC9   6,,PR1                   cn=0,n=8

   4330  0 000736   000006 720100                    LXL0    6,,PR0
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:122  
         0 000737   000002 100003                    CMPX0   2,DU
         0 000740   000754 601000 0                  TNZ     s:4333

   4330  0 000741   000007 473500                    LDP3    7,,PR0
         0 000742   200006 236100                    LDQ     NEW$,,AUTO
         0 000743   000007 036003                    ADLQ    7,DU
         0 000744   200017 756100                    STQ     I+2,,AUTO
         0 000745   200016 453500                    STP3    I+1,,AUTO
         0 000746   200016 630500                    EPPR0   I+1,,AUTO
         0 000747   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000750   000000 701000 0                  TSX1    s:59
         0 000751   000753 702000 0                  TSX2    s:4331
         0 000752   000754 710000 0                  TRA     s:4333

   4331  0 000753   000000 702200 xent               TSX2  ! X66_AALT

      785     4333    2              IF VD$FILE_NODE.DESC.DATA$ ~= ADDR(NIL) THEN

   4333  0 000754   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 000755   000010 236100                    LDQ     8,,PR0
         0 000756   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000757   000771 600000 0                  TZE     s:4340

      786     4334    3   OCOPY_FILE_NODE_DESC_DATA: DO;

   4334  0 000760                       OCOPY_FILE_* null
      787     4335    3                 CALL VDG$OCOPY (VD$FILE_NODE.DESC.DATA$->VD$BUFFER,

   4335  0 000760   000010 471500                    LDP1    8,,PR0
         0 000761   200006 236100                    LDQ     NEW$,,AUTO
         0 000762   000010 036003                    ADLQ    8,DU
         0 000763   200017 756100                    STQ     I+2,,AUTO
         0 000764   200016 451500                    STP1    I+1,,AUTO
         0 000765   200016 630500                    EPPR0   I+1,,AUTO
         0 000766   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000767   000000 701000 0                  TSX1    s:59
         0 000770   002070 702000 0                  TSX2    OALLOC_FAILED
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:123  

      788     4336    3                   NEW$->VD$FILE_NODE.DESC.DATA$)
      789     4337    3                   ALTRET (OCOPY_FAILED);
      790     4338    3                 END OCOPY_FILE_NODE_DESC_DATA;

      791     4339
      792     4340    2              IF VD$FILE_NODE.HEAD$ ~= ADDR(NIL) THEN

   4340  0 000771   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 000772   000012 236100                    LDQ     10,,PR0
         0 000773   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000774   002067 600000 0                  TZE     s:4705

      793     4341    3   OCOPY_FILE_NODE_HEAD: DO;

   4341  0 000775                       OCOPY_FILE_* null
      794     4342    3                 CALL VDG$OCOPY (VD$FILE_NODE.HEAD$->VD$FILE_NODE,

   4342  0 000775   000012 471500                    LDP1    10,,PR0
         0 000776   200006 236100                    LDQ     NEW$,,AUTO
         0 000777   000012 036003                    ADLQ    10,DU
         0 001000   200017 756100                    STQ     I+2,,AUTO
         0 001001   200016 451500                    STP1    I+1,,AUTO
         0 001002   200016 630500                    EPPR0   I+1,,AUTO
         0 001003   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001004   000000 701000 0                  TSX1    s:59
         0 001005   002070 702000 0                  TSX2    OALLOC_FAILED

      795     4343    3                   NEW$->VD$FILE_NODE.HEAD$)
      796     4344    3                   ALTRET (OCOPY_FAILED);
      797     4345
      798     4346    3                 NEW$->VD$FILE_NODE.TAIL$ = NEW$->VD$FILE_NODE.HEAD$;

   4346  0 001006   200006 470500                    LDP0    NEW$,,AUTO
         0 001007   000012 236100                    LDQ     10,,PR0
         0 001010   000013 756100                    STQ     11,,PR0

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:124  
      799     4347    4                 DO WHILE (NEW$->VD$FILE_NODE.TAIL$ ~= ADDR(NIL));

   4347  0 001011   001016 710000 0                  TRA     s:4350

      800     4348    4                    NEW$->VD$FILE_NODE.TAIL$ = NEW$->VD$FILE_NODE.TAIL$->

   4348  0 001012   200006 470500                    LDP0    NEW$,,AUTO
         0 001013   000013 471500                    LDP1    11,,PR0
         0 001014   100002 236100                    LDQ     2,,PR1
         0 001015   000013 756100                    STQ     11,,PR0

      801     4349    4                      VD$FILE_NODE.FLINK$;
      802     4350    4                    END;

   4350  0 001016   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001017   001012 601000 0                  TNZ     s:4348

      803     4351    3                 END OCOPY_FILE_NODE_HEAD;

   4351  0 001020   002067 710000 0                  TRA     s:4705

      804     4352
      805     4353
      806     4354    2            CASE (%CLS_FIT);

      807     4355    2              NEW$->VD$FIT.CODE2$ =

   4355  0 001021   200005 236100                    LDQ     ORIGINAL$,,AUTO
         0 001022   000022 772000                    QRL     18
         0 001023   200016 756100                    STQ     I+1,,AUTO
         0 001024   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001025   000001 236100                    LDQ     1,,PR0
         0 001026   000022 772000                    QRL     18
         0 001027   200016 136100                    SBLQ    I+1,,AUTO
         0 001030   000022 736000                    QLS     18
         0 001031   200006 036100                    ADLQ    NEW$,,AUTO
         0 001032   200006 471500                    LDP1    NEW$,,AUTO
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:125  
         0 001033   100001 756100                    STQ     1,,PR1

      808     4356    2                PINCRW(NEW$, POFFW(VD$FIT.CODE2$, ORIGINAL$));
      809     4357    2              NEW$->VD$FIT.CODE3$ =

   4357  0 001034   200005 235100                    LDA     ORIGINAL$,,AUTO
         0 001035   000022 771000                    ARL     18
         0 001036   200016 755100                    STA     I+1,,AUTO
         0 001037   000002 236100                    LDQ     2,,PR0
         0 001040   000022 772000                    QRL     18
         0 001041   200016 136100                    SBLQ    I+1,,AUTO
         0 001042   000022 736000                    QLS     18
         0 001043   200006 036100                    ADLQ    NEW$,,AUTO
         0 001044   100002 756100                    STQ     2,,PR1
         0 001045   002067 710000 0                  TRA     s:4705

      810     4358    2                PINCRW(NEW$, POFFW(VD$FIT.CODE3$, ORIGINAL$));
      811     4359
      812     4360
      813     4361    2            CASE (%CLS_IT_ADJUST);

      814     4362    2              NEW$->VD$IT_ADJUST.PARENT$ = ADDR(NIL); /* Don't copy */

   4362  0 001046   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001047   200006 470500                    LDP0    NEW$,,AUTO
         0 001050   000001 756100                    STQ     1,,PR0

      815     4363    2              IF VD$IT_ADJUST.FLINK$ ~= ADDR(NIL) THEN

   4363  0 001051   200005 471500                    LDP1    ORIGINAL$,,AUTO
         0 001052   100002 236100                    LDQ     2,,PR1
         0 001053   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001054   001066 600000 0                  TZE     s:4370

      816     4364    3   OCOPY_IT_ADJUST_FLINK: DO;

   4364  0 001055                       OCOPY_IT_AD* null
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:126  
      817     4365    3                 CALL VDG$OCOPY (VD$IT_ADJUST.FLINK$->VD$IT_ADJUST,

   4365  0 001055   100002 473500                    LDP3    2,,PR1
         0 001056   200006 236100                    LDQ     NEW$,,AUTO
         0 001057   000002 036003                    ADLQ    2,DU
         0 001060   200017 756100                    STQ     I+2,,AUTO
         0 001061   200016 453500                    STP3    I+1,,AUTO
         0 001062   200016 630500                    EPPR0   I+1,,AUTO
         0 001063   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001064   000000 701000 0                  TSX1    s:59
         0 001065   002070 702000 0                  TSX2    OALLOC_FAILED

      818     4366    3                   NEW$->VD$IT_ADJUST.FLINK$)
      819     4367    3                   ALTRET (OCOPY_FAILED);
      820     4368    3                 END OCOPY_IT_ADJUST_FLINK;

      821     4369
      822     4370    2              IF VD$IT_ADJUST.MOVEMENTS$ ~= ADDR(NIL) THEN

   4370  0 001066   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001067   000004 236100                    LDQ     4,,PR0
         0 001070   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001071   002067 600000 0                  TZE     s:4705

      823     4371    3   OCOPY_IT_ADJUST_MOVEMENTS: DO;

   4371  0 001072                       OCOPY_IT_AD* null
      824     4372                      /* VD$IT_ADJUST.MOVEMENTS$ actually points to any InTree node */
      825     4373    3                 CALL VDG$OCOPY (VD$IT_ADJUST.MOVEMENTS$->VD$INTREE_NODE,

   4373  0 001072   000004 471500                    LDP1    4,,PR0
         0 001073   200006 236100                    LDQ     NEW$,,AUTO
         0 001074   000004 036003                    ADLQ    4,DU
         0 001075   200017 756100                    STQ     I+2,,AUTO
         0 001076   200016 451500                    STP1    I+1,,AUTO
         0 001077   200016 630500                    EPPR0   I+1,,AUTO
         0 001100   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:127  
         0 001101   000000 701000 0                  TSX1    s:59
         0 001102   002070 702000 0                  TSX2    OALLOC_FAILED

      826     4374    3                   NEW$->VD$IT_ADJUST.MOVEMENTS$)
      827     4375    3                   ALTRET (OCOPY_FAILED);
      828     4376
      829     4377    3                 NEW$->VD$IT_ADJUST.MOVEMENTS_TAIL$ =

   4377  0 001103   200006 470500                    LDP0    NEW$,,AUTO
         0 001104   000004 236100                    LDQ     4,,PR0
         0 001105   000005 756100                    STQ     5,,PR0

      830     4378    3                   NEW$->VD$IT_ADJUST.MOVEMENTS$;
      831     4379    4                 DO WHILE (NEW$->VD$IT_ADJUST.MOVEMENTS_TAIL$ ~= ADDR(NIL));

   4379  0 001106   001116 710000 0                  TRA     s:4385

      832     4380    4                    NEW$->VD$IT_ADJUST.MOVEMENTS_TAIL$->

   4380  0 001107   200006 470500                    LDP0    NEW$,,AUTO
         0 001110   000005 471500                    LDP1    5,,PR0
         0 001111   200006 236100                    LDQ     NEW$,,AUTO
         0 001112   100001 756100                    STQ     1,,PR1

      833     4381    4                      VD$INTREE_NODE.PARENT$ = NEW$;
      834     4382    4                    NEW$->VD$IT_ADJUST.MOVEMENTS_TAIL$ =

   4382  0 001113   000005 471500                    LDP1    5,,PR0
         0 001114   100002 236100                    LDQ     2,,PR1
         0 001115   000005 756100                    STQ     5,,PR0

      835     4383    4                      NEW$->VD$IT_ADJUST.MOVEMENTS_TAIL$->
      836     4384    4                      VD$INTREE_NODE.FLINK$;
      837     4385    4                    END;

   4385  0 001116   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001117   001107 601000 0                  TNZ     s:4380
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:128  

      838     4386    3                 END OCOPY_IT_ADJUST_MOVEMENTS;

   4386  0 001120   002067 710000 0                  TRA     s:4705

      839     4387
      840     4388
      841     4389    2            CASE (%CLS_IT_BLOCK_EXPR);

      842     4390    2              IF VD$IT_BLOCK_EXPR.FLINK$ ~= ADDR(NIL) THEN

   4390  0 001121   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001122   000002 236100                    LDQ     2,,PR0
         0 001123   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001124   001136 600000 0                  TZE     s:4411

      843     4391    3   OCOPY_IT_BLOCK_EXPR_FLINK: DO;

   4391  0 001125                       OCOPY_IT_BL* null
      844     4392    3                 CALL VDG$OCOPY (VD$IT_BLOCK_EXPR.FLINK$->VD$IT_BLOCK_EXPR,

   4392  0 001125   000002 471500                    LDP1    2,,PR0
         0 001126   200006 236100                    LDQ     NEW$,,AUTO
         0 001127   000002 036003                    ADLQ    2,DU
         0 001130   200017 756100                    STQ     I+2,,AUTO
         0 001131   200016 451500                    STP1    I+1,,AUTO
         0 001132   200016 630500                    EPPR0   I+1,,AUTO
         0 001133   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001134   000000 701000 0                  TSX1    s:59
         0 001135   002070 702000 0                  TSX2    OALLOC_FAILED

      845     4393    3                   NEW$->VD$IT_BLOCK_EXPR.FLINK$)
      846     4394    3                   ALTRET (OCOPY_FAILED);
      847     4395    3                 END OCOPY_IT_BLOCK_EXPR_FLINK;

      848     4396
      849     4397                   %COPYKEY (FKEY="VD$IT_BLOCK_EXPR.DOMAINN.FILE_KEY",
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:129  
      850     4398                   TKEY="NEW$->VD$IT_BLOCK_EXPR.DOMAINN.FILE_KEY");

   4411  0 001136   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001137   200006 471500                    LDP1    NEW$,,AUTO
         0 001140   000100 100500                    MLR     fill='000'O
         0 001141   000004 000010                    ADSC9   4,,PR0                   cn=0,n=8
         0 001142   100004 000010                    ADSC9   4,,PR1                   cn=0,n=8

   4411  0 001143   000004 720100                    LXL0    4,,PR0
         0 001144   000002 100003                    CMPX0   2,DU
         0 001145   001161 601000 0                  TNZ     s:4414

   4411  0 001146   000005 473500                    LDP3    5,,PR0
         0 001147   200006 236100                    LDQ     NEW$,,AUTO
         0 001150   000005 036003                    ADLQ    5,DU
         0 001151   200017 756100                    STQ     I+2,,AUTO
         0 001152   200016 453500                    STP3    I+1,,AUTO
         0 001153   200016 630500                    EPPR0   I+1,,AUTO
         0 001154   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001155   000000 701000 0                  TSX1    s:59
         0 001156   001160 702000 0                  TSX2    s:4412
         0 001157   001161 710000 0                  TRA     s:4414

   4412  0 001160   000000 702200 xent               TSX2  ! X66_AALT

      851     4414    2              CALL VDG$OCOPY_RANGE (VD$IT_BLOCK_EXPR.DOMAINN.RANGE,

   4414  0 001161   200006 236100                    LDQ     NEW$,,AUTO
         0 001162   000006 036003                    ADLQ    6,DU
         0 001163   200017 756100                    STQ     I+2,,AUTO
         0 001164   200005 236100                    LDQ     ORIGINAL$,,AUTO
         0 001165   000006 036003                    ADLQ    6,DU
         0 001166   200016 756100                    STQ     I+1,,AUTO
         0 001167   200016 630500                    EPPR0   I+1,,AUTO
         0 001170   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001171   000000 701000 xent               TSX1    VDG$OCOPY_RANGE
         0 001172   002070 702000 0                  TSX2    OALLOC_FAILED
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:130  

      852     4415    2                NEW$->VD$IT_BLOCK_EXPR.DOMAINN.RANGE)
      853     4416    2                ALTRET (OCOPY_RANGE_FAILED);
      854     4417
      855     4418                 /* ItBlockExpr doesn't own .OPTIONS.STRUCTURE$->: don't make a new copy */
      856     4419                   %COPYKEY (FKEY=VD$IT_BLOCK_EXPR.OPTIONS.KEY_INCR,
      857     4420                   TKEY=NEW$->VD$IT_BLOCK_EXPR.OPTIONS.KEY_INCR);

   4433  0 001173   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001174   200006 471500                    LDP1    NEW$,,AUTO
         0 001175   000100 100500                    MLR     fill='000'O
         0 001176   000033 000010                    ADSC9   27,,PR0                  cn=0,n=8
         0 001177   100033 000010                    ADSC9   27,,PR1                  cn=0,n=8

   4433  0 001200   000033 720100                    LXL0    27,,PR0
         0 001201   000002 100003                    CMPX0   2,DU
         0 001202   001216 601000 0                  TNZ     s:4437

   4433  0 001203   000034 473500                    LDP3    28,,PR0
         0 001204   200006 236100                    LDQ     NEW$,,AUTO
         0 001205   000034 036003                    ADLQ    28,DU
         0 001206   200017 756100                    STQ     I+2,,AUTO
         0 001207   200016 453500                    STP3    I+1,,AUTO
         0 001210   200016 630500                    EPPR0   I+1,,AUTO
         0 001211   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001212   000000 701000 0                  TSX1    s:59
         0 001213   001215 702000 0                  TSX2    s:4434
         0 001214   001216 710000 0                  TRA     s:4437

   4434  0 001215   000000 702200 xent               TSX2  ! X66_AALT

      858     4436
      859     4437    2              IF VD$IT_BLOCK_EXPR.SELECTS$ ~= ADDR(NIL) THEN

   4437  0 001216   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001217   000035 236100                    LDQ     29,,PR0
         0 001220   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:131  
         0 001221   002067 600000 0                  TZE     s:4705

      860     4438    3   OCOPY_IT_BLOCK_EXPR_SELECTS: DO;

   4438  0 001222                       OCOPY_IT_BL* null
      861     4439    3                 CALL VDG$OCOPY (VD$IT_BLOCK_EXPR.SELECTS$->VD$IT_SELECT,

   4439  0 001222   000035 471500                    LDP1    29,,PR0
         0 001223   200006 236100                    LDQ     NEW$,,AUTO
         0 001224   000035 036003                    ADLQ    29,DU
         0 001225   200017 756100                    STQ     I+2,,AUTO
         0 001226   200016 451500                    STP1    I+1,,AUTO
         0 001227   200016 630500                    EPPR0   I+1,,AUTO
         0 001230   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001231   000000 701000 0                  TSX1    s:59
         0 001232   002070 702000 0                  TSX2    OALLOC_FAILED

      862     4440    3                   NEW$->VD$IT_BLOCK_EXPR.SELECTS$)
      863     4441    3                   ALTRET (OCOPY_FAILED);
      864     4442
      865     4443    3                 NEW$->VD$IT_BLOCK_EXPR.SELECTS_TAIL$ =

   4443  0 001233   200006 470500                    LDP0    NEW$,,AUTO
         0 001234   000035 236100                    LDQ     29,,PR0
         0 001235   000036 756100                    STQ     30,,PR0

      866     4444    3                   NEW$->VD$IT_BLOCK_EXPR.SELECTS$;
      867     4445    4                 DO WHILE (NEW$->VD$IT_BLOCK_EXPR.SELECTS_TAIL$ ~= ADDR(NIL));

   4445  0 001236   001246 710000 0                  TRA     s:4451

      868     4446    4                    NEW$->VD$IT_BLOCK_EXPR.SELECTS_TAIL$->

   4446  0 001237   200006 470500                    LDP0    NEW$,,AUTO
         0 001240   000036 471500                    LDP1    30,,PR0
         0 001241   200006 236100                    LDQ     NEW$,,AUTO
         0 001242   100001 756100                    STQ     1,,PR1
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:132  

      869     4447    4                      VD$IT_SELECT.PARENT$ = NEW$;
      870     4448    4                    NEW$->VD$IT_BLOCK_EXPR.SELECTS_TAIL$ =

   4448  0 001243   000036 471500                    LDP1    30,,PR0
         0 001244   100002 236100                    LDQ     2,,PR1
         0 001245   000036 756100                    STQ     30,,PR0

      871     4449    4                      NEW$->VD$IT_BLOCK_EXPR.SELECTS_TAIL$->
      872     4450    4                      VD$IT_SELECT.FLINK$;
      873     4451    4                    END;

   4451  0 001246   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001247   001237 601000 0                  TNZ     s:4446

      874     4452    3                 END OCOPY_IT_BLOCK_EXPR_SELECTS;

   4452  0 001250   002067 710000 0                  TRA     s:4705

      875     4453
      876     4454
      877     4455    2            CASE (%CLS_IT_COMMAND);

      878     4456    2              NEW$->VD$IT_COMMAND.PARENT$ = ADDR(NIL); /* Don't copy */

   4456  0 001251   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001252   200006 470500                    LDP0    NEW$,,AUTO
         0 001253   000001 756100                    STQ     1,,PR0

      879     4457    2              IF VD$IT_COMMAND.FLINK$ ~= ADDR(NIL) THEN

   4457  0 001254   200005 471500                    LDP1    ORIGINAL$,,AUTO
         0 001255   100002 236100                    LDQ     2,,PR1
         0 001256   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001257   001271 600000 0                  TZE     s:4466

      880     4458    3   OCOPY_IT_COMMAND_FLINK: DO;
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:133  

   4458  0 001260                       OCOPY_IT_CO* null
      881     4459    3                 CALL VDG$OCOPY (VD$IT_COMMAND.FLINK$->VD$INTREE_NODE,

   4459  0 001260   100002 473500                    LDP3    2,,PR1
         0 001261   200006 236100                    LDQ     NEW$,,AUTO
         0 001262   000002 036003                    ADLQ    2,DU
         0 001263   200017 756100                    STQ     I+2,,AUTO
         0 001264   200016 453500                    STP3    I+1,,AUTO
         0 001265   200016 630500                    EPPR0   I+1,,AUTO
         0 001266   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001267   000000 701000 0                  TSX1    s:59
         0 001270   002070 702000 0                  TSX2    OALLOC_FAILED

      882     4460    3                   NEW$->VD$IT_COMMAND.FLINK$)
      883     4461    3                   ALTRET (OCOPY_FAILED);
      884     4462    3                 END OCOPY_IT_COMMAND_FLINK;

      885     4463
      886     4464                   /* IT_COMMAND doesn't own .PT_BLOCK_EXPR$->: don't make new copy */
      887     4465
      888     4466    3              DO I = 0 TO %(MX_COMMAND_PARAMS-1);

   4466  0 001271   200015 450100                    STZ     I,,AUTO

      889     4467    3                 IF VD$IT_COMMAND.PARAM$ (I) ~= ADDR(NIL) THEN

   4467  0 001272   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001273   200015 720100                    LXL0    I,,AUTO
         0 001274   000006 236110                    LDQ     6,X0,PR0
         0 001275   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001276   001312 600000 0                  TZE     s:4474

      890     4468    4   OCOPY_IT_COMMAND_PARAM: DO;

   4468  0 001277                       OCOPY_IT_CO* null
      891     4469    4                    CALL VDG$OCOPY (VD$IT_COMMAND.PARAM$ (I)->
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:134  

   4469  0 001277   000006 471510                    LDP1    6,X0,PR0
         0 001300   200015 236100                    LDQ     I,,AUTO
         0 001301   000022 736000                    QLS     18
         0 001302   000006 036003                    ADLQ    6,DU
         0 001303   200006 036100                    ADLQ    NEW$,,AUTO
         0 001304   200017 756100                    STQ     I+2,,AUTO
         0 001305   200016 451500                    STP1    I+1,,AUTO
         0 001306   200016 630500                    EPPR0   I+1,,AUTO
         0 001307   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001310   000000 701000 0                  TSX1    s:59
         0 001311   002070 702000 0                  TSX2    OALLOC_FAILED

      892     4470    4                      VD$OBJECT_HEADER,
      893     4471    4                      NEW$->VD$IT_COMMAND.PARAM$ (I))
      894     4472    4                      ALTRET (OCOPY_FAILED);
      895     4473    4                    END OCOPY_IT_COMMAND_PARAM;

      896     4474    3                 END;

   4474  0 001312   200015 054100                    AOS     I,,AUTO
         0 001313   200015 235100                    LDA     I,,AUTO
         0 001314   000010 115007                    CMPA    8,DL
         0 001315   001272 604400 0                  TMOZ    s:4467
         0 001316   002067 710000 0                  TRA     s:4705

      897     4475
      898     4476
      899     4477    2            CASE (%CLS_IT_OPERAND);

      900     4478    2              NEW$->VD$IT_OPERAND.PARENT$ = ADDR(NIL); /* Don't copy */

   4478  0 001317   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001320   200006 470500                    LDP0    NEW$,,AUTO
         0 001321   000001 756100                    STQ     1,,PR0

      901     4479    2              IF VD$IT_OPERAND.FLINK$ ~= ADDR(NIL) THEN
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:135  

   4479  0 001322   200005 471500                    LDP1    ORIGINAL$,,AUTO
         0 001323   100002 236100                    LDQ     2,,PR1
         0 001324   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001325   001337 600000 0                  TZE     s:4499

      902     4480    3   OCOPY_IT_OPERAND_FLINK: DO;

   4480  0 001326                       OCOPY_IT_OP* null
      903     4481    3                 CALL VDG$OCOPY (VD$IT_OPERAND.FLINK$->VD$INTREE_NODE,

   4481  0 001326   100002 473500                    LDP3    2,,PR1
         0 001327   200006 236100                    LDQ     NEW$,,AUTO
         0 001330   000002 036003                    ADLQ    2,DU
         0 001331   200017 756100                    STQ     I+2,,AUTO
         0 001332   200016 453500                    STP3    I+1,,AUTO
         0 001333   200016 630500                    EPPR0   I+1,,AUTO
         0 001334   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001335   000000 701000 0                  TSX1    s:59
         0 001336   002070 702000 0                  TSX2    OALLOC_FAILED

      904     4482    3                   NEW$->VD$IT_OPERAND.FLINK$)
      905     4483    3                   ALTRET (OCOPY_FAILED);
      906     4484    3                 END OCOPY_IT_OPERAND_FLINK;

      907     4485
      908     4486                   %COPYKEY (FKEY=VD$IT_OPERAND.KEY, TKEY=NEW$->VD$IT_OPERAND.KEY);

   4499  0 001337   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001340   200006 471500                    LDP1    NEW$,,AUTO
         0 001341   000100 100500                    MLR     fill='000'O
         0 001342   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8
         0 001343   100006 000010                    ADSC9   6,,PR1                   cn=0,n=8

   4499  0 001344   000006 720100                    LXL0    6,,PR0
         0 001345   000002 100003                    CMPX0   2,DU
         0 001346   001362 601000 0                  TNZ     s:4502
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:136  

   4499  0 001347   000007 473500                    LDP3    7,,PR0
         0 001350   200006 236100                    LDQ     NEW$,,AUTO
         0 001351   000007 036003                    ADLQ    7,DU
         0 001352   200017 756100                    STQ     I+2,,AUTO
         0 001353   200016 453500                    STP3    I+1,,AUTO
         0 001354   200016 630500                    EPPR0   I+1,,AUTO
         0 001355   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001356   000000 701000 0                  TSX1    s:59
         0 001357   001361 702000 0                  TSX2    s:4500
         0 001360   001362 710000 0                  TRA     s:4502

   4500  0 001361   000000 702200 xent               TSX2  ! X66_AALT

      909     4502    2              IF VD$IT_OPERAND.PARAM$ ~= ADDR(NIL) THEN

   4502  0 001362   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001363   000010 236100                    LDQ     8,,PR0
         0 001364   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001365   002067 600000 0                  TZE     s:4705

      910     4503    3   OCOPY_IT_OPERAND_PARAM: DO;

   4503  0 001366                       OCOPY_IT_OP* null
      911     4504    3                 CALL VDG$OCOPY (VD$IT_OPERAND.PARAM$->VD$OBJECT_HEADER,

   4504  0 001366   000010 471500                    LDP1    8,,PR0
         0 001367   200006 236100                    LDQ     NEW$,,AUTO
         0 001370   000010 036003                    ADLQ    8,DU
         0 001371   200017 756100                    STQ     I+2,,AUTO
         0 001372   200016 451500                    STP1    I+1,,AUTO
         0 001373   200016 630500                    EPPR0   I+1,,AUTO
         0 001374   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001375   000000 701000 0                  TSX1    s:59
         0 001376   002070 702000 0                  TSX2    OALLOC_FAILED

      912     4505    3                   NEW$->VD$IT_OPERAND.PARAM$)
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:137  
      913     4506    3                   ALTRET (OCOPY_FAILED);
      914     4507    3                 END OCOPY_IT_OPERAND_PARAM;

   4507  0 001377   002067 710000 0                  TRA     s:4705

      915     4508
      916     4509
      917     4510    2            CASE (%CLS_IT_OPERATOR);

      918     4511    2              NEW$->VD$IT_OPERATOR.PARENT$ = ADDR(NIL); /* Don't copy */

   4511  0 001400   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001401   200006 470500                    LDP0    NEW$,,AUTO
         0 001402   000001 756100                    STQ     1,,PR0

      919     4512    2              IF VD$IT_OPERATOR.FLINK$ ~= ADDR(NIL) THEN

   4512  0 001403   200005 471500                    LDP1    ORIGINAL$,,AUTO
         0 001404   100002 236100                    LDQ     2,,PR1
         0 001405   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001406   001420 600000 0                  TZE     s:4519

      920     4513    3   OCOPY_IT_OPERATOR_FLINK: DO;

   4513  0 001407                       OCOPY_IT_OP* null
      921     4514    3                 CALL VDG$OCOPY (VD$IT_OPERATOR.FLINK$->VD$INTREE_NODE,

   4514  0 001407   100002 473500                    LDP3    2,,PR1
         0 001410   200006 236100                    LDQ     NEW$,,AUTO
         0 001411   000002 036003                    ADLQ    2,DU
         0 001412   200017 756100                    STQ     I+2,,AUTO
         0 001413   200016 453500                    STP3    I+1,,AUTO
         0 001414   200016 630500                    EPPR0   I+1,,AUTO
         0 001415   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001416   000000 701000 0                  TSX1    s:59
         0 001417   002070 702000 0                  TSX2    OALLOC_FAILED

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:138  
      922     4515    3                   NEW$->VD$IT_OPERATOR.FLINK$)
      923     4516    3                   ALTRET (OCOPY_FAILED);
      924     4517    3                 END OCOPY_IT_OPERATOR_FLINK;

      925     4518
      926     4519    2              IF VD$IT_OPERATOR.OPERAND$ ~= ADDR(NIL) THEN

   4519  0 001420   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001421   000004 236100                    LDQ     4,,PR0
         0 001422   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001423   001435 600000 0                  TZE     s:4526

      927     4520    3   OCOPY_IT_OPERATOR_OPERAND: DO;

   4520  0 001424                       OCOPY_IT_OP* null
      928     4521    3                 CALL VDG$OCOPY (VD$IT_OPERATOR.OPERAND$->VD$INTREE_NODE,

   4521  0 001424   000004 471500                    LDP1    4,,PR0
         0 001425   200006 236100                    LDQ     NEW$,,AUTO
         0 001426   000004 036003                    ADLQ    4,DU
         0 001427   200017 756100                    STQ     I+2,,AUTO
         0 001430   200016 451500                    STP1    I+1,,AUTO
         0 001431   200016 630500                    EPPR0   I+1,,AUTO
         0 001432   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001433   000000 701000 0                  TSX1    s:59
         0 001434   002070 702000 0                  TSX2    OALLOC_FAILED

      929     4522    3                   NEW$->VD$IT_OPERATOR.OPERAND$)
      930     4523    3                   ALTRET (OCOPY_FAILED);
      931     4524    3                 END OCOPY_IT_OPERATOR_OPERAND;

      932     4525
      933     4526    2              IF VD$IT_OPERATOR.R_OPERAND$ ~= ADDR(NIL) THEN

   4526  0 001435   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001436   000005 236100                    LDQ     5,,PR0
         0 001437   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:139  
         0 001440   002067 600000 0                  TZE     s:4705

      934     4527    3   OCOPY_IT_OPERATOR_R_OPERAND: DO;

   4527  0 001441                       OCOPY_IT_OP* null
      935     4528    3                 CALL VDG$OCOPY (VD$IT_OPERATOR.R_OPERAND$->VD$INTREE_NODE,

   4528  0 001441   000005 471500                    LDP1    5,,PR0
         0 001442   200006 236100                    LDQ     NEW$,,AUTO
         0 001443   000005 036003                    ADLQ    5,DU
         0 001444   200017 756100                    STQ     I+2,,AUTO
         0 001445   200016 451500                    STP1    I+1,,AUTO
         0 001446   200016 630500                    EPPR0   I+1,,AUTO
         0 001447   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001450   000000 701000 0                  TSX1    s:59
         0 001451   002070 702000 0                  TSX2    OALLOC_FAILED

      936     4529    3                   NEW$->VD$IT_OPERATOR.R_OPERAND$)
      937     4530    3                   ALTRET (OCOPY_FAILED);
      938     4531    3                 END OCOPY_IT_OPERATOR_R_OPERAND;

   4531  0 001452   002067 710000 0                  TRA     s:4705

      939     4532
      940     4533
      941     4534    2            CASE (%CLS_IT_SELECT);

      942     4535    2              NEW$->VD$IT_SELECT.PARENT$ = ADDR(NIL); /* Don't copy */

   4535  0 001453   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001454   200006 470500                    LDP0    NEW$,,AUTO
         0 001455   000001 756100                    STQ     1,,PR0

      943     4536    2              IF VD$IT_SELECT.FLINK$ ~= ADDR(NIL) THEN

   4536  0 001456   200005 471500                    LDP1    ORIGINAL$,,AUTO
         0 001457   100002 236100                    LDQ     2,,PR1
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:140  
         0 001460   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001461   001473 600000 0                  TZE     s:4543

      944     4537    3   OCOPY_IT_SELECT_FLINK: DO;

   4537  0 001462                       OCOPY_IT_SE* null
      945     4538    3                 CALL VDG$OCOPY (VD$IT_SELECT.FLINK$->VD$IT_SELECT,

   4538  0 001462   100002 473500                    LDP3    2,,PR1
         0 001463   200006 236100                    LDQ     NEW$,,AUTO
         0 001464   000002 036003                    ADLQ    2,DU
         0 001465   200017 756100                    STQ     I+2,,AUTO
         0 001466   200016 453500                    STP3    I+1,,AUTO
         0 001467   200016 630500                    EPPR0   I+1,,AUTO
         0 001470   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001471   000000 701000 0                  TSX1    s:59
         0 001472   002070 702000 0                  TSX2    OALLOC_FAILED

      946     4539    3                   NEW$->VD$IT_SELECT.FLINK$)
      947     4540    3                   ALTRET (OCOPY_FAILED);
      948     4541    3                 END OCOPY_IT_SELECT_FLINK;

      949     4542
      950     4543    2              IF VD$IT_SELECT.ADJUSTS$ ~= ADDR(NIL) THEN

   4543  0 001473   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001474   000004 236100                    LDQ     4,,PR0
         0 001475   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001476   002067 600000 0                  TZE     s:4705

      951     4544    3   OCOPY_IT_SELECT_ADJUSTS: DO;

   4544  0 001477                       OCOPY_IT_SE* null
      952     4545    3                 CALL VDG$OCOPY (VD$IT_SELECT.ADJUSTS$->VD$IT_ADJUST,

   4545  0 001477   000004 471500                    LDP1    4,,PR0
         0 001500   200006 236100                    LDQ     NEW$,,AUTO
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:141  
         0 001501   000004 036003                    ADLQ    4,DU
         0 001502   200017 756100                    STQ     I+2,,AUTO
         0 001503   200016 451500                    STP1    I+1,,AUTO
         0 001504   200016 630500                    EPPR0   I+1,,AUTO
         0 001505   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001506   000000 701000 0                  TSX1    s:59
         0 001507   002070 702000 0                  TSX2    OALLOC_FAILED

      953     4546    3                   NEW$->VD$IT_SELECT.ADJUSTS$)
      954     4547    3                   ALTRET (OCOPY_FAILED);
      955     4548
      956     4549    3                 NEW$->VD$IT_SELECT.ADJUSTS_TAIL$ =

   4549  0 001510   200006 470500                    LDP0    NEW$,,AUTO
         0 001511   000004 236100                    LDQ     4,,PR0
         0 001512   000005 756100                    STQ     5,,PR0

      957     4550    3                   NEW$->VD$IT_SELECT.ADJUSTS$;
      958     4551    4                 DO WHILE (NEW$->VD$IT_SELECT.ADJUSTS_TAIL$ ~= ADDR(NIL));

   4551  0 001513   001523 710000 0                  TRA     s:4557

      959     4552    4                    NEW$->VD$IT_SELECT.ADJUSTS_TAIL$->

   4552  0 001514   200006 470500                    LDP0    NEW$,,AUTO
         0 001515   000005 471500                    LDP1    5,,PR0
         0 001516   200006 236100                    LDQ     NEW$,,AUTO
         0 001517   100001 756100                    STQ     1,,PR1

      960     4553    4                      VD$IT_ADJUST.PARENT$ = NEW$;
      961     4554    4                    NEW$->VD$IT_SELECT.ADJUSTS_TAIL$ =

   4554  0 001520   000005 471500                    LDP1    5,,PR0
         0 001521   100002 236100                    LDQ     2,,PR1
         0 001522   000005 756100                    STQ     5,,PR0

      962     4555    4                      NEW$->VD$IT_SELECT.ADJUSTS_TAIL$->
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:142  
      963     4556    4                      VD$IT_ADJUST.FLINK$;
      964     4557    4                    END;

   4557  0 001523   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001524   001514 601000 0                  TNZ     s:4552

      965     4558    3                 END OCOPY_IT_SELECT_ADJUSTS;

   4558  0 001525   002067 710000 0                  TRA     s:4705

      966     4559
      967     4560
      968     4561    2            CASE (%CLS_PATTERN);

      969     4562    2              N_ENTRIES = (VD$PATTERN.OBJECT.SIZE# -

   4562  0 001526   200005 236100                    LDQ     ORIGINAL$,,AUTO
         0 001527   000003 036003                    ADLQ    3,DU
         0 001530   000022 772000                    QRL     18
         0 001531   200005 235100                    LDA     ORIGINAL$,,AUTO
         0 001532   000022 771000                    ARL     18
         0 001533   200016 755100                    STA     I+1,,AUTO
         0 001534   200016 136100                    SBLQ    I+1,,AUTO
         0 001535   200017 756100                    STQ     I+2,,AUTO
         0 001536   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001537   000000 236100                    LDQ     0,,PR0
         0 001540   000022 736000                    QLS     18
         0 001541   000022 732000                    QRS     18
         0 001542   200017 136100                    SBLQ    I+2,,AUTO
         0 001543   000004 506007                    DIV     4,DL
         0 001544   200012 756100                    STQ     N_ENTRIES,,AUTO

      970     4563    2                POFFW(ADDR(VD$PATTERN.ENTRIES), ORIGINAL$)) /
      971     4564    2                SIZEW(VD$PATTERN.ENTRIES);
      972     4565    2              IF N_ENTRIES ~= VD$PATTERN.MX_ENTRIES#

   4565  0 001545   000002 236100                    LDQ     2,,PR0
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:143  
         0 001546   000022 736000                    QLS     18
         0 001547   000022 732000                    QRS     18
         0 001550   200012 116100                    CMPQ    N_ENTRIES,,AUTO
         0 001551   001556 601000 0                  TNZ     s:4567
         0 001552   000002 236100                    LDQ     2,,PR0
         0 001553   000022 732000                    QRS     18
         0 001554   200012 116100                    CMPQ    N_ENTRIES,,AUTO
         0 001555   001565 604400 0                  TMOZ    s:4568

      973     4566    2                OR VD$PATTERN.N_ENTRIES# > N_ENTRIES THEN
      974     4567    2                 CALL VDG$ESCREECH (VD$PATTERN.N_ENTRIES#);

   4567  0 001556   200005 236100                    LDQ     ORIGINAL$,,AUTO
         0 001557   000002 036003                    ADLQ    2,DU
         0 001560   200016 756100                    STQ     I+1,,AUTO
         0 001561   200016 630500                    EPPR0   I+1,,AUTO
         0 001562   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001563   000000 701000 xent               TSX1    VDG$ESCREECH
         0 001564   000000 011000                    NOP     0

      975     4568    3              DO I = 0 TO (VD$PATTERN.N_ENTRIES# - 1);

   4568  0 001565   200015 450100                    STZ     I,,AUTO
         0 001566   001611 710000 0                  TRA     s:4574+1

      976     4569    4                 IF VD$PATTERN.ENTRIES.MATCH$ (I) ~= ADDR(NIL) THEN DO;

   4569  0 001567   200015 235100                    LDA     I,,AUTO
         0 001570   000002 735000                    ALS     2
         0 001571   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001572   000006 236105                    LDQ     6,AL,PR0
         0 001573   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001574   001610 600000 0                  TZE     s:4574

      977     4570    4                    CALL VDG$OCOPY (VD$PATTERN.ENTRIES.MATCH$ (I) ->

   4570  0 001575   000006 471505                    LDP1    6,AL,PR0
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:144  
         0 001576   200015 236100                    LDQ     I,,AUTO
         0 001577   000024 736000                    QLS     20
         0 001600   000006 036003                    ADLQ    6,DU
         0 001601   200006 036100                    ADLQ    NEW$,,AUTO
         0 001602   200017 756100                    STQ     I+2,,AUTO
         0 001603   200016 451500                    STP1    I+1,,AUTO
         0 001604   200016 630500                    EPPR0   I+1,,AUTO
         0 001605   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001606   000000 701000 0                  TSX1    s:59
         0 001607   002070 702000 0                  TSX2    OALLOC_FAILED

      978     4571    4                      VD$OBJECT_HEADER, NEW$->VD$PATTERN.ENTRIES.MATCH$ (I))
      979     4572    4                      ALTRET (OCOPY_FAILED);
      980     4573    4                    END;

      981     4574    3                 END;

   4574  0 001610   200015 054100                    AOS     I,,AUTO
         0 001611   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001612   000002 236100                    LDQ     2,,PR0
         0 001613   000022 732000                    QRS     18
         0 001614   200015 116100                    CMPQ    I,,AUTO
         0 001615   001567 605400 0                  TPNZ    s:4569
         0 001616   002067 710000 0                  TRA     s:4705

      982     4575
      983     4576
      984     4577    2            CASE (%CLS_WINDOW_BLOCK);

      985     4578    2              IF VD$WINDOW_BLOCK.EDIT_BLOCK$ ~= ADDR(NIL) THEN

   4578  0 001617   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001620   000003 236100                    LDQ     3,,PR0
         0 001621   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001622   001634 600000 0                  TZE     s:4586

      986     4579    3   OCOPY_WINDOW_BLOCK_EDIT_BLOCK: DO;
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:145  

   4579  0 001623                       OCOPY_WINDO* null
      987     4580    3                 CALL VDG$OCOPY (VD$WINDOW_BLOCK.EDIT_BLOCK$->

   4580  0 001623   000003 471500                    LDP1    3,,PR0
         0 001624   200006 236100                    LDQ     NEW$,,AUTO
         0 001625   000003 036003                    ADLQ    3,DU
         0 001626   200017 756100                    STQ     I+2,,AUTO
         0 001627   200016 451500                    STP1    I+1,,AUTO
         0 001630   200016 630500                    EPPR0   I+1,,AUTO
         0 001631   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001632   000000 701000 0                  TSX1    s:59
         0 001633   002070 702000 0                  TSX2    OALLOC_FAILED

      988     4581    3                   VD$BLOCK_DESC,
      989     4582    3                   NEW$->VD$WINDOW_BLOCK.EDIT_BLOCK$)
      990     4583    3                   ALTRET (OCOPY_FAILED);
      991     4584    3                 END OCOPY_WINDOW_BLOCK_EDIT_BLOCK;

      992     4585
      993     4586    2              IF VD$WINDOW_BLOCK.EVAL$ ~= ADDR(NIL) THEN

   4586  0 001634   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001635   000004 236100                    LDQ     4,,PR0
         0 001636   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001637   002067 600000 0                  TZE     s:4705

      994     4587    3   OCOPY_WINDOW_BLOCK_EVAL: DO;

   4587  0 001640                       OCOPY_WINDO* null
      995     4588    3                 CALL VDG$OCOPY (VD$WINDOW_BLOCK.EVAL$->VD$EVAL,

   4588  0 001640   000004 471500                    LDP1    4,,PR0
         0 001641   200006 236100                    LDQ     NEW$,,AUTO
         0 001642   000004 036003                    ADLQ    4,DU
         0 001643   200017 756100                    STQ     I+2,,AUTO
         0 001644   200016 451500                    STP1    I+1,,AUTO
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:146  
         0 001645   200016 630500                    EPPR0   I+1,,AUTO
         0 001646   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001647   000000 701000 0                  TSX1    s:59
         0 001650   002070 702000 0                  TSX2    OALLOC_FAILED

      996     4589    3                   NEW$->VD$WINDOW_BLOCK.EVAL$)
      997     4590    3                   ALTRET (OCOPY_FAILED);
      998     4591    3                 PTR$ = VD$WINDOW_BLOCK.EVAL$->VD$EVAL.BLINK$;

   4591  0 001651   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001652   000004 471500                    LDP1    4,,PR0
         0 001653   100001 236100                    LDQ     1,,PR1
         0 001654   200013 756100                    STQ     PTR$,,AUTO

      999     4592    3                 NEW_PTR$ = NEW$->VD$WINDOW_BLOCK.EVAL$;

   4592  0 001655   200006 473500                    LDP3    NEW$,,AUTO
         0 001656   300004 236100                    LDQ     4,,PR3
         0 001657   200014 756100                    STQ     NEW_PTR$,,AUTO

     1000     4593    4                 DO WHILE PTR$ ~= ADDR(NIL);

   4593  0 001660   001677 710000 0                  TRA     s:4598

     1001     4594    4                    CALL VDG$OCOPY (PTR$->VD$EVAL, NEW_PTR$->VD$EVAL.BLINK$)

   4594  0 001661   200014 236100                    LDQ     NEW_PTR$,,AUTO
         0 001662   000001 036003                    ADLQ    1,DU
         0 001663   200013 235100                    LDA     PTR$,,AUTO
         0 001664   200016 757100                    STAQ    I+1,,AUTO
         0 001665   200016 630500                    EPPR0   I+1,,AUTO
         0 001666   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001667   000000 701000 0                  TSX1    s:59
         0 001670   002070 702000 0                  TSX2    OALLOC_FAILED

     1002     4595    4                      ALTRET (OCOPY_FAILED);
     1003     4596    4                    PTR$ = PTR$->VD$EVAL.BLINK$;
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:147  

   4596  0 001671   200013 470500                    LDP0    PTR$,,AUTO
         0 001672   000001 236100                    LDQ     1,,PR0
         0 001673   200013 756100                    STQ     PTR$,,AUTO

     1004     4597    4                    NEW_PTR$ = NEW_PTR$->VD$EVAL.BLINK$;

   4597  0 001674   200014 470500                    LDP0    NEW_PTR$,,AUTO
         0 001675   000001 236100                    LDQ     1,,PR0
         0 001676   200014 756100                    STQ     NEW_PTR$,,AUTO

     1005     4598    4                    END;

   4598  0 001677   200013 236100                    LDQ     PTR$,,AUTO
         0 001700   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001701   001661 601000 0                  TNZ     s:4594

     1006     4599    3                 END OCOPY_WINDOW_BLOCK_EVAL;

   4599  0 001702   002067 710000 0                  TRA     s:4705

     1007     4600
     1008     4601
     1009     4602    2            CASE (%CLS_WINDOW_SPEC);

     1010     4603    2              NEW$->VD$WINDOW_SPEC.OPERAND.STREAM$ = ADDR(NIL); /* Don't copy */

   4603  0 001703   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001704   200006 470500                    LDP0    NEW$,,AUTO
         0 001705   000010 756100                    STQ     8,,PR0

     1011     4604
     1012     4605    2              IF VD$WINDOW_SPEC.OPERAND.INTREE$ ~= ADDR(NIL) THEN

   4605  0 001706   200005 471500                    LDP1    ORIGINAL$,,AUTO
         0 001707   100011 236100                    LDQ     9,,PR1
         0 001710   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:148  
         0 001711   001723 600000 0                  TZE     s:4612

     1013     4606    3   OCOPY_WINDOW_SPEC_INTREE: DO;

   4606  0 001712                       OCOPY_WINDO* null
     1014     4607    3                 CALL VDG$OCOPY (VD$WINDOW_SPEC.OPERAND.INTREE$->VD$IT_BLOCK_EXPR,

   4607  0 001712   100011 473500                    LDP3    9,,PR1
         0 001713   200006 236100                    LDQ     NEW$,,AUTO
         0 001714   000011 036003                    ADLQ    9,DU
         0 001715   200017 756100                    STQ     I+2,,AUTO
         0 001716   200016 453500                    STP3    I+1,,AUTO
         0 001717   200016 630500                    EPPR0   I+1,,AUTO
         0 001720   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001721   000000 701000 0                  TSX1    s:59
         0 001722   002070 702000 0                  TSX2    OALLOC_FAILED

     1015     4608    3                   NEW$->VD$WINDOW_SPEC.OPERAND.INTREE$)
     1016     4609    3                   ALTRET (OCOPY_FAILED);
     1017     4610    3                 END OCOPY_WINDOW_SPEC_INTREE;

     1018     4611
     1019     4612    2              IF VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$ ~= ADDR(NIL) THEN

   4612  0 001723   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001724   000012 236100                    LDQ     10,,PR0
         0 001725   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001726   001740 600000 0                  TZE     s:4620

     1020     4613    3   OCOPY_WINDOW_SPEC_EDIT_BLOCK: DO;

   4613  0 001727                       OCOPY_WINDO* null
     1021     4614    3                 CALL VDG$OCOPY (VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$->

   4614  0 001727   000012 471500                    LDP1    10,,PR0
         0 001730   200006 236100                    LDQ     NEW$,,AUTO
         0 001731   000012 036003                    ADLQ    10,DU
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:149  
         0 001732   200017 756100                    STQ     I+2,,AUTO
         0 001733   200016 451500                    STP1    I+1,,AUTO
         0 001734   200016 630500                    EPPR0   I+1,,AUTO
         0 001735   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001736   000000 701000 0                  TSX1    s:59
         0 001737   002070 702000 0                  TSX2    OALLOC_FAILED

     1022     4615    3                   VD$BLOCK_DESC,
     1023     4616    3                   NEW$->VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$)
     1024     4617    3                   ALTRET (OCOPY_FAILED);
     1025     4618    3                 END OCOPY_WINDOW_SPEC_EDIT_BLOCK;

     1026     4619
     1027     4620    2              IF VD$WINDOW_SPEC.OPERAND.EVAL$ ~= ADDR(NIL) THEN

   4620  0 001740   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001741   000013 236100                    LDQ     11,,PR0
         0 001742   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001743   002006 600000 0                  TZE     s:4635

     1028     4621    3   OCOPY_WINDOW_SPEC_EVAL: DO;

   4621  0 001744                       OCOPY_WINDO* null
     1029     4622    3                 CALL VDG$OCOPY (VD$WINDOW_SPEC.OPERAND.EVAL$->VD$EVAL,

   4622  0 001744   000013 471500                    LDP1    11,,PR0
         0 001745   200006 236100                    LDQ     NEW$,,AUTO
         0 001746   000013 036003                    ADLQ    11,DU
         0 001747   200017 756100                    STQ     I+2,,AUTO
         0 001750   200016 451500                    STP1    I+1,,AUTO
         0 001751   200016 630500                    EPPR0   I+1,,AUTO
         0 001752   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001753   000000 701000 0                  TSX1    s:59
         0 001754   002070 702000 0                  TSX2    OALLOC_FAILED

     1030     4623    3                   NEW$->VD$WINDOW_SPEC.OPERAND.EVAL$)
     1031     4624    3                   ALTRET (OCOPY_FAILED);
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:150  
     1032     4625    3                 PTR$ = VD$WINDOW_SPEC.OPERAND.EVAL$->VD$EVAL.BLINK$;

   4625  0 001755   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 001756   000013 471500                    LDP1    11,,PR0
         0 001757   100001 236100                    LDQ     1,,PR1
         0 001760   200013 756100                    STQ     PTR$,,AUTO

     1033     4626    3                 NEW_PTR$ = NEW$->VD$WINDOW_SPEC.OPERAND.EVAL$;

   4626  0 001761   200006 473500                    LDP3    NEW$,,AUTO
         0 001762   300013 236100                    LDQ     11,,PR3
         0 001763   200014 756100                    STQ     NEW_PTR$,,AUTO

     1034     4627    4                 DO WHILE PTR$ ~= ADDR(NIL);

   4627  0 001764   002003 710000 0                  TRA     s:4632

     1035     4628    4                    CALL VDG$OCOPY (PTR$->VD$EVAL, NEW_PTR$->VD$EVAL.BLINK$)

   4628  0 001765   200014 236100                    LDQ     NEW_PTR$,,AUTO
         0 001766   000001 036003                    ADLQ    1,DU
         0 001767   200013 235100                    LDA     PTR$,,AUTO
         0 001770   200016 757100                    STAQ    I+1,,AUTO
         0 001771   200016 630500                    EPPR0   I+1,,AUTO
         0 001772   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001773   000000 701000 0                  TSX1    s:59
         0 001774   002070 702000 0                  TSX2    OALLOC_FAILED

     1036     4629    4                      ALTRET (OCOPY_FAILED);
     1037     4630    4                    PTR$ = PTR$->VD$EVAL.BLINK$;

   4630  0 001775   200013 470500                    LDP0    PTR$,,AUTO
         0 001776   000001 236100                    LDQ     1,,PR0
         0 001777   200013 756100                    STQ     PTR$,,AUTO

     1038     4631    4                    NEW_PTR$ = NEW_PTR$->VD$EVAL.BLINK$;

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:151  
   4631  0 002000   200014 470500                    LDP0    NEW_PTR$,,AUTO
         0 002001   000001 236100                    LDQ     1,,PR0
         0 002002   200014 756100                    STQ     NEW_PTR$,,AUTO

     1039     4632    4                    END;

   4632  0 002003   200013 236100                    LDQ     PTR$,,AUTO
         0 002004   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002005   001765 601000 0                  TNZ     s:4628

     1040     4633    3                 END OCOPY_WINDOW_SPEC_EVAL;

     1041     4634
     1042     4635    2              NEW$->VD$WINDOW_SPEC.RECORD_SET$ = ADDR(NIL); /* Don't copy */

   4635  0 002006   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 002007   200006 470500                    LDP0    NEW$,,AUTO
         0 002010   000016 756100                    STQ     14,,PR0

     1043     4636
     1044     4637
     1045     4638    2              IF VD$WINDOW_SPEC.TABS$ ~= ADDR(NIL) THEN

   4638  0 002011   200005 471500                    LDP1    ORIGINAL$,,AUTO
         0 002012   100024 236100                    LDQ     20,,PR1
         0 002013   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002014   002026 600000 0                  TZE     s:4645

     1046     4639    3   OCOPY_WINDOW_SPEC_TABS: DO;

   4639  0 002015                       OCOPY_WINDO* null
     1047     4640    3                 CALL VDG$OCOPY (VD$WINDOW_SPEC.TABS$->VD$TABS,

   4640  0 002015   100024 473500                    LDP3    20,,PR1
         0 002016   200006 236100                    LDQ     NEW$,,AUTO
         0 002017   000024 036003                    ADLQ    20,DU
         0 002020   200017 756100                    STQ     I+2,,AUTO
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:152  
         0 002021   200016 453500                    STP3    I+1,,AUTO
         0 002022   200016 630500                    EPPR0   I+1,,AUTO
         0 002023   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 002024   000000 701000 0                  TSX1    s:59
         0 002025   002070 702000 0                  TSX2    OALLOC_FAILED

     1048     4641    3                   NEW$->VD$WINDOW_SPEC.TABS$)
     1049     4642    3                   ALTRET (OCOPY_FAILED);
     1050     4643    3                 END OCOPY_WINDOW_SPEC_TABS;

     1051     4644
     1052     4645    2              IF VD$WINDOW_SPEC.EOFMARK$ ~= ADDR(NIL) THEN

   4645  0 002026   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 002027   000025 236100                    LDQ     21,,PR0
         0 002030   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002031   002043 600000 0                  TZE     s:4652

     1053     4646    3   OCOPY_WINDOW_SPEC_EOFMARK: DO;

   4646  0 002032                       OCOPY_WINDO* null
     1054     4647    3                 CALL VDG$OCOPY (VD$WINDOW_SPEC.EOFMARK$->VD$BUFFER,

   4647  0 002032   000025 471500                    LDP1    21,,PR0
         0 002033   200006 236100                    LDQ     NEW$,,AUTO
         0 002034   000025 036003                    ADLQ    21,DU
         0 002035   200017 756100                    STQ     I+2,,AUTO
         0 002036   200016 451500                    STP1    I+1,,AUTO
         0 002037   200016 630500                    EPPR0   I+1,,AUTO
         0 002040   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 002041   000000 701000 0                  TSX1    s:59
         0 002042   002070 702000 0                  TSX2    OALLOC_FAILED

     1055     4648    3                   NEW$->VD$WINDOW_SPEC.EOFMARK$)
     1056     4649    3                   ALTRET (OCOPY_FAILED);
     1057     4650    3                 END OCOPY_WINDOW_SPEC_EOFMARK;

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:153  
     1058     4651
     1059     4652    2              IF VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$ ~= ADDR(NIL) THEN

   4652  0 002043   200005 470500                    LDP0    ORIGINAL$,,AUTO
         0 002044   000030 236100                    LDQ     24,,PR0
         0 002045   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002046   002067 600000 0                  TZE     s:4705

     1060     4653    3   OCOPY_WINDOW_SPEC_KEY_DEF_BUF: DO;

   4653  0 002047                       OCOPY_WINDO* null
     1061     4654    3                 CALL VDG$OCOPY (VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$->

   4654  0 002047   000030 471500                    LDP1    24,,PR0
         0 002050   200006 236100                    LDQ     NEW$,,AUTO
         0 002051   000030 036003                    ADLQ    24,DU
         0 002052   200017 756100                    STQ     I+2,,AUTO
         0 002053   200016 451500                    STP1    I+1,,AUTO
         0 002054   200016 630500                    EPPR0   I+1,,AUTO
         0 002055   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 002056   000000 701000 0                  TSX1    s:59
         0 002057   002070 702000 0                  TSX2    OALLOC_FAILED

     1062     4655    3                   VD$BUFFER,
     1063     4656    3                   NEW$->VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$)
     1064     4657    3                   ALTRET (OCOPY_FAILED);
     1065     4658    3                 END OCOPY_WINDOW_SPEC_KEY_DEF_BUF;

   4658  0 002060   002067 710000 0                  TRA     s:4705

     1066     4659
     1067     4660
     1068     4661    2            CASE (%CLS_BUFFER,

     1069     4662    2                   %CLS_TEXTC_REMOTE,
     1070     4663    2                   %CLS_NAME_SPEC,
     1071     4664    2                   %CLS_STRUCTURE_LEVEL,
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:154  
     1072     4665    2                   %CLS_NUMBER,
     1073     4666    2                   %CLS_BOOLEAN,
     1074     4667    2                   %CLS_FILE_STCLASS,
     1075     4668    2                   %CLS_ORG,
     1076     4669    2                   %CLS_KEY_TYPE,
     1077     4670    2                   %CLS_EXIST,
     1078     4671    2                   %CLS_NAME_DATA_TYPE,
     1079     4672    2                   %CLS_COMPONENT,
     1080     4673    2                   %CLS_DIRECTION,
     1081     4674    2                   %CLS_POINT,
     1082     4675    2                   %CLS_PROTECT,
     1083     4676    2                   %CLS_STRUCTURE_SPEC,
     1084     4677                     /*
     1085     4678                     *  The %CLS_PTR_x pointers point to objects owned by others:
     1086     4679                     *      just copy the pointers (which we've already done)
     1087     4680                     */
     1088     4681    2                   %CLS_PTR_BLOCK_DESC,
     1089     4682    2                   %CLS_PTR_LOCATION,
     1090     4683    2                   %CLS_PTR_KEY,
     1091     4684    2                   %CLS_PTR_TEXTC,
     1092     4685    2                   %CLS_PTR_FILE_NODE,
     1093     4686    2                   %CLS_PTR_INTREE);
     1094     4687                   /*  Don' do nuthin':
     1095     4688                       these objects need no further processing.  */
     1096     4689
     1097     4690
     1098     4691    2            CASE (%CLS_CMD_STREAM,

     1099     4692    2                   %CLS_DIR_NODE,
     1100     4693    2                   %CLS_ERR,
     1101     4694    2                   %CLS_STREAM,
     1102     4695    2                   %CLS_PORT,
     1103     4696    2                   %CLS_RECORD_SET,
     1104     4697    2                   ELSE);
     1105     4698                   /*  Internal error:
     1106     4699                       either a non-OCOPY-able object class was passed,
     1107     4700                       or an unknown object class was passed.  */
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:155  
     1108     4701    2              CALL VDG$ESCREECH (ORIGINAL_CLASS);

   4701  0 002061   200007 630500                    EPPR0   ORIGINAL_CLASS,,AUTO
         0 002062   200016 450500                    STP0    I+1,,AUTO
         0 002063   200016 630500                    EPPR0   I+1,,AUTO
         0 002064   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002065   000000 701000 xent               TSX1    VDG$ESCREECH
         0 002066   000000 011000                    NOP     0

     1109     4702
     1110     4703    2            END;

     1111     4704
     1112     4705    1           RETURN;

   4705  0 002067   000000 702200 xent               TSX2  ! X66_ARET

     1113     4706
     1114     4707
     1115     4708
     1116     4709    1   OALLOC_FAILED: ;

   4709  0 002070                       OALLOC_FAIL* null
   4709  0 002070                       OCOPY_FAILED null
   4709  0 002070                       OCOPY_RANGE* null
   4709  0 002070                       OCOPY_LOCAT* null
     1117     4710    1   OCOPY_FAILED: ;
     1118     4711    1   OCOPY_RANGE_FAILED: ;
     1119     4712    1   OCOPY_LOCATION_FAILED: ;
     1120     4713    1           ALTRETURN;

   4713  0 002070   000000 702200 xent               TSX2  ! X66_AALT
     1121     4714
     1122     4715    1   END VDG$OCOPY;
     1123     4716        %EOD;

PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:156  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$OCOPY.
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:157  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @NEW_PARAM$                3-0-0/w PTR         r     1 @ORIGINAL
    15-0-0/w SBIN        r     1 I                         11-0-0/w UBIN        r     1 NBYTES
     6-0-0/w PTR         r     1 NEW$                      *0-0-0/w PTR         r     1 NEW_PARAM$
    14-0-0/w PTR         r     1 NEW_PTR$                  12-0-0/w SBIN        r     1 N_ENTRIES
    10-0-0/w UBIN        r     1 OBJECT_LENGTH             *0-0-0/w STRC        r     1 ORIGINAL
     5-0-0/w PTR         r     1 ORIGINAL$                  7-0-0/w SBIN        r     1 ORIGINAL_CLASS
    13-0-0/w PTR         r     1 PTR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 VD_OBJECTS(0:98)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR        r     1 VARIABLE$OBJECT            0-0-0/w STRC(936)   r     1 VD$BLOCK_DESC
     0-0-0/w ASTR(90)    r     1 VD$BUFFER                  0-0-0/w STRC(90)    r     1 VD$BUFFER_HEADER
     0-0-0/w STRC(900)   r     1 VD$ENCODED_NODE            0-0-0/w STRC(2124)  r     1 VD$EVAL
     0-0-0/w STRC(864)   r     1 VD$EVAL_PATTERN            0-0-0/w STRC(648)   r     1 VD$FILE_KEY
     0-0-0/w STRC(468)   r     1 VD$FILE_NODE               0-0-0/w STRC(36972) r     1 VD$FIT
     0-0-0/w STRC(108)   r     1 VD$INTREE_NODE             0-0-0/w STRC(216)   r     1 VD$IT_ADJUST
     0-0-0/w STRC(1116)  r     1 VD$IT_BLOCK_EXPR           0-0-0/w STRC(540)   r     1 VD$IT_COMMAND
     0-0-0/w STRC(324)   r     1 VD$IT_OPERAND              0-0-0/w STRC(216)   r     1 VD$IT_OPERATOR
     0-0-0/w STRC(216)   r     1 VD$IT_SELECT               0-0-0/w STRC        r     1 VD$OBJECT_HEADER
     0-0-0/w STRC(252)   r     1 VD$PATTERN                 0-0-0/w STRC(81)    r     1 VD$STRING_HEADER
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:158  
     0-0-0/w STRC(396)   r     1 VD$TABS                    0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE
     0-0-0/w STRC(180)   r     1 VD$WINDOW_BLOCK            0-0-0/w STRC(900)   r     1 VD$WINDOW_SPEC


   Procedure VDG$OCOPY requires 1081 words for executable code.
   Procedure VDG$OCOPY requires 18 words of local(AUTO) storage.
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:159  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:160  
          MINI XREF LISTING

I
      2360**DCL      4466<<DOINDEX  4467>>IF       4469>>CALL     4469>>CALL     4568<<DOINDEX  4569>>IF
      4570>>CALL     4570>>CALL
NBYTES
      2356**DCL      2363--IMP-SIZ  4115<<ASSIGN   4120<<ASSIGN   4120>>ASSIGN   4123<<ASSIGN   4124>>ASSIGN
      4125>>ASSIGN   4137<<ASSIGN   4137>>ASSIGN   4140<<ASSIGN   4142>>ASSIGN   4142>>ASSIGN   4152>>ASSIGN
      4152>>ASSIGN
NEW$
      2353**DCL      4113<<ASSIGN   4124>>ASSIGN   4125>>ASSIGN   4125>>ASSIGN   4129>>CALL     4141>>ASSIGN
      4142>>ASSIGN   4146>>CALL     4152>>ASSIGN   4163>>ASSIGN   4166>>ASSIGN   4226>>ASSIGN   4226>>CALL
      4230>>CALL     4248>>ASSIGN   4248>>CALL     4254>>CALL     4261>>ASSIGN   4262>>CALL     4264>>CALL
      4266>>CALL     4273>>ASSIGN   4274>>CALL     4283>>CALL     4290>>ASSIGN   4293>>CALL     4312>>ASSIGN
      4312>>CALL     4330>>ASSIGN   4330>>CALL     4335>>CALL     4342>>CALL     4346>>ASSIGN   4346>>ASSIGN
      4347>>DOWHILE  4348>>ASSIGN   4348>>ASSIGN   4355>>ASSIGN   4355>>ASSIGN   4357>>ASSIGN   4357>>ASSIGN
      4362>>ASSIGN   4365>>CALL     4373>>CALL     4377>>ASSIGN   4377>>ASSIGN   4379>>DOWHILE  4380>>ASSIGN
      4380>>ASSIGN   4382>>ASSIGN   4382>>ASSIGN   4392>>CALL     4411>>ASSIGN   4411>>CALL     4414>>CALL
      4433>>ASSIGN   4433>>CALL     4439>>CALL     4443>>ASSIGN   4443>>ASSIGN   4445>>DOWHILE  4446>>ASSIGN
      4446>>ASSIGN   4448>>ASSIGN   4448>>ASSIGN   4456>>ASSIGN   4459>>CALL     4469>>CALL     4478>>ASSIGN
      4481>>CALL     4499>>ASSIGN   4499>>CALL     4504>>CALL     4511>>ASSIGN   4514>>CALL     4521>>CALL
      4528>>CALL     4535>>ASSIGN   4538>>CALL     4545>>CALL     4549>>ASSIGN   4549>>ASSIGN   4551>>DOWHILE
      4552>>ASSIGN   4552>>ASSIGN   4554>>ASSIGN   4554>>ASSIGN   4570>>CALL     4580>>CALL     4588>>CALL
      4592>>ASSIGN   4603>>ASSIGN   4607>>CALL     4614>>CALL     4622>>CALL     4626>>ASSIGN   4635>>ASSIGN
      4640>>CALL     4647>>CALL     4654>>CALL
NEW_PARAM$
      2301**DCL        59--PROC     4111<>CALL     4113>>ASSIGN
NEW_PTR$
      2359**DCL      4163<<ASSIGN   4166<<ASSIGN   4167>>ASSIGN   4183>>ASSIGN   4183>>CALL     4187>>CALL
      4206>>ASSIGN   4206>>CALL     4592<<ASSIGN   4594>>CALL     4597<<ASSIGN   4597>>ASSIGN   4626<<ASSIGN
      4628>>CALL     4631<<ASSIGN   4631>>ASSIGN
N_ENTRIES
      2357**DCL      4562<<ASSIGN   4565>>IF       4565>>IF
OALLOC_FAILED
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:161  
      4709**LABEL    4111--CALLALT
OBJECT_LENGTH
      2355**DCL      4094<<ASSIGN   4099<<ASSIGN   4105<<ASSIGN   4107<<ASSIGN   4111<>CALL     4115>>ASSIGN
OCOPY_FAILED
      4709**LABEL    4129--CALLALT  4146--CALLALT  4254--CALLALT  4283--CALLALT  4293--CALLALT  4335--CALLALT
      4342--CALLALT  4365--CALLALT  4373--CALLALT  4392--CALLALT  4439--CALLALT  4459--CALLALT  4469--CALLALT
      4481--CALLALT  4504--CALLALT  4514--CALLALT  4521--CALLALT  4528--CALLALT  4538--CALLALT  4545--CALLALT
      4570--CALLALT  4580--CALLALT  4588--CALLALT  4594--CALLALT  4607--CALLALT  4614--CALLALT  4622--CALLALT
      4628--CALLALT  4640--CALLALT  4647--CALLALT  4654--CALLALT
OCOPY_LOCATION_FAILED
      4709**LABEL    4230--CALLALT
OCOPY_RANGE_FAILED
      4709**LABEL    4187--CALLALT  4262--CALLALT  4264--CALLALT  4266--CALLALT  4274--CALLALT  4414--CALLALT
ORIGINAL
      2295**DCL        59--PROC     4085--ASSIGN
ORIGINAL.CLASS#
      2299**DCL      4086>>ASSIGN
ORIGINAL.SIZE#
      2299**DCL      4104>>IF       4107>>ASSIGN
ORIGINAL$
      2352**DCL      2372--IMP-PTR  2408--IMP-PTR  2572--IMP-PTR  2613--IMP-PTR  2649--IMP-PTR  2770--IMP-PTR
      3015--IMP-PTR  3130--IMP-PTR  3171--IMP-PTR  3264--IMP-PTR  3300--IMP-PTR  3337--IMP-PTR  3487--IMP-PTR
      3525--IMP-PTR  3591--IMP-PTR  3628--IMP-PTR  3673--IMP-PTR  3687--IMP-PTR  3738--IMP-PTR  3816--IMP-PTR
      3852--IMP-PTR  3889--IMP-PTR  3943--IMP-PTR  3987--IMP-PTR  4024--IMP-PTR  4085<<ASSIGN   4094>>ASSIGN
      4099>>ASSIGN   4118>>IF       4123>>ASSIGN   4125>>ASSIGN   4127>>IF       4129>>CALL     4135>>IF
      4140>>ASSIGN   4141>>ASSIGN   4142>>ASSIGN   4144>>IF       4146>>CALL     4152>>ASSIGN   4162>>ASSIGN
      4165>>ASSIGN   4226>>ASSIGN   4226>>IF       4226>>CALL     4226>>CALL     4230>>CALL     4248>>ASSIGN
      4248>>IF       4248>>CALL     4248>>CALL     4252>>IF       4254>>CALL     4254>>CALL     4262>>CALL
      4264>>CALL     4266>>CALL     4274>>CALL     4281>>IF       4283>>CALL     4291>>IF       4293>>CALL
      4312>>ASSIGN   4312>>IF       4312>>CALL     4312>>CALL     4330>>ASSIGN   4330>>IF       4330>>CALL
      4330>>CALL     4333>>IF       4335>>CALL     4335>>CALL     4340>>IF       4342>>CALL     4355>>ASSIGN
      4355>>ASSIGN   4357>>ASSIGN   4357>>ASSIGN   4363>>IF       4365>>CALL     4370>>IF       4373>>CALL
      4390>>IF       4392>>CALL     4411>>ASSIGN   4411>>IF       4411>>CALL     4411>>CALL     4414>>CALL
      4433>>ASSIGN   4433>>IF       4433>>CALL     4433>>CALL     4437>>IF       4439>>CALL     4457>>IF
      4459>>CALL     4467>>IF       4469>>CALL     4479>>IF       4481>>CALL     4499>>ASSIGN   4499>>IF
      4499>>CALL     4499>>CALL     4502>>IF       4504>>CALL     4512>>IF       4514>>CALL     4519>>IF
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:162  
      4521>>CALL     4526>>IF       4528>>CALL     4536>>IF       4538>>CALL     4543>>IF       4545>>CALL
      4562>>ASSIGN   4562>>ASSIGN   4562>>ASSIGN   4565>>IF       4565>>IF       4567>>CALL     4568>>DOINDEX
      4569>>IF       4570>>CALL     4578>>IF       4580>>CALL     4586>>IF       4588>>CALL     4591>>ASSIGN
      4605>>IF       4607>>CALL     4612>>IF       4614>>CALL     4620>>IF       4622>>CALL     4625>>ASSIGN
      4638>>IF       4640>>CALL     4645>>IF       4647>>CALL     4647>>CALL     4652>>IF       4654>>CALL
      4654>>CALL
ORIGINAL_CLASS
      2354**DCL      4086<<ASSIGN   4087>>IF       4087>>IF       4089<>CALL     4092>>DOCASE   4105>>ASSIGN
      4111<>CALL     4117>>IF       4118>>IF       4134>>IF       4135>>IF       4159>>DOCASE   4164>>IF
      4701<>CALL
PTR$
      2358**DCL      4162<<ASSIGN   4165<<ASSIGN   4167>>ASSIGN   4183>>ASSIGN   4183>>IF       4183>>CALL
      4183>>CALL     4187>>CALL     4206>>ASSIGN   4206>>IF       4206>>CALL     4206>>CALL     4591<<ASSIGN
      4593>>DOWHILE  4594>>CALL     4596<<ASSIGN   4596>>ASSIGN   4625<<ASSIGN   4627>>DOWHILE  4628>>CALL
      4630<<ASSIGN   4630>>ASSIGN
VARIABLE$OBJECT
      2363**DCL      4125>>ASSIGN   4142<<ASSIGN   4142>>ASSIGN   4152<<ASSIGN   4152>>ASSIGN
VD$BLOCK_DESC
      2408**DCL      4580<>CALL     4614<>CALL
VD$BLOCK_DESC.FILE_KEY
      2444**DCL      4183<<ASSIGN   4183>>ASSIGN
VD$BLOCK_DESC.FILE_KEY.REP#
      2446**DCL      4183>>IF
VD$BLOCK_DESC.FILE_KEY.V$
      2446**DCL      4183>>CALL     4183>>CALL     4183<>CALL
VD$BLOCK_DESC.OBJECT
      2430**DCL      4167<<ASSIGN   4167>>ASSIGN
VD$BLOCK_DESC.OPTIONS.KEY_INCR
      2541**DCL      4206<<ASSIGN   4206>>ASSIGN
VD$BLOCK_DESC.OPTIONS.KEY_INCR.REP#
      2543**DCL      4206>>IF
VD$BLOCK_DESC.OPTIONS.KEY_INCR.V$
      2543**DCL      4206>>CALL     4206>>CALL     4206<>CALL
VD$BLOCK_DESC.RANGE
      2458**DCL      4187<>CALL     4187<>CALL
VD$BUFFER
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:163  
      2572**DCL      4254<>CALL     4335<>CALL     4647<>CALL     4654<>CALL
VD$BUFFER.BYTES
      2600**DCL      4142--ASSIGN   4142--ASSIGN   4165--ASSIGN   4166--ASSIGN
VD$BUFFER.LENGTH#
      2598**DCL      2600--IMP-SIZ  4094>>ASSIGN   4135>>IF       4140>>ASSIGN   4141<<ASSIGN   4141>>ASSIGN
      4254>>CALL     4335>>CALL     4647>>CALL     4654>>CALL
VD$BUFFER_HEADER
      2613**DCL      4094--ASSIGN   4137--ASSIGN   4146<>CALL
VD$BUFFER_HEADER.FLINK$
      2639**DCL      4144>>IF       4146>>CALL     4146<>CALL
VD$ENCODED_NODE.DESC.DATA$
      2759**DCL      4252>>IF       4254>>CALL     4254>>CALL     4254<>CALL
VD$ENCODED_NODE.DESC.FILE_KEY
      2699**DCL      4226<<ASSIGN   4226>>ASSIGN
VD$ENCODED_NODE.DESC.FILE_KEY.REP#
      2701**DCL      4226>>IF
VD$ENCODED_NODE.DESC.FILE_KEY.V$
      2701**DCL      4226>>CALL     4226>>CALL     4226<>CALL
VD$ENCODED_NODE.DESC.LOCATION
      2713**DCL      4230<>CALL     4230<>CALL
VD$ENCODED_NODE.DESC.SPEC
      2755**DCL      4248<<ASSIGN   4248>>ASSIGN
VD$ENCODED_NODE.DESC.SPEC.REP#
      2757**DCL      4248>>IF
VD$ENCODED_NODE.DESC.SPEC.V$
      2757**DCL      4248>>CALL     4248>>CALL     4248<>CALL
VD$EVAL
      2770**DCL      4588<>CALL     4594<>CALL     4622<>CALL     4628<>CALL
VD$EVAL.BLINK$
      2796**DCL      4261<<ASSIGN   4591>>ASSIGN   4594<>CALL     4596>>ASSIGN   4597>>ASSIGN   4625>>ASSIGN
      4628<>CALL     4630>>ASSIGN   4631>>ASSIGN
VD$EVAL.ENCLOSING
      2807**DCL      4262<>CALL     4262<>CALL
VD$EVAL.LAST_FOUND_RANGE
      2945**DCL      4266<>CALL     4266<>CALL
VD$EVAL.RANGE
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:164  
      2876**DCL      4264<>CALL     4264<>CALL
VD$EVAL_PATTERN.BLINK$
      3041**DCL      4273<<ASSIGN
VD$EVAL_PATTERN.RANGE
      3052**DCL      4274<>CALL     4274<>CALL
VD$FILE_KEY.FLINK$
      3157**DCL      4281>>IF       4283>>CALL     4283<>CALL
VD$FILE_NODE
      3171**DCL      4293<>CALL     4342<>CALL
VD$FILE_NODE.BLINK$
      3197**DCL      4290<<ASSIGN
VD$FILE_NODE.DESC.DATA$
      3252**DCL      4333>>IF       4335>>CALL     4335>>CALL     4335<>CALL
VD$FILE_NODE.DESC.KEY
      3234**DCL      4312<<ASSIGN   4312>>ASSIGN
VD$FILE_NODE.DESC.KEY.REP#
      3236**DCL      4312>>IF
VD$FILE_NODE.DESC.KEY.V$
      3236**DCL      4312>>CALL     4312>>CALL     4312<>CALL
VD$FILE_NODE.DESC.SPEC
      3248**DCL      4330<<ASSIGN   4330>>ASSIGN
VD$FILE_NODE.DESC.SPEC.REP#
      3250**DCL      4330>>IF
VD$FILE_NODE.DESC.SPEC.V$
      3250**DCL      4330>>CALL     4330>>CALL     4330<>CALL
VD$FILE_NODE.FLINK$
      3197**DCL      4291>>IF       4293>>CALL     4293<>CALL     4348>>ASSIGN
VD$FILE_NODE.HEAD$
      3254**DCL      4340>>IF       4342>>CALL     4342<>CALL     4346>>ASSIGN
VD$FILE_NODE.TAIL$
      3254**DCL      4346<<ASSIGN   4347>>DOWHILE  4348<<ASSIGN   4348>>ASSIGN
VD$FIT.CODE2$
      3290**DCL      4355<<ASSIGN   4355>>ASSIGN
VD$FIT.CODE3$
      3290**DCL      4357<<ASSIGN   4357>>ASSIGN
VD$INTREE_NODE
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:165  
      2372**DCL      4373<>CALL     4459<>CALL     4481<>CALL     4514<>CALL     4521<>CALL     4528<>CALL
VD$INTREE_NODE.FLINK$
      2398**DCL      4382>>ASSIGN
VD$INTREE_NODE.PARENT$
      2398**DCL      4380<<ASSIGN
VD$IT_ADJUST
      3300**DCL      4365<>CALL     4545<>CALL
VD$IT_ADJUST.FLINK$
      3326**DCL      4363>>IF       4365>>CALL     4365<>CALL     4554>>ASSIGN
VD$IT_ADJUST.MOVEMENTS$
      3326**DCL      4370>>IF       4373>>CALL     4373<>CALL     4377>>ASSIGN
VD$IT_ADJUST.MOVEMENTS_TAIL$
      3327**DCL      4377<<ASSIGN   4379>>DOWHILE  4380>>ASSIGN   4382<<ASSIGN   4382>>ASSIGN
VD$IT_ADJUST.PARENT$
      3326**DCL      4362<<ASSIGN   4552<<ASSIGN
VD$IT_BLOCK_EXPR
      3337**DCL      4392<>CALL     4607<>CALL
VD$IT_BLOCK_EXPR.DOMAINN.FILE_KEY
      3375**DCL      4411<<ASSIGN   4411>>ASSIGN
VD$IT_BLOCK_EXPR.DOMAINN.FILE_KEY.REP#
      3377**DCL      4411>>IF
VD$IT_BLOCK_EXPR.DOMAINN.FILE_KEY.V$
      3377**DCL      4411>>CALL     4411>>CALL     4411<>CALL
VD$IT_BLOCK_EXPR.DOMAINN.RANGE
      3389**DCL      4414<>CALL     4414<>CALL
VD$IT_BLOCK_EXPR.FLINK$
      3363**DCL      4390>>IF       4392>>CALL     4392<>CALL
VD$IT_BLOCK_EXPR.OPTIONS.KEY_INCR
      3472**DCL      4433<<ASSIGN   4433>>ASSIGN
VD$IT_BLOCK_EXPR.OPTIONS.KEY_INCR.REP#
      3474**DCL      4433>>IF
VD$IT_BLOCK_EXPR.OPTIONS.KEY_INCR.V$
      3474**DCL      4433>>CALL     4433>>CALL     4433<>CALL
VD$IT_BLOCK_EXPR.SELECTS$
      3477**DCL      4437>>IF       4439>>CALL     4439<>CALL     4443>>ASSIGN
VD$IT_BLOCK_EXPR.SELECTS_TAIL$
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:166  
      3477**DCL      4443<<ASSIGN   4445>>DOWHILE  4446>>ASSIGN   4448<<ASSIGN   4448>>ASSIGN
VD$IT_COMMAND.FLINK$
      3513**DCL      4457>>IF       4459>>CALL     4459<>CALL
VD$IT_COMMAND.PARAM$
      3514**DCL      4467>>IF       4469>>CALL     4469<>CALL
VD$IT_COMMAND.PARENT$
      3513**DCL      4456<<ASSIGN
VD$IT_OPERAND.FLINK$
      3551**DCL      4479>>IF       4481>>CALL     4481<>CALL
VD$IT_OPERAND.KEY
      3577**DCL      4499<<ASSIGN   4499>>ASSIGN
VD$IT_OPERAND.KEY.REP#
      3579**DCL      4499>>IF
VD$IT_OPERAND.KEY.V$
      3579**DCL      4499>>CALL     4499>>CALL     4499<>CALL
VD$IT_OPERAND.PARAM$
      3581**DCL      4502>>IF       4504>>CALL     4504<>CALL
VD$IT_OPERAND.PARENT$
      3551**DCL      4478<<ASSIGN
VD$IT_OPERATOR.FLINK$
      3617**DCL      4512>>IF       4514>>CALL     4514<>CALL
VD$IT_OPERATOR.OPERAND$
      3617**DCL      4519>>IF       4521>>CALL     4521<>CALL
VD$IT_OPERATOR.PARENT$
      3617**DCL      4511<<ASSIGN
VD$IT_OPERATOR.R_OPERAND$
      3618**DCL      4526>>IF       4528>>CALL     4528<>CALL
VD$IT_SELECT
      3628**DCL      4439<>CALL     4538<>CALL
VD$IT_SELECT.ADJUSTS$
      3655**DCL      4543>>IF       4545>>CALL     4545<>CALL     4549>>ASSIGN
VD$IT_SELECT.ADJUSTS_TAIL$
      3655**DCL      4549<<ASSIGN   4551>>DOWHILE  4552>>ASSIGN   4554<<ASSIGN   4554>>ASSIGN
VD$IT_SELECT.FLINK$
      3654**DCL      4448>>ASSIGN   4536>>IF       4538>>CALL     4538<>CALL
VD$IT_SELECT.PARENT$
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:167  
      3654**DCL      4446<<ASSIGN   4535<<ASSIGN
VD$OBJECT_HEADER
      3673**DCL      4115--ASSIGN   4120--ASSIGN   4137--ASSIGN   4152--ASSIGN   4152--ASSIGN   4469<>CALL
      4504<>CALL     4570<>CALL
VD$PATTERN.ENTRIES
      3724**DCL      4562--ASSIGN   4562--ASSIGN
VD$PATTERN.ENTRIES.MATCH$
      3727**DCL      4569>>IF       4570>>CALL     4570<>CALL
VD$PATTERN.MX_ENTRIES#
      3713**DCL      4565>>IF
VD$PATTERN.N_ENTRIES#
      3713**DCL      4565>>IF       4567<>CALL     4568>>DOINDEX
VD$PATTERN.OBJECT.SIZE#
      3711**DCL      4562>>ASSIGN
VD$STRING_HEADER
      3816**DCL      4099--ASSIGN   4120--ASSIGN   4129<>CALL     4283<>CALL
VD$STRING_HEADER.FLINK$
      3842**DCL      4127>>IF       4129>>CALL     4129<>CALL
VD$TABS
      3889**DCL      4640<>CALL
VD$TEXTC_REMOTE
      3943**DCL      4183<>CALL     4206<>CALL     4226<>CALL     4248<>CALL     4312<>CALL     4330<>CALL
      4411<>CALL     4433<>CALL     4499<>CALL
VD$TEXTC_REMOTE.BYTES
      3974**DCL      4125<<ASSIGN   4125--ASSIGN
VD$TEXTC_REMOTE.LENGTH#
      3972**DCL      3974--IMP-SIZ  4099>>ASSIGN   4118>>IF       4123>>ASSIGN   4124<<ASSIGN   4125>>ASSIGN
      4183>>CALL     4206>>CALL     4226>>CALL     4248>>CALL     4312>>CALL     4330>>CALL     4411>>CALL
      4433>>CALL     4499>>CALL
VD$WINDOW_BLOCK.EDIT_BLOCK$
      4013**DCL      4578>>IF       4580>>CALL     4580<>CALL
VD$WINDOW_BLOCK.EVAL$
      4013**DCL      4586>>IF       4588>>CALL     4588<>CALL     4591>>ASSIGN   4592>>ASSIGN
VD$WINDOW_SPEC.EOFMARK$
      4078**DCL      4645>>IF       4647>>CALL     4647>>CALL     4647<>CALL
VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$
PL6.E3A0      #003=VDG$OCOPY File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:168  
      4079**DCL      4652>>IF       4654>>CALL     4654>>CALL     4654<>CALL
VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$
      4065**DCL      4612>>IF       4614>>CALL     4614<>CALL
VD$WINDOW_SPEC.OPERAND.EVAL$
      4065**DCL      4620>>IF       4622>>CALL     4622<>CALL     4625>>ASSIGN   4626>>ASSIGN
VD$WINDOW_SPEC.OPERAND.INTREE$
      4065**DCL      4605>>IF       4607>>CALL     4607<>CALL
VD$WINDOW_SPEC.OPERAND.STREAM$
      4065**DCL      4603<<ASSIGN
VD$WINDOW_SPEC.RECORD_SET$
      4068**DCL      4635<<ASSIGN
VD$WINDOW_SPEC.TABS$
      4077**DCL      4638>>IF       4640>>CALL     4640<>CALL
VDG$ESCREECH
      2307**DCL-ENT  4089--CALL     4567--CALL     4701--CALL
VDG$OALLOC
      2304**DCL-ENT  4111--CALL
VDG$OCOPY
        59**PROC     4129--CALL     4146--CALL     4183--CALL     4206--CALL     4226--CALL     4248--CALL
      4254--CALL     4283--CALL     4293--CALL     4312--CALL     4330--CALL     4335--CALL     4342--CALL
      4365--CALL     4373--CALL     4392--CALL     4411--CALL     4433--CALL     4439--CALL     4459--CALL
      4469--CALL     4481--CALL     4499--CALL     4504--CALL     4514--CALL     4521--CALL     4528--CALL
      4538--CALL     4545--CALL     4570--CALL     4580--CALL     4588--CALL     4594--CALL     4607--CALL
      4614--CALL     4622--CALL     4628--CALL     4640--CALL     4647--CALL     4654--CALL
VDG$OCOPY_LOCATION
      2306**DCL-ENT  4230--CALL
VDG$OCOPY_RANGE
      2305**DCL-ENT  4187--CALL     4262--CALL     4264--CALL     4266--CALL     4274--CALL     4414--CALL
VD_OBJECTS.BUF
      2321**DCL      4134>>IF
VD_OBJECTS.SIZE
      2317**DCL      4087>>IF       4105>>ASSIGN
VD_OBJECTS.STR
      2331**DCL      4117>>IF

PL6.E3A0      #004=VDG$OCOPY_RANGE File=VDG$OBJECTS.:VDA5TSI                     FRI 07/04/97 11:21 Page:169  
     1124        1        /*T***********************************************************/
     1125        2        /*T*                                                         */
     1126        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1127        4        /*T*                                                         */
     1128        5        /*T***********************************************************/
     1129        6
     1130        7        /*D* NAME: VDG$OCOPY_RANGE
     1131        8            PARAMETERS:
     1132        9                ORIGINAL - Actual VD$RANGE to make a new copy of.
     1133       10                NEW_VD$RANGE - Caller-allocated area in which to put
     1134       11                    the new VD$RANGE.
     1135       12            INPUT:
     1136       13                None.
     1137       14            OUTPUT:
     1138       15                NEW_VD$RANGE will contain a copy of ORIGINAL.
     1139       16            DESCRIPTION:
     1140       17                The new VD$RANGE (the space for which is allocated by
     1141       18                the caller) is filled in by calling VDG$OCOPY_LOCATION
     1142       19                twice.
     1143       20        */
     1144       21
     1145       22        VDG$OCOPY_RANGE: PROC (ORIGINAL, NEW_VD$RANGE) ALTRET;
     1146       23
     1147       24
     1148       25        %INCLUDE VD_MACROS_M;
     1149     2240
     1150     2241
     1151     2242        %VD$RANGE (NAME=ORIGINAL, STCLASS=PARAM);
     1152     2311        %VD$RANGE (NAME=NEW_VD$RANGE, STCLASS=PARAM);
     1153     2380
     1154     2381
     1155     2382    1   DCL VDG$OCOPY_LOCATION ENTRY (2) ALTRET;
     1156     2383
     1157     2384
     1158     2385    1           CALL VDG$OCOPY_LOCATION (ORIGINAL.START, NEW_VD$RANGE.START)
     1159     2386    1             ALTRET (OCOPY_LOCATION_FAILED);
     1160     2387
PL6.E3A0      #004=VDG$OCOPY_RANGE File=VDG$OBJECTS.:VDA5TSI                     FRI 07/04/97 11:21 Page:170  
     1161     2388    1           CALL VDG$OCOPY_LOCATION (ORIGINAL.ENDD, NEW_VD$RANGE.ENDD)
     1162     2389    1             ALTRET (OCOPY_LOCATION_FAILED);
     1163     2390
     1164     2391    1           RETURN;
     1165     2392
     1166     2393
     1167     2394
     1168     2395    1   OCOPY_LOCATION_FAILED:
     1169     2396    1           ALTRETURN;
     1170     2397
     1171     2398    1   END VDG$OCOPY_RANGE;
     1172     2399        %EOD;

PL6.E3A0      #004=VDG$OCOPY_RANGE File=VDG$OBJECTS.:VDA5TSI                     FRI 07/04/97 11:21 Page:171  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$OCOPY_RANGE.

   Procedure VDG$OCOPY_RANGE requires 18 words for executable code.
   Procedure VDG$OCOPY_RANGE requires 8 words of local(AUTO) storage.

PL6.E3A0      #004=VDG$OCOPY_RANGE File=VDG$OBJECTS.:VDA5TSI                     FRI 07/04/97 11:21 Page:172  

 Object Unit name= VDG$OCOPY_RANGE                            File name= VDG$OBJECTS.:VDA5TOU
 UTS= JUL 04 '97 11:21:45.72 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    18     22  VDG$OCOPY_RANGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  VDG$OCOPY_RANGE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VDG$OCOPY_LOCATION
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #004=VDG$OCOPY_RANGE File=VDG$OBJECTS.:VDA5TSI                     FRI 07/04/97 11:21 Page:173  


     1124        1        /*T***********************************************************/
     1125        2        /*T*                                                         */
     1126        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1127        4        /*T*                                                         */
     1128        5        /*T***********************************************************/
     1129        6
     1130        7        /*D* NAME: VDG$OCOPY_RANGE
     1131        8            PARAMETERS:
     1132        9                ORIGINAL - Actual VD$RANGE to make a new copy of.
     1133       10                NEW_VD$RANGE - Caller-allocated area in which to put
     1134       11                    the new VD$RANGE.
     1135       12            INPUT:
     1136       13                None.
     1137       14            OUTPUT:
     1138       15                NEW_VD$RANGE will contain a copy of ORIGINAL.
     1139       16            DESCRIPTION:
     1140       17                The new VD$RANGE (the space for which is allocated by
     1141       18                the caller) is filled in by calling VDG$OCOPY_LOCATION
     1142       19                twice.
     1143       20        */
     1144       21
     1145       22        VDG$OCOPY_RANGE: PROC (ORIGINAL, NEW_VD$RANGE) ALTRET;

     22  0 000000   000000 700200 xent  VDG$OCOPY_R* TSX0  ! X66_AUTO_2
         0 000001   000010 000002                    ZERO    8,2

     1146       23
     1147       24
     1148       25        %INCLUDE VD_MACROS_M;
     1149     2240
     1150     2241
     1151     2242        %VD$RANGE (NAME=ORIGINAL, STCLASS=PARAM);
     1152     2311        %VD$RANGE (NAME=NEW_VD$RANGE, STCLASS=PARAM);
     1153     2380
     1154     2381
     1155     2382    1   DCL VDG$OCOPY_LOCATION ENTRY (2) ALTRET;
PL6.E3A0      #004=VDG$OCOPY_RANGE File=VDG$OBJECTS.:VDA5TSI                     FRI 07/04/97 11:21 Page:174  
     1156     2383
     1157     2384
     1158     2385    1           CALL VDG$OCOPY_LOCATION (ORIGINAL.START, NEW_VD$RANGE.START)

   2385  0 000002   200003 630500                    EPPR0   @ORIGINAL,,AUTO
         0 000003   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000004   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 000005   000021 702000 0                  TSX2    OCOPY_LOCATION_FAILED

     1159     2386    1             ALTRET (OCOPY_LOCATION_FAILED);
     1160     2387
     1161     2388    1           CALL VDG$OCOPY_LOCATION (ORIGINAL.ENDD, NEW_VD$RANGE.ENDD)

   2388  0 000006   200004 236100                    LDQ     @NEW_VD$RANGE,,AUTO
         0 000007   000011 036003                    ADLQ    9,DU
         0 000010   200007 756100                    STQ     @NEW_VD$RANGE+3,,AUTO
         0 000011   200003 236100                    LDQ     @ORIGINAL,,AUTO
         0 000012   000011 036003                    ADLQ    9,DU
         0 000013   200006 756100                    STQ     @NEW_VD$RANGE+2,,AUTO
         0 000014   200006 630500                    EPPR0   @NEW_VD$RANGE+2,,AUTO
         0 000015   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000016   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 000017   000021 702000 0                  TSX2    OCOPY_LOCATION_FAILED

     1162     2389    1             ALTRET (OCOPY_LOCATION_FAILED);
     1163     2390
     1164     2391    1           RETURN;

   2391  0 000020   000000 702200 xent               TSX2  ! X66_ARET

     1165     2392
     1166     2393
     1167     2394
     1168     2395    1   OCOPY_LOCATION_FAILED:
     1169     2396    1           ALTRETURN;

   2396  0 000021   000000 702200 xent  OCOPY_LOCAT* TSX2  ! X66_AALT
PL6.E3A0      #004=VDG$OCOPY_RANGE File=VDG$OBJECTS.:VDA5TSI                     FRI 07/04/97 11:21 Page:175  
     1170     2397
     1171     2398    1   END VDG$OCOPY_RANGE;
     1172     2399        %EOD;

PL6.E3A0      #004=VDG$OCOPY_RANGE File=VDG$OBJECTS.:VDA5TSI                     FRI 07/04/97 11:21 Page:176  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$OCOPY_RANGE.
PL6.E3A0      #004=VDG$OCOPY_RANGE File=VDG$OBJECTS.:VDA5TSI                     FRI 07/04/97 11:21 Page:177  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @NEW_VD$RANGE              3-0-0/w PTR         r     1 @ORIGINAL
    *0-0-0/w STRC(648)   r     1 NEW_VD$RANGE              *0-0-0/w STRC(648)   r     1 ORIGINAL


   Procedure VDG$OCOPY_RANGE requires 18 words for executable code.
   Procedure VDG$OCOPY_RANGE requires 8 words of local(AUTO) storage.
PL6.E3A0      #004=VDG$OCOPY_RANGE File=VDG$OBJECTS.:VDA5TSI                     FRI 07/04/97 11:21 Page:178  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=VDG$OCOPY_RANGE File=VDG$OBJECTS.:VDA5TSI                     FRI 07/04/97 11:21 Page:179  
          MINI XREF LISTING

NEW_VD$RANGE
      2319**DCL        22--PROC
NEW_VD$RANGE.ENDD
      2361**DCL      2388<>CALL
NEW_VD$RANGE.START
      2333**DCL      2385<>CALL
OCOPY_LOCATION_FAILED
      2396**LABEL    2385--CALLALT  2388--CALLALT
ORIGINAL
      2250**DCL        22--PROC
ORIGINAL.ENDD
      2292**DCL      2388<>CALL
ORIGINAL.START
      2264**DCL      2385<>CALL
VDG$OCOPY_LOCATION
      2382**DCL-ENT  2385--CALL     2388--CALL

PL6.E3A0      #005=VDG$OCOPY_LOCATION File=VDG$OBJECTS.:VDA5TSI                  FRI 07/04/97 11:21 Page:180  
     1173        1        /*T***********************************************************/
     1174        2        /*T*                                                         */
     1175        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1176        4        /*T*                                                         */
     1177        5        /*T***********************************************************/
     1178        6
     1179        7        /*D* NAME: VDG$OCOPY_LOCATION
     1180        8            PARAMETERS:
     1181        9                ORIGINAL - Actual VD$LOCATION to make a new copy of.
     1182       10                NEW_VD$LOCATION - Caller-allocated area in which to put
     1183       11                    the new VD$LOCATION.
     1184       12            INPUT:
     1185       13                None.
     1186       14            OUTPUT:
     1187       15                NEW_VD$LOCATION will contain a copy of ORIGINAL.
     1188       16            DESCRIPTION:
     1189       17                The new VD$LOCATION (the space for which is allocated by
     1190       18                the caller) is filled in by copying each element of the
     1191       19                KEY array.
     1192       20                POSITION# and EOF# are then filled in.
     1193       21        */
     1194       22
     1195       23        VDG$OCOPY_LOCATION: PROC (ORIGINAL, NEW_VD$LOCATION) ALTRET;
     1196       24
     1197       25
     1198       26        %INCLUDE VD_MACROS_M;
     1199     2241
     1200     2242
     1201     2243        %VD$LOCATION (NAME=ORIGINAL, STCLASS=PARAM);
     1202     2271        %VD$LOCATION (NAME=NEW_VD$LOCATION, STCLASS=PARAM);
     1203     2299
     1204     2300
     1205     2301    1   DCL VDG$OCOPY     ENTRY (2) ALTRET;
     1206     2302
     1207     2303
     1208     2304    1   DCL KEY_INDEX UBIN;
     1209     2305
PL6.E3A0      #005=VDG$OCOPY_LOCATION File=VDG$OBJECTS.:VDA5TSI                  FRI 07/04/97 11:21 Page:181  
     1210     2306
     1211     2307        %VD$TEXTC_REMOTE;
     1212     2368
     1213     2369
     1214     2370    2           DO KEY_INDEX = 0 TO %MX_LOCATION_LEVELS - 1;
     1215     2371                   %COPYKEY (FKEY=ORIGINAL.KEY, FINDX=KEY_INDEX,
     1216     2372                   TKEY=NEW_VD$LOCATION.KEY, TINDX=KEY_INDEX);
     1217     2388    2              END;
     1218     2389
     1219     2390    1           NEW_VD$LOCATION.POSITION# = ORIGINAL.POSITION#;
     1220     2391    1           NEW_VD$LOCATION.EOF = ORIGINAL.EOF;
     1221     2392
     1222     2393    1           RETURN;
     1223     2394
     1224     2395    1   END VDG$OCOPY_LOCATION;
     1225     2396        %EOD;

PL6.E3A0      #005=VDG$OCOPY_LOCATION File=VDG$OBJECTS.:VDA5TSI                  FRI 07/04/97 11:21 Page:182  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$OCOPY_LOCATION.

   Procedure VDG$OCOPY_LOCATION requires 47 words for executable code.
   Procedure VDG$OCOPY_LOCATION requires 8 words of local(AUTO) storage.

PL6.E3A0      #005=VDG$OCOPY_LOCATION File=VDG$OBJECTS.:VDA5TSI                  FRI 07/04/97 11:21 Page:183  

 Object Unit name= VDG$OCOPY_LOCATION                         File name= VDG$OBJECTS.:VDA5TOU
 UTS= JUL 04 '97 11:21:50.16 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    47     57  VDG$OCOPY_LOCATION

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  VDG$OCOPY_LOCATION

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VDG$OCOPY
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #005=VDG$OCOPY_LOCATION File=VDG$OBJECTS.:VDA5TSI                  FRI 07/04/97 11:21 Page:184  


     1173        1        /*T***********************************************************/
     1174        2        /*T*                                                         */
     1175        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1176        4        /*T*                                                         */
     1177        5        /*T***********************************************************/
     1178        6
     1179        7        /*D* NAME: VDG$OCOPY_LOCATION
     1180        8            PARAMETERS:
     1181        9                ORIGINAL - Actual VD$LOCATION to make a new copy of.
     1182       10                NEW_VD$LOCATION - Caller-allocated area in which to put
     1183       11                    the new VD$LOCATION.
     1184       12            INPUT:
     1185       13                None.
     1186       14            OUTPUT:
     1187       15                NEW_VD$LOCATION will contain a copy of ORIGINAL.
     1188       16            DESCRIPTION:
     1189       17                The new VD$LOCATION (the space for which is allocated by
     1190       18                the caller) is filled in by copying each element of the
     1191       19                KEY array.
     1192       20                POSITION# and EOF# are then filled in.
     1193       21        */
     1194       22
     1195       23        VDG$OCOPY_LOCATION: PROC (ORIGINAL, NEW_VD$LOCATION) ALTRET;

     23  0 000000   000000 700200 xent  VDG$OCOPY_L* TSX0  ! X66_AUTO_2
         0 000001   000010 000002                    ZERO    8,2

     1196       24
     1197       25
     1198       26        %INCLUDE VD_MACROS_M;
     1199     2241
     1200     2242
     1201     2243        %VD$LOCATION (NAME=ORIGINAL, STCLASS=PARAM);
     1202     2271        %VD$LOCATION (NAME=NEW_VD$LOCATION, STCLASS=PARAM);
     1203     2299
     1204     2300
PL6.E3A0      #005=VDG$OCOPY_LOCATION File=VDG$OBJECTS.:VDA5TSI                  FRI 07/04/97 11:21 Page:185  
     1205     2301    1   DCL VDG$OCOPY     ENTRY (2) ALTRET;
     1206     2302
     1207     2303
     1208     2304    1   DCL KEY_INDEX UBIN;
     1209     2305
     1210     2306
     1211     2307        %VD$TEXTC_REMOTE;
     1212     2368
     1213     2369
     1214     2370    2           DO KEY_INDEX = 0 TO %MX_LOCATION_LEVELS - 1;

   2370  0 000002   200005 450100                    STZ     KEY_INDEX,,AUTO
         0 000003   000043 710000 0                  TRA     s:2388+3

     1215     2371                   %COPYKEY (FKEY=ORIGINAL.KEY, FINDX=KEY_INDEX,
     1216     2372                   TKEY=NEW_VD$LOCATION.KEY, TINDX=KEY_INDEX);

   2385  0 000004   200005 235100                    LDA     KEY_INDEX,,AUTO
         0 000005   000001 735000                    ALS     1
         0 000006   200005 236100                    LDQ     KEY_INDEX,,AUTO
         0 000007   000003 736000                    QLS     3
         0 000010   000002 735000                    ALS     2
         0 000011   200003 470500                    LDP0    @ORIGINAL,,AUTO
         0 000012   200004 471500                    LDP1    @NEW_VD$LOCATION,,AUTO
         0 000013   000105 100506                    MLR     fill='000'O
         0 000014   000000 000010                    ADSC9   0,Q,PR0                  cn=0,n=8
         0 000015   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=8

   2385  0 000016   200005 235100                    LDA     KEY_INDEX,,AUTO
         0 000017   000001 735000                    ALS     1
         0 000020   000000 720105                    LXL0    0,AL,PR0
         0 000021   000002 100003                    CMPX0   2,DU
         0 000022   000040 601000 0                  TNZ     s:2388

   2385  0 000023   000001 473505                    LDP3    1,AL,PR0
         0 000024   200005 236100                    LDQ     KEY_INDEX,,AUTO
         0 000025   000023 736000                    QLS     19
PL6.E3A0      #005=VDG$OCOPY_LOCATION File=VDG$OBJECTS.:VDA5TSI                  FRI 07/04/97 11:21 Page:186  
         0 000026   000001 036003                    ADLQ    1,DU
         0 000027   200004 036100                    ADLQ    @NEW_VD$LOCATION,,AUTO
         0 000030   200007 756100                    STQ     KEY_INDEX+2,,AUTO
         0 000031   200006 453500                    STP3    KEY_INDEX+1,,AUTO
         0 000032   200006 630500                    EPPR0   KEY_INDEX+1,,AUTO
         0 000033   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000034   000000 701000 xent               TSX1    VDG$OCOPY
         0 000035   000037 702000 0                  TSX2    s:2386
         0 000036   000040 710000 0                  TRA     s:2388

   2386  0 000037   000000 702200 xent               TSX2  ! X66_AALT

     1217     2388    2              END;

   2388  0 000040   200005 235100                    LDA     KEY_INDEX,,AUTO
         0 000041   000001 035007                    ADLA    1,DL
         0 000042   200005 755100                    STA     KEY_INDEX,,AUTO
         0 000043   200005 235100                    LDA     KEY_INDEX,,AUTO
         0 000044   000004 115007                    CMPA    4,DL
         0 000045   000004 602000 0                  TNC     s:2385

     1218     2389
     1219     2390    1           NEW_VD$LOCATION.POSITION# = ORIGINAL.POSITION#;

   2390  0 000046   200003 470500                    LDP0    @ORIGINAL,,AUTO
         0 000047   000010 220100                    LDX0    8,,PR0
         0 000050   200004 471500                    LDP1    @NEW_VD$LOCATION,,AUTO
         0 000051   100010 740100                    STX0    8,,PR1

     1220     2391    1           NEW_VD$LOCATION.EOF = ORIGINAL.EOF;

   2391  0 000052   000010 236100                    LDQ     8,,PR0
         0 000053   100010 676100                    ERQ     8,,PR1
         0 000054   400000 376007                    ANQ     -131072,DL
         0 000055   100010 656100                    ERSQ    8,,PR1

     1221     2392
PL6.E3A0      #005=VDG$OCOPY_LOCATION File=VDG$OBJECTS.:VDA5TSI                  FRI 07/04/97 11:21 Page:187  
     1222     2393    1           RETURN;

   2393  0 000056   000000 702200 xent               TSX2  ! X66_ARET
     1223     2394
     1224     2395    1   END VDG$OCOPY_LOCATION;
     1225     2396        %EOD;

PL6.E3A0      #005=VDG$OCOPY_LOCATION File=VDG$OBJECTS.:VDA5TSI                  FRI 07/04/97 11:21 Page:188  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$OCOPY_LOCATION.
PL6.E3A0      #005=VDG$OCOPY_LOCATION File=VDG$OBJECTS.:VDA5TSI                  FRI 07/04/97 11:21 Page:189  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @NEW_VD$LOCATION           3-0-0/w PTR         r     1 @ORIGINAL
     5-0-0/w UBIN        r     1 KEY_INDEX                 *0-0-0/w STRC(324)   r     1 NEW_VD$LOCATION
    *0-0-0/w STRC(324)   r     1 ORIGINAL

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE


   Procedure VDG$OCOPY_LOCATION requires 47 words for executable code.
   Procedure VDG$OCOPY_LOCATION requires 8 words of local(AUTO) storage.
PL6.E3A0      #005=VDG$OCOPY_LOCATION File=VDG$OBJECTS.:VDA5TSI                  FRI 07/04/97 11:21 Page:190  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=VDG$OCOPY_LOCATION File=VDG$OBJECTS.:VDA5TSI                  FRI 07/04/97 11:21 Page:191  
          MINI XREF LISTING

KEY_INDEX
      2304**DCL      2370<<DOINDEX  2385>>ASSIGN   2385>>ASSIGN   2385>>IF       2385>>CALL     2385>>CALL
      2385>>CALL
NEW_VD$LOCATION
      2279**DCL        23--PROC
NEW_VD$LOCATION.EOF
      2297**DCL      2391<<ASSIGN
NEW_VD$LOCATION.KEY
      2293**DCL      2385<<ASSIGN
NEW_VD$LOCATION.KEY.V$
      2295**DCL      2385<>CALL
NEW_VD$LOCATION.POSITION#
      2297**DCL      2390<<ASSIGN
ORIGINAL
      2251**DCL        23--PROC
ORIGINAL.EOF
      2269**DCL      2391>>ASSIGN
ORIGINAL.KEY
      2265**DCL      2385>>ASSIGN
ORIGINAL.KEY.REP#
      2267**DCL      2385>>IF
ORIGINAL.KEY.V$
      2267**DCL      2385>>CALL     2385>>CALL
ORIGINAL.POSITION#
      2269**DCL      2390>>ASSIGN
VD$TEXTC_REMOTE
      2332**DCL      2385<>CALL
VD$TEXTC_REMOTE.LENGTH#
      2361**DCL      2363--IMP-SIZ  2385>>CALL
VDG$OCOPY
      2301**DCL-ENT  2385--CALL

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:192  
     1226        1        /*T***********************************************************/
     1227        2        /*T*                                                         */
     1228        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1229        4        /*T*                                                         */
     1230        5        /*T***********************************************************/
     1231        6
     1232        7        /*D* NAME: VDG$OFREE
     1233        8            PARAMETERS:
     1234        9                OBJECT_HEADER - Actual VD$OBJECT_HEADER (or any sub- or
     1235       10                    super-part thereof) in object to free.
     1236       11                    OBJECT_HEADER.SIZE# should contain # words allocated for
     1237       12                    object.  If the "object" doesn't reside in dynamic
     1238       13                    storage (eg, if it's one of initialization's constants
     1239       14                    or in someone's auto storage), then .SIZE# must be 0.
     1240       15            INPUT:
     1241       16                VD_MCB_LARGE - XUM$MCB for large-object heap.
     1242       17                VD_MCB_SMALL - XUM$MCB for small-object heap.
     1243       18                VD_OBJECTS - Info about object classes.
     1244       19            OUTPUT:
     1245       20                None.
     1246       21            DESCRIPTION:
     1247       22                Free any objects pointed-to by this object.
     1248       23                If OBJECT_HEADER is one of a set of specific object classes, pop
     1249       24                it from a predefined stack:
     1250       25                    Object:          Is popped from:
     1251       26                    -----------      ----------------------------
     1252       27                    %CLS_CMD_STREAM  VD_6E.CMD_STREAM$ (points to tail)
     1253       28                    %CLS_PORT        VD_6E.PORT_HEAD$/.PORT_TAIL$
     1254       29                    (%CLS_ERR is not popped 'cause it has no backward pointer,
     1255       30                    'cause VD$ERRs are never freed individually, just all-at-once
     1256       31                    after the error is reported, so they aren't really a stack.)
     1257       32                Calls X$DEALLOCATE to deallocate the object itself.
     1258       33        */
     1259       34
     1260       35        VDG$OFREE: PROC (OBJECT_HEADER) ALTRET;
     1261       36
     1262       37
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:193  
     1263       38        %INCLUDE VD_MACROS_M;
     1264     2253        %INCLUDE VD_PERR_C;
     1265     2401        %INCLUDE XUM_MACRO_C;
     1266     2428
     1267     2429
     1268     2430        %VD$OBJECT_HEADER (NAME=OBJECT_HEADER, STCLASS=PARAM);
     1269     2452
     1270     2453
     1271     2454    1   DCL VDG$OFREE_DCB       ENTRY (1) ALTRET;
     1272     2455    1   DCL VDG$OCLEAR_RANGE    ENTRY (1) ALTRET;
     1273     2456    1   DCL VDG$OCLEAR_LOCATION ENTRY (1) ALTRET;
     1274     2457    1   DCL X$DEALLOCATE        ENTRY (1) ALTRET;
     1275     2458    1   DCL VDG$ESCREECH        ENTRY (3);
     1276     2459
     1277     2460
     1278     2461        %VD_6E (STCLASS=SYMREF);
     1279     2497        %VD_OBJECTS (NAME=VD_OBJECTS, STCLASS=SYMREF);
     1280     2537        %XUM$MCB (NAME=VD_MCB_LARGE, STCLASS=SYMREF);
     1281     2541        %XUM$MCB (NAME=VD_MCB_SMALL, STCLASS=SYMREF);
     1282     2545
     1283     2546
     1284     2547    1   DCL MCB$ PTR;
     1285     2548    1   DCL NWORDS SBIN;
     1286     2549    1   DCL N_ENTRIES SBIN;
     1287     2550    1   DCL PTR$ PTR;
     1288     2551    1   DCL 1 SEG_PTR REDEF PTR$,
     1289     2552    1         2 * UBIN(24) UNAL,
     1290     2553    1         2 SEGID BIT(12) UNAL;
     1291     2554    1   DCL SEG_PTR2$ PTR;
     1292     2555    1   DCL 1 SEG_PTR2 REDEF SEG_PTR2$,
     1293     2556    1         2 * UBIN(24) UNAL,
     1294     2557    1         2 SEGID BIT(12) UNAL;
     1295     2558    1   DCL PTR2$ PTR;
     1296     2559    1   DCL I SBIN;
     1297     2560    1   DCL SBIN_WORD$ PTR;
     1298     2561
     1299     2562
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:194  
     1300     2563        %XUM$MCB (NAME=MCB, STCLASS="BASED(MCB$)");
     1301     2567    1   DCL SBIN$WORD SBIN BASED(SBIN_WORD$);
     1302     2568        %VD$ERR (NAME=ERR$HEAD, STCLASS="BASED(VD_6E.ERR_HEAD$)");
     1303     2621        %VD$OBJECT_HEADER;
     1304     2643
     1305     2644        %VD$BLOCK_DESC (STCLASS="BASED(PTR$)");
     1306     2791        %VD$BUFFER (STCLASS="BASED(PTR$)");
     1307     2849        %VD$BUFFER_HEADER (STCLASS="BASED(PTR$)");
     1308     2885        %VD$CMD_STREAM (STCLASS="BASED(PTR$)");
     1309     2924        %VD$DIR_NODE (STCLASS="BASED(PTR$)");
     1310     2962        %VD$ENCODED_NODE (STCLASS="BASED(PTR$)");
     1311     3083        %VD$ERR (STCLASS="BASED(PTR$)");
     1312     3136        %VD$EVAL (STCLASS="BASED(PTR$)");
     1313     3381        %VD$EVAL_PATTERN (STCLASS="BASED(PTR$)");
     1314     3488        %VD$FILE_KEY (STCLASS="BASED(PTR$)");
     1315     3537        %VD$FILE_NODE (STCLASS="BASED(PTR$)");
     1316     3630        %VD$FIT (STCLASS="BASED(PTR$)");
     1317     3666        %VD$IT_ADJUST (STCLASS="BASED(PTR$)");
     1318     3703        %VD$IT_BLOCK_EXPR (STCLASS="BASED(PTR$)");
     1319     3853        %VD$IT_COMMAND (STCLASS="BASED(PTR$)");
     1320     3891        %VD$IT_OPERAND (STCLASS="BASED(PTR$)");
     1321     3957        %VD$IT_OPERATOR (STCLASS="BASED(PTR$)");
     1322     3994        %VD$IT_SELECT (STCLASS="BASED(PTR$)");
     1323     4031        %VD$NAME_SPEC (STCLASS="BASED(PTR$)");
     1324     4079        %VD$PATTERN (STCLASS="BASED(PTR$)");
     1325     4130        %VD$PORT (STCLASS="BASED(PTR$)");
     1326     4228        %VD$RECORD_SET (STCLASS="BASED(PTR$)");
     1327     4306        %VD$STREAM (STCLASS="BASED(PTR$)");
     1328     4412        %VD$STRING_HEADER (STCLASS="BASED(PTR$)");
     1329     4448        %VD$STRUCTURE_SPEC (STCLASS="BASED(PTR$)");
     1330     4485        %VD$TABS (STCLASS="BASED(PTR$)");
     1331     4522        %VD$TEXTC_REMOTE (STCLASS="BASED(PTR$)");
     1332     4583        %VD$WINDOW_BLOCK (STCLASS="BASED(PTR$)");
     1333     4620        %VD$WINDOW_SPEC (STCLASS="BASED(PTR$)");
     1334     4686        %VD$XLATE_LOCATIONS (STCLASS="BASED(PTR$)");
     1335     4822
     1336     4823
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:195  
     1337     4824
     1338     4825    1   OFREE:
     1339     4826    1           PTR$ = ADDR(OBJECT_HEADER);
     1340     4827    1           IF PTR$ = ADDR(NIL) THEN
     1341     4828    1              RETURN;
     1342     4829
     1343     4830    1           IF OBJECT_HEADER.CLASS# >= %CLS_MX
     1344     4831    2             OR VD_OBJECTS.SIZE (OBJECT_HEADER.CLASS#) < 0 THEN DO;
     1345     4832    2              CALL VDG$ESCREECH (OBJECT_HEADER);
     1346     4833    2              END;
     1347     4834
     1348     4835    1           IF VD_OBJECTS.STR (OBJECT_HEADER.CLASS#)
     1349     4836    1             AND VD$STRING_HEADER.FLINK$ ~= ADDR(NIL) THEN
     1350     4837    1              CALL VDG$OFREE (VD$STRING_HEADER.FLINK$->VD$STRING_HEADER)
     1351     4838    1                ALTRET (OFREE_FAILED);
     1352     4839    1           ELSE IF VD_OBJECTS.BUF (OBJECT_HEADER.CLASS#)
     1353     4840    2                AND VD$BUFFER_HEADER.FLINK$ ~= ADDR(NIL) THEN DO;
     1354     4841    2                 CALL VDG$OFREE (VD$BUFFER_HEADER.FLINK$->VD$BUFFER_HEADER)
     1355     4842    2                   ALTRET (OFREE_FAILED);
     1356     4843    2                 END;
     1357     4844
     1358     4845                /* Do object-class-specific actions */
     1359     4846    2           DO CASE (OBJECT_HEADER.CLASS#);
     1360     4847
     1361     4848    2            CASE (%CLS_BLOCK_BUFFER);
     1362     4849                   /* Don't free VD$BLOCK_DESC.OPTIONS.STRUCTURE$ */
     1363     4850    2              PTR2$ = PALIGNW(ADDR(VD$BUFFER.BYTES));
     1364     4851                   %CLEARKEY (KEY="PTR2$->VD$BLOCK_DESC.FILE_KEY");
     1365     4861    2              CALL VDG$OCLEAR_RANGE (PTR2$->VD$BLOCK_DESC.RANGE)
     1366     4862    2                ALTRET (OCLEAR_RANGE_FAILED);
     1367     4863
     1368     4864    2            CASE (%CLS_BLOCK_DESC);
     1369     4865                   /* Don't free VD$BLOCK_DESC.OPTIONS.STRUCTURE$ */
     1370     4866                   %CLEARKEY (KEY=VD$BLOCK_DESC.FILE_KEY);
     1371     4876    2              CALL VDG$OCLEAR_RANGE (VD$BLOCK_DESC.RANGE)
     1372     4877    2                ALTRET (OCLEAR_RANGE_FAILED);
     1373     4878
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:196  
     1374     4879    2            CASE (%CLS_CMD_STREAM);
     1375     4880    2              VD_6E.CMD_STREAM$ = VD$CMD_STREAM.BLINK$;
     1376     4881                   /* Don't free VD$CMD_STREAM.BLINK$ */
     1377     4882    2              IF VD$CMD_STREAM.RECORD$ ~= ADDR(NIL) THEN
     1378     4883    2                 CALL VDG$OFREE (VD$CMD_STREAM.RECORD$->VD$BUFFER)
     1379     4884    2                   ALTRET (OFREE_FAILED);
     1380     4885    2              IF VD$CMD_STREAM.INTREE$ ~= ADDR(NIL) THEN
     1381     4886    2                 CALL VDG$OFREE (VD$CMD_STREAM.INTREE$->VD$IT_COMMAND)
     1382     4887    2                   ALTRET (OFREE_FAILED);
     1383     4888
     1384     4889    2            CASE (%CLS_DIR_NODE);
     1385     4890                   /* Don't free VD$DIR_NODE.BLINK$ */
     1386     4891                   /* Don't free VD$DIR_NODE.STRUCTURE$ */
     1387     4892    2              IF VD$DIR_NODE.FLINK$ ~= ADDR(NIL) THEN
     1388     4893    2                 CALL VDG$OFREE (VD$DIR_NODE.FLINK$->VD$DIR_NODE)
     1389     4894    2                   ALTRET (OFREE_FAILED);
     1390     4895    2              IF VD$DIR_NODE.HEAD$ ~= ADDR(NIL) THEN
     1391     4896    2                 CALL VDG$OFREE (VD$DIR_NODE.HEAD$->VD$FILE_NODE)
     1392     4897    2                   ALTRET (OFREE_FAILED);
     1393     4898
     1394     4899    2            CASE (%CLS_ENCODED_NODE);
     1395     4900                   %CLEARKEY (KEY=VD$ENCODED_NODE.DESC.FILE_KEY);
     1396     4910    2              CALL VDG$OCLEAR_LOCATION (VD$ENCODED_NODE.DESC.LOCATION)
     1397     4911    2                ALTRET (OCLEAR_LOCATION_FAILED);
     1398     4912    2              IF VD$ENCODED_NODE.DESC.DATA$ ~= ADDR(NIL) THEN
     1399     4913    2                 CALL VDG$OFREE (VD$ENCODED_NODE.DESC.DATA$->VD$BUFFER)
     1400     4914    2                   ALTRET (OFREE_FAILED);
     1401     4915
     1402     4916    2            CASE (%CLS_ERR);
     1403     4917    2              IF VD$ERR.FLINK$ ~= ADDR(NIL) THEN
     1404     4918    2                 CALL VDG$OFREE (VD$ERR.FLINK$->VD$ERR)
     1405     4919    2                   ALTRET (OFREE_FAILED);
     1406     4920
     1407     4921    2            CASE (%CLS_EVAL);
     1408     4922                   /* Don't free VD$EVAL.BLINK$ */
     1409     4923    2              CALL VDG$OCLEAR_RANGE (VD$EVAL.ENCLOSING)
     1410     4924    2                ALTRET (OCLEAR_RANGE_FAILED);
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:197  
     1411     4925    2              CALL VDG$OCLEAR_RANGE (VD$EVAL.RANGE)
     1412     4926    2                ALTRET (OCLEAR_RANGE_FAILED);
     1413     4927    2              CALL VDG$OCLEAR_RANGE (VD$EVAL.LAST_FOUND_RANGE)
     1414     4928    2                ALTRET (OCLEAR_RANGE_FAILED);
     1415     4929                   /* Don't free VD$EVAL.NODE$ */
     1416     4930
     1417     4931    2            CASE (%CLS_EVAL_PATTERN);
     1418     4932                      /* Don't free VD$EVAL_PATTERN.BLINK$ */
     1419     4933    2              CALL VDG$OCLEAR_RANGE (VD$EVAL_PATTERN.RANGE)
     1420     4934    2                ALTRET (OCLEAR_RANGE_FAILED);
     1421     4935                      /* Don't free VD$EVAL_PATTERN.PATTERN$ */
     1422     4936
     1423     4937    2            CASE (%CLS_FILE_KEY);
     1424     4938    2              IF VD$FILE_KEY.FLINK$ ~= ADDR(NIL) THEN
     1425     4939    2                 CALL VDG$OFREE (VD$FILE_KEY.FLINK$->VD$STRING_HEADER)
     1426     4940    2                   ALTRET (OFREE_FAILED);
     1427     4941
     1428     4942    2            CASE (%CLS_FILE_NODE);
     1429     4943                   /* Don't free VD$FILE_NODE.BLINK$ */
     1430     4944    2              IF VD$FILE_NODE.FLINK$ ~= ADDR(NIL) THEN
     1431     4945    2                 CALL VDG$OFREE (VD$FILE_NODE.FLINK$->VD$FILE_NODE)
     1432     4946    2                   ALTRET (OFREE_FAILED);
     1433     4947                   %CLEARKEY (KEY=VD$FILE_NODE.DESC.KEY);
     1434     4957                   %CLEARSPEC (SPEC=VD$FILE_NODE.DESC.SPEC);
     1435     4967    2              IF VD$FILE_NODE.DESC.DATA$ ~= ADDR(NIL) THEN
     1436     4968    2                 CALL VDG$OFREE (VD$FILE_NODE.DESC.DATA$->VD$BUFFER)
     1437     4969    2                   ALTRET (OFREE_FAILED);
     1438     4970    2              IF VD$FILE_NODE.HEAD$ ~= ADDR(NIL) THEN
     1439     4971    2                 CALL VDG$OFREE (VD$FILE_NODE.HEAD$->VD$FILE_NODE)
     1440     4972    2                   ALTRET (OFREE_FAILED);
     1441     4973
     1442     4974    2            CASE (%CLS_FIT);
     1443     4975                   /* Don't free VD$FIT.CODE2$ */
     1444     4976                   /* Don't free VD$FIT.CODE3$ */
     1445     4977    2              ;
     1446     4978
     1447     4979    2            CASE (%CLS_IT_ADJUST);
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:198  
     1448     4980                   /* Don't free VD$IT_ADJUST.PARENT$ */
     1449     4981    2              IF VD$IT_ADJUST.FLINK$ ~= ADDR(NIL) THEN
     1450     4982    2                 CALL VDG$OFREE (VD$IT_ADJUST.FLINK$->VD$IT_ADJUST)
     1451     4983    2                   ALTRET (OFREE_FAILED);
     1452     4984    2              IF VD$IT_ADJUST.MOVEMENTS$ ~= ADDR(NIL) THEN
     1453     4985    2                 CALL VDG$OFREE (VD$IT_ADJUST.MOVEMENTS$->VD$IT_OPERAND)
     1454     4986    2                   ALTRET (OFREE_FAILED);
     1455     4987
     1456     4988    2            CASE (%CLS_IT_BLOCK_EXPR);
     1457     4989                   /* Don't free VD$IT_BLOCK_EXPR.PARENT$ */
     1458     4990                   /* Don't free VD$IT_BLOCK_EXPR.OPTIONS.STRUCTURE$ */
     1459     4991    2              IF VD$IT_BLOCK_EXPR.FLINK$ ~= ADDR(NIL) THEN
     1460     4992    2                 CALL VDG$OFREE (VD$IT_BLOCK_EXPR.FLINK$->VD$IT_BLOCK_EXPR)
     1461     4993    2                   ALTRET (OFREE_FAILED);
     1462     4994                   %CLEARKEY (KEY=VD$IT_BLOCK_EXPR.DOMAINN.FILE_KEY);
     1463     5004    2              CALL VDG$OCLEAR_RANGE (VD$IT_BLOCK_EXPR.DOMAINN.RANGE)
     1464     5005    2                ALTRET (OCLEAR_RANGE_FAILED);
     1465     5006    2              IF VD$IT_BLOCK_EXPR.SELECTS$ ~= ADDR(NIL) THEN
     1466     5007    2                 CALL VDG$OFREE (VD$IT_BLOCK_EXPR.SELECTS$->VD$IT_SELECT)
     1467     5008    2                   ALTRET (OFREE_FAILED);
     1468     5009
     1469     5010    2            CASE (%CLS_IT_COMMAND);
     1470     5011                   /* Don't free VD$IT_COMMAND.PARENT$ */
     1471     5012    2              IF VD$IT_COMMAND.FLINK$ ~= ADDR(NIL) THEN
     1472     5013    2                 CALL VDG$OFREE (VD$IT_COMMAND.FLINK$->VD$IT_COMMAND)
     1473     5014    2                   ALTRET (OFREE_FAILED);
     1474     5015                      /* Don't free .PT_BLOCK_EXPR$->:  VD$IT_COMMAND doesn't own it */
     1475     5016    3              DO I = 0 TO %(MX_COMMAND_PARAMS-1);
     1476     5017    3                 IF VD$IT_COMMAND.PARAM$ (I) ~= ADDR(NIL) THEN
     1477     5018    3                    CALL VDG$OFREE (VD$IT_COMMAND.PARAM$(I)->VD$OBJECT_HEADER)
     1478     5019    3                      ALTRET (OFREE_FAILED);
     1479     5020    3                 END;
     1480     5021
     1481     5022    2            CASE (%CLS_IT_OPERAND);
     1482     5023                   /* Don't free VD$IT_OPERAND.PARENT$ */
     1483     5024    2              IF VD$IT_OPERAND.FLINK$ ~= ADDR(NIL) THEN
     1484     5025    2                 CALL VDG$OFREE (VD$IT_OPERAND.FLINK$->VD$IT_OPERAND)
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:199  
     1485     5026    2                   ALTRET (OFREE_FAILED);
     1486     5027    2              IF VD$IT_OPERAND.PARAM$ ~= ADDR(NIL) THEN
     1487     5028    2                 CALL VDG$OFREE (VD$IT_OPERAND.PARAM$->VD$OBJECT_HEADER)
     1488     5029    2                   ALTRET (OFREE_FAILED);
     1489     5030
     1490     5031    2            CASE (%CLS_IT_OPERATOR);
     1491     5032                   /* Don't free VD$IT_OPERATOR.PARENT$ */
     1492     5033    2              IF VD$IT_OPERATOR.FLINK$ ~= ADDR(NIL) THEN
     1493     5034    2                 CALL VDG$OFREE (VD$IT_OPERATOR.FLINK$->VD$IT_OPERATOR)
     1494     5035    2                   ALTRET (OFREE_FAILED);
     1495     5036    2              IF VD$IT_OPERATOR.OPERAND$ ~= ADDR(NIL) THEN
     1496     5037    2                 CALL VDG$OFREE (VD$IT_OPERATOR.OPERAND$->VD$IT_OPERAND)
     1497     5038    2                   ALTRET (OFREE_FAILED);
     1498     5039    2              IF VD$IT_OPERATOR.R_OPERAND$ ~= ADDR(NIL) THEN
     1499     5040    2                 CALL VDG$OFREE (VD$IT_OPERATOR.R_OPERAND$->VD$IT_OPERAND)
     1500     5041    2                   ALTRET (OFREE_FAILED);
     1501     5042
     1502     5043    2            CASE (%CLS_IT_SELECT);
     1503     5044                   /* Don't free VD$IT_SELECT.PARENT$ */
     1504     5045    2              IF VD$IT_SELECT.FLINK$ ~= ADDR(NIL) THEN
     1505     5046    2                 CALL VDG$OFREE (VD$IT_SELECT.FLINK$->VD$IT_SELECT)
     1506     5047    2                   ALTRET (OFREE_FAILED);
     1507     5048    2              IF VD$IT_SELECT.ADJUSTS$ ~= ADDR(NIL) THEN
     1508     5049    2                 CALL VDG$OFREE (VD$IT_SELECT.ADJUSTS$->VD$IT_ADJUST)
     1509     5050    2                   ALTRET (OFREE_FAILED);
     1510     5051
     1511     5052    2            CASE (%CLS_PATTERN);
     1512     5053    2              N_ENTRIES = (VD$PATTERN.OBJECT.SIZE# -
     1513     5054    2                POFFW(ADDR(VD$PATTERN.ENTRIES), PTR$)) /
     1514     5055    2                SIZEW(VD$PATTERN.ENTRIES);
     1515     5056    2              IF N_ENTRIES ~= VD$PATTERN.MX_ENTRIES#
     1516     5057    2                OR VD$PATTERN.N_ENTRIES# > N_ENTRIES THEN
     1517     5058    2                 CALL VDG$ESCREECH (VD$PATTERN.N_ENTRIES#);
     1518     5059    3              DO I = 0 TO (VD$PATTERN.N_ENTRIES# - 1);
     1519     5060    4                 IF VD$PATTERN.ENTRIES.MATCH$ (I) ~= ADDR(NIL) THEN DO;
     1520     5061    4                    CALL VDG$OFREE (VD$PATTERN.ENTRIES.MATCH$ (I) ->
     1521     5062    4                      VD$OBJECT_HEADER)
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:200  
     1522     5063    4                      ALTRET (OFREE_FAILED);
     1523     5064    4                    END;
     1524     5065    3                 END;
     1525     5066
     1526     5067    2            CASE (%CLS_PORT);
     1527     5068                   /* Delink VD$PORT from doubly-linked chain */
     1528     5069    2              IF VD$PORT.BLINK$ = ADDR(NIL) THEN
     1529     5070    2                 VD_6E.PORT_HEAD$ = VD$PORT.FLINK$;
     1530     5071    2              ELSE
     1531     5072    2                 VD$PORT.BLINK$->VD$PORT.FLINK$ = VD$PORT.FLINK$;
     1532     5073    2              IF VD$PORT.FLINK$ = ADDR(NIL) THEN
     1533     5074    2                 VD_6E.PORT_TAIL$ = VD$PORT.BLINK$;
     1534     5075    2              ELSE
     1535     5076    2                 VD$PORT.FLINK$->VD$PORT.BLINK$ = VD$PORT.BLINK$;
     1536     5077                   /* Don't free VD$PORT.BLINK$ */
     1537     5078                   /* Don't free VD$PORT.FLINK$ */
     1538     5079                   /* Don't free VD$PORT.STRUCTURE$ */
     1539     5080                   /* Don't free VD$PORT.LEVEL.INTERNAL$ */
     1540     5081    3              IF VD$PORT.DCB# ~= 0 THEN DO;
     1541     5082    3                 CALL VDG$OFREE_DCB (VD$PORT.DCB#)
     1542     5083    3                   ALTRET (OFREE_DCB_FAILED);
     1543     5084    3                 END;
     1544     5085    2              IF VD$PORT.FIT$ ~= ADDR(NIL) THEN
     1545     5086    2                 CALL VDG$OFREE (VD$PORT.FIT$->VD$FIT)
     1546     5087    2                   ALTRET (OFREE_FAILED);
     1547     5088                   %CLEARKEY (KEY=VD$PORT.FILE_KEY);
     1548     5098    2              CALL VDG$OCLEAR_LOCATION (VD$PORT.CURRENT)
     1549     5099    2                ALTRET (OCLEAR_LOCATION_FAILED);
     1550     5100    3              DO I = 0 TO %MX_ACCESS_LEVELS - 1;
     1551     5101    3                 IF VD$PORT.LEVEL.DATA$ (I) ~= ADDR(NIL) THEN
     1552     5102    3                    CALL VDG$OFREE (VD$PORT.LEVEL.DATA$ (I) -> VD$BUFFER)
     1553     5103    3                      ALTRET (OFREE_FAILED);
     1554     5104    3                 END;
     1555     5105
     1556     5106    2            CASE (%CLS_RECORD_SET);
     1557     5107    3              DO I = 0 TO (VD$RECORD_SET.N_ENTRIES# - 1);
     1558     5108                      %CLEARKEY (KEY=VD$RECORD_SET.DESC.KEY, INDX=I);
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:201  
     1559     5118    3                 IF VD$RECORD_SET.DESC.DATA$ (I) ~= ADDR(NIL) THEN
     1560     5119    3                    CALL VDG$OFREE (VD$RECORD_SET.DESC.DATA$ (I) -> VD$BUFFER)
     1561     5120    3                      ALTRET (OFREE_FAILED);
     1562     5121    3                 END;
     1563     5122
     1564     5123    2            CASE (%CLS_STREAM);
     1565     5124                   /* Don't free VD$STREAM.PORT$ */
     1566     5125                   %CLEARKEY (KEY=VD$STREAM.FILE_KEY);
     1567     5135    2              CALL VDG$OCLEAR_LOCATION (VD$STREAM.CURRENT)
     1568     5136    2                ALTRET (OCLEAR_LOCATION_FAILED);
     1569     5137    2              CALL VDG$OCLEAR_LOCATION (VD$STREAM.NEXT)
     1570     5138    2                ALTRET (OCLEAR_LOCATION_FAILED);
     1571     5139
     1572     5140    2            CASE (%CLS_STRUCTURE_SPEC);
     1573     5141                   /* Don't free VD$STRUCTURE_SPEC.ACCESSOR$ */
     1574     5142    2              IF VD$STRUCTURE_SPEC.FIT$ ~= ADDR(NIL) THEN
     1575     5143    2                 CALL VDG$OFREE (VD$STRUCTURE_SPEC.FIT$->VD$FIT)
     1576     5144    2                   ALTRET (OFREE_FAILED);
     1577     5145
     1578     5146    2            CASE (%CLS_WINDOW_BLOCK);
     1579     5147    2              IF VD$WINDOW_BLOCK.EDIT_BLOCK$ ~= ADDR(NIL) THEN
     1580     5148    2                 CALL VDG$OFREE (VD$WINDOW_BLOCK.EDIT_BLOCK$->VD$BLOCK_DESC)
     1581     5149    2                   ALTRET (OFREE_FAILED);
     1582     5150    2              IF VD$WINDOW_BLOCK.EVAL$ ~= ADDR(NIL) THEN
     1583     5151    2                 CALL VDG$OFREE (VD$WINDOW_BLOCK.EVAL$->VD$EVAL)
     1584     5152    2                   ALTRET (OFREE_FAILED);
     1585     5153
     1586     5154    2            CASE (%CLS_WINDOW_SPEC);
     1587     5155    2              IF VD$WINDOW_SPEC.OPERAND.STREAM$ ~= ADDR(NIL) THEN
     1588     5156    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.OPERAND.STREAM$->VD$STREAM)
     1589     5157    2                   ALTRET (OFREE_FAILED);
     1590     5158    2              IF VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$ ~= ADDR(NIL) THEN
     1591     5159    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$->VD$BLOCK_DESC)
     1592     5160    2                   ALTRET (OFREE_FAILED);
     1593     5161    2              IF VD$WINDOW_SPEC.OPERAND.EVAL$ ~= ADDR(NIL) THEN
     1594     5162    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.OPERAND.EVAL$->VD$EVAL)
     1595     5163    2                   ALTRET (OFREE_FAILED);
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:202  
     1596     5164    2              IF VD$WINDOW_SPEC.OPERAND.INTREE$ ~= ADDR(NIL) THEN
     1597     5165    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.OPERAND.INTREE$->VD$IT_BLOCK_EXPR)
     1598     5166    2                   ALTRET (OFREE_FAILED);
     1599     5167    2              IF VD$WINDOW_SPEC.RECORD_SET$ ~= ADDR(NIL) THEN
     1600     5168    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.RECORD_SET$->VD$RECORD_SET)
     1601     5169    2                   ALTRET (OFREE_FAILED);
     1602     5170    2              IF VD$WINDOW_SPEC.EOFMARK$ ~= ADDR(NIL) THEN
     1603     5171    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.EOFMARK$->VD$BUFFER)
     1604     5172    2                   ALTRET (OFREE_FAILED);
     1605     5173    2              IF VD$WINDOW_SPEC.TABS$ ~= ADDR(NIL) THEN
     1606     5174    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.TABS$->VD$TABS)
     1607     5175    2                   ALTRET (OFREE_FAILED);
     1608     5176    2              IF VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$ ~= ADDR(NIL) THEN
     1609     5177    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$ ->
     1610     5178    2                   VD$BUFFER)
     1611     5179    2                   ALTRET (OFREE_FAILED);
     1612     5180
     1613     5181    2            CASE (%CLS_XLATE_LOCATIONS);
     1614     5182                   %CLEARKEY (KEY=VD$XLATE_LOCATIONS.FILE_KEY);
     1615     5192    2              CALL VDG$OCLEAR_LOCATION (VD$XLATE_LOCATIONS.PREFIX)
     1616     5193    2                ALTRET (OCLEAR_LOCATION_FAILED);
     1617     5194
     1618     5195    2              N_ENTRIES = (VD$XLATE_LOCATIONS.OBJECT.SIZE# -
     1619     5196    2                POFFW(ADDR(VD$XLATE_LOCATIONS.XLATES), PTR$)) /
     1620     5197    2                SIZEW(VD$XLATE_LOCATIONS.XLATES);
     1621     5198    2              IF N_ENTRIES ~= VD$XLATE_LOCATIONS.MX_ENTRIES#
     1622     5199    2                OR VD$XLATE_LOCATIONS.N_ENTRIES# > N_ENTRIES THEN
     1623     5200    2                 CALL VDG$ESCREECH (VD$XLATE_LOCATIONS.N_ENTRIES#);
     1624     5201    3              DO I = 0 TO (VD$XLATE_LOCATIONS.N_ENTRIES# - 1);
     1625     5202                      %CLEARKEY (KEY=VD$XLATE_LOCATIONS.XLATES.OLD_KEY_LO, INDX=I);
     1626     5212                      %CLEARKEY (KEY=VD$XLATE_LOCATIONS.XLATES.OLD_KEY_HI, INDX=I);
     1627     5222                      %CLEARKEY (KEY=VD$XLATE_LOCATIONS.XLATES.NEW_KEY, INDX=I);
     1628     5232    3                 END;
     1629     5233
     1630     5234    2            CASE (ELSE);
     1631     5235    2              ; /* No special handling for other objects */
     1632     5236    2            END;
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:203  
     1633     5237
     1634     5238
     1635     5239                /*
     1636     5240                * Finally, deallocate the object
     1637     5241                * Make sure XUM's "chunk-size" word is within reasonable bounds
     1638     5242                */
     1639     5243
     1640     5244    1           NWORDS = OBJECT_HEADER.SIZE#;
     1641     5245    1           IF NWORDS = 0 THEN
     1642     5246    1              RETURN;  /* Object not owned or not dynamic: don't free */
     1643     5247    1           SBIN_WORD$ = PINCRW(ADDR(OBJECT_HEADER), -1);
     1644     5248    1           IF SBIN$WORD <= NWORDS
     1645     5249    2             OR SBIN$WORD > (NWORDS + 3 + %MNNW_DYN_STORAGE) THEN DO;
     1646     5250    2              CALL VDG$ESCREECH (NWORDS, SBIN$WORD);
     1647     5251    2              END;
     1648     5252
     1649     5253                /* Make sure the pointer points to one of our data segments */
     1650     5254    1           SEG_PTR2$ = VD_MCB_SMALL.SEGMENT_BASE$;
     1651     5255    1           IF SEG_PTR.SEGID = SEG_PTR2.SEGID THEN
     1652     5256    1              MCB$ = ADDR(VD_MCB_SMALL);
     1653     5257    2           ELSE DO;
     1654     5258    2              SEG_PTR2$ = VD_MCB_LARGE.SEGMENT_BASE$;
     1655     5259    2              IF SEG_PTR.SEGID = SEG_PTR2.SEGID THEN
     1656     5260    2                 MCB$ = ADDR(VD_MCB_LARGE);
     1657     5261    2              ELSE CALL VDG$ESCREECH;
     1658     5262    2              END;
     1659     5263    1           MCB.SIZE = NWORDS;
     1660     5264    1           MCB.ADDRESS$ = ADDR(OBJECT_HEADER);
     1661     5265    1           CALL X$DEALLOCATE (MCB) ALTRET (DEALLOCATE_FAILED);
     1662     5266    1           RETURN;
     1663     5267
     1664     5268
     1665     5269    1   DEALLOCATE_FAILED:
     1666     5270    1           ERR$HEAD.ERR.CODE# = %E$DEALLOCATE_FAILED;
     1667     5271    1           ERR$HEAD.FLAGLEV# = %FLV_FATAL;
     1668     5272    1           ALTRETURN;
     1669     5273
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:204  
     1670     5274    1   OFREE_FAILED: ;
     1671     5275    1   OFREE_DCB_FAILED: ;
     1672     5276    1   OCLEAR_RANGE_FAILED: ;
     1673     5277    1   OCLEAR_LOCATION_FAILED: ;
     1674     5278    1           ALTRETURN;
     1675     5279
     1676     5280    1   END VDG$OFREE;
     1677     5281        %EOD;

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:205  
--  Include file information  --

   XUM_MACRO_C.:LIBRARY  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$OFREE.

   Procedure VDG$OFREE requires 999 words for executable code.
   Procedure VDG$OFREE requires 14 words of local(AUTO) storage.

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:206  

 Object Unit name= VDG$OFREE                                  File name= VDG$OBJECTS.:VDA5TOU
 UTS= JUL 04 '97 11:21:55.04 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   999   1747  VDG$OFREE
    1  RoData even  none     6      6  VDG$OFREE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  VDG$OFREE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 VDG$ESCREECH
 yes     yes           Std       1 VDG$OCLEAR_RANGE
 yes     yes           Std       1 X$DEALLOCATE
 yes     yes           Std       1 VDG$OCLEAR_LOCATION
 yes     yes           Std       1 VDG$OFREE_DCB
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:207  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 VD_OBJECTS                            VD_MCB_LARGE
     VD_MCB_SMALL                          B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:208  


     1226        1        /*T***********************************************************/
     1227        2        /*T*                                                         */
     1228        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1229        4        /*T*                                                         */
     1230        5        /*T***********************************************************/
     1231        6
     1232        7        /*D* NAME: VDG$OFREE
     1233        8            PARAMETERS:
     1234        9                OBJECT_HEADER - Actual VD$OBJECT_HEADER (or any sub- or
     1235       10                    super-part thereof) in object to free.
     1236       11                    OBJECT_HEADER.SIZE# should contain # words allocated for
     1237       12                    object.  If the "object" doesn't reside in dynamic
     1238       13                    storage (eg, if it's one of initialization's constants
     1239       14                    or in someone's auto storage), then .SIZE# must be 0.
     1240       15            INPUT:
     1241       16                VD_MCB_LARGE - XUM$MCB for large-object heap.
     1242       17                VD_MCB_SMALL - XUM$MCB for small-object heap.
     1243       18                VD_OBJECTS - Info about object classes.
     1244       19            OUTPUT:
     1245       20                None.
     1246       21            DESCRIPTION:
     1247       22                Free any objects pointed-to by this object.
     1248       23                If OBJECT_HEADER is one of a set of specific object classes, pop
     1249       24                it from a predefined stack:
     1250       25                    Object:          Is popped from:
     1251       26                    -----------      ----------------------------
     1252       27                    %CLS_CMD_STREAM  VD_6E.CMD_STREAM$ (points to tail)
     1253       28                    %CLS_PORT        VD_6E.PORT_HEAD$/.PORT_TAIL$
     1254       29                    (%CLS_ERR is not popped 'cause it has no backward pointer,
     1255       30                    'cause VD$ERRs are never freed individually, just all-at-once
     1256       31                    after the error is reported, so they aren't really a stack.)
     1257       32                Calls X$DEALLOCATE to deallocate the object itself.
     1258       33        */
     1259       34
     1260       35        VDG$OFREE: PROC (OBJECT_HEADER) ALTRET;

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:209  
     35  0 000000   000000 700200 xent  VDG$OFREE    TSX0  ! X66_AUTO_1
         0 000001   000016 000001                    ZERO    14,1

     1261       36
     1262       37
     1263       38        %INCLUDE VD_MACROS_M;
     1264     2253        %INCLUDE VD_PERR_C;
     1265     2401        %INCLUDE XUM_MACRO_C;
     1266     2428
     1267     2429
     1268     2430        %VD$OBJECT_HEADER (NAME=OBJECT_HEADER, STCLASS=PARAM);
     1269     2452
     1270     2453
     1271     2454    1   DCL VDG$OFREE_DCB       ENTRY (1) ALTRET;
     1272     2455    1   DCL VDG$OCLEAR_RANGE    ENTRY (1) ALTRET;
     1273     2456    1   DCL VDG$OCLEAR_LOCATION ENTRY (1) ALTRET;
     1274     2457    1   DCL X$DEALLOCATE        ENTRY (1) ALTRET;
     1275     2458    1   DCL VDG$ESCREECH        ENTRY (3);
     1276     2459
     1277     2460
     1278     2461        %VD_6E (STCLASS=SYMREF);
     1279     2497        %VD_OBJECTS (NAME=VD_OBJECTS, STCLASS=SYMREF);
     1280     2537        %XUM$MCB (NAME=VD_MCB_LARGE, STCLASS=SYMREF);
     1281     2541        %XUM$MCB (NAME=VD_MCB_SMALL, STCLASS=SYMREF);
     1282     2545
     1283     2546
     1284     2547    1   DCL MCB$ PTR;
     1285     2548    1   DCL NWORDS SBIN;
     1286     2549    1   DCL N_ENTRIES SBIN;
     1287     2550    1   DCL PTR$ PTR;
     1288     2551    1   DCL 1 SEG_PTR REDEF PTR$,
     1289     2552    1         2 * UBIN(24) UNAL,
     1290     2553    1         2 SEGID BIT(12) UNAL;
     1291     2554    1   DCL SEG_PTR2$ PTR;
     1292     2555    1   DCL 1 SEG_PTR2 REDEF SEG_PTR2$,
     1293     2556    1         2 * UBIN(24) UNAL,
     1294     2557    1         2 SEGID BIT(12) UNAL;
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:210  
     1295     2558    1   DCL PTR2$ PTR;
     1296     2559    1   DCL I SBIN;
     1297     2560    1   DCL SBIN_WORD$ PTR;
     1298     2561
     1299     2562
     1300     2563        %XUM$MCB (NAME=MCB, STCLASS="BASED(MCB$)");
     1301     2567    1   DCL SBIN$WORD SBIN BASED(SBIN_WORD$);
     1302     2568        %VD$ERR (NAME=ERR$HEAD, STCLASS="BASED(VD_6E.ERR_HEAD$)");
     1303     2621        %VD$OBJECT_HEADER;
     1304     2643
     1305     2644        %VD$BLOCK_DESC (STCLASS="BASED(PTR$)");
     1306     2791        %VD$BUFFER (STCLASS="BASED(PTR$)");
     1307     2849        %VD$BUFFER_HEADER (STCLASS="BASED(PTR$)");
     1308     2885        %VD$CMD_STREAM (STCLASS="BASED(PTR$)");
     1309     2924        %VD$DIR_NODE (STCLASS="BASED(PTR$)");
     1310     2962        %VD$ENCODED_NODE (STCLASS="BASED(PTR$)");
     1311     3083        %VD$ERR (STCLASS="BASED(PTR$)");
     1312     3136        %VD$EVAL (STCLASS="BASED(PTR$)");
     1313     3381        %VD$EVAL_PATTERN (STCLASS="BASED(PTR$)");
     1314     3488        %VD$FILE_KEY (STCLASS="BASED(PTR$)");
     1315     3537        %VD$FILE_NODE (STCLASS="BASED(PTR$)");
     1316     3630        %VD$FIT (STCLASS="BASED(PTR$)");
     1317     3666        %VD$IT_ADJUST (STCLASS="BASED(PTR$)");
     1318     3703        %VD$IT_BLOCK_EXPR (STCLASS="BASED(PTR$)");
     1319     3853        %VD$IT_COMMAND (STCLASS="BASED(PTR$)");
     1320     3891        %VD$IT_OPERAND (STCLASS="BASED(PTR$)");
     1321     3957        %VD$IT_OPERATOR (STCLASS="BASED(PTR$)");
     1322     3994        %VD$IT_SELECT (STCLASS="BASED(PTR$)");
     1323     4031        %VD$NAME_SPEC (STCLASS="BASED(PTR$)");
     1324     4079        %VD$PATTERN (STCLASS="BASED(PTR$)");
     1325     4130        %VD$PORT (STCLASS="BASED(PTR$)");
     1326     4228        %VD$RECORD_SET (STCLASS="BASED(PTR$)");
     1327     4306        %VD$STREAM (STCLASS="BASED(PTR$)");
     1328     4412        %VD$STRING_HEADER (STCLASS="BASED(PTR$)");
     1329     4448        %VD$STRUCTURE_SPEC (STCLASS="BASED(PTR$)");
     1330     4485        %VD$TABS (STCLASS="BASED(PTR$)");
     1331     4522        %VD$TEXTC_REMOTE (STCLASS="BASED(PTR$)");
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:211  
     1332     4583        %VD$WINDOW_BLOCK (STCLASS="BASED(PTR$)");
     1333     4620        %VD$WINDOW_SPEC (STCLASS="BASED(PTR$)");
     1334     4686        %VD$XLATE_LOCATIONS (STCLASS="BASED(PTR$)");
     1335     4822
     1336     4823
     1337     4824
     1338     4825    1   OFREE:
     1339     4826    1           PTR$ = ADDR(OBJECT_HEADER);

   4826  0 000002   200003 236100       OFREE        LDQ     @OBJECT_HEADER,,AUTO
         0 000003   200007 756100                    STQ     PTR$,,AUTO

     1340     4827    1           IF PTR$ = ADDR(NIL) THEN

   4827  0 000004   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000005   000007 601000 0                  TNZ     s:4830

     1341     4828    1              RETURN;

   4828  0 000006   000000 702200 xent               TSX2  ! X66_ARET

     1342     4829
     1343     4830    1           IF OBJECT_HEADER.CLASS# >= %CLS_MX

   4830  0 000007   200003 470500                    LDP0    @OBJECT_HEADER,,AUTO
         0 000010   000000 220100                    LDX0    0,,PR0
         0 000011   000143 100003                    CMPX0   99,DU
         0 000012   000017 603000 0                  TRC     s:4832
         0 000013   000000 221100                    LDX1    0,,PR0
         0 000014   000000 021100                    ADLX1   0,,PR0
         0 000015   000000 222011 xsym               LDX2    VD_OBJECTS,X1
         0 000016   000023 605000 0                  TPL     s:4835

     1344     4831    2             OR VD_OBJECTS.SIZE (OBJECT_HEADER.CLASS#) < 0 THEN DO;

     1345     4832    2              CALL VDG$ESCREECH (OBJECT_HEADER);

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:212  
   4832  0 000017   200003 630500                    EPPR0   @OBJECT_HEADER,,AUTO
         0 000020   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000021   000000 701000 xent               TSX1    VDG$ESCREECH
         0 000022   000000 011000                    NOP     0

     1346     4833    2              END;

     1347     4834
     1348     4835    1           IF VD_OBJECTS.STR (OBJECT_HEADER.CLASS#)

   4835  0 000023   200003 470500                    LDP0    @OBJECT_HEADER,,AUTO
         0 000024   000000 220100                    LDX0    0,,PR0
         0 000025   000000 020100                    ADLX0   0,,PR0
         0 000026   000000 236010 xsym               LDQ     VD_OBJECTS,X0
         0 000027   040000 316007                    CANQ    16384,DL
         0 000030   000044 600000 0                  TZE     s:4839
         0 000031   200007 471500                    LDP1    PTR$,,AUTO
         0 000032   100001 236100                    LDQ     1,,PR1
         0 000033   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000034   000044 600000 0                  TZE     s:4839

     1349     4836    1             AND VD$STRING_HEADER.FLINK$ ~= ADDR(NIL) THEN
     1350     4837    1              CALL VDG$OFREE (VD$STRING_HEADER.FLINK$->VD$STRING_HEADER)

   4837  0 000035   100001 473500                    LDP3    1,,PR1
         0 000036   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000037   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000040   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000041   000000 701000 0                  TSX1    s:35
         0 000042   001746 702000 0                  TSX2    OFREE_FAILED
         0 000043   000061 710000 0                  TRA     s:4846

     1351     4838    1                ALTRET (OFREE_FAILED);
     1352     4839    1           ELSE IF VD_OBJECTS.BUF (OBJECT_HEADER.CLASS#)

   4839  0 000044   000000 236010 xsym               LDQ     VD_OBJECTS,X0
         0 000045   400000 316007                    CANQ    -131072,DL
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:213  
         0 000046   000061 600000 0                  TZE     s:4846
         0 000047   200007 471500                    LDP1    PTR$,,AUTO
         0 000050   100001 236100                    LDQ     1,,PR1
         0 000051   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000052   000061 600000 0                  TZE     s:4846

     1353     4840    2                AND VD$BUFFER_HEADER.FLINK$ ~= ADDR(NIL) THEN DO;

     1354     4841    2                 CALL VDG$OFREE (VD$BUFFER_HEADER.FLINK$->VD$BUFFER_HEADER)

   4841  0 000053   100001 473500                    LDP3    1,,PR1
         0 000054   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000055   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000056   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000057   000000 701000 0                  TSX1    s:35
         0 000060   001746 702000 0                  TSX2    OFREE_FAILED

     1355     4842    2                   ALTRET (OFREE_FAILED);
     1356     4843    2                 END;

     1357     4844
     1358     4845                /* Do object-class-specific actions */
     1359     4846    2           DO CASE (OBJECT_HEADER.CLASS#);

   4846  0 000061   200003 470500                    LDP0    @OBJECT_HEADER,,AUTO
         0 000062   000000 220100                    LDX0    0,,PR0
         0 000063   000057 100003                    CMPX0   47,DU
         0 000064   000066 602010 0                  TNC     s:4846+5,X0
         0 000065   001644 710000 0                  TRA     s:5244
         0 000066   001644 710000 0                  TRA     s:5244
         0 000067   000145 710000 0                  TRA     s:4850
         0 000070   000201 710000 0                  TRA     s:4873
         0 000071   001644 710000 0                  TRA     s:5244
         0 000072   001644 710000 0                  TRA     s:5244
         0 000073   000230 710000 0                  TRA     s:4880
         0 000074   001644 710000 0                  TRA     s:5244
         0 000075   001644 710000 0                  TRA     s:5244
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:214  
         0 000076   000257 710000 0                  TRA     s:4892
         0 000077   000304 710000 0                  TRA     s:4907
         0 000100   000345 710000 0                  TRA     s:4917
         0 000101   000360 710000 0                  TRA     s:4923
         0 000102   000406 710000 0                  TRA     s:4933
         0 000103   001644 710000 0                  TRA     s:5244
         0 000104   000416 710000 0                  TRA     s:4938
         0 000105   000431 710000 0                  TRA     s:4944
         0 000106   001644 710000 0                  TRA     s:5244
         0 000107   001644 710000 0                  TRA     s:5244
         0 000110   000524 710000 0                  TRA     s:4981
         0 000111   000551 710000 0                  TRA     s:4991
         0 000112   000624 710000 0                  TRA     s:5012
         0 000113   000657 710000 0                  TRA     s:5024
         0 000114   000704 710000 0                  TRA     s:5033
         0 000115   000743 710000 0                  TRA     s:5045
         0 000116   001644 710000 0                  TRA     s:5244
         0 000117   001644 710000 0                  TRA     s:5244
         0 000120   001644 710000 0                  TRA     s:5244
         0 000121   001644 710000 0                  TRA     s:5244
         0 000122   001644 710000 0                  TRA     s:5244
         0 000123   000770 710000 0                  TRA     s:5053
         0 000124   001644 710000 0                  TRA     s:5244
         0 000125   001054 710000 0                  TRA     s:5069
         0 000126   001644 710000 0                  TRA     s:5244
         0 000127   001644 710000 0                  TRA     s:5244
         0 000130   001644 710000 0                  TRA     s:5244
         0 000131   001644 710000 0                  TRA     s:5244
         0 000132   001644 710000 0                  TRA     s:5244
         0 000133   001644 710000 0                  TRA     s:5244
         0 000134   001175 710000 0                  TRA     s:5107
         0 000135   001244 710000 0                  TRA     s:5132
         0 000136   001644 710000 0                  TRA     s:5244
         0 000137   001302 710000 0                  TRA     s:5142
         0 000140   001644 710000 0                  TRA     s:5244
         0 000141   001644 710000 0                  TRA     s:5244
         0 000142   001315 710000 0                  TRA     s:5147
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:215  
         0 000143   001342 710000 0                  TRA     s:5155
         0 000144   001463 710000 0                  TRA     s:5189

     1360     4847
     1361     4848    2            CASE (%CLS_BLOCK_BUFFER);

     1362     4849                   /* Don't free VD$BLOCK_DESC.OPTIONS.STRUCTURE$ */
     1363     4850    2              PTR2$ = PALIGNW(ADDR(VD$BUFFER.BYTES));

   4850  0 000145   200007 236100                    LDQ     PTR$,,AUTO
         0 000146   000000 036000 1                  ADLQ    0
         0 000147   770000 036007                    ADLQ    -4096,DL
         0 000150   000001 376000 1                  ANQ     1
         0 000151   200011 756100                    STQ     PTR2$,,AUTO

     1364     4851                   %CLEARKEY (KEY="PTR2$->VD$BLOCK_DESC.FILE_KEY");

   4858  0 000152   200011 471500                    LDP1    PTR2$,,AUTO
         0 000153   100001 721100                    LXL1    1,,PR1
         0 000154   000002 101003                    CMPX1   2,DU
         0 000155   000166 601000 0                  TNZ     s:4859+1

   4858  0 000156   100002 473500                    LDP3    2,,PR1
         0 000157   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000160   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000161   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000162   000000 701000 0                  TSX1    s:35
         0 000163   000165 702000 0                  TSX2    s:4859
         0 000164   000166 710000 0                  TRA     s:4859+1

   4859  0 000165   000000 702200 xent               TSX2  ! X66_AALT

   4859  0 000166   200011 470500                    LDP0    PTR2$,,AUTO
         0 000167   000001 450100                    STZ     1,,PR0
         0 000170   000002 450100                    STZ     2,,PR0

     1365     4861    2              CALL VDG$OCLEAR_RANGE (PTR2$->VD$BLOCK_DESC.RANGE)
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:216  

   4861  0 000171   200011 236100                    LDQ     PTR2$,,AUTO
         0 000172   000003 036003                    ADLQ    3,DU
         0 000173   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 000174   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000175   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000176   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         0 000177   001746 702000 0                  TSX2    OFREE_FAILED
         0 000200   001644 710000 0                  TRA     s:5244

     1366     4862    2                ALTRET (OCLEAR_RANGE_FAILED);
     1367     4863
     1368     4864    2            CASE (%CLS_BLOCK_DESC);

     1369     4865                   /* Don't free VD$BLOCK_DESC.OPTIONS.STRUCTURE$ */
     1370     4866                   %CLEARKEY (KEY=VD$BLOCK_DESC.FILE_KEY);

   4873  0 000201   200007 471500                    LDP1    PTR$,,AUTO
         0 000202   100001 721100                    LXL1    1,,PR1
         0 000203   000002 101003                    CMPX1   2,DU
         0 000204   000215 601000 0                  TNZ     s:4874+1

   4873  0 000205   100002 473500                    LDP3    2,,PR1
         0 000206   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000207   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000210   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000211   000000 701000 0                  TSX1    s:35
         0 000212   000214 702000 0                  TSX2    s:4874
         0 000213   000215 710000 0                  TRA     s:4874+1

   4874  0 000214   000000 702200 xent               TSX2  ! X66_AALT

   4874  0 000215   200007 470500                    LDP0    PTR$,,AUTO
         0 000216   000001 450100                    STZ     1,,PR0
         0 000217   000002 450100                    STZ     2,,PR0

     1371     4876    2              CALL VDG$OCLEAR_RANGE (VD$BLOCK_DESC.RANGE)
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:217  

   4876  0 000220   200007 236100                    LDQ     PTR$,,AUTO
         0 000221   000003 036003                    ADLQ    3,DU
         0 000222   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 000223   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000224   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000225   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         0 000226   001746 702000 0                  TSX2    OFREE_FAILED
         0 000227   001644 710000 0                  TRA     s:5244

     1372     4877    2                ALTRET (OCLEAR_RANGE_FAILED);
     1373     4878
     1374     4879    2            CASE (%CLS_CMD_STREAM);

     1375     4880    2              VD_6E.CMD_STREAM$ = VD$CMD_STREAM.BLINK$;

   4880  0 000230   200007 471500                    LDP1    PTR$,,AUTO
         0 000231   100001 236100                    LDQ     1,,PR1
         0 000232   000026 756000 xsym               STQ     VD_6E+22

     1376     4881                   /* Don't free VD$CMD_STREAM.BLINK$ */
     1377     4882    2              IF VD$CMD_STREAM.RECORD$ ~= ADDR(NIL) THEN

   4882  0 000233   100025 236100                    LDQ     21,,PR1
         0 000234   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000235   000244 600000 0                  TZE     s:4885

     1378     4883    2                 CALL VDG$OFREE (VD$CMD_STREAM.RECORD$->VD$BUFFER)

   4883  0 000236   100025 473500                    LDP3    21,,PR1
         0 000237   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000240   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000241   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000242   000000 701000 0                  TSX1    s:35
         0 000243   001746 702000 0                  TSX2    OFREE_FAILED

     1379     4884    2                   ALTRET (OFREE_FAILED);
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:218  
     1380     4885    2              IF VD$CMD_STREAM.INTREE$ ~= ADDR(NIL) THEN

   4885  0 000244   200007 470500                    LDP0    PTR$,,AUTO
         0 000245   000026 236100                    LDQ     22,,PR0
         0 000246   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000247   001644 600000 0                  TZE     s:5244

     1381     4886    2                 CALL VDG$OFREE (VD$CMD_STREAM.INTREE$->VD$IT_COMMAND)

   4886  0 000250   000026 471500                    LDP1    22,,PR0
         0 000251   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000252   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000253   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000254   000000 701000 0                  TSX1    s:35
         0 000255   001746 702000 0                  TSX2    OFREE_FAILED
         0 000256   001644 710000 0                  TRA     s:5244

     1382     4887    2                   ALTRET (OFREE_FAILED);
     1383     4888
     1384     4889    2            CASE (%CLS_DIR_NODE);

     1385     4890                   /* Don't free VD$DIR_NODE.BLINK$ */
     1386     4891                   /* Don't free VD$DIR_NODE.STRUCTURE$ */
     1387     4892    2              IF VD$DIR_NODE.FLINK$ ~= ADDR(NIL) THEN

   4892  0 000257   200007 471500                    LDP1    PTR$,,AUTO
         0 000260   100002 236100                    LDQ     2,,PR1
         0 000261   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000262   000271 600000 0                  TZE     s:4895

     1388     4893    2                 CALL VDG$OFREE (VD$DIR_NODE.FLINK$->VD$DIR_NODE)

   4893  0 000263   100002 473500                    LDP3    2,,PR1
         0 000264   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000265   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000266   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000267   000000 701000 0                  TSX1    s:35
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:219  
         0 000270   001746 702000 0                  TSX2    OFREE_FAILED

     1389     4894    2                   ALTRET (OFREE_FAILED);
     1390     4895    2              IF VD$DIR_NODE.HEAD$ ~= ADDR(NIL) THEN

   4895  0 000271   200007 470500                    LDP0    PTR$,,AUTO
         0 000272   000015 236100                    LDQ     13,,PR0
         0 000273   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000274   001644 600000 0                  TZE     s:5244

     1391     4896    2                 CALL VDG$OFREE (VD$DIR_NODE.HEAD$->VD$FILE_NODE)

   4896  0 000275   000015 471500                    LDP1    13,,PR0
         0 000276   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000277   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000300   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000301   000000 701000 0                  TSX1    s:35
         0 000302   001746 702000 0                  TSX2    OFREE_FAILED
         0 000303   001644 710000 0                  TRA     s:5244

     1392     4897    2                   ALTRET (OFREE_FAILED);
     1393     4898
     1394     4899    2            CASE (%CLS_ENCODED_NODE);

     1395     4900                   %CLEARKEY (KEY=VD$ENCODED_NODE.DESC.FILE_KEY);

   4907  0 000304   200007 471500                    LDP1    PTR$,,AUTO
         0 000305   100012 721100                    LXL1    10,,PR1
         0 000306   000002 101003                    CMPX1   2,DU
         0 000307   000320 601000 0                  TNZ     s:4908+1

   4907  0 000310   100013 473500                    LDP3    11,,PR1
         0 000311   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000312   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000313   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000314   000000 701000 0                  TSX1    s:35
         0 000315   000317 702000 0                  TSX2    s:4908
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:220  
         0 000316   000320 710000 0                  TRA     s:4908+1

   4908  0 000317   000000 702200 xent               TSX2  ! X66_AALT

   4908  0 000320   200007 470500                    LDP0    PTR$,,AUTO
         0 000321   000012 450100                    STZ     10,,PR0
         0 000322   000013 450100                    STZ     11,,PR0

     1396     4910    2              CALL VDG$OCLEAR_LOCATION (VD$ENCODED_NODE.DESC.LOCATION)

   4910  0 000323   200007 236100                    LDQ     PTR$,,AUTO
         0 000324   000014 036003                    ADLQ    12,DU
         0 000325   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 000326   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000327   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000330   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 000331   001746 702000 0                  TSX2    OFREE_FAILED

     1397     4911    2                ALTRET (OCLEAR_LOCATION_FAILED);
     1398     4912    2              IF VD$ENCODED_NODE.DESC.DATA$ ~= ADDR(NIL) THEN

   4912  0 000332   200007 470500                    LDP0    PTR$,,AUTO
         0 000333   000030 236100                    LDQ     24,,PR0
         0 000334   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000335   001644 600000 0                  TZE     s:5244

     1399     4913    2                 CALL VDG$OFREE (VD$ENCODED_NODE.DESC.DATA$->VD$BUFFER)

   4913  0 000336   000030 471500                    LDP1    24,,PR0
         0 000337   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000340   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000341   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000342   000000 701000 0                  TSX1    s:35
         0 000343   001746 702000 0                  TSX2    OFREE_FAILED
         0 000344   001644 710000 0                  TRA     s:5244

     1400     4914    2                   ALTRET (OFREE_FAILED);
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:221  
     1401     4915
     1402     4916    2            CASE (%CLS_ERR);

     1403     4917    2              IF VD$ERR.FLINK$ ~= ADDR(NIL) THEN

   4917  0 000345   200007 471500                    LDP1    PTR$,,AUTO
         0 000346   100001 236100                    LDQ     1,,PR1
         0 000347   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000350   001644 600000 0                  TZE     s:5244

     1404     4918    2                 CALL VDG$OFREE (VD$ERR.FLINK$->VD$ERR)

   4918  0 000351   100001 473500                    LDP3    1,,PR1
         0 000352   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000353   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000354   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000355   000000 701000 0                  TSX1    s:35
         0 000356   001746 702000 0                  TSX2    OFREE_FAILED
         0 000357   001644 710000 0                  TRA     s:5244

     1405     4919    2                   ALTRET (OFREE_FAILED);
     1406     4920
     1407     4921    2            CASE (%CLS_EVAL);

     1408     4922                   /* Don't free VD$EVAL.BLINK$ */
     1409     4923    2              CALL VDG$OCLEAR_RANGE (VD$EVAL.ENCLOSING)

   4923  0 000360   200007 236100                    LDQ     PTR$,,AUTO
         0 000361   000002 036003                    ADLQ    2,DU
         0 000362   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 000363   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000364   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000365   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         0 000366   001746 702000 0                  TSX2    OFREE_FAILED

     1410     4924    2                ALTRET (OCLEAR_RANGE_FAILED);
     1411     4925    2              CALL VDG$OCLEAR_RANGE (VD$EVAL.RANGE)
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:222  

   4925  0 000367   200007 236100                    LDQ     PTR$,,AUTO
         0 000370   000024 036003                    ADLQ    20,DU
         0 000371   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 000372   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000373   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000374   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         0 000375   001746 702000 0                  TSX2    OFREE_FAILED

     1412     4926    2                ALTRET (OCLEAR_RANGE_FAILED);
     1413     4927    2              CALL VDG$OCLEAR_RANGE (VD$EVAL.LAST_FOUND_RANGE)

   4927  0 000376   200007 236100                    LDQ     PTR$,,AUTO
         0 000377   000046 036003                    ADLQ    38,DU
         0 000400   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 000401   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000402   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000403   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         0 000404   001746 702000 0                  TSX2    OFREE_FAILED
         0 000405   001644 710000 0                  TRA     s:5244

     1414     4928    2                ALTRET (OCLEAR_RANGE_FAILED);
     1415     4929                   /* Don't free VD$EVAL.NODE$ */
     1416     4930
     1417     4931    2            CASE (%CLS_EVAL_PATTERN);

     1418     4932                      /* Don't free VD$EVAL_PATTERN.BLINK$ */
     1419     4933    2              CALL VDG$OCLEAR_RANGE (VD$EVAL_PATTERN.RANGE)

   4933  0 000406   200007 236100                    LDQ     PTR$,,AUTO
         0 000407   000002 036003                    ADLQ    2,DU
         0 000410   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 000411   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000412   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000413   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         0 000414   001746 702000 0                  TSX2    OFREE_FAILED
         0 000415   001644 710000 0                  TRA     s:5244
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:223  

     1420     4934    2                ALTRET (OCLEAR_RANGE_FAILED);
     1421     4935                      /* Don't free VD$EVAL_PATTERN.PATTERN$ */
     1422     4936
     1423     4937    2            CASE (%CLS_FILE_KEY);

     1424     4938    2              IF VD$FILE_KEY.FLINK$ ~= ADDR(NIL) THEN

   4938  0 000416   200007 471500                    LDP1    PTR$,,AUTO
         0 000417   100001 236100                    LDQ     1,,PR1
         0 000420   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000421   001644 600000 0                  TZE     s:5244

     1425     4939    2                 CALL VDG$OFREE (VD$FILE_KEY.FLINK$->VD$STRING_HEADER)

   4939  0 000422   100001 473500                    LDP3    1,,PR1
         0 000423   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000424   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000425   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000426   000000 701000 0                  TSX1    s:35
         0 000427   001746 702000 0                  TSX2    OFREE_FAILED
         0 000430   001644 710000 0                  TRA     s:5244

     1426     4940    2                   ALTRET (OFREE_FAILED);
     1427     4941
     1428     4942    2            CASE (%CLS_FILE_NODE);

     1429     4943                   /* Don't free VD$FILE_NODE.BLINK$ */
     1430     4944    2              IF VD$FILE_NODE.FLINK$ ~= ADDR(NIL) THEN

   4944  0 000431   200007 471500                    LDP1    PTR$,,AUTO
         0 000432   100002 236100                    LDQ     2,,PR1
         0 000433   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000434   000443 600000 0                  TZE     s:4954

     1431     4945    2                 CALL VDG$OFREE (VD$FILE_NODE.FLINK$->VD$FILE_NODE)

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:224  
   4945  0 000435   100002 473500                    LDP3    2,,PR1
         0 000436   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000437   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000440   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000441   000000 701000 0                  TSX1    s:35
         0 000442   001746 702000 0                  TSX2    OFREE_FAILED

     1432     4946    2                   ALTRET (OFREE_FAILED);
     1433     4947                   %CLEARKEY (KEY=VD$FILE_NODE.DESC.KEY);

   4954  0 000443   200007 470500                    LDP0    PTR$,,AUTO
         0 000444   000004 720100                    LXL0    4,,PR0
         0 000445   000002 100003                    CMPX0   2,DU
         0 000446   000457 601000 0                  TNZ     s:4955+1

   4954  0 000447   000005 471500                    LDP1    5,,PR0
         0 000450   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000451   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000452   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000453   000000 701000 0                  TSX1    s:35
         0 000454   000456 702000 0                  TSX2    s:4955
         0 000455   000457 710000 0                  TRA     s:4955+1

   4955  0 000456   000000 702200 xent               TSX2  ! X66_AALT

   4955  0 000457   200007 470500                    LDP0    PTR$,,AUTO
         0 000460   000004 450100                    STZ     4,,PR0
         0 000461   000005 450100                    STZ     5,,PR0

     1434     4957                   %CLEARSPEC (SPEC=VD$FILE_NODE.DESC.SPEC);

   4964  0 000462   000006 720100                    LXL0    6,,PR0
         0 000463   000002 100003                    CMPX0   2,DU
         0 000464   000475 601000 0                  TNZ     s:4965+1

   4964  0 000465   000007 471500                    LDP1    7,,PR0
         0 000466   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:225  
         0 000467   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000470   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000471   000000 701000 0                  TSX1    s:35
         0 000472   000474 702000 0                  TSX2    s:4965
         0 000473   000475 710000 0                  TRA     s:4965+1

   4965  0 000474   000000 702200 xent               TSX2  ! X66_AALT

   4965  0 000475   200007 470500                    LDP0    PTR$,,AUTO
         0 000476   000006 450100                    STZ     6,,PR0
         0 000477   000007 450100                    STZ     7,,PR0

     1435     4967    2              IF VD$FILE_NODE.DESC.DATA$ ~= ADDR(NIL) THEN

   4967  0 000500   000010 236100                    LDQ     8,,PR0
         0 000501   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000502   000511 600000 0                  TZE     s:4970

     1436     4968    2                 CALL VDG$OFREE (VD$FILE_NODE.DESC.DATA$->VD$BUFFER)

   4968  0 000503   000010 471500                    LDP1    8,,PR0
         0 000504   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000505   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000506   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000507   000000 701000 0                  TSX1    s:35
         0 000510   001746 702000 0                  TSX2    OFREE_FAILED

     1437     4969    2                   ALTRET (OFREE_FAILED);
     1438     4970    2              IF VD$FILE_NODE.HEAD$ ~= ADDR(NIL) THEN

   4970  0 000511   200007 470500                    LDP0    PTR$,,AUTO
         0 000512   000012 236100                    LDQ     10,,PR0
         0 000513   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000514   001644 600000 0                  TZE     s:5244

     1439     4971    2                 CALL VDG$OFREE (VD$FILE_NODE.HEAD$->VD$FILE_NODE)

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:226  
   4971  0 000515   000012 471500                    LDP1    10,,PR0
         0 000516   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000517   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000520   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000521   000000 701000 0                  TSX1    s:35
         0 000522   001746 702000 0                  TSX2    OFREE_FAILED
         0 000523   001644 710000 0                  TRA     s:5244

     1440     4972    2                   ALTRET (OFREE_FAILED);
     1441     4973
     1442     4974    2            CASE (%CLS_FIT);

     1443     4975                   /* Don't free VD$FIT.CODE2$ */
     1444     4976                   /* Don't free VD$FIT.CODE3$ */
     1445     4977    2              ;
     1446     4978
     1447     4979    2            CASE (%CLS_IT_ADJUST);

     1448     4980                   /* Don't free VD$IT_ADJUST.PARENT$ */
     1449     4981    2              IF VD$IT_ADJUST.FLINK$ ~= ADDR(NIL) THEN

   4981  0 000524   200007 471500                    LDP1    PTR$,,AUTO
         0 000525   100002 236100                    LDQ     2,,PR1
         0 000526   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000527   000536 600000 0                  TZE     s:4984

     1450     4982    2                 CALL VDG$OFREE (VD$IT_ADJUST.FLINK$->VD$IT_ADJUST)

   4982  0 000530   100002 473500                    LDP3    2,,PR1
         0 000531   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000532   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000533   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000534   000000 701000 0                  TSX1    s:35
         0 000535   001746 702000 0                  TSX2    OFREE_FAILED

     1451     4983    2                   ALTRET (OFREE_FAILED);
     1452     4984    2              IF VD$IT_ADJUST.MOVEMENTS$ ~= ADDR(NIL) THEN
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:227  

   4984  0 000536   200007 470500                    LDP0    PTR$,,AUTO
         0 000537   000004 236100                    LDQ     4,,PR0
         0 000540   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000541   001644 600000 0                  TZE     s:5244

     1453     4985    2                 CALL VDG$OFREE (VD$IT_ADJUST.MOVEMENTS$->VD$IT_OPERAND)

   4985  0 000542   000004 471500                    LDP1    4,,PR0
         0 000543   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000544   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000545   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000546   000000 701000 0                  TSX1    s:35
         0 000547   001746 702000 0                  TSX2    OFREE_FAILED
         0 000550   001644 710000 0                  TRA     s:5244

     1454     4986    2                   ALTRET (OFREE_FAILED);
     1455     4987
     1456     4988    2            CASE (%CLS_IT_BLOCK_EXPR);

     1457     4989                   /* Don't free VD$IT_BLOCK_EXPR.PARENT$ */
     1458     4990                   /* Don't free VD$IT_BLOCK_EXPR.OPTIONS.STRUCTURE$ */
     1459     4991    2              IF VD$IT_BLOCK_EXPR.FLINK$ ~= ADDR(NIL) THEN

   4991  0 000551   200007 471500                    LDP1    PTR$,,AUTO
         0 000552   100002 236100                    LDQ     2,,PR1
         0 000553   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000554   000563 600000 0                  TZE     s:5001

     1460     4992    2                 CALL VDG$OFREE (VD$IT_BLOCK_EXPR.FLINK$->VD$IT_BLOCK_EXPR)

   4992  0 000555   100002 473500                    LDP3    2,,PR1
         0 000556   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000557   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000560   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000561   000000 701000 0                  TSX1    s:35
         0 000562   001746 702000 0                  TSX2    OFREE_FAILED
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:228  

     1461     4993    2                   ALTRET (OFREE_FAILED);
     1462     4994                   %CLEARKEY (KEY=VD$IT_BLOCK_EXPR.DOMAINN.FILE_KEY);

   5001  0 000563   200007 470500                    LDP0    PTR$,,AUTO
         0 000564   000004 720100                    LXL0    4,,PR0
         0 000565   000002 100003                    CMPX0   2,DU
         0 000566   000577 601000 0                  TNZ     s:5002+1

   5001  0 000567   000005 471500                    LDP1    5,,PR0
         0 000570   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000571   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000572   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000573   000000 701000 0                  TSX1    s:35
         0 000574   000576 702000 0                  TSX2    s:5002
         0 000575   000577 710000 0                  TRA     s:5002+1

   5002  0 000576   000000 702200 xent               TSX2  ! X66_AALT

   5002  0 000577   200007 470500                    LDP0    PTR$,,AUTO
         0 000600   000004 450100                    STZ     4,,PR0
         0 000601   000005 450100                    STZ     5,,PR0

     1463     5004    2              CALL VDG$OCLEAR_RANGE (VD$IT_BLOCK_EXPR.DOMAINN.RANGE)

   5004  0 000602   200007 236100                    LDQ     PTR$,,AUTO
         0 000603   000006 036003                    ADLQ    6,DU
         0 000604   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 000605   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000606   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000607   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         0 000610   001746 702000 0                  TSX2    OFREE_FAILED

     1464     5005    2                ALTRET (OCLEAR_RANGE_FAILED);
     1465     5006    2              IF VD$IT_BLOCK_EXPR.SELECTS$ ~= ADDR(NIL) THEN

   5006  0 000611   200007 470500                    LDP0    PTR$,,AUTO
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:229  
         0 000612   000035 236100                    LDQ     29,,PR0
         0 000613   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000614   001644 600000 0                  TZE     s:5244

     1466     5007    2                 CALL VDG$OFREE (VD$IT_BLOCK_EXPR.SELECTS$->VD$IT_SELECT)

   5007  0 000615   000035 471500                    LDP1    29,,PR0
         0 000616   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000617   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000620   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000621   000000 701000 0                  TSX1    s:35
         0 000622   001746 702000 0                  TSX2    OFREE_FAILED
         0 000623   001644 710000 0                  TRA     s:5244

     1467     5008    2                   ALTRET (OFREE_FAILED);
     1468     5009
     1469     5010    2            CASE (%CLS_IT_COMMAND);

     1470     5011                   /* Don't free VD$IT_COMMAND.PARENT$ */
     1471     5012    2              IF VD$IT_COMMAND.FLINK$ ~= ADDR(NIL) THEN

   5012  0 000624   200007 471500                    LDP1    PTR$,,AUTO
         0 000625   100002 236100                    LDQ     2,,PR1
         0 000626   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000627   000636 600000 0                  TZE     s:5016

     1472     5013    2                 CALL VDG$OFREE (VD$IT_COMMAND.FLINK$->VD$IT_COMMAND)

   5013  0 000630   100002 473500                    LDP3    2,,PR1
         0 000631   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000632   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000633   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000634   000000 701000 0                  TSX1    s:35
         0 000635   001746 702000 0                  TSX2    OFREE_FAILED

     1473     5014    2                   ALTRET (OFREE_FAILED);
     1474     5015                      /* Don't free .PT_BLOCK_EXPR$->:  VD$IT_COMMAND doesn't own it */
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:230  
     1475     5016    3              DO I = 0 TO %(MX_COMMAND_PARAMS-1);

   5016  0 000636   200012 450100                    STZ     I,,AUTO

     1476     5017    3                 IF VD$IT_COMMAND.PARAM$ (I) ~= ADDR(NIL) THEN

   5017  0 000637   200007 470500                    LDP0    PTR$,,AUTO
         0 000640   200012 720100                    LXL0    I,,AUTO
         0 000641   000006 236110                    LDQ     6,X0,PR0
         0 000642   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000643   000652 600000 0                  TZE     s:5020

     1477     5018    3                    CALL VDG$OFREE (VD$IT_COMMAND.PARAM$(I)->VD$OBJECT_HEADER)

   5018  0 000644   000006 471510                    LDP1    6,X0,PR0
         0 000645   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000646   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000647   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000650   000000 701000 0                  TSX1    s:35
         0 000651   001746 702000 0                  TSX2    OFREE_FAILED

     1478     5019    3                      ALTRET (OFREE_FAILED);
     1479     5020    3                 END;

   5020  0 000652   200012 054100                    AOS     I,,AUTO
         0 000653   200012 235100                    LDA     I,,AUTO
         0 000654   000010 115007                    CMPA    8,DL
         0 000655   000637 604400 0                  TMOZ    s:5017
         0 000656   001644 710000 0                  TRA     s:5244

     1480     5021
     1481     5022    2            CASE (%CLS_IT_OPERAND);

     1482     5023                   /* Don't free VD$IT_OPERAND.PARENT$ */
     1483     5024    2              IF VD$IT_OPERAND.FLINK$ ~= ADDR(NIL) THEN

   5024  0 000657   200007 471500                    LDP1    PTR$,,AUTO
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:231  
         0 000660   100002 236100                    LDQ     2,,PR1
         0 000661   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000662   000671 600000 0                  TZE     s:5027

     1484     5025    2                 CALL VDG$OFREE (VD$IT_OPERAND.FLINK$->VD$IT_OPERAND)

   5025  0 000663   100002 473500                    LDP3    2,,PR1
         0 000664   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000665   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000666   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000667   000000 701000 0                  TSX1    s:35
         0 000670   001746 702000 0                  TSX2    OFREE_FAILED

     1485     5026    2                   ALTRET (OFREE_FAILED);
     1486     5027    2              IF VD$IT_OPERAND.PARAM$ ~= ADDR(NIL) THEN

   5027  0 000671   200007 470500                    LDP0    PTR$,,AUTO
         0 000672   000010 236100                    LDQ     8,,PR0
         0 000673   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000674   001644 600000 0                  TZE     s:5244

     1487     5028    2                 CALL VDG$OFREE (VD$IT_OPERAND.PARAM$->VD$OBJECT_HEADER)

   5028  0 000675   000010 471500                    LDP1    8,,PR0
         0 000676   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000677   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000700   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000701   000000 701000 0                  TSX1    s:35
         0 000702   001746 702000 0                  TSX2    OFREE_FAILED
         0 000703   001644 710000 0                  TRA     s:5244

     1488     5029    2                   ALTRET (OFREE_FAILED);
     1489     5030
     1490     5031    2            CASE (%CLS_IT_OPERATOR);

     1491     5032                   /* Don't free VD$IT_OPERATOR.PARENT$ */
     1492     5033    2              IF VD$IT_OPERATOR.FLINK$ ~= ADDR(NIL) THEN
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:232  

   5033  0 000704   200007 471500                    LDP1    PTR$,,AUTO
         0 000705   100002 236100                    LDQ     2,,PR1
         0 000706   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000707   000716 600000 0                  TZE     s:5036

     1493     5034    2                 CALL VDG$OFREE (VD$IT_OPERATOR.FLINK$->VD$IT_OPERATOR)

   5034  0 000710   100002 473500                    LDP3    2,,PR1
         0 000711   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000712   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000713   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000714   000000 701000 0                  TSX1    s:35
         0 000715   001746 702000 0                  TSX2    OFREE_FAILED

     1494     5035    2                   ALTRET (OFREE_FAILED);
     1495     5036    2              IF VD$IT_OPERATOR.OPERAND$ ~= ADDR(NIL) THEN

   5036  0 000716   200007 470500                    LDP0    PTR$,,AUTO
         0 000717   000004 236100                    LDQ     4,,PR0
         0 000720   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000721   000730 600000 0                  TZE     s:5039

     1496     5037    2                 CALL VDG$OFREE (VD$IT_OPERATOR.OPERAND$->VD$IT_OPERAND)

   5037  0 000722   000004 471500                    LDP1    4,,PR0
         0 000723   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000724   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000725   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000726   000000 701000 0                  TSX1    s:35
         0 000727   001746 702000 0                  TSX2    OFREE_FAILED

     1497     5038    2                   ALTRET (OFREE_FAILED);
     1498     5039    2              IF VD$IT_OPERATOR.R_OPERAND$ ~= ADDR(NIL) THEN

   5039  0 000730   200007 470500                    LDP0    PTR$,,AUTO
         0 000731   000005 236100                    LDQ     5,,PR0
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:233  
         0 000732   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000733   001644 600000 0                  TZE     s:5244

     1499     5040    2                 CALL VDG$OFREE (VD$IT_OPERATOR.R_OPERAND$->VD$IT_OPERAND)

   5040  0 000734   000005 471500                    LDP1    5,,PR0
         0 000735   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000736   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000737   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000740   000000 701000 0                  TSX1    s:35
         0 000741   001746 702000 0                  TSX2    OFREE_FAILED
         0 000742   001644 710000 0                  TRA     s:5244

     1500     5041    2                   ALTRET (OFREE_FAILED);
     1501     5042
     1502     5043    2            CASE (%CLS_IT_SELECT);

     1503     5044                   /* Don't free VD$IT_SELECT.PARENT$ */
     1504     5045    2              IF VD$IT_SELECT.FLINK$ ~= ADDR(NIL) THEN

   5045  0 000743   200007 471500                    LDP1    PTR$,,AUTO
         0 000744   100002 236100                    LDQ     2,,PR1
         0 000745   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000746   000755 600000 0                  TZE     s:5048

     1505     5046    2                 CALL VDG$OFREE (VD$IT_SELECT.FLINK$->VD$IT_SELECT)

   5046  0 000747   100002 473500                    LDP3    2,,PR1
         0 000750   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 000751   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000752   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000753   000000 701000 0                  TSX1    s:35
         0 000754   001746 702000 0                  TSX2    OFREE_FAILED

     1506     5047    2                   ALTRET (OFREE_FAILED);
     1507     5048    2              IF VD$IT_SELECT.ADJUSTS$ ~= ADDR(NIL) THEN

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:234  
   5048  0 000755   200007 470500                    LDP0    PTR$,,AUTO
         0 000756   000004 236100                    LDQ     4,,PR0
         0 000757   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000760   001644 600000 0                  TZE     s:5244

     1508     5049    2                 CALL VDG$OFREE (VD$IT_SELECT.ADJUSTS$->VD$IT_ADJUST)

   5049  0 000761   000004 471500                    LDP1    4,,PR0
         0 000762   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 000763   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 000764   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000765   000000 701000 0                  TSX1    s:35
         0 000766   001746 702000 0                  TSX2    OFREE_FAILED
         0 000767   001644 710000 0                  TRA     s:5244

     1509     5050    2                   ALTRET (OFREE_FAILED);
     1510     5051
     1511     5052    2            CASE (%CLS_PATTERN);

     1512     5053    2              N_ENTRIES = (VD$PATTERN.OBJECT.SIZE# -

   5053  0 000770   200007 236100                    LDQ     PTR$,,AUTO
         0 000771   000003 036003                    ADLQ    3,DU
         0 000772   000022 772000                    QRL     18
         0 000773   200007 235100                    LDA     PTR$,,AUTO
         0 000774   000022 771000                    ARL     18
         0 000775   200014 755100                    STA     SBIN_WORD$+1,,AUTO
         0 000776   200014 136100                    SBLQ    SBIN_WORD$+1,,AUTO
         0 000777   200015 756100                    STQ     SBIN_WORD$+2,,AUTO
         0 001000   200007 471500                    LDP1    PTR$,,AUTO
         0 001001   100000 236100                    LDQ     0,,PR1
         0 001002   000022 736000                    QLS     18
         0 001003   000022 732000                    QRS     18
         0 001004   200015 136100                    SBLQ    SBIN_WORD$+2,,AUTO
         0 001005   000004 506007                    DIV     4,DL
         0 001006   200006 756100                    STQ     N_ENTRIES,,AUTO

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:235  
     1513     5054    2                POFFW(ADDR(VD$PATTERN.ENTRIES), PTR$)) /
     1514     5055    2                SIZEW(VD$PATTERN.ENTRIES);
     1515     5056    2              IF N_ENTRIES ~= VD$PATTERN.MX_ENTRIES#

   5056  0 001007   100002 236100                    LDQ     2,,PR1
         0 001010   000022 736000                    QLS     18
         0 001011   000022 732000                    QRS     18
         0 001012   200006 116100                    CMPQ    N_ENTRIES,,AUTO
         0 001013   001020 601000 0                  TNZ     s:5058
         0 001014   100002 236100                    LDQ     2,,PR1
         0 001015   000022 732000                    QRS     18
         0 001016   200006 116100                    CMPQ    N_ENTRIES,,AUTO
         0 001017   001027 604400 0                  TMOZ    s:5059

     1516     5057    2                OR VD$PATTERN.N_ENTRIES# > N_ENTRIES THEN
     1517     5058    2                 CALL VDG$ESCREECH (VD$PATTERN.N_ENTRIES#);

   5058  0 001020   200007 236100                    LDQ     PTR$,,AUTO
         0 001021   000002 036003                    ADLQ    2,DU
         0 001022   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 001023   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001024   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001025   000000 701000 xent               TSX1    VDG$ESCREECH
         0 001026   000000 011000                    NOP     0

     1518     5059    3              DO I = 0 TO (VD$PATTERN.N_ENTRIES# - 1);

   5059  0 001027   200012 450100                    STZ     I,,AUTO
         0 001030   001046 710000 0                  TRA     s:5065+1

     1519     5060    4                 IF VD$PATTERN.ENTRIES.MATCH$ (I) ~= ADDR(NIL) THEN DO;

   5060  0 001031   200012 235100                    LDA     I,,AUTO
         0 001032   000002 735000                    ALS     2
         0 001033   200007 470500                    LDP0    PTR$,,AUTO
         0 001034   000006 236105                    LDQ     6,AL,PR0
         0 001035   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:236  
         0 001036   001045 600000 0                  TZE     s:5065

     1520     5061    4                    CALL VDG$OFREE (VD$PATTERN.ENTRIES.MATCH$ (I) ->

   5061  0 001037   000006 471505                    LDP1    6,AL,PR0
         0 001040   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001041   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001042   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001043   000000 701000 0                  TSX1    s:35
         0 001044   001746 702000 0                  TSX2    OFREE_FAILED

     1521     5062    4                      VD$OBJECT_HEADER)
     1522     5063    4                      ALTRET (OFREE_FAILED);
     1523     5064    4                    END;

     1524     5065    3                 END;

   5065  0 001045   200012 054100                    AOS     I,,AUTO
         0 001046   200007 470500                    LDP0    PTR$,,AUTO
         0 001047   000002 236100                    LDQ     2,,PR0
         0 001050   000022 732000                    QRS     18
         0 001051   200012 116100                    CMPQ    I,,AUTO
         0 001052   001031 605400 0                  TPNZ    s:5060
         0 001053   001644 710000 0                  TRA     s:5244

     1525     5066
     1526     5067    2            CASE (%CLS_PORT);

     1527     5068                   /* Delink VD$PORT from doubly-linked chain */
     1528     5069    2              IF VD$PORT.BLINK$ = ADDR(NIL) THEN

   5069  0 001054   200007 471500                    LDP1    PTR$,,AUTO
         0 001055   100001 236100                    LDQ     1,,PR1
         0 001056   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001057   001063 601000 0                  TNZ     s:5072

     1529     5070    2                 VD_6E.PORT_HEAD$ = VD$PORT.FLINK$;
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:237  

   5070  0 001060   100002 236100                    LDQ     2,,PR1
         0 001061   000033 756000 xsym               STQ     VD_6E+27
         0 001062   001066 710000 0                  TRA     s:5073

     1530     5071    2              ELSE
     1531     5072    2                 VD$PORT.BLINK$->VD$PORT.FLINK$ = VD$PORT.FLINK$;

   5072  0 001063   100001 473500                    LDP3    1,,PR1
         0 001064   100002 236100                    LDQ     2,,PR1
         0 001065   300002 756100                    STQ     2,,PR3

     1532     5073    2              IF VD$PORT.FLINK$ = ADDR(NIL) THEN

   5073  0 001066   100002 236100                    LDQ     2,,PR1
         0 001067   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001070   001074 601000 0                  TNZ     s:5076

     1533     5074    2                 VD_6E.PORT_TAIL$ = VD$PORT.BLINK$;

   5074  0 001071   100001 236100                    LDQ     1,,PR1
         0 001072   000034 756000 xsym               STQ     VD_6E+28
         0 001073   001077 710000 0                  TRA     s:5081

     1534     5075    2              ELSE
     1535     5076    2                 VD$PORT.FLINK$->VD$PORT.BLINK$ = VD$PORT.BLINK$;

   5076  0 001074   100002 473500                    LDP3    2,,PR1
         0 001075   100001 236100                    LDQ     1,,PR1
         0 001076   300001 756100                    STQ     1,,PR3

     1536     5077                   /* Don't free VD$PORT.BLINK$ */
     1537     5078                   /* Don't free VD$PORT.FLINK$ */
     1538     5079                   /* Don't free VD$PORT.STRUCTURE$ */
     1539     5080                   /* Don't free VD$PORT.LEVEL.INTERNAL$ */
     1540     5081    3              IF VD$PORT.DCB# ~= 0 THEN DO;

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:238  
   5081  0 001077   100004 720100                    LXL0    4,,PR1
         0 001100   001110 600000 0                  TZE     s:5085

     1541     5082    3                 CALL VDG$OFREE_DCB (VD$PORT.DCB#)

   5082  0 001101   200007 236100                    LDQ     PTR$,,AUTO
         0 001102   000002 036000 1                  ADLQ    2
         0 001103   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 001104   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001105   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001106   000000 701000 xent               TSX1    VDG$OFREE_DCB
         0 001107   001746 702000 0                  TSX2    OFREE_FAILED

     1542     5083    3                   ALTRET (OFREE_DCB_FAILED);
     1543     5084    3                 END;

     1544     5085    2              IF VD$PORT.FIT$ ~= ADDR(NIL) THEN

   5085  0 001110   200007 470500                    LDP0    PTR$,,AUTO
         0 001111   000005 236100                    LDQ     5,,PR0
         0 001112   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001113   001122 600000 0                  TZE     s:5095

     1545     5086    2                 CALL VDG$OFREE (VD$PORT.FIT$->VD$FIT)

   5086  0 001114   000005 471500                    LDP1    5,,PR0
         0 001115   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001116   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001117   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001120   000000 701000 0                  TSX1    s:35
         0 001121   001746 702000 0                  TSX2    OFREE_FAILED

     1546     5087    2                   ALTRET (OFREE_FAILED);
     1547     5088                   %CLEARKEY (KEY=VD$PORT.FILE_KEY);

   5095  0 001122   200007 470500                    LDP0    PTR$,,AUTO
         0 001123   000010 720100                    LXL0    8,,PR0
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:239  
         0 001124   000002 100003                    CMPX0   2,DU
         0 001125   001136 601000 0                  TNZ     s:5096+1

   5095  0 001126   000011 471500                    LDP1    9,,PR0
         0 001127   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001130   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001131   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001132   000000 701000 0                  TSX1    s:35
         0 001133   001135 702000 0                  TSX2    s:5096
         0 001134   001136 710000 0                  TRA     s:5096+1

   5096  0 001135   000000 702200 xent               TSX2  ! X66_AALT

   5096  0 001136   200007 470500                    LDP0    PTR$,,AUTO
         0 001137   000010 450100                    STZ     8,,PR0
         0 001140   000011 450100                    STZ     9,,PR0

     1548     5098    2              CALL VDG$OCLEAR_LOCATION (VD$PORT.CURRENT)

   5098  0 001141   200007 236100                    LDQ     PTR$,,AUTO
         0 001142   000012 036003                    ADLQ    10,DU
         0 001143   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 001144   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001145   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001146   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 001147   001746 702000 0                  TSX2    OFREE_FAILED

     1549     5099    2                ALTRET (OCLEAR_LOCATION_FAILED);
     1550     5100    3              DO I = 0 TO %MX_ACCESS_LEVELS - 1;

   5100  0 001150   200012 450100                    STZ     I,,AUTO
         0 001151   001171 710000 0                  TRA     s:5104+1

     1551     5101    3                 IF VD$PORT.LEVEL.DATA$ (I) ~= ADDR(NIL) THEN

   5101  0 001152   200012 236100                    LDQ     I,,AUTO
         0 001153   000007 402007                    MPY     7,DL
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:240  
         0 001154   200007 470500                    LDP0    PTR$,,AUTO
         0 001155   000027 236106                    LDQ     23,QL,PR0
         0 001156   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001157   001170 600000 0                  TZE     s:5104

     1552     5102    3                    CALL VDG$OFREE (VD$PORT.LEVEL.DATA$ (I) -> VD$BUFFER)

   5102  0 001160   200012 236100                    LDQ     I,,AUTO
         0 001161   000007 402007                    MPY     7,DL
         0 001162   000027 471506                    LDP1    23,QL,PR0
         0 001163   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001164   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001165   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001166   000000 701000 0                  TSX1    s:35
         0 001167   001746 702000 0                  TSX2    OFREE_FAILED

     1553     5103    3                      ALTRET (OFREE_FAILED);
     1554     5104    3                 END;

   5104  0 001170   200012 054100                    AOS     I,,AUTO
         0 001171   200012 235100                    LDA     I,,AUTO
         0 001172   000004 115007                    CMPA    4,DL
         0 001173   001152 604400 0                  TMOZ    s:5101
         0 001174   001644 710000 0                  TRA     s:5244

     1555     5105
     1556     5106    2            CASE (%CLS_RECORD_SET);

     1557     5107    3              DO I = 0 TO (VD$RECORD_SET.N_ENTRIES# - 1);

   5107  0 001175   200012 450100                    STZ     I,,AUTO
         0 001176   001236 710000 0                  TRA     s:5121+1

     1558     5108                      %CLEARKEY (KEY=VD$RECORD_SET.DESC.KEY, INDX=I);

   5115  0 001177   200012 236100                    LDQ     I,,AUTO
         0 001200   000006 402007                    MPY     6,DL
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:241  
         0 001201   200007 470500                    LDP0    PTR$,,AUTO
         0 001202   000003 720106                    LXL0    3,QL,PR0
         0 001203   000002 100003                    CMPX0   2,DU
         0 001204   001215 601000 0                  TNZ     s:5116+1

   5115  0 001205   000004 471506                    LDP1    4,QL,PR0
         0 001206   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001207   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001210   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001211   000000 701000 0                  TSX1    s:35
         0 001212   001214 702000 0                  TSX2    s:5116
         0 001213   001215 710000 0                  TRA     s:5116+1

   5116  0 001214   000000 702200 xent               TSX2  ! X66_AALT

   5116  0 001215   200012 236100                    LDQ     I,,AUTO
         0 001216   000006 402007                    MPY     6,DL
         0 001217   200007 470500                    LDP0    PTR$,,AUTO
         0 001220   000003 450106                    STZ     3,QL,PR0
         0 001221   000004 450106                    STZ     4,QL,PR0

     1559     5118    3                 IF VD$RECORD_SET.DESC.DATA$ (I) ~= ADDR(NIL) THEN

   5118  0 001222   000007 236106                    LDQ     7,QL,PR0
         0 001223   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001224   001235 600000 0                  TZE     s:5121

     1560     5119    3                    CALL VDG$OFREE (VD$RECORD_SET.DESC.DATA$ (I) -> VD$BUFFER)

   5119  0 001225   200012 236100                    LDQ     I,,AUTO
         0 001226   000006 402007                    MPY     6,DL
         0 001227   000007 471506                    LDP1    7,QL,PR0
         0 001230   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001231   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001232   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001233   000000 701000 0                  TSX1    s:35
         0 001234   001746 702000 0                  TSX2    OFREE_FAILED
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:242  

     1561     5120    3                      ALTRET (OFREE_FAILED);
     1562     5121    3                 END;

   5121  0 001235   200012 054100                    AOS     I,,AUTO
         0 001236   200007 470500                    LDP0    PTR$,,AUTO
         0 001237   000002 236100                    LDQ     2,,PR0
         0 001240   000022 732000                    QRS     18
         0 001241   200012 116100                    CMPQ    I,,AUTO
         0 001242   001177 605400 0                  TPNZ    s:5115
         0 001243   001644 710000 0                  TRA     s:5244

     1563     5122
     1564     5123    2            CASE (%CLS_STREAM);

     1565     5124                   /* Don't free VD$STREAM.PORT$ */
     1566     5125                   %CLEARKEY (KEY=VD$STREAM.FILE_KEY);

   5132  0 001244   200007 471500                    LDP1    PTR$,,AUTO
         0 001245   100004 721100                    LXL1    4,,PR1
         0 001246   000002 101003                    CMPX1   2,DU
         0 001247   001260 601000 0                  TNZ     s:5133+1

   5132  0 001250   100005 473500                    LDP3    5,,PR1
         0 001251   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 001252   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001253   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001254   000000 701000 0                  TSX1    s:35
         0 001255   001257 702000 0                  TSX2    s:5133
         0 001256   001260 710000 0                  TRA     s:5133+1

   5133  0 001257   000000 702200 xent               TSX2  ! X66_AALT

   5133  0 001260   200007 470500                    LDP0    PTR$,,AUTO
         0 001261   000004 450100                    STZ     4,,PR0
         0 001262   000005 450100                    STZ     5,,PR0

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:243  
     1567     5135    2              CALL VDG$OCLEAR_LOCATION (VD$STREAM.CURRENT)

   5135  0 001263   200007 236100                    LDQ     PTR$,,AUTO
         0 001264   000006 036003                    ADLQ    6,DU
         0 001265   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 001266   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001267   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001270   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 001271   001746 702000 0                  TSX2    OFREE_FAILED

     1568     5136    2                ALTRET (OCLEAR_LOCATION_FAILED);
     1569     5137    2              CALL VDG$OCLEAR_LOCATION (VD$STREAM.NEXT)

   5137  0 001272   200007 236100                    LDQ     PTR$,,AUTO
         0 001273   000017 036003                    ADLQ    15,DU
         0 001274   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 001275   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001276   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001277   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 001300   001746 702000 0                  TSX2    OFREE_FAILED
         0 001301   001644 710000 0                  TRA     s:5244

     1570     5138    2                ALTRET (OCLEAR_LOCATION_FAILED);
     1571     5139
     1572     5140    2            CASE (%CLS_STRUCTURE_SPEC);

     1573     5141                   /* Don't free VD$STRUCTURE_SPEC.ACCESSOR$ */
     1574     5142    2              IF VD$STRUCTURE_SPEC.FIT$ ~= ADDR(NIL) THEN

   5142  0 001302   200007 471500                    LDP1    PTR$,,AUTO
         0 001303   100004 236100                    LDQ     4,,PR1
         0 001304   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001305   001644 600000 0                  TZE     s:5244

     1575     5143    2                 CALL VDG$OFREE (VD$STRUCTURE_SPEC.FIT$->VD$FIT)

   5143  0 001306   100004 473500                    LDP3    4,,PR1
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:244  
         0 001307   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 001310   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001311   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001312   000000 701000 0                  TSX1    s:35
         0 001313   001746 702000 0                  TSX2    OFREE_FAILED
         0 001314   001644 710000 0                  TRA     s:5244

     1576     5144    2                   ALTRET (OFREE_FAILED);
     1577     5145
     1578     5146    2            CASE (%CLS_WINDOW_BLOCK);

     1579     5147    2              IF VD$WINDOW_BLOCK.EDIT_BLOCK$ ~= ADDR(NIL) THEN

   5147  0 001315   200007 471500                    LDP1    PTR$,,AUTO
         0 001316   100003 236100                    LDQ     3,,PR1
         0 001317   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001320   001327 600000 0                  TZE     s:5150

     1580     5148    2                 CALL VDG$OFREE (VD$WINDOW_BLOCK.EDIT_BLOCK$->VD$BLOCK_DESC)

   5148  0 001321   100003 473500                    LDP3    3,,PR1
         0 001322   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 001323   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001324   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001325   000000 701000 0                  TSX1    s:35
         0 001326   001746 702000 0                  TSX2    OFREE_FAILED

     1581     5149    2                   ALTRET (OFREE_FAILED);
     1582     5150    2              IF VD$WINDOW_BLOCK.EVAL$ ~= ADDR(NIL) THEN

   5150  0 001327   200007 470500                    LDP0    PTR$,,AUTO
         0 001330   000004 236100                    LDQ     4,,PR0
         0 001331   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001332   001644 600000 0                  TZE     s:5244

     1583     5151    2                 CALL VDG$OFREE (VD$WINDOW_BLOCK.EVAL$->VD$EVAL)

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:245  
   5151  0 001333   000004 471500                    LDP1    4,,PR0
         0 001334   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001335   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001336   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001337   000000 701000 0                  TSX1    s:35
         0 001340   001746 702000 0                  TSX2    OFREE_FAILED
         0 001341   001644 710000 0                  TRA     s:5244

     1584     5152    2                   ALTRET (OFREE_FAILED);
     1585     5153
     1586     5154    2            CASE (%CLS_WINDOW_SPEC);

     1587     5155    2              IF VD$WINDOW_SPEC.OPERAND.STREAM$ ~= ADDR(NIL) THEN

   5155  0 001342   200007 471500                    LDP1    PTR$,,AUTO
         0 001343   100010 236100                    LDQ     8,,PR1
         0 001344   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001345   001354 600000 0                  TZE     s:5158

     1588     5156    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.OPERAND.STREAM$->VD$STREAM)

   5156  0 001346   100010 473500                    LDP3    8,,PR1
         0 001347   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 001350   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001351   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001352   000000 701000 0                  TSX1    s:35
         0 001353   001746 702000 0                  TSX2    OFREE_FAILED

     1589     5157    2                   ALTRET (OFREE_FAILED);
     1590     5158    2              IF VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$ ~= ADDR(NIL) THEN

   5158  0 001354   200007 470500                    LDP0    PTR$,,AUTO
         0 001355   000012 236100                    LDQ     10,,PR0
         0 001356   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001357   001366 600000 0                  TZE     s:5161

     1591     5159    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$->VD$BLOCK_DESC)
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:246  

   5159  0 001360   000012 471500                    LDP1    10,,PR0
         0 001361   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001362   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001363   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001364   000000 701000 0                  TSX1    s:35
         0 001365   001746 702000 0                  TSX2    OFREE_FAILED

     1592     5160    2                   ALTRET (OFREE_FAILED);
     1593     5161    2              IF VD$WINDOW_SPEC.OPERAND.EVAL$ ~= ADDR(NIL) THEN

   5161  0 001366   200007 470500                    LDP0    PTR$,,AUTO
         0 001367   000013 236100                    LDQ     11,,PR0
         0 001370   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001371   001400 600000 0                  TZE     s:5164

     1594     5162    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.OPERAND.EVAL$->VD$EVAL)

   5162  0 001372   000013 471500                    LDP1    11,,PR0
         0 001373   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001374   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001375   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001376   000000 701000 0                  TSX1    s:35
         0 001377   001746 702000 0                  TSX2    OFREE_FAILED

     1595     5163    2                   ALTRET (OFREE_FAILED);
     1596     5164    2              IF VD$WINDOW_SPEC.OPERAND.INTREE$ ~= ADDR(NIL) THEN

   5164  0 001400   200007 470500                    LDP0    PTR$,,AUTO
         0 001401   000011 236100                    LDQ     9,,PR0
         0 001402   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001403   001412 600000 0                  TZE     s:5167

     1597     5165    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.OPERAND.INTREE$->VD$IT_BLOCK_EXPR)

   5165  0 001404   000011 471500                    LDP1    9,,PR0
         0 001405   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:247  
         0 001406   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001407   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001410   000000 701000 0                  TSX1    s:35
         0 001411   001746 702000 0                  TSX2    OFREE_FAILED

     1598     5166    2                   ALTRET (OFREE_FAILED);
     1599     5167    2              IF VD$WINDOW_SPEC.RECORD_SET$ ~= ADDR(NIL) THEN

   5167  0 001412   200007 470500                    LDP0    PTR$,,AUTO
         0 001413   000016 236100                    LDQ     14,,PR0
         0 001414   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001415   001424 600000 0                  TZE     s:5170

     1600     5168    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.RECORD_SET$->VD$RECORD_SET)

   5168  0 001416   000016 471500                    LDP1    14,,PR0
         0 001417   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001420   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001421   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001422   000000 701000 0                  TSX1    s:35
         0 001423   001746 702000 0                  TSX2    OFREE_FAILED

     1601     5169    2                   ALTRET (OFREE_FAILED);
     1602     5170    2              IF VD$WINDOW_SPEC.EOFMARK$ ~= ADDR(NIL) THEN

   5170  0 001424   200007 470500                    LDP0    PTR$,,AUTO
         0 001425   000025 236100                    LDQ     21,,PR0
         0 001426   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001427   001436 600000 0                  TZE     s:5173

     1603     5171    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.EOFMARK$->VD$BUFFER)

   5171  0 001430   000025 471500                    LDP1    21,,PR0
         0 001431   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001432   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001433   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001434   000000 701000 0                  TSX1    s:35
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:248  
         0 001435   001746 702000 0                  TSX2    OFREE_FAILED

     1604     5172    2                   ALTRET (OFREE_FAILED);
     1605     5173    2              IF VD$WINDOW_SPEC.TABS$ ~= ADDR(NIL) THEN

   5173  0 001436   200007 470500                    LDP0    PTR$,,AUTO
         0 001437   000024 236100                    LDQ     20,,PR0
         0 001440   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001441   001450 600000 0                  TZE     s:5176

     1606     5174    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.TABS$->VD$TABS)

   5174  0 001442   000024 471500                    LDP1    20,,PR0
         0 001443   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001444   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001445   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001446   000000 701000 0                  TSX1    s:35
         0 001447   001746 702000 0                  TSX2    OFREE_FAILED

     1607     5175    2                   ALTRET (OFREE_FAILED);
     1608     5176    2              IF VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$ ~= ADDR(NIL) THEN

   5176  0 001450   200007 470500                    LDP0    PTR$,,AUTO
         0 001451   000030 236100                    LDQ     24,,PR0
         0 001452   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001453   001644 600000 0                  TZE     s:5244

     1609     5177    2                 CALL VDG$OFREE (VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$ ->

   5177  0 001454   000030 471500                    LDP1    24,,PR0
         0 001455   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001456   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001457   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001460   000000 701000 0                  TSX1    s:35
         0 001461   001746 702000 0                  TSX2    OFREE_FAILED
         0 001462   001644 710000 0                  TRA     s:5244

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:249  
     1610     5178    2                   VD$BUFFER)
     1611     5179    2                   ALTRET (OFREE_FAILED);
     1612     5180
     1613     5181    2            CASE (%CLS_XLATE_LOCATIONS);

     1614     5182                   %CLEARKEY (KEY=VD$XLATE_LOCATIONS.FILE_KEY);

   5189  0 001463   200007 471500                    LDP1    PTR$,,AUTO
         0 001464   100003 721100                    LXL1    3,,PR1
         0 001465   000002 101003                    CMPX1   2,DU
         0 001466   001477 601000 0                  TNZ     s:5190+1

   5189  0 001467   100004 473500                    LDP3    4,,PR1
         0 001470   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 001471   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001472   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001473   000000 701000 0                  TSX1    s:35
         0 001474   001476 702000 0                  TSX2    s:5190
         0 001475   001477 710000 0                  TRA     s:5190+1

   5190  0 001476   000000 702200 xent               TSX2  ! X66_AALT

   5190  0 001477   200007 470500                    LDP0    PTR$,,AUTO
         0 001500   000003 450100                    STZ     3,,PR0
         0 001501   000004 450100                    STZ     4,,PR0

     1615     5192    2              CALL VDG$OCLEAR_LOCATION (VD$XLATE_LOCATIONS.PREFIX)

   5192  0 001502   200007 236100                    LDQ     PTR$,,AUTO
         0 001503   000006 036003                    ADLQ    6,DU
         0 001504   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 001505   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001506   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001507   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 001510   001746 702000 0                  TSX2    OFREE_FAILED

     1616     5193    2                ALTRET (OCLEAR_LOCATION_FAILED);
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:250  
     1617     5194
     1618     5195    2              N_ENTRIES = (VD$XLATE_LOCATIONS.OBJECT.SIZE# -

   5195  0 001511   200007 236100                    LDQ     PTR$,,AUTO
         0 001512   000017 036003                    ADLQ    15,DU
         0 001513   000022 772000                    QRL     18
         0 001514   200007 235100                    LDA     PTR$,,AUTO
         0 001515   000022 771000                    ARL     18
         0 001516   200014 755100                    STA     SBIN_WORD$+1,,AUTO
         0 001517   200014 136100                    SBLQ    SBIN_WORD$+1,,AUTO
         0 001520   200015 756100                    STQ     SBIN_WORD$+2,,AUTO
         0 001521   200007 470500                    LDP0    PTR$,,AUTO
         0 001522   000000 236100                    LDQ     0,,PR0
         0 001523   000022 736000                    QLS     18
         0 001524   000022 732000                    QRS     18
         0 001525   200015 136100                    SBLQ    SBIN_WORD$+2,,AUTO
         0 001526   000010 506007                    DIV     8,DL
         0 001527   200006 756100                    STQ     N_ENTRIES,,AUTO

     1619     5196    2                POFFW(ADDR(VD$XLATE_LOCATIONS.XLATES), PTR$)) /
     1620     5197    2                SIZEW(VD$XLATE_LOCATIONS.XLATES);
     1621     5198    2              IF N_ENTRIES ~= VD$XLATE_LOCATIONS.MX_ENTRIES#

   5198  0 001530   000001 236100                    LDQ     1,,PR0
         0 001531   000022 736000                    QLS     18
         0 001532   000022 732000                    QRS     18
         0 001533   200006 116100                    CMPQ    N_ENTRIES,,AUTO
         0 001534   001541 601000 0                  TNZ     s:5200
         0 001535   000001 236100                    LDQ     1,,PR0
         0 001536   000022 732000                    QRS     18
         0 001537   200006 116100                    CMPQ    N_ENTRIES,,AUTO
         0 001540   001550 604400 0                  TMOZ    s:5201

     1622     5199    2                OR VD$XLATE_LOCATIONS.N_ENTRIES# > N_ENTRIES THEN
     1623     5200    2                 CALL VDG$ESCREECH (VD$XLATE_LOCATIONS.N_ENTRIES#);

   5200  0 001541   200007 236100                    LDQ     PTR$,,AUTO
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:251  
         0 001542   000001 036003                    ADLQ    1,DU
         0 001543   200014 756100                    STQ     SBIN_WORD$+1,,AUTO
         0 001544   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001545   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001546   000000 701000 xent               TSX1    VDG$ESCREECH
         0 001547   000000 011000                    NOP     0

     1624     5201    3              DO I = 0 TO (VD$XLATE_LOCATIONS.N_ENTRIES# - 1);

   5201  0 001550   200012 450100                    STZ     I,,AUTO
         0 001551   001636 710000 0                  TRA     s:5232+1

     1625     5202                      %CLEARKEY (KEY=VD$XLATE_LOCATIONS.XLATES.OLD_KEY_LO, INDX=I);

   5209  0 001552   200012 235100                    LDA     I,,AUTO
         0 001553   000003 735000                    ALS     3
         0 001554   200007 470500                    LDP0    PTR$,,AUTO
         0 001555   000017 720105                    LXL0    15,AL,PR0
         0 001556   000002 100003                    CMPX0   2,DU
         0 001557   001570 601000 0                  TNZ     s:5210+1

   5209  0 001560   000020 471505                    LDP1    16,AL,PR0
         0 001561   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001562   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001563   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001564   000000 701000 0                  TSX1    s:35
         0 001565   001567 702000 0                  TSX2    s:5210
         0 001566   001570 710000 0                  TRA     s:5210+1

   5210  0 001567   000000 702200 xent               TSX2  ! X66_AALT

   5210  0 001570   200012 235100                    LDA     I,,AUTO
         0 001571   000003 735000                    ALS     3
         0 001572   200007 470500                    LDP0    PTR$,,AUTO
         0 001573   000017 450105                    STZ     15,AL,PR0
         0 001574   000020 450105                    STZ     16,AL,PR0

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:252  
     1626     5212                      %CLEARKEY (KEY=VD$XLATE_LOCATIONS.XLATES.OLD_KEY_HI, INDX=I);

   5219  0 001575   000021 720105                    LXL0    17,AL,PR0
         0 001576   000002 100003                    CMPX0   2,DU
         0 001577   001610 601000 0                  TNZ     s:5220+1

   5219  0 001600   000022 471505                    LDP1    18,AL,PR0
         0 001601   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001602   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001603   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001604   000000 701000 0                  TSX1    s:35
         0 001605   001607 702000 0                  TSX2    s:5220
         0 001606   001610 710000 0                  TRA     s:5220+1

   5220  0 001607   000000 702200 xent               TSX2  ! X66_AALT

   5220  0 001610   200012 235100                    LDA     I,,AUTO
         0 001611   000003 735000                    ALS     3
         0 001612   200007 470500                    LDP0    PTR$,,AUTO
         0 001613   000021 450105                    STZ     17,AL,PR0
         0 001614   000022 450105                    STZ     18,AL,PR0

     1627     5222                      %CLEARKEY (KEY=VD$XLATE_LOCATIONS.XLATES.NEW_KEY, INDX=I);

   5229  0 001615   000024 720105                    LXL0    20,AL,PR0
         0 001616   000002 100003                    CMPX0   2,DU
         0 001617   001630 601000 0                  TNZ     s:5230+1

   5229  0 001620   000025 471505                    LDP1    21,AL,PR0
         0 001621   200014 451500                    STP1    SBIN_WORD$+1,,AUTO
         0 001622   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001623   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001624   000000 701000 0                  TSX1    s:35
         0 001625   001627 702000 0                  TSX2    s:5230
         0 001626   001630 710000 0                  TRA     s:5230+1

   5230  0 001627   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:253  

   5230  0 001630   200012 235100                    LDA     I,,AUTO
         0 001631   000003 735000                    ALS     3
         0 001632   200007 470500                    LDP0    PTR$,,AUTO
         0 001633   000024 450105                    STZ     20,AL,PR0
         0 001634   000025 450105                    STZ     21,AL,PR0

     1628     5232    3                 END;

   5232  0 001635   200012 054100                    AOS     I,,AUTO
         0 001636   200007 470500                    LDP0    PTR$,,AUTO
         0 001637   000001 236100                    LDQ     1,,PR0
         0 001640   000022 732000                    QRS     18
         0 001641   200012 116100                    CMPQ    I,,AUTO
         0 001642   001552 605400 0                  TPNZ    s:5209
         0 001643   001644 710000 0                  TRA     s:5244

     1629     5233
     1630     5234    2            CASE (ELSE);

     1631     5235    2              ; /* No special handling for other objects */
     1632     5236    2            END;

     1633     5237
     1634     5238
     1635     5239                /*
     1636     5240                * Finally, deallocate the object
     1637     5241                * Make sure XUM's "chunk-size" word is within reasonable bounds
     1638     5242                */
     1639     5243
     1640     5244    1           NWORDS = OBJECT_HEADER.SIZE#;

   5244  0 001644   200003 470500                    LDP0    @OBJECT_HEADER,,AUTO
         0 001645   000000 236100                    LDQ     0,,PR0
         0 001646   000022 736000                    QLS     18
         0 001647   000022 732000                    QRS     18
         0 001650   200005 756100                    STQ     NWORDS,,AUTO
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:254  

     1641     5245    1           IF NWORDS = 0 THEN

   5245  0 001651   001653 601000 0                  TNZ     s:5247

     1642     5246    1              RETURN;  /* Object not owned or not dynamic: don't free */

   5246  0 001652   000000 702200 xent               TSX2  ! X66_ARET

     1643     5247    1           SBIN_WORD$ = PINCRW(ADDR(OBJECT_HEADER), -1);

   5247  0 001653   200003 236100                    LDQ     @OBJECT_HEADER,,AUTO
         0 001654   777777 036003                    ADLQ    -1,DU
         0 001655   200013 756100                    STQ     SBIN_WORD$,,AUTO

     1644     5248    1           IF SBIN$WORD <= NWORDS

   5248  0 001656   200013 471500                    LDP1    SBIN_WORD$,,AUTO
         0 001657   100000 236100                    LDQ     0,,PR1
         0 001660   200005 116100                    CMPQ    NWORDS,,AUTO
         0 001661   001666 604400 0                  TMOZ    s:5250
         0 001662   200005 236100                    LDQ     NWORDS,,AUTO
         0 001663   000005 036007                    ADLQ    5,DL
         0 001664   100000 116100                    CMPQ    0,,PR1
         0 001665   001676 605000 0                  TPL     s:5254

     1645     5249    2             OR SBIN$WORD > (NWORDS + 3 + %MNNW_DYN_STORAGE) THEN DO;

     1646     5250    2              CALL VDG$ESCREECH (NWORDS, SBIN$WORD);

   5250  0 001666   200013 236100                    LDQ     SBIN_WORD$,,AUTO
         0 001667   200015 756100                    STQ     SBIN_WORD$+2,,AUTO
         0 001670   200005 633500                    EPPR3   NWORDS,,AUTO
         0 001671   200014 453500                    STP3    SBIN_WORD$+1,,AUTO
         0 001672   200014 630500                    EPPR0   SBIN_WORD$+1,,AUTO
         0 001673   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001674   000000 701000 xent               TSX1    VDG$ESCREECH
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:255  
         0 001675   000000 011000                    NOP     0

     1647     5251    2              END;

     1648     5252
     1649     5253                /* Make sure the pointer points to one of our data segments */
     1650     5254    1           SEG_PTR2$ = VD_MCB_SMALL.SEGMENT_BASE$;

   5254  0 001676   000002 236000 xsym               LDQ     VD_MCB_SMALL+2
         0 001677   200010 756100                    STQ     SEG_PTR2$,,AUTO

     1651     5255    1           IF SEG_PTR.SEGID = SEG_PTR2.SEGID THEN

   5255  0 001700   200007 236100                    LDQ     PTR$,,AUTO
         0 001701   200010 676100                    ERQ     SEG_PTR2$,,AUTO
         0 001702   007777 376007                    ANQ     4095,DL
         0 001703   001707 601000 0                  TNZ     s:5258

     1652     5256    1              MCB$ = ADDR(VD_MCB_SMALL);

   5256  0 001704   000003 236000 1                  LDQ     3
         0 001705   200004 756100                    STQ     MCB$,,AUTO
         0 001706   001723 710000 0                  TRA     s:5263

     1653     5257    2           ELSE DO;

     1654     5258    2              SEG_PTR2$ = VD_MCB_LARGE.SEGMENT_BASE$;

   5258  0 001707   000002 236000 xsym               LDQ     VD_MCB_LARGE+2
         0 001710   200010 756100                    STQ     SEG_PTR2$,,AUTO

     1655     5259    2              IF SEG_PTR.SEGID = SEG_PTR2.SEGID THEN

   5259  0 001711   200007 236100                    LDQ     PTR$,,AUTO
         0 001712   200010 676100                    ERQ     SEG_PTR2$,,AUTO
         0 001713   007777 376007                    ANQ     4095,DL
         0 001714   001720 601000 0                  TNZ     s:5261
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:256  

     1656     5260    2                 MCB$ = ADDR(VD_MCB_LARGE);

   5260  0 001715   000004 236000 1                  LDQ     4
         0 001716   200004 756100                    STQ     MCB$,,AUTO
         0 001717   001723 710000 0                  TRA     s:5263

     1657     5261    2              ELSE CALL VDG$ESCREECH;

   5261  0 001720   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001721   000000 701000 xent               TSX1    VDG$ESCREECH
         0 001722   000000 011000                    NOP     0

     1658     5262    2              END;

     1659     5263    1           MCB.SIZE = NWORDS;

   5263  0 001723   200004 470500                    LDP0    MCB$,,AUTO
         0 001724   200005 235100                    LDA     NWORDS,,AUTO
         0 001725   000006 755100                    STA     6,,PR0

     1660     5264    1           MCB.ADDRESS$ = ADDR(OBJECT_HEADER);

   5264  0 001726   200003 236100                    LDQ     @OBJECT_HEADER,,AUTO
         0 001727   000000 756100                    STQ     0,,PR0

     1661     5265    1           CALL X$DEALLOCATE (MCB) ALTRET (DEALLOCATE_FAILED);

   5265  0 001730   200004 630500                    EPPR0   MCB$,,AUTO
         0 001731   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001732   000000 701000 xent               TSX1    X$DEALLOCATE
         0 001733   001735 702000 0                  TSX2    DEALLOCATE_FAILED

     1662     5266    1           RETURN;

   5266  0 001734   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:257  
     1663     5267
     1664     5268
     1665     5269    1   DEALLOCATE_FAILED:
     1666     5270    1           ERR$HEAD.ERR.CODE# = %E$DEALLOCATE_FAILED;

   5270  0 001735   000031 470400 xsym  DEALLOCATE_* LDP0    VD_6E+25
         0 001736   000002 236100                    LDQ     2,,PR0
         0 001737   000005 376000 1                  ANQ     5
         0 001740   000030 276007                    ORQ     24,DL
         0 001741   000002 756100                    STQ     2,,PR0

     1667     5271    1           ERR$HEAD.FLAGLEV# = %FLV_FATAL;

   5271  0 001742   000004 220003                    LDX0    4,DU
         0 001743   000031 470400 xsym               LDP0    VD_6E+25
         0 001744   000003 740100                    STX0    3,,PR0

     1668     5272    1           ALTRETURN;

   5272  0 001745   000000 702200 xent               TSX2  ! X66_AALT

   5271  0 001746                       OFREE_FAILED null
   5271  0 001746                       OFREE_DCB_F* null
   5271  0 001746                       OCLEAR_RANG* null
   5271  0 001746                       OCLEAR_LOCA* null
     1669     5273
     1670     5274    1   OFREE_FAILED: ;
     1671     5275    1   OFREE_DCB_FAILED: ;
     1672     5276    1   OCLEAR_RANGE_FAILED: ;
     1673     5277    1   OCLEAR_LOCATION_FAILED: ;
     1674     5278    1           ALTRETURN;

   5278  0 001746   000000 702200 xent               TSX2  ! X66_AALT
     1675     5279
     1676     5280    1   END VDG$OFREE;
     1677     5281        %EOD;

PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:258  
--  Include file information  --

   XUM_MACRO_C.:LIBRARY  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$OFREE.
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:259  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @OBJECT_HEADER            12-0-0/w SBIN        r     1 I
     4-0-0/w PTR         r     1 MCB$                       5-0-0/w SBIN        r     1 NWORDS
     6-0-0/w SBIN        r     1 N_ENTRIES                 *0-0-0/w STRC        r     1 OBJECT_HEADER
     7-0-0/w PTR         r     1 PTR$                      11-0-0/w PTR         r     1 PTR2$
    13-0-0/w PTR         r     1 SBIN_WORD$                 7-0-0/w STRC        r     1 SEG_PTR
    10-0-0/w STRC        r     1 SEG_PTR2                  10-0-0/w PTR         r     1 SEG_PTR2$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(22644) r     1 VD_6E                      0-0-0/w STRC(324)   r     1 VD_MCB_LARGE
     0-0-0/w STRC(324)   r     1 VD_MCB_SMALL
     0-0-0/w STRC(72)    r     1 VD_OBJECTS(0:98)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 ERR$HEAD                   0-0-0/w STRC(324)   r     1 MCB
     0-0-0/w SBIN        r     1 SBIN$WORD                  0-0-0/w STRC(936)   r     1 VD$BLOCK_DESC
     0-0-0/w ASTR(90)    r     1 VD$BUFFER                  0-0-0/w STRC(90)    r     1 VD$BUFFER_HEADER
     0-0-0/w STRC(900)   r     1 VD$CMD_STREAM              0-0-0/w STRC(576)   r     1 VD$DIR_NODE
     0-0-0/w STRC(900)   r     1 VD$ENCODED_NODE            0-0-0/w STRC(180)   r     1 VD$ERR
     0-0-0/w STRC(2124)  r     1 VD$EVAL                    0-0-0/w STRC(864)   r     1 VD$EVAL_PATTERN
     0-0-0/w STRC(648)   r     1 VD$FILE_KEY                0-0-0/w STRC(468)   r     1 VD$FILE_NODE
     0-0-0/w STRC(36972) r     1 VD$FIT                     0-0-0/w STRC(216)   r     1 VD$IT_ADJUST
     0-0-0/w STRC(1116)  r     1 VD$IT_BLOCK_EXPR           0-0-0/w STRC(540)   r     1 VD$IT_COMMAND
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:260  
     0-0-0/w STRC(324)   r     1 VD$IT_OPERAND              0-0-0/w STRC(216)   r     1 VD$IT_OPERATOR
     0-0-0/w STRC(216)   r     1 VD$IT_SELECT               0-0-0/w STRC        r     1 VD$OBJECT_HEADER
     0-0-0/w STRC(252)   r     1 VD$PATTERN                 0-0-0/w STRC(1944)  r     1 VD$PORT
     0-0-0/w STRC(324)   r     1 VD$RECORD_SET              0-0-0/w STRC(864)   r     1 VD$STREAM
     0-0-0/w STRC(81)    r     1 VD$STRING_HEADER           0-0-0/w STRC(180)   r     1 VD$STRUCTURE_SPEC
     0-0-0/w STRC(396)   r     1 VD$TABS                    0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE
     0-0-0/w STRC(180)   r     1 VD$WINDOW_BLOCK            0-0-0/w STRC(900)   r     1 VD$WINDOW_SPEC
     0-0-0/w STRC(828)   r     1 VD$XLATE_LOCATIONS


   Procedure VDG$OFREE requires 999 words for executable code.
   Procedure VDG$OFREE requires 14 words of local(AUTO) storage.
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:261  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:262  
          MINI XREF LISTING

DEALLOCATE_FAILED
      5270**LABEL    5265--CALLALT
ERR$HEAD.ERR.CODE#
      2615**DCL      5270<<ASSIGN
ERR$HEAD.FLAGLEV#
      2618**DCL      5271<<ASSIGN
I
      2559**DCL      5016<<DOINDEX  5017>>IF       5018>>CALL     5059<<DOINDEX  5060>>IF       5061>>CALL
      5100<<DOINDEX  5101>>IF       5102>>CALL     5102>>CALL     5107<<DOINDEX  5115>>IF       5115>>CALL
      5115>>CALL     5116>>ASSIGN   5118>>IF       5119>>CALL     5119>>CALL     5201<<DOINDEX  5209>>IF
      5209>>CALL     5209>>CALL     5210>>ASSIGN   5219>>IF       5219>>CALL     5219>>CALL     5220>>ASSIGN
      5229>>IF       5229>>CALL     5229>>CALL     5230>>ASSIGN
MCB
      2564**DCL      5265<>CALL
MCB.ADDRESS$
      2564**DCL      5264<<ASSIGN
MCB.SIZE
      2564**DCL      5263<<ASSIGN
MCB$
      2547**DCL      2564--IMP-PTR  5256<<ASSIGN   5260<<ASSIGN   5263>>ASSIGN   5264>>ASSIGN   5265>>CALL
NWORDS
      2548**DCL      5244<<ASSIGN   5245>>IF       5248>>IF       5248>>IF       5250<>CALL     5263>>ASSIGN
N_ENTRIES
      2549**DCL      5053<<ASSIGN   5056>>IF       5056>>IF       5195<<ASSIGN   5198>>IF       5198>>IF
OBJECT_HEADER
      2446**DCL        35--PROC     4826--ASSIGN   4832<>CALL     5247--ASSIGN   5264--ASSIGN
OBJECT_HEADER.CLASS#
      2450**DCL      4830>>IF       4830>>IF       4835>>IF       4839>>IF       4846>>DOCASE
OBJECT_HEADER.SIZE#
      2450**DCL      5244>>ASSIGN
OCLEAR_LOCATION_FAILED
      5271**LABEL    4910--CALLALT  5098--CALLALT  5135--CALLALT  5137--CALLALT  5192--CALLALT
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:263  
OCLEAR_RANGE_FAILED
      5271**LABEL    4861--CALLALT  4876--CALLALT  4923--CALLALT  4925--CALLALT  4927--CALLALT  4933--CALLALT
      5004--CALLALT
OFREE_DCB_FAILED
      5271**LABEL    5082--CALLALT
OFREE_FAILED
      5271**LABEL    4837--CALLALT  4841--CALLALT  4883--CALLALT  4886--CALLALT  4893--CALLALT  4896--CALLALT
      4913--CALLALT  4918--CALLALT  4939--CALLALT  4945--CALLALT  4968--CALLALT  4971--CALLALT  4982--CALLALT
      4985--CALLALT  4992--CALLALT  5007--CALLALT  5013--CALLALT  5018--CALLALT  5025--CALLALT  5028--CALLALT
      5034--CALLALT  5037--CALLALT  5040--CALLALT  5046--CALLALT  5049--CALLALT  5061--CALLALT  5086--CALLALT
      5102--CALLALT  5119--CALLALT  5143--CALLALT  5148--CALLALT  5151--CALLALT  5156--CALLALT  5159--CALLALT
      5162--CALLALT  5165--CALLALT  5168--CALLALT  5171--CALLALT  5174--CALLALT  5177--CALLALT
PTR$
      2550**DCL      2551--REDEF    2652--IMP-PTR  2816--IMP-PTR  2857--IMP-PTR  2893--IMP-PTR  2932--IMP-PTR
      2970--IMP-PTR  3091--IMP-PTR  3144--IMP-PTR  3389--IMP-PTR  3504--IMP-PTR  3545--IMP-PTR  3638--IMP-PTR
      3674--IMP-PTR  3711--IMP-PTR  3861--IMP-PTR  3899--IMP-PTR  3965--IMP-PTR  4002--IMP-PTR  4047--IMP-PTR
      4087--IMP-PTR  4138--IMP-PTR  4236--IMP-PTR  4314--IMP-PTR  4420--IMP-PTR  4456--IMP-PTR  4493--IMP-PTR
      4547--IMP-PTR  4591--IMP-PTR  4628--IMP-PTR  4693--IMP-PTR  4826<<ASSIGN   4827>>IF       4835>>IF
      4837>>CALL     4839>>IF       4841>>CALL     4850>>ASSIGN   4873>>IF       4873>>CALL     4873>>CALL
      4874>>ASSIGN   4876>>CALL     4880>>ASSIGN   4882>>IF       4883>>CALL     4883>>CALL     4885>>IF
      4886>>CALL     4892>>IF       4893>>CALL     4895>>IF       4896>>CALL     4907>>IF       4907>>CALL
      4907>>CALL     4908>>ASSIGN   4910>>CALL     4912>>IF       4913>>CALL     4913>>CALL     4917>>IF
      4918>>CALL     4923>>CALL     4925>>CALL     4927>>CALL     4933>>CALL     4938>>IF       4939>>CALL
      4944>>IF       4945>>CALL     4954>>IF       4954>>CALL     4954>>CALL     4955>>ASSIGN   4964>>IF
      4964>>CALL     4964>>CALL     4965>>ASSIGN   4967>>IF       4968>>CALL     4968>>CALL     4970>>IF
      4971>>CALL     4981>>IF       4982>>CALL     4984>>IF       4985>>CALL     4991>>IF       4992>>CALL
      5001>>IF       5001>>CALL     5001>>CALL     5002>>ASSIGN   5004>>CALL     5006>>IF       5007>>CALL
      5012>>IF       5013>>CALL     5017>>IF       5018>>CALL     5024>>IF       5025>>CALL     5027>>IF
      5028>>CALL     5033>>IF       5034>>CALL     5036>>IF       5037>>CALL     5039>>IF       5040>>CALL
      5045>>IF       5046>>CALL     5048>>IF       5049>>CALL     5053>>ASSIGN   5053>>ASSIGN   5053>>ASSIGN
      5056>>IF       5056>>IF       5058>>CALL     5059>>DOINDEX  5060>>IF       5061>>CALL     5069>>IF
      5070>>ASSIGN   5072>>ASSIGN   5072>>ASSIGN   5073>>IF       5074>>ASSIGN   5076>>ASSIGN   5076>>ASSIGN
      5081>>IF       5082>>CALL     5085>>IF       5086>>CALL     5095>>IF       5095>>CALL     5095>>CALL
      5096>>ASSIGN   5098>>CALL     5101>>IF       5102>>CALL     5102>>CALL     5107>>DOINDEX  5115>>IF
      5115>>CALL     5115>>CALL     5116>>ASSIGN   5118>>IF       5119>>CALL     5119>>CALL     5132>>IF
      5132>>CALL     5132>>CALL     5133>>ASSIGN   5135>>CALL     5137>>CALL     5142>>IF       5143>>CALL
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:264  
      5147>>IF       5148>>CALL     5150>>IF       5151>>CALL     5155>>IF       5156>>CALL     5158>>IF
      5159>>CALL     5161>>IF       5162>>CALL     5164>>IF       5165>>CALL     5167>>IF       5168>>CALL
      5170>>IF       5171>>CALL     5171>>CALL     5173>>IF       5174>>CALL     5176>>IF       5177>>CALL
      5177>>CALL     5189>>IF       5189>>CALL     5189>>CALL     5190>>ASSIGN   5192>>CALL     5195>>ASSIGN
      5195>>ASSIGN   5195>>ASSIGN   5198>>IF       5198>>IF       5200>>CALL     5201>>DOINDEX  5209>>IF
      5209>>CALL     5209>>CALL     5210>>ASSIGN   5219>>IF       5219>>CALL     5219>>CALL     5220>>ASSIGN
      5229>>IF       5229>>CALL     5229>>CALL     5230>>ASSIGN
PTR2$
      2558**DCL      4850<<ASSIGN   4858>>IF       4858>>CALL     4858>>CALL     4859>>ASSIGN   4861>>CALL
SBIN$WORD
      2567**DCL      5248>>IF       5248>>IF       5250<>CALL
SBIN_WORD$
      2560**DCL      2567--IMP-PTR  5247<<ASSIGN   5248>>IF       5248>>IF       5250>>CALL
SEG_PTR.SEGID
      2553**DCL      5255>>IF       5259>>IF
SEG_PTR2.SEGID
      2557**DCL      5255>>IF       5259>>IF
SEG_PTR2$
      2554**DCL      2555--REDEF    5254<<ASSIGN   5258<<ASSIGN
VD$BLOCK_DESC
      2652**DCL      5148<>CALL     5159<>CALL
VD$BLOCK_DESC.FILE_KEY
      2688**DCL      4859<<ASSIGN   4874<<ASSIGN
VD$BLOCK_DESC.FILE_KEY.REP#
      2690**DCL      4858>>IF       4873>>IF
VD$BLOCK_DESC.FILE_KEY.V$
      2690**DCL      4858>>CALL     4858>>CALL     4873>>CALL     4873>>CALL
VD$BLOCK_DESC.RANGE
      2702**DCL      4861<>CALL     4876<>CALL
VD$BUFFER
      2816**DCL      4883<>CALL     4913<>CALL     4968<>CALL     5102<>CALL     5119<>CALL     5171<>CALL
      5177<>CALL
VD$BUFFER.BYTES
      2844**DCL      4850--ASSIGN
VD$BUFFER.LENGTH#
      2842**DCL      2844--IMP-SIZ  4883>>CALL     4913>>CALL     4968>>CALL     5102>>CALL     5119>>CALL
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:265  
      5171>>CALL     5177>>CALL
VD$BUFFER_HEADER
      2857**DCL      4841<>CALL
VD$BUFFER_HEADER.FLINK$
      2883**DCL      4839>>IF       4841>>CALL
VD$CMD_STREAM.BLINK$
      2919**DCL      4880>>ASSIGN
VD$CMD_STREAM.INTREE$
      2920**DCL      4885>>IF       4886>>CALL
VD$CMD_STREAM.RECORD$
      2920**DCL      4882>>IF       4883>>CALL     4883>>CALL
VD$DIR_NODE
      2932**DCL      4893<>CALL
VD$DIR_NODE.FLINK$
      2958**DCL      4892>>IF       4893>>CALL
VD$DIR_NODE.HEAD$
      2959**DCL      4895>>IF       4896>>CALL
VD$ENCODED_NODE.DESC.DATA$
      3080**DCL      4912>>IF       4913>>CALL     4913>>CALL
VD$ENCODED_NODE.DESC.FILE_KEY
      3020**DCL      4908<<ASSIGN
VD$ENCODED_NODE.DESC.FILE_KEY.REP#
      3022**DCL      4907>>IF
VD$ENCODED_NODE.DESC.FILE_KEY.V$
      3022**DCL      4907>>CALL     4907>>CALL
VD$ENCODED_NODE.DESC.LOCATION
      3034**DCL      4910<>CALL
VD$ERR
      3091**DCL      4918<>CALL
VD$ERR.FLINK$
      3117**DCL      4917>>IF       4918>>CALL
VD$EVAL
      3144**DCL      5151<>CALL     5162<>CALL
VD$EVAL.ENCLOSING
      3181**DCL      4923<>CALL
VD$EVAL.LAST_FOUND_RANGE
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:266  
      3319**DCL      4927<>CALL
VD$EVAL.RANGE
      3250**DCL      4925<>CALL
VD$EVAL_PATTERN.RANGE
      3426**DCL      4933<>CALL
VD$FILE_KEY.FLINK$
      3531**DCL      4938>>IF       4939>>CALL
VD$FILE_NODE
      3545**DCL      4896<>CALL     4945<>CALL     4971<>CALL
VD$FILE_NODE.DESC.DATA$
      3626**DCL      4967>>IF       4968>>CALL     4968>>CALL
VD$FILE_NODE.DESC.KEY
      3608**DCL      4955<<ASSIGN
VD$FILE_NODE.DESC.KEY.REP#
      3610**DCL      4954>>IF
VD$FILE_NODE.DESC.KEY.V$
      3610**DCL      4954>>CALL     4954>>CALL
VD$FILE_NODE.DESC.SPEC
      3622**DCL      4965<<ASSIGN
VD$FILE_NODE.DESC.SPEC.REP#
      3624**DCL      4964>>IF
VD$FILE_NODE.DESC.SPEC.V$
      3624**DCL      4964>>CALL     4964>>CALL
VD$FILE_NODE.FLINK$
      3571**DCL      4944>>IF       4945>>CALL
VD$FILE_NODE.HEAD$
      3628**DCL      4970>>IF       4971>>CALL
VD$FIT
      3638**DCL      5086<>CALL     5143<>CALL
VD$IT_ADJUST
      3674**DCL      4982<>CALL     5049<>CALL
VD$IT_ADJUST.FLINK$
      3700**DCL      4981>>IF       4982>>CALL
VD$IT_ADJUST.MOVEMENTS$
      3700**DCL      4984>>IF       4985>>CALL
VD$IT_BLOCK_EXPR
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:267  
      3711**DCL      4992<>CALL     5165<>CALL
VD$IT_BLOCK_EXPR.DOMAINN.FILE_KEY
      3749**DCL      5002<<ASSIGN
VD$IT_BLOCK_EXPR.DOMAINN.FILE_KEY.REP#
      3751**DCL      5001>>IF
VD$IT_BLOCK_EXPR.DOMAINN.FILE_KEY.V$
      3751**DCL      5001>>CALL     5001>>CALL
VD$IT_BLOCK_EXPR.DOMAINN.RANGE
      3763**DCL      5004<>CALL
VD$IT_BLOCK_EXPR.FLINK$
      3737**DCL      4991>>IF       4992>>CALL
VD$IT_BLOCK_EXPR.SELECTS$
      3851**DCL      5006>>IF       5007>>CALL
VD$IT_COMMAND
      3861**DCL      4886<>CALL     5013<>CALL
VD$IT_COMMAND.FLINK$
      3887**DCL      5012>>IF       5013>>CALL
VD$IT_COMMAND.PARAM$
      3888**DCL      5017>>IF       5018>>CALL
VD$IT_OPERAND
      3899**DCL      4985<>CALL     5025<>CALL     5037<>CALL     5040<>CALL
VD$IT_OPERAND.FLINK$
      3925**DCL      5024>>IF       5025>>CALL
VD$IT_OPERAND.PARAM$
      3955**DCL      5027>>IF       5028>>CALL
VD$IT_OPERATOR
      3965**DCL      5034<>CALL
VD$IT_OPERATOR.FLINK$
      3991**DCL      5033>>IF       5034>>CALL
VD$IT_OPERATOR.OPERAND$
      3991**DCL      5036>>IF       5037>>CALL
VD$IT_OPERATOR.R_OPERAND$
      3992**DCL      5039>>IF       5040>>CALL
VD$IT_SELECT
      4002**DCL      5007<>CALL     5046<>CALL
VD$IT_SELECT.ADJUSTS$
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:268  
      4029**DCL      5048>>IF       5049>>CALL
VD$IT_SELECT.FLINK$
      4028**DCL      5045>>IF       5046>>CALL
VD$OBJECT_HEADER
      2637**DCL      5018<>CALL     5028<>CALL     5061<>CALL
VD$PATTERN.ENTRIES
      4124**DCL      5053--ASSIGN   5053--ASSIGN
VD$PATTERN.ENTRIES.MATCH$
      4127**DCL      5060>>IF       5061>>CALL
VD$PATTERN.MX_ENTRIES#
      4113**DCL      5056>>IF
VD$PATTERN.N_ENTRIES#
      4113**DCL      5056>>IF       5058<>CALL     5059>>DOINDEX
VD$PATTERN.OBJECT.SIZE#
      4111**DCL      5053>>ASSIGN
VD$PORT.BLINK$
      4164**DCL      5069>>IF       5072>>ASSIGN   5074>>ASSIGN   5076<<ASSIGN   5076>>ASSIGN
VD$PORT.CURRENT
      4191**DCL      5098<>CALL
VD$PORT.DCB#
      4165**DCL      5081>>IF       5082<>CALL
VD$PORT.FILE_KEY
      4177**DCL      5096<<ASSIGN
VD$PORT.FILE_KEY.REP#
      4179**DCL      5095>>IF
VD$PORT.FILE_KEY.V$
      4179**DCL      5095>>CALL     5095>>CALL
VD$PORT.FIT$
      4165**DCL      5085>>IF       5086>>CALL
VD$PORT.FLINK$
      4164**DCL      5070>>ASSIGN   5072<<ASSIGN   5072>>ASSIGN   5073>>IF       5076>>ASSIGN
VD$PORT.LEVEL.DATA$
      4225**DCL      5101>>IF       5102>>CALL     5102>>CALL
VD$RECORD_SET
      4236**DCL      5168<>CALL
VD$RECORD_SET.DESC.DATA$
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:269  
      4303**DCL      5118>>IF       5119>>CALL     5119>>CALL
VD$RECORD_SET.DESC.KEY
      4285**DCL      5116<<ASSIGN
VD$RECORD_SET.DESC.KEY.REP#
      4287**DCL      5115>>IF
VD$RECORD_SET.DESC.KEY.V$
      4287**DCL      5115>>CALL     5115>>CALL
VD$RECORD_SET.N_ENTRIES#
      4262**DCL      5107>>DOINDEX
VD$STREAM
      4314**DCL      5156<>CALL
VD$STREAM.CURRENT
      4365**DCL      5135<>CALL
VD$STREAM.FILE_KEY
      4351**DCL      5133<<ASSIGN
VD$STREAM.FILE_KEY.REP#
      4353**DCL      5132>>IF
VD$STREAM.FILE_KEY.V$
      4353**DCL      5132>>CALL     5132>>CALL
VD$STREAM.NEXT
      4393**DCL      5137<>CALL
VD$STRING_HEADER
      4420**DCL      4837<>CALL     4939<>CALL
VD$STRING_HEADER.FLINK$
      4446**DCL      4835>>IF       4837>>CALL
VD$STRUCTURE_SPEC.FIT$
      4482**DCL      5142>>IF       5143>>CALL
VD$TABS
      4493**DCL      5174<>CALL
VD$TEXTC_REMOTE
      4547**DCL      4858<>CALL     4873<>CALL     4907<>CALL     4954<>CALL     4964<>CALL     5001<>CALL
      5095<>CALL     5115<>CALL     5132<>CALL     5189<>CALL     5209<>CALL     5219<>CALL     5229<>CALL
VD$TEXTC_REMOTE.LENGTH#
      4576**DCL      4578--IMP-SIZ  4858>>CALL     4873>>CALL     4907>>CALL     4954>>CALL     4964>>CALL
      5001>>CALL     5095>>CALL     5115>>CALL     5132>>CALL     5189>>CALL     5209>>CALL     5219>>CALL
      5229>>CALL
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:270  
VD$WINDOW_BLOCK.EDIT_BLOCK$
      4617**DCL      5147>>IF       5148>>CALL
VD$WINDOW_BLOCK.EVAL$
      4617**DCL      5150>>IF       5151>>CALL
VD$WINDOW_SPEC.EOFMARK$
      4682**DCL      5170>>IF       5171>>CALL     5171>>CALL
VD$WINDOW_SPEC.KEY_DEFINITION_BUFFER$
      4683**DCL      5176>>IF       5177>>CALL     5177>>CALL
VD$WINDOW_SPEC.OPERAND.EDIT_BLOCK$
      4669**DCL      5158>>IF       5159>>CALL
VD$WINDOW_SPEC.OPERAND.EVAL$
      4669**DCL      5161>>IF       5162>>CALL
VD$WINDOW_SPEC.OPERAND.INTREE$
      4669**DCL      5164>>IF       5165>>CALL
VD$WINDOW_SPEC.OPERAND.STREAM$
      4669**DCL      5155>>IF       5156>>CALL
VD$WINDOW_SPEC.RECORD_SET$
      4672**DCL      5167>>IF       5168>>CALL
VD$WINDOW_SPEC.TABS$
      4681**DCL      5173>>IF       5174>>CALL
VD$XLATE_LOCATIONS.FILE_KEY
      4730**DCL      5190<<ASSIGN
VD$XLATE_LOCATIONS.FILE_KEY.REP#
      4732**DCL      5189>>IF
VD$XLATE_LOCATIONS.FILE_KEY.V$
      4732**DCL      5189>>CALL     5189>>CALL
VD$XLATE_LOCATIONS.MX_ENTRIES#
      4719**DCL      5198>>IF
VD$XLATE_LOCATIONS.N_ENTRIES#
      4719**DCL      5198>>IF       5200<>CALL     5201>>DOINDEX
VD$XLATE_LOCATIONS.OBJECT.SIZE#
      4717**DCL      5195>>ASSIGN
VD$XLATE_LOCATIONS.PREFIX
      4745**DCL      5192<>CALL
VD$XLATE_LOCATIONS.XLATES
      4774**DCL      5195--ASSIGN   5195--ASSIGN
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:271  
VD$XLATE_LOCATIONS.XLATES.NEW_KEY
      4815**DCL      5230<<ASSIGN
VD$XLATE_LOCATIONS.XLATES.NEW_KEY.REP#
      4817**DCL      5229>>IF
VD$XLATE_LOCATIONS.XLATES.NEW_KEY.V$
      4817**DCL      5229>>CALL     5229>>CALL
VD$XLATE_LOCATIONS.XLATES.OLD_KEY_HI
      4800**DCL      5220<<ASSIGN
VD$XLATE_LOCATIONS.XLATES.OLD_KEY_HI.REP#
      4802**DCL      5219>>IF
VD$XLATE_LOCATIONS.XLATES.OLD_KEY_HI.V$
      4802**DCL      5219>>CALL     5219>>CALL
VD$XLATE_LOCATIONS.XLATES.OLD_KEY_LO
      4786**DCL      5210<<ASSIGN
VD$XLATE_LOCATIONS.XLATES.OLD_KEY_LO.REP#
      4788**DCL      5209>>IF
VD$XLATE_LOCATIONS.XLATES.OLD_KEY_LO.V$
      4788**DCL      5209>>CALL     5209>>CALL
VDG$ESCREECH
      2458**DCL-ENT  4832--CALL     5058--CALL     5200--CALL     5250--CALL     5261--CALL
VDG$OCLEAR_LOCATION
      2456**DCL-ENT  4910--CALL     5098--CALL     5135--CALL     5137--CALL     5192--CALL
VDG$OCLEAR_RANGE
      2455**DCL-ENT  4861--CALL     4876--CALL     4923--CALL     4925--CALL     4927--CALL     4933--CALL
      5004--CALL
VDG$OFREE
        35**PROC     4837--CALL     4841--CALL     4858--CALL     4873--CALL     4883--CALL     4886--CALL
      4893--CALL     4896--CALL     4907--CALL     4913--CALL     4918--CALL     4939--CALL     4945--CALL
      4954--CALL     4964--CALL     4968--CALL     4971--CALL     4982--CALL     4985--CALL     4992--CALL
      5001--CALL     5007--CALL     5013--CALL     5018--CALL     5025--CALL     5028--CALL     5034--CALL
      5037--CALL     5040--CALL     5046--CALL     5049--CALL     5061--CALL     5086--CALL     5095--CALL
      5102--CALL     5115--CALL     5119--CALL     5132--CALL     5143--CALL     5148--CALL     5151--CALL
      5156--CALL     5159--CALL     5162--CALL     5165--CALL     5168--CALL     5171--CALL     5174--CALL
      5177--CALL     5189--CALL     5209--CALL     5219--CALL     5229--CALL
VDG$OFREE_DCB
      2454**DCL-ENT  5082--CALL
PL6.E3A0      #006=VDG$OFREE File=VDG$OBJECTS.:VDA5TSI                           FRI 07/04/97 11:21 Page:272  
VD_6E.CMD_STREAM$
      2492**DCL      4880<<ASSIGN
VD_6E.ERR_HEAD$
      2493**DCL      2576--IMP-PTR  5270>>ASSIGN   5271>>ASSIGN
VD_6E.PORT_HEAD$
      2494**DCL      5070<<ASSIGN
VD_6E.PORT_TAIL$
      2494**DCL      5074<<ASSIGN
VD_MCB_LARGE
      2538**DCL      5260--ASSIGN
VD_MCB_LARGE.SEGMENT_BASE$
      2538**DCL      5258>>ASSIGN
VD_MCB_SMALL
      2542**DCL      5256--ASSIGN
VD_MCB_SMALL.SEGMENT_BASE$
      2542**DCL      5254>>ASSIGN
VD_OBJECTS.BUF
      2508**DCL      4839>>IF
VD_OBJECTS.SIZE
      2504**DCL      4830>>IF
VD_OBJECTS.STR
      2518**DCL      4835>>IF
X$DEALLOCATE
      2457**DCL-ENT  5265--CALL

PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:273  
     1678        1        /*T***********************************************************/
     1679        2        /*T*                                                         */
     1680        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1681        4        /*T*                                                         */
     1682        5        /*T***********************************************************/
     1683        6
     1684        7        /*D* NAME: VDG$OFREE_DCB
     1685        8            PARAMETERS:
     1686        9                DCB# - UBIN HALF HALIGNED containing DCB number.
     1687       10            INPUT:
     1688       11                VD_DCBS must contain info about the currently allocated
     1689       12                    DCBs.
     1690       13            OUTPUT:
     1691       14                DCB# may be added to VD_DCBS.
     1692       15            DESCRIPTION:
     1693       16                If DCB#'s name isn't one of ours, don't actually free the
     1694       17                    DCB, 'cause it's one set by the user and given to us
     1695       18                    to use for editing (ala M$SI on the invocation command
     1696       19                    line).
     1697       20                If there is any room in VD_DCBs, stash DCB# there; else
     1698       21                call M$RELDCB to release it.
     1699       22        */
     1700       23
     1701       24        VDG$OFREE_DCB: PROC (DCB#) ALTRET;
     1702       25
     1703       26
     1704       27        %INCLUDE VD_MACROS_M;
     1705     2242        %INCLUDE CP_6;
     1706     2323
     1707     2324    1   DCL DCB# UBIN HALF HALIGNED;
     1708     2325
     1709     2326
     1710     2327    1   DCL VDG$EREPORT_ERROR       ENTRY (1);
     1711     2328    1   DCL VDG$OALLOC              ENTRY (3) ALTRET;
     1712     2329
     1713     2330
     1714     2331    1   DCL B$TCB$ PTR SYMREF;
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:274  
     1715     2332        %VD$DCBS (NAME=VD_DCBS, STCLASS=SYMREF);
     1716     2347
     1717     2348        %FPT_RELDCB;
     1718     2362
     1719     2363
     1720     2364    1   DCL THE_DCB$ PTR;
     1721     2365    1   DCL VD_ERR$ PTR;
     1722     2366
     1723     2367
     1724     2368        %F$DCB (DCBN=THE$DCB, STCLASS="BASED(THE_DCB$)");
     1725     2425        %B$TCB (NAME=B$TCB, STCLASS="BASED(B$TCB$)");
     1726     2428        %B$ALT;
     1727     2436        %VD$ERR (NAME=VD$ERR, STCLASS="BASED(VD_ERR$)");
     1728     2489
     1729     2490
     1730     2491
     1731     2492    1           THE_DCB$ = DCBADDR(DCB#);
     1732     2493    1           IF THE$DCB.DCBNAME.L ~= %(LENGTHC(CHR_DCB_PREFIX)+2) THEN
     1733     2494    1              RETURN;
     1734     2495    1           IF SUBSTR(THE$DCB.DCBNAME.N, 0, %LENGTHC(CHR_DCB_PREFIX)) ~=
     1735     2496    1             %CHR_DCB_PREFIX THEN
     1736     2497    1              RETURN;
     1737     2498
     1738     2499    2           IF VD_DCBS.N_FREE# < %N_FREE_DCB_ENTRIES THEN DO;
     1739     2500    2              VD_DCBS.FREE_DCB# (VD_DCBS.N_FREE#) = DCB#;
     1740     2501    2              VD_DCBS.N_FREE# = VD_DCBS.N_FREE# + 1;
     1741     2502    2              END;
     1742     2503    2           ELSE DO;
     1743     2504    2              FPT_RELDCB.V.DCB# = DCB#;
     1744     2505    2              DCB# = 0;
     1745     2506    2              CALL M$RELDCB (FPT_RELDCB)
     1746     2507    3              WHENALTRETURN DO;
     1747     2508    3                 CALL VDG$OALLOC (%CLS_ERR, VD_ERR$)
     1748     2509    3                   ALTRET (OALLOC_FAILED);
     1749     2510    3                 VD$ERR.ERR = B$TCB.ALT$->B$ALT.ERR;
     1750     2511    3                 VD$ERR.FLAGLEV# = %FLV_WARN;
     1751     2512    3                 VD$ERR.DCB# = FPT_RELDCB.V.DCB#;
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:275  
     1752     2513    3                 CALL VDG$EREPORT_ERROR;
     1753     2514    3                 END;
     1754     2515    2              END;
     1755     2516
     1756     2517    1           RETURN;
     1757     2518
     1758     2519
     1759     2520
     1760     2521    1   OALLOC_FAILED: ;
     1761     2522    1           ALTRETURN;
     1762     2523
     1763     2524    1   END VDG$OFREE_DCB;
     1764     2525        %EOD;

PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:276  
--  Include file information  --

   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDG$OFREE_DCB.

   Procedure VDG$OFREE_DCB requires 74 words for executable code.
   Procedure VDG$OFREE_DCB requires 8 words of local(AUTO) storage.

PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:277  

 Object Unit name= VDG$OFREE_DCB                              File name= VDG$OBJECTS.:VDA5TOU
 UTS= JUL 04 '97 11:22:20.68 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none     4      4  VDG$OFREE_DCB
    2  RoData even  UTS      1      1  VDG$OFREE_DCB
    3   Proc  even  none    74    112  VDG$OFREE_DCB
    4  RoData even  none     2      2  VDG$OFREE_DCB

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  VDG$OFREE_DCB

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 VDG$OALLOC
         yes           Std       1 VDG$EREPORT_ERROR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:278  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                VD_DCBS
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 ROSID
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:279  


     1678        1        /*T***********************************************************/
     1679        2        /*T*                                                         */
     1680        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1681        4        /*T*                                                         */
     1682        5        /*T***********************************************************/
     1683        6
     1684        7        /*D* NAME: VDG$OFREE_DCB
     1685        8            PARAMETERS:
     1686        9                DCB# - UBIN HALF HALIGNED containing DCB number.
     1687       10            INPUT:
     1688       11                VD_DCBS must contain info about the currently allocated
     1689       12                    DCBs.
     1690       13            OUTPUT:
     1691       14                DCB# may be added to VD_DCBS.
     1692       15            DESCRIPTION:
     1693       16                If DCB#'s name isn't one of ours, don't actually free the
     1694       17                    DCB, 'cause it's one set by the user and given to us
     1695       18                    to use for editing (ala M$SI on the invocation command
     1696       19                    line).
     1697       20                If there is any room in VD_DCBs, stash DCB# there; else
     1698       21                call M$RELDCB to release it.
     1699       22        */
     1700       23
     1701       24        VDG$OFREE_DCB: PROC (DCB#) ALTRET;

     24  3 000000   000000 700200 xent  VDG$OFREE_D* TSX0  ! X66_AUTO_1
         3 000001   000010 000001                    ZERO    8,1

     1702       25
     1703       26
     1704       27        %INCLUDE VD_MACROS_M;
     1705     2242        %INCLUDE CP_6;
     1706     2323
     1707     2324    1   DCL DCB# UBIN HALF HALIGNED;
     1708     2325
     1709     2326
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:280  
     1710     2327    1   DCL VDG$EREPORT_ERROR       ENTRY (1);
     1711     2328    1   DCL VDG$OALLOC              ENTRY (3) ALTRET;
     1712     2329
     1713     2330
     1714     2331    1   DCL B$TCB$ PTR SYMREF;
     1715     2332        %VD$DCBS (NAME=VD_DCBS, STCLASS=SYMREF);
     1716     2347
     1717     2348        %FPT_RELDCB;
     1718     2362
     1719     2363
     1720     2364    1   DCL THE_DCB$ PTR;
     1721     2365    1   DCL VD_ERR$ PTR;
     1722     2366
     1723     2367
     1724     2368        %F$DCB (DCBN=THE$DCB, STCLASS="BASED(THE_DCB$)");
     1725     2425        %B$TCB (NAME=B$TCB, STCLASS="BASED(B$TCB$)");
     1726     2428        %B$ALT;
     1727     2436        %VD$ERR (NAME=VD$ERR, STCLASS="BASED(VD_ERR$)");
     1728     2489
     1729     2490
     1730     2491
     1731     2492    1           THE_DCB$ = DCBADDR(DCB#);

   2492  3 000002   000000 470400 4                  LDP0    0
         3 000003   000000 471500                    LDP1    0,,PR0
         3 000004   200003 473500                    LDP3    @DCB#,,AUTO
         3 000005   000100 100500                    MLR     fill='000'O
         3 000006   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         3 000007   200006 000004                    ADSC9   VD_ERR$+1,,AUTO          cn=0,n=4
         3 000010   200006 220100                    LDX0    VD_ERR$+1,,AUTO
         3 000011   100000 236110                    LDQ     0,X0,PR1
         3 000012   200004 756100                    STQ     THE_DCB$,,AUTO

     1732     2493    1           IF THE$DCB.DCBNAME.L ~= %(LENGTHC(CHR_DCB_PREFIX)+2) THEN

   2493  3 000013   200004 474500                    LDP4    THE_DCB$,,AUTO
         3 000014   400140 236100                    LDQ     96,,PR4
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:281  
         3 000015   037000 376003                    ANQ     15872,DU
         3 000016   006000 116003                    CMPQ    3072,DU
         3 000017   000021 600000 3                  TZE     s:2495

     1733     2494    1              RETURN;

   2494  3 000020   000000 702200 xent               TSX2  ! X66_ARET

     1734     2495    1           IF SUBSTR(THE$DCB.DCBNAME.N, 0, %LENGTHC(CHR_DCB_PREFIX)) ~=

   2495  3 000021   400140 236100                    LDQ     96,,PR4
         3 000022   000033 772000                    QRL     27
         3 000023   000037 376007                    ANQ     31,DL
         3 000024   040000 106500                    CMPC    fill='040'O
         3 000025   400140 200004                    ADSC9   96,,PR4                  cn=1,n=4
         3 000026   000000 000004 2                  ADSC9   0                        cn=0,n=4
         3 000027   000031 600000 3                  TZE     s:2499

     1735     2496    1             %CHR_DCB_PREFIX THEN
     1736     2497    1              RETURN;

   2497  3 000030   000000 702200 xent               TSX2  ! X66_ARET

     1737     2498
     1738     2499    2           IF VD_DCBS.N_FREE# < %N_FREE_DCB_ENTRIES THEN DO;

   2499  3 000031   000000 720000 xsym               LXL0    VD_DCBS
         3 000032   000024 100003                    CMPX0   20,DU
         3 000033   000047 605000 3                  TPL     s:2504

     1739     2500    2              VD_DCBS.FREE_DCB# (VD_DCBS.N_FREE#) = DCB#;

   2500  3 000034   000000 236000 xsym               LDQ     VD_DCBS
         3 000035   000022 736000                    QLS     18
         3 000036   000022 732000                    QRS     18
         3 000037   000001 736000                    QLS     1
         3 000040   000006 100500                    MLR     fill='000'O
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:282  
         3 000041   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         3 000042   000001 000002 xsym               ADSC9   VD_DCBS+1,Q              cn=0,n=2

     1740     2501    2              VD_DCBS.N_FREE# = VD_DCBS.N_FREE# + 1;

   2501  3 000043   000000 720000 xsym               LXL0    VD_DCBS
         3 000044   000001 621010                    EAX1    1,X0
         3 000045   000000 441000 xsym               SXL1    VD_DCBS

     1741     2502    2              END;

   2502  3 000046   000110 710000 3                  TRA     s:2517

     1742     2503    2           ELSE DO;

     1743     2504    2              FPT_RELDCB.V.DCB# = DCB#;

   2504  3 000047   000000 100500                    MLR     fill='000'O
         3 000050   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         3 000051   000002 000002 1                  ADSC9   FPT_RELDCB+2             cn=0,n=2

     1744     2505    2              DCB# = 0;

   2505  3 000052   000100 101400                    MRL     fill='000'O
         3 000053   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 000054   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

     1745     2506    2              CALL M$RELDCB (FPT_RELDCB)

   2506  3 000055   000000 630400 1                  EPPR0   FPT_RELDCB
         3 000056   460003 713400                    CLIMB   alt,+24579
         3 000057   400000 401760                    pmme    nvectors=1
         3 000060   000062 702000 3                  TSX2    s:2508
         3 000061   000110 710000 3                  TRA     s:2517

     1746     2507    3              WHENALTRETURN DO;

PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:283  
     1747     2508    3                 CALL VDG$OALLOC (%CLS_ERR, VD_ERR$)

   2508  3 000062   200005 630500                    EPPR0   VD_ERR$,,AUTO
         3 000063   200007 450500                    STP0    VD_ERR$+2,,AUTO
         3 000064   000001 236000 4                  LDQ     1
         3 000065   200006 756100                    STQ     VD_ERR$+1,,AUTO
         3 000066   200006 630500                    EPPR0   VD_ERR$+1,,AUTO
         3 000067   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000070   000000 701000 xent               TSX1    VDG$OALLOC
         3 000071   000111 702000 3                  TSX2    OALLOC_FAILED

     1748     2509    3                   ALTRET (OALLOC_FAILED);
     1749     2510    3                 VD$ERR.ERR = B$TCB.ALT$->B$ALT.ERR;

   2510  3 000072   000000 470400 xsym               LDP0    B$TCB$
         3 000073   000000 471500                    LDP1    0,,PR0
         3 000074   100102 236100                    LDQ     66,,PR1
         3 000075   200005 473500                    LDP3    VD_ERR$,,AUTO
         3 000076   300002 756100                    STQ     2,,PR3

     1750     2511    3                 VD$ERR.FLAGLEV# = %FLV_WARN;

   2511  3 000077   000002 220003                    LDX0    2,DU
         3 000100   200005 471500                    LDP1    VD_ERR$,,AUTO
         3 000101   100003 740100                    STX0    3,,PR1

     1751     2512    3                 VD$ERR.DCB# = FPT_RELDCB.V.DCB#;

   2512  3 000102   000002 221000 1                  LDX1    FPT_RELDCB+2
         3 000103   200005 471500                    LDP1    VD_ERR$,,AUTO
         3 000104   100004 741100                    STX1    4,,PR1

     1752     2513    3                 CALL VDG$EREPORT_ERROR;

   2513  3 000105   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000106   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         3 000107   000000 011000                    NOP     0
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:284  

     1753     2514    3                 END;

     1754     2515    2              END;

     1755     2516
     1756     2517    1           RETURN;

   2517  3 000110   000000 702200 xent               TSX2  ! X66_ARET

   2517  3 000111                       OALLOC_FAIL* null
     1757     2518
     1758     2519
     1759     2520
     1760     2521    1   OALLOC_FAILED: ;
     1761     2522    1           ALTRETURN;

   2522  3 000111   000000 702200 xent               TSX2  ! X66_AALT
     1762     2523
     1763     2524    1   END VDG$OFREE_DCB;
     1764     2525        %EOD;

PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:285  
--  Include file information  --

   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDG$OFREE_DCB.
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:286  

 **** Variables and constants ****

  ****  Section 001  Data  VDG$OFREE_DCB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(144)   r     1 FPT_RELDCB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DCB#                     *0-0-0/h UBIN(18)    r     1 DCB#
     4-0-0/w PTR         r     1 THE_DCB$                   5-0-0/w PTR         r     1 VD_ERR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC(72)    r     1 VD_DCBS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 THE$DCB                    0-0-0/w STRC(180)   r     1 VD$ERR


   Procedure VDG$OFREE_DCB requires 74 words for executable code.
   Procedure VDG$OFREE_DCB requires 8 words of local(AUTO) storage.
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:287  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:288  
          MINI XREF LISTING

B$ALT.CODE
      2430**DCL      2430--REDEF    2431--REDEF    2431--REDEF
B$ALT.ERR
      2431**DCL      2510>>ASSIGN
B$ALT.ERR.ERR#
      2432**DCL      2432--REDEF
B$ALT.EVID
      2431**DCL      2431--REDEF    2431--REDEF
B$TCB.ALT$
      2426**DCL      2510>>ASSIGN
B$TCB$
      2331**DCL      2426--IMP-PTR  2510>>ASSIGN
DCB#
      2324**DCL        24--PROC     2492--ASSIGN   2500>>ASSIGN   2504>>ASSIGN   2505<<ASSIGN
FPT_RELDCB
      2359**DCL      2506<>CALL
FPT_RELDCB.V
      2359**DCL      2359--DCLINIT
FPT_RELDCB.V.DCB#
      2359**DCL      2504<<ASSIGN   2512>>ASSIGN
M$RELDCB
      2257**DCL-ENT  2506--CALL
OALLOC_FAILED
      2517**LABEL    2508--CALLALT
THE$DCB.ACTPOS
      2401**DCL      2401--REDEF
THE$DCB.ARS#
      2375**DCL      2375--REDEF
THE$DCB.ATTR
      2394**DCL      2395--REDEF
THE$DCB.BORROW
      2409**DCL      2409--REDEF    2409--REDEF    2409--REDEF
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:289  
THE$DCB.DCBNAME.L
      2423**DCL      2423--IMP-SIZ  2493>>IF       2495>>IF
THE$DCB.DCBNAME.N
      2423**DCL      2495>>IF
THE$DCB.EOMCHAR#
      2379**DCL      2379--REDEF
THE$DCB.FLDID
      2404**DCL      2404--REDEF
THE$DCB.FORM$
      2398**DCL      2398--REDEF
THE$DCB.FSECT
      2414**DCL      2414--REDEF
THE$DCB.FSN#
      2391**DCL      2391--REDEF    2391--REDEF    2392--REDEF
THE$DCB.HEADER$
      2397**DCL      2397--REDEF
THE$DCB.IXTNSIZE#
      2395**DCL      2395--REDEF
THE$DCB.LASTSTA$
      2384**DCL      2384--REDEF
THE$DCB.LVL
      2410**DCL      2410--REDEF
THE$DCB.NAME#.C
      2385**DCL      2385--REDEF
THE$DCB.NOEOF
      2407**DCL      2407--REDEF
THE$DCB.NRECS#
      2396**DCL      2396--REDEF
THE$DCB.NRECX
      2415**DCL      2415--REDEF
THE$DCB.OHDR
      2407**DCL      2407--REDEF
THE$DCB.ORG#
      2390**DCL      2390--REDEF
THE$DCB.PRECNO
      2413**DCL      2413--REDEF
PL6.E3A0      #007=VDG$OFREE_DCB File=VDG$OBJECTS.:VDA5TSI                       FRI 07/04/97 11:22 Page:290  
THE$DCB.RCSZ
      2419**DCL      2419--REDEF
THE$DCB.RES#
      2386**DCL      2386--REDEF
THE$DCB.SETX
      2398**DCL      2398--REDEF
THE$DCB.TAB$
      2398**DCL      2398--REDEF
THE$DCB.TDA
      2412**DCL      2413--REDEF
THE$DCB.WSN#
      2386**DCL      2386--REDEF
THE_DCB$
      2364**DCL      2369--IMP-PTR  2492<<ASSIGN   2493>>IF       2495>>IF       2495>>IF
VD$ERR.DCB#
      2486**DCL      2512<<ASSIGN
VD$ERR.ERR
      2481**DCL      2510<<ASSIGN
VD$ERR.FLAGLEV#
      2486**DCL      2511<<ASSIGN
VDG$EREPORT_ERROR
      2327**DCL-ENT  2513--CALL
VDG$OALLOC
      2328**DCL-ENT  2508--CALL
VD_DCBS.FREE_DCB#
      2344**DCL      2500<<ASSIGN
VD_DCBS.N_FREE#
      2344**DCL      2499>>IF       2500>>ASSIGN   2501<<ASSIGN   2501>>ASSIGN
VD_ERR$
      2365**DCL      2444--IMP-PTR  2508<>CALL     2510>>ASSIGN   2511>>ASSIGN   2512>>ASSIGN

PL6.E3A0      #008=VDG$OCLEAR_RANGE File=VDG$OBJECTS.:VDA5TSI                    FRI 07/04/97 11:22 Page:291  
     1765        1        /*T***********************************************************/
     1766        2        /*T*                                                         */
     1767        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1768        4        /*T*                                                         */
     1769        5        /*T***********************************************************/
     1770        6
     1771        7        /*D* NAME: VDG$OCLEAR_RANGE
     1772        8            PARAMETERS:
     1773        9                VD$RANGE - VD$RANGE to clear.
     1774       10            INPUT:
     1775       11                None.
     1776       12            OUTPUT:
     1777       13                VD$RANGE will contain %CLEAR.
     1778       14            DESCRIPTION:
     1779       15                The VD$RANGE is cleared by calling VDG$OCLEAR_LOCATION twice.
     1780       16        */
     1781       17
     1782       18        VDG$OCLEAR_RANGE: PROC (VD$RANGE) ALTRET;
     1783       19
     1784       20
     1785       21        %INCLUDE VD_MACROS_M;
     1786     2236
     1787     2237
     1788     2238        %VD$RANGE (STCLASS=PARAM);
     1789     2307
     1790     2308
     1791     2309    1   DCL VDG$OCLEAR_LOCATION ENTRY (1) ALTRET;
     1792     2310
     1793     2311
     1794     2312    1           CALL VDG$OCLEAR_LOCATION (VD$RANGE.START)
     1795     2313    1           WHENALTRETURN
     1796     2314    2           DO;
     1797     2315    2              ALTRETURN;
     1798     2316    2              END;
     1799     2317
     1800     2318    1           CALL VDG$OCLEAR_LOCATION (VD$RANGE.ENDD)
     1801     2319    1           WHENALTRETURN
PL6.E3A0      #008=VDG$OCLEAR_RANGE File=VDG$OBJECTS.:VDA5TSI                    FRI 07/04/97 11:22 Page:292  
     1802     2320    2           DO;
     1803     2321    2              ALTRETURN;
     1804     2322    2              END;
     1805     2323
     1806     2324    1           RETURN;
     1807     2325
     1808     2326    1   END VDG$OCLEAR_RANGE;
     1809     2327        %EOD;

PL6.E3A0      #008=VDG$OCLEAR_RANGE File=VDG$OBJECTS.:VDA5TSI                    FRI 07/04/97 11:22 Page:293  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$OCLEAR_RANGE.

   Procedure VDG$OCLEAR_RANGE requires 18 words for executable code.
   Procedure VDG$OCLEAR_RANGE requires 6 words of local(AUTO) storage.

PL6.E3A0      #008=VDG$OCLEAR_RANGE File=VDG$OBJECTS.:VDA5TSI                    FRI 07/04/97 11:22 Page:294  

 Object Unit name= VDG$OCLEAR_RANGE                           File name= VDG$OBJECTS.:VDA5TOU
 UTS= JUL 04 '97 11:22:28.44 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    18     22  VDG$OCLEAR_RANGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  VDG$OCLEAR_RANGE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 VDG$OCLEAR_LOCATION
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #008=VDG$OCLEAR_RANGE File=VDG$OBJECTS.:VDA5TSI                    FRI 07/04/97 11:22 Page:295  


     1765        1        /*T***********************************************************/
     1766        2        /*T*                                                         */
     1767        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1768        4        /*T*                                                         */
     1769        5        /*T***********************************************************/
     1770        6
     1771        7        /*D* NAME: VDG$OCLEAR_RANGE
     1772        8            PARAMETERS:
     1773        9                VD$RANGE - VD$RANGE to clear.
     1774       10            INPUT:
     1775       11                None.
     1776       12            OUTPUT:
     1777       13                VD$RANGE will contain %CLEAR.
     1778       14            DESCRIPTION:
     1779       15                The VD$RANGE is cleared by calling VDG$OCLEAR_LOCATION twice.
     1780       16        */
     1781       17
     1782       18        VDG$OCLEAR_RANGE: PROC (VD$RANGE) ALTRET;

     18  0 000000   000000 700200 xent  VDG$OCLEAR_* TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

     1783       19
     1784       20
     1785       21        %INCLUDE VD_MACROS_M;
     1786     2236
     1787     2237
     1788     2238        %VD$RANGE (STCLASS=PARAM);
     1789     2307
     1790     2308
     1791     2309    1   DCL VDG$OCLEAR_LOCATION ENTRY (1) ALTRET;
     1792     2310
     1793     2311
     1794     2312    1           CALL VDG$OCLEAR_LOCATION (VD$RANGE.START)

   2312  0 000002   200003 630500                    EPPR0   @VD$RANGE,,AUTO
PL6.E3A0      #008=VDG$OCLEAR_RANGE File=VDG$OBJECTS.:VDA5TSI                    FRI 07/04/97 11:22 Page:296  
         0 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000004   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 000005   000007 702000 0                  TSX2    s:2315
         0 000006   000010 710000 0                  TRA     s:2318

     1795     2313    1           WHENALTRETURN
     1796     2314    2           DO;

     1797     2315    2              ALTRETURN;

   2315  0 000007   000000 702200 xent               TSX2  ! X66_AALT

     1798     2316    2              END;
     1799     2317
     1800     2318    1           CALL VDG$OCLEAR_LOCATION (VD$RANGE.ENDD)

   2318  0 000010   200003 236100                    LDQ     @VD$RANGE,,AUTO
         0 000011   000011 036003                    ADLQ    9,DU
         0 000012   200004 756100                    STQ     @VD$RANGE+1,,AUTO
         0 000013   200004 630500                    EPPR0   @VD$RANGE+1,,AUTO
         0 000014   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000015   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 000016   000020 702000 0                  TSX2    s:2321
         0 000017   000021 710000 0                  TRA     s:2324

     1801     2319    1           WHENALTRETURN
     1802     2320    2           DO;

     1803     2321    2              ALTRETURN;

   2321  0 000020   000000 702200 xent               TSX2  ! X66_AALT

     1804     2322    2              END;
     1805     2323
     1806     2324    1           RETURN;

   2324  0 000021   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #008=VDG$OCLEAR_RANGE File=VDG$OBJECTS.:VDA5TSI                    FRI 07/04/97 11:22 Page:297  
     1807     2325
     1808     2326    1   END VDG$OCLEAR_RANGE;
     1809     2327        %EOD;

PL6.E3A0      #008=VDG$OCLEAR_RANGE File=VDG$OBJECTS.:VDA5TSI                    FRI 07/04/97 11:22 Page:298  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$OCLEAR_RANGE.
PL6.E3A0      #008=VDG$OCLEAR_RANGE File=VDG$OBJECTS.:VDA5TSI                    FRI 07/04/97 11:22 Page:299  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @VD$RANGE                 *0-0-0/w STRC(648)   r     1 VD$RANGE


   Procedure VDG$OCLEAR_RANGE requires 18 words for executable code.
   Procedure VDG$OCLEAR_RANGE requires 6 words of local(AUTO) storage.
PL6.E3A0      #008=VDG$OCLEAR_RANGE File=VDG$OBJECTS.:VDA5TSI                    FRI 07/04/97 11:22 Page:300  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=VDG$OCLEAR_RANGE File=VDG$OBJECTS.:VDA5TSI                    FRI 07/04/97 11:22 Page:301  
          MINI XREF LISTING

VD$RANGE
      2246**DCL        18--PROC
VD$RANGE.ENDD
      2288**DCL      2318<>CALL
VD$RANGE.START
      2260**DCL      2312<>CALL
VDG$OCLEAR_LOCATION
      2309**DCL-ENT  2312--CALL     2318--CALL

PL6.E3A0      #009=VDG$OCLEAR_LOCATION File=VDG$OBJECTS.:VDA5TSI                 FRI 07/04/97 11:22 Page:302  
     1810        1        /*T***********************************************************/
     1811        2        /*T*                                                         */
     1812        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1813        4        /*T*                                                         */
     1814        5        /*T***********************************************************/
     1815        6
     1816        7        /*D* NAME: VDG$OCLEAR_LOCATION
     1817        8            PARAMETERS:
     1818        9                VD$LOCATION - VD$LOCATION to clear.
     1819       10            INPUT:
     1820       11                None.
     1821       12            OUTPUT:
     1822       13                VD$LOCATION will contain %CLEAR.
     1823       14            DESCRIPTION:
     1824       15                The VD$LOCATION is cleared by calling %CLEARKEY for
     1825       16                each element of the KEY array.
     1826       17        */
     1827       18
     1828       19        VDG$OCLEAR_LOCATION: PROC (VD$LOCATION) ALTRET;
     1829       20
     1830       21
     1831       22        %INCLUDE VD_MACROS_M;
     1832     2237
     1833     2238
     1834     2239        %VD$LOCATION (STCLASS=PARAM);
     1835     2267
     1836     2268
     1837     2269    1   DCL VDG$OFREE           ENTRY (1) ALTRET;
     1838     2270
     1839     2271    1   DCL KEY_INDEX UBIN;
     1840     2272
     1841     2273
     1842     2274        %VD$TEXTC_REMOTE;
     1843     2335
     1844     2336
     1845     2337    2           DO KEY_INDEX = 0 TO %MX_LOCATION_LEVELS - 1;
     1846     2338                   %CLEARKEY (KEY=VD$LOCATION.KEY, INDX=KEY_INDEX);
PL6.E3A0      #009=VDG$OCLEAR_LOCATION File=VDG$OBJECTS.:VDA5TSI                 FRI 07/04/97 11:22 Page:303  
     1847     2348    2              END;
     1848     2349
     1849     2350    1           VD$LOCATION = %CLEAR;
     1850     2351
     1851     2352    1           RETURN;
     1852     2353
     1853     2354    1   END VDG$OCLEAR_LOCATION;

PL6.E3A0      #009=VDG$OCLEAR_LOCATION File=VDG$OBJECTS.:VDA5TSI                 FRI 07/04/97 11:22 Page:304  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$OCLEAR_LOCATION.

   Procedure VDG$OCLEAR_LOCATION requires 34 words for executable code.
   Procedure VDG$OCLEAR_LOCATION requires 8 words of local(AUTO) storage.

    No errors detected in file VDG$OBJECTS.:VDA5TSI    .

PL6.E3A0      #009=VDG$OCLEAR_LOCATION File=VDG$OBJECTS.:VDA5TSI                 FRI 07/04/97 11:22 Page:305  

 Object Unit name= VDG$OCLEAR_LOCATION                        File name= VDG$OBJECTS.:VDA5TOU
 UTS= JUL 04 '97 11:22:32.56 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    34     42  VDG$OCLEAR_LOCATION

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  VDG$OCLEAR_LOCATION

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 VDG$OFREE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #009=VDG$OCLEAR_LOCATION File=VDG$OBJECTS.:VDA5TSI                 FRI 07/04/97 11:22 Page:306  


     1810        1        /*T***********************************************************/
     1811        2        /*T*                                                         */
     1812        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1813        4        /*T*                                                         */
     1814        5        /*T***********************************************************/
     1815        6
     1816        7        /*D* NAME: VDG$OCLEAR_LOCATION
     1817        8            PARAMETERS:
     1818        9                VD$LOCATION - VD$LOCATION to clear.
     1819       10            INPUT:
     1820       11                None.
     1821       12            OUTPUT:
     1822       13                VD$LOCATION will contain %CLEAR.
     1823       14            DESCRIPTION:
     1824       15                The VD$LOCATION is cleared by calling %CLEARKEY for
     1825       16                each element of the KEY array.
     1826       17        */
     1827       18
     1828       19        VDG$OCLEAR_LOCATION: PROC (VD$LOCATION) ALTRET;

     19  0 000000   000000 700200 xent  VDG$OCLEAR_* TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

     1829       20
     1830       21
     1831       22        %INCLUDE VD_MACROS_M;
     1832     2237
     1833     2238
     1834     2239        %VD$LOCATION (STCLASS=PARAM);
     1835     2267
     1836     2268
     1837     2269    1   DCL VDG$OFREE           ENTRY (1) ALTRET;
     1838     2270
     1839     2271    1   DCL KEY_INDEX UBIN;
     1840     2272
     1841     2273
PL6.E3A0      #009=VDG$OCLEAR_LOCATION File=VDG$OBJECTS.:VDA5TSI                 FRI 07/04/97 11:22 Page:307  
     1842     2274        %VD$TEXTC_REMOTE;
     1843     2335
     1844     2336
     1845     2337    2           DO KEY_INDEX = 0 TO %MX_LOCATION_LEVELS - 1;

   2337  0 000002   200004 450100                    STZ     KEY_INDEX,,AUTO
         0 000003   000032 710000 0                  TRA     s:2348+3

     1846     2338                   %CLEARKEY (KEY=VD$LOCATION.KEY, INDX=KEY_INDEX);

   2345  0 000004   200004 235100                    LDA     KEY_INDEX,,AUTO
         0 000005   000001 735000                    ALS     1
         0 000006   200003 470500                    LDP0    @VD$LOCATION,,AUTO
         0 000007   000000 720105                    LXL0    0,AL,PR0
         0 000010   000002 100003                    CMPX0   2,DU
         0 000011   000022 601000 0                  TNZ     s:2346+1

   2345  0 000012   000001 471505                    LDP1    1,AL,PR0
         0 000013   200006 451500                    STP1    KEY_INDEX+2,,AUTO
         0 000014   200006 630500                    EPPR0   KEY_INDEX+2,,AUTO
         0 000015   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000016   000000 701000 xent               TSX1    VDG$OFREE
         0 000017   000021 702000 0                  TSX2    s:2346
         0 000020   000022 710000 0                  TRA     s:2346+1

   2346  0 000021   000000 702200 xent               TSX2  ! X66_AALT

   2346  0 000022   200004 235100                    LDA     KEY_INDEX,,AUTO
         0 000023   000001 735000                    ALS     1
         0 000024   200003 470500                    LDP0    @VD$LOCATION,,AUTO
         0 000025   000000 450105                    STZ     0,AL,PR0
         0 000026   000001 450105                    STZ     1,AL,PR0

     1847     2348    2              END;

   2348  0 000027   200004 236100                    LDQ     KEY_INDEX,,AUTO
         0 000030   000001 036007                    ADLQ    1,DL
PL6.E3A0      #009=VDG$OCLEAR_LOCATION File=VDG$OBJECTS.:VDA5TSI                 FRI 07/04/97 11:22 Page:308  
         0 000031   200004 756100                    STQ     KEY_INDEX,,AUTO
         0 000032   200004 235100                    LDA     KEY_INDEX,,AUTO
         0 000033   000004 115007                    CMPA    4,DL
         0 000034   000004 602000 0                  TNC     s:2345

     1848     2349
     1849     2350    1           VD$LOCATION = %CLEAR;

   2350  0 000035   200003 470500                    LDP0    @VD$LOCATION,,AUTO
         0 000036   000100 100400                    MLR     fill='000'O
         0 000037   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000040   000000 000044                    ADSC9   0,,PR0                   cn=0,n=36

     1850     2351
     1851     2352    1           RETURN;

   2352  0 000041   000000 702200 xent               TSX2  ! X66_ARET
     1852     2353
     1853     2354    1   END VDG$OCLEAR_LOCATION;

PL6.E3A0      #009=VDG$OCLEAR_LOCATION File=VDG$OBJECTS.:VDA5TSI                 FRI 07/04/97 11:22 Page:309  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$OCLEAR_LOCATION.
PL6.E3A0      #009=VDG$OCLEAR_LOCATION File=VDG$OBJECTS.:VDA5TSI                 FRI 07/04/97 11:22 Page:310  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @VD$LOCATION               4-0-0/w UBIN        r     1 KEY_INDEX
    *0-0-0/w STRC(324)   r     1 VD$LOCATION

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE


   Procedure VDG$OCLEAR_LOCATION requires 34 words for executable code.
   Procedure VDG$OCLEAR_LOCATION requires 8 words of local(AUTO) storage.

    No errors detected in file VDG$OBJECTS.:VDA5TSI    .
PL6.E3A0      #009=VDG$OCLEAR_LOCATION File=VDG$OBJECTS.:VDA5TSI                 FRI 07/04/97 11:22 Page:311  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=VDG$OCLEAR_LOCATION File=VDG$OBJECTS.:VDA5TSI                 FRI 07/04/97 11:22 Page:312  
          MINI XREF LISTING

KEY_INDEX
      2271**DCL      2337<<DOINDEX  2345>>IF       2345>>CALL     2345>>CALL     2346>>ASSIGN
VD$LOCATION
      2247**DCL        19--PROC     2350<<ASSIGN
VD$LOCATION.KEY
      2261**DCL      2346<<ASSIGN
VD$LOCATION.KEY.REP#
      2263**DCL      2345>>IF
VD$LOCATION.KEY.V$
      2263**DCL      2345>>CALL     2345>>CALL
VD$TEXTC_REMOTE
      2299**DCL      2345<>CALL
VD$TEXTC_REMOTE.LENGTH#
      2328**DCL      2330--IMP-SIZ  2345>>CALL
VDG$OFREE
      2269**DCL-ENT  2345--CALL
