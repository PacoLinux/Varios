VERSION A05

PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:1    
        1        1        /*M* VDP$IMP - DEFINE a KEYIN key */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        /*P* NAME:  VDP$IMP
       10       10            PURPOSE:
       11       11            DESCRIPTION:
       12       12        */
       13       13
       14       14        /*D* NAME:  VDP$IMP
       15       15            PARAMETERS:
       16       16            INPUT:
       17       17            OUTPUT:
       18       18            DESCRIPTION:
       19       19        */
       20       20
       21       21        VDP$IMP: PROC ( XUI_IMP )
       22       22              ALTRET;
       23       23
       24       24        %INCLUDE CP_6;
       25      105        %INCLUDE KV$INPFNC;
       26      664        %INCLUDE KV$PRM;
       27      877        %INCLUDE VDP_MACRO_C;
       28      903        %INCLUDE VD_PERR_C;
       29     1051
       30     1052        %SET LISTMAC='1'B;
       31     1053        %XUI_IMP ( STCLASS = PARAM );
              1054        %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
              1055        %IF(SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT')
              1055            ;
              1058        %ELSE;
              1059        %LSET INIT=CHARTEXT('/*');
              1060        %LSET EINIT=CHARTEXT('*/');
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:2    
              1061        %ENDIF;
              1062    1   DCL 1 FPTN STCLASS,2 IMP_BUFFER_ VECTOR %INIT(VECTOR(IMP_BUFFER))%EINIT,2 %CHARTEXT(
              1062            'IMP_BUFFER_OFFSET') SBIN %INIT
              1063    1   (IMP_BUFFER_OFFSET)%EINIT,2 KEY_NAME$ PTR %INIT(ADDR(KEY_NAME))%EINIT,2 KEY_VALUE$
              1063            PTR %INIT(ADDR(KEY_VALUE))%EINIT,2 PRIMARY# BIT
              1064    1   (1)%INIT(PRIMARY)%EINIT,2 SECONDARY# BIT(1)%INIT(SECONDARY)%EINIT,2 INPUT_OPTION#
              1064            BIT(1)%INIT(INPUT_OPTION)%EINIT,2 FLUSH# BIT(1
              1065    1   )%INIT(FLUSH)%EINIT,2 CTRSTR# BIT(1)%INIT(CTRSTR)%EINIT,2 FNCKEY# BIT(1)%INIT(FNCKEY
              1065            )%EINIT,2 * BIT(12)%INIT('0'B)%EINIT,2
              1066    1   IMPDCBNUM# UBIN HALF HALIGNED %INIT(DCBNUM(IMPDCB))%EINIT,
              1067        %VLP_ERRCODE(LVL=2,FPTN=ERRCODE,STCLASS=" ");
              1068        %LSET LISTDIR='0'B;
              1081    1   2 ERRCODE ALIGNED,
              1095    1   3 FCG  BIT(12)/*('0'B)/**/ ,
              1108    1   3 MID  BIT(6)/*('0'B)/**/ ,3 MON  BIT(1)/*('0'B)/**/ ,
              1109    1   3 ERR#  UBIN(14)/*(0)/**/ UNAL,3 SEV  UBIN(3)/*(0)/**/
              1110    1   UNAL ;
              1112    1   DCL 1 FPTN%CHARTEXT('_FLG ')REDEF FPTN,2 *(0:4)SBIN,2 F BIT(18),2 *(0:9)CHAR(1);
       32     1114        %SET LISTMAC='0'B;
       33     1115
       34     1116        /* %VLP_NAMEV ( FPTN = KEY_NAME,
       35     1117                     STCLASS = "BASED ( XUI_IMP.KEY_NAME$ )" );
       36     1118        %VLP_NAMEV ( FPTN = KEY_VALUE,
       37     1119                     STCLASS = "BASED ( XUI_IMP.KEY_VALUE$ )" ); */
       38     1120    1     DCL 1 KEY_NAME BASED ( XUI_IMP.KEY_NAME$ ) ALIGNED,
       39     1121    1           2 LENGTH UBIN BYTE CALIGNED,
       40     1122    1           2 BYTES(0:0) UBIN BYTE CALIGNED,
       41     1123    1           2 TEXT REDEF BYTES CHAR(KEY_NAME.LENGTH);
       42     1124    1     DCL 1 KEY_VALUE BASED ( XUI_IMP.KEY_VALUE$ ) ALIGNED,
       43     1125    1           2 LENGTH UBIN HALF CALIGNED,
       44     1126    1           2 BYTES(0:0) UBIN BYTE CALIGNED,
       45     1127    1           2 TEXT REDEF BYTES CHAR(KEY_VALUE.LENGTH);
       46     1128
       47     1129        %B$TCB;
       48     1132        %B$ALT;
       49     1140    1     DCL B$TCB$ PTR SYMREF;
       50     1141        %F$DCB;
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:3    
       51     1198        %VLP_ERRCODE ( FPTN = XUI_ERRCODE,
       52     1199                       FCG = 'VD',
       53     1200                       MID = 'G',
       54     1201                       STCLASS = CONSTANT );
       55     1246
       56     1247        %FPT_OPEN (FPTN=OPEN_INP_FUNC, ORG=TERMINAL, ASN=DEVICE,
       57     1248            RES='ME', FUN=CREATE);
       58     1357        %FPT_WRITE (FPTN=WRITE_INP_FUNC, TRANS=YES, VFC=YES);
       59     1388
       60     1389        %SET LISTMAC = '1'B;
       61     1390        %KV$PRM_DCLINPFNC;
              1391        %LSET LISTDIR='0'B;
              1407    1   DCL 1 KV$PRM_DCLINPFNC HALIGNED BASED,
              1412    1   2 TYP UBIN BYTE CALIGNED /*(0)*/,2 * UBIN BYTE CALIGNED /*(0)*/,
              1416    1   2 LNG,3 BYT1 UBIN BYTE UNAL /*(0)*/,3 * BIT(1)/*('0'B)*/,3 BYT2 UBIN(8)UNAL /*(0)*/,
              1418    1   2 INT1_TKN UBIN BYTE CALIGNED /*(0)*/,2 INT2_TKN UBIN BYTE CALIGNED /*(0)*/,2 ID_TKN
              1418            UBIN BYTE
              1419    1   CALIGNED /*(0)*/,
              1421    1   2 * BIT(3)/*('0'B)*/,
              1425    1   2 INT1_TKNTYP UBIN(3)UNAL /*(0)*/,2 INT2_TKNTYP UBIN(3)UNAL /*(0)*/,
              1427    1   2 * BIT(2)/*('0'B)*/,
              1431    1   2 ID_TKNTYP UBIN(3)UNAL /*(0)*/,2 INPFNCTYP UBIN(4)UNAL /*(0)*/ ;
       62     1433    1     DCL PAD$BYTE UBIN BYTE CALIGNED BASED;
       63     1434        %KV$INPOPR;
              1435        %LSET LISTDIR='0'B;
              1442    1   DCL KV$INPOPR_DUMMY ALIGNED BASED CHAR(KV$INPOPR.ID);DCL 1 KV$INPOPR REDEF
              1442            KV$INPOPR_DUMMY,
              1444    1   2 * BIT(1), 2 IMD BIT(1),2 RED BIT(1),2 CHN BIT(1),2 ACK BIT(1),2 TYP UBIN(4)UNAL,2
              1444            ID UBIN BYTE CALIGNED,2 CMPCOD REDEF ID UBIN BYTE
              1445    1   CALIGNED,2 INPOPRX REDEF ID UBIN BYTE CALIGNED,2 PRMID REDEF ID UBIN BYTE CALIGNED;
              1445            DCL 1 KV$INPOPR_MSC
              1446    1   REDEF KV$INPOPR_DUMMY,2 * CHAR(1),2 * BIT(1), 2 DLTINP BIT(1),2 DLTRED BIT(1),2
              1446            DLTOTP BIT(1),2 ABRRED BIT(1);
              1448    1   DCL 1 KV$INPOPR_TXT REDEF KV$INPOPR_DUMMY,2 * CHAR(1),2 * BIT(1), 2 ECH BIT(1),2 TRN
              1448            BIT(1),2 VRT BIT(1),2 * BIT(3),
              1453    1   2 DSP UBIN(2)UNAL,2 L UBIN BYTE CALIGNED,2 T CHAR(KV$INPOPR_TXT.L);
       64     1460
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:4    
       65     1461        %KV$PRM_RLSINPFNC;
              1462        %LSET LISTDIR='0'B;
              1478    1   DCL 1 KV$PRM_RLSINPFNC HALIGNED BASED,
              1483    1   2 TYP UBIN BYTE CALIGNED /*(0)*/,2 LNG UBIN BYTE CALIGNED /*(0)*/,2 ID_TKN UBIN BYTE
              1483            CALIGNED /*
              1484    1   (0)*/,
              1486    1   2 * BIT(1)/*('0'B)*/,
              1488    1   2 ID_TKNTYP UBIN(3)UNAL /*(0)*/,2 INPFNCTYP UBIN(4)UNAL /*(0)*/,2 ALLINPFNCTYP BIT(1
              1488            )/*('0'B
              1489    1   )*/ ;
       66     1491        %SET LISTINC = '1'B;
       67     1492        %INCLUDE VC_EQUS;
        1+    1493        /*M*   VC_EQUS- IMP EQU INCLUDE FILE
        2+    1494                                                                                      */
        3+    1495        /*T***********************************************************/
        4+    1496        /*T*                                                         */
        5+    1497        /*T* Copyright (c) Bull HN Information Systems Inc., 1994    */
        6+    1498        /*T*                                                         */
        7+    1499        /*T***********************************************************/
        8+    1500        /*
        9+    1501                          IMP PARSER(NODE) EQUS
       10+    1502                                                                                      */
       11+    1503        /*
       12+    1504                          COMMAND EQUS
       13+    1505                                                                                      */
       14+    1506               %EQU VC_ADD=CHARTEXT('1/* ADD */');
       15+    1507               %EQU VC_DELETE=CHARTEXT('2/* DELETE */');
       16+    1508               %EQU VC_END=CHARTEXT('3/* END */');
       17+    1509               %EQU VC_QUIT=CHARTEXT('4/* QUIT */');
       18+    1510               %EQU VC_ERRORINFO=CHARTEXT('5/* ? */');
       19+    1511               %EQU VC_HELP=CHARTEXT('6/* HELP */');
       20+    1512               %EQU VC_ALLINFO=CHARTEXT('7/* ?? */');
       21+    1513               %EQU VC_SPELL=CHARTEXT('8/* SPELL */');
       22+    1514        /*
       23+    1515                          FUNCTION TABLE TYPE EQUS
       24+    1516                                                                                      */
       25+    1517               %EQU VC_ALL=CHARTEXT('512/* ALL */');
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:5    
       26+    1518               %EQU VC_PRIMARY_ESCAPE=CHARTEXT('2/* PRIMARY_ESCAPE */');
       27+    1519               %EQU VC_SECONDARY_ESCAPE=CHARTEXT('3/* SECONDARY_ESCAPE */');
       28+    1520               %EQU VC_SPECIAL_CHARACTER=CHARTEXT('4/* SPECIAL_CHARACTER */');
       29+    1521               %EQU VC_CTR_CHAR = CHARTEXT('5 /* CONTROL CHAR */');
       30+    1522               %EQU VC_FNCKEY  = CHARTEXT('6 /* FUNCTION KEY */');
       31+    1523        /*
       32+    1524               COMMAND OPTION EQUS
       33+    1525                                                                                      */
       34+    1526               %EQU VC_IDENTIFIER=CHARTEXT('5/* IDENTIFIER */');
       35+    1527               %EQU VC_INTRODUCER=CHARTEXT('6/* INTRODUCER */');
       36+    1528               %EQU VC_INPUT_OPERATORS=CHARTEXT('7/* INPUT_OPERATORS */');
       37+    1529               %EQU VC_OPERATOR=CHARTEXT('0/* OPERATOR */');
       38+    1530        /*
       39+    1531                         INPUT OPERATOR OPTIONS EQUS
       40+    1532                                                                                      */
       41+    1533               %EQU VC_QSTRING=CHARTEXT('1/* QSTRING */');
       42+    1534               %EQU VC_SSTRING=CHARTEXT('2/* SSTRING */');
       43+    1535               %EQU VC_ACKNOWLEDGE=CHARTEXT('3/* ACKNOWLEDGE */');
       44+    1536               %EQU VC_BUFFER=CHARTEXT('4/* BUFFER */');
       45+    1537               %EQU VC_ECHO=CHARTEXT('5/* ECHO */');
       46+    1538               %EQU VC_IMMEDIATE=CHARTEXT('6/* IMMEDIATE */');
       47+    1539               %EQU VC_INPUT_FUNCTION=CHARTEXT('7/* INPUT_FUNCTION */');
       48+    1540               %EQU VC_READ=CHARTEXT('8/* READ */');
       49+    1541               %EQU VC_TYPEAHEAD_BUFFER=CHARTEXT('9/* TYPEAHEAD_BUFFER */');
       50+    1542               %EQU VC_WRITE=CHARTEXT('10/* WRITE */');
       51+    1543               %EQU VC_WRITE_TRANSPARENT=CHARTEXT('14/* WRITETRANSPARENT */');
       52+    1544               %EQU VC_WRITE_VIRTUAL=CHARTEXT('15/* WRITEVIRTUAL */');
       53+    1545        /*
       54+    1546                        CHARACTER MNEMONICS
       55+    1547                                                                                      */
       56+    1548        /* */
       57+    1549               %EQU VC_MNEMONIC=CHARTEXT('11/* MNEMONIC */');
       58+    1550               %EQU VC_OSTRING=CHARTEXT('12/* OSTRING */');
       59+    1551               %EQU VC_XSTRING=CHARTEXT('13/* XSTRING */');
       60+    1552        /* */
       61+    1553               %EQU VC_BREAK = CHARTEXT('1 /* BREAK KEY */');
       62+    1554               %EQU VC_OVRRUN = CHARTEXT('2 /* OVERRUN ERROR */');
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:6    
       63+    1555               %EQU VC_PARITY = CHARTEXT('4 /* PARITY ERROR */');
       64+    1556               %EQU VC_NUL=CHARTEXT('11/* NULL */');
       65+    1557               %EQU VC_SOH=CHARTEXT('12/* SOH */');
       66+    1558               %EQU VC_STX=CHARTEXT('13/* STX */');
       67+    1559               %EQU VC_ETX=CHARTEXT('14/* ETX */');
       68+    1560               %EQU VC_EOT=CHARTEXT('15/* EOT */');
       69+    1561               %EQU VC_ENQ=CHARTEXT('16/* ENQ */');
       70+    1562               %EQU VC_ACK=CHARTEXT('17/* ACK */');
       71+    1563               %EQU VC_BEL=CHARTEXT('18/* BEL */');
       72+    1564               %EQU VC_BS=CHARTEXT('19/* BS */');
       73+    1565               %EQU VC_HT=CHARTEXT('20/* HT */');
       74+    1566               %EQU VC_LF=CHARTEXT('21/* LF */');
       75+    1567               %EQU VC_VT=CHARTEXT('22/* VT */');
       76+    1568               %EQU VC_FF=CHARTEXT('23/* FF */');
       77+    1569               %EQU VC_CR=CHARTEXT('24/* CR */');
       78+    1570               %EQU VC_SO=CHARTEXT('25/* SO */');
       79+    1571               %EQU VC_SI=CHARTEXT('26/* SI */');
       80+    1572               %EQU VC_DLE=CHARTEXT('27/* DLE */');
       81+    1573               %EQU VC_DC1=CHARTEXT('28/* DC1 */');
       82+    1574               %EQU VC_DC2=CHARTEXT('29/* DC2 */');
       83+    1575               %EQU VC_DC3=CHARTEXT('30/* DC3 */');
       84+    1576               %EQU VC_DC4=CHARTEXT('31/* DC4 */');
       85+    1577               %EQU VC_NAK=CHARTEXT('32/* NAK */');
       86+    1578               %EQU VC_SYN=CHARTEXT('33/* SYN */');
       87+    1579               %EQU VC_ETB=CHARTEXT('34/* ETB */');
       88+    1580               %EQU VC_CAN=CHARTEXT('35/* CAN */');
       89+    1581               %EQU VC_EM=CHARTEXT('36/* EM */');
       90+    1582               %EQU VC_SUB=CHARTEXT('37/* SUB */');
       91+    1583               %EQU VC_ESC=CHARTEXT('38/* ESC */');
       92+    1584               %EQU VC_FS=CHARTEXT('39/* FS */');
       93+    1585               %EQU VC_GS=CHARTEXT('40/* GS */');
       94+    1586               %EQU VC_RS=CHARTEXT('41/* RS */');
       95+    1587               %EQU VC_US=CHARTEXT('42/* US */');
       96+    1588               %EQU VC_SP=CHARTEXT('43/* SP */');
       97+    1589               %EQU VC_DEL=CHARTEXT('44/* DEL */');
       98+    1590               %EQU VC_FM = CHARTEXT('38 /*FIELD MARK*/');
       99+    1591        /*
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:7    
      100+    1592               IMP PROGRAM EQUS
      101+    1593                                                                                      */
      102+    1594        /*
      103+    1595               EQUS FOR TABLE TYPE AND OPERATION TYPE THAT IS SENT DOWN
      104+    1596               TO THE FRONT END
      105+    1597                                                                                      */
      106+    1598               %EQU VC_ADD#=CHARTEXT('0/* ADD# */');
      107+    1599               %EQU VC_DELE# = CHARTEXT('1/* DELE# */');
      108+    1600               %EQU VC_PRIMARY_INTRO#=CHARTEXT('0/* PRIMARY_INTRO# */');
      109+    1601               %EQU VC_SECONDARY_INTRO#=CHARTEXT('1/* SECONDARY_INTRO# */');
      110+    1602               %EQU VC_PRIMARY_IDENT#=CHARTEXT('2/* PRIMARY_IDENT */');
      111+    1603               %EQU VC_SECONDARY_IDENT#=CHARTEXT('3/* SECONDARY_IDENT# */');
      112+    1604               %EQU VC_SPECIAL#=CHARTEXT('4/* SPECIAL# */');
      113+    1605               %EQU VC_ALL_PRIMARY#=CHARTEXT('5/* ALL_PRIMARY# */');
      114+    1606               %EQU VC_ALL_SECONDARY#=CHARTEXT('6/* ALL_SECONDARY# */');
      115+    1607               %EQU VC_ALL_SPECIAL#=CHARTEXT('7/* ALL_SPECIAL# */');
      116+    1608               %EQU VC_ALL#=CHARTEXT('8/* ALL# */');
      117+    1609        /*
      118+    1610               A FEW CONVERSION CONSTANTS (NODE CODE TO TABLE TYPE)
      119+    1611                                                                                      */
      120+    1612               %EQU VC_ALL_CONVERSION#=CHARTEXT('3/* ALL_CONVERSION# */');
      121+    1613               %EQU VC_MNEMONIC_DIFF#=CHARTEXT('11/* MNEMONIC_DIFF# */');
      122+    1614               %EQU VC_INTRO_CONVERSION#=CHARTEXT('2/* INTRO_CONVERSION# */');
      123+    1615        /*
      124+    1616               INPUT OPERATOR OPERATION TYPES
      125+    1617                                                                                      */
      126+    1618               %EQU VC_WRITE#=CHARTEXT('3/* WRITE# */');
      127+    1619               %EQU VC_TYPAHEAD#=CHARTEXT('2/* TYPE AHEAD# */');
      128+    1620               %EQU VC_READBUF#=CHARTEXT('1/* READBUF#*/');
      129+    1621               %EQU VC_INPFNC#=CHARTEXT('0/* INPUT FUNCTION# */');
      130+    1622        /*
      131+    1623               IMP VFC CODE AND IMP T CODE
      132+    1624                                                                                      */
      133+    1625               %EQU VC_IMP_VFC = CHARTEXT('25/* IMP_VFC */');
      134+    1626        /*
      135+    1627          EQUS ADDED TO SUPPORT VDH (VALUES DETERMINED BY KV$INPFNC
      136+    1628          FOUND IN VDH CODE.
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:8    
      137+    1629        */
      138+    1630        /*
      139+    1631              EQUIVALENTS -INTRO AND IDENT TOKEN TYPES
      140+    1632        */
      141+    1633        %EQU  VC_TYP_CHAR#   =  %CHARTEXT('0 /* CHARACTER */');
      142+    1634        %EQU  VC_TYP_FNCKEY# =  %CHARTEXT('2 /* FUNCTION KEY */');
      143+    1635        %EQU  VC_TYP_CTR#    =  %CHARTEXT('1 /* CONTROL SEQUENCE */');
      144+    1636        %EQU  VC_TYP_NONE# =  %CHARTEXT('3 /* NONE SPECIFIED */');
      145+    1637        /*
      146+    1638                DCL AND RLS INPFNC STRUCTURE TYPE CONSTANTS.
      147+    1639        */
      148+    1640        %EQU  VC_DCLINPFNC# = %CHARTEXT('4 /* DCLINPFNC STRUCTURE */');
      149+    1641        %EQU  VC_RLSINPFNC# = %CHARTEXT('10 /*RLSINPFNC STRUCTURE */');
      150+    1642        %EQU  VC_INPOPRTEXT#= %CHARTEXT('9 /* TEXT INPUT OPERATOR */');
       68     1643        %SET LISTINC = '0'B;
       69     1644        %SET LISTMAC = '0'B;
       70     1645
       71     1646    1     DCL 1 IMP_BUF ALIGNED,
       72     1647    1           2 * CHAR(1) CALIGNED,
       73     1648    1           2 VFC UBIN BYTE CALIGNED,
       74     1649    1           2 STUFF CHAR(300) CALIGNED;
       75     1650
       76     1651    1     DCL B$CHARS CHAR(300) BASED;
       77     1652
       78     1653    1     DCL ERRNUMBER UBIN;
       79     1654    1     DCL INPFNCTYP SBIN;
       80     1655        %SET FNC$ = CHARTEXT ('ADDR(IMP_BUF.STUFF)');
       81     1656        %SET OPR$ = CHARTEXT ('ADDR(SUBSTR(IMP_BUF.STUFF,SIZEC(KV$PRM_DCLINPFNC)))');
       82     1657    1     DCL TOTAL_LENGTH UBIN HALF HALIGNED;
       83     1658    1     DCL 1 TOTAL_LENGTH_BYTES REDEF TOTAL_LENGTH HALIGNED,
       84     1659    1           2 BYTE1 UBIN(10) UNAL,
       85     1660    1           2 BYTE2 UBIN(8) UNAL;
       86     1661
       87     1662        %EJECT;
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:9    
       88     1663    1       XUI_IMP.ERRCODE = '0'B;
       89     1664
       90     1665    1       IF ADDR ( KEY_NAME ) ~= ADDR ( NIL )
       91     1666    1       THEN
       92     1667    1   IMP_KEY_NAME:
       93     1668    2         DO;
       94     1669
       95     1670    2           IMP_BUF.VFC = %VC_IMP_VFC;
       96     1671    2           IF XUI_IMP.PRIMARY#
       97     1672    2           THEN
       98     1673    2             INPFNCTYP = %VC_PRIMARY_ESCAPE - %VC_INTRO_CONVERSION#;
       99     1674    2           ELSE
      100     1675    2             IF XUI_IMP.SECONDARY#
      101     1676    2             THEN
      102     1677    2               INPFNCTYP = %VC_SECONDARY_ESCAPE - %VC_INTRO_CONVERSION#;
      103     1678    2             ELSE
      104     1679    2               IF XUI_IMP.FNCKEY#
      105     1680    2               THEN
      106     1681    2                 INPFNCTYP = %VC_FNCKEY - %VC_INTRO_CONVERSION#;
      107     1682    2               ELSE
      108     1683    2                 IF XUI_IMP.CTRSTR#
      109     1684    2                 THEN
      110     1685    2                   INPFNCTYP = %VC_CTR_CHAR - %VC_INTRO_CONVERSION#;
      111     1686    2                 ELSE
      112     1687    2                   INPFNCTYP = %VC_SPECIAL_CHARACTER - %VC_INTRO_CONVERSION#;
      113     1688
      114     1689    2           IF ADDR ( KEY_VALUE ) = ADDR ( NIL )
      115     1690    2           THEN
      116     1691    2   RELEASE_KEY_NAME:
      117     1692    3             DO;
      118     1693    3               %FNC$ -> KV$PRM_RLSINPFNC = '0'B;
      119     1694    3               %FNC$ -> KV$PRM_RLSINPFNC.TYP = %VC_RLSINPFNC#;
      120     1695    3               %FNC$ -> KV$PRM_RLSINPFNC.INPFNCTYP = INPFNCTYP;
      121     1696    3               %FNC$ -> KV$PRM_RLSINPFNC.ID_TKN =
      122     1697    3                 KEY_NAME.BYTES (KEY_NAME.LENGTH-1);
      123     1698    3               %FNC$ -> KV$PRM_RLSINPFNC.LNG = LENGTHC (KV$PRM_RLSINPFNC) - 2;
      124     1699
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:10   
      125     1700    3               TOTAL_LENGTH = LENGTHC (KV$PRM_RLSINPFNC);
      126     1701    3             END RELEASE_KEY_NAME;
      127     1702    2           ELSE
      128     1703    2   DECLARE_KEY_NAME:
      129     1704    3             DO;
      130     1705    3               %FNC$ -> KV$PRM_DCLINPFNC = '0'B;
      131     1706    3               %OPR$ -> KV$INPOPR = '0'B;
      132     1707
      133     1708    3               %FNC$ -> KV$PRM_DCLINPFNC.TYP = %VC_DCLINPFNC#;
      134     1709    3               %FNC$ -> KV$PRM_DCLINPFNC.INT1_TKNTYP = %VC_TYP_NONE#;
      135     1710    3               %FNC$ -> KV$PRM_DCLINPFNC.INT2_TKNTYP = %VC_TYP_NONE#;
      136     1711
      137     1712    3               %OPR$ -> KV$INPOPR.RED = '1'B;
      138     1713    3               %OPR$ -> KV$INPOPR.TYP = %VC_INPOPRTEXT#;
      139     1714    3               %OPR$ -> KV$INPOPR_TXT.DSP = %VC_TYPAHEAD#;
      140     1715
      141     1716    3               IF XUI_IMP.INPUT_OPTION#
      142     1717    3               THEN
      143     1718    4                 DO;
      144     1719    4                   %OPR$ -> KV$INPOPR_TXT.DSP = %VC_INPFNC#;
      145     1720    4                   %OPR$ -> KV$INPOPR_TXT.ECH = '1'B;
      146     1721    4                 END;
      147     1722
      148     1723    3               %FNC$ -> KV$PRM_DCLINPFNC.ID_TKN =
      149     1724    3                 KEY_NAME.BYTES (KEY_NAME.LENGTH-1);
      150     1725    3               %FNC$ -> KV$PRM_DCLINPFNC.INPFNCTYP = INPFNCTYP;
      151     1726    3               IF KEY_NAME.LENGTH >= 2
      152     1727    3               THEN
      153     1728    4                 DO;
      154     1729    4                   IF KEY_NAME.LENGTH > 2
      155     1730    4                   THEN
      156     1731    5                     DO;
      157     1732    5                       %FNC$ -> KV$PRM_DCLINPFNC.INT2_TKN = KEY_NAME.BYTES(1);
      158     1733    5                       %FNC$ -> KV$PRM_DCLINPFNC.INT2_TKNTYP = %VC_TYP_CHAR#;
      159     1734    5                     END;
      160     1735    4                   %FNC$ -> KV$PRM_DCLINPFNC.INT1_TKN = KEY_NAME.BYTES(0);
      161     1736    4                   IF XUI_IMP.FNCKEY#
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:11   
      162     1737    4                   THEN
      163     1738    4                     %FNC$ -> KV$PRM_DCLINPFNC.INT1_TKNTYP = %VC_TYP_FNCKEY#;
      164     1739    4                   ELSE
      165     1740    4                     IF XUI_IMP.CTRSTR#
      166     1741    4                     THEN
      167     1742    4                       %FNC$ -> KV$PRM_DCLINPFNC.INT1_TKNTYP = %VC_TYP_CTR#;
      168     1743    4                     ELSE
      169     1744    4                       %FNC$ -> KV$PRM_DCLINPFNC.INT1_TKNTYP = %VC_TYP_CHAR#;
      170     1745    4                 END;
      171     1746
      172     1747
      173     1748    3               IF KEY_VALUE.LENGTH > 255
      174     1749    3               THEN
      175     1750    3                 GOTO BAD_KEYIN_VALUE_LENGTH;
      176     1751
      177     1752    3               %OPR$ -> KV$INPOPR_TXT.L = KEY_VALUE.LENGTH;
      178     1753    3               %OPR$ -> KV$INPOPR_TXT.T = KEY_VALUE.TEXT;
      179     1754    3               TOTAL_LENGTH = SIZEC (%OPR$ -> KV$INPOPR_TXT) +
      180     1755    3                 MOD (SIZEC (%OPR$ -> KV$INPOPR_TXT), 2) +
      181     1756    3                 SIZEC ( KV$PRM_DCLINPFNC ) - 4;
      182     1757    3               %FNC$ -> KV$PRM_DCLINPFNC.LNG.BYT1 = TOTAL_LENGTH_BYTES.BYTE1;
      183     1758    3               %FNC$ -> KV$PRM_DCLINPFNC.LNG.BYT2 = TOTAL_LENGTH_BYTES.BYTE2;
      184     1759
      185     1760    3               TOTAL_LENGTH = TOTAL_LENGTH + 4;
      186     1761    3             END DECLARE_KEY_NAME;
      187     1762
      188     1763    2           IF VBOUND ( XUI_IMP.IMP_BUFFER_ ) = 0
      189     1764    2           THEN
      190     1765    3             DO;
      191     1766    3               CALL WRITE_SINGLE_RECORD
      192     1767    3               WHENALTRETURN
      193     1768    4                 DO;
      194     1769    4                   ALTRETURN;
      195     1770    4                 END;
      196     1771    3               RETURN;
      197     1772    3             END;
      198     1773
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:12   
      199     1774    2           IF VBOUND ( XUI_IMP.IMP_BUFFER_ ) - XUI_IMP.IMP_BUFFER_OFFSET
      200     1775    2             < TOTAL_LENGTH
      201     1776    2           THEN
      202     1777    2             CALL WRITE_BUFFER
      203     1778    2             WHENALTRETURN
      204     1779    3               DO;
      205     1780    3                 ALTRETURN;
      206     1781    3               END;
      207     1782
      208     1783    2           IF VBOUND ( XUI_IMP.IMP_BUFFER_ ) - XUI_IMP.IMP_BUFFER_OFFSET
      209     1784    2             < TOTAL_LENGTH
      210     1785    2           THEN
      211     1786    3             DO;
      212     1787    3               CALL WRITE_SINGLE_RECORD
      213     1788    3               WHENALTRETURN
      214     1789    4                 DO;
      215     1790    4                   ALTRETURN;
      216     1791    4                 END;
      217     1792    3               RETURN;
      218     1793    3             END;
      219     1794    2           ELSE
      220     1795    2   PACK_BUFFER:
      221     1796    3             DO;
      222     1797    3               IF XUI_IMP.IMP_BUFFER_OFFSET = 0
      223     1798    3               THEN
      224     1799    4                 DO;
      225     1800    4                   VBASE ( XUI_IMP.IMP_BUFFER_ ) -> PAD$BYTE = %VC_IMP_VFC;
      226     1801    4                   XUI_IMP.IMP_BUFFER_OFFSET = 1;
      227     1802    4                 END;
      228     1803    3               SUBSTR ( PINCRC ( VBASE ( XUI_IMP.IMP_BUFFER_ ), XUI_IMP.
              1803                        IMP_BUFFER_OFFSET ) -> B$CHARS, 0, TOTAL_LENGTH ) =
      229     1804    3                 SUBSTR ( IMP_BUF.STUFF, 0, TOTAL_LENGTH );
      230     1805    3               XUI_IMP.IMP_BUFFER_OFFSET = XUI_IMP.IMP_BUFFER_OFFSET
      231     1806    3                 + TOTAL_LENGTH;
      232     1807    3             END PACK_BUFFER;
      233     1808
      234     1809    2         END IMP_KEY_NAME;
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:13   
      235     1810
      236     1811    1       IF XUI_IMP.FLUSH#
      237     1812    1       THEN
      238     1813    1   FLUSH_KEY_NAMES:
      239     1814    2         DO;
      240     1815    2           CALL WRITE_BUFFER
      241     1816    2           WHENALTRETURN
      242     1817    3             DO;
      243     1818    3               ALTRETURN;
      244     1819    3             END;
      245     1820    2         END FLUSH_KEY_NAMES;
      246     1821
      247     1822    1       RETURN;
      248     1823
      249     1824    1   BAD_KEYIN_VALUE_LENGTH:
      250     1825    1       ERRNUMBER = %E$BAD_KEYIN_VALUE_LENGTH;
      251     1826    1       GOTO SERIOUS_ERROR;
      252     1827
      253     1828    1   SERIOUS_ERROR:
      254     1829    1       XUI_IMP.ERRCODE = XUI_ERRCODE;
      255     1830    1       XUI_IMP.ERRCODE.ERR# = ERRNUMBER;
      256     1831    1       ALTRETURN;
      257     1832
      258     1833        %EJECT;
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:14   
      259     1834    1   WRITE_BUFFER: PROC ALTRET;
      260     1835
      261     1836    2       IF XUI_IMP.IMP_BUFFER_OFFSET <= 1
      262     1837    2       THEN
      263     1838    2         RETURN;
      264     1839
      265     1840    2       WRITE_INP_FUNC.BUF_.BUF$ = VBASE ( XUI_IMP.IMP_BUFFER_ );
      266     1841    2       WRITE_INP_FUNC.BUF_.BOUND = XUI_IMP.IMP_BUFFER_OFFSET - 1;
      267     1842    2       GOTO WRITE_COMMON;
      268     1843
      269     1844    2   WRITE_SINGLE_RECORD: ENTRY ALTRET;
      270     1845
      271     1846    2       WRITE_INP_FUNC.BUF_.BUF$ = ADDR ( IMP_BUF.VFC );
      272     1847    2       WRITE_INP_FUNC.BUF_.BOUND = ( LENGTHC ( IMP_BUF.VFC )
      273     1848    2         + TOTAL_LENGTH ) - 1;
      274     1849
      275     1850    2   WRITE_COMMON:
      276     1851    2       IF NOT DCBADDR ( XUI_IMP.IMPDCBNUM# ) -> F$DCB.FCD#
      277     1852    2       THEN
      278     1853    3         DO;
      279     1854    3           OPEN_INP_FUNC.V.DCB# = XUI_IMP.IMPDCBNUM#;
      280     1855    3           CALL M$OPEN (OPEN_INP_FUNC)
      281     1856    3             ALTRET (OPEN_INP_FUNC_FAILED);
      282     1857    3         END;
      283     1858    2       WRITE_INP_FUNC.V.DCB# = XUI_IMP.IMPDCBNUM#;
      284     1859    2       CALL M$WRITE (WRITE_INP_FUNC)
      285     1860    2         ALTRET (WRITE_INP_FUNC_FAILED);
      286     1861
      287     1862    2       XUI_IMP.IMP_BUFFER_OFFSET = 0;
      288     1863
      289     1864    2       RETURN;
      290     1865
      291     1866    2   OPEN_INP_FUNC_FAILED: ;
      292     1867    2   WRITE_INP_FUNC_FAILED: ;
      293     1868    2       XUI_IMP.ERRCODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      294     1869    2       ALTRETURN;
      295     1870
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:15   
      296     1871    2   END WRITE_BUFFER;
      297     1872
      298     1873    1   END VDP$IMP;

PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:16   
--  Include file information  --

   VC_EQUS.:TOOLE04  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VDP_MACRO_C.:VDA5TOU  is referenced.
   KV$PRM.:LIBRARY  is referenced.
   KV$INPFNC.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$IMP.

   Procedure VDP$IMP requires 299 words for executable code.
   Procedure VDP$IMP requires 88 words of local(AUTO) storage.

    No errors detected in file VDP$IMP.:VDA5TSI    .

PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:17   

 Object Unit name= VDP$IMP                                    File name= VDP$IMP.:VDA5TOU
 UTS= JUL 04 '97 11:36:21.96 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  VDP$IMP
    2   Data  even  none    70    106  VDP$IMP
    3   Proc  even  none   299    453  VDP$IMP
    4  RoData even  none     7      7  VDP$IMP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  VDP$IMP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                B_VECTNIL
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:18   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:19   


        1        1        /*M* VDP$IMP - DEFINE a KEYIN key */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        /*P* NAME:  VDP$IMP
       10       10            PURPOSE:
       11       11            DESCRIPTION:
       12       12        */
       13       13
       14       14        /*D* NAME:  VDP$IMP
       15       15            PARAMETERS:
       16       16            INPUT:
       17       17            OUTPUT:
       18       18            DESCRIPTION:
       19       19        */
       20       20
       21       21        VDP$IMP: PROC ( XUI_IMP )

     21  3 000000   000000 700200 xent  VDP$IMP      TSX0  ! X66_AUTO_1
         3 000001   000130 000001                    ZERO    88,1

       22       22              ALTRET;
       23       23
       24       24        %INCLUDE CP_6;
       25      105        %INCLUDE KV$INPFNC;
       26      664        %INCLUDE KV$PRM;
       27      877        %INCLUDE VDP_MACRO_C;
       28      903        %INCLUDE VD_PERR_C;
       29     1051
       30     1052        %SET LISTMAC='1'B;
       31     1053        %XUI_IMP ( STCLASS = PARAM );
              1054        %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:20   
              1055       %IF(SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT')
              1055            ;
              1058        %ELSE;
              1059        %LSET INIT=CHARTEXT('/*');
              1060        %LSET EINIT=CHARTEXT('*/');
              1061        %ENDIF;
              1062    1  DCL 1 FPTN STCLASS,2 IMP_BUFFER_ VECTOR %INIT(VECTOR(IMP_BUFFER))%EINIT,2 %CHARTEXT(
              1062            'IMP_BUFFER_OFFSET') SBIN %INIT
              1063    1   (IMP_BUFFER_OFFSET)%EINIT,2 KEY_NAME$ PTR %INIT(ADDR(KEY_NAME))%EINIT,2 KEY_VALUE$
              1063            PTR %INIT(ADDR(KEY_VALUE))%EINIT,2 PRIMARY# BIT
              1064    1   (1)%INIT(PRIMARY)%EINIT,2 SECONDARY# BIT(1)%INIT(SECONDARY)%EINIT,2 INPUT_OPTION#
              1064            BIT(1)%INIT(INPUT_OPTION)%EINIT,2 FLUSH# BIT(1
              1065    1  )%INIT(FLUSH)%EINIT,2 CTRSTR# BIT(1)%INIT(CTRSTR)%EINIT,2 FNCKEY# BIT(1)%INIT(FNCKEY
              1065            )%EINIT,2 * BIT(12)%INIT('0'B)%EINIT,2
              1066    1   IMPDCBNUM# UBIN HALF HALIGNED %INIT(DCBNUM(IMPDCB))%EINIT,
              1067        %VLP_ERRCODE(LVL=2,FPTN=ERRCODE,STCLASS=" ");
              1068        %LSET LISTDIR='0'B;
              1081    1   2 ERRCODE ALIGNED,
              1095    1   3 FCG  BIT(12)/*('0'B)/**/ ,
              1108    1   3 MID  BIT(6)/*('0'B)/**/ ,3 MON  BIT(1)/*('0'B)/**/ ,
              1109    1   3 ERR#  UBIN(14)/*(0)/**/ UNAL,3 SEV  UBIN(3)/*(0)/**/
              1110    1   UNAL ;
              1112    1   DCL 1 FPTN%CHARTEXT('_FLG ')REDEF FPTN,2 *(0:4)SBIN,2 F BIT(18),2 *(0:9)CHAR(1);
       32     1114        %SET LISTMAC='0'B;
       33     1115
       34     1116        /* %VLP_NAMEV ( FPTN = KEY_NAME,
       35     1117                     STCLASS = "BASED ( XUI_IMP.KEY_NAME$ )" );
       36     1118        %VLP_NAMEV ( FPTN = KEY_VALUE,
       37     1119                     STCLASS = "BASED ( XUI_IMP.KEY_VALUE$ )" ); */
       38     1120    1     DCL 1 KEY_NAME BASED ( XUI_IMP.KEY_NAME$ ) ALIGNED,
       39     1121    1           2 LENGTH UBIN BYTE CALIGNED,
       40     1122    1           2 BYTES(0:0) UBIN BYTE CALIGNED,
       41     1123    1           2 TEXT REDEF BYTES CHAR(KEY_NAME.LENGTH);
       42     1124    1     DCL 1 KEY_VALUE BASED ( XUI_IMP.KEY_VALUE$ ) ALIGNED,
       43     1125    1           2 LENGTH UBIN HALF CALIGNED,
       44     1126    1           2 BYTES(0:0) UBIN BYTE CALIGNED,
       45     1127    1           2 TEXT REDEF BYTES CHAR(KEY_VALUE.LENGTH);
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:21   
       46     1128
       47     1129        %B$TCB;
       48     1132        %B$ALT;
       49     1140    1     DCL B$TCB$ PTR SYMREF;
       50     1141        %F$DCB;
       51     1198        %VLP_ERRCODE ( FPTN = XUI_ERRCODE,
       52     1199                       FCG = 'VD',
       53     1200                       MID = 'G',
       54     1201                       STCLASS = CONSTANT );
       55     1246
       56     1247        %FPT_OPEN (FPTN=OPEN_INP_FUNC, ORG=TERMINAL, ASN=DEVICE,
       57     1248            RES='ME', FUN=CREATE);
       58     1357        %FPT_WRITE (FPTN=WRITE_INP_FUNC, TRANS=YES, VFC=YES);
       59     1388
       60     1389        %SET LISTMAC = '1'B;
       61     1390        %KV$PRM_DCLINPFNC;
              1391        %LSET LISTDIR='0'B;
              1407    1   DCL 1 KV$PRM_DCLINPFNC HALIGNED BASED,
              1412    1   2 TYP UBIN BYTE CALIGNED /*(0)*/,2 * UBIN BYTE CALIGNED /*(0)*/,
              1416    1  2 LNG,3 BYT1 UBIN BYTE UNAL /*(0)*/,3 * BIT(1)/*('0'B)*/,3 BYT2 UBIN(8)UNAL /*(0)*/,
              1418    1  2 INT1_TKN UBIN BYTE CALIGNED /*(0)*/,2 INT2_TKN UBIN BYTE CALIGNED /*(0)*/,2 ID_TKN
              1418            UBIN BYTE
              1419    1   CALIGNED /*(0)*/,
              1421    1   2 * BIT(3)/*('0'B)*/,
              1425    1   2 INT1_TKNTYP UBIN(3)UNAL /*(0)*/,2 INT2_TKNTYP UBIN(3)UNAL /*(0)*/,
              1427    1   2 * BIT(2)/*('0'B)*/,
              1431    1   2 ID_TKNTYP UBIN(3)UNAL /*(0)*/,2 INPFNCTYP UBIN(4)UNAL /*(0)*/ ;
       62     1433    1     DCL PAD$BYTE UBIN BYTE CALIGNED BASED;
       63     1434        %KV$INPOPR;
              1435        %LSET LISTDIR='0'B;
              1442    1   DCL KV$INPOPR_DUMMY ALIGNED BASED CHAR(KV$INPOPR.ID);DCL 1 KV$INPOPR REDEF
              1442            KV$INPOPR_DUMMY,
              1444    1   2 * BIT(1), 2 IMD BIT(1),2 RED BIT(1),2 CHN BIT(1),2 ACK BIT(1),2 TYP UBIN(4)UNAL,2
              1444            ID UBIN BYTE CALIGNED,2 CMPCOD REDEF ID UBIN BYTE
              1445    1   CALIGNED,2 INPOPRX REDEF ID UBIN BYTE CALIGNED,2 PRMID REDEF ID UBIN BYTE CALIGNED;
              1445            DCL 1 KV$INPOPR_MSC
              1446    1   REDEF KV$INPOPR_DUMMY,2 * CHAR(1),2 * BIT(1), 2 DLTINP BIT(1),2 DLTRED BIT(1),2
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:22   
              1446            DLTOTP BIT(1),2 ABRRED BIT(1);
              1448    1  DCL 1 KV$INPOPR_TXT REDEF KV$INPOPR_DUMMY,2 * CHAR(1),2 * BIT(1), 2 ECH BIT(1),2 TRN
              1448            BIT(1),2 VRT BIT(1),2 * BIT(3),
              1453    1   2 DSP UBIN(2)UNAL,2 L UBIN BYTE CALIGNED,2 T CHAR(KV$INPOPR_TXT.L);
       64     1460
       65     1461        %KV$PRM_RLSINPFNC;
              1462        %LSET LISTDIR='0'B;
              1478    1   DCL 1 KV$PRM_RLSINPFNC HALIGNED BASED,
              1483    1  2 TYP UBIN BYTE CALIGNED /*(0)*/,2 LNG UBIN BYTE CALIGNED /*(0)*/,2 ID_TKN UBIN BYTE
              1483            CALIGNED /*
              1484    1   (0)*/,
              1486    1   2 * BIT(1)/*('0'B)*/,
              1488    1  2 ID_TKNTYP UBIN(3)UNAL /*(0)*/,2 INPFNCTYP UBIN(4)UNAL /*(0)*/,2 ALLINPFNCTYP BIT(1
              1488            )/*('0'B
              1489    1   )*/ ;
       66     1491        %SET LISTINC = '1'B;
       67     1492        %INCLUDE VC_EQUS;
        1+    1493        /*M*   VC_EQUS- IMP EQU INCLUDE FILE
        2+    1494                                                                                      */
        3+    1495        /*T***********************************************************/
        4+    1496        /*T*                                                         */
        5+    1497        /*T* Copyright (c) Bull HN Information Systems Inc., 1994    */
        6+    1498        /*T*                                                         */
        7+    1499        /*T***********************************************************/
        8+    1500        /*
        9+    1501                          IMP PARSER(NODE) EQUS
       10+    1502                                                                                      */
       11+    1503        /*
       12+    1504                          COMMAND EQUS
       13+    1505                                                                                      */
       14+    1506               %EQU VC_ADD=CHARTEXT('1/* ADD */');
       15+    1507               %EQU VC_DELETE=CHARTEXT('2/* DELETE */');
       16+    1508               %EQU VC_END=CHARTEXT('3/* END */');
       17+    1509               %EQU VC_QUIT=CHARTEXT('4/* QUIT */');
       18+    1510               %EQU VC_ERRORINFO=CHARTEXT('5/* ? */');
       19+    1511               %EQU VC_HELP=CHARTEXT('6/* HELP */');
       20+    1512               %EQU VC_ALLINFO=CHARTEXT('7/* ?? */');
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:23   
       21+    1513               %EQU VC_SPELL=CHARTEXT('8/* SPELL */');
       22+    1514        /*
       23+    1515                          FUNCTION TABLE TYPE EQUS
       24+    1516                                                                                      */
       25+    1517               %EQU VC_ALL=CHARTEXT('512/* ALL */');
       26+    1518               %EQU VC_PRIMARY_ESCAPE=CHARTEXT('2/* PRIMARY_ESCAPE */');
       27+    1519               %EQU VC_SECONDARY_ESCAPE=CHARTEXT('3/* SECONDARY_ESCAPE */');
       28+    1520               %EQU VC_SPECIAL_CHARACTER=CHARTEXT('4/* SPECIAL_CHARACTER */');
       29+    1521               %EQU VC_CTR_CHAR = CHARTEXT('5 /* CONTROL CHAR */');
       30+    1522               %EQU VC_FNCKEY  = CHARTEXT('6 /* FUNCTION KEY */');
       31+    1523        /*
       32+    1524               COMMAND OPTION EQUS
       33+    1525                                                                                      */
       34+    1526               %EQU VC_IDENTIFIER=CHARTEXT('5/* IDENTIFIER */');
       35+    1527               %EQU VC_INTRODUCER=CHARTEXT('6/* INTRODUCER */');
       36+    1528               %EQU VC_INPUT_OPERATORS=CHARTEXT('7/* INPUT_OPERATORS */');
       37+    1529               %EQU VC_OPERATOR=CHARTEXT('0/* OPERATOR */');
       38+    1530        /*
       39+    1531                         INPUT OPERATOR OPTIONS EQUS
       40+    1532                                                                                      */
       41+    1533               %EQU VC_QSTRING=CHARTEXT('1/* QSTRING */');
       42+    1534               %EQU VC_SSTRING=CHARTEXT('2/* SSTRING */');
       43+    1535               %EQU VC_ACKNOWLEDGE=CHARTEXT('3/* ACKNOWLEDGE */');
       44+    1536               %EQU VC_BUFFER=CHARTEXT('4/* BUFFER */');
       45+    1537               %EQU VC_ECHO=CHARTEXT('5/* ECHO */');
       46+    1538               %EQU VC_IMMEDIATE=CHARTEXT('6/* IMMEDIATE */');
       47+    1539               %EQU VC_INPUT_FUNCTION=CHARTEXT('7/* INPUT_FUNCTION */');
       48+    1540               %EQU VC_READ=CHARTEXT('8/* READ */');
       49+    1541               %EQU VC_TYPEAHEAD_BUFFER=CHARTEXT('9/* TYPEAHEAD_BUFFER */');
       50+    1542               %EQU VC_WRITE=CHARTEXT('10/* WRITE */');
       51+    1543               %EQU VC_WRITE_TRANSPARENT=CHARTEXT('14/* WRITETRANSPARENT */');
       52+    1544               %EQU VC_WRITE_VIRTUAL=CHARTEXT('15/* WRITEVIRTUAL */');
       53+    1545        /*
       54+    1546                        CHARACTER MNEMONICS
       55+    1547                                                                                      */
       56+    1548        /* */
       57+    1549               %EQU VC_MNEMONIC=CHARTEXT('11/* MNEMONIC */');
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:24   
       58+    1550               %EQU VC_OSTRING=CHARTEXT('12/* OSTRING */');
       59+    1551               %EQU VC_XSTRING=CHARTEXT('13/* XSTRING */');
       60+    1552        /* */
       61+    1553               %EQU VC_BREAK = CHARTEXT('1 /* BREAK KEY */');
       62+    1554               %EQU VC_OVRRUN = CHARTEXT('2 /* OVERRUN ERROR */');
       63+    1555               %EQU VC_PARITY = CHARTEXT('4 /* PARITY ERROR */');
       64+    1556               %EQU VC_NUL=CHARTEXT('11/* NULL */');
       65+    1557               %EQU VC_SOH=CHARTEXT('12/* SOH */');
       66+    1558               %EQU VC_STX=CHARTEXT('13/* STX */');
       67+    1559               %EQU VC_ETX=CHARTEXT('14/* ETX */');
       68+    1560               %EQU VC_EOT=CHARTEXT('15/* EOT */');
       69+    1561               %EQU VC_ENQ=CHARTEXT('16/* ENQ */');
       70+    1562               %EQU VC_ACK=CHARTEXT('17/* ACK */');
       71+    1563               %EQU VC_BEL=CHARTEXT('18/* BEL */');
       72+    1564               %EQU VC_BS=CHARTEXT('19/* BS */');
       73+    1565               %EQU VC_HT=CHARTEXT('20/* HT */');
       74+    1566               %EQU VC_LF=CHARTEXT('21/* LF */');
       75+    1567               %EQU VC_VT=CHARTEXT('22/* VT */');
       76+    1568               %EQU VC_FF=CHARTEXT('23/* FF */');
       77+    1569               %EQU VC_CR=CHARTEXT('24/* CR */');
       78+    1570               %EQU VC_SO=CHARTEXT('25/* SO */');
       79+    1571               %EQU VC_SI=CHARTEXT('26/* SI */');
       80+    1572               %EQU VC_DLE=CHARTEXT('27/* DLE */');
       81+    1573               %EQU VC_DC1=CHARTEXT('28/* DC1 */');
       82+    1574               %EQU VC_DC2=CHARTEXT('29/* DC2 */');
       83+    1575               %EQU VC_DC3=CHARTEXT('30/* DC3 */');
       84+    1576               %EQU VC_DC4=CHARTEXT('31/* DC4 */');
       85+    1577               %EQU VC_NAK=CHARTEXT('32/* NAK */');
       86+    1578               %EQU VC_SYN=CHARTEXT('33/* SYN */');
       87+    1579               %EQU VC_ETB=CHARTEXT('34/* ETB */');
       88+    1580               %EQU VC_CAN=CHARTEXT('35/* CAN */');
       89+    1581               %EQU VC_EM=CHARTEXT('36/* EM */');
       90+    1582               %EQU VC_SUB=CHARTEXT('37/* SUB */');
       91+    1583               %EQU VC_ESC=CHARTEXT('38/* ESC */');
       92+    1584               %EQU VC_FS=CHARTEXT('39/* FS */');
       93+    1585               %EQU VC_GS=CHARTEXT('40/* GS */');
       94+    1586               %EQU VC_RS=CHARTEXT('41/* RS */');
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:25   
       95+    1587               %EQU VC_US=CHARTEXT('42/* US */');
       96+    1588               %EQU VC_SP=CHARTEXT('43/* SP */');
       97+    1589               %EQU VC_DEL=CHARTEXT('44/* DEL */');
       98+    1590               %EQU VC_FM = CHARTEXT('38 /*FIELD MARK*/');
       99+    1591        /*
      100+    1592               IMP PROGRAM EQUS
      101+    1593                                                                                      */
      102+    1594        /*
      103+    1595               EQUS FOR TABLE TYPE AND OPERATION TYPE THAT IS SENT DOWN
      104+    1596               TO THE FRONT END
      105+    1597                                                                                      */
      106+    1598               %EQU VC_ADD#=CHARTEXT('0/* ADD# */');
      107+    1599               %EQU VC_DELE# = CHARTEXT('1/* DELE# */');
      108+    1600               %EQU VC_PRIMARY_INTRO#=CHARTEXT('0/* PRIMARY_INTRO# */');
      109+    1601               %EQU VC_SECONDARY_INTRO#=CHARTEXT('1/* SECONDARY_INTRO# */');
      110+    1602               %EQU VC_PRIMARY_IDENT#=CHARTEXT('2/* PRIMARY_IDENT */');
      111+    1603               %EQU VC_SECONDARY_IDENT#=CHARTEXT('3/* SECONDARY_IDENT# */');
      112+    1604               %EQU VC_SPECIAL#=CHARTEXT('4/* SPECIAL# */');
      113+    1605               %EQU VC_ALL_PRIMARY#=CHARTEXT('5/* ALL_PRIMARY# */');
      114+    1606               %EQU VC_ALL_SECONDARY#=CHARTEXT('6/* ALL_SECONDARY# */');
      115+    1607               %EQU VC_ALL_SPECIAL#=CHARTEXT('7/* ALL_SPECIAL# */');
      116+    1608               %EQU VC_ALL#=CHARTEXT('8/* ALL# */');
      117+    1609        /*
      118+    1610               A FEW CONVERSION CONSTANTS (NODE CODE TO TABLE TYPE)
      119+    1611                                                                                      */
      120+    1612               %EQU VC_ALL_CONVERSION#=CHARTEXT('3/* ALL_CONVERSION# */');
      121+    1613               %EQU VC_MNEMONIC_DIFF#=CHARTEXT('11/* MNEMONIC_DIFF# */');
      122+    1614               %EQU VC_INTRO_CONVERSION#=CHARTEXT('2/* INTRO_CONVERSION# */');
      123+    1615        /*
      124+    1616               INPUT OPERATOR OPERATION TYPES
      125+    1617                                                                                      */
      126+    1618               %EQU VC_WRITE#=CHARTEXT('3/* WRITE# */');
      127+    1619               %EQU VC_TYPAHEAD#=CHARTEXT('2/* TYPE AHEAD# */');
      128+    1620               %EQU VC_READBUF#=CHARTEXT('1/* READBUF#*/');
      129+    1621               %EQU VC_INPFNC#=CHARTEXT('0/* INPUT FUNCTION# */');
      130+    1622        /*
      131+    1623               IMP VFC CODE AND IMP T CODE
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:26   
      132+    1624                                                                                      */
      133+    1625               %EQU VC_IMP_VFC = CHARTEXT('25/* IMP_VFC */');
      134+    1626        /*
      135+    1627          EQUS ADDED TO SUPPORT VDH (VALUES DETERMINED BY KV$INPFNC
      136+    1628          FOUND IN VDH CODE.
      137+    1629        */
      138+    1630        /*
      139+    1631              EQUIVALENTS -INTRO AND IDENT TOKEN TYPES
      140+    1632        */
      141+    1633        %EQU  VC_TYP_CHAR#   =  %CHARTEXT('0 /* CHARACTER */');
      142+    1634        %EQU  VC_TYP_FNCKEY# =  %CHARTEXT('2 /* FUNCTION KEY */');
      143+    1635        %EQU  VC_TYP_CTR#    =  %CHARTEXT('1 /* CONTROL SEQUENCE */');
      144+    1636        %EQU  VC_TYP_NONE# =  %CHARTEXT('3 /* NONE SPECIFIED */');
      145+    1637        /*
      146+    1638                DCL AND RLS INPFNC STRUCTURE TYPE CONSTANTS.
      147+    1639        */
      148+    1640        %EQU  VC_DCLINPFNC# = %CHARTEXT('4 /* DCLINPFNC STRUCTURE */');
      149+    1641        %EQU  VC_RLSINPFNC# = %CHARTEXT('10 /*RLSINPFNC STRUCTURE */');
      150+    1642        %EQU  VC_INPOPRTEXT#= %CHARTEXT('9 /* TEXT INPUT OPERATOR */');
       68     1643        %SET LISTINC = '0'B;
       69     1644        %SET LISTMAC = '0'B;
       70     1645
       71     1646    1     DCL 1 IMP_BUF ALIGNED,
       72     1647    1           2 * CHAR(1) CALIGNED,
       73     1648    1           2 VFC UBIN BYTE CALIGNED,
       74     1649    1           2 STUFF CHAR(300) CALIGNED;
       75     1650
       76     1651    1     DCL B$CHARS CHAR(300) BASED;
       77     1652
       78     1653    1     DCL ERRNUMBER UBIN;
       79     1654    1     DCL INPFNCTYP SBIN;
       80     1655        %SET FNC$ = CHARTEXT ('ADDR(IMP_BUF.STUFF)');
       81     1656        %SET OPR$ = CHARTEXT ('ADDR(SUBSTR(IMP_BUF.STUFF,SIZEC(KV$PRM_DCLINPFNC)))');
       82     1657    1     DCL TOTAL_LENGTH UBIN HALF HALIGNED;
       83     1658    1     DCL 1 TOTAL_LENGTH_BYTES REDEF TOTAL_LENGTH HALIGNED,
       84     1659    1           2 BYTE1 UBIN(10) UNAL,
       85     1660    1           2 BYTE2 UBIN(8) UNAL;
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:27   
       86     1661
       87     1662        %EJECT;
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:28   
       88     1663    1       XUI_IMP.ERRCODE = '0'B;

   1663  3 000002   200003 470500                    LDP0    @XUI_IMP,,AUTO
         3 000003   000006 450100                    STZ     6,,PR0

       89     1664
       90     1665    1       IF ADDR ( KEY_NAME ) ~= ADDR ( NIL )

   1665  3 000004   000003 471500                    LDP1    3,,PR0
         3 000005   200126 451500                    STP1    TOTAL_LENGTH+4,,AUTO
         3 000006   200126 236100                    LDQ     TOTAL_LENGTH+4,,AUTO
         3 000007   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000010   000337 600000 3                  TZE     s:1811

       91     1666    1       THEN
       92     1667    1   IMP_KEY_NAME:
       93     1668    2         DO;

   1668  3 000011                       IMP_KEY_NAME null
       94     1669
       95     1670    2           IMP_BUF.VFC = %VC_IMP_VFC;

   1670  3 000011   000031 236003                    LDQ     25,DU
         3 000012   200004 552120                    STBQ    IMP_BUF,'20'O,AUTO

       96     1671    2           IF XUI_IMP.PRIMARY#

   1671  3 000013   000005 234100                    SZN     5,,PR0
         3 000014   000017 605000 3                  TPL     s:1675

       97     1672    2           THEN
       98     1673    2             INPFNCTYP = %VC_PRIMARY_ESCAPE - %VC_INTRO_CONVERSION#;

   1673  3 000015   200121 450100                    STZ     INPFNCTYP,,AUTO
         3 000016   000041 710000 3                  TRA     s:1689

       99     1674    2           ELSE
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:29   
      100     1675    2             IF XUI_IMP.SECONDARY#

   1675  3 000017   000005 236100                    LDQ     5,,PR0
         3 000020   200000 316003                    CANQ    65536,DU
         3 000021   000025 600000 3                  TZE     s:1679

      101     1676    2             THEN
      102     1677    2               INPFNCTYP = %VC_SECONDARY_ESCAPE - %VC_INTRO_CONVERSION#;

   1677  3 000022   000001 235007                    LDA     1,DL
         3 000023   200121 755100                    STA     INPFNCTYP,,AUTO
         3 000024   000041 710000 3                  TRA     s:1689

      103     1678    2             ELSE
      104     1679    2               IF XUI_IMP.FNCKEY#

   1679  3 000025   010000 316003                    CANQ    4096,DU
         3 000026   000032 600000 3                  TZE     s:1683

      105     1680    2               THEN
      106     1681    2                 INPFNCTYP = %VC_FNCKEY - %VC_INTRO_CONVERSION#;

   1681  3 000027   000004 235007                    LDA     4,DL
         3 000030   200121 755100                    STA     INPFNCTYP,,AUTO
         3 000031   000041 710000 3                  TRA     s:1689

      107     1682    2               ELSE
      108     1683    2                 IF XUI_IMP.CTRSTR#

   1683  3 000032   020000 316003                    CANQ    8192,DU
         3 000033   000037 600000 3                  TZE     s:1687

      109     1684    2                 THEN
      110     1685    2                   INPFNCTYP = %VC_CTR_CHAR - %VC_INTRO_CONVERSION#;

   1685  3 000034   000003 235007                    LDA     3,DL
         3 000035   200121 755100                    STA     INPFNCTYP,,AUTO
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:30   
         3 000036   000041 710000 3                  TRA     s:1689

      111     1686    2                 ELSE
      112     1687    2                   INPFNCTYP = %VC_SPECIAL_CHARACTER - %VC_INTRO_CONVERSION#;

   1687  3 000037   000002 235007                    LDA     2,DL
         3 000040   200121 755100                    STA     INPFNCTYP,,AUTO

      113     1688
      114     1689    2           IF ADDR ( KEY_VALUE ) = ADDR ( NIL )

   1689  3 000041   000004 471500                    LDP1    4,,PR0
         3 000042   200126 451500                    STP1    TOTAL_LENGTH+4,,AUTO
         3 000043   200126 236100                    LDQ     TOTAL_LENGTH+4,,AUTO
         3 000044   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000045   000073 601000 3                  TNZ     DECLARE_KEY_NAME

      115     1690    2           THEN
      116     1691    2   RELEASE_KEY_NAME:
      117     1692    3             DO;

   1692  3 000046                       RELEASE_KEY* null
      118     1693    3               %FNC$ -> KV$PRM_RLSINPFNC = '0'B;

   1693  3 000046   000100 100400                    MLR     fill='000'O
         3 000047   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000050   200004 400004                    ADSC9   IMP_BUF,,AUTO            cn=2,n=4

      119     1694    3               %FNC$ -> KV$PRM_RLSINPFNC.TYP = %VC_RLSINPFNC#;

   1694  3 000051   012000 236007                    LDQ     5120,DL
         3 000052   200004 552110                    STBQ    IMP_BUF,'10'O,AUTO

      120     1695    3               %FNC$ -> KV$PRM_RLSINPFNC.INPFNCTYP = INPFNCTYP;

   1695  3 000053   200121 236100                    LDQ     INPFNCTYP,,AUTO
         3 000054   000023 736000                    QLS     19
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:31   
         3 000055   200005 676100                    ERQ     IMP_BUF+1,,AUTO
         3 000056   000036 376003                    ANQ     30,DU
         3 000057   200005 656100                    ERSQ    IMP_BUF+1,,AUTO

      121     1696    3               %FNC$ -> KV$PRM_RLSINPFNC.ID_TKN =

   1696  3 000060   000003 471500                    LDP1    3,,PR0
         3 000061   100000 236100                    LDQ     0,,PR1
         3 000062   000033 772000                    QRL     27
         3 000063   000100 100506                    MLR     fill='000'O
         3 000064   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1
         3 000065   200005 000001                    ADSC9   IMP_BUF+1,,AUTO          cn=0,n=1

      122     1697    3                 KEY_NAME.BYTES (KEY_NAME.LENGTH-1);
      123     1698    3               %FNC$ -> KV$PRM_RLSINPFNC.LNG = LENGTHC (KV$PRM_RLSINPFNC) - 2;

   1698  3 000066   000002 236007                    LDQ     2,DL
         3 000067   200004 552104                    STBQ    IMP_BUF,'04'O,AUTO

      124     1699
      125     1700    3               TOTAL_LENGTH = LENGTHC (KV$PRM_RLSINPFNC);

   1700  3 000070   000004 220003                    LDX0    4,DU
         3 000071   200122 740100                    STX0    TOTAL_LENGTH,,AUTO

      126     1701    3             END RELEASE_KEY_NAME;

   1701  3 000072   000253 710000 3                  TRA     s:1763

      127     1702    2           ELSE
      128     1703    2   DECLARE_KEY_NAME:
      129     1704    3             DO;

   1704  3 000073                       DECLARE_KEY* null
      130     1705    3               %FNC$ -> KV$PRM_DCLINPFNC = '0'B;

   1705  3 000073   000100 100400                    MLR     fill='000'O
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:32   
         3 000074   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000075   200004 400011                    ADSC9   IMP_BUF,,AUTO            cn=2,n=9

      131     1706    3               %OPR$ -> KV$INPOPR = '0'B;

   1706  3 000076   000000 220003                    LDX0    0,DU
         3 000077   200007 740100                    STX0    IMP_BUF+3,,AUTO

      132     1707
      133     1708    3               %FNC$ -> KV$PRM_DCLINPFNC.TYP = %VC_DCLINPFNC#;

   1708  3 000100   004000 236007                    LDQ     2048,DL
         3 000101   200004 552110                    STBQ    IMP_BUF,'10'O,AUTO

      134     1709    3               %FNC$ -> KV$PRM_DCLINPFNC.INT1_TKNTYP = %VC_TYP_NONE#;

   1709  3 000102   200006 236100                    LDQ     IMP_BUF+2,,AUTO
         3 000103   000000 376000 4                  ANQ     0
         3 000104   000030 276003                    ORQ     24,DU
         3 000105   200006 756100                    STQ     IMP_BUF+2,,AUTO

      135     1710    3               %FNC$ -> KV$PRM_DCLINPFNC.INT2_TKNTYP = %VC_TYP_NONE#;

   1710  3 000106   200006 236100                    LDQ     IMP_BUF+2,,AUTO
         3 000107   000001 376000 4                  ANQ     1
         3 000110   000003 276003                    ORQ     3,DU
         3 000111   200006 756100                    STQ     IMP_BUF+2,,AUTO

      136     1711
      137     1712    3               %OPR$ -> KV$INPOPR.RED = '1'B;

   1712  3 000112   100000 236003                    LDQ     32768,DU
         3 000113   200007 256100                    ORSQ    IMP_BUF+3,,AUTO

      138     1713    3               %OPR$ -> KV$INPOPR.TYP = %VC_INPOPRTEXT#;

   1713  3 000114   200007 236100                    LDQ     IMP_BUF+3,,AUTO
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:33   
         3 000115   000002 376000 4                  ANQ     2
         3 000116   011000 276003                    ORQ     4608,DU
         3 000117   200007 756100                    STQ     IMP_BUF+3,,AUTO

      139     1714    3               %OPR$ -> KV$INPOPR_TXT.DSP = %VC_TYPAHEAD#;

   1714  3 000120   200007 236100                    LDQ     IMP_BUF+3,,AUTO
         3 000121   000003 376000 4                  ANQ     3
         3 000122   000002 276003                    ORQ     2,DU
         3 000123   200007 756100                    STQ     IMP_BUF+3,,AUTO

      140     1715
      141     1716    3               IF XUI_IMP.INPUT_OPTION#

   1716  3 000124   000005 236100                    LDQ     5,,PR0
         3 000125   100000 316003                    CANQ    32768,DU
         3 000126   000133 600000 3                  TZE     s:1723

      142     1717    3               THEN
      143     1718    4                 DO;

      144     1719    4                   %OPR$ -> KV$INPOPR_TXT.DSP = %VC_INPFNC#;

   1719  3 000127   000003 236000 4                  LDQ     3
         3 000130   200007 356100                    ANSQ    IMP_BUF+3,,AUTO

      145     1720    4                   %OPR$ -> KV$INPOPR_TXT.ECH = '1'B;

   1720  3 000131   000200 236003                    LDQ     128,DU
         3 000132   200007 256100                    ORSQ    IMP_BUF+3,,AUTO

      146     1721    4                 END;

      147     1722
      148     1723    3               %FNC$ -> KV$PRM_DCLINPFNC.ID_TKN =

   1723  3 000133   000003 473500                    LDP3    3,,PR0
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:34   
         3 000134   300000 236100                    LDQ     0,,PR3
         3 000135   000033 772000                    QRL     27
         3 000136   000100 100506                    MLR     fill='000'O
         3 000137   300000 000001                    ADSC9   0,Q,PR3                  cn=0,n=1
         3 000140   200006 000001                    ADSC9   IMP_BUF+2,,AUTO          cn=0,n=1

      149     1724    3                 KEY_NAME.BYTES (KEY_NAME.LENGTH-1);
      150     1725    3               %FNC$ -> KV$PRM_DCLINPFNC.INPFNCTYP = INPFNCTYP;

   1725  3 000141   200121 236100                    LDQ     INPFNCTYP,,AUTO
         3 000142   000011 736000                    QLS     9
         3 000143   200006 676100                    ERQ     IMP_BUF+2,,AUTO
         3 000144   017000 376007                    ANQ     7680,DL
         3 000145   200006 656100                    ERSQ    IMP_BUF+2,,AUTO

      151     1726    3               IF KEY_NAME.LENGTH >= 2

   1726  3 000146   000003 473500                    LDP3    3,,PR0
         3 000147   300000 236100                    LDQ     0,,PR3
         3 000150   777000 376003                    ANQ     -512,DU
         3 000151   002000 116003                    CMPQ    1024,DU
         3 000152   000207 602000 3                  TNC     s:1748

      152     1727    3               THEN
      153     1728    4                 DO;

      154     1729    4                   IF KEY_NAME.LENGTH > 2

   1729  3 000153   003000 116003                    CMPQ    1536,DU
         3 000154   000162 602000 3                  TNC     s:1735

      155     1730    4                   THEN
      156     1731    5                     DO;

      157     1732    5                       %FNC$ -> KV$PRM_DCLINPFNC.INT2_TKN = KEY_NAME.BYTES(1);

   1732  3 000155   300000 236100                    LDQ     0,,PR3
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:35   
         3 000156   000011 772000                    QRL     9
         3 000157   200005 552104                    STBQ    IMP_BUF+1,'04'O,AUTO

      158     1733    5                       %FNC$ -> KV$PRM_DCLINPFNC.INT2_TKNTYP = %VC_TYP_CHAR#;

   1733  3 000160   000001 236000 4                  LDQ     1
         3 000161   200006 356100                    ANSQ    IMP_BUF+2,,AUTO

      159     1734    5                     END;

      160     1735    4                   %FNC$ -> KV$PRM_DCLINPFNC.INT1_TKN = KEY_NAME.BYTES(0);

   1735  3 000162   000003 473500                    LDP3    3,,PR0
         3 000163   300000 236100                    LDQ     0,,PR3
         3 000164   000011 772000                    QRL     9
         3 000165   200005 552110                    STBQ    IMP_BUF+1,'10'O,AUTO

      161     1736    4                   IF XUI_IMP.FNCKEY#

   1736  3 000166   000005 236100                    LDQ     5,,PR0
         3 000167   010000 316003                    CANQ    4096,DU
         3 000170   000176 600000 3                  TZE     s:1740

      162     1737    4                   THEN
      163     1738    4                     %FNC$ -> KV$PRM_DCLINPFNC.INT1_TKNTYP = %VC_TYP_FNCKEY#;

   1738  3 000171   200006 236100                    LDQ     IMP_BUF+2,,AUTO
         3 000172   000000 376000 4                  ANQ     0
         3 000173   000020 276003                    ORQ     16,DU
         3 000174   200006 756100                    STQ     IMP_BUF+2,,AUTO
         3 000175   000207 710000 3                  TRA     s:1748

      164     1739    4                   ELSE
      165     1740    4                     IF XUI_IMP.CTRSTR#

   1740  3 000176   020000 316003                    CANQ    8192,DU
         3 000177   000205 600000 3                  TZE     s:1744
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:36   

      166     1741    4                     THEN
      167     1742    4                       %FNC$ -> KV$PRM_DCLINPFNC.INT1_TKNTYP = %VC_TYP_CTR#;

   1742  3 000200   200006 236100                    LDQ     IMP_BUF+2,,AUTO
         3 000201   000000 376000 4                  ANQ     0
         3 000202   000010 276003                    ORQ     8,DU
         3 000203   200006 756100                    STQ     IMP_BUF+2,,AUTO
         3 000204   000207 710000 3                  TRA     s:1748

      168     1743    4                     ELSE
      169     1744    4                       %FNC$ -> KV$PRM_DCLINPFNC.INT1_TKNTYP = %VC_TYP_CHAR#;

   1744  3 000205   000000 236000 4                  LDQ     0
         3 000206   200006 356100                    ANSQ    IMP_BUF+2,,AUTO

      170     1745    4                 END;

      171     1746
      172     1747
      173     1748    3               IF KEY_VALUE.LENGTH > 255

   1748  3 000207   000004 473500                    LDP3    4,,PR0
         3 000210   300000 221100                    LDX1    0,,PR3
         3 000211   000400 101003                    CMPX1   256,DU
         3 000212   000347 603000 3                  TRC     BAD_KEYIN_VALUE_LENGTH

      174     1749    3               THEN
      175     1750    3                 GOTO BAD_KEYIN_VALUE_LENGTH;
      176     1751
      177     1752    3               %OPR$ -> KV$INPOPR_TXT.L = KEY_VALUE.LENGTH;

   1752  3 000213   300000 236100                    LDQ     0,,PR3
         3 000214   000011 772000                    QRL     9
         3 000215   200007 552110                    STBQ    IMP_BUF+3,'10'O,AUTO

      178     1753    3               %OPR$ -> KV$INPOPR_TXT.T = KEY_VALUE.TEXT;
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:37   

   1753  3 000216   200007 236100                    LDQ     IMP_BUF+3,,AUTO
         3 000217   000011 772000                    QRL     9
         3 000220   000777 376007                    ANQ     511,DL
         3 000221   000004 473500                    LDP3    4,,PR0
         3 000222   300000 221100                    LDX1    0,,PR3
         3 000223   000000 622006                    EAX2    0,QL
         3 000224   040140 100540                    MLR     fill='040'O
         3 000225   300000 400011                    ADSC9   0,,PR3                   cn=2,n=*X1
         3 000226   200007 600012                    ADSC9   IMP_BUF+3,,AUTO          cn=3,n=*X2

      179     1754    3               TOTAL_LENGTH = SIZEC (%OPR$ -> KV$INPOPR_TXT) +

   1754  3 000227   000003 621012                    EAX1    3,X2
         3 000230   000000 636011                    EAQ     0,X1
         3 000231   000022 772000                    QRL     18
         3 000232   000001 376007                    ANQ     1,DL
         3 000233   000003 621012                    EAX1    3,X2
         3 000234   000000 635011                    EAA     0,X1
         3 000235   000022 771000                    ARL     18
         3 000236   200126 755100                    STA     TOTAL_LENGTH+4,,AUTO
         3 000237   200126 036100                    ADLQ    TOTAL_LENGTH+4,,AUTO
         3 000240   000006 621006                    EAX1    6,QL
         3 000241   200122 741100                    STX1    TOTAL_LENGTH,,AUTO

      180     1755    3                 MOD (SIZEC (%OPR$ -> KV$INPOPR_TXT), 2) +
      181     1756    3                 SIZEC ( KV$PRM_DCLINPFNC ) - 4;
      182     1757    3               %FNC$ -> KV$PRM_DCLINPFNC.LNG.BYT1 = TOTAL_LENGTH_BYTES.BYTE1;

   1757  3 000242   200122 236100                    LDQ     TOTAL_LENGTH,,AUTO
         3 000243   000001 736000                    QLS     1
         3 000244   200005 552140                    STBQ    IMP_BUF+1,'40'O,AUTO

      183     1758    3               %FNC$ -> KV$PRM_DCLINPFNC.LNG.BYT2 = TOTAL_LENGTH_BYTES.BYTE2;

   1758  3 000245   200122 236100                    LDQ     TOTAL_LENGTH,,AUTO
         3 000246   200005 676100                    ERQ     IMP_BUF+1,,AUTO
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:38   
         3 000247   000377 376003                    ANQ     255,DU
         3 000250   200005 656100                    ERSQ    IMP_BUF+1,,AUTO

      184     1759
      185     1760    3               TOTAL_LENGTH = TOTAL_LENGTH + 4;

   1760  3 000251   000004 623011                    EAX3    4,X1
         3 000252   200122 743100                    STX3    TOTAL_LENGTH,,AUTO

      186     1761    3             END DECLARE_KEY_NAME;

      187     1762
      188     1763    2           IF VBOUND ( XUI_IMP.IMP_BUFFER_ ) = 0

   1763  3 000253   000000 236100                    LDQ     0,,PR0
         3 000254   000034 316000 xsym               CANQ    B_VECTNIL+28
         3 000255   000263 601000 3                  TNZ     s:1774

      189     1764    2           THEN
      190     1765    3             DO;

      191     1766    3               CALL WRITE_SINGLE_RECORD

   1766  3 000256   000401 701000 3                  TSX1    WRITE_SINGLE_RECORD
         3 000257   000261 702000 3                  TSX2    s:1769
         3 000260   000262 710000 3                  TRA     s:1771

      192     1767    3               WHENALTRETURN
      193     1768    4                 DO;

      194     1769    4                   ALTRETURN;

   1769  3 000261   000000 702200 xent               TSX2  ! X66_AALT

      195     1770    4                 END;
      196     1771    3               RETURN;

PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:39   
   1771  3 000262   000000 702200 xent               TSX2  ! X66_ARET

      197     1772    3             END;
      198     1773
      199     1774    2           IF VBOUND ( XUI_IMP.IMP_BUFFER_ ) - XUI_IMP.IMP_BUFFER_OFFSET

   1774  3 000263   000000 236100                    LDQ     0,,PR0
         3 000264   000020 772000                    QRL     16
         3 000265   000002 136100                    SBLQ    2,,PR0
         3 000266   200122 235100                    LDA     TOTAL_LENGTH,,AUTO
         3 000267   000022 771000                    ARL     18
         3 000270   200126 755100                    STA     TOTAL_LENGTH+4,,AUTO
         3 000271   200126 116100                    CMPQ    TOTAL_LENGTH+4,,AUTO
         3 000272   000277 605000 3                  TPL     s:1783

      200     1775    2             < TOTAL_LENGTH
      201     1776    2           THEN
      202     1777    2             CALL WRITE_BUFFER

   1777  3 000273   000362 701000 3                  TSX1    WRITE_BUFFER
         3 000274   000276 702000 3                  TSX2    s:1780
         3 000275   000277 710000 3                  TRA     s:1783

      203     1778    2             WHENALTRETURN
      204     1779    3               DO;

      205     1780    3                 ALTRETURN;

   1780  3 000276   000000 702200 xent               TSX2  ! X66_AALT

      206     1781    3               END;
      207     1782
      208     1783    2           IF VBOUND ( XUI_IMP.IMP_BUFFER_ ) - XUI_IMP.IMP_BUFFER_OFFSET

   1783  3 000277   200003 470500                    LDP0    @XUI_IMP,,AUTO
         3 000300   000000 236100                    LDQ     0,,PR0
         3 000301   000020 772000                    QRL     16
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:40   
         3 000302   000002 136100                    SBLQ    2,,PR0
         3 000303   200122 235100                    LDA     TOTAL_LENGTH,,AUTO
         3 000304   000022 771000                    ARL     18
         3 000305   200126 755100                    STA     TOTAL_LENGTH+4,,AUTO
         3 000306   200126 116100                    CMPQ    TOTAL_LENGTH+4,,AUTO
         3 000307   000315 605000 3                  TPL     PACK_BUFFER

      209     1784    2             < TOTAL_LENGTH
      210     1785    2           THEN
      211     1786    3             DO;

      212     1787    3               CALL WRITE_SINGLE_RECORD

   1787  3 000310   000401 701000 3                  TSX1    WRITE_SINGLE_RECORD
         3 000311   000313 702000 3                  TSX2    s:1790
         3 000312   000314 710000 3                  TRA     s:1792

      213     1788    3               WHENALTRETURN
      214     1789    4                 DO;

      215     1790    4                   ALTRETURN;

   1790  3 000313   000000 702200 xent               TSX2  ! X66_AALT

      216     1791    4                 END;
      217     1792    3               RETURN;

   1792  3 000314   000000 702200 xent               TSX2  ! X66_ARET

      218     1793    3             END;
      219     1794    2           ELSE
      220     1795    2   PACK_BUFFER:
      221     1796    3             DO;

   1796  3 000315                       PACK_BUFFER  null
      222     1797    3               IF XUI_IMP.IMP_BUFFER_OFFSET = 0

PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:41   
   1797  3 000315   000002 235100                    LDA     2,,PR0
         3 000316   000325 601000 3                  TNZ     s:1803

      223     1798    3               THEN
      224     1799    4                 DO;

      225     1800    4                   VBASE ( XUI_IMP.IMP_BUFFER_ ) -> PAD$BYTE = %VC_IMP_VFC;

   1800  3 000317   000001 471500                    LDP1    1,,PR0
         3 000320   000100 101400                    MRL     fill='000'O
         3 000321   000004 000004 4                  ADSC9   4                        cn=0,n=4
         3 000322   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

      226     1801    4                   XUI_IMP.IMP_BUFFER_OFFSET = 1;

   1801  3 000323   000001 235007                    LDA     1,DL
         3 000324   000002 755100                    STA     2,,PR0

      227     1802    4                 END;

      228     1803    3               SUBSTR ( PINCRC ( VBASE ( XUI_IMP.IMP_BUFFER_ ), XUI_IMP.
              1803                        IMP_BUFFER_OFFSET ) -> B$CHARS, 0, TOTAL_LENGTH ) =

   1803  3 000325   000002 236100                    LDQ     2,,PR0
         3 000326   000001 471500                    LDP1    1,,PR0
         3 000327   200122 220100                    LDX0    TOTAL_LENGTH,,AUTO
         3 000330   040146 100540                    MLR     fill='040'O
         3 000331   200004 400010                    ADSC9   IMP_BUF,,AUTO            cn=2,n=*X0
         3 000332   100000 000010                    ADSC9   0,Q,PR1                  cn=0,n=*X0

      229     1804    3                 SUBSTR ( IMP_BUF.STUFF, 0, TOTAL_LENGTH );
      230     1805    3               XUI_IMP.IMP_BUFFER_OFFSET = XUI_IMP.IMP_BUFFER_OFFSET

   1805  3 000333   200122 236100                    LDQ     TOTAL_LENGTH,,AUTO
         3 000334   000022 772000                    QRL     18
         3 000335   000002 036100                    ADLQ    2,,PR0
         3 000336   000002 756100                    STQ     2,,PR0
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:42   

      231     1806    3                 + TOTAL_LENGTH;
      232     1807    3             END PACK_BUFFER;

      233     1808
      234     1809    2         END IMP_KEY_NAME;

      235     1810
      236     1811    1       IF XUI_IMP.FLUSH#

   1811  3 000337   000005 236100                    LDQ     5,,PR0
         3 000340   040000 316003                    CANQ    16384,DU
         3 000341   000346 600000 3                  TZE     s:1822

      237     1812    1       THEN
      238     1813    1   FLUSH_KEY_NAMES:
      239     1814    2         DO;

   1814  3 000342                       FLUSH_KEY_N* null
      240     1815    2           CALL WRITE_BUFFER

   1815  3 000342   000362 701000 3                  TSX1    WRITE_BUFFER
         3 000343   000345 702000 3                  TSX2    s:1818
         3 000344   000346 710000 3                  TRA     s:1822

      241     1816    2           WHENALTRETURN
      242     1817    3             DO;

      243     1818    3               ALTRETURN;

   1818  3 000345   000000 702200 xent               TSX2  ! X66_AALT

      244     1819    3             END;
      245     1820    2         END FLUSH_KEY_NAMES;

      246     1821
      247     1822    1       RETURN;
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:43   

   1822  3 000346   000000 702200 xent               TSX2  ! X66_ARET

      248     1823
      249     1824    1   BAD_KEYIN_VALUE_LENGTH:
      250     1825    1       ERRNUMBER = %E$BAD_KEYIN_VALUE_LENGTH;

   1825  3 000347   000203 235007       BAD_KEYIN_V* LDA     131,DL
         3 000350   200120 755100                    STA     ERRNUMBER,,AUTO

      251     1826    1       GOTO SERIOUS_ERROR;

   1826  3 000351   000352 710000 3                  TRA     SERIOUS_ERROR

      252     1827
      253     1828    1   SERIOUS_ERROR:
      254     1829    1       XUI_IMP.ERRCODE = XUI_ERRCODE;

   1829  3 000352   000000 236000 1     SERIOUS_ERR* LDQ     XUI_ERRCODE
         3 000353   000006 756100                    STQ     6,,PR0

      255     1830    1       XUI_IMP.ERRCODE.ERR# = ERRNUMBER;

   1830  3 000354   200120 236100                    LDQ     ERRNUMBER,,AUTO
         3 000355   000003 736000                    QLS     3
         3 000356   000006 676100                    ERQ     6,,PR0
         3 000357   377770 376007                    ANQ     131064,DL
         3 000360   000006 656100                    ERSQ    6,,PR0

      256     1831    1       ALTRETURN;

   1831  3 000361   000000 702200 xent               TSX2  ! X66_AALT

      257     1832
      258     1833        %EJECT;
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:44   
      259     1834    1   WRITE_BUFFER: PROC ALTRET;

   1834  3 000362   200124 741300       WRITE_BUFFER STX1  ! TOTAL_LENGTH+2,,AUTO

      260     1835
      261     1836    2       IF XUI_IMP.IMP_BUFFER_OFFSET <= 1

   1836  3 000363   200003 470500                    LDP0    @XUI_IMP,,AUTO
         3 000364   000002 235100                    LDA     2,,PR0
         3 000365   000001 115007                    CMPA    1,DL
         3 000366   000370 605400 3                  TPNZ    s:1840

      262     1837    2       THEN
      263     1838    2         RETURN;

   1838  3 000367   000001 702211                    TSX2  ! 1,X1

      264     1839
      265     1840    2       WRITE_INP_FUNC.BUF_.BUF$ = VBASE ( XUI_IMP.IMP_BUFFER_ );

   1840  3 000370   000001 236100                    LDQ     1,,PR0
         3 000371   000077 756000 2                  STQ     WRITE_INP_FUNC+5

      266     1841    2       WRITE_INP_FUNC.BUF_.BOUND = XUI_IMP.IMP_BUFFER_OFFSET - 1;

   1841  3 000372   000002 236100                    LDQ     2,,PR0
         3 000373   000001 136007                    SBLQ    1,DL
         3 000374   000020 736000                    QLS     16
         3 000375   000076 676000 2                  ERQ     WRITE_INP_FUNC+4
         3 000376   000034 376000 xsym               ANQ     B_VECTNIL+28
         3 000377   000076 656000 2                  ERSQ    WRITE_INP_FUNC+4

      267     1842    2       GOTO WRITE_COMMON;

   1842  3 000400   000414 710000 3                  TRA     WRITE_COMMON

      268     1843
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:45   
      269     1844    2   WRITE_SINGLE_RECORD: ENTRY ALTRET;

   1844  3 000401   200124 741300       WRITE_SINGL* STX1  ! TOTAL_LENGTH+2,,AUTO

      270     1845
      271     1846    2       WRITE_INP_FUNC.BUF_.BUF$ = ADDR ( IMP_BUF.VFC );

   1846  3 000402   200126 452500                    STP2    TOTAL_LENGTH+4,,AUTO
         3 000403   200126 236100                    LDQ     TOTAL_LENGTH+4,,AUTO
         3 000404   000005 036000 4                  ADLQ    5
         3 000405   000077 756000 2                  STQ     WRITE_INP_FUNC+5

      272     1847    2       WRITE_INP_FUNC.BUF_.BOUND = ( LENGTHC ( IMP_BUF.VFC )

   1847  3 000406   200122 236100                    LDQ     TOTAL_LENGTH,,AUTO
         3 000407   777777 376003                    ANQ     -1,DU
         3 000410   000002 772000                    QRL     2
         3 000411   000076 676000 2                  ERQ     WRITE_INP_FUNC+4
         3 000412   000034 376000 xsym               ANQ     B_VECTNIL+28
         3 000413   000076 656000 2                  ERSQ    WRITE_INP_FUNC+4

      273     1848    2         + TOTAL_LENGTH ) - 1;
      274     1849
      275     1850    2   WRITE_COMMON:
      276     1851    2       IF NOT DCBADDR ( XUI_IMP.IMPDCBNUM# ) -> F$DCB.FCD#

   1851  3 000414   000006 470400 4     WRITE_COMMON LDP0    6
         3 000415   000000 471500                    LDP1    0,,PR0
         3 000416   200003 473500                    LDP3    @XUI_IMP,,AUTO
         3 000417   300005 720100                    LXL0    5,,PR3
         3 000420   100000 474510                    LDP4    0,X0,PR1
         3 000421   400031 236100                    LDQ     25,,PR4
         3 000422   020000 316007                    CANQ    8192,DL
         3 000423   000431 601000 3                  TNZ     s:1858

      277     1852    2       THEN
      278     1853    3         DO;
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:46   

      279     1854    3           OPEN_INP_FUNC.V.DCB# = XUI_IMP.IMPDCBNUM#;

   1854  3 000424   000044 740000 2                  STX0    OPEN_INP_FUNC+36

      280     1855    3           CALL M$OPEN (OPEN_INP_FUNC)

   1855  3 000425   000000 630400 2                  EPPR0   OPEN_INP_FUNC
         3 000426   450000 713400                    CLIMB   alt,open
         3 000427   410400 401760                    pmme    nvectors=18
         3 000430   000444 702000 3                  TSX2    OPEN_INP_FUNC_FAILED

      281     1856    3             ALTRET (OPEN_INP_FUNC_FAILED);
      282     1857    3         END;

      283     1858    2       WRITE_INP_FUNC.V.DCB# = XUI_IMP.IMPDCBNUM#;

   1858  3 000431   200003 470500                    LDP0    @XUI_IMP,,AUTO
         3 000432   000005 720100                    LXL0    5,,PR0
         3 000433   000102 740000 2                  STX0    WRITE_INP_FUNC+8

      284     1859    2       CALL M$WRITE (WRITE_INP_FUNC)

   1859  3 000434   000072 630400 2                  EPPR0   WRITE_INP_FUNC
         3 000435   440001 713400                    CLIMB   alt,write
         3 000436   401400 401760                    pmme    nvectors=4
         3 000437   000444 702000 3                  TSX2    OPEN_INP_FUNC_FAILED

      285     1860    2         ALTRET (WRITE_INP_FUNC_FAILED);
      286     1861
      287     1862    2       XUI_IMP.IMP_BUFFER_OFFSET = 0;

   1862  3 000440   200003 470500                    LDP0    @XUI_IMP,,AUTO
         3 000441   000002 450100                    STZ     2,,PR0

      288     1863
      289     1864    2       RETURN;
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:47   

   1864  3 000442   200124 221300                    LDX1  ! TOTAL_LENGTH+2,,AUTO
         3 000443   000001 702211                    TSX2  ! 1,X1

   1862  3 000444                       OPEN_INP_FU* null
   1862  3 000444                       WRITE_INP_F* null
      290     1865
      291     1866    2   OPEN_INP_FUNC_FAILED: ;
      292     1867    2   WRITE_INP_FUNC_FAILED: ;
      293     1868    2       XUI_IMP.ERRCODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   1868  3 000444   000000 470400 xsym               LDP0    B$TCB$
         3 000445   000000 471500                    LDP1    0,,PR0
         3 000446   100102 236100                    LDQ     66,,PR1
         3 000447   200003 473500                    LDP3    @XUI_IMP,,AUTO
         3 000450   300006 756100                    STQ     6,,PR3

      294     1869    2       ALTRETURN;

   1869  3 000451   200124 221300                    LDX1  ! TOTAL_LENGTH+2,,AUTO
         3 000452   000000 702211                    TSX2  ! 0,X1
      295     1870
      296     1871    2   END WRITE_BUFFER;
      297     1872
      298     1873    1   END VDP$IMP;

PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:48   
--  Include file information  --

   VC_EQUS.:TOOLE04  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VDP_MACRO_C.:VDA5TOU  is referenced.
   KV$PRM.:LIBRARY  is referenced.
   KV$INPFNC.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$IMP.
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:49   

 **** Variables and constants ****

  ****  Section 001 RoData VDP$IMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 XUI_ERRCODE

  ****  Section 002  Data  VDP$IMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2088)  r     1 OPEN_INP_FUNC             72-0-0/d STRC(432)   r     1 WRITE_INP_FUNC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @XUI_IMP                 120-0-0/w UBIN        r     1 ERRNUMBER
     4-0-0/w STRC(2718)  r     1 IMP_BUF                  121-0-0/w SBIN        r     1 INPFNCTYP
   122-0-0/h UBIN(18)    r     1 TOTAL_LENGTH             122-0-0/h STRC(18)    r     1 TOTAL_LENGTH_BYTES
    *0-0-0/d STRC(252)   r     1 XUI_IMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:50   

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/c CHAR(300)   r     1 B$CHARS
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w ASTR(9)     r     1 KEY_NAME                   0-0-0/w ASTR(18)    r     1 KEY_VALUE
     0-0-0/w STRC(18)    r     1 KV$INPOPR                  0-0-0/w ACHR        r     1 KV$INPOPR_DUMMY
     0-0-0/w ASTR(27)    r     1 KV$INPOPR_TXT              0-0-0/h STRC(81)    r     1 KV$PRM_DCLINPFNC
     0-0-0/h STRC        r     1 KV$PRM_RLSINPFNC           0-0-0/c UBIN(9)     r     1 PAD$BYTE


   Procedure VDP$IMP requires 299 words for executable code.
   Procedure VDP$IMP requires 88 words of local(AUTO) storage.

    No errors detected in file VDP$IMP.:VDA5TSI    .
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:51   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:52   
          MINI XREF LISTING

B$ALT.CODE
      1134**DCL      1134--REDEF    1135--REDEF    1135--REDEF
B$ALT.ERR
      1135**DCL      1868>>ASSIGN
B$ALT.ERR.ERR#
      1136**DCL      1136--REDEF
B$ALT.EVID
      1135**DCL      1135--REDEF    1135--REDEF
B$CHARS
      1651**DCL      1803<<ASSIGN
B$TCB.ALT$
      1130**DCL      1868>>ASSIGN
B$TCB$
      1140**DCL      1868>>ASSIGN
BAD_KEYIN_VALUE_LENGTH
      1825**LABEL    1750--GOTO
ERRNUMBER
      1653**DCL      1825<<ASSIGN   1830>>ASSIGN
F$DCB.ACTPOS
      1174**DCL      1174--REDEF
F$DCB.ARS#
      1148**DCL      1148--REDEF
F$DCB.ATTR
      1167**DCL      1168--REDEF
F$DCB.BORROW
      1182**DCL      1182--REDEF    1182--REDEF    1182--REDEF
F$DCB.DCBNAME.L
      1196**DCL      1196--IMP-SIZ
F$DCB.EOMCHAR#
      1152**DCL      1152--REDEF
F$DCB.FCD#
      1161**DCL      1851>>IF
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:53   
F$DCB.FLDID
      1177**DCL      1177--REDEF
F$DCB.FORM$
      1171**DCL      1171--REDEF
F$DCB.FSECT
      1187**DCL      1187--REDEF
F$DCB.FSN#
      1164**DCL      1164--REDEF    1164--REDEF    1165--REDEF
F$DCB.HEADER$
      1170**DCL      1170--REDEF
F$DCB.IXTNSIZE#
      1168**DCL      1168--REDEF
F$DCB.LASTSTA$
      1157**DCL      1157--REDEF
F$DCB.LVL
      1183**DCL      1183--REDEF
F$DCB.NAME#.C
      1158**DCL      1158--REDEF
F$DCB.NOEOF
      1180**DCL      1180--REDEF
F$DCB.NRECS#
      1169**DCL      1169--REDEF
F$DCB.NRECX
      1188**DCL      1188--REDEF
F$DCB.OHDR
      1180**DCL      1180--REDEF
F$DCB.ORG#
      1163**DCL      1163--REDEF
F$DCB.PRECNO
      1186**DCL      1186--REDEF
F$DCB.RCSZ
      1192**DCL      1192--REDEF
F$DCB.RES#
      1159**DCL      1159--REDEF
F$DCB.SETX
      1171**DCL      1171--REDEF
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:54   
F$DCB.TAB$
      1171**DCL      1171--REDEF
F$DCB.TDA
      1185**DCL      1186--REDEF
F$DCB.WSN#
      1159**DCL      1159--REDEF
IMP_BUF.STUFF
      1649**DCL      1693--ASSIGN   1694--ASSIGN   1695--ASSIGN   1696--ASSIGN   1698--ASSIGN   1705--ASSIGN
      1706--ASSIGN   1708--ASSIGN   1709--ASSIGN   1710--ASSIGN   1712--ASSIGN   1713--ASSIGN   1714--ASSIGN
      1719--ASSIGN   1720--ASSIGN   1723--ASSIGN   1725--ASSIGN   1732--ASSIGN   1733--ASSIGN   1735--ASSIGN
      1738--ASSIGN   1742--ASSIGN   1744--ASSIGN   1752--ASSIGN   1753--ASSIGN   1753--ASSIGN   1754--ASSIGN
      1754--ASSIGN   1754--ASSIGN   1754--ASSIGN   1757--ASSIGN   1758--ASSIGN   1803>>ASSIGN
IMP_BUF.VFC
      1648**DCL      1670<<ASSIGN   1846--ASSIGN   1847--ASSIGN
INPFNCTYP
      1654**DCL      1673<<ASSIGN   1677<<ASSIGN   1681<<ASSIGN   1685<<ASSIGN   1687<<ASSIGN   1695>>ASSIGN
      1725>>ASSIGN
KEY_NAME
      1120**DCL      1665--IF
KEY_NAME.BYTES
      1122**DCL      1123--REDEF    1696>>ASSIGN   1723>>ASSIGN   1732>>ASSIGN   1735>>ASSIGN
KEY_NAME.LENGTH
      1121**DCL      1123--IMP-SIZ  1696>>ASSIGN   1723>>ASSIGN   1726>>IF       1729>>IF
KEY_VALUE
      1124**DCL      1689--IF
KEY_VALUE.BYTES
      1126**DCL      1127--REDEF
KEY_VALUE.LENGTH
      1125**DCL      1127--IMP-SIZ  1748>>IF       1752>>ASSIGN   1753>>ASSIGN
KEY_VALUE.TEXT
      1127**DCL      1753>>ASSIGN
KV$INPOPR
      1442**DCL      1706<<ASSIGN
KV$INPOPR.ID
      1444**DCL      1442--IMP-SIZ  1444--REDEF    1445--REDEF    1445--REDEF
KV$INPOPR.RED
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:55   
      1444**DCL      1712<<ASSIGN
KV$INPOPR.TYP
      1444**DCL      1713<<ASSIGN
KV$INPOPR_DUMMY
      1442**DCL      1442--REDEF    1445--REDEF    1448--REDEF
KV$INPOPR_TXT
      1448**DCL      1754--ASSIGN   1754--ASSIGN
KV$INPOPR_TXT.DSP
      1453**DCL      1714<<ASSIGN   1719<<ASSIGN
KV$INPOPR_TXT.ECH
      1448**DCL      1720<<ASSIGN
KV$INPOPR_TXT.L
      1453**DCL      1453--IMP-SIZ  1752<<ASSIGN   1753>>ASSIGN   1754>>ASSIGN   1754>>ASSIGN
KV$INPOPR_TXT.T
      1453**DCL      1753<<ASSIGN
KV$PRM_DCLINPFNC
      1407**DCL      1705<<ASSIGN   1706--ASSIGN   1712--ASSIGN   1713--ASSIGN   1714--ASSIGN   1719--ASSIGN
      1720--ASSIGN   1752--ASSIGN   1753--ASSIGN   1753--ASSIGN   1754--ASSIGN   1754--ASSIGN   1754--ASSIGN
      1754--ASSIGN   1754--ASSIGN
KV$PRM_DCLINPFNC.ID_TKN
      1418**DCL      1723<<ASSIGN
KV$PRM_DCLINPFNC.INPFNCTYP
      1431**DCL      1725<<ASSIGN
KV$PRM_DCLINPFNC.INT1_TKN
      1418**DCL      1735<<ASSIGN
KV$PRM_DCLINPFNC.INT1_TKNTYP
      1425**DCL      1709<<ASSIGN   1738<<ASSIGN   1742<<ASSIGN   1744<<ASSIGN
KV$PRM_DCLINPFNC.INT2_TKN
      1418**DCL      1732<<ASSIGN
KV$PRM_DCLINPFNC.INT2_TKNTYP
      1425**DCL      1710<<ASSIGN   1733<<ASSIGN
KV$PRM_DCLINPFNC.LNG.BYT1
      1416**DCL      1757<<ASSIGN
KV$PRM_DCLINPFNC.LNG.BYT2
      1416**DCL      1758<<ASSIGN
KV$PRM_DCLINPFNC.TYP
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:56   
      1412**DCL      1708<<ASSIGN
KV$PRM_RLSINPFNC
      1478**DCL      1693<<ASSIGN   1698--ASSIGN   1700--ASSIGN
KV$PRM_RLSINPFNC.ID_TKN
      1483**DCL      1696<<ASSIGN
KV$PRM_RLSINPFNC.INPFNCTYP
      1488**DCL      1695<<ASSIGN
KV$PRM_RLSINPFNC.LNG
      1483**DCL      1698<<ASSIGN
KV$PRM_RLSINPFNC.TYP
      1483**DCL      1694<<ASSIGN
M$OPEN
        33**DCL-ENT  1855--CALL
M$WRITE
        34**DCL-ENT  1859--CALL
OPEN_INP_FUNC
      1313**DCL      1855<>CALL
OPEN_INP_FUNC.ACSVEH_
      1315**DCL      1316--REDEF
OPEN_INP_FUNC.ALTKEYS_
      1321**DCL      1322--REDEF    1322--REDEF
OPEN_INP_FUNC.HDR_
      1320**DCL      1321--REDEF
OPEN_INP_FUNC.TAB_
      1319**DCL      1320--REDEF
OPEN_INP_FUNC.UHL_
      1313**DCL      1314--REDEF    1314--REDEF
OPEN_INP_FUNC.V
      1322**DCL      1313--DCLINIT
OPEN_INP_FUNC.V.DCB#
      1322**DCL      1854<<ASSIGN
OPEN_INP_FUNC.V.FSN#
      1353**DCL      1353--REDEF    1353--REDEF
OPEN_INP_FUNC.WSN_
      1319**DCL      1319--REDEF
OPEN_INP_FUNC_FAILED IN PROCEDURE WRITE_BUFFER
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:57   
      1862**LABEL    1855--CALLALT
PAD$BYTE
      1433**DCL      1800<<ASSIGN
SERIOUS_ERROR
      1829**LABEL    1826--GOTO
TOTAL_LENGTH
      1657**DCL      1658--REDEF    1700<<ASSIGN   1754<<ASSIGN   1760<<ASSIGN   1760>>ASSIGN   1774>>IF
      1783>>IF       1803>>ASSIGN   1803>>ASSIGN   1805>>ASSIGN   1847>>ASSIGN
TOTAL_LENGTH_BYTES.BYTE1
      1659**DCL      1757>>ASSIGN
TOTAL_LENGTH_BYTES.BYTE2
      1660**DCL      1758>>ASSIGN
WRITE_BUFFER
      1834**PROC     1777--CALL     1815--CALL
WRITE_COMMON IN PROCEDURE WRITE_BUFFER
      1851**LABEL    1842--GOTO
WRITE_INP_FUNC
      1374**DCL      1859<>CALL
WRITE_INP_FUNC.BUF_.BOUND
      1374**DCL      1841<<ASSIGN   1847<<ASSIGN
WRITE_INP_FUNC.BUF_.BUF$
      1376**DCL      1840<<ASSIGN   1846<<ASSIGN
WRITE_INP_FUNC.STATION_
      1376**DCL      1376--REDEF
WRITE_INP_FUNC.V
      1377**DCL      1374--DCLINIT
WRITE_INP_FUNC.V.DCB#
      1377**DCL      1858<<ASSIGN
WRITE_INP_FUNC.V.DVBYTE.VFC#
      1383**DCL      1383--REDEF
WRITE_INP_FUNC_FAILED IN PROCEDURE WRITE_BUFFER
      1862**LABEL    1859--CALLALT
WRITE_SINGLE_RECORD IN PROCEDURE WRITE_BUFFER
      1844**ENTRY    1766--CALL     1787--CALL
XUI_ERRCODE
      1213**DCL      1829>>ASSIGN
PL6.E3A0      #001=VDP$IMP File=VDP$IMP.:VDA5TSI                                 FRI 07/04/97 11:36 Page:58   
XUI_IMP
      1062**DCL        21--PROC     1112--REDEF
XUI_IMP.CTRSTR#
      1065**DCL      1683>>IF       1740>>IF
XUI_IMP.ERRCODE
      1081**DCL      1663<<ASSIGN   1829<<ASSIGN   1868<<ASSIGN
XUI_IMP.ERRCODE.ERR#
      1109**DCL      1830<<ASSIGN
XUI_IMP.FLUSH#
      1064**DCL      1811>>IF
XUI_IMP.FNCKEY#
      1065**DCL      1679>>IF       1736>>IF
XUI_IMP.IMPDCBNUM#
      1065**DCL      1851--IF       1854>>ASSIGN   1858>>ASSIGN
XUI_IMP.IMP_BUFFER_
      1062**DCL      1763>>IF       1774>>IF       1783>>IF       1800>>ASSIGN   1803>>ASSIGN   1840>>ASSIGN
XUI_IMP.IMP_BUFFER_OFFSET
      1062**DCL      1774>>IF       1783>>IF       1797>>IF       1801<<ASSIGN   1803>>ASSIGN   1805<<ASSIGN
      1805>>ASSIGN   1836>>IF       1841>>ASSIGN   1862<<ASSIGN
XUI_IMP.INPUT_OPTION#
      1064**DCL      1716>>IF
XUI_IMP.KEY_NAME$
      1063**DCL      1120--IMP-PTR  1665>>IF       1696>>ASSIGN   1696>>ASSIGN   1723>>ASSIGN   1723>>ASSIGN
      1726>>IF       1729>>IF       1732>>ASSIGN   1735>>ASSIGN
XUI_IMP.KEY_VALUE$
      1063**DCL      1124--IMP-PTR  1689>>IF       1748>>IF       1752>>ASSIGN   1753>>ASSIGN   1753>>ASSIGN
XUI_IMP.PRIMARY#
      1063**DCL      1671>>IF
XUI_IMP.SECONDARY#
      1064**DCL      1675>>IF
