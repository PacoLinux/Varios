VERSION A05

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:1    
        1        1        /*M* VDG$MAIN - Main procedure for 6Edit */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11
       12       12        /*P* NAME: VDG$MAIN
       13       13            PURPOSE:
       14       14                Main procedure for 6Edit.
       15       15            DESCRIPTION:
       16       16                This module contains several external routines:
       17       17
       18       18                VDG$MAIN
       19       19                Main program for 6Edit processor.  Receives initial control
       20       20                from the command processor.  Initializes the world, prepares
       21       21                to process the optional context file and the invocation
       22       22                command line, validates the initial workspace,
       23       23                establishes BREAK control, then calls VDI$PDRIVER
       24       24                to begin processing commands.
       25       25
       26       26                VDG$MINIT
       27       27                Initialization routine.  Contains (almost) all global static
       28       28                data, initializes it, prepares dynamic data segments for
       29       29                VDG$OALLOC, initializes control blocks for library routines.
       30       30
       31       31                VDG$MTERMINATE
       32       32                Termination routine.  Called when user types END command,
       33       33                or when fatal error encountered.  Closes all files and all
       34       34                windows, restores the terminal to its original state,
       35       35                passes any user-specified $RESTORE command to IBEX,
       36       36                updates the statistics file, reports any final, fatal
       37       37                error message, and exits setting the STEPCC and IBEX-error-code
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:2    
       38       38                appropriately.
       39       39        */
       40       40
       41       41        /*D* NAME: VDG$MAIN
       42       42            PARAMETERS:
       43       43                None.
       44       44            INPUT:
       45       45                B$JIT.FACCT - User's !DIR account.
       46       46                B$JIT.ACCT - User's logon account.
       47       47                If B$JIT.PRFLAGS.CONTINUED = %FALSE, then
       48       48                    B$JIT.CCBUF contains B$JIT.CCARS chars of command line
       49       49                    text.  B$JIT.CCDISP is the offset into B$JIT.CCBUF
       50       50                    of the left parenthesis in front of the "options"
       51       51                    (command-list).
       52       52                Else:
       53       53                    The file *CONTINUATION_COMMANDS contains the records of a
       54       54                    multiline invocation command line, including the
       55       55                    first line with its rununit fid.  B$JIT.CCARS contains
       56       56                    the total number of bytes in all the records in the file.
       57       57                    B$JIT.CCDISP is the offset into the entire set of
       58       58                    characters (as tho the records of the *CONTINUATION_COMMANDS
       59       59                    file were laid end-to-end) of the left parenthesis.
       60       60            DESCRIPTION:
       61       61                VDG$MAIN gets initial control from IBEX.
       62       62                Call VDG$MINIT, VDP$WINIT, and VDG$WINIT, in that order, to initialize
       63       63                    everything to the point where we can allocate dynamic storage and
       64       64                    converse with the user in serial mode.
       65       65                If the user used incorrect syntax to invoke 6Edit, write the error
       66       66                    message and abort.
       67       67                Take exit-control, BREAK-control, and some trap-controls.
       68       68                Push a first VD$CMD_STREAM for the command window.  This is always
       69       69                    the bottom VD$CMD_STREAM on the command-stream stack.
       70       70                Look for command input from 4 places; if we find any, push
       71       71                    VD$CMD_STREAMs onto the command stream stack in the following order:
       72       72                      1) M$SI assigned to non-interactive file => CS_DCB
       73       73                      2) Options on invocation command line    => CS_BUFFER
       74       74                      3) M$FILE (DCB #1 on invocation line)    => CS_TREE w/ED cmd
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:3    
       75       75                      4) Context file                          => CS_DCB
       76       76                    Note that the VD$CMD_STREAMs will be processed in the opposite
       77       77                    order:
       78       78                      1) First the context file, to let the user override any
       79       79                            operational defaults (such as terminal parameters) and to
       80       80                            define any synonyms the user expects to be able to use in
       81       81                            the other inputs.
       82       82                      2) If DCB #1 on the invocation command line was set, an already-
       83       83                            encoded InTree specifying an EDIT DCB command for the #1
       84       84                            DCB.
       85       85                      3) The invocation command line options;
       86       86                      4) M$SI assigned to a READ-file of 6Edit commands. M$SI is used
       87       87                            last because, when it's set to something interactive
       88       88                            (another window), it's used last then (tho no
       89       89                            VD$CMD_STREAM is pushed for it in that case).
       90       90                Prepare to process the invocation command line options.
       91       91                    Either B$JIT.CCBUF has the entire invocation command line, or
       92       92                        a multi-line invocation command line is stored in a temporary
       93       93                        file built by IBEX.
       94       94                    If CCBUF has the command-line, copy it to dynamic storage.
       95       95                    If the command-line is in a file, read the file records
       96       96                        into dynamic storage, laying them end-to-end, so
       97       97                        they form one huge command line.
       98       98                    Push a VD$CMD_STREAM pointing to the new command line.
       99       99                    Position the CMD$STREAM so the first char parsed is just
      100      100                        beyond the left parenthesis preceding the "options"
      101      101                        (or where IBEX says the left paren is via B$JIT.CCDISP).
      102      102                        Also omit the optional trailing right parenthesis from
      103      103                        the buffer.
      104      104                See if the user assigned M$FILE (either on the invocation
      105      105                    command line as #1, or via a prior SET command).  If so, build
      106      106                    an encoded EDIT DCB command in a VD$CMD_STREAM's InTree and push
      107      107                    it onto the command stream stack.
      108      108                    Also, flag the fact that the user assigned M$FILE, so that
      109      109                    when we're reading the context file we'll know to ignore any
      110      110                    Windows in it.
      111      111                Search for a context file, using a file name and a list of accounts
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:4    
      112      112                        to search.  The default name includes %SETUP_FN_PROFILE in it,
      113      113                        specifying that each account is to be searched for that name,
      114      114                        both omitting and including the terminal profile at that point
      115      115                        in the name.
      116      116                    But first, see if the IBEX command variable "SETUP_6EDIT" has a
      117      117                        value; if so, M$FID it's value.  If there is an account part,
      118      118                        it replaces the entire default account search list (we'll only
      119      119                        search the one given account).  In the name part, replace any
      120      120                        appearance of %SETUP_FN_USER with the user's JIT.UNAME.
      121      121                    Test-open the name, both with and without the terminal profile if
      122      122                        %SETUP_FN_PROFILE is included in the name, in all accounts
      123      123                        specified by the account list.
      124      124                    If we find a file, push a VD$CMD_STREAM for the file.  By leaving
      125      125                    it on the top of the stack, it becomes the first command stream.
      126      126                Open the context file (if any) and check its file type:  if it's a
      127      127                    workspace file, load it into the internal workspace now.
      128      128                Create the command window structure in the internal Windows file.
      129      129                    If we can screen edit and the user hasn't overridden
      130      130                    screen-editing, the command window will also be created in the FEP.
      131      131
      132      132                Call VDI$PDRIVER to begin processing commands.  If we pushed any
      133      133                    VD$CMD_STREAMs above, they will be the first commands that
      134      134                    VDI$PDRIVER will process.  When done with them, it will begin
      135      135                    reading commands from the terminal.
      136      136                When/if VDI$PDRIVER returns, call VDG$MTERMINATE to close all files
      137      137                    and return to IBEX.
      138      138        */
      139      139
      140      140        VDG$MAIN: PROC;
      141      141
      142      142
      143      143        %INCLUDE CP_6;
      144      224        %INCLUDE CP_6_SUBS;
      145      764        %INCLUDE B_ERRORS_C;
      146     1890        %INCLUDE XUE_MACRO_C;
      147     2634        %INCLUDE VD_MACROS_M;
      148     4849        %INCLUDE VD_PERR_C;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:5    
      149     4997        %INCLUDE VD_NODES0_E;
      150     5089        %INCLUDE B$JIT;
      151     5379        %INCLUDE B$TABLES_C;
      152     5487
      153     5488
      154     5489    1   DCL VDG$MINIT           ENTRY ALTRET;
      155     5490    1   DCL VDP$WINIT           ENTRY ALTRET;
      156     5491    1   DCL VDG$WINIT           ENTRY ALTRET;
      157     5492    1   DCL VDI$PREAD_FILE_OPEN ENTRY ALTRET;
      158     5493    1   DCL VDI$PREAD_FILE_READ ENTRY (2) ALTRET;
      159     5494    1   DCL VDI$PREAD_FILE_CLOSE ENTRY ALTRET;
      160     5495    1   DCL VDA$LWRITE          ENTRY (4) ALTRET;
      161     5496    1   DCL VDA$PFLUSH          ENTRY (2) ALTRET;
      162     5497    1   DCL VDE$PSTRING         ENTRY(5) ALTRET;
      163     5498    1   DCL VDG$ERRMSG          ENTRY(4) ALTRET;
      164     5499    1   DCL VDI$CSET_COUNT      ENTRY(2) ALTRET;
      165     5500    1   DCL VDW$LOAD            ENTRY (1) ALTRET;
      166     5501    1   DCL VDG$MTERMINATE      ENTRY;
      167     5502    1   DCL VDG$EXCON           ENTRY ASYNC;
      168     5503    1   DCL VDG$EBREAK          ENTRY ASYNC;
      169     5504    1   DCL VDG$ETRAP           ENTRY ASYNC;
      170     5505    1   DCL VDG$EREPORT_ERROR   ENTRY (1);
      171     5506    1   DCL VDG$ESCREECH        ENTRY (3);
      172     5507    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
      173     5508    1   DCL VDG$OALLOC_DCB      ENTRY (1) ALTRET;
      174     5509    1   DCL VDG$OFREE           ENTRY (1) ALTRET;
      175     5510
      176     5511
      177     5512    1   DCL M$SI DCB;
      178     5513    1   DCL M$FILE DCB;
      179     5514
      180     5515    1   DCL CONTEXT_DCB#     UBIN(18);
      181     5516
      182     5517    1   DCL B$JIT$ PTR SYMREF;
      183     5518    1   DCL B$TCB$ PTR SYMREF;
      184     5519        %VD_6E (NAME=VD_6E, STCLASS=SYMREF);
      185     5555    1   DCL VD_COMMAND_WINDOW$ PTR SYMREF;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:6    
      186     5556    1   DCL VD_SCREEN_HEIGHT SBIN SYMREF;
      187     5557        %VD_BUFFER (NAME=VD_$CONTEXT, STCLASS=SYMREF, MXNB=%MXNB_FID);
      188     5617        %VD$NUMBER (NAME=VD_$COMMAND, STCLASS=SYMREF);
      189     5662        %VD$NUMBER (NAME=VD_$SCREEN, STCLASS=SYMREF);
      190     5707    1   DCL VD_EDITING_HEIGHT SBIN SYMREF;
      191     5708    1   DCL VD_TOP_LINE SBIN SYMREF;
      192     5709    1   DCL VD_OLD_$SCREEN SBIN SYMREF;
      193     5710        %VD$LOCATION (NAME=VD_LOC_$SCREEN, STCLASS=SYMREF);
      194     5738        %VD$BUFFER (NAME=VD_$INITIALIZE, STCLASS=SYMREF);
      195     5796        %XUE_ECB (STCLASS=SYMREF);
      196     5998        %B$SR_NON_BLANK;
      197     6002        %B$XL_UPPER;
      198     6006        %VD_KEY (NAME=VD_KEY_NUMERIC_BOF, STCLASS=SYMREF);
      199     6042        %VD_TEXTC (NAME=VD_STATIC_TEMP, STCLASS=SYMREF, MXNB=%MXNB_NAME_VALUE);
      200     6183
      201     6184
      202     6185
      203     6186        %FPT_OPEN (FPTN=CONST_TEST_OPEN, STCLASS=CONSTANT, FUN=IN, TEST=YES);
      204     6295        %FPT_XCON (STCLASS=CONSTANT, UENTRY=VDG$EXCON);
      205     6309        %FPT_INT (FPTN=ENABLE_BRK,
      206     6310                 UENTRY=VDG$EBREAK,
      207     6311                 STCLASS="CONSTANT SYMDEF");
      208     6325
      209     6326        %FPT_INT (FPTN=DISABLE_BRK,
      210     6327                 UENTRY=NIL,
      211     6328                 STCLASS="CONSTANT SYMDEF");
      212     6342
      213     6343        %FPT_TRAP (STCLASS=CONSTANT, ARITHMETIC=VDG$ETRAP, ERRORS=VDG$ETRAP,
      214     6344            DIVIDE_CHECK=TRAP, OVERFLOW=TRAP,
      215     6345            COMMAND=TRAP, IPR=TRAP, LOCKUP=TRAP, MEMORY=TRAP,
      216     6346            MISSING_PAGE=TRAP, MISSING_SEG=TRAP, SECURITY_1=TRAP,
      217     6347            SECURITY_2=TRAP);
      218     6370
      219     6371
      220     6372        /* Location in the Windows file for the command window */
      221     6373        %VD_LOCATION (NAME=COMMAND_WINDOW_LOC, STCLASS=CONSTANT, INITS=1,
      222     6374            ITYPE1=%KT_NUMBER, IREP1=%REP_LOCAL, IBYTES1=%WK_COMMAND_WINDOW);
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:7    
      223     6449
      224     6450
      225     6451    1   DCL VD_ERR$ PTR;
      226     6452    1   DCL ERR_SUBST$ PTR;
      227     6453        %FPT_OPEN (FPTN=TEST_OPEN, STCLASS=AUTO);
      228     6562    1   DCL CMD_WINDOW_STREAM$ PTR;
      229     6563    1   DCL SI_STREAM$ PTR;
      230     6564    1   DCL INVOCATION_STREAM$ PTR;
      231     6565    1   DCL MFILE_STREAM$ PTR;
      232     6566    1   DCL CONTEXT_STREAM$ PTR;
      233     6567    1   DCL 1 LOAD_FLAGS ALIGNED,
      234     6568              %VD$PDFF (NAME=F, STCLASS=AUTO, LEV=2, LAST=YES);
      235     6582        %VD_TEXTC (NAME=FUNNY_TEXT, STCLASS=AUTO, MXNB=%MXNB_ERR_SUBST);
      236     6723    1   DCL SUCCESSFULLY_OPENED BIT(1) ALIGNED;
      237     6724    1   DCL WINDOW_SPEC$ PTR;
      238     6725        %VD$SPEC (NAME=WSPEC, STCLASS=AUTO);
      239     6739    1   DCL ACTUAL_ERR$ PTR;
      240     6740
      241     6741
      242     6742        %F$DCB;
      243     6799        %B$TCB (NAME=B$TCB, STCLASS="BASED(B$TCB$)");
      244     6802        %B$ALT;
      245     6810        %VD$ERR (NAME=VD$ERR, STCLASS="BASED(VD_ERR$)");
      246     6863        %VD$POINTER (NAME=ERR$SUBST, DIM="(0:2)", STCLASS="BASED(ERR_SUBST$)");
      247     6908        %VD$ERR (NAME=FATAL$ERR, STCLASS="BASED(VD_6E.ERR_HEAD$)");
      248     6961        %VD$CMD_STREAM (NAME=SI$STREAM, STCLASS="BASED(SI_STREAM$)");
      249     7000        %VD$CMD_STREAM (NAME=CONTEXT$STREAM, STCLASS="BASED(CONTEXT_STREAM$)");
      250     7039        %VD$CMD_STREAM (NAME=TOP$CMD_STREAM, STCLASS="BASED(VD_6E.CMD_STREAM$)");
      251     7078        %VD$STREAM (NAME=WINDOWS$STREAM, STCLASS="BASED(VD_6E.WINDOWS$)");
      252     7184        %VD$WINDOW_SPEC (NAME=WINDOW$SPEC, STCLASS="BASED(WINDOW_SPEC$)");
      253     7250        %VD$PORT;
      254     7348        %VD$BUFFER_HEADER;
      255     7384        %VD$BUFFER;
      256     7442        %VD$STRING_HEADER;
      257     7478        %VD$TEXTC_REMOTE;
      258     7539    1   DCL 1 VD$ERR_HEAD BASED(VD_6E.ERR_HEAD$) ALIGNED,
      259     7540              %VD$ERR (NAME=VD_ERR, LEV=2, LAST=NO);
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:8    
      260     7593              %VD$NUMBER (NAME=ERR_SUBST, DIM="(0:2)", LEV=2, LAST=YES);
      261     7638    1   DCL 1 ACTUAL$ERR BASED(ACTUAL_ERR$) ALIGNED,
      262     7639              %VD$ERR (NAME=VD_ERR, LEV=2, LAST=NO);
      263     7692              %VD$NUMBER (NAME=ERR_SUBST, DIM="(0:2)", LEV=2, LAST=YES);
      264     7737
      265     7738
      266     7739
      267     7740    1           VD_6E.WINDOWS$ = ADDR(NIL); /* No command-window yet */
      268     7741    1           VD_COMMAND_WINDOW$ = ADDR(NIL);
      269     7742
      270     7743    1           SI_STREAM$ = ADDR(NIL);
      271     7744    1           INVOCATION_STREAM$ = ADDR(NIL);
      272     7745    1           MFILE_STREAM$ = ADDR(NIL);
      273     7746    1           CONTEXT_STREAM$ = ADDR(NIL);
      274     7747
      275     7748    1           CALL VDG$MINIT
      276     7749    2           WHENALTRETURN DO;
      277     7750    2   FATAL_ERR: VD_6E.ERR_TAIL$ -> VD$ERR.FLAGLEV# = %FLV_FATAL;
      278     7751    2              CALL VDG$EREPORT_ERROR; /* We'll never come back from this */
      279     7752    2              END;
      280     7753
      281     7754                /*
      282     7755                *   VDP$WINIT must be called before VDG$WINIT, to get terminal params
      283     7756                *       from the FEP.
      284     7757                */
      285     7758    1           CALL VDP$WINIT ALTRET(FATAL_ERR);
      286     7759
      287     7760                /*
      288     7761                *   Initialize the internal workspace, creating all mandatory
      289     7762                *       entries (e.g., Structures-file entries).
      290     7763                */
      291     7764    1           CALL VDG$WINIT ALTRET(FATAL_ERR);
      292     7765
      293     7766
      294     7767                /**************************************************************
      295     7768                *
      296     7769                *   Now we're fully initialized; we can converse with the user.
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:9    
      297     7770                *
      298     7771                */
      299     7772
      300     7773                /* Report error if bad invocation syntax */
      301     7774    2           IF B$JIT.PRFLAGS.NSSYNTAX THEN DO;
      302     7775    2              FUNNY_TEXT.LENGTH# = MINIMUM (B$JIT.CCDISP,
      303     7776    2                LENGTHC(FUNNY_TEXT.BYTES));
      304     7777    2              FUNNY_TEXT.BYTES = B$JIT.CCBUF;
      305     7778    2              CALL VDG$ERRMSG (%E$INVOK_NOT_RECOGNIZED, FUNNY_TEXT)
      306     7779    2                ALTRET (FATAL_ERR);
      307     7780    2              END;
      308     7781
      309     7782    1           CALL M$XCON (FPT_XCON);
      310     7783    1           CALL M$INT (ENABLE_BRK);
      311     7784    1           CALL M$TRAP (FPT_TRAP);
      312     7785
      313     7786                /* Push a VD$CMD_STREAM for the command window */
      314     7787    1           CALL VDG$OALLOC (%CLS_CMD_STREAM, CMD_WINDOW_STREAM$)
      315     7788    1             ALTRET (FATAL_ERR);
      316     7789    1           TOP$CMD_STREAM.TYPE# = %CS_ME;
      317     7790
      318     7791                /*
      319     7792                *  If M$SI is assigned to something non-interactive,
      320     7793                *      push it on the command-stream stack.
      321     7794                */
      322     7795
      323     7796    1           TEST_OPEN = CONST_TEST_OPEN;
      324     7797    1           TEST_OPEN.V_ = VECTOR(TEST_OPEN.V);
      325     7798    1           TEST_OPEN.V.DCB# = DCBNUM(M$SI);
      326     7799    1           CALL M$OPEN (TEST_OPEN)
      327     7800    2           WHENALTRETURN DO; ; END; /* Ignore errors */
      328     7801    2           IF NOT DCBADDR(TEST_OPEN.V.DCB#)->F$DCB.DDEV.IC# THEN DO;
      329     7802    2              CALL VDG$OALLOC (%CLS_CMD_STREAM, SI_STREAM$)
      330     7803    2                ALTRET (FATAL_ERR);
      331     7804    2              SI$STREAM.TYPE# = %CS_DCB;
      332     7805    2              SI$STREAM.DCB# = TEST_OPEN.V.DCB#;
      333     7806    2              SI$STREAM.ECHO = %TRUE; /* Echo if echoing */
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:10   
      334     7807    2              END;
      335     7808
      336     7809                /*
      337     7810                *  Push invocation command line, and possible continuation
      338     7811                *      file, on command-stream stack.
      339     7812                */
      340     7813
      341     7814    1           CALL PUSH_INVOK_CMD (INVOCATION_STREAM$) ALTRET (FATAL_ERR);
      342     7815
      343     7816                /*
      344     7817                *  If the user set #1 (M$FILE), push an EDIT command for it.
      345     7818                */
      346     7819
      347     7820    2           IF DCBADDR(DCBNUM(M$FILE))->F$DCB.AMR# AND NOT B$JIT.PRFLAGS.SI THEN DO;
      348     7821                   /* User set M$FILE DCB */
      349     7822    2              CALL PUSH_EDIT_CMD (DCBNUM(M$FILE), MFILE_STREAM$)
      350     7823    2                ALTRET (FATAL_ERR);
      351     7824    2              END;
      352     7825
      353     7826                /*
      354     7827                *   Search for a context file, and push it onto the command
      355     7828                *       stream stack.
      356     7829                */
      357     7830
      358     7831    1           CALL PUSH_CONTEXT_FILE (CONTEXT_STREAM$, TEST_OPEN)
      359     7832    1             ALTRET (FATAL_ERR);
      360     7833    2           IF CONTEXT_STREAM$ ~= ADDR(NIL) THEN DO;
      361     7834    2              CALL VDI$PREAD_FILE_OPEN
      362     7835    3              WHENALTRETURN DO;
      363     7836    3                 IF FATAL$ERR.ERR ~= %CLEAR THEN
      364     7837    3                    GOTO FATAL_ERR;
      365     7838    3                 CALL VDG$OFREE (CONTEXT$STREAM) ALTRET (FATAL_ERR);
      366     7839    3                 CONTEXT_STREAM$ = ADDR(NIL);
      367     7840    3                 END;
      368     7841    2              END;
      369     7842                /* Build a message identifying the context file we found, if any */
      370     7843    1           CALL VDG$OALLOC (%CLS_ERR, VD_ERR$) ALTRET (FATAL_ERR);
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:11   
      371     7844    2           IF CONTEXT_STREAM$ ~= ADDR(NIL) THEN DO;
      372     7845    2              VD$ERR.ERR.CODE# = %E$INFO_READING;
      373     7846    2              VD$ERR.FLAGLEV# = %FLV_INFO;
      374     7847    2              VD$ERR.DCB# = CONTEXT$STREAM.DCB#;
      375     7848                   /*       !!!!!!!!!  CAUTION  !!!!!!!!!!!
      376     7849                   *  We're stash the DCB # of the context file in the VD$ERR, but we
      377     7850                   *    don't actually report this E$INFO_READING message until after
      378     7851                   *    we (possibly) close the stream--and thereby free the DCB.
      379     7852                   *  This isn't real safe, but we take the chance, assuming that
      380     7853                   *    we won't be allocating any DCBs between the time we close
      381     7854                   *    the context stream and the time we report the E$INFO_READING
      382     7855                   *    message.  (This is only a problem if the context file is
      383     7856                   *    and encoded workspace file; only then do we close it before
      384     7857                   *    reporting E$INFO_READING.)
      385     7858                   */
      386     7859    2              END;
      387     7860    2           ELSE DO;
      388     7861    2              VD$ERR.ERR = B$TCB.ALT$->B$ALT.ERR;
      389     7862    2              VD$ERR.FLAGLEV# = %FLV_WARN;
      390     7863    2              VD$ERR.DCB# = CONTEXT_DCB#;
      391     7864    2              END;
      392     7865
      393     7866                /*
      394     7867                * Start out in $SCREEN=2 mode, so that $INITIALIZE can affect
      395     7868                * the building of the command window.
      396     7869                */
      397     7870    1           VD_OLD_$SCREEN = VD_$SCREEN.V#;
      398     7871    2           IF VD_OLD_$SCREEN>0 THEN DO;
      399     7872    2              CALL VDI$CSET_COUNT (VD_LOC_$SCREEN, 2);
      400     7873    2              VD_$COMMAND.V# = 0; /* Go to editing window automatically */
      401     7874    2              END;
      402     7875
      403     7876                /*
      404     7877                *   If we found an encoded workspace file in our search for a context
      405     7878                *       file, initialize the internal workspace from it.
      406     7879                */
      407     7880
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:12   
      408     7881    1           IF CONTEXT_STREAM$ ~= ADDR(NIL) THEN
      409     7882    2              IF CONTEXT$STREAM.FILE_TYPE = %CHR_ENCODED_TYPE THEN DO;
      410     7883    2                 LOAD_FLAGS = %CLEAR;
      411     7884    2                 LOAD_FLAGS.F (%PDFF_EQUALS) = %TRUE;
      412     7885                      /* We can load keyins only if we're timesharing */
      413     7886    2                 IF B$JIT.MODE = %M_INT# THEN
      414     7887    2                    LOAD_FLAGS.F (%PDFF_KEYINS) = %TRUE;
      415     7888    2                 LOAD_FLAGS.F (%PDFF_LOCATIONS) = %TRUE;
      416     7889    2                 LOAD_FLAGS.F (%PDFF_SYNONYMS) = %TRUE;
      417     7890        /*N*          LOAD_FLAGS.F (%PDFF_STRUCTURES) = %TRUE; VD_6E points at 'em */
      418     7891    2                 LOAD_FLAGS.F (%PDFF_WINDOWS) = %TRUE;
      419     7892
      420     7893    2                 CALL VDW$LOAD (LOAD_FLAGS)
      421     7894    3                 WHENRETURN DO;
      422     7895        /* If the workspace file failed, keep it on the stack, and let VDI$PDRIVER
      423     7896           clean up.  That way, any additional commands (like an implicit editing
      424     7897           command) will get ignored. */
      425     7898    3                    CALL VDI$PREAD_FILE_CLOSE;
      426     7899    3                    CALL VDG$OFREE (CONTEXT$STREAM);
      427     7900    3                    CONTEXT_STREAM$ = ADDR(NIL);
      428     7901    3                    END;
      429     7902    2                 IF VD_$INITIALIZE.LENGTH#>0 THEN
      430     7903    2                    CALL PUSH_INITIALIZE_CMDS;
      431     7904    2                 END;
      432     7905
      433     7906    1           IF VD_COMMAND_WINDOW$ = ADDR(NIL) THEN
      434     7907    2   CREATE_COMMAND_WINDOW: DO;
      435     7908                   /*
      436     7909                   *  We don't have a command window record in the Windows file yet:
      437     7910                   *    create one.  (We could have gotten a command window from a
      438     7911                   *    workspace-type context file.)
      439     7912                   *  If we're coming up screen-editing, the command window in the FEP
      440     7913                   *    will also be created.
      441     7914                   */
      442     7915
      443     7916    2              CALL VDG$OALLOC (%CLS_WINDOW_SPEC, WINDOW_SPEC$)
      444     7917    3              WHENALTRETURN DO;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:13   
      445     7918    3                 CALL VDG$EREPORT_ERROR;      /* We won't return from this */
      446     7919    3                 END;
      447     7920    2              WINDOW$SPEC.COMMAND = %TRUE;
      448     7921    2              WINDOW$SPEC.COORDS.LINE# = VD_TOP_LINE;
      449     7922    2              WINDOW$SPEC.COORDS.HEIGHT# = VD_EDITING_HEIGHT;
      450     7923    2              WSPEC = %CLEAR;
      451     7924    2              WSPEC.TYPE# = %SPT_WINDOW_SPEC;
      452     7925    2              WSPEC.REP# = %REP_REMOTE;
      453     7926    2              WSPEC.V$ = WINDOW_SPEC$;
      454     7927    2              CALL VDA$LWRITE (WINDOWS$STREAM, COMMAND_WINDOW_LOC, WSPEC)
      455     7928    2                ALTRET (FATAL_ERR);
      456     7929    2              CALL VDA$PFLUSH (WINDOWS$STREAM.PORT$->VD$PORT, %TO_PRESENTER)
      457     7930    2                ALTRET (FATAL_ERR);
      458     7931
      459     7932    2              VD_COMMAND_WINDOW$ = WINDOWS$STREAM.PORT$->
      460     7933    2                VD$PORT.LEVEL.INTERNAL$ (%LVL_LOWER);
      461     7934    2              END CREATE_COMMAND_WINDOW;
      462     7935
      463     7936
      464     7937                /*
      465     7938                *  Now, write any error messages we've accumulated to the command
      466     7939                *    window.
      467     7940                */
      468     7941    2           IF VD_6E.ERR_TAIL$ ~= VD_6E.ERR_HEAD$ THEN DO;
      469     7942    2              CALL VDG$EREPORT_ERROR;  /* We WILL come back from this!! */
      470     7943    2              END;
      471     7944
      472     7945
      473     7946                /*
      474     7947                *  If the top command-stream (other than the context file) is a
      475     7948                *    file or a DCB, then open it now.
      476     7949                *  (If the open fails, pop the command-stream and try opening
      477     7950                *    the next; loop til we find one that opens!)
      478     7951                */
      479     7952    2           IF CONTEXT_STREAM$ = ADDR(NIL) THEN DO;
      480     7953    3              DO UNTIL SUCCESSFULLY_OPENED;
      481     7954    3                 SUCCESSFULLY_OPENED = %TRUE;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:14   
      482     7955    3                 IF TOP$CMD_STREAM.TYPE# = %CS_FILE
      483     7956    4                   OR TOP$CMD_STREAM.TYPE# = %CS_DCB THEN DO;
      484     7957    4                    CALL VDI$PREAD_FILE_OPEN
      485     7958    5                    WHENALTRETURN DO;
      486     7959    5                       CALL VDG$OFREE (TOP$CMD_STREAM);
      487     7960    5                       CALL VDG$EREPORT_ERROR;
      488     7961    5                       SUCCESSFULLY_OPENED = %FALSE;
      489     7962    5                       END;
      490     7963    4                    END;
      491     7964    3                 END;
      492     7965    2              END;
      493     7966
      494     7967
      495     7968        %BOX (TITLE=PUSH_INVOK_CMD, PAGE=YES);
              7976    2
              7980    2   /***************************************************************************
              7982    2    *                                                                         *
              7986    2            *                               PUSH_INVOK_CMD                            *
              7988    2            *                                                                         *
              7990    2           ***************************************************************************/

      496     7994
      497     7995        /*I* NAME: PUSH_INVOK_CMD
      498     7996            PARAMETERS:
      499     7997                CMD_STREAM$ - An uninitialized PTR.
      500     7998            INPUT:
      501     7999            OUTPUT:
      502     8000                CMD_STREAM$ will contain either ADDR(NIL); or a pointer to
      503     8001                    CMD$STREAM, whose .RECORD$ points to the invocation command.
      504     8002                If a VD$CMD_STREAM is pushed on the command stream stack,
      505     8003                    then VD_6E.CMD_STREAM$ will be modified.
      506     8004            DESCRIPTION:
      507     8005                If B$JIT.CCBUF holds the invocation command line, copy it to a
      508     8006                    VD$BUFFER.
      509     8007                If the invocation command line resides in an IBEX
      510     8008                    continuation file, just point CMD$STREAM at the file and let
      511     8009                    XUG process the continuation again.
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:15   
      512     8010                Push a VD$CMD_STREAM pointing to this buffer.  Set the
      513     8011                    CMD$STREAM.POSITION# to point to the first character.
      514     8012        */
      515     8013
      516     8014    1   PUSH_INVOK_CMD: PROC (CMD_STREAM$) ALTRET;
      517     8015
      518     8016    2   DCL CMD_STREAM$ PTR;
      519     8017
      520     8018
      521     8019    2   DCL INVOK_BUFFER$ PTR;
      522     8020    2   DCL EOF_FLAG BIT(1) ALIGNED;
      523     8021
      524     8022
      525     8023        %VD$CMD_STREAM (NAME=CMD$STREAM, STCLASS="BASED(CMD_STREAM$)");
      526     8062        %VD$BUFFER (NAME=INVOK$BUFFER, STCLASS="BASED(INVOK_BUFFER$)");
      527     8120
      528     8121
      529     8122
      530     8123    2           CALL VDG$OALLOC (%CLS_CMD_STREAM, CMD_STREAM$)
      531     8124    2             ALTRET (OALLOC_FAILED);
      532     8125
      533     8126    3           IF NOT B$JIT.PRFLAGS.CONTINUED THEN DO;
      534     8127    3              CALL VDG$OALLOC (%CLS_BUFFER, INVOK_BUFFER$,
      535     8128    3                (LENGTHC(VD$BUFFER_HEADER) + B$JIT.CCARS + %NB_PER_WORD - 1) /
      536     8129    3                %NB_PER_WORD)
      537     8130    3                ALTRET (OALLOC_FAILED);
      538     8131    3              INVOK$BUFFER.LENGTH# = B$JIT.CCARS;
      539     8132    3              CMD$STREAM.RECORD$ = INVOK_BUFFER$;
      540     8133    3              CMD$STREAM.TYPE# = %CS_BUFFER;
      541     8134    3              INVOK$BUFFER.BYTES = B$JIT.CCBUF;
      542     8135    3              END;
      543     8136    3           ELSE DO;
      544     8137    3              CMD$STREAM.TYPE# = %CS_FILE;
      545     8138    3              CMD$STREAM.FILE.LENGTH# = %LENGTHC(%CHR_CONT_CMD_NAME);
      546     8139    3              CMD$STREAM.FILE.BYTES = %CHR_CONT_CMD_NAME;
      547     8140    3              END;
      548     8141
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:16   
      549     8142    2           RETURN;
      550     8143
      551     8144
      552     8145    2   OALLOC_FAILED: ;
      553     8146    2           CMD_STREAM$ = ADDR(NIL);
      554     8147    2           ALTRETURN;
      555     8148
      556     8149    2   END PUSH_INVOK_CMD;
      557     8150
      558     8151        %BOX (TITLE=PUSH_EDIT_CMD, PAGE=YES);
              8159    2
              8163    2   /***************************************************************************
              8165    2    *                                                                         *
              8169    2            *                               PUSH_EDIT_CMD                             *
              8171    2            *                                                                         *
              8173    2           ***************************************************************************/

      559     8177
      560     8178        /*I* NAME: PUSH_EDIT_CMD
      561     8179            PARAMETERS:
      562     8180                DCB_TO_EDIT - A WORD containing the DCB # to edit.
      563     8181                CMD_STREAM$ - An uninitialized PTR.
      564     8182            INPUT:
      565     8183            OUTPUT:
      566     8184                CMD_STREAM$ will a pointer to CMD$STREAM, whose .RECORD$ points to an
      567     8185                    InTree for an EDIT command to edit the specified DCB.
      568     8186                If a VD$CMD_STREAM is pushed on the command stream stack,
      569     8187                    then VD_6E.CMD_STREAM$ will be modified.
      570     8188            DESCRIPTION:
      571     8189                Push a VD$CMD_STREAM, and build an InTree for an EDIT command.
      572     8190                The InTree we build is:
      573     8191
      574     8192                    IT_COMMAND w/.CODE = %T_EDIT_CMD
      575     8193                     and .PARAM$(0)->----
      576     8194                                         |
      577     8195                                    IT_BLOCK_EXPR w/.DOMAINN specifying the DCB
      578     8196                                         |
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:17   
      579     8197                                    IT_SELECT w/.RPT_COUNT of 1
      580     8198                                         |
      581     8199                                    IT_ADJUST
      582     8200                                         |
      583     8201                                    IT_OPERAND w/.CODE = %OPAND_FILE
      584     8202                                     and .OPTIONS.POINT = %PNT_AO
      585     8203
      586     8204                We don't really need the file key in the IT_OPERAND we build, because
      587     8205                the file info is in IT_BLOCK_EXPR.DOMAINN.
      588     8206        */
      589     8207
      590     8208    1   PUSH_EDIT_CMD: PROC (DCB_TO_EDIT, CMD_STREAM$) ALTRET;
      591     8209
      592     8210    2   DCL DCB_TO_EDIT SBIN;
      593     8211    2   DCL CMD_STREAM$ PTR;
      594     8212
      595     8213
      596     8214
      597     8215    2   DCL IT_COMMAND$ PTR;
      598     8216    2   DCL IT_BLOCK_EXPR$ PTR;
      599     8217    2   DCL IT_SELECT$ PTR;
      600     8218    2   DCL IT_ADJUST$ PTR;
      601     8219    2   DCL IT_OPERAND$ PTR;
      602     8220    2   DCL EDIT_FILE_KEY$ PTR;
      603     8221
      604     8222
      605     8223        %VD$CMD_STREAM (NAME=CMD$STREAM, STCLASS="BASED(CMD_STREAM$)");
      606     8262        %VD$IT_COMMAND (NAME=IT$COMMAND, STCLASS="BASED(IT_COMMAND$)");
      607     8300        %VD$IT_BLOCK_EXPR (NAME=IT$BLOCK_EXPR, STCLASS="BASED(IT_BLOCK_EXPR$)");
      608     8450        %VD$IT_SELECT (NAME=IT$SELECT, STCLASS="BASED(IT_SELECT$)");
      609     8487        %VD$IT_ADJUST (NAME=IT$ADJUST, STCLASS="BASED(IT_ADJUST$)");
      610     8524        %VD$IT_OPERAND (NAME=IT$OPERAND, STCLASS="BASED(IT_OPERAND$)");
      611     8590        %VD$FILE_KEY (NAME=EDIT$FILE_KEY, STCLASS="BASED(EDIT_FILE_KEY$)");
      612     8639
      613     8640
      614     8641
      615     8642    2           CALL VDG$OALLOC (%CLS_CMD_STREAM, CMD_STREAM$)
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:18   
      616     8643    2             ALTRET (OALLOC_FAILED);
      617     8644
      618     8645    2           CMD$STREAM.TYPE# = %CS_BUFFER;
      619     8646    2           CALL VDG$OALLOC (%CLS_IT_COMMAND, IT_COMMAND$)
      620     8647    2             ALTRET (OALLOC_FAILED);
      621     8648    2           CMD$STREAM.INTREE$ = IT_COMMAND$;
      622     8649    2           IT$COMMAND.CODE# = %T_EDIT_CMD;
      623     8650
      624     8651    2           CALL VDG$OALLOC (%CLS_IT_BLOCK_EXPR, IT_BLOCK_EXPR$)
      625     8652    2             ALTRET (OALLOC_FAILED);
      626     8653    2           IT$COMMAND.PARAM$ (0) = IT_BLOCK_EXPR$;
      627     8654                /*N*
      628     8655                *N*  Need some way to determine--now or later?--if file's keys are
      629     8656                *N*     numeric or string, 'cause BOF is represented differently in
      630     8657                *N*     the two cases.
      631     8658                *N*  For now, assume numeric keys.
      632     8659                *N*/
      633     8660    2           IT$BLOCK_EXPR.DOMAINN.RANGE.START.KEY (%LVL_LOWER-1) =
      634     8661    2             VD_KEY_NUMERIC_BOF;
      635     8662    2           IT$BLOCK_EXPR.DOMAINN.RANGE.ENDD.EOF = %TRUE;
      636     8663    2           IT$BLOCK_EXPR.OPTIONS.STRUCTURE$ = VD_6E.STRUCTURE_EXTERNAL$;
      637     8664    2           IT$BLOCK_EXPR.OPTIONS.LEVEL# = %LVL_EXT_REC;
      638     8665    2           IT$BLOCK_EXPR.OPTIONS.COMPONENT# = %CO_DATA;
      639     8666    2           IT$BLOCK_EXPR.OPTIONS.PROTECT# = %DONT_PROTECT;
      640     8667    2           IT$BLOCK_EXPR.OPTIONS.EXIST# = %EX_OLD;
      641     8668    2           IT$BLOCK_EXPR.DOMAINN.FILE_KEY.TYPE# = %KT_STRING;
      642     8669    2           IT$BLOCK_EXPR.DOMAINN.FILE_KEY.REP# = %REP_REMOTE;
      643     8670
      644     8671    2           CALL VDG$OALLOC (%CLS_FILE_KEY, EDIT_FILE_KEY$)
      645     8672    2             ALTRET (OALLOC_FAILED);
      646     8673    2           IT$BLOCK_EXPR.DOMAINN.FILE_KEY.V$ = EDIT_FILE_KEY$;
      647     8674    2           EDIT$FILE_KEY.DCB# = DCB_TO_EDIT;
      648     8675
      649     8676    2           CALL VDG$OALLOC (%CLS_IT_SELECT, IT_SELECT$)
      650     8677    2             ALTRET (OALLOC_FAILED);
      651     8678    2           IT$BLOCK_EXPR.SELECTS$ = IT_SELECT$;
      652     8679    2           IT$BLOCK_EXPR.SELECTS_TAIL$ = IT_SELECT$;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:19   
      653     8680    2           IT$SELECT.RPT_COUNT# = 1;
      654     8681
      655     8682    2           CALL VDG$OALLOC (%CLS_IT_ADJUST, IT_ADJUST$)
      656     8683    2             ALTRET (OALLOC_FAILED);
      657     8684    2           IT$SELECT.ADJUSTS$ = IT_ADJUST$;
      658     8685    2           IT$SELECT.ADJUSTS_TAIL$ = IT_ADJUST$;
      659     8686
      660     8687    2           CALL VDG$OALLOC (%CLS_IT_OPERAND, IT_OPERAND$)
      661     8688    2             ALTRET (OALLOC_FAILED);
      662     8689    2           IT$ADJUST.MOVEMENTS$ = IT_OPERAND$;
      663     8690    2           IT$ADJUST.MOVEMENTS_TAIL$ = IT_OPERAND$;
      664     8691    2           IT$OPERAND.CODE# = %OPAND_FILE;
      665     8692    2           IT$OPERAND.OPTIONS.POINT# = %PNT_AO;
      666     8693
      667     8694    2           RETURN;
      668     8695
      669     8696
      670     8697    2   OALLOC_FAILED:
      671     8698    2           CMD_STREAM$ = ADDR(NIL);
      672     8699    2           ALTRETURN;
      673     8700
      674     8701    2   END PUSH_EDIT_CMD;
      675     8702
      676     8703        %BOX (TITLE=PUSH_CONTEXT_FILE, PAGE=YES);
              8711    2
              8715    2   /***************************************************************************
              8717    2    *                                                                         *
              8721    2            *                             PUSH_CONTEXT_FILE                           *
              8723    2            *                                                                         *
              8725    2           ***************************************************************************/

      677     8729
      678     8730        /*I* NAME: PUSH_CONTEXT_FILE
      679     8731            PARAMETERS:
      680     8732                CMD_STREAM$ - An uninitialized PTR.
      681     8733                TEST_OPEN - FPT_OPEN with TEST=YES and FUN=IN.
      682     8734            INPUT:
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:20   
      683     8735            OUTPUT:
      684     8736                CMD_STREAM$ will contain either ADDR(NIL), or a pointer to
      685     8737                    a CMD$STREAM allocated for the context file.
      686     8738                CMD$STREAM.DCB# will contain the number of a DCB which is assigned to
      687     8739                    (but NOT open to) the found context file.
      688     8740                If a VD$CMD_STREAM is pushed on the command stream stack,
      689     8741                    then VD_6E.CMD_STREAM$ will be modified.
      690     8742            SCRATCH:
      691     8743                TEST_OPEN will be mucked with.
      692     8744            DESCRIPTION:
      693     8745                Search for a context file; if we find one, push a VD$CMD_STREAM for
      694     8746                it onto the command stream stack.
      695     8747        */
      696     8748
      697     8749    1   PUSH_CONTEXT_FILE: PROC (CMD_STREAM$, TEST_OPEN) ALTRET;
      698     8750
      699     8751    2   DCL CMD_STREAM$ PTR;
      700     8752        %FPT_OPEN (FPTN=TEST_OPEN, STCLASS=PARAM);
      701     8861
      702     8862
      703     8863
      704     8864        %FPT_GLINEATTR (STCLASS=CONSTANT, DCB=M$UC, LINEATTR=LINEATTR);
      705     8889        %VLP_LINEATTR (FPTN=LINEATTR, STCLASS=STATIC);
      706     8911        %FPT_CMDVAR (FPTN=CONST_FPT_CMDVAR, STCLASS=CONSTANT,
      707     8912           FUN=FETCH, NAME=CMDVAR_NAME);
      708     8929        %VD_TEXTC (NAME=CMDVAR_NAME, STCLASS=CONSTANT, IBYTES=%CHR_CMDVAR_NAME);
      709     9070        %FPT_FID (FPTN=CONST_FPT_FID, STCLASS=CONSTANT);
      710     9093        %FPT_UNFID (FPTN=CONST_FPT_UNFID, STCLASS=CONSTANT);
      711     9111
      712     9112
      713     9113        %FPT_CMDVAR (STCLASS=AUTO);
      714     9130        %FPT_FID (STCLASS=AUTO);
      715     9153        %FPT_UNFID (STCLASS=AUTO);
      716     9171        %VD_TEXTC (NAME=CONTEXT_NAME, STCLASS=AUTO, MXNB=%MXNB_FILE_NAME);
      717     9312        %VD_TEXTC (NAME=PROFILED_NAME, STCLASS=AUTO, MXNB=%MXNB_FILE_NAME);
      718     9453    2   DCL CONTEXT_ACCT (0:%MX_CONTEXT_ACCT_LIST) CHAR(%MXNB_FILE_ACCT);
      719     9454        %VLP_PASS (FPTN=CONTEXT_PASS, STCLASS=AUTO);
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:21   
      720     9467        %VLP_SN (FPTN=CONTEXT_SN, STCLASS=AUTO);
      721     9480        %VLP_WSN (FPTN=CONTEXT_WSN, STCLASS=AUTO);
      722     9493    2   DCL UNAME_INDEX SBIN;
      723     9494    2   DCL PROFILE_INDEX SBIN;
      724     9495        %VD_TEXTC (NAME=TEMP_NAME, STCLASS=AUTO, MXNB=MXNB_FILE_NAME);
      725     9636    2   DCL TEMP_ACCT CHAR(%MXNB_FILE_ACCT) ALIGNED;
      726     9637    2   DCL ACCT SBIN;
      727     9638    2   DCL MAXACCT SBIN;
      728     9639    2   DCL FOUND_CONTEXT_FILE BIT(1) ALIGNED;
      729     9640    2   DCL LAST_NON_BLANK SBIN;
      730     9641    2   DCL SINK SBIN;
      731     9642
      732     9643
      733     9644
      734     9645        %VD$CMD_STREAM (NAME=CMD$STREAM, STCLASS="BASED(CMD_STREAM$)");
      735     9684    2   DCL UNFID$FID CHAR(%MXNB_NAME_VALUE) BASED;
      736     9685        %VD$TEXTC;
      737     9708
      738     9709
      739     9710
      740     9711    2           CMD_STREAM$ = ADDR(NIL);
      741     9712
      742     9713    2           CALL VDG$OALLOC_DCB (CONTEXT_DCB#)
      743     9714    3           WHENALTRETURN DO; ALTRETURN; END;
      744     9715    2           TEST_OPEN.V.DCB# = CONTEXT_DCB#;
      745     9716    2           TEST_OPEN.V.ASN# = %FILE#;
      746     9717    2           TEST_OPEN.V.INITZ.SCRUB# = %TRUE;
      747     9718
      748     9719    3           IF B$JIT.MODE = %M_INT# THEN DO;
      749     9720    3              CALL M$GLINEATTR (FPT_GLINEATTR)
      750     9721    3                ALTRET (GLINEATTR_FAILED);
      751     9722    3              END;
      752     9723    2           ELSE
      753     9724    2              LINEATTR.PROTXTC.CNT = 0;
      754     9725
      755     9726    2           FPT_CMDVAR = CONST_FPT_CMDVAR;
      756     9727    2           FPT_CMDVAR.V_ = VECTOR(FPT_CMDVAR.V);
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:22   
      757     9728    2           FPT_CMDVAR.VALUE_ = VECTOR(VD_STATIC_TEMP);
      758     9729    2           CALL M$CMDVAR (FPT_CMDVAR)
      759     9730    3           WHENALTRETURN DO;
      760     9731    3              IF B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$NOTCMDNAME THEN
      761     9732    3                 GOTO CMDVAR_FAILED;
      762     9733    3              VD_STATIC_TEMP.LENGTH# = 0;
      763     9734    3              END;
      764     9735                /* Assume default name and acct */
      765     9736    2           CONTEXT_NAME.LENGTH# = LENGTHC(%CHR_CONTEXT_NAME);
      766     9737    2           CONTEXT_NAME.BYTES = %CHR_CONTEXT_NAME;
      767     9738    2           CONTEXT_ACCT (0) = ' '; /* Try !DIR account first */
      768     9739    2           CONTEXT_ACCT (1) = B$JIT.ACCN;   /* Then user's logon account */
      769     9740    2           CONTEXT_ACCT (2) = %CHR_LIBRARY_ACCT;    /* Finally, the library */
      770     9741    2           MAXACCT = 3;
      771     9742
      772     9743    2           IF VD_STATIC_TEMP.LENGTH# ~= 0 THEN
      773     9744    3   GOT_CMDVAR_VALUE: DO;
      774     9745                   /* Command variable has a value:  M$FID it to get its parts */
      775     9746    3              FPT_FID = CONST_FPT_FID;
      776     9747    3              FPT_FID.V_ = VECTOR(FPT_FID.V);
      777     9748    3              FPT_FID.TEXTFID_ = VECTOR(SUBSTR(VD_STATIC_TEMP.BYTES, 0,
      778     9749    3                VD_STATIC_TEMP.LENGTH#));
      779     9750    3              FPT_FID.NAME_ = VECTOR(TEMP_NAME);
      780     9751    3              FPT_FID.ACCT_ = VECTOR(TEMP_ACCT);
      781     9752    3              FPT_FID.PASS_ = VECTOR(CONTEXT_PASS);
      782     9753    3              FPT_FID.SN_ = VECTOR(CONTEXT_SN);
      783     9754    3              FPT_FID.WSN_ = VECTOR(CONTEXT_WSN);
      784     9755    3              FPT_FID.ASN_ = VECTOR(TEST_OPEN.V.ASN#);
      785     9756    3              FPT_FID.RES_ = VECTOR(TEST_OPEN.V.RES#);
      786     9757    3              CALL M$FID (FPT_FID)
      787     9758    3                ALTRET (FID_FAILED);
      788     9759    3              TEST_OPEN.PASS_ = VECTOR(CONTEXT_PASS);
      789     9760    3              TEST_OPEN.SN_ = VECTOR(CONTEXT_SN);
      790     9761    3              TEST_OPEN.WSN_ = VECTOR(CONTEXT_WSN);
      791     9762
      792     9763    3              IF TEMP_NAME.LENGTH# > 0 THEN
      793     9764    4   CMDVAR_VALUE_HAS_NAME: DO;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:23   
      794     9765    4                 CONTEXT_NAME = TEMP_NAME;
      795     9766                      /* If name has %SETUP_FN_USER in it, substitute user's name */
      796     9767    4                 CALL XLATE (VD_STATIC_TEMP.BYTES, B$XL_UPPER,
      797     9768    4                   SUBSTR(CONTEXT_NAME.BYTES, 0, CONTEXT_NAME.LENGTH#));
      798     9769    4                 CALL INDEX (UNAME_INDEX, %SETUP_FN_USER,
      799     9770    4                   SUBSTR(VD_STATIC_TEMP.BYTES, 0, CONTEXT_NAME.LENGTH#));
      800     9771    4                 CALL SEARCHR (LAST_NON_BLANK, SINK, B$SR_NON_BLANK,
      801     9772    4                   B$JIT.UNAME);
      802     9773    4                 IF UNAME_INDEX < CONTEXT_NAME.LENGTH#
      803     9774    5                   AND LAST_NON_BLANK < LENGTHC(B$JIT.UNAME) THEN DO;
      804     9775    6                    IF UNAME_INDEX > 0 THEN DO;
      805     9776    6                       TEMP_NAME.BYTES = SUBSTR(CONTEXT_NAME.BYTES, 0,
      806     9777    6                         UNAME_INDEX);
      807     9778    6                       TEMP_NAME.LENGTH# = UNAME_INDEX;
      808     9779    6                       IF SUBSTR(TEMP_NAME.BYTES, TEMP_NAME.LENGTH# - 1, 1) ~=
      809     9780    7                         %CHR_UNDERSCORE THEN DO;
      810     9781    7                          CALL INSERT (TEMP_NAME.BYTES, TEMP_NAME.LENGTH#, ,
      811     9782    7                            %CHR_UNDERSCORE);
      812     9783    7                          TEMP_NAME.LENGTH# = MINIMUM (LENGTHC(TEMP_NAME.BYTES),
      813     9784    7                            TEMP_NAME.LENGTH# + 1);
      814     9785    7                          END;
      815     9786    6                       END;
      816     9787    5                    CALL INSERT (TEMP_NAME.BYTES, TEMP_NAME.LENGTH#, ,
      817     9788    5                      B$JIT.UNAME);
      818     9789    5                    TEMP_NAME.LENGTH# = MINIMUM (LENGTHC(TEMP_NAME.BYTES),
      819     9790    5                      TEMP_NAME.LENGTH# + LAST_NON_BLANK + 1);
      820     9791    6                    IF UNAME_INDEX + 2 < CONTEXT_NAME.LENGTH# THEN DO;
      821     9792    6                       IF SUBSTR(CONTEXT_NAME.BYTES, UNAME_INDEX + 2, 1) ~=
      822     9793    7                         %CHR_UNDERSCORE THEN DO;
      823     9794    7                          CALL INSERT (TEMP_NAME.BYTES, TEMP_NAME.LENGTH#, ,
      824     9795    7                            %CHR_UNDERSCORE);
      825     9796    7                          TEMP_NAME.LENGTH# = MINIMUM (LENGTHC(TEMP_NAME.BYTES),
      826     9797    7                            TEMP_NAME.LENGTH# + 1);
      827     9798    7                          END;
      828     9799    6                       CALL INSERT (TEMP_NAME.BYTES, TEMP_NAME.LENGTH#, ,
      829     9800    6                         SUBSTR(CONTEXT_NAME.BYTES, UNAME_INDEX + 2));
      830     9801    6                       TEMP_NAME.LENGTH# = MINIMUM (LENGTHC(TEMP_NAME.BYTES),
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:24   
      831     9802    6                         TEMP_NAME.LENGTH# + (CONTEXT_NAME.LENGTH# -
      832     9803    6                         (UNAME_INDEX + 2)));
      833     9804    6                       END;
      834     9805    5                    CONTEXT_NAME = TEMP_NAME;
      835     9806    5                    END;
      836     9807    4                 END CMDVAR_VALUE_HAS_NAME;
      837     9808
      838     9809    4              IF TEMP_ACCT ~= ' ' THEN DO;
      839     9810    4                 CONTEXT_ACCT (0) = TEMP_ACCT;
      840     9811    4                 MAXACCT = 1;
      841     9812    4                 END;
      842     9813    3              END GOT_CMDVAR_VALUE;
      843     9814
      844     9815    2           PROFILED_NAME.LENGTH# = 0;
      845     9816    2           CALL XLATE (VD_STATIC_TEMP.BYTES, B$XL_UPPER,
      846     9817    2             SUBSTR(CONTEXT_NAME.BYTES, 0, CONTEXT_NAME.LENGTH#));
      847     9818    2           CALL INDEX (PROFILE_INDEX, %SETUP_FN_PROFILE,
      848     9819    2             SUBSTR(VD_STATIC_TEMP.BYTES, 0, CONTEXT_NAME.LENGTH#));
      849     9820    3           IF PROFILE_INDEX < CONTEXT_NAME.LENGTH# THEN DO;
      850     9821                   /* Substitute the terminal profile into the file name */
      851     9822    4              IF PROFILE_INDEX > 0 THEN DO;
      852     9823    4                 PROFILED_NAME.LENGTH# = PROFILE_INDEX;
      853     9824    4                 PROFILED_NAME.BYTES =
      854     9825    4                   SUBSTR(CONTEXT_NAME.BYTES, 0, PROFILE_INDEX);
      855     9826    4                 IF SUBSTR(PROFILED_NAME.BYTES, PROFILED_NAME.LENGTH# - 1, 1) ~=
      856     9827    5                   %CHR_UNDERSCORE THEN DO;
      857     9828    5                    CALL INSERT (PROFILED_NAME.BYTES, PROFILED_NAME.LENGTH#, ,
      858     9829    5                      %CHR_UNDERSCORE);
      859     9830    5                    PROFILED_NAME.LENGTH# = MINIMUM (LENGTHC(PROFILED_NAME.BYTES),
      860     9831    5                      PROFILED_NAME.LENGTH# + 1);
      861     9832    5                    END;
      862     9833    4                 END;
      863     9834    3              CALL INSERT (PROFILED_NAME.BYTES, PROFILED_NAME.LENGTH#, ,
      864     9835    3                SUBSTR(LINEATTR.PROTXTC.TXT, 0, LINEATTR.PROTXTC.CNT));
      865     9836    3              PROFILED_NAME.LENGTH# = MINIMUM (LENGTHC(PROFILED_NAME.BYTES),
      866     9837    3                PROFILED_NAME.LENGTH# + LINEATTR.PROTXTC.CNT);
      867     9838    4              IF PROFILE_INDEX + 2 < CONTEXT_NAME.LENGTH# THEN DO;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:25   
      868     9839    4                 IF SUBSTR(CONTEXT_NAME.BYTES, PROFILE_INDEX + 2, 1) ~=
      869     9840    5                   %CHR_UNDERSCORE THEN DO;
      870     9841    5                    CALL INSERT (PROFILED_NAME.BYTES, PROFILED_NAME.LENGTH#, ,
      871     9842    5                      %CHR_UNDERSCORE);
      872     9843    5                    PROFILED_NAME.LENGTH# = MINIMUM (LENGTHC(PROFILED_NAME.BYTES),
      873     9844    5                      PROFILED_NAME.LENGTH# + 1);
      874     9845    5                    END;
      875     9846    4                 CALL INSERT (PROFILED_NAME.BYTES, PROFILED_NAME.LENGTH#, ,
      876     9847    4                   SUBSTR(CONTEXT_NAME.BYTES, PROFILE_INDEX + 2));
      877     9848    4                 PROFILED_NAME.LENGTH# = MINIMUM (LENGTHC(PROFILED_NAME.BYTES),
      878     9849    4                   PROFILED_NAME.LENGTH# + (CONTEXT_NAME.LENGTH# -
      879     9850    4                   (PROFILE_INDEX + 2)));
      880     9851    4                 END;
      881     9852                   /* Remove the %SETUP_FN_PROFILE from CONTEXT_NAME */
      882     9853    3              TEMP_NAME.BYTES = SUBSTR(CONTEXT_NAME.BYTES, PROFILE_INDEX + 2);
      883     9854    3              CONTEXT_NAME.LENGTH# = CONTEXT_NAME.LENGTH# - 2;
      884     9855    3              CALL INSERT (CONTEXT_NAME.BYTES, PROFILE_INDEX, , TEMP_NAME.BYTES);
      885     9856    3              END;
      886     9857
      887     9858    2           ACCT = 0;
      888     9859    2           FOUND_CONTEXT_FILE = %FALSE;
      889     9860    3           DO UNTIL ACCT = MAXACCT OR FOUND_CONTEXT_FILE;
      890     9861    3              TEST_OPEN.ACCT_ = VECTOR(CONTEXT_ACCT(ACCT));
      891     9862    4              IF PROFILED_NAME.LENGTH# > 0 THEN DO;
      892     9863    4                 TEST_OPEN.NAME_ = VECTOR(PROFILED_NAME);
      893     9864    4                 CALL M$OPEN (TEST_OPEN)
      894     9865    5                 WHENRETURN DO;
      895     9866    5                    FOUND_CONTEXT_FILE = %TRUE;
      896     9867    5                    END;
      897     9868    5                 WHENALTRETURN DO;
      898     9869    5                    IF B$TCB.ALT$ -> B$ALT.ERR.CODE ~= %E$NOFILE THEN
      899     9870    5                       GOTO OPEN_FAILED;
      900     9871    5                    END;
      901     9872    4                 END;
      902     9873    4              IF NOT FOUND_CONTEXT_FILE THEN DO;
      903     9874    4                 TEST_OPEN.NAME_ = VECTOR(CONTEXT_NAME);
      904     9875    4                 CALL M$OPEN (TEST_OPEN)
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:26   
      905     9876    5                 WHENRETURN DO;
      906     9877    5                    FOUND_CONTEXT_FILE = %TRUE;
      907     9878    5                    END;
      908     9879    5                 WHENALTRETURN DO;
      909     9880    5                    IF B$TCB.ALT$ -> B$ALT.ERR.CODE ~= %E$NOFILE THEN
      910     9881    5                       GOTO OPEN_FAILED;
      911     9882    5                    END;
      912     9883    4                 END;
      913     9884    3              ACCT = ACCT + 1;
      914     9885    3              END;
      915     9886
      916     9887    3           IF FOUND_CONTEXT_FILE THEN DO;
      917     9888    3              CALL VDG$OALLOC (%CLS_CMD_STREAM, CMD_STREAM$)
      918     9889    3                ALTRET (OALLOC_FAILED);
      919     9890    3              CMD$STREAM.TYPE# = %CS_DCB;
      920     9891    3              CMD$STREAM.DCB# = TEST_OPEN.V.DCB#;
      921     9892    3              TEST_OPEN.V.DCB# = 0;
      922     9893                   /* Never echo the context file */
      923     9894    3              CMD$STREAM.ECHO = %FALSE;
      924     9895
      925     9896                   /* Assign the fid of the context file to the $CONTEXT name */
      926     9897    3              FPT_UNFID = CONST_FPT_UNFID;
      927     9898    3              FPT_UNFID.V_ = VECTOR(FPT_UNFID.V);
      928     9899    3              FPT_UNFID.TEXTFID_ = VECTOR(VD_STATIC_TEMP);
      929     9900    3              FPT_UNFID.V.DCB# = CMD$STREAM.DCB#;
      930     9901    3              CALL M$UNFID (FPT_UNFID)
      931     9902    3                ALTRET (UNFID_FAILED);
      932     9903    3              CALL SEARCHR (LAST_NON_BLANK, SINK, B$SR_NON_BLANK,
      933     9904    3                ADDR(VD_STATIC_TEMP)->UNFID$FID);
      934     9905    3              VD_$CONTEXT.LENGTH# = LAST_NON_BLANK + 1;
      935     9906    3              VD_$CONTEXT.FLINK$ -> VD$BUFFER.LENGTH# = VD_$CONTEXT.LENGTH#;
      936     9907    3              VD_$CONTEXT.FLINK$ -> VD$BUFFER.BYTES =
      937     9908    3                SUBSTR(ADDR(VD_STATIC_TEMP)->UNFID$FID, 0, VD_$CONTEXT.LENGTH#);
      938     9909    3              RETURN;
      939     9910    3              END;
      940     9911                /* Didn't find context file - report the ALTRET */
      941     9912    2   OPEN_FAILED: ;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:27   
      942     9913    2   GLINEATTR_FAILED: ;
      943     9914    2   CMDVAR_FAILED: ;
      944     9915    2   UNFID_FAILED: ;
      945     9916    2           FATAL$ERR.ERR = B$TCB.ALT$->B$ALT.ERR;
      946     9917    2           FATAL$ERR.DCB# = B$TCB.ALT$->B$ALT.DCB#;
      947     9918    2           ALTRETURN;
      948     9919
      949     9920
      950     9921
      951     9922    2   FID_FAILED:
      952     9923    2           ERR_SUBST$ = PINCRW(ADDR(FATAL$ERR), SIZEW(VD$ERR));
      953     9924    2           FATAL$ERR.ERR.CODE# = %E$SETUP_6EDIT_NOT_FID;
      954     9925    2           ERR$SUBST.OBJECT.CLASS# (0) = %CLS_PTR_TEXTC;
      955     9926    2           ERR$SUBST.V$ (0) = ADDR(VD_STATIC_TEMP);
      956     9927
      957     9928
      958     9929    2   OALLOC_FAILED: ;
      959     9930    2   OALLOC_DCB_FAILED: ;
      960     9931    2           ALTRETURN;
      961     9932
      962     9933    2   END PUSH_CONTEXT_FILE;
      963     9934
      964     9935        %BOX (TITLE=PUSH_INITIALIZE_CMDS, PAGE=YES);
              9943    2
              9947    2   /***************************************************************************
              9949    2    *                                                                         *
              9953    2            *                            PUSH_INITIALIZE_CMDS                         *
              9955    2            *                                                                         *
              9957    2           ***************************************************************************/

      965     9961
      966     9962        /*I* NAME: PUSH_INITIALIZE_CMDS
      967     9963            PARAMETERS:
      968     9964                NONE
      969     9965            INPUT:
      970     9966                VD_$INITIALIZE is a global VD$BUFFER containing (probably
      971     9967                    indirectly) a string expression.
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:28   
      972     9968            OUTPUT:
      973     9969                Another VD$CMD_STREAM with a chain of buffers corresponding to
      974     9970                    the records defined by the string expression.
      975     9971        */
      976     9972
      977     9973    1   PUSH_INITIALIZE_CMDS: PROC ALTRET;
      978     9974
      979     9975    2   DCL BUFFER$ PTR;
      980     9976        %VD$BUFFER (NAME=RECORD, STCLASS="BASED(BUFFER$)");
      981    10034    2   DCL INDX SBIN;
      982    10035    2   DCL RET_CODE CHAR(1);
      983    10036    2   DCL CTRL_ARGS(0:%(MX_CTRL_FN_ARGS-1)) SBIN;
      984    10037
      985    10038    2           CALL VDG$OALLOC (%CLS_CMD_STREAM, BUFFER$) ALTRET (FATAL_ERR);
      986    10039    2           TOP$CMD_STREAM.TYPE# = %CS_BUFFER;
      987    10040
      988    10041    2           VD_STATIC_TEMP.LENGTH# = VD_$INITIALIZE.FLINK$ -> RECORD.LENGTH#;
      989    10042    2           VD_STATIC_TEMP.BYTES = VD_$INITIALIZE.FLINK$ -> RECORD.BYTES;
      990    10043    2           XUE_ECB.OUT$ = ADDR(VD_STATIC_TEMP);
      991    10044    2           INDX = 0;
      992    10045    2           BUFFER$ = PINCRW(ADDR(TOP$CMD_STREAM.RECORD$),
      993    10046    2             POFFW (ADDR(RECORD), ADDR(RECORD.FLINK$)));
      994    10047    3           DO UNTIL INDX >= VD_STATIC_TEMP.LENGTH#;
      995    10048    3              CALL VDE$PSTRING (, INDX, RECORD.FLINK$, RET_CODE, CTRL_ARGS)
      996    10049    3                ALTRET (FATAL_ERR);
      997    10050    4              IF RET_CODE ~= %CHR_SPACE AND RET_CODE ~= %FNID_RECORD THEN DO;
      998    10051    4                 CALL VDG$ERRMSG (%E$BAD_CTRLFN_IN_INITIALIZE);
      999    10052    4                 CALL VDG$OFREE (VD_6E.CMD_STREAM$);
     1000    10053    4   FATAL_ERR:    ALTRETURN;
     1001    10054    4                 END;
     1002    10055    3              IF RECORD.FLINK$ ~= ADDR(NIL) THEN
     1003    10056    3                 BUFFER$ = RECORD.FLINK$;
     1004    10057    3              END;
     1005    10058    2   END PUSH_INITIALIZE_CMDS;
     1006    10059    1   END VDG$MAIN;
     1007    10060        %EOD;

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:29   
--  Include file information  --

   B$TABLES_C.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   XUE_MACRO_C.:LIBRARY  is referenced.
   B_ERRORS_C.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDG$MAIN.

   Procedure VDG$MAIN requires 1176 words for executable code.
   Procedure VDG$MAIN requires 214 words of local(AUTO) storage.

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:30   

 Object Unit name= VDG$MAIN                                   File name= VDG$MAIN.:VDA5TOU
 UTS= JUL 04 '97 11:18:37.12 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$SI
    2   DCB   even  none     0      0  M$FILE
    3  RoData even  UTS    179    263  VDG$MAIN
    4   Data  even  none    16     20  VDG$MAIN
    5   Proc  even  none  1176   2230  VDG$MAIN
    6  RoData even  none    39     47  VDG$MAIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        0  VDG$MAIN

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    3    100  ENABLE_BRK                         3    104  DISABLE_BRK
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:31   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
         yes          Async      0 VDG$EXCON
 yes     yes           Std       0 VDG$MINIT
         yes           Std       1 VDG$EREPORT_ERROR
 yes     yes           Std       4 VDA$LWRITE
 yes     yes           Std       3 VDG$OALLOC
         yes          Async      0 VDG$EBREAK
 yes     yes           Std       0 VDP$WINIT
 yes     yes           Std       0 VDI$PREAD_FILE_OPEN
 yes     yes           Std       1 VDG$OFREE
 yes     yes           Std       0 VDI$PREAD_FILE_CLOSE
         yes          Async      0 VDG$ETRAP
 yes     yes           Std       0 VDG$WINIT
 yes     yes           Std       4 VDG$ERRMSG
 yes     yes           Std       1 VDW$LOAD
 yes     yes           Std       2 VDI$CSET_COUNT
 yes     yes           Std       2 VDA$PFLUSH
 yes     yes           Std       1 VDG$OALLOC_DCB
 yes     yes           Std       5 VDE$PSTRING
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:32   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$SI                                  M$FILE
     B$JIT$                                B$TCB$                                VD_6E
     VD_COMMAND_WINDOW$                    VD_$CONTEXT                           VD_$COMMAND
     VD_$SCREEN                            VD_EDITING_HEIGHT                     VD_TOP_LINE
     VD_OLD_$SCREEN                        VD_LOC_$SCREEN                        VD_$INITIALIZE
     XUE_ECB                          r    B$SR_NON_BLANK$                  r    B$XL_UPPER$
     VD_KEY_NUMERIC_BOF                    VD_STATIC_TEMP                        B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:33   


        1        1        /*M* VDG$MAIN - Main procedure for 6Edit */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11
       12       12        /*P* NAME: VDG$MAIN
       13       13            PURPOSE:
       14       14                Main procedure for 6Edit.
       15       15            DESCRIPTION:
       16       16                This module contains several external routines:
       17       17
       18       18                VDG$MAIN
       19       19                Main program for 6Edit processor.  Receives initial control
       20       20                from the command processor.  Initializes the world, prepares
       21       21                to process the optional context file and the invocation
       22       22                command line, validates the initial workspace,
       23       23                establishes BREAK control, then calls VDI$PDRIVER
       24       24                to begin processing commands.
       25       25
       26       26                VDG$MINIT
       27       27                Initialization routine.  Contains (almost) all global static
       28       28                data, initializes it, prepares dynamic data segments for
       29       29                VDG$OALLOC, initializes control blocks for library routines.
       30       30
       31       31                VDG$MTERMINATE
       32       32                Termination routine.  Called when user types END command,
       33       33                or when fatal error encountered.  Closes all files and all
       34       34                windows, restores the terminal to its original state,
       35       35                passes any user-specified $RESTORE command to IBEX,
       36       36                updates the statistics file, reports any final, fatal
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:34   
       37       37                error message, and exits setting the STEPCC and IBEX-error-code
       38       38                appropriately.
       39       39        */
       40       40
       41       41        /*D* NAME: VDG$MAIN
       42       42            PARAMETERS:
       43       43                None.
       44       44            INPUT:
       45       45                B$JIT.FACCT - User's !DIR account.
       46       46                B$JIT.ACCT - User's logon account.
       47       47                If B$JIT.PRFLAGS.CONTINUED = %FALSE, then
       48       48                    B$JIT.CCBUF contains B$JIT.CCARS chars of command line
       49       49                    text.  B$JIT.CCDISP is the offset into B$JIT.CCBUF
       50       50                    of the left parenthesis in front of the "options"
       51       51                    (command-list).
       52       52                Else:
       53       53                    The file *CONTINUATION_COMMANDS contains the records of a
       54       54                    multiline invocation command line, including the
       55       55                    first line with its rununit fid.  B$JIT.CCARS contains
       56       56                    the total number of bytes in all the records in the file.
       57       57                    B$JIT.CCDISP is the offset into the entire set of
       58       58                    characters (as tho the records of the *CONTINUATION_COMMANDS
       59       59                    file were laid end-to-end) of the left parenthesis.
       60       60            DESCRIPTION:
       61       61                VDG$MAIN gets initial control from IBEX.
       62       62                Call VDG$MINIT, VDP$WINIT, and VDG$WINIT, in that order, to initialize
       63       63                    everything to the point where we can allocate dynamic storage and
       64       64                    converse with the user in serial mode.
       65       65                If the user used incorrect syntax to invoke 6Edit, write the error
       66       66                    message and abort.
       67       67                Take exit-control, BREAK-control, and some trap-controls.
       68       68                Push a first VD$CMD_STREAM for the command window.  This is always
       69       69                    the bottom VD$CMD_STREAM on the command-stream stack.
       70       70                Look for command input from 4 places; if we find any, push
       71       71                    VD$CMD_STREAMs onto the command stream stack in the following order:
       72       72                      1) M$SI assigned to non-interactive file => CS_DCB
       73       73                      2) Options on invocation command line    => CS_BUFFER
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:35   
       74       74                      3) M$FILE (DCB #1 on invocation line)    => CS_TREE w/ED cmd
       75       75                      4) Context file                          => CS_DCB
       76       76                    Note that the VD$CMD_STREAMs will be processed in the opposite
       77       77                    order:
       78       78                      1) First the context file, to let the user override any
       79       79                            operational defaults (such as terminal parameters) and to
       80       80                            define any synonyms the user expects to be able to use in
       81       81                            the other inputs.
       82       82                      2) If DCB #1 on the invocation command line was set, an already-
       83       83                            encoded InTree specifying an EDIT DCB command for the #1
       84       84                            DCB.
       85       85                      3) The invocation command line options;
       86       86                      4) M$SI assigned to a READ-file of 6Edit commands. M$SI is used
       87       87                            last because, when it's set to something interactive
       88       88                            (another window), it's used last then (tho no
       89       89                            VD$CMD_STREAM is pushed for it in that case).
       90       90                Prepare to process the invocation command line options.
       91       91                    Either B$JIT.CCBUF has the entire invocation command line, or
       92       92                        a multi-line invocation command line is stored in a temporary
       93       93                        file built by IBEX.
       94       94                    If CCBUF has the command-line, copy it to dynamic storage.
       95       95                    If the command-line is in a file, read the file records
       96       96                        into dynamic storage, laying them end-to-end, so
       97       97                        they form one huge command line.
       98       98                    Push a VD$CMD_STREAM pointing to the new command line.
       99       99                    Position the CMD$STREAM so the first char parsed is just
      100      100                        beyond the left parenthesis preceding the "options"
      101      101                        (or where IBEX says the left paren is via B$JIT.CCDISP).
      102      102                        Also omit the optional trailing right parenthesis from
      103      103                        the buffer.
      104      104                See if the user assigned M$FILE (either on the invocation
      105      105                    command line as #1, or via a prior SET command).  If so, build
      106      106                    an encoded EDIT DCB command in a VD$CMD_STREAM's InTree and push
      107      107                    it onto the command stream stack.
      108      108                    Also, flag the fact that the user assigned M$FILE, so that
      109      109                    when we're reading the context file we'll know to ignore any
      110      110                    Windows in it.
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:36   
      111      111                Search for a context file, using a file name and a list of accounts
      112      112                        to search.  The default name includes %SETUP_FN_PROFILE in it,
      113      113                        specifying that each account is to be searched for that name,
      114      114                        both omitting and including the terminal profile at that point
      115      115                        in the name.
      116      116                    But first, see if the IBEX command variable "SETUP_6EDIT" has a
      117      117                        value; if so, M$FID it's value.  If there is an account part,
      118      118                        it replaces the entire default account search list (we'll only
      119      119                        search the one given account).  In the name part, replace any
      120      120                        appearance of %SETUP_FN_USER with the user's JIT.UNAME.
      121      121                    Test-open the name, both with and without the terminal profile if
      122      122                        %SETUP_FN_PROFILE is included in the name, in all accounts
      123      123                        specified by the account list.
      124      124                    If we find a file, push a VD$CMD_STREAM for the file.  By leaving
      125      125                    it on the top of the stack, it becomes the first command stream.
      126      126                Open the context file (if any) and check its file type:  if it's a
      127      127                    workspace file, load it into the internal workspace now.
      128      128                Create the command window structure in the internal Windows file.
      129      129                    If we can screen edit and the user hasn't overridden
      130      130                    screen-editing, the command window will also be created in the FEP.
      131      131
      132      132                Call VDI$PDRIVER to begin processing commands.  If we pushed any
      133      133                    VD$CMD_STREAMs above, they will be the first commands that
      134      134                    VDI$PDRIVER will process.  When done with them, it will begin
      135      135                    reading commands from the terminal.
      136      136                When/if VDI$PDRIVER returns, call VDG$MTERMINATE to close all files
      137      137                    and return to IBEX.
      138      138        */
      139      139
      140      140        VDG$MAIN: PROC;

    140  5 000000   000000 700200 xent  VDG$MAIN     TSX0  ! X66_AUTO_0
         5 000001   000326 000000                    ZERO    214,0

      141      141
      142      142
      143      143        %INCLUDE CP_6;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:37   
      144      224        %INCLUDE CP_6_SUBS;
      145      764        %INCLUDE B_ERRORS_C;
      146     1890        %INCLUDE XUE_MACRO_C;
      147     2634        %INCLUDE VD_MACROS_M;
      148     4849        %INCLUDE VD_PERR_C;
      149     4997        %INCLUDE VD_NODES0_E;
      150     5089        %INCLUDE B$JIT;
      151     5379        %INCLUDE B$TABLES_C;
      152     5487
      153     5488
      154     5489    1   DCL VDG$MINIT           ENTRY ALTRET;
      155     5490    1   DCL VDP$WINIT           ENTRY ALTRET;
      156     5491    1   DCL VDG$WINIT           ENTRY ALTRET;
      157     5492    1   DCL VDI$PREAD_FILE_OPEN ENTRY ALTRET;
      158     5493    1   DCL VDI$PREAD_FILE_READ ENTRY (2) ALTRET;
      159     5494    1   DCL VDI$PREAD_FILE_CLOSE ENTRY ALTRET;
      160     5495    1   DCL VDA$LWRITE          ENTRY (4) ALTRET;
      161     5496    1   DCL VDA$PFLUSH          ENTRY (2) ALTRET;
      162     5497    1   DCL VDE$PSTRING         ENTRY(5) ALTRET;
      163     5498    1   DCL VDG$ERRMSG          ENTRY(4) ALTRET;
      164     5499    1   DCL VDI$CSET_COUNT      ENTRY(2) ALTRET;
      165     5500    1   DCL VDW$LOAD            ENTRY (1) ALTRET;
      166     5501    1   DCL VDG$MTERMINATE      ENTRY;
      167     5502    1   DCL VDG$EXCON           ENTRY ASYNC;
      168     5503    1   DCL VDG$EBREAK          ENTRY ASYNC;
      169     5504    1   DCL VDG$ETRAP           ENTRY ASYNC;
      170     5505    1   DCL VDG$EREPORT_ERROR   ENTRY (1);
      171     5506    1   DCL VDG$ESCREECH        ENTRY (3);
      172     5507    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
      173     5508    1   DCL VDG$OALLOC_DCB      ENTRY (1) ALTRET;
      174     5509    1   DCL VDG$OFREE           ENTRY (1) ALTRET;
      175     5510
      176     5511
      177     5512    1   DCL M$SI DCB;
      178     5513    1   DCL M$FILE DCB;
      179     5514
      180     5515    1   DCL CONTEXT_DCB#     UBIN(18);
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:38   
      181     5516
      182     5517    1   DCL B$JIT$ PTR SYMREF;
      183     5518    1   DCL B$TCB$ PTR SYMREF;
      184     5519        %VD_6E (NAME=VD_6E, STCLASS=SYMREF);
      185     5555    1   DCL VD_COMMAND_WINDOW$ PTR SYMREF;
      186     5556    1   DCL VD_SCREEN_HEIGHT SBIN SYMREF;
      187     5557        %VD_BUFFER (NAME=VD_$CONTEXT, STCLASS=SYMREF, MXNB=%MXNB_FID);
      188     5617        %VD$NUMBER (NAME=VD_$COMMAND, STCLASS=SYMREF);
      189     5662        %VD$NUMBER (NAME=VD_$SCREEN, STCLASS=SYMREF);
      190     5707    1   DCL VD_EDITING_HEIGHT SBIN SYMREF;
      191     5708    1   DCL VD_TOP_LINE SBIN SYMREF;
      192     5709    1   DCL VD_OLD_$SCREEN SBIN SYMREF;
      193     5710        %VD$LOCATION (NAME=VD_LOC_$SCREEN, STCLASS=SYMREF);
      194     5738        %VD$BUFFER (NAME=VD_$INITIALIZE, STCLASS=SYMREF);
      195     5796        %XUE_ECB (STCLASS=SYMREF);
      196     5998        %B$SR_NON_BLANK;
      197     6002        %B$XL_UPPER;
      198     6006        %VD_KEY (NAME=VD_KEY_NUMERIC_BOF, STCLASS=SYMREF);
      199     6042        %VD_TEXTC (NAME=VD_STATIC_TEMP, STCLASS=SYMREF, MXNB=%MXNB_NAME_VALUE);
      200     6183
      201     6184
      202     6185
      203     6186        %FPT_OPEN (FPTN=CONST_TEST_OPEN, STCLASS=CONSTANT, FUN=IN, TEST=YES);
      204     6295        %FPT_XCON (STCLASS=CONSTANT, UENTRY=VDG$EXCON);
      205     6309        %FPT_INT (FPTN=ENABLE_BRK,
      206     6310                 UENTRY=VDG$EBREAK,
      207     6311                 STCLASS="CONSTANT SYMDEF");
      208     6325
      209     6326        %FPT_INT (FPTN=DISABLE_BRK,
      210     6327                 UENTRY=NIL,
      211     6328                 STCLASS="CONSTANT SYMDEF");
      212     6342
      213     6343        %FPT_TRAP (STCLASS=CONSTANT, ARITHMETIC=VDG$ETRAP, ERRORS=VDG$ETRAP,
      214     6344            DIVIDE_CHECK=TRAP, OVERFLOW=TRAP,
      215     6345            COMMAND=TRAP, IPR=TRAP, LOCKUP=TRAP, MEMORY=TRAP,
      216     6346            MISSING_PAGE=TRAP, MISSING_SEG=TRAP, SECURITY_1=TRAP,
      217     6347            SECURITY_2=TRAP);
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:39   
      218     6370
      219     6371
      220     6372        /* Location in the Windows file for the command window */
      221     6373        %VD_LOCATION (NAME=COMMAND_WINDOW_LOC, STCLASS=CONSTANT, INITS=1,
      222     6374            ITYPE1=%KT_NUMBER, IREP1=%REP_LOCAL, IBYTES1=%WK_COMMAND_WINDOW);
      223     6449
      224     6450
      225     6451    1   DCL VD_ERR$ PTR;
      226     6452    1   DCL ERR_SUBST$ PTR;
      227     6453        %FPT_OPEN (FPTN=TEST_OPEN, STCLASS=AUTO);
      228     6562    1   DCL CMD_WINDOW_STREAM$ PTR;
      229     6563    1   DCL SI_STREAM$ PTR;
      230     6564    1   DCL INVOCATION_STREAM$ PTR;
      231     6565    1   DCL MFILE_STREAM$ PTR;
      232     6566    1   DCL CONTEXT_STREAM$ PTR;
      233     6567    1   DCL 1 LOAD_FLAGS ALIGNED,
      234     6568              %VD$PDFF (NAME=F, STCLASS=AUTO, LEV=2, LAST=YES);
      235     6582        %VD_TEXTC (NAME=FUNNY_TEXT, STCLASS=AUTO, MXNB=%MXNB_ERR_SUBST);
      236     6723    1   DCL SUCCESSFULLY_OPENED BIT(1) ALIGNED;
      237     6724    1   DCL WINDOW_SPEC$ PTR;
      238     6725        %VD$SPEC (NAME=WSPEC, STCLASS=AUTO);
      239     6739    1   DCL ACTUAL_ERR$ PTR;
      240     6740
      241     6741
      242     6742        %F$DCB;
      243     6799        %B$TCB (NAME=B$TCB, STCLASS="BASED(B$TCB$)");
      244     6802        %B$ALT;
      245     6810        %VD$ERR (NAME=VD$ERR, STCLASS="BASED(VD_ERR$)");
      246     6863        %VD$POINTER (NAME=ERR$SUBST, DIM="(0:2)", STCLASS="BASED(ERR_SUBST$)");
      247     6908        %VD$ERR (NAME=FATAL$ERR, STCLASS="BASED(VD_6E.ERR_HEAD$)");
      248     6961        %VD$CMD_STREAM (NAME=SI$STREAM, STCLASS="BASED(SI_STREAM$)");
      249     7000        %VD$CMD_STREAM (NAME=CONTEXT$STREAM, STCLASS="BASED(CONTEXT_STREAM$)");
      250     7039        %VD$CMD_STREAM (NAME=TOP$CMD_STREAM, STCLASS="BASED(VD_6E.CMD_STREAM$)");
      251     7078        %VD$STREAM (NAME=WINDOWS$STREAM, STCLASS="BASED(VD_6E.WINDOWS$)");
      252     7184        %VD$WINDOW_SPEC (NAME=WINDOW$SPEC, STCLASS="BASED(WINDOW_SPEC$)");
      253     7250        %VD$PORT;
      254     7348        %VD$BUFFER_HEADER;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:40   
      255     7384        %VD$BUFFER;
      256     7442        %VD$STRING_HEADER;
      257     7478        %VD$TEXTC_REMOTE;
      258     7539    1   DCL 1 VD$ERR_HEAD BASED(VD_6E.ERR_HEAD$) ALIGNED,
      259     7540              %VD$ERR (NAME=VD_ERR, LEV=2, LAST=NO);
      260     7593              %VD$NUMBER (NAME=ERR_SUBST, DIM="(0:2)", LEV=2, LAST=YES);
      261     7638    1   DCL 1 ACTUAL$ERR BASED(ACTUAL_ERR$) ALIGNED,
      262     7639              %VD$ERR (NAME=VD_ERR, LEV=2, LAST=NO);
      263     7692              %VD$NUMBER (NAME=ERR_SUBST, DIM="(0:2)", LEV=2, LAST=YES);
      264     7737
      265     7738
      266     7739
      267     7740    1           VD_6E.WINDOWS$ = ADDR(NIL); /* No command-window yet */

   7740  5 000002   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 000003   000006 756000 xsym               STQ     VD_6E+6

      268     7741    1           VD_COMMAND_WINDOW$ = ADDR(NIL);

   7741  5 000004   000000 756000 xsym               STQ     VD_COMMAND_WINDOW$

      269     7742
      270     7743    1           SI_STREAM$ = ADDR(NIL);

   7743  5 000005   200101 756100                    STQ     SI_STREAM$,,AUTO

      271     7744    1           INVOCATION_STREAM$ = ADDR(NIL);

   7744  5 000006   200102 756100                    STQ     INVOCATION_STREAM$,,AUTO

      272     7745    1           MFILE_STREAM$ = ADDR(NIL);

   7745  5 000007   200103 756100                    STQ     MFILE_STREAM$,,AUTO

      273     7746    1           CONTEXT_STREAM$ = ADDR(NIL);

   7746  5 000010   200104 756100                    STQ     CONTEXT_STREAM$,,AUTO
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:41   

      274     7747
      275     7748    1           CALL VDG$MINIT

   7748  5 000011   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000012   000000 701000 xent               TSX1    VDG$MINIT
         5 000013   000015 702000 5                  TSX2    FATAL_ERR
         5 000014   000023 710000 5                  TRA     s:7758

      276     7749    2           WHENALTRETURN DO;

      277     7750    2   FATAL_ERR: VD_6E.ERR_TAIL$ -> VD$ERR.FLAGLEV# = %FLV_FATAL;

   7750  5 000015   000004 220003       FATAL_ERR    LDX0    4,DU
         5 000016   000032 470400 xsym               LDP0    VD_6E+26
         5 000017   000003 740100                    STX0    3,,PR0

      278     7751    2              CALL VDG$EREPORT_ERROR; /* We'll never come back from this */

   7751  5 000020   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000021   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         5 000022   000000 011000                    NOP     0

      279     7752    2              END;

      280     7753
      281     7754                /*
      282     7755                *   VDP$WINIT must be called before VDG$WINIT, to get terminal params
      283     7756                *       from the FEP.
      284     7757                */
      285     7758    1           CALL VDP$WINIT ALTRET(FATAL_ERR);

   7758  5 000023   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000024   000000 701000 xent               TSX1    VDP$WINIT
         5 000025   000015 702000 5                  TSX2    FATAL_ERR

      286     7759
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:42   
      287     7760                /*
      288     7761                *   Initialize the internal workspace, creating all mandatory
      289     7762                *       entries (e.g., Structures-file entries).
      290     7763                */
      291     7764    1           CALL VDG$WINIT ALTRET(FATAL_ERR);

   7764  5 000026   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000027   000000 701000 xent               TSX1    VDG$WINIT
         5 000030   000015 702000 5                  TSX2    FATAL_ERR

      292     7765
      293     7766
      294     7767                /**************************************************************
      295     7768                *
      296     7769                *   Now we're fully initialized; we can converse with the user.
      297     7770                *
      298     7771                */
      299     7772
      300     7773                /* Report error if bad invocation syntax */
      301     7774    2           IF B$JIT.PRFLAGS.NSSYNTAX THEN DO;

   7774  5 000031   000000 470400 xsym               LDP0    B$JIT$
         5 000032   000030 236100                    LDQ     24,,PR0
         5 000033   002000 316003                    CANQ    1024,DU
         5 000034   000060 600000 5                  TZE     s:7782

      302     7775    2              FUNNY_TEXT.LENGTH# = MINIMUM (B$JIT.CCDISP,

   7775  5 000035   000032 236100                    LDQ     26,,PR0
         5 000036   000022 736000                    QLS     18
         5 000037   000022 732000                    QRS     18
         5 000040   000037 116007                    CMPQ    31,DL
         5 000041   000043 604400 5                  TMOZ    s:7775+6
         5 000042   000037 236007                    LDQ     31,DL
         5 000043   000033 736000                    QLS     27
         5 000044   200106 552140                    STBQ    FUNNY_TEXT,'40'O,AUTO

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:43   
      303     7776    2                LENGTHC(FUNNY_TEXT.BYTES));
      304     7777    2              FUNNY_TEXT.BYTES = B$JIT.CCBUF;

   7777  5 000045   040100 100500                    MLR     fill='040'O
         5 000046   000033 000037                    ADSC9   27,,PR0                  cn=0,n=31
         5 000047   200106 200037                    ADSC9   FUNNY_TEXT,,AUTO         cn=1,n=31

      305     7778    2              CALL VDG$ERRMSG (%E$INVOK_NOT_RECOGNIZED, FUNNY_TEXT)

   7778  5 000050   200106 631500                    EPPR1   FUNNY_TEXT,,AUTO
         5 000051   200321 451500                    STP1    SINK+3,,AUTO
         5 000052   000000 236000 6                  LDQ     0
         5 000053   200320 756100                    STQ     SINK+2,,AUTO
         5 000054   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000055   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000056   000000 701000 xent               TSX1    VDG$ERRMSG
         5 000057   000015 702000 5                  TSX2    FATAL_ERR

      306     7779    2                ALTRET (FATAL_ERR);
      307     7780    2              END;

      308     7781
      309     7782    1           CALL M$XCON (FPT_XCON);

   7782  5 000060   000072 630400 3                  EPPR0   FPT_XCON
         5 000061   010003 713400                    CLIMB   4099
         5 000062   400400 401760                    pmme    nvectors=2

      310     7783    1           CALL M$INT (ENABLE_BRK);

   7783  5 000063   000100 630400 3                  EPPR0   ENABLE_BRK
         5 000064   010002 713400                    CLIMB   4098
         5 000065   400000 401760                    pmme    nvectors=1

      311     7784    1           CALL M$TRAP (FPT_TRAP);

   7784  5 000066   000110 630400 3                  EPPR0   FPT_TRAP
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:44   
         5 000067   010004 713400                    CLIMB   4100
         5 000070   400400 401760                    pmme    nvectors=2

      312     7785
      313     7786                /* Push a VD$CMD_STREAM for the command window */
      314     7787    1           CALL VDG$OALLOC (%CLS_CMD_STREAM, CMD_WINDOW_STREAM$)

   7787  5 000071   200100 630500                    EPPR0   CMD_WINDOW_STREAM$,,AUTO
         5 000072   200321 450500                    STP0    SINK+3,,AUTO
         5 000073   000001 236000 6                  LDQ     1
         5 000074   200320 756100                    STQ     SINK+2,,AUTO
         5 000075   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000076   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000077   000000 701000 xent               TSX1    VDG$OALLOC
         5 000100   000015 702000 5                  TSX2    FATAL_ERR

      315     7788    1             ALTRET (FATAL_ERR);
      316     7789    1           TOP$CMD_STREAM.TYPE# = %CS_ME;

   7789  5 000101   000002 220003                    LDX0    2,DU
         5 000102   000026 470400 xsym               LDP0    VD_6E+22
         5 000103   000002 740100                    STX0    2,,PR0

      317     7790
      318     7791                /*
      319     7792                *  If M$SI is assigned to something non-interactive,
      320     7793                *      push it on the command-stream stack.
      321     7794                */
      322     7795
      323     7796    1           TEST_OPEN = CONST_TEST_OPEN;

   7796  5 000104   000100 100400                    MLR     fill='000'O
         5 000105   000000 000350 3                  ADSC9   CONST_TEST_OPEN          cn=0,n=232
         5 000106   200006 000350                    ADSC9   TEST_OPEN,,AUTO          cn=0,n=232

      324     7797    1           TEST_OPEN.V_ = VECTOR(TEST_OPEN.V);

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:45   
   7797  5 000107   000002 235000 6                  LDA     2
         5 000110   200320 452500                    STP2    SINK+2,,AUTO
         5 000111   200320 236100                    LDQ     SINK+2,,AUTO
         5 000112   000052 036003                    ADLQ    42,DU
         5 000113   200006 757100                    STAQ    TEST_OPEN,,AUTO

      325     7798    1           TEST_OPEN.V.DCB# = DCBNUM(M$SI);

   7798  5 000114   000000 236007 xsym               LDQ     M$SI,DL
         5 000115   000000 621006                    EAX1    0,QL
         5 000116   200052 741100                    STX1    TEST_OPEN+36,,AUTO

      326     7799    1           CALL M$OPEN (TEST_OPEN)

   7799  5 000117   200006 630500                    EPPR0   TEST_OPEN,,AUTO
         5 000120   450000 713400                    CLIMB   alt,open
         5 000121   410400 401760                    pmme    nvectors=18
         5 000122   000124 702000 5                  TSX2    s:7801
         5 000123   000124 710000 5                  TRA     s:7801

      327     7800    2           WHENALTRETURN DO; ; END; /* Ignore errors */

      328     7801    2           IF NOT DCBADDR(TEST_OPEN.V.DCB#)->F$DCB.DDEV.IC# THEN DO;

   7801  5 000124   000003 470400 6                  LDP0    3
         5 000125   000000 471500                    LDP1    0,,PR0
         5 000126   200052 220100                    LDX0    TEST_OPEN+36,,AUTO
         5 000127   100000 473510                    LDP3    0,X0,PR1
         5 000130   300004 236100                    LDQ     4,,PR3
         5 000131   100000 316007                    CANQ    32768,DL
         5 000132   000154 601000 5                  TNZ     s:7814

      329     7802    2              CALL VDG$OALLOC (%CLS_CMD_STREAM, SI_STREAM$)

   7802  5 000133   200101 634500                    EPPR4   SI_STREAM$,,AUTO
         5 000134   200321 454500                    STP4    SINK+3,,AUTO
         5 000135   000001 236000 6                  LDQ     1
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:46   
         5 000136   200320 756100                    STQ     SINK+2,,AUTO
         5 000137   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000140   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000141   000000 701000 xent               TSX1    VDG$OALLOC
         5 000142   000015 702000 5                  TSX2    FATAL_ERR

      330     7803    2                ALTRET (FATAL_ERR);
      331     7804    2              SI$STREAM.TYPE# = %CS_DCB;

   7804  5 000143   000004 220003                    LDX0    4,DU
         5 000144   200101 470500                    LDP0    SI_STREAM$,,AUTO
         5 000145   000002 740100                    STX0    2,,PR0

      332     7805    2              SI$STREAM.DCB# = TEST_OPEN.V.DCB#;

   7805  5 000146   200052 221100                    LDX1    TEST_OPEN+36,,AUTO
         5 000147   200101 470500                    LDP0    SI_STREAM$,,AUTO
         5 000150   000024 741100                    STX1    20,,PR0

      333     7806    2              SI$STREAM.ECHO = %TRUE; /* Echo if echoing */

   7806  5 000151   200101 470500                    LDP0    SI_STREAM$,,AUTO
         5 000152   400000 236007                    LDQ     -131072,DL
         5 000153   000027 256100                    ORSQ    23,,PR0

      334     7807    2              END;

      335     7808
      336     7809                /*
      337     7810                *  Push invocation command line, and possible continuation
      338     7811                *      file, on command-stream stack.
      339     7812                */
      340     7813
      341     7814    1           CALL PUSH_INVOK_CMD (INVOCATION_STREAM$) ALTRET (FATAL_ERR);

   7814  5 000154   200102 630500                    EPPR0   INVOCATION_STREAM$,,AUTO
         5 000155   200125 450500                    STP0    ACTUAL_ERR$+3,,AUTO
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:47   
         5 000156   000504 701000 5                  TSX1    PUSH_INVOK_CMD
         5 000157   000015 702000 5                  TSX2    FATAL_ERR

      342     7815
      343     7816                /*
      344     7817                *  If the user set #1 (M$FILE), push an EDIT command for it.
      345     7818                */
      346     7819
      347     7820    2           IF DCBADDR(DCBNUM(M$FILE))->F$DCB.AMR# AND NOT B$JIT.PRFLAGS.SI THEN DO;

   7820  5 000160   000000 236007 xsym               LDQ     M$FILE,DL
         5 000161   000003 470400 6                  LDP0    3
         5 000162   000000 471500                    LDP1    0,,PR0
         5 000163   100000 473506                    LDP3    0,QL,PR1
         5 000164   300031 236100                    LDQ     25,,PR3
         5 000165   010000 316007                    CANQ    4096,DL
         5 000166   000202 600000 5                  TZE     s:7831
         5 000167   000000 473400 xsym               LDP3    B$JIT$
         5 000170   300030 234100                    SZN     24,,PR3
         5 000171   000202 604000 5                  TMI     s:7831

      348     7821                   /* User set M$FILE DCB */
      349     7822    2              CALL PUSH_EDIT_CMD (DCBNUM(M$FILE), MFILE_STREAM$)

   7822  5 000172   000000 236007 xsym               LDQ     M$FILE,DL
         5 000173   200325 756100                    STQ     SINK+7,,AUTO
         5 000174   200103 634500                    EPPR4   MFILE_STREAM$,,AUTO
         5 000175   200126 454500                    STP4    BUFFER$+1,,AUTO
         5 000176   200325 635500                    EPPR5   SINK+7,,AUTO
         5 000177   200125 455500                    STP5    ACTUAL_ERR$+3,,AUTO
         5 000200   000601 701000 5                  TSX1    PUSH_EDIT_CMD
         5 000201   000015 702000 5                  TSX2    FATAL_ERR

      350     7823    2                ALTRET (FATAL_ERR);
      351     7824    2              END;

      352     7825
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:48   
      353     7826                /*
      354     7827                *   Search for a context file, and push it onto the command
      355     7828                *       stream stack.
      356     7829                */
      357     7830
      358     7831    1           CALL PUSH_CONTEXT_FILE (CONTEXT_STREAM$, TEST_OPEN)

   7831  5 000202   200006 630500                    EPPR0   TEST_OPEN,,AUTO
         5 000203   200126 450500                    STP0    BUFFER$+1,,AUTO
         5 000204   200104 631500                    EPPR1   CONTEXT_STREAM$,,AUTO
         5 000205   200125 451500                    STP1    ACTUAL_ERR$+3,,AUTO
         5 000206   001010 701000 5                  TSX1    PUSH_CONTEXT_FILE
         5 000207   000015 702000 5                  TSX2    FATAL_ERR

      359     7832    1             ALTRET (FATAL_ERR);
      360     7833    2           IF CONTEXT_STREAM$ ~= ADDR(NIL) THEN DO;

   7833  5 000210   200104 236100                    LDQ     CONTEXT_STREAM$,,AUTO
         5 000211   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000212   000230 600000 5                  TZE     s:7843

      361     7834    2              CALL VDI$PREAD_FILE_OPEN

   7834  5 000213   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000214   000000 701000 xent               TSX1    VDI$PREAD_FILE_OPEN
         5 000215   000217 702000 5                  TSX2    s:7836
         5 000216   000230 710000 5                  TRA     s:7843

      362     7835    3              WHENALTRETURN DO;

      363     7836    3                 IF FATAL$ERR.ERR ~= %CLEAR THEN

   7836  5 000217   000031 470400 xsym               LDP0    VD_6E+25
         5 000220   000002 235100                    LDA     2,,PR0
         5 000221   000015 601000 5                  TNZ     FATAL_ERR

      364     7837    3                    GOTO FATAL_ERR;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:49   
      365     7838    3                 CALL VDG$OFREE (CONTEXT$STREAM) ALTRET (FATAL_ERR);

   7838  5 000222   200104 630500                    EPPR0   CONTEXT_STREAM$,,AUTO
         5 000223   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000224   000000 701000 xent               TSX1    VDG$OFREE
         5 000225   000015 702000 5                  TSX2    FATAL_ERR

      366     7839    3                 CONTEXT_STREAM$ = ADDR(NIL);

   7839  5 000226   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 000227   200104 756100                    STQ     CONTEXT_STREAM$,,AUTO

      367     7840    3                 END;

      368     7841    2              END;

      369     7842                /* Build a message identifying the context file we found, if any */
      370     7843    1           CALL VDG$OALLOC (%CLS_ERR, VD_ERR$) ALTRET (FATAL_ERR);

   7843  5 000230   200004 630500                    EPPR0   VD_ERR$,,AUTO
         5 000231   200321 450500                    STP0    SINK+3,,AUTO
         5 000232   000004 236000 6                  LDQ     4
         5 000233   200320 756100                    STQ     SINK+2,,AUTO
         5 000234   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000235   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000236   000000 701000 xent               TSX1    VDG$OALLOC
         5 000237   000015 702000 5                  TSX2    FATAL_ERR

      371     7844    2           IF CONTEXT_STREAM$ ~= ADDR(NIL) THEN DO;

   7844  5 000240   200104 236100                    LDQ     CONTEXT_STREAM$,,AUTO
         5 000241   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000242   000260 600000 5                  TZE     s:7861

      372     7845    2              VD$ERR.ERR.CODE# = %E$INFO_READING;

   7845  5 000243   200004 470500                    LDP0    VD_ERR$,,AUTO
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:50   
         5 000244   000002 236100                    LDQ     2,,PR0
         5 000245   000005 376000 6                  ANQ     5
         5 000246   000130 276007                    ORQ     88,DL
         5 000247   000002 756100                    STQ     2,,PR0

      373     7846    2              VD$ERR.FLAGLEV# = %FLV_INFO;

   7846  5 000250   000001 220003                    LDX0    1,DU
         5 000251   200004 470500                    LDP0    VD_ERR$,,AUTO
         5 000252   000003 740100                    STX0    3,,PR0

      374     7847    2              VD$ERR.DCB# = CONTEXT$STREAM.DCB#;

   7847  5 000253   200104 470500                    LDP0    CONTEXT_STREAM$,,AUTO
         5 000254   000024 221100                    LDX1    20,,PR0
         5 000255   200004 471500                    LDP1    VD_ERR$,,AUTO
         5 000256   100004 741100                    STX1    4,,PR1

      375     7848                   /*       !!!!!!!!!  CAUTION  !!!!!!!!!!!
      376     7849                   *  We're stash the DCB # of the context file in the VD$ERR, but we
      377     7850                   *    don't actually report this E$INFO_READING message until after
      378     7851                   *    we (possibly) close the stream--and thereby free the DCB.
      379     7852                   *  This isn't real safe, but we take the chance, assuming that
      380     7853                   *    we won't be allocating any DCBs between the time we close
      381     7854                   *    the context stream and the time we report the E$INFO_READING
      382     7855                   *    message.  (This is only a problem if the context file is
      383     7856                   *    and encoded workspace file; only then do we close it before
      384     7857                   *    reporting E$INFO_READING.)
      385     7858                   */
      386     7859    2              END;

   7859  5 000257   000273 710000 5                  TRA     s:7870

      387     7860    2           ELSE DO;

      388     7861    2              VD$ERR.ERR = B$TCB.ALT$->B$ALT.ERR;

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:51   
   7861  5 000260   000000 470400 xsym               LDP0    B$TCB$
         5 000261   000000 471500                    LDP1    0,,PR0
         5 000262   100102 236100                    LDQ     66,,PR1
         5 000263   200004 473500                    LDP3    VD_ERR$,,AUTO
         5 000264   300002 756100                    STQ     2,,PR3

      389     7862    2              VD$ERR.FLAGLEV# = %FLV_WARN;

   7862  5 000265   000002 220003                    LDX0    2,DU
         5 000266   200004 471500                    LDP1    VD_ERR$,,AUTO
         5 000267   100003 740100                    STX0    3,,PR1

      390     7863    2              VD$ERR.DCB# = CONTEXT_DCB#;

   7863  5 000270   200003 221100                    LDX1    CONTEXT_DCB#,,AUTO
         5 000271   200004 471500                    LDP1    VD_ERR$,,AUTO
         5 000272   100004 741100                    STX1    4,,PR1

      391     7864    2              END;

      392     7865
      393     7866                /*
      394     7867                * Start out in $SCREEN=2 mode, so that $INITIALIZE can affect
      395     7868                * the building of the command window.
      396     7869                */
      397     7870    1           VD_OLD_$SCREEN = VD_$SCREEN.V#;

   7870  5 000273   000003 235000 xsym               LDA     VD_$SCREEN+3
         5 000274   000000 755000 xsym               STA     VD_OLD_$SCREEN

      398     7871    2           IF VD_OLD_$SCREEN>0 THEN DO;

   7871  5 000275   000303 604400 5                  TMOZ    s:7881

      399     7872    2              CALL VDI$CSET_COUNT (VD_LOC_$SCREEN, 2);

   7872  5 000276   000006 630400 6                  EPPR0   6
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:52   
         5 000277   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000300   000000 701000 xent               TSX1    VDI$CSET_COUNT
         5 000301   000000 011000                    NOP     0

      400     7873    2              VD_$COMMAND.V# = 0; /* Go to editing window automatically */

   7873  5 000302   000003 450000 xsym               STZ     VD_$COMMAND+3

      401     7874    2              END;

      402     7875
      403     7876                /*
      404     7877                *   If we found an encoded workspace file in our search for a context
      405     7878                *       file, initialize the internal workspace from it.
      406     7879                */
      407     7880
      408     7881    1           IF CONTEXT_STREAM$ ~= ADDR(NIL) THEN

   7881  5 000303   200104 236100                    LDQ     CONTEXT_STREAM$,,AUTO
         5 000304   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000305   000355 600000 5                  TZE     s:7906

      409     7882    2              IF CONTEXT$STREAM.FILE_TYPE = %CHR_ENCODED_TYPE THEN DO;

   7882  5 000306   200104 470500                    LDP0    CONTEXT_STREAM$,,AUTO
         5 000307   000024 720100                    LXL0    20,,PR0
         5 000310   000244 100000 3                  CMPX0   CONST_FPT_UNFID+22
         5 000311   000355 601000 5                  TNZ     s:7906

      410     7883    2                 LOAD_FLAGS = %CLEAR;

   7883  5 000312   200105 450100                    STZ     LOAD_FLAGS,,AUTO

      411     7884    2                 LOAD_FLAGS.F (%PDFF_EQUALS) = %TRUE;

   7884  5 000313   200000 236003                    LDQ     65536,DU
         5 000314   200105 256100                    ORSQ    LOAD_FLAGS,,AUTO
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:53   

      412     7885                      /* We can load keyins only if we're timesharing */
      413     7886    2                 IF B$JIT.MODE = %M_INT# THEN

   7886  5 000315   000000 471400 xsym               LDP1    B$JIT$
         5 000316   100000 236100                    LDQ     0,,PR1
         5 000317   740000 376003                    ANQ     -16384,DU
         5 000320   140000 116003                    CMPQ    49152,DU
         5 000321   000324 601000 5                  TNZ     s:7888

      414     7887    2                    LOAD_FLAGS.F (%PDFF_KEYINS) = %TRUE;

   7887  5 000322   100000 236003                    LDQ     32768,DU
         5 000323   200105 256100                    ORSQ    LOAD_FLAGS,,AUTO

      415     7888    2                 LOAD_FLAGS.F (%PDFF_LOCATIONS) = %TRUE;

   7888  5 000324   040000 236003                    LDQ     16384,DU
         5 000325   200105 256100                    ORSQ    LOAD_FLAGS,,AUTO

      416     7889    2                 LOAD_FLAGS.F (%PDFF_SYNONYMS) = %TRUE;

   7889  5 000326   020000 236003                    LDQ     8192,DU
         5 000327   200105 256100                    ORSQ    LOAD_FLAGS,,AUTO

      417     7890        /*N*          LOAD_FLAGS.F (%PDFF_STRUCTURES) = %TRUE; VD_6E points at 'em */
      418     7891    2                 LOAD_FLAGS.F (%PDFF_WINDOWS) = %TRUE;

   7891  5 000330   004000 236003                    LDQ     2048,DU
         5 000331   200105 256100                    ORSQ    LOAD_FLAGS,,AUTO

      419     7892
      420     7893    2                 CALL VDW$LOAD (LOAD_FLAGS)

   7893  5 000332   200105 633500                    EPPR3   LOAD_FLAGS,,AUTO
         5 000333   200320 453500                    STP3    SINK+2,,AUTO
         5 000334   200320 630500                    EPPR0   SINK+2,,AUTO
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:54   
         5 000335   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000336   000000 701000 xent               TSX1    VDW$LOAD
         5 000337   000351 702000 5                  TSX2    s:7902

      421     7894    3                 WHENRETURN DO;

      422     7895        /* If the workspace file failed, keep it on the stack, and let VDI$PDRIVER
      423     7896           clean up.  That way, any additional commands (like an implicit editing
      424     7897           command) will get ignored. */
      425     7898    3                    CALL VDI$PREAD_FILE_CLOSE;

   7898  5 000340   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000341   000000 701000 xent               TSX1    VDI$PREAD_FILE_CLOSE
         5 000342   000000 011000                    NOP     0

      426     7899    3                    CALL VDG$OFREE (CONTEXT$STREAM);

   7899  5 000343   200104 630500                    EPPR0   CONTEXT_STREAM$,,AUTO
         5 000344   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000345   000000 701000 xent               TSX1    VDG$OFREE
         5 000346   000000 011000                    NOP     0

      427     7900    3                    CONTEXT_STREAM$ = ADDR(NIL);

   7900  5 000347   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 000350   200104 756100                    STQ     CONTEXT_STREAM$,,AUTO

      428     7901    3                    END;

      429     7902    2                 IF VD_$INITIALIZE.LENGTH#>0 THEN

   7902  5 000351   000002 220000 xsym               LDX0    VD_$INITIALIZE+2
         5 000352   000355 604400 5                  TMOZ    s:7906

      430     7903    2                    CALL PUSH_INITIALIZE_CMDS;

   7903  5 000353   002111 701000 5                  TSX1    PUSH_INITIALIZE_CMDS
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:55   
         5 000354   000000 011000                    NOP     0

      431     7904    2                 END;

      432     7905
      433     7906    1           IF VD_COMMAND_WINDOW$ = ADDR(NIL) THEN

   7906  5 000355   000000 236000 xsym               LDQ     VD_COMMAND_WINDOW$
         5 000356   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000357   000444 601000 5                  TNZ     s:7941

      434     7907    2   CREATE_COMMAND_WINDOW: DO;

   7907  5 000360                       CREATE_COMM* null
      435     7908                   /*
      436     7909                   *  We don't have a command window record in the Windows file yet:
      437     7910                   *    create one.  (We could have gotten a command window from a
      438     7911                   *    workspace-type context file.)
      439     7912                   *  If we're coming up screen-editing, the command window in the FEP
      440     7913                   *    will also be created.
      441     7914                   */
      442     7915
      443     7916    2              CALL VDG$OALLOC (%CLS_WINDOW_SPEC, WINDOW_SPEC$)

   7916  5 000360   200117 630500                    EPPR0   WINDOW_SPEC$,,AUTO
         5 000361   200321 450500                    STP0    SINK+3,,AUTO
         5 000362   000011 236000 6                  LDQ     9
         5 000363   200320 756100                    STQ     SINK+2,,AUTO
         5 000364   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000365   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000366   000000 701000 xent               TSX1    VDG$OALLOC
         5 000367   000371 702000 5                  TSX2    s:7918
         5 000370   000374 710000 5                  TRA     s:7920

      444     7917    3              WHENALTRETURN DO;

      445     7918    3                 CALL VDG$EREPORT_ERROR;      /* We won't return from this */
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:56   

   7918  5 000371   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000372   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         5 000373   000000 011000                    NOP     0

      446     7919    3                 END;

      447     7920    2              WINDOW$SPEC.COMMAND = %TRUE;

   7920  5 000374   200117 470500                    LDP0    WINDOW_SPEC$,,AUTO
         5 000375   000400 236003                    LDQ     256,DU
         5 000376   000002 256100                    ORSQ    2,,PR0

      448     7921    2              WINDOW$SPEC.COORDS.LINE# = VD_TOP_LINE;

   7921  5 000377   200117 470500                    LDP0    WINDOW_SPEC$,,AUTO
         5 000400   000000 235000 xsym               LDA     VD_TOP_LINE
         5 000401   000003 755100                    STA     3,,PR0

      449     7922    2              WINDOW$SPEC.COORDS.HEIGHT# = VD_EDITING_HEIGHT;

   7922  5 000402   200117 470500                    LDP0    WINDOW_SPEC$,,AUTO
         5 000403   000000 235000 xsym               LDA     VD_EDITING_HEIGHT
         5 000404   000005 755100                    STA     5,,PR0

      450     7923    2              WSPEC = %CLEAR;

   7923  5 000405   000000 235003                    LDA     0,DU
         5 000406   000000 236003                    LDQ     0,DU
         5 000407   200120 757100                    STAQ    WSPEC,,AUTO

      451     7924    2              WSPEC.TYPE# = %SPT_WINDOW_SPEC;

   7924  5 000410   000006 220003                    LDX0    6,DU
         5 000411   200120 740100                    STX0    WSPEC,,AUTO

      452     7925    2              WSPEC.REP# = %REP_REMOTE;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:57   

   7925  5 000412   000002 221003                    LDX1    2,DU
         5 000413   200120 441100                    SXL1    WSPEC,,AUTO

      453     7926    2              WSPEC.V$ = WINDOW_SPEC$;

   7926  5 000414   200117 236100                    LDQ     WINDOW_SPEC$,,AUTO
         5 000415   200121 756100                    STQ     WSPEC+1,,AUTO

      454     7927    2              CALL VDA$LWRITE (WINDOWS$STREAM, COMMAND_WINDOW_LOC, WSPEC)

   7927  5 000416   200120 630500                    EPPR0   WSPEC,,AUTO
         5 000417   200322 450500                    STP0    SINK+4,,AUTO
         5 000420   000012 236000 6                  LDQ     10
         5 000421   000006 235000 xsym               LDA     VD_6E+6
         5 000422   200320 757100                    STAQ    SINK+2,,AUTO
         5 000423   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000424   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000425   000000 701000 xent               TSX1    VDA$LWRITE
         5 000426   000015 702000 5                  TSX2    FATAL_ERR

      455     7928    2                ALTRET (FATAL_ERR);
      456     7929    2              CALL VDA$PFLUSH (WINDOWS$STREAM.PORT$->VD$PORT, %TO_PRESENTER)

   7929  5 000427   000006 470400 xsym               LDP0    VD_6E+6
         5 000430   000001 471500                    LDP1    1,,PR0
         5 000431   000013 236000 6                  LDQ     11
         5 000432   200321 756100                    STQ     SINK+3,,AUTO
         5 000433   200320 451500                    STP1    SINK+2,,AUTO
         5 000434   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000435   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000436   000000 701000 xent               TSX1    VDA$PFLUSH
         5 000437   000015 702000 5                  TSX2    FATAL_ERR

      457     7930    2                ALTRET (FATAL_ERR);
      458     7931
      459     7932    2              VD_COMMAND_WINDOW$ = WINDOWS$STREAM.PORT$->
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:58   

   7932  5 000440   000006 470400 xsym               LDP0    VD_6E+6
         5 000441   000001 471500                    LDP1    1,,PR0
         5 000442   100040 236100                    LDQ     32,,PR1
         5 000443   000000 756000 xsym               STQ     VD_COMMAND_WINDOW$

      460     7933    2                VD$PORT.LEVEL.INTERNAL$ (%LVL_LOWER);
      461     7934    2              END CREATE_COMMAND_WINDOW;

      462     7935
      463     7936
      464     7937                /*
      465     7938                *  Now, write any error messages we've accumulated to the command
      466     7939                *    window.
      467     7940                */
      468     7941    2           IF VD_6E.ERR_TAIL$ ~= VD_6E.ERR_HEAD$ THEN DO;

   7941  5 000444   000032 236000 xsym               LDQ     VD_6E+26
         5 000445   000031 116000 xsym               CMPQ    VD_6E+25
         5 000446   000452 600000 5                  TZE     s:7952

      469     7942    2              CALL VDG$EREPORT_ERROR;  /* We WILL come back from this!! */

   7942  5 000447   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000450   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         5 000451   000000 011000                    NOP     0

      470     7943    2              END;

      471     7944
      472     7945
      473     7946                /*
      474     7947                *  If the top command-stream (other than the context file) is a
      475     7948                *    file or a DCB, then open it now.
      476     7949                *  (If the open fails, pop the command-stream and try opening
      477     7950                *    the next; loop til we find one that opens!)
      478     7951                */
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:59   
      479     7952    2           IF CONTEXT_STREAM$ = ADDR(NIL) THEN DO;

   7952  5 000452   200104 236100                    LDQ     CONTEXT_STREAM$,,AUTO
         5 000453   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000454   000503 601000 5                  TNZ     s:7965

      480     7953    3              DO UNTIL SUCCESSFULLY_OPENED;

      481     7954    3                 SUCCESSFULLY_OPENED = %TRUE;

   7954  5 000455   400000 236003                    LDQ     -131072,DU
         5 000456   200116 756100                    STQ     SUCCESSFULLY_OPENED,,AUTO

      482     7955    3                 IF TOP$CMD_STREAM.TYPE# = %CS_FILE

   7955  5 000457   000026 470400 xsym               LDP0    VD_6E+22
         5 000460   000002 220100                    LDX0    2,,PR0
         5 000461   000003 100003                    CMPX0   3,DU
         5 000462   000465 600000 5                  TZE     s:7957
         5 000463   000004 100003                    CMPX0   4,DU
         5 000464   000501 601000 5                  TNZ     s:7964

      483     7956    4                   OR TOP$CMD_STREAM.TYPE# = %CS_DCB THEN DO;

      484     7957    4                    CALL VDI$PREAD_FILE_OPEN

   7957  5 000465   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000466   000000 701000 xent               TSX1    VDI$PREAD_FILE_OPEN
         5 000467   000471 702000 5                  TSX2    s:7959
         5 000470   000501 710000 5                  TRA     s:7964

      485     7958    5                    WHENALTRETURN DO;

      486     7959    5                       CALL VDG$OFREE (TOP$CMD_STREAM);

   7959  5 000471   000026 630400 xsym               EPPR0   VD_6E+22
         5 000472   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:60   
         5 000473   000000 701000 xent               TSX1    VDG$OFREE
         5 000474   000000 011000                    NOP     0

      487     7960    5                       CALL VDG$EREPORT_ERROR;

   7960  5 000475   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000476   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         5 000477   000000 011000                    NOP     0

      488     7961    5                       SUCCESSFULLY_OPENED = %FALSE;

   7961  5 000500   200116 450100                    STZ     SUCCESSFULLY_OPENED,,AUTO

      489     7962    5                       END;

      490     7963    4                    END;

      491     7964    3                 END;

   7964  5 000501   200116 234100                    SZN     SUCCESSFULLY_OPENED,,AUTO
         5 000502   000455 605000 5                  TPL     s:7954

      492     7965    2              END;

   7965  5 000503   002227 710000 5                  TRA     s:10059

      493     7966
      494     7967
      495     7968        %BOX (TITLE=PUSH_INVOK_CMD, PAGE=YES);
              7976    2
              7980    2   /***************************************************************************
              7982    2    *                                                                         *
              7986    2            *                               PUSH_INVOK_CMD                           *
              7988    2            *                                                                        *
              7990    2          ***************************************************************************/

      496     7994
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:61   
      497     7995        /*I* NAME: PUSH_INVOK_CMD
      498     7996            PARAMETERS:
      499     7997                CMD_STREAM$ - An uninitialized PTR.
      500     7998            INPUT:
      501     7999            OUTPUT:
      502     8000                CMD_STREAM$ will contain either ADDR(NIL); or a pointer to
      503     8001                    CMD$STREAM, whose .RECORD$ points to the invocation command.
      504     8002                If a VD$CMD_STREAM is pushed on the command stream stack,
      505     8003                    then VD_6E.CMD_STREAM$ will be modified.
      506     8004            DESCRIPTION:
      507     8005                If B$JIT.CCBUF holds the invocation command line, copy it to a
      508     8006                    VD$BUFFER.
      509     8007                If the invocation command line resides in an IBEX
      510     8008                    continuation file, just point CMD$STREAM at the file and let
      511     8009                    XUG process the continuation again.
      512     8010                Push a VD$CMD_STREAM pointing to this buffer.  Set the
      513     8011                    CMD$STREAM.POSITION# to point to the first character.
      514     8012        */
      515     8013
      516     8014    1   PUSH_INVOK_CMD: PROC (CMD_STREAM$) ALTRET;

   8014  5 000504   200124 741300       PUSH_INVOK_* STX1  ! ACTUAL_ERR$+2,,AUTO

      517     8015
      518     8016    2   DCL CMD_STREAM$ PTR;
      519     8017
      520     8018
      521     8019    2   DCL INVOK_BUFFER$ PTR;
      522     8020    2   DCL EOF_FLAG BIT(1) ALIGNED;
      523     8021
      524     8022
      525     8023        %VD$CMD_STREAM (NAME=CMD$STREAM, STCLASS="BASED(CMD_STREAM$)");
      526     8062        %VD$BUFFER (NAME=INVOK$BUFFER, STCLASS="BASED(INVOK_BUFFER$)");
      527     8120
      528     8121
      529     8122
      530     8123    2           CALL VDG$OALLOC (%CLS_CMD_STREAM, CMD_STREAM$)
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:62   

   8123  5 000505   200125 236100                    LDQ     @CMD_STREAM$,,AUTO
         5 000506   000001 235000 6                  LDA     1
         5 000507   200320 757100                    STAQ    SINK+2,,AUTO
         5 000510   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000511   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000512   000000 701000 xent               TSX1    VDG$OALLOC
         5 000513   000574 702000 5                  TSX2    OALLOC_FAILED

      531     8124    2             ALTRET (OALLOC_FAILED);
      532     8125
      533     8126    3           IF NOT B$JIT.PRFLAGS.CONTINUED THEN DO;

   8126  5 000514   000000 470400 xsym               LDP0    B$JIT$
         5 000515   000030 430100                    FSZN    24,,PR0
         5 000516   000557 604000 5                  TMI     s:8137

      534     8127    3              CALL VDG$OALLOC (%CLS_BUFFER, INVOK_BUFFER$,

   8127  5 000517   000032 236100                    LDQ     26,,PR0
         5 000520   000022 732000                    QRS     18
         5 000521   000015 036007                    ADLQ    13,DL
         5 000522   000004 506007                    DIV     4,DL
         5 000523   200320 756100                    STQ     SINK+2,,AUTO
         5 000524   200320 631500                    EPPR1   SINK+2,,AUTO
         5 000525   200323 451500                    STP1    SINK+5,,AUTO
         5 000526   200126 633500                    EPPR3   INVOK_BUFFER$,,AUTO
         5 000527   200322 453500                    STP3    SINK+4,,AUTO
         5 000530   000014 236000 6                  LDQ     12
         5 000531   200321 756100                    STQ     SINK+3,,AUTO
         5 000532   200321 630500                    EPPR0   SINK+3,,AUTO
         5 000533   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000534   000000 701000 xent               TSX1    VDG$OALLOC
         5 000535   000574 702000 5                  TSX2    OALLOC_FAILED

      535     8128    3                (LENGTHC(VD$BUFFER_HEADER) + B$JIT.CCARS + %NB_PER_WORD - 1) /
      536     8129    3                %NB_PER_WORD)
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:63   
      537     8130    3                ALTRET (OALLOC_FAILED);
      538     8131    3              INVOK$BUFFER.LENGTH# = B$JIT.CCARS;

   8131  5 000536   000000 470400 xsym               LDP0    B$JIT$
         5 000537   000032 220100                    LDX0    26,,PR0
         5 000540   200126 471500                    LDP1    INVOK_BUFFER$,,AUTO
         5 000541   100002 740100                    STX0    2,,PR1

      539     8132    3              CMD$STREAM.RECORD$ = INVOK_BUFFER$;

   8132  5 000542   200125 471500                    LDP1    @CMD_STREAM$,,AUTO
         5 000543   100000 473500                    LDP3    0,,PR1
         5 000544   200126 236100                    LDQ     INVOK_BUFFER$,,AUTO
         5 000545   300025 756100                    STQ     21,,PR3

      540     8133    3              CMD$STREAM.TYPE# = %CS_BUFFER;

   8133  5 000546   100000 473500                    LDP3    0,,PR1
         5 000547   000001 220003                    LDX0    1,DU
         5 000550   300002 740100                    STX0    2,,PR3

      541     8134    3              INVOK$BUFFER.BYTES = B$JIT.CCBUF;

   8134  5 000551   200126 473500                    LDP3    INVOK_BUFFER$,,AUTO
         5 000552   300002 221100                    LDX1    2,,PR3
         5 000553   040140 100500                    MLR     fill='040'O
         5 000554   000033 000400                    ADSC9   27,,PR0                  cn=0,n=256
         5 000555   300002 400011                    ADSC9   2,,PR3                   cn=2,n=*X1

      542     8135    3              END;

   8135  5 000556   000572 710000 5                  TRA     s:8142

      543     8136    3           ELSE DO;

      544     8137    3              CMD$STREAM.TYPE# = %CS_FILE;

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:64   
   8137  5 000557   200125 471500                    LDP1    @CMD_STREAM$,,AUTO
         5 000560   100000 473500                    LDP3    0,,PR1
         5 000561   000003 220003                    LDX0    3,DU
         5 000562   300002 740100                    STX0    2,,PR3

      545     8138    3              CMD$STREAM.FILE.LENGTH# = %LENGTHC(%CHR_CONT_CMD_NAME);

   8138  5 000563   100000 473500                    LDP3    0,,PR1
         5 000564   026000 236007                    LDQ     11264,DL
         5 000565   300002 552110                    STBQ    2,'10'O,PR3

      546     8139    3              CMD$STREAM.FILE.BYTES = %CHR_CONT_CMD_NAME;

   8139  5 000566   100000 473500                    LDP3    0,,PR1
         5 000567   040100 100400                    MLR     fill='040'O
         5 000570   000245 000026 3                  ADSC9   CONST_FPT_UNFID+23       cn=0,n=22
         5 000571   300002 600104                    ADSC9   2,,PR3                   cn=3,n=68

      547     8140    3              END;

      548     8141
      549     8142    2           RETURN;

   8142  5 000572   200124 221300                    LDX1  ! ACTUAL_ERR$+2,,AUTO
         5 000573   000001 702211                    TSX2  ! 1,X1

   8132  5 000574                       OALLOC_FAIL* null
      550     8143
      551     8144
      552     8145    2   OALLOC_FAILED: ;
      553     8146    2           CMD_STREAM$ = ADDR(NIL);

   8146  5 000574   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 000575   200125 470500                    LDP0    @CMD_STREAM$,,AUTO
         5 000576   000000 756100                    STQ     0,,PR0

      554     8147    2           ALTRETURN;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:65   

   8147  5 000577   200124 221300                    LDX1  ! ACTUAL_ERR$+2,,AUTO
         5 000600   000000 702211                    TSX2  ! 0,X1

      555     8148
      556     8149    2   END PUSH_INVOK_CMD;
      557     8150
      558     8151        %BOX (TITLE=PUSH_EDIT_CMD, PAGE=YES);
              8159    2
              8163    2   /***************************************************************************
              8165    2    *                                                                         *
              8169    2            *                               PUSH_EDIT_CMD                            *
              8171    2            *                                                                        *
              8173    2          ***************************************************************************/

      559     8177
      560     8178        /*I* NAME: PUSH_EDIT_CMD
      561     8179            PARAMETERS:
      562     8180                DCB_TO_EDIT - A WORD containing the DCB # to edit.
      563     8181                CMD_STREAM$ - An uninitialized PTR.
      564     8182            INPUT:
      565     8183            OUTPUT:
      566     8184                CMD_STREAM$ will a pointer to CMD$STREAM, whose .RECORD$ points to an
      567     8185                    InTree for an EDIT command to edit the specified DCB.
      568     8186                If a VD$CMD_STREAM is pushed on the command stream stack,
      569     8187                    then VD_6E.CMD_STREAM$ will be modified.
      570     8188            DESCRIPTION:
      571     8189                Push a VD$CMD_STREAM, and build an InTree for an EDIT command.
      572     8190                The InTree we build is:
      573     8191
      574     8192                    IT_COMMAND w/.CODE = %T_EDIT_CMD
      575     8193                     and .PARAM$(0)->----
      576     8194                                         |
      577     8195                                    IT_BLOCK_EXPR w/.DOMAINN specifying the DCB
      578     8196                                         |
      579     8197                                    IT_SELECT w/.RPT_COUNT of 1
      580     8198                                         |
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:66   
      581     8199                                    IT_ADJUST
      582     8200                                         |
      583     8201                                    IT_OPERAND w/.CODE = %OPAND_FILE
      584     8202                                     and .OPTIONS.POINT = %PNT_AO
      585     8203
      586     8204                We don't really need the file key in the IT_OPERAND we build, because
      587     8205                the file info is in IT_BLOCK_EXPR.DOMAINN.
      588     8206        */
      589     8207
      590     8208    1   PUSH_EDIT_CMD: PROC (DCB_TO_EDIT, CMD_STREAM$) ALTRET;

   8208  5 000601   200124 741300       PUSH_EDIT_C* STX1  ! ACTUAL_ERR$+2,,AUTO

      591     8209
      592     8210    2   DCL DCB_TO_EDIT SBIN;
      593     8211    2   DCL CMD_STREAM$ PTR;
      594     8212
      595     8213
      596     8214
      597     8215    2   DCL IT_COMMAND$ PTR;
      598     8216    2   DCL IT_BLOCK_EXPR$ PTR;
      599     8217    2   DCL IT_SELECT$ PTR;
      600     8218    2   DCL IT_ADJUST$ PTR;
      601     8219    2   DCL IT_OPERAND$ PTR;
      602     8220    2   DCL EDIT_FILE_KEY$ PTR;
      603     8221
      604     8222
      605     8223        %VD$CMD_STREAM (NAME=CMD$STREAM, STCLASS="BASED(CMD_STREAM$)");
      606     8262        %VD$IT_COMMAND (NAME=IT$COMMAND, STCLASS="BASED(IT_COMMAND$)");
      607     8300        %VD$IT_BLOCK_EXPR (NAME=IT$BLOCK_EXPR, STCLASS="BASED(IT_BLOCK_EXPR$)");
      608     8450        %VD$IT_SELECT (NAME=IT$SELECT, STCLASS="BASED(IT_SELECT$)");
      609     8487        %VD$IT_ADJUST (NAME=IT$ADJUST, STCLASS="BASED(IT_ADJUST$)");
      610     8524        %VD$IT_OPERAND (NAME=IT$OPERAND, STCLASS="BASED(IT_OPERAND$)");
      611     8590        %VD$FILE_KEY (NAME=EDIT$FILE_KEY, STCLASS="BASED(EDIT_FILE_KEY$)");
      612     8639
      613     8640
      614     8641
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:67   
      615     8642    2           CALL VDG$OALLOC (%CLS_CMD_STREAM, CMD_STREAM$)

   8642  5 000602   200126 236100                    LDQ     @CMD_STREAM$,,AUTO
         5 000603   000001 235000 6                  LDA     1
         5 000604   200320 757100                    STAQ    SINK+2,,AUTO
         5 000605   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000606   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000607   000000 701000 xent               TSX1    VDG$OALLOC
         5 000610   001003 702000 5                  TSX2    OALLOC_FAILED

      616     8643    2             ALTRET (OALLOC_FAILED);
      617     8644
      618     8645    2           CMD$STREAM.TYPE# = %CS_BUFFER;

   8645  5 000611   200126 470500                    LDP0    @CMD_STREAM$,,AUTO
         5 000612   000000 471500                    LDP1    0,,PR0
         5 000613   000001 220003                    LDX0    1,DU
         5 000614   100002 740100                    STX0    2,,PR1

      619     8646    2           CALL VDG$OALLOC (%CLS_IT_COMMAND, IT_COMMAND$)

   8646  5 000615   200127 631500                    EPPR1   IT_COMMAND$,,AUTO
         5 000616   200321 451500                    STP1    SINK+3,,AUTO
         5 000617   000016 236000 6                  LDQ     14
         5 000620   200320 756100                    STQ     SINK+2,,AUTO
         5 000621   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000622   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000623   000000 701000 xent               TSX1    VDG$OALLOC
         5 000624   001003 702000 5                  TSX2    OALLOC_FAILED

      620     8647    2             ALTRET (OALLOC_FAILED);
      621     8648    2           CMD$STREAM.INTREE$ = IT_COMMAND$;

   8648  5 000625   200126 470500                    LDP0    @CMD_STREAM$,,AUTO
         5 000626   000000 471500                    LDP1    0,,PR0
         5 000627   200127 236100                    LDQ     IT_COMMAND$,,AUTO
         5 000630   100026 756100                    STQ     22,,PR1
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:68   

      622     8649    2           IT$COMMAND.CODE# = %T_EDIT_CMD;

   8649  5 000631   001752 220003                    LDX0    1002,DU
         5 000632   200127 471500                    LDP1    IT_COMMAND$,,AUTO
         5 000633   100003 740100                    STX0    3,,PR1

      623     8650
      624     8651    2           CALL VDG$OALLOC (%CLS_IT_BLOCK_EXPR, IT_BLOCK_EXPR$)

   8651  5 000634   200130 631500                    EPPR1   IT_BLOCK_EXPR$,,AUTO
         5 000635   200321 451500                    STP1    SINK+3,,AUTO
         5 000636   000020 236000 6                  LDQ     16
         5 000637   200320 756100                    STQ     SINK+2,,AUTO
         5 000640   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000641   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000642   000000 701000 xent               TSX1    VDG$OALLOC
         5 000643   001003 702000 5                  TSX2    OALLOC_FAILED

      625     8652    2             ALTRET (OALLOC_FAILED);
      626     8653    2           IT$COMMAND.PARAM$ (0) = IT_BLOCK_EXPR$;

   8653  5 000644   200130 236100                    LDQ     IT_BLOCK_EXPR$,,AUTO
         5 000645   200127 470500                    LDP0    IT_COMMAND$,,AUTO
         5 000646   000006 756100                    STQ     6,,PR0

      627     8654                /*N*
      628     8655                *N*  Need some way to determine--now or later?--if file's keys are
      629     8656                *N*     numeric or string, 'cause BOF is represented differently in
      630     8657                *N*     the two cases.
      631     8658                *N*  For now, assume numeric keys.
      632     8659                *N*/
      633     8660    2           IT$BLOCK_EXPR.DOMAINN.RANGE.START.KEY (%LVL_LOWER-1) =

   8660  5 000647   200130 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         5 000650   000100 100400                    MLR     fill='000'O
         5 000651   000000 000010 xsym               ADSC9   VD_KEY_NUMERIC_BOF       cn=0,n=8
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:69   
         5 000652   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8

      634     8661    2             VD_KEY_NUMERIC_BOF;
      635     8662    2           IT$BLOCK_EXPR.DOMAINN.RANGE.ENDD.EOF = %TRUE;

   8662  5 000653   200130 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         5 000654   400000 236007                    LDQ     -131072,DL
         5 000655   000027 256100                    ORSQ    23,,PR0

      636     8663    2           IT$BLOCK_EXPR.OPTIONS.STRUCTURE$ = VD_6E.STRUCTURE_EXTERNAL$;

   8663  5 000656   000010 236000 xsym               LDQ     VD_6E+8
         5 000657   200130 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         5 000660   000030 756100                    STQ     24,,PR0

      637     8664    2           IT$BLOCK_EXPR.OPTIONS.LEVEL# = %LVL_EXT_REC;

   8664  5 000661   000001 220003                    LDX0    1,DU
         5 000662   200130 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         5 000663   000031 740100                    STX0    25,,PR0

      638     8665    2           IT$BLOCK_EXPR.OPTIONS.COMPONENT# = %CO_DATA;

   8665  5 000664   000003 221003                    LDX1    3,DU
         5 000665   200130 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         5 000666   000031 441100                    SXL1    25,,PR0

      639     8666    2           IT$BLOCK_EXPR.OPTIONS.PROTECT# = %DONT_PROTECT;

   8666  5 000667   000002 222003                    LDX2    2,DU
         5 000670   200130 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         5 000671   000032 742100                    STX2    26,,PR0

      640     8667    2           IT$BLOCK_EXPR.OPTIONS.EXIST# = %EX_OLD;

   8667  5 000672   200130 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         5 000673   000032 442100                    SXL2    26,,PR0
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:70   

      641     8668    2           IT$BLOCK_EXPR.DOMAINN.FILE_KEY.TYPE# = %KT_STRING;

   8668  5 000674   200130 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         5 000675   000004 742100                    STX2    4,,PR0

      642     8669    2           IT$BLOCK_EXPR.DOMAINN.FILE_KEY.REP# = %REP_REMOTE;

   8669  5 000676   200130 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         5 000677   000004 442100                    SXL2    4,,PR0

      643     8670
      644     8671    2           CALL VDG$OALLOC (%CLS_FILE_KEY, EDIT_FILE_KEY$)

   8671  5 000700   200134 630500                    EPPR0   EDIT_FILE_KEY$,,AUTO
         5 000701   200321 450500                    STP0    SINK+3,,AUTO
         5 000702   000022 236000 6                  LDQ     18
         5 000703   200320 756100                    STQ     SINK+2,,AUTO
         5 000704   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000705   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000706   000000 701000 xent               TSX1    VDG$OALLOC
         5 000707   001003 702000 5                  TSX2    OALLOC_FAILED

      645     8672    2             ALTRET (OALLOC_FAILED);
      646     8673    2           IT$BLOCK_EXPR.DOMAINN.FILE_KEY.V$ = EDIT_FILE_KEY$;

   8673  5 000710   200134 236100                    LDQ     EDIT_FILE_KEY$,,AUTO
         5 000711   200130 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         5 000712   000005 756100                    STQ     5,,PR0

      647     8674    2           EDIT$FILE_KEY.DCB# = DCB_TO_EDIT;

   8674  5 000713   200125 470500                    LDP0    @DCB_TO_EDIT,,AUTO
         5 000714   000000 720100                    LXL0    0,,PR0
         5 000715   200134 471500                    LDP1    EDIT_FILE_KEY$,,AUTO
         5 000716   100021 740100                    STX0    17,,PR1

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:71   
      648     8675
      649     8676    2           CALL VDG$OALLOC (%CLS_IT_SELECT, IT_SELECT$)

   8676  5 000717   200131 631500                    EPPR1   IT_SELECT$,,AUTO
         5 000720   200321 451500                    STP1    SINK+3,,AUTO
         5 000721   000024 236000 6                  LDQ     20
         5 000722   200320 756100                    STQ     SINK+2,,AUTO
         5 000723   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000724   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000725   000000 701000 xent               TSX1    VDG$OALLOC
         5 000726   001003 702000 5                  TSX2    OALLOC_FAILED

      650     8677    2             ALTRET (OALLOC_FAILED);
      651     8678    2           IT$BLOCK_EXPR.SELECTS$ = IT_SELECT$;

   8678  5 000727   200131 236100                    LDQ     IT_SELECT$,,AUTO
         5 000730   200130 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         5 000731   000035 756100                    STQ     29,,PR0

      652     8679    2           IT$BLOCK_EXPR.SELECTS_TAIL$ = IT_SELECT$;

   8679  5 000732   200131 236100                    LDQ     IT_SELECT$,,AUTO
         5 000733   200130 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         5 000734   000036 756100                    STQ     30,,PR0

      653     8680    2           IT$SELECT.RPT_COUNT# = 1;

   8680  5 000735   000001 220003                    LDX0    1,DU
         5 000736   200131 470500                    LDP0    IT_SELECT$,,AUTO
         5 000737   000003 440100                    SXL0    3,,PR0

      654     8681
      655     8682    2           CALL VDG$OALLOC (%CLS_IT_ADJUST, IT_ADJUST$)

   8682  5 000740   200132 630500                    EPPR0   IT_ADJUST$,,AUTO
         5 000741   200321 450500                    STP0    SINK+3,,AUTO
         5 000742   000026 236000 6                  LDQ     22
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:72   
         5 000743   200320 756100                    STQ     SINK+2,,AUTO
         5 000744   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000745   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000746   000000 701000 xent               TSX1    VDG$OALLOC
         5 000747   001003 702000 5                  TSX2    OALLOC_FAILED

      656     8683    2             ALTRET (OALLOC_FAILED);
      657     8684    2           IT$SELECT.ADJUSTS$ = IT_ADJUST$;

   8684  5 000750   200132 236100                    LDQ     IT_ADJUST$,,AUTO
         5 000751   200131 470500                    LDP0    IT_SELECT$,,AUTO
         5 000752   000004 756100                    STQ     4,,PR0

      658     8685    2           IT$SELECT.ADJUSTS_TAIL$ = IT_ADJUST$;

   8685  5 000753   200132 236100                    LDQ     IT_ADJUST$,,AUTO
         5 000754   200131 470500                    LDP0    IT_SELECT$,,AUTO
         5 000755   000005 756100                    STQ     5,,PR0

      659     8686
      660     8687    2           CALL VDG$OALLOC (%CLS_IT_OPERAND, IT_OPERAND$)

   8687  5 000756   200133 630500                    EPPR0   IT_OPERAND$,,AUTO
         5 000757   200321 450500                    STP0    SINK+3,,AUTO
         5 000760   000030 236000 6                  LDQ     24
         5 000761   200320 756100                    STQ     SINK+2,,AUTO
         5 000762   200320 630500                    EPPR0   SINK+2,,AUTO
         5 000763   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000764   000000 701000 xent               TSX1    VDG$OALLOC
         5 000765   001003 702000 5                  TSX2    OALLOC_FAILED

      661     8688    2             ALTRET (OALLOC_FAILED);
      662     8689    2           IT$ADJUST.MOVEMENTS$ = IT_OPERAND$;

   8689  5 000766   200133 236100                    LDQ     IT_OPERAND$,,AUTO
         5 000767   200132 470500                    LDP0    IT_ADJUST$,,AUTO
         5 000770   000004 756100                    STQ     4,,PR0
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:73   

      663     8690    2           IT$ADJUST.MOVEMENTS_TAIL$ = IT_OPERAND$;

   8690  5 000771   200133 236100                    LDQ     IT_OPERAND$,,AUTO
         5 000772   200132 470500                    LDP0    IT_ADJUST$,,AUTO
         5 000773   000005 756100                    STQ     5,,PR0

      664     8691    2           IT$OPERAND.CODE# = %OPAND_FILE;

   8691  5 000774   000001 220003                    LDX0    1,DU
         5 000775   200133 470500                    LDP0    IT_OPERAND$,,AUTO
         5 000776   000003 740100                    STX0    3,,PR0

      665     8692    2           IT$OPERAND.OPTIONS.POINT# = %PNT_AO;

   8692  5 000777   200133 470500                    LDP0    IT_OPERAND$,,AUTO
         5 001000   000005 740100                    STX0    5,,PR0

      666     8693
      667     8694    2           RETURN;

   8694  5 001001   200124 221300                    LDX1  ! ACTUAL_ERR$+2,,AUTO
         5 001002   000001 702211                    TSX2  ! 1,X1

      668     8695
      669     8696
      670     8697    2   OALLOC_FAILED:
      671     8698    2           CMD_STREAM$ = ADDR(NIL);

   8698  5 001003   000001 236000 xsym  OALLOC_FAIL* LDQ     B_VECTNIL+1
         5 001004   200126 470500                    LDP0    @CMD_STREAM$,,AUTO
         5 001005   000000 756100                    STQ     0,,PR0

      672     8699    2           ALTRETURN;

   8699  5 001006   200124 221300                    LDX1  ! ACTUAL_ERR$+2,,AUTO
         5 001007   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:74   

      673     8700
      674     8701    2   END PUSH_EDIT_CMD;
      675     8702
      676     8703        %BOX (TITLE=PUSH_CONTEXT_FILE, PAGE=YES);
              8711    2
              8715    2   /***************************************************************************
              8717    2    *                                                                         *
              8721    2            *                             PUSH_CONTEXT_FILE                          *
              8723    2            *                                                                        *
              8725    2          ***************************************************************************/

      677     8729
      678     8730        /*I* NAME: PUSH_CONTEXT_FILE
      679     8731            PARAMETERS:
      680     8732                CMD_STREAM$ - An uninitialized PTR.
      681     8733                TEST_OPEN - FPT_OPEN with TEST=YES and FUN=IN.
      682     8734            INPUT:
      683     8735            OUTPUT:
      684     8736                CMD_STREAM$ will contain either ADDR(NIL), or a pointer to
      685     8737                    a CMD$STREAM allocated for the context file.
      686     8738                CMD$STREAM.DCB# will contain the number of a DCB which is assigned to
      687     8739                    (but NOT open to) the found context file.
      688     8740                If a VD$CMD_STREAM is pushed on the command stream stack,
      689     8741                    then VD_6E.CMD_STREAM$ will be modified.
      690     8742            SCRATCH:
      691     8743                TEST_OPEN will be mucked with.
      692     8744            DESCRIPTION:
      693     8745                Search for a context file; if we find one, push a VD$CMD_STREAM for
      694     8746                it onto the command stream stack.
      695     8747        */
      696     8748
      697     8749    1   PUSH_CONTEXT_FILE: PROC (CMD_STREAM$, TEST_OPEN) ALTRET;

   8749  5 001010   200124 741300       PUSH_CONTEX* STX1  ! ACTUAL_ERR$+2,,AUTO

      698     8750
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:75   
      699     8751    2   DCL CMD_STREAM$ PTR;
      700     8752        %FPT_OPEN (FPTN=TEST_OPEN, STCLASS=PARAM);
      701     8861
      702     8862
      703     8863
      704     8864        %FPT_GLINEATTR (STCLASS=CONSTANT, DCB=M$UC, LINEATTR=LINEATTR);
      705     8889        %VLP_LINEATTR (FPTN=LINEATTR, STCLASS=STATIC);
      706     8911        %FPT_CMDVAR (FPTN=CONST_FPT_CMDVAR, STCLASS=CONSTANT,
      707     8912           FUN=FETCH, NAME=CMDVAR_NAME);
      708     8929        %VD_TEXTC (NAME=CMDVAR_NAME, STCLASS=CONSTANT, IBYTES=%CHR_CMDVAR_NAME);
      709     9070        %FPT_FID (FPTN=CONST_FPT_FID, STCLASS=CONSTANT);
      710     9093        %FPT_UNFID (FPTN=CONST_FPT_UNFID, STCLASS=CONSTANT);
      711     9111
      712     9112
      713     9113        %FPT_CMDVAR (STCLASS=AUTO);
      714     9130        %FPT_FID (STCLASS=AUTO);
      715     9153        %FPT_UNFID (STCLASS=AUTO);
      716     9171        %VD_TEXTC (NAME=CONTEXT_NAME, STCLASS=AUTO, MXNB=%MXNB_FILE_NAME);
      717     9312        %VD_TEXTC (NAME=PROFILED_NAME, STCLASS=AUTO, MXNB=%MXNB_FILE_NAME);
      718     9453    2   DCL CONTEXT_ACCT (0:%MX_CONTEXT_ACCT_LIST) CHAR(%MXNB_FILE_ACCT);
      719     9454        %VLP_PASS (FPTN=CONTEXT_PASS, STCLASS=AUTO);
      720     9467        %VLP_SN (FPTN=CONTEXT_SN, STCLASS=AUTO);
      721     9480        %VLP_WSN (FPTN=CONTEXT_WSN, STCLASS=AUTO);
      722     9493    2   DCL UNAME_INDEX SBIN;
      723     9494    2   DCL PROFILE_INDEX SBIN;
      724     9495        %VD_TEXTC (NAME=TEMP_NAME, STCLASS=AUTO, MXNB=MXNB_FILE_NAME);
      725     9636    2   DCL TEMP_ACCT CHAR(%MXNB_FILE_ACCT) ALIGNED;
      726     9637    2   DCL ACCT SBIN;
      727     9638    2   DCL MAXACCT SBIN;
      728     9639    2   DCL FOUND_CONTEXT_FILE BIT(1) ALIGNED;
      729     9640    2   DCL LAST_NON_BLANK SBIN;
      730     9641    2   DCL SINK SBIN;
      731     9642
      732     9643
      733     9644
      734     9645        %VD$CMD_STREAM (NAME=CMD$STREAM, STCLASS="BASED(CMD_STREAM$)");
      735     9684    2   DCL UNFID$FID CHAR(%MXNB_NAME_VALUE) BASED;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:76   
      736     9685        %VD$TEXTC;
      737     9708
      738     9709
      739     9710
      740     9711    2           CMD_STREAM$ = ADDR(NIL);

   9711  5 001011   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 001012   200125 470500                    LDP0    @CMD_STREAM$,,AUTO
         5 001013   000000 756100                    STQ     0,,PR0

      741     9712
      742     9713    2           CALL VDG$OALLOC_DCB (CONTEXT_DCB#)

   9713  5 001014   200003 631500                    EPPR1   CONTEXT_DCB#,,AUTO
         5 001015   200320 451500                    STP1    SINK+2,,AUTO
         5 001016   200320 630500                    EPPR0   SINK+2,,AUTO
         5 001017   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 001020   000000 701000 xent               TSX1    VDG$OALLOC_DCB
         5 001021   001023 702000 5                  TSX2    s:9714
         5 001022   001025 710000 5                  TRA     s:9715

      743     9714    3           WHENALTRETURN DO; ALTRETURN; END;

   9714  5 001023   200124 221300                    LDX1  ! ACTUAL_ERR$+2,,AUTO
         5 001024   000000 702211                    TSX2  ! 0,X1

      744     9715    2           TEST_OPEN.V.DCB# = CONTEXT_DCB#;

   9715  5 001025   200003 220100                    LDX0    CONTEXT_DCB#,,AUTO
         5 001026   200126 470500                    LDP0    @TEST_OPEN,,AUTO
         5 001027   000044 740100                    STX0    36,,PR0

      745     9716    2           TEST_OPEN.V.ASN# = %FILE#;

   9716  5 001030   000001 236007                    LDQ     1,DL
         5 001031   000045 552104                    STBQ    37,'04'O,PR0

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:77   
      746     9717    2           TEST_OPEN.V.INITZ.SCRUB# = %TRUE;

   9717  5 001032   400000 236007                    LDQ     -131072,DL
         5 001033   000044 256100                    ORSQ    36,,PR0

      747     9718
      748     9719    3           IF B$JIT.MODE = %M_INT# THEN DO;

   9719  5 001034   000000 471400 xsym               LDP1    B$JIT$
         5 001035   100000 236100                    LDQ     0,,PR1
         5 001036   740000 376003                    ANQ     -16384,DU
         5 001037   140000 116003                    CMPQ    49152,DU
         5 001040   001046 601000 5                  TNZ     s:9724

      749     9720    3              CALL M$GLINEATTR (FPT_GLINEATTR)

   9720  5 001041   000134 630400 3                  EPPR0   FPT_GLINEATTR
         5 001042   560005 713400                    CLIMB   alt,+57349
         5 001043   401000 401760                    pmme    nvectors=3
         5 001044   002057 702000 5                  TSX2    OPEN_FAILED

      750     9721    3                ALTRET (GLINEATTR_FAILED);
      751     9722    3              END;

   9722  5 001045   001050 710000 5                  TRA     s:9726

      752     9723    2           ELSE
      753     9724    2              LINEATTR.PROTXTC.CNT = 0;

   9724  5 001046   000000 236003                    LDQ     0,DU
         5 001047   000002 552040 4                  STBQ    LINEATTR+2,'40'O

      754     9725
      755     9726    2           FPT_CMDVAR = CONST_FPT_CMDVAR;

   9726  5 001050   000100 100400                    MLR     fill='000'O
         5 001051   000144 000070 3                  ADSC9   CONST_FPT_CMDVAR         cn=0,n=56
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:78   
         5 001052   200130 000070                    ADSC9   FPT_CMDVAR,,AUTO         cn=0,n=56

      756     9727    2           FPT_CMDVAR.V_ = VECTOR(FPT_CMDVAR.V);

   9727  5 001053   000031 235000 6                  LDA     25
         5 001054   200320 452500                    STP2    SINK+2,,AUTO
         5 001055   200320 236100                    LDQ     SINK+2,,AUTO
         5 001056   000144 036003                    ADLQ    100,DU
         5 001057   200130 757100                    STAQ    FPT_CMDVAR,,AUTO

      757     9728    2           FPT_CMDVAR.VALUE_ = VECTOR(VD_STATIC_TEMP);

   9728  5 001060   000032 237000 6                  LDAQ    26
         5 001061   200134 757100                    STAQ    EDIT_FILE_KEY$,,AUTO

      758     9729    2           CALL M$CMDVAR (FPT_CMDVAR)

   9729  5 001062   200130 630500                    EPPR0   FPT_CMDVAR,,AUTO
         5 001063   420025 713400                    CLIMB   alt,+8213
         5 001064   402400 401760                    pmme    nvectors=6
         5 001065   001067 702000 5                  TSX2    s:9731
         5 001066   001077 710000 5                  TRA     s:9736

      759     9730    3           WHENALTRETURN DO;

      760     9731    3              IF B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$NOTCMDNAME THEN

   9731  5 001067   000000 470400 xsym               LDP0    B$TCB$
         5 001070   000000 471500                    LDP1    0,,PR0
         5 001071   100102 236100                    LDQ     66,,PR1
         5 001072   377770 376007                    ANQ     131064,DL
         5 001073   015050 116007                    CMPQ    6696,DL
         5 001074   002057 601000 5                  TNZ     OPEN_FAILED

      761     9732    3                 GOTO CMDVAR_FAILED;
      762     9733    3              VD_STATIC_TEMP.LENGTH# = 0;

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:79   
   9733  5 001075   000000 236003                    LDQ     0,DU
         5 001076   000000 552040 xsym               STBQ    VD_STATIC_TEMP,'40'O

      763     9734    3              END;

      764     9735                /* Assume default name and acct */
      765     9736    2           CONTEXT_NAME.LENGTH# = LENGTHC(%CHR_CONTEXT_NAME);

   9736  5 001077   020000 236003                    LDQ     8192,DU
         5 001100   200224 552140                    STBQ    CONTEXT_NAME,'40'O,AUTO

      766     9737    2           CONTEXT_NAME.BYTES = %CHR_CONTEXT_NAME;

   9737  5 001101   040100 100400                    MLR     fill='040'O
         5 001102   000253 000020 3                  ADSC9   CONST_FPT_UNFID+29       cn=0,n=16
         5 001103   200224 200037                    ADSC9   CONTEXT_NAME,,AUTO       cn=1,n=31

      767     9738    2           CONTEXT_ACCT (0) = ' '; /* Try !DIR account first */

   9738  5 001104   000035 235000 xsym               LDA     B_VECTNIL+29
         5 001105   000035 236000 xsym               LDQ     B_VECTNIL+29
         5 001106   200244 757100                    STAQ    CONTEXT_ACCT,,AUTO

      768     9739    2           CONTEXT_ACCT (1) = B$JIT.ACCN;   /* Then user's logon account */

   9739  5 001107   000000 470400 xsym               LDP0    B$JIT$
         5 001110   040100 100500                    MLR     fill='040'O
         5 001111   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         5 001112   200246 000010                    ADSC9   CONTEXT_ACCT+2,,AUTO     cn=0,n=8

      769     9740    2           CONTEXT_ACCT (2) = %CHR_LIBRARY_ACCT;    /* Finally, the library */

   9740  5 001113   040100 100400                    MLR     fill='040'O
         5 001114   000257 000010 3                  ADSC9   CONST_FPT_UNFID+33       cn=0,n=8
         5 001115   200250 000010                    ADSC9   CONTEXT_ACCT+4,,AUTO     cn=0,n=8

      770     9741    2           MAXACCT = 3;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:80   

   9741  5 001116   000003 235007                    LDA     3,DL
         5 001117   200313 755100                    STA     MAXACCT,,AUTO

      771     9742
      772     9743    2           IF VD_STATIC_TEMP.LENGTH# ~= 0 THEN

   9743  5 001120   000000 236000 xsym               LDQ     VD_STATIC_TEMP
         5 001121   777000 316003                    CANQ    -512,DU
         5 001122   001454 600000 5                  TZE     s:9815

      773     9744    3   GOT_CMDVAR_VALUE: DO;

   9744  5 001123                       GOT_CMDVAR_* null
      774     9745                   /* Command variable has a value:  M$FID it to get its parts */
      775     9746    3              FPT_FID = CONST_FPT_FID;

   9746  5 001123   000100 100400                    MLR     fill='000'O
         5 001124   000166 000140 3                  ADSC9   CONST_FPT_FID            cn=0,n=96
         5 001125   200146 000140                    ADSC9   FPT_FID,,AUTO            cn=0,n=96

      776     9747    3              FPT_FID.V_ = VECTOR(FPT_FID.V);

   9747  5 001126   000034 235000 6                  LDA     28
         5 001127   200320 452500                    STP2    SINK+2,,AUTO
         5 001130   200320 236100                    LDQ     SINK+2,,AUTO
         5 001131   000172 036003                    ADLQ    122,DU
         5 001132   200146 757100                    STAQ    FPT_FID,,AUTO

      777     9748    3              FPT_FID.TEXTFID_ = VECTOR(SUBSTR(VD_STATIC_TEMP.BYTES, 0,

   9748  5 001133   000000 236000 xsym               LDQ     VD_STATIC_TEMP
         5 001134   000033 772000                    QRL     27
         5 001135   000064 737000                    LLS     52
         5 001136   000140 135007                    SBLA    96,DL
         5 001137   000035 236000 6                  LDQ     29
         5 001140   200150 757100                    STAQ    FPT_FID+2,,AUTO
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:81   

      778     9749    3                VD_STATIC_TEMP.LENGTH#));
      779     9750    3              FPT_FID.NAME_ = VECTOR(TEMP_NAME);

   9750  5 001141   000036 235000 6                  LDA     30
         5 001142   200320 452500                    STP2    SINK+2,,AUTO
         5 001143   200320 236100                    LDQ     SINK+2,,AUTO
         5 001144   000300 036003                    ADLQ    192,DU
         5 001145   200152 757100                    STAQ    FPT_FID+4,,AUTO

      780     9751    3              FPT_FID.ACCT_ = VECTOR(TEMP_ACCT);

   9751  5 001146   000031 235000 6                  LDA     25
         5 001147   200320 452500                    STP2    SINK+2,,AUTO
         5 001150   200320 236100                    LDQ     SINK+2,,AUTO
         5 001151   000310 036003                    ADLQ    200,DU
         5 001152   200154 757100                    STAQ    FPT_FID+6,,AUTO

      781     9752    3              FPT_FID.PASS_ = VECTOR(CONTEXT_PASS);

   9752  5 001153   000031 235000 6                  LDA     25
         5 001154   200320 452500                    STP2    SINK+2,,AUTO
         5 001155   200320 236100                    LDQ     SINK+2,,AUTO
         5 001156   000266 036003                    ADLQ    182,DU
         5 001157   200156 757100                    STAQ    FPT_FID+8,,AUTO

      782     9753    3              FPT_FID.SN_ = VECTOR(CONTEXT_SN);

   9753  5 001160   000034 235000 6                  LDA     28
         5 001161   200320 452500                    STP2    SINK+2,,AUTO
         5 001162   200320 236100                    LDQ     SINK+2,,AUTO
         5 001163   000270 036003                    ADLQ    184,DU
         5 001164   200160 757100                    STAQ    FPT_FID+10,,AUTO

      783     9754    3              FPT_FID.WSN_ = VECTOR(CONTEXT_WSN);

   9754  5 001165   000031 235000 6                  LDA     25
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:82   
         5 001166   200320 452500                    STP2    SINK+2,,AUTO
         5 001167   200320 236100                    LDQ     SINK+2,,AUTO
         5 001170   000274 036003                    ADLQ    188,DU
         5 001171   200162 757100                    STAQ    FPT_FID+12,,AUTO

      784     9755    3              FPT_FID.ASN_ = VECTOR(TEST_OPEN.V.ASN#);

   9755  5 001172   177640 235007                    LDA     65440,DL
         5 001173   200126 236100                    LDQ     @TEST_OPEN,,AUTO
         5 001174   000037 036000 6                  ADLQ    31
         5 001175   200164 757100                    STAQ    FPT_FID+14,,AUTO

      785     9756    3              FPT_FID.RES_ = VECTOR(TEST_OPEN.V.RES#);

   9756  5 001176   777640 235007                    LDA     -96,DL
         5 001177   200126 236100                    LDQ     @TEST_OPEN,,AUTO
         5 001200   000050 036003                    ADLQ    40,DU
         5 001201   200166 757100                    STAQ    FPT_FID+16,,AUTO

      786     9757    3              CALL M$FID (FPT_FID)

   9757  5 001202   200146 630500                    EPPR0   FPT_FID,,AUTO
         5 001203   420001 713400                    CLIMB   alt,+8193
         5 001204   404400 401760                    pmme    nvectors=10
         5 001205   002072 702000 5                  TSX2    FID_FAILED

      787     9758    3                ALTRET (FID_FAILED);
      788     9759    3              TEST_OPEN.PASS_ = VECTOR(CONTEXT_PASS);

   9759  5 001206   000031 235000 6                  LDA     25
         5 001207   200320 452500                    STP2    SINK+2,,AUTO
         5 001210   200320 236100                    LDQ     SINK+2,,AUTO
         5 001211   000266 036003                    ADLQ    182,DU
         5 001212   200126 470500                    LDP0    @TEST_OPEN,,AUTO
         5 001213   000010 757100                    STAQ    8,,PR0

      789     9760    3              TEST_OPEN.SN_ = VECTOR(CONTEXT_SN);
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:83   

   9760  5 001214   000034 235000 6                  LDA     28
         5 001215   200320 452500                    STP2    SINK+2,,AUTO
         5 001216   200320 236100                    LDQ     SINK+2,,AUTO
         5 001217   000270 036003                    ADLQ    184,DU
         5 001220   000002 757100                    STAQ    2,,PR0

      790     9761    3              TEST_OPEN.WSN_ = VECTOR(CONTEXT_WSN);

   9761  5 001221   000031 235000 6                  LDA     25
         5 001222   200320 452500                    STP2    SINK+2,,AUTO
         5 001223   200320 236100                    LDQ     SINK+2,,AUTO
         5 001224   000274 036003                    ADLQ    188,DU
         5 001225   000032 757100                    STAQ    26,,PR0

      791     9762
      792     9763    3              IF TEMP_NAME.LENGTH# > 0 THEN

   9763  5 001226   200300 236100                    LDQ     TEMP_NAME,,AUTO
         5 001227   777000 316003                    CANQ    -512,DU
         5 001230   001445 600000 5                  TZE     s:9809

      793     9764    4   CMDVAR_VALUE_HAS_NAME: DO;

   9764  5 001231                       CMDVAR_VALU* null
      794     9765    4                 CONTEXT_NAME = TEMP_NAME;

   9765  5 001231   000100 100500                    MLR     fill='000'O
         5 001232   200300 000040                    ADSC9   TEMP_NAME,,AUTO          cn=0,n=32
         5 001233   200224 000040                    ADSC9   CONTEXT_NAME,,AUTO       cn=0,n=32

      795     9766                      /* If name has %SETUP_FN_USER in it, substitute user's name */
      796     9767    4                 CALL XLATE (VD_STATIC_TEMP.BYTES, B$XL_UPPER,

   9767  5 001234   200224 236100                    LDQ     CONTEXT_NAME,,AUTO
         5 001235   000033 772000                    QRL     27
         5 001236   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:84   
         5 001237   000000 471400 xsym               LDP1    B$XL_UPPER$
         5 001240   040000 160540                    MVT     fill='040'O
         5 001241   200224 200010                    ADSC9   CONTEXT_NAME,,AUTO       cn=1,n=*X0
         5 001242   000000 200777 xsym               ADSC9   VD_STATIC_TEMP           cn=1,n=511
         5 001243   100000 000100                    ARG     0,,PR1

      797     9768    4                   SUBSTR(CONTEXT_NAME.BYTES, 0, CONTEXT_NAME.LENGTH#));
      798     9769    4                 CALL INDEX (UNAME_INDEX, %SETUP_FN_USER,

   9769  5 001244   200224 236100                    LDQ     CONTEXT_NAME,,AUTO
         5 001245   000033 772000                    QRL     27
         5 001246   000000 620006                    EAX0    0,QL
         5 001247   000000 120440                    SCD
         5 001250   000000 200010 xsym               ADSC9   VD_STATIC_TEMP           cn=1,n=*X0
         5 001251   000261 000002 3                  ADSC9   CONST_FPT_UNFID+35       cn=0,n=2
         5 001252   200276 000100                    ARG     UNAME_INDEX,,AUTO
         5 001253   001255 607000 5                  TTF     s:9771
         5 001254   200276 054100                    AOS     UNAME_INDEX,,AUTO

      799     9770    4                   SUBSTR(VD_STATIC_TEMP.BYTES, 0, CONTEXT_NAME.LENGTH#));
      800     9771    4                 CALL SEARCHR (LAST_NON_BLANK, SINK, B$SR_NON_BLANK,

   9771  5 001255   000000 473400 xsym               LDP3    B$SR_NON_BLANK$
         5 001256   000000 474400 xsym               LDP4    B$JIT$
         5 001257   000000 165500                    TCTR
         5 001260   400003 000014                    ADSC9   3,,PR4                   cn=0,n=12
         5 001261   300000 000100                    ARG     0,,PR3
         5 001262   200315 000100                    ARG     LAST_NON_BLANK,,AUTO
         5 001263   200315 235100                    LDA     LAST_NON_BLANK,,AUTO
         5 001264   000033 771000                    ARL     27
         5 001265   200316 755100                    STA     SINK,,AUTO
         5 001266   200315 551140                    STBA    LAST_NON_BLANK,'40'O,AUTO
         5 001267   001272 606400 5                  TTN     s:9773
         5 001270   000013 236007                    LDQ     11,DL
         5 001271   200315 156100                    SSQ     LAST_NON_BLANK,,AUTO

      801     9772    4                   B$JIT.UNAME);
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:85   
      802     9773    4                 IF UNAME_INDEX < CONTEXT_NAME.LENGTH#

   9773  5 001272   200224 236100                    LDQ     CONTEXT_NAME,,AUTO
         5 001273   000033 772000                    QRL     27
         5 001274   200276 116100                    CMPQ    UNAME_INDEX,,AUTO
         5 001275   001445 604400 5                  TMOZ    s:9809
         5 001276   200315 235100                    LDA     LAST_NON_BLANK,,AUTO
         5 001277   000014 115007                    CMPA    12,DL
         5 001300   001445 605000 5                  TPL     s:9809

      803     9774    5                   AND LAST_NON_BLANK < LENGTHC(B$JIT.UNAME) THEN DO;

      804     9775    6                    IF UNAME_INDEX > 0 THEN DO;

   9775  5 001301   200276 235100                    LDA     UNAME_INDEX,,AUTO
         5 001302   001336 604400 5                  TMOZ    s:9787

      805     9776    6                       TEMP_NAME.BYTES = SUBSTR(CONTEXT_NAME.BYTES, 0,

   9776  5 001303   000000 620005                    EAX0    0,AL
         5 001304   040100 100540                    MLR     fill='040'O
         5 001305   200224 200010                    ADSC9   CONTEXT_NAME,,AUTO       cn=1,n=*X0
         5 001306   200300 200037                    ADSC9   TEMP_NAME,,AUTO          cn=1,n=31

      806     9777    6                         UNAME_INDEX);
      807     9778    6                       TEMP_NAME.LENGTH# = UNAME_INDEX;

   9778  5 001307   200276 236100                    LDQ     UNAME_INDEX,,AUTO
         5 001310   000033 736000                    QLS     27
         5 001311   200300 552140                    STBQ    TEMP_NAME,'40'O,AUTO

      808     9779    6                       IF SUBSTR(TEMP_NAME.BYTES, TEMP_NAME.LENGTH# - 1, 1) ~=

   9779  5 001312   200300 236100                    LDQ     TEMP_NAME,,AUTO
         5 001313   000033 772000                    QRL     27
         5 001314   040000 106506                    CMPC    fill='040'O
         5 001315   200300 000001                    ADSC9   TEMP_NAME,Q,AUTO         cn=0,n=1
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:86   
         5 001316   000040 000001 6                  ADSC9   32                       cn=0,n=1
         5 001317   001336 600000 5                  TZE     s:9787

      809     9780    7                         %CHR_UNDERSCORE THEN DO;

      810     9781    7                          CALL INSERT (TEMP_NAME.BYTES, TEMP_NAME.LENGTH#, ,

   9781  5 001320   777740 620006                    EAX0    -32,QL
         5 001321   777777 660003                    ERX0    -1,DU
         5 001322   040146 100400                    MLR     fill='040'O
         5 001323   000040 000001 6                  ADSC9   32                       cn=0,n=1
         5 001324   200300 200010                    ADSC9   TEMP_NAME,Q,AUTO         cn=1,n=*X0

      811     9782    7                            %CHR_UNDERSCORE);
      812     9783    7                          TEMP_NAME.LENGTH# = MINIMUM (LENGTHC(TEMP_NAME.BYTES),

   9783  5 001325   200300 236100                    LDQ     TEMP_NAME,,AUTO
         5 001326   000033 772000                    QRL     27
         5 001327   000001 036007                    ADLQ    1,DL
         5 001330   000037 116007                    CMPQ    31,DL
         5 001331   001334 602000 5                  TNC     s:9783+7
         5 001332   001334 600000 5                  TZE     s:9783+7
         5 001333   000037 236007                    LDQ     31,DL
         5 001334   000033 736000                    QLS     27
         5 001335   200300 552140                    STBQ    TEMP_NAME,'40'O,AUTO

      813     9784    7                            TEMP_NAME.LENGTH# + 1);
      814     9785    7                          END;

      815     9786    6                       END;

      816     9787    5                    CALL INSERT (TEMP_NAME.BYTES, TEMP_NAME.LENGTH#, ,

   9787  5 001336   200300 236100                    LDQ     TEMP_NAME,,AUTO
         5 001337   000033 772000                    QRL     27
         5 001340   777740 620006                    EAX0    -32,QL
         5 001341   777777 660003                    ERX0    -1,DU
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:87   
         5 001342   040146 100500                    MLR     fill='040'O
         5 001343   400003 000014                    ADSC9   3,,PR4                   cn=0,n=12
         5 001344   200300 200010                    ADSC9   TEMP_NAME,Q,AUTO         cn=1,n=*X0

      817     9788    5                      B$JIT.UNAME);
      818     9789    5                    TEMP_NAME.LENGTH# = MINIMUM (LENGTHC(TEMP_NAME.BYTES),

   9789  5 001345   200300 236100                    LDQ     TEMP_NAME,,AUTO
         5 001346   000033 772000                    QRL     27
         5 001347   200315 036100                    ADLQ    LAST_NON_BLANK,,AUTO
         5 001350   000001 036007                    ADLQ    1,DL
         5 001351   000037 116007                    CMPQ    31,DL
         5 001352   001354 604400 5                  TMOZ    s:9789+7
         5 001353   000037 236007                    LDQ     31,DL
         5 001354   000033 736000                    QLS     27
         5 001355   200300 552140                    STBQ    TEMP_NAME,'40'O,AUTO

      819     9790    5                      TEMP_NAME.LENGTH# + LAST_NON_BLANK + 1);
      820     9791    6                    IF UNAME_INDEX + 2 < CONTEXT_NAME.LENGTH# THEN DO;

   9791  5 001356   200224 236100                    LDQ     CONTEXT_NAME,,AUTO
         5 001357   000033 772000                    QRL     27
         5 001360   200320 756100                    STQ     SINK+2,,AUTO
         5 001361   200276 236100                    LDQ     UNAME_INDEX,,AUTO
         5 001362   000002 036007                    ADLQ    2,DL
         5 001363   200320 116100                    CMPQ    SINK+2,,AUTO
         5 001364   001442 605000 5                  TPL     s:9805

      821     9792    6                       IF SUBSTR(CONTEXT_NAME.BYTES, UNAME_INDEX + 2, 1) ~=

   9792  5 001365   200276 235100                    LDA     UNAME_INDEX,,AUTO
         5 001366   040000 106505                    CMPC    fill='040'O
         5 001367   200224 600001                    ADSC9   CONTEXT_NAME,A,AUTO      cn=3,n=1
         5 001370   000040 000001 6                  ADSC9   32                       cn=0,n=1
         5 001371   001412 600000 5                  TZE     s:9799

      822     9793    7                         %CHR_UNDERSCORE THEN DO;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:88   

      823     9794    7                          CALL INSERT (TEMP_NAME.BYTES, TEMP_NAME.LENGTH#, ,

   9794  5 001372   200300 236100                    LDQ     TEMP_NAME,,AUTO
         5 001373   000033 772000                    QRL     27
         5 001374   777740 620006                    EAX0    -32,QL
         5 001375   777777 660003                    ERX0    -1,DU
         5 001376   040146 100400                    MLR     fill='040'O
         5 001377   000040 000001 6                  ADSC9   32                       cn=0,n=1
         5 001400   200300 200010                    ADSC9   TEMP_NAME,Q,AUTO         cn=1,n=*X0

      824     9795    7                            %CHR_UNDERSCORE);
      825     9796    7                          TEMP_NAME.LENGTH# = MINIMUM (LENGTHC(TEMP_NAME.BYTES),

   9796  5 001401   200300 236100                    LDQ     TEMP_NAME,,AUTO
         5 001402   000033 772000                    QRL     27
         5 001403   000001 036007                    ADLQ    1,DL
         5 001404   000037 116007                    CMPQ    31,DL
         5 001405   001410 602000 5                  TNC     s:9796+7
         5 001406   001410 600000 5                  TZE     s:9796+7
         5 001407   000037 236007                    LDQ     31,DL
         5 001410   000033 736000                    QLS     27
         5 001411   200300 552140                    STBQ    TEMP_NAME,'40'O,AUTO

      826     9797    7                            TEMP_NAME.LENGTH# + 1);
      827     9798    7                          END;

      828     9799    6                       CALL INSERT (TEMP_NAME.BYTES, TEMP_NAME.LENGTH#, ,

   9799  5 001412   200300 236100                    LDQ     TEMP_NAME,,AUTO
         5 001413   000033 772000                    QRL     27
         5 001414   777740 620006                    EAX0    -32,QL
         5 001415   777777 660003                    ERX0    -1,DU
         5 001416   777742 621005                    EAX1    -30,AL
         5 001417   777777 661003                    ERX1    -1,DU
         5 001420   040146 100545                    MLR     fill='040'O
         5 001421   200224 600011                    ADSC9   CONTEXT_NAME,A,AUTO      cn=3,n=*X1
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:89   
         5 001422   200300 200010                    ADSC9   TEMP_NAME,Q,AUTO         cn=1,n=*X0

      829     9800    6                         SUBSTR(CONTEXT_NAME.BYTES, UNAME_INDEX + 2));
      830     9801    6                       TEMP_NAME.LENGTH# = MINIMUM (LENGTHC(TEMP_NAME.BYTES),

   9801  5 001423   200224 236100                    LDQ     CONTEXT_NAME,,AUTO
         5 001424   000033 772000                    QRL     27
         5 001425   200276 136100                    SBLQ    UNAME_INDEX,,AUTO
         5 001426   200320 756100                    STQ     SINK+2,,AUTO
         5 001427   200300 236100                    LDQ     TEMP_NAME,,AUTO
         5 001430   000033 772000                    QRL     27
         5 001431   200321 756100                    STQ     SINK+3,,AUTO
         5 001432   200320 236100                    LDQ     SINK+2,,AUTO
         5 001433   200321 036100                    ADLQ    SINK+3,,AUTO
         5 001434   000002 136007                    SBLQ    2,DL
         5 001435   000037 116007                    CMPQ    31,DL
         5 001436   001440 604400 5                  TMOZ    s:9801+13
         5 001437   000037 236007                    LDQ     31,DL
         5 001440   000033 736000                    QLS     27
         5 001441   200300 552140                    STBQ    TEMP_NAME,'40'O,AUTO

      831     9802    6                         TEMP_NAME.LENGTH# + (CONTEXT_NAME.LENGTH# -
      832     9803    6                         (UNAME_INDEX + 2)));
      833     9804    6                       END;

      834     9805    5                    CONTEXT_NAME = TEMP_NAME;

   9805  5 001442   000100 100500                    MLR     fill='000'O
         5 001443   200300 000040                    ADSC9   TEMP_NAME,,AUTO          cn=0,n=32
         5 001444   200224 000040                    ADSC9   CONTEXT_NAME,,AUTO       cn=0,n=32

      835     9806    5                    END;

      836     9807    4                 END CMDVAR_VALUE_HAS_NAME;

      837     9808
      838     9809    4              IF TEMP_ACCT ~= ' ' THEN DO;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:90   

   9809  5 001445   200310 237100                    LDAQ    TEMP_ACCT,,AUTO
         5 001446   000042 117000 6                  CMPAQ   34
         5 001447   001454 600000 5                  TZE     s:9815

      839     9810    4                 CONTEXT_ACCT (0) = TEMP_ACCT;

   9810  5 001450   200310 237100                    LDAQ    TEMP_ACCT,,AUTO
         5 001451   200244 757100                    STAQ    CONTEXT_ACCT,,AUTO

      840     9811    4                 MAXACCT = 1;

   9811  5 001452   000001 235007                    LDA     1,DL
         5 001453   200313 755100                    STA     MAXACCT,,AUTO

      841     9812    4                 END;

      842     9813    3              END GOT_CMDVAR_VALUE;

      843     9814
      844     9815    2           PROFILED_NAME.LENGTH# = 0;

   9815  5 001454   000000 236003                    LDQ     0,DU
         5 001455   200234 552140                    STBQ    PROFILED_NAME,'40'O,AUTO

      845     9816    2           CALL XLATE (VD_STATIC_TEMP.BYTES, B$XL_UPPER,

   9816  5 001456   200224 236100                    LDQ     CONTEXT_NAME,,AUTO
         5 001457   000033 772000                    QRL     27
         5 001460   000000 620006                    EAX0    0,QL
         5 001461   000000 470400 xsym               LDP0    B$XL_UPPER$
         5 001462   040000 160540                    MVT     fill='040'O
         5 001463   200224 200010                    ADSC9   CONTEXT_NAME,,AUTO       cn=1,n=*X0
         5 001464   000000 200777 xsym               ADSC9   VD_STATIC_TEMP           cn=1,n=511
         5 001465   000000 000100                    ARG     0,,PR0

      846     9817    2             SUBSTR(CONTEXT_NAME.BYTES, 0, CONTEXT_NAME.LENGTH#));
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:91   
      847     9818    2           CALL INDEX (PROFILE_INDEX, %SETUP_FN_PROFILE,

   9818  5 001466   200224 236100                    LDQ     CONTEXT_NAME,,AUTO
         5 001467   000033 772000                    QRL     27
         5 001470   000000 620006                    EAX0    0,QL
         5 001471   000000 120440                    SCD
         5 001472   000000 200010 xsym               ADSC9   VD_STATIC_TEMP           cn=1,n=*X0
         5 001473   000262 000002 3                  ADSC9   CONST_FPT_UNFID+36       cn=0,n=2
         5 001474   200277 000100                    ARG     PROFILE_INDEX,,AUTO
         5 001475   001477 607000 5                  TTF     s:9820
         5 001476   200277 054100                    AOS     PROFILE_INDEX,,AUTO

      848     9819    2             SUBSTR(VD_STATIC_TEMP.BYTES, 0, CONTEXT_NAME.LENGTH#));
      849     9820    3           IF PROFILE_INDEX < CONTEXT_NAME.LENGTH# THEN DO;

   9820  5 001477   200224 236100                    LDQ     CONTEXT_NAME,,AUTO
         5 001500   000033 772000                    QRL     27
         5 001501   200277 116100                    CMPQ    PROFILE_INDEX,,AUTO
         5 001502   001671 604400 5                  TMOZ    s:9858

      850     9821                   /* Substitute the terminal profile into the file name */
      851     9822    4              IF PROFILE_INDEX > 0 THEN DO;

   9822  5 001503   200277 235100                    LDA     PROFILE_INDEX,,AUTO
         5 001504   001540 604400 5                  TMOZ    s:9834

      852     9823    4                 PROFILED_NAME.LENGTH# = PROFILE_INDEX;

   9823  5 001505   200277 236100                    LDQ     PROFILE_INDEX,,AUTO
         5 001506   000033 736000                    QLS     27
         5 001507   200234 552140                    STBQ    PROFILED_NAME,'40'O,AUTO

      853     9824    4                 PROFILED_NAME.BYTES =

   9824  5 001510   000000 620005                    EAX0    0,AL
         5 001511   040100 100540                    MLR     fill='040'O
         5 001512   200224 200010                    ADSC9   CONTEXT_NAME,,AUTO       cn=1,n=*X0
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:92   
         5 001513   200234 200037                    ADSC9   PROFILED_NAME,,AUTO      cn=1,n=31

      854     9825    4                   SUBSTR(CONTEXT_NAME.BYTES, 0, PROFILE_INDEX);
      855     9826    4                 IF SUBSTR(PROFILED_NAME.BYTES, PROFILED_NAME.LENGTH# - 1, 1) ~=

   9826  5 001514   200234 236100                    LDQ     PROFILED_NAME,,AUTO
         5 001515   000033 772000                    QRL     27
         5 001516   040000 106506                    CMPC    fill='040'O
         5 001517   200234 000001                    ADSC9   PROFILED_NAME,Q,AUTO     cn=0,n=1
         5 001520   000040 000001 6                  ADSC9   32                       cn=0,n=1
         5 001521   001540 600000 5                  TZE     s:9834

      856     9827    5                   %CHR_UNDERSCORE THEN DO;

      857     9828    5                    CALL INSERT (PROFILED_NAME.BYTES, PROFILED_NAME.LENGTH#, ,

   9828  5 001522   777740 620006                    EAX0    -32,QL
         5 001523   777777 660003                    ERX0    -1,DU
         5 001524   040146 100400                    MLR     fill='040'O
         5 001525   000040 000001 6                  ADSC9   32                       cn=0,n=1
         5 001526   200234 200010                    ADSC9   PROFILED_NAME,Q,AUTO     cn=1,n=*X0

      858     9829    5                      %CHR_UNDERSCORE);
      859     9830    5                    PROFILED_NAME.LENGTH# = MINIMUM (LENGTHC(PROFILED_NAME.BYTES),

   9830  5 001527   200234 236100                    LDQ     PROFILED_NAME,,AUTO
         5 001530   000033 772000                    QRL     27
         5 001531   000001 036007                    ADLQ    1,DL
         5 001532   000037 116007                    CMPQ    31,DL
         5 001533   001536 602000 5                  TNC     s:9830+7
         5 001534   001536 600000 5                  TZE     s:9830+7
         5 001535   000037 236007                    LDQ     31,DL
         5 001536   000033 736000                    QLS     27
         5 001537   200234 552140                    STBQ    PROFILED_NAME,'40'O,AUTO

      860     9831    5                      PROFILED_NAME.LENGTH# + 1);
      861     9832    5                    END;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:93   

      862     9833    4                 END;

      863     9834    3              CALL INSERT (PROFILED_NAME.BYTES, PROFILED_NAME.LENGTH#, ,

   9834  5 001540   000002 236000 4                  LDQ     LINEATTR+2
         5 001541   000033 772000                    QRL     27
         5 001542   000000 620006                    EAX0    0,QL
         5 001543   200234 236100                    LDQ     PROFILED_NAME,,AUTO
         5 001544   000033 772000                    QRL     27
         5 001545   777740 621006                    EAX1    -32,QL
         5 001546   777777 661003                    ERX1    -1,DU
         5 001547   040146 100440                    MLR     fill='040'O
         5 001550   000002 200010 4                  ADSC9   LINEATTR+2               cn=1,n=*X0
         5 001551   200234 200011                    ADSC9   PROFILED_NAME,Q,AUTO     cn=1,n=*X1

      864     9835    3                SUBSTR(LINEATTR.PROTXTC.TXT, 0, LINEATTR.PROTXTC.CNT));
      865     9836    3              PROFILED_NAME.LENGTH# = MINIMUM (LENGTHC(PROFILED_NAME.BYTES),

   9836  5 001552   000002 236000 4                  LDQ     LINEATTR+2
         5 001553   000033 772000                    QRL     27
         5 001554   200320 756100                    STQ     SINK+2,,AUTO
         5 001555   200234 236100                    LDQ     PROFILED_NAME,,AUTO
         5 001556   000033 772000                    QRL     27
         5 001557   200320 036100                    ADLQ    SINK+2,,AUTO
         5 001560   000037 116007                    CMPQ    31,DL
         5 001561   001564 602000 5                  TNC     s:9836+10
         5 001562   001564 600000 5                  TZE     s:9836+10
         5 001563   000037 236007                    LDQ     31,DL
         5 001564   000033 736000                    QLS     27
         5 001565   200234 552140                    STBQ    PROFILED_NAME,'40'O,AUTO

      866     9837    3                PROFILED_NAME.LENGTH# + LINEATTR.PROTXTC.CNT);
      867     9838    4              IF PROFILE_INDEX + 2 < CONTEXT_NAME.LENGTH# THEN DO;

   9838  5 001566   200224 236100                    LDQ     CONTEXT_NAME,,AUTO
         5 001567   000033 772000                    QRL     27
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:94   
         5 001570   200320 756100                    STQ     SINK+2,,AUTO
         5 001571   200277 236100                    LDQ     PROFILE_INDEX,,AUTO
         5 001572   000002 036007                    ADLQ    2,DL
         5 001573   200320 116100                    CMPQ    SINK+2,,AUTO
         5 001574   001652 605000 5                  TPL     s:9853

      868     9839    4                 IF SUBSTR(CONTEXT_NAME.BYTES, PROFILE_INDEX + 2, 1) ~=

   9839  5 001575   200277 235100                    LDA     PROFILE_INDEX,,AUTO
         5 001576   040000 106505                    CMPC    fill='040'O
         5 001577   200224 600001                    ADSC9   CONTEXT_NAME,A,AUTO      cn=3,n=1
         5 001600   000040 000001 6                  ADSC9   32                       cn=0,n=1
         5 001601   001622 600000 5                  TZE     s:9846

      869     9840    5                   %CHR_UNDERSCORE THEN DO;

      870     9841    5                    CALL INSERT (PROFILED_NAME.BYTES, PROFILED_NAME.LENGTH#, ,

   9841  5 001602   200234 236100                    LDQ     PROFILED_NAME,,AUTO
         5 001603   000033 772000                    QRL     27
         5 001604   777740 620006                    EAX0    -32,QL
         5 001605   777777 660003                    ERX0    -1,DU
         5 001606   040146 100400                    MLR     fill='040'O
         5 001607   000040 000001 6                  ADSC9   32                       cn=0,n=1
         5 001610   200234 200010                    ADSC9   PROFILED_NAME,Q,AUTO     cn=1,n=*X0

      871     9842    5                      %CHR_UNDERSCORE);
      872     9843    5                    PROFILED_NAME.LENGTH# = MINIMUM (LENGTHC(PROFILED_NAME.BYTES),

   9843  5 001611   200234 236100                    LDQ     PROFILED_NAME,,AUTO
         5 001612   000033 772000                    QRL     27
         5 001613   000001 036007                    ADLQ    1,DL
         5 001614   000037 116007                    CMPQ    31,DL
         5 001615   001620 602000 5                  TNC     s:9843+7
         5 001616   001620 600000 5                  TZE     s:9843+7
         5 001617   000037 236007                    LDQ     31,DL
         5 001620   000033 736000                    QLS     27
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:95   
         5 001621   200234 552140                    STBQ    PROFILED_NAME,'40'O,AUTO

      873     9844    5                      PROFILED_NAME.LENGTH# + 1);
      874     9845    5                    END;

      875     9846    4                 CALL INSERT (PROFILED_NAME.BYTES, PROFILED_NAME.LENGTH#, ,

   9846  5 001622   200234 236100                    LDQ     PROFILED_NAME,,AUTO
         5 001623   000033 772000                    QRL     27
         5 001624   777740 620006                    EAX0    -32,QL
         5 001625   777777 660003                    ERX0    -1,DU
         5 001626   777742 621005                    EAX1    -30,AL
         5 001627   777777 661003                    ERX1    -1,DU
         5 001630   040146 100545                    MLR     fill='040'O
         5 001631   200224 600011                    ADSC9   CONTEXT_NAME,A,AUTO      cn=3,n=*X1
         5 001632   200234 200010                    ADSC9   PROFILED_NAME,Q,AUTO     cn=1,n=*X0

      876     9847    4                   SUBSTR(CONTEXT_NAME.BYTES, PROFILE_INDEX + 2));
      877     9848    4                 PROFILED_NAME.LENGTH# = MINIMUM (LENGTHC(PROFILED_NAME.BYTES),

   9848  5 001633   200224 236100                    LDQ     CONTEXT_NAME,,AUTO
         5 001634   000033 772000                    QRL     27
         5 001635   200277 136100                    SBLQ    PROFILE_INDEX,,AUTO
         5 001636   200320 756100                    STQ     SINK+2,,AUTO
         5 001637   200234 236100                    LDQ     PROFILED_NAME,,AUTO
         5 001640   000033 772000                    QRL     27
         5 001641   200321 756100                    STQ     SINK+3,,AUTO
         5 001642   200320 236100                    LDQ     SINK+2,,AUTO
         5 001643   200321 036100                    ADLQ    SINK+3,,AUTO
         5 001644   000002 136007                    SBLQ    2,DL
         5 001645   000037 116007                    CMPQ    31,DL
         5 001646   001650 604400 5                  TMOZ    s:9848+13
         5 001647   000037 236007                    LDQ     31,DL
         5 001650   000033 736000                    QLS     27
         5 001651   200234 552140                    STBQ    PROFILED_NAME,'40'O,AUTO

      878     9849    4                   PROFILED_NAME.LENGTH# + (CONTEXT_NAME.LENGTH# -
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:96   
      879     9850    4                   (PROFILE_INDEX + 2)));
      880     9851    4                 END;

      881     9852                   /* Remove the %SETUP_FN_PROFILE from CONTEXT_NAME */
      882     9853    3              TEMP_NAME.BYTES = SUBSTR(CONTEXT_NAME.BYTES, PROFILE_INDEX + 2);

   9853  5 001652   200277 720100                    LXL0    PROFILE_INDEX,,AUTO
         5 001653   777742 620010                    EAX0    -30,X0
         5 001654   777777 660003                    ERX0    -1,DU
         5 001655   200277 235100                    LDA     PROFILE_INDEX,,AUTO
         5 001656   040100 100545                    MLR     fill='040'O
         5 001657   200224 600010                    ADSC9   CONTEXT_NAME,A,AUTO      cn=3,n=*X0
         5 001660   200300 200037                    ADSC9   TEMP_NAME,,AUTO          cn=1,n=31

      883     9854    3              CONTEXT_NAME.LENGTH# = CONTEXT_NAME.LENGTH# - 2;

   9854  5 001661   200224 236100                    LDQ     CONTEXT_NAME,,AUTO
         5 001662   776000 036003                    ADLQ    -1024,DU
         5 001663   200224 552140                    STBQ    CONTEXT_NAME,'40'O,AUTO

      884     9855    3              CALL INSERT (CONTEXT_NAME.BYTES, PROFILE_INDEX, , TEMP_NAME.BYTES);

   9855  5 001664   777740 621005                    EAX1    -32,AL
         5 001665   777777 661003                    ERX1    -1,DU
         5 001666   040145 100500                    MLR     fill='040'O
         5 001667   200300 200037                    ADSC9   TEMP_NAME,,AUTO          cn=1,n=31
         5 001670   200224 200011                    ADSC9   CONTEXT_NAME,A,AUTO      cn=1,n=*X1

      885     9856    3              END;

      886     9857
      887     9858    2           ACCT = 0;

   9858  5 001671   200312 450100                    STZ     ACCT,,AUTO

      888     9859    2           FOUND_CONTEXT_FILE = %FALSE;

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:97   
   9859  5 001672   200314 450100                    STZ     FOUND_CONTEXT_FILE,,AUTO

      889     9860    3           DO UNTIL ACCT = MAXACCT OR FOUND_CONTEXT_FILE;

      890     9861    3              TEST_OPEN.ACCT_ = VECTOR(CONTEXT_ACCT(ACCT));

   9861  5 001673   000031 235000 6                  LDA     25
         5 001674   200320 452500                    STP2    SINK+2,,AUTO
         5 001675   200312 236100                    LDQ     ACCT,,AUTO
         5 001676   000023 736000                    QLS     19
         5 001677   000244 036003                    ADLQ    164,DU
         5 001700   200320 036100                    ADLQ    SINK+2,,AUTO
         5 001701   200126 470500                    LDP0    @TEST_OPEN,,AUTO
         5 001702   000024 757100                    STAQ    20,,PR0

      891     9862    4              IF PROFILED_NAME.LENGTH# > 0 THEN DO;

   9862  5 001703   200234 236100                    LDQ     PROFILED_NAME,,AUTO
         5 001704   777000 316003                    CANQ    -512,DU
         5 001705   001727 600000 5                  TZE     s:9873

      892     9863    4                 TEST_OPEN.NAME_ = VECTOR(PROFILED_NAME);

   9863  5 001706   000036 235000 6                  LDA     30
         5 001707   200320 452500                    STP2    SINK+2,,AUTO
         5 001710   200320 236100                    LDQ     SINK+2,,AUTO
         5 001711   000234 036003                    ADLQ    156,DU
         5 001712   000006 757100                    STAQ    6,,PR0

      893     9864    4                 CALL M$OPEN (TEST_OPEN)

   9864  5 001713   450000 713400                    CLIMB   alt,open
         5 001714   410400 401760                    pmme    nvectors=18
         5 001715   001721 702000 5                  TSX2    s:9869

      894     9865    5                 WHENRETURN DO;

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:98   
      895     9866    5                    FOUND_CONTEXT_FILE = %TRUE;

   9866  5 001716   400000 236003                    LDQ     -131072,DU
         5 001717   200314 756100                    STQ     FOUND_CONTEXT_FILE,,AUTO

      896     9867    5                    END;

   9867  5 001720   001727 710000 5                  TRA     s:9873

      897     9868    5                 WHENALTRETURN DO;

      898     9869    5                    IF B$TCB.ALT$ -> B$ALT.ERR.CODE ~= %E$NOFILE THEN

   9869  5 001721   000000 470400 xsym               LDP0    B$TCB$
         5 001722   000000 471500                    LDP1    0,,PR0
         5 001723   100102 236100                    LDQ     66,,PR1
         5 001724   377770 376007                    ANQ     131064,DL
         5 001725   001610 116007                    CMPQ    904,DL
         5 001726   002057 601000 5                  TNZ     OPEN_FAILED

      899     9870    5                       GOTO OPEN_FAILED;
      900     9871    5                    END;

      901     9872    4                 END;

      902     9873    4              IF NOT FOUND_CONTEXT_FILE THEN DO;

   9873  5 001727   200314 234100                    SZN     FOUND_CONTEXT_FILE,,AUTO
         5 001730   001753 604000 5                  TMI     s:9884

      903     9874    4                 TEST_OPEN.NAME_ = VECTOR(CONTEXT_NAME);

   9874  5 001731   000036 235000 6                  LDA     30
         5 001732   200320 452500                    STP2    SINK+2,,AUTO
         5 001733   200320 236100                    LDQ     SINK+2,,AUTO
         5 001734   000224 036003                    ADLQ    148,DU
         5 001735   200126 470500                    LDP0    @TEST_OPEN,,AUTO
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:99   
         5 001736   000006 757100                    STAQ    6,,PR0

      904     9875    4                 CALL M$OPEN (TEST_OPEN)

   9875  5 001737   450000 713400                    CLIMB   alt,open
         5 001740   410400 401760                    pmme    nvectors=18
         5 001741   001745 702000 5                  TSX2    s:9880

      905     9876    5                 WHENRETURN DO;

      906     9877    5                    FOUND_CONTEXT_FILE = %TRUE;

   9877  5 001742   400000 236003                    LDQ     -131072,DU
         5 001743   200314 756100                    STQ     FOUND_CONTEXT_FILE,,AUTO

      907     9878    5                    END;

   9878  5 001744   001753 710000 5                  TRA     s:9884

      908     9879    5                 WHENALTRETURN DO;

      909     9880    5                    IF B$TCB.ALT$ -> B$ALT.ERR.CODE ~= %E$NOFILE THEN

   9880  5 001745   000000 470400 xsym               LDP0    B$TCB$
         5 001746   000000 471500                    LDP1    0,,PR0
         5 001747   100102 236100                    LDQ     66,,PR1
         5 001750   377770 376007                    ANQ     131064,DL
         5 001751   001610 116007                    CMPQ    904,DL
         5 001752   002057 601000 5                  TNZ     OPEN_FAILED

      910     9881    5                       GOTO OPEN_FAILED;
      911     9882    5                    END;

      912     9883    4                 END;

      913     9884    3              ACCT = ACCT + 1;

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:100  
   9884  5 001753   200312 054100                    AOS     ACCT,,AUTO

      914     9885    3              END;

   9885  5 001754   200312 236100                    LDQ     ACCT,,AUTO
         5 001755   200313 116100                    CMPQ    MAXACCT,,AUTO
         5 001756   001761 600000 5                  TZE     s:9887
         5 001757   200314 234100                    SZN     FOUND_CONTEXT_FILE,,AUTO
         5 001760   001673 605000 5                  TPL     s:9861

      915     9886
      916     9887    3           IF FOUND_CONTEXT_FILE THEN DO;

   9887  5 001761   200314 234100                    SZN     FOUND_CONTEXT_FILE,,AUTO
         5 001762   002057 605000 5                  TPL     OPEN_FAILED

      917     9888    3              CALL VDG$OALLOC (%CLS_CMD_STREAM, CMD_STREAM$)

   9888  5 001763   200125 236100                    LDQ     @CMD_STREAM$,,AUTO
         5 001764   000001 235000 6                  LDA     1
         5 001765   200320 757100                    STAQ    SINK+2,,AUTO
         5 001766   200320 630500                    EPPR0   SINK+2,,AUTO
         5 001767   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 001770   000000 701000 xent               TSX1    VDG$OALLOC
         5 001771   002107 702000 5                  TSX2    OALLOC_FAILED

      918     9889    3                ALTRET (OALLOC_FAILED);
      919     9890    3              CMD$STREAM.TYPE# = %CS_DCB;

   9890  5 001772   200125 470500                    LDP0    @CMD_STREAM$,,AUTO
         5 001773   000000 471500                    LDP1    0,,PR0
         5 001774   000004 220003                    LDX0    4,DU
         5 001775   100002 740100                    STX0    2,,PR1

      920     9891    3              CMD$STREAM.DCB# = TEST_OPEN.V.DCB#;

   9891  5 001776   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:101  
         5 001777   200126 473500                    LDP3    @TEST_OPEN,,AUTO
         5 002000   300044 221100                    LDX1    36,,PR3
         5 002001   100024 741100                    STX1    20,,PR1

      921     9892    3              TEST_OPEN.V.DCB# = 0;

   9892  5 002002   000000 221003                    LDX1    0,DU
         5 002003   300044 741100                    STX1    36,,PR3

      922     9893                   /* Never echo the context file */
      923     9894    3              CMD$STREAM.ECHO = %FALSE;

   9894  5 002004   000000 471500                    LDP1    0,,PR0
         5 002005   000041 236000 6                  LDQ     33
         5 002006   100027 356100                    ANSQ    23,,PR1

      924     9895
      925     9896                   /* Assign the fid of the context file to the $CONTEXT name */
      926     9897    3              FPT_UNFID = CONST_FPT_UNFID;

   9897  5 002007   000100 100400                    MLR     fill='000'O
         5 002010   000216 000130 3                  ADSC9   CONST_FPT_UNFID          cn=0,n=88
         5 002011   200176 000130                    ADSC9   FPT_UNFID,,AUTO          cn=0,n=88

      927     9898    3              FPT_UNFID.V_ = VECTOR(FPT_UNFID.V);

   9898  5 002012   000031 235000 6                  LDA     25
         5 002013   200320 452500                    STP2    SINK+2,,AUTO
         5 002014   200320 236100                    LDQ     SINK+2,,AUTO
         5 002015   000222 036003                    ADLQ    146,DU
         5 002016   200176 757100                    STAQ    FPT_UNFID,,AUTO

      928     9899    3              FPT_UNFID.TEXTFID_ = VECTOR(VD_STATIC_TEMP);

   9899  5 002017   000032 237000 6                  LDAQ    26
         5 002020   200200 757100                    STAQ    FPT_UNFID+2,,AUTO

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:102  
      929     9900    3              FPT_UNFID.V.DCB# = CMD$STREAM.DCB#;

   9900  5 002021   000000 471500                    LDP1    0,,PR0
         5 002022   100024 222100                    LDX2    20,,PR1
         5 002023   200222 742100                    STX2    FPT_UNFID+20,,AUTO

      930     9901    3              CALL M$UNFID (FPT_UNFID)

   9901  5 002024   200176 630500                    EPPR0   FPT_UNFID,,AUTO
         5 002025   420021 713400                    CLIMB   alt,+8209
         5 002026   404400 401760                    pmme    nvectors=10
         5 002027   002057 702000 5                  TSX2    OPEN_FAILED

      931     9902    3                ALTRET (UNFID_FAILED);
      932     9903    3              CALL SEARCHR (LAST_NON_BLANK, SINK, B$SR_NON_BLANK,

   9903  5 002030   000000 470400 xsym               LDP0    B$SR_NON_BLANK$
         5 002031   000000 165400                    TCTR
         5 002032   000000 000777 xsym               ADSC9   VD_STATIC_TEMP           cn=0,n=511
         5 002033   000000 000100                    ARG     0,,PR0
         5 002034   200315 000100                    ARG     LAST_NON_BLANK,,AUTO
         5 002035   200315 235100                    LDA     LAST_NON_BLANK,,AUTO
         5 002036   000033 771000                    ARL     27
         5 002037   200316 755100                    STA     SINK,,AUTO
         5 002040   200315 551140                    STBA    LAST_NON_BLANK,'40'O,AUTO
         5 002041   002044 606400 5                  TTN     s:9905
         5 002042   000776 236007                    LDQ     510,DL
         5 002043   200315 156100                    SSQ     LAST_NON_BLANK,,AUTO

      933     9904    3                ADDR(VD_STATIC_TEMP)->UNFID$FID);
      934     9905    3              VD_$CONTEXT.LENGTH# = LAST_NON_BLANK + 1;

   9905  5 002044   200315 720100                    LXL0    LAST_NON_BLANK,,AUTO
         5 002045   000001 621010                    EAX1    1,X0
         5 002046   000002 741000 xsym               STX1    VD_$CONTEXT+2

      935     9906    3              VD_$CONTEXT.FLINK$ -> VD$BUFFER.LENGTH# = VD_$CONTEXT.LENGTH#;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:103  

   9906  5 002047   000001 471400 xsym               LDP1    VD_$CONTEXT+1
         5 002050   100002 741100                    STX1    2,,PR1

      936     9907    3              VD_$CONTEXT.FLINK$ -> VD$BUFFER.BYTES =

   9907  5 002051   000002 222000 xsym               LDX2    VD_$CONTEXT+2
         5 002052   040140 100440                    MLR     fill='040'O
         5 002053   000000 000012 xsym               ADSC9   VD_STATIC_TEMP           cn=0,n=*X2
         5 002054   100002 400011                    ADSC9   2,,PR1                   cn=2,n=*X1

      937     9908    3                SUBSTR(ADDR(VD_STATIC_TEMP)->UNFID$FID, 0, VD_$CONTEXT.LENGTH#);
      938     9909    3              RETURN;

   9909  5 002055   200124 221300                    LDX1  ! ACTUAL_ERR$+2,,AUTO
         5 002056   000001 702211                    TSX2  ! 1,X1

      939     9910    3              END;

   9910  5 002057                       OPEN_FAILED  null
   9910  5 002057                       GLINEATTR_F* null
   9910  5 002057                       CMDVAR_FAIL* null
   9910  5 002057                       UNFID_FAILED null
      940     9911                /* Didn't find context file - report the ALTRET */
      941     9912    2   OPEN_FAILED: ;
      942     9913    2   GLINEATTR_FAILED: ;
      943     9914    2   CMDVAR_FAILED: ;
      944     9915    2   UNFID_FAILED: ;
      945     9916    2           FATAL$ERR.ERR = B$TCB.ALT$->B$ALT.ERR;

   9916  5 002057   000000 470400 xsym               LDP0    B$TCB$
         5 002060   000000 471500                    LDP1    0,,PR0
         5 002061   100102 236100                    LDQ     66,,PR1
         5 002062   000031 473400 xsym               LDP3    VD_6E+25
         5 002063   300002 756100                    STQ     2,,PR3

      946     9917    2           FATAL$ERR.DCB# = B$TCB.ALT$->B$ALT.DCB#;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:104  

   9917  5 002064   000000 471500                    LDP1    0,,PR0
         5 002065   100101 720100                    LXL0    65,,PR1
         5 002066   000031 473400 xsym               LDP3    VD_6E+25
         5 002067   300004 740100                    STX0    4,,PR3

      947     9918    2           ALTRETURN;

   9918  5 002070   200124 221300                    LDX1  ! ACTUAL_ERR$+2,,AUTO
         5 002071   000000 702211                    TSX2  ! 0,X1

      948     9919
      949     9920
      950     9921
      951     9922    2   FID_FAILED:
      952     9923    2           ERR_SUBST$ = PINCRW(ADDR(FATAL$ERR), SIZEW(VD$ERR));

   9923  5 002072   000031 236000 xsym  FID_FAILED   LDQ     VD_6E+25
         5 002073   000005 036003                    ADLQ    5,DU
         5 002074   200005 756100                    STQ     ERR_SUBST$,,AUTO

      953     9924    2           FATAL$ERR.ERR.CODE# = %E$SETUP_6EDIT_NOT_FID;

   9924  5 002075   000031 470400 xsym               LDP0    VD_6E+25
         5 002076   000002 236100                    LDQ     2,,PR0
         5 002077   000005 376000 6                  ANQ     5
         5 002100   000140 276007                    ORQ     96,DL
         5 002101   000002 756100                    STQ     2,,PR0

      954     9925    2           ERR$SUBST.OBJECT.CLASS# (0) = %CLS_PTR_TEXTC;

   9925  5 002102   000045 220003                    LDX0    37,DU
         5 002103   200005 470500                    LDP0    ERR_SUBST$,,AUTO
         5 002104   000000 740100                    STX0    0,,PR0

      955     9926    2           ERR$SUBST.V$ (0) = ADDR(VD_STATIC_TEMP);

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:105  
   9926  5 002105   000033 236000 6                  LDQ     27
         5 002106   000003 756100                    STQ     3,,PR0

   9926  5 002107                       OALLOC_FAIL* null
   9926  5 002107                       OALLOC_DCB_* null
      956     9927
      957     9928
      958     9929    2   OALLOC_FAILED: ;
      959     9930    2   OALLOC_DCB_FAILED: ;
      960     9931    2           ALTRETURN;

   9931  5 002107   200124 221300                    LDX1  ! ACTUAL_ERR$+2,,AUTO
         5 002110   000000 702211                    TSX2  ! 0,X1

      961     9932
      962     9933    2   END PUSH_CONTEXT_FILE;
      963     9934
      964     9935        %BOX (TITLE=PUSH_INITIALIZE_CMDS, PAGE=YES);
              9943    2
              9947    2   /***************************************************************************
              9949    2    *                                                                         *
              9953    2            *                            PUSH_INITIALIZE_CMDS                        *
              9955    2            *                                                                        *
              9957    2          ***************************************************************************/

      965     9961
      966     9962        /*I* NAME: PUSH_INITIALIZE_CMDS
      967     9963            PARAMETERS:
      968     9964                NONE
      969     9965            INPUT:
      970     9966                VD_$INITIALIZE is a global VD$BUFFER containing (probably
      971     9967                    indirectly) a string expression.
      972     9968            OUTPUT:
      973     9969                Another VD$CMD_STREAM with a chain of buffers corresponding to
      974     9970                    the records defined by the string expression.
      975     9971        */
      976     9972
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:106  
      977     9973    1   PUSH_INITIALIZE_CMDS: PROC ALTRET;

   9973  5 002111   200124 741300       PUSH_INITIA* STX1  ! ACTUAL_ERR$+2,,AUTO

      978     9974
      979     9975    2   DCL BUFFER$ PTR;
      980     9976        %VD$BUFFER (NAME=RECORD, STCLASS="BASED(BUFFER$)");
      981    10034    2   DCL INDX SBIN;
      982    10035    2   DCL RET_CODE CHAR(1);
      983    10036    2   DCL CTRL_ARGS(0:%(MX_CTRL_FN_ARGS-1)) SBIN;
      984    10037
      985    10038    2           CALL VDG$OALLOC (%CLS_CMD_STREAM, BUFFER$) ALTRET (FATAL_ERR);

  10038  5 002112   200125 630500                    EPPR0   BUFFER$,,AUTO
         5 002113   200321 450500                    STP0    SINK+3,,AUTO
         5 002114   000001 236000 6                  LDQ     1
         5 002115   200320 756100                    STQ     SINK+2,,AUTO
         5 002116   200320 630500                    EPPR0   SINK+2,,AUTO
         5 002117   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 002120   000000 701000 xent               TSX1    VDG$OALLOC
         5 002121   002212 702000 5                  TSX2    FATAL_ERR

      986    10039    2           TOP$CMD_STREAM.TYPE# = %CS_BUFFER;

  10039  5 002122   000001 220003                    LDX0    1,DU
         5 002123   000026 470400 xsym               LDP0    VD_6E+22
         5 002124   000002 740100                    STX0    2,,PR0

      987    10040
      988    10041    2           VD_STATIC_TEMP.LENGTH# = VD_$INITIALIZE.FLINK$ -> RECORD.LENGTH#;

  10041  5 002125   000001 470400 xsym               LDP0    VD_$INITIALIZE+1
         5 002126   000002 236100                    LDQ     2,,PR0
         5 002127   000011 736000                    QLS     9
         5 002130   000000 552040 xsym               STBQ    VD_STATIC_TEMP,'40'O

      989    10042    2           VD_STATIC_TEMP.BYTES = VD_$INITIALIZE.FLINK$ -> RECORD.BYTES;
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:107  

  10042  5 002131   000002 221100                    LDX1    2,,PR0
         5 002132   040000 100540                    MLR     fill='040'O
         5 002133   000002 400011                    ADSC9   2,,PR0                   cn=2,n=*X1
         5 002134   000000 200777 xsym               ADSC9   VD_STATIC_TEMP           cn=1,n=511

      990    10043    2           XUE_ECB.OUT$ = ADDR(VD_STATIC_TEMP);

  10043  5 002135   000033 236000 6                  LDQ     27
         5 002136   000004 756000 xsym               STQ     XUE_ECB+4

      991    10044    2           INDX = 0;

  10044  5 002137   200126 450100                    STZ     INDX,,AUTO

      992    10045    2           BUFFER$ = PINCRW(ADDR(TOP$CMD_STREAM.RECORD$),

  10045  5 002140   200125 236100                    LDQ     BUFFER$,,AUTO
         5 002141   000001 036003                    ADLQ    1,DU
         5 002142   000022 772000                    QRL     18
         5 002143   200320 756100                    STQ     SINK+2,,AUTO
         5 002144   200125 236100                    LDQ     BUFFER$,,AUTO
         5 002145   000022 772000                    QRL     18
         5 002146   200320 136100                    SBLQ    SINK+2,,AUTO
         5 002147   000022 736000                    QLS     18
         5 002150   000025 036003                    ADLQ    21,DU
         5 002151   000026 036000 xsym               ADLQ    VD_6E+22
         5 002152   200125 756100                    STQ     BUFFER$,,AUTO

      993    10046    2             POFFW (ADDR(RECORD), ADDR(RECORD.FLINK$)));
      994    10047    3           DO UNTIL INDX >= VD_STATIC_TEMP.LENGTH#;

      995    10048    3              CALL VDE$PSTRING (, INDX, RECORD.FLINK$, RET_CODE, CTRL_ARGS)

  10048  5 002153   200130 630500                    EPPR0   CTRL_ARGS,,AUTO
         5 002154   200324 450500                    STP0    SINK+6,,AUTO
         5 002155   200127 631500                    EPPR1   RET_CODE,,AUTO
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:108  
         5 002156   200323 451500                    STP1    SINK+5,,AUTO
         5 002157   200125 236100                    LDQ     BUFFER$,,AUTO
         5 002160   000001 036003                    ADLQ    1,DU
         5 002161   200322 756100                    STQ     SINK+4,,AUTO
         5 002162   200126 633500                    EPPR3   INDX,,AUTO
         5 002163   200321 453500                    STP3    SINK+3,,AUTO
         5 002164   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 002165   200320 756100                    STQ     SINK+2,,AUTO
         5 002166   200320 630500                    EPPR0   SINK+2,,AUTO
         5 002167   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 002170   000000 701000 xent               TSX1    VDE$PSTRING
         5 002171   002212 702000 5                  TSX2    FATAL_ERR

      996    10049    3                ALTRET (FATAL_ERR);
      997    10050    4              IF RET_CODE ~= %CHR_SPACE AND RET_CODE ~= %FNID_RECORD THEN DO;

  10050  5 002172   200127 236100                    LDQ     RET_CODE,,AUTO
         5 002173   777000 376003                    ANQ     -512,DU
         5 002174   040000 116003                    CMPQ    16384,DU
         5 002175   002214 600000 5                  TZE     s:10055
         5 002176   200127 236100                    LDQ     RET_CODE,,AUTO
         5 002177   777000 376003                    ANQ     -512,DU
         5 002200   122000 116003                    CMPQ    41984,DU
         5 002201   002214 600000 5                  TZE     s:10055

      998    10051    4                 CALL VDG$ERRMSG (%E$BAD_CTRLFN_IN_INITIALIZE);

  10051  5 002202   000045 630400 6                  EPPR0   37
         5 002203   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 002204   000000 701000 xent               TSX1    VDG$ERRMSG
         5 002205   000000 011000                    NOP     0

      999    10052    4                 CALL VDG$OFREE (VD_6E.CMD_STREAM$);

  10052  5 002206   000046 630400 6                  EPPR0   38
         5 002207   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 002210   000000 701000 xent               TSX1    VDG$OFREE
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:109  
         5 002211   000000 011000                    NOP     0

     1000    10053    4   FATAL_ERR:    ALTRETURN;

  10053  5 002212   200124 221300       FATAL_ERR    LDX1  ! ACTUAL_ERR$+2,,AUTO
         5 002213   000000 702211                    TSX2  ! 0,X1

     1001    10054    4                 END;
     1002    10055    3              IF RECORD.FLINK$ ~= ADDR(NIL) THEN

  10055  5 002214   200125 470500                    LDP0    BUFFER$,,AUTO
         5 002215   000001 236100                    LDQ     1,,PR0
         5 002216   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 002217   002221 600000 5                  TZE     s:10057

     1003    10056    3                 BUFFER$ = RECORD.FLINK$;

  10056  5 002220   200125 756100                    STQ     BUFFER$,,AUTO

     1004    10057    3              END;

  10057  5 002221   000000 236000 xsym               LDQ     VD_STATIC_TEMP
         5 002222   000033 772000                    QRL     27
         5 002223   200126 116100                    CMPQ    INDX,,AUTO
         5 002224   002153 605400 5                  TPNZ    s:10048

     1005    10058    2   END PUSH_INITIALIZE_CMDS;

  10058  5 002225   200124 221300                    LDX1  ! ACTUAL_ERR$+2,,AUTO
         5 002226   000001 702211                    TSX2  ! 1,X1

     1006    10059    1   END VDG$MAIN;

  10059  5 002227   000000 702200 xent               TSX2  ! X66_ARET
     1007    10060        %EOD;

PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:110  
--  Include file information  --

   B$TABLES_C.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   XUE_MACRO_C.:LIBRARY  is referenced.
   B_ERRORS_C.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDG$MAIN.
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:111  

 **** Variables and constants ****

  ****  Section 003 RoData VDG$MAIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   162-0-0/c STRC(108)   r     1 CMDVAR_NAME              122-0-0/w STRC(324)   r     1 COMMAND_WINDOW_LOC
   144-0-0/d STRC(504)   r     1 CONST_FPT_CMDVAR         166-0-0/d STRC(864)   r     1 CONST_FPT_FID
   216-0-0/d STRC(792)   r     1 CONST_FPT_UNFID            0-0-0/d STRC(2088)  r     1 CONST_TEST_OPEN
   104-0-0/d STRC(144)   r     1 DISABLE_BRK              100-0-0/d STRC(144)   r     1 ENABLE_BRK
   134-0-0/d STRC(288)   r     1 FPT_GLINEATTR            110-0-0/d STRC(360)   r     1 FPT_TRAP
    72-0-0/d STRC(216)   r     1 FPT_XCON

  ****  Section 004  Data  VDG$MAIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(576)   r     1 LINEATTR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   125-0-0/w PTR         r     1 @CMD_STREAM$             126-0-0/w PTR         r     1 @CMD_STREAM$
   125-0-0/w PTR         r     1 @CMD_STREAM$             125-0-0/w PTR         r     1 @DCB_TO_EDIT
   126-0-0/w PTR         r     1 @TEST_OPEN               312-0-0/w SBIN        r     1 ACCT
   122-0-0/w PTR         r     1 ACTUAL_ERR$              125-0-0/w PTR         r     1 BUFFER$
    *0-0-0/w PTR         r     1 CMD_STREAM$               *0-0-0/w PTR         r     1 CMD_STREAM$
    *0-0-0/w PTR         r     1 CMD_STREAM$              100-0-0/w PTR         r     1 CMD_WINDOW_STREAM$
   244-0-0/c CHAR(8)     r     1 CONTEXT_ACCT(0:8)
     3-0-0/w UBIN(18)    r     1 CONTEXT_DCB#             224-0-0/c STRC(288)   r     1 CONTEXT_NAME
   266-0-0/c STRC(72)    r     1 CONTEXT_PASS             270-0-0/d STRC(90)    r     1 CONTEXT_SN
   104-0-0/w PTR         r     1 CONTEXT_STREAM$          274-0-0/c STRC(72)    r     1 CONTEXT_WSN
   130-0-0/w SBIN        r     1 CTRL_ARGS(0:1)
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:112  
    *0-0-0/w SBIN        r     1 DCB_TO_EDIT              134-0-0/w PTR         r     1 EDIT_FILE_KEY$
     5-0-0/w PTR         r     1 ERR_SUBST$               314-0-0/w BIT         r     1 FOUND_CONTEXT_FILE
   130-0-0/d STRC(504)   r     1 FPT_CMDVAR               146-0-0/d STRC(864)   r     1 FPT_FID
   176-0-0/d STRC(792)   r     1 FPT_UNFID                106-0-0/c STRC(288)   r     1 FUNNY_TEXT
   126-0-0/w SBIN        r     1 INDX                     102-0-0/w PTR         r     1 INVOCATION_STREAM$
   126-0-0/w PTR         r     1 INVOK_BUFFER$            132-0-0/w PTR         r     1 IT_ADJUST$
   130-0-0/w PTR         r     1 IT_BLOCK_EXPR$           127-0-0/w PTR         r     1 IT_COMMAND$
   133-0-0/w PTR         r     1 IT_OPERAND$              131-0-0/w PTR         r     1 IT_SELECT$
   315-0-0/w SBIN        r     1 LAST_NON_BLANK           105-0-0/w STRC(9)     r     1 LOAD_FLAGS
   313-0-0/w SBIN        r     1 MAXACCT                  103-0-0/w PTR         r     1 MFILE_STREAM$
   234-0-0/c STRC(288)   r     1 PROFILED_NAME            277-0-0/w SBIN        r     1 PROFILE_INDEX
   127-0-0/c CHAR        r     1 RET_CODE                 316-0-0/w SBIN        r     1 SINK
   101-0-0/w PTR         r     1 SI_STREAM$               116-0-0/w BIT         r     1 SUCCESSFULLY_OPENED
   310-0-0/w CHAR(8)     r     1 TEMP_ACCT                300-0-0/c STRC(288)   r     1 TEMP_NAME
     6-0-0/d STRC(2088)  r     1 TEST_OPEN                 *0-0-0/d STRC(2088)  r     1 TEST_OPEN
   276-0-0/w SBIN        r     1 UNAME_INDEX                4-0-0/w PTR         r     1 VD_ERR$
   117-0-0/w PTR         r     1 WINDOW_SPEC$             120-0-0/w STRC(72)    r     1 WSPEC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$SR_NON_BLANK$
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 B$XL_UPPER$
     0-0-0/w STRC(144)   r     1 VD_$COMMAND                0-0-0/w ASTR(90)    r     1 VD_$CONTEXT
     0-0-0/w ASTR(90)    r     1 VD_$INITIALIZE             0-0-0/w STRC(144)   r     1 VD_$SCREEN
     0-0-0/w STRC(22644) r     1 VD_6E                      0-0-0/w PTR         r     1 VD_COMMAND_WINDOW$
     0-0-0/w SBIN        r     1 VD_EDITING_HEIGHT          0-0-0/w STRC(72)    r     1 VD_KEY_NUMERIC_BOF
     0-0-0/w STRC(324)   r     1 VD_LOC_$SCREEN             0-0-0/w SBIN        r     1 VD_OLD_$SCREEN
     0-0-0/c STRC(4608)  r     1 VD_STATIC_TEMP             0-0-0/w SBIN        r     1 VD_TOP_LINE
     0-0-0/d STRC(1008)  r     1 XUE_ECB

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:113  

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/d STRC(4608)  r     1 B$SR_NON_BLANK             0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d STRC(4608)  r     1 B$XL_UPPER                 0-0-0/w STRC(900)   r     1 CMD$STREAM
     0-0-0/w STRC(900)   r     1 CMD$STREAM                 0-0-0/w STRC(900)   r     1 CMD$STREAM
     0-0-0/w STRC(900)   r     1 CONTEXT$STREAM             0-0-0/w STRC(648)   r     1 EDIT$FILE_KEY
     0-0-0/w STRC(144)   r     1 ERR$SUBST(0:2)
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(180)   r     1 FATAL$ERR
     0-0-0/w ASTR(90)    r     1 INVOK$BUFFER               0-0-0/w STRC(216)   r     1 IT$ADJUST
     0-0-0/w STRC(1116)  r     1 IT$BLOCK_EXPR              0-0-0/w STRC(540)   r     1 IT$COMMAND
     0-0-0/w STRC(324)   r     1 IT$OPERAND                 0-0-0/w STRC(216)   r     1 IT$SELECT
     0-0-0N  NULL        r     1 M$FILE                     0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$UC                       0-0-0/w ASTR(90)    r     1 RECORD
     0-0-0/w STRC(900)   r     1 SI$STREAM                  0-0-0/w STRC(900)   r     1 TOP$CMD_STREAM
     0-0-0/c CHAR(511)   r     1 UNFID$FID                  0-0-0/w ASTR(90)    r     1 VD$BUFFER
     0-0-0/w STRC(90)    r     1 VD$BUFFER_HEADER           0-0-0/w STRC(180)   r     1 VD$ERR
     0-0-0/w STRC(1944)  r     1 VD$PORT                    0-0-0/w ASTR(9)     r     1 VD$TEXTC
     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE            0-0-0/w STRC(900)   r     1 WINDOW$SPEC
     0-0-0/w STRC(864)   r     1 WINDOWS$STREAM


   Procedure VDG$MAIN requires 1176 words for executable code.
   Procedure VDG$MAIN requires 214 words of local(AUTO) storage.
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:114  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:115  
          MINI XREF LISTING

ACCT IN PROCEDURE PUSH_CONTEXT_FILE
      9637**DCL      9858<<ASSIGN   9860>>DOUNTIL  9861>>ASSIGN   9884<<ASSIGN   9884>>ASSIGN
ACTUAL_ERR$
      6739**DCL      7638--IMP-PTR
B$ALT.CODE
      6804**DCL      6804--REDEF    6805--REDEF    6805--REDEF
B$ALT.DCB#
      6805**DCL      9917>>ASSIGN
B$ALT.ERR
      6805**DCL      7861>>ASSIGN   9916>>ASSIGN
B$ALT.ERR.CODE
      6806**DCL      9731>>IF       9869>>IF       9880>>IF
B$ALT.ERR.ERR#
      6806**DCL      6806--REDEF
B$ALT.EVID
      6805**DCL      6805--REDEF    6805--REDEF
B$JIT.ACCN
      5103**DCL      9739>>ASSIGN
B$JIT.CCARS
      5191**DCL      8127>>CALL     8131>>ASSIGN
B$JIT.CCBUF
      5191**DCL      7777>>ASSIGN   8134>>ASSIGN
B$JIT.CCDISP
      5191**DCL      7775>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      5197**DCL      5197--REDEF
B$JIT.ERR.MID
      5104**DCL      5104--REDEF
B$JIT.JRESPEAK
      5265**DCL      5266--REDEF
B$JIT.MODE
      5098**DCL      7886>>IF       9719>>IF
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:116  
B$JIT.ORIGINATOR_PORT.FROM_CR
      5374**DCL      5374--REDEF    5375--REDEF
B$JIT.PNR
      5278**DCL      5278--REDEF
B$JIT.PRFLAGS.CONTINUED
      5187**DCL      8126>>IF
B$JIT.PRFLAGS.NSSYNTAX
      5187**DCL      7774>>IF
B$JIT.PRFLAGS.SI
      5187**DCL      7820>>IF
B$JIT.TSLINE
      5372**DCL      5373--REDEF
B$JIT.UNAME
      5103**DCL      9771>>CALLBLT  9773--IF       9787>>CALLBLT
B$JIT$
      5517**DCL      5098--IMP-PTR  7774>>IF       7775>>ASSIGN   7777>>ASSIGN   7820>>IF       7886>>IF
      8126>>IF       8127>>CALL     8131>>ASSIGN   8134>>ASSIGN   9719>>IF       9739>>ASSIGN   9771>>CALLBLT
      9787>>CALLBLT
B$SR_NON_BLANK
      6000**DCL      9771>>CALLBLT  9903>>CALLBLT
B$SR_NON_BLANK$
      5999**DCL      6000--IMP-PTR  9771>>CALLBLT  9903>>CALLBLT
B$TCB.ALT$
      6800**DCL      7861>>ASSIGN   9731>>IF       9869>>IF       9880>>IF       9916>>ASSIGN   9917>>ASSIGN
B$TCB$
      5518**DCL      6800--IMP-PTR  7861>>ASSIGN   9731>>IF       9869>>IF       9880>>IF       9916>>ASSIGN
      9917>>ASSIGN
B$XL_UPPER
      6004**DCL      9767>>CALLBLT  9816>>CALLBLT
B$XL_UPPER$
      6003**DCL      6004--IMP-PTR  9767>>CALLBLT  9816>>CALLBLT
BUFFER$ IN PROCEDURE PUSH_INITIALIZE_CMDS
      9975**DCL     10001--IMP-PTR 10038<>CALL    10045<<ASSIGN  10045>>ASSIGN  10045>>ASSIGN  10048>>CALL
     10055>>IF      10056<<ASSIGN  10056>>ASSIGN
CMD$STREAM.DCB# IN PROCEDURE PUSH_CONTEXT_FILE
      9680**DCL      9891<<ASSIGN   9900>>ASSIGN
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:117  
CMD$STREAM.ECHO IN PROCEDURE PUSH_CONTEXT_FILE
      9681**DCL      9894<<ASSIGN
CMD$STREAM.TYPE# IN PROCEDURE PUSH_CONTEXT_FILE
      9679**DCL      9890<<ASSIGN
CMD$STREAM.INTREE$ IN PROCEDURE PUSH_EDIT_CMD
      8258**DCL      8648<<ASSIGN
CMD$STREAM.TYPE# IN PROCEDURE PUSH_EDIT_CMD
      8257**DCL      8645<<ASSIGN
CMD$STREAM.FILE.BYTES IN PROCEDURE PUSH_INVOK_CMD
      8057**DCL      8139<<ASSIGN
CMD$STREAM.FILE.LENGTH# IN PROCEDURE PUSH_INVOK_CMD
      8057**DCL      8138<<ASSIGN
CMD$STREAM.RECORD$ IN PROCEDURE PUSH_INVOK_CMD
      8058**DCL      8132<<ASSIGN
CMD$STREAM.TYPE# IN PROCEDURE PUSH_INVOK_CMD
      8057**DCL      8133<<ASSIGN   8137<<ASSIGN
CMDVAR_FAILED IN PROCEDURE PUSH_CONTEXT_FILE
      9910**LABEL    9732--GOTO
CMDVAR_NAME IN PROCEDURE PUSH_CONTEXT_FILE
      9063**DCL      8923--DCLINIT
CMD_STREAM$ IN PROCEDURE PUSH_CONTEXT_FILE
      8751**DCL      8749--PROC     9653--IMP-PTR  9711<<ASSIGN   9888<>CALL     9890>>ASSIGN   9891>>ASSIGN
      9894>>ASSIGN   9900>>ASSIGN
CMD_STREAM$ IN PROCEDURE PUSH_EDIT_CMD
      8211**DCL      8208--PROC     8231--IMP-PTR  8642<>CALL     8645>>ASSIGN   8648>>ASSIGN   8698<<ASSIGN
CMD_STREAM$ IN PROCEDURE PUSH_INVOK_CMD
      8016**DCL      8014--PROC     8031--IMP-PTR  8123<>CALL     8132>>ASSIGN   8133>>ASSIGN   8137>>ASSIGN
      8138>>ASSIGN   8139>>ASSIGN   8146<<ASSIGN
CMD_WINDOW_STREAM$
      6562**DCL      7787<>CALL
COMMAND_WINDOW_LOC
      6385**DCL      7927<>CALL
CONST_FPT_CMDVAR IN PROCEDURE PUSH_CONTEXT_FILE
      8923**DCL      9726>>ASSIGN
CONST_FPT_CMDVAR.V IN PROCEDURE PUSH_CONTEXT_FILE
      8925**DCL      8923--DCLINIT
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:118  
CONST_FPT_FID IN PROCEDURE PUSH_CONTEXT_FILE
      9081**DCL      9746>>ASSIGN
CONST_FPT_FID.V IN PROCEDURE PUSH_CONTEXT_FILE
      9085**DCL      9081--DCLINIT
CONST_FPT_UNFID IN PROCEDURE PUSH_CONTEXT_FILE
      9104**DCL      9897>>ASSIGN
CONST_FPT_UNFID.V IN PROCEDURE PUSH_CONTEXT_FILE
      9108**DCL      9104--DCLINIT
CONST_TEST_OPEN
      6251**DCL      7796>>ASSIGN
CONST_TEST_OPEN.ACSVEH_
      6253**DCL      6254--REDEF
CONST_TEST_OPEN.ALTKEYS_
      6259**DCL      6260--REDEF    6260--REDEF
CONST_TEST_OPEN.HDR_
      6258**DCL      6259--REDEF
CONST_TEST_OPEN.TAB_
      6257**DCL      6258--REDEF
CONST_TEST_OPEN.UHL_
      6251**DCL      6252--REDEF    6252--REDEF
CONST_TEST_OPEN.V
      6260**DCL      6251--DCLINIT
CONST_TEST_OPEN.V.FSN#
      6291**DCL      6291--REDEF    6291--REDEF
CONST_TEST_OPEN.WSN_
      6257**DCL      6257--REDEF
CONTEXT$STREAM
      7008**DCL      7838<>CALL     7899<>CALL
CONTEXT$STREAM.DCB#
      7035**DCL      7847>>ASSIGN
CONTEXT$STREAM.FILE_TYPE
      7035**DCL      7882>>IF
CONTEXT_ACCT IN PROCEDURE PUSH_CONTEXT_FILE
      9453**DCL      9738<<ASSIGN   9739<<ASSIGN   9740<<ASSIGN   9810<<ASSIGN   9861--ASSIGN
CONTEXT_DCB#
      5515**DCL      7863>>ASSIGN   9713<>CALL     9715>>ASSIGN
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:119  
CONTEXT_NAME IN PROCEDURE PUSH_CONTEXT_FILE
      9305**DCL      9765<<ASSIGN   9805<<ASSIGN   9874--ASSIGN
CONTEXT_NAME.BYTES IN PROCEDURE PUSH_CONTEXT_FILE
      9309**DCL      9737<<ASSIGN   9767>>CALLBLT  9776>>ASSIGN   9792>>IF       9799>>CALLBLT  9816>>CALLBLT
      9824>>ASSIGN   9839>>IF       9846>>CALLBLT  9853>>ASSIGN   9855<<CALLBLT
CONTEXT_NAME.LENGTH# IN PROCEDURE PUSH_CONTEXT_FILE
      9309**DCL      9736<<ASSIGN   9767>>CALLBLT  9769>>CALLBLT  9773>>IF       9791>>IF       9801>>ASSIGN
      9816>>CALLBLT  9818>>CALLBLT  9820>>IF       9838>>IF       9848>>ASSIGN   9854<<ASSIGN   9854>>ASSIGN
CONTEXT_PASS IN PROCEDURE PUSH_CONTEXT_FILE
      9465**DCL      9752--ASSIGN   9759--ASSIGN
CONTEXT_SN IN PROCEDURE PUSH_CONTEXT_FILE
      9478**DCL      9753--ASSIGN   9760--ASSIGN
CONTEXT_STREAM$
      6566**DCL      7008--IMP-PTR  7746<<ASSIGN   7831<>CALL     7833>>IF       7838>>CALL     7839<<ASSIGN
      7844>>IF       7847>>ASSIGN   7881>>IF       7882>>IF       7899>>CALL     7900<<ASSIGN   7952>>IF
CONTEXT_WSN IN PROCEDURE PUSH_CONTEXT_FILE
      9491**DCL      9754--ASSIGN   9761--ASSIGN
CTRL_ARGS IN PROCEDURE PUSH_INITIALIZE_CMDS
     10036**DCL     10048<>CALL
DCB_TO_EDIT IN PROCEDURE PUSH_EDIT_CMD
      8210**DCL      8208--PROC     8674>>ASSIGN
DISABLE_BRK.V
      6339**DCL      6339--DCLINIT
EDIT$FILE_KEY.DCB# IN PROCEDURE PUSH_EDIT_CMD
      8636**DCL      8674<<ASSIGN
EDIT_FILE_KEY$ IN PROCEDURE PUSH_EDIT_CMD
      8220**DCL      8606--IMP-PTR  8671<>CALL     8673>>ASSIGN   8674>>ASSIGN
ENABLE_BRK
      6322**DCL      7783<>CALL
ENABLE_BRK.V
      6322**DCL      6322--DCLINIT
ERR$SUBST.OBJECT.CLASS#
      6903**DCL      9925<<ASSIGN
ERR$SUBST.V$
      6905**DCL      9926<<ASSIGN
ERR_SUBST$
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:120  
      6452**DCL      6879--IMP-PTR  9923<<ASSIGN   9925>>ASSIGN   9926>>ASSIGN
F$DCB.ACTPOS
      6775**DCL      6775--REDEF
F$DCB.AMR#
      6762**DCL      7820>>IF
F$DCB.ARS#
      6749**DCL      6749--REDEF
F$DCB.ATTR
      6768**DCL      6769--REDEF
F$DCB.BORROW
      6783**DCL      6783--REDEF    6783--REDEF    6783--REDEF
F$DCB.DCBNAME.L
      6797**DCL      6797--IMP-SIZ
F$DCB.DDEV.IC#
      6755**DCL      7801>>IF
F$DCB.EOMCHAR#
      6753**DCL      6753--REDEF
F$DCB.FLDID
      6778**DCL      6778--REDEF
F$DCB.FORM$
      6772**DCL      6772--REDEF
F$DCB.FSECT
      6788**DCL      6788--REDEF
F$DCB.FSN#
      6765**DCL      6765--REDEF    6765--REDEF    6766--REDEF
F$DCB.HEADER$
      6771**DCL      6771--REDEF
F$DCB.IXTNSIZE#
      6769**DCL      6769--REDEF
F$DCB.LASTSTA$
      6758**DCL      6758--REDEF
F$DCB.LVL
      6784**DCL      6784--REDEF
F$DCB.NAME#.C
      6759**DCL      6759--REDEF
F$DCB.NOEOF
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:121  
      6781**DCL      6781--REDEF
F$DCB.NRECS#
      6770**DCL      6770--REDEF
F$DCB.NRECX
      6789**DCL      6789--REDEF
F$DCB.OHDR
      6781**DCL      6781--REDEF
F$DCB.ORG#
      6764**DCL      6764--REDEF
F$DCB.PRECNO
      6787**DCL      6787--REDEF
F$DCB.RCSZ
      6793**DCL      6793--REDEF
F$DCB.RES#
      6760**DCL      6760--REDEF
F$DCB.SETX
      6772**DCL      6772--REDEF
F$DCB.TAB$
      6772**DCL      6772--REDEF
F$DCB.TDA
      6786**DCL      6787--REDEF
F$DCB.WSN#
      6760**DCL      6760--REDEF
FATAL$ERR
      6916**DCL      9923--ASSIGN
FATAL$ERR.DCB#
      6958**DCL      9917<<ASSIGN
FATAL$ERR.ERR
      6953**DCL      7836>>IF       9916<<ASSIGN
FATAL$ERR.ERR.CODE#
      6955**DCL      9924<<ASSIGN
FATAL_ERR
      7750**LABEL    7758--CALLALT  7764--CALLALT  7778--CALLALT  7787--CALLALT  7802--CALLALT  7814--CALLALT
      7822--CALLALT  7831--CALLALT  7837--GOTO     7838--CALLALT  7843--CALLALT  7927--CALLALT  7929--CALLALT
FATAL_ERR IN PROCEDURE PUSH_INITIALIZE_CMDS
     10053**LABEL   10038--CALLALT 10048--CALLALT
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:122  
FID_FAILED IN PROCEDURE PUSH_CONTEXT_FILE
      9923**LABEL    9757--CALLALT
FOUND_CONTEXT_FILE IN PROCEDURE PUSH_CONTEXT_FILE
      9639**DCL      9859<<ASSIGN   9860>>DOUNTIL  9866<<ASSIGN   9873>>IF       9877<<ASSIGN   9887>>IF
FPT_CMDVAR IN PROCEDURE PUSH_CONTEXT_FILE
      9124**DCL      9726<<ASSIGN   9729<>CALL
FPT_CMDVAR.V IN PROCEDURE PUSH_CONTEXT_FILE
      9126**DCL      9727--ASSIGN
FPT_CMDVAR.VALUE_ IN PROCEDURE PUSH_CONTEXT_FILE
      9124**DCL      9728<<ASSIGN
FPT_CMDVAR.V_ IN PROCEDURE PUSH_CONTEXT_FILE
      9124**DCL      9727<<ASSIGN
FPT_FID IN PROCEDURE PUSH_CONTEXT_FILE
      9141**DCL      9746<<ASSIGN   9757<>CALL
FPT_FID.ACCT_ IN PROCEDURE PUSH_CONTEXT_FILE
      9142**DCL      9751<<ASSIGN
FPT_FID.ASN_ IN PROCEDURE PUSH_CONTEXT_FILE
      9144**DCL      9755<<ASSIGN
FPT_FID.NAME_ IN PROCEDURE PUSH_CONTEXT_FILE
      9142**DCL      9750<<ASSIGN
FPT_FID.PASS_ IN PROCEDURE PUSH_CONTEXT_FILE
      9142**DCL      9752<<ASSIGN
FPT_FID.RES_ IN PROCEDURE PUSH_CONTEXT_FILE
      9144**DCL      9756<<ASSIGN
FPT_FID.SN_ IN PROCEDURE PUSH_CONTEXT_FILE
      9143**DCL      9753<<ASSIGN
FPT_FID.TEXTFID_ IN PROCEDURE PUSH_CONTEXT_FILE
      9141**DCL      9748<<ASSIGN
FPT_FID.V IN PROCEDURE PUSH_CONTEXT_FILE
      9145**DCL      9747--ASSIGN
FPT_FID.V_ IN PROCEDURE PUSH_CONTEXT_FILE
      9141**DCL      9747<<ASSIGN
FPT_FID.WSN_ IN PROCEDURE PUSH_CONTEXT_FILE
      9143**DCL      9754<<ASSIGN
FPT_GLINEATTR IN PROCEDURE PUSH_CONTEXT_FILE
      8879**DCL      9720<>CALL
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:123  
FPT_GLINEATTR.V IN PROCEDURE PUSH_CONTEXT_FILE
      8887**DCL      8881--DCLINIT
FPT_TRAP
      6358**DCL      7784<>CALL
FPT_TRAP.V
      6358**DCL      6358--DCLINIT
FPT_UNFID IN PROCEDURE PUSH_CONTEXT_FILE
      9164**DCL      9897<<ASSIGN   9901<>CALL
FPT_UNFID.TEXTFID_ IN PROCEDURE PUSH_CONTEXT_FILE
      9164**DCL      9899<<ASSIGN
FPT_UNFID.V IN PROCEDURE PUSH_CONTEXT_FILE
      9168**DCL      9898--ASSIGN
FPT_UNFID.V.DCB# IN PROCEDURE PUSH_CONTEXT_FILE
      9168**DCL      9900<<ASSIGN
FPT_UNFID.V_ IN PROCEDURE PUSH_CONTEXT_FILE
      9164**DCL      9898<<ASSIGN
FPT_XCON
      6306**DCL      7782<>CALL
FPT_XCON.V
      6307**DCL      6306--DCLINIT
FUNNY_TEXT
      6716**DCL      7778<>CALL
FUNNY_TEXT.BYTES
      6720**DCL      7775--ASSIGN   7777<<ASSIGN
FUNNY_TEXT.LENGTH#
      6720**DCL      7775<<ASSIGN
GLINEATTR_FAILED IN PROCEDURE PUSH_CONTEXT_FILE
      9910**LABEL    9720--CALLALT
INDX IN PROCEDURE PUSH_INITIALIZE_CMDS
     10034**DCL     10044<<ASSIGN  10047>>DOUNTIL 10048<>CALL
INVOCATION_STREAM$
      6564**DCL      7744<<ASSIGN   7814<>CALL
INVOK$BUFFER.BYTES IN PROCEDURE PUSH_INVOK_CMD
      8115**DCL      8134<<ASSIGN
INVOK$BUFFER.LENGTH# IN PROCEDURE PUSH_INVOK_CMD
      8113**DCL      8115--IMP-SIZ  8131<<ASSIGN   8134>>ASSIGN
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:124  
INVOK_BUFFER$ IN PROCEDURE PUSH_INVOK_CMD
      8019**DCL      8087--IMP-PTR  8127<>CALL     8131>>ASSIGN   8132>>ASSIGN   8134>>ASSIGN   8134>>ASSIGN
IT$ADJUST.MOVEMENTS$ IN PROCEDURE PUSH_EDIT_CMD
      8521**DCL      8689<<ASSIGN
IT$ADJUST.MOVEMENTS_TAIL$ IN PROCEDURE PUSH_EDIT_CMD
      8522**DCL      8690<<ASSIGN
IT$BLOCK_EXPR.DOMAINN.FILE_KEY.REP# IN PROCEDURE PUSH_EDIT_CMD
      8348**DCL      8669<<ASSIGN
IT$BLOCK_EXPR.DOMAINN.FILE_KEY.TYPE# IN PROCEDURE PUSH_EDIT_CMD
      8348**DCL      8668<<ASSIGN
IT$BLOCK_EXPR.DOMAINN.FILE_KEY.V$ IN PROCEDURE PUSH_EDIT_CMD
      8348**DCL      8673<<ASSIGN
IT$BLOCK_EXPR.DOMAINN.RANGE.ENDD.EOF IN PROCEDURE PUSH_EDIT_CMD
      8416**DCL      8662<<ASSIGN
IT$BLOCK_EXPR.DOMAINN.RANGE.START.KEY IN PROCEDURE PUSH_EDIT_CMD
      8384**DCL      8660<<ASSIGN
IT$BLOCK_EXPR.OPTIONS.COMPONENT# IN PROCEDURE PUSH_EDIT_CMD
      8431**DCL      8665<<ASSIGN
IT$BLOCK_EXPR.OPTIONS.EXIST# IN PROCEDURE PUSH_EDIT_CMD
      8432**DCL      8667<<ASSIGN
IT$BLOCK_EXPR.OPTIONS.LEVEL# IN PROCEDURE PUSH_EDIT_CMD
      8431**DCL      8664<<ASSIGN
IT$BLOCK_EXPR.OPTIONS.PROTECT# IN PROCEDURE PUSH_EDIT_CMD
      8431**DCL      8666<<ASSIGN
IT$BLOCK_EXPR.OPTIONS.STRUCTURE$ IN PROCEDURE PUSH_EDIT_CMD
      8431**DCL      8663<<ASSIGN
IT$BLOCK_EXPR.SELECTS$ IN PROCEDURE PUSH_EDIT_CMD
      8448**DCL      8678<<ASSIGN
IT$BLOCK_EXPR.SELECTS_TAIL$ IN PROCEDURE PUSH_EDIT_CMD
      8448**DCL      8679<<ASSIGN
IT$COMMAND.CODE# IN PROCEDURE PUSH_EDIT_CMD
      8296**DCL      8649<<ASSIGN
IT$COMMAND.PARAM$ IN PROCEDURE PUSH_EDIT_CMD
      8297**DCL      8653<<ASSIGN
IT$OPERAND.CODE# IN PROCEDURE PUSH_EDIT_CMD
      8558**DCL      8691<<ASSIGN
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:125  
IT$OPERAND.OPTIONS.POINT# IN PROCEDURE PUSH_EDIT_CMD
      8571**DCL      8692<<ASSIGN
IT$SELECT.ADJUSTS$ IN PROCEDURE PUSH_EDIT_CMD
      8485**DCL      8684<<ASSIGN
IT$SELECT.ADJUSTS_TAIL$ IN PROCEDURE PUSH_EDIT_CMD
      8485**DCL      8685<<ASSIGN
IT$SELECT.RPT_COUNT# IN PROCEDURE PUSH_EDIT_CMD
      8484**DCL      8680<<ASSIGN
IT_ADJUST$ IN PROCEDURE PUSH_EDIT_CMD
      8218**DCL      8495--IMP-PTR  8682<>CALL     8684>>ASSIGN   8685>>ASSIGN   8689>>ASSIGN   8690>>ASSIGN
IT_BLOCK_EXPR$ IN PROCEDURE PUSH_EDIT_CMD
      8216**DCL      8308--IMP-PTR  8651<>CALL     8653>>ASSIGN   8660>>ASSIGN   8662>>ASSIGN   8663>>ASSIGN
      8664>>ASSIGN   8665>>ASSIGN   8666>>ASSIGN   8667>>ASSIGN   8668>>ASSIGN   8669>>ASSIGN   8673>>ASSIGN
      8678>>ASSIGN   8679>>ASSIGN
IT_COMMAND$ IN PROCEDURE PUSH_EDIT_CMD
      8215**DCL      8270--IMP-PTR  8646<>CALL     8648>>ASSIGN   8649>>ASSIGN   8653>>ASSIGN
IT_OPERAND$ IN PROCEDURE PUSH_EDIT_CMD
      8219**DCL      8532--IMP-PTR  8687<>CALL     8689>>ASSIGN   8690>>ASSIGN   8691>>ASSIGN   8692>>ASSIGN
IT_SELECT$ IN PROCEDURE PUSH_EDIT_CMD
      8217**DCL      8458--IMP-PTR  8676<>CALL     8678>>ASSIGN   8679>>ASSIGN   8680>>ASSIGN   8684>>ASSIGN
      8685>>ASSIGN
LAST_NON_BLANK IN PROCEDURE PUSH_CONTEXT_FILE
      9640**DCL      9771<<CALLBLT  9773>>IF       9789>>ASSIGN   9903<<CALLBLT  9905>>ASSIGN
LINEATTR IN PROCEDURE PUSH_CONTEXT_FILE
      8905**DCL      8885--DCLINIT
LINEATTR.PROFILE# IN PROCEDURE PUSH_CONTEXT_FILE
      8907**DCL      8907--REDEF
LINEATTR.PROTXTC.CNT IN PROCEDURE PUSH_CONTEXT_FILE
      8907**DCL      9724<<ASSIGN   9834>>CALLBLT  9836>>ASSIGN
LINEATTR.PROTXTC.TXT IN PROCEDURE PUSH_CONTEXT_FILE
      8908**DCL      9834>>CALLBLT
LOAD_FLAGS
      6567**DCL      7883<<ASSIGN   7893<>CALL
LOAD_FLAGS.F
      6579**DCL      7884<<ASSIGN   7887<<ASSIGN   7888<<ASSIGN   7889<<ASSIGN   7891<<ASSIGN
M$CMDVAR
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:126  
       221**DCL-ENT  9729--CALL
M$FID
       215**DCL-ENT  9757--CALL
M$FILE
      5513**DCL      7820--IF       7822<>CALL
M$GLINEATTR
       177**DCL-ENT  9720--CALL
M$INT
       207**DCL-ENT  7783--CALL
M$OPEN
       152**DCL-ENT  7799--CALL     9864--CALL     9875--CALL
M$SI
      5512**DCL      7798>>ASSIGN
M$TRAP
       206**DCL-ENT  7784--CALL
M$UNFID
       215**DCL-ENT  9901--CALL
M$XCON
       207**DCL-ENT  7782--CALL
MAXACCT IN PROCEDURE PUSH_CONTEXT_FILE
      9638**DCL      9741<<ASSIGN   9811<<ASSIGN   9860>>DOUNTIL
MFILE_STREAM$
      6565**DCL      7745<<ASSIGN   7822<>CALL
OALLOC_FAILED IN PROCEDURE PUSH_CONTEXT_FILE
      9926**LABEL    9888--CALLALT
OALLOC_FAILED IN PROCEDURE PUSH_EDIT_CMD
      8698**LABEL    8642--CALLALT  8646--CALLALT  8651--CALLALT  8671--CALLALT  8676--CALLALT  8682--CALLALT
      8687--CALLALT
OALLOC_FAILED IN PROCEDURE PUSH_INVOK_CMD
      8132**LABEL    8123--CALLALT  8127--CALLALT
OPEN_FAILED IN PROCEDURE PUSH_CONTEXT_FILE
      9910**LABEL    9870--GOTO     9881--GOTO
PROFILED_NAME IN PROCEDURE PUSH_CONTEXT_FILE
      9446**DCL      9863--ASSIGN
PROFILED_NAME.BYTES IN PROCEDURE PUSH_CONTEXT_FILE
      9450**DCL      9824<<ASSIGN   9826>>IF       9828<<CALLBLT  9830--ASSIGN   9834<<CALLBLT  9836--ASSIGN
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:127  
      9841<<CALLBLT  9843--ASSIGN   9846<<CALLBLT  9848--ASSIGN
PROFILED_NAME.LENGTH# IN PROCEDURE PUSH_CONTEXT_FILE
      9450**DCL      9815<<ASSIGN   9823<<ASSIGN   9826>>IF       9828>>CALLBLT  9830<<ASSIGN   9830>>ASSIGN
      9834>>CALLBLT  9836<<ASSIGN   9836>>ASSIGN   9841>>CALLBLT  9843<<ASSIGN   9843>>ASSIGN   9846>>CALLBLT
      9848<<ASSIGN   9848>>ASSIGN   9862>>IF
PROFILE_INDEX IN PROCEDURE PUSH_CONTEXT_FILE
      9494**DCL      9818<<CALLBLT  9820>>IF       9822>>IF       9823>>ASSIGN   9824>>ASSIGN   9838>>IF
      9839>>IF       9846>>CALLBLT  9848>>ASSIGN   9853>>ASSIGN   9855>>CALLBLT
PUSH_CONTEXT_FILE
      8749**PROC     7831--CALL
PUSH_EDIT_CMD
      8208**PROC     7822--CALL
PUSH_INITIALIZE_CMDS
      9973**PROC     7903--CALL
PUSH_INVOK_CMD
      8014**PROC     7814--CALL
RECORD IN PROCEDURE PUSH_INITIALIZE_CMDS
     10001**DCL     10045--ASSIGN
RECORD.BYTES IN PROCEDURE PUSH_INITIALIZE_CMDS
     10029**DCL     10042>>ASSIGN
RECORD.FLINK$ IN PROCEDURE PUSH_INITIALIZE_CMDS
     10027**DCL     10045--ASSIGN  10048<>CALL    10055>>IF      10056>>ASSIGN
RECORD.LENGTH# IN PROCEDURE PUSH_INITIALIZE_CMDS
     10027**DCL     10029--IMP-SIZ 10041>>ASSIGN  10042>>ASSIGN
RET_CODE IN PROCEDURE PUSH_INITIALIZE_CMDS
     10035**DCL     10048<>CALL    10050>>IF      10050>>IF
SI$STREAM.DCB#
      6996**DCL      7805<<ASSIGN
SI$STREAM.ECHO
      6997**DCL      7806<<ASSIGN
SI$STREAM.TYPE#
      6995**DCL      7804<<ASSIGN
SINK IN PROCEDURE PUSH_CONTEXT_FILE
      9641**DCL      9771<<CALLBLT  9903<<CALLBLT
SI_STREAM$
      6563**DCL      6969--IMP-PTR  7743<<ASSIGN   7802<>CALL     7804>>ASSIGN   7805>>ASSIGN   7806>>ASSIGN
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:128  
SUCCESSFULLY_OPENED
      6723**DCL      7953>>DOUNTIL  7954<<ASSIGN   7961<<ASSIGN
TEMP_ACCT IN PROCEDURE PUSH_CONTEXT_FILE
      9636**DCL      9751--ASSIGN   9809>>IF       9810>>ASSIGN
TEMP_NAME IN PROCEDURE PUSH_CONTEXT_FILE
      9629**DCL      9750--ASSIGN   9765>>ASSIGN   9805>>ASSIGN
TEMP_NAME.BYTES IN PROCEDURE PUSH_CONTEXT_FILE
      9633**DCL      9776<<ASSIGN   9779>>IF       9781<<CALLBLT  9783--ASSIGN   9787<<CALLBLT  9789--ASSIGN
      9794<<CALLBLT  9796--ASSIGN   9799<<CALLBLT  9801--ASSIGN   9853<<ASSIGN   9855>>CALLBLT
TEMP_NAME.LENGTH# IN PROCEDURE PUSH_CONTEXT_FILE
      9633**DCL      9763>>IF       9778<<ASSIGN   9779>>IF       9781>>CALLBLT  9783<<ASSIGN   9783>>ASSIGN
      9787>>CALLBLT  9789<<ASSIGN   9789>>ASSIGN   9794>>CALLBLT  9796<<ASSIGN   9796>>ASSIGN   9799>>CALLBLT
      9801<<ASSIGN   9801>>ASSIGN
TEST_OPEN
      6518**DCL      7796<<ASSIGN   7799<>CALL     7831<>CALL
TEST_OPEN.ACSVEH_
      6520**DCL      6521--REDEF
TEST_OPEN.ALTKEYS_
      6526**DCL      6527--REDEF    6527--REDEF
TEST_OPEN.HDR_
      6525**DCL      6526--REDEF
TEST_OPEN.TAB_
      6524**DCL      6525--REDEF
TEST_OPEN.UHL_
      6518**DCL      6519--REDEF    6519--REDEF
TEST_OPEN.V
      6527**DCL      7797--ASSIGN
TEST_OPEN.V.DCB#
      6527**DCL      7798<<ASSIGN   7801--IF       7805>>ASSIGN
TEST_OPEN.V.FSN#
      6558**DCL      6558--REDEF    6558--REDEF
TEST_OPEN.V_
      6518**DCL      7797<<ASSIGN
TEST_OPEN.WSN_
      6524**DCL      6524--REDEF
TEST_OPEN IN PROCEDURE PUSH_CONTEXT_FILE
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:129  
      8817**DCL      8749--PROC     9864<>CALL     9875<>CALL
TEST_OPEN.ACCT_ IN PROCEDURE PUSH_CONTEXT_FILE
      8821**DCL      9861<<ASSIGN
TEST_OPEN.ACSVEH_ IN PROCEDURE PUSH_CONTEXT_FILE
      8819**DCL      8820--REDEF
TEST_OPEN.ALTKEYS_ IN PROCEDURE PUSH_CONTEXT_FILE
      8825**DCL      8826--REDEF    8826--REDEF
TEST_OPEN.HDR_ IN PROCEDURE PUSH_CONTEXT_FILE
      8824**DCL      8825--REDEF
TEST_OPEN.NAME_ IN PROCEDURE PUSH_CONTEXT_FILE
      8818**DCL      9863<<ASSIGN   9874<<ASSIGN
TEST_OPEN.PASS_ IN PROCEDURE PUSH_CONTEXT_FILE
      8819**DCL      9759<<ASSIGN
TEST_OPEN.SN_ IN PROCEDURE PUSH_CONTEXT_FILE
      8817**DCL      9760<<ASSIGN
TEST_OPEN.TAB_ IN PROCEDURE PUSH_CONTEXT_FILE
      8823**DCL      8824--REDEF
TEST_OPEN.UHL_ IN PROCEDURE PUSH_CONTEXT_FILE
      8817**DCL      8818--REDEF    8818--REDEF
TEST_OPEN.V.ASN# IN PROCEDURE PUSH_CONTEXT_FILE
      8836**DCL      9716<<ASSIGN   9755--ASSIGN
TEST_OPEN.V.DCB# IN PROCEDURE PUSH_CONTEXT_FILE
      8826**DCL      9715<<ASSIGN   9891>>ASSIGN   9892<<ASSIGN
TEST_OPEN.V.FSN# IN PROCEDURE PUSH_CONTEXT_FILE
      8857**DCL      8857--REDEF    8857--REDEF
TEST_OPEN.V.INITZ.SCRUB# IN PROCEDURE PUSH_CONTEXT_FILE
      8827**DCL      9717<<ASSIGN
TEST_OPEN.V.RES# IN PROCEDURE PUSH_CONTEXT_FILE
      8841**DCL      9756--ASSIGN
TEST_OPEN.WSN_ IN PROCEDURE PUSH_CONTEXT_FILE
      8823**DCL      8823--REDEF    9761<<ASSIGN
TOP$CMD_STREAM
      7047**DCL      7959<>CALL
TOP$CMD_STREAM.RECORD$
      7074**DCL     10045--ASSIGN
TOP$CMD_STREAM.TYPE#
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:130  
      7073**DCL      7789<<ASSIGN   7955>>IF       7955>>IF      10039<<ASSIGN
UNAME_INDEX IN PROCEDURE PUSH_CONTEXT_FILE
      9493**DCL      9769<<CALLBLT  9773>>IF       9775>>IF       9776>>ASSIGN   9778>>ASSIGN   9791>>IF
      9792>>IF       9799>>CALLBLT  9801>>ASSIGN
UNFID$FID IN PROCEDURE PUSH_CONTEXT_FILE
      9684**DCL      9903>>CALLBLT  9907>>ASSIGN
UNFID_FAILED IN PROCEDURE PUSH_CONTEXT_FILE
      9910**LABEL    9901--CALLALT
VD$BUFFER.BYTES
      7437**DCL      9907<<ASSIGN
VD$BUFFER.LENGTH#
      7435**DCL      7437--IMP-SIZ  9906<<ASSIGN   9907>>ASSIGN
VD$BUFFER_HEADER
      7356**DCL      8127--CALL
VD$ERR
      6818**DCL      9923--ASSIGN
VD$ERR.DCB#
      6860**DCL      7847<<ASSIGN   7863<<ASSIGN
VD$ERR.ERR
      6855**DCL      7861<<ASSIGN
VD$ERR.ERR.CODE#
      6857**DCL      7845<<ASSIGN
VD$ERR.FLAGLEV#
      6860**DCL      7750<<ASSIGN   7846<<ASSIGN   7862<<ASSIGN
VD$PORT
      7258**DCL      7929<>CALL
VD$PORT.LEVEL.INTERNAL$
      7345**DCL      7932>>ASSIGN
VD$TEXTC.LENGTH# IN PROCEDURE PUSH_CONTEXT_FILE
      9701**DCL      9703--IMP-SIZ
VD$TEXTC_REMOTE.LENGTH#
      7532**DCL      7534--IMP-SIZ
VDA$LWRITE
      5495**DCL-ENT  7927--CALL
VDA$PFLUSH
      5496**DCL-ENT  7929--CALL
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:131  
VDE$PSTRING
      5497**DCL-ENT 10048--CALL
VDG$EBREAK
      5503**DCL-ENT  6322--DCLINIT
VDG$EREPORT_ERROR
      5505**DCL-ENT  7751--CALL     7918--CALL     7942--CALL     7960--CALL
VDG$ERRMSG
      5498**DCL-ENT  7778--CALL    10051--CALL
VDG$ETRAP
      5504**DCL-ENT  6359--DCLINIT  6360--DCLINIT
VDG$EXCON
      5502**DCL-ENT  6307--DCLINIT
VDG$MINIT
      5489**DCL-ENT  7748--CALL
VDG$OALLOC
      5507**DCL-ENT  7787--CALL     7802--CALL     7843--CALL     7916--CALL     8123--CALL     8127--CALL
      8642--CALL     8646--CALL     8651--CALL     8671--CALL     8676--CALL     8682--CALL     8687--CALL
      9888--CALL    10038--CALL
VDG$OALLOC_DCB
      5508**DCL-ENT  9713--CALL
VDG$OFREE
      5509**DCL-ENT  7838--CALL     7899--CALL     7959--CALL    10052--CALL
VDG$WINIT
      5491**DCL-ENT  7764--CALL
VDI$CSET_COUNT
      5499**DCL-ENT  7872--CALL
VDI$PREAD_FILE_CLOSE
      5494**DCL-ENT  7898--CALL
VDI$PREAD_FILE_OPEN
      5492**DCL-ENT  7834--CALL     7957--CALL
VDP$WINIT
      5490**DCL-ENT  7758--CALL
VDW$LOAD
      5500**DCL-ENT  7893--CALL
VD_$COMMAND.V#
      5659**DCL      7873<<ASSIGN
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:132  
VD_$CONTEXT.FLINK$
      5609**DCL      9906>>ASSIGN   9907>>ASSIGN   9907>>ASSIGN
VD_$CONTEXT.LENGTH#
      5609**DCL      5611--IMP-SIZ  9905<<ASSIGN   9906>>ASSIGN   9907>>ASSIGN
VD_$INITIALIZE.FLINK$
      5789**DCL     10041>>ASSIGN  10042>>ASSIGN  10042>>ASSIGN
VD_$INITIALIZE.LENGTH#
      5789**DCL      5791--IMP-SIZ  7902>>IF
VD_$SCREEN.V#
      5704**DCL      7870>>ASSIGN
VD_6E.CMD_STREAM$
      5550**DCL      7047--IMP-PTR  7789>>ASSIGN   7955>>IF       7955>>IF       7959>>CALL    10039>>ASSIGN
     10045>>ASSIGN  10052<>CALL
VD_6E.ERR_HEAD$
      5551**DCL      6916--IMP-PTR  7539--IMP-PTR  7836>>IF       7941>>IF       9916>>ASSIGN   9917>>ASSIGN
      9923>>ASSIGN   9924>>ASSIGN
VD_6E.ERR_TAIL$
      5551**DCL      7750>>ASSIGN   7941>>IF
VD_6E.STRUCTURE_EXTERNAL$
      5533**DCL      8663>>ASSIGN
VD_6E.WINDOWS$
      5533**DCL      7086--IMP-PTR  7740<<ASSIGN   7927>>CALL     7929>>CALL     7932>>ASSIGN
VD_COMMAND_WINDOW$
      5555**DCL      7741<<ASSIGN   7906>>IF       7932<<ASSIGN
VD_EDITING_HEIGHT
      5707**DCL      7922>>ASSIGN
VD_ERR$
      6451**DCL      6818--IMP-PTR  7843<>CALL     7845>>ASSIGN   7846>>ASSIGN   7847>>ASSIGN   7861>>ASSIGN
      7862>>ASSIGN   7863>>ASSIGN
VD_KEY_NUMERIC_BOF
      6017**DCL      8660>>ASSIGN
VD_LOC_$SCREEN
      5718**DCL      7872<>CALL
VD_OLD_$SCREEN
      5709**DCL      7870<<ASSIGN   7871>>IF
VD_STATIC_TEMP
PL6.E3A0      #001=VDG$MAIN File=VDG$MAIN.:VDA5TSI                               FRI 07/04/97 11:18 Page:133  
      6176**DCL      9728--ASSIGN   9899--ASSIGN   9903--CALLBLT  9907--ASSIGN   9926--ASSIGN  10043--ASSIGN
VD_STATIC_TEMP.BYTES
      6180**DCL      9748--ASSIGN   9767<<CALLBLT  9769>>CALLBLT  9816<<CALLBLT  9818>>CALLBLT 10042<<ASSIGN
VD_STATIC_TEMP.LENGTH#
      6180**DCL      9733<<ASSIGN   9743>>IF       9748>>ASSIGN  10041<<ASSIGN  10047>>DOUNTIL
VD_TOP_LINE
      5708**DCL      7921>>ASSIGN
WINDOW$SPEC.COMMAND
      7218**DCL      7920<<ASSIGN
WINDOW$SPEC.COORDS.HEIGHT#
      7219**DCL      7922<<ASSIGN
WINDOW$SPEC.COORDS.LINE#
      7218**DCL      7921<<ASSIGN
WINDOWS$STREAM
      7086**DCL      7927<>CALL
WINDOWS$STREAM.PORT$
      7112**DCL      7929>>CALL     7932>>ASSIGN
WINDOW_SPEC$
      6724**DCL      7192--IMP-PTR  7916<>CALL     7920>>ASSIGN   7921>>ASSIGN   7922>>ASSIGN   7926>>ASSIGN
WSPEC
      6733**DCL      7923<<ASSIGN   7927<>CALL
WSPEC.REP#
      6737**DCL      7925<<ASSIGN
WSPEC.TYPE#
      6737**DCL      7924<<ASSIGN
WSPEC.V$
      6737**DCL      7926<<ASSIGN
XUE_ECB.OUT$
      5842**DCL     10043<<ASSIGN

PL6.E3A0      #002=VDG$START File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:134  
     1008        1        /*T***********************************************************/
     1009        2        /*T*                                                         */
     1010        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1011        4        /*T*                                                         */
     1012        5        /*T***********************************************************/
     1013        6        /*D* NAME: VDG$START
     1014        7             DESCRIPTION:
     1015        8                Main entry point for 6edit so that the VDG$MAIN auto can be reused.
     1016        9        */
     1017       10        VDG$START: PROC MAIN;
     1018       11
     1019       12    1   DCL VDG$MAIN            ENTRY;
     1020       13    1   DCL VDG$MTERMINATE      ENTRY;
     1021       14    1   DCL VDI$PDRIVER         ENTRY ALTRET;
     1022       15
     1023       16    1           CALL VDG$MAIN;
     1024       17                /*
     1025       18                *   Begin processing commands.
     1026       19                */
     1027       20
     1028       21    1           CALL VDI$PDRIVER;
     1029       22
     1030       23    1           CALL VDG$MTERMINATE; /* We'll never come back from this */
     1031       24
     1032       25    1   END VDG$START;
     1033       26        %EOD;

PL6.E3A0      #002=VDG$START File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:135  
--  Include file information  --

   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$START.

   Procedure VDG$START requires 12 words for executable code.
   Procedure VDG$START requires 4 words of local(AUTO) storage.

PL6.E3A0      #002=VDG$START File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:136  

 Object Unit name= VDG$START                                  File name= VDG$MAIN.:VDA5TOU
 UTS= JUL 04 '97 11:19:23.00 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    12     14  VDG$START

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Main       0  VDG$START

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 VDG$MAIN
 yes     yes           Std       0 VDI$PDRIVER
         yes           Std       0 VDG$MTERMINATE
                       nStd      0 X66_MAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_MARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #002=VDG$START File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:137  


     1008        1        /*T***********************************************************/
     1009        2        /*T*                                                         */
     1010        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1011        4        /*T*                                                         */
     1012        5        /*T***********************************************************/
     1013        6        /*D* NAME: VDG$START
     1014        7             DESCRIPTION:
     1015        8                Main entry point for 6edit so that the VDG$MAIN auto can be reused.
     1016        9        */
     1017       10        VDG$START: PROC MAIN;

     10  0 000000   000000 700200 xent  VDG$START    TSX0  ! X66_MAUTO
         0 000001   000004 000000                    ZERO    4,0

     1018       11
     1019       12    1   DCL VDG$MAIN            ENTRY;
     1020       13    1   DCL VDG$MTERMINATE      ENTRY;
     1021       14    1   DCL VDI$PDRIVER         ENTRY ALTRET;
     1022       15
     1023       16    1           CALL VDG$MAIN;

     16  0 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000003   000000 701000 xent               TSX1    VDG$MAIN
         0 000004   000000 011000                    NOP     0

     1024       17                /*
     1025       18                *   Begin processing commands.
     1026       19                */
     1027       20
     1028       21    1           CALL VDI$PDRIVER;

     21  0 000005   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000006   000000 701000 xent               TSX1    VDI$PDRIVER
         0 000007   000000 011000                    NOP     0

     1029       22
PL6.E3A0      #002=VDG$START File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:138  
     1030       23    1           CALL VDG$MTERMINATE; /* We'll never come back from this */

     23  0 000010   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000011   000000 701000 xent               TSX1    VDG$MTERMINATE
         0 000012   000000 011000                    NOP     0

     1031       24
     1032       25    1   END VDG$START;

     25  0 000013   000000 702200 xent               TSX2  ! X66_MARET
     1033       26        %EOD;

PL6.E3A0      #002=VDG$START File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:139  
--  Include file information  --

   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDG$START.
PL6.E3A0      #002=VDG$START File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:140  

 **** Variables and constants ****


   Procedure VDG$START requires 12 words for executable code.
   Procedure VDG$START requires 4 words of local(AUTO) storage.
PL6.E3A0      #002=VDG$START File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:141  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VDG$START File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:142  
          MINI XREF LISTING

VDG$MAIN
        12**DCL-ENT    16--CALL
VDG$MTERMINATE
        13**DCL-ENT    23--CALL
VDI$PDRIVER
        14**DCL-ENT    21--CALL

PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:143  
     1034        1        /*T***********************************************************/
     1035        2        /*T*                                                         */
     1036        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1037        4        /*T*                                                         */
     1038        5        /*T***********************************************************/
     1039        6
     1040        7        /*D* NAME: VDG$MINIT
     1041        8            PARAMETERS:
     1042        9                None.
     1043       10            INPUT:
     1044       11                None.
     1045       12            OUTPUT:
     1046       13                All global static data in the Int'r's domain will be
     1047       14                    initialized.
     1048       15                VD_6E.WS.INTERNAL_DIR$ will point to a chain of VD$DIR_NODEs,
     1049       16                    one for each internal directory.
     1050       17                VD_6E.HISTORY$, .EQUALS$, .LOCATIONS$, .SYNONYMS, .KEYINS$,
     1051       18                    and .WINDOWS$ will point to closed VD$STREAMs.
     1052       19            DESCRIPTION:
     1053       20                Initialize all static global data.
     1054       21                Create the directory of internal files (empty initially).
     1055       22                Allocate Streams for all predefined files (no Ports, tho).
     1056       23        */
     1057       24
     1058       25        VDG$MINIT: PROC ALTRET;
     1059       26
     1060       27        %INCLUDE CP_6;
     1061      108        %INCLUDE NK_VFC_C;
     1062      182        %INCLUDE VD_MACROS_M;
     1063     2397        %INCLUDE VD_NODES0_E;
     1064     2489        %INCLUDE VD_PERR_C;
     1065     2637        %INCLUDE XU_MACRO_C;
     1066     5731        %INCLUDE XUM_MACRO_C;
     1067     5758        %INCLUDE XUH_MACRO_C;
     1068     5842        %INCLUDE XUE_MACRO_C;
     1069     6586        %INCLUDE XUG_ENTRY;
     1070     6617
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:144  
     1071     6618
     1072     6619    1   DCL VDI$PFIX_WINDOWS              ENTRY ALTRET;
     1073     6620    1   DCL VDI$PUSER_PARSE_RTN         ENTRY (1);
     1074     6621    1   DCL VDI$PGET_COMMAND_RECORD     ENTRY (5) ALTRET;
     1075     6622    1   DCL VDI$PGLOBAL_COMMANDS        ENTRY (2) ALTRET;
     1076     6623    1   DCL VDE$PREAD_NAME_FOR_EVAL     ENTRY (1) ALTRET;
     1077     6624    1   DCL VDE$PFUNCTIONS              ENTRY (1) ALTRET;
     1078     6625    1   DCL VDG$OALLOC                  ENTRY (3) ALTRET;
     1079     6626
     1080     6627    1   DCL VDA$RNAMES                  ENTRY (1) ALTRET;
     1081     6628    1   DCL VDA$WNAMES                  ENTRY (4) ALTRET;
     1082     6629    1   DCL VDA$WWINDOWS                ENTRY (4) ALTRET;
     1083     6630
     1084     6631
     1085     6632    1   DCL M$ME DCB;
     1086     6633    1   DCL M$DO DCB;
     1087     6634    1   DCL M$LO DCB;
     1088     6635    1   DCL M$EW DCB;
     1089     6636    1   DCL M$LM DCB;
     1090     6637
     1091     6638
     1092     6639
     1093     6640    1   DCL VD_COMMAND_LINE SBIN SYMREF;    /* 6Edit command parse nodes */
     1094     6641
     1095     6642
     1096     6643        %BOX (TITLE="Static globals");

              6655    1   /***************************************************************************
              6657    1    *                                                                         *
              6661    1            *                               Static globals                            *
              6663    1            *                                                                         *
              6665    1           ***************************************************************************/

     1097     6669
     1098     6670        %VD_6E (NAME=VD_6E, STCLASS="STATIC SYMDEF");
     1099     6706
     1100     6707        %VD$DCBS (NAME=VD_DCBS, STCLASS="STATIC SYMDEF");
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:145  
     1101     6722
     1102     6723    1   DCL VD_UTS_START UBIN STATIC SYMDEF INIT(0);
     1103     6724
     1104     6725    1   DCL VD_WORST_FLAGLEV UBIN STATIC SYMDEF INIT(0);
     1105     6726
     1106     6727    1   DCL VD_LAST_CWIN_ACTIVITY UBIN STATIC SYMDEF INIT(0);
     1107     6728
     1108     6729    1   DCL VD_FORCE_READ_FROM UBIN STATIC SYMDEF INIT(%RF_DONT_CARE);
     1109     6730
     1110     6731    1   DCL VD_EOF_DELETED BIT(36) STATIC SYMDEF INIT('0'B);
     1111     6732
     1112     6733        /*
     1113     6734        *   Dimensions of the UC (user-domain) window we're given at start-up.
     1114     6735        *   If:
     1115     6736        *       VD_SCREEN_HEIGHT < %MN_SCREEN_EDITING_HEIGHT:  we can't screen-edit
     1116     6737        *           on this terminal, or we're running in batch, ghost, or TP mode.
     1117     6738        *           We will still have nodes in the Windows file for the command
     1118     6739        *           window and (usually only 1) editing window, but the FEP won't
     1119     6740        *           know these things as windows.
     1120     6741        *       VD_SCREEN_HEIGHT >= %MN_SCREEN_EDITING_HEIGHT:  we can screen-edit.
     1121     6742        *           We'll have DCBs open to FEP windows for all nodes in the Windows
     1122     6743        *           file.
     1123     6744        *   Note VD_SCREEN_HEIGHT just says if it's possible to screen-edit
     1124     6745        *       or not; the user can tell us that s/he doesn't WANT to
     1125     6746        *       screen-edit by setting the $SCREEN predefined name to a value
     1126     6747        *       < %MN_SCREEN_EDITING_HEIGHT.
     1127     6748        *N* Following paragraph has been de-implemented due to star 25801:
     1128     6749        *N*   Note VD_$SCREEN.V# just says if the user wants to screen-edit or not;
     1129     6750        *N*       6Edit will actually go "2-dimensional" only when there's at least
     1130     6751        *N*       one editing window open.  VD_2DIM determines whether we're actually
     1131     6752        *N*       screen editing (VD_2DIM = %TRUE) or either (1) the user told us not
     1132     6753        *N*       to screen edit, or (2) we can't screen edit, or (3) we're waiting til
     1133     6754        *N*       the first editing window is opened before we screen edit.
     1134     6755        */
     1135     6756    1   DCL VD_SCREEN_HEIGHT SBIN STATIC SYMDEF INIT(0);
     1136     6757    1   DCL VD_SCREEN_WIDTH SBIN STATIC SYMDEF INIT(0);
     1137     6758    1   DCL VD_2DIM BIT(1) ALIGNED STATIC SYMDEF INIT(%FALSE);
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:146  
     1138     6759    1   DCL VD_EDITING_WINDOWS SBIN STATIC SYMDEF INIT(0);
     1139     6760    1   DCL VD_EDITING_HEIGHT SBIN STATIC SYMDEF INIT(0);
     1140     6761    1   DCL VD_OLD_$SCREEN SBIN STATIC SYMDEF INIT(0);
     1141     6762
     1142     6763        /* Original terminal parameters before 6Edit was started */
     1143     6764        %VLP_TRMCTL (FPTN=VD_ORIGINAL_EDTCTL, STCLASS="STATIC SYMDEF");
     1144     6804        %VLP_TRMCTL (FPTN=VD_ORIGINAL_TRMCTL, STCLASS="STATIC SYMDEF");
     1145     6844        %VLP_TAB (FPTN=VD_ORIGINAL_TAB, STCLASS="STATIC SYMDEF");
     1146     6858        %VLP_PLATEN (FPTN=VD_ORIGINAL_PLATEN, STCLASS="STATIC SYMDEF");
     1147     6880
     1148     6881        /*
     1149     6882        *   VD_CURRENT_WINDOW$
     1150     6883        *   Pointer to the VD$FILE_NODE (in the Windows file) of the current
     1151     6884        *       window.  This will always be an editing window.  Nil if no
     1152     6885        *       editing windows are open currently (this will only be true
     1153     6886        *       during initialization).
     1154     6887        */
     1155     6888    1   DCL VD_CURRENT_WINDOW$ PTR STATIC SYMDEF;
     1156     6889
     1157     6890        /*
     1158     6891        *   VD_COMMAND_WINDOW$
     1159     6892        *   Pointer to the VD$FILE_NODE (in the Windows file) of the
     1160     6893        *       command window.  If NIL, there isn't a command window yet,
     1161     6894        *       so we can't write to it yet (we're not yet fully initialized).
     1162     6895        */
     1163     6896    1   DCL VD_COMMAND_WINDOW$ PTR STATIC SYMDEF;
     1164     6897
     1165     6898
     1166     6899        /*
     1167     6900        *   VD_ACCESSOR_PRIV - A set of %NAC_s specifying the privileges
     1168     6901        *   for a caller to the Accessor.
     1169     6902        *   These flags, when set, allow the caller to override the
     1170     6903        *   access privilege restrictions of internal file nodes.
     1171     6904        *   If the caller is working on behalf of the user (eg, deleting
     1172     6905        *   records the FEP told us to delete, or processing a user-typed
     1173     6906        *   command), VD_ACCESSOR_PRIV should have all bits reset (%CLEAR).
     1174     6907        *   However, if the caller is performing an internal update of
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:147  
     1175     6908        *   an internal file (eg, updating $LEFTOVER after a partially
     1176     6909        *   successful (and partially-failed) copy/move command),
     1177     6910        *   VD_ACCESSOR_PRIV should have all bits set (%NAC_ALL_BITS -- full
     1178     6911        *   privileges).
     1179     6912        */
     1180     6913    1   DCL 1 VD_ACCESSOR_PRIV ALIGNED STATIC SYMDEF,
     1181     6914           %VD$NAC (NAME=*, LEV=2, LAST=YES);
     1182     6928
     1183     6929        /*
     1184     6930        *   VD_CMD_OBJECTS$
     1185     6931        *   This array of pointers is used when we need to allocate dynamic
     1186     6932        *       storage for an object when there is no obvious "owner" who
     1187     6933        *       will later free the object.  For example, VDE$PFUNCTIONS
     1188     6934        *       (which is called by X$EVAL) needs to allocate VD$TEXTC_REMOTE
     1189     6935        *       objects, but who will free them?
     1190     6936        *   The answer is, VDI$PGET_COMMAND_RECORD.  Before reading the
     1191     6937        *       next command, VDI$PGET_COMMAND_RECORD runs thru
     1192     6938        *       VD_CMD_OBJECTS$, freeing any non-NIL pointers it finds.
     1193     6939        *   This array is set to all NILs during initialization; to use
     1194     6940        *       a slot, look for the first NIL and it's yours.
     1195     6941        */
     1196     6942    1   DCL VD_CMD_OBJECTS$ (0:%(MX_CMD_OBJECTS-1)) PTR STATIC SYMDEF;
     1197     6943        %VD$ENCODED_FILE_SPEC (NAME=VD_LAST_LOADED_FILE_SPEC, STCLASS="STATIC SYMDEF");
     1198     6972
     1199     6973
     1200     6974        /*
     1201     6975        *   Control blocks for library routines.
     1202     6976        */
     1203     6977
     1204     6978        %XUM_MCB (NAME=VD_MCB_SMALL, STCLASS="STATIC SYMDEF",
     1205     6979            TP=%XUM_WORDS#, MS=%MNNW_DYN_STORAGE);
     1206     6984        %XUM_MCB (NAME=VD_MCB_LARGE, STCLASS="STATIC SYMDEF",
     1207     6985            TP=%XUM_WORDS#, MS=%MNNW_DYN_STORAGE);
     1208     6990
     1209     6991        %P_PCB (NAME=VD_PCB, STCLASS="STATIC SYMDEF",
     1210     6992            C=YES, C_LD='  ', C_TL='  ', CNTU=YES, NBL=NO);
     1211     7191
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:148  
     1212     7192        %XUG_INIT (NAME=XUG_INIT, STCLASS="STATIC SYMDEF",
     1213     7193        /*N* PREPROCESS=X$PRE_PROCESS, PPCB=XUE_PPCB, */
     1214     7194            WSEG=0,             /* Make XUG get it's own data segment */
     1215     7195            PCB=VD_PCB, PASS=BLANK, GOODCMD=NO, NO_DOWNGRADE=YES,
     1216     7196            POST_EXEC=VDI$PFIX_WINDOWS,
     1217     7197            PRE_EXEC=VDI$PGLOBAL_COMMANDS, DONT_REREAD_CCBUF=YES);
     1218     7610
     1219     7611        %XUG_GETCMD (NAME=XUG_GETCMD, STCLASS="STATIC SYMDEF",
     1220     7612            NODES=VD_COMMAND_LINE, XUH=XUH_PARAM, CONTINUE_OK=YES,
     1221     7613            INDCB=M$ME, PROMPT=CMD_PROMPT, PROMPT_VFC=YES,
     1222     7614            READR=VDI$PGET_COMMAND_RECORD, SFROUTINE=VDI$PUSER_PARSE_RTN,
     1223     7615            OUTDCB=M$LO,
     1224     7616            DCB_PARAM=M$ME);
     1225     7954    1   DCL CMD_PROMPT CHAR(0) CONSTANT INIT(%CONCAT(VFC_TRANSITION0,CHR_PROMPT));
     1226     7955
     1227     7956        %XUH_PARAM (NAME=XUH_PARAM, STCLASS="STATIC SYMDEF",
     1228     7957            OUTDCB1=M$ME, OUTDCB2=M$LO, PROCNAME=VD_PNAME, PROCACCT=VD_PACCT);
     1229     8018        %VLP_NAME (FPTN=VD_PNAME,
     1230     8019                    NAME='6EDIT');
     1231     8046        %VLP_ACCT (FPTN=VD_PACCT,
     1232     8047                    ACCT=':SYS');
     1233     8060
     1234     8061        %XUE_ECB (NAME=XUE_ECB, STCLASS="STATIC SYMDEF",
     1235     8062            WORK_DCB=M$EW, CMDVARS=NO, INPUT_DCB=M$ME,
     1236     8063            FUN=VDE$PFUNCTIONS, VAR=VDE$PREAD_NAME_FOR_EVAL);
     1237     8265
     1238     8266        %FPT_EXIT (FPTN=VD_EXIT, STCLASS="STATIC SYMDEF");
     1239     8281
     1240     8282
     1241     8283        %BOX (TITLE="Constant globals", PAGE=YES);
              8291    1
              8295    1   /***************************************************************************
              8297    1    *                                                                         *
              8301    1            *                              Constant globals                           *
              8303    1            *                                                                         *
              8305    1           ***************************************************************************/

PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:149  
     1242     8309        %BOX (TITLE="Table of reserved words");

              8321    1   /***************************************************************************
              8323    1    *                                                                         *
              8327    1            *                          Table of reserved words                        *
              8329    1            *                                                                         *
              8331    1           ***************************************************************************/

     1243     8335        /*
     1244     8336        *   VD_RESERVED_TABLE$
     1245     8337        *   This array points to lists of the reserved words (excluding the
     1246     8338        *       level-names of Structures and the names of predefined files).
     1247     8339        *       The subscript into this array is the length of the reserved
     1248     8340        *       words in that list; each list contains reserved words of only
     1249     8341        *       one length, from 0 (always the empty list) to %MXNB_RESERVED_WORD.
     1250     8342        *   The list of words pointed-to by entries in VD_RESERVED_TABLE$
     1251     8343        *       are simply CALIGNED character strings, all munched together.
     1252     8344        *       We search such a list by PINCRC'ing a based char-string
     1253     8345        *       through the list.  The end of each list is marked by a single
     1254     8346        *       space character.
     1255     8347        */
     1256     8348
     1257     8349    1   DCL VD_RESERVED_TABLE$ (0:%MXNB_RESERVED_WORD) PTR CONSTANT SYMDEF ALIGNED
     1258     8350    1       INIT(ADDR(NIL), ADDR(RW1), ADDR(RW2), ADDR(RW3), ADDR(RW4),
     1259     8351    1            ADDR(RW5), ADDR(RW6), ADDR(RW7), ADDR(RW8), ADDR(RW9),
     1260     8352    1            ADDR(NIL)*0);
     1261     8353
     1262     8354    1   DCL RW1 CHAR(0) CONSTANT INIT(%CONCAT(
     1263     8355    1           'E', 'H', 'Q', 'X', ' '));
     1264     8356
     1265     8357        %SET ACC=CONCAT('AD', 'AF', 'AL', 'AN', 'AO', 'BA', 'BE', 'BL', 'BO');
     1266     8358
     1267     8359    1   DCL RW2 CHAR(0) CONSTANT INIT(%CONCAT(
     1268     8360                ACC,
     1269     8361                'BY', 'CO', 'DE', 'DI', /*'DO',*/ 'ED', 'EN', 'EO', 'EQ',
     1270     8362                'EX', 'FI', 'FO', 'HE', 'IF', 'IN', 'IS', 'KE', 'LI', 'LO',
     1271     8363                'MO', 'NE', 'NU', 'OF', 'OL', 'ON', 'OV', 'PA', 'PE', 'PO',
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:150  
     1272     8364                'PR', 'QU', 'SE', 'SH', 'SK', 'ST', 'SY', 'TH', 'TO',
     1273     8365    1           'WI', 'XI', ' '));
     1274     8366
     1275     8367    1   DCL RW3 CHAR(0) CONSTANT INIT(%CONCAT(
     1276     8368                'ALL', 'ANY', 'DIR', 'END', 'EXI', 'HEL', 'KEY', 'NEW',
     1277     8369    1           'OLD', 'OUT', 'QUI', 'XIT', ' '));
     1278     8370
     1279     8371    1   DCL RW4 CHAR(0) CONSTANT INIT(%CONCAT(
     1280     8372                'DATE', 'DONT', 'EDIT', 'ELSE', 'EXIT', 'FILE', 'HELP',
     1281     8373                'MOVE', 'NEXT', 'OUTP', 'OVER', 'PREV', 'QUIT', 'READ',
     1282     8374                'REPE', 'REST', 'SAVE', 'SESS', 'SETU', 'SHOW', 'SKIP',
     1283     8375    1           'THRU', 'TIME', ' '));
     1284     8376
     1285     8377    1   DCL RW5 CHAR(0) CONSTANT INIT(%CONCAT(
     1286     8378                'AFTER', 'BLOCK', 'ENTER', 'ERASE', 'KEYIN', 'LINES', 'OUTPU',
     1287     8379                'PRINT', 'SETUP',
     1288     8380    1           ' '));
     1289     8381
     1290     8382    1   DCL RW6 CHAR(0) CONSTANT INIT(%CONCAT(
     1291     8383                'ADJUST', 'DELETE', 'EQUALS', 'NUMBER', 'OUTPUT', 'REPEAT',
     1292     8384    1           'SELECT', 'STRING', 'WINDOW', ' '));
     1293     8385
     1294     8386    1   DCL RW7 CHAR(0) CONSTANT INIT(%CONCAT(
     1295     8387                'COMMAND', 'DISPLAY', 'EDITING', 'FORWARD', 'PATTERN', 'PERCENT',
     1296     8388    1           'PROTECT', 'RESTORE', 'SESSION', 'SYNONYM', 'THROUGH', ' '));
     1297     8389
     1298     8390    1   DCL RW8 CHAR(0) CONSTANT INIT(%CONCAT(
     1299     8391    1           'BACKWARD', 'LOCATION', 'PATTERNS', 'POSITION', 'PREVIOUS', ' '));
     1300     8392
     1301     8393    1   DCL RW9 CHAR(0) CONSTANT INIT(%CONCAT(
     1302     8394    1           'BEGINNING', 'POSITIONS', 'DIRECTORY', ' '));
     1303     8395
     1304     8396
     1305     8397        %BOX (TITLE="Tables of displayed words for enumerated types");

              8409    1   /***************************************************************************
              8411    1    *                                                                         *
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:151  
              8415    1            *               Tables of displayed words for enumerated types            *
              8417    1            *                                                                         *
              8419    1           ***************************************************************************/

     1306     8423
     1307     8424        /*
     1308     8425        *   The following tables use enumerated data types as subscripts into the table.
     1309     8426        *       Therefore, entries must appear in the same order as the enumerated
     1310     8427        *       values.
     1311     8428        *   Each table is:
     1312     8429        *       .N_ENTRIES# - Number of entries in table.
     1313     8430        *       .DW (0 : n_entries-1) - VD$TEXTC forms of displayed-word to be used
     1314     8431        *           for the values of the enumerated type.  For example, the displayed
     1315     8432        *           word for %ORG_CONSEC is found at VD_DW_ORG.DW (%ORG_CONSEC).
     1316     8433        *   All tables except BOOLEAN_NAMES must have %CHR_BAD_VALUE as entry # 0.
     1317     8434        *       This entry is used when the enumerated value is outside the table's
     1318     8435        *       range (< 0 or > .N_ENTRIES#-1);
     1319     8436        *   It's important for the user that the word(s) displayed for an enumerated
     1320     8437        *       value be exactly the same as the ones s/he uses in the 6Edit command
     1321     8438        *       language to set the enumerated value in the first place.  Hence these
     1322     8439        *       "displayed words" should actually be fragments of valid 6Edit command
     1323     8440        *       language.
     1324     8441        */
     1325     8442
     1326     8443        /* For boolean values */
     1327     8444    1   DCL 1 VD_DW_BOOLEAN CONSTANT SYMDEF,
     1328     8445    1         2 N_ENTRIES# SBIN INIT(2),
     1329     8446              %VD_TEXTC (NAME=DW, DIM="(0:1)", LEVEL=2, MXNB=%MXNB_DW, INITS=2,
     1330     8447                IBYTES="%DW_OFF", IBYTES1="%DW_ON");
     1331     8588
     1332     8589        /* For %CO_ values */
     1333     8590    1   DCL 1 VD_DW_COMPONENT CONSTANT SYMDEF,
     1334     8591    1         2 N_ENTRIES# SBIN INIT(4),
     1335     8592              %VD_TEXTC (NAME=DW, DIM="(0:3)", LEVEL=2, MXNB=%MXNB_DW, INITS=4,
     1336     8593                IBYTES="%CHR_BAD_VALUE",
     1337     8594                IBYTES1="%DW_KEY", IBYTES2="%DW_SPEC", IBYTES3="%DW_DATA");
     1338     8735
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:152  
     1339     8736        /* For %DIR_ values */
     1340     8737    1   DCL 1 VD_DW_DIRECTION CONSTANT SYMDEF,
     1341     8738    1         2 N_ENTRIES# SBIN INIT(3),
     1342     8739              %VD_TEXTC (NAME=DW, DIM="(0:2)", LEVEL=2, MXNB=%MXNB_DW, INITS=3,
     1343     8740                IBYTES="%CHR_BAD_VALUE",
     1344     8741                IBYTES1="%DW_FORWARD", IBYTES2="%DW_BACKWARD");
     1345     8882
     1346     8883        /* For %EX_ values */
     1347     8884    1   DCL 1 VD_DW_EXIST CONSTANT SYMDEF,
     1348     8885    1         2 N_ENTRIES# SBIN INIT(4),
     1349     8886              %VD_TEXTC (NAME=DW, DIM="(0:3)", LEVEL=2, MXNB=%MXNB_DW, INITS=4,
     1350     8887                IBYTES="%CHR_BAD_VALUE",
     1351     8888                IBYTES1="%DW_NEW", IBYTES2="%DW_OLD", IBYTES3="%DW_ANY");
     1352     9029
     1353     9030        /* For %KT_ values */
     1354     9031    1   DCL 1 VD_DW_KEY_TYPE CONSTANT SYMDEF,
     1355     9032    1         2 N_ENTRIES# SBIN INIT(8),
     1356     9033              %VD_TEXTC (NAME=DW, DIM="(0:7)", LEVEL=2, MXNB=%MXNB_DW, INITS=8,
     1357     9034                IBYTES="%CHR_BAD_VALUE",
     1358     9035                IBYTES1="%DW_NUMBER", IBYTES2="%DW_STRING", IBYTES3="%DW_SEQUENTIAL",
     1359     9036                IBYTES4='BIN10', IBYTES5='BINHLF', IBYTES6='BIN521',
     1360     9037                IBYTES7="%DW_STRING");
     1361     9178
     1362     9179        /* For %NDT_ values */
     1363     9180    1   DCL 1 VD_DW_NAME_DATA_TYPE CONSTANT SYMDEF,
     1364     9181    1         2 N_ENTRIES# SBIN INIT(5),
     1365     9182              %VD_TEXTC (NAME=DW, DIM="(0:4)", LEVEL=2, MXNB=%MXNB_DW, INITS=5,
     1366     9183                IBYTES="%CHR_BAD_VALUE",
     1367     9184                IBYTES1="%DW_EQUALS", IBYTES2="%DW_LOCATION",
     1368     9185                IBYTES3="%DW_SYNONYM", IBYTES4="%DW_KEYIN");
     1369     9326
     1370     9327        /* For %ORG_ values */
     1371     9328    1   DCL 1 VD_DW_ORG CONSTANT SYMDEF,
     1372     9329    1         2 N_ENTRIES# SBIN INIT(4),
     1373     9330              %VD_TEXTC (NAME=DW, DIM="(0:3)", LEVEL=2, MXNB=%MXNB_DW, INITS=4,
     1374     9331                IBYTES="%CHR_BAD_VALUE",
     1375     9332                IBYTES1="%DW_CONSEC", IBYTES2="%DW_KEYED", IBYTES3="%DW_INDEXED");
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:153  
     1376     9473
     1377     9474        /* For %PNT_ values */
     1378     9475    1   DCL 1 VD_DW_POINT CONSTANT SYMDEF,
     1379     9476    1         2 N_ENTRIES# SBIN INIT(4),
     1380     9477              %VD_TEXTC (NAME=DW, DIM="(0:3)", LEVEL=2, MXNB=%MXNB_DW, INITS=4,
     1381     9478                IBYTES="%CHR_BAD_VALUE",
     1382     9479                IBYTES1="%DW_AO", IBYTES2="%DW_BO", IBYTES3="%DW_EO");
     1383     9620
     1384     9621        /* For %PROTECT and %DONT_PROTECT values */
     1385     9622    1   DCL 1 VD_DW_PROTECT CONSTANT SYMDEF,
     1386     9623    1         2 N_ENTRIES# SBIN INIT(3),
     1387     9624              %VD_TEXTC (NAME=DW, DIM="(0:2)", LEVEL=2, MXNB=%MXNB_DW, INITS=3,
     1388     9625                IBYTES="%CHR_BAD_VALUE",
     1389     9626                IBYTES1="%DW_PROTECT",
     1390     9627                IBYTES2="%CONCAT(DW_DONT,CHR_UNDERSCORE,DW_PROTECT)");
     1391     9768
     1392     9769
     1393     9770        %BOX (TITLE="Global SEARCH and XLATE tables");

              9782    1   /***************************************************************************
              9784    1    *                                                                         *
              9788    1            *                       Global SEARCH and XLATE tables                    *
              9790    1            *                                                                         *
              9792    1           ***************************************************************************/

     1394     9796
     1395     9797        /* Find any reserved special characters */
     1396     9798    1   DCL 1 VD_SEARCH_RESERVED_SPECIALS ALIGNED CONSTANT SYMDEF,
     1397     9799    1         2 * (0:511) UBIN BYTE CALIGNED
     1398     9800    1             INIT (0*%ASCBIN(''''), 1, 1, 1,           /* '  (  ) */
     1399     9801    1                   0*%(ASCBIN(',')-ASCBIN(')')-1), 1,  /* , */
     1400     9802    1                   0*%(ASCBIN('.')-ASCBIN(',')-1), 1,  /* . */
     1401     9803    1                   0*%(ASCBIN(';')-ASCBIN('.')-1), 1,  /* ; */
     1402     9804    1                   0*%(ASCBIN('?')-ASCBIN(';')-1), 1,  /* ? */
     1403     9805    1                   0*0);
     1404     9806
     1405     9807
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:154  
     1406     9808        /*
     1407     9809        *   Translate characters into their "class" codes.
     1408     9810        *   Non-displayable chars (those < '040'O and those > '200'O) are
     1409     9811        *       mapped into %CCL_WHSP (white space) -- characters to be
     1410     9812        *       skipped and ignored.
     1411     9813        *   Six characters could be coded as either %CCL_SPEC or %CCL_NAME.
     1412     9814        *       They look like "special characters" to English-speakers, but
     1413     9815        *       certain European versions of ASCII use these character codes
     1414     9816        *       for their non-English alphabetics (oomlated characters and such).
     1415     9817        *       These characters are:
     1416     9818        *           Octal codes             Graphics
     1417     9819        *            133,134,135             [ \ ]
     1418     9820        *            173,174,175             { | }
     1419     9821        *       By making them %CCL_SPEC, their use in synonyms is limited
     1420     9822        *       to all-special-character synonym names.
     1421     9823        *       If they were made (or patched) %CCL_NAME, they could be used
     1422     9824        *       in name-type synonyms, just like A, B, C, ...
     1423     9825        *   The reserved special characters are:
     1424     9826        *       ' ( ) , . ; ?
     1425     9827        */
     1426     9828
     1427     9829    1   DCL 1 VD_XLATE_CHAR_CLASS ALIGNED CONSTANT SYMDEF,
     1428     9830    1         2 * (0:511) UBIN BYTE CALIGNED INIT(
     1429     9831    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 000 - 003 */
     1430     9832    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 004 - 007 */
     1431     9833    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 010 - 013 */
     1432     9834    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 014 - 017 */
     1433     9835    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 020 - 023 */
     1434     9836    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 024 - 027 */
     1435     9837    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 030 - 033 */
     1436     9838    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 034 - 037 */
     1437     9839    1       %CCL_WHSP, %CCL_SPEC, %CCL_SPEC, %CCL_NAME,     /* 040 - 043 */
     1438     9840    1       %CCL_NAME, %CCL_SPEC, %CCL_SPEC, %CCL_RES,      /* 044 - 047 */
     1439     9841    1       %CCL_RES, %CCL_RES, %CCL_SPEC, %CCL_SPEC,       /* 050 - 053 */
     1440     9842    1       %CCL_RES, %CCL_SPEC, %CCL_DOT, %CCL_SPEC,       /* 054 - 057 */
     1441     9843    1       %CCL_NUM, %CCL_NUM, %CCL_NUM, %CCL_NUM,         /* 060 - 063 */
     1442     9844    1       %CCL_NUM, %CCL_NUM, %CCL_NUM, %CCL_NUM,         /* 064 - 067 */
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:155  
     1443     9845    1       %CCL_NUM, %CCL_NUM, %CCL_SPEC, %CCL_RES,        /* 070 - 073 */
     1444     9846    1       %CCL_SPEC, %CCL_SPEC, %CCL_SPEC, %CCL_RES,      /* 074 - 077 */
     1445     9847    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 100 - 103 */
     1446     9848    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 104 - 107 */
     1447     9849    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 110 - 113 */
     1448     9850    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 114 - 117 */
     1449     9851    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 120 - 123 */
     1450     9852    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 124 - 127 */
     1451     9853    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_SPEC,     /* 130 - 133 */
     1452     9854    1       %CCL_SPEC, %CCL_SPEC, %CCL_SPEC, %CCL_NAME,     /* 134 - 137 */
     1453     9855    1       %CCL_SPEC, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 140 - 143 */
     1454     9856    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 144 - 147 */
     1455     9857    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 150 - 153 */
     1456     9858    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 154 - 157 */
     1457     9859    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 160 - 163 */
     1458     9860    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 164 - 167 */
     1459     9861    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_SPEC,     /* 170 - 173 */
     1460     9862    1       %CCL_SPEC, %CCL_SPEC, %CCL_SPEC, %CCL_WHSP,     /* 174 - 177 */
     1461     9863    1       %CCL_WHSP*0);                                   /* 200 - 777 */
     1462     9864
     1463     9865
     1464     9866        %BOX (TITLE="Object class descriptions");

              9878    1   /***************************************************************************
              9880    1    *                                                                         *
              9884    1            *                         Object class descriptions                       *
              9886    1            *                                                                         *
              9888    1           ***************************************************************************/

     1465     9892
     1466     9893        /*  Based macros to define lengths of objects */
     1467     9894
     1468     9895        %VD$FILE_KEY;
     1469     9944        %VD$NAME_SPEC;
     1470     9992        %VD$WINDOW_SPEC;
     1471    10058        %VD$WINDOW_BLOCK;
     1472    10095        %VD$TABS;
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:156  
     1473    10132        %VD$STRUCTURE_SPEC;
     1474    10169        %VD$STRUCTURE_LEVEL;
     1475    10216        %VD$ERR (LAST=NO);
     1476    10269          %VD$NUMBER (DIM="(0:2)", LEV=2, LAST=YES);
     1477    10314        %VD$BUFFER;
     1478    10372        %VD$BUFFER_HEADER;
     1479    10408        %VD$STRING_HEADER;
     1480    10444        %VD$NUMBER;
     1481    10489        %VD$POINTER;
     1482    10534        %VD$IT_BLOCK_EXPR;
     1483    10684        %VD$IT_SELECT;
     1484    10721        %VD$IT_ADJUST;
     1485    10758        %VD$IT_OPERAND;
     1486    10824        %VD$IT_OPERATOR;
     1487    10861        %VD$IT_COMMAND;
     1488    10899        %VD$ENCODED_NODE;
     1489    11020        %VD$DIR_NODE;
     1490    11058        %VD$FILE_NODE;
     1491    11151        %VD$BLOCK_DESC;
     1492    11298        %VD$CMD_STREAM;
     1493    11337        %VD$EVAL_PATTERN;
     1494    11444        %VD$EVAL;
     1495    11689        %VD$STREAM;
     1496    11795        %VD$PORT;
     1497    11893        %VD$FIT;
     1498    11929        %VD$BUFFER_HEADER (NAME=VD$BLOCK_BUFFER, LAST=NO);
     1499    11965          %VD$BLOCK_DESC (LEV=2, LAST=YES);
     1500    12112
     1501    12113
     1502    12114        %EQU T=TRUE;    /* Shorthand */
     1503    12115        %EQU F=FALSE;
     1504    12116
     1505    12117
     1506    12118        %VD_OBJECTS (NAME=VD_OBJECTS, STCLASS="CONSTANT SYMDEF",
     1507    12119            DIM="(0:%(CLS_MX-1))",
     1508    12120         ISIZE1="LENGTHW(VD$BLOCK_BUFFER)", IBUF1=%T,       /* CLS_BLOCK_BUFFER */
     1509    12121         ISIZE2="LENGTHW(VD$BLOCK_DESC)",
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:157  
     1510    12122         ISIZE3="LENGTHW(VD$NUMBER)", IBUF3=%T, IBUFN3=%T,  /* CLS_BOOLEAN */
     1511    12123                 IFMT3=VD_DW_BOOLEAN,
     1512    12124         ISIZE4=0, IBUF4=%T,                                /* VD$BUFFER is var-len */
     1513    12125         ISIZE5="LENGTHW(VD$CMD_STREAM)",
     1514    12126         ISIZE6="LENGTHW(VD$NUMBER)", IBUF6=%T, IBUFN6=%T,  /* CLS_COMPONENT */
     1515    12127                 IFMT6=VD_DW_COMPONENT,
     1516    12128         ISIZE7="LENGTHW(VD$NUMBER)", IBUF7=%T, IBUFN7=%T,  /* CLS_DIRECTION */
     1517    12129                 IFMT7=VD_DW_DIRECTION,
     1518    12130         ISIZE8="LENGTHW(VD$DIR_NODE)",
     1519    12131         ISIZE9="LENGTHW(VD$ENCODED_NODE)", IBUF9=%T,
     1520    12132         ISIZE10="LENGTHW(VD$ERR)",
     1521    12133         ISIZE11="LENGTHW(VD$EVAL)",
     1522    12134         ISIZE12="LENGTHW(VD$EVAL_PATTERN)",
     1523    12135         ISIZE13="LENGTHW(VD$NUMBER)", IBUF13=%T, IBUFN13=%T,   /* CLS_EXIST */
     1524    12136                 IFMT13=VD_DW_EXIST,
     1525    12137         /*
     1526    12138         * VD$FILE_KEY is a "string object" technically, but only so
     1527    12139         *   it's first chars (.UNIQUE) can be compared as a TEXTC string.
     1528    12140         *   VD$FILE_KEY also contains info beyond the length specified
     1529    12141         *   by it's .LENGTH#, so it should be treated as a fixed-length
     1530    12142         *   object when copying.  Therefore, ISTRn=%FALSE.
     1531    12143         */
     1532    12144         ISIZE14="LENGTHW(VD$FILE_KEY)",
     1533    12145         ISIZE15="LENGTHW(VD$FILE_NODE)",
     1534    12146         ISIZE16="LENGTHW(VD$NUMBER)", IBUF16=%T, IBUFN16=%T,   /* CLS_FILE_STCLASS */
     1535    12147         ISIZE17="LENGTHW(VD$FIT)",
     1536    12148         ISIZE18="LENGTHW(VD$IT_ADJUST)", IINT18=%T,
     1537    12149         ISIZE19="LENGTHW(VD$IT_BLOCK_EXPR)", IINT19=%T,
     1538    12150         ISIZE20="LENGTHW(VD$IT_COMMAND)", IINT20=%T,
     1539    12151         ISIZE21="LENGTHW(VD$IT_OPERAND)", IINT21=%T,
     1540    12152         ISIZE22="LENGTHW(VD$IT_OPERATOR)", IINT22=%T,
     1541    12153         ISIZE23="LENGTHW(VD$IT_SELECT)", IINT23=%T,
     1542    12154         ISIZE24="LENGTHW(VD$NUMBER)", IBUF24=%T, IBUFN24=%T,   /* CLS_KEY_TYPE */
     1543    12155                 IFMT24=VD_DW_KEY_TYPE,
     1544    12156         ISIZE25="LENGTHW(VD$NUMBER)", IBUF25=%T, IBUFN25=%T,   /* CLS_NAME_DATA_TYPE */
     1545    12157                 IFMT25=VD_DW_NAME_DATA_TYPE,
     1546    12158         ISIZE26="LENGTHW(VD$NAME_SPEC)", ISTR26=%T,
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:158  
     1547    12159         ISIZE27="LENGTHW(VD$NUMBER)", IBUF27=%T, IBUFN27=%T,
     1548    12160         ISIZE28="LENGTHW(VD$NUMBER)", IBUF28=%T, IBUFN28=%T,   /* CLS_ORG */
     1549    12161                 IFMT28=VD_DW_ORG,
     1550    12162         ISIZE29=0, IARR29=%T,                              /* VD$PATTERN is var-len */
     1551    12163         ISIZE30="LENGTHW(VD$NUMBER)", IBUF30=%T, IBUFN30=%T,   /* CLS_POINT */
     1552    12164                 IFMT30=VD_DW_POINT,
     1553    12165         ISIZE31="LENGTHW(VD$PORT)",
     1554    12166         ISIZE32="LENGTHW(VD$POINTER)", IBUF32=%T, IBUFP32=%T,  /* CLS_PTR_BLOCK_DESC */
     1555    12167         ISIZE33="LENGTHW(VD$POINTER)", IBUF33=%T, IBUFP33=%T,  /* CLS_PTR_FILE_NODE */
     1556    12168         ISIZE34="LENGTHW(VD$POINTER)", IBUF34=%T, IBUFP34=%T,  /* CLS_PTR_INTREE */
     1557    12169         ISIZE35="LENGTHW(VD$POINTER)", IBUF35=%T, IBUFP35=%T,  /* CLS_PTR_KEY */
     1558    12170         ISIZE36="LENGTHW(VD$POINTER)", IBUF36=%T, IBUFP36=%T,  /* CLS_PTR_LOCATION */
     1559    12171         ISIZE37="LENGTHW(VD$POINTER)", IBUF37=%T, IBUFP37=%T,  /* CLS_PTR_TEXTC */
     1560    12172         ISIZE38=0, IARR38=%T,                      /* VD$RECORD_SET is var-len */
     1561    12173         ISIZE39="LENGTHW(VD$STREAM)",
     1562    12174         ISIZE40="LENGTHW(VD$STRUCTURE_LEVEL)", ISTR40=%T,
     1563    12175         ISIZE41="LENGTHW(VD$STRUCTURE_SPEC)", ISTR41=%T,
     1564    12176         ISIZE42="LENGTHW(VD$TABS)", IARR42=%T,
     1565    12177         ISIZE43=0, ISTR43=%T,                      /* VD$TEXTC_REMOTE is var-len */
     1566    12178         ISIZE44="LENGTHW(VD$WINDOW_BLOCK)", ISTR44=%T,
     1567    12179         ISIZE45="LENGTHW(VD$WINDOW_SPEC)", ISTR45=%T,
     1568    12180         ISIZE46=0, IARR46=%T,                      /* VD$XLATE_LOCATIONS is var-len */
     1569    12181         ISIZE47="LENGTHW(VD$NUMBER)", IBUF47=%T, IBUFN47=%T,   /* CLS_PROTECT */
     1570    12182                 IFMT47=VD_DW_PROTECT,
     1571    12183         ISIZE55=-1);
     1572    12223
     1573    12224
     1574    12225        %BOX (TITLE="Pre-initialized VD$FILE_KEYs, VD$LOCATIONs, and VD$KEYs");

             12237    1   /***************************************************************************
             12239    1    *                                                                         *
             12243    1            *          Pre-initialized VD$FILE_KEYs, VD$LOCATIONs, and VD$KEYs        *
             12245    1            *                                                                         *
             12247    1           ***************************************************************************/

     1575    12251
     1576    12252        /*
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:159  
     1577    12253        *   Certain predefined files and names have VD$FILE_KEYs, VD$LOCATIONs,
     1578    12254        *       or VD$KEYs pre-initialized and ready to pass to the Accessor
     1579    12255        *       as the ABSOLUTE parameter on VDA$FOPEN, VDA$LREAD, and VDA$LWRITE
     1580    12256        *       calls.
     1581    12257        */
     1582    12258
     1583    12259        %VD_KEY (NAME=VD_KEY_SCRATCH_LEFTOVER, STCLASS="CONSTANT SYMDEF",
     1584    12260            ITYPE=%KT_STRING, IREP=%REP_REMOTE,
     1585    12261            IBYTES=VD_FKEY_SCRATCH_LEFTOVER);
     1586    12297        %VD_FILE_KEY (NAME=VD_FKEY_SCRATCH_LEFTOVER, STCLASS="CONSTANT SYMDEF",
     1587    12298            IFNAME="%CONCAT(FSTCL_INTERNAL, PFK_CONSTANT, DK_SCRATCH, CHR_UNDERSCORE, PFN_SC
             12298        RATCH_LEFTOVER)");
     1588    12350
     1589    12351        %VD_KEY (NAME=VD_KEY_SCRATCH_SOURCE, STCLASS="CONSTANT SYMDEF",
     1590    12352            ITYPE=%KT_STRING, IREP=%REP_REMOTE, IBYTES=VD_FKEY_SCRATCH_SOURCE);
     1591    12388        %VD_FILE_KEY (NAME=VD_FKEY_SCRATCH_SOURCE, STCLASS="CONSTANT SYMDEF",
     1592    12389            IFNAME="%CONCAT(FSTCL_INTERNAL, PFK_CONSTANT, DK_SCRATCH, CHR_UNDERSCORE, PFN_SC
             12389        RATCH_SOURCE)");
     1593    12441
     1594    12442
     1595    12443        %VD_LOCATION (NAME=VD_LOC_$LEFTOVER, STCLASS="CONSTANT SYMDEF", INITS=1,
     1596    12444            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$LEFTOVER);
     1597    12519        %VD_TEXTC_REMOTE (NAME=STR_$LEFTOVER, STCLASS=CONSTANT,
     1598    12520            IBYTES='$LEFTOVER');
     1599    12583
     1600    12584        %VD_LOCATION (NAME=VD_LOC_$MATCHES, STCLASS="CONSTANT SYMDEF", INITS=1,
     1601    12585            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$MATCHES);
     1602    12660        %VD_TEXTC_REMOTE (NAME=STR_$MATCHES, STCLASS=CONSTANT, IBYTES='$MATCHES');
     1603    12723
     1604    12724        %VD_LOCATION (NAME=VD_LOC_$NOT_COPIED, STCLASS="CONSTANT SYMDEF", INITS=1,
     1605    12725            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$NOT_COPIED);
     1606    12800        %VD_TEXTC_REMOTE (NAME=STR_$NOT_COPIED, STCLASS=CONSTANT,
     1607    12801            IBYTES='$NOT_COPIED');
     1608    12864
     1609    12865        %VD_LOCATION (NAME=VD_LOC_$RECORDS_DELETED, STCLASS="CONSTANT SYMDEF",
     1610    12866            INITS=1,
     1611    12867            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$RECORDS_DELETED);
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:160  
     1612    12942        %VD_TEXTC_REMOTE (NAME=STR_$RECORDS_DELETED, STCLASS=CONSTANT,
     1613    12943            IBYTES='$RECORDS_DELETED');
     1614    13006
     1615    13007        %VD_LOCATION (NAME=VD_LOC_$RECORDS_INSERTED, STCLASS="CONSTANT SYMDEF",
     1616    13008            INITS=1,
     1617    13009            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$RECORDS_INSERTED);
     1618    13084        %VD_TEXTC_REMOTE (NAME=STR_$RECORDS_INSERTED, STCLASS=CONSTANT,
     1619    13085            IBYTES='$RECORDS_INSERTED');
     1620    13148
     1621    13149        %VD_LOCATION (NAME=VD_LOC_$SCREEN, STCLASS="CONSTANT SYMDEF", INITS=1,
     1622    13150            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$SCREEN);
     1623    13225        %VD_TEXTC_REMOTE (NAME=STR_$SCREEN, STCLASS=CONSTANT, IBYTES='$SCREEN');
     1624    13288
     1625    13289        %VD_LOCATION (NAME=VD_LOC_$SITES, STCLASS="CONSTANT SYMDEF", INITS=1,
     1626    13290            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$SITES);
     1627    13365        %VD_TEXTC_REMOTE (NAME=STR_$SITES, STCLASS=CONSTANT, IBYTES='$SITES');
     1628    13428
     1629    13429
     1630    13430
     1631    13431        /*
     1632    13432        *   BOF is represented differently for string vs. numeric keys.
     1633    13433        */
     1634    13434
     1635    13435        %VD_KEY (NAME=VD_KEY_NUMERIC_BOF, STCLASS="CONSTANT SYMDEF",
     1636    13436            ITYPE=%KT_NUMBER, IREP=%REP_LOCAL, IBYTES=0);
     1637    13472        /*N* %VD_KEY (NAME=VD_KEY_STRING_BOF, STCLASS="CONSTANT SYMDEF", */
     1638    13473        /*N*     ITYPE=%KT_STRING, IREP=%REP_LOCAL, IBYTES="''"); */
     1639    13474
     1640    13475
     1641    13476        /*
     1642    13477        *   VD_KEY_FIRST_CONSEC_REC is different from the abstract "BOF" location,
     1643    13478        *       which is represented by VD_KEY_<num|str>_BOF for all file orgs.
     1644    13479        *       Below is the key of the actual first record in a consec/UR file.
     1645    13480        */
     1646    13481        %VD_KEY (NAME=VD_KEY_FIRST_CONSEC_REC, STCLASS="CONSTANT SYMDEF",
     1647    13482            ITYPE=%KT_NUMBER, IREP=%REP_LOCAL, IBYTES=%MN_CONSEC_KEY);
     1648    13518        %VD_KEY (NAME=VD_KEY_MN_EDITKEY, STCLASS=CONSTANT SYMDEF,
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:161  
     1649    13519            ITYPE=%KT_EDITKEY, IREP=%REP_LOCAL, IBYTES=%MN_EDITKEY);
     1650    13555        %VD_KEY (NAME=VD_KEY_MX_EDITKEY, STCLASS=CONSTANT SYMDEF,
     1651    13556            ITYPE=%KT_EDITKEY, IREP=%REP_LOCAL, IBYTES=%MX_EDITKEY);
     1652    13592
     1653    13593
     1654    13594        %BOX (TITLE="Tables of predefined-file-node readers and writers");

             13606    1   /***************************************************************************
             13608    1    *                                                                         *
             13612    1            *             Tables of predefined-file-node readers and writers          *
             13614    1            *                                                                         *
             13616    1           ***************************************************************************/

     1655    13620
     1656    13621        /*
     1657    13622        *   The nodes of predefined files contain formatted info (PL-6
     1658    13623        *       structures); a routine is used to read and write
     1659    13624        *       the Spec and/or Data components of these nodes for the user.
     1660    13625        *       This is used to perform side-effects, such as creating
     1661    13626        *       or destroying windows, mapping the internal form of a value
     1662    13627        *       into a display- or entry-oriented character form, etc.
     1663    13628        *   The index into the VD_NODE_xx$$ tables is the Spec type (%SPT_
     1664    13629        *       value) for the node being read or written.
     1665    13630        */
     1666    13631
     1667    13632    1   DCL VD_NODE_READERS$$ (0:%(MX_SPEC_TYPES-1)) EPTR CONSTANT SYMDEF
     1668    13633    1       INIT(ENTADDR(NIL),                  /* 0 */
     1669    13634    1           ENTADDR(NIL),                   /* Records from external files */
     1670    13635    1           ENTADDR(NIL),                   /* History file, level 1 */
     1671    13636    1           ENTADDR(VDA$RNAMES),            /* Names files, level 1 */
     1672    13637    1           ENTADDR(NIL),                   /* Structures file, level 1 */
     1673    13638    1           ENTADDR(NIL),                   /* Structures file, level 2 */
     1674    13639    1           ENTADDR(NIL),                   /* Windows file, level 1 */
     1675    13640    1           ENTADDR(NIL),                   /* Windows file, level 2 */
     1676    13641    1           ENTADDR(NIL)*0);
     1677    13642
     1678    13643
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:162  
     1679    13644    1   DCL VD_NODE_WRITERS$$ (0:%(MX_SPEC_TYPES-1)) EPTR CONSTANT SYMDEF
     1680    13645    1       INIT(ENTADDR(NIL),                  /* 0 */
     1681    13646    1           ENTADDR(NIL),                   /* Records from external files */
     1682    13647    1           ENTADDR(NIL),                   /* History file, level 1 */
     1683    13648    1           ENTADDR(VDA$WNAMES),            /* Names files, level 1 */
     1684    13649    1           ENTADDR(NIL),                   /* Structures file, level 1 */
     1685    13650    1           ENTADDR(NIL),                   /* Structures file, level 2 */
     1686    13651    1           ENTADDR(VDA$WWINDOWS),          /* Windows file, level 1 */
     1687    13652    1           ENTADDR(NIL),                   /* Windows file, level 2 */
     1688    13653    1           ENTADDR(NIL)*0);
     1689    13654
     1690    13655
     1691    13656        %BOX (TITLE="Initialization procedure", PAGE=YES);
             13664    1
             13668    1   /***************************************************************************
             13670    1    *                                                                         *
             13674    1            *                          Initialization procedure                       *
             13676    1            *                                                                         *
             13678    1           ***************************************************************************/

     1692    13682
     1693    13683    1   DCL B$TCB$ PTR SYMREF;
     1694    13684
     1695    13685
     1696    13686        %FPT_TIME (DEST=UTS, SOURCE=CLOCK, TSTAMP=VD_UTS_START, STCLASS=STATIC);
     1697    13705        /*
     1698    13706        *   FATAL_ERR is the static VD$ERR which is always at the head of
     1699    13707        *       the VD$ERR chain.  Tho all other VD$ERRs are "objects",
     1700    13708        *       and so are dynamically allocated, FATAL_ERR is statically
     1701    13709        *       allocated so we have some way to report errors during
     1702    13710        *       allocation!!
     1703    13711        */
     1704    13712    1   DCL 1 FATAL_ERR STATIC,
     1705    13713           %VD$ERR (NAME=VD_ERR, STCLASS=STATIC, LEV=2, LAST=NO);
     1706    13766           %VD$NUMBER (NAME="*", DIM="(0:2)", STCLASS=STATIC, LEV=2, LAST=YES);
     1707    13811
     1708    13812        %VD_TEXTC (NAME=ERRMSG_FID, STCLASS=STATIC, MXNB=31);
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:163  
     1709    13953
     1710    13954
     1711    13955    1   DCL STREAM$ PTR;
     1712    13956    1   DCL INTERNAL_DIR_TAIL$ PTR;
     1713    13957    1   DCL I UBIN;
     1714    13958
     1715    13959
     1716    13960        %VD$STREAM (NAME=STREAM, STCLASS="BASED(STREAM$)");
     1717    14066        %VD$KEY_NUMBER (NAME=KEY$NUMBER, STCLASS=BASED);
     1718    14081        %B$TCB (NAME=B$TCB, STCLASS="BASED(B$TCB$)");
     1719    14084        %B$ALT;
     1720    14092        %F$DCB;
     1721    14149
     1722    14150
     1723    14151
     1724    14152                /*  Initialize the static symdefs */
     1725    14153
     1726    14154    1           VD_6E = %CLEAR;
     1727    14155    1           VD_6E.HISTORY$ = ADDR(NIL);
     1728    14156    1           VD_6E.EQUALS$ = ADDR(NIL);
     1729    14157    1           VD_6E.LOCATIONS$ = ADDR(NIL);
     1730    14158    1           VD_6E.SYNONYMS$ = ADDR(NIL);
     1731    14159    1           VD_6E.KEYINS$ = ADDR(NIL);
     1732    14160    1           VD_6E.STRUCTURES$ = ADDR(NIL);
     1733    14161    1           VD_6E.STRUCTURE_EXTERNAL$ = ADDR(NIL);
     1734    14162    1           VD_6E.WINDOWS$ = ADDR(NIL);
     1735    14163    1           VD_6E.WS.INTERNAL_DIR$ = ADDR(NIL);
     1736    14164    1           VD_6E.SOURCE.OPERAND.STREAM$ = ADDR(NIL);
     1737    14165    1           VD_6E.SOURCE.OPERAND.EDIT_BLOCK$ = ADDR(NIL);
     1738    14166    1           VD_6E.SOURCE.OPERAND.EVAL$ = ADDR(NIL);
     1739    14167    1           VD_6E.SOURCE.OPERAND.INTREE$ = ADDR(NIL);
     1740    14168    1           VD_6E.CMD_STREAM$ = ADDR(NIL);
     1741    14169    1           VD_6E.INTERRUPT.STATE# = %INST_PROCESSING;
     1742    14170    1           VD_6E.INTERRUPT.CMD_LINE$ = ADDR(NIL);
     1743    14171    1           VD_6E.ERR_HEAD$ = ADDR(FATAL_ERR);
     1744    14172    1           VD_6E.ERR_TAIL$ = ADDR(FATAL_ERR);
     1745    14173    1           VD_6E.PORT_HEAD$ = ADDR(NIL);
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:164  
     1746    14174    1           VD_6E.PORT_TAIL$ = ADDR(NIL);
     1747    14175    1           VD_6E.WILD_STRINGS$ = ADDR(NIL);
     1748    14176
     1749    14177    1           FATAL_ERR = %CLEAR;
     1750    14178    1           FATAL_ERR.VD_ERR.FLINK$ = ADDR(NIL);
     1751    14179
     1752    14180    1           VD_CURRENT_WINDOW$ = ADDR(NIL);
     1753    14181    1           VD_COMMAND_WINDOW$ = ADDR(NIL);
     1754    14182
     1755    14183    1           VD_ACCESSOR_PRIV = %CLEAR;
     1756    14184
     1757    14185    1           VD_DCBS = %CLEAR;
     1758    14186
     1759    14187    2           DO I = 0 TO %(MX_CMD_OBJECTS-1);
     1760    14188    2              VD_CMD_OBJECTS$ (I) = ADDR(NIL);
     1761    14189    2              END;
     1762    14190
     1763    14191    1           VD_LAST_LOADED_FILE_SPEC = %CLEAR;
     1764    14192
     1765    14193    1           VD_EXIT.CODE_ = VECTOR(FATAL_ERR.VD_ERR.ERR);
     1766    14194    1           VD_EXIT.V.STEPCC# = %STEPCC_OK;
     1767    14195
     1768    14196    1           CALL M$TIME (FPT_TIME);
     1769    14197
     1770    14198
     1771    14199    1           CALL INIT_MCB (VD_MCB_SMALL) ALTRET (INIT_MCB_FAILED);
     1772    14200    1           CALL INIT_MCB (VD_MCB_LARGE) ALTRET (INIT_MCB_FAILED);
     1773    14201
     1774    14202
     1775    14203                /*
     1776    14204                *   Can now allocate dynamic storage.
     1777    14205                */
     1778    14206
     1779    14207    1           INTERNAL_DIR_TAIL$ = ADDR(NIL);
     1780    14208    1           CALL BUILD_DIR_NODE (%LENGTHC(DK_HISTORY), %DK_HISTORY)
     1781    14209    1             ALTRET (BUILD_DIR_NODE_FAILED);
     1782    14210    1           CALL BUILD_DIR_NODE (%LENGTHC(DK_NAMES), %DK_NAMES)
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:165  
     1783    14211    1             ALTRET (BUILD_DIR_NODE_FAILED);
     1784    14212    1           CALL BUILD_DIR_NODE (%LENGTHC(DK_SCRATCH), %DK_SCRATCH)
     1785    14213    1             ALTRET (BUILD_DIR_NODE_FAILED);
     1786    14214    1           CALL BUILD_DIR_NODE (%LENGTHC(DK_STRUCTURES), %DK_STRUCTURES)
     1787    14215    1             ALTRET (BUILD_DIR_NODE_FAILED);
     1788    14216    1           CALL BUILD_DIR_NODE (%LENGTHC(DK_WINDOWS), %DK_WINDOWS)
     1789    14217    1             ALTRET (BUILD_DIR_NODE_FAILED);
     1790    14218
     1791    14219
     1792    14220    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.SOURCE.OPERAND.STREAM$)
     1793    14221    1             ALTRET (OALLOC_FAILED);
     1794    14222    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.EQUALS$)
     1795    14223    1             ALTRET (OALLOC_FAILED);
     1796    14224    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.LOCATIONS$)
     1797    14225    1             ALTRET (OALLOC_FAILED);
     1798    14226    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.SYNONYMS$)
     1799    14227    1             ALTRET (OALLOC_FAILED);
     1800    14228    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.STRUCTURES$)
     1801    14229    1             ALTRET (OALLOC_FAILED);
     1802    14230    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.KEYINS$)
     1803    14231    1             ALTRET (OALLOC_FAILED);
     1804    14232    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.WINDOWS$)
     1805    14233    1             ALTRET (OALLOC_FAILED);
     1806    14234
     1807    14235
     1808    14236                /*
     1809    14237                *   We must allocate our own pre-processor ECB work area.
     1810    14238                *   We won't get a chance to expand this work area:  make it
     1811    14239                *       big now.
     1812    14240                */
     1813    14241        /*      XUE_PPCB.ECB.WKSZ# = %(NW_EVAL_WORK * 3);                   */
     1814    14242        /*      CALL VDG$OALLOC (%CLS_BUFFER, XUE_PPCB.ECB.WORK$,            */
     1815    14243        /*        SIZEW(VD$BUFFER_HEADER) + %NW_EVAL_WORK)                  */
     1816    14244        /*        ALTRET (OALLOC_FAILED);                                   */
     1817    14245        /*      XUE_PPCB.ECB.WORK$->VD$BUFFER.LENGTH# =                     */
     1818    14246        /*        ((SIZEW(VD$BUFFER_HEADER) + %NW_EVAL_WORK) *              */
     1819    14247        /*        %NB_PER_WORD) - LENGTHC(VD$BUFFER_HEADER);                */
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:166  
     1820    14248        /*      XUE_PPCB.ECB.WORK$ = PALIGNW(ADDR(XUE_PPCB.ECB.WORK$ ->     */
     1821    14249        /*        VD$BUFFER.BYTES));                                        */
     1822    14250
     1823    14251
     1824    14252    1           XUE_ECB.WKSZ# = %NW_EVAL_WORK;
     1825    14253    1           CALL VDG$OALLOC (%CLS_BUFFER, XUE_ECB.WORK$,
     1826    14254    1             SIZEW(VD$BUFFER_HEADER) + %NW_EVAL_WORK)
     1827    14255    1             ALTRET (OALLOC_FAILED);
     1828    14256    1           XUE_ECB.WORK$->VD$BUFFER.LENGTH# =
     1829    14257    1             ((SIZEW(VD$BUFFER_HEADER) + %NW_EVAL_WORK) *
     1830    14258    1             %NB_PER_WORD) - LENGTHC(VD$BUFFER_HEADER);
     1831    14259    1           XUE_ECB.WORK$ = PALIGNW(ADDR(XUE_ECB.WORK$ -> VD$BUFFER.BYTES));
     1832    14260
     1833    14261
     1834    14262    1           CALL XUG$INIT (XUG_GETCMD, XUG_INIT)
     1835    14263    1             ALTRET (XUG_INIT_FAILED);
     1836    14264
     1837    14265
     1838    14266    1           CALL CONCAT (ERRMSG_FID.BYTES,
     1839    14267    1             %CONCAT(CHR_ERRFILE_NAME, CHR_PERIOD),
     1840    14268    1             DCBADDR(DCBNUM(M$LM))->F$DCB.ACCT#);
     1841    14269    1           ERRMSG_FID.LENGTH# =
     1842    14270    1             %LENGTHC(CONCAT(CHR_ERRFILE_NAME, CHR_PERIOD)) +
     1843    14271    1             LENGTHC(DCBADDR(DCBNUM(M$LM))->F$DCB.ACCT#);
     1844    14272    1           XUG_GETCMD.ERRMFID$ = ADDR(ERRMSG_FID);
     1845    14273    1           CALL XUG$SETERRMSG (XUG_GETCMD)
     1846    14274    1             ALTRET (XUG_SETERRMSG_FAILED);
     1847    14275
     1848    14276
     1849    14277    1           RETURN;
     1850    14278
     1851    14279
     1852    14280                %BOX (TITLE="Error Handlers");

             14292    1   /***************************************************************************
             14294    1    *                                                                         *
             14298    1            *                               Error Handlers                            *
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:167  
             14300    1            *                                                                         *
             14302    1           ***************************************************************************/

     1853    14306
     1854    14307                /*
     1855    14308                *   We can't really talk to the user via the command
     1856    14309                *       window or the Presenter yet, so when we get an
     1857    14310                *       error, we always treat it as fatal.
     1858    14311                */
     1859    14312
     1860    14313    1   XUG_INIT_FAILED: ;
     1861    14314    1   XUG_SETERRMSG_FAILED: ;
     1862    14315    1           FATAL_ERR.VD_ERR.ERR.CODE# = %E$PARSE_FAILED;
     1863    14316    1           FATAL_ERR.VD_ERR.FLAGLEV# = %FLV_FATAL;
     1864    14317    1           ALTRETURN;
     1865    14318
     1866    14319
     1867    14320    1   INIT_MCB_FAILED: ;
     1868    14321    1   BUILD_DIR_NODE_FAILED: ;
     1869    14322    1   OALLOC_FAILED: ;
     1870    14323    1           FATAL_ERR.VD_ERR.FLAGLEV# = %FLV_FATAL;
     1871    14324    1           ALTRETURN;
     1872    14325
     1873    14326
     1874    14327                %BOX (TITLE=INIT_MCB, PAGE=YES);
             14335    1
             14339    1   /***************************************************************************
             14341    1    *                                                                         *
             14345    1            *                                  INIT_MCB                               *
             14347    1            *                                                                         *
             14349    1           ***************************************************************************/

     1875    14353
     1876    14354        /*I* NAME: INIT_MCB
     1877    14355            PARAMETERS:
     1878    14356                MCB - XUM$MCB to initialize.
     1879    14357            INPUT:
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:168  
     1880    14358                FATAL_ERR must be ready to use.
     1881    14359            OUTPUT:
     1882    14360                MCB will be initialized, ready for VDG$OALLOC to use.
     1883    14361                    A new data segment will have been obtained for the
     1884    14362                    MCB.
     1885    14363            DESCRIPTION:
     1886    14364                Obtain a new data segment from the monitor.  Initialize the
     1887    14365                MCB to point to it.
     1888    14366        */
     1889    14367
     1890    14368    1   INIT_MCB: PROC (MCB) ALTRET;
     1891    14369        %XUM$MCB (NAME=MCB, STCLASS="");
     1892    14373
     1893    14374
     1894    14375        %FPT_GDS (RESULTS=GDS_RESULTS, SEGSIZE=%NW_DATA_SEG_INCR);
     1895    14391    2   DCL GDS_RESULTS VECTOR STATIC;
     1896    14392
     1897    14393
     1898    14394
     1899    14395    2           GDS_RESULTS = VECTOR(NIL);
     1900    14396    2           CALL M$GDS (FPT_GDS) ALTRET (GDS_FAILED);
     1901    14397
     1902    14398    2           MCB.SEGMENT_BASE$ = VBASE(GDS_RESULTS);
     1903    14399    2           MCB.HI_SEGMENT$ = VBASE(GDS_RESULTS);
     1904    14400    2           MCB.WKSZ = (VBOUND(GDS_RESULTS) + 1) / %NB_PER_WORD;
     1905    14401
     1906    14402    2           RETURN;
     1907    14403
     1908    14404
     1909    14405
     1910    14406    2   GDS_FAILED:
     1911    14407    2           FATAL_ERR.VD_ERR.ERR = B$TCB.ALT$->B$ALT.ERR;
     1912    14408    2           FATAL_ERR.VD_ERR.FLAGLEV# = %FLV_FATAL;
     1913    14409    2           ALTRETURN;
     1914    14410
     1915    14411    2   END INIT_MCB;
     1916    14412
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:169  
     1917    14413
     1918    14414                %BOX (TITLE=BUILD_DIR_NODE, PAGE=YES);
             14422    2
             14426    2   /***************************************************************************
             14428    2    *                                                                         *
             14432    2            *                               BUILD_DIR_NODE                            *
             14434    2            *                                                                         *
             14436    2           ***************************************************************************/

     1919    14440
     1920    14441        /*I* NAME: BUILD_DIR_NODE
     1921    14442            PARAMETERS:
     1922    14443                DIR_KEY_LEN - # of bytes in DIR_KEY below.
     1923    14444                DIR_KEY - A %DK_ value, specifying the key for the VD$DIR_NODE.
     1924    14445            INPUT:
     1925    14446                We must be able to allocate dynamic storage.
     1926    14447                VD_6E.WS.INTERNAL_DIR$ must point to the first VD$DIR_NODE
     1927    14448                    in the chain; if none yet, it must be ADDR(NIL).
     1928    14449                INTERNAL_DIR_TAIL$ must point to the last VD$DIR_NODE in
     1929    14450                    the chain; if none yet, it must be ADDR(NIL).
     1930    14451            OUTPUT:
     1931    14452                A VD$DIR_NODE will be appended to VD_6E.WS.INTERNAL_DIR$.
     1932    14453            DESCRIPTION:
     1933    14454                Allocate and initialized a VD$DIR_NODE.  Append it to the
     1934    14455                chain rooted in VD_6E.WS.INTERNAL_DIR$.
     1935    14456        */
     1936    14457
     1937    14458    1   BUILD_DIR_NODE: PROC (DIR_KEY_LEN, DIR_KEY) ALTRET;
     1938    14459    2   DCL DIR_KEY_LEN SBIN;
     1939    14460    2   DCL DIR_KEY CHAR(DIR_KEY_LEN) CALIGNED;
     1940    14461
     1941    14462
     1942    14463    2   DCL DIR_NODE$ PTR;
     1943    14464
     1944    14465
     1945    14466        %VD$DIR_NODE (NAME=DIR$NODE, STCLASS="BASED(DIR_NODE$)");
     1946    14504
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:170  
     1947    14505
     1948    14506
     1949    14507    2           CALL VDG$OALLOC (%CLS_DIR_NODE, DIR_NODE$)
     1950    14508    2             ALTRET (OALLOC_FAILED);
     1951    14509    2           DIR$NODE.KEY = DIR_KEY;
     1952    14510    2           DIR$NODE.FILE_STCLASS = %FSTCL_INTERNAL;
     1953    14511
     1954    14512    2           DIR$NODE.BLINK$ = INTERNAL_DIR_TAIL$;
     1955    14513    2           IF INTERNAL_DIR_TAIL$ = ADDR(NIL) THEN
     1956    14514    2              VD_6E.WS.INTERNAL_DIR$ = DIR_NODE$;
     1957    14515    2           ELSE
     1958    14516    2              DIR$NODE.BLINK$->DIR$NODE.FLINK$ = DIR_NODE$;
     1959    14517    2           INTERNAL_DIR_TAIL$ = DIR_NODE$;
     1960    14518
     1961    14519    2           RETURN;
     1962    14520
     1963    14521
     1964    14522    2   OALLOC_FAILED: ;
     1965    14523    2           ALTRETURN;
     1966    14524
     1967    14525    2   END BUILD_DIR_NODE;
     1968    14526
     1969    14527    1   END VDG$MINIT;
     1970    14528        %EOD;

PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:171  
--  Include file information  --

   XUG_ENTRY.:LIBRARY  cannot be made into a system file and is referenced.
   XUE_MACRO_C.:LIBRARY  is referenced.
   XUH_MACRO_C.:LIBRARY  is referenced.
   XUM_MACRO_C.:LIBRARY  is referenced.
   XU_MACRO_C.:LIBRARY  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   NK_VFC_C.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDG$MINIT.

   Procedure VDG$MINIT requires 240 words for executable code.
   Procedure VDG$MINIT requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:172  

 Object Unit name= VDG$MINIT                                  File name= VDG$MAIN.:VDA5TOU
 UTS= JUL 04 '97 11:19:24.36 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$ME
    2   DCB   even  none     0      0  M$DO
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$EW
    5   DCB   even  none     0      0  M$LM
    6   Data  even  none   976   1720  VDG$MINIT
    7  RoData even  UTS   1103   2117  VDG$MINIT
    8   Proc  even  none   240    360  VDG$MINIT
    9  RoData even  none    43     53  VDG$MINIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes    yes     yes      Std        0  VDG$MINIT
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:173  

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    6      0  VD_6E                              6   1165  VD_DCBS
    6   1167  VD_UTS_START                       6   1170  VD_WORST_FLAGLEV
    6   1171  VD_LAST_CWIN_ACTIVITY              6   1172  VD_FORCE_READ_FROM
    6   1173  VD_EOF_DELETED                     6   1174  VD_SCREEN_HEIGHT
    6   1175  VD_SCREEN_WIDTH                    6   1176  VD_2DIM
    6   1177  VD_EDITING_WINDOWS                 6   1200  VD_EDITING_HEIGHT
    6   1201  VD_OLD_$SCREEN                     6   1202  VD_ORIGINAL_EDTCTL
    6   1206  VD_ORIGINAL_TRMCTL                 6   1212  VD_ORIGINAL_TAB
    6   1222  VD_ORIGINAL_PLATEN                 6   1226  VD_CURRENT_WINDOW$
    6   1227  VD_COMMAND_WINDOW$                 6   1230  VD_ACCESSOR_PRIV
    6   1231  VD_CMD_OBJECTS$                    6   1313  VD_LAST_LOADED_FILE_SPEC
    6   1323  VD_MCB_SMALL                       6   1334  VD_MCB_LARGE
    6   1345  VD_PCB                             6   1364  XUG_INIT
    6   1430  XUG_GETCMD                         6   1502  XUH_PARAM
    6   1600  XUE_ECB                            6   1634  VD_EXIT
    7      1  VD_RESERVED_TABLE$                 7    216  VD_DW_BOOLEAN
    7    237  VD_DW_COMPONENT                    7    300  VD_DW_DIRECTION
    7    331  VD_DW_EXIST                        7    372  VD_DW_KEY_TYPE
    7    473  VD_DW_NAME_DATA_TYPE               7    544  VD_DW_ORG
    7    605  VD_DW_POINT                        7    646  VD_DW_PROTECT
    7    677  VD_SEARCH_RESERVED_SPECIALS        7   1077  VD_XLATE_CHAR_CLASS
    7   1277  VD_OBJECTS                         7   1605  VD_KEY_SCRATCH_LEFTOVER
    7   1607  VD_FKEY_SCRATCH_LEFTOVER           7   1631  VD_KEY_SCRATCH_SOURCE
    7   1633  VD_FKEY_SCRATCH_SOURCE             7   1655  VD_LOC_$LEFTOVER
    7   1673  VD_LOC_$MATCHES                    7   1711  VD_LOC_$NOT_COPIED
    7   1727  VD_LOC_$RECORDS_DELETED            7   1747  VD_LOC_$RECORDS_INSERTED
    7   1767  VD_LOC_$SCREEN                     7   2004  VD_LOC_$SITES
    7   2021  VD_KEY_NUMERIC_BOF                 7   2023  VD_KEY_FIRST_CONSEC_REC
    7   2025  VD_KEY_MN_EDITKEY                  7   2027  VD_KEY_MX_EDITKEY
    7   2031  VD_NODE_READERS$$                  7   2055  VD_NODE_WRITERS$$
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:174  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VDI$PGLOBAL_COMMANDS
 yes     yes           Std       0 VDI$PFIX_WINDOWS
 yes     yes           Std       2 XTX$ADAPT
         yes           Std       1 VDI$PUSER_PARSE_RTN
 yes     yes           Std       1 VDE$PREAD_NAME_FOR_EVAL
 yes     yes           Std       3 VDG$OALLOC
 yes     yes           Std       1 XUG$SETERRMSG
 yes     yes           Std       5 VDI$PGET_COMMAND_RECORD
 yes     yes           Std       1 VDA$RNAMES
 yes     yes           Std       4 VDA$WNAMES
 yes     yes           Std       4 VDA$WWINDOWS
 yes     yes           Std       1 VDE$PFUNCTIONS
 yes     yes           Std       2 XUG$INIT
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$ME                                  M$DO
     M$LO                                  M$EW                                  M$LM
     VD_COMMAND_LINE                       B$TCB$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID                                 ROSID
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:175  


     1034        1        /*T***********************************************************/
     1035        2        /*T*                                                         */
     1036        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1037        4        /*T*                                                         */
     1038        5        /*T***********************************************************/
     1039        6
     1040        7        /*D* NAME: VDG$MINIT
     1041        8            PARAMETERS:
     1042        9                None.
     1043       10            INPUT:
     1044       11                None.
     1045       12            OUTPUT:
     1046       13                All global static data in the Int'r's domain will be
     1047       14                    initialized.
     1048       15                VD_6E.WS.INTERNAL_DIR$ will point to a chain of VD$DIR_NODEs,
     1049       16                    one for each internal directory.
     1050       17                VD_6E.HISTORY$, .EQUALS$, .LOCATIONS$, .SYNONYMS, .KEYINS$,
     1051       18                    and .WINDOWS$ will point to closed VD$STREAMs.
     1052       19            DESCRIPTION:
     1053       20                Initialize all static global data.
     1054       21                Create the directory of internal files (empty initially).
     1055       22                Allocate Streams for all predefined files (no Ports, tho).
     1056       23        */
     1057       24
     1058       25        VDG$MINIT: PROC ALTRET;

     25  8 000000   000000 700200 xent  VDG$MINIT    TSX0  ! X66_AUTO_0
         8 000001   000014 000000                    ZERO    12,0

     1059       26
     1060       27        %INCLUDE CP_6;
     1061      108        %INCLUDE NK_VFC_C;
     1062      182        %INCLUDE VD_MACROS_M;
     1063     2397        %INCLUDE VD_NODES0_E;
     1064     2489        %INCLUDE VD_PERR_C;
     1065     2637        %INCLUDE XU_MACRO_C;
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:176  
     1066     5731        %INCLUDE XUM_MACRO_C;
     1067     5758        %INCLUDE XUH_MACRO_C;
     1068     5842        %INCLUDE XUE_MACRO_C;
     1069     6586        %INCLUDE XUG_ENTRY;
     1070     6617
     1071     6618
     1072     6619    1   DCL VDI$PFIX_WINDOWS              ENTRY ALTRET;
     1073     6620    1   DCL VDI$PUSER_PARSE_RTN         ENTRY (1);
     1074     6621    1   DCL VDI$PGET_COMMAND_RECORD     ENTRY (5) ALTRET;
     1075     6622    1   DCL VDI$PGLOBAL_COMMANDS        ENTRY (2) ALTRET;
     1076     6623    1   DCL VDE$PREAD_NAME_FOR_EVAL     ENTRY (1) ALTRET;
     1077     6624    1   DCL VDE$PFUNCTIONS              ENTRY (1) ALTRET;
     1078     6625    1   DCL VDG$OALLOC                  ENTRY (3) ALTRET;
     1079     6626
     1080     6627    1   DCL VDA$RNAMES                  ENTRY (1) ALTRET;
     1081     6628    1   DCL VDA$WNAMES                  ENTRY (4) ALTRET;
     1082     6629    1   DCL VDA$WWINDOWS                ENTRY (4) ALTRET;
     1083     6630
     1084     6631
     1085     6632    1   DCL M$ME DCB;
     1086     6633    1   DCL M$DO DCB;
     1087     6634    1   DCL M$LO DCB;
     1088     6635    1   DCL M$EW DCB;
     1089     6636    1   DCL M$LM DCB;
     1090     6637
     1091     6638
     1092     6639
     1093     6640    1   DCL VD_COMMAND_LINE SBIN SYMREF;    /* 6Edit command parse nodes */
     1094     6641
     1095     6642
     1096     6643        %BOX (TITLE="Static globals");

              6655    1   /***************************************************************************
              6657    1    *                                                                         *
              6661    1            *                               Static globals                           *
              6663    1            *                                                                        *
              6665    1          ***************************************************************************/
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:177  

     1097     6669
     1098     6670        %VD_6E (NAME=VD_6E, STCLASS="STATIC SYMDEF");
     1099     6706
     1100     6707        %VD$DCBS (NAME=VD_DCBS, STCLASS="STATIC SYMDEF");
     1101     6722
     1102     6723    1   DCL VD_UTS_START UBIN STATIC SYMDEF INIT(0);
     1103     6724
     1104     6725    1   DCL VD_WORST_FLAGLEV UBIN STATIC SYMDEF INIT(0);
     1105     6726
     1106     6727    1   DCL VD_LAST_CWIN_ACTIVITY UBIN STATIC SYMDEF INIT(0);
     1107     6728
     1108     6729    1   DCL VD_FORCE_READ_FROM UBIN STATIC SYMDEF INIT(%RF_DONT_CARE);
     1109     6730
     1110     6731    1   DCL VD_EOF_DELETED BIT(36) STATIC SYMDEF INIT('0'B);
     1111     6732
     1112     6733        /*
     1113     6734        *   Dimensions of the UC (user-domain) window we're given at start-up.
     1114     6735        *   If:
     1115     6736        *       VD_SCREEN_HEIGHT < %MN_SCREEN_EDITING_HEIGHT:  we can't screen-edit
     1116     6737        *           on this terminal, or we're running in batch, ghost, or TP mode.
     1117     6738        *           We will still have nodes in the Windows file for the command
     1118     6739        *           window and (usually only 1) editing window, but the FEP won't
     1119     6740        *           know these things as windows.
     1120     6741        *       VD_SCREEN_HEIGHT >= %MN_SCREEN_EDITING_HEIGHT:  we can screen-edit.
     1121     6742        *           We'll have DCBs open to FEP windows for all nodes in the Windows
     1122     6743        *           file.
     1123     6744        *   Note VD_SCREEN_HEIGHT just says if it's possible to screen-edit
     1124     6745        *       or not; the user can tell us that s/he doesn't WANT to
     1125     6746        *       screen-edit by setting the $SCREEN predefined name to a value
     1126     6747        *       < %MN_SCREEN_EDITING_HEIGHT.
     1127     6748        *N* Following paragraph has been de-implemented due to star 25801:
     1128     6749        *N*   Note VD_$SCREEN.V# just says if the user wants to screen-edit or not;
     1129     6750        *N*       6Edit will actually go "2-dimensional" only when there's at least
     1130     6751        *N*       one editing window open.  VD_2DIM determines whether we're actually
     1131     6752        *N*       screen editing (VD_2DIM = %TRUE) or either (1) the user told us not
     1132     6753        *N*       to screen edit, or (2) we can't screen edit, or (3) we're waiting til
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:178  
     1133     6754        *N*       the first editing window is opened before we screen edit.
     1134     6755        */
     1135     6756    1   DCL VD_SCREEN_HEIGHT SBIN STATIC SYMDEF INIT(0);
     1136     6757    1   DCL VD_SCREEN_WIDTH SBIN STATIC SYMDEF INIT(0);
     1137     6758    1   DCL VD_2DIM BIT(1) ALIGNED STATIC SYMDEF INIT(%FALSE);
     1138     6759    1   DCL VD_EDITING_WINDOWS SBIN STATIC SYMDEF INIT(0);
     1139     6760    1   DCL VD_EDITING_HEIGHT SBIN STATIC SYMDEF INIT(0);
     1140     6761    1   DCL VD_OLD_$SCREEN SBIN STATIC SYMDEF INIT(0);
     1141     6762
     1142     6763        /* Original terminal parameters before 6Edit was started */
     1143     6764        %VLP_TRMCTL (FPTN=VD_ORIGINAL_EDTCTL, STCLASS="STATIC SYMDEF");
     1144     6804        %VLP_TRMCTL (FPTN=VD_ORIGINAL_TRMCTL, STCLASS="STATIC SYMDEF");
     1145     6844        %VLP_TAB (FPTN=VD_ORIGINAL_TAB, STCLASS="STATIC SYMDEF");
     1146     6858        %VLP_PLATEN (FPTN=VD_ORIGINAL_PLATEN, STCLASS="STATIC SYMDEF");
     1147     6880
     1148     6881        /*
     1149     6882        *   VD_CURRENT_WINDOW$
     1150     6883        *   Pointer to the VD$FILE_NODE (in the Windows file) of the current
     1151     6884        *       window.  This will always be an editing window.  Nil if no
     1152     6885        *       editing windows are open currently (this will only be true
     1153     6886        *       during initialization).
     1154     6887        */
     1155     6888    1   DCL VD_CURRENT_WINDOW$ PTR STATIC SYMDEF;
     1156     6889
     1157     6890        /*
     1158     6891        *   VD_COMMAND_WINDOW$
     1159     6892        *   Pointer to the VD$FILE_NODE (in the Windows file) of the
     1160     6893        *       command window.  If NIL, there isn't a command window yet,
     1161     6894        *       so we can't write to it yet (we're not yet fully initialized).
     1162     6895        */
     1163     6896    1   DCL VD_COMMAND_WINDOW$ PTR STATIC SYMDEF;
     1164     6897
     1165     6898
     1166     6899        /*
     1167     6900        *   VD_ACCESSOR_PRIV - A set of %NAC_s specifying the privileges
     1168     6901        *   for a caller to the Accessor.
     1169     6902        *   These flags, when set, allow the caller to override the
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:179  
     1170     6903        *   access privilege restrictions of internal file nodes.
     1171     6904        *   If the caller is working on behalf of the user (eg, deleting
     1172     6905        *   records the FEP told us to delete, or processing a user-typed
     1173     6906        *   command), VD_ACCESSOR_PRIV should have all bits reset (%CLEAR).
     1174     6907        *   However, if the caller is performing an internal update of
     1175     6908        *   an internal file (eg, updating $LEFTOVER after a partially
     1176     6909        *   successful (and partially-failed) copy/move command),
     1177     6910        *   VD_ACCESSOR_PRIV should have all bits set (%NAC_ALL_BITS -- full
     1178     6911        *   privileges).
     1179     6912        */
     1180     6913    1   DCL 1 VD_ACCESSOR_PRIV ALIGNED STATIC SYMDEF,
     1181     6914           %VD$NAC (NAME=*, LEV=2, LAST=YES);
     1182     6928
     1183     6929        /*
     1184     6930        *   VD_CMD_OBJECTS$
     1185     6931        *   This array of pointers is used when we need to allocate dynamic
     1186     6932        *       storage for an object when there is no obvious "owner" who
     1187     6933        *       will later free the object.  For example, VDE$PFUNCTIONS
     1188     6934        *       (which is called by X$EVAL) needs to allocate VD$TEXTC_REMOTE
     1189     6935        *       objects, but who will free them?
     1190     6936        *   The answer is, VDI$PGET_COMMAND_RECORD.  Before reading the
     1191     6937        *       next command, VDI$PGET_COMMAND_RECORD runs thru
     1192     6938        *       VD_CMD_OBJECTS$, freeing any non-NIL pointers it finds.
     1193     6939        *   This array is set to all NILs during initialization; to use
     1194     6940        *       a slot, look for the first NIL and it's yours.
     1195     6941        */
     1196     6942    1   DCL VD_CMD_OBJECTS$ (0:%(MX_CMD_OBJECTS-1)) PTR STATIC SYMDEF;
     1197     6943        %VD$ENCODED_FILE_SPEC (NAME=VD_LAST_LOADED_FILE_SPEC, STCLASS="STATIC SYMDEF");
     1198     6972
     1199     6973
     1200     6974        /*
     1201     6975        *   Control blocks for library routines.
     1202     6976        */
     1203     6977
     1204     6978        %XUM_MCB (NAME=VD_MCB_SMALL, STCLASS="STATIC SYMDEF",
     1205     6979            TP=%XUM_WORDS#, MS=%MNNW_DYN_STORAGE);
     1206     6984        %XUM_MCB (NAME=VD_MCB_LARGE, STCLASS="STATIC SYMDEF",
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:180  
     1207     6985            TP=%XUM_WORDS#, MS=%MNNW_DYN_STORAGE);
     1208     6990
     1209     6991        %P_PCB (NAME=VD_PCB, STCLASS="STATIC SYMDEF",
     1210     6992            C=YES, C_LD='  ', C_TL='  ', CNTU=YES, NBL=NO);
     1211     7191
     1212     7192        %XUG_INIT (NAME=XUG_INIT, STCLASS="STATIC SYMDEF",
     1213     7193        /*N* PREPROCESS=X$PRE_PROCESS, PPCB=XUE_PPCB, */
     1214     7194            WSEG=0,             /* Make XUG get it's own data segment */
     1215     7195            PCB=VD_PCB, PASS=BLANK, GOODCMD=NO, NO_DOWNGRADE=YES,
     1216     7196            POST_EXEC=VDI$PFIX_WINDOWS,
     1217     7197            PRE_EXEC=VDI$PGLOBAL_COMMANDS, DONT_REREAD_CCBUF=YES);
     1218     7610
     1219     7611        %XUG_GETCMD (NAME=XUG_GETCMD, STCLASS="STATIC SYMDEF",
     1220     7612            NODES=VD_COMMAND_LINE, XUH=XUH_PARAM, CONTINUE_OK=YES,
     1221     7613            INDCB=M$ME, PROMPT=CMD_PROMPT, PROMPT_VFC=YES,
     1222     7614            READR=VDI$PGET_COMMAND_RECORD, SFROUTINE=VDI$PUSER_PARSE_RTN,
     1223     7615            OUTDCB=M$LO,
     1224     7616            DCB_PARAM=M$ME);
     1225     7954    1   DCL CMD_PROMPT CHAR(0) CONSTANT INIT(%CONCAT(VFC_TRANSITION0,CHR_PROMPT));
     1226     7955
     1227     7956        %XUH_PARAM (NAME=XUH_PARAM, STCLASS="STATIC SYMDEF",
     1228     7957            OUTDCB1=M$ME, OUTDCB2=M$LO, PROCNAME=VD_PNAME, PROCACCT=VD_PACCT);
     1229     8018        %VLP_NAME (FPTN=VD_PNAME,
     1230     8019                    NAME='6EDIT');
     1231     8046        %VLP_ACCT (FPTN=VD_PACCT,
     1232     8047                    ACCT=':SYS');
     1233     8060
     1234     8061        %XUE_ECB (NAME=XUE_ECB, STCLASS="STATIC SYMDEF",
     1235     8062            WORK_DCB=M$EW, CMDVARS=NO, INPUT_DCB=M$ME,
     1236     8063            FUN=VDE$PFUNCTIONS, VAR=VDE$PREAD_NAME_FOR_EVAL);
     1237     8265
     1238     8266        %FPT_EXIT (FPTN=VD_EXIT, STCLASS="STATIC SYMDEF");
     1239     8281
     1240     8282
     1241     8283        %BOX (TITLE="Constant globals", PAGE=YES);
              8291    1
              8295    1   /***************************************************************************
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:181  
              8297    1    *                                                                         *
              8301    1            *                              Constant globals                          *
              8303    1            *                                                                        *
              8305    1          ***************************************************************************/

     1242     8309        %BOX (TITLE="Table of reserved words");

              8321    1   /***************************************************************************
              8323    1    *                                                                         *
              8327    1            *                          Table of reserved words                       *
              8329    1            *                                                                        *
              8331    1          ***************************************************************************/

     1243     8335        /*
     1244     8336        *   VD_RESERVED_TABLE$
     1245     8337        *   This array points to lists of the reserved words (excluding the
     1246     8338        *       level-names of Structures and the names of predefined files).
     1247     8339        *       The subscript into this array is the length of the reserved
     1248     8340        *       words in that list; each list contains reserved words of only
     1249     8341        *       one length, from 0 (always the empty list) to %MXNB_RESERVED_WORD.
     1250     8342        *   The list of words pointed-to by entries in VD_RESERVED_TABLE$
     1251     8343        *       are simply CALIGNED character strings, all munched together.
     1252     8344        *       We search such a list by PINCRC'ing a based char-string
     1253     8345        *       through the list.  The end of each list is marked by a single
     1254     8346        *       space character.
     1255     8347        */
     1256     8348
     1257     8349    1   DCL VD_RESERVED_TABLE$ (0:%MXNB_RESERVED_WORD) PTR CONSTANT SYMDEF ALIGNED
     1258     8350    1       INIT(ADDR(NIL), ADDR(RW1), ADDR(RW2), ADDR(RW3), ADDR(RW4),
     1259     8351    1            ADDR(RW5), ADDR(RW6), ADDR(RW7), ADDR(RW8), ADDR(RW9),
     1260     8352    1            ADDR(NIL)*0);
     1261     8353
     1262     8354    1   DCL RW1 CHAR(0) CONSTANT INIT(%CONCAT(
     1263     8355    1           'E', 'H', 'Q', 'X', ' '));
     1264     8356
     1265     8357        %SET ACC=CONCAT('AD', 'AF', 'AL', 'AN', 'AO', 'BA', 'BE', 'BL', 'BO');
     1266     8358
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:182  
     1267     8359    1   DCL RW2 CHAR(0) CONSTANT INIT(%CONCAT(
     1268     8360                ACC,
     1269     8361                'BY', 'CO', 'DE', 'DI', /*'DO',*/ 'ED', 'EN', 'EO', 'EQ',
     1270     8362                'EX', 'FI', 'FO', 'HE', 'IF', 'IN', 'IS', 'KE', 'LI', 'LO',
     1271     8363                'MO', 'NE', 'NU', 'OF', 'OL', 'ON', 'OV', 'PA', 'PE', 'PO',
     1272     8364                'PR', 'QU', 'SE', 'SH', 'SK', 'ST', 'SY', 'TH', 'TO',
     1273     8365    1           'WI', 'XI', ' '));
     1274     8366
     1275     8367    1   DCL RW3 CHAR(0) CONSTANT INIT(%CONCAT(
     1276     8368                'ALL', 'ANY', 'DIR', 'END', 'EXI', 'HEL', 'KEY', 'NEW',
     1277     8369    1           'OLD', 'OUT', 'QUI', 'XIT', ' '));
     1278     8370
     1279     8371    1   DCL RW4 CHAR(0) CONSTANT INIT(%CONCAT(
     1280     8372                'DATE', 'DONT', 'EDIT', 'ELSE', 'EXIT', 'FILE', 'HELP',
     1281     8373                'MOVE', 'NEXT', 'OUTP', 'OVER', 'PREV', 'QUIT', 'READ',
     1282     8374                'REPE', 'REST', 'SAVE', 'SESS', 'SETU', 'SHOW', 'SKIP',
     1283     8375    1           'THRU', 'TIME', ' '));
     1284     8376
     1285     8377    1   DCL RW5 CHAR(0) CONSTANT INIT(%CONCAT(
     1286     8378                'AFTER', 'BLOCK', 'ENTER', 'ERASE', 'KEYIN', 'LINES', 'OUTPU',
     1287     8379                'PRINT', 'SETUP',
     1288     8380    1           ' '));
     1289     8381
     1290     8382    1   DCL RW6 CHAR(0) CONSTANT INIT(%CONCAT(
     1291     8383                'ADJUST', 'DELETE', 'EQUALS', 'NUMBER', 'OUTPUT', 'REPEAT',
     1292     8384    1           'SELECT', 'STRING', 'WINDOW', ' '));
     1293     8385
     1294     8386    1   DCL RW7 CHAR(0) CONSTANT INIT(%CONCAT(
     1295     8387                'COMMAND', 'DISPLAY', 'EDITING', 'FORWARD', 'PATTERN', 'PERCENT',
     1296     8388    1           'PROTECT', 'RESTORE', 'SESSION', 'SYNONYM', 'THROUGH', ' '));
     1297     8389
     1298     8390    1   DCL RW8 CHAR(0) CONSTANT INIT(%CONCAT(
     1299     8391    1           'BACKWARD', 'LOCATION', 'PATTERNS', 'POSITION', 'PREVIOUS', ' '));
     1300     8392
     1301     8393    1   DCL RW9 CHAR(0) CONSTANT INIT(%CONCAT(
     1302     8394    1           'BEGINNING', 'POSITIONS', 'DIRECTORY', ' '));
     1303     8395
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:183  
     1304     8396
     1305     8397        %BOX (TITLE="Tables of displayed words for enumerated types");

              8409    1   /***************************************************************************
              8411    1    *                                                                         *
              8415    1            *               Tables of displayed words for enumerated types           *
              8417    1            *                                                                        *
              8419    1          ***************************************************************************/

     1306     8423
     1307     8424        /*
     1308     8425        *   The following tables use enumerated data types as subscripts into the table.
     1309     8426        *       Therefore, entries must appear in the same order as the enumerated
     1310     8427        *       values.
     1311     8428        *   Each table is:
     1312     8429        *       .N_ENTRIES# - Number of entries in table.
     1313     8430        *       .DW (0 : n_entries-1) - VD$TEXTC forms of displayed-word to be used
     1314     8431        *           for the values of the enumerated type.  For example, the displayed
     1315     8432        *           word for %ORG_CONSEC is found at VD_DW_ORG.DW (%ORG_CONSEC).
     1316     8433        *   All tables except BOOLEAN_NAMES must have %CHR_BAD_VALUE as entry # 0.
     1317     8434        *       This entry is used when the enumerated value is outside the table's
     1318     8435        *       range (< 0 or > .N_ENTRIES#-1);
     1319     8436        *   It's important for the user that the word(s) displayed for an enumerated
     1320     8437        *       value be exactly the same as the ones s/he uses in the 6Edit command
     1321     8438        *       language to set the enumerated value in the first place.  Hence these
     1322     8439        *       "displayed words" should actually be fragments of valid 6Edit command
     1323     8440        *       language.
     1324     8441        */
     1325     8442
     1326     8443        /* For boolean values */
     1327     8444    1   DCL 1 VD_DW_BOOLEAN CONSTANT SYMDEF,
     1328     8445    1         2 N_ENTRIES# SBIN INIT(2),
     1329     8446              %VD_TEXTC (NAME=DW, DIM="(0:1)", LEVEL=2, MXNB=%MXNB_DW, INITS=2,
     1330     8447                IBYTES="%DW_OFF", IBYTES1="%DW_ON");
     1331     8588
     1332     8589        /* For %CO_ values */
     1333     8590    1   DCL 1 VD_DW_COMPONENT CONSTANT SYMDEF,
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:184  
     1334     8591    1         2 N_ENTRIES# SBIN INIT(4),
     1335     8592              %VD_TEXTC (NAME=DW, DIM="(0:3)", LEVEL=2, MXNB=%MXNB_DW, INITS=4,
     1336     8593                IBYTES="%CHR_BAD_VALUE",
     1337     8594                IBYTES1="%DW_KEY", IBYTES2="%DW_SPEC", IBYTES3="%DW_DATA");
     1338     8735
     1339     8736        /* For %DIR_ values */
     1340     8737    1   DCL 1 VD_DW_DIRECTION CONSTANT SYMDEF,
     1341     8738    1         2 N_ENTRIES# SBIN INIT(3),
     1342     8739              %VD_TEXTC (NAME=DW, DIM="(0:2)", LEVEL=2, MXNB=%MXNB_DW, INITS=3,
     1343     8740                IBYTES="%CHR_BAD_VALUE",
     1344     8741                IBYTES1="%DW_FORWARD", IBYTES2="%DW_BACKWARD");
     1345     8882
     1346     8883        /* For %EX_ values */
     1347     8884    1   DCL 1 VD_DW_EXIST CONSTANT SYMDEF,
     1348     8885    1         2 N_ENTRIES# SBIN INIT(4),
     1349     8886              %VD_TEXTC (NAME=DW, DIM="(0:3)", LEVEL=2, MXNB=%MXNB_DW, INITS=4,
     1350     8887                IBYTES="%CHR_BAD_VALUE",
     1351     8888                IBYTES1="%DW_NEW", IBYTES2="%DW_OLD", IBYTES3="%DW_ANY");
     1352     9029
     1353     9030        /* For %KT_ values */
     1354     9031    1   DCL 1 VD_DW_KEY_TYPE CONSTANT SYMDEF,
     1355     9032    1         2 N_ENTRIES# SBIN INIT(8),
     1356     9033              %VD_TEXTC (NAME=DW, DIM="(0:7)", LEVEL=2, MXNB=%MXNB_DW, INITS=8,
     1357     9034                IBYTES="%CHR_BAD_VALUE",
     1358     9035                IBYTES1="%DW_NUMBER", IBYTES2="%DW_STRING", IBYTES3="%DW_SEQUENTIAL",
     1359     9036                IBYTES4='BIN10', IBYTES5='BINHLF', IBYTES6='BIN521',
     1360     9037                IBYTES7="%DW_STRING");
     1361     9178
     1362     9179        /* For %NDT_ values */
     1363     9180    1   DCL 1 VD_DW_NAME_DATA_TYPE CONSTANT SYMDEF,
     1364     9181    1         2 N_ENTRIES# SBIN INIT(5),
     1365     9182              %VD_TEXTC (NAME=DW, DIM="(0:4)", LEVEL=2, MXNB=%MXNB_DW, INITS=5,
     1366     9183                IBYTES="%CHR_BAD_VALUE",
     1367     9184                IBYTES1="%DW_EQUALS", IBYTES2="%DW_LOCATION",
     1368     9185                IBYTES3="%DW_SYNONYM", IBYTES4="%DW_KEYIN");
     1369     9326
     1370     9327        /* For %ORG_ values */
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:185  
     1371     9328    1   DCL 1 VD_DW_ORG CONSTANT SYMDEF,
     1372     9329    1         2 N_ENTRIES# SBIN INIT(4),
     1373     9330              %VD_TEXTC (NAME=DW, DIM="(0:3)", LEVEL=2, MXNB=%MXNB_DW, INITS=4,
     1374     9331                IBYTES="%CHR_BAD_VALUE",
     1375     9332                IBYTES1="%DW_CONSEC", IBYTES2="%DW_KEYED", IBYTES3="%DW_INDEXED");
     1376     9473
     1377     9474        /* For %PNT_ values */
     1378     9475    1   DCL 1 VD_DW_POINT CONSTANT SYMDEF,
     1379     9476    1         2 N_ENTRIES# SBIN INIT(4),
     1380     9477              %VD_TEXTC (NAME=DW, DIM="(0:3)", LEVEL=2, MXNB=%MXNB_DW, INITS=4,
     1381     9478                IBYTES="%CHR_BAD_VALUE",
     1382     9479                IBYTES1="%DW_AO", IBYTES2="%DW_BO", IBYTES3="%DW_EO");
     1383     9620
     1384     9621        /* For %PROTECT and %DONT_PROTECT values */
     1385     9622    1   DCL 1 VD_DW_PROTECT CONSTANT SYMDEF,
     1386     9623    1         2 N_ENTRIES# SBIN INIT(3),
     1387     9624              %VD_TEXTC (NAME=DW, DIM="(0:2)", LEVEL=2, MXNB=%MXNB_DW, INITS=3,
     1388     9625                IBYTES="%CHR_BAD_VALUE",
     1389     9626                IBYTES1="%DW_PROTECT",
     1390     9627                IBYTES2="%CONCAT(DW_DONT,CHR_UNDERSCORE,DW_PROTECT)");
     1391     9768
     1392     9769
     1393     9770        %BOX (TITLE="Global SEARCH and XLATE tables");

              9782    1   /***************************************************************************
              9784    1    *                                                                         *
              9788    1            *                       Global SEARCH and XLATE tables                   *
              9790    1            *                                                                        *
              9792    1          ***************************************************************************/

     1394     9796
     1395     9797        /* Find any reserved special characters */
     1396     9798    1   DCL 1 VD_SEARCH_RESERVED_SPECIALS ALIGNED CONSTANT SYMDEF,
     1397     9799    1         2 * (0:511) UBIN BYTE CALIGNED
     1398     9800    1             INIT (0*%ASCBIN(''''), 1, 1, 1,           /* '  (  ) */
     1399     9801    1                   0*%(ASCBIN(',')-ASCBIN(')')-1), 1,  /* , */
     1400     9802    1                   0*%(ASCBIN('.')-ASCBIN(',')-1), 1,  /* . */
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:186  
     1401     9803    1                   0*%(ASCBIN(';')-ASCBIN('.')-1), 1,  /* ; */
     1402     9804    1                   0*%(ASCBIN('?')-ASCBIN(';')-1), 1,  /* ? */
     1403     9805    1                   0*0);
     1404     9806
     1405     9807
     1406     9808        /*
     1407     9809        *   Translate characters into their "class" codes.
     1408     9810        *   Non-displayable chars (those < '040'O and those > '200'O) are
     1409     9811        *       mapped into %CCL_WHSP (white space) -- characters to be
     1410     9812        *       skipped and ignored.
     1411     9813        *   Six characters could be coded as either %CCL_SPEC or %CCL_NAME.
     1412     9814        *       They look like "special characters" to English-speakers, but
     1413     9815        *       certain European versions of ASCII use these character codes
     1414     9816        *       for their non-English alphabetics (oomlated characters and such).
     1415     9817        *       These characters are:
     1416     9818        *           Octal codes             Graphics
     1417     9819        *            133,134,135             [ \ ]
     1418     9820        *            173,174,175             { | }
     1419     9821        *       By making them %CCL_SPEC, their use in synonyms is limited
     1420     9822        *       to all-special-character synonym names.
     1421     9823        *       If they were made (or patched) %CCL_NAME, they could be used
     1422     9824        *       in name-type synonyms, just like A, B, C, ...
     1423     9825        *   The reserved special characters are:
     1424     9826        *       ' ( ) , . ; ?
     1425     9827        */
     1426     9828
     1427     9829    1   DCL 1 VD_XLATE_CHAR_CLASS ALIGNED CONSTANT SYMDEF,
     1428     9830    1         2 * (0:511) UBIN BYTE CALIGNED INIT(
     1429     9831    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 000 - 003 */
     1430     9832    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 004 - 007 */
     1431     9833    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 010 - 013 */
     1432     9834    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 014 - 017 */
     1433     9835    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 020 - 023 */
     1434     9836    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 024 - 027 */
     1435     9837    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 030 - 033 */
     1436     9838    1       %CCL_WHSP, %CCL_WHSP, %CCL_WHSP, %CCL_WHSP,     /* 034 - 037 */
     1437     9839    1       %CCL_WHSP, %CCL_SPEC, %CCL_SPEC, %CCL_NAME,     /* 040 - 043 */
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:187  
     1438     9840    1       %CCL_NAME, %CCL_SPEC, %CCL_SPEC, %CCL_RES,      /* 044 - 047 */
     1439     9841    1       %CCL_RES, %CCL_RES, %CCL_SPEC, %CCL_SPEC,       /* 050 - 053 */
     1440     9842    1       %CCL_RES, %CCL_SPEC, %CCL_DOT, %CCL_SPEC,       /* 054 - 057 */
     1441     9843    1       %CCL_NUM, %CCL_NUM, %CCL_NUM, %CCL_NUM,         /* 060 - 063 */
     1442     9844    1       %CCL_NUM, %CCL_NUM, %CCL_NUM, %CCL_NUM,         /* 064 - 067 */
     1443     9845    1       %CCL_NUM, %CCL_NUM, %CCL_SPEC, %CCL_RES,        /* 070 - 073 */
     1444     9846    1       %CCL_SPEC, %CCL_SPEC, %CCL_SPEC, %CCL_RES,      /* 074 - 077 */
     1445     9847    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 100 - 103 */
     1446     9848    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 104 - 107 */
     1447     9849    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 110 - 113 */
     1448     9850    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 114 - 117 */
     1449     9851    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 120 - 123 */
     1450     9852    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 124 - 127 */
     1451     9853    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_SPEC,     /* 130 - 133 */
     1452     9854    1       %CCL_SPEC, %CCL_SPEC, %CCL_SPEC, %CCL_NAME,     /* 134 - 137 */
     1453     9855    1       %CCL_SPEC, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 140 - 143 */
     1454     9856    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 144 - 147 */
     1455     9857    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 150 - 153 */
     1456     9858    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 154 - 157 */
     1457     9859    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 160 - 163 */
     1458     9860    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_NAME,     /* 164 - 167 */
     1459     9861    1       %CCL_NAME, %CCL_NAME, %CCL_NAME, %CCL_SPEC,     /* 170 - 173 */
     1460     9862    1       %CCL_SPEC, %CCL_SPEC, %CCL_SPEC, %CCL_WHSP,     /* 174 - 177 */
     1461     9863    1       %CCL_WHSP*0);                                   /* 200 - 777 */
     1462     9864
     1463     9865
     1464     9866        %BOX (TITLE="Object class descriptions");

              9878    1   /***************************************************************************
              9880    1    *                                                                         *
              9884    1            *                         Object class descriptions                      *
              9886    1            *                                                                        *
              9888    1          ***************************************************************************/

     1465     9892
     1466     9893        /*  Based macros to define lengths of objects */
     1467     9894
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:188  
     1468     9895        %VD$FILE_KEY;
     1469     9944        %VD$NAME_SPEC;
     1470     9992        %VD$WINDOW_SPEC;
     1471    10058        %VD$WINDOW_BLOCK;
     1472    10095        %VD$TABS;
     1473    10132        %VD$STRUCTURE_SPEC;
     1474    10169        %VD$STRUCTURE_LEVEL;
     1475    10216        %VD$ERR (LAST=NO);
     1476    10269          %VD$NUMBER (DIM="(0:2)", LEV=2, LAST=YES);
     1477    10314        %VD$BUFFER;
     1478    10372        %VD$BUFFER_HEADER;
     1479    10408        %VD$STRING_HEADER;
     1480    10444        %VD$NUMBER;
     1481    10489        %VD$POINTER;
     1482    10534        %VD$IT_BLOCK_EXPR;
     1483    10684        %VD$IT_SELECT;
     1484    10721        %VD$IT_ADJUST;
     1485    10758        %VD$IT_OPERAND;
     1486    10824        %VD$IT_OPERATOR;
     1487    10861        %VD$IT_COMMAND;
     1488    10899        %VD$ENCODED_NODE;
     1489    11020        %VD$DIR_NODE;
     1490    11058        %VD$FILE_NODE;
     1491    11151        %VD$BLOCK_DESC;
     1492    11298        %VD$CMD_STREAM;
     1493    11337        %VD$EVAL_PATTERN;
     1494    11444        %VD$EVAL;
     1495    11689        %VD$STREAM;
     1496    11795        %VD$PORT;
     1497    11893        %VD$FIT;
     1498    11929        %VD$BUFFER_HEADER (NAME=VD$BLOCK_BUFFER, LAST=NO);
     1499    11965          %VD$BLOCK_DESC (LEV=2, LAST=YES);
     1500    12112
     1501    12113
     1502    12114        %EQU T=TRUE;    /* Shorthand */
     1503    12115        %EQU F=FALSE;
     1504    12116
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:189  
     1505    12117
     1506    12118        %VD_OBJECTS (NAME=VD_OBJECTS, STCLASS="CONSTANT SYMDEF",
     1507    12119            DIM="(0:%(CLS_MX-1))",
     1508    12120         ISIZE1="LENGTHW(VD$BLOCK_BUFFER)", IBUF1=%T,       /* CLS_BLOCK_BUFFER */
     1509    12121         ISIZE2="LENGTHW(VD$BLOCK_DESC)",
     1510    12122         ISIZE3="LENGTHW(VD$NUMBER)", IBUF3=%T, IBUFN3=%T,  /* CLS_BOOLEAN */
     1511    12123                 IFMT3=VD_DW_BOOLEAN,
     1512    12124         ISIZE4=0, IBUF4=%T,                                /* VD$BUFFER is var-len */
     1513    12125         ISIZE5="LENGTHW(VD$CMD_STREAM)",
     1514    12126         ISIZE6="LENGTHW(VD$NUMBER)", IBUF6=%T, IBUFN6=%T,  /* CLS_COMPONENT */
     1515    12127                 IFMT6=VD_DW_COMPONENT,
     1516    12128         ISIZE7="LENGTHW(VD$NUMBER)", IBUF7=%T, IBUFN7=%T,  /* CLS_DIRECTION */
     1517    12129                 IFMT7=VD_DW_DIRECTION,
     1518    12130         ISIZE8="LENGTHW(VD$DIR_NODE)",
     1519    12131         ISIZE9="LENGTHW(VD$ENCODED_NODE)", IBUF9=%T,
     1520    12132         ISIZE10="LENGTHW(VD$ERR)",
     1521    12133         ISIZE11="LENGTHW(VD$EVAL)",
     1522    12134         ISIZE12="LENGTHW(VD$EVAL_PATTERN)",
     1523    12135         ISIZE13="LENGTHW(VD$NUMBER)", IBUF13=%T, IBUFN13=%T,   /* CLS_EXIST */
     1524    12136                 IFMT13=VD_DW_EXIST,
     1525    12137         /*
     1526    12138         * VD$FILE_KEY is a "string object" technically, but only so
     1527    12139         *   it's first chars (.UNIQUE) can be compared as a TEXTC string.
     1528    12140         *   VD$FILE_KEY also contains info beyond the length specified
     1529    12141         *   by it's .LENGTH#, so it should be treated as a fixed-length
     1530    12142         *   object when copying.  Therefore, ISTRn=%FALSE.
     1531    12143         */
     1532    12144         ISIZE14="LENGTHW(VD$FILE_KEY)",
     1533    12145         ISIZE15="LENGTHW(VD$FILE_NODE)",
     1534    12146         ISIZE16="LENGTHW(VD$NUMBER)", IBUF16=%T, IBUFN16=%T,   /* CLS_FILE_STCLASS */
     1535    12147         ISIZE17="LENGTHW(VD$FIT)",
     1536    12148         ISIZE18="LENGTHW(VD$IT_ADJUST)", IINT18=%T,
     1537    12149         ISIZE19="LENGTHW(VD$IT_BLOCK_EXPR)", IINT19=%T,
     1538    12150         ISIZE20="LENGTHW(VD$IT_COMMAND)", IINT20=%T,
     1539    12151         ISIZE21="LENGTHW(VD$IT_OPERAND)", IINT21=%T,
     1540    12152         ISIZE22="LENGTHW(VD$IT_OPERATOR)", IINT22=%T,
     1541    12153         ISIZE23="LENGTHW(VD$IT_SELECT)", IINT23=%T,
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:190  
     1542    12154         ISIZE24="LENGTHW(VD$NUMBER)", IBUF24=%T, IBUFN24=%T,   /* CLS_KEY_TYPE */
     1543    12155                 IFMT24=VD_DW_KEY_TYPE,
     1544    12156         ISIZE25="LENGTHW(VD$NUMBER)", IBUF25=%T, IBUFN25=%T,   /* CLS_NAME_DATA_TYPE */
     1545    12157                 IFMT25=VD_DW_NAME_DATA_TYPE,
     1546    12158         ISIZE26="LENGTHW(VD$NAME_SPEC)", ISTR26=%T,
     1547    12159         ISIZE27="LENGTHW(VD$NUMBER)", IBUF27=%T, IBUFN27=%T,
     1548    12160         ISIZE28="LENGTHW(VD$NUMBER)", IBUF28=%T, IBUFN28=%T,   /* CLS_ORG */
     1549    12161                 IFMT28=VD_DW_ORG,
     1550    12162         ISIZE29=0, IARR29=%T,                              /* VD$PATTERN is var-len */
     1551    12163         ISIZE30="LENGTHW(VD$NUMBER)", IBUF30=%T, IBUFN30=%T,   /* CLS_POINT */
     1552    12164                 IFMT30=VD_DW_POINT,
     1553    12165         ISIZE31="LENGTHW(VD$PORT)",
     1554    12166         ISIZE32="LENGTHW(VD$POINTER)", IBUF32=%T, IBUFP32=%T,  /* CLS_PTR_BLOCK_DESC */
     1555    12167         ISIZE33="LENGTHW(VD$POINTER)", IBUF33=%T, IBUFP33=%T,  /* CLS_PTR_FILE_NODE */
     1556    12168         ISIZE34="LENGTHW(VD$POINTER)", IBUF34=%T, IBUFP34=%T,  /* CLS_PTR_INTREE */
     1557    12169         ISIZE35="LENGTHW(VD$POINTER)", IBUF35=%T, IBUFP35=%T,  /* CLS_PTR_KEY */
     1558    12170         ISIZE36="LENGTHW(VD$POINTER)", IBUF36=%T, IBUFP36=%T,  /* CLS_PTR_LOCATION */
     1559    12171         ISIZE37="LENGTHW(VD$POINTER)", IBUF37=%T, IBUFP37=%T,  /* CLS_PTR_TEXTC */
     1560    12172         ISIZE38=0, IARR38=%T,                      /* VD$RECORD_SET is var-len */
     1561    12173         ISIZE39="LENGTHW(VD$STREAM)",
     1562    12174         ISIZE40="LENGTHW(VD$STRUCTURE_LEVEL)", ISTR40=%T,
     1563    12175         ISIZE41="LENGTHW(VD$STRUCTURE_SPEC)", ISTR41=%T,
     1564    12176         ISIZE42="LENGTHW(VD$TABS)", IARR42=%T,
     1565    12177         ISIZE43=0, ISTR43=%T,                      /* VD$TEXTC_REMOTE is var-len */
     1566    12178         ISIZE44="LENGTHW(VD$WINDOW_BLOCK)", ISTR44=%T,
     1567    12179         ISIZE45="LENGTHW(VD$WINDOW_SPEC)", ISTR45=%T,
     1568    12180         ISIZE46=0, IARR46=%T,                      /* VD$XLATE_LOCATIONS is var-len */
     1569    12181         ISIZE47="LENGTHW(VD$NUMBER)", IBUF47=%T, IBUFN47=%T,   /* CLS_PROTECT */
     1570    12182                 IFMT47=VD_DW_PROTECT,
     1571    12183         ISIZE55=-1);
     1572    12223
     1573    12224
     1574    12225        %BOX (TITLE="Pre-initialized VD$FILE_KEYs, VD$LOCATIONs, and VD$KEYs");

             12237    1   /***************************************************************************
             12239    1    *                                                                         *
             12243    1            *          Pre-initialized VD$FILE_KEYs, VD$LOCATIONs, and VD$KEYs       *
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:191  
             12245    1            *                                                                        *
             12247    1          ***************************************************************************/

     1575    12251
     1576    12252        /*
     1577    12253        *   Certain predefined files and names have VD$FILE_KEYs, VD$LOCATIONs,
     1578    12254        *       or VD$KEYs pre-initialized and ready to pass to the Accessor
     1579    12255        *       as the ABSOLUTE parameter on VDA$FOPEN, VDA$LREAD, and VDA$LWRITE
     1580    12256        *       calls.
     1581    12257        */
     1582    12258
     1583    12259        %VD_KEY (NAME=VD_KEY_SCRATCH_LEFTOVER, STCLASS="CONSTANT SYMDEF",
     1584    12260            ITYPE=%KT_STRING, IREP=%REP_REMOTE,
     1585    12261            IBYTES=VD_FKEY_SCRATCH_LEFTOVER);
     1586    12297        %VD_FILE_KEY (NAME=VD_FKEY_SCRATCH_LEFTOVER, STCLASS="CONSTANT SYMDEF",
     1587    12298           IFNAME="%CONCAT(FSTCL_INTERNAL, PFK_CONSTANT, DK_SCRATCH, CHR_UNDERSCORE, PFN_SC
             12298        RATCH_LEFTOVER)");
     1588    12350
     1589    12351        %VD_KEY (NAME=VD_KEY_SCRATCH_SOURCE, STCLASS="CONSTANT SYMDEF",
     1590    12352            ITYPE=%KT_STRING, IREP=%REP_REMOTE, IBYTES=VD_FKEY_SCRATCH_SOURCE);
     1591    12388        %VD_FILE_KEY (NAME=VD_FKEY_SCRATCH_SOURCE, STCLASS="CONSTANT SYMDEF",
     1592    12389           IFNAME="%CONCAT(FSTCL_INTERNAL, PFK_CONSTANT, DK_SCRATCH, CHR_UNDERSCORE, PFN_SC
             12389        RATCH_SOURCE)");
     1593    12441
     1594    12442
     1595    12443        %VD_LOCATION (NAME=VD_LOC_$LEFTOVER, STCLASS="CONSTANT SYMDEF", INITS=1,
     1596    12444            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$LEFTOVER);
     1597    12519        %VD_TEXTC_REMOTE (NAME=STR_$LEFTOVER, STCLASS=CONSTANT,
     1598    12520            IBYTES='$LEFTOVER');
     1599    12583
     1600    12584        %VD_LOCATION (NAME=VD_LOC_$MATCHES, STCLASS="CONSTANT SYMDEF", INITS=1,
     1601    12585            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$MATCHES);
     1602    12660        %VD_TEXTC_REMOTE (NAME=STR_$MATCHES, STCLASS=CONSTANT, IBYTES='$MATCHES');
     1603    12723
     1604    12724        %VD_LOCATION (NAME=VD_LOC_$NOT_COPIED, STCLASS="CONSTANT SYMDEF", INITS=1,
     1605    12725            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$NOT_COPIED);
     1606    12800        %VD_TEXTC_REMOTE (NAME=STR_$NOT_COPIED, STCLASS=CONSTANT,
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:192  
     1607    12801            IBYTES='$NOT_COPIED');
     1608    12864
     1609    12865        %VD_LOCATION (NAME=VD_LOC_$RECORDS_DELETED, STCLASS="CONSTANT SYMDEF",
     1610    12866            INITS=1,
     1611    12867            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$RECORDS_DELETED);
     1612    12942        %VD_TEXTC_REMOTE (NAME=STR_$RECORDS_DELETED, STCLASS=CONSTANT,
     1613    12943            IBYTES='$RECORDS_DELETED');
     1614    13006
     1615    13007        %VD_LOCATION (NAME=VD_LOC_$RECORDS_INSERTED, STCLASS="CONSTANT SYMDEF",
     1616    13008            INITS=1,
     1617    13009            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$RECORDS_INSERTED);
     1618    13084        %VD_TEXTC_REMOTE (NAME=STR_$RECORDS_INSERTED, STCLASS=CONSTANT,
     1619    13085            IBYTES='$RECORDS_INSERTED');
     1620    13148
     1621    13149        %VD_LOCATION (NAME=VD_LOC_$SCREEN, STCLASS="CONSTANT SYMDEF", INITS=1,
     1622    13150            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$SCREEN);
     1623    13225        %VD_TEXTC_REMOTE (NAME=STR_$SCREEN, STCLASS=CONSTANT, IBYTES='$SCREEN');
     1624    13288
     1625    13289        %VD_LOCATION (NAME=VD_LOC_$SITES, STCLASS="CONSTANT SYMDEF", INITS=1,
     1626    13290            ITYPE1=%KT_STRING, IREP1=%REP_REMOTE, IBYTES1=STR_$SITES);
     1627    13365        %VD_TEXTC_REMOTE (NAME=STR_$SITES, STCLASS=CONSTANT, IBYTES='$SITES');
     1628    13428
     1629    13429
     1630    13430
     1631    13431        /*
     1632    13432        *   BOF is represented differently for string vs. numeric keys.
     1633    13433        */
     1634    13434
     1635    13435        %VD_KEY (NAME=VD_KEY_NUMERIC_BOF, STCLASS="CONSTANT SYMDEF",
     1636    13436            ITYPE=%KT_NUMBER, IREP=%REP_LOCAL, IBYTES=0);
     1637    13472        /*N* %VD_KEY (NAME=VD_KEY_STRING_BOF, STCLASS="CONSTANT SYMDEF", */
     1638    13473        /*N*     ITYPE=%KT_STRING, IREP=%REP_LOCAL, IBYTES="''"); */
     1639    13474
     1640    13475
     1641    13476        /*
     1642    13477        *   VD_KEY_FIRST_CONSEC_REC is different from the abstract "BOF" location,
     1643    13478        *       which is represented by VD_KEY_<num|str>_BOF for all file orgs.
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:193  
     1644    13479        *       Below is the key of the actual first record in a consec/UR file.
     1645    13480        */
     1646    13481        %VD_KEY (NAME=VD_KEY_FIRST_CONSEC_REC, STCLASS="CONSTANT SYMDEF",
     1647    13482            ITYPE=%KT_NUMBER, IREP=%REP_LOCAL, IBYTES=%MN_CONSEC_KEY);
     1648    13518        %VD_KEY (NAME=VD_KEY_MN_EDITKEY, STCLASS=CONSTANT SYMDEF,
     1649    13519            ITYPE=%KT_EDITKEY, IREP=%REP_LOCAL, IBYTES=%MN_EDITKEY);
     1650    13555        %VD_KEY (NAME=VD_KEY_MX_EDITKEY, STCLASS=CONSTANT SYMDEF,
     1651    13556            ITYPE=%KT_EDITKEY, IREP=%REP_LOCAL, IBYTES=%MX_EDITKEY);
     1652    13592
     1653    13593
     1654    13594        %BOX (TITLE="Tables of predefined-file-node readers and writers");

             13606    1   /***************************************************************************
             13608    1    *                                                                         *
             13612    1            *             Tables of predefined-file-node readers and writers         *
             13614    1            *                                                                        *
             13616    1          ***************************************************************************/

     1655    13620
     1656    13621        /*
     1657    13622        *   The nodes of predefined files contain formatted info (PL-6
     1658    13623        *       structures); a routine is used to read and write
     1659    13624        *       the Spec and/or Data components of these nodes for the user.
     1660    13625        *       This is used to perform side-effects, such as creating
     1661    13626        *       or destroying windows, mapping the internal form of a value
     1662    13627        *       into a display- or entry-oriented character form, etc.
     1663    13628        *   The index into the VD_NODE_xx$$ tables is the Spec type (%SPT_
     1664    13629        *       value) for the node being read or written.
     1665    13630        */
     1666    13631
     1667    13632    1   DCL VD_NODE_READERS$$ (0:%(MX_SPEC_TYPES-1)) EPTR CONSTANT SYMDEF
     1668    13633    1       INIT(ENTADDR(NIL),                  /* 0 */
     1669    13634    1           ENTADDR(NIL),                   /* Records from external files */
     1670    13635    1           ENTADDR(NIL),                   /* History file, level 1 */
     1671    13636    1           ENTADDR(VDA$RNAMES),            /* Names files, level 1 */
     1672    13637    1           ENTADDR(NIL),                   /* Structures file, level 1 */
     1673    13638    1           ENTADDR(NIL),                   /* Structures file, level 2 */
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:194  
     1674    13639    1           ENTADDR(NIL),                   /* Windows file, level 1 */
     1675    13640    1           ENTADDR(NIL),                   /* Windows file, level 2 */
     1676    13641    1           ENTADDR(NIL)*0);
     1677    13642
     1678    13643
     1679    13644    1   DCL VD_NODE_WRITERS$$ (0:%(MX_SPEC_TYPES-1)) EPTR CONSTANT SYMDEF
     1680    13645    1       INIT(ENTADDR(NIL),                  /* 0 */
     1681    13646    1           ENTADDR(NIL),                   /* Records from external files */
     1682    13647    1           ENTADDR(NIL),                   /* History file, level 1 */
     1683    13648    1           ENTADDR(VDA$WNAMES),            /* Names files, level 1 */
     1684    13649    1           ENTADDR(NIL),                   /* Structures file, level 1 */
     1685    13650    1           ENTADDR(NIL),                   /* Structures file, level 2 */
     1686    13651    1           ENTADDR(VDA$WWINDOWS),          /* Windows file, level 1 */
     1687    13652    1           ENTADDR(NIL),                   /* Windows file, level 2 */
     1688    13653    1           ENTADDR(NIL)*0);
     1689    13654
     1690    13655
     1691    13656        %BOX (TITLE="Initialization procedure", PAGE=YES);
             13664    1
             13668    1   /***************************************************************************
             13670    1    *                                                                         *
             13674    1            *                          Initialization procedure                      *
             13676    1            *                                                                        *
             13678    1          ***************************************************************************/

     1692    13682
     1693    13683    1   DCL B$TCB$ PTR SYMREF;
     1694    13684
     1695    13685
     1696    13686        %FPT_TIME (DEST=UTS, SOURCE=CLOCK, TSTAMP=VD_UTS_START, STCLASS=STATIC);
     1697    13705        /*
     1698    13706        *   FATAL_ERR is the static VD$ERR which is always at the head of
     1699    13707        *       the VD$ERR chain.  Tho all other VD$ERRs are "objects",
     1700    13708        *       and so are dynamically allocated, FATAL_ERR is statically
     1701    13709        *       allocated so we have some way to report errors during
     1702    13710        *       allocation!!
     1703    13711        */
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:195  
     1704    13712    1   DCL 1 FATAL_ERR STATIC,
     1705    13713           %VD$ERR (NAME=VD_ERR, STCLASS=STATIC, LEV=2, LAST=NO);
     1706    13766           %VD$NUMBER (NAME="*", DIM="(0:2)", STCLASS=STATIC, LEV=2, LAST=YES);
     1707    13811
     1708    13812        %VD_TEXTC (NAME=ERRMSG_FID, STCLASS=STATIC, MXNB=31);
     1709    13953
     1710    13954
     1711    13955    1   DCL STREAM$ PTR;
     1712    13956    1   DCL INTERNAL_DIR_TAIL$ PTR;
     1713    13957    1   DCL I UBIN;
     1714    13958
     1715    13959
     1716    13960        %VD$STREAM (NAME=STREAM, STCLASS="BASED(STREAM$)");
     1717    14066        %VD$KEY_NUMBER (NAME=KEY$NUMBER, STCLASS=BASED);
     1718    14081        %B$TCB (NAME=B$TCB, STCLASS="BASED(B$TCB$)");
     1719    14084        %B$ALT;
     1720    14092        %F$DCB;
     1721    14149
     1722    14150
     1723    14151
     1724    14152                /*  Initialize the static symdefs */
     1725    14153
     1726    14154    1           VD_6E = %CLEAR;

  14154  8 000002   000000 100400                    MLR     fill='000'O
         8 000003   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         8 000004   000000 004724 6                  ADSC9   VD_6E                    cn=0,n=2516

     1727    14155    1           VD_6E.HISTORY$ = ADDR(NIL);

  14155  8 000005   000001 236000 xsym               LDQ     B_VECTNIL+1
         8 000006   000000 756000 6                  STQ     VD_6E

     1728    14156    1           VD_6E.EQUALS$ = ADDR(NIL);

  14156  8 000007   000001 756000 6                  STQ     VD_6E+1

PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:196  
     1729    14157    1           VD_6E.LOCATIONS$ = ADDR(NIL);

  14157  8 000010   000002 756000 6                  STQ     VD_6E+2

     1730    14158    1           VD_6E.SYNONYMS$ = ADDR(NIL);

  14158  8 000011   000003 756000 6                  STQ     VD_6E+3

     1731    14159    1           VD_6E.KEYINS$ = ADDR(NIL);

  14159  8 000012   000004 756000 6                  STQ     VD_6E+4

     1732    14160    1           VD_6E.STRUCTURES$ = ADDR(NIL);

  14160  8 000013   000005 756000 6                  STQ     VD_6E+5

     1733    14161    1           VD_6E.STRUCTURE_EXTERNAL$ = ADDR(NIL);

  14161  8 000014   000010 756000 6                  STQ     VD_6E+8

     1734    14162    1           VD_6E.WINDOWS$ = ADDR(NIL);

  14162  8 000015   000006 756000 6                  STQ     VD_6E+6

     1735    14163    1           VD_6E.WS.INTERNAL_DIR$ = ADDR(NIL);

  14163  8 000016   000017 756000 6                  STQ     VD_6E+15

     1736    14164    1           VD_6E.SOURCE.OPERAND.STREAM$ = ADDR(NIL);

  14164  8 000017   000020 756000 6                  STQ     VD_6E+16

     1737    14165    1           VD_6E.SOURCE.OPERAND.EDIT_BLOCK$ = ADDR(NIL);

  14165  8 000020   000022 756000 6                  STQ     VD_6E+18

     1738    14166    1           VD_6E.SOURCE.OPERAND.EVAL$ = ADDR(NIL);
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:197  

  14166  8 000021   000023 756000 6                  STQ     VD_6E+19

     1739    14167    1           VD_6E.SOURCE.OPERAND.INTREE$ = ADDR(NIL);

  14167  8 000022   000021 756000 6                  STQ     VD_6E+17

     1740    14168    1           VD_6E.CMD_STREAM$ = ADDR(NIL);

  14168  8 000023   000026 756000 6                  STQ     VD_6E+22

     1741    14169    1           VD_6E.INTERRUPT.STATE# = %INST_PROCESSING;

  14169  8 000024   000001 220003                    LDX0    1,DU
         8 000025   000027 740000 6                  STX0    VD_6E+23

     1742    14170    1           VD_6E.INTERRUPT.CMD_LINE$ = ADDR(NIL);

  14170  8 000026   000030 756000 6                  STQ     VD_6E+24

     1743    14171    1           VD_6E.ERR_HEAD$ = ADDR(FATAL_ERR);

  14171  8 000027   000000 236000 9                  LDQ     0
         8 000030   000031 756000 6                  STQ     VD_6E+25

     1744    14172    1           VD_6E.ERR_TAIL$ = ADDR(FATAL_ERR);

  14172  8 000031   000032 756000 6                  STQ     VD_6E+26

     1745    14173    1           VD_6E.PORT_HEAD$ = ADDR(NIL);

  14173  8 000032   000001 236000 xsym               LDQ     B_VECTNIL+1
         8 000033   000033 756000 6                  STQ     VD_6E+27

     1746    14174    1           VD_6E.PORT_TAIL$ = ADDR(NIL);

  14174  8 000034   000034 756000 6                  STQ     VD_6E+28
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:198  

     1747    14175    1           VD_6E.WILD_STRINGS$ = ADDR(NIL);

  14175  8 000035   000025 756000 6                  STQ     VD_6E+21

     1748    14176
     1749    14177    1           FATAL_ERR = %CLEAR;

  14177  8 000036   000000 100400                    MLR     fill='000'O
         8 000037   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         8 000040   001656 000104 6                  ADSC9   FATAL_ERR                cn=0,n=68

     1750    14178    1           FATAL_ERR.VD_ERR.FLINK$ = ADDR(NIL);

  14178  8 000041   001657 756000 6                  STQ     FATAL_ERR+1

     1751    14179
     1752    14180    1           VD_CURRENT_WINDOW$ = ADDR(NIL);

  14180  8 000042   001226 756000 6                  STQ     VD_CURRENT_WINDOW$

     1753    14181    1           VD_COMMAND_WINDOW$ = ADDR(NIL);

  14181  8 000043   001227 756000 6                  STQ     VD_COMMAND_WINDOW$

     1754    14182
     1755    14183    1           VD_ACCESSOR_PRIV = %CLEAR;

  14183  8 000044   001230 450000 6                  STZ     VD_ACCESSOR_PRIV

     1756    14184
     1757    14185    1           VD_DCBS = %CLEAR;

  14185  8 000045   001165 450000 6                  STZ     VD_DCBS
         8 000046   001166 450000 6                  STZ     VD_DCBS+1

     1758    14186
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:199  
     1759    14187    2           DO I = 0 TO %(MX_CMD_OBJECTS-1);

  14187  8 000047   200005 450100                    STZ     I,,AUTO

     1760    14188    2              VD_CMD_OBJECTS$ (I) = ADDR(NIL);

  14188  8 000050   000001 236000 xsym               LDQ     B_VECTNIL+1
         8 000051   200005 720100                    LXL0    I,,AUTO
         8 000052   001231 756010 6                  STQ     VD_CMD_OBJECTS$,X0

     1761    14189    2              END;

  14189  8 000053   200005 235100                    LDA     I,,AUTO
         8 000054   000001 035007                    ADLA    1,DL
         8 000055   200005 755100                    STA     I,,AUTO
         8 000056   000062 115007                    CMPA    50,DL
         8 000057   000050 602000 8                  TNC     s:14188

     1762    14190
     1763    14191    1           VD_LAST_LOADED_FILE_SPEC = %CLEAR;

  14191  8 000060   000000 100400                    MLR     fill='000'O
         8 000061   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         8 000062   001313 000040 6                  ADSC9   VD_LAST_LOADED_FILE_SPEC cn=0,n=32

     1764    14192
     1765    14193    1           VD_EXIT.CODE_ = VECTOR(FATAL_ERR.VD_ERR.ERR);

  14193  8 000063   000002 237000 9                  LDAQ    2
         8 000064   001636 757000 6                  STAQ    VD_EXIT+2

     1766    14194    1           VD_EXIT.V.STEPCC# = %STEPCC_OK;

  14194  8 000065   000000 236003                    LDQ     0,DU
         8 000066   001640 552040 6                  STBQ    VD_EXIT+4,'40'O

     1767    14195
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:200  
     1768    14196    1           CALL M$TIME (FPT_TIME);

  14196  8 000067   001642 630400 6                  EPPR0   FPT_TIME
         8 000070   020004 713400                    CLIMB   8196
         8 000071   402000 401760                    pmme    nvectors=5

     1769    14197
     1770    14198
     1771    14199    1           CALL INIT_MCB (VD_MCB_SMALL) ALTRET (INIT_MCB_FAILED);

  14199  8 000072   000004 236000 9                  LDQ     4
         8 000073   200007 756100                    STQ     I+2,,AUTO
         8 000074   000261 701000 8                  TSX1    INIT_MCB
         8 000075   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1772    14200    1           CALL INIT_MCB (VD_MCB_LARGE) ALTRET (INIT_MCB_FAILED);

  14200  8 000076   000005 236000 9                  LDQ     5
         8 000077   200007 756100                    STQ     I+2,,AUTO
         8 000100   000261 701000 8                  TSX1    INIT_MCB
         8 000101   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1773    14201
     1774    14202
     1775    14203                /*
     1776    14204                *   Can now allocate dynamic storage.
     1777    14205                */
     1778    14206
     1779    14207    1           INTERNAL_DIR_TAIL$ = ADDR(NIL);

  14207  8 000102   000001 236000 xsym               LDQ     B_VECTNIL+1
         8 000103   200004 756100                    STQ     INTERNAL_DIR_TAIL$,,AUTO

     1780    14208    1           CALL BUILD_DIR_NODE (%LENGTHC(DK_HISTORY), %DK_HISTORY)

  14208  8 000104   000006 236000 9                  LDQ     6
         8 000105   200010 756100                    STQ     @DIR_KEY_LEN+1,,AUTO
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:201  
         8 000106   000007 236000 9                  LDQ     7
         8 000107   200007 756100                    STQ     I+2,,AUTO
         8 000110   000314 701000 8                  TSX1    BUILD_DIR_NODE
         8 000111   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1781    14209    1             ALTRET (BUILD_DIR_NODE_FAILED);
     1782    14210    1           CALL BUILD_DIR_NODE (%LENGTHC(DK_NAMES), %DK_NAMES)

  14210  8 000112   000010 236000 9                  LDQ     8
         8 000113   200010 756100                    STQ     @DIR_KEY_LEN+1,,AUTO
         8 000114   000011 236000 9                  LDQ     9
         8 000115   200007 756100                    STQ     I+2,,AUTO
         8 000116   000314 701000 8                  TSX1    BUILD_DIR_NODE
         8 000117   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1783    14211    1             ALTRET (BUILD_DIR_NODE_FAILED);
     1784    14212    1           CALL BUILD_DIR_NODE (%LENGTHC(DK_SCRATCH), %DK_SCRATCH)

  14212  8 000120   000012 236000 9                  LDQ     10
         8 000121   200010 756100                    STQ     @DIR_KEY_LEN+1,,AUTO
         8 000122   000007 236000 9                  LDQ     7
         8 000123   200007 756100                    STQ     I+2,,AUTO
         8 000124   000314 701000 8                  TSX1    BUILD_DIR_NODE
         8 000125   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1785    14213    1             ALTRET (BUILD_DIR_NODE_FAILED);
     1786    14214    1           CALL BUILD_DIR_NODE (%LENGTHC(DK_STRUCTURES), %DK_STRUCTURES)

  14214  8 000126   000013 236000 9                  LDQ     11
         8 000127   200010 756100                    STQ     @DIR_KEY_LEN+1,,AUTO
         8 000130   000014 236000 9                  LDQ     12
         8 000131   200007 756100                    STQ     I+2,,AUTO
         8 000132   000314 701000 8                  TSX1    BUILD_DIR_NODE
         8 000133   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1787    14215    1             ALTRET (BUILD_DIR_NODE_FAILED);
     1788    14216    1           CALL BUILD_DIR_NODE (%LENGTHC(DK_WINDOWS), %DK_WINDOWS)
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:202  

  14216  8 000134   000015 236000 9                  LDQ     13
         8 000135   200010 756100                    STQ     @DIR_KEY_LEN+1,,AUTO
         8 000136   000007 236000 9                  LDQ     7
         8 000137   200007 756100                    STQ     I+2,,AUTO
         8 000140   000314 701000 8                  TSX1    BUILD_DIR_NODE
         8 000141   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1789    14217    1             ALTRET (BUILD_DIR_NODE_FAILED);
     1790    14218
     1791    14219
     1792    14220    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.SOURCE.OPERAND.STREAM$)

  14220  8 000142   000017 630400 9                  EPPR0   15
         8 000143   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000144   000000 701000 xent               TSX1    VDG$OALLOC
         8 000145   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1793    14221    1             ALTRET (OALLOC_FAILED);
     1794    14222    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.EQUALS$)

  14222  8 000146   000021 630400 9                  EPPR0   17
         8 000147   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000150   000000 701000 xent               TSX1    VDG$OALLOC
         8 000151   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1795    14223    1             ALTRET (OALLOC_FAILED);
     1796    14224    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.LOCATIONS$)

  14224  8 000152   000023 630400 9                  EPPR0   19
         8 000153   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000154   000000 701000 xent               TSX1    VDG$OALLOC
         8 000155   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1797    14225    1             ALTRET (OALLOC_FAILED);
     1798    14226    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.SYNONYMS$)

PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:203  
  14226  8 000156   000025 630400 9                  EPPR0   21
         8 000157   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000160   000000 701000 xent               TSX1    VDG$OALLOC
         8 000161   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1799    14227    1             ALTRET (OALLOC_FAILED);
     1800    14228    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.STRUCTURES$)

  14228  8 000162   000027 630400 9                  EPPR0   23
         8 000163   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000164   000000 701000 xent               TSX1    VDG$OALLOC
         8 000165   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1801    14229    1             ALTRET (OALLOC_FAILED);
     1802    14230    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.KEYINS$)

  14230  8 000166   000031 630400 9                  EPPR0   25
         8 000167   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000170   000000 701000 xent               TSX1    VDG$OALLOC
         8 000171   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1803    14231    1             ALTRET (OALLOC_FAILED);
     1804    14232    1           CALL VDG$OALLOC (%CLS_STREAM, VD_6E.WINDOWS$)

  14232  8 000172   000033 630400 9                  EPPR0   27
         8 000173   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000174   000000 701000 xent               TSX1    VDG$OALLOC
         8 000175   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1805    14233    1             ALTRET (OALLOC_FAILED);
     1806    14234
     1807    14235
     1808    14236                /*
     1809    14237                *   We must allocate our own pre-processor ECB work area.
     1810    14238                *   We won't get a chance to expand this work area:  make it
     1811    14239                *       big now.
     1812    14240                */
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:204  
     1813    14241        /*      XUE_PPCB.ECB.WKSZ# = %(NW_EVAL_WORK * 3);                   */
     1814    14242        /*      CALL VDG$OALLOC (%CLS_BUFFER, XUE_PPCB.ECB.WORK$,            */
     1815    14243        /*        SIZEW(VD$BUFFER_HEADER) + %NW_EVAL_WORK)                  */
     1816    14244        /*        ALTRET (OALLOC_FAILED);                                   */
     1817    14245        /*      XUE_PPCB.ECB.WORK$->VD$BUFFER.LENGTH# =                     */
     1818    14246        /*        ((SIZEW(VD$BUFFER_HEADER) + %NW_EVAL_WORK) *              */
     1819    14247        /*        %NB_PER_WORD) - LENGTHC(VD$BUFFER_HEADER);                */
     1820    14248        /*      XUE_PPCB.ECB.WORK$ = PALIGNW(ADDR(XUE_PPCB.ECB.WORK$ ->     */
     1821    14249        /*        VD$BUFFER.BYTES));                                        */
     1822    14250
     1823    14251
     1824    14252    1           XUE_ECB.WKSZ# = %NW_EVAL_WORK;

  14252  8 000176   000226 235007                    LDA     150,DL
         8 000177   001602 755000 6                  STA     XUE_ECB+2

     1825    14253    1           CALL VDG$OALLOC (%CLS_BUFFER, XUE_ECB.WORK$,

  14253  8 000200   000036 630400 9                  EPPR0   30
         8 000201   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 000202   000000 701000 xent               TSX1    VDG$OALLOC
         8 000203   000256 702000 8                  TSX2    INIT_MCB_FAILED

     1826    14254    1             SIZEW(VD$BUFFER_HEADER) + %NW_EVAL_WORK)
     1827    14255    1             ALTRET (OALLOC_FAILED);
     1828    14256    1           XUE_ECB.WORK$->VD$BUFFER.LENGTH# =

  14256  8 000204   001132 220003                    LDX0    602,DU
         8 000205   001601 470400 6                  LDP0    XUE_ECB+1
         8 000206   000002 740100                    STX0    2,,PR0

     1829    14257    1             ((SIZEW(VD$BUFFER_HEADER) + %NW_EVAL_WORK) *
     1830    14258    1             %NB_PER_WORD) - LENGTHC(VD$BUFFER_HEADER);
     1831    14259    1           XUE_ECB.WORK$ = PALIGNW(ADDR(XUE_ECB.WORK$ -> VD$BUFFER.BYTES));

  14259  8 000207   001601 236000 6                  LDQ     XUE_ECB+1
         8 000210   000041 036000 9                  ADLQ    33
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:205  
         8 000211   770000 036007                    ADLQ    -4096,DL
         8 000212   000042 376000 9                  ANQ     34
         8 000213   001601 756000 6                  STQ     XUE_ECB+1

     1832    14260
     1833    14261
     1834    14262    1           CALL XUG$INIT (XUG_GETCMD, XUG_INIT)

  14262  8 000214   000043 630400 9                  EPPR0   35
         8 000215   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000216   000000 701000 xent               TSX1    XUG$INIT
         8 000217   000247 702000 8                  TSX2    XUG_INIT_FAILED

     1835    14263    1             ALTRET (XUG_INIT_FAILED);
     1836    14264
     1837    14265
     1838    14266    1           CALL CONCAT (ERRMSG_FID.BYTES,

  14266  8 000220   000000 236007 xsym               LDQ     M$LM,DL
         8 000221   000045 470400 9                  LDP0    37
         8 000222   000000 471500                    LDP1    0,,PR0
         8 000223   100000 473506                    LDP3    0,QL,PR1
         8 000224   040000 100400                    MLR     fill='040'O
         8 000225   002114 000012 7                  ADSC9   VD_NODE_WRITERS$$+31     cn=0,n=10
         8 000226   001677 200012 6                  ADSC9   ERRMSG_FID               cn=1,n=10
         8 000227   040000 100500                    MLR     fill='040'O
         8 000230   300020 000010                    ADSC9   16,,PR3                  cn=0,n=8
         8 000231   001701 600025 6                  ADSC9   ERRMSG_FID+2             cn=3,n=21

     1839    14267    1             %CONCAT(CHR_ERRFILE_NAME, CHR_PERIOD),
     1840    14268    1             DCBADDR(DCBNUM(M$LM))->F$DCB.ACCT#);
     1841    14269    1           ERRMSG_FID.LENGTH# =

  14269  8 000232   000000 236007 xsym               LDQ     M$LM,DL
         8 000233   000045 470400 9                  LDP0    37
         8 000234   000000 471500                    LDP1    0,,PR0
         8 000235   100000 473506                    LDP3    0,QL,PR1
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:206  
         8 000236   022000 236003                    LDQ     9216,DU
         8 000237   001677 552040 6                  STBQ    ERRMSG_FID,'40'O

     1842    14270    1             %LENGTHC(CONCAT(CHR_ERRFILE_NAME, CHR_PERIOD)) +
     1843    14271    1             LENGTHC(DCBADDR(DCBNUM(M$LM))->F$DCB.ACCT#);
     1844    14272    1           XUG_GETCMD.ERRMFID$ = ADDR(ERRMSG_FID);

  14272  8 000240   000046 236000 9                  LDQ     38
         8 000241   001432 756000 6                  STQ     XUG_GETCMD+2

     1845    14273    1           CALL XUG$SETERRMSG (XUG_GETCMD)

  14273  8 000242   000043 630400 9                  EPPR0   35
         8 000243   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000244   000000 701000 xent               TSX1    XUG$SETERRMSG
         8 000245   000247 702000 8                  TSX2    XUG_INIT_FAILED

     1846    14274    1             ALTRET (XUG_SETERRMSG_FAILED);
     1847    14275
     1848    14276
     1849    14277    1           RETURN;

  14277  8 000246   000000 702200 xent               TSX2  ! X66_ARET

  14272  8 000247                       XUG_INIT_FA* null
  14272  8 000247                       XUG_SETERRM* null
     1850    14278
     1851    14279
     1852    14280                %BOX (TITLE="Error Handlers");

             14292    1   /***************************************************************************
             14294    1    *                                                                         *
             14298    1            *                               Error Handlers                           *
             14300    1            *                                                                        *
             14302    1          ***************************************************************************/

     1853    14306
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:207  
     1854    14307                /*
     1855    14308                *   We can't really talk to the user via the command
     1856    14309                *       window or the Presenter yet, so when we get an
     1857    14310                *       error, we always treat it as fatal.
     1858    14311                */
     1859    14312
     1860    14313    1   XUG_INIT_FAILED: ;
     1861    14314    1   XUG_SETERRMSG_FAILED: ;
     1862    14315    1           FATAL_ERR.VD_ERR.ERR.CODE# = %E$PARSE_FAILED;

  14315  8 000247   001660 236000 6                  LDQ     FATAL_ERR+2
         8 000250   000047 376000 9                  ANQ     39
         8 000251   001130 276007                    ORQ     600,DL
         8 000252   001660 756000 6                  STQ     FATAL_ERR+2

     1863    14316    1           FATAL_ERR.VD_ERR.FLAGLEV# = %FLV_FATAL;

  14316  8 000253   000004 220003                    LDX0    4,DU
         8 000254   001661 740000 6                  STX0    FATAL_ERR+3

     1864    14317    1           ALTRETURN;

  14317  8 000255   000000 702200 xent               TSX2  ! X66_AALT

  14316  8 000256                       INIT_MCB_FA* null
  14316  8 000256                       BUILD_DIR_N* null
  14316  8 000256                       OALLOC_FAIL* null
     1865    14318
     1866    14319
     1867    14320    1   INIT_MCB_FAILED: ;
     1868    14321    1   BUILD_DIR_NODE_FAILED: ;
     1869    14322    1   OALLOC_FAILED: ;
     1870    14323    1           FATAL_ERR.VD_ERR.FLAGLEV# = %FLV_FATAL;

  14323  8 000256   000004 220003                    LDX0    4,DU
         8 000257   001661 740000 6                  STX0    FATAL_ERR+3

PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:208  
     1871    14324    1           ALTRETURN;

  14324  8 000260   000000 702200 xent               TSX2  ! X66_AALT

     1872    14325
     1873    14326
     1874    14327                %BOX (TITLE=INIT_MCB, PAGE=YES);
             14335    1
             14339    1   /***************************************************************************
             14341    1    *                                                                         *
             14345    1            *                                  INIT_MCB                              *
             14347    1            *                                                                        *
             14349    1          ***************************************************************************/

     1875    14353
     1876    14354        /*I* NAME: INIT_MCB
     1877    14355            PARAMETERS:
     1878    14356                MCB - XUM$MCB to initialize.
     1879    14357            INPUT:
     1880    14358                FATAL_ERR must be ready to use.
     1881    14359            OUTPUT:
     1882    14360                MCB will be initialized, ready for VDG$OALLOC to use.
     1883    14361                    A new data segment will have been obtained for the
     1884    14362                    MCB.
     1885    14363            DESCRIPTION:
     1886    14364                Obtain a new data segment from the monitor.  Initialize the
     1887    14365                MCB to point to it.
     1888    14366        */
     1889    14367
     1890    14368    1   INIT_MCB: PROC (MCB) ALTRET;

  14368  8 000261   200006 741300       INIT_MCB     STX1  ! I+1,,AUTO

     1891    14369        %XUM$MCB (NAME=MCB, STCLASS="");
     1892    14373
     1893    14374
     1894    14375        %FPT_GDS (RESULTS=GDS_RESULTS, SEGSIZE=%NW_DATA_SEG_INCR);
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:209  
     1895    14391    2   DCL GDS_RESULTS VECTOR STATIC;
     1896    14392
     1897    14393
     1898    14394
     1899    14395    2           GDS_RESULTS = VECTOR(NIL);

  14395  8 000262   000050 237000 9                  LDAQ    40
         8 000263   001716 757000 6                  STAQ    GDS_RESULTS

     1900    14396    2           CALL M$GDS (FPT_GDS) ALTRET (GDS_FAILED);

  14396  8 000264   001710 630400 6                  EPPR0   FPT_GDS
         8 000265   430001 713400                    CLIMB   alt,gds
         8 000266   400400 401760                    pmme    nvectors=2
         8 000267   000304 702000 8                  TSX2    GDS_FAILED

     1901    14397
     1902    14398    2           MCB.SEGMENT_BASE$ = VBASE(GDS_RESULTS);

  14398  8 000270   001717 236000 6                  LDQ     GDS_RESULTS+1
         8 000271   200007 470500                    LDP0    @MCB,,AUTO
         8 000272   000002 756100                    STQ     2,,PR0

     1903    14399    2           MCB.HI_SEGMENT$ = VBASE(GDS_RESULTS);

  14399  8 000273   001717 236000 6                  LDQ     GDS_RESULTS+1
         8 000274   000003 756100                    STQ     3,,PR0

     1904    14400    2           MCB.WKSZ = (VBOUND(GDS_RESULTS) + 1) / %NB_PER_WORD;

  14400  8 000275   001716 236000 6                  LDQ     GDS_RESULTS
         8 000276   000020 772000                    QRL     16
         8 000277   000001 036007                    ADLQ    1,DL
         8 000300   000002 772000                    QRL     2
         8 000301   000004 756100                    STQ     4,,PR0

     1905    14401
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:210  
     1906    14402    2           RETURN;

  14402  8 000302   200006 221300                    LDX1  ! I+1,,AUTO
         8 000303   000001 702211                    TSX2  ! 1,X1

     1907    14403
     1908    14404
     1909    14405
     1910    14406    2   GDS_FAILED:
     1911    14407    2           FATAL_ERR.VD_ERR.ERR = B$TCB.ALT$->B$ALT.ERR;

  14407  8 000304   000000 470400 xsym  GDS_FAILED   LDP0    B$TCB$
         8 000305   000000 471500                    LDP1    0,,PR0
         8 000306   100102 236100                    LDQ     66,,PR1
         8 000307   001660 756000 6                  STQ     FATAL_ERR+2

     1912    14408    2           FATAL_ERR.VD_ERR.FLAGLEV# = %FLV_FATAL;

  14408  8 000310   000004 220003                    LDX0    4,DU
         8 000311   001661 740000 6                  STX0    FATAL_ERR+3

     1913    14409    2           ALTRETURN;

  14409  8 000312   200006 221300                    LDX1  ! I+1,,AUTO
         8 000313   000000 702211                    TSX2  ! 0,X1

     1914    14410
     1915    14411    2   END INIT_MCB;
     1916    14412
     1917    14413
     1918    14414                %BOX (TITLE=BUILD_DIR_NODE, PAGE=YES);
             14422    2
             14426    2   /***************************************************************************
             14428    2    *                                                                         *
             14432    2            *                               BUILD_DIR_NODE                           *
             14434    2            *                                                                        *
             14436    2          ***************************************************************************/
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:211  

     1919    14440
     1920    14441        /*I* NAME: BUILD_DIR_NODE
     1921    14442            PARAMETERS:
     1922    14443                DIR_KEY_LEN - # of bytes in DIR_KEY below.
     1923    14444                DIR_KEY - A %DK_ value, specifying the key for the VD$DIR_NODE.
     1924    14445            INPUT:
     1925    14446                We must be able to allocate dynamic storage.
     1926    14447                VD_6E.WS.INTERNAL_DIR$ must point to the first VD$DIR_NODE
     1927    14448                    in the chain; if none yet, it must be ADDR(NIL).
     1928    14449                INTERNAL_DIR_TAIL$ must point to the last VD$DIR_NODE in
     1929    14450                    the chain; if none yet, it must be ADDR(NIL).
     1930    14451            OUTPUT:
     1931    14452                A VD$DIR_NODE will be appended to VD_6E.WS.INTERNAL_DIR$.
     1932    14453            DESCRIPTION:
     1933    14454                Allocate and initialized a VD$DIR_NODE.  Append it to the
     1934    14455                chain rooted in VD_6E.WS.INTERNAL_DIR$.
     1935    14456        */
     1936    14457
     1937    14458    1   BUILD_DIR_NODE: PROC (DIR_KEY_LEN, DIR_KEY) ALTRET;

  14458  8 000314   200006 741300       BUILD_DIR_N* STX1  ! I+1,,AUTO

     1938    14459    2   DCL DIR_KEY_LEN SBIN;
     1939    14460    2   DCL DIR_KEY CHAR(DIR_KEY_LEN) CALIGNED;
     1940    14461
     1941    14462
     1942    14463    2   DCL DIR_NODE$ PTR;
     1943    14464
     1944    14465
     1945    14466        %VD$DIR_NODE (NAME=DIR$NODE, STCLASS="BASED(DIR_NODE$)");
     1946    14504
     1947    14505
     1948    14506
     1949    14507    2           CALL VDG$OALLOC (%CLS_DIR_NODE, DIR_NODE$)

  14507  8 000315   200011 630500                    EPPR0   DIR_NODE$,,AUTO
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:212  
         8 000316   200013 450500                    STP0    DIR_NODE$+2,,AUTO
         8 000317   000052 236000 9                  LDQ     42
         8 000320   200012 756100                    STQ     DIR_NODE$+1,,AUTO
         8 000321   200012 630500                    EPPR0   DIR_NODE$+1,,AUTO
         8 000322   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000323   000000 701000 xent               TSX1    VDG$OALLOC
         8 000324   000356 702000 8                  TSX2    OALLOC_FAILED

     1950    14508    2             ALTRET (OALLOC_FAILED);
     1951    14509    2           DIR$NODE.KEY = DIR_KEY;

  14509  8 000325   200007 470500                    LDP0    @DIR_KEY_LEN,,AUTO
         8 000326   000000 720100                    LXL0    0,,PR0
         8 000327   200010 471500                    LDP1    @DIR_KEY,,AUTO
         8 000330   200011 473500                    LDP3    DIR_NODE$,,AUTO
         8 000331   040100 100540                    MLR     fill='040'O
         8 000332   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         8 000333   300003 000037                    ADSC9   3,,PR3                   cn=0,n=31

     1952    14510    2           DIR$NODE.FILE_STCLASS = %FSTCL_INTERNAL;

  14510  8 000334   200011 473500                    LDP3    DIR_NODE$,,AUTO
         8 000335   042000 236003                    LDQ     17408,DU
         8 000336   300013 552140                    STBQ    11,'40'O,PR3

     1953    14511
     1954    14512    2           DIR$NODE.BLINK$ = INTERNAL_DIR_TAIL$;

  14512  8 000337   200004 236100                    LDQ     INTERNAL_DIR_TAIL$,,AUTO
         8 000340   300001 756100                    STQ     1,,PR3

     1955    14513    2           IF INTERNAL_DIR_TAIL$ = ADDR(NIL) THEN

  14513  8 000341   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000342   000346 601000 8                  TNZ     s:14516

     1956    14514    2              VD_6E.WS.INTERNAL_DIR$ = DIR_NODE$;
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:213  

  14514  8 000343   200011 236100                    LDQ     DIR_NODE$,,AUTO
         8 000344   000017 756000 6                  STQ     VD_6E+15
         8 000345   000352 710000 8                  TRA     s:14517

     1957    14515    2           ELSE
     1958    14516    2              DIR$NODE.BLINK$->DIR$NODE.FLINK$ = DIR_NODE$;

  14516  8 000346   200011 473500                    LDP3    DIR_NODE$,,AUTO
         8 000347   300001 474500                    LDP4    1,,PR3
         8 000350   200011 236100                    LDQ     DIR_NODE$,,AUTO
         8 000351   400002 756100                    STQ     2,,PR4

     1959    14517    2           INTERNAL_DIR_TAIL$ = DIR_NODE$;

  14517  8 000352   200011 236100                    LDQ     DIR_NODE$,,AUTO
         8 000353   200004 756100                    STQ     INTERNAL_DIR_TAIL$,,AUTO

     1960    14518
     1961    14519    2           RETURN;

  14519  8 000354   200006 221300                    LDX1  ! I+1,,AUTO
         8 000355   000001 702211                    TSX2  ! 1,X1

  14517  8 000356                       OALLOC_FAIL* null
     1962    14520
     1963    14521
     1964    14522    2   OALLOC_FAILED: ;
     1965    14523    2           ALTRETURN;

  14523  8 000356   200006 221300                    LDX1  ! I+1,,AUTO
         8 000357   000000 702211                    TSX2  ! 0,X1
     1966    14524
     1967    14525    2   END BUILD_DIR_NODE;
     1968    14526
     1969    14527    1   END VDG$MINIT;
     1970    14528        %EOD;
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:214  

PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:215  
--  Include file information  --

   XUG_ENTRY.:LIBRARY  cannot be made into a system file and is referenced.
   XUE_MACRO_C.:LIBRARY  is referenced.
   XUH_MACRO_C.:LIBRARY  is referenced.
   XUM_MACRO_C.:LIBRARY  is referenced.
   XU_MACRO_C.:LIBRARY  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   NK_VFC_C.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDG$MINIT.
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:216  

 **** Variables and constants ****

  ****  Section 006  Data  VDG$MINIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  1677-0-0/c STRC(288)   r     1 ERRMSG_FID              1656-0-0/w STRC(612)   r     1 FATAL_ERR
  1710-0-0/d STRC(216)   r     1 FPT_GDS                 1642-0-0/d STRC(432)   r     1 FPT_TIME
  1716-0-0/d VECT        r     1 GDS_RESULTS                0-0-0/w STRC(22644) r     1 VD_6E
  1230-0-0/w STRC(9)     r     1 VD_ACCESSOR_PRIV
  1231-0-0/w PTR         r     1 VD_CMD_OBJECTS$(0:49)
  1227-0-0/w PTR         r     1 VD_COMMAND_WINDOW$      1226-0-0/w PTR         r     1 VD_CURRENT_WINDOW$
  1165-0-0/w STRC(72)    r     1 VD_DCBS                 1634-0-0/d STRC(216)   r     1 VD_EXIT
  1313-0-0/w STRC(288)   r     1 VD_LAST_LOADED_FILE_SPEC
  1334-0-0/w STRC(324)   r     1 VD_MCB_LARGE            1323-0-0/w STRC(324)   r     1 VD_MCB_SMALL
  1576-0-0/c STRC(72)    r     1 VD_PACCT                1345-0-0/w STRC(504)   r     1 VD_PCB
  1574-0-0/c STRC(54)    r     1 VD_PNAME                1167-0-0/w UBIN        r     1 VD_UTS_START
  1600-0-0/d STRC(1008)  r     1 XUE_ECB                 1430-0-0/d STRC(1512)  r     1 XUG_GETCMD
  1364-0-0/d STRC(1296)  r     1 XUG_INIT                1502-0-0/d STRC(2052)  r     1 XUH_PARAM

  ****  Section 007 RoData VDG$MINIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(2)     r     1 CMD_PROMPT                21-0-0/c CHAR(5)     r     1 RW1
    23-0-0/c CHAR(97)    r     1 RW2                       54-0-0/c CHAR(37)    r     1 RW3
    66-0-0/c CHAR(93)    r     1 RW4                      116-0-0/c CHAR(46)    r     1 RW5
   132-0-0/c CHAR(55)    r     1 RW6                      150-0-0/c CHAR(78)    r     1 RW7
   174-0-0/c CHAR(41)    r     1 RW8                      207-0-0/c CHAR(28)    r     1 RW9
  1666-0-0/w STRC(162)   r     1 STR_$LEFTOVER           1704-0-0/w STRC(153)   r     1 STR_$MATCHES
  1722-0-0/w STRC(180)   r     1 STR_$NOT_COPIED         1740-0-0/w STRC(225)   r     1 STR_$RECORDS_DELETED
  1760-0-0/w STRC(234)   r     1 STR_$RECORDS_INSERTED
  2000-0-0/w STRC(144)   r     1 STR_$SCREEN             2015-0-0/w STRC(135)   r     1 STR_$SITES
   216-0-0/w STRC(612)   r     1 VD_DW_BOOLEAN            237-0-0/w STRC(1188)  r     1 VD_DW_COMPONENT
   300-0-0/w STRC(900)   r     1 VD_DW_DIRECTION          331-0-0/w STRC(1188)  r     1 VD_DW_EXIST
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:217  
   372-0-0/w STRC(2340)  r     1 VD_DW_KEY_TYPE           473-0-0/w STRC(1476)  r     1 VD_DW_NAME_DATA_TYPE
   544-0-0/w STRC(1188)  r     1 VD_DW_ORG                605-0-0/w STRC(1188)  r     1 VD_DW_POINT
   646-0-0/w STRC(900)   r     1 VD_DW_PROTECT
  1607-0-0/w STRC(648)   r     1 VD_FKEY_SCRATCH_LEFTOVER
  1633-0-0/w STRC(648)   r     1 VD_FKEY_SCRATCH_SOURCE
  2031-0-0/w EPTR        r     1 VD_NODE_READERS$$(0:19)
  2055-0-0/w EPTR        r     1 VD_NODE_WRITERS$$(0:19)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/w PTR         r     1 @DIR_KEY                   7-0-0/w PTR         r     1 @DIR_KEY_LEN
     7-0-0/w PTR         r     1 @MCB                      *0-0-0/c ACHR        r     1 DIR_KEY
    *0-0-0/w SBIN        r     1 DIR_KEY_LEN               11-0-0/w PTR         r     1 DIR_NODE$
     5-0-0/w UBIN        r     1 I                          4-0-0/w PTR         r     1 INTERNAL_DIR_TAIL$
    *0-0-0/w STRC(324)   r     1 MCB                        3-0-0/w PTR         r     1 STREAM$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w SBIN        r     1 VD_COMMAND_LINE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(576)   r     1 DIR$NODE                   0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0N  NULL        r     1 M$EW                       0-0-0N  NULL        r     1 M$LM
     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$ME
     0-0-0/w STRC(1044)  r     1 VD$BLOCK_BUFFER            0-0-0/w STRC(936)   r     1 VD$BLOCK_DESC
     0-0-0/w ASTR(90)    r     1 VD$BUFFER                  0-0-0/w STRC(90)    r     1 VD$BUFFER_HEADER
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:218  
     0-0-0/w STRC(900)   r     1 VD$CMD_STREAM              0-0-0/w STRC(576)   r     1 VD$DIR_NODE
     0-0-0/w STRC(900)   r     1 VD$ENCODED_NODE            0-0-0/w STRC(612)   r     1 VD$ERR
     0-0-0/w STRC(2124)  r     1 VD$EVAL                    0-0-0/w STRC(864)   r     1 VD$EVAL_PATTERN
     0-0-0/w STRC(648)   r     1 VD$FILE_KEY                0-0-0/w STRC(468)   r     1 VD$FILE_NODE
     0-0-0/w STRC(36972) r     1 VD$FIT                     0-0-0/w STRC(216)   r     1 VD$IT_ADJUST
     0-0-0/w STRC(1116)  r     1 VD$IT_BLOCK_EXPR           0-0-0/w STRC(540)   r     1 VD$IT_COMMAND
     0-0-0/w STRC(324)   r     1 VD$IT_OPERAND              0-0-0/w STRC(216)   r     1 VD$IT_OPERATOR
     0-0-0/w STRC(216)   r     1 VD$IT_SELECT               0-0-0/w STRC(252)   r     1 VD$NAME_SPEC
     0-0-0/w STRC(144)   r     1 VD$NUMBER                  0-0-0/w STRC(144)   r     1 VD$POINTER
     0-0-0/w STRC(1944)  r     1 VD$PORT                    0-0-0/w STRC(864)   r     1 VD$STREAM
     0-0-0/w STRC(324)   r     1 VD$STRUCTURE_LEVEL         0-0-0/w STRC(180)   r     1 VD$STRUCTURE_SPEC
     0-0-0/w STRC(396)   r     1 VD$TABS                    0-0-0/w STRC(180)   r     1 VD$WINDOW_BLOCK
     0-0-0/w STRC(900)   r     1 VD$WINDOW_SPEC


   Procedure VDG$MINIT requires 240 words for executable code.
   Procedure VDG$MINIT requires 12 words of local(AUTO) storage.
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:219  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:220  
          MINI XREF LISTING

B$ALT.CODE
     14086**DCL     14086--REDEF   14087--REDEF   14087--REDEF
B$ALT.ERR
     14087**DCL     14407>>ASSIGN
B$ALT.ERR.ERR#
     14088**DCL     14088--REDEF
B$ALT.EVID
     14087**DCL     14087--REDEF   14087--REDEF
B$TCB.ALT$
     14082**DCL     14407>>ASSIGN
B$TCB$
     13683**DCL     14082--IMP-PTR 14407>>ASSIGN
BUILD_DIR_NODE
     14458**PROC    14208--CALL    14210--CALL    14212--CALL    14214--CALL    14216--CALL
BUILD_DIR_NODE_FAILED
     14316**LABEL   14208--CALLALT 14210--CALLALT 14212--CALLALT 14214--CALLALT 14216--CALLALT
CMD_PROMPT
      7954**DCL      7838--DCLINIT
DIR$NODE.BLINK$ IN PROCEDURE BUILD_DIR_NODE
     14500**DCL     14512<<ASSIGN  14516>>ASSIGN
DIR$NODE.FILE_STCLASS IN PROCEDURE BUILD_DIR_NODE
     14501**DCL     14510<<ASSIGN
DIR$NODE.FLINK$ IN PROCEDURE BUILD_DIR_NODE
     14500**DCL     14516<<ASSIGN
DIR$NODE.KEY IN PROCEDURE BUILD_DIR_NODE
     14500**DCL     14509<<ASSIGN
DIR_KEY IN PROCEDURE BUILD_DIR_NODE
     14460**DCL     14458--PROC    14509>>ASSIGN
DIR_KEY_LEN IN PROCEDURE BUILD_DIR_NODE
     14459**DCL     14458--PROC    14460--IMP-SIZ 14509>>ASSIGN
DIR_NODE$ IN PROCEDURE BUILD_DIR_NODE
     14463**DCL     14474--IMP-PTR 14507<>CALL    14509>>ASSIGN  14510>>ASSIGN  14512>>ASSIGN  14514>>ASSIGN
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:221  
     14516>>ASSIGN  14516>>ASSIGN  14517>>ASSIGN
ERRMSG_FID
     13946**DCL     14272--ASSIGN
ERRMSG_FID.BYTES
     13950**DCL     14266<<CALLBLT
ERRMSG_FID.LENGTH#
     13950**DCL     14269<<ASSIGN
F$DCB.ACCT#
     14109**DCL     14266>>CALLBLT 14269--ASSIGN
F$DCB.ACTPOS
     14125**DCL     14125--REDEF
F$DCB.ARS#
     14099**DCL     14099--REDEF
F$DCB.ATTR
     14118**DCL     14119--REDEF
F$DCB.BORROW
     14133**DCL     14133--REDEF   14133--REDEF   14133--REDEF
F$DCB.DCBNAME.L
     14147**DCL     14147--IMP-SIZ
F$DCB.EOMCHAR#
     14103**DCL     14103--REDEF
F$DCB.FLDID
     14128**DCL     14128--REDEF
F$DCB.FORM$
     14122**DCL     14122--REDEF
F$DCB.FSECT
     14138**DCL     14138--REDEF
F$DCB.FSN#
     14115**DCL     14115--REDEF   14115--REDEF   14116--REDEF
F$DCB.HEADER$
     14121**DCL     14121--REDEF
F$DCB.IXTNSIZE#
     14119**DCL     14119--REDEF
F$DCB.LASTSTA$
     14108**DCL     14108--REDEF
F$DCB.LVL
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:222  
     14134**DCL     14134--REDEF
F$DCB.NAME#.C
     14109**DCL     14109--REDEF
F$DCB.NOEOF
     14131**DCL     14131--REDEF
F$DCB.NRECS#
     14120**DCL     14120--REDEF
F$DCB.NRECX
     14139**DCL     14139--REDEF
F$DCB.OHDR
     14131**DCL     14131--REDEF
F$DCB.ORG#
     14114**DCL     14114--REDEF
F$DCB.PRECNO
     14137**DCL     14137--REDEF
F$DCB.RCSZ
     14143**DCL     14143--REDEF
F$DCB.RES#
     14110**DCL     14110--REDEF
F$DCB.SETX
     14122**DCL     14122--REDEF
F$DCB.TAB$
     14122**DCL     14122--REDEF
F$DCB.TDA
     14136**DCL     14137--REDEF
F$DCB.WSN#
     14110**DCL     14110--REDEF
FATAL_ERR
     13712**DCL     14171--ASSIGN  14172--ASSIGN  14177<<ASSIGN
FATAL_ERR.VD_ERR.ERR
     13758**DCL     14193--ASSIGN  14407<<ASSIGN
FATAL_ERR.VD_ERR.ERR.CODE#
     13760**DCL     14315<<ASSIGN
FATAL_ERR.VD_ERR.FLAGLEV#
     13763**DCL     14316<<ASSIGN  14323<<ASSIGN  14408<<ASSIGN
FATAL_ERR.VD_ERR.FLINK$
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:223  
     13747**DCL     14178<<ASSIGN
FPT_GDS IN PROCEDURE INIT_MCB
     14386**DCL     14396<>CALL
FPT_GDS.V IN PROCEDURE INIT_MCB
     14386**DCL     14386--DCLINIT
FPT_TIME
     13697**DCL     14196<>CALL
FPT_TIME.V
     13701**DCL     13697--DCLINIT
GDS_FAILED IN PROCEDURE INIT_MCB
     14407**LABEL   14396--CALLALT
GDS_RESULTS IN PROCEDURE INIT_MCB
     14391**DCL     14386--DCLINIT 14395<<ASSIGN  14398>>ASSIGN  14399>>ASSIGN  14400>>ASSIGN
I
     13957**DCL     14187<<DOINDEX 14188>>ASSIGN
INIT_MCB
     14368**PROC    14199--CALL    14200--CALL
INIT_MCB_FAILED
     14316**LABEL   14199--CALLALT 14200--CALLALT
INTERNAL_DIR_TAIL$
     13956**DCL     14207<<ASSIGN  14512>>ASSIGN  14513>>IF      14517<<ASSIGN
M$GDS
        71**DCL-ENT 14396--CALL
M$LM
      6636**DCL     14266--CALLBLT 14269--ASSIGN
M$TIME
       103**DCL-ENT 14196--CALL
MCB IN PROCEDURE INIT_MCB
     14370**DCL     14368--PROC
MCB.HI_SEGMENT$ IN PROCEDURE INIT_MCB
     14370**DCL     14399<<ASSIGN
MCB.SEGMENT_BASE$ IN PROCEDURE INIT_MCB
     14370**DCL     14398<<ASSIGN
MCB.WKSZ IN PROCEDURE INIT_MCB
     14370**DCL     14400<<ASSIGN
OALLOC_FAILED
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:224  
     14316**LABEL   14220--CALLALT 14222--CALLALT 14224--CALLALT 14226--CALLALT 14228--CALLALT 14230--CALLALT
     14232--CALLALT 14253--CALLALT
OALLOC_FAILED IN PROCEDURE BUILD_DIR_NODE
     14517**LABEL   14507--CALLALT
RW1
      8354**DCL      8350--DCLINIT
RW2
      8359**DCL      8350--DCLINIT
RW3
      8367**DCL      8350--DCLINIT
RW4
      8371**DCL      8350--DCLINIT
RW5
      8377**DCL      8351--DCLINIT
RW6
      8382**DCL      8351--DCLINIT
RW7
      8386**DCL      8351--DCLINIT
RW8
      8390**DCL      8351--DCLINIT
RW9
      8393**DCL      8351--DCLINIT
STREAM$
     13955**DCL     13968--IMP-PTR
STR_$LEFTOVER
     12546**DCL     12495--DCLINIT
STR_$MATCHES
     12686**DCL     12636--DCLINIT
STR_$NOT_COPIED
     12827**DCL     12776--DCLINIT
STR_$RECORDS_DELETED
     12969**DCL     12918--DCLINIT
STR_$RECORDS_INSERTED
     13111**DCL     13060--DCLINIT
STR_$SCREEN
     13251**DCL     13201--DCLINIT
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:225  
STR_$SITES
     13391**DCL     13341--DCLINIT
VD$BLOCK_BUFFER
     11937**DCL     12190--DCLINIT
VD$BLOCK_DESC
     11159**DCL     12190--DCLINIT
VD$BUFFER.BYTES
     10367**DCL     14259--ASSIGN
VD$BUFFER.LENGTH#
     10365**DCL     10367--IMP-SIZ 14256<<ASSIGN
VD$BUFFER_HEADER
     10380**DCL     14253--CALL    14256--ASSIGN  14256--ASSIGN
VD$CMD_STREAM
     11306**DCL     12190--DCLINIT
VD$DIR_NODE
     11028**DCL     12190--DCLINIT
VD$ENCODED_NODE
     10907**DCL     12190--DCLINIT
VD$ERR
     10224**DCL     12191--DCLINIT
VD$EVAL
     11452**DCL     12191--DCLINIT
VD$EVAL_PATTERN
     11345**DCL     12191--DCLINIT
VD$FILE_KEY
      9911**DCL     12191--DCLINIT
VD$FILE_NODE
     11066**DCL     12191--DCLINIT
VD$FIT
     11901**DCL     12191--DCLINIT
VD$IT_ADJUST
     10729**DCL     12191--DCLINIT
VD$IT_BLOCK_EXPR
     10542**DCL     12191--DCLINIT
VD$IT_COMMAND
     10869**DCL     12191--DCLINIT
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:226  
VD$IT_OPERAND
     10766**DCL     12191--DCLINIT
VD$IT_OPERATOR
     10832**DCL     12191--DCLINIT
VD$IT_SELECT
     10692**DCL     12191--DCLINIT
VD$NAME_SPEC
      9960**DCL     12192--DCLINIT
VD$NUMBER
     10452**DCL     12190--DCLINIT 12190--DCLINIT 12190--DCLINIT 12191--DCLINIT 12191--DCLINIT 12191--DCLINIT
     12191--DCLINIT 12192--DCLINIT 12192--DCLINIT 12192--DCLINIT 12193--DCLINIT
VD$POINTER
     10505**DCL     12192--DCLINIT 12192--DCLINIT 12192--DCLINIT 12192--DCLINIT 12192--DCLINIT 12192--DCLINIT
VD$PORT
     11803**DCL     12192--DCLINIT
VD$STREAM
     11697**DCL     12192--DCLINIT
VD$STRUCTURE_LEVEL
     10185**DCL     12192--DCLINIT
VD$STRUCTURE_SPEC
     10140**DCL     12192--DCLINIT
VD$TABS
     10103**DCL     12193--DCLINIT
VD$WINDOW_BLOCK
     10066**DCL     12193--DCLINIT
VD$WINDOW_SPEC
     10000**DCL     12193--DCLINIT
VDA$RNAMES
      6627**DCL-ENT 13636--DCLINIT
VDA$WNAMES
      6628**DCL-ENT 13648--DCLINIT
VDA$WWINDOWS
      6629**DCL-ENT 13651--DCLINIT
VDE$PFUNCTIONS
      6624**DCL-ENT  8116--DCLINIT
VDE$PREAD_NAME_FOR_EVAL
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:227  
      6623**DCL-ENT  8125--DCLINIT
VDG$OALLOC
      6625**DCL-ENT 14220--CALL    14222--CALL    14224--CALL    14226--CALL    14228--CALL    14230--CALL
     14232--CALL    14253--CALL    14507--CALL
VDI$PFIX_WINDOWS
      6619**DCL-ENT  7275--DCLINIT
VDI$PGET_COMMAND_RECORD
      6621**DCL-ENT  7852--DCLINIT
VDI$PGLOBAL_COMMANDS
      6622**DCL-ENT  7257--DCLINIT
VDI$PUSER_PARSE_RTN
      6620**DCL-ENT  7879--DCLINIT
VD_6E
      6678**DCL     14154<<ASSIGN
VD_6E.CMD_STREAM$
      6701**DCL     14168<<ASSIGN
VD_6E.EQUALS$
      6683**DCL     14156<<ASSIGN  14222<>CALL
VD_6E.ERR_HEAD$
      6702**DCL     14171<<ASSIGN
VD_6E.ERR_TAIL$
      6702**DCL     14172<<ASSIGN
VD_6E.HISTORY$
      6683**DCL     14155<<ASSIGN
VD_6E.INTERRUPT.CMD_LINE$
      6702**DCL     14170<<ASSIGN
VD_6E.INTERRUPT.STATE#
      6702**DCL     14169<<ASSIGN
VD_6E.KEYINS$
      6683**DCL     14159<<ASSIGN  14230<>CALL
VD_6E.LOCATIONS$
      6683**DCL     14157<<ASSIGN  14224<>CALL
VD_6E.PORT_HEAD$
      6703**DCL     14173<<ASSIGN
VD_6E.PORT_TAIL$
      6703**DCL     14174<<ASSIGN
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:228  
VD_6E.SOURCE.OPERAND.EDIT_BLOCK$
      6699**DCL     14165<<ASSIGN
VD_6E.SOURCE.OPERAND.EVAL$
      6699**DCL     14166<<ASSIGN
VD_6E.SOURCE.OPERAND.INTREE$
      6699**DCL     14167<<ASSIGN
VD_6E.SOURCE.OPERAND.STREAM$
      6699**DCL     14164<<ASSIGN  14220<>CALL
VD_6E.STRUCTURES$
      6683**DCL     14160<<ASSIGN  14228<>CALL
VD_6E.STRUCTURE_EXTERNAL$
      6684**DCL     14161<<ASSIGN
VD_6E.SYNONYMS$
      6683**DCL     14158<<ASSIGN  14226<>CALL
VD_6E.WILD_STRINGS$
      6701**DCL     14175<<ASSIGN
VD_6E.WINDOWS$
      6684**DCL     14162<<ASSIGN  14232<>CALL
VD_6E.WS.INTERNAL_DIR$
      6686**DCL     14163<<ASSIGN  14514<<ASSIGN
VD_ACCESSOR_PRIV
      6913**DCL     14183<<ASSIGN
VD_CMD_OBJECTS$
      6942**DCL     14188<<ASSIGN
VD_COMMAND_LINE
      6640**DCL      7630--DCLINIT
VD_COMMAND_WINDOW$
      6896**DCL     14181<<ASSIGN
VD_CURRENT_WINDOW$
      6888**DCL     14180<<ASSIGN
VD_DCBS
      6715**DCL     14185<<ASSIGN
VD_DW_BOOLEAN
      8444**DCL     12215--DCLINIT
VD_DW_COMPONENT
      8590**DCL     12215--DCLINIT
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:229  
VD_DW_DIRECTION
      8737**DCL     12216--DCLINIT
VD_DW_EXIST
      8884**DCL     12216--DCLINIT
VD_DW_KEY_TYPE
      9031**DCL     12217--DCLINIT
VD_DW_NAME_DATA_TYPE
      9180**DCL     12217--DCLINIT
VD_DW_ORG
      9328**DCL     12218--DCLINIT
VD_DW_POINT
      9475**DCL     12218--DCLINIT
VD_DW_PROTECT
      9622**DCL     12219--DCLINIT
VD_EXIT.CODE_
      8277**DCL     14193<<ASSIGN
VD_EXIT.V
      8277**DCL      8277--DCLINIT
VD_EXIT.V.STEPCC#
      8278**DCL      8278--REDEF   14194<<ASSIGN
VD_FKEY_SCRATCH_LEFTOVER
     12316**DCL     12292--DCLINIT
VD_FKEY_SCRATCH_SOURCE
     12407**DCL     12383--DCLINIT
VD_LAST_LOADED_FILE_SPEC
      6951**DCL     14191<<ASSIGN
VD_MCB_LARGE
      6986**DCL     14200<>CALL
VD_MCB_SMALL
      6980**DCL     14199<>CALL
VD_ORIGINAL_EDTCTL.BREAKCOUNT
      6793**DCL      6793--REDEF
VD_ORIGINAL_TRMCTL.BREAKCOUNT
      6833**DCL      6833--REDEF
VD_PACCT
      8058**DCL      7982--DCLINIT
PL6.E3A0      #003=VDG$MINIT File=VDG$MAIN.:VDA5TSI                              FRI 07/04/97 11:19 Page:230  
VD_PCB
      7010**DCL      7352--DCLINIT
VD_PNAME
      8044**DCL      7981--DCLINIT
VD_UTS_START
      6723**DCL     13701--DCLINIT
XTX$ADAPT
      7214**DCL-ENT  7530--DCLINIT
XUE_ECB.WKSZ#
      8092**DCL     14252<<ASSIGN
XUE_ECB.WORK$
      8087**DCL     14253<>CALL    14256>>ASSIGN  14259<<ASSIGN  14259>>ASSIGN
XUG$INIT
      6597**DCL-ENT 14262--CALL
XUG$SETERRMSG
      6601**DCL-ENT 14273--CALL
XUG_GETCMD
      7629**DCL     14262<>CALL    14273<>CALL
XUG_GETCMD.ERRMFID$
      7648**DCL     14272<<ASSIGN
XUG_GETCMD.OUT$
      7634**DCL      7640--REDEF
XUG_INIT
      7219**DCL     14262<>CALL
XUG_INIT_FAILED
     14272**LABEL   14262--CALLALT
XUG_SETERRMSG_FAILED
     14272**LABEL   14273--CALLALT
XUH_PARAM
      7977**DCL      7667--DCLINIT

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:231  
     1971        1        /*T***********************************************************/
     1972        2        /*T*                                                         */
     1973        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1974        4        /*T*                                                         */
     1975        5        /*T***********************************************************/
     1976        6
     1977        7        /*D* NAME: VDG$MTERMINATE
     1978        8            PARAMETERS:
     1979        9                None.
     1980       10            INPUT:
     1981       11                VD_6E.STATS#, .STATS_OBJECTS#, .STATS_ERRORS#, and .STATS_TOKENS#
     1982       12                    arrays should contain the statistics for this invocation
     1983       13                    of the editor.
     1984       14                VD_6E.ERR_HEAD$ must point to a VD$ERR which is reserved for
     1985       15                    fatal errors.  If there is no fatal (or initialization) error
     1986       16                    to report, this VD$ERR's .ERR should be %CLEAR.  Note that
     1987       17                    only this first fatal error is handled by VDG$MTERMINATE;
     1988       18                    non-fatal errors should have been reported before getting
     1989       19                    here.  We allow a fatal error to get to MTERMINATE so
     1990       20                    a final, fatal error message will remain on the user's
     1991       21                    screen after the Pres'r restores the screen to its original
     1992       22                    state.
     1993       23                VD_6E.WINDOWS$ should be NIL, or point to a VD$STREAM which is
     1994       24                    open to the Windows file.
     1995       25                VD_6E.SOURCE.OPERAND.STREAM$ should be NIL, or point to a VD$STREAM
     1996       26                    for the Source operand (open or closed).
     1997       27                VD_6E.INTERRUPT should contain any info about an asynchronous
     1998       28                    event being processed; if none is being processed,
     1999       29                    VD_6E.INTERRUPT.CODE# should = %CLEAR.  Specifically, if
     2000       30                    we're terminating due to a hardware fault, we should RETURN
     2001       31                    when done, rather than M$EXITing.
     2002       32                XUG_GETCMD - If there is a fatal error to report, then XUG_GETCMD
     2003       33                    must be filled in and ready for a call to XUG$ERRMSG.
     2004       34                    Specifically, its .ERR_CODE, .FLGLEV, .USE_EPOS, .EPOS,
     2005       35                    .ERRDCB, and .F1_, .F2_, and .F3_ must be filled in.
     2006       36                VD_$RESTORE is a VD$BUFFER whose value is an IBEX command.
     2007       37                    It may have a 0-length value.
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:232  
     2008       38                VD_EXIT should point to the error code word (if any) for the
     2009       39                    last error, and must contain the STEPCC value to be
     2010       40                    returned to the monitor for 6Edit.
     2011       41            OUTPUT:
     2012       42                None.
     2013       43            DESCRIPTION:
     2014       44                If VD_6E.ERR_HEAD$ contains an error at entry, we'll ignore
     2015       45                    most errors we might get during termination; otherwise
     2016       46                    we'll report these errors.
     2017       47                Close all streams.
     2018       48                Update the system statistics file.
     2019       49                Call the Presenter's termination entry-point, to restore the
     2020       50                    user's terminal to its pre-invocation state.
     2021       51                If VD_$RESTORE has a non-NIL value, pass the value to IBEX to execute.
     2022       52                If we were entered with a fatal error, call XUG$ERRMSG to
     2023       53                    write the error message.
     2024       54                    Also, if the error is %E$HUH (internal error), M$ALIB
     2025       55                    to DELTA to PLUGH to the terminal.
     2026       56                If VD_6E.INTERRUPT shows that we were interrupted by a hardware
     2027       57                    fault, then we were called by an ASYNC routine, and
     2028       58                    the top frame of the TCB's exceptional condition stack
     2029       59                    describes the error.  Instead of M$EXITing, we should
     2030       60                    just return:  this will re-execute the offending
     2031       61                    instruction, which should yield the appropriate monitor
     2032       62                    response (we should no longer be trapping hardware faults).
     2033       63                Otherwise, look at VD_EXIT's STEPCC value:  based on that value,
     2034       64                    either M$EXIT or M$ERR back to the monitor.
     2035       65        */
     2036       66
     2037       67        VDG$MTERMINATE: PROC;
     2038       68
     2039       69
     2040       70        %INCLUDE CP_6;
     2041      151        %INCLUDE B_ERRORS_C;
     2042     1277        %INCLUDE VD_MACROS_M;
     2043     3492        %INCLUDE VD_PERR_C;
     2044     3640        %INCLUDE VD_NODES0_E;
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:233  
     2045     3732        %INCLUDE XU_MACRO_C;
     2046     6826        %INCLUDE XUG_ENTRY;
     2047     6857        %INCLUDE B$TABLES_C;
     2048     6965        %INCLUDE B$JIT;
     2049     7255        %INCLUDE CP_6_SUBS;
     2050     7795        %INCLUDE XUD_UTS_M;
     2051     7877
     2052     7878
     2053     7879    1   DCL VDA$FCLOSE          ENTRY (1) ALTRET;
     2054     7880    1   DCL VDG$EREPORT_ERROR   ENTRY (1);
     2055     7881    1   DCL VDP$WTERMINATE      ENTRY;
     2056     7882
     2057     7883
     2058     7884    1   DCL M$ME DCB;
     2059     7885    1   DCL M$DO DCB;
     2060     7886    1   DCL M$E9 DCB;
     2061     7887    1   DCL B$TCB$ PTR SYMREF;
     2062     7888    1   DCL B$JIT$ PTR SYMREF;
     2063     7889    1   DCL VD_UTS_START UBIN SYMREF;
     2064     7890        %VD_6E (STCLASS=SYMREF);
     2065     7926        %XUG_GETCMD (NAME=XUG_GETCMD, STCLASS=SYMREF);
     2066     8264        %VD_BUFFER (NAME=VD_$RESTORE, STCLASS=SYMREF, MXNB=%MXNB_$RESTORE);
     2067     8324        %FPT_EXIT (FPTN=VD_EXIT, STCLASS=SYMREF);
     2068     8339        %VD_TEXTC (NAME=B_VERSION, STCLASS=SYMREF, MXNB=%NB_VERSION);
     2069     8480        %B$SR_NON_BLANK;
     2070     8484        %B$XL_UPPER;
     2071     8488        %XUD$UTS_ENTRIES;
     2072     8520
     2073     8521
     2074     8522
     2075     8523        %FPT_ALIB (STCLASS=CONSTANT, CMD=DELTA_CMD, LIBNAME=DELTA_FID, RETRN=YES);
     2076     8540    1   DCL DELTA_CMD CHAR(0) CONSTANT INIT('PLUGH');
     2077     8541        %VD_TEXTC (NAME=DELTA_FID, STCLASS=CONSTANT, IBYTES='DELTA_NEW');
     2078     8682        %FPT_XCON (FPTN=REVOKE_EXIT_CONTROL, STCLASS=CONSTANT, UENTRY=NIL);
     2079     8696
     2080     8697
     2081     8698
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:234  
     2082     8699        %VD$ERR (NAME=ORIG_ERR, STCLASS=AUTO);
     2083     8752
     2084     8753
     2085     8754        %VD$ERR (NAME=FATAL$ERR, STCLASS="BASED(VD_6E.ERR_HEAD$)");
     2086     8807        %VD$TEXTC;
     2087     8830        %B$TCB;
     2088     8833        %B$ALT;
     2089     8841        %F$DCB;
     2090     8898
     2091     8899
     2092     8900
     2093     8901    1           ORIG_ERR = FATAL$ERR;
     2094     8902
     2095     8903    1           CALL CLOSE_ALL_STREAMS;
     2096     8904    1           GOTO UPDATE_STATS;
     2097     8905
     2098     8906
     2099     8907    1   VDG$MTERMINATE_FORCED: ENTRY;    /* If we screech while we're screeching */
     2100     8908    1           ORIG_ERR = FATAL$ERR;
     2101     8909
     2102     8910
     2103     8911    1   UPDATE_STATS:
     2104     8912    1           CALL UPDATE_STATISTICS_FILE;
     2105     8913
     2106     8914    1           CALL VDP$WTERMINATE;
     2107     8915
     2108     8916                /*
     2109     8917                *   Hey!! The terminal has been restored to it's pre-invocation
     2110     8918                *       state now -- so we can write to it if we want!!
     2111     8919                */
     2112     8920
     2113     8921    2           IF ORIG_ERR.ERR ~= %CLEAR THEN DO;
     2114     8922                   /* VDG$EREPORT_ERROR already setup XUG_GETCMD with error info */
     2115     8923    2              CALL XUG$ERRMSG (XUG_GETCMD);
     2116     8924    2              END;
     2117     8925    2           IF ORIG_ERR.ERR.CODE# = %E$HUH THEN DO;
     2118     8926    2              CALL M$ALIB (FPT_ALIB)       /* PL to the terminal */
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:235  
     2119     8927    3              WHENALTRETURN DO; ; END;
     2120     8928    2              END;
     2121     8929
     2122     8930    1           IF VD_$RESTORE.LENGTH# > 0 AND VD_$RESTORE.BYTES ~= '0' THEN
     2123     8931    1              CALL PROCESS_RESTORE;
     2124     8932
     2125     8933
     2126     8934    2           IF VD_6E.INTERRUPT.STATE# = %INST_HW_TRAPPED THEN DO;
     2127     8935    2              VD_6E.INTERRUPT.STATE# = %INST_PROCESSING;
     2128     8936    2              RETURN;  /* Return from ASYNC routine (VDI$INT_TRAP) */
     2129     8937    2              END;
     2130     8938
     2131     8939    1           CALL M$XCON (REVOKE_EXIT_CONTROL);
     2132     8940    1           IF VD_EXIT.V.STEPCC# = 0 THEN
     2133     8941    1              CALL M$EXIT (VD_EXIT);
     2134     8942    1           ELSE
     2135     8943    1              CALL M$ERR (VD_EXIT);
     2136     8944
     2137     8945
     2138     8946        %BOX (TITLE=CLOSE_ALL_STREAMS, PAGE=YES);
              8954    1
              8958    1   /***************************************************************************
              8960    1    *                                                                         *
              8964    1            *                             CLOSE_ALL_STREAMS                           *
              8966    1            *                                                                         *
              8968    1           ***************************************************************************/

     2139     8972
     2140     8973        /*I* NAME: CLOSE_ALL_STREAMS
     2141     8974            PARAMETERS:
     2142     8975                None.
     2143     8976            INPUT:
     2144     8977                ORIG_ERR must contain the original VD$ERR pointed-to by
     2145     8978                    VD_6E.ERR_HEAD$ at entry to VDG$MTERMINATE.
     2146     8979            OUTPUT:
     2147     8980                The VD$ERR at VD_6E.ERR_HEAD$ will be cleared.
     2148     8981            DESCRIPTION:
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:236  
     2149     8982                Loop thru the windows file, and close all streams to which
     2150     8983                editing windows are open.
     2151     8984                Close the Source stream.
     2152     8985                Note that doing these closes could cause a fatal error, and
     2153     8986                we always want to report the original fatal error from entry
     2154     8987                to VDG$MTERMINATE.
     2155     8988                If we get an error during these closes:
     2156     8989                    If we've saved a fatal error, ignore the new error.
     2157     8990                    If we didn't save a fatal error, then report the
     2158     8991                        new error immediately.
     2159     8992        */
     2160     8993
     2161     8994    1   CLOSE_ALL_STREAMS: PROC;
     2162     8995
     2163     8996    2   DCL L0_NODE$ PTR;
     2164     8997    2   DCL L1_NODE$ PTR;
     2165     8998    2   DCL WINDOW_SPEC$ PTR;
     2166     8999
     2167     9000
     2168     9001        %VD$FILE_NODE (NAME=L0$NODE, STCLASS="BASED(L0_NODE$)");
     2169     9094        %VD$FILE_NODE (NAME=L1$NODE, STCLASS="BASED(L1_NODE$)");
     2170     9187        %VD$WINDOW_SPEC (NAME=WINDOW$SPEC, STCLASS="BASED(WINDOW_SPEC$)");
     2171     9253        %VD$STREAM;
     2172     9359        %VD$PORT;
     2173     9457
     2174     9458
     2175     9459
     2176     9460
     2177     9461                /*
     2178     9462                *   Loop thru the Windows file, closing any Streams the
     2179     9463                *       windows have left open.
     2180     9464                */
     2181     9465
     2182     9466    2           IF VD_6E.WINDOWS$ = ADDR(NIL) THEN RETURN;
     2183     9467    2           IF VD_6E.WINDOWS$->VD$STREAM.PORT$ = ADDR(NIL) THEN RETURN;
     2184     9468    2           IF VD_6E.WINDOWS$->VD$STREAM.PORT$->VD$PORT.EXIST# = 0 THEN RETURN;
     2185     9469    2           L0_NODE$ = VD_6E.WINDOWS$->VD$STREAM.PORT$->
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:237  
     2186     9470    2             VD$PORT.LEVEL.INTERNAL$ (%LVL_FILE);
     2187     9471    2           IF L0_NODE$ = ADDR(NIL) THEN RETURN;
     2188     9472
     2189     9473    2           L1_NODE$ = L0$NODE.HEAD$;
     2190     9474    3           DO WHILE L1_NODE$ ~= ADDR(NIL);
     2191     9475    3              WINDOW_SPEC$ = L1$NODE.DESC.SPEC.V$;
     2192     9476    3              IF WINDOW_SPEC$ ~= ADDR(NIL) THEN
     2193     9477    4                 IF WINDOW$SPEC.OPERAND.STREAM$ ~= ADDR(NIL) THEN DO;
     2194     9478    4                    CALL VDA$FCLOSE (WINDOW$SPEC.OPERAND.STREAM$->VD$STREAM)
     2195     9479    5                    WHENALTRETURN DO;
     2196     9480    5                       IF ORIG_ERR.ERR = %CLEAR THEN
     2197     9481    5                          CALL VDG$EREPORT_ERROR;
     2198     9482    5                       END;
     2199     9483    4                    END;
     2200     9484    3              L1_NODE$ = L1$NODE.FLINK$;
     2201     9485    3              END;
     2202     9486
     2203     9487
     2204     9488                /*
     2205     9489                *   Close the Source stream, if it's open.
     2206     9490                */
     2207     9491
     2208     9492    3           IF VD_6E.SOURCE.OPERAND.STREAM$ ~= ADDR(NIL) THEN DO;
     2209     9493    3              CALL VDA$FCLOSE (VD_6E.SOURCE.OPERAND.STREAM$->VD$STREAM)
     2210     9494    4              WHENALTRETURN DO;
     2211     9495    4                 IF ORIG_ERR.ERR = %CLEAR THEN
     2212     9496    4                    CALL VDG$EREPORT_ERROR;
     2213     9497    4                 END;
     2214     9498    3              END;
     2215     9499
     2216     9500    2           RETURN;
     2217     9501
     2218     9502    2   END CLOSE_ALL_STREAMS;
     2219     9503
     2220     9504        %BOX (TITLE=UPDATE_STATISTICS_FILE, PAGE=YES);
              9512    2
              9516    2   /***************************************************************************
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:238  
              9518    2    *                                                                         *
              9522    2            *                           UPDATE_STATISTICS_FILE                        *
              9524    2            *                                                                         *
              9526    2           ***************************************************************************/

     2221     9530
     2222     9531        /*I* NAME: UPDATE_STATISTICS_FILE
     2223     9532            PARAMETERS:
     2224     9533                None.
     2225     9534            INPUT:
     2226     9535            OUTPUT:
     2227     9536            DESCRIPTION:
     2228     9537        */
     2229     9538
     2230     9539    1   UPDATE_STATISTICS_FILE: PROC;
     2231     9540
     2232     9541
     2233     9542        /*
     2234     9543        *   Local definitions for statistics file.
     2235     9544        */
     2236     9545
     2237     9546        %EQU NB_STATS_KEY = 7;      /* Length of record key */
     2238     9547
     2239     9548        %EQU STK_TOTAL = 'TOTAL  '; /* Key of totals record */
     2240     9549        %EQU STK_ERROR = 'ERROR_n'; /* Key of error recs ("n" is bucket#) */
     2241     9550        %EQU STK_CMDLN = 'CMDLN_n'; /* Key of user-cmdline records */
     2242     9551        %EQU STK_FILES = 'FILES_n'; /* Key of file-opens records */
     2243     9552        %EQU STK_DURATION = 'DURAT_n'; /* Key of session-duration records */
     2244     9553
     2245     9554        /*
     2246     9555        *   Total # records in file:  1 TOTAL record, and 10*3 other
     2247     9556        *       records (10 buckets for each of 3 record types).
     2248     9557        */
     2249     9558
     2250     9559        %EQU N_STKEYS = 31;
     2251     9560
     2252     9561        /*  How to compute the bucket #s for each record type */
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:239  
     2253     9562
     2254     9563        %EQU STDIV_ERROR = 20;      /* # errors per bucket */
     2255     9564        %EQU STDIV_CMDLN = 50;      /* # cmdlines per bucket */
     2256     9565        %EQU STDIV_DURATION = 120; /* # seconds duration per bucket */
     2257     9566
     2258     9567        /*
     2259     9568        *   Local definitions for offsets into:
     2260     9569        *       o The statistics file record key, and
     2261     9570        *       o The statistics file record itself.
     2262     9571        */
     2263     9572
     2264     9573        %EQU KEYOFS_BUCKET_NUM = NB_STATS_KEY - 1;
     2265     9574
     2266     9575        /*
     2267     9576        *   Word at offset 0 = # updates of this stats record;
     2268     9577        *           offset 1 = execution time in 6Edit represented by this
     2269     9578        *                       update, in (microseconds / 524288).
     2270     9579        *   Stats arrays start at offset 2.
     2271     9580        */
     2272     9581        %EQU RECOFS_GEN = 2;
     2273     9582        %EQU RECOFS_OBJECTS = RECOFS_GEN + STG_MX + 1;
     2274     9583        %EQU RECOFS_ERRORS = RECOFS_OBJECTS + CLS_MX + 1;
     2275     9584        %EQU RECOFS_TOKENS = RECOFS_ERRORS + MX_ERROR_CODE + 1;
     2276     9585        %EQU RECOFS_END = RECOFS_TOKENS + MX_TOKEN + 1;
     2277     9586
     2278     9587
     2279     9588
     2280     9589        %FPT_MONINFO (STCLASS=CONSTANT, SITEINFO=VLR_SITEINFO);
     2281     9604        %FPT_OPEN (FPTN=CONST_STATS_OPEN, DCB=M$E9, ASN=FILE, FUN=CREATE,
     2282     9605            EXIST=OLDFILE, ACCT=STATS_ACCT, ACCESS=STATS_ACCESS,
     2283     9606            ORG=KEYED, ACS=DIRECT, IXTNSIZE="%(N_STKEYS * RECOFS_END / 1000)",
     2284     9607            SCRUB=YES, SHARE=ALL, TYPE=%CHR_STATS_TYPE, PASS=STATS_PASS);
     2285     9716        %VLP_ACCT (FPTN=STATS_ACCT, STCLASS=CONSTANT, ACCT=%CHR_STATS_ACCT);
     2286     9729        %VLP_PASS (FPTN=STATS_PASS, STCLASS=CONSTANT, PASS=%CHR_STATS_PASS);
     2287     9742
     2288     9743        %VLP_ATTR (FPTN=STATS_ACCESS, STCLASS=CONSTANT);
     2289     9757        %VLP_ACCESS (STCLASS=CONSTANT, READ=YES, WNEW=YES, UPD=YES, DELR=YES,
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:240  
     2290     9758            ACCT='?', LAST=";");
     2291     9775
     2292     9776        %FPT_ENQ (FPTN=STATS_ENQ, STCLASS=CONSTANT, DCB=M$E9, RNAME=STATS_RNAME,
     2293     9777            SHARE=NONE, WAIT_TIME=%MX_STATS_ENQ_WAIT);
     2294     9795        %FPT_DEQ (FPTN=STATS_DEQ, STCLASS=CONSTANT, DCB=M$E9, RNAME=STATS_RNAME);
     2295     9812        %VD_TEXTC (NAME=STATS_RNAME, STCLASS=CONSTANT, IBYTES=%CHR_STATS_RNAME);
     2296     9953        %FPT_CLOSE (FPTN=STATS_CLOSE, STCLASS=CONSTANT, DCB=M$E9, DISP=SAVE);
     2297     9995
     2298     9996
     2299     9997        %FPT_TIME (FPTN=CONST_FPT_TIME, STCLASS=CONSTANT, SOURCE=CLOCK,
     2300     9998            DEST=UTS);
     2301    10017
     2302    10018
     2303    10019
     2304    10020        %VLR_SITEINFO (STCLASS=STATIC);
     2305    10039
     2306    10040
     2307    10041
     2308    10042        %FPT_OPEN (FPTN=STATS_OPEN, STCLASS=AUTO);
     2309    10151        %VD_TEXTC (NAME=STATS_NAME, STCLASS=AUTO, MXNB=%MXNB_FILE_NAME);
     2310    10292        %FPT_XEQTIME (STCLASS=AUTO);
     2311    10305    2   DCL 1 XEQTIME DALIGNED,
     2312    10306    2         2 * BIT(18),
     2313    10307    2         2 MICROS_DIV_512K UBIN(35) UNAL,
     2314    10308    2         2 * BIT(19),
     2315    10309    2         2 * BIT(72);
     2316    10310    2   DCL BUCKET_NUM SBIN;
     2317    10311        %FPT_TIME (STCLASS=AUTO);
     2318    10330    2   DCL UTS_END UBIN;
     2319    10331
     2320    10332
     2321    10333
     2322    10334    2           CALL M$MONINFO (FPT_MONINFO);
     2323    10335    2           IF SUBSTR(VLR_SITEINFO.SITE_NAME#.C, 0,
     2324    10336    2             VLR_SITEINFO.SITE_NAME#.L) ~= %CHR_STATS_SITE_A
     2325    10337    2             AND SUBSTR(VLR_SITEINFO.SITE_NAME#.C, 0,
     2326    10338    2             VLR_SITEINFO.SITE_NAME#.L) ~= %CHR_STATS_SITE_B THEN
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:241  
     2327    10339    2              RETURN;
     2328    10340
     2329    10341    2           STATS_OPEN = CONST_STATS_OPEN;
     2330    10342    2           STATS_OPEN.NAME_ = VECTOR(STATS_NAME);
     2331    10343    2           STATS_OPEN.V_ = VECTOR(STATS_OPEN.V);
     2332    10344    2           CALL CONCAT (STATS_NAME.BYTES, %CHR_STATS_NAME, %CHR_UNDERSCORE,
     2333    10345    2             SUBSTR(B_VERSION.BYTES, 0, B_VERSION.LENGTH#));
     2334    10346    2           STATS_NAME.LENGTH# = %LENGTHC(CHR_STATS_NAME) +
     2335    10347    2             %LENGTHC(CHR_UNDERSCORE) + B_VERSION.LENGTH#;
     2336    10348    2           CALL M$OPEN (STATS_OPEN)
     2337    10349    3           WHENALTRETURN DO;
     2338    10350    3              RETURN;
     2339    10351    3              END;
     2340    10352
     2341    10353    2           CALL M$ENQ (STATS_ENQ)      /* Get in line for excl access */
     2342    10354    2             ALTRET (CLOSE_STATS);
     2343    10355
     2344    10356    2           XEQTIME = %CLEAR;
     2345    10357    2           FPT_XEQTIME.BUF_ = VECTOR(XEQTIME);
     2346    10358    2           CALL M$XEQTIME (FPT_XEQTIME);
     2347    10359
     2348    10360    2           CALL SUM_INTO_STATS_REC (%STK_TOTAL);
     2349    10361
     2350    10362    2           BUCKET_NUM = VD_6E.STATS_ERRORS# (0) / %STDIV_ERROR;
     2351    10363    2           CALL SUM_INTO_STATS_REC (%STK_ERROR, MINIMUM(BUCKET_NUM, 9));
     2352    10364
     2353    10365    2           BUCKET_NUM =
     2354    10366    2             VD_6E.STATS_TOKENS# (%T_COMMAND_LINE - %VD_BASE#) / %STDIV_CMDLN;
     2355    10367    2           CALL SUM_INTO_STATS_REC (%STK_CMDLN, MINIMUM(BUCKET_NUM, 9));
     2356    10368
     2357    10369    2           FPT_TIME = CONST_FPT_TIME;
     2358    10370    2           FPT_TIME.V_ = VECTOR(FPT_TIME.V);
     2359    10371    2           FPT_TIME.TSTAMP_ = VECTOR(UTS_END);
     2360    10372    2           CALL M$TIME (FPT_TIME)
     2361    10373    3           WHENRETURN DO;
     2362    10374    3              CALL XUD$UTS_DIFF_SEC (BUCKET_NUM,UTS_END,VD_UTS_START);
     2363    10375    3              BUCKET_NUM = BUCKET_NUM/%STDIV_DURATION;
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:242  
     2364    10376    3              CALL SUM_INTO_STATS_REC (%STK_DURATION,
     2365    10377    3                MINIMUM(BUCKET_NUM, 9));
     2366    10378    3              END;
     2367    10379
     2368    10380
     2369    10381    2           CALL M$DEQ (STATS_DEQ)      /* Release the stats file */
     2370    10382    3           WHENALTRETURN DO; ; END;
     2371    10383
     2372    10384    2   CLOSE_STATS:
     2373    10385    2           CALL M$CLOSE (STATS_CLOSE)
     2374    10386    3           WHENALTRETURN DO; ; END;
     2375    10387
     2376    10388    2           RETURN;
     2377    10389
     2378    10390                %BOX (TITLE=SUM_INTO_STATS_REC);

             10402    2   /***************************************************************************
             10404    2    *                                                                         *
             10408    2            *                             SUM_INTO_STATS_REC                          *
             10410    2            *                                                                         *
             10412    2           ***************************************************************************/

     2379    10416
     2380    10417    2   SUM_INTO_STATS_REC: PROC (KEY, BUCKET);
     2381    10418    3   DCL KEY CHAR(%NB_STATS_KEY);
     2382    10419    3   DCL BUCKET UBIN;
     2383    10420
     2384    10421
     2385    10422        %FPT_READ (FPTN=CONST_STATS_READ, DCB=M$E9, KEYS=YES);
     2386    10461        %FPT_WRITE (FPTN=CONST_STATS_WRITE, DCB=M$E9);
     2387    10492
     2388    10493
     2389    10494    3   DCL I UBIN;
     2390    10495        %FPT_READ (FPTN=STATS_READ, STCLASS="");
     2391    10534        %FPT_WRITE (FPTN=STATS_WRITE, STCLASS="");
     2392    10565        %VD_TEXTC (NAME=STATS_KEY, STCLASS="", MXNB=%NB_STATS_KEY);
     2393    10706    3   DCL STATS_REC (0:%RECOFS_END) SBIN;
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:243  
     2394    10707
     2395    10708
     2396    10709
     2397    10710    3           STATS_READ = CONST_STATS_READ;
     2398    10711    3           STATS_READ.V_ = VECTOR(STATS_READ.V);
     2399    10712    3           STATS_READ.BUF_ = VECTOR(STATS_REC);
     2400    10713    3           STATS_READ.KEY_ = VECTOR(STATS_KEY);
     2401    10714    3           STATS_WRITE = CONST_STATS_WRITE;
     2402    10715    3           STATS_WRITE.V_ = VECTOR(STATS_WRITE.V);
     2403    10716    3           STATS_WRITE.BUF_ = VECTOR(STATS_REC);
     2404    10717    3           STATS_WRITE.KEY_ = VECTOR(STATS_KEY);
     2405    10718
     2406    10719    3           STATS_KEY.LENGTH# = %NB_STATS_KEY;
     2407    10720    3           STATS_KEY.BYTES = KEY;
     2408    10721    3           IF ADDR(BUCKET) ~= ADDR(NIL) THEN
     2409    10722    3              CALL INSERT (STATS_KEY.BYTES, %KEYOFS_BUCKET_NUM, 1,
     2410    10723    3                BITASC(BINBIT(BUCKET,9)|ASCBIT('0')));
     2411    10724
     2412    10725    3           CALL M$READ (STATS_READ)
     2413    10726    3             ALTRET (STATS_READ_FAILED);
     2414    10727
     2415    10728    4           DO %NEVER;
     2416    10729    4   STATS_READ_FAILED:
     2417    10730    4              STATS_REC = %CLEAR;
     2418    10731    4              END;
     2419    10732
     2420    10733    3           STATS_REC (0) = STATS_REC (0) + 1;
     2421    10734    3           STATS_REC (1) = STATS_REC (1) + XEQTIME.MICROS_DIV_512K;
     2422    10735
     2423    10736    4           DO I = 0 TO %STG_MX;
     2424    10737    4              STATS_REC (%RECOFS_GEN+I) =
     2425    10738    4                STATS_REC (%RECOFS_GEN+I) + VD_6E.STATS# (I);
     2426    10739    4              END;
     2427    10740
     2428    10741    4           DO I = 0 TO %STG_MX;
     2429    10742    4              STATS_REC (%RECOFS_OBJECTS+I) =
     2430    10743    4                STATS_REC (%RECOFS_OBJECTS+I) + VD_6E.STATS_OBJECTS# (I);
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:244  
     2431    10744    4              END;
     2432    10745
     2433    10746    4           DO I = 0 TO %MX_TOKEN;
     2434    10747    4              STATS_REC (%RECOFS_TOKENS+I) =
     2435    10748    4                STATS_REC (%RECOFS_TOKENS+I) + VD_6E.STATS_TOKENS# (I);
     2436    10749    4              END;
     2437    10750
     2438    10751    4           DO I = 0 TO %MX_ERROR_CODE;
     2439    10752    4              STATS_REC (%RECOFS_ERRORS+I) =
     2440    10753    4                STATS_REC (%RECOFS_ERRORS+I) + VD_6E.STATS_ERRORS# (I);
     2441    10754    4              END;
     2442    10755
     2443    10756
     2444    10757
     2445    10758    3           CALL M$WRITE (STATS_WRITE)
     2446    10759    3             ALTRET (STATS_WRITE_FAILED);
     2447    10760
     2448    10761    3   STATS_WRITE_FAILED:
     2449    10762
     2450    10763    3           RETURN;
     2451    10764
     2452    10765    3   END SUM_INTO_STATS_REC;
     2453    10766
     2454    10767    2   END UPDATE_STATISTICS_FILE;
     2455    10768
     2456    10769        %BOX (TITLE=PROCESS_RESTORE, PAGE=YES);
             10777    2
             10781    2   /***************************************************************************
             10783    2    *                                                                         *
             10787    2            *                              PROCESS_RESTORE                            *
             10789    2            *                                                                         *
             10791    2           ***************************************************************************/

     2457    10795
     2458    10796        /*I* NAME: PROCESS_RESTORE
     2459    10797            PARAMETERS:
     2460    10798                None.
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:245  
     2461    10799            INPUT:
     2462    10800                VD_$RESTORE must have a non-0-length value.
     2463    10801            OUTPUT:
     2464    10802                None.
     2465    10803            DESCRIPTION:
     2466    10804                If $RESTORE contains a !XEQ command, and if we were M$LINKed-to, then
     2467    10805                    report an error and return.  Currently, if we M$YC to IBEX
     2468    10806                    with an XEQ command, IBEX will copy the XEQ-file to JF.  This has
     2469    10807                    two undesireable effects:
     2470    10808                        1.  The commands in the XEQ-file aren't executed until the
     2471    10809                            processor who M$LINKed to us finally exits back to IBEX.
     2472    10810                            Usually, however, 6Edit users expect commands in their
     2473    10811                            $RESTORE XEQ-file to be executed immediately, to restore
     2474    10812                            IMPs, reset terminal parameters, etc.
     2475    10813                        2.  Worse yet, the commands sitting in JF will cause the
     2476    10814                            processor who M$LINKed to us to get eof on the next read
     2477    10815                            from the command stream -- usually, causing him to exit,
     2478    10816                            or perhaps to read the commands from the XEQ-file as
     2479    10817                            commands to him!
     2480    10818                    Instead, we tell the user that, sorry, we can't do the XEQ command
     2481    10819                    right now.
     2482    10820        *N**N*                  Note that this test is specific
     2483    10821        *N**N*                  to IBEX as the command processor.
     2484    10822        *N**N*                  Ideal fix is to either:
     2485    10823        *N**N*                    o Fix IBEX to handle XEQ immediately,
     2486    10824        *N**N*                      so we don't have to do this test; or
     2487    10825        *N**N*                    o Have some way that we could tell if
     2488    10826        *N**N*                      IBEX is the current CP or not.
     2489    10827                Otherwise, pass the value of $RESTORE to the command processor to
     2490    10828                    execute.
     2491    10829        */
     2492    10830
     2493    10831    1   PROCESS_RESTORE: PROC;
     2494    10832
     2495    10833
     2496    10834        %FPT_YC (LINK=YES, STCLASS=STATIC);
     2497    10851
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:246  
     2498    10852
     2499    10853    2   DCL INDX SBIN;
     2500    10854    2   DCL IBEX_VERB CHAR(%LENGTHC(CHR_IBEX_XEQ_VERB));
     2501    10855    2   DCL SINK SBIN;
     2502    10856
     2503    10857
     2504    10858
     2505    10859    2           IF B$JIT.PROG_ENTRY = %PE_LINK# THEN
     2506    10860    3   REJECT_XEQ_COMMAND: DO;
     2507    10861    3              INDX = 0;
     2508    10862    3              CALL SEARCH (INDX, SINK, B$SR_NON_BLANK,
     2509    10863    3                SUBSTR(VD_$RESTORE.BYTES, 0, VD_$RESTORE.LENGTH#), INDX);
     2510    10864    3              IF VD_$RESTORE.LENGTH# - INDX >= LENGTHC(%CHR_IBEX_PROMPT)
     2511    10865    3                AND SUBSTR(VD_$RESTORE.BYTES, INDX, LENGTHC(%CHR_IBEX_PROMPT)) =
     2512    10866    3                %CHR_IBEX_PROMPT THEN
     2513    10867    3                 INDX = INDX + LENGTHC(%CHR_IBEX_PROMPT);
     2514    10868    4              IF INDX < VD_$RESTORE.LENGTH# THEN DO;
     2515    10869    4                 CALL SEARCH (INDX, SINK, B$SR_NON_BLANK,
     2516    10870    4                   SUBSTR(VD_$RESTORE.BYTES, 0, VD_$RESTORE.LENGTH#), INDX);
     2517    10871    4                 IF VD_$RESTORE.LENGTH# - INDX >=
     2518    10872    5                   LENGTHC(%CHR_IBEX_XEQ_VERB) THEN DO;
     2519    10873    5                    CALL XLATE (IBEX_VERB, B$XL_UPPER,
     2520    10874    5                      SUBSTR(VD_$RESTORE.BYTES, INDX,
     2521    10875    5                      LENGTHC(%CHR_IBEX_XEQ_VERB)));
     2522    10876    6                    IF IBEX_VERB = %CHR_IBEX_XEQ_VERB THEN DO;
     2523    10877                               /* This is an IBEX XEQ command - reject it */
     2524    10878    6                       GOTO CANT_DO_IBEX_XEQ_FAILURE;
     2525    10879    6                       END;
     2526    10880    5                    END;
     2527    10881    4                 END;
     2528    10882    3              END REJECT_XEQ_COMMAND;
     2529    10883
     2530    10884    2           FPT_YC.CMD_ = VECTOR(SUBSTR(VD_$RESTORE.BYTES, 0, VD_$RESTORE.LENGTH#));
     2531    10885    2           CALL M$YC (FPT_YC)
     2532    10886    2             ALTRET (YC_FAILED);
     2533    10887
     2534    10888    2           RETURN;
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:247  
     2535    10889
     2536    10890
     2537    10891
     2538    10892    2   CANT_DO_IBEX_XEQ_FAILURE:
     2539    10893    2           XUG_GETCMD.ERR_CODE = %CLEAR;
     2540    10894    2           XUG_GETCMD.ERR_CODE.FCG# = %CONCAT(FCG, FCG_MID_GLOBAL);
     2541    10895    2           XUG_GETCMD.ERR_CODE.CODE# = %E$CANT_DO_IBEX_XEQ;
     2542    10896    2           XUG_GETCMD.FLGLEV# = %FLV_SERIOUS;
     2543    10897    2           XUG_GETCMD.F1_ = VECTOR(PINCRC(ADDR(VD_$RESTORE.LENGTH#),
     2544    10898    2             LENGTHC(VD_$RESTORE.LENGTH#) - LENGTHC(VD$TEXTC.LENGTH#)) ->
     2545    10899    2             VD$TEXTC);
     2546    10900    2           XUG_GETCMD.F2_ = VECTOR(NIL);
     2547    10901    2           XUG_GETCMD.F3_ = VECTOR(NIL);
     2548    10902    2           CALL XUG$ERRMSG (XUG_GETCMD);
     2549    10903    2           RETURN;
     2550    10904
     2551    10905
     2552    10906    2   YC_FAILED:
     2553    10907    2           XUG_GETCMD.ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     2554    10908    2           XUG_GETCMD.FLGLEV# = %FLV_SERIOUS;
     2555    10909    2           XUG_GETCMD.ERRDCB# = 0;
     2556    10910    2           XUG_GETCMD.F1_ = VECTOR(NIL);
     2557    10911    2           XUG_GETCMD.F2_ = VECTOR(NIL);
     2558    10912    2           XUG_GETCMD.F3_ = VECTOR(NIL);
     2559    10913    2           CALL XUG$ERRMSG (XUG_GETCMD);
     2560    10914    2           RETURN;
     2561    10915
     2562    10916    2   END PROCESS_RESTORE;
     2563    10917
     2564    10918    1   END VDG$MTERMINATE;

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:248  
--  Include file information  --

   XUD_UTS_M.:TOOLE04  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   B$TABLES_C.:LIBRARY  cannot be made into a system file and is referenced.
   XUG_ENTRY.:LIBRARY  cannot be made into a system file and is referenced.
   XU_MACRO_C.:LIBRARY  is referenced.
   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B_ERRORS_C.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDG$MTERMINATE.

   Procedure VDG$MTERMINATE requires 536 words for executable code.
   Procedure VDG$MTERMINATE requires 740 words of local(AUTO) storage.

    No errors detected in file VDG$MAIN.:VDA5TSI    .

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:249  

 Object Unit name= VDG$MTERMINATE                             File name= VDG$MAIN.:VDA5TOU
 UTS= JUL 04 '97 11:20:06.84 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$ME
    2   DCB   even  none     0      0  M$DO
    3   DCB   even  none     0      0  M$E9
    4  RoData even  UTS    124    174  VDG$MTERMINATE
    5   Data  even  none   154    232  VDG$MTERMINATE
    6   Proc  even  none   536   1030  VDG$MTERMINATE
    7  RoData even  none    22     26  VDG$MTERMINATE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes            yes      Std        0  VDG$MTERMINATE
     6     11                  yes      Std        0  VDG$MTERMINATE_FORCED
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:250  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
         yes           Std       0 VDP$WTERMINATE
 yes     yes           Std       1 XUG$ERRMSG
 yes     yes           Std       1 VDA$FCLOSE
         yes           Std       1 VDG$EREPORT_ERROR
 yes     yes           Std       3 XUD$UTS_DIFF_SEC
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$ME                                  M$DO
     M$E9                                  B$TCB$                                B$JIT$
     VD_UTS_START                          VD_6E                                 XUG_GETCMD
     VD_$RESTORE                           VD_EXIT                               B_VERSION
r    B$SR_NON_BLANK$                  r    B$XL_UPPER$                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:251  


     1971        1        /*T***********************************************************/
     1972        2        /*T*                                                         */
     1973        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1974        4        /*T*                                                         */
     1975        5        /*T***********************************************************/
     1976        6
     1977        7        /*D* NAME: VDG$MTERMINATE
     1978        8            PARAMETERS:
     1979        9                None.
     1980       10            INPUT:
     1981       11                VD_6E.STATS#, .STATS_OBJECTS#, .STATS_ERRORS#, and .STATS_TOKENS#
     1982       12                    arrays should contain the statistics for this invocation
     1983       13                    of the editor.
     1984       14                VD_6E.ERR_HEAD$ must point to a VD$ERR which is reserved for
     1985       15                    fatal errors.  If there is no fatal (or initialization) error
     1986       16                    to report, this VD$ERR's .ERR should be %CLEAR.  Note that
     1987       17                    only this first fatal error is handled by VDG$MTERMINATE;
     1988       18                    non-fatal errors should have been reported before getting
     1989       19                    here.  We allow a fatal error to get to MTERMINATE so
     1990       20                    a final, fatal error message will remain on the user's
     1991       21                    screen after the Pres'r restores the screen to its original
     1992       22                    state.
     1993       23                VD_6E.WINDOWS$ should be NIL, or point to a VD$STREAM which is
     1994       24                    open to the Windows file.
     1995       25                VD_6E.SOURCE.OPERAND.STREAM$ should be NIL, or point to a VD$STREAM
     1996       26                    for the Source operand (open or closed).
     1997       27                VD_6E.INTERRUPT should contain any info about an asynchronous
     1998       28                    event being processed; if none is being processed,
     1999       29                    VD_6E.INTERRUPT.CODE# should = %CLEAR.  Specifically, if
     2000       30                    we're terminating due to a hardware fault, we should RETURN
     2001       31                    when done, rather than M$EXITing.
     2002       32                XUG_GETCMD - If there is a fatal error to report, then XUG_GETCMD
     2003       33                    must be filled in and ready for a call to XUG$ERRMSG.
     2004       34                    Specifically, its .ERR_CODE, .FLGLEV, .USE_EPOS, .EPOS,
     2005       35                    .ERRDCB, and .F1_, .F2_, and .F3_ must be filled in.
     2006       36                VD_$RESTORE is a VD$BUFFER whose value is an IBEX command.
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:252  
     2007       37                    It may have a 0-length value.
     2008       38                VD_EXIT should point to the error code word (if any) for the
     2009       39                    last error, and must contain the STEPCC value to be
     2010       40                    returned to the monitor for 6Edit.
     2011       41            OUTPUT:
     2012       42                None.
     2013       43            DESCRIPTION:
     2014       44                If VD_6E.ERR_HEAD$ contains an error at entry, we'll ignore
     2015       45                    most errors we might get during termination; otherwise
     2016       46                    we'll report these errors.
     2017       47                Close all streams.
     2018       48                Update the system statistics file.
     2019       49                Call the Presenter's termination entry-point, to restore the
     2020       50                    user's terminal to its pre-invocation state.
     2021       51                If VD_$RESTORE has a non-NIL value, pass the value to IBEX to execute.
     2022       52                If we were entered with a fatal error, call XUG$ERRMSG to
     2023       53                    write the error message.
     2024       54                    Also, if the error is %E$HUH (internal error), M$ALIB
     2025       55                    to DELTA to PLUGH to the terminal.
     2026       56                If VD_6E.INTERRUPT shows that we were interrupted by a hardware
     2027       57                    fault, then we were called by an ASYNC routine, and
     2028       58                    the top frame of the TCB's exceptional condition stack
     2029       59                    describes the error.  Instead of M$EXITing, we should
     2030       60                    just return:  this will re-execute the offending
     2031       61                    instruction, which should yield the appropriate monitor
     2032       62                    response (we should no longer be trapping hardware faults).
     2033       63                Otherwise, look at VD_EXIT's STEPCC value:  based on that value,
     2034       64                    either M$EXIT or M$ERR back to the monitor.
     2035       65        */
     2036       66
     2037       67        VDG$MTERMINATE: PROC;

     67  6 000000   000000 700200 xent  VDG$MTERMIN* TSX0  ! X66_AUTO_0
         6 000001   001344 000000                    ZERO    740,0

     2038       68
     2039       69
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:253  
     2040       70        %INCLUDE CP_6;
     2041      151        %INCLUDE B_ERRORS_C;
     2042     1277        %INCLUDE VD_MACROS_M;
     2043     3492        %INCLUDE VD_PERR_C;
     2044     3640        %INCLUDE VD_NODES0_E;
     2045     3732        %INCLUDE XU_MACRO_C;
     2046     6826        %INCLUDE XUG_ENTRY;
     2047     6857        %INCLUDE B$TABLES_C;
     2048     6965        %INCLUDE B$JIT;
     2049     7255        %INCLUDE CP_6_SUBS;
     2050     7795        %INCLUDE XUD_UTS_M;
     2051     7877
     2052     7878
     2053     7879    1   DCL VDA$FCLOSE          ENTRY (1) ALTRET;
     2054     7880    1   DCL VDG$EREPORT_ERROR   ENTRY (1);
     2055     7881    1   DCL VDP$WTERMINATE      ENTRY;
     2056     7882
     2057     7883
     2058     7884    1   DCL M$ME DCB;
     2059     7885    1   DCL M$DO DCB;
     2060     7886    1   DCL M$E9 DCB;
     2061     7887    1   DCL B$TCB$ PTR SYMREF;
     2062     7888    1   DCL B$JIT$ PTR SYMREF;
     2063     7889    1   DCL VD_UTS_START UBIN SYMREF;
     2064     7890        %VD_6E (STCLASS=SYMREF);
     2065     7926        %XUG_GETCMD (NAME=XUG_GETCMD, STCLASS=SYMREF);
     2066     8264        %VD_BUFFER (NAME=VD_$RESTORE, STCLASS=SYMREF, MXNB=%MXNB_$RESTORE);
     2067     8324        %FPT_EXIT (FPTN=VD_EXIT, STCLASS=SYMREF);
     2068     8339        %VD_TEXTC (NAME=B_VERSION, STCLASS=SYMREF, MXNB=%NB_VERSION);
     2069     8480        %B$SR_NON_BLANK;
     2070     8484        %B$XL_UPPER;
     2071     8488        %XUD$UTS_ENTRIES;
     2072     8520
     2073     8521
     2074     8522
     2075     8523        %FPT_ALIB (STCLASS=CONSTANT, CMD=DELTA_CMD, LIBNAME=DELTA_FID, RETRN=YES);
     2076     8540    1   DCL DELTA_CMD CHAR(0) CONSTANT INIT('PLUGH');
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:254  
     2077     8541        %VD_TEXTC (NAME=DELTA_FID, STCLASS=CONSTANT, IBYTES='DELTA_NEW');
     2078     8682        %FPT_XCON (FPTN=REVOKE_EXIT_CONTROL, STCLASS=CONSTANT, UENTRY=NIL);
     2079     8696
     2080     8697
     2081     8698
     2082     8699        %VD$ERR (NAME=ORIG_ERR, STCLASS=AUTO);
     2083     8752
     2084     8753
     2085     8754        %VD$ERR (NAME=FATAL$ERR, STCLASS="BASED(VD_6E.ERR_HEAD$)");
     2086     8807        %VD$TEXTC;
     2087     8830        %B$TCB;
     2088     8833        %B$ALT;
     2089     8841        %F$DCB;
     2090     8898
     2091     8899
     2092     8900
     2093     8901    1           ORIG_ERR = FATAL$ERR;

   8901  6 000002   000031 470400 xsym               LDP0    VD_6E+25
         6 000003   000100 100500                    MLR     fill='000'O
         6 000004   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20
         6 000005   200003 000024                    ADSC9   ORIG_ERR,,AUTO           cn=0,n=20

     2094     8902
     2095     8903    1           CALL CLOSE_ALL_STREAMS;

   8903  6 000006   000077 701000 6                  TSX1    CLOSE_ALL_STREAMS
         6 000007   000000 011000                    NOP     0

     2096     8904    1           GOTO UPDATE_STATS;

   8904  6 000010   000017 710000 6                  TRA     UPDATE_STATS

     2097     8905
     2098     8906
     2099     8907    1   VDG$MTERMINATE_FORCED: ENTRY;    /* If we screech while we're screeching */

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:255  
   8907  6 000011   000000 700200 xent  VDG$MTERMIN* TSX0  ! X66_AUTO_0
         6 000012   001344 000000                    ZERO    740,0

     2100     8908    1           ORIG_ERR = FATAL$ERR;

   8908  6 000013   000031 470400 xsym               LDP0    VD_6E+25
         6 000014   000100 100500                    MLR     fill='000'O
         6 000015   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20
         6 000016   200003 000024                    ADSC9   ORIG_ERR,,AUTO           cn=0,n=20

     2101     8909
     2102     8910
     2103     8911    1   UPDATE_STATS:
     2104     8912    1           CALL UPDATE_STATISTICS_FILE;

   8912  6 000017   000177 701000 6     UPDATE_STATS TSX1    UPDATE_STATISTICS_FILE
         6 000020   000000 011000                    NOP     0

     2105     8913
     2106     8914    1           CALL VDP$WTERMINATE;

   8914  6 000021   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 000022   000000 701000 xent               TSX1    VDP$WTERMINATE
         6 000023   000000 011000                    NOP     0

     2107     8915
     2108     8916                /*
     2109     8917                *   Hey!! The terminal has been restored to it's pre-invocation
     2110     8918                *       state now -- so we can write to it if we want!!
     2111     8919                */
     2112     8920
     2113     8921    2           IF ORIG_ERR.ERR ~= %CLEAR THEN DO;

   8921  6 000024   200005 235100                    LDA     ORIG_ERR+2,,AUTO
         6 000025   000032 600000 6                  TZE     s:8925

     2114     8922                   /* VDG$EREPORT_ERROR already setup XUG_GETCMD with error info */
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:256  
     2115     8923    2              CALL XUG$ERRMSG (XUG_GETCMD);

   8923  6 000026   000000 630400 7                  EPPR0   0
         6 000027   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000030   000000 701000 xent               TSX1    XUG$ERRMSG
         6 000031   000000 011000                    NOP     0

     2116     8924    2              END;

     2117     8925    2           IF ORIG_ERR.ERR.CODE# = %E$HUH THEN DO;

   8925  6 000032   200005 236100                    LDQ     ORIG_ERR+2,,AUTO
         6 000033   377770 376007                    ANQ     131064,DL
         6 000034   000010 116007                    CMPQ    8,DL
         6 000035   000043 601000 6                  TNZ     s:8930

     2118     8926    2              CALL M$ALIB (FPT_ALIB)       /* PL to the terminal */

   8926  6 000036   000000 630400 4                  EPPR0   FPT_ALIB
         6 000037   400007 713400                    CLIMB   alt,+7
         6 000040   401400 401760                    pmme    nvectors=4
         6 000041   000043 702000 6                  TSX2    s:8930
         6 000042   000043 710000 6                  TRA     s:8930

     2119     8927    3              WHENALTRETURN DO; ; END;

     2120     8928    2              END;

     2121     8929
     2122     8930    1           IF VD_$RESTORE.LENGTH# > 0 AND VD_$RESTORE.BYTES ~= '0' THEN

   8930  6 000043   000002 220000 xsym               LDX0    VD_$RESTORE+2
         6 000044   000053 604400 6                  TMOZ    s:8934
         6 000045   040000 106440                    CMPC    fill='040'O
         6 000046   000002 400010 xsym               ADSC9   VD_$RESTORE+2            cn=2,n=*X0
         6 000047   000001 000001 7                  ADSC9   1                        cn=0,n=1
         6 000050   000053 600000 6                  TZE     s:8934
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:257  

     2123     8931    1              CALL PROCESS_RESTORE;

   8931  6 000051   000625 701000 6                  TSX1    PROCESS_RESTORE
         6 000052   000000 011000                    NOP     0

     2124     8932
     2125     8933
     2126     8934    2           IF VD_6E.INTERRUPT.STATE# = %INST_HW_TRAPPED THEN DO;

   8934  6 000053   000027 220000 xsym               LDX0    VD_6E+23
         6 000054   000004 100003                    CMPX0   4,DU
         6 000055   000061 601000 6                  TNZ     s:8939

     2127     8935    2              VD_6E.INTERRUPT.STATE# = %INST_PROCESSING;

   8935  6 000056   000001 221003                    LDX1    1,DU
         6 000057   000027 741000 xsym               STX1    VD_6E+23

     2128     8936    2              RETURN;  /* Return from ASYNC routine (VDI$INT_TRAP) */

   8936  6 000060   000000 702200 xent               TSX2  ! X66_ARET

     2129     8937    2              END;
     2130     8938
     2131     8939    1           CALL M$XCON (REVOKE_EXIT_CONTROL);

   8939  6 000061   000020 630400 4                  EPPR0   REVOKE_EXIT_CONTROL
         6 000062   010003 713400                    CLIMB   4099
         6 000063   400400 401760                    pmme    nvectors=2

     2132     8940    1           IF VD_EXIT.V.STEPCC# = 0 THEN

   8940  6 000064   000004 236000 xsym               LDQ     VD_EXIT+4
         6 000065   777000 316003                    CANQ    -512,DU
         6 000066   000073 601000 6                  TNZ     s:8943

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:258  
     2133     8941    1              CALL M$EXIT (VD_EXIT);

   8941  6 000067   000000 630400 xsym               EPPR0   VD_EXIT
         6 000070   000001 713400                    CLIMB   exit
         6 000071   400400 401760                    pmme    nvectors=2
         6 000072   000076 710000 6                  TRA     s:8943+3

     2134     8942    1           ELSE
     2135     8943    1              CALL M$ERR (VD_EXIT);

   8943  6 000073   000000 630400 xsym               EPPR0   VD_EXIT
         6 000074   000002 713400                    CLIMB   err
         6 000075   400400 401760                    pmme    nvectors=2
         6 000076   001027 710000 6                  TRA     s:10918

     2136     8944
     2137     8945
     2138     8946        %BOX (TITLE=CLOSE_ALL_STREAMS, PAGE=YES);
              8954    1
              8958    1   /***************************************************************************
              8960    1    *                                                                         *
              8964    1            *                             CLOSE_ALL_STREAMS                          *
              8966    1            *                                                                        *
              8968    1          ***************************************************************************/

     2139     8972
     2140     8973        /*I* NAME: CLOSE_ALL_STREAMS
     2141     8974            PARAMETERS:
     2142     8975                None.
     2143     8976            INPUT:
     2144     8977                ORIG_ERR must contain the original VD$ERR pointed-to by
     2145     8978                    VD_6E.ERR_HEAD$ at entry to VDG$MTERMINATE.
     2146     8979            OUTPUT:
     2147     8980                The VD$ERR at VD_6E.ERR_HEAD$ will be cleared.
     2148     8981            DESCRIPTION:
     2149     8982                Loop thru the windows file, and close all streams to which
     2150     8983                editing windows are open.
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:259  
     2151     8984                Close the Source stream.
     2152     8985                Note that doing these closes could cause a fatal error, and
     2153     8986                we always want to report the original fatal error from entry
     2154     8987                to VDG$MTERMINATE.
     2155     8988                If we get an error during these closes:
     2156     8989                    If we've saved a fatal error, ignore the new error.
     2157     8990                    If we didn't save a fatal error, then report the
     2158     8991                        new error immediately.
     2159     8992        */
     2160     8993
     2161     8994    1   CLOSE_ALL_STREAMS: PROC;

   8994  6 000077   200010 741300       CLOSE_ALL_S* STX1  ! ORIG_ERR+5,,AUTO

     2162     8995
     2163     8996    2   DCL L0_NODE$ PTR;
     2164     8997    2   DCL L1_NODE$ PTR;
     2165     8998    2   DCL WINDOW_SPEC$ PTR;
     2166     8999
     2167     9000
     2168     9001        %VD$FILE_NODE (NAME=L0$NODE, STCLASS="BASED(L0_NODE$)");
     2169     9094        %VD$FILE_NODE (NAME=L1$NODE, STCLASS="BASED(L1_NODE$)");
     2170     9187        %VD$WINDOW_SPEC (NAME=WINDOW$SPEC, STCLASS="BASED(WINDOW_SPEC$)");
     2171     9253        %VD$STREAM;
     2172     9359        %VD$PORT;
     2173     9457
     2174     9458
     2175     9459
     2176     9460
     2177     9461                /*
     2178     9462                *   Loop thru the Windows file, closing any Streams the
     2179     9463                *       windows have left open.
     2180     9464                */
     2181     9465
     2182     9466    2           IF VD_6E.WINDOWS$ = ADDR(NIL) THEN RETURN;

   9466  6 000100   000006 236000 xsym               LDQ     VD_6E+6
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:260  
         6 000101   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000102   000104 601000 6                  TNZ     s:9467

   9466  6 000103   000001 702211                    TSX2  ! 1,X1

     2183     9467    2           IF VD_6E.WINDOWS$->VD$STREAM.PORT$ = ADDR(NIL) THEN RETURN;

   9467  6 000104   000006 470400 xsym               LDP0    VD_6E+6
         6 000105   000001 236100                    LDQ     1,,PR0
         6 000106   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000107   000111 601000 6                  TNZ     s:9468

   9467  6 000110   000001 702211                    TSX2  ! 1,X1

     2184     9468    2           IF VD_6E.WINDOWS$->VD$STREAM.PORT$->VD$PORT.EXIST# = 0 THEN RETURN;

   9468  6 000111   000001 471500                    LDP1    1,,PR0
         6 000112   100003 720100                    LXL0    3,,PR1
         6 000113   000115 601000 6                  TNZ     s:9469

   9468  6 000114   000001 702211                    TSX2  ! 1,X1

     2185     9469    2           L0_NODE$ = VD_6E.WINDOWS$->VD$STREAM.PORT$->

   9469  6 000115   100031 236100                    LDQ     25,,PR1
         6 000116   200011 756100                    STQ     L0_NODE$,,AUTO

     2186     9470    2             VD$PORT.LEVEL.INTERNAL$ (%LVL_FILE);
     2187     9471    2           IF L0_NODE$ = ADDR(NIL) THEN RETURN;

   9471  6 000117   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000120   000122 601000 6                  TNZ     s:9473

   9471  6 000121   000001 702211                    TSX2  ! 1,X1

     2188     9472
     2189     9473    2           L1_NODE$ = L0$NODE.HEAD$;
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:261  

   9473  6 000122   200011 473500                    LDP3    L0_NODE$,,AUTO
         6 000123   300012 236100                    LDQ     10,,PR3
         6 000124   200012 756100                    STQ     L1_NODE$,,AUTO

     2190     9474    3           DO WHILE L1_NODE$ ~= ADDR(NIL);

   9474  6 000125   000156 710000 6                  TRA     s:9485

     2191     9475    3              WINDOW_SPEC$ = L1$NODE.DESC.SPEC.V$;

   9475  6 000126   200012 470500                    LDP0    L1_NODE$,,AUTO
         6 000127   000007 236100                    LDQ     7,,PR0
         6 000130   200013 756100                    STQ     WINDOW_SPEC$,,AUTO

     2192     9476    3              IF WINDOW_SPEC$ ~= ADDR(NIL) THEN

   9476  6 000131   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000132   000153 600000 6                  TZE     s:9484

     2193     9477    4                 IF WINDOW$SPEC.OPERAND.STREAM$ ~= ADDR(NIL) THEN DO;

   9477  6 000133   200013 471500                    LDP1    WINDOW_SPEC$,,AUTO
         6 000134   100010 236100                    LDQ     8,,PR1
         6 000135   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000136   000153 600000 6                  TZE     s:9484

     2194     9478    4                    CALL VDA$FCLOSE (WINDOW$SPEC.OPERAND.STREAM$->VD$STREAM)

   9478  6 000137   100010 473500                    LDP3    8,,PR1
         6 000140   201336 453500                    STP3    STATS_REC+604,,AUTO
         6 000141   201336 630500                    EPPR0   STATS_REC+604,,AUTO
         6 000142   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000143   000000 701000 xent               TSX1    VDA$FCLOSE
         6 000144   000146 702000 6                  TSX2    s:9480
         6 000145   000153 710000 6                  TRA     s:9484

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:262  
     2195     9479    5                    WHENALTRETURN DO;

     2196     9480    5                       IF ORIG_ERR.ERR = %CLEAR THEN

   9480  6 000146   200005 235100                    LDA     ORIG_ERR+2,,AUTO
         6 000147   000153 601000 6                  TNZ     s:9484

     2197     9481    5                          CALL VDG$EREPORT_ERROR;

   9481  6 000150   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 000151   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         6 000152   000000 011000                    NOP     0

     2198     9482    5                       END;

     2199     9483    4                    END;

     2200     9484    3              L1_NODE$ = L1$NODE.FLINK$;

   9484  6 000153   200012 470500                    LDP0    L1_NODE$,,AUTO
         6 000154   000002 236100                    LDQ     2,,PR0
         6 000155   200012 756100                    STQ     L1_NODE$,,AUTO

     2201     9485    3              END;

   9485  6 000156   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000157   000126 601000 6                  TNZ     s:9475

     2202     9486
     2203     9487
     2204     9488                /*
     2205     9489                *   Close the Source stream, if it's open.
     2206     9490                */
     2207     9491
     2208     9492    3           IF VD_6E.SOURCE.OPERAND.STREAM$ ~= ADDR(NIL) THEN DO;

   9492  6 000160   000020 236000 xsym               LDQ     VD_6E+16
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:263  
         6 000161   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000162   000175 600000 6                  TZE     s:9500

     2209     9493    3              CALL VDA$FCLOSE (VD_6E.SOURCE.OPERAND.STREAM$->VD$STREAM)

   9493  6 000163   000020 630400 xsym               EPPR0   VD_6E+16
         6 000164   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000165   000000 701000 xent               TSX1    VDA$FCLOSE
         6 000166   000170 702000 6                  TSX2    s:9495
         6 000167   000175 710000 6                  TRA     s:9500

     2210     9494    4              WHENALTRETURN DO;

     2211     9495    4                 IF ORIG_ERR.ERR = %CLEAR THEN

   9495  6 000170   200005 235100                    LDA     ORIG_ERR+2,,AUTO
         6 000171   000175 601000 6                  TNZ     s:9500

     2212     9496    4                    CALL VDG$EREPORT_ERROR;

   9496  6 000172   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 000173   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         6 000174   000000 011000                    NOP     0

     2213     9497    4                 END;

     2214     9498    3              END;

     2215     9499
     2216     9500    2           RETURN;

   9500  6 000175   200010 221300                    LDX1  ! ORIG_ERR+5,,AUTO
         6 000176   000001 702211                    TSX2  ! 1,X1

     2217     9501
     2218     9502    2   END CLOSE_ALL_STREAMS;
     2219     9503
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:264  
     2220     9504        %BOX (TITLE=UPDATE_STATISTICS_FILE, PAGE=YES);
              9512    2
              9516    2   /***************************************************************************
              9518    2    *                                                                         *
              9522    2            *                           UPDATE_STATISTICS_FILE                       *
              9524    2            *                                                                        *
              9526    2          ***************************************************************************/

     2221     9530
     2222     9531        /*I* NAME: UPDATE_STATISTICS_FILE
     2223     9532            PARAMETERS:
     2224     9533                None.
     2225     9534            INPUT:
     2226     9535            OUTPUT:
     2227     9536            DESCRIPTION:
     2228     9537        */
     2229     9538
     2230     9539    1   UPDATE_STATISTICS_FILE: PROC;

   9539  6 000177   200010 741300       UPDATE_STAT* STX1  ! ORIG_ERR+5,,AUTO

     2231     9540
     2232     9541
     2233     9542        /*
     2234     9543        *   Local definitions for statistics file.
     2235     9544        */
     2236     9545
     2237     9546        %EQU NB_STATS_KEY = 7;      /* Length of record key */
     2238     9547
     2239     9548        %EQU STK_TOTAL = 'TOTAL  '; /* Key of totals record */
     2240     9549        %EQU STK_ERROR = 'ERROR_n'; /* Key of error recs ("n" is bucket#) */
     2241     9550        %EQU STK_CMDLN = 'CMDLN_n'; /* Key of user-cmdline records */
     2242     9551        %EQU STK_FILES = 'FILES_n'; /* Key of file-opens records */
     2243     9552        %EQU STK_DURATION = 'DURAT_n'; /* Key of session-duration records */
     2244     9553
     2245     9554        /*
     2246     9555        *   Total # records in file:  1 TOTAL record, and 10*3 other
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:265  
     2247     9556        *       records (10 buckets for each of 3 record types).
     2248     9557        */
     2249     9558
     2250     9559        %EQU N_STKEYS = 31;
     2251     9560
     2252     9561        /*  How to compute the bucket #s for each record type */
     2253     9562
     2254     9563        %EQU STDIV_ERROR = 20;      /* # errors per bucket */
     2255     9564        %EQU STDIV_CMDLN = 50;      /* # cmdlines per bucket */
     2256     9565        %EQU STDIV_DURATION = 120; /* # seconds duration per bucket */
     2257     9566
     2258     9567        /*
     2259     9568        *   Local definitions for offsets into:
     2260     9569        *       o The statistics file record key, and
     2261     9570        *       o The statistics file record itself.
     2262     9571        */
     2263     9572
     2264     9573        %EQU KEYOFS_BUCKET_NUM = NB_STATS_KEY - 1;
     2265     9574
     2266     9575        /*
     2267     9576        *   Word at offset 0 = # updates of this stats record;
     2268     9577        *           offset 1 = execution time in 6Edit represented by this
     2269     9578        *                       update, in (microseconds / 524288).
     2270     9579        *   Stats arrays start at offset 2.
     2271     9580        */
     2272     9581        %EQU RECOFS_GEN = 2;
     2273     9582        %EQU RECOFS_OBJECTS = RECOFS_GEN + STG_MX + 1;
     2274     9583        %EQU RECOFS_ERRORS = RECOFS_OBJECTS + CLS_MX + 1;
     2275     9584        %EQU RECOFS_TOKENS = RECOFS_ERRORS + MX_ERROR_CODE + 1;
     2276     9585        %EQU RECOFS_END = RECOFS_TOKENS + MX_TOKEN + 1;
     2277     9586
     2278     9587
     2279     9588
     2280     9589        %FPT_MONINFO (STCLASS=CONSTANT, SITEINFO=VLR_SITEINFO);
     2281     9604        %FPT_OPEN (FPTN=CONST_STATS_OPEN, DCB=M$E9, ASN=FILE, FUN=CREATE,
     2282     9605            EXIST=OLDFILE, ACCT=STATS_ACCT, ACCESS=STATS_ACCESS,
     2283     9606            ORG=KEYED, ACS=DIRECT, IXTNSIZE="%(N_STKEYS * RECOFS_END / 1000)",
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:266  
     2284     9607            SCRUB=YES, SHARE=ALL, TYPE=%CHR_STATS_TYPE, PASS=STATS_PASS);
     2285     9716        %VLP_ACCT (FPTN=STATS_ACCT, STCLASS=CONSTANT, ACCT=%CHR_STATS_ACCT);
     2286     9729        %VLP_PASS (FPTN=STATS_PASS, STCLASS=CONSTANT, PASS=%CHR_STATS_PASS);
     2287     9742
     2288     9743        %VLP_ATTR (FPTN=STATS_ACCESS, STCLASS=CONSTANT);
     2289     9757        %VLP_ACCESS (STCLASS=CONSTANT, READ=YES, WNEW=YES, UPD=YES, DELR=YES,
     2290     9758            ACCT='?', LAST=";");
     2291     9775
     2292     9776        %FPT_ENQ (FPTN=STATS_ENQ, STCLASS=CONSTANT, DCB=M$E9, RNAME=STATS_RNAME,
     2293     9777            SHARE=NONE, WAIT_TIME=%MX_STATS_ENQ_WAIT);
     2294     9795        %FPT_DEQ (FPTN=STATS_DEQ, STCLASS=CONSTANT, DCB=M$E9, RNAME=STATS_RNAME);
     2295     9812        %VD_TEXTC (NAME=STATS_RNAME, STCLASS=CONSTANT, IBYTES=%CHR_STATS_RNAME);
     2296     9953        %FPT_CLOSE (FPTN=STATS_CLOSE, STCLASS=CONSTANT, DCB=M$E9, DISP=SAVE);
     2297     9995
     2298     9996
     2299     9997        %FPT_TIME (FPTN=CONST_FPT_TIME, STCLASS=CONSTANT, SOURCE=CLOCK,
     2300     9998            DEST=UTS);
     2301    10017
     2302    10018
     2303    10019
     2304    10020        %VLR_SITEINFO (STCLASS=STATIC);
     2305    10039
     2306    10040
     2307    10041
     2308    10042        %FPT_OPEN (FPTN=STATS_OPEN, STCLASS=AUTO);
     2309    10151        %VD_TEXTC (NAME=STATS_NAME, STCLASS=AUTO, MXNB=%MXNB_FILE_NAME);
     2310    10292        %FPT_XEQTIME (STCLASS=AUTO);
     2311    10305    2   DCL 1 XEQTIME DALIGNED,
     2312    10306    2         2 * BIT(18),
     2313    10307    2         2 MICROS_DIV_512K UBIN(35) UNAL,
     2314    10308    2         2 * BIT(19),
     2315    10309    2         2 * BIT(72);
     2316    10310    2   DCL BUCKET_NUM SBIN;
     2317    10311        %FPT_TIME (STCLASS=AUTO);
     2318    10330    2   DCL UTS_END UBIN;
     2319    10331
     2320    10332
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:267  
     2321    10333
     2322    10334    2           CALL M$MONINFO (FPT_MONINFO);

  10334  6 000200   000026 630400 4                  EPPR0   FPT_MONINFO
         6 000201   020023 713400                    CLIMB   8211
         6 000202   402400 401760                    pmme    nvectors=6

     2323    10335    2           IF SUBSTR(VLR_SITEINFO.SITE_NAME#.C, 0,

  10335  6 000203   000073 236000 5                  LDQ     VLR_SITEINFO+1
         6 000204   000033 772000                    QRL     27
         6 000205   000000 620006                    EAX0    0,QL
         6 000206   040000 106440                    CMPC    fill='040'O
         6 000207   000073 200010 5                  ADSC9   VLR_SITEINFO+1           cn=1,n=*X0
         6 000210   000152 000011 4                  ADSC9   CONST_FPT_TIME+12        cn=0,n=9
         6 000211   000223 600000 6                  TZE     s:10341
         6 000212   000073 236000 5                  LDQ     VLR_SITEINFO+1
         6 000213   000033 772000                    QRL     27
         6 000214   000000 620006                    EAX0    0,QL
         6 000215   040000 106440                    CMPC    fill='040'O
         6 000216   000073 200010 5                  ADSC9   VLR_SITEINFO+1           cn=1,n=*X0
         6 000217   000155 000011 4                  ADSC9   CONST_FPT_TIME+15        cn=0,n=9
         6 000220   000223 600000 6                  TZE     s:10341

     2324    10336    2             VLR_SITEINFO.SITE_NAME#.L) ~= %CHR_STATS_SITE_A
     2325    10337    2             AND SUBSTR(VLR_SITEINFO.SITE_NAME#.C, 0,
     2326    10338    2             VLR_SITEINFO.SITE_NAME#.L) ~= %CHR_STATS_SITE_B THEN
     2327    10339    2              RETURN;

  10339  6 000221   200010 221300                    LDX1  ! ORIG_ERR+5,,AUTO
         6 000222   000001 702211                    TSX2  ! 1,X1

     2328    10340
     2329    10341    2           STATS_OPEN = CONST_STATS_OPEN;

  10341  6 000223   000100 100400                    MLR     fill='000'O
         6 000224   000000 000350 5                  ADSC9   CONST_STATS_OPEN         cn=0,n=232
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:268  
         6 000225   200012 000350                    ADSC9   STATS_OPEN,,AUTO         cn=0,n=232

     2330    10342    2           STATS_OPEN.NAME_ = VECTOR(STATS_NAME);

  10342  6 000226   000002 235000 7                  LDA     2
         6 000227   201336 452500                    STP2    STATS_REC+604,,AUTO
         6 000230   201336 236100                    LDQ     STATS_REC+604,,AUTO
         6 000231   000104 036003                    ADLQ    68,DU
         6 000232   200020 757100                    STAQ    SINK+5,,AUTO

     2331    10343    2           STATS_OPEN.V_ = VECTOR(STATS_OPEN.V);

  10343  6 000233   000003 235000 7                  LDA     3
         6 000234   201336 452500                    STP2    STATS_REC+604,,AUTO
         6 000235   201336 236100                    LDQ     STATS_REC+604,,AUTO
         6 000236   000056 036003                    ADLQ    46,DU
         6 000237   200012 757100                    STAQ    STATS_OPEN,,AUTO

     2332    10344    2           CALL CONCAT (STATS_NAME.BYTES, %CHR_STATS_NAME, %CHR_UNDERSCORE,

  10344  6 000240   000000 236000 xsym               LDQ     B_VERSION
         6 000241   000033 772000                    QRL     27
         6 000242   040100 100400                    MLR     fill='040'O
         6 000243   000160 000011 4                  ADSC9   CONST_FPT_TIME+18        cn=0,n=9
         6 000244   200104 200011                    ADSC9   STATS_NAME,,AUTO         cn=1,n=9
         6 000245   000000 620006                    EAX0    0,QL
         6 000246   137000 236007                    LDQ     48640,DL
         6 000247   200106 552110                    STBQ    STATS_NAME+2,'10'O,AUTO
         6 000250   040100 100440                    MLR     fill='040'O
         6 000251   000000 200010 xsym               ADSC9   B_VERSION                cn=1,n=*X0
         6 000252   200106 600025                    ADSC9   STATS_NAME+2,,AUTO       cn=3,n=21

     2333    10345    2             SUBSTR(B_VERSION.BYTES, 0, B_VERSION.LENGTH#));
     2334    10346    2           STATS_NAME.LENGTH# = %LENGTHC(CHR_STATS_NAME) +

  10346  6 000253   000000 236000 xsym               LDQ     B_VERSION
         6 000254   000033 772000                    QRL     27
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:269  
         6 000255   000012 036007                    ADLQ    10,DL
         6 000256   000033 736000                    QLS     27
         6 000257   200104 552140                    STBQ    STATS_NAME,'40'O,AUTO

     2335    10347    2             %LENGTHC(CHR_UNDERSCORE) + B_VERSION.LENGTH#;
     2336    10348    2           CALL M$OPEN (STATS_OPEN)

  10348  6 000260   200012 630500                    EPPR0   STATS_OPEN,,AUTO
         6 000261   450000 713400                    CLIMB   alt,open
         6 000262   410400 401760                    pmme    nvectors=18
         6 000263   000265 702000 6                  TSX2    s:10350
         6 000264   000267 710000 6                  TRA     s:10353

     2337    10349    3           WHENALTRETURN DO;

     2338    10350    3              RETURN;

  10350  6 000265   200010 221300                    LDX1  ! ORIG_ERR+5,,AUTO
         6 000266   000001 702211                    TSX2  ! 1,X1

     2339    10351    3              END;
     2340    10352
     2341    10353    2           CALL M$ENQ (STATS_ENQ)      /* Get in line for excl access */

  10353  6 000267   000052 630400 4                  EPPR0   STATS_ENQ
         6 000270   420002 713400                    CLIMB   alt,+8194
         6 000271   401000 401760                    pmme    nvectors=3
         6 000272   000431 702000 6                  TSX2    CLOSE_STATS

     2342    10354    2             ALTRET (CLOSE_STATS);
     2343    10355
     2344    10356    2           XEQTIME = %CLEAR;

  10356  6 000273   000100 100400                    MLR     fill='000'O
         6 000274   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 000275   200116 000020                    ADSC9   XEQTIME,,AUTO            cn=0,n=16

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:270  
     2345    10357    2           FPT_XEQTIME.BUF_ = VECTOR(XEQTIME);

  10357  6 000276   000004 235000 7                  LDA     4
         6 000277   201336 452500                    STP2    STATS_REC+604,,AUTO
         6 000300   201336 236100                    LDQ     STATS_REC+604,,AUTO
         6 000301   000116 036003                    ADLQ    78,DU
         6 000302   200114 757100                    STAQ    FPT_XEQTIME,,AUTO

     2346    10358    2           CALL M$XEQTIME (FPT_XEQTIME);

  10358  6 000303   200114 630500                    EPPR0   FPT_XEQTIME,,AUTO
         6 000304   020011 713400                    CLIMB   8201
         6 000305   400000 401760                    pmme    nvectors=1

     2347    10359
     2348    10360    2           CALL SUM_INTO_STATS_REC (%STK_TOTAL);

  10360  6 000306   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 000307   200144 756100                    STQ     @KEY+1,,AUTO
         6 000310   000005 236000 7                  LDQ     5
         6 000311   200143 756100                    STQ     UTS_END+3,,AUTO
         6 000312   000440 701000 6                  TSX1    SUM_INTO_STATS_REC
         6 000313   000000 011000                    NOP     0

     2349    10361
     2350    10362    2           BUCKET_NUM = VD_6E.STATS_ERRORS# (0) / %STDIV_ERROR;

  10362  6 000314   000511 236000 xsym               LDQ     VD_6E+329
         6 000315   000024 506007                    DIV     20,DL
         6 000316   200122 756100                    STQ     BUCKET_NUM,,AUTO

     2351    10363    2           CALL SUM_INTO_STATS_REC (%STK_ERROR, MINIMUM(BUCKET_NUM, 9));

  10363  6 000317   000011 236007                    LDQ     9,DL
         6 000320   000323 604000 6                  TMI     s:10363+4
         6 000321   200122 116100                    CMPQ    BUCKET_NUM,,AUTO
         6 000322   000324 604400 6                  TMOZ    s:10363+5
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:271  
         6 000323   200122 236100                    LDQ     BUCKET_NUM,,AUTO
         6 000324   201341 756100                    STQ     STATS_REC+607,,AUTO
         6 000325   201341 630500                    EPPR0   STATS_REC+607,,AUTO
         6 000326   200144 450500                    STP0    @KEY+1,,AUTO
         6 000327   000006 236000 7                  LDQ     6
         6 000330   200143 756100                    STQ     UTS_END+3,,AUTO
         6 000331   000440 701000 6                  TSX1    SUM_INTO_STATS_REC
         6 000332   000000 011000                    NOP     0

     2352    10364
     2353    10365    2           BUCKET_NUM =

  10365  6 000333   000346 236000 xsym               LDQ     VD_6E+230
         6 000334   000062 506007                    DIV     50,DL
         6 000335   200122 756100                    STQ     BUCKET_NUM,,AUTO

     2354    10366    2             VD_6E.STATS_TOKENS# (%T_COMMAND_LINE - %VD_BASE#) / %STDIV_CMDLN;
     2355    10367    2           CALL SUM_INTO_STATS_REC (%STK_CMDLN, MINIMUM(BUCKET_NUM, 9));

  10367  6 000336   000011 236007                    LDQ     9,DL
         6 000337   000342 604000 6                  TMI     s:10367+4
         6 000340   200122 116100                    CMPQ    BUCKET_NUM,,AUTO
         6 000341   000343 604400 6                  TMOZ    s:10367+5
         6 000342   200122 236100                    LDQ     BUCKET_NUM,,AUTO
         6 000343   201342 756100                    STQ     STATS_REC+608,,AUTO
         6 000344   201342 630500                    EPPR0   STATS_REC+608,,AUTO
         6 000345   200144 450500                    STP0    @KEY+1,,AUTO
         6 000346   000007 236000 7                  LDQ     7
         6 000347   200143 756100                    STQ     UTS_END+3,,AUTO
         6 000350   000440 701000 6                  TSX1    SUM_INTO_STATS_REC
         6 000351   000000 011000                    NOP     0

     2356    10368
     2357    10369    2           FPT_TIME = CONST_FPT_TIME;

  10369  6 000352   000100 100400                    MLR     fill='000'O
         6 000353   000136 000060 4                  ADSC9   CONST_FPT_TIME           cn=0,n=48
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:272  
         6 000354   200124 000060                    ADSC9   FPT_TIME,,AUTO           cn=0,n=48

     2358    10370    2           FPT_TIME.V_ = VECTOR(FPT_TIME.V);

  10370  6 000355   000010 235000 7                  LDA     8
         6 000356   201336 452500                    STP2    STATS_REC+604,,AUTO
         6 000357   201336 236100                    LDQ     STATS_REC+604,,AUTO
         6 000360   000136 036003                    ADLQ    94,DU
         6 000361   200124 757100                    STAQ    FPT_TIME,,AUTO

     2359    10371    2           FPT_TIME.TSTAMP_ = VECTOR(UTS_END);

  10371  6 000362   777640 235007                    LDA     -96,DL
         6 000363   201336 452500                    STP2    STATS_REC+604,,AUTO
         6 000364   201336 236100                    LDQ     STATS_REC+604,,AUTO
         6 000365   000140 036003                    ADLQ    96,DU
         6 000366   200134 757100                    STAQ    FPT_TIME+8,,AUTO

     2360    10372    2           CALL M$TIME (FPT_TIME)

  10372  6 000367   200124 630500                    EPPR0   FPT_TIME,,AUTO
         6 000370   420004 713400                    CLIMB   alt,+8196
         6 000371   402000 401760                    pmme    nvectors=5
         6 000372   000424 702000 6                  TSX2    s:10381

     2361    10373    3           WHENRETURN DO;

     2362    10374    3              CALL XUD$UTS_DIFF_SEC (BUCKET_NUM,UTS_END,VD_UTS_START);

  10374  6 000373   000011 236000 7                  LDQ     9
         6 000374   201340 756100                    STQ     STATS_REC+606,,AUTO
         6 000375   200140 630500                    EPPR0   UTS_END,,AUTO
         6 000376   201337 450500                    STP0    STATS_REC+605,,AUTO
         6 000377   200122 631500                    EPPR1   BUCKET_NUM,,AUTO
         6 000400   201336 451500                    STP1    STATS_REC+604,,AUTO
         6 000401   201336 630500                    EPPR0   STATS_REC+604,,AUTO
         6 000402   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:273  
         6 000403   000000 701000 xent               TSX1    XUD$UTS_DIFF_SEC
         6 000404   000000 011000                    NOP     0

     2363    10375    3              BUCKET_NUM = BUCKET_NUM/%STDIV_DURATION;

  10375  6 000405   200122 236100                    LDQ     BUCKET_NUM,,AUTO
         6 000406   000170 506007                    DIV     120,DL
         6 000407   200122 756100                    STQ     BUCKET_NUM,,AUTO

     2364    10376    3              CALL SUM_INTO_STATS_REC (%STK_DURATION,

  10376  6 000410   000011 236007                    LDQ     9,DL
         6 000411   000414 604000 6                  TMI     s:10376+4
         6 000412   200122 116100                    CMPQ    BUCKET_NUM,,AUTO
         6 000413   000415 604400 6                  TMOZ    s:10376+5
         6 000414   200122 236100                    LDQ     BUCKET_NUM,,AUTO
         6 000415   201343 756100                    STQ     STATS_REC+609,,AUTO
         6 000416   201343 630500                    EPPR0   STATS_REC+609,,AUTO
         6 000417   200144 450500                    STP0    @KEY+1,,AUTO
         6 000420   000012 236000 7                  LDQ     10
         6 000421   200143 756100                    STQ     UTS_END+3,,AUTO
         6 000422   000440 701000 6                  TSX1    SUM_INTO_STATS_REC
         6 000423   000000 011000                    NOP     0

     2365    10377    3                MINIMUM(BUCKET_NUM, 9));
     2366    10378    3              END;

     2367    10379
     2368    10380
     2369    10381    2           CALL M$DEQ (STATS_DEQ)      /* Release the stats file */

  10381  6 000424   000064 630400 4                  EPPR0   STATS_DEQ
         6 000425   420003 713400                    CLIMB   alt,+8195
         6 000426   401000 401760                    pmme    nvectors=3
         6 000427   000431 702000 6                  TSX2    CLOSE_STATS
         6 000430   000431 710000 6                  TRA     CLOSE_STATS

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:274  
     2370    10382    3           WHENALTRETURN DO; ; END;

     2371    10383
     2372    10384    2   CLOSE_STATS:
     2373    10385    2           CALL M$CLOSE (STATS_CLOSE)

  10385  6 000431   000100 630400 4     CLOSE_STATS  EPPR0   STATS_CLOSE
         6 000432   450001 713400                    CLIMB   alt,close
         6 000433   406000 401760                    pmme    nvectors=13
         6 000434   000436 702000 6                  TSX2    s:10388
         6 000435   000436 710000 6                  TRA     s:10388

     2374    10386    3           WHENALTRETURN DO; ; END;

     2375    10387
     2376    10388    2           RETURN;

  10388  6 000436   200010 221300                    LDX1  ! ORIG_ERR+5,,AUTO
         6 000437   000001 702211                    TSX2  ! 1,X1

     2377    10389
     2378    10390                %BOX (TITLE=SUM_INTO_STATS_REC);

             10402    2   /***************************************************************************
             10404    2    *                                                                         *
             10408    2            *                             SUM_INTO_STATS_REC                         *
             10410    2            *                                                                        *
             10412    2          ***************************************************************************/

     2379    10416
     2380    10417    2   SUM_INTO_STATS_REC: PROC (KEY, BUCKET);

  10417  6 000440   200142 741300       SUM_INTO_ST* STX1  ! UTS_END+2,,AUTO

     2381    10418    3   DCL KEY CHAR(%NB_STATS_KEY);
     2382    10419    3   DCL BUCKET UBIN;
     2383    10420
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:275  
     2384    10421
     2385    10422        %FPT_READ (FPTN=CONST_STATS_READ, DCB=M$E9, KEYS=YES);
     2386    10461        %FPT_WRITE (FPTN=CONST_STATS_WRITE, DCB=M$E9);
     2387    10492
     2388    10493
     2389    10494    3   DCL I UBIN;
     2390    10495        %FPT_READ (FPTN=STATS_READ, STCLASS="");
     2391    10534        %FPT_WRITE (FPTN=STATS_WRITE, STCLASS="");
     2392    10565        %VD_TEXTC (NAME=STATS_KEY, STCLASS="", MXNB=%NB_STATS_KEY);
     2393    10706    3   DCL STATS_REC (0:%RECOFS_END) SBIN;
     2394    10707
     2395    10708
     2396    10709
     2397    10710    3           STATS_READ = CONST_STATS_READ;

  10710  6 000441   000100 100400                    MLR     fill='000'O
         6 000442   000170 000070 5                  ADSC9   CONST_STATS_READ         cn=0,n=56
         6 000443   200146 000070                    ADSC9   STATS_READ,,AUTO         cn=0,n=56

     2398    10711    3           STATS_READ.V_ = VECTOR(STATS_READ.V);

  10711  6 000444   000013 235000 7                  LDA     11
         6 000445   201336 452500                    STP2    STATS_REC+604,,AUTO
         6 000446   201336 236100                    LDQ     STATS_REC+604,,AUTO
         6 000447   000156 036003                    ADLQ    110,DU
         6 000450   200146 757100                    STAQ    STATS_READ,,AUTO

     2399    10712    3           STATS_READ.BUF_ = VECTOR(STATS_REC);

  10712  6 000451   000014 235000 7                  LDA     12
         6 000452   201336 452500                    STP2    STATS_REC+604,,AUTO
         6 000453   201336 236100                    LDQ     STATS_REC+604,,AUTO
         6 000454   000202 036003                    ADLQ    130,DU
         6 000455   200152 757100                    STAQ    STATS_READ+4,,AUTO

     2400    10713    3           STATS_READ.KEY_ = VECTOR(STATS_KEY);

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:276  
  10713  6 000456   000010 235000 7                  LDA     8
         6 000457   201336 452500                    STP2    STATS_REC+604,,AUTO
         6 000460   201336 236100                    LDQ     STATS_REC+604,,AUTO
         6 000461   000200 036003                    ADLQ    128,DU
         6 000462   200150 757100                    STAQ    STATS_READ+2,,AUTO

     2401    10714    3           STATS_WRITE = CONST_STATS_WRITE;

  10714  6 000463   000100 100400                    MLR     fill='000'O
         6 000464   000206 000060 5                  ADSC9   CONST_STATS_WRITE        cn=0,n=48
         6 000465   200164 000060                    ADSC9   STATS_WRITE,,AUTO        cn=0,n=48

     2402    10715    3           STATS_WRITE.V_ = VECTOR(STATS_WRITE.V);

  10715  6 000466   000004 235000 7                  LDA     4
         6 000467   201336 452500                    STP2    STATS_REC+604,,AUTO
         6 000470   201336 236100                    LDQ     STATS_REC+604,,AUTO
         6 000471   000174 036003                    ADLQ    124,DU
         6 000472   200164 757100                    STAQ    STATS_WRITE,,AUTO

     2403    10716    3           STATS_WRITE.BUF_ = VECTOR(STATS_REC);

  10716  6 000473   000014 235000 7                  LDA     12
         6 000474   201336 452500                    STP2    STATS_REC+604,,AUTO
         6 000475   201336 236100                    LDQ     STATS_REC+604,,AUTO
         6 000476   000202 036003                    ADLQ    130,DU
         6 000477   200170 757100                    STAQ    STATS_WRITE+4,,AUTO

     2404    10717    3           STATS_WRITE.KEY_ = VECTOR(STATS_KEY);

  10717  6 000500   000010 235000 7                  LDA     8
         6 000501   201336 452500                    STP2    STATS_REC+604,,AUTO
         6 000502   201336 236100                    LDQ     STATS_REC+604,,AUTO
         6 000503   000200 036003                    ADLQ    128,DU
         6 000504   200166 757100                    STAQ    STATS_WRITE+2,,AUTO

     2405    10718
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:277  
     2406    10719    3           STATS_KEY.LENGTH# = %NB_STATS_KEY;

  10719  6 000505   007000 236003                    LDQ     3584,DU
         6 000506   200200 552140                    STBQ    STATS_KEY,'40'O,AUTO

     2407    10720    3           STATS_KEY.BYTES = KEY;

  10720  6 000507   200143 470500                    LDP0    @KEY,,AUTO
         6 000510   040100 100500                    MLR     fill='040'O
         6 000511   000000 000007                    ADSC9   0,,PR0                   cn=0,n=7
         6 000512   200200 200007                    ADSC9   STATS_KEY,,AUTO          cn=1,n=7

     2408    10721    3           IF ADDR(BUCKET) ~= ADDR(NIL) THEN

  10721  6 000513   200144 236100                    LDQ     @BUCKET,,AUTO
         6 000514   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000515   000530 600000 6                  TZE     s:10725

     2409    10722    3              CALL INSERT (STATS_KEY.BYTES, %KEYOFS_BUCKET_NUM, 1,

  10722  6 000516   200144 471500                    LDP1    @BUCKET,,AUTO
         6 000517   100000 236100                    LDQ     0,,PR1
         6 000520   000033 736000                    QLS     27
         6 000521   000022 772000                    QRL     18
         6 000522   000000 620006                    EAX0    0,QL
         6 000523   060000 260003                    ORX0    24576,DU
         6 000524   000000 636010                    EAQ     0,X0
         6 000525   000015 276000 7                  ORQ     13
         6 000526   000033 772000                    QRL     27
         6 000527   200201 552104                    STBQ    STATS_KEY+1,'04'O,AUTO

     2410    10723    3                BITASC(BINBIT(BUCKET,9)|ASCBIT('0')));
     2411    10724
     2412    10725    3           CALL M$READ (STATS_READ)

  10725  6 000530   200146 630500                    EPPR0   STATS_READ,,AUTO
         6 000531   440000 713400                    CLIMB   alt,read
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:278  
         6 000532   401400 401760                    pmme    nvectors=4
         6 000533   000535 702000 6                  TSX2    STATS_READ_FAILED

     2413    10726    3             ALTRET (STATS_READ_FAILED);
     2414    10727
     2415    10728    4           DO %NEVER;

  10728  6 000534   000540 710000 6                  TRA     s:10733

     2416    10729    4   STATS_READ_FAILED:
     2417    10730    4              STATS_REC = %CLEAR;

  10730  6 000535   000100 100400       STATS_READ_* MLR     fill='000'O
         6 000536   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 000537   200202 004554                    ADSC9   STATS_REC,,AUTO          cn=0,n=2412

     2418    10731    4              END;

     2419    10732
     2420    10733    3           STATS_REC (0) = STATS_REC (0) + 1;

  10733  6 000540   200202 054100                    AOS     STATS_REC,,AUTO

     2421    10734    3           STATS_REC (1) = STATS_REC (1) + XEQTIME.MICROS_DIV_512K;

  10734  6 000541   200116 235100                    LDA     XEQTIME,,AUTO
         6 000542   200117 236100                    LDQ     XEQTIME+1,,AUTO
         6 000543   000023 773000                    LRL     19
         6 000544   000031 376000 xsym               ANQ     B_VECTNIL+25
         6 000545   200203 036100                    ADLQ    STATS_REC+1,,AUTO
         6 000546   200203 756100                    STQ     STATS_REC+1,,AUTO

     2422    10735
     2423    10736    4           DO I = 0 TO %STG_MX;

  10736  6 000547   200145 450100                    STZ     I,,AUTO

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:279  
     2424    10737    4              STATS_REC (%RECOFS_GEN+I) =

  10737  6 000550   200145 720100                    LXL0    I,,AUTO
         6 000551   200204 236110                    LDQ     STATS_REC+2,X0,AUTO
         6 000552   000035 036010 xsym               ADLQ    VD_6E+29,X0
         6 000553   200204 756110                    STQ     STATS_REC+2,X0,AUTO

     2425    10738    4                STATS_REC (%RECOFS_GEN+I) + VD_6E.STATS# (I);
     2426    10739    4              END;

  10739  6 000554   200145 235100                    LDA     I,,AUTO
         6 000555   000001 035007                    ADLA    1,DL
         6 000556   200145 755100                    STA     I,,AUTO
         6 000557   000144 115007                    CMPA    100,DL
         6 000560   000550 602000 6                  TNC     s:10737

     2427    10740
     2428    10741    4           DO I = 0 TO %STG_MX;

  10741  6 000561   200145 450100                    STZ     I,,AUTO

     2429    10742    4              STATS_REC (%RECOFS_OBJECTS+I) =

  10742  6 000562   200145 720100                    LXL0    I,,AUTO
         6 000563   200350 236110                    LDQ     STATS_REC+102,X0,AUTO
         6 000564   000201 036010 xsym               ADLQ    VD_6E+129,X0
         6 000565   200350 756110                    STQ     STATS_REC+102,X0,AUTO

     2430    10743    4                STATS_REC (%RECOFS_OBJECTS+I) + VD_6E.STATS_OBJECTS# (I);
     2431    10744    4              END;

  10744  6 000566   200145 235100                    LDA     I,,AUTO
         6 000567   000001 035007                    ADLA    1,DL
         6 000570   200145 755100                    STA     I,,AUTO
         6 000571   000144 115007                    CMPA    100,DL
         6 000572   000562 602000 6                  TNC     s:10742

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:280  
     2432    10745
     2433    10746    4           DO I = 0 TO %MX_TOKEN;

  10746  6 000573   200145 450100                    STZ     I,,AUTO

     2434    10747    4              STATS_REC (%RECOFS_TOKENS+I) =

  10747  6 000574   200145 720100                    LXL0    I,,AUTO
         6 000575   201170 236110                    LDQ     STATS_REC+502,X0,AUTO
         6 000576   000345 036010 xsym               ADLQ    VD_6E+229,X0
         6 000577   201170 756110                    STQ     STATS_REC+502,X0,AUTO

     2435    10748    4                STATS_REC (%RECOFS_TOKENS+I) + VD_6E.STATS_TOKENS# (I);
     2436    10749    4              END;

  10749  6 000600   200145 235100                    LDA     I,,AUTO
         6 000601   000001 035007                    ADLA    1,DL
         6 000602   200145 755100                    STA     I,,AUTO
         6 000603   000144 115007                    CMPA    100,DL
         6 000604   000574 602000 6                  TNC     s:10747

     2437    10750
     2438    10751    4           DO I = 0 TO %MX_ERROR_CODE;

  10751  6 000605   200145 450100                    STZ     I,,AUTO

     2439    10752    4              STATS_REC (%RECOFS_ERRORS+I) =

  10752  6 000606   200145 720100                    LXL0    I,,AUTO
         6 000607   200514 236110                    LDQ     STATS_REC+202,X0,AUTO
         6 000610   000511 036010 xsym               ADLQ    VD_6E+329,X0
         6 000611   200514 756110                    STQ     STATS_REC+202,X0,AUTO

     2440    10753    4                STATS_REC (%RECOFS_ERRORS+I) + VD_6E.STATS_ERRORS# (I);
     2441    10754    4              END;

  10754  6 000612   200145 235100                    LDA     I,,AUTO
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:281  
         6 000613   000001 035007                    ADLA    1,DL
         6 000614   200145 755100                    STA     I,,AUTO
         6 000615   000454 115007                    CMPA    300,DL
         6 000616   000606 602000 6                  TNC     s:10752

     2442    10755
     2443    10756
     2444    10757
     2445    10758    3           CALL M$WRITE (STATS_WRITE)

  10758  6 000617   200164 630500                    EPPR0   STATS_WRITE,,AUTO
         6 000620   440001 713400                    CLIMB   alt,write
         6 000621   401400 401760                    pmme    nvectors=4
         6 000622   000623 702000 6                  TSX2    STATS_WRITE_FAILED

     2446    10759    3             ALTRET (STATS_WRITE_FAILED);
     2447    10760
     2448    10761    3   STATS_WRITE_FAILED:
     2449    10762
     2450    10763    3           RETURN;

  10763  6 000623   200142 221300       STATS_WRITE* LDX1  ! UTS_END+2,,AUTO
         6 000624   000001 702211                    TSX2  ! 1,X1

     2451    10764
     2452    10765    3   END SUM_INTO_STATS_REC;
     2453    10766
     2454    10767    2   END UPDATE_STATISTICS_FILE;
     2455    10768
     2456    10769        %BOX (TITLE=PROCESS_RESTORE, PAGE=YES);
             10777    2
             10781    2   /***************************************************************************
             10783    2    *                                                                         *
             10787    2            *                              PROCESS_RESTORE                           *
             10789    2            *                                                                        *
             10791    2          ***************************************************************************/

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:282  
     2457    10795
     2458    10796        /*I* NAME: PROCESS_RESTORE
     2459    10797            PARAMETERS:
     2460    10798                None.
     2461    10799            INPUT:
     2462    10800                VD_$RESTORE must have a non-0-length value.
     2463    10801            OUTPUT:
     2464    10802                None.
     2465    10803            DESCRIPTION:
     2466    10804                If $RESTORE contains a !XEQ command, and if we were M$LINKed-to, then
     2467    10805                    report an error and return.  Currently, if we M$YC to IBEX
     2468    10806                    with an XEQ command, IBEX will copy the XEQ-file to JF.  This has
     2469    10807                    two undesireable effects:
     2470    10808                        1.  The commands in the XEQ-file aren't executed until the
     2471    10809                            processor who M$LINKed to us finally exits back to IBEX.
     2472    10810                            Usually, however, 6Edit users expect commands in their
     2473    10811                            $RESTORE XEQ-file to be executed immediately, to restore
     2474    10812                            IMPs, reset terminal parameters, etc.
     2475    10813                        2.  Worse yet, the commands sitting in JF will cause the
     2476    10814                            processor who M$LINKed to us to get eof on the next read
     2477    10815                            from the command stream -- usually, causing him to exit,
     2478    10816                            or perhaps to read the commands from the XEQ-file as
     2479    10817                            commands to him!
     2480    10818                    Instead, we tell the user that, sorry, we can't do the XEQ command
     2481    10819                    right now.
     2482    10820        *N**N*                  Note that this test is specific
     2483    10821        *N**N*                  to IBEX as the command processor.
     2484    10822        *N**N*                  Ideal fix is to either:
     2485    10823        *N**N*                    o Fix IBEX to handle XEQ immediately,
     2486    10824        *N**N*                      so we don't have to do this test; or
     2487    10825        *N**N*                    o Have some way that we could tell if
     2488    10826        *N**N*                      IBEX is the current CP or not.
     2489    10827                Otherwise, pass the value of $RESTORE to the command processor to
     2490    10828                    execute.
     2491    10829        */
     2492    10830
     2493    10831    1   PROCESS_RESTORE: PROC;
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:283  

  10831  6 000625   200010 741300       PROCESS_RES* STX1  ! ORIG_ERR+5,,AUTO

     2494    10832
     2495    10833
     2496    10834        %FPT_YC (LINK=YES, STCLASS=STATIC);
     2497    10851
     2498    10852
     2499    10853    2   DCL INDX SBIN;
     2500    10854    2   DCL IBEX_VERB CHAR(%LENGTHC(CHR_IBEX_XEQ_VERB));
     2501    10855    2   DCL SINK SBIN;
     2502    10856
     2503    10857
     2504    10858
     2505    10859    2           IF B$JIT.PROG_ENTRY = %PE_LINK# THEN

  10859  6 000626   000000 470400 xsym               LDP0    B$JIT$
         6 000627   000170 236100                    LDQ     120,,PR0
         6 000630   777000 376003                    ANQ     -512,DU
         6 000631   020000 116003                    CMPQ    8192,DU
         6 000632   000727 601000 6                  TNZ     s:10884

     2506    10860    3   REJECT_XEQ_COMMAND: DO;

  10860  6 000633                       REJECT_XEQ_* null
     2507    10861    3              INDX = 0;

  10861  6 000633   200011 450100                    STZ     INDX,,AUTO

     2508    10862    3              CALL SEARCH (INDX, SINK, B$SR_NON_BLANK,

  10862  6 000634   000002 236000 xsym               LDQ     VD_$RESTORE+2
         6 000635   000022 732000                    QRS     18
         6 000636   200011 136100                    SBLQ    INDX,,AUTO
         6 000637   201336 756100                    STQ     STATS_REC+604,,AUTO
         6 000640   200011 236100                    LDQ     INDX,,AUTO
         6 000641   000000 471400 xsym               LDP1    B$SR_NON_BLANK$
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:284  
         6 000642   201336 720100                    LXL0    STATS_REC+604,,AUTO
         6 000643   000000 164446                    TCT
         6 000644   000002 400010 xsym               ADSC9   VD_$RESTORE+2,Q          cn=2,n=*X0
         6 000645   100000 000100                    ARG     0,,PR1
         6 000646   200011 000100                    ARG     INDX,,AUTO
         6 000647   200011 235100                    LDA     INDX,,AUTO
         6 000650   000033 771000                    ARL     27
         6 000651   200013 755100                    STA     SINK,,AUTO
         6 000652   200011 551140                    STBA    INDX,'40'O,AUTO
         6 000653   200011 056100                    ASQ     INDX,,AUTO

     2509    10863    3                SUBSTR(VD_$RESTORE.BYTES, 0, VD_$RESTORE.LENGTH#), INDX);
     2510    10864    3              IF VD_$RESTORE.LENGTH# - INDX >= LENGTHC(%CHR_IBEX_PROMPT)

  10864  6 000654   000002 236000 xsym               LDQ     VD_$RESTORE+2
         6 000655   000022 732000                    QRS     18
         6 000656   200011 136100                    SBLQ    INDX,,AUTO
         6 000657   000666 604400 6                  TMOZ    s:10868
         6 000660   200011 236100                    LDQ     INDX,,AUTO
         6 000661   040000 106406                    CMPC    fill='040'O
         6 000662   000002 400001 xsym               ADSC9   VD_$RESTORE+2,Q          cn=2,n=1
         6 000663   000016 000001 7                  ADSC9   14                       cn=0,n=1
         6 000664   000666 601000 6                  TNZ     s:10868

     2511    10865    3                AND SUBSTR(VD_$RESTORE.BYTES, INDX, LENGTHC(%CHR_IBEX_PROMPT)) =
     2512    10866    3                %CHR_IBEX_PROMPT THEN
     2513    10867    3                 INDX = INDX + LENGTHC(%CHR_IBEX_PROMPT);

  10867  6 000665   200011 054100                    AOS     INDX,,AUTO

     2514    10868    4              IF INDX < VD_$RESTORE.LENGTH# THEN DO;

  10868  6 000666   000002 236000 xsym               LDQ     VD_$RESTORE+2
         6 000667   000022 732000                    QRS     18
         6 000670   200011 116100                    CMPQ    INDX,,AUTO
         6 000671   000727 604400 6                  TMOZ    s:10884

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:285  
     2515    10869    4                 CALL SEARCH (INDX, SINK, B$SR_NON_BLANK,

  10869  6 000672   200011 136100                    SBLQ    INDX,,AUTO
         6 000673   201336 756100                    STQ     STATS_REC+604,,AUTO
         6 000674   200011 236100                    LDQ     INDX,,AUTO
         6 000675   201336 720100                    LXL0    STATS_REC+604,,AUTO
         6 000676   000000 164446                    TCT
         6 000677   000002 400010 xsym               ADSC9   VD_$RESTORE+2,Q          cn=2,n=*X0
         6 000700   100000 000100                    ARG     0,,PR1
         6 000701   200011 000100                    ARG     INDX,,AUTO
         6 000702   200011 235100                    LDA     INDX,,AUTO
         6 000703   000033 771000                    ARL     27
         6 000704   200013 755100                    STA     SINK,,AUTO
         6 000705   200011 551140                    STBA    INDX,'40'O,AUTO
         6 000706   200011 056100                    ASQ     INDX,,AUTO

     2516    10870    4                   SUBSTR(VD_$RESTORE.BYTES, 0, VD_$RESTORE.LENGTH#), INDX);
     2517    10871    4                 IF VD_$RESTORE.LENGTH# - INDX >=

  10871  6 000707   000002 236000 xsym               LDQ     VD_$RESTORE+2
         6 000710   000022 732000                    QRS     18
         6 000711   200011 136100                    SBLQ    INDX,,AUTO
         6 000712   000003 116007                    CMPQ    3,DL
         6 000713   000727 604000 6                  TMI     s:10884

     2518    10872    5                   LENGTHC(%CHR_IBEX_XEQ_VERB) THEN DO;

     2519    10873    5                    CALL XLATE (IBEX_VERB, B$XL_UPPER,

  10873  6 000714   200011 236100                    LDQ     INDX,,AUTO
         6 000715   000000 473400 xsym               LDP3    B$XL_UPPER$
         6 000716   040100 160406                    MVT     fill='040'O
         6 000717   000002 400003 xsym               ADSC9   VD_$RESTORE+2,Q          cn=2,n=3
         6 000720   200012 000003                    ADSC9   IBEX_VERB,,AUTO          cn=0,n=3
         6 000721   300000 000100                    ARG     0,,PR3

     2520    10874    5                      SUBSTR(VD_$RESTORE.BYTES, INDX,
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:286  
     2521    10875    5                      LENGTHC(%CHR_IBEX_XEQ_VERB)));
     2522    10876    6                    IF IBEX_VERB = %CHR_IBEX_XEQ_VERB THEN DO;

  10876  6 000722   200012 236100                    LDQ     IBEX_VERB,,AUTO
         6 000723   000173 676000 4                  ERQ     CONST_FPT_TIME+29
         6 000724   000017 376000 7                  ANQ     15
         6 000725   000727 601000 6                  TNZ     s:10884

     2523    10877                               /* This is an IBEX XEQ command - reject it */
     2524    10878    6                       GOTO CANT_DO_IBEX_XEQ_FAILURE;

  10878  6 000726   000743 710000 6                  TRA     CANT_DO_IBEX_XEQ_FAILURE

     2525    10879    6                       END;
     2526    10880    5                    END;
     2527    10881    4                 END;
     2528    10882    3              END REJECT_XEQ_COMMAND;
     2529    10883
     2530    10884    2           FPT_YC.CMD_ = VECTOR(SUBSTR(VD_$RESTORE.BYTES, 0, VD_$RESTORE.LENGTH#));

  10884  6 000727   000002 235000 xsym               LDA     VD_$RESTORE+2
         6 000730   777777 375003                    ANA     -1,DU
         6 000731   000002 731000                    ARS     2
         6 000732   000140 135007                    SBLA    96,DL
         6 000733   000020 236000 7                  LDQ     16
         6 000734   000222 757000 5                  STAQ    FPT_YC

     2531    10885    2           CALL M$YC (FPT_YC)

  10885  6 000735   000222 630400 5                  EPPR0   FPT_YC
         6 000736   400011 713400                    CLIMB   alt,+9
         6 000737   401000 401760                    pmme    nvectors=3
         6 000740   001001 702000 6                  TSX2    YC_FAILED

     2532    10886    2             ALTRET (YC_FAILED);
     2533    10887
     2534    10888    2           RETURN;
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:287  

  10888  6 000741   200010 221300                    LDX1  ! ORIG_ERR+5,,AUTO
         6 000742   000001 702211                    TSX2  ! 1,X1

     2535    10889
     2536    10890
     2537    10891
     2538    10892    2   CANT_DO_IBEX_XEQ_FAILURE:
     2539    10893    2           XUG_GETCMD.ERR_CODE = %CLEAR;

  10893  6 000743   000010 450000 xsym  CANT_DO_IBE* STZ     XUG_GETCMD+8

     2540    10894    2           XUG_GETCMD.ERR_CODE.FCG# = %CONCAT(FCG, FCG_MID_GLOBAL);

  10894  6 000744   260407 220003                    LDX0    90375,DU
         6 000745   000010 740000 xsym               STX0    XUG_GETCMD+8

     2541    10895    2           XUG_GETCMD.ERR_CODE.CODE# = %E$CANT_DO_IBEX_XEQ;

  10895  6 000746   000010 236000 xsym               LDQ     XUG_GETCMD+8
         6 000747   000021 376000 7                  ANQ     17
         6 000750   000150 276007                    ORQ     104,DL
         6 000751   000010 756000 xsym               STQ     XUG_GETCMD+8

     2542    10896    2           XUG_GETCMD.FLGLEV# = %FLV_SERIOUS;

  10896  6 000752   000003 236003                    LDQ     3,DU
         6 000753   000006 552020 xsym               STBQ    XUG_GETCMD+6,'20'O

     2543    10897    2           XUG_GETCMD.F1_ = VECTOR(PINCRC(ADDR(VD_$RESTORE.LENGTH#),

  10897  6 000754   000002 222000 xsym               LDX2    VD_$RESTORE+2
         6 000755   000777 362003                    ANX2    511,DU
         6 000756   000001 623012                    EAX3    1,X2
         6 000757   000000 635013                    EAA     0,X3
         6 000760   000002 771000                    ARL     2
         6 000761   000140 135007                    SBLA    96,DL
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:288  
         6 000762   000022 236000 7                  LDQ     18
         6 000763   000017 755000 xsym               STA     XUG_GETCMD+15
         6 000764   000020 756000 xsym               STQ     XUG_GETCMD+16

     2544    10898    2             LENGTHC(VD_$RESTORE.LENGTH#) - LENGTHC(VD$TEXTC.LENGTH#)) ->
     2545    10899    2             VD$TEXTC);
     2546    10900    2           XUG_GETCMD.F2_ = VECTOR(NIL);

  10900  6 000765   000024 237000 7                  LDAQ    20
         6 000766   000021 755000 xsym               STA     XUG_GETCMD+17
         6 000767   000022 756000 xsym               STQ     XUG_GETCMD+18

     2547    10901    2           XUG_GETCMD.F3_ = VECTOR(NIL);

  10901  6 000770   000024 237000 7                  LDAQ    20
         6 000771   000023 755000 xsym               STA     XUG_GETCMD+19
         6 000772   000024 756000 xsym               STQ     XUG_GETCMD+20

     2548    10902    2           CALL XUG$ERRMSG (XUG_GETCMD);

  10902  6 000773   000000 630400 7                  EPPR0   0
         6 000774   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000775   000000 701000 xent               TSX1    XUG$ERRMSG
         6 000776   000000 011000                    NOP     0

     2549    10903    2           RETURN;

  10903  6 000777   200010 221300                    LDX1  ! ORIG_ERR+5,,AUTO
         6 001000   000001 702211                    TSX2  ! 1,X1

     2550    10904
     2551    10905
     2552    10906    2   YC_FAILED:
     2553    10907    2           XUG_GETCMD.ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

  10907  6 001001   000000 470400 xsym  YC_FAILED    LDP0    B$TCB$
         6 001002   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:289  
         6 001003   100102 236100                    LDQ     66,,PR1
         6 001004   000010 756000 xsym               STQ     XUG_GETCMD+8

     2554    10908    2           XUG_GETCMD.FLGLEV# = %FLV_SERIOUS;

  10908  6 001005   000003 236003                    LDQ     3,DU
         6 001006   000006 552020 xsym               STBQ    XUG_GETCMD+6,'20'O

     2555    10909    2           XUG_GETCMD.ERRDCB# = 0;

  10909  6 001007   000011 450000 xsym               STZ     XUG_GETCMD+9

     2556    10910    2           XUG_GETCMD.F1_ = VECTOR(NIL);

  10910  6 001010   000024 237000 7                  LDAQ    20
         6 001011   000017 755000 xsym               STA     XUG_GETCMD+15
         6 001012   000020 756000 xsym               STQ     XUG_GETCMD+16

     2557    10911    2           XUG_GETCMD.F2_ = VECTOR(NIL);

  10911  6 001013   000024 237000 7                  LDAQ    20
         6 001014   000021 755000 xsym               STA     XUG_GETCMD+17
         6 001015   000022 756000 xsym               STQ     XUG_GETCMD+18

     2558    10912    2           XUG_GETCMD.F3_ = VECTOR(NIL);

  10912  6 001016   000024 237000 7                  LDAQ    20
         6 001017   000023 755000 xsym               STA     XUG_GETCMD+19
         6 001020   000024 756000 xsym               STQ     XUG_GETCMD+20

     2559    10913    2           CALL XUG$ERRMSG (XUG_GETCMD);

  10913  6 001021   000000 630400 7                  EPPR0   0
         6 001022   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 001023   000000 701000 xent               TSX1    XUG$ERRMSG
         6 001024   000000 011000                    NOP     0

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:290  
     2560    10914    2           RETURN;

  10914  6 001025   200010 221300                    LDX1  ! ORIG_ERR+5,,AUTO
         6 001026   000001 702211                    TSX2  ! 1,X1

     2561    10915
     2562    10916    2   END PROCESS_RESTORE;
     2563    10917
     2564    10918    1   END VDG$MTERMINATE;

  10918  6 001027   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:291  
--  Include file information  --

   XUD_UTS_M.:TOOLE04  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   B$TABLES_C.:LIBRARY  cannot be made into a system file and is referenced.
   XUG_ENTRY.:LIBRARY  cannot be made into a system file and is referenced.
   XU_MACRO_C.:LIBRARY  is referenced.
   VD_NODES0_E.:VDA5TOU  is referenced.
   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B_ERRORS_C.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDG$MTERMINATE.
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:292  

 **** Variables and constants ****

  ****  Section 004 RoData VDG$MTERMINATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   136-0-0/d STRC(432)   r     1 CONST_FPT_TIME            12-0-0/c CHAR(5)     r     1 DELTA_CMD
    14-0-0/c STRC(90)    r     1 DELTA_FID                  0-0-0/d STRC(360)   r     1 FPT_ALIB
    26-0-0/d STRC(432)   r     1 FPT_MONINFO               20-0-0/d STRC(216)   r     1 REVOKE_EXIT_CONTROL
    46-0-0/w STRC(126)   r     1 STATS_ACCESS              42-0-0/c STRC(72)    r     1 STATS_ACCT
   100-0-0/d STRC(1080)  r     1 STATS_CLOSE               64-0-0/d STRC(288)   r     1 STATS_DEQ
    52-0-0/d STRC(360)   r     1 STATS_ENQ                 44-0-0/c STRC(72)    r     1 STATS_PASS
    74-0-0/c STRC(90)    r     1 STATS_RNAME

  ****  Section 005  Data  VDG$MTERMINATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2088)  r     1 CONST_STATS_OPEN         170-0-0/d STRC(504)   r     1 CONST_STATS_READ
   206-0-0/d STRC(432)   r     1 CONST_STATS_WRITE        222-0-0/d STRC(288)   r     1 FPT_YC
    72-0-0/d STRC(2232)  r     1 VLR_SITEINFO

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   144-0-0/w PTR         r     1 @BUCKET                  143-0-0/w PTR         r     1 @KEY
    *0-0-0/w UBIN        r     1 BUCKET                   122-0-0/w SBIN        r     1 BUCKET_NUM
   124-0-0/d STRC(432)   r     1 FPT_TIME                 114-0-0/d STRC(72)    r     1 FPT_XEQTIME
   145-0-0/w UBIN        r     1 I                         12-0-0/c CHAR(3)     r     1 IBEX_VERB
    11-0-0/w SBIN        r     1 INDX                      *0-0-0/c CHAR(7)     r     1 KEY
    11-0-0/w PTR         r     1 L0_NODE$                  12-0-0/w PTR         r     1 L1_NODE$
     3-0-0/w STRC(180)   r     1 ORIG_ERR                  13-0-0/w SBIN        r     1 SINK
   200-0-0/c STRC(72)    r     1 STATS_KEY                104-0-0/c STRC(288)   r     1 STATS_NAME
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:293  
    12-0-0/d STRC(2088)  r     1 STATS_OPEN               146-0-0/d STRC(504)   r     1 STATS_READ
   202-0-0/w SBIN        r     1 STATS_REC(0:602)
   164-0-0/d STRC(432)   r     1 STATS_WRITE              140-0-0/w UBIN        r     1 UTS_END
    13-0-0/w PTR         r     1 WINDOW_SPEC$             116-0-0/d STRC(144)   r     1 XEQTIME

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$SR_NON_BLANK$
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 B$XL_UPPER$
     0-0-0/c STRC(63)    r     1 B_VERSION                  0-0-0/w ASTR(90)    r     1 VD_$RESTORE
     0-0-0/w STRC(22644) r     1 VD_6E                      0-0-0/d STRC(216)   r     1 VD_EXIT
     0-0-0/w UBIN        r     1 VD_UTS_START               0-0-0/d STRC(1512)  r     1 XUG_GETCMD

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/d STRC(4608)  r     1 B$SR_NON_BLANK             0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d STRC(4608)  r     1 B$XL_UPPER                 0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(180)   r     1 FATAL$ERR                  0-0-0/w STRC(468)   r     1 L0$NODE
     0-0-0/w STRC(468)   r     1 L1$NODE                    0-0-0N  NULL        r     1 M$E9
     0-0-0/w STRC(1944)  r     1 VD$PORT                    0-0-0/w STRC(864)   r     1 VD$STREAM
     0-0-0/w ASTR(9)     r     1 VD$TEXTC                   0-0-0/w STRC(900)   r     1 WINDOW$SPEC


   Procedure VDG$MTERMINATE requires 536 words for executable code.
   Procedure VDG$MTERMINATE requires 740 words of local(AUTO) storage.

    No errors detected in file VDG$MAIN.:VDA5TSI    .
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:294  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:295  
          MINI XREF LISTING

B$ALT.CODE
      8835**DCL      8835--REDEF    8836--REDEF    8836--REDEF
B$ALT.ERR
      8836**DCL     10907>>ASSIGN
B$ALT.ERR.ERR#
      8837**DCL      8837--REDEF
B$ALT.EVID
      8836**DCL      8836--REDEF    8836--REDEF
B$JIT.CPFLAGS1.SLEAZE
      7073**DCL      7073--REDEF
B$JIT.ERR.MID
      6980**DCL      6980--REDEF
B$JIT.JRESPEAK
      7141**DCL      7142--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      7250**DCL      7250--REDEF    7251--REDEF
B$JIT.PNR
      7154**DCL      7154--REDEF
B$JIT.PROG_ENTRY
      7129**DCL     10859>>IF
B$JIT.TSLINE
      7248**DCL      7249--REDEF
B$JIT$
      7888**DCL      6974--IMP-PTR 10859>>IF
B$SR_NON_BLANK
      8482**DCL     10862>>CALLBLT 10869>>CALLBLT
B$SR_NON_BLANK$
      8481**DCL      8482--IMP-PTR 10862>>CALLBLT 10869>>CALLBLT
B$TCB.ALT$
      8831**DCL     10907>>ASSIGN
B$TCB$
      7887**DCL     10907>>ASSIGN
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:296  
B$XL_UPPER
      8486**DCL     10873>>CALLBLT
B$XL_UPPER$
      8485**DCL      8486--IMP-PTR 10873>>CALLBLT
BUCKET IN PROCEDURE SUM_INTO_STATS_REC
     10419**DCL     10417--PROC    10721--IF      10722>>CALLBLT
BUCKET_NUM IN PROCEDURE UPDATE_STATISTICS_FILE
     10310**DCL     10362<<ASSIGN  10363>>CALL    10365<<ASSIGN  10367>>CALL    10374<>CALL    10375<<ASSIGN
     10375>>ASSIGN  10376>>CALL
B_VERSION.BYTES
      8477**DCL     10344>>CALLBLT
B_VERSION.LENGTH#
      8477**DCL     10344>>CALLBLT 10346>>ASSIGN
CANT_DO_IBEX_XEQ_FAILURE IN PROCEDURE PROCESS_RESTORE
     10893**LABEL   10878--GOTO
CLOSE_ALL_STREAMS
      8994**PROC     8903--CALL
CLOSE_STATS IN PROCEDURE UPDATE_STATISTICS_FILE
     10385**LABEL   10353--CALLALT
CONST_FPT_TIME IN PROCEDURE UPDATE_STATISTICS_FILE
     10009**DCL     10369>>ASSIGN
CONST_FPT_TIME.V IN PROCEDURE UPDATE_STATISTICS_FILE
     10013**DCL     10009--DCLINIT
CONST_STATS_OPEN IN PROCEDURE UPDATE_STATISTICS_FILE
      9672**DCL     10341>>ASSIGN
CONST_STATS_OPEN.ACSVEH_ IN PROCEDURE UPDATE_STATISTICS_FILE
      9674**DCL      9675--REDEF
CONST_STATS_OPEN.ALTKEYS_ IN PROCEDURE UPDATE_STATISTICS_FILE
      9680**DCL      9681--REDEF    9681--REDEF
CONST_STATS_OPEN.HDR_ IN PROCEDURE UPDATE_STATISTICS_FILE
      9679**DCL      9680--REDEF
CONST_STATS_OPEN.TAB_ IN PROCEDURE UPDATE_STATISTICS_FILE
      9678**DCL      9679--REDEF
CONST_STATS_OPEN.UHL_ IN PROCEDURE UPDATE_STATISTICS_FILE
      9672**DCL      9673--REDEF    9673--REDEF
CONST_STATS_OPEN.V IN PROCEDURE UPDATE_STATISTICS_FILE
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:297  
      9681**DCL      9672--DCLINIT
CONST_STATS_OPEN.V.FSN# IN PROCEDURE UPDATE_STATISTICS_FILE
      9712**DCL      9712--REDEF    9712--REDEF
CONST_STATS_OPEN.WSN_ IN PROCEDURE UPDATE_STATISTICS_FILE
      9678**DCL      9678--REDEF
CONST_STATS_READ IN PROCEDURE SUM_INTO_STATS_REC
     10439**DCL     10710>>ASSIGN
CONST_STATS_READ.STATION_ IN PROCEDURE SUM_INTO_STATS_REC
     10442**DCL     10443--REDEF
CONST_STATS_READ.V IN PROCEDURE SUM_INTO_STATS_REC
     10443**DCL     10439--DCLINIT
CONST_STATS_READ.V.DVBYTE.REREAD# IN PROCEDURE SUM_INTO_STATS_REC
     10454**DCL     10454--REDEF
CONST_STATS_READ.V.INDX# IN PROCEDURE SUM_INTO_STATS_REC
     10452**DCL     10452--REDEF
CONST_STATS_WRITE IN PROCEDURE SUM_INTO_STATS_REC
     10478**DCL     10714>>ASSIGN
CONST_STATS_WRITE.STATION_ IN PROCEDURE SUM_INTO_STATS_REC
     10480**DCL     10480--REDEF
CONST_STATS_WRITE.V IN PROCEDURE SUM_INTO_STATS_REC
     10481**DCL     10478--DCLINIT
CONST_STATS_WRITE.V.DVBYTE.VFC# IN PROCEDURE SUM_INTO_STATS_REC
     10487**DCL     10487--REDEF
DELTA_CMD
      8540**DCL      8534--DCLINIT
DELTA_FID
      8675**DCL      8534--DCLINIT
F$DCB.ACTPOS
      8874**DCL      8874--REDEF
F$DCB.ARS#
      8848**DCL      8848--REDEF
F$DCB.ATTR
      8867**DCL      8868--REDEF
F$DCB.BORROW
      8882**DCL      8882--REDEF    8882--REDEF    8882--REDEF
F$DCB.DCBNAME.L
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:298  
      8896**DCL      8896--IMP-SIZ
F$DCB.EOMCHAR#
      8852**DCL      8852--REDEF
F$DCB.FLDID
      8877**DCL      8877--REDEF
F$DCB.FORM$
      8871**DCL      8871--REDEF
F$DCB.FSECT
      8887**DCL      8887--REDEF
F$DCB.FSN#
      8864**DCL      8864--REDEF    8864--REDEF    8865--REDEF
F$DCB.HEADER$
      8870**DCL      8870--REDEF
F$DCB.IXTNSIZE#
      8868**DCL      8868--REDEF
F$DCB.LASTSTA$
      8857**DCL      8857--REDEF
F$DCB.LVL
      8883**DCL      8883--REDEF
F$DCB.NAME#.C
      8858**DCL      8858--REDEF
F$DCB.NOEOF
      8880**DCL      8880--REDEF
F$DCB.NRECS#
      8869**DCL      8869--REDEF
F$DCB.NRECX
      8888**DCL      8888--REDEF
F$DCB.OHDR
      8880**DCL      8880--REDEF
F$DCB.ORG#
      8863**DCL      8863--REDEF
F$DCB.PRECNO
      8886**DCL      8886--REDEF
F$DCB.RCSZ
      8892**DCL      8892--REDEF
F$DCB.RES#
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:299  
      8859**DCL      8859--REDEF
F$DCB.SETX
      8871**DCL      8871--REDEF
F$DCB.TAB$
      8871**DCL      8871--REDEF
F$DCB.TDA
      8885**DCL      8886--REDEF
F$DCB.WSN#
      8859**DCL      8859--REDEF
FATAL$ERR
      8762**DCL      8901>>ASSIGN   8908>>ASSIGN
FPT_ALIB
      8534**DCL      8926<>CALL
FPT_ALIB.V
      8535**DCL      8535--DCLINIT
FPT_MONINFO IN PROCEDURE UPDATE_STATISTICS_FILE
      9600**DCL     10334<>CALL
FPT_TIME IN PROCEDURE UPDATE_STATISTICS_FILE
     10322**DCL     10369<<ASSIGN  10372<>CALL
FPT_TIME.TSTAMP_ IN PROCEDURE UPDATE_STATISTICS_FILE
     10325**DCL     10371<<ASSIGN
FPT_TIME.V IN PROCEDURE UPDATE_STATISTICS_FILE
     10326**DCL     10370--ASSIGN
FPT_TIME.V_ IN PROCEDURE UPDATE_STATISTICS_FILE
     10322**DCL     10370<<ASSIGN
FPT_XEQTIME IN PROCEDURE UPDATE_STATISTICS_FILE
     10303**DCL     10358<>CALL
FPT_XEQTIME.BUF_ IN PROCEDURE UPDATE_STATISTICS_FILE
     10303**DCL     10357<<ASSIGN
FPT_YC IN PROCEDURE PROCESS_RESTORE
     10847**DCL     10885<>CALL
FPT_YC.CMD_ IN PROCEDURE PROCESS_RESTORE
     10847**DCL     10884<<ASSIGN
FPT_YC.V IN PROCEDURE PROCESS_RESTORE
     10848**DCL     10847--DCLINIT
I IN PROCEDURE SUM_INTO_STATS_REC
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:300  
     10494**DCL     10736<<DOINDEX 10737>>ASSIGN  10737>>ASSIGN  10737>>ASSIGN  10741<<DOINDEX 10742>>ASSIGN
     10742>>ASSIGN  10742>>ASSIGN  10746<<DOINDEX 10747>>ASSIGN  10747>>ASSIGN  10747>>ASSIGN  10751<<DOINDEX
     10752>>ASSIGN  10752>>ASSIGN  10752>>ASSIGN
IBEX_VERB IN PROCEDURE PROCESS_RESTORE
     10854**DCL     10873<<CALLBLT 10876>>IF
INDX IN PROCEDURE PROCESS_RESTORE
     10853**DCL     10861<<ASSIGN  10862<<CALLBLT 10862>>CALLBLT 10864>>IF      10864>>IF      10867<<ASSIGN
     10867>>ASSIGN  10868>>IF      10869<<CALLBLT 10869>>CALLBLT 10871>>IF      10873>>CALLBLT
KEY IN PROCEDURE SUM_INTO_STATS_REC
     10418**DCL     10417--PROC    10720>>ASSIGN
L0$NODE.HEAD$ IN PROCEDURE CLOSE_ALL_STREAMS
      9092**DCL      9473>>ASSIGN
L0_NODE$ IN PROCEDURE CLOSE_ALL_STREAMS
      8996**DCL      9009--IMP-PTR  9469<<ASSIGN   9471>>IF       9473>>ASSIGN
L1$NODE.DESC.SPEC.V$ IN PROCEDURE CLOSE_ALL_STREAMS
      9181**DCL      9475>>ASSIGN
L1$NODE.FLINK$ IN PROCEDURE CLOSE_ALL_STREAMS
      9128**DCL      9484>>ASSIGN
L1_NODE$ IN PROCEDURE CLOSE_ALL_STREAMS
      8997**DCL      9102--IMP-PTR  9473<<ASSIGN   9474>>DOWHILE  9475>>ASSIGN   9484<<ASSIGN   9484>>ASSIGN
M$ALIB
        92**DCL-ENT  8926--CALL
M$CLOSE
        79**DCL-ENT 10385--CALL
M$DEQ
       146**DCL-ENT 10381--CALL
M$ENQ
       145**DCL-ENT 10353--CALL
M$ERR
        91**DCL-ENT  8943--CALL
M$EXIT
        91**DCL-ENT  8941--CALL
M$MONINFO
       147**DCL-ENT 10334--CALL
M$OPEN
        79**DCL-ENT 10348--CALL
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:301  
M$READ
        80**DCL-ENT 10725--CALL
M$TIME
       146**DCL-ENT 10372--CALL
M$WRITE
        80**DCL-ENT 10758--CALL
M$XCON
       134**DCL-ENT  8939--CALL
M$XEQTIME
       147**DCL-ENT 10358--CALL
M$YC
        93**DCL-ENT 10885--CALL
ORIG_ERR
      8707**DCL      8901<<ASSIGN   8908<<ASSIGN
ORIG_ERR.ERR
      8744**DCL      8921>>IF       9480>>IF       9495>>IF
ORIG_ERR.ERR.CODE#
      8746**DCL      8925>>IF
PROCESS_RESTORE
     10831**PROC     8931--CALL
REVOKE_EXIT_CONTROL
      8693**DCL      8939<>CALL
REVOKE_EXIT_CONTROL.V
      8694**DCL      8693--DCLINIT
SINK IN PROCEDURE PROCESS_RESTORE
     10855**DCL     10862<<CALLBLT 10869<<CALLBLT
STATS_ACCESS IN PROCEDURE UPDATE_STATISTICS_FILE
      9754**DCL      9674--DCLINIT
STATS_ACCESS.Q IN PROCEDURE UPDATE_STATISTICS_FILE
      9755**DCL      9754--DCLINIT
STATS_ACCT IN PROCEDURE UPDATE_STATISTICS_FILE
      9727**DCL      9677--DCLINIT
STATS_CLOSE IN PROCEDURE UPDATE_STATISTICS_FILE
      9976**DCL     10385<>CALL
STATS_CLOSE.SN_ IN PROCEDURE UPDATE_STATISTICS_FILE
      9976**DCL      9976--REDEF
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:302  
STATS_CLOSE.UTL_ IN PROCEDURE UPDATE_STATISTICS_FILE
      9977**DCL      9977--REDEF
STATS_CLOSE.V IN PROCEDURE UPDATE_STATISTICS_FILE
      9981**DCL      9976--DCLINIT
STATS_CLOSE.V.EXPIRE# IN PROCEDURE UPDATE_STATISTICS_FILE
      9991**DCL      9991--REDEF
STATS_CLOSE.V.TYPE# IN PROCEDURE UPDATE_STATISTICS_FILE
      9989**DCL      9989--REDEF
STATS_CLOSE.V.XTNSIZE# IN PROCEDURE UPDATE_STATISTICS_FILE
      9986**DCL      9986--REDEF    9988--REDEF
STATS_DEQ IN PROCEDURE UPDATE_STATISTICS_FILE
      9806**DCL     10381<>CALL
STATS_DEQ.V IN PROCEDURE UPDATE_STATISTICS_FILE
      9807**DCL      9806--DCLINIT
STATS_ENQ IN PROCEDURE UPDATE_STATISTICS_FILE
      9788**DCL     10353<>CALL
STATS_ENQ.V IN PROCEDURE UPDATE_STATISTICS_FILE
      9789**DCL      9788--DCLINIT
STATS_KEY IN PROCEDURE SUM_INTO_STATS_REC
     10699**DCL     10713--ASSIGN  10717--ASSIGN
STATS_KEY.BYTES IN PROCEDURE SUM_INTO_STATS_REC
     10703**DCL     10720<<ASSIGN  10722<<CALLBLT
STATS_KEY.LENGTH# IN PROCEDURE SUM_INTO_STATS_REC
     10703**DCL     10719<<ASSIGN
STATS_NAME IN PROCEDURE UPDATE_STATISTICS_FILE
     10285**DCL     10342--ASSIGN
STATS_NAME.BYTES IN PROCEDURE UPDATE_STATISTICS_FILE
     10289**DCL     10344<<CALLBLT
STATS_NAME.LENGTH# IN PROCEDURE UPDATE_STATISTICS_FILE
     10289**DCL     10346<<ASSIGN
STATS_OPEN IN PROCEDURE UPDATE_STATISTICS_FILE
     10107**DCL     10341<<ASSIGN  10348<>CALL
STATS_OPEN.ACSVEH_ IN PROCEDURE UPDATE_STATISTICS_FILE
     10109**DCL     10110--REDEF
STATS_OPEN.ALTKEYS_ IN PROCEDURE UPDATE_STATISTICS_FILE
     10115**DCL     10116--REDEF   10116--REDEF
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:303  
STATS_OPEN.HDR_ IN PROCEDURE UPDATE_STATISTICS_FILE
     10114**DCL     10115--REDEF
STATS_OPEN.NAME_ IN PROCEDURE UPDATE_STATISTICS_FILE
     10108**DCL     10342<<ASSIGN
STATS_OPEN.TAB_ IN PROCEDURE UPDATE_STATISTICS_FILE
     10113**DCL     10114--REDEF
STATS_OPEN.UHL_ IN PROCEDURE UPDATE_STATISTICS_FILE
     10107**DCL     10108--REDEF   10108--REDEF
STATS_OPEN.V IN PROCEDURE UPDATE_STATISTICS_FILE
     10116**DCL     10343--ASSIGN
STATS_OPEN.V.FSN# IN PROCEDURE UPDATE_STATISTICS_FILE
     10147**DCL     10147--REDEF   10147--REDEF
STATS_OPEN.V_ IN PROCEDURE UPDATE_STATISTICS_FILE
     10107**DCL     10343<<ASSIGN
STATS_OPEN.WSN_ IN PROCEDURE UPDATE_STATISTICS_FILE
     10113**DCL     10113--REDEF
STATS_PASS IN PROCEDURE UPDATE_STATISTICS_FILE
      9740**DCL      9674--DCLINIT
STATS_READ IN PROCEDURE SUM_INTO_STATS_REC
     10512**DCL     10710<<ASSIGN  10725<>CALL
STATS_READ.BUF_ IN PROCEDURE SUM_INTO_STATS_REC
     10514**DCL     10712<<ASSIGN
STATS_READ.KEY_ IN PROCEDURE SUM_INTO_STATS_REC
     10512**DCL     10713<<ASSIGN
STATS_READ.STATION_ IN PROCEDURE SUM_INTO_STATS_REC
     10515**DCL     10516--REDEF
STATS_READ.V IN PROCEDURE SUM_INTO_STATS_REC
     10516**DCL     10711--ASSIGN
STATS_READ.V.DVBYTE.REREAD# IN PROCEDURE SUM_INTO_STATS_REC
     10527**DCL     10527--REDEF
STATS_READ.V.INDX# IN PROCEDURE SUM_INTO_STATS_REC
     10525**DCL     10525--REDEF
STATS_READ.V_ IN PROCEDURE SUM_INTO_STATS_REC
     10512**DCL     10711<<ASSIGN
STATS_READ_FAILED IN PROCEDURE SUM_INTO_STATS_REC
     10730**LABEL   10725--CALLALT
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:304  
STATS_REC IN PROCEDURE SUM_INTO_STATS_REC
     10706**DCL     10712--ASSIGN  10716--ASSIGN  10730<<ASSIGN  10733<<ASSIGN  10733>>ASSIGN  10734<<ASSIGN
     10734>>ASSIGN  10737<<ASSIGN  10737>>ASSIGN  10742<<ASSIGN  10742>>ASSIGN  10747<<ASSIGN  10747>>ASSIGN
     10752<<ASSIGN  10752>>ASSIGN
STATS_RNAME IN PROCEDURE UPDATE_STATISTICS_FILE
      9946**DCL      9788--DCLINIT  9806--DCLINIT
STATS_WRITE IN PROCEDURE SUM_INTO_STATS_REC
     10551**DCL     10714<<ASSIGN  10758<>CALL
STATS_WRITE.BUF_ IN PROCEDURE SUM_INTO_STATS_REC
     10551**DCL     10716<<ASSIGN
STATS_WRITE.KEY_ IN PROCEDURE SUM_INTO_STATS_REC
     10551**DCL     10717<<ASSIGN
STATS_WRITE.STATION_ IN PROCEDURE SUM_INTO_STATS_REC
     10553**DCL     10553--REDEF
STATS_WRITE.V IN PROCEDURE SUM_INTO_STATS_REC
     10554**DCL     10715--ASSIGN
STATS_WRITE.V.DVBYTE.VFC# IN PROCEDURE SUM_INTO_STATS_REC
     10560**DCL     10560--REDEF
STATS_WRITE.V_ IN PROCEDURE SUM_INTO_STATS_REC
     10551**DCL     10715<<ASSIGN
STATS_WRITE_FAILED IN PROCEDURE SUM_INTO_STATS_REC
     10763**LABEL   10758--CALLALT
SUM_INTO_STATS_REC IN PROCEDURE UPDATE_STATISTICS_FILE
     10417**PROC    10360--CALL    10363--CALL    10367--CALL    10376--CALL
UPDATE_STATISTICS_FILE
      9539**PROC     8912--CALL
UPDATE_STATS
      8912**LABEL    8904--GOTO
UTS_END IN PROCEDURE UPDATE_STATISTICS_FILE
     10330**DCL     10371--ASSIGN  10374<>CALL
VD$PORT.EXIST# IN PROCEDURE CLOSE_ALL_STREAMS
      9393**DCL      9468>>IF
VD$PORT.LEVEL.INTERNAL$ IN PROCEDURE CLOSE_ALL_STREAMS
      9454**DCL      9469>>ASSIGN
VD$STREAM IN PROCEDURE CLOSE_ALL_STREAMS
      9261**DCL      9478<>CALL     9493<>CALL
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:305  
VD$STREAM.PORT$ IN PROCEDURE CLOSE_ALL_STREAMS
      9287**DCL      9467>>IF       9468>>IF       9469>>ASSIGN
VD$TEXTC
      8815**DCL     10897--ASSIGN
VD$TEXTC.LENGTH#
      8823**DCL      8825--IMP-SIZ 10897--ASSIGN  10897--ASSIGN  10897>>ASSIGN
VDA$FCLOSE
      7879**DCL-ENT  9478--CALL     9493--CALL
VDG$EREPORT_ERROR
      7880**DCL-ENT  9481--CALL     9496--CALL
VDP$WTERMINATE
      7881**DCL-ENT  8914--CALL
VD_$RESTORE.BYTES
      8318**DCL      8930>>IF      10862>>CALLBLT 10864>>IF      10869>>CALLBLT 10873>>CALLBLT 10884--ASSIGN
VD_$RESTORE.LENGTH#
      8316**DCL      8318--IMP-SIZ  8930>>IF       8930>>IF      10862>>CALLBLT 10862>>CALLBLT 10864>>IF
     10864>>IF      10868>>IF      10869>>CALLBLT 10869>>CALLBLT 10871>>IF      10873>>CALLBLT 10884>>ASSIGN
     10884>>ASSIGN  10897--ASSIGN  10897--ASSIGN  10897--ASSIGN  10897--ASSIGN
VD_6E.ERR_HEAD$
      7922**DCL      8762--IMP-PTR  8901>>ASSIGN   8908>>ASSIGN
VD_6E.INTERRUPT.STATE#
      7922**DCL      8934>>IF       8935<<ASSIGN
VD_6E.SOURCE.OPERAND.STREAM$
      7919**DCL      9492>>IF       9493>>CALL
VD_6E.STATS#
      7923**DCL     10737>>ASSIGN
VD_6E.STATS_ERRORS#
      7924**DCL     10362>>ASSIGN  10752>>ASSIGN
VD_6E.STATS_OBJECTS#
      7923**DCL     10742>>ASSIGN
VD_6E.STATS_TOKENS#
      7924**DCL     10365>>ASSIGN  10747>>ASSIGN
VD_6E.WINDOWS$
      7904**DCL      9466>>IF       9467>>IF       9468>>IF       9469>>ASSIGN
VD_EXIT
      8335**DCL      8941<>CALL     8943<>CALL
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:306  
VD_EXIT.V.STEPCC#
      8336**DCL      8336--REDEF    8940>>IF
VD_UTS_START
      7889**DCL     10374<>CALL
VLR_SITEINFO IN PROCEDURE UPDATE_STATISTICS_FILE
     10031**DCL      9600--DCLINIT
VLR_SITEINFO.SITE_NAME#.C IN PROCEDURE UPDATE_STATISTICS_FILE
     10032**DCL     10335>>IF      10335>>IF
VLR_SITEINFO.SITE_NAME#.L IN PROCEDURE UPDATE_STATISTICS_FILE
     10032**DCL     10335>>IF      10335>>IF
WINDOW$SPEC.OPERAND.STREAM$ IN PROCEDURE CLOSE_ALL_STREAMS
      9236**DCL      9477>>IF       9478>>CALL
WINDOW_SPEC$ IN PROCEDURE CLOSE_ALL_STREAMS
      8998**DCL      9195--IMP-PTR  9475<<ASSIGN   9476>>IF       9477>>IF       9478>>CALL
XEQTIME IN PROCEDURE UPDATE_STATISTICS_FILE
     10305**DCL     10356<<ASSIGN  10357--ASSIGN
XEQTIME.MICROS_DIV_512K IN PROCEDURE UPDATE_STATISTICS_FILE
     10307**DCL     10734>>ASSIGN
XUD$UTS_DIFF_SEC
      8495**DCL-ENT 10374--CALL
XUG$ERRMSG
      6840**DCL-ENT  8923--CALL    10902--CALL    10913--CALL
XUG_GETCMD
      7939**DCL      8923<>CALL    10902<>CALL    10913<>CALL
XUG_GETCMD.ERRDCB#
      8098**DCL     10909<<ASSIGN
XUG_GETCMD.ERR_CODE
      8087**DCL     10893<<ASSIGN  10907<<ASSIGN
XUG_GETCMD.ERR_CODE.CODE#
      8090**DCL     10895<<ASSIGN
XUG_GETCMD.ERR_CODE.FCG#
      8088**DCL     10894<<ASSIGN
XUG_GETCMD.F1_
      8136**DCL     10897<<ASSIGN  10910<<ASSIGN
XUG_GETCMD.F2_
      8140**DCL     10900<<ASSIGN  10911<<ASSIGN
PL6.E3A0      #004=VDG$MTERMINATE File=VDG$MAIN.:VDA5TSI                         FRI 07/04/97 11:20 Page:307  
XUG_GETCMD.F3_
      8144**DCL     10901<<ASSIGN  10912<<ASSIGN
XUG_GETCMD.FLGLEV#
      8044**DCL     10896<<ASSIGN  10908<<ASSIGN
XUG_GETCMD.OUT$
      7944**DCL      7950--REDEF
YC_FAILED IN PROCEDURE PROCESS_RESTORE
     10907**LABEL   10885--CALLALT
