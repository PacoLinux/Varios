

09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6
    7          %B$TCB;
    8          %B$ALT;
    9          DCL B$TCB$             PTR SYMREF;
   10          DCL DCB$               PTR;
   11          %F$DCB                 (DCBN=M$XX,BASED="BASED(DCB$)");
   12      %EJECT;

09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        2    
   13          %SUB YES#  = '1'B;
   14          %SUB NO#   = '0'B;
   15
   16          %EQU SAVE  = 2;           /* Close Disposition */
   17
   18
   19      /*V*
   20          FAB.FILE_STATUS    File's availability status
   21      */
   22
   23          %EQU FILE_NEVER_OPEN      = 0;
   24          %EQU FILE_LOCKED          = 1;
   25          %EQU FILE_OPEN            = 2;
   26          %EQU FILE_NOT_PRESENT     = 3;
   27          %EQU NO_OPT_FILE_PRESENT  = 4;
   28          %EQU FILE_CLOSED          = 5;
   29
   30      /*V*
   31                      File Position Indicator Values
   32      */
   33          %EQU VSO = 0;          /* Value set by Open        */
   34          %EQU VSS = 0;          /* Value set by Start       */
   35          %EQU VSR = 1;          /* Value set by Read        */
   36          %EQU NNR = 2;          /* No next record           */
   37          %EQU NVR = 3;          /* No valid next record     */
   38          %EQU NOF = 4;          /* No optional file present */
   39          %EQU AEE = 5;          /* At end already exists    */
   40          %EQU LOW_VALUE = 0;    /* FPV for indexed and keyed*/
   41      %EJECT;

09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        3    
   42      /*V*
   43          FAB.LAST_IO        Last IO Types
   44      */
   45          %EQU READ_RANDOM = 0;
   46          %EQU READ_NEXT   = 7;
   47          %EQU WRITE       = 1;
   48          %EQU REWRITE     = 2;
   49          %EQU OPEN        = 3;
   50          %EQU CLOSE       = 4;
   51          %EQU START       = 5;
   52          %EQU DELETE      = 6;
   53
   54      %EJECT;

09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        4    
   55      /*V*
   56                         Print Codes
   57      */
   58
   59
   60          %EQU PRIMARY_KEY = 1;
   61
   62          %EQU PRINTER       = 0;
   63          %EQU PRINTER_F     = 1;
   64
   65      %EJECT;

09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        5    
   66      /*V*
   67          IO_STATUS (FAB.IO_STATUS$) COBOL I/O file status codes
   68      */
   69
   70          %EQU SUCCESSFUL                = '00';
   71          %EQU DUPLICATE_KEY_ALLOWED     = '02';
   72          %EQU BAD_LENGTH                = '04';
   73          %EQU OPT_FILE_NOT_PRES         = '05';
   74          %EQU NON_REEL_MEDIUM           = '07';
   75          %EQU END_OF_FILE               = '10';
   76          %EQU KEY_OVERFLOW              = '14';
   77          %EQU SEQUENCE_ERROR            = '21';
   78          %EQU DUPLICATE_KEY             = '22';
   79          %EQU NO_RANDOM_RECORD          = '23';
   80          %EQU KEY_TO_BIG_WRITE          = '24';
   81          %EQU EXTERNAL_BOUNDARY_REACHED = '24';
   82          %EQU PERMANENT_ERROR           = '30';
   83          %EQU EXT_BOUND_SEQUEN          = '34';
   84          %EQU NO_FILE                   = '35';
   85          %EQU MULTIPLE_FILE_REEL        = '36';
   86          %EQU FILE_OPEN_CONFLICT        = '37';
   87          %EQU LOCKED                    = '38';
   88          %EQU ATTRIBUTE_CONFLICT        = '39';
   89          %EQU ALREADY_OPEN              = '41';
   90          %EQU NOT_OPEN                  = '42';
   91          %EQU PRIOR_NOT_READ            = '43';
   92          %EQU BOUNDARY_VIOLATION        = '44';
   93          %EQU NO_NEXT_RECORD            = '46';
   94          %EQU NOT_OPEN_INPUT            = '47';
   95          %EQU NOT_OPEN_OUTPUT           = '48';
   96          %EQU NOT_OPEN_IO               = '49';
   97          %EQU IMPLEMENTOR_DEFINED       = '90';
   98      %EJECT;

09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        6    
   99       /* User Label Processing EQUs  & MACROs */
  100
  101      %EQU BEGINNING_FILE_LABEL  = 0;
  102      %EQU ENDING_FILE_LABEL     = 1;
  103      %EQU BEGINNING_TAPE_LABEL  = 2;
  104      %EQU ENDING_TAPE_LABEL     = 3;
  105
  106      %EQU USER_LABEL_TABLE_SIZE = 4;
  107      %EQU USER_LABEL_PROC_TABLE_SIZE = 24;
  108
  109      %EQU BEFORE_BEGINNING_FILE_INPUT  = 0;
  110      %EQU BEFORE_BEGINNING_FILE_OUTPUT = 1;
  111      %EQU BEFORE_BEGINNING_FILE_EXTEND = 2;
  112      %EQU BEFORE_ENDING_FILE_INPUT     = 3;
  113      %EQU BEFORE_ENDING_FILE_OUTPUT    = 4;
  114      %EQU BEFORE_ENDING_FILE_EXTEND    = 5;
  115      %EQU AFTER_BEGINNING_FILE_INPUT   = 6;
  116      %EQU AFTER_BEGINNING_FILE_OUTPUT  = 7;
  117      %EQU AFTER_BEGINNING_FILE_EXTEND  = 8;
  118      %EQU AFTER_ENDING_FILE_INPUT      = 9;
  119      %EQU AFTER_ENDING_FILE_OUTPUT     = 10;
  120      %EQU AFTER_ENDING_FILE_EXTEND     = 11;
  121      %EQU BEFORE_BEGINNING_TAPE_INPUT  = 12;
  122      %EQU BEFORE_BEGINNING_TAPE_OUTPUT = 13;
  123      %EQU BEFORE_BEGINNING_TAPE_EXTEND = 14;
  124      %EQU BEFORE_ENDING_TAPE_INPUT     = 15;
  125      %EQU BEFORE_ENDING_TAPE_OUTPUT    = 16;
  126      %EQU BEFORE_ENDING_TAPE_EXTEND    = 17;
  127      %EQU AFTER_BEGINNING_TAPE_INPUT   = 18;
  128      %EQU AFTER_BEGINNING_TAPE_OUTPUT  = 19;
  129      %EQU AFTER_BEGINNING_TAPE_EXTEND  = 20;
  130      %EQU AFTER_ENDING_TAPE_INPUT      = 21;
  131      %EQU AFTER_ENDING_TAPE_OUTPUT     = 22;
  132      %EQU AFTER_ENDING_TAPE_EXTEND     = 23;
  133
  134      DCL USE$$                  PTR;
  135      DCL 1 USE_PROC             BASED(USE$$),
09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        7    
  136            2 P$   (0:23)        EPTR;
  137      DCL USE_ENTRY$             EPTR;
  138
  139       %MACRO BEFORE_BEGINNING_LABEL_PROC;
  140         DO;
  141           IF FAB.LABEL_EXIT$ ~= ADDR(NIL) THEN
  142             DO;
  143               USE$$ = FAB.LABEL_EXIT$;
  144               DO CASE(OPEN_TYPE);
  145                 CASE(%OPEN_OUTPUT, %OPEN_OUTPUT_NO_REWIND);
  146                   USE_ENTRY$ = USE_PROC.P$(%BEFORE_BEGINNING_FILE_OUTPUT);
  147                   IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  148                     CALL USE_ENTRY$;
  149                 CASE(%OPEN_INPUT, %OPEN_INPUT_NO_REWIND);
  150                   USE_ENTRY$ = USE_PROC.P$(%BEFORE_BEGINNING_FILE_INPUT);
  151                   IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  152                     CALL USE_ENTRY$;
  153                 CASE(%OPEN_EXTEND);
  154                   USE_ENTRY$ = USE_PROC.P$(%BEFORE_BEGINNING_FILE_EXTEND);
  155                   IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  156                     CALL USE_ENTRY$;
  157               END; /* DO CASE */
  158             END;
  159         END;
  160       %MEND;
  161       %EJECT;

09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        8    
  162       %MACRO AFTER_BEGINNING_LABEL_PROC;
  163         DO;
  164           IF FAB.LABEL_EXIT$ ~= ADDR(NIL) THEN
  165             DO;
  166               USE$$ = FAB.LABEL_EXIT$;
  167               DO CASE(OPEN_TYPE);
  168                 CASE(%OPEN_OUTPUT, %OPEN_OUTPUT_NO_REWIND);
  169                   USE_ENTRY$ = USE_PROC.P$(%AFTER_BEGINNING_FILE_OUTPUT);
  170                   IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  171                     CALL USE_ENTRY$;
  172                 CASE(%OPEN_INPUT, %OPEN_INPUT_NO_REWIND);
  173                   USE_ENTRY$ = USE_PROC.P$(%AFTER_BEGINNING_FILE_INPUT);
  174                   IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  175                     CALL USE_ENTRY$;
  176                 CASE(%OPEN_EXTEND);
  177                   USE_ENTRY$ = USE_PROC.P$(%AFTER_BEGINNING_FILE_EXTEND);
  178                   IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  179                     CALL USE_ENTRY$;
  180               END; /* DO CASE */
  181             END;
  182         END;
  183       %MEND;
  184       %EJECT;

09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        9    
  185       %MACRO BEFORE_ENDING_LABEL_PROC;
  186         DO;
  187          IF FAB.LABEL_EXIT$ ~= ADDR(NIL) THEN
  188            DO;
  189             USE$$ = FAB.LABEL_EXIT$;
  190             DCB$ = DCBADDR(FAB.DCB_NUM);
  191             DO CASE(M$XX.FUN#);
  192               CASE(%CREATE);
  193                 IF M$XX.EXIST# = %OLDFILE THEN
  194                   DO;
  195                     USE_ENTRY$ = USE_PROC.P$(%BEFORE_ENDING_FILE_EXTEND);
  196                     IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  197                       CALL USE_ENTRY$;
  198                   END;
  199                 ELSE
  200                   DO;
  201                     USE_ENTRY$ = USE_PROC.P$(%BEFORE_ENDING_FILE_OUTPUT);
  202                     IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  203                       CALL USE_ENTRY$;
  204                   END;
  205               CASE(%IN);
  206                 USE_ENTRY$ = USE_PROC.P$(%BEFORE_ENDING_FILE_INPUT);
  207                 IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  208                   CALL USE_ENTRY$;
  209             END; /* DO CASE */
  210           END;   /* IF THEN DO.. */
  211         END;
  212       %MEND;
  213       %EJECT;

09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        10   
  214       %MACRO AFTER_ENDING_LABEL_PROC;
  215         DO;
  216          IF FAB.LABEL_EXIT$ ~= ADDR(NIL) THEN
  217            DO;
  218             USE$$ = FAB.LABEL_EXIT$;
  219             DCB$ = DCBADDR(FAB.DCB_NUM);
  220             DO CASE(M$XX.FUN#);
  221               CASE(%CREATE);
  222                 IF M$XX.EXIST# = %OLDFILE THEN
  223                   DO;
  224                     USE_ENTRY$ = USE_PROC.P$(%AFTER_ENDING_FILE_EXTEND);
  225                     IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  226                       CALL USE_ENTRY$;
  227                   END;
  228                 ELSE
  229                   DO;
  230                     USE_ENTRY$ = USE_PROC.P$(%AFTER_ENDING_FILE_OUTPUT);
  231                     IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  232                       CALL USE_ENTRY$;
  233                   END;
  234               CASE(%IN);
  235                 USE_ENTRY$ = USE_PROC.P$(%AFTER_ENDING_FILE_INPUT);
  236                 IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  237                   CALL USE_ENTRY$;
  238             END; /* DO CASE */
  239           END;   /* IF THEN DO.. */
  240         END;
  241       %MEND;
  242       %EJECT;

09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        11   
  243       %MACRO BEFORE_TAPE_SWAP_LABEL_PROC;
  244         DO;
  245          IF FAB.LABEL_EXIT$ ~= ADDR(NIL) THEN
  246            DO;
  247             USE$$ = FAB.LABEL_EXIT$;
  248             DCB$ = DCBADDR(FAB.DCB_NUM);
  249             DO CASE(M$XX.FUN#);
  250               CASE(%CREATE);
  251                 IF M$XX.EXIST# = %OLDFILE THEN
  252                   DO;
  253                     USE_ENTRY$ = USE_PROC.P$(%BEFORE_ENDING_TAPE_EXTEND);
  254                     IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  255                       CALL USE_ENTRY$;
  256                     USE_ENTRY$ =USE_PROC.P$(%BEFORE_BEGINNING_TAPE_EXTEND);
  257                     IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  258                       CALL USE_ENTRY$;
  259                   END;
  260                 ELSE
  261                   DO;
  262                     USE_ENTRY$ = USE_PROC.P$(%BEFORE_ENDING_TAPE_OUTPUT);
  263                     IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  264                       CALL USE_ENTRY$;
  265                     USE_ENTRY$ =USE_PROC.P$(%BEFORE_BEGINNING_TAPE_OUTPUT);
  266                     IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  267                       CALL USE_ENTRY$;
  268                   END;
  269               CASE(%IN);
  270                 USE_ENTRY$ = USE_PROC.P$(%BEFORE_ENDING_TAPE_INPUT);
  271                 IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  272                   CALL USE_ENTRY$;
  273                 USE_ENTRY$ = USE_PROC.P$(%BEFORE_BEGINNING_TAPE_INPUT);
  274                 IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  275                   CALL USE_ENTRY$;
  276             END; /* DO CASE */
  277           END;   /* IF THEN DO.. */
  278         END;
  279       %MEND;
09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        12   
  280       %EJECT;

09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        13   
  281       %MACRO AFTER_TAPE_SWAP_LABEL_PROC;
  282         DO;
  283          IF FAB.LABEL_EXIT$ ~= ADDR(NIL) THEN
  284            DO;
  285             USE$$ = FAB.LABEL_EXIT$;
  286             DCB$ = DCBADDR(FAB.DCB_NUM);
  287             DO CASE(M$XX.FUN#);
  288               CASE(%CREATE);
  289                 IF M$XX.EXIST# = %OLDFILE THEN
  290                   DO;
  291                     USE_ENTRY$ = USE_PROC.P$(%AFTER_ENDING_TAPE_EXTEND);
  292                     IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  293                       CALL USE_ENTRY$;
  294                     USE_ENTRY$ =USE_PROC.P$(%AFTER_BEGINNING_TAPE_EXTEND);
  295                     IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  296                       CALL USE_ENTRY$;
  297                   END;
  298                 ELSE
  299                   DO;
  300                     USE_ENTRY$ = USE_PROC.P$(%AFTER_ENDING_TAPE_OUTPUT);
  301                     IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  302                       CALL USE_ENTRY$;
  303                     USE_ENTRY$ =USE_PROC.P$(%AFTER_BEGINNING_TAPE_OUTPUT);
  304                     IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  305                       CALL USE_ENTRY$;
  306                   END;
  307               CASE(%IN);
  308                 USE_ENTRY$ = USE_PROC.P$(%AFTER_ENDING_TAPE_INPUT);
  309                 IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  310                   CALL USE_ENTRY$;
  311                 USE_ENTRY$ = USE_PROC.P$(%AFTER_BEGINNING_TAPE_INPUT);
  312                 IF USE_ENTRY$ ~= ENTADDR(NIL) THEN
  313                   CALL USE_ENTRY$;
  314             END; /* DO CASE */
  315           END;   /* IF THEN DO.. */
  316         END;
  317       %MEND;
09:07 AUG 09 '97 X9A_LIB_IO.:X8A6SI                                        14   
  318       %EJECT;


