VERSION E05

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:1    
        1        1        /*M*  FMJ$REL - Routines to process RELATIVE files */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7                                                /*                                    */
        8        8        /*X* DDA */
        9        9                                                /*                                    */
       10       10                                                /*                                    */
       11       11        /*P*   NAME:   FMJ$REL
       12       12        *      PURPOSE:  Provide all PMME services for RELATIVE files */
       13       13                                                /*                                    */
       14       14                                                /*                                    */
       15       15                                                /*                                    */
       16       16        /*F*   NAME:   FMJ$REL
       17       17        *      PURPOSE:  Provide all PMME services for RELATIVE files
       18       18        *      DESCRIPTION:  M$READ, M$WRITE, M$DELREC, M$PRECORD,
       19       19        *        M$PFIL, M$REW AND M$EXTEND are processed here.                      */
       20       20                                                /*                                    */
       21       21                                                /*                                    */
       22       22                                                /*                                    */
       23       23        /*D*   NAME:   FMJ$REL
       24       24        *      CALL:   CALL FMJ$REL(FPTCODE) ALTRET(LOC);
       25       25        *      INPUT:  FPTCODE - FPT code for the PMME
       26       26        *      DESCRIPTION:
       27       27        *                                                                            */
       28       28                                                /*                                    */
       29       29        FMJ$REL: PROC(FPTCODE) ALTRET;
       30       30        /* PARAMETERS */
       31       31    1   DCL FPTCODE SBIN;
       32       32        /* LOCAL AUTOMATIC STORAGE */
       33       33    1   DCL JDCB$ PTR;
       34       34    1   DCL CFU$ PTR;
       35       35    1   DCL EOP SBIN;
       36       36    1   DCL G$ PTR;
       37       37    1   DCL BUF$ PTR;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:2    
       38       38    1   DCL BYTES SBIN;
       39       39    1   DCL RECS REDEF BYTES SBIN;
       40       40    1   DCL TOTBYTES SBIN;
       41       41    1   DCL GRANS REDEF TOTBYTES SBIN;
       42       42    1   DCL DIR SBIN;
       43       43    1   DCL FAK SBIN;
       44       44    1   DCL N REDEF FAK SBIN;
       45       45    1   DCL WX SBIN;
       46       46    1   DCL DA SBIN;
       47       47    1   DCL ENDKEY SBIN;
       48       48    1   DCL I SBIN;
       49       49        /* EXTERNAL DATA */
       50       50    1   DCL B$JIT$ PTR SYMREF;
       51       51    1   DCL FM$BUF$(0:0) PTR SYMREF;
       52       52    1   DCL B$PS0$ PTR SYMREF READONLY;
       53       53    1   DCL B$PS1$ PTR SYMREF READONLY;
       54       54    1   DCL B$PS2$ PTR SYMREF READONLY;
       55       55    1   DCL B$PS3$ PTR SYMREF READONLY;
       56       56    1   DCL B$ROSEG$ PTR SYMREF READONLY;
       57       57        /* INCLUDE FILES */
       58       58        %INCLUDE B$JIT;
       59      661        %INCLUDE FM$MACROS;
       60     1036        %MACRO F$DCB(BASED=BASED);
       61     1037        %INCLUDE F$DCB;
       62     1086        %MEND;
       63     1087        %INCLUDE F_ERRORS_C;
       64     1327        %INCLUDE F_FPTCODE_C;
       65     1363        %INCLUDE FM_DATA_R;
       66     1377        %INCLUDE F$CP6V_C;
       67     1603        %INCLUDE B$SS;
       68     1782        %INCLUDE UD_ERRORS_C;
       69     1824        %INCLUDE B$USER;
       70     2040        %INCLUDE B_STRINGS_C;
       71     2169        %INCLUDE B_MAGIC_C;
       72     2287        /* FPTS */
       73     2288        %FPT$READ_V (BASED="BASED(B$PS0$)");
       74     2295        %FPT$WRITE_V (BASED="BASED(B$PS0$)");
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:3    
       75     2301        %FPT$DELREC_V (BASED="BASED(B$PS0$)");
       76     2305        %FPT$PRECORD_V (BASED="BASED(B$PS0$)");
       77     2310        %FPT$PFIL_V (BASED="BASED(B$PS0$)");
       78     2313        %FPT$EXTEND_V (BASED="BASED(B$PS0$)");
       79     2316        /* BASED STRUCTURES */
       80     2317        %F$DCB (BASED="BASED(JDCB$)");
       81     2367        %FM$CFU (BASED="BASED(CFU$)");
       82     2373        %FM$GRAN (BASED="BASED(BUF$)");
       83     2377        %FM$REL (BASED="BASED(G$)");
       84     2380    1   DCL 1 ZAP BASED ALIGNED,
       85     2381    1         2 *(0:3) UBIN,
       86     2382    1         2 X (0:1019) UBIN;
       87     2383    1   DCL CHAR4 CHAR(4) BASED;
       88     2384        %B_MPT(FPTN=B_MPT, STCLASS=SYMREF);
       89     2477        %B$USERREFS;
       90     2481        /* CONSTANT STORAGE */
       91     2482    1   DCL ZERO CONSTANT UBIN INIT(0);
       92     2483        %SUB FCG#='0615'O;
       93     2484        %SUB MID#='12'O;
       94     2485        %ERRCODE (NAME=ERRLD,COD#=%E$LD);
       95     2489        %ERRCODE (NAME=ERRNEWREC,COD#=%E$NEWREC);
       96     2493        %ERRCODE (NAME=ERROLDREC,COD#=%E$OLDREC);
       97     2497        %ERRCODE (NAME=ERREOF,COD#=%E$EOF);
       98     2501        %ERRCODE (NAME=ERRBOF,COD#=%E$BOF);
       99     2505        %ERRCODE (NAME=ERRNOKEY,COD#=%E$NOKEY);
      100     2509        %ERRCODE (NAME=ERRWRWOKEY,COD#=%E$WRWOKEY);
      101     2513        %ERRCODE (NAME=ERRFILLIM,COD#=%E$FILLIM);
      102     2517        %ERRCODE (NAME=ERRREWRITE,COD#=%E$REWRITE);
      103     2521        %ERRCODE (NAME=ERRPMMEINT, COD#=%E$PMMEINT);
      104     2525        /* EXTERNAL ROUTINES */
      105     2526    1   DCL FMD$RECTRAN ENTRY(8) ALTRET;
      106     2527    1   DCL FMD$REDBUF ENTRY(6) ALTRET;
      107     2528    1   DCL FMD$GETBUF ENTRY(3);
      108     2529    1   DCL HFF$NILERASE ENTRY(1) ALTRET;
      109     2530    1   DCL HFF$DSIZ ENTRY(2) ALTRET;
      110     2531    1   DCL FAG$GEXT ENTRY ALTRET;
      111     2532                                                /*                                    */
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:4    
      112     2533    1           JDCB$=B$JIT.DCB$;               /* POINTER TO CURRENT DCB             */
      113     2534    1           CFU$=F$DCB.CFU$;                /* POINTER TO CURRENT CFU             */
      114     2535                                                /*                                    */
      115     2536    1           EOP=F$DCB.EOP;                  /* SAVE CURRENT EOP VALUE             */
      116     2537    1           F$DCB.EOP=0;                    /* CLEAR EOP IN CASE OF ERROR         */
      117     2538    2           DO CASE(FPTCODE);
      118     2539        /************************/
      119     2540        /********  M$READ  ******/
      120     2541        /************************/
      121     2542    2            CASE(FPTREAD);
      122     2543    2              IF FPT$READ_V.KEYS THEN
      123     2544    2              CALL MOVKEY ALTRET(ERR);     /* MOVE KEY TO DCB                    */
      124     2545    2              ELSE
      125     2546    2   MOVFWD:    CALL NXTREC ALTRET(ERR);     /* ADVANCE TO NEXT RECORD             */
      126     2547    2              IF NOT(FM$REL.A) THEN
      127     2548    2                 IF NOT(FPT$READ_V.KEYS) THEN
      128     2549    2                    GOTO MOVFWD;           /* NO KEY - FIND NEXT EXISTING REC    */
      129     2550    2                 ELSE
      130     2551    2                    IF FPT$READ_V.KEYR THEN
      131     2552    2                       GOTO NOTFND;        /* FIND NEXT KEY THAT EXISTS          */
      132     2553    2                    ELSE
      133     2554    2                       GOTO NOKEY;         /* REPORT NO SUCH KEY                 */
      134     2555    2              IF FPT$READ_V.KEYR THEN
      135     2556    2                 B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;
      136     2557    2              TOTBYTES=FM$REL.GACTB;       /* SIZE OF RECORD                     */
      137     2558    2              DIR=0;                       /* FLAG FOR RECTRAN                   */
      138     2559    2              GOTO RWCOM;
      139     2560        /***********************/
      140     2561        /*******  M$WRITE  *****/
      141     2562        /***********************/
      142     2563    2            CASE(FPTWRITE);
      143     2564    2              CALL HFF$NILERASE(1) ALTRET(WRNOKEY);
      144     2565    2              CALL MOVKEY ALTRET(ERR);     /* MOVE USER KEY TO DCB               */
      145     2566    2              GOTO WRCOM;
      146     2567    2   WRNOKEY:   CALL CHKEOP ALTRET(ERR);     /* CHECK THAT LAST OP READ OR PREC    */
      147     2568    2   WRCOM:     DIR=1;                       /* FLAG FOR RECTRAN                   */
      148     2569    2              IF NOT(FPT$WRITE_V.ONEWKEY)
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:5    
      149     2570    2              THEN                         /* USER DID NOT SAY ONEWKEY=YES       */
      150     2571    2                 IF FPT$WRITE_V.NEWKEY=FM$REL.A
      151     2572    2                 THEN                      /* ERROR                              */
      152     2573    2                    IF FM$REL.A
      153     2574    2                    THEN              /* KEY EXISTS BUF USER SAID IT COULDN'T    */
      154     2575    3                    DO;
      155     2576    3                       B$JIT.ERR=ERROLDREC;
      156     2577    3                       ALTRETURN;
      157     2578    3                       END;
      158     2579        /*E*   ERROR:  FMJ-E$OLDREC-2
      159     2580        */
      160     2581    2                    ELSE              /* KEY DOESN'T EXIST AND USER SAID IT MUST */
      161     2582    3                    DO;
      162     2583    3                       B$JIT.ERR=ERRNEWREC;
      163     2584    3                       ALTRETURN;
      164     2585    3                       END;
      165     2586        /*E*   ERROR:  FMJ-E$NEWREC-2
      166     2587        */
      167     2588    3              IF FM$REL.A AND NOT F$DCB.FFLG.UPD THEN DO;
      168     2589    3                 B$JIT.ERR=ERRREWRITE;
      169     2590    3                 ALTRETURN;
      170     2591    3                 END;
      171     2592        /*E*    ERROR:  FMJ-E$REWRITE-2
      172     2593        */
      173     2594    2              FM$CFU.FMOD='1'B;            /* FILE MODIFIED                      */
      174     2595    2              FM$REL.A='1'B;               /* MARK RECORD ACTIVE                 */
      175     2596    2              TOTBYTES=F$DCB.UBYTES;       /* SIZE OF RECORD                     */
      176     2597    2              IF TOTBYTES>F$DCB.RECL
      177     2598    2              THEN                         /* TRYING TO WRITE MORE THAN ALLOWED  */
      178     2599    2                 TOTBYTES=F$DCB.RECL;
      179     2600    2              FM$REL.GACTB=TOTBYTES;       /* SET SIZE IN RECORD HEADER          */
      180     2601    2              F$DCB.BFR.BUFUP(0)='1'B;     /* MARK BUFFER UPDATED                */
      181     2602    2   RWCOM:     FAK=1;                       /* FIRST PART OF RECORD               */
      182     2603    2              G$=PINCRW(G$,1);
      183     2604    2              WX=WX+1;                     /* POINT PAST CONTROL WORD TO DATA    */
      184     2605    2   LOOP:      BYTES=4096-(WX*4);           /* # BYTES TO END OF GRANULE          */
      185     2606    2              F$DCB.GDISP=0;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:6    
      186     2607    2              IF BYTES>TOTBYTES
      187     2608    2              THEN                         /* SET BYTES TO SIZE OF THIS SEGMENT  */
      188     2609    2                 BYTES=TOTBYTES;
      189     2610    2              TOTBYTES=TOTBYTES-BYTES;     /* REMAINING SIZE                     */
      190     2611    2              IF BYTES>0
      191     2612    2              THEN                         /* BYTES=0 IF CTL WD AT END OF GRAN   */
      192     2613    2              CALL FMD$RECTRAN(G$,BYTES,0,DIR,FAK,FPT$READ_V.SEED);
      193     2614    2              IF F$DCB.UBYTES=0
      194     2615    2              THEN                         /* ALL USER BYTES HAVE BEEN MOVED     */
      195     2616    2                 IF FPTCODE=FPTREAD
      196     2617    2                 THEN                      /* READ                               */
      197     2618    2                    IF BYTES~=0
      198     2619    2                    THEN GOTO LOSTDATA;    /* READ PARTIAL RECORD                */
      199     2620    2                    ELSE GOTO DONE;        /* READ JUST THE RIGHT AMOUNT         */
      200     2621    2                 ELSE                      /* WRITE                              */
      201     2622    2                    GOTO DONE;
      202     2623    2              IF TOTBYTES=0
      203     2624    2              THEN                    /* MORE USER BYTES BUF RECORD EXHAUSTED    */
      204     2625    2                 IF FPTCODE=FPTREAD
      205     2626    2                 THEN                      /* READ                               */
      206     2627    2                    GOTO DONE;
      207     2628    2                 ELSE                      /* WRITE                              */
      208     2629    2                    GOTO LOSTDATA;         /* TRIED TO WRITE MORE THAN LEGAL     */
      209     2630                                 /* PREPARE TO GO FORWARD TO NEXT SEGMENT OF RECORD   */
      210     2631    2              DA=DA+1;
      211     2632    2              WX=2;              /* DISPLACEMENT TO START OF DATA IN NEXT GRAN   */
      212     2633    2              CALL REDBUF ALTRET(ERR);
      213     2634    2              G$=PINCRW(BUF$,WX);          /* POINTER TO DATA                    */
      214     2635    2              FAK=0;                       /* NOT FIRST PART OF RECORD           */
      215     2636    2              GOTO LOOP;
      216     2637                                                /*                                    */
      217     2638    2            CASE(FPTPREC);
      218     2639        /***********************/
      219     2640        /*****  M$PRECORD  *****/
      220     2641        /***********************/
      221     2642    3              IF FPT$PRECORD_V.BOF THEN DO;
      222     2643    3                 F$DCB.CRECNO=1;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:7    
      223     2644    3                 F$DCB.RPOS='1'B;
      224     2645    3                 END;
      225     2646    3              ELSE IF FPT$PRECORD_V.EOF THEN DO;
      226     2647    3                 IF FM$CFU.NRECS < 1 THEN
      227     2648    3                    F$DCB.CRECNO=1;
      228     2649    3                 ELSE F$DCB.CRECNO=FM$CFU.NRECS+1;
      229     2650    3                 F$DCB.RPOS='1'B;
      230     2651    3                 END;
      231     2652    3              ELSE IF FPT$PRECORD_V.KEYS THEN DO;
      232     2653    3                 CALL MOVKEY ALTRET(ERR);  /* MOVE AND VALIDATE KEY              */
      233     2654    3                 IF NOT FM$REL.A THEN
      234     2655    3                    IF FPT$PRECORD_V.KEYR THEN
      235     2656    3                       GOTO NOTFND;        /* FIND NEXT REC THAT EXISTS          */
      236     2657    3                    ELSE
      237     2658    3                       GOTO NOKEY;
      238     2659    3                 F$DCB.RPOS='1'B;
      239     2660    3                 END;
      240     2661    2              N=FPT$PRECORD_V.N;
      241     2662    2              F$DCB.ARS=0;
      242     2663    3              IF N>=0 THEN DO;
      243     2664    3                 CALL NXTRECND ALTRET(PRECEOF);
      244     2665    4                 DO WHILE(N>0);
      245     2666    4                    F$DCB.ARS=F$DCB.ARS+1;
      246     2667    4                    N=N-1;
      247     2668    4                    CALL NXTRECND ALTRET(PRECEOF);
      248     2669    4                    IF FPT$PRECORD_V.BRK AND
      249     2670    4                       S$CU$->B$U.ASYNCH&(~%U_RESET) AND
      250     2671    4                       B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
      251     2672    4                       GOTO ERR_INT;
      252     2673    4                    END;
      253     2674    3                 END;
      254     2675    2              ELSE
      255     2676    3              DO WHILE(N<0);
      256     2677    3                 CALL CURRECND ALTRET(ERR);
      257     2678    3                 N=N+1;
      258     2679    3                 F$DCB.ARS=F$DCB.ARS+1;
      259     2680    3                 F$DCB.RPOS='1'B;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:8    
      260     2681    3                 IF FPT$PRECORD_V.BRK AND
      261     2682    3                    S$CU$->B$U.ASYNCH&(~%U_RESET) AND
      262     2683    3                    B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
      263     2684    3                    GOTO ERR_INT;
      264     2685    3                 END;
      265     2686    3              DO WHILE('0'B);
      266     2687    3   ERR_INT:      B$JIT.ERR=ERRPMMEINT;
      267     2688    3              END;
      268     2689    2              F$DCB.RPOS='1'B;
      269     2690    2              IF FPT$PRECORD_V.KEYR THEN
      270     2691    2                 B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;
      271     2692    2              IF B$JIT.ERR.CODE = %E$PMMEINT THEN
      272     2693    2                 GOTO ERR;
      273     2694    2              ELSE
      274     2695    2                 GOTO DONE;
      275     2696        /**/
      276     2697        /**/
      277     2698    2   PRECEOF:   IF B$JIT.ERR.CODE~=%E$EOF THEN GOTO ERR;
      278     2699    2              IF N~=0 THEN GOTO ERR;
      279     2700    2              B$JIT.ERR='0'B;
      280     2701    2              IF FPT$PRECORD_V.KEYR THEN
      281     2702    2                 B$PS1$->CHAR4=ADDR(ZERO)->CHAR4; /* Zap key                     */
      282     2703    2              GOTO DONE;
      283     2704        /**/
      284     2705        /**/
      285     2706    2   NOTFND:    CALL NXTRECND ALTRET(NOTFND5);
      286     2707    2              F$DCB.RPOS='1'B;
      287     2708    2              B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;
      288     2709    2              GOTO NOKEY;
      289     2710    2   NOTFND5:   IF B$JIT.ERR.CODE~=%E$EOF THEN GOTO ERR;
      290     2711    2              B$PS1$->CHAR4=ADDR(ZERO)->CHAR4; /* Zap key                        */
      291     2712    2              GOTO NOKEY;
      292     2713        /**/
      293     2714        /**/
      294     2715    2            CASE(FPTDELREC);
      295     2716        /************************/
      296     2717        /*******  M$DELREC  *****/
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:9    
      297     2718        /************************/
      298     2719    2              F$DCB.ARS=0;
      299     2720    3              IF FPT$DELREC_V.DELALL THEN DO;
      300     2721    3                 F$DCB.CRECNO=1;
      301     2722    3                 F$DCB.RPOS='1'B;
      302     2723    4                 DO WHILE('1'B);
      303     2724    4                    CALL NXTRECND ALTRET(CHKEOF);
      304     2725    4                    CALL DELREC;
      305     2726    4                    END;
      306     2727    3                 END;
      307     2728    2              CALL HFF$NILERASE(1) ALTRET(NOKEY1); /* GO IF NO KEY               */
      308     2729    2              CALL MOVKEY ALTRET(ERR);     /* GET THE KEY                        */
      309     2730    2              IF NOT(FM$REL.A)
      310     2731    2              THEN                         /* RECORD IS DELETED                  */
      311     2732    2              CALL HFF$NILERASE(2) ALTRET(NOKEY); /* GO IF NO SECOND KEY         */
      312     2733    2              ELSE
      313     2734    2              CALL DELREC;
      314     2735    2              CALL HFF$NILERASE(2) ALTRET(DONE); /* GO IF NO SECOND KEY          */
      315     2736    2              ADDR(ENDKEY)->CHAR4=B$PS2$->CHAR4; /* Move end key                 */
      316     2737    2   DELLOOP:   CALL NXTREC ALTRET(CHKEOF);
      317     2738    2              IF ENDKEY<F$DCB.CRECNO THEN GOTO DONE;
      318     2739    2              CALL DELREC;
      319     2740    2              GOTO DELLOOP;
      320     2741    2   NOKEY1:    CALL CHKEOP ALTRET(ERR);     /* DELREC WITHOUT KEY                 */
      321     2742    2              IF NOT(FM$REL.A)
      322     2743    2              THEN                         /* IF RECORD ALREADY DELETED, ERROR   */
      323     2744    2                 GOTO NOKEY;
      324     2745    2              CALL DELREC;
      325     2746    2              GOTO DONE;
      326     2747        /**/
      327     2748    2   CHKEOF:    IF B$JIT.ERR.CODE=%E$EOF THEN
      328     2749    2                 GOTO DONE;
      329     2750    2              ELSE
      330     2751    2                 GOTO ERR;
      331     2752        /**/
      332     2753        /**/
      333     2754    2            CASE(FPTPFIL,FPTREW);
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:10   
      334     2755        /*************************/
      335     2756        /****  M$PFIL, M$REW  ****/
      336     2757        /*************************/
      337     2758    2              IF FPTCODE=FPTREW OR FPT$PFIL_V.BOF THEN
      338     2759    2                 F$DCB.CRECNO=1;           /* BOF                                */
      339     2760    3              ELSE DO; /* EOF  */
      340     2761    3   PFILEOF:      IF FM$CFU.NRECS < 1 THEN
      341     2762    3                    F$DCB.CRECNO=1;
      342     2763    3                 ELSE F$DCB.CRECNO=FM$CFU.NRECS+1;
      343     2764    3                 END;
      344     2765    2              F$DCB.RPOS='1'B;
      345     2766        /**/
      346     2767        /**/
      347     2768    2            CASE(FPTPFILEOF);
      348     2769        /************************/
      349     2770        /**** FILE EXTENTION ****/
      350     2771        /***********************/
      351     2772    2              GOTO PFILEOF;
      352     2773        /**/
      353     2774        /**/
      354     2775    2            CASE(FPTEXTEND);
      355     2776        /************************/
      356     2777        /****** M$EXTEND ********/
      357     2778        /************************/
      358     2779
      359     2780        /*
      360     2781           Currently, this code is unused. Extending is handled in
      361     2782           FMF$PMME instead.
      362     2783        */
      363     2784
      364     2785    2              FM$CFU.FMOD='1'B;            /* FILE MODIFIED                      */
      365     2786    2              RECS=FM$CFU.NRECS+FPT$EXTEND_V.SIZ; /* NEW # RECORDS               */
      366     2787    2              GRANS=(RECS*((F$DCB.RECL+4)/4)+1021)/1022; /* NEW # GRANS          */
      367     2788    2              GRANS=GRANS-FM$CFU.UGRANS;   /* # TO GET                           */
      368     2789    2              IF GRANS>0
      369     2790    2              THEN                         /* MUST GET MORE GRANS                */
      370     2791    3              DO;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:11   
      371     2792    3                 F$DCB.XTNSIZE=GRANS;      /* TELL GEXT HOW MANY                 */
      372     2793    3                 CALL FAG$GEXT ALTRET(ERR);
      373     2794    3                 F$DCB.GTYP=FMGTFILE;
      374     2795    3                 END;
      375     2796    2              FM$CFU.NRECS=RECS;           /* NEW TOTAL # RECORDS                */
      376     2797    2              F$DCB.NRECS=RECS;            /* UPDATE DCB TOO                     */
      377     2798    2              F$DCB.EOP=EOP;               /* RESTORE ORIGINAL EOP               */
      378     2799    2              RETURN;
      379     2800        /**/
      380     2801        /**/
      381     2802    2            CASE(ELSE);
      382     2803    2              F$DCB.EOP=EOP;               /* RESTORE ORIGINAL EOP               */
      383     2804    2              RETURN;
      384     2805    2            END;
      385     2806                                                /*                                    */
      386     2807    1   DONE:   F$DCB.EOP=FM_EOP(FPTCODE);
      387     2808    1           RETURN;
      388     2809    1   ERR:    F$DCB.GTYP=FMGTFILE;
      389     2810    1           ALTRETURN;
      390     2811    1   LOSTDATA: B$JIT.ERR=ERRLD;
      391     2812    1           ALTRETURN;
      392     2813        /*E*   ERROR:  FMJ-E$LD-2
      393     2814        *      DESCRIPTION:  A read requested fewer bytes than existed in the
      394     2815        *        record, or a write requested more than the record size of the file
      395     2816        */
      396     2817    1   NOKEY:  B$JIT.ERR=ERRNOKEY;
      397     2818    1           ALTRETURN;
      398     2819        /*E*   ERROR:  FMJ-E$NOKEY-2
      399     2820        *      DESCRIPTION:  The record with the requested key is deleted
      400     2821        */
      401     2822                                                /*                                    */
      402     2823    1   DELREC: PROC;
      403     2824    2           FM$CFU.FMOD='1'B;               /* FILE MODIFIED                      */
      404     2825    2           FM$REL.A='0'B;                  /* SET NOT ACTIVE                     */
      405     2826    2           F$DCB.ARS=F$DCB.ARS+1;
      406     2827    2           F$DCB.BFR.BUFUP(0)='1'B;
      407     2828    2           RETURN;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:12   
      408     2829    2   END DELREC;
      409     2830                                                /*                                    */
      410     2831    1   NXTREC: PROC ALTRET;
      411     2832    2   DCL FWRDX SBIN;
      412     2833    2   DCL ENTFLG UBIN;
      413     2834        /**/
      414     2835    2           ENTFLG=0;
      415     2836    2   NXT2:   IF F$DCB.RPOS
      416     2837    2           THEN                            /* ALREADY POINTING TO NEXT RECORD    */
      417     2838    2              F$DCB.RPOS='0'B;
      418     2839                                                /*                                    */
      419     2840    2           ELSE                            /* MOVE FORWARD TO NEXT RECORD        */
      420     2841    2   INCR:      F$DCB.CRECNO=F$DCB.CRECNO+1;
      421     2842                                                /*                                    */
      422     2843    3           IF F$DCB.CRECNO>FM$CFU.NRECS THEN DO;
      423     2844    3              F$DCB.CRECNO=FM$CFU.NRECS+1;
      424     2845    3              F$DCB.RPOS='1'B;
      425     2846    3              B$JIT.ERR=ERREOF;
      426     2847    3              ALTRETURN;
      427     2848    3              END;
      428     2849                                                /*                                    */
      429     2850    2   COMMON: FWRDX=(F$DCB.CRECNO-1)*((F$DCB.RECL+7)/4);
      430     2851                 /* FWRDX IS THE WORD DISPLACEMENT FROM THE BEGINNING OF THE
      431     2852                    FILE TO THE START OF THE DESIRED RECORD */
      432     2853    2           DA=(FWRDX/1022)+FM_FRZERO;      /* DISK ADDR OF DESIRED BLOCK         */
      433     2854    2           WX=MOD(FWRDX,1022)+2;           /* WORD DISPL INTO DESIRED BLOCK      */
      434     2855    2           IF F$DCB.BFR.BUFX(0)=0 OR F$DCB.BFR.DA(0)~=DA THEN
      435     2856    2           CALL REDBUF ALTRET(ERR);
      436     2857    2           ELSE
      437     2858    2              BUF$=FM$BUF$(F$DCB.BFR.BUFX(0));
      438     2859    2           G$=PINCRW(BUF$,WX);
      439     2860    3           DO CASE(ENTFLG);
      440     2861    3            CASE(1);                       /* NXTRECND                           */
      441     2862    3              IF NOT FM$REL.A THEN GOTO INCR;
      442     2863    3            CASE(2);                       /* CURRECND                           */
      443     2864    3              IF NOT FM$REL.A THEN GOTO DECR;
      444     2865    3            END;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:13   
      445     2866    2           RETURN;
      446     2867    2   ERR:    ALTRETURN;
      447     2868    2   CURREC: ENTRY ALTRET;
      448     2869    2           ENTFLG=0;
      449     2870    2   CUR2:   IF NOT F$DCB.RPOS THEN GOTO COMMON;
      450     2871    2           F$DCB.RPOS='0'B;
      451     2872    2   DECR:   F$DCB.CRECNO=F$DCB.CRECNO-1;
      452     2873    3   CHKBOF: IF F$DCB.CRECNO<1 THEN DO;      /* BACKED OVER BOF                    */
      453     2874    3              F$DCB.CRECNO=1;
      454     2875    3              F$DCB.RPOS='1'B;
      455     2876    3              B$JIT.ERR=ERRBOF;
      456     2877    3              ALTRETURN;
      457     2878    3              END;
      458     2879    2           GOTO COMMON;
      459     2880                                                /*                                    */
      460     2881    2   MOVKEY: ENTRY ALTRET;
      461     2882    2           ENTFLG=0;
      462     2883    2           ADDR(F$DCB.CRECNO)->CHAR4=B$PS1$->CHAR4; /* Move record #             */
      463     2884    3           IF F$DCB.CRECNO<1 OR F$DCB.CRECNO>FM$CFU.NRECS THEN DO;
      464     2885    3              B$JIT.ERR=ERRFILLIM;
      465     2886    3              IF F$DCB.CRECNO<1 THEN
      466     2887    3                 F$DCB.CRECNO=1;
      467     2888    4              ELSE DO;
      468     2889    4                 IF FM$CFU.NRECS < 1 THEN
      469     2890    4                    F$DCB.CRECNO=1;
      470     2891    4                 ELSE F$DCB.CRECNO=FM$CFU.NRECS+1;
      471     2892    4                 END;
      472     2893    3              F$DCB.RPOS='1'B;
      473     2894    3              ALTRETURN;
      474     2895    3              END;
      475     2896    2           F$DCB.RPOS='0'B;
      476     2897    2           GOTO COMMON;
      477     2898        /**/
      478     2899    2   CURRECND: ENTRY ALTRET;
      479     2900    2           ENTFLG=2;
      480     2901    2           GOTO CUR2;
      481     2902    2   NXTRECND: ENTRY ALTRET;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:14   
      482     2903    2           ENTFLG=1;
      483     2904    2           GOTO NXT2;
      484     2905    2   END NXTREC;
      485     2906                                                /*                                    */
      486     2907    1   REDBUF: PROC ALTRET;
      487     2908    2           B$JIT.ERR='0'B;
      488     2909    2           CALL FMD$REDBUF(BUF$,0,DA,0,0) ALTRET(ERR);
      489     2910    2           IF B$JIT.ERR.CODE~=%E$DI THEN RETURN; /* GRAN HAS BEEN WRITTEN        */
      490     2911    2           CALL FMD$GETBUF(0,1,BUF$);
      491     2912    2           BUF$->ZAP.X='0'B;               /* CLEAR GRANULE                      */
      492     2913    2           BUF$->FM$GRAN='0'B;             /* CLEAR HEADER                       */
      493     2914    2           BUF$->FM$GRAN.STAMP.HASH=F$DCB.HASH;
      494     2915    2           BUF$->FM$GRAN.STAMP.GMOD=DA;
      495     2916    2           BUF$->FM$GRAN.NAVX=1024;
      496     2917    2           BUF$->FM$GRAN.ORG=F$DCB.ORG;
      497     2918    2           F$DCB.BFR.DA(0)=DA;             /* DISC ADDRESS                       */
      498     2919    2           F$DCB.BFR.BUFUP(0)='1'B;
      499     2920    2           RETURN;
      500     2921    2   ERR:    ALTRETURN;
      501     2922    2   END REDBUF;
      502     2923                                                /*                                    */
      503     2924    1   CHKEOP: PROC ALTRET;
      504     2925    3           IF FPTCODE=FPTDELREC AND (EOP=0 OR EOP=4) THEN DO;
      505     2926    3              B$JIT.ERR=ERRWRWOKEY;        /* ILLEGAL OPERATION                  */
      506     2927    3              ALTRETURN;
      507     2928    3              END;
      508     2929        /*E*   ERROR:  FMJ-E$WRWOKEY-2
      509     2930        *      DESCRIPTION:  An M$WRITE or M$DELREC was issued when
      510     2931        *        the previous operation was not a successful M$READ or
      511     2932        *        M$PRECORD or M$WRITE
      512     2933        */
      513     2934    2           IF (EOP=3 AND FPTCODE=FPTWRITE) OR EOP=4 OR EOP=2 THEN
      514     2935    2           CALL NXTREC ALTRET(NXTERR);
      515     2936    2           ELSE
      516     2937    2           CALL CURREC ALTRET(ERR);
      517     2938    2           RETURN;
      518     2939        /**/
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:15   
      519     2940    2   NXTERR: IF B$JIT.ERR.CODE=%E$EOF THEN
      520     2941    2              B$JIT.ERR=ERRFILLIM;
      521     2942        /*E*   ERROR:  FMJ-E$FILLIM-2
      522     2943        *       MESSAGE: Attempt to access a record outside the limits of file %UF
      523     2944        */
      524     2945    2   ERR:    ALTRETURN;
      525     2946    2   END CHKEOP;
      526     2947        /**/
      527     2948    1   END FMJ$REL;
      528     2949        %EOD;

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:16   
--  Include file information  --

   B_MAGIC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMJ$REL.

   Procedure FMJ$REL requires 754 words for executable code.
   Procedure FMJ$REL requires 32 words of local(AUTO) storage.

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:17   

 Object Unit name= FMJ$REL                                    File name= FMJ$REL.:E05TOU
 UTS= JUL 29 '97 16:50:15.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     11     13  FMJ$REL
    1   Proc  even  none   754   1362  FMJ$REL
    2  RoData even  none     8     10  FMJ$REL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  FMJ$REL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       8 FMD$RECTRAN
 yes     yes           Std       1 HFF$NILERASE
 yes     yes           Std       0 FAG$GEXT
 yes     yes           Std       6 FMD$REDBUF
         yes           Std       3 FMD$GETBUF
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:18   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$                                FM$BUF$                          r    B$PS0$
r    B$PS1$                           r    B$PS2$                           r    FM_FRZERO
r    FM_EOP                                B_MPT                                 S$CU$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:19   


        1        1        /*M*  FMJ$REL - Routines to process RELATIVE files */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7                                                /*                                    */
        8        8        /*X* DDA */
        9        9                                                /*                                    */
       10       10                                                /*                                    */
       11       11        /*P*   NAME:   FMJ$REL
       12       12        *      PURPOSE:  Provide all PMME services for RELATIVE files */
       13       13                                                /*                                    */
       14       14                                                /*                                    */
       15       15                                                /*                                    */
       16       16        /*F*   NAME:   FMJ$REL
       17       17        *      PURPOSE:  Provide all PMME services for RELATIVE files
       18       18        *      DESCRIPTION:  M$READ, M$WRITE, M$DELREC, M$PRECORD,
       19       19        *        M$PFIL, M$REW AND M$EXTEND are processed here.                      */
       20       20                                                /*                                    */
       21       21                                                /*                                    */
       22       22                                                /*                                    */
       23       23        /*D*   NAME:   FMJ$REL
       24       24        *      CALL:   CALL FMJ$REL(FPTCODE) ALTRET(LOC);
       25       25        *      INPUT:  FPTCODE - FPT code for the PMME
       26       26        *      DESCRIPTION:
       27       27        *                                                                            */
       28       28                                                /*                                    */
       29       29        FMJ$REL: PROC(FPTCODE) ALTRET;

     29  1 000000   000000 700200 xent  FMJ$REL      TSX0  ! X66_AUTO_1
         1 000001   000040 000001                    ZERO    32,1

       30       30        /* PARAMETERS */
       31       31    1   DCL FPTCODE SBIN;
       32       32        /* LOCAL AUTOMATIC STORAGE */
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:20   
       33       33    1   DCL JDCB$ PTR;
       34       34    1   DCL CFU$ PTR;
       35       35    1   DCL EOP SBIN;
       36       36    1   DCL G$ PTR;
       37       37    1   DCL BUF$ PTR;
       38       38    1   DCL BYTES SBIN;
       39       39    1   DCL RECS REDEF BYTES SBIN;
       40       40    1   DCL TOTBYTES SBIN;
       41       41    1   DCL GRANS REDEF TOTBYTES SBIN;
       42       42    1   DCL DIR SBIN;
       43       43    1   DCL FAK SBIN;
       44       44    1   DCL N REDEF FAK SBIN;
       45       45    1   DCL WX SBIN;
       46       46    1   DCL DA SBIN;
       47       47    1   DCL ENDKEY SBIN;
       48       48    1   DCL I SBIN;
       49       49        /* EXTERNAL DATA */
       50       50    1   DCL B$JIT$ PTR SYMREF;
       51       51    1   DCL FM$BUF$(0:0) PTR SYMREF;
       52       52    1   DCL B$PS0$ PTR SYMREF READONLY;
       53       53    1   DCL B$PS1$ PTR SYMREF READONLY;
       54       54    1   DCL B$PS2$ PTR SYMREF READONLY;
       55       55    1   DCL B$PS3$ PTR SYMREF READONLY;
       56       56    1   DCL B$ROSEG$ PTR SYMREF READONLY;
       57       57        /* INCLUDE FILES */
       58       58        %INCLUDE B$JIT;
       59      661        %INCLUDE FM$MACROS;
       60     1036        %MACRO F$DCB(BASED=BASED);
       61     1037        %INCLUDE F$DCB;
       62     1086        %MEND;
       63     1087        %INCLUDE F_ERRORS_C;
       64     1327        %INCLUDE F_FPTCODE_C;
       65     1363        %INCLUDE FM_DATA_R;
       66     1377        %INCLUDE F$CP6V_C;
       67     1603        %INCLUDE B$SS;
       68     1782        %INCLUDE UD_ERRORS_C;
       69     1824        %INCLUDE B$USER;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:21   
       70     2040        %INCLUDE B_STRINGS_C;
       71     2169        %INCLUDE B_MAGIC_C;
       72     2287        /* FPTS */
       73     2288        %FPT$READ_V (BASED="BASED(B$PS0$)");
       74     2295        %FPT$WRITE_V (BASED="BASED(B$PS0$)");
       75     2301        %FPT$DELREC_V (BASED="BASED(B$PS0$)");
       76     2305        %FPT$PRECORD_V (BASED="BASED(B$PS0$)");
       77     2310        %FPT$PFIL_V (BASED="BASED(B$PS0$)");
       78     2313        %FPT$EXTEND_V (BASED="BASED(B$PS0$)");
       79     2316        /* BASED STRUCTURES */
       80     2317        %F$DCB (BASED="BASED(JDCB$)");
       81     2367        %FM$CFU (BASED="BASED(CFU$)");
       82     2373        %FM$GRAN (BASED="BASED(BUF$)");
       83     2377        %FM$REL (BASED="BASED(G$)");
       84     2380    1   DCL 1 ZAP BASED ALIGNED,
       85     2381    1         2 *(0:3) UBIN,
       86     2382    1         2 X (0:1019) UBIN;
       87     2383    1   DCL CHAR4 CHAR(4) BASED;
       88     2384        %B_MPT(FPTN=B_MPT, STCLASS=SYMREF);
       89     2477        %B$USERREFS;
       90     2481        /* CONSTANT STORAGE */
       91     2482    1   DCL ZERO CONSTANT UBIN INIT(0);
       92     2483        %SUB FCG#='0615'O;
       93     2484        %SUB MID#='12'O;
       94     2485        %ERRCODE (NAME=ERRLD,COD#=%E$LD);
       95     2489        %ERRCODE (NAME=ERRNEWREC,COD#=%E$NEWREC);
       96     2493        %ERRCODE (NAME=ERROLDREC,COD#=%E$OLDREC);
       97     2497        %ERRCODE (NAME=ERREOF,COD#=%E$EOF);
       98     2501        %ERRCODE (NAME=ERRBOF,COD#=%E$BOF);
       99     2505        %ERRCODE (NAME=ERRNOKEY,COD#=%E$NOKEY);
      100     2509        %ERRCODE (NAME=ERRWRWOKEY,COD#=%E$WRWOKEY);
      101     2513        %ERRCODE (NAME=ERRFILLIM,COD#=%E$FILLIM);
      102     2517        %ERRCODE (NAME=ERRREWRITE,COD#=%E$REWRITE);
      103     2521        %ERRCODE (NAME=ERRPMMEINT, COD#=%E$PMMEINT);
      104     2525        /* EXTERNAL ROUTINES */
      105     2526    1   DCL FMD$RECTRAN ENTRY(8) ALTRET;
      106     2527    1   DCL FMD$REDBUF ENTRY(6) ALTRET;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:22   
      107     2528    1   DCL FMD$GETBUF ENTRY(3);
      108     2529    1   DCL HFF$NILERASE ENTRY(1) ALTRET;
      109     2530    1   DCL HFF$DSIZ ENTRY(2) ALTRET;
      110     2531    1   DCL FAG$GEXT ENTRY ALTRET;
      111     2532                                                /*                                    */
      112     2533    1           JDCB$=B$JIT.DCB$;               /* POINTER TO CURRENT DCB             */

   2533  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000232 236100                    LDQ     154,,PR0
         1 000004   200004 756100                    STQ     JDCB$,,AUTO

      113     2534    1           CFU$=F$DCB.CFU$;                /* POINTER TO CURRENT CFU             */

   2534  1 000005   200004 471500                    LDP1    JDCB$,,AUTO
         1 000006   100066 236100                    LDQ     54,,PR1
         1 000007   200005 756100                    STQ     CFU$,,AUTO

      114     2535                                                /*                                    */
      115     2536    1           EOP=F$DCB.EOP;                  /* SAVE CURRENT EOP VALUE             */

   2536  1 000010   100064 236100                    LDQ     52,,PR1
         1 000011   000033 772000                    QRL     27
         1 000012   000003 376007                    ANQ     3,DL
         1 000013   200006 756100                    STQ     EOP,,AUTO

      116     2537    1           F$DCB.EOP=0;                    /* CLEAR EOP IN CASE OF ERROR         */

   2537  1 000014   000000 236000 2                  LDQ     0
         1 000015   100064 356100                    ANSQ    52,,PR1

      117     2538    2           DO CASE(FPTCODE);

   2538  1 000016   200003 473500                    LDP3    @FPTCODE,,AUTO
         1 000017   300000 235100                    LDA     0,,PR3
         1 000020   000011 115007                    CMPA    9,DL
         1 000021   000023 602005 1                  TNC     s:2538+5,AL
         1 000022   000722 710000 1                  TRA     s:2803
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:23   
         1 000023   000034 710000 1                  TRA     s:2543
         1 000024   000076 710000 1                  TRA     s:2564
         1 000025   000521 710000 1                  TRA     s:2719
         1 000026   000273 710000 1                  TRA     s:2642
         1 000027   000616 710000 1                  TRA     s:2758
         1 000030   000645 710000 1                  TRA     s:2785
         1 000031   000616 710000 1                  TRA     s:2758
         1 000032   000722 710000 1                  TRA     s:2803
         1 000033   000644 710000 1                  TRA     s:2772

      118     2539        /************************/
      119     2540        /********  M$READ  ******/
      120     2541        /************************/
      121     2542    2            CASE(FPTREAD);

      122     2543    2              IF FPT$READ_V.KEYS THEN

   2543  1 000034   000000 474400 xsym               LDP4    B$PS0$
         1 000035   400000 236100                    LDQ     0,,PR4
         1 000036   200000 316007                    CANQ    65536,DL
         1 000037   000043 600000 1                  TZE     MOVFWD

      123     2544    2              CALL MOVKEY ALTRET(ERR);     /* MOVE KEY TO DCB                    */

   2544  1 000040   001141 701000 1                  TSX1    MOVKEY
         1 000041   000741 702000 1                  TSX2    ERR
         1 000042   000045 710000 1                  TRA     s:2547

      124     2545    2              ELSE
      125     2546    2   MOVFWD:    CALL NXTREC ALTRET(ERR);     /* ADVANCE TO NEXT RECORD             */

   2546  1 000043   000774 701000 1     MOVFWD       TSX1    NXTREC
         1 000044   000741 702000 1                  TSX2    ERR

      126     2547    2              IF NOT(FM$REL.A) THEN

   2547  1 000045   200007 470500                    LDP0    G$,,AUTO
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:24   
         1 000046   000000 234100                    SZN     0,,PR0
         1 000047   000057 604000 1                  TMI     s:2555

      127     2548    2                 IF NOT(FPT$READ_V.KEYS) THEN

   2548  1 000050   000000 471400 xsym               LDP1    B$PS0$
         1 000051   100000 236100                    LDQ     0,,PR1
         1 000052   200000 316007                    CANQ    65536,DL
         1 000053   000043 600000 1                  TZE     MOVFWD

      128     2549    2                    GOTO MOVFWD;           /* NO KEY - FIND NEXT EXISTING REC    */
      129     2550    2                 ELSE
      130     2551    2                    IF FPT$READ_V.KEYR THEN

   2551  1 000054   100000 316007                    CANQ    32768,DL
         1 000055   000475 601000 1                  TNZ     NOTFND

      131     2552    2                       GOTO NOTFND;        /* FIND NEXT KEY THAT EXISTS          */
      132     2553    2                    ELSE
      133     2554    2                       GOTO NOKEY;         /* REPORT NO SUCH KEY                 */

   2554  1 000056   000753 710000 1                  TRA     NOKEY

      134     2555    2              IF FPT$READ_V.KEYR THEN

   2555  1 000057   000000 471400 xsym               LDP1    B$PS0$
         1 000060   100000 236100                    LDQ     0,,PR1
         1 000061   100000 316007                    CANQ    32768,DL
         1 000062   000070 600000 1                  TZE     s:2557

      135     2556    2                 B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;

   2556  1 000063   200004 473500                    LDP3    JDCB$,,AUTO
         1 000064   000000 474400 xsym               LDP4    B$PS1$
         1 000065   040100 100500                    MLR     fill='040'O
         1 000066   300071 000004                    ADSC9   57,,PR3                  cn=0,n=4
         1 000067   400000 000004                    ADSC9   0,,PR4                   cn=0,n=4
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:25   

      136     2557    2              TOTBYTES=FM$REL.GACTB;       /* SIZE OF RECORD                     */

   2557  1 000070   200007 470500                    LDP0    G$,,AUTO
         1 000071   000000 236100                    LDQ     0,,PR0
         1 000072   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000073   200012 756100                    STQ     TOTBYTES,,AUTO

      137     2558    2              DIR=0;                       /* FLAG FOR RECTRAN                   */

   2558  1 000074   200013 450100                    STZ     DIR,,AUTO

      138     2559    2              GOTO RWCOM;

   2559  1 000075   000172 710000 1                  TRA     RWCOM

      139     2560        /***********************/
      140     2561        /*******  M$WRITE  *****/
      141     2562        /***********************/
      142     2563    2            CASE(FPTWRITE);

      143     2564    2              CALL HFF$NILERASE(1) ALTRET(WRNOKEY);

   2564  1 000076   000001 630400 2                  EPPR0   1
         1 000077   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000100   000000 701000 xent               TSX1    HFF$NILERASE
         1 000101   000105 702000 1                  TSX2    WRNOKEY

      144     2565    2              CALL MOVKEY ALTRET(ERR);     /* MOVE USER KEY TO DCB               */

   2565  1 000102   001141 701000 1                  TSX1    MOVKEY
         1 000103   000741 702000 1                  TSX2    ERR

      145     2566    2              GOTO WRCOM;

   2566  1 000104   000107 710000 1                  TRA     WRCOM

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:26   
      146     2567    2   WRNOKEY:   CALL CHKEOP ALTRET(ERR);     /* CHECK THAT LAST OP READ OR PREC    */

   2567  1 000105   001313 701000 1     WRNOKEY      TSX1    CHKEOP
         1 000106   000741 702000 1                  TSX2    ERR

      147     2568    2   WRCOM:     DIR=1;                       /* FLAG FOR RECTRAN                   */

   2568  1 000107   000001 235007       WRCOM        LDA     1,DL
         1 000110   200013 755100                    STA     DIR,,AUTO

      148     2569    2              IF NOT(FPT$WRITE_V.ONEWKEY)

   2569  1 000111   000000 470400 xsym               LDP0    B$PS0$
         1 000112   000000 236100                    LDQ     0,,PR0
         1 000113   000400 316007                    CANQ    256,DL
         1 000114   000134 601000 1                  TNZ     s:2588

      149     2570    2              THEN                         /* USER DID NOT SAY ONEWKEY=YES       */
      150     2571    2                 IF FPT$WRITE_V.NEWKEY=FM$REL.A

   2571  1 000115   200007 471500                    LDP1    G$,,AUTO
         1 000116   000100 066500                    CMPB    filb='0'B
         1 000117   000000 610001                    BDSC    0,,PR0                   by=3,bit=1,n=1
         1 000120   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1
         1 000121   000134 601000 1                  TNZ     s:2588

      151     2572    2                 THEN                      /* ERROR                              */
      152     2573    2                    IF FM$REL.A

   2573  1 000122   100000 234100                    SZN     0,,PR1
         1 000123   000130 605000 1                  TPL     s:2583

      153     2574    2                    THEN              /* KEY EXISTS BUF USER SAID IT COULDN'T    */
      154     2575    3                    DO;

      155     2576    3                       B$JIT.ERR=ERROLDREC;

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:27   
   2576  1 000124   000003 236000 0                  LDQ     ERROLDREC
         1 000125   000000 473400 xsym               LDP3    B$JIT$
         1 000126   300012 756100                    STQ     10,,PR3

      156     2577    3                       ALTRETURN;

   2577  1 000127   000000 702200 xent               TSX2  ! X66_AALT

      157     2578    3                       END;
      158     2579        /*E*   ERROR:  FMJ-E$OLDREC-2
      159     2580        */
      160     2581    2                    ELSE              /* KEY DOESN'T EXIST AND USER SAID IT MUST */
      161     2582    3                    DO;

      162     2583    3                       B$JIT.ERR=ERRNEWREC;

   2583  1 000130   000002 236000 0                  LDQ     ERRNEWREC
         1 000131   000000 473400 xsym               LDP3    B$JIT$
         1 000132   300012 756100                    STQ     10,,PR3

      163     2584    3                       ALTRETURN;

   2584  1 000133   000000 702200 xent               TSX2  ! X66_AALT

      164     2585    3                       END;
      165     2586        /*E*   ERROR:  FMJ-E$NEWREC-2
      166     2587        */
      167     2588    3              IF FM$REL.A AND NOT F$DCB.FFLG.UPD THEN DO;

   2588  1 000134   200007 471500                    LDP1    G$,,AUTO
         1 000135   100000 234100                    SZN     0,,PR1
         1 000136   000147 605000 1                  TPL     s:2594
         1 000137   200004 473500                    LDP3    JDCB$,,AUTO
         1 000140   300004 236100                    LDQ     4,,PR3
         1 000141   040000 316003                    CANQ    16384,DU
         1 000142   000147 601000 1                  TNZ     s:2594

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:28   
      168     2589    3                 B$JIT.ERR=ERRREWRITE;

   2589  1 000143   000011 236000 0                  LDQ     ERRREWRITE
         1 000144   000000 474400 xsym               LDP4    B$JIT$
         1 000145   400012 756100                    STQ     10,,PR4

      169     2590    3                 ALTRETURN;

   2590  1 000146   000000 702200 xent               TSX2  ! X66_AALT

      170     2591    3                 END;
      171     2592        /*E*    ERROR:  FMJ-E$REWRITE-2
      172     2593        */
      173     2594    2              FM$CFU.FMOD='1'B;            /* FILE MODIFIED                      */

   2594  1 000147   200005 473500                    LDP3    CFU$,,AUTO
         1 000150   004000 236003                    LDQ     2048,DU
         1 000151   300000 256100                    ORSQ    0,,PR3

      174     2595    2              FM$REL.A='1'B;               /* MARK RECORD ACTIVE                 */

   2595  1 000152   200007 471500                    LDP1    G$,,AUTO
         1 000153   400000 236003                    LDQ     -131072,DU
         1 000154   100000 256100                    ORSQ    0,,PR1

      175     2596    2              TOTBYTES=F$DCB.UBYTES;       /* SIZE OF RECORD                     */

   2596  1 000155   200004 471500                    LDP1    JDCB$,,AUTO
         1 000156   100076 235100                    LDA     62,,PR1
         1 000157   200012 755100                    STA     TOTBYTES,,AUTO

      176     2597    2              IF TOTBYTES>F$DCB.RECL

   2597  1 000160   100033 236100                    LDQ     27,,PR1
         1 000161   777777 376007                    ANQ     -1,DL
         1 000162   200012 116100                    CMPQ    TOTBYTES,,AUTO
         1 000163   000165 605000 1                  TPL     s:2600
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:29   

      177     2598    2              THEN                         /* TRYING TO WRITE MORE THAN ALLOWED  */
      178     2599    2                 TOTBYTES=F$DCB.RECL;

   2599  1 000164   200012 756100                    STQ     TOTBYTES,,AUTO

      179     2600    2              FM$REL.GACTB=TOTBYTES;       /* SET SIZE IN RECORD HEADER          */

   2600  1 000165   200007 474500                    LDP4    G$,,AUTO
         1 000166   200012 236100                    LDQ     TOTBYTES,,AUTO
         1 000167   400000 552134                    STBQ    0,'34'O,PR4

      180     2601    2              F$DCB.BFR.BUFUP(0)='1'B;     /* MARK BUFFER UPDATED                */

   2601  1 000170   400000 236003                    LDQ     -131072,DU
         1 000171   100115 256100                    ORSQ    77,,PR1

      181     2602    2   RWCOM:     FAK=1;                       /* FIRST PART OF RECORD               */

   2602  1 000172   000001 235007       RWCOM        LDA     1,DL
         1 000173   200014 755100                    STA     FAK,,AUTO

      182     2603    2              G$=PINCRW(G$,1);

   2603  1 000174   200007 236100                    LDQ     G$,,AUTO
         1 000175   000001 036003                    ADLQ    1,DU
         1 000176   200007 756100                    STQ     G$,,AUTO

      183     2604    2              WX=WX+1;                     /* POINT PAST CONTROL WORD TO DATA    */

   2604  1 000177   200015 054100                    AOS     WX,,AUTO

      184     2605    2   LOOP:      BYTES=4096-(WX*4);           /* # BYTES TO END OF GRANULE          */

   2605  1 000200   002000 235007       LOOP         LDA     1024,DL
         1 000201   200015 135100                    SBLA    WX,,AUTO
         1 000202   000002 735000                    ALS     2
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:30   
         1 000203   200011 755100                    STA     BYTES,,AUTO

      185     2606    2              F$DCB.GDISP=0;

   2606  1 000204   200004 470500                    LDP0    JDCB$,,AUTO
         1 000205   000101 450100                    STZ     65,,PR0

      186     2607    2              IF BYTES>TOTBYTES

   2607  1 000206   200011 236100                    LDQ     BYTES,,AUTO
         1 000207   200012 116100                    CMPQ    TOTBYTES,,AUTO
         1 000210   000213 604400 1                  TMOZ    s:2610

      187     2608    2              THEN                         /* SET BYTES TO SIZE OF THIS SEGMENT  */
      188     2609    2                 BYTES=TOTBYTES;

   2609  1 000211   200012 235100                    LDA     TOTBYTES,,AUTO
         1 000212   200011 755100                    STA     BYTES,,AUTO

      189     2610    2              TOTBYTES=TOTBYTES-BYTES;     /* REMAINING SIZE                     */

   2610  1 000213   200012 236100                    LDQ     TOTBYTES,,AUTO
         1 000214   200011 136100                    SBLQ    BYTES,,AUTO
         1 000215   200012 756100                    STQ     TOTBYTES,,AUTO

      190     2611    2              IF BYTES>0

   2611  1 000216   000000 115003                    CMPA    0,DU
         1 000217   000241 604400 1                  TMOZ    s:2614

      191     2612    2              THEN                         /* BYTES=0 IF CTL WD AT END OF GRAN   */
      192     2613    2              CALL FMD$RECTRAN(G$,BYTES,0,DIR,FAK,FPT$READ_V.SEED);

   2613  1 000220   000000 236000 xsym               LDQ     B$PS0$
         1 000221   000002 036003                    ADLQ    2,DU
         1 000222   200037 756100                    STQ     ENTFLG+9,,AUTO
         1 000223   200014 631500                    EPPR1   FAK,,AUTO
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:31   
         1 000224   200036 451500                    STP1    ENTFLG+8,,AUTO
         1 000225   200013 633500                    EPPR3   DIR,,AUTO
         1 000226   200035 453500                    STP3    ENTFLG+7,,AUTO
         1 000227   000002 236000 2                  LDQ     2
         1 000230   200034 756100                    STQ     ENTFLG+6,,AUTO
         1 000231   200011 634500                    EPPR4   BYTES,,AUTO
         1 000232   200033 454500                    STP4    ENTFLG+5,,AUTO
         1 000233   200007 635500                    EPPR5   G$,,AUTO
         1 000234   200032 455500                    STP5    ENTFLG+4,,AUTO
         1 000235   200032 630500                    EPPR0   ENTFLG+4,,AUTO
         1 000236   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000237   000000 701000 xent               TSX1    FMD$RECTRAN
         1 000240   000000 011000                    NOP     0

      193     2614    2              IF F$DCB.UBYTES=0

   2614  1 000241   200004 470500                    LDP0    JDCB$,,AUTO
         1 000242   000076 235100                    LDA     62,,PR0
         1 000243   000252 601000 1                  TNZ     s:2623

      194     2615    2              THEN                         /* ALL USER BYTES HAVE BEEN MOVED     */
      195     2616    2                 IF FPTCODE=FPTREAD

   2616  1 000244   200003 471500                    LDP1    @FPTCODE,,AUTO
         1 000245   100000 235100                    LDA     0,,PR1
         1 000246   000730 601000 1                  TNZ     DONE

      196     2617    2                 THEN                      /* READ                               */
      197     2618    2                    IF BYTES~=0

   2618  1 000247   200011 236100                    LDQ     BYTES,,AUTO
         1 000250   000747 601000 1                  TNZ     LOSTDATA

      198     2619    2                    THEN GOTO LOSTDATA;    /* READ PARTIAL RECORD                */
      199     2620    2                    ELSE GOTO DONE;        /* READ JUST THE RIGHT AMOUNT         */

   2620  1 000251   000730 710000 1                  TRA     DONE
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:32   

      200     2621    2                 ELSE                      /* WRITE                              */
      201     2622    2                    GOTO DONE;
      202     2623    2              IF TOTBYTES=0

   2623  1 000252   200012 236100                    LDQ     TOTBYTES,,AUTO
         1 000253   000260 601000 1                  TNZ     s:2631

      203     2624    2              THEN                    /* MORE USER BYTES BUF RECORD EXHAUSTED    */
      204     2625    2                 IF FPTCODE=FPTREAD

   2625  1 000254   200003 471500                    LDP1    @FPTCODE,,AUTO
         1 000255   100000 235100                    LDA     0,,PR1
         1 000256   000730 600000 1                  TZE     DONE

      205     2626    2                 THEN                      /* READ                               */
      206     2627    2                    GOTO DONE;
      207     2628    2                 ELSE                      /* WRITE                              */
      208     2629    2                    GOTO LOSTDATA;         /* TRIED TO WRITE MORE THAN LEGAL     */

   2629  1 000257   000747 710000 1                  TRA     LOSTDATA

      209     2630                                 /* PREPARE TO GO FORWARD TO NEXT SEGMENT OF RECORD   */
      210     2631    2              DA=DA+1;

   2631  1 000260   200016 054100                    AOS     DA,,AUTO

      211     2632    2              WX=2;              /* DISPLACEMENT TO START OF DATA IN NEXT GRAN   */

   2632  1 000261   000002 235007                    LDA     2,DL
         1 000262   200015 755100                    STA     WX,,AUTO

      212     2633    2              CALL REDBUF ALTRET(ERR);

   2633  1 000263   001215 701000 1                  TSX1    REDBUF
         1 000264   000741 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:33   
      213     2634    2              G$=PINCRW(BUF$,WX);          /* POINTER TO DATA                    */

   2634  1 000265   200015 236100                    LDQ     WX,,AUTO
         1 000266   000022 736000                    QLS     18
         1 000267   200010 036100                    ADLQ    BUF$,,AUTO
         1 000270   200007 756100                    STQ     G$,,AUTO

      214     2635    2              FAK=0;                       /* NOT FIRST PART OF RECORD           */

   2635  1 000271   200014 450100                    STZ     FAK,,AUTO

      215     2636    2              GOTO LOOP;

   2636  1 000272   000200 710000 1                  TRA     LOOP

      216     2637                                                /*                                    */
      217     2638    2            CASE(FPTPREC);

      218     2639        /***********************/
      219     2640        /*****  M$PRECORD  *****/
      220     2641        /***********************/
      221     2642    3              IF FPT$PRECORD_V.BOF THEN DO;

   2642  1 000273   000000 474400 xsym               LDP4    B$PS0$
         1 000274   400000 236100                    LDQ     0,,PR4
         1 000275   020000 316007                    CANQ    8192,DL
         1 000276   000304 600000 1                  TZE     s:2646

      222     2643    3                 F$DCB.CRECNO=1;

   2643  1 000277   000001 235007                    LDA     1,DL
         1 000300   100071 755100                    STA     57,,PR1

      223     2644    3                 F$DCB.RPOS='1'B;

   2644  1 000301   010000 236007                    LDQ     4096,DL
         1 000302   100064 256100                    ORSQ    52,,PR1
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:34   

      224     2645    3                 END;

   2645  1 000303   000340 710000 1                  TRA     s:2661

      225     2646    3              ELSE IF FPT$PRECORD_V.EOF THEN DO;

   2646  1 000304   010000 316007                    CANQ    4096,DL
         1 000305   000321 600000 1                  TZE     s:2652

      226     2647    3                 IF FM$CFU.NRECS < 1 THEN

   2647  1 000306   200005 475500                    LDP5    CFU$,,AUTO
         1 000307   500001 235100                    LDA     1,,PR5
         1 000310   000314 605400 1                  TPNZ    s:2649

      227     2648    3                    F$DCB.CRECNO=1;

   2648  1 000311   000001 235007                    LDA     1,DL
         1 000312   100071 755100                    STA     57,,PR1
         1 000313   000316 710000 1                  TRA     s:2650

      228     2649    3                 ELSE F$DCB.CRECNO=FM$CFU.NRECS+1;

   2649  1 000314   000001 035007                    ADLA    1,DL
         1 000315   100071 755100                    STA     57,,PR1

      229     2650    3                 F$DCB.RPOS='1'B;

   2650  1 000316   010000 236007                    LDQ     4096,DL
         1 000317   100064 256100                    ORSQ    52,,PR1

      230     2651    3                 END;

   2651  1 000320   000340 710000 1                  TRA     s:2661

      231     2652    3              ELSE IF FPT$PRECORD_V.KEYS THEN DO;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:35   

   2652  1 000321   400000 316007                    CANQ    -131072,DL
         1 000322   000340 600000 1                  TZE     s:2661

      232     2653    3                 CALL MOVKEY ALTRET(ERR);  /* MOVE AND VALIDATE KEY              */

   2653  1 000323   001141 701000 1                  TSX1    MOVKEY
         1 000324   000741 702000 1                  TSX2    ERR

      233     2654    3                 IF NOT FM$REL.A THEN

   2654  1 000325   200007 470500                    LDP0    G$,,AUTO
         1 000326   000000 234100                    SZN     0,,PR0
         1 000327   000335 604000 1                  TMI     s:2659

      234     2655    3                    IF FPT$PRECORD_V.KEYR THEN

   2655  1 000330   000000 471400 xsym               LDP1    B$PS0$
         1 000331   100000 236100                    LDQ     0,,PR1
         1 000332   200000 316007                    CANQ    65536,DL
         1 000333   000475 601000 1                  TNZ     NOTFND

      235     2656    3                       GOTO NOTFND;        /* FIND NEXT REC THAT EXISTS          */
      236     2657    3                    ELSE
      237     2658    3                       GOTO NOKEY;

   2658  1 000334   000753 710000 1                  TRA     NOKEY

      238     2659    3                 F$DCB.RPOS='1'B;

   2659  1 000335   200004 471500                    LDP1    JDCB$,,AUTO
         1 000336   010000 236007                    LDQ     4096,DL
         1 000337   100064 256100                    ORSQ    52,,PR1

      239     2660    3                 END;

      240     2661    2              N=FPT$PRECORD_V.N;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:36   

   2661  1 000340   000000 470400 xsym               LDP0    B$PS0$
         1 000341   000001 235100                    LDA     1,,PR0
         1 000342   200014 755100                    STA     FAK,,AUTO

      241     2662    2              F$DCB.ARS=0;

   2662  1 000343   100000 450100                    STZ     0,,PR1

      242     2663    3              IF N>=0 THEN DO;

   2663  1 000344   200014 235100                    LDA     FAK,,AUTO
         1 000345   000400 604000 1                  TMI     s:2676

      243     2664    3                 CALL NXTRECND ALTRET(PRECEOF);

   2664  1 000346   001211 701000 1                  TSX1    NXTRECND
         1 000347   000454 702000 1                  TSX2    PRECEOF

      244     2665    4                 DO WHILE(N>0);

   2665  1 000350   200014 235100                    LDA     FAK,,AUTO
         1 000351   000427 604400 1                  TMOZ    s:2686

      245     2666    4                    F$DCB.ARS=F$DCB.ARS+1;

   2666  1 000352   200004 470500                    LDP0    JDCB$,,AUTO
         1 000353   000000 054100                    AOS     0,,PR0

      246     2667    4                    N=N-1;

   2667  1 000354   000001 336007                    LCQ     1,DL
         1 000355   200014 056100                    ASQ     FAK,,AUTO

      247     2668    4                    CALL NXTRECND ALTRET(PRECEOF);

   2668  1 000356   001211 701000 1                  TSX1    NXTRECND
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:37   
         1 000357   000454 702000 1                  TSX2    PRECEOF

      248     2669    4                    IF FPT$PRECORD_V.BRK AND

   2669  1 000360   000000 470400 xsym               LDP0    B$PS0$
         1 000361   000000 236100                    LDQ     0,,PR0
         1 000362   004000 316007                    CANQ    2048,DL
         1 000363   000375 600000 1                  TZE     s:2673
         1 000364   000003 236000 xsym               LDQ     B_VECTNIL+3
         1 000365   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000366   000000 471400 xsym               LDP1    S$CU$
         1 000367   100001 376100                    ANQ     1,,PR1
         1 000370   000375 600000 1                  TZE     s:2673
         1 000371   000000 473400 xsym               LDP3    B_MPT
         1 000372   300010 236100                    LDQ     8,,PR3
         1 000373   000160 316007                    CANQ    112,DL
         1 000374   000430 601000 1                  TNZ     ERR_INT

      249     2670    4                       S$CU$->B$U.ASYNCH&(~%U_RESET) AND
      250     2671    4                       B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
      251     2672    4                       GOTO ERR_INT;
      252     2673    4                    END;

   2673  1 000375   200014 235100                    LDA     FAK,,AUTO
         1 000376   000352 605400 1                  TPNZ    s:2666

      253     2674    3                 END;

   2674  1 000377   000427 710000 1                  TRA     s:2686

      254     2675    2              ELSE
      255     2676    3              DO WHILE(N<0);

   2676  1 000400   000427 605000 1                  TPL     s:2686

      256     2677    3                 CALL CURRECND ALTRET(ERR);

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:38   
   2677  1 000401   001205 701000 1                  TSX1    CURRECND
         1 000402   000741 702000 1                  TSX2    ERR

      257     2678    3                 N=N+1;

   2678  1 000403   200014 054100                    AOS     FAK,,AUTO

      258     2679    3                 F$DCB.ARS=F$DCB.ARS+1;

   2679  1 000404   200004 470500                    LDP0    JDCB$,,AUTO
         1 000405   000000 054100                    AOS     0,,PR0

      259     2680    3                 F$DCB.RPOS='1'B;

   2680  1 000406   010000 236007                    LDQ     4096,DL
         1 000407   000064 256100                    ORSQ    52,,PR0

      260     2681    3                 IF FPT$PRECORD_V.BRK AND

   2681  1 000410   000000 471400 xsym               LDP1    B$PS0$
         1 000411   100000 236100                    LDQ     0,,PR1
         1 000412   004000 316007                    CANQ    2048,DL
         1 000413   000425 600000 1                  TZE     s:2685
         1 000414   000003 236000 xsym               LDQ     B_VECTNIL+3
         1 000415   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000416   000000 473400 xsym               LDP3    S$CU$
         1 000417   300001 376100                    ANQ     1,,PR3
         1 000420   000425 600000 1                  TZE     s:2685
         1 000421   000000 474400 xsym               LDP4    B_MPT
         1 000422   400010 236100                    LDQ     8,,PR4
         1 000423   000160 316007                    CANQ    112,DL
         1 000424   000430 601000 1                  TNZ     ERR_INT

      261     2682    3                    S$CU$->B$U.ASYNCH&(~%U_RESET) AND
      262     2683    3                    B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
      263     2684    3                    GOTO ERR_INT;
      264     2685    3                 END;
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:39   

   2685  1 000425   200014 235100                    LDA     FAK,,AUTO
         1 000426   000401 604000 1                  TMI     s:2677

      265     2686    3              DO WHILE('0'B);

   2686  1 000427   000433 710000 1                  TRA     s:2689

      266     2687    3   ERR_INT:      B$JIT.ERR=ERRPMMEINT;

   2687  1 000430   000012 236000 0     ERR_INT      LDQ     ERRPMMEINT
         1 000431   000000 470400 xsym               LDP0    B$JIT$
         1 000432   000012 756100                    STQ     10,,PR0

      267     2688    3              END;

      268     2689    2              F$DCB.RPOS='1'B;

   2689  1 000433   200004 470500                    LDP0    JDCB$,,AUTO
         1 000434   010000 236007                    LDQ     4096,DL
         1 000435   000064 256100                    ORSQ    52,,PR0

      269     2690    2              IF FPT$PRECORD_V.KEYR THEN

   2690  1 000436   000000 471400 xsym               LDP1    B$PS0$
         1 000437   100000 236100                    LDQ     0,,PR1
         1 000440   200000 316007                    CANQ    65536,DL
         1 000441   000446 600000 1                  TZE     s:2692

      270     2691    2                 B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;

   2691  1 000442   000000 473400 xsym               LDP3    B$PS1$
         1 000443   040100 100500                    MLR     fill='040'O
         1 000444   000071 000004                    ADSC9   57,,PR0                  cn=0,n=4
         1 000445   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4

      271     2692    2              IF B$JIT.ERR.CODE = %E$PMMEINT THEN
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:40   

   2692  1 000446   000000 473400 xsym               LDP3    B$JIT$
         1 000447   300012 236100                    LDQ     10,,PR3
         1 000450   377770 376007                    ANQ     131064,DL
         1 000451   001230 116007                    CMPQ    664,DL
         1 000452   000741 600000 1                  TZE     ERR

      272     2693    2                 GOTO ERR;
      273     2694    2              ELSE
      274     2695    2                 GOTO DONE;

   2695  1 000453   000730 710000 1                  TRA     DONE

      275     2696        /**/
      276     2697        /**/
      277     2698    2   PRECEOF:   IF B$JIT.ERR.CODE~=%E$EOF THEN GOTO ERR;

   2698  1 000454   000000 470400 xsym  PRECEOF      LDP0    B$JIT$
         1 000455   000012 236100                    LDQ     10,,PR0
         1 000456   377770 376007                    ANQ     131064,DL
         1 000457   000060 116007                    CMPQ    48,DL
         1 000460   000741 601000 1                  TNZ     ERR

      278     2699    2              IF N~=0 THEN GOTO ERR;

   2699  1 000461   200014 235100                    LDA     FAK,,AUTO
         1 000462   000741 601000 1                  TNZ     ERR

      279     2700    2              B$JIT.ERR='0'B;

   2700  1 000463   000012 450100                    STZ     10,,PR0

      280     2701    2              IF FPT$PRECORD_V.KEYR THEN

   2701  1 000464   000000 471400 xsym               LDP1    B$PS0$
         1 000465   100000 236100                    LDQ     0,,PR1
         1 000466   200000 316007                    CANQ    65536,DL
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:41   
         1 000467   000474 600000 1                  TZE     s:2703

      281     2702    2                 B$PS1$->CHAR4=ADDR(ZERO)->CHAR4; /* Zap key                     */

   2702  1 000470   000000 473400 xsym               LDP3    B$PS1$
         1 000471   040100 100400                    MLR     fill='040'O
         1 000472   000000 000004 0                  ADSC9   ZERO                     cn=0,n=4
         1 000473   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4

      282     2703    2              GOTO DONE;

   2703  1 000474   000730 710000 1                  TRA     DONE

      283     2704        /**/
      284     2705        /**/
      285     2706    2   NOTFND:    CALL NXTRECND ALTRET(NOTFND5);

   2706  1 000475   001211 701000 1     NOTFND       TSX1    NXTRECND
         1 000476   000507 702000 1                  TSX2    NOTFND5

      286     2707    2              F$DCB.RPOS='1'B;

   2707  1 000477   200004 470500                    LDP0    JDCB$,,AUTO
         1 000500   010000 236007                    LDQ     4096,DL
         1 000501   000064 256100                    ORSQ    52,,PR0

      287     2708    2              B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;

   2708  1 000502   000000 471400 xsym               LDP1    B$PS1$
         1 000503   040100 100500                    MLR     fill='040'O
         1 000504   000071 000004                    ADSC9   57,,PR0                  cn=0,n=4
         1 000505   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4

      288     2709    2              GOTO NOKEY;

   2709  1 000506   000753 710000 1                  TRA     NOKEY

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:42   
      289     2710    2   NOTFND5:   IF B$JIT.ERR.CODE~=%E$EOF THEN GOTO ERR;

   2710  1 000507   000000 470400 xsym  NOTFND5      LDP0    B$JIT$
         1 000510   000012 236100                    LDQ     10,,PR0
         1 000511   377770 376007                    ANQ     131064,DL
         1 000512   000060 116007                    CMPQ    48,DL
         1 000513   000741 601000 1                  TNZ     ERR

      290     2711    2              B$PS1$->CHAR4=ADDR(ZERO)->CHAR4; /* Zap key                        */

   2711  1 000514   000000 471400 xsym               LDP1    B$PS1$
         1 000515   040100 100400                    MLR     fill='040'O
         1 000516   000000 000004 0                  ADSC9   ZERO                     cn=0,n=4
         1 000517   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4

      291     2712    2              GOTO NOKEY;

   2712  1 000520   000753 710000 1                  TRA     NOKEY

      292     2713        /**/
      293     2714        /**/
      294     2715    2            CASE(FPTDELREC);

      295     2716        /************************/
      296     2717        /*******  M$DELREC  *****/
      297     2718        /************************/
      298     2719    2              F$DCB.ARS=0;

   2719  1 000521   100000 450100                    STZ     0,,PR1

      299     2720    3              IF FPT$DELREC_V.DELALL THEN DO;

   2720  1 000522   000000 470400 xsym               LDP0    B$PS0$
         1 000523   000001 236100                    LDQ     1,,PR0
         1 000524   100000 316007                    CANQ    32768,DL
         1 000525   000537 600000 1                  TZE     s:2728

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:43   
      300     2721    3                 F$DCB.CRECNO=1;

   2721  1 000526   000001 235007                    LDA     1,DL
         1 000527   100071 755100                    STA     57,,PR1

      301     2722    3                 F$DCB.RPOS='1'B;

   2722  1 000530   010000 236007                    LDQ     4096,DL
         1 000531   100064 256100                    ORSQ    52,,PR1

      302     2723    4                 DO WHILE('1'B);

      303     2724    4                    CALL NXTRECND ALTRET(CHKEOF);

   2724  1 000532   001211 701000 1                  TSX1    NXTRECND
         1 000533   000610 702000 1                  TSX2    CHKEOF

      304     2725    4                    CALL DELREC;

   2725  1 000534   000757 701000 1                  TSX1    DELREC
         1 000535   000000 011000                    NOP     0

      305     2726    4                    END;

   2726  1 000536   000532 710000 1                  TRA     s:2724

      306     2727    3                 END;
      307     2728    2              CALL HFF$NILERASE(1) ALTRET(NOKEY1); /* GO IF NO KEY               */

   2728  1 000537   000001 630400 2                  EPPR0   1
         1 000540   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000541   000000 701000 xent               TSX1    HFF$NILERASE
         1 000542   000600 702000 1                  TSX2    NOKEY1

      308     2729    2              CALL MOVKEY ALTRET(ERR);     /* GET THE KEY                        */

   2729  1 000543   001141 701000 1                  TSX1    MOVKEY
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:44   
         1 000544   000741 702000 1                  TSX2    ERR

      309     2730    2              IF NOT(FM$REL.A)

   2730  1 000545   200007 470500                    LDP0    G$,,AUTO
         1 000546   000000 234100                    SZN     0,,PR0
         1 000547   000555 604000 1                  TMI     s:2734

      310     2731    2              THEN                         /* RECORD IS DELETED                  */
      311     2732    2              CALL HFF$NILERASE(2) ALTRET(NOKEY); /* GO IF NO SECOND KEY         */

   2732  1 000550   000003 630400 2                  EPPR0   3
         1 000551   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000552   000000 701000 xent               TSX1    HFF$NILERASE
         1 000553   000753 702000 1                  TSX2    NOKEY
         1 000554   000557 710000 1                  TRA     s:2735

      312     2733    2              ELSE
      313     2734    2              CALL DELREC;

   2734  1 000555   000757 701000 1                  TSX1    DELREC
         1 000556   000000 011000                    NOP     0

      314     2735    2              CALL HFF$NILERASE(2) ALTRET(DONE); /* GO IF NO SECOND KEY          */

   2735  1 000557   000003 630400 2                  EPPR0   3
         1 000560   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000561   000000 701000 xent               TSX1    HFF$NILERASE
         1 000562   000730 702000 1                  TSX2    DONE

      315     2736    2              ADDR(ENDKEY)->CHAR4=B$PS2$->CHAR4; /* Move end key                 */

   2736  1 000563   000000 470400 xsym               LDP0    B$PS2$
         1 000564   040100 100500                    MLR     fill='040'O
         1 000565   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         1 000566   200017 000004                    ADSC9   ENDKEY,,AUTO             cn=0,n=4

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:45   
      316     2737    2   DELLOOP:   CALL NXTREC ALTRET(CHKEOF);

   2737  1 000567   000774 701000 1     DELLOOP      TSX1    NXTREC
         1 000570   000610 702000 1                  TSX2    CHKEOF

      317     2738    2              IF ENDKEY<F$DCB.CRECNO THEN GOTO DONE;

   2738  1 000571   200004 470500                    LDP0    JDCB$,,AUTO
         1 000572   200017 236100                    LDQ     ENDKEY,,AUTO
         1 000573   000071 116100                    CMPQ    57,,PR0
         1 000574   000730 604000 1                  TMI     DONE

      318     2739    2              CALL DELREC;

   2739  1 000575   000757 701000 1                  TSX1    DELREC
         1 000576   000000 011000                    NOP     0

      319     2740    2              GOTO DELLOOP;

   2740  1 000577   000567 710000 1                  TRA     DELLOOP

      320     2741    2   NOKEY1:    CALL CHKEOP ALTRET(ERR);     /* DELREC WITHOUT KEY                 */

   2741  1 000600   001313 701000 1     NOKEY1       TSX1    CHKEOP
         1 000601   000741 702000 1                  TSX2    ERR

      321     2742    2              IF NOT(FM$REL.A)

   2742  1 000602   200007 470500                    LDP0    G$,,AUTO
         1 000603   000000 234100                    SZN     0,,PR0
         1 000604   000753 605000 1                  TPL     NOKEY

      322     2743    2              THEN                         /* IF RECORD ALREADY DELETED, ERROR   */
      323     2744    2                 GOTO NOKEY;
      324     2745    2              CALL DELREC;

   2745  1 000605   000757 701000 1                  TSX1    DELREC
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:46   
         1 000606   000000 011000                    NOP     0

      325     2746    2              GOTO DONE;

   2746  1 000607   000730 710000 1                  TRA     DONE

      326     2747        /**/
      327     2748    2   CHKEOF:    IF B$JIT.ERR.CODE=%E$EOF THEN

   2748  1 000610   000000 470400 xsym  CHKEOF       LDP0    B$JIT$
         1 000611   000012 236100                    LDQ     10,,PR0
         1 000612   377770 376007                    ANQ     131064,DL
         1 000613   000060 116007                    CMPQ    48,DL
         1 000614   000730 600000 1                  TZE     DONE

      328     2749    2                 GOTO DONE;
      329     2750    2              ELSE
      330     2751    2                 GOTO ERR;

   2751  1 000615   000741 710000 1                  TRA     ERR

      331     2752        /**/
      332     2753        /**/
      333     2754    2            CASE(FPTPFIL,FPTREW);

      334     2755        /*************************/
      335     2756        /****  M$PFIL, M$REW  ****/
      336     2757        /*************************/
      337     2758    2              IF FPTCODE=FPTREW OR FPT$PFIL_V.BOF THEN

   2758  1 000616   000006 115007                    CMPA    6,DL
         1 000617   000624 600000 1                  TZE     s:2759
         1 000620   000000 474400 xsym               LDP4    B$PS0$
         1 000621   400000 236100                    LDQ     0,,PR4
         1 000622   400000 316007                    CANQ    -131072,DL
         1 000623   000627 600000 1                  TZE     PFILEOF

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:47   
      338     2759    2                 F$DCB.CRECNO=1;           /* BOF                                */

   2759  1 000624   000001 236007                    LDQ     1,DL
         1 000625   100071 756100                    STQ     57,,PR1
         1 000626   000641 710000 1                  TRA     s:2765

      339     2760    3              ELSE DO; /* EOF  */

      340     2761    3   PFILEOF:      IF FM$CFU.NRECS < 1 THEN

   2761  1 000627   200005 470500       PFILEOF      LDP0    CFU$,,AUTO
         1 000630   000001 235100                    LDA     1,,PR0
         1 000631   000636 605400 1                  TPNZ    s:2763

      341     2762    3                    F$DCB.CRECNO=1;

   2762  1 000632   000001 236007                    LDQ     1,DL
         1 000633   200004 471500                    LDP1    JDCB$,,AUTO
         1 000634   100071 756100                    STQ     57,,PR1
         1 000635   000641 710000 1                  TRA     s:2765

      342     2763    3                 ELSE F$DCB.CRECNO=FM$CFU.NRECS+1;

   2763  1 000636   200004 471500                    LDP1    JDCB$,,AUTO
         1 000637   000001 035007                    ADLA    1,DL
         1 000640   100071 755100                    STA     57,,PR1

      343     2764    3                 END;

      344     2765    2              F$DCB.RPOS='1'B;

   2765  1 000641   010000 236007                    LDQ     4096,DL
         1 000642   100064 256100                    ORSQ    52,,PR1
         1 000643   000730 710000 1                  TRA     DONE

      345     2766        /**/
      346     2767        /**/
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:48   
      347     2768    2            CASE(FPTPFILEOF);

      348     2769        /************************/
      349     2770        /**** FILE EXTENTION ****/
      350     2771        /***********************/
      351     2772    2              GOTO PFILEOF;

   2772  1 000644   000627 710000 1                  TRA     PFILEOF

      352     2773        /**/
      353     2774        /**/
      354     2775    2            CASE(FPTEXTEND);

      355     2776        /************************/
      356     2777        /****** M$EXTEND ********/
      357     2778        /************************/
      358     2779
      359     2780        /*
      360     2781           Currently, this code is unused. Extending is handled in
      361     2782           FMF$PMME instead.
      362     2783        */
      363     2784
      364     2785    2              FM$CFU.FMOD='1'B;            /* FILE MODIFIED                      */

   2785  1 000645   200005 474500                    LDP4    CFU$,,AUTO
         1 000646   004000 236003                    LDQ     2048,DU
         1 000647   400000 256100                    ORSQ    0,,PR4

      365     2786    2              RECS=FM$CFU.NRECS+FPT$EXTEND_V.SIZ; /* NEW # RECORDS               */

   2786  1 000650   000000 470400 xsym               LDP0    B$PS0$
         1 000651   000000 236100                    LDQ     0,,PR0
         1 000652   777777 376007                    ANQ     -1,DL
         1 000653   400001 036100                    ADLQ    1,,PR4
         1 000654   200011 756100                    STQ     BYTES,,AUTO

      366     2787    2              GRANS=(RECS*((F$DCB.RECL+4)/4)+1021)/1022; /* NEW # GRANS          */
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:49   

   2787  1 000655   100033 236100                    LDQ     27,,PR1
         1 000656   777777 376007                    ANQ     -1,DL
         1 000657   000004 036007                    ADLQ    4,DL
         1 000660   000002 772000                    QRL     2
         1 000661   200011 402100                    MPY     BYTES,,AUTO
         1 000662   001775 036007                    ADLQ    1021,DL
         1 000663   001776 506007                    DIV     1022,DL
         1 000664   200012 756100                    STQ     TOTBYTES,,AUTO

      367     2788    2              GRANS=GRANS-FM$CFU.UGRANS;   /* # TO GET                           */

   2788  1 000665   400004 236100                    LDQ     4,,PR4
         1 000666   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000667   200032 756100                    STQ     ENTFLG+4,,AUTO
         1 000670   200012 236100                    LDQ     TOTBYTES,,AUTO
         1 000671   200032 136100                    SBLQ    ENTFLG+4,,AUTO
         1 000672   200012 756100                    STQ     TOTBYTES,,AUTO

      368     2789    2              IF GRANS>0

   2789  1 000673   000706 604400 1                  TMOZ    s:2796

      369     2790    2              THEN                         /* MUST GET MORE GRANS                */
      370     2791    3              DO;

      371     2792    3                 F$DCB.XTNSIZE=GRANS;      /* TELL GEXT HOW MANY                 */

   2792  1 000674   000000 620006                    EAX0    0,QL
         1 000675   100037 740100                    STX0    31,,PR1

      372     2793    3                 CALL FAG$GEXT ALTRET(ERR);

   2793  1 000676   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000677   000000 701000 xent               TSX1    FAG$GEXT
         1 000700   000741 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:50   
      373     2794    3                 F$DCB.GTYP=FMGTFILE;

   2794  1 000701   200004 470500                    LDP0    JDCB$,,AUTO
         1 000702   000064 236100                    LDQ     52,,PR0
         1 000703   000004 376000 2                  ANQ     4
         1 000704   030000 276003                    ORQ     12288,DU
         1 000705   000064 756100                    STQ     52,,PR0

      374     2795    3                 END;

      375     2796    2              FM$CFU.NRECS=RECS;           /* NEW TOTAL # RECORDS                */

   2796  1 000706   200005 470500                    LDP0    CFU$,,AUTO
         1 000707   200011 235100                    LDA     BYTES,,AUTO
         1 000710   000001 755100                    STA     1,,PR0

      376     2797    2              F$DCB.NRECS=RECS;            /* UPDATE DCB TOO                     */

   2797  1 000711   200004 471500                    LDP1    JDCB$,,AUTO
         1 000712   200011 236100                    LDQ     BYTES,,AUTO
         1 000713   100042 756100                    STQ     34,,PR1

      377     2798    2              F$DCB.EOP=EOP;               /* RESTORE ORIGINAL EOP               */

   2798  1 000714   200006 236100                    LDQ     EOP,,AUTO
         1 000715   000033 736000                    QLS     27
         1 000716   100064 676100                    ERQ     52,,PR1
         1 000717   003000 376003                    ANQ     1536,DU
         1 000720   100064 656100                    ERSQ    52,,PR1

      378     2799    2              RETURN;

   2799  1 000721   000000 702200 xent               TSX2  ! X66_ARET

      379     2800        /**/
      380     2801        /**/
      381     2802    2            CASE(ELSE);
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:51   

      382     2803    2              F$DCB.EOP=EOP;               /* RESTORE ORIGINAL EOP               */

   2803  1 000722   200006 236100                    LDQ     EOP,,AUTO
         1 000723   000033 736000                    QLS     27
         1 000724   100064 676100                    ERQ     52,,PR1
         1 000725   003000 376003                    ANQ     1536,DU
         1 000726   100064 656100                    ERSQ    52,,PR1

      383     2804    2              RETURN;

   2804  1 000727   000000 702200 xent               TSX2  ! X66_ARET

      384     2805    2            END;

      385     2806                                                /*                                    */
      386     2807    1   DONE:   F$DCB.EOP=FM_EOP(FPTCODE);

   2807  1 000730   200003 470500       DONE         LDP0    @FPTCODE,,AUTO
         1 000731   000000 720100                    LXL0    0,,PR0
         1 000732   200004 471500                    LDP1    JDCB$,,AUTO
         1 000733   000000 236010 xsym               LDQ     FM_EOP,X0
         1 000734   000033 736000                    QLS     27
         1 000735   100064 676100                    ERQ     52,,PR1
         1 000736   003000 376003                    ANQ     1536,DU
         1 000737   100064 656100                    ERSQ    52,,PR1

      387     2808    1           RETURN;

   2808  1 000740   000000 702200 xent               TSX2  ! X66_ARET

      388     2809    1   ERR:    F$DCB.GTYP=FMGTFILE;

   2809  1 000741   200004 470500       ERR          LDP0    JDCB$,,AUTO
         1 000742   000064 236100                    LDQ     52,,PR0
         1 000743   000004 376000 2                  ANQ     4
         1 000744   030000 276003                    ORQ     12288,DU
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:52   
         1 000745   000064 756100                    STQ     52,,PR0

      389     2810    1           ALTRETURN;

   2810  1 000746   000000 702200 xent               TSX2  ! X66_AALT

      390     2811    1   LOSTDATA: B$JIT.ERR=ERRLD;

   2811  1 000747   000001 236000 0     LOSTDATA     LDQ     ERRLD
         1 000750   000000 473400 xsym               LDP3    B$JIT$
         1 000751   300012 756100                    STQ     10,,PR3

      391     2812    1           ALTRETURN;

   2812  1 000752   000000 702200 xent               TSX2  ! X66_AALT

      392     2813        /*E*   ERROR:  FMJ-E$LD-2
      393     2814        *      DESCRIPTION:  A read requested fewer bytes than existed in the
      394     2815        *        record, or a write requested more than the record size of the file
      395     2816        */
      396     2817    1   NOKEY:  B$JIT.ERR=ERRNOKEY;

   2817  1 000753   000006 236000 0     NOKEY        LDQ     ERRNOKEY
         1 000754   000000 470400 xsym               LDP0    B$JIT$
         1 000755   000012 756100                    STQ     10,,PR0

      397     2818    1           ALTRETURN;

   2818  1 000756   000000 702200 xent               TSX2  ! X66_AALT

      398     2819        /*E*   ERROR:  FMJ-E$NOKEY-2
      399     2820        *      DESCRIPTION:  The record with the requested key is deleted
      400     2821        */
      401     2822                                                /*                                    */
      402     2823    1   DELREC: PROC;

   2823  1 000757   200022 741300       DELREC       STX1  ! ENDKEY+3,,AUTO
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:53   

      403     2824    2           FM$CFU.FMOD='1'B;               /* FILE MODIFIED                      */

   2824  1 000760   200005 470500                    LDP0    CFU$,,AUTO
         1 000761   004000 236003                    LDQ     2048,DU
         1 000762   000000 256100                    ORSQ    0,,PR0

      404     2825    2           FM$REL.A='0'B;                  /* SET NOT ACTIVE                     */

   2825  1 000763   200007 471500                    LDP1    G$,,AUTO
         1 000764   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000765   100000 356100                    ANSQ    0,,PR1

      405     2826    2           F$DCB.ARS=F$DCB.ARS+1;

   2826  1 000766   200004 471500                    LDP1    JDCB$,,AUTO
         1 000767   100000 054100                    AOS     0,,PR1

      406     2827    2           F$DCB.BFR.BUFUP(0)='1'B;

   2827  1 000770   400000 236003                    LDQ     -131072,DU
         1 000771   100115 256100                    ORSQ    77,,PR1

      407     2828    2           RETURN;

   2828  1 000772   200022 221300                    LDX1  ! ENDKEY+3,,AUTO
         1 000773   000001 702211                    TSX2  ! 1,X1

      408     2829    2   END DELREC;
      409     2830                                                /*                                    */
      410     2831    1   NXTREC: PROC ALTRET;

   2831  1 000774   200024 741300       NXTREC       STX1  ! ENDKEY+5,,AUTO

      411     2832    2   DCL FWRDX SBIN;
      412     2833    2   DCL ENTFLG UBIN;
      413     2834        /**/
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:54   
      414     2835    2           ENTFLG=0;

   2835  1 000775   200026 450100                    STZ     ENTFLG,,AUTO

      415     2836    2   NXT2:   IF F$DCB.RPOS

   2836  1 000776   200004 470500       NXT2         LDP0    JDCB$,,AUTO
         1 000777   000064 236100                    LDQ     52,,PR0
         1 001000   010000 316007                    CANQ    4096,DL
         1 001001   001005 600000 1                  TZE     INCR

      416     2837    2           THEN                            /* ALREADY POINTING TO NEXT RECORD    */
      417     2838    2              F$DCB.RPOS='0'B;

   2838  1 001002   000005 236000 2                  LDQ     5
         1 001003   000064 356100                    ANSQ    52,,PR0
         1 001004   001007 710000 1                  TRA     s:2843

      418     2839                                                /*                                    */
      419     2840    2           ELSE                            /* MOVE FORWARD TO NEXT RECORD        */
      420     2841    2   INCR:      F$DCB.CRECNO=F$DCB.CRECNO+1;

   2841  1 001005   200004 470500       INCR         LDP0    JDCB$,,AUTO
         1 001006   000071 054100                    AOS     57,,PR0

      421     2842                                                /*                                    */
      422     2843    3           IF F$DCB.CRECNO>FM$CFU.NRECS THEN DO;

   2843  1 001007   200005 471500                    LDP1    CFU$,,AUTO
         1 001010   000071 236100                    LDQ     57,,PR0
         1 001011   100001 116100                    CMPQ    1,,PR1
         1 001012   001025 604400 1                  TMOZ    COMMON

      423     2844    3              F$DCB.CRECNO=FM$CFU.NRECS+1;

   2844  1 001013   100001 235100                    LDA     1,,PR1
         1 001014   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:55   
         1 001015   000071 755100                    STA     57,,PR0

      424     2845    3              F$DCB.RPOS='1'B;

   2845  1 001016   010000 236007                    LDQ     4096,DL
         1 001017   000064 256100                    ORSQ    52,,PR0

      425     2846    3              B$JIT.ERR=ERREOF;

   2846  1 001020   000004 236000 0                  LDQ     ERREOF
         1 001021   000000 473400 xsym               LDP3    B$JIT$
         1 001022   300012 756100                    STQ     10,,PR3

      426     2847    3              ALTRETURN;

   2847  1 001023   200024 221300                    LDX1  ! ENDKEY+5,,AUTO
         1 001024   000000 702211                    TSX2  ! 0,X1

      427     2848    3              END;
      428     2849                                                /*                                    */
      429     2850    2   COMMON: FWRDX=(F$DCB.CRECNO-1)*((F$DCB.RECL+7)/4);

   2850  1 001025   200004 470500       COMMON       LDP0    JDCB$,,AUTO
         1 001026   000033 236100                    LDQ     27,,PR0
         1 001027   777777 376007                    ANQ     -1,DL
         1 001030   000007 036007                    ADLQ    7,DL
         1 001031   000002 772000                    QRL     2
         1 001032   200032 756100                    STQ     ENTFLG+4,,AUTO
         1 001033   000071 236100                    LDQ     57,,PR0
         1 001034   000001 136007                    SBLQ    1,DL
         1 001035   200032 402100                    MPY     ENTFLG+4,,AUTO
         1 001036   200025 756100                    STQ     FWRDX,,AUTO

      430     2851                 /* FWRDX IS THE WORD DISPLACEMENT FROM THE BEGINNING OF THE
      431     2852                    FILE TO THE START OF THE DESIRED RECORD */
      432     2853    2           DA=(FWRDX/1022)+FM_FRZERO;      /* DISK ADDR OF DESIRED BLOCK         */

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:56   
   2853  1 001037   001776 506007                    DIV     1022,DL
         1 001040   000000 036000 xsym               ADLQ    FM_FRZERO
         1 001041   200016 756100                    STQ     DA,,AUTO

      433     2854    2           WX=MOD(FWRDX,1022)+2;           /* WORD DISPL INTO DESIRED BLOCK      */

   2854  1 001042   200025 236100                    LDQ     FWRDX,,AUTO
         1 001043   001776 506007                    DIV     1022,DL
         1 001044   000002 035007                    ADLA    2,DL
         1 001045   200015 755100                    STA     WX,,AUTO

      434     2855    2           IF F$DCB.BFR.BUFX(0)=0 OR F$DCB.BFR.DA(0)~=DA THEN

   2855  1 001046   000115 236100                    LDQ     77,,PR0
         1 001047   037000 316003                    CANQ    15872,DU
         1 001050   001055 600000 1                  TZE     s:2856
         1 001051   000115 236100                    LDQ     77,,PR0
         1 001052   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001053   200016 116100                    CMPQ    DA,,AUTO
         1 001054   001060 600000 1                  TZE     s:2858

      435     2856    2           CALL REDBUF ALTRET(ERR);

   2856  1 001055   001215 701000 1                  TSX1    REDBUF
         1 001056   001111 702000 1                  TSX2    ERR
         1 001057   001065 710000 1                  TRA     s:2859

      436     2857    2           ELSE
      437     2858    2              BUF$=FM$BUF$(F$DCB.BFR.BUFX(0));

   2858  1 001060   000115 236100                    LDQ     77,,PR0
         1 001061   000033 772000                    QRL     27
         1 001062   000037 376007                    ANQ     31,DL
         1 001063   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 001064   200010 756100                    STQ     BUF$,,AUTO

      438     2859    2           G$=PINCRW(BUF$,WX);
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:57   

   2859  1 001065   200015 236100                    LDQ     WX,,AUTO
         1 001066   000022 736000                    QLS     18
         1 001067   200010 036100                    ADLQ    BUF$,,AUTO
         1 001070   200007 756100                    STQ     G$,,AUTO

      439     2860    3           DO CASE(ENTFLG);

   2860  1 001071   200026 235100                    LDA     ENTFLG,,AUTO
         1 001072   000003 115007                    CMPA    3,DL
         1 001073   001075 602005 1                  TNC     s:2860+4,AL
         1 001074   001107 710000 1                  TRA     s:2866
         1 001075   001107 710000 1                  TRA     s:2866
         1 001076   001100 710000 1                  TRA     s:2862
         1 001077   001104 710000 1                  TRA     s:2864

      440     2861    3            CASE(1);                       /* NXTRECND                           */

      441     2862    3              IF NOT FM$REL.A THEN GOTO INCR;

   2862  1 001100   200007 470500                    LDP0    G$,,AUTO
         1 001101   000000 234100                    SZN     0,,PR0
         1 001102   001005 605000 1                  TPL     INCR
         1 001103   001107 710000 1                  TRA     s:2866

      442     2863    3            CASE(2);                       /* CURRECND                           */

      443     2864    3              IF NOT FM$REL.A THEN GOTO DECR;

   2864  1 001104   200007 470500                    LDP0    G$,,AUTO
         1 001105   000000 234100                    SZN     0,,PR0
         1 001106   001123 605000 1                  TPL     DECR

      444     2865    3            END;

      445     2866    2           RETURN;

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:58   
   2866  1 001107   200024 221300                    LDX1  ! ENDKEY+5,,AUTO
         1 001110   000001 702211                    TSX2  ! 1,X1

      446     2867    2   ERR:    ALTRETURN;

   2867  1 001111   200024 221300       ERR          LDX1  ! ENDKEY+5,,AUTO
         1 001112   000000 702211                    TSX2  ! 0,X1

      447     2868    2   CURREC: ENTRY ALTRET;

   2868  1 001113   200024 741300       CURREC       STX1  ! ENDKEY+5,,AUTO

      448     2869    2           ENTFLG=0;

   2869  1 001114   200026 450100                    STZ     ENTFLG,,AUTO

      449     2870    2   CUR2:   IF NOT F$DCB.RPOS THEN GOTO COMMON;

   2870  1 001115   200004 470500       CUR2         LDP0    JDCB$,,AUTO
         1 001116   000064 236100                    LDQ     52,,PR0
         1 001117   010000 316007                    CANQ    4096,DL
         1 001120   001025 600000 1                  TZE     COMMON

      450     2871    2           F$DCB.RPOS='0'B;

   2871  1 001121   000005 236000 2                  LDQ     5
         1 001122   000064 356100                    ANSQ    52,,PR0

      451     2872    2   DECR:   F$DCB.CRECNO=F$DCB.CRECNO-1;

   2872  1 001123   200004 470500       DECR         LDP0    JDCB$,,AUTO
         1 001124   000001 336007                    LCQ     1,DL
         1 001125   000071 056100                    ASQ     57,,PR0

      452     2873    3   CHKBOF: IF F$DCB.CRECNO<1 THEN DO;      /* BACKED OVER BOF                    */

   2873  1 001126   001140 605400 1     CHKBOF       TPNZ    s:2879
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:59   

      453     2874    3              F$DCB.CRECNO=1;

   2874  1 001127   000001 235007                    LDA     1,DL
         1 001130   000071 755100                    STA     57,,PR0

      454     2875    3              F$DCB.RPOS='1'B;

   2875  1 001131   010000 236007                    LDQ     4096,DL
         1 001132   000064 256100                    ORSQ    52,,PR0

      455     2876    3              B$JIT.ERR=ERRBOF;

   2876  1 001133   000005 236000 0                  LDQ     ERRBOF
         1 001134   000000 471400 xsym               LDP1    B$JIT$
         1 001135   100012 756100                    STQ     10,,PR1

      456     2877    3              ALTRETURN;

   2877  1 001136   200024 221300                    LDX1  ! ENDKEY+5,,AUTO
         1 001137   000000 702211                    TSX2  ! 0,X1

      457     2878    3              END;
      458     2879    2           GOTO COMMON;

   2879  1 001140   001025 710000 1                  TRA     COMMON

      459     2880                                                /*                                    */
      460     2881    2   MOVKEY: ENTRY ALTRET;

   2881  1 001141   200024 741300       MOVKEY       STX1  ! ENDKEY+5,,AUTO

      461     2882    2           ENTFLG=0;

   2882  1 001142   200026 450100                    STZ     ENTFLG,,AUTO

      462     2883    2           ADDR(F$DCB.CRECNO)->CHAR4=B$PS1$->CHAR4; /* Move record #             */
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:60   

   2883  1 001143   000000 470400 xsym               LDP0    B$PS1$
         1 001144   200004 471500                    LDP1    JDCB$,,AUTO
         1 001145   040100 100500                    MLR     fill='040'O
         1 001146   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         1 001147   100071 000004                    ADSC9   57,,PR1                  cn=0,n=4

      463     2884    3           IF F$DCB.CRECNO<1 OR F$DCB.CRECNO>FM$CFU.NRECS THEN DO;

   2884  1 001150   100071 235100                    LDA     57,,PR1
         1 001151   001156 604400 1                  TMOZ    s:2885
         1 001152   200005 473500                    LDP3    CFU$,,AUTO
         1 001153   100071 236100                    LDQ     57,,PR1
         1 001154   300001 116100                    CMPQ    1,,PR3
         1 001155   001202 604400 1                  TMOZ    s:2896

      464     2885    3              B$JIT.ERR=ERRFILLIM;

   2885  1 001156   000010 236000 0                  LDQ     ERRFILLIM
         1 001157   000000 473400 xsym               LDP3    B$JIT$
         1 001160   300012 756100                    STQ     10,,PR3

      465     2886    3              IF F$DCB.CRECNO<1 THEN

   2886  1 001161   100071 235100                    LDA     57,,PR1
         1 001162   001166 605400 1                  TPNZ    s:2889

      466     2887    3                 F$DCB.CRECNO=1;

   2887  1 001163   000001 235007                    LDA     1,DL
         1 001164   100071 755100                    STA     57,,PR1
         1 001165   001176 710000 1                  TRA     s:2893

      467     2888    4              ELSE DO;

      468     2889    4                 IF FM$CFU.NRECS < 1 THEN

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:61   
   2889  1 001166   200005 474500                    LDP4    CFU$,,AUTO
         1 001167   400001 235100                    LDA     1,,PR4
         1 001170   001174 605400 1                  TPNZ    s:2891

      469     2890    4                    F$DCB.CRECNO=1;

   2890  1 001171   000001 235007                    LDA     1,DL
         1 001172   100071 755100                    STA     57,,PR1
         1 001173   001176 710000 1                  TRA     s:2893

      470     2891    4                 ELSE F$DCB.CRECNO=FM$CFU.NRECS+1;

   2891  1 001174   000001 035007                    ADLA    1,DL
         1 001175   100071 755100                    STA     57,,PR1

      471     2892    4                 END;

      472     2893    3              F$DCB.RPOS='1'B;

   2893  1 001176   010000 236007                    LDQ     4096,DL
         1 001177   100064 256100                    ORSQ    52,,PR1

      473     2894    3              ALTRETURN;

   2894  1 001200   200024 221300                    LDX1  ! ENDKEY+5,,AUTO
         1 001201   000000 702211                    TSX2  ! 0,X1

      474     2895    3              END;
      475     2896    2           F$DCB.RPOS='0'B;

   2896  1 001202   000005 236000 2                  LDQ     5
         1 001203   100064 356100                    ANSQ    52,,PR1

      476     2897    2           GOTO COMMON;

   2897  1 001204   001025 710000 1                  TRA     COMMON

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:62   
      477     2898        /**/
      478     2899    2   CURRECND: ENTRY ALTRET;

   2899  1 001205   200024 741300       CURRECND     STX1  ! ENDKEY+5,,AUTO

      479     2900    2           ENTFLG=2;

   2900  1 001206   000002 235007                    LDA     2,DL
         1 001207   200026 755100                    STA     ENTFLG,,AUTO

      480     2901    2           GOTO CUR2;

   2901  1 001210   001115 710000 1                  TRA     CUR2

      481     2902    2   NXTRECND: ENTRY ALTRET;

   2902  1 001211   200024 741300       NXTRECND     STX1  ! ENDKEY+5,,AUTO

      482     2903    2           ENTFLG=1;

   2903  1 001212   000001 235007                    LDA     1,DL
         1 001213   200026 755100                    STA     ENTFLG,,AUTO

      483     2904    2           GOTO NXT2;

   2904  1 001214   000776 710000 1                  TRA     NXT2

      484     2905    2   END NXTREC;
      485     2906                                                /*                                    */
      486     2907    1   REDBUF: PROC ALTRET;

   2907  1 001215   200030 741300       REDBUF       STX1  ! ENTFLG+2,,AUTO

      487     2908    2           B$JIT.ERR='0'B;

   2908  1 001216   000000 470400 xsym               LDP0    B$JIT$
         1 001217   000012 450100                    STZ     10,,PR0
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:63   

      488     2909    2           CALL FMD$REDBUF(BUF$,0,DA,0,0) ALTRET(ERR);

   2909  1 001220   000002 236000 2                  LDQ     2
         1 001221   200036 756100                    STQ     ENTFLG+8,,AUTO
         1 001222   200035 756100                    STQ     ENTFLG+7,,AUTO
         1 001223   200016 631500                    EPPR1   DA,,AUTO
         1 001224   200034 451500                    STP1    ENTFLG+6,,AUTO
         1 001225   200033 756100                    STQ     ENTFLG+5,,AUTO
         1 001226   200010 633500                    EPPR3   BUF$,,AUTO
         1 001227   200032 453500                    STP3    ENTFLG+4,,AUTO
         1 001230   200032 630500                    EPPR0   ENTFLG+4,,AUTO
         1 001231   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 001232   000000 701000 xent               TSX1    FMD$REDBUF
         1 001233   001311 702000 1                  TSX2    ERR

      489     2910    2           IF B$JIT.ERR.CODE~=%E$DI THEN RETURN; /* GRAN HAS BEEN WRITTEN        */

   2910  1 001234   000000 470400 xsym               LDP0    B$JIT$
         1 001235   000012 236100                    LDQ     10,,PR0
         1 001236   377770 376007                    ANQ     131064,DL
         1 001237   000110 116007                    CMPQ    72,DL
         1 001240   001243 600000 1                  TZE     s:2911

   2910  1 001241   200030 221300                    LDX1  ! ENTFLG+2,,AUTO
         1 001242   000001 702211                    TSX2  ! 1,X1

      490     2911    2           CALL FMD$GETBUF(0,1,BUF$);

   2911  1 001243   200010 631500                    EPPR1   BUF$,,AUTO
         1 001244   200034 451500                    STP1    ENTFLG+6,,AUTO
         1 001245   000006 237000 2                  LDAQ    6
         1 001246   200032 757100                    STAQ    ENTFLG+4,,AUTO
         1 001247   200032 630500                    EPPR0   ENTFLG+4,,AUTO
         1 001250   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001251   000000 701000 xent               TSX1    FMD$GETBUF
         1 001252   000000 011000                    NOP     0
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:64   

      491     2912    2           BUF$->ZAP.X='0'B;               /* CLEAR GRANULE                      */

   2912  1 001253   200010 470500                    LDP0    BUF$,,AUTO
         1 001254   000100 100400                    MLR     fill='000'O
         1 001255   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 001256   000004 007760                    ADSC9   4,,PR0                   cn=0,n=4080

      492     2913    2           BUF$->FM$GRAN='0'B;             /* CLEAR HEADER                       */

   2913  1 001257   200010 470500                    LDP0    BUF$,,AUTO
         1 001260   000100 100400                    MLR     fill='000'O
         1 001261   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 001262   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20

      493     2914    2           BUF$->FM$GRAN.STAMP.HASH=F$DCB.HASH;

   2914  1 001263   200004 470500                    LDP0    JDCB$,,AUTO
         1 001264   200010 471500                    LDP1    BUF$,,AUTO
         1 001265   000073 236100                    LDQ     59,,PR0
         1 001266   100000 552170                    STBQ    0,'70'O,PR1

      494     2915    2           BUF$->FM$GRAN.STAMP.GMOD=DA;

   2915  1 001267   200010 471500                    LDP1    BUF$,,AUTO
         1 001270   200016 236100                    LDQ     DA,,AUTO
         1 001271   100000 552104                    STBQ    0,'04'O,PR1

      495     2916    2           BUF$->FM$GRAN.NAVX=1024;

   2916  1 001272   002000 220003                    LDX0    1024,DU
         1 001273   200010 471500                    LDP1    BUF$,,AUTO
         1 001274   100001 740100                    STX0    1,,PR1

      496     2917    2           BUF$->FM$GRAN.ORG=F$DCB.ORG;

   2917  1 001275   200010 471500                    LDP1    BUF$,,AUTO
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:65   
         1 001276   000032 236100                    LDQ     26,,PR0
         1 001277   000021 772000                    QRL     17
         1 001300   100001 676100                    ERQ     1,,PR1
         1 001301   036000 376007                    ANQ     15360,DL
         1 001302   100001 656100                    ERSQ    1,,PR1

      497     2918    2           F$DCB.BFR.DA(0)=DA;             /* DISC ADDRESS                       */

   2918  1 001303   200016 236100                    LDQ     DA,,AUTO
         1 001304   000115 552134                    STBQ    77,'34'O,PR0

      498     2919    2           F$DCB.BFR.BUFUP(0)='1'B;

   2919  1 001305   400000 236003                    LDQ     -131072,DU
         1 001306   000115 256100                    ORSQ    77,,PR0

      499     2920    2           RETURN;

   2920  1 001307   200030 221300                    LDX1  ! ENTFLG+2,,AUTO
         1 001310   000001 702211                    TSX2  ! 1,X1

      500     2921    2   ERR:    ALTRETURN;

   2921  1 001311   200030 221300       ERR          LDX1  ! ENTFLG+2,,AUTO
         1 001312   000000 702211                    TSX2  ! 0,X1

      501     2922    2   END REDBUF;
      502     2923                                                /*                                    */
      503     2924    1   CHKEOP: PROC ALTRET;

   2924  1 001313   200022 741300       CHKEOP       STX1  ! ENDKEY+3,,AUTO

      504     2925    3           IF FPTCODE=FPTDELREC AND (EOP=0 OR EOP=4) THEN DO;

   2925  1 001314   200003 470500                    LDP0    @FPTCODE,,AUTO
         1 001315   000000 235100                    LDA     0,,PR0
         1 001316   000002 115007                    CMPA    2,DL
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:66   
         1 001317   001331 601000 1                  TNZ     s:2934
         1 001320   200006 236100                    LDQ     EOP,,AUTO
         1 001321   001324 600000 1                  TZE     s:2926
         1 001322   000004 116007                    CMPQ    4,DL
         1 001323   001331 601000 1                  TNZ     s:2934

      505     2926    3              B$JIT.ERR=ERRWRWOKEY;        /* ILLEGAL OPERATION                  */

   2926  1 001324   000007 236000 0                  LDQ     ERRWRWOKEY
         1 001325   000000 471400 xsym               LDP1    B$JIT$
         1 001326   100012 756100                    STQ     10,,PR1

      506     2927    3              ALTRETURN;

   2927  1 001327   200022 221300                    LDX1  ! ENDKEY+3,,AUTO
         1 001330   000000 702211                    TSX2  ! 0,X1

      507     2928    3              END;
      508     2929        /*E*   ERROR:  FMJ-E$WRWOKEY-2
      509     2930        *      DESCRIPTION:  An M$WRITE or M$DELREC was issued when
      510     2931        *        the previous operation was not a successful M$READ or
      511     2932        *        M$PRECORD or M$WRITE
      512     2933        */
      513     2934    2           IF (EOP=3 AND FPTCODE=FPTWRITE) OR EOP=4 OR EOP=2 THEN

   2934  1 001331   200006 236100                    LDQ     EOP,,AUTO
         1 001332   000003 116007                    CMPQ    3,DL
         1 001333   001336 601000 1                  TNZ     s:2934+5
         1 001334   000001 115007                    CMPA    1,DL
         1 001335   001342 600000 1                  TZE     s:2935
         1 001336   000004 116007                    CMPQ    4,DL
         1 001337   001342 600000 1                  TZE     s:2935
         1 001340   000002 116007                    CMPQ    2,DL
         1 001341   001345 601000 1                  TNZ     s:2937

      514     2935    2           CALL NXTREC ALTRET(NXTERR);

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:67   
   2935  1 001342   000774 701000 1                  TSX1    NXTREC
         1 001343   001351 702000 1                  TSX2    NXTERR
         1 001344   001347 710000 1                  TRA     s:2938

      515     2936    2           ELSE
      516     2937    2           CALL CURREC ALTRET(ERR);

   2937  1 001345   001113 701000 1                  TSX1    CURREC
         1 001346   001360 702000 1                  TSX2    ERR

      517     2938    2           RETURN;

   2938  1 001347   200022 221300                    LDX1  ! ENDKEY+3,,AUTO
         1 001350   000001 702211                    TSX2  ! 1,X1

      518     2939        /**/
      519     2940    2   NXTERR: IF B$JIT.ERR.CODE=%E$EOF THEN

   2940  1 001351   000000 470400 xsym  NXTERR       LDP0    B$JIT$
         1 001352   000012 236100                    LDQ     10,,PR0
         1 001353   377770 376007                    ANQ     131064,DL
         1 001354   000060 116007                    CMPQ    48,DL
         1 001355   001360 601000 1                  TNZ     ERR

      520     2941    2              B$JIT.ERR=ERRFILLIM;

   2941  1 001356   000010 236000 0                  LDQ     ERRFILLIM
         1 001357   000012 756100                    STQ     10,,PR0

      521     2942        /*E*   ERROR:  FMJ-E$FILLIM-2
      522     2943        *       MESSAGE: Attempt to access a record outside the limits of file %UF
      523     2944        */
      524     2945    2   ERR:    ALTRETURN;

   2945  1 001360   200022 221300       ERR          LDX1  ! ENDKEY+3,,AUTO
         1 001361   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:68   
ZERO
 Sect OctLoc
   0     000   000000 000000                                                    ....

ERRLD
 Sect OctLoc
   0     001   061512 000072                                                    1..:

ERRNEWREC
 Sect OctLoc
   0     002   061512 000762                                                    1...

ERROLDREC
 Sect OctLoc
   0     003   061512 000752                                                    1...

ERREOF
 Sect OctLoc
   0     004   061512 000062                                                    1..2

ERRBOF
 Sect OctLoc
   0     005   061512 000042                                                    1.."

ERRNOKEY
 Sect OctLoc
   0     006   061512 001022                                                    1...

ERRWRWOKEY
 Sect OctLoc
   0     007   061512 001012                                                    1...

ERRFILLIM
 Sect OctLoc
   0     010   061512 001202                                                    1...

ERRREWRITE
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:69   
 Sect OctLoc
   0     011   061512 000652                                                    1...

ERRPMMEINT
 Sect OctLoc
   0     012   061512 001232                                                    1...

(unnamed)
 Sect OctLoc
   2     000   774777 777777   000003 006000   000002 006000   000004 006000    ................
   2     004   743777 777777   777777 767777   000002 006000   000003 006000    ................
      525     2946    2   END CHKEOP;
      526     2947        /**/
      527     2948    1   END FMJ$REL;
      528     2949        %EOD;

PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:70   
--  Include file information  --

   B_MAGIC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMJ$REL.
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:71   

 **** Variables and constants ****

  ****  Section 000 RoData FMJ$REL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/b STRC        r     1 ERRBOF                     4-0-0/b STRC        r     1 ERREOF
    10-0-0/b STRC        r     1 ERRFILLIM                  1-0-0/b STRC        r     1 ERRLD
     2-0-0/b STRC        r     1 ERRNEWREC                  6-0-0/b STRC        r     1 ERRNOKEY
     3-0-0/b STRC        r     1 ERROLDREC                 12-0-0/b STRC        r     1 ERRPMMEINT
    11-0-0/b STRC        r     1 ERRREWRITE                 7-0-0/b STRC        r     1 ERRWRWOKEY
     0-0-0/w UBIN        r     1 ZERO

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FPTCODE                  10-0-0/w PTR         r     1 BUF$
    11-0-0/w SBIN        r     1 BYTES                      5-0-0/w PTR         r     1 CFU$
    16-0-0/w SBIN        r     1 DA                        13-0-0/w SBIN        r     1 DIR
    17-0-0/w SBIN        r     1 ENDKEY                    26-0-0/w UBIN        r     1 ENTFLG
     6-0-0/w SBIN        r     1 EOP                       14-0-0/w SBIN        r     1 FAK
    *0-0-0/w SBIN        r     1 FPTCODE                   25-0-0/w SBIN        r     1 FWRDX
     7-0-0/w PTR         r     1 G$                        12-0-0/w SBIN        r     1 GRANS
     4-0-0/w PTR         r     1 JDCB$                     14-0-0/w SBIN        r     1 N
    11-0-0/w SBIN        r     1 RECS                      12-0-0/w SBIN        r     1 TOTBYTES
    15-0-0/w SBIN        r     1 WX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS0$
     0-0-0/w PTR         r     1 B$PS1$                     0-0-0/w PTR         r     1 B$PS2$
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:72   
     0-0-0/d STRC(432)   r     1 B_MPT
     0-0-0/w PTR         r     1 FM$BUF$(0:0)
     0-0-0/w UBIN        r     1 FM_EOP(0:8)                0-0-0/w UBIN        r     1 FM_FRZERO
     0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(2304)  r     1 B$SS
     0-0-0/d STRC(576)   r     1 B$U                        0-0-0/c CHAR(4)     r     1 CHAR4
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(288)   r     1 FM$CFU
     0-0-0/w STRC(180)   r     1 FM$GRAN                    0-0-0/w STRC        r     1 FM$REL
     0-0-0/d STRC(72)    r     1 FPT$DELREC_V               0-0-0/d STRC(72)    r     1 FPT$EXTEND_V
     0-0-0/d STRC(72)    r     1 FPT$PFIL_V                 0-0-0/d STRC(108)   r     1 FPT$PRECORD_V
     0-0-0/d STRC(216)   r     1 FPT$READ_V                 0-0-0/d STRC(144)   r     1 FPT$WRITE_V
     0-0-0/w STRC(36864) r     1 ZAP


   Procedure FMJ$REL requires 754 words for executable code.
   Procedure FMJ$REL requires 32 words of local(AUTO) storage.
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:73   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:74   
          MINI XREF LISTING

B$DO.ECCINFO
      1975**DCL      1976--REDEF
B$JIT.CPFLAGS1.SLEAZE
       479**DCL       479--REDEF
B$JIT.DCB$
       553**DCL      2533>>ASSIGN
B$JIT.ERR
       385**DCL      2576<<ASSIGN   2583<<ASSIGN   2589<<ASSIGN   2687<<ASSIGN   2700<<ASSIGN   2811<<ASSIGN
      2817<<ASSIGN   2846<<ASSIGN   2876<<ASSIGN   2885<<ASSIGN   2908<<ASSIGN   2926<<ASSIGN   2941<<ASSIGN
B$JIT.ERR.CODE
       386**DCL      2692>>IF       2698>>IF       2710>>IF       2748>>IF       2910>>IF       2940>>IF
B$JIT.ERR.MID
       386**DCL       386--REDEF
B$JIT.JRESPEAK
       547**DCL       548--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       656**DCL       656--REDEF     657--REDEF
B$JIT.PNR
       560**DCL       560--REDEF
B$JIT.TSLINE
       654**DCL       655--REDEF
B$JIT$
        50**DCL       380--IMP-PTR  2533>>ASSIGN   2576>>ASSIGN   2583>>ASSIGN   2589>>ASSIGN   2687>>ASSIGN
      2692>>IF       2698>>IF       2700>>ASSIGN   2710>>IF       2748>>IF       2811>>ASSIGN   2817>>ASSIGN
      2846>>ASSIGN   2876>>ASSIGN   2885>>ASSIGN   2908>>ASSIGN   2910>>IF       2926>>ASSIGN   2940>>IF
      2941>>ASSIGN
B$PS0$
        52**DCL      2289--IMP-PTR  2296--IMP-PTR  2302--IMP-PTR  2306--IMP-PTR  2311--IMP-PTR  2314--IMP-PTR
      2543>>IF       2548>>IF       2551>>IF       2555>>IF       2569>>IF       2571>>IF       2613>>CALL
      2642>>IF       2646>>IF       2652>>IF       2655>>IF       2661>>ASSIGN   2669>>IF       2681>>IF
      2690>>IF       2701>>IF       2720>>IF       2758>>IF       2786>>ASSIGN
B$PS1$
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:75   
        53**DCL      2556>>ASSIGN   2691>>ASSIGN   2702>>ASSIGN   2708>>ASSIGN   2711>>ASSIGN   2883>>ASSIGN
B$PS2$
        54**DCL      2736>>ASSIGN
B$SS.ISR.WSR
      1660**DCL      2669>>IF       2681>>IF
B$SS.RVA
      1655**DCL      1656--REDEF
B$U.ASYNCH
      1912**DCL      2669>>IF       2681>>IF
B$U.MISC
      1954**DCL      1955--REDEF
B$USER.MISC
      2030**DCL      2031--REDEF
BUF$
        37**DCL      2374--IMP-PTR  2634>>ASSIGN   2858<<ASSIGN   2859>>ASSIGN   2909<>CALL     2911<>CALL
      2912>>ASSIGN   2913>>ASSIGN   2914>>ASSIGN   2915>>ASSIGN   2916>>ASSIGN   2917>>ASSIGN
BYTES
        38**DCL        39--REDEF    2605<<ASSIGN   2607>>IF       2609<<ASSIGN   2610>>ASSIGN   2611>>IF
      2613<>CALL     2618>>IF
B_MPT.AS
      2420**DCL      2423--REDEF
B_MPT.ASDESC
      2452**DCL      2456--REDEF
B_MPT.ECCB
      2435**DCL      2438--REDEF
B_MPT.ECCBDESC
      2470**DCL      2474--REDEF
B_MPT.LS
      2415**DCL      2418--REDEF
B_MPT.LSDESC
      2446**DCL      2450--REDEF
B_MPT.PS
      2425**DCL      2428--REDEF
B_MPT.PSDESC
      2458**DCL      2462--REDEF
B_MPT.SS
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:76   
      2410**DCL      2413--REDEF
B_MPT.SS$
      2413**DCL      2669>>IF       2681>>IF
B_MPT.SSDESC
      2440**DCL      2444--REDEF
B_MPT.TCB
      2430**DCL      2433--REDEF
B_MPT.TCBDESC
      2464**DCL      2468--REDEF
CFU$
        34**DCL      2368--IMP-PTR  2534<<ASSIGN   2594>>ASSIGN   2647>>IF       2649>>ASSIGN   2761>>IF
      2763>>ASSIGN   2785>>ASSIGN   2786>>ASSIGN   2788>>ASSIGN   2796>>ASSIGN   2824>>ASSIGN   2843>>IF
      2844>>ASSIGN   2884>>IF       2889>>IF       2891>>ASSIGN
CHAR4
      2383**DCL      2556<<ASSIGN   2556>>ASSIGN   2691<<ASSIGN   2691>>ASSIGN   2702<<ASSIGN   2702>>ASSIGN
      2708<<ASSIGN   2708>>ASSIGN   2711<<ASSIGN   2711>>ASSIGN   2736<<ASSIGN   2736>>ASSIGN   2883<<ASSIGN
      2883>>ASSIGN
CHKEOF
      2748**LABEL    2724--CALLALT  2737--CALLALT
CHKEOP
      2924**PROC     2567--CALL     2741--CALL
COMMON IN PROCEDURE NXTREC
      2850**LABEL    2870--GOTO     2879--GOTO     2897--GOTO
CUR2 IN PROCEDURE NXTREC
      2870**LABEL    2901--GOTO
CURREC IN PROCEDURE NXTREC
      2868**ENTRY    2937--CALL
CURRECND IN PROCEDURE NXTREC
      2899**ENTRY    2677--CALL
DA
        46**DCL      2631<<ASSIGN   2631>>ASSIGN   2853<<ASSIGN   2855>>IF       2909<>CALL     2915>>ASSIGN
      2918>>ASSIGN
DECR IN PROCEDURE NXTREC
      2872**LABEL    2864--GOTO
DELLOOP
      2737**LABEL    2740--GOTO
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:77   
DELREC
      2823**PROC     2725--CALL     2734--CALL     2739--CALL     2745--CALL
DIR
        42**DCL      2558<<ASSIGN   2568<<ASSIGN   2613<>CALL
DONE
      2807**LABEL    2620--GOTO     2622--GOTO     2627--GOTO     2695--GOTO     2703--GOTO     2735--CALLALT
      2738--GOTO     2746--GOTO     2749--GOTO
ENDKEY
        47**DCL      2736--ASSIGN   2738>>IF
ENTFLG IN PROCEDURE NXTREC
      2833**DCL      2835<<ASSIGN   2860>>DOCASE   2869<<ASSIGN   2882<<ASSIGN   2900<<ASSIGN   2903<<ASSIGN
EOP
        35**DCL      2536<<ASSIGN   2798>>ASSIGN   2803>>ASSIGN   2925>>IF       2925>>IF       2934>>IF
      2934>>IF       2934>>IF
ERR
      2809**LABEL    2544--CALLALT  2546--CALLALT  2565--CALLALT  2567--CALLALT  2633--CALLALT  2653--CALLALT
      2677--CALLALT  2693--GOTO     2698--GOTO     2699--GOTO     2710--GOTO     2729--CALLALT  2741--CALLALT
      2751--GOTO     2793--CALLALT
ERR IN PROCEDURE CHKEOP
      2945**LABEL    2937--CALLALT
ERR IN PROCEDURE NXTREC
      2867**LABEL    2856--CALLALT
ERR IN PROCEDURE REDBUF
      2921**LABEL    2909--CALLALT
ERRBOF
      2502**DCL      2876>>ASSIGN
ERREOF
      2498**DCL      2846>>ASSIGN
ERRFILLIM
      2514**DCL      2885>>ASSIGN   2941>>ASSIGN
ERRLD
      2486**DCL      2811>>ASSIGN
ERRNEWREC
      2490**DCL      2583>>ASSIGN
ERRNOKEY
      2506**DCL      2817>>ASSIGN
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:78   
ERROLDREC
      2494**DCL      2576>>ASSIGN
ERRPMMEINT
      2522**DCL      2687>>ASSIGN
ERRREWRITE
      2518**DCL      2589>>ASSIGN
ERRWRWOKEY
      2510**DCL      2926>>ASSIGN
ERR_INT
      2687**LABEL    2672--GOTO     2684--GOTO
F$DCB.ACTPOS
      2343**DCL      2343--REDEF
F$DCB.ARS
      2318**DCL      2318--REDEF    2662<<ASSIGN   2666<<ASSIGN   2666>>ASSIGN   2679<<ASSIGN   2679>>ASSIGN
      2719<<ASSIGN   2826<<ASSIGN   2826>>ASSIGN
F$DCB.ATTR
      2336**DCL      2337--REDEF
F$DCB.BFR.BUFUP
      2362**DCL      2601<<ASSIGN   2827<<ASSIGN   2919<<ASSIGN
F$DCB.BFR.BUFX
      2363**DCL      2855>>IF       2858>>ASSIGN
F$DCB.BFR.DA
      2363**DCL      2855>>IF       2918<<ASSIGN
F$DCB.BORROW
      2351**DCL      2351--REDEF    2351--REDEF    2351--REDEF
F$DCB.CFU$
      2352**DCL      2534>>ASSIGN
F$DCB.CRECNO
      2355**DCL      2556--ASSIGN   2643<<ASSIGN   2648<<ASSIGN   2649<<ASSIGN   2691--ASSIGN   2708--ASSIGN
      2721<<ASSIGN   2738>>IF       2759<<ASSIGN   2762<<ASSIGN   2763<<ASSIGN   2841<<ASSIGN   2841>>ASSIGN
      2843>>IF       2844<<ASSIGN   2850>>ASSIGN   2872<<ASSIGN   2872>>ASSIGN   2873>>IF       2874<<ASSIGN
      2883--ASSIGN   2884>>IF       2884>>IF       2886>>IF       2887<<ASSIGN   2890<<ASSIGN   2891<<ASSIGN
F$DCB.DCBNAME.L
      2365**DCL      2365--IMP-SIZ
F$DCB.EOMCHAR
      2322**DCL      2322--REDEF
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:79   
F$DCB.EOP
      2347**DCL      2536>>ASSIGN   2537<<ASSIGN   2798<<ASSIGN   2803<<ASSIGN   2807<<ASSIGN
F$DCB.FFLG.UPD
      2323**DCL      2588>>IF
F$DCB.FLDID
      2346**DCL      2346--REDEF
F$DCB.FORM$
      2340**DCL      2340--REDEF
F$DCB.FSECT
      2356**DCL      2356--REDEF
F$DCB.FSN
      2333**DCL      2333--REDEF    2333--REDEF    2334--REDEF
F$DCB.GDISP
      2357**DCL      2606<<ASSIGN
F$DCB.GTYP
      2347**DCL      2794<<ASSIGN   2809<<ASSIGN
F$DCB.HASH
      2355**DCL      2914>>ASSIGN
F$DCB.HEADER$
      2339**DCL      2339--REDEF
F$DCB.IXTNSIZE
      2337**DCL      2337--REDEF
F$DCB.LASTSTA$
      2327**DCL      2327--REDEF
F$DCB.LVL
      2352**DCL      2352--REDEF
F$DCB.NAME.C
      2327**DCL      2327--REDEF
F$DCB.NOEOF
      2348**DCL      2348--REDEF
F$DCB.NRECS
      2338**DCL      2338--REDEF    2797<<ASSIGN
F$DCB.NRECX
      2357**DCL      2357--REDEF
F$DCB.OHDR
      2349**DCL      2349--REDEF
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:80   
F$DCB.ORG
      2332**DCL      2332--REDEF    2917>>ASSIGN
F$DCB.PRECNO
      2355**DCL      2355--REDEF
F$DCB.RCSZ
      2360**DCL      2360--REDEF
F$DCB.RECL
      2333**DCL      2597>>IF       2599>>ASSIGN   2787>>ASSIGN   2850>>ASSIGN
F$DCB.RES
      2328**DCL      2328--REDEF
F$DCB.RPOS
      2349**DCL      2644<<ASSIGN   2650<<ASSIGN   2659<<ASSIGN   2680<<ASSIGN   2689<<ASSIGN   2707<<ASSIGN
      2722<<ASSIGN   2765<<ASSIGN   2836>>IF       2838<<ASSIGN   2845<<ASSIGN   2870>>IF       2871<<ASSIGN
      2875<<ASSIGN   2893<<ASSIGN   2896<<ASSIGN
F$DCB.SETX
      2340**DCL      2340--REDEF
F$DCB.TAB$
      2339**DCL      2340--REDEF
F$DCB.TDA
      2354**DCL      2354--REDEF
F$DCB.UBYTES
      2356**DCL      2596>>ASSIGN   2614>>IF
F$DCB.WSN
      2329**DCL      2329--REDEF
F$DCB.XTNSIZE
      2335**DCL      2792<<ASSIGN
FAG$GEXT
      2531**DCL-ENT  2793--CALL
FAK
        43**DCL        44--REDEF    2602<<ASSIGN   2613<>CALL     2635<<ASSIGN
FM$BUF$
        51**DCL      2858>>ASSIGN
FM$CFU.ACCTX
      2369**DCL      2369--REDEF
FM$CFU.FMOD
      2368**DCL      2594<<ASSIGN   2785<<ASSIGN   2824<<ASSIGN
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:81   
FM$CFU.NRECS
      2369**DCL      2647>>IF       2649>>ASSIGN   2761>>IF       2763>>ASSIGN   2786>>ASSIGN   2796<<ASSIGN
      2843>>IF       2844>>ASSIGN   2884>>IF       2889>>IF       2891>>ASSIGN
FM$CFU.UGRANS
      2370**DCL      2788>>ASSIGN
FM$GRAN
      2374**DCL      2913<<ASSIGN
FM$GRAN.NAVX
      2374**DCL      2916<<ASSIGN
FM$GRAN.ORG
      2374**DCL      2917<<ASSIGN
FM$GRAN.STAMP.GMOD
      2374**DCL      2915<<ASSIGN
FM$GRAN.STAMP.HASH
      2374**DCL      2914<<ASSIGN
FM$REL.A
      2378**DCL      2547>>IF       2571>>IF       2573>>IF       2588>>IF       2595<<ASSIGN   2654>>IF
      2730>>IF       2742>>IF       2825<<ASSIGN   2862>>IF       2864>>IF
FM$REL.GACTB
      2378**DCL      2557>>ASSIGN   2600<<ASSIGN
FMD$GETBUF
      2528**DCL-ENT  2911--CALL
FMD$RECTRAN
      2526**DCL-ENT  2613--CALL
FMD$REDBUF
      2527**DCL-ENT  2909--CALL
FM_EOP
      1372**DCL      2807>>ASSIGN
FM_FRZERO
      1371**DCL      2853>>ASSIGN
FPT$DELREC_V.DELALL
      2302**DCL      2720>>IF
FPT$EXTEND_V.SIZ
      2314**DCL      2786>>ASSIGN
FPT$PFIL_V.BOF
      2311**DCL      2758>>IF
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:82   
FPT$PRECORD_V.BOF
      2306**DCL      2642>>IF
FPT$PRECORD_V.BRK
      2306**DCL      2669>>IF       2681>>IF
FPT$PRECORD_V.EOF
      2306**DCL      2646>>IF
FPT$PRECORD_V.KEYR
      2306**DCL      2655>>IF       2690>>IF       2701>>IF
FPT$PRECORD_V.KEYS
      2306**DCL      2652>>IF
FPT$PRECORD_V.N
      2307**DCL      2661>>ASSIGN
FPT$READ_V.DVBYTE.REREAD
      2291**DCL      2292--REDEF
FPT$READ_V.INDX
      2291**DCL      2291--REDEF
FPT$READ_V.KEYR
      2289**DCL      2551>>IF       2555>>IF
FPT$READ_V.KEYS
      2289**DCL      2543>>IF       2548>>IF
FPT$READ_V.SEED
      2291**DCL      2613<>CALL
FPT$WRITE_V.DVBYTE.VFC
      2298**DCL      2298--REDEF
FPT$WRITE_V.NEWKEY
      2297**DCL      2571>>IF
FPT$WRITE_V.ONEWKEY
      2296**DCL      2569>>IF
FPTCODE
        31**DCL        29--PROC     2538>>DOCASE   2616>>IF       2625>>IF       2758>>IF       2807>>ASSIGN
      2925>>IF       2934>>IF
FWRDX IN PROCEDURE NXTREC
      2832**DCL      2850<<ASSIGN   2853>>ASSIGN   2854>>ASSIGN
G$
        36**DCL      2378--IMP-PTR  2547>>IF       2557>>ASSIGN   2571>>IF       2573>>IF       2588>>IF
      2595>>ASSIGN   2600>>ASSIGN   2603<<ASSIGN   2603>>ASSIGN   2613<>CALL     2634<<ASSIGN   2654>>IF
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:83   
      2730>>IF       2742>>IF       2825>>ASSIGN   2859<<ASSIGN   2862>>IF       2864>>IF
GRANS
        41**DCL      2787<<ASSIGN   2788<<ASSIGN   2788>>ASSIGN   2789>>IF       2792>>ASSIGN
HFF$NILERASE
      2529**DCL-ENT  2564--CALL     2728--CALL     2732--CALL     2735--CALL
INCR IN PROCEDURE NXTREC
      2841**LABEL    2862--GOTO
JDCB$
        33**DCL      2318--IMP-PTR  2533<<ASSIGN   2534>>ASSIGN   2536>>ASSIGN   2537>>ASSIGN   2556>>ASSIGN
      2588>>IF       2596>>ASSIGN   2597>>IF       2599>>ASSIGN   2601>>ASSIGN   2606>>ASSIGN   2614>>IF
      2643>>ASSIGN   2644>>ASSIGN   2648>>ASSIGN   2649>>ASSIGN   2650>>ASSIGN   2659>>ASSIGN   2662>>ASSIGN
      2666>>ASSIGN   2666>>ASSIGN   2679>>ASSIGN   2679>>ASSIGN   2680>>ASSIGN   2689>>ASSIGN   2691>>ASSIGN
      2707>>ASSIGN   2708>>ASSIGN   2719>>ASSIGN   2721>>ASSIGN   2722>>ASSIGN   2738>>IF       2759>>ASSIGN
      2762>>ASSIGN   2763>>ASSIGN   2765>>ASSIGN   2787>>ASSIGN   2792>>ASSIGN   2794>>ASSIGN   2797>>ASSIGN
      2798>>ASSIGN   2803>>ASSIGN   2807>>ASSIGN   2809>>ASSIGN   2826>>ASSIGN   2826>>ASSIGN   2827>>ASSIGN
      2836>>IF       2838>>ASSIGN   2841>>ASSIGN   2841>>ASSIGN   2843>>IF       2844>>ASSIGN   2845>>ASSIGN
      2850>>ASSIGN   2850>>ASSIGN   2855>>IF       2855>>IF       2858>>ASSIGN   2870>>IF       2871>>ASSIGN
      2872>>ASSIGN   2872>>ASSIGN   2873>>IF       2874>>ASSIGN   2875>>ASSIGN   2883>>ASSIGN   2884>>IF
      2884>>IF       2886>>IF       2887>>ASSIGN   2890>>ASSIGN   2891>>ASSIGN   2893>>ASSIGN   2896>>ASSIGN
      2914>>ASSIGN   2917>>ASSIGN   2918>>ASSIGN   2919>>ASSIGN
LOOP
      2605**LABEL    2636--GOTO
LOSTDATA
      2811**LABEL    2619--GOTO     2629--GOTO
MOVFWD
      2546**LABEL    2549--GOTO
MOVKEY IN PROCEDURE NXTREC
      2881**ENTRY    2544--CALL     2565--CALL     2653--CALL     2729--CALL
N
        44**DCL      2661<<ASSIGN   2663>>IF       2665>>DOWHILE  2667<<ASSIGN   2667>>ASSIGN   2676>>DOWHILE
      2678<<ASSIGN   2678>>ASSIGN   2699>>IF
NOKEY
      2817**LABEL    2554--GOTO     2658--GOTO     2709--GOTO     2712--GOTO     2732--CALLALT  2744--GOTO
NOKEY1
      2741**LABEL    2728--CALLALT
NOTFND
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:84   
      2706**LABEL    2552--GOTO     2656--GOTO
NOTFND5
      2710**LABEL    2706--CALLALT
NXT2 IN PROCEDURE NXTREC
      2836**LABEL    2904--GOTO
NXTERR IN PROCEDURE CHKEOP
      2940**LABEL    2935--CALLALT
NXTREC
      2831**PROC     2546--CALL     2737--CALL     2935--CALL
NXTRECND IN PROCEDURE NXTREC
      2902**ENTRY    2664--CALL     2668--CALL     2706--CALL     2724--CALL
PFILEOF
      2761**LABEL    2772--GOTO
PRECEOF
      2698**LABEL    2664--CALLALT  2668--CALLALT
RECS
        39**DCL      2786<<ASSIGN   2787>>ASSIGN   2796>>ASSIGN   2797>>ASSIGN
REDBUF
      2907**PROC     2633--CALL     2856--CALL
RWCOM
      2602**LABEL    2559--GOTO
S$CU$
      2478**DCL      2669>>IF       2681>>IF
TOTBYTES
        40**DCL        41--REDEF    2557<<ASSIGN   2596<<ASSIGN   2597>>IF       2599<<ASSIGN   2600>>ASSIGN
      2607>>IF       2609>>ASSIGN   2610<<ASSIGN   2610>>ASSIGN   2623>>IF
WRCOM
      2568**LABEL    2566--GOTO
WRNOKEY
      2567**LABEL    2564--CALLALT
WX
        45**DCL      2604<<ASSIGN   2604>>ASSIGN   2605>>ASSIGN   2632<<ASSIGN   2634>>ASSIGN   2854<<ASSIGN
      2859>>ASSIGN
ZAP.X
      2382**DCL      2912<<ASSIGN
ZERO
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:85   
      2482**DCL      2702--ASSIGN   2711--ASSIGN
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:86   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMJ$REL File=FMJ$REL.:E05TSI                                  TUE 07/29/97 16:50 Page:87   
              MINI UREF LISTING

B$DOCONT    1988**DCL
B$PS3$      55**DCL
B$ROSEG$      56**DCL
B$USRT$    2479**DCL
CHKBOF IN PROCEDURE NXTREC   2873**LABEL
F$CFU$    1374**DCL
FM$SET$    1375**DCL
FMJ$REL      29**PROC
FM_CFUWAIT    1374**DCL
FM_CFUWGRB    1374**DCL
FM_FRMAX    1371**DCL
FM_GCT    1375**DCL
FM_GIP    1375**DCL
FM_GPSDA    1372**DCL
FM_HASH    1373**DCL
FM_MADSDA    1372**DCL
FM_PADSDA    1372**DCL
FM_SRMAX    1371**DCL
FM_SRZERO    1371**DCL
FM_SYSACCTX    1375**DCL
FM_SYSSETX    1375**DCL
FM_TRUNC    1373**DCL
FM_WSQ    1373**DCL
F_CWLK    1374**DCL
F_CWUSER    1374**DCL
F_DCBLOCK    1373**DCL
HFF$DSIZ    2530**DCL-ENT
I      48**DCL

PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:88   
      529        1        /*T***********************************************************/
      530        2        /*T*                                                         */
      531        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      532        4        /*T*                                                         */
      533        5        /*T***********************************************************/
      534        6        /*P*   NAME:  FMJ$INIT
      535        7        *      PURPOSE:  Initialize the DCB for relative files                       */
      536        8        /*D*     NAME:     FMJ$INIT
      537        9                 CALL:     CALL FMJ$INIT
      538       10                 DESCRIPTION:
      539       11                      Set the DCB to point to the first record in the file.
      540       12                 If the file was left open (probably because we didn't go
      541       13                 through recovery), then log an error to indicate that the
      542       14                 file was left open.
      543       15        */
      544       16                 %EJECT;
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:89   
      545       17        FMJ$INIT: PROC;
      546       18               %INCLUDE B$JIT;
      547      621               %MACRO F$DCB(BASED=BASED);
      548      622               %INCLUDE F$DCB;
      549      671               %MEND;
      550      672               %INCLUDE FM$MACROS;
      551     1047               %INCLUDE F_ERRORS_C;
      552     1287        /* */
      553     1288               %F$DCB(BASED="BASED(JDCB$)");
      554     1338        /* */
      555     1339    1          DCL FMB$LOGERR ENTRY(11);
      556     1340        /* */
      557     1341    1          DCL JDCB$ PTR;
      558     1342    1          DCL B$JIT$ PTR SYMREF READONLY;
      559     1343    1          DCL CFU$ PTR;
      560     1344        /* */
      561     1345    1          JDCB$=B$JIT.DCB$;
      562     1346    1          F$DCB.GTYP=FMGTFILE;
      563     1347    1          F$DCB.CRECNO=1;
      564     1348    1          F$DCB.RPOS='1'B;
      565     1349    1          F$DCB.EOP=3;
      566     1350
      567     1351    1          IF F$DCB.RA THEN
      568     1352    2             DO;   /* LOG ERROR */
      569     1353    2             F$DCB.RA='0'B;
      570     1354    2             CFU$=F$DCB.CFU$;
      571     1355    2             CALL FMB$LOGERR(%E$FREC, 70, 0, 0, CFU$, 4, 5, 7, 0);
      572     1356    2             CALL FMB$LOGERR(%E$FREC, 72, 0, 0, CFU$, 4, 5, 7, 0);
      573     1357    2             END;  /* LOG ERROR */
      574     1358
      575     1359    1          RETURN;
      576     1360    1          END FMJ$INIT;

PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:90   
--  Include file information  --

   F_ERRORS_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMJ$INIT.

   Procedure FMJ$INIT requires 56 words for executable code.
   Procedure FMJ$INIT requires 16 words of local(AUTO) storage.

    No errors detected in file FMJ$REL.:E05TSI    .

PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:91   

 Object Unit name= FMJ$INIT                                   File name= FMJ$REL.:E05TOU
 UTS= JUL 29 '97 16:50:57.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    56     70  FMJ$INIT
    1  RoData even  none    18     22  FMJ$INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  FMJ$INIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std      11 FMB$LOGERR
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                                B_VECTNIL
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:92   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:93   


      529        1        /*T***********************************************************/
      530        2        /*T*                                                         */
      531        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      532        4        /*T*                                                         */
      533        5        /*T***********************************************************/
      534        6        /*P*   NAME:  FMJ$INIT
      535        7        *      PURPOSE:  Initialize the DCB for relative files                       */
      536        8        /*D*     NAME:     FMJ$INIT
      537        9                 CALL:     CALL FMJ$INIT
      538       10                 DESCRIPTION:
      539       11                      Set the DCB to point to the first record in the file.
      540       12                 If the file was left open (probably because we didn't go
      541       13                 through recovery), then log an error to indicate that the
      542       14                 file was left open.
      543       15        */
      544       16                 %EJECT;
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:94   
      545       17        FMJ$INIT: PROC;

     17  0 000000   000000 700200 xent  FMJ$INIT     TSX0  ! X66_AUTO_0
         0 000001   000020 000000                    ZERO    16,0

      546       18               %INCLUDE B$JIT;
      547      621               %MACRO F$DCB(BASED=BASED);
      548      622               %INCLUDE F$DCB;
      549      671               %MEND;
      550      672               %INCLUDE FM$MACROS;
      551     1047               %INCLUDE F_ERRORS_C;
      552     1287        /* */
      553     1288               %F$DCB(BASED="BASED(JDCB$)");
      554     1338        /* */
      555     1339    1          DCL FMB$LOGERR ENTRY(11);
      556     1340        /* */
      557     1341    1          DCL JDCB$ PTR;
      558     1342    1          DCL B$JIT$ PTR SYMREF READONLY;
      559     1343    1          DCL CFU$ PTR;
      560     1344        /* */
      561     1345    1          JDCB$=B$JIT.DCB$;

   1345  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200003 756100                    STQ     JDCB$,,AUTO

      562     1346    1          F$DCB.GTYP=FMGTFILE;

   1346  0 000005   200003 471500                    LDP1    JDCB$,,AUTO
         0 000006   100064 236100                    LDQ     52,,PR1
         0 000007   000000 376000 1                  ANQ     0
         0 000010   030000 276003                    ORQ     12288,DU
         0 000011   100064 756100                    STQ     52,,PR1

      563     1347    1          F$DCB.CRECNO=1;

   1347  0 000012   000001 235007                    LDA     1,DL
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:95   
         0 000013   100071 755100                    STA     57,,PR1

      564     1348    1          F$DCB.RPOS='1'B;

   1348  0 000014   010000 236007                    LDQ     4096,DL
         0 000015   100064 256100                    ORSQ    52,,PR1

      565     1349    1          F$DCB.EOP=3;

   1349  0 000016   003000 236003                    LDQ     1536,DU
         0 000017   100064 256100                    ORSQ    52,,PR1

      566     1350
      567     1351    1          IF F$DCB.RA THEN

   1351  0 000020   100064 236100                    LDQ     52,,PR1
         0 000021   020000 316007                    CANQ    8192,DL
         0 000022   000067 600000 0                  TZE     s:1359

      568     1352    2             DO;   /* LOG ERROR */

      569     1353    2             F$DCB.RA='0'B;

   1353  0 000023   000001 236000 1                  LDQ     1
         0 000024   100064 356100                    ANSQ    52,,PR1

      570     1354    2             CFU$=F$DCB.CFU$;

   1354  0 000025   100066 236100                    LDQ     54,,PR1
         0 000026   200004 756100                    STQ     CFU$,,AUTO

      571     1355    2             CALL FMB$LOGERR(%E$FREC, 70, 0, 0, CFU$, 4, 5, 7, 0);

   1355  0 000027   000005 236000 1                  LDQ     5
         0 000030   200016 756100                    STQ     CFU$+10,,AUTO
         0 000031   000006 237000 1                  LDAQ    6
         0 000032   200014 757100                    STAQ    CFU$+8,,AUTO
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:96   
         0 000033   000010 236000 1                  LDQ     8
         0 000034   200013 756100                    STQ     CFU$+7,,AUTO
         0 000035   200004 633500                    EPPR3   CFU$,,AUTO
         0 000036   200012 453500                    STP3    CFU$+6,,AUTO
         0 000037   000012 237000 1                  LDAQ    10
         0 000040   200010 757100                    STAQ    CFU$+4,,AUTO
         0 000041   000014 237000 1                  LDAQ    12
         0 000042   200006 757100                    STAQ    CFU$+2,,AUTO
         0 000043   200006 630500                    EPPR0   CFU$+2,,AUTO
         0 000044   000002 631400 1                  EPPR1   2
         0 000045   000000 701000 xent               TSX1    FMB$LOGERR
         0 000046   000000 011000                    NOP     0

      572     1356    2             CALL FMB$LOGERR(%E$FREC, 72, 0, 0, CFU$, 4, 5, 7, 0);

   1356  0 000047   000005 236000 1                  LDQ     5
         0 000050   200016 756100                    STQ     CFU$+10,,AUTO
         0 000051   000006 237000 1                  LDAQ    6
         0 000052   200014 757100                    STAQ    CFU$+8,,AUTO
         0 000053   000010 236000 1                  LDQ     8
         0 000054   200013 756100                    STQ     CFU$+7,,AUTO
         0 000055   200004 630500                    EPPR0   CFU$,,AUTO
         0 000056   200012 450500                    STP0    CFU$+6,,AUTO
         0 000057   000012 237000 1                  LDAQ    10
         0 000060   200010 757100                    STAQ    CFU$+4,,AUTO
         0 000061   000020 237000 1                  LDAQ    16
         0 000062   200006 757100                    STAQ    CFU$+2,,AUTO
         0 000063   200006 630500                    EPPR0   CFU$+2,,AUTO
         0 000064   000002 631400 1                  EPPR1   2
         0 000065   000000 701000 xent               TSX1    FMB$LOGERR
         0 000066   000000 011000                    NOP     0

      573     1357    2             END;  /* LOG ERROR */

      574     1358
      575     1359    1          RETURN;

PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:97   
   1359  0 000067   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   743777 777777   777777 757777   000011 000000   000000 000046    ...............&
   1     004   000000 000106   000002 006000   000007 006000   000011 006000    ...F............
   1     010   000006 006000   000000 000000   000002 006000   000002 006000    ................
   1     014   000003 006000   000004 006000   000000 000110   000000 000000    ...........H....
   1     020   000003 006000   000016 006000                                    ........
      576     1360    1          END FMJ$INIT;

PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:98   
--  Include file information  --

   F_ERRORS_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMJ$INIT.
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:99   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 CFU$                       3-0-0/w PTR         r     1 JDCB$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure FMJ$INIT requires 56 words for executable code.
   Procedure FMJ$INIT requires 16 words of local(AUTO) storage.

    No errors detected in file FMJ$REL.:E05TSI    .
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:100  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:101  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       439**DCL       439--REDEF
B$JIT.DCB$
       513**DCL      1345>>ASSIGN
B$JIT.ERR.MID
       346**DCL       346--REDEF
B$JIT.JRESPEAK
       507**DCL       508--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       616**DCL       616--REDEF     617--REDEF
B$JIT.PNR
       520**DCL       520--REDEF
B$JIT.TSLINE
       614**DCL       615--REDEF
B$JIT$
      1342**DCL       340--IMP-PTR  1345>>ASSIGN
CFU$
      1343**DCL      1354<<ASSIGN   1355<>CALL     1356<>CALL
F$DCB.ACTPOS
      1314**DCL      1314--REDEF
F$DCB.ARS
      1289**DCL      1289--REDEF
F$DCB.ATTR
      1307**DCL      1308--REDEF
F$DCB.BORROW
      1322**DCL      1322--REDEF    1322--REDEF    1322--REDEF
F$DCB.CFU$
      1323**DCL      1354>>ASSIGN
F$DCB.CRECNO
      1326**DCL      1347<<ASSIGN
F$DCB.DCBNAME.L
      1336**DCL      1336--IMP-SIZ
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:102  
F$DCB.EOMCHAR
      1293**DCL      1293--REDEF
F$DCB.EOP
      1318**DCL      1349<<ASSIGN
F$DCB.FLDID
      1317**DCL      1317--REDEF
F$DCB.FORM$
      1311**DCL      1311--REDEF
F$DCB.FSECT
      1327**DCL      1327--REDEF
F$DCB.FSN
      1304**DCL      1304--REDEF    1304--REDEF    1305--REDEF
F$DCB.GTYP
      1318**DCL      1346<<ASSIGN
F$DCB.HEADER$
      1310**DCL      1310--REDEF
F$DCB.IXTNSIZE
      1308**DCL      1308--REDEF
F$DCB.LASTSTA$
      1298**DCL      1298--REDEF
F$DCB.LVL
      1323**DCL      1323--REDEF
F$DCB.NAME.C
      1298**DCL      1298--REDEF
F$DCB.NOEOF
      1319**DCL      1319--REDEF
F$DCB.NRECS
      1309**DCL      1309--REDEF
F$DCB.NRECX
      1328**DCL      1328--REDEF
F$DCB.OHDR
      1320**DCL      1320--REDEF
F$DCB.ORG
      1303**DCL      1303--REDEF
F$DCB.PRECNO
      1326**DCL      1326--REDEF
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:103  
F$DCB.RA
      1320**DCL      1351>>IF       1353<<ASSIGN
F$DCB.RCSZ
      1331**DCL      1331--REDEF
F$DCB.RES
      1299**DCL      1299--REDEF
F$DCB.RPOS
      1320**DCL      1348<<ASSIGN
F$DCB.SETX
      1311**DCL      1311--REDEF
F$DCB.TAB$
      1310**DCL      1311--REDEF
F$DCB.TDA
      1325**DCL      1325--REDEF
F$DCB.WSN
      1300**DCL      1300--REDEF
FMB$LOGERR
      1339**DCL-ENT  1355--CALL     1356--CALL
JDCB$
      1341**DCL      1289--IMP-PTR  1345<<ASSIGN   1346>>ASSIGN   1347>>ASSIGN   1348>>ASSIGN   1349>>ASSIGN
      1351>>IF       1353>>ASSIGN   1354>>ASSIGN
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:104  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMJ$INIT File=FMJ$REL.:E05TSI                                 TUE 07/29/97 16:50 Page:105  
              MINI UREF LISTING

FMJ$INIT      17**PROC
