VERSION B06

PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:1    
        1        1        /*M* VMB$USE - code to impliment the USE command */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,DCI=4 */
        8        8        /*F*
        9        9             NAME: VMB$USE_SPECIFIED
       10       10             PURPOSE:
       11       11                   To open the folder specified on the USE command.
       12       12             DESCRIPTION:
       13       13                   This routine will open the file corresponding to the
       14       14                   specified address on the USE command.
       15       15
       16       16                   This routine has the following parameters:
       17       17
       18       18                      ADDRESS$         - Ptr to parse tree describing address
       19       19                                         of folder to USE.
       20       20                      USER_NAME        - address spec which describes this user.
       21       21                      VM_FOLDER_INFO   - structure containing info about the
       22       22                                         folder which will be opened.
       23       23                      DCB#             - DCB to use to open the folder.
       24       24                      FUN              - FUN to use to open the folder.
       25       25                                         Default is UPDATE. (optional)
       26       26                        SKIPERR                If set, no error messages are
       27       27                                               printed.  Optional, default is reset.
       28       28        */
       29       29        VMB$USE_SPECIFIED: PROC (ADDRESS$,USER_NAME,VM_FOLDER_INFO,DCB#,VM_SEARCH_INFO,FUN,
                29            SKIPERR) ALTRET;
       30       30        /***** Include files *****/
       31       31          %INCLUDE B$JIT;
       32      634          %INCLUDE B_ERRORS_C;
       33     1761          %INCLUDE CP_6;
       34     7320          %INCLUDE CP_6_SUBS;
       35     7860          %INCLUDE VM_SUBS_C;
       36     8120          %INCLUDE VM_PERR_C;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:2    
       37     8415          %INCLUDE VM_MACRO_C;
       38     9683          %INCLUDE VM_DATA_R;
       39    10114        /***** Parameters *****/
       40    10115    1   DCL ADDRESS$ PTR;
       41    10116          %TEXTC (NAME=USER_NAME,STCLASS=" ");
       42    10121          %VM_FOLDER_INFO (STCLASS=" ");
       43    10173    1   DCL DCB# UBIN WORD;
       44    10174          %VM_SEARCH_INFO (STCLASS=" ");
       45    10201    1   DCL FUN SBIN WORD;
       46    10202    1   DCL SKIPERR BIT(1);
       47    10203        /***** External routines *****/
       48    10204    1   DCL VMA$ADDRESS ENTRY(5) ALTRET;
       49    10205    1   DCL VMA$ERRMSG ENTRY(5);
       50    10206    1   DCL VMA$GET_NEXT_ENTRY ENTRY(4) ALTRET;
       51    10207    1   DCL VMA$GET_LIST ENTRY(3) ALTRET;
       52    10208    1   DCL VMA$GET_SITE_NAME ENTRY (4) ALTRET;
       53    10209    1   DCL VMA$OPEN_FOLDER ENTRY(5) ALTRET;
       54    10210    1   DCL VMB$TESTREG ENTRY(1) ALTRET;
       55    10211        /***** Local variables *****/
       56    10212    1   DCL SPEC$ PTR AUTO;
       57    10213    1   DCL NEXT1$ PTR AUTO;
       58    10214    1   DCL NEXT2$ PTR AUTO;
       59    10215    1   DCL FOUND_FLAG# BIT(1) AUTO;
       60    10216    1   DCL OPEN_FLAG# BIT(1) AUTO;
       61    10217    1   DCL TBIT BIT(1) AUTO;
       62    10218    1   DCL TFUN UBIN AUTO;
       63    10219    1   DCL SITENAME CHAR (8);
       64    10220    1   DCL FOLDER CHAR (25);
       65    10221    1   dcl IA sbin;
       66    10222        %VLP_ERRCODE (FPTN=ERROR);
       67    10267    1   DCL EDCB# UBIN STATIC;
       68    10268        %B$TCB (STCLASS="BASED(B$TCB$)");
       69    10271        %B$ALT;
       70    10279          %VM_KEYTYPES;
       71    10300          %VM_ADDTYPES;
       72    10304          %VM_RADDRESS (NAME=VM_RADDRESS1,STCLASS=AUTO);
       73    10339          %VM_RADDRESS (NAME=VM_RADDRESS2,STCLASS=AUTO);
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:3    
       74    10374          %VM_UADDRESS (NAME=VM_UADDRESS1,STCLASS=AUTO);
       75    10411          %VM_UADDRESS (NAME=VM_UADDRESS2,STCLASS=AUTO);
       76    10448          %VM_USERKEY;
       77    10464        /***** Based structures *****/
       78    10465          %VM_ADD_HEAD (NAME=VM_LIST_HEAD,STCLASS="BASED(VM_ADDLIST$)");
       79    10494          %VM_ADD_HEAD (NAME=VM_ADD_HEAD,STCLASS="BASED(VM_ADDLIST$)");
       80    10523          %VM_RADDRESS (NAME=VM$RADDRESS,STCLASS=BASED);
       81    10558          %VM_UADDRESS (NAME=VM$UADDRESS,STCLASS=BASED);
       82    10595          %F$DCB;
       83    10652        /***** Error codes *****/
       84    10653            %VLP_ERRCODE (FPTN=E_TOOMANYADDRESSES,FCG="VM",MID="B",
       85    10654            ERR#=%E$TOOMANYADDRESSES,STCLASS=CONSTANT);
       86    10699        /*E*    ERROR: VMB-E$TOOMANYADDRESSES-0
       87    10700                MESSAGE: The address specified is ambigous.
       88    10701                MESSAGE1: The address expands into more than one address.
       89    10702        */
       90    10703              %VLP_ERRCODE (FPTN=E_NULLLIST,FCG="VM",MID="B",
       91    10704              ERR#=%E$NULLLIST,STCLASS=CONSTANT);
       92    10749        /*E*    ERROR: VMB-E$NULLLIST-0
       93    10750                MESSAGE: The address specified is a null list.
       94    10751        */
       95    10752              %VLP_ERRCODE (FPTN=E_NOTRESOLVED,FCG="VM",MID="B",
       96    10753              ERR#=%E$NOTRESOLVED,STCLASS=CONSTANT);
       97    10798        /*E*    ERROR: VMB-E$NOTRESOLVED-0
       98    10799                MESSAGE: Unable to resolve address %U1
       99    10800        */
      100    10801              %VLP_ERRCODE (FPTN=E_BADUSE,FCG="VM",MID="B",
      101    10802              ERR#=%E$BADUSE,STCLASS=CONSTANT);
      102    10847        /*E*    ERROR: VMB-E$BADUSE-0
      103    10848                MESSAGE: Unable to USE that address.
      104    10849        */
      105    10850              %VLP_ERRCODE (FPTN=E_NOUSER,FCG="VM",MID="B",
      106    10851              ERR#=%E$NOUSER,STCLASS=CONSTANT);
      107    10896        /*E*    ERROR: VMB-E$NOUSER-0
      108    10897                MESSAGE: User is not defined.
      109    10898        */
      110    10899              %VLP_ERRCODE (FPTN=E_ILLWSN,FCG="VM",MID="B",
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:4    
      111    10900              ERR#=%E$ILLWSN,STCLASS=CONSTANT);
      112    10945        /*E*    ERROR: VMB-E$ILLWSN-0
      113    10946                MESSAGE: Foreign SITENAMEs are not allowed.
      114    10947        */
      115    10948              %VLP_ERRCODE (FPTN=E_NOFOLDER,FCG="VM",MID="B",
      116    10949              ERR#=%E$NOFOLDER,STCLASS=CONSTANT);
      117    10994        /*E*    ERROR: VMB-E$NOFOLDER-0
      118    10995                MESSAGE: Folder does not exist.
      119    10996        */
      120    10997        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:5    
      121    10998        /*
      122    10999             ***** VM_RADDRESS1 and VM_UADDRESS1 are used to contain
      123    11000                   intermediate results. For example, for picking the
      124    11001                   address spec out of the list built by VMA$ADDRESS.
      125    11002                   VM_RADDRESS2 and VM_UADDRESS2 are used to take the
      126    11003                   final value of a user def or resolved address and
      127    11004                   have info from VM_RADDRESS1 or VM_UADDRESS1 merged
      128    11005                   in to create the final form ...
      129    11006        */
      130    11007        /*
      131    11008             ***** Set a flag so that the file will be opened ...
      132    11009        */
      133    11010    1         OPEN_FLAG# = %YES#;
      134    11011        /*
      135    11012             ***** Initialize VM_FOLDER_INFO ...
      136    11013        */
      137    11014    1       VM_FOLDER_INFO.USER_NAME.COUNT = 0;
      138    11015    1       VM_FOLDER_INFO.USER_NAME.TEXT = ' ';
      139    11016    1       VM_FOLDER_INFO.FLAGS = %NO#;
      140    11017        /*
      141    11018             ***** Change the parse tree into an internal address spec ...
      142    11019        */
      143    11020    1       CALL VMA$ADDRESS (ADDRESS$,USER_NAME,VM_SEARCH_INFO,%YES#,%NO#)
      144    11021    2       WHENALTRETURN DO;
      145    11022    2           IF NOT VM_LIST_HEAD.FLAGS.ERR#
      146    11023    2           THEN GOTO E_PMME;
      147    11024    2       END;
      148    11025    1       GOTO COMMON_CODE;
      149    11026        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:6    
      150    11027        /*F*
      151    11028             NAME: VMB$USE_SRCH
      152    11029             PURPOSE:
      153    11030                   To open a SRCH folder.
      154    11031             DESCRIPTION:
      155    11032                   This routine will open the passed DCB to the desired folder.
      156    11033
      157    11034                   This routine has the following parameters:
      158    11035
      159    11036                      ADDRESS$         - Not used in this routine.
      160    11037                      USER_NAME        - Ditto
      161    11038                      VM_FOLDER_INFO   - structure containing info about the
      162    11039                                         folder which will be opened.
      163    11040                      DCB#             - DUCB to open.
      164    11041                      VM_SEARCH_INFO   - describes how to resolve addresses.
      165    11042                      FUN              - FUN to be used to open the folder.
      166    11043                                         Default is UPDATE. (optional)
      167    11044        */
      168    11045    1   VMB$USE_SRCH: ENTRY (ADDRESS$,USER_NAME,VM_FOLDER_INFO,DCB#,VM_SEARCH_INFO,FUN,
             11045            SKIPERR) ALTRET;
      169    11046        /*
      170    11047             ***** Set a flag so that the file will be opened ...
      171    11048        */
      172    11049    1       OPEN_FLAG# = %YES#;
      173    11050    1       VM_FOLDER_INFO.USER_NAME.COUNT = 0;
      174    11051    1       VM_FOLDER_INFO.USER_NAME.TEXT = ' ';
      175    11052    1       VM_FOLDER_INFO.FLAGS = %NO#;
      176    11053        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:7    
      177    11054    1   COMMON_CODE:
      178    11055        /*
      179    11056             ***** If the address turned out to be a null list,
      180    11057                   then complain...
      181    11058        */
      182    11059    1       IF VM_LIST_HEAD.NUM_ENTRIES = 0
      183    11060    1       THEN
      184    11061    2       DO;
      185    11062    2           CALL VMA$ERRMSG (E_NULLLIST);
      186    11063    2           ALTRETURN;
      187    11064    2       END;
      188    11065        /*
      189    11066             ***** If there is an error, then report it ...
      190    11067                   Only unresolved addresses will be so flagged.
      191    11068        */
      192    11069    1       IF VM_LIST_HEAD.HEAD$ -> VM$UADDRESS.FLAGS.UNDEF#
      193    11070    1       THEN
      194    11071    2       DO;
      195    11072    2           CALL VMA$ERRMSG (E_NOTRESOLVED,,
      196    11073    2             VECTOR(VM_LIST_HEAD.HEAD$ -> VM$UADDRESS.USER_NAME));
      197    11074    2           ALTRETURN;
      198    11075    2       END;
      199    11076        /*
      200    11077             ***** Now pick the entry to expand full
      201    11078                   i.e., into a user def ...
      202    11079        */
      203    11080    1       NEXT1$ = VM_ADD_HEAD.HEAD$;
      204    11081    1       FOUND_FLAG# = %NO#;
      205    11082    2       DO FOREVER;
      206    11083    2           CALL VMA$GET_NEXT_ENTRY (VM_UADDRESS1,VM_RADDRESS1,NEXT1$,VM_ADDLIST$)
      207    11084    2           WHENALTRETURN
      208    11085    3           DO;
      209    11086    3               IF FOUND_FLAG#
      210    11087    3               THEN                  /* All is well */
      211    11088    3                   GOTO OPEN_FOLDER;
      212    11089    3               ELSE                  /* Nothing found */
      213    11090    3                   GOTO E_NOUSER;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:8    
      214    11091    3           END;
      215    11092    2           IF VM_RADDRESS1.SITENAME = ' '
      216    11093    2             OR VM_RADDRESS1.SITENAME = VM_SITENAME
      217    11094    2           THEN                       /* Found one at local site */
      218    11095    3           DO;
      219    11096    3               IF FOUND_FLAG#
      220    11097    3               THEN
      221    11098    4               DO;
      222    11099    4                   CALL VMA$ERRMSG (E_TOOMANYADDRESSES);
      223    11100    4                   ALTRETURN;
      224    11101    4               END;
      225    11102    3               FOUND_FLAG# = %YES#;
      226    11103    3               IF VM_RADDRESS1.TYPE = %VM_ADD_RESOLVED
      227    11104    3               THEN
      228    11105    4               DO;
      229    11106    4                   VM_RADDRESS2 = VM_RADDRESS1;
      230    11107    4                   SPEC$ = ADDR(VM_RADDRESS2);
      231    11108    4                   CALL SET_FLAGS;
      232    11109    4               END;
      233    11110    3               ELSE
      234    11111    4               DO;
      235    11112    4                   CALL RESOLVE_USER (VM_UADDRESS1) ALTRET(E_NOUSER);
      236    11113        /*
      237    11114             ***** Pick the folder to open ...
      238    11115        */
      239    11116    4                   CALL PICK_ADDRESS ALTRET(E_NOUSER);
      240    11117    4               END;
      241    11118    3           END;
      242    11119    2       END;                            /* Do forever ... end */
      243    11120        /*
      244    11121             ***** Now open the folder ...
      245    11122        */
      246    11123    1   OPEN_FOLDER:
      247    11124    1       IF SPEC$ -> VM$RADDRESS.ACCT ~= ' '
      248    11125    1       THEN
      249    11126    1           VM_FOLDER_INFO.ACCT = SPEC$ -> VM$RADDRESS.ACCT;
      250    11127    1       ELSE
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:9    
      251    11128    1           VM_FOLDER_INFO.ACCT = B$JIT.FACCN;
      252    11129        /**/
      253    11130    1       IF SPEC$ -> VM$RADDRESS.NOMAD.DELIM = ' '
      254    11131    1         AND SPEC$ -> VM$RADDRESS.NOMAD.PSID ~= ' '
      255    11132    2       THEN DO;
      256    11133
      257    11134    2           VM_FOLDER_INFO.PSID = SPEC$ -> VM$RADDRESS.NOMAD.PSID;
      258    11135    2           FOLDER = SPEC$ -> VM$RADDRESS.NOMAD.FOLDER;
      259    11136
      260    11137    2       END;
      261    11138
      262    11139    2       ELSE DO;
      263    11140
      264    11141    2           VM_FOLDER_INFO.PSID = ' ';
      265    11142    2           FOLDER = SPEC$ -> VM$RADDRESS.FOLDER;
      266    11143
      267    11144    2       END;
      268    11145
      269    11146    1       IF FOLDER ~= ' '
      270    11147    1       THEN
      271    11148    1           VM_FOLDER_INFO.FOLDER = FOLDER;
      272    11149    1       ELSE
      273    11150    1           VM_FOLDER_INFO.FOLDER = 'CENTRAL';
      274    11151        /**/
      275    11152    1       SITENAME = SPEC$ -> VM$RADDRESS.SITENAME;
      276    11153    1       CALL VMA$GET_SITE_NAME (SPEC$ -> VM$RADDRESS.SITENAME, SITENAME);
      277    11154    1       IF SITENAME ~= ' ' AND SITENAME ~= VM_SITENAME
      278    11155    1       THEN
      279    11156    2       DO;                           /* Illegal sitename (for A00) */
      280    11157    2           CALL VMA$ERRMSG (E_ILLWSN);
      281    11158    2           ALTRETURN;
      282    11159    2       END;
      283    11160        /*
      284    11161             ***** If the file is not to be opened,
      285    11162                   then just return now ...
      286    11163        */
      287    11164    1   OPEN_NOW:
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:10   
      288    11165    1       IF OPEN_FLAG# = %NO#
      289    11166    1       THEN
      290    11167    1           RETURN;
      291    11168    1       IF ADDR(FUN) ~= ADDR(NIL)
      292    11169    1       THEN
      293    11170    1           TFUN = FUN;
      294    11171    1       ELSE
      295    11172    1           TFUN = %UPDATE#;
      296    11173    1       CALL VMA$OPEN_FOLDER (VM_FOLDER_INFO,SPEC$,DCB#,%OLDFILE#,TFUN) ALTRET(E_OPEN);
      297    11174    1       RETURN;
      298    11175        /*
      299    11176             ***** Try again, with fun=in ...
      300    11177        */
      301    11178    1   E_OPEN:
      302    11179    1       IF TFUN = %UPDATE#
      303    11180    2       THEN DO;
      304    11181    2           CALL VMA$OPEN_FOLDER (VM_FOLDER_INFO,SPEC$,DCB#,%OLDFILE#,%IN#) ALTRET(
             11181                    E_OPEN1);
      305    11182    2           RETURN;
      306    11183    2       END;
      307    11184    1   E_OPEN1:
      308    11185    1       IF ADDR(SKIPERR)~=ADDR(NIL) THEN TBIT = SKIPERR;
      309    11186    1       ELSE TBIT = '0'B;
      310    11187    2       IF ~TBIT THEN DO;
      311    11188    2           ERROR = B$TCB.ALT$->B$ALT.ERR;
      312    11189    2           IF ERROR.ERR# = %E$NOFILE
      313    11190    2           THEN
      314    11191    2               CALL VMA$ERRMSG (E_NOFOLDER);
      315    11192    2           ELSE
      316    11193    2               CALL VMA$ERRMSG (ERROR,DCB#);
      317    11194    2       END;
      318    11195        /**/
      319    11196    1   E_PMME:
      320    11197    1       IF ADDR(SKIPERR)~=ADDR(NIL) THEN TBIT=SKIPERR;
      321    11198    1       ELSE TBIT = '0'B;
      322    11199    1       IF ~ TBIT THEN
      323    11200    1           CALL VMA$ERRMSG (E_BADUSE);
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:11   
      324    11201    1       ALTRETURN;
      325    11202        /**/
      326    11203    1   E_NOUSER:
      327    11204    1       IF ADDR(SKIPERR)~=ADDR(NIL) THEN TBIT = SKIPERR;
      328    11205    1       ELSE TBIT = '0'B;
      329    11206    1       IF ~ TBIT THEN
      330    11207    1           CALL VMA$ERRMSG (E_NOUSER);
      331    11208    1       ALTRETURN;
      332    11209        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:12   
      333    11210        /*F*
      334    11211             NAME: VMB$FIND_DEFAULT
      335    11212             PURPOSE:
      336    11213                   To find the CENTRAL folder for current user.
      337    11214             DESCRIPTION:
      338    11215                   This routine will find but not open the CENTRAL FOLDER
      339    11216                   for the current user.
      340    11217
      341    11218                   This routine has the following parameters:
      342    11219
      343    11220                      ADDRESS$         - Not used in this routine.ing address
      344    11221                      USER_NAME        - address spec which describes this user.
      345    11222                      VM_FOLDER_INFO   - structure containing info about the
      346    11223                                         folder which will be opened.
      347    11224                      DCB#             - UNUSED.
      348    11225                      VM_SEARCH_INFO   - describes how to resolve addresses.
      349    11226                      FUN              - FUN to be used to opee the folder.
      350    11227                                         Default is UPDATE. (optional)
      351    11228        */
      352    11229    1   VMB$FIND_DEFAULT: ENTRY (ADDRESS$,USER_NAME,VM_FOLDER_INFO,DCB#,VM_SEARCH_INFO,FUN,
             11229            SKIPERR) ALTRET;
      353    11230        /*
      354    11231             ***** Set a flag so that the file will not be opened ...
      355    11232        */
      356    11233    1       OPEN_FLAG# = %NO#;
      357    11234    1       GOTO INITIALIZE_DEFAULT;
      358    11235        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:13   
      359    11236        /*F*
      360    11237             NAME: VMB$USE_DEFAULT
      361    11238             PURPOSE:
      362    11239                   To open the default or CENTRAL folder for the current user.
      363    11240             DESCRIPTION:
      364    11241                   This routine will find and open the CENTRAL FOLDER for
      365    11242                   the current user.
      366    11243
      367    11244                   This routine has the following parameters:
      368    11245
      369    11246                      ADDRESS$         - Not used in this routine.ing address
      370    11247                      USER_NAME        - address spec which describes this user.
      371    11248                      VM_FOLDER_INFO   - structure containing info about the
      372    11249                                         folder which will be opened.
      373    11250                      DCB#             - number of DCB to be opened.
      374    11251                      VM_SEARCH_INFO   - describes how to resolve addresses.
      375    11252                      FUN              - FUN to be used to opee the folder.
      376    11253                                         Default is UPDATE. (optional)
      377    11254        */
      378    11255    1   VMB$USE_DEFAULT: ENTRY (ADDRESS$,USER_NAME,VM_FOLDER_INFO,DCB#,VM_SEARCH_INFO,FUN,
             11255            SKIPERR) ALTRET;
      379    11256        /*
      380    11257             ***** Set a flag so that the file will be opened ...
      381    11258        */
      382    11259    1       OPEN_FLAG# = %YES#;
      383    11260        /*
      384    11261             ***** Initialize VM_FOLDER_INFO ...
      385    11262        */
      386    11263    1   INITIALIZE_DEFAULT:
      387    11264    1       VM_FOLDER_INFO.USER_NAME.COUNT = 0;
      388    11265    1       VM_FOLDER_INFO.USER_NAME.TEXT = ' ';
      389    11266    1       VM_FOLDER_INFO.FLAGS = %NO#;
      390    11267        /*
      391    11268             ***** Determine whether to use VM_UADDRESS or VM_RADDRESS ...
      392    11269        */
      393    11270    2       call VMB$TESTREG(USER_NAME) whenreturn do;
      394    11271
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:14   
      395    11272                                                /* Use VM_UADDRESS1 */
      396    11273    2           VM_UADDRESS1.USER_NAME.TEXT = USER_NAME.TEXT;
      397    11274    2           VM_UADDRESS1.USER_NAME.COUNT = USER_NAME.SIZ;
      398    11275    2           VM_UADDRESS1.FOLDER = ' ';
      399    11276    2           VM_UADDRESS1.PASS = ' ';
      400    11277    2           VM_UADDRESS1.SITENAME = ' ';
      401    11278    2           call RESOLVE_USER(VM_UADDRESS1) altret(E_NOUSER);
      402    11279    2           call PICK_ADDRESS altret(E_NOUSER);
      403    11280    2           goto OPEN_FOLDER;
      404    11281    2       end;
      405    11282
      406    11283    2       whenaltreturn do;               /*  Use  VM_RADDRESS    */
      407    11284    2           VM_RADDRESS1.FOLDER   = ' ';
      408    11285    2           VM_RADDRESS1.PASS     = ' ';
      409    11286    2           VM_RADDRESS1.SITENAME = ' ';
      410    11287    3           if substr(USER_NAME.TEXT,,1) ~= '.' then do;
      411    11288                                                /**  must be DP#psn.acct  **/
      412    11289    3               call index(IA,'.',USER_NAME.TEXT);
      413    11290    3               VM_RADDRESS1.ACCT = substr(USER_NAME.TEXT,IA+1);
      414    11291    3               VM_RADDRESS1.NOMAD.PSID = substr(USER_NAME.TEXT,3,IA-3);
      415    11292    3           end;
      416    11293    2           else VM_RADDRESS1.ACCT = SUBSTR(USER_NAME.TEXT,1);
      417    11294    2           VM_FOLDER_INFO.FLAGS.ACCT_SPEC = %YES#;
      418    11295    2           SPEC$ = addr(VM_RADDRESS1);
      419    11296    2           call SET_FLAGS;
      420    11297    2           goto OPEN_FOLDER;
      421    11298    2       end;
      422    11299        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:15   
      423    11300        /*F*
      424    11301             NAME: VMB$USE_SAME
      425    11302             PURPOSE:
      426    11303                   To open the specified DCB to same place as VM_FOLDER_INFO.
      427    11304             DESCRIPTION:
      428    11305                   This routine will find but not open the CENTRAL FOLDER
      429    11306                   for the current user.
      430    11307
      431    11308                   This routine has the following parameters:
      432    11309
      433    11310                      ADDRESS$         - Not used in this routine.
      434    11311                      USER_NAME        - Not used in this routine.
      435    11312                      VM_FOLDER_INFO   - structure containing info about the
      436    11313                                         folder which will be opened.
      437    11314                      DCB#             - DCB to use to open the folder.
      438    11315                      VM_SEARCH_INFO   - Not used in this routine.
      439    11316                      FUN              - FUN to be used to open the folder.
      440    11317                                         Default is UPDATE. (optional)
      441    11318        */
      442    11319    1   VMB$USE_SAME: ENTRY (ADDRESS$,USER_NAME,VM_FOLDER_INFO,DCB#,VM_SEARCH_INFO,FUN,
             11319            SKIPERR) ALTRET;
      443    11320        /*
      444    11321             ***** Set a flag so that the file will be opened ...
      445    11322        */
      446    11323    1       OPEN_FLAG# = %YES#;
      447    11324        /*
      448    11325             ***** Move info into VM_RADDRESS2 ...
      449    11326        */
      450    11327    1       VM_RADDRESS2.ACCT = VM_FOLDER_INFO.ACCT;
      451    11328    1       VM_RADDRESS2.FOLDER = VM_FOLDER_INFO.FOLDER;
      452    11329    1       VM_RADDRESS2.PASS = VM_FOLDER_INFO.PASS;
      453    11330    1       VM_RADDRESS2.SITENAME = VM_FOLDER_INFO.SITENAME;
      454    11331    1       SPEC$ = ADDR(VM_RADDRESS2);
      455    11332    1       GOTO OPEN_NOW;
      456    11333        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:16   
      457    11334    1   RESOLVE_USER: PROC (ADDR_SPEC) ALTRET;
      458    11335        %VM_UADDRESS (NAME=ADDR_SPEC,STCLASS=" ");
      459    11372        /*
      460    11373             ***** M$MAIL_GLOBAL must be open in order to
      461    11374                   resolve any user definition ...
      462    11375        */
      463    11376    2       IF DCBADDR(M$MAIL_GLOBAL_NUM) -> F$DCB.FCD# = %NO#
      464    11377    2       THEN                            /* Impossible to resolve this user */
      465    11378    2           ALTRETURN;
      466    11379    2       VM_FOLDER_INFO.USER_NAME.COUNT = ADDR_SPEC.USER_NAME.COUNT;
      467    11380    2       VM_FOLDER_INFO.USER_NAME.TEXT = SUBSTR(ADDR_SPEC.USER_NAME.TEXT,
      468    11381    2         0,ADDR_SPEC.USER_NAME.COUNT);
      469    11382    2       VM_USERKEY.TEXT = SUBSTR(ADDR_SPEC.USER_NAME.TEXT,0,
      470    11383    2         ADDR_SPEC.USER_NAME.COUNT);
      471    11384    2       CALL VMA$GET_LIST (VM_USERKEY,VM_WORK$,M$MAIL_GLOBAL_NUM)
      472    11385    2       WHENALTRETURN
      473    11386    3       DO;
      474    11387    3           ALTRETURN;
      475    11388    3       END;
      476    11389    2       RETURN;
      477    11390    2   END RESOLVE_USER;
      478    11391        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:17   
      479    11392    1   PICK_ADDRESS: PROC ALTRET;
      480    11393        /*
      481    11394             ***** If the definition contains multiple definitions
      482    11395                   then chose which one to open based upon the following
      483    11396                   rules.
      484    11397
      485    11398                   1) if sitename specifies a foreign site,
      486    11399                      then this address cannot be used.
      487    11400                   2) if one of the definitions points to the current
      488    11401                      account/uname then use this definition.
      489    11402                   3) if one of the definitions points to the current
      490    11403                      account(any uname) then use this definition.
      491    11404                   4) otherwise, use the first definition that refers
      492    11405                      to an address on the local site.
      493    11406        */
      494    11407    2       NEXT2$ = VM_WORK$ -> VM_ADD_HEAD.HEAD$;
      495    11408    3       DO FOREVER;
      496    11409    3           CALL VMA$GET_NEXT_ENTRY (VM_UADDRESS2,VM_RADDRESS2,
      497    11410    3             NEXT2$,VM_WORK$) ALTRET(SEARCH_LOOPX);
      498    11411    3           SITENAME = VM_RADDRESS2.SITENAME;
      499    11412    3           CALL VMA$GET_SITE_NAME (VM_RADDRESS2.SITENAME, SITENAME);
      500    11413    3           IF (SITENAME = ' ' OR SITENAME = VM_SITENAME)
      501    11414    3             AND VM_RADDRESS2.TYPE = %VM_ADD_RESOLVED
      502    11415    3             AND VM_RADDRESS2.ACCT = B$JIT.FACCN
      503    11416    3             AND SUBSTR (VM_RADDRESS2.NAME_KEY, 8) = B$JIT.UNAME
      504    11417    3           THEN
      505    11418    3               GOTO FOUND_IT;
      506    11419    3       END;
      507    11420    2   SEARCH_LOOPX:
      508    11421    2       NEXT2$ = VM_WORK$ -> VM_ADD_HEAD.HEAD$;
      509    11422    3       DO FOREVER;
      510    11423    3           CALL VMA$GET_NEXT_ENTRY (VM_UADDRESS2,VM_RADDRESS2,
      511    11424    3             NEXT2$,VM_WORK$) ALTRET(SEARCH_LOOP2);
      512    11425    3           SITENAME = VM_RADDRESS2.SITENAME;
      513    11426    3           CALL VMA$GET_SITE_NAME (VM_RADDRESS2.SITENAME, SITENAME);
      514    11427    3           IF SITENAME = ' ' OR SITENAME = VM_SITENAME
      515    11428    3           THEN                       /* Found one at local site */
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:18   
      516    11429    4           DO;
      517    11430    4               IF VM_RADDRESS2.TYPE = %VM_ADD_RESOLVED
      518    11431    4               THEN
      519    11432    5               DO;
      520    11433    5                   IF VM_RADDRESS2.ACCT = B$JIT.FACCN
      521    11434    5                   THEN   /* Use this one */
      522    11435    5                       GOTO FOUND_IT;
      523    11436    5               END;
      524    11437    4               ELSE
      525    11438    5               DO;
      526    11439    5                   IF VM_UADDRESS2.NAME_KEY ~= ' '
      527    11440    5                   THEN   /* Use this one */
      528    11441    6                   DO;  /* Fake a VM_RADDRESS2 */
      529    11442    6                       VM_RADDRESS2.TYPE = %VM_ADD_RESOLVED;
      530    11443    6                       VM_RADDRESS2.ACCT = SUBSTR(VM_UADDRESS2.NAME_KEY,
      531    11444    6                         0,LENGTHC(B$JIT.ACCN));
      532    11445    6                       IF VM_RADDRESS2.ACCT = B$JIT.FACCN
      533    11446    6                       THEN   /* Use this one */
      534    11447    6                           GOTO FOUND_IT;
      535    11448    6                   END;
      536    11449    5               END;
      537    11450    4           END;
      538    11451    3       END;                            /* Do forever ... end */
      539    11452        /*
      540    11453             ***** Since none of the definitions pointed to the
      541    11454                   current account, just look for a definition on
      542    11455                   the current system ...
      543    11456        */
      544    11457    2   SEARCH_LOOP2:
      545    11458    2       NEXT2$ = VM_WORK$ -> VM_ADD_HEAD.HEAD$;
      546    11459    3       DO FOREVER;
      547    11460    3           CALL VMA$GET_NEXT_ENTRY (VM_UADDRESS2,VM_RADDRESS2,
      548    11461    3             NEXT2$,VM_WORK$) ALTRET(E_GETUSER);
      549    11462    3           IF VM_RADDRESS2.SITENAME = ' '
      550    11463    3             OR VM_RADDRESS2.SITENAME = VM_SITENAME
      551    11464    3           THEN                       /* Found one at local site */
      552    11465    4           DO;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:19   
      553    11466    4               IF VM_RADDRESS2.TYPE = %VM_ADD_RESOLVED
      554    11467    4               THEN
      555    11468    5               DO;
      556    11469    5                   GOTO FOUND_IT;
      557    11470    5               END;
      558    11471    4               ELSE
      559    11472    5               DO;
      560    11473    5                   IF VM_UADDRESS2.NAME_KEY ~= ' '
      561    11474    5                   THEN   /* Use this one */
      562    11475    6                   DO;  /* Fake a VM_RADDRESS2 */
      563    11476    6                       VM_RADDRESS2.TYPE = %VM_ADD_RESOLVED;
      564    11477    6                       VM_RADDRESS2.ACCT = SUBSTR(VM_UADDRESS2.NAME_KEY,
      565    11478    6                         0,LENGTHC(B$JIT.ACCN));
      566    11479    6                       GOTO FOUND_IT;
      567    11480    6                   END;
      568    11481    5               END;
      569    11482    4           END;
      570    11483    3       END;                            /* Do forever ... end */
      571    11484        /*
      572    11485             ***** Now that a user has been found, fill in any
      573    11486                   overriding info from the VM_UADDRESS1 ...
      574    11487        */
      575    11488    2   FOUND_IT:
      576    11489    2       IF VM_UADDRESS1.FOLDER ~= ' '
      577    11490    2       THEN
      578    11491    3       DO;
      579    11492    3           VM_RADDRESS2.FOLDER = VM_UADDRESS1.FOLDER;
      580    11493    3           VM_FOLDER_INFO.FLAGS.FOLDER_SPEC = %YES#;
      581    11494    3       END;
      582    11495    2       IF VM_UADDRESS1.PASS ~= ' '
      583    11496    2       THEN
      584    11497    3       DO;
      585    11498    3           VM_RADDRESS2.PASS = VM_UADDRESS1.PASS;
      586    11499    3       END;
      587    11500    2       SPEC$ = ADDR(VM_RADDRESS2);
      588    11501    2       RETURN;
      589    11502        /**/
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:20   
      590    11503    2   E_GETUSER:
      591    11504    2       ALTRETURN;
      592    11505    2   END PICK_ADDRESS;
      593    11506        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:21   
      594    11507    1   SET_FLAGS: PROC;
      595    11508        /*
      596    11509             ***** Set flags in VM_FOLDER_INFO based
      597    11510                   on info in VM_RADDRESS1 ...
      598    11511        */
      599    11512    2       IF VM_RADDRESS1.FOLDER ~= ' '
      600    11513    2       THEN
      601    11514    3       DO;
      602    11515    3           VM_FOLDER_INFO.FLAGS.FOLDER_SPEC = %YES#;
      603    11516    3       END;
      604    11517        /*
      605    11518             ***** Anything else???
      606    11519        */
      607    11520    2       RETURN;
      608    11521    2   END SET_FLAGS;
      609    11522    1   END VMB$USE_SPECIFIED;
      610    11523        %EOD;

PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:22   
--  Include file information  --

   B_MACROS_C.:LIB_E05  is referenced.
   VM_DATA_R.:VMB6TOU  cannot be made into a system file and is referenced.
   VM_MACRO_C.:VMB6TOU  is referenced.
   VM_PERR_C.:VMB6TOU  is referenced.
   VM_SUBS_C.:VMB6TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIB_E05  is referenced.
   B$JIT_C.:LIB_E05  is referenced.
   B$JIT.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure VMB$USE_SPECIFIED.

   Procedure VMB$USE_SPECIFIED requires 654 words for executable code.
   Procedure VMB$USE_SPECIFIED requires 214 words of local(AUTO) storage.

PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:23   

 Object Unit name= VMB$USE_SPECIFIED                          File name= VMB$USE.:VMB6TOU
 UTS= AUG 20 '97 15:06:50.80 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$MAIL_FILE
    2   DCB   even  none     0      0  M$MAIL_CENTRAL
    3   DCB   even  none     0      0  M$MAIL_GLOBAL
    4   DCB   even  none     0      0  M$WORK
    5   DCB   even  none     0      0  M$MAIL_COMGROUP
    6   DCB   even  none     0      0  M$DO
    7   DCB   even  none     0      0  M$LO
    8   DCB   even  none     0      0  M$ME
    9   DCB   even  none     0      0  M$NODE
   10   DCB   even  none     0      0  M$SI
   11   Data  even  none    53     65  VMB$USE_SPECIFIED
   12  RoData even  UTS      9     11  VMB$USE_SPECIFIED
   13   Proc  even  none   654   1216  VMB$USE_SPECIFIED
   14  RoData even  none    31     37  VMB$USE_SPECIFIED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    13      0   yes    yes     yes      Std        7  VMB$USE_SPECIFIED
    13     34          yes     yes      Std        7  VMB$USE_SRCH
    13    465          yes     yes      Std        7  VMB$FIND_DEFAULT
    13    471          yes     yes      Std        7  VMB$USE_DEFAULT
    13    642          yes     yes      Std        7  VMB$USE_SAME
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:24   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       5 VMA$ADDRESS
         yes           Std       5 VMA$ERRMSG
 yes     yes           Std       4 VMA$GET_NEXT_ENTRY
 yes     yes           Std       1 VMB$TESTREG
 yes     yes           Std       5 VMA$OPEN_FOLDER
 yes     yes           Std       4 VMA$GET_SITE_NAME
 yes     yes           Std       3 VMA$GET_LIST
                       nStd      0 X66_AUTO_N
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    VM_HEADER$                       r    VM_PROFILE$
r    VM_ADDLIST$                      r    VM_ADDREC$                       r    VM_WORK$
r    VM_SELECT$                       r    VM_PARSEAREA$                    r    VM_INPUT$
r    VM_COPY$                              VM_ENCLLIST$                          VM_ENCLREC$
     VM_HEADER_                            VM_HEADER_INIT_                       VM_PROFILE_
     VM_ADDLIST_                           VM_ADDREC_                            VM_WORK_
     VM_SELECT_                            VM_PARSEAREA_                         VM_INPUT_
     VM_COPY_                              VM_ENCLLIST_                          VM_ENCLREC_
     M$MAIL_FILE                           M$MAIL_CENTRAL                        M$MAIL_GLOBAL
     M$WORK                                M$MAIL_COMGROUP                       M$DO
     M$LO                                  M$ME                                  M$NODE
     M$SI                                  M$MAIL_FILE_NUM                       M$MAIL_CENTRAL_NUM
     M$MAIL_GLOBAL_NUM                     M$WORK_NUM                            M$MAIL_COMGROUP_NUM
     M$DO_NUM                              M$ME_NUM                              M$LO_NUM
     M$SI_NUM                              M$NODE_NUM                       r    B$JIT$
r    B$TCB$                                VM_MAIL_ACCT                          VM_NAME_MAP_NAME
     ERRMSG_FID                            VM_SEND_FILE_NAME                     VM_FORWARD_FILE_NAME
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:25   
     VM_FORWARD_ENCL_NAME                  VM_FORWARD_FILE_PASS                  VM_MAILCG_NAME
     VM_SITENAME                           VM_MAILCG_SETSTA

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ROSID                                 ISSID
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:26   


        1        1        /*M* VMB$USE - code to impliment the USE command */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,DCI=4 */
        8        8        /*F*
        9        9             NAME: VMB$USE_SPECIFIED
       10       10             PURPOSE:
       11       11                   To open the folder specified on the USE command.
       12       12             DESCRIPTION:
       13       13                   This routine will open the file corresponding to the
       14       14                   specified address on the USE command.
       15       15
       16       16                   This routine has the following parameters:
       17       17
       18       18                      ADDRESS$         - Ptr to parse tree describing address
       19       19                                         of folder to USE.
       20       20                      USER_NAME        - address spec which describes this user.
       21       21                      VM_FOLDER_INFO   - structure containing info about the
       22       22                                         folder which will be opened.
       23       23                      DCB#             - DCB to use to open the folder.
       24       24                      FUN              - FUN to use to open the folder.
       25       25                                         Default is UPDATE. (optional)
       26       26                        SKIPERR                If set, no error messages are
       27       27                                               printed.  Optional, default is reset.
       28       28        */
       29       29        VMB$USE_SPECIFIED: PROC (ADDRESS$,USER_NAME,VM_FOLDER_INFO,DCB#,VM_SEARCH_INFO,FUN,
                29            SKIPERR) ALTRET;

     29 13 000000   000000 700200 xent  VMB$USE_SPE* TSX0  ! X66_AUTO_N
        13 000001   000326 000007                    ZERO    214,7

       30       30        /***** Include files *****/
       31       31          %INCLUDE B$JIT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:27   
       32      634          %INCLUDE B_ERRORS_C;
       33     1761          %INCLUDE CP_6;
       34     7320          %INCLUDE CP_6_SUBS;
       35     7860          %INCLUDE VM_SUBS_C;
       36     8120          %INCLUDE VM_PERR_C;
       37     8415          %INCLUDE VM_MACRO_C;
       38     9683          %INCLUDE VM_DATA_R;
       39    10114        /***** Parameters *****/
       40    10115    1   DCL ADDRESS$ PTR;
       41    10116          %TEXTC (NAME=USER_NAME,STCLASS=" ");
       42    10121          %VM_FOLDER_INFO (STCLASS=" ");
       43    10173    1   DCL DCB# UBIN WORD;
       44    10174          %VM_SEARCH_INFO (STCLASS=" ");
       45    10201    1   DCL FUN SBIN WORD;
       46    10202    1   DCL SKIPERR BIT(1);
       47    10203        /***** External routines *****/
       48    10204    1   DCL VMA$ADDRESS ENTRY(5) ALTRET;
       49    10205    1   DCL VMA$ERRMSG ENTRY(5);
       50    10206    1   DCL VMA$GET_NEXT_ENTRY ENTRY(4) ALTRET;
       51    10207    1   DCL VMA$GET_LIST ENTRY(3) ALTRET;
       52    10208    1   DCL VMA$GET_SITE_NAME ENTRY (4) ALTRET;
       53    10209    1   DCL VMA$OPEN_FOLDER ENTRY(5) ALTRET;
       54    10210    1   DCL VMB$TESTREG ENTRY(1) ALTRET;
       55    10211        /***** Local variables *****/
       56    10212    1   DCL SPEC$ PTR AUTO;
       57    10213    1   DCL NEXT1$ PTR AUTO;
       58    10214    1   DCL NEXT2$ PTR AUTO;
       59    10215    1   DCL FOUND_FLAG# BIT(1) AUTO;
       60    10216    1   DCL OPEN_FLAG# BIT(1) AUTO;
       61    10217    1   DCL TBIT BIT(1) AUTO;
       62    10218    1   DCL TFUN UBIN AUTO;
       63    10219    1   DCL SITENAME CHAR (8);
       64    10220    1   DCL FOLDER CHAR (25);
       65    10221    1   dcl IA sbin;
       66    10222        %VLP_ERRCODE (FPTN=ERROR);
       67    10267    1   DCL EDCB# UBIN STATIC;
       68    10268        %B$TCB (STCLASS="BASED(B$TCB$)");
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:28   
       69    10271        %B$ALT;
       70    10279          %VM_KEYTYPES;
       71    10300          %VM_ADDTYPES;
       72    10304          %VM_RADDRESS (NAME=VM_RADDRESS1,STCLASS=AUTO);
       73    10339          %VM_RADDRESS (NAME=VM_RADDRESS2,STCLASS=AUTO);
       74    10374          %VM_UADDRESS (NAME=VM_UADDRESS1,STCLASS=AUTO);
       75    10411          %VM_UADDRESS (NAME=VM_UADDRESS2,STCLASS=AUTO);
       76    10448          %VM_USERKEY;
       77    10464        /***** Based structures *****/
       78    10465          %VM_ADD_HEAD (NAME=VM_LIST_HEAD,STCLASS="BASED(VM_ADDLIST$)");
       79    10494          %VM_ADD_HEAD (NAME=VM_ADD_HEAD,STCLASS="BASED(VM_ADDLIST$)");
       80    10523          %VM_RADDRESS (NAME=VM$RADDRESS,STCLASS=BASED);
       81    10558          %VM_UADDRESS (NAME=VM$UADDRESS,STCLASS=BASED);
       82    10595          %F$DCB;
       83    10652        /***** Error codes *****/
       84    10653            %VLP_ERRCODE (FPTN=E_TOOMANYADDRESSES,FCG="VM",MID="B",
       85    10654            ERR#=%E$TOOMANYADDRESSES,STCLASS=CONSTANT);
       86    10699        /*E*    ERROR: VMB-E$TOOMANYADDRESSES-0
       87    10700                MESSAGE: The address specified is ambigous.
       88    10701                MESSAGE1: The address expands into more than one address.
       89    10702        */
       90    10703              %VLP_ERRCODE (FPTN=E_NULLLIST,FCG="VM",MID="B",
       91    10704              ERR#=%E$NULLLIST,STCLASS=CONSTANT);
       92    10749        /*E*    ERROR: VMB-E$NULLLIST-0
       93    10750                MESSAGE: The address specified is a null list.
       94    10751        */
       95    10752              %VLP_ERRCODE (FPTN=E_NOTRESOLVED,FCG="VM",MID="B",
       96    10753              ERR#=%E$NOTRESOLVED,STCLASS=CONSTANT);
       97    10798        /*E*    ERROR: VMB-E$NOTRESOLVED-0
       98    10799                MESSAGE: Unable to resolve address %U1
       99    10800        */
      100    10801              %VLP_ERRCODE (FPTN=E_BADUSE,FCG="VM",MID="B",
      101    10802              ERR#=%E$BADUSE,STCLASS=CONSTANT);
      102    10847        /*E*    ERROR: VMB-E$BADUSE-0
      103    10848                MESSAGE: Unable to USE that address.
      104    10849        */
      105    10850              %VLP_ERRCODE (FPTN=E_NOUSER,FCG="VM",MID="B",
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:29   
      106    10851              ERR#=%E$NOUSER,STCLASS=CONSTANT);
      107    10896        /*E*    ERROR: VMB-E$NOUSER-0
      108    10897                MESSAGE: User is not defined.
      109    10898        */
      110    10899              %VLP_ERRCODE (FPTN=E_ILLWSN,FCG="VM",MID="B",
      111    10900              ERR#=%E$ILLWSN,STCLASS=CONSTANT);
      112    10945        /*E*    ERROR: VMB-E$ILLWSN-0
      113    10946                MESSAGE: Foreign SITENAMEs are not allowed.
      114    10947        */
      115    10948              %VLP_ERRCODE (FPTN=E_NOFOLDER,FCG="VM",MID="B",
      116    10949              ERR#=%E$NOFOLDER,STCLASS=CONSTANT);
      117    10994        /*E*    ERROR: VMB-E$NOFOLDER-0
      118    10995                MESSAGE: Folder does not exist.
      119    10996        */
      120    10997        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:30   
      121    10998        /*
      122    10999             ***** VM_RADDRESS1 and VM_UADDRESS1 are used to contain
      123    11000                   intermediate results. For example, for picking the
      124    11001                   address spec out of the list built by VMA$ADDRESS.
      125    11002                   VM_RADDRESS2 and VM_UADDRESS2 are used to take the
      126    11003                   final value of a user def or resolved address and
      127    11004                   have info from VM_RADDRESS1 or VM_UADDRESS1 merged
      128    11005                   in to create the final form ...
      129    11006        */
      130    11007        /*
      131    11008             ***** Set a flag so that the file will be opened ...
      132    11009        */
      133    11010    1         OPEN_FLAG# = %YES#;

  11010 13 000002   400000 236003                    LDQ     -131072,DU
        13 000003   200016 756100                    STQ     OPEN_FLAG#,,AUTO

      134    11011        /*
      135    11012             ***** Initialize VM_FOLDER_INFO ...
      136    11013        */
      137    11014    1       VM_FOLDER_INFO.USER_NAME.COUNT = 0;

  11014 13 000004   200005 470500                    LDP0    @VM_FOLDER_INFO,,AUTO
        13 000005   000000 236003                    LDQ     0,DU
        13 000006   000024 552140                    STBQ    20,'40'O,PR0

      138    11015    1       VM_FOLDER_INFO.USER_NAME.TEXT = ' ';

  11015 13 000007   040100 100400                    MLR     fill='040'O
        13 000010   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000011   000024 200310                    ADSC9   20,,PR0                  cn=1,n=200

      139    11016    1       VM_FOLDER_INFO.FLAGS = %NO#;

  11016 13 000012   000023 450100                    STZ     19,,PR0

      140    11017        /*
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:31   
      141    11018             ***** Change the parse tree into an internal address spec ...
      142    11019        */
      143    11020    1       CALL VMA$ADDRESS (ADDRESS$,USER_NAME,VM_SEARCH_INFO,%YES#,%NO#)

  11020 13 000013   000004 236000 14                 LDQ     4
        13 000014   200322 756100                    STQ     @ADDR_SPEC+5,,AUTO
        13 000015   000005 236000 14                 LDQ     5
        13 000016   200007 235100                    LDA     @VM_SEARCH_INFO,,AUTO
        13 000017   200320 757100                    STAQ    @ADDR_SPEC+3,,AUTO
        13 000020   200004 236100                    LDQ     @USER_NAME,,AUTO
        13 000021   200003 235100                    LDA     @ADDRESS$,,AUTO
        13 000022   200316 757100                    STAQ    @ADDR_SPEC+1,,AUTO
        13 000023   200316 630500                    EPPR0   @ADDR_SPEC+1,,AUTO
        13 000024   000001 631400 14                 EPPR1   1
        13 000025   000000 701000 xent               TSX1    VMA$ADDRESS
        13 000026   000030 702000 13                 TSX2    s:11022
        13 000027   000033 710000 13                 TRA     s:11025

      144    11021    2       WHENALTRETURN DO;

      145    11022    2           IF NOT VM_LIST_HEAD.FLAGS.ERR#

  11022 13 000030   000000 470400 xsym               LDP0    VM_ADDLIST$
        13 000031   000002 234100                    SZN     2,,PR0
        13 000032   000421 605000 13                 TPL     E_PMME

      146    11023    2           THEN GOTO E_PMME;
      147    11024    2       END;

      148    11025    1       GOTO COMMON_CODE;

  11025 13 000033   000047 710000 13                 TRA     COMMON_CODE

      149    11026        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:32   
      150    11027        /*F*
      151    11028             NAME: VMB$USE_SRCH
      152    11029             PURPOSE:
      153    11030                   To open a SRCH folder.
      154    11031             DESCRIPTION:
      155    11032                   This routine will open the passed DCB to the desired folder.
      156    11033
      157    11034                   This routine has the following parameters:
      158    11035
      159    11036                      ADDRESS$         - Not used in this routine.
      160    11037                      USER_NAME        - Ditto
      161    11038                      VM_FOLDER_INFO   - structure containing info about the
      162    11039                                         folder which will be opened.
      163    11040                      DCB#             - DUCB to open.
      164    11041                      VM_SEARCH_INFO   - describes how to resolve addresses.
      165    11042                      FUN              - FUN to be used to open the folder.
      166    11043                                         Default is UPDATE. (optional)
      167    11044        */
      168    11045    1   VMB$USE_SRCH: ENTRY (ADDRESS$,USER_NAME,VM_FOLDER_INFO,DCB#,VM_SEARCH_INFO,FUN,
             11045            SKIPERR) ALTRET;

  11045 13 000034   000000 700200 xent  VMB$USE_SRCH TSX0  ! X66_AUTO_N
        13 000035   000326 000007                    ZERO    214,7

      169    11046        /*
      170    11047             ***** Set a flag so that the file will be opened ...
      171    11048        */
      172    11049    1       OPEN_FLAG# = %YES#;

  11049 13 000036   400000 236003                    LDQ     -131072,DU
        13 000037   200016 756100                    STQ     OPEN_FLAG#,,AUTO

      173    11050    1       VM_FOLDER_INFO.USER_NAME.COUNT = 0;

  11050 13 000040   200005 470500                    LDP0    @VM_FOLDER_INFO,,AUTO
        13 000041   000000 236003                    LDQ     0,DU
        13 000042   000024 552140                    STBQ    20,'40'O,PR0
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:33   

      174    11051    1       VM_FOLDER_INFO.USER_NAME.TEXT = ' ';

  11051 13 000043   040100 100400                    MLR     fill='040'O
        13 000044   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000045   000024 200310                    ADSC9   20,,PR0                  cn=1,n=200

      175    11052    1       VM_FOLDER_INFO.FLAGS = %NO#;

  11052 13 000046   000023 450100                    STZ     19,,PR0

      176    11053        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:34   
      177    11054    1   COMMON_CODE:
      178    11055        /*
      179    11056             ***** If the address turned out to be a null list,
      180    11057                   then complain...
      181    11058        */
      182    11059    1       IF VM_LIST_HEAD.NUM_ENTRIES = 0

  11059 13 000047   000000 470400 xsym  COMMON_CODE  LDP0    VM_ADDLIST$
        13 000050   000001 235100                    LDA     1,,PR0
        13 000051   000057 601000 13                 TNZ     s:11069

      183    11060    1       THEN
      184    11061    2       DO;

      185    11062    2           CALL VMA$ERRMSG (E_NULLLIST);

  11062 13 000052   000007 630400 14                 EPPR0   7
        13 000053   000006 631400 14                 EPPR1   6
        13 000054   000000 701000 xent               TSX1    VMA$ERRMSG
        13 000055   000000 011000                    NOP     0

      186    11063    2           ALTRETURN;

  11063 13 000056   000000 702200 xent               TSX2  ! X66_AALT

      187    11064    2       END;
      188    11065        /*
      189    11066             ***** If there is an error, then report it ...
      190    11067                   Only unresolved addresses will be so flagged.
      191    11068        */
      192    11069    1       IF VM_LIST_HEAD.HEAD$ -> VM$UADDRESS.FLAGS.UNDEF#

  11069 13 000057   000003 471500                    LDP1    3,,PR0
        13 000060   100002 234100                    SZN     2,,PR1
        13 000061   000101 605000 13                 TPL     s:11080

      193    11070    1       THEN
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:35   
      194    11071    2       DO;

      195    11072    2           CALL VMA$ERRMSG (E_NOTRESOLVED,,

  11072 13 000062   000010 235000 14                 LDA     8
        13 000063   200316 451500                    STP1    @ADDR_SPEC+1,,AUTO
        13 000064   200316 236100                    LDQ     @ADDR_SPEC+1,,AUTO
        13 000065   000011 036000 14                 ADLQ    9
        13 000066   200320 757100                    STAQ    @ADDR_SPEC+3,,AUTO
        13 000067   200320 633500                    EPPR3   @ADDR_SPEC+3,,AUTO
        13 000070   200324 453500                    STP3    @ADDR_SPEC+7,,AUTO
        13 000071   000013 236000 14                 LDQ     11
        13 000072   000014 235000 14                 LDA     12
        13 000073   200322 757100                    STAQ    @ADDR_SPEC+5,,AUTO
        13 000074   200322 630500                    EPPR0   @ADDR_SPEC+5,,AUTO
        13 000075   000012 631400 14                 EPPR1   10
        13 000076   000000 701000 xent               TSX1    VMA$ERRMSG
        13 000077   000000 011000                    NOP     0

      196    11073    2             VECTOR(VM_LIST_HEAD.HEAD$ -> VM$UADDRESS.USER_NAME));
      197    11074    2           ALTRETURN;

  11074 13 000100   000000 702200 xent               TSX2  ! X66_AALT

      198    11075    2       END;
      199    11076        /*
      200    11077             ***** Now pick the entry to expand full
      201    11078                   i.e., into a user def ...
      202    11079        */
      203    11080    1       NEXT1$ = VM_ADD_HEAD.HEAD$;

  11080 13 000101   000003 236100                    LDQ     3,,PR0
        13 000102   200013 756100                    STQ     NEXT1$,,AUTO

      204    11081    1       FOUND_FLAG# = %NO#;

  11081 13 000103   200015 450100                    STZ     FOUND_FLAG#,,AUTO
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:36   

      205    11082    2       DO FOREVER;

      206    11083    2           CALL VMA$GET_NEXT_ENTRY (VM_UADDRESS1,VM_RADDRESS1,NEXT1$,VM_ADDLIST$)

  11083 13 000104   000016 236000 14                 LDQ     14
        13 000105   200321 756100                    STQ     @ADDR_SPEC+4,,AUTO
        13 000106   200013 630500                    EPPR0   NEXT1$,,AUTO
        13 000107   200320 450500                    STP0    @ADDR_SPEC+3,,AUTO
        13 000110   200033 631500                    EPPR1   VM_RADDRESS1,,AUTO
        13 000111   200317 451500                    STP1    @ADDR_SPEC+2,,AUTO
        13 000112   200103 633500                    EPPR3   VM_UADDRESS1,,AUTO
        13 000113   200316 453500                    STP3    @ADDR_SPEC+1,,AUTO
        13 000114   200316 630500                    EPPR0   @ADDR_SPEC+1,,AUTO
        13 000115   000015 631400 14                 EPPR1   13
        13 000116   000000 701000 xent               TSX1    VMA$GET_NEXT_ENTRY
        13 000117   000121 702000 13                 TSX2    s:11086
        13 000120   000124 710000 13                 TRA     s:11092

      207    11084    2           WHENALTRETURN
      208    11085    3           DO;

      209    11086    3               IF FOUND_FLAG#

  11086 13 000121   200015 234100                    SZN     FOUND_FLAG#,,AUTO
        13 000122   000170 604000 13                 TMI     OPEN_FOLDER

      210    11087    3               THEN                  /* All is well */
      211    11088    3                   GOTO OPEN_FOLDER;
      212    11089    3               ELSE                  /* Nothing found */
      213    11090    3                   GOTO E_NOUSER;

  11090 13 000123   000443 710000 13                 TRA     E_NOUSER

      214    11091    3           END;
      215    11092    2           IF VM_RADDRESS1.SITENAME = ' '

PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:37   
  11092 13 000124   040000 106500                    CMPC    fill='040'O
        13 000125   200052 600010                    ADSC9   VM_RADDRESS1+15,,AUTO    cn=3,n=8
        13 000126   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000127   000134 600000 13                 TZE     s:11096
        13 000130   040000 106500                    CMPC    fill='040'O
        13 000131   200052 600010                    ADSC9   VM_RADDRESS1+15,,AUTO    cn=3,n=8
        13 000132   000000 000010 xsym               ADSC9   VM_SITENAME              cn=0,n=8
        13 000133   000104 601000 13                 TNZ     s:11083

      216    11093    2             OR VM_RADDRESS1.SITENAME = VM_SITENAME
      217    11094    2           THEN                       /* Found one at local site */
      218    11095    3           DO;

      219    11096    3               IF FOUND_FLAG#

  11096 13 000134   200015 234100                    SZN     FOUND_FLAG#,,AUTO
        13 000135   000143 605000 13                 TPL     s:11102

      220    11097    3               THEN
      221    11098    4               DO;

      222    11099    4                   CALL VMA$ERRMSG (E_TOOMANYADDRESSES);

  11099 13 000136   000017 630400 14                 EPPR0   15
        13 000137   000006 631400 14                 EPPR1   6
        13 000140   000000 701000 xent               TSX1    VMA$ERRMSG
        13 000141   000000 011000                    NOP     0

      223    11100    4                   ALTRETURN;

  11100 13 000142   000000 702200 xent               TSX2  ! X66_AALT

      224    11101    4               END;
      225    11102    3               FOUND_FLAG# = %YES#;

  11102 13 000143   400000 236003                    LDQ     -131072,DU
        13 000144   200015 756100                    STQ     FOUND_FLAG#,,AUTO
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:38   

      226    11103    3               IF VM_RADDRESS1.TYPE = %VM_ADD_RESOLVED

  11103 13 000145   200035 236100                    LDQ     VM_RADDRESS1+2,,AUTO
        13 000146   000777 376003                    ANQ     511,DU
        13 000147   000001 116003                    CMPQ    1,DU
        13 000150   000161 601000 13                 TNZ     s:11112

      227    11104    3               THEN
      228    11105    4               DO;

      229    11106    4                   VM_RADDRESS2 = VM_RADDRESS1;

  11106 13 000151   000100 100500                    MLR     fill='000'O
        13 000152   200033 000117                    ADSC9   VM_RADDRESS1,,AUTO       cn=0,n=79
        13 000153   200057 000117                    ADSC9   VM_RADDRESS2,,AUTO       cn=0,n=79

      230    11107    4                   SPEC$ = ADDR(VM_RADDRESS2);

  11107 13 000154   200057 630500                    EPPR0   VM_RADDRESS2,,AUTO
        13 000155   200012 450500                    STP0    SPEC$,,AUTO

      231    11108    4                   CALL SET_FLAGS;

  11108 13 000156   001204 701000 13                 TSX1    SET_FLAGS
        13 000157   000000 011000                    NOP     0

      232    11109    4               END;

  11109 13 000160   000104 710000 13                 TRA     s:11083

      233    11110    3               ELSE
      234    11111    4               DO;

      235    11112    4                   CALL RESOLVE_USER (VM_UADDRESS1) ALTRET(E_NOUSER);

  11112 13 000161   200103 630500                    EPPR0   VM_UADDRESS1,,AUTO
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:39   
        13 000162   200315 450500                    STP0    VM_UADDRESS2+70,,AUTO
        13 000163   000666 701000 13                 TSX1    RESOLVE_USER
        13 000164   000443 702000 13                 TSX2    E_NOUSER

      236    11113        /*
      237    11114             ***** Pick the folder to open ...
      238    11115        */
      239    11116    4                   CALL PICK_ADDRESS ALTRET(E_NOUSER);

  11116 13 000165   000727 701000 13                 TSX1    PICK_ADDRESS
        13 000166   000443 702000 13                 TSX2    E_NOUSER

      240    11117    4               END;

      241    11118    3           END;

      242    11119    2       END;                            /* Do forever ... end */

  11119 13 000167   000104 710000 13                 TRA     s:11083

      243    11120        /*
      244    11121             ***** Now open the folder ...
      245    11122        */
      246    11123    1   OPEN_FOLDER:
      247    11124    1       IF SPEC$ -> VM$RADDRESS.ACCT ~= ' '

  11124 13 000170   200012 470500       OPEN_FOLDER  LDP0    SPEC$,,AUTO
        13 000171   040000 106500                    CMPC    fill='040'O
        13 000172   000021 600010                    ADSC9   17,,PR0                  cn=3,n=8
        13 000173   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000174   000202 600000 13                 TZE     s:11128

      248    11125    1       THEN
      249    11126    1           VM_FOLDER_INFO.ACCT = SPEC$ -> VM$RADDRESS.ACCT;

  11126 13 000175   200005 471500                    LDP1    @VM_FOLDER_INFO,,AUTO
        13 000176   040100 100500                    MLR     fill='040'O
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:40   
        13 000177   000021 600010                    ADSC9   17,,PR0                  cn=3,n=8
        13 000200   100001 400010                    ADSC9   1,,PR1                   cn=2,n=8
        13 000201   000207 710000 13                 TRA     s:11130

      250    11127    1       ELSE
      251    11128    1           VM_FOLDER_INFO.ACCT = B$JIT.FACCN;

  11128 13 000202   000000 471400 xsym               LDP1    B$JIT$
        13 000203   200005 473500                    LDP3    @VM_FOLDER_INFO,,AUTO
        13 000204   040100 100500                    MLR     fill='040'O
        13 000205   100006 000010                    ADSC9   6,,PR1                   cn=0,n=8
        13 000206   300001 400010                    ADSC9   1,,PR3                   cn=2,n=8

      252    11129        /**/
      253    11130    1       IF SPEC$ -> VM$RADDRESS.NOMAD.DELIM = ' '

  11130 13 000207   200012 470500                    LDP0    SPEC$,,AUTO
        13 000210   000014 236100                    LDQ     12,,PR0
        13 000211   777000 376003                    ANQ     -512,DU
        13 000212   040000 116003                    CMPQ    16384,DU
        13 000213   000231 601000 13                 TNZ     s:11141
        13 000214   040000 106500                    CMPC    fill='040'O
        13 000215   000014 200006                    ADSC9   12,,PR0                  cn=1,n=6
        13 000216   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000217   000231 600000 13                 TZE     s:11141

      254    11131    1         AND SPEC$ -> VM$RADDRESS.NOMAD.PSID ~= ' '
      255    11132    2       THEN DO;

      256    11133
      257    11134    2           VM_FOLDER_INFO.PSID = SPEC$ -> VM$RADDRESS.NOMAD.PSID;

  11134 13 000220   200005 471500                    LDP1    @VM_FOLDER_INFO,,AUTO
        13 000221   040100 100500                    MLR     fill='040'O
        13 000222   000014 200006                    ADSC9   12,,PR0                  cn=1,n=6
        13 000223   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6

PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:41   
      258    11135    2           FOLDER = SPEC$ -> VM$RADDRESS.NOMAD.FOLDER;

  11135 13 000224   200012 470500                    LDP0    SPEC$,,AUTO
        13 000225   040100 100500                    MLR     fill='040'O
        13 000226   000007 400022                    ADSC9   7,,PR0                   cn=2,n=18
        13 000227   200023 000031                    ADSC9   FOLDER,,AUTO             cn=0,n=25

      259    11136
      260    11137    2       END;

  11137 13 000230   000241 710000 13                 TRA     s:11146

      261    11138
      262    11139    2       ELSE DO;

      263    11140
      264    11141    2           VM_FOLDER_INFO.PSID = ' ';

  11141 13 000231   200005 471500                    LDP1    @VM_FOLDER_INFO,,AUTO
        13 000232   040100 100400                    MLR     fill='040'O
        13 000233   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000234   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6

      265    11142    2           FOLDER = SPEC$ -> VM$RADDRESS.FOLDER;

  11142 13 000235   200012 470500                    LDP0    SPEC$,,AUTO
        13 000236   040100 100500                    MLR     fill='040'O
        13 000237   000007 400031                    ADSC9   7,,PR0                   cn=2,n=25
        13 000240   200023 000031                    ADSC9   FOLDER,,AUTO             cn=0,n=25

      266    11143
      267    11144    2       END;

      268    11145
      269    11146    1       IF FOLDER ~= ' '

  11146 13 000241   040000 106500                    CMPC    fill='040'O
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:42   
        13 000242   200023 000031                    ADSC9   FOLDER,,AUTO             cn=0,n=25
        13 000243   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000244   000251 600000 13                 TZE     s:11150

      270    11147    1       THEN
      271    11148    1           VM_FOLDER_INFO.FOLDER = FOLDER;

  11148 13 000245   040100 100500                    MLR     fill='040'O
        13 000246   200023 000031                    ADSC9   FOLDER,,AUTO             cn=0,n=25
        13 000247   100003 400031                    ADSC9   3,,PR1                   cn=2,n=25
        13 000250   000254 710000 13                 TRA     s:11152

      272    11149    1       ELSE
      273    11150    1           VM_FOLDER_INFO.FOLDER = 'CENTRAL';

  11150 13 000251   040100 100400                    MLR     fill='040'O
        13 000252   000007 000007 12                 ADSC9   E_NOFOLDER+1             cn=0,n=7
        13 000253   100003 400031                    ADSC9   3,,PR1                   cn=2,n=25

      274    11151        /**/
      275    11152    1       SITENAME = SPEC$ -> VM$RADDRESS.SITENAME;

  11152 13 000254   200012 470500                    LDP0    SPEC$,,AUTO
        13 000255   040100 100500                    MLR     fill='040'O
        13 000256   000017 600010                    ADSC9   15,,PR0                  cn=3,n=8
        13 000257   200021 000010                    ADSC9   SITENAME,,AUTO           cn=0,n=8

      276    11153    1       CALL VMA$GET_SITE_NAME (SPEC$ -> VM$RADDRESS.SITENAME, SITENAME);

  11153 13 000260   200021 633500                    EPPR3   SITENAME,,AUTO
        13 000261   200317 453500                    STP3    @ADDR_SPEC+2,,AUTO
        13 000262   200012 236100                    LDQ     SPEC$,,AUTO
        13 000263   000021 036000 14                 ADLQ    17
        13 000264   200316 756100                    STQ     @ADDR_SPEC+1,,AUTO
        13 000265   200316 630500                    EPPR0   @ADDR_SPEC+1,,AUTO
        13 000266   000020 631400 14                 EPPR1   16
        13 000267   000000 701000 xent               TSX1    VMA$GET_SITE_NAME
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:43   
        13 000270   000000 011000                    NOP     0

      277    11154    1       IF SITENAME ~= ' ' AND SITENAME ~= VM_SITENAME

  11154 13 000271   040000 106500                    CMPC    fill='040'O
        13 000272   200021 000010                    ADSC9   SITENAME,,AUTO           cn=0,n=8
        13 000273   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000274   000306 600000 13                 TZE     OPEN_NOW
        13 000275   040000 106500                    CMPC    fill='040'O
        13 000276   200021 000010                    ADSC9   SITENAME,,AUTO           cn=0,n=8
        13 000277   000000 000010 xsym               ADSC9   VM_SITENAME              cn=0,n=8
        13 000300   000306 600000 13                 TZE     OPEN_NOW

      278    11155    1       THEN
      279    11156    2       DO;                           /* Illegal sitename (for A00) */

      280    11157    2           CALL VMA$ERRMSG (E_ILLWSN);

  11157 13 000301   000022 630400 14                 EPPR0   18
        13 000302   000006 631400 14                 EPPR1   6
        13 000303   000000 701000 xent               TSX1    VMA$ERRMSG
        13 000304   000000 011000                    NOP     0

      281    11158    2           ALTRETURN;

  11158 13 000305   000000 702200 xent               TSX2  ! X66_AALT

      282    11159    2       END;
      283    11160        /*
      284    11161             ***** If the file is not to be opened,
      285    11162                   then just return now ...
      286    11163        */
      287    11164    1   OPEN_NOW:
      288    11165    1       IF OPEN_FLAG# = %NO#

  11165 13 000306   200016 234100       OPEN_NOW     SZN     OPEN_FLAG#,,AUTO
        13 000307   000311 604000 13                 TMI     s:11168
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:44   

      289    11166    1       THEN
      290    11167    1           RETURN;

  11167 13 000310   000000 702200 xent               TSX2  ! X66_ARET

      291    11168    1       IF ADDR(FUN) ~= ADDR(NIL)

  11168 13 000311   200010 236100                    LDQ     @FUN,,AUTO
        13 000312   000013 116000 14                 CMPQ    11
        13 000313   000320 600000 13                 TZE     s:11172

      292    11169    1       THEN
      293    11170    1           TFUN = FUN;

  11170 13 000314   200010 470500                    LDP0    @FUN,,AUTO
        13 000315   000000 235100                    LDA     0,,PR0
        13 000316   200020 755100                    STA     TFUN,,AUTO
        13 000317   000322 710000 13                 TRA     s:11173

      294    11171    1       ELSE
      295    11172    1           TFUN = %UPDATE#;

  11172 13 000320   000001 235007                    LDA     1,DL
        13 000321   200020 755100                    STA     TFUN,,AUTO

      296    11173    1       CALL VMA$OPEN_FOLDER (VM_FOLDER_INFO,SPEC$,DCB#,%OLDFILE#,TFUN) ALTRET(E_OPEN);

  11173 13 000322   200020 630500                    EPPR0   TFUN,,AUTO
        13 000323   200322 450500                    STP0    @ADDR_SPEC+5,,AUTO
        13 000324   000024 236000 14                 LDQ     20
        13 000325   200006 235100                    LDA     @DCB#,,AUTO
        13 000326   200320 757100                    STAQ    @ADDR_SPEC+3,,AUTO
        13 000327   200012 631500                    EPPR1   SPEC$,,AUTO
        13 000330   200317 451500                    STP1    @ADDR_SPEC+2,,AUTO
        13 000331   200005 236100                    LDQ     @VM_FOLDER_INFO,,AUTO
        13 000332   200316 756100                    STQ     @ADDR_SPEC+1,,AUTO
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:45   
        13 000333   200316 630500                    EPPR0   @ADDR_SPEC+1,,AUTO
        13 000334   000001 631400 14                 EPPR1   1
        13 000335   000000 701000 xent               TSX1    VMA$OPEN_FOLDER
        13 000336   000340 702000 13                 TSX2    E_OPEN

      297    11174    1       RETURN;

  11174 13 000337   000000 702200 xent               TSX2  ! X66_ARET

      298    11175        /*
      299    11176             ***** Try again, with fun=in ...
      300    11177        */
      301    11178    1   E_OPEN:
      302    11179    1       IF TFUN = %UPDATE#

  11179 13 000340   200020 235100       E_OPEN       LDA     TFUN,,AUTO
        13 000341   000001 115007                    CMPA    1,DL
        13 000342   000360 601000 13                 TNZ     E_OPEN1

      303    11180    2       THEN DO;

      304    11181    2           CALL VMA$OPEN_FOLDER (VM_FOLDER_INFO,SPEC$,DCB#,%OLDFILE#,%IN#) ALTRET(
             11181                    E_OPEN1);

  11181 13 000343   000024 236000 14                 LDQ     20
        13 000344   200322 756100                    STQ     @ADDR_SPEC+5,,AUTO
        13 000345   200006 235100                    LDA     @DCB#,,AUTO
        13 000346   200320 757100                    STAQ    @ADDR_SPEC+3,,AUTO
        13 000347   200012 630500                    EPPR0   SPEC$,,AUTO
        13 000350   200317 450500                    STP0    @ADDR_SPEC+2,,AUTO
        13 000351   200005 236100                    LDQ     @VM_FOLDER_INFO,,AUTO
        13 000352   200316 756100                    STQ     @ADDR_SPEC+1,,AUTO
        13 000353   200316 630500                    EPPR0   @ADDR_SPEC+1,,AUTO
        13 000354   000001 631400 14                 EPPR1   1
        13 000355   000000 701000 xent               TSX1    VMA$OPEN_FOLDER
        13 000356   000360 702000 13                 TSX2    E_OPEN1

PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:46   
      305    11182    2           RETURN;

  11182 13 000357   000000 702200 xent               TSX2  ! X66_ARET

      306    11183    2       END;
      307    11184    1   E_OPEN1:
      308    11185    1       IF ADDR(SKIPERR)~=ADDR(NIL) THEN TBIT = SKIPERR;

  11185 13 000360   200011 236100       E_OPEN1      LDQ     @SKIPERR,,AUTO
        13 000361   000013 116000 14                 CMPQ    11
        13 000362   000370 600000 13                 TZE     s:11186

  11185 13 000363   200011 470500                    LDP0    @SKIPERR,,AUTO
        13 000364   003100 060500                    CSL     bolr='003'O
        13 000365   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
        13 000366   200017 000001                    BDSC    TBIT,,AUTO               by=0,bit=0,n=1
        13 000367   000371 710000 13                 TRA     s:11187

      309    11186    1       ELSE TBIT = '0'B;

  11186 13 000370   200017 450100                    STZ     TBIT,,AUTO

      310    11187    2       IF ~TBIT THEN DO;

  11187 13 000371   200017 236100                    LDQ     TBIT,,AUTO
        13 000372   400000 376003                    ANQ     -131072,DU
        13 000373   400000 676003                    ERQ     -131072,DU
        13 000374   000421 600000 13                 TZE     E_PMME

      311    11188    2           ERROR = B$TCB.ALT$->B$ALT.ERR;

  11188 13 000375   000000 470400 xsym               LDP0    B$TCB$
        13 000376   000000 471500                    LDP1    0,,PR0
        13 000377   100102 236100                    LDQ     66,,PR1
        13 000400   000000 756000 11                 STQ     ERROR

      312    11189    2           IF ERROR.ERR# = %E$NOFILE
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:47   

  11189 13 000401   000000 236000 11                 LDQ     ERROR
        13 000402   377770 376007                    ANQ     131064,DL
        13 000403   001610 116007                    CMPQ    904,DL
        13 000404   000412 601000 13                 TNZ     s:11193

      313    11190    2           THEN
      314    11191    2               CALL VMA$ERRMSG (E_NOFOLDER);

  11191 13 000405   000025 630400 14                 EPPR0   21
        13 000406   000006 631400 14                 EPPR1   6
        13 000407   000000 701000 xent               TSX1    VMA$ERRMSG
        13 000410   000000 011000                    NOP     0
        13 000411   000421 710000 13                 TRA     E_PMME

      315    11192    2           ELSE
      316    11193    2               CALL VMA$ERRMSG (ERROR,DCB#);

  11193 13 000412   200006 236100                    LDQ     @DCB#,,AUTO
        13 000413   000026 235000 14                 LDA     22
        13 000414   200316 757100                    STAQ    @ADDR_SPEC+1,,AUTO
        13 000415   200316 630500                    EPPR0   @ADDR_SPEC+1,,AUTO
        13 000416   000020 631400 14                 EPPR1   16
        13 000417   000000 701000 xent               TSX1    VMA$ERRMSG
        13 000420   000000 011000                    NOP     0

      317    11194    2       END;

      318    11195        /**/
      319    11196    1   E_PMME:
      320    11197    1       IF ADDR(SKIPERR)~=ADDR(NIL) THEN TBIT=SKIPERR;

  11197 13 000421   200011 236100       E_PMME       LDQ     @SKIPERR,,AUTO
        13 000422   000013 116000 14                 CMPQ    11
        13 000423   000431 600000 13                 TZE     s:11198

  11197 13 000424   200011 470500                    LDP0    @SKIPERR,,AUTO
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:48   
        13 000425   003100 060500                    CSL     bolr='003'O
        13 000426   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
        13 000427   200017 000001                    BDSC    TBIT,,AUTO               by=0,bit=0,n=1
        13 000430   000432 710000 13                 TRA     s:11199

      321    11198    1       ELSE TBIT = '0'B;

  11198 13 000431   200017 450100                    STZ     TBIT,,AUTO

      322    11199    1       IF ~ TBIT THEN

  11199 13 000432   200017 236100                    LDQ     TBIT,,AUTO
        13 000433   400000 376003                    ANQ     -131072,DU
        13 000434   400000 676003                    ERQ     -131072,DU
        13 000435   000442 600000 13                 TZE     s:11201

      323    11200    1           CALL VMA$ERRMSG (E_BADUSE);

  11200 13 000436   000027 630400 14                 EPPR0   23
        13 000437   000006 631400 14                 EPPR1   6
        13 000440   000000 701000 xent               TSX1    VMA$ERRMSG
        13 000441   000000 011000                    NOP     0

      324    11201    1       ALTRETURN;

  11201 13 000442   000000 702200 xent               TSX2  ! X66_AALT

      325    11202        /**/
      326    11203    1   E_NOUSER:
      327    11204    1       IF ADDR(SKIPERR)~=ADDR(NIL) THEN TBIT = SKIPERR;

  11204 13 000443   200011 236100       E_NOUSER     LDQ     @SKIPERR,,AUTO
        13 000444   000013 116000 14                 CMPQ    11
        13 000445   000453 600000 13                 TZE     s:11205

  11204 13 000446   200011 470500                    LDP0    @SKIPERR,,AUTO
        13 000447   003100 060500                    CSL     bolr='003'O
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:49   
        13 000450   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
        13 000451   200017 000001                    BDSC    TBIT,,AUTO               by=0,bit=0,n=1
        13 000452   000454 710000 13                 TRA     s:11206

      328    11205    1       ELSE TBIT = '0'B;

  11205 13 000453   200017 450100                    STZ     TBIT,,AUTO

      329    11206    1       IF ~ TBIT THEN

  11206 13 000454   200017 236100                    LDQ     TBIT,,AUTO
        13 000455   400000 376003                    ANQ     -131072,DU
        13 000456   400000 676003                    ERQ     -131072,DU
        13 000457   000464 600000 13                 TZE     s:11208

      330    11207    1           CALL VMA$ERRMSG (E_NOUSER);

  11207 13 000460   000030 630400 14                 EPPR0   24
        13 000461   000006 631400 14                 EPPR1   6
        13 000462   000000 701000 xent               TSX1    VMA$ERRMSG
        13 000463   000000 011000                    NOP     0

      331    11208    1       ALTRETURN;

  11208 13 000464   000000 702200 xent               TSX2  ! X66_AALT

      332    11209        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:50   
      333    11210        /*F*
      334    11211             NAME: VMB$FIND_DEFAULT
      335    11212             PURPOSE:
      336    11213                   To find the CENTRAL folder for current user.
      337    11214             DESCRIPTION:
      338    11215                   This routine will find but not open the CENTRAL FOLDER
      339    11216                   for the current user.
      340    11217
      341    11218                   This routine has the following parameters:
      342    11219
      343    11220                      ADDRESS$         - Not used in this routine.ing address
      344    11221                      USER_NAME        - address spec which describes this user.
      345    11222                      VM_FOLDER_INFO   - structure containing info about the
      346    11223                                         folder which will be opened.
      347    11224                      DCB#             - UNUSED.
      348    11225                      VM_SEARCH_INFO   - describes how to resolve addresses.
      349    11226                      FUN              - FUN to be used to opee the folder.
      350    11227                                         Default is UPDATE. (optional)
      351    11228        */
      352    11229    1   VMB$FIND_DEFAULT: ENTRY (ADDRESS$,USER_NAME,VM_FOLDER_INFO,DCB#,VM_SEARCH_INFO,FUN,
             11229            SKIPERR) ALTRET;

  11229 13 000465   000000 700200 xent  VMB$FIND_DE* TSX0  ! X66_AUTO_N
        13 000466   000326 000007                    ZERO    214,7

      353    11230        /*
      354    11231             ***** Set a flag so that the file will not be opened ...
      355    11232        */
      356    11233    1       OPEN_FLAG# = %NO#;

  11233 13 000467   200016 450100                    STZ     OPEN_FLAG#,,AUTO

      357    11234    1       GOTO INITIALIZE_DEFAULT;

  11234 13 000470   000475 710000 13                 TRA     INITIALIZE_DEFAULT

      358    11235        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:51   
      359    11236        /*F*
      360    11237             NAME: VMB$USE_DEFAULT
      361    11238             PURPOSE:
      362    11239                   To open the default or CENTRAL folder for the current user.
      363    11240             DESCRIPTION:
      364    11241                   This routine will find and open the CENTRAL FOLDER for
      365    11242                   the current user.
      366    11243
      367    11244                   This routine has the following parameters:
      368    11245
      369    11246                      ADDRESS$         - Not used in this routine.ing address
      370    11247                      USER_NAME        - address spec which describes this user.
      371    11248                      VM_FOLDER_INFO   - structure containing info about the
      372    11249                                         folder which will be opened.
      373    11250                      DCB#             - number of DCB to be opened.
      374    11251                      VM_SEARCH_INFO   - describes how to resolve addresses.
      375    11252                      FUN              - FUN to be used to opee the folder.
      376    11253                                         Default is UPDATE. (optional)
      377    11254        */
      378    11255    1   VMB$USE_DEFAULT: ENTRY (ADDRESS$,USER_NAME,VM_FOLDER_INFO,DCB#,VM_SEARCH_INFO,FUN,
             11255            SKIPERR) ALTRET;

  11255 13 000471   000000 700200 xent  VMB$USE_DEF* TSX0  ! X66_AUTO_N
        13 000472   000326 000007                    ZERO    214,7

      379    11256        /*
      380    11257             ***** Set a flag so that the file will be opened ...
      381    11258        */
      382    11259    1       OPEN_FLAG# = %YES#;

  11259 13 000473   400000 236003                    LDQ     -131072,DU
        13 000474   200016 756100                    STQ     OPEN_FLAG#,,AUTO

      383    11260        /*
      384    11261             ***** Initialize VM_FOLDER_INFO ...
      385    11262        */
      386    11263    1   INITIALIZE_DEFAULT:
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:52   
      387    11264    1       VM_FOLDER_INFO.USER_NAME.COUNT = 0;

  11264 13 000475   200005 470500       INITIALIZE_* LDP0    @VM_FOLDER_INFO,,AUTO
        13 000476   000000 236003                    LDQ     0,DU
        13 000477   000024 552140                    STBQ    20,'40'O,PR0

      388    11265    1       VM_FOLDER_INFO.USER_NAME.TEXT = ' ';

  11265 13 000500   040100 100400                    MLR     fill='040'O
        13 000501   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000502   000024 200310                    ADSC9   20,,PR0                  cn=1,n=200

      389    11266    1       VM_FOLDER_INFO.FLAGS = %NO#;

  11266 13 000503   000023 450100                    STZ     19,,PR0

      390    11267        /*
      391    11268             ***** Determine whether to use VM_UADDRESS or VM_RADDRESS ...
      392    11269        */
      393    11270    2       call VMB$TESTREG(USER_NAME) whenreturn do;

  11270 13 000504   200004 630500                    EPPR0   @USER_NAME,,AUTO
        13 000505   000006 631400 14                 EPPR1   6
        13 000506   000000 701000 xent               TSX1    VMB$TESTREG
        13 000507   000543 702000 13                 TSX2    s:11284

      394    11271
      395    11272                                                /* Use VM_UADDRESS1 */
      396    11273    2           VM_UADDRESS1.USER_NAME.TEXT = USER_NAME.TEXT;

  11273 13 000510   200004 470500                    LDP0    @USER_NAME,,AUTO
        13 000511   000100 101500                    MRL     fill='000'O
        13 000512   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        13 000513   200316 000002                    ADSC9   @ADDR_SPEC+1,,AUTO       cn=0,n=2
        13 000514   200316 220100                    LDX0    @ADDR_SPEC+1,,AUTO
        13 000515   040100 100540                    MLR     fill='040'O
        13 000516   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:53   
        13 000517   200125 000310                    ADSC9   VM_UADDRESS1+18,,AUTO    cn=0,n=200

      397    11274    2           VM_UADDRESS1.USER_NAME.COUNT = USER_NAME.SIZ;

  11274 13 000520   000100 100500                    MLR     fill='000'O
        13 000521   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        13 000522   200124 600001                    ADSC9   VM_UADDRESS1+17,,AUTO    cn=3,n=1

      398    11275    2           VM_UADDRESS1.FOLDER = ' ';

  11275 13 000523   040100 100400                    MLR     fill='040'O
        13 000524   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000525   200112 400031                    ADSC9   VM_UADDRESS1+7,,AUTO     cn=2,n=25

      399    11276    2           VM_UADDRESS1.PASS = ' ';

  11276 13 000526   040100 100400                    MLR     fill='040'O
        13 000527   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000530   200120 600010                    ADSC9   VM_UADDRESS1+13,,AUTO    cn=3,n=8

      400    11277    2           VM_UADDRESS1.SITENAME = ' ';

  11277 13 000531   040100 100400                    MLR     fill='040'O
        13 000532   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000533   200122 600010                    ADSC9   VM_UADDRESS1+15,,AUTO    cn=3,n=8

      401    11278    2           call RESOLVE_USER(VM_UADDRESS1) altret(E_NOUSER);

  11278 13 000534   200103 631500                    EPPR1   VM_UADDRESS1,,AUTO
        13 000535   200315 451500                    STP1    VM_UADDRESS2+70,,AUTO
        13 000536   000666 701000 13                 TSX1    RESOLVE_USER
        13 000537   000443 702000 13                 TSX2    E_NOUSER

      402    11279    2           call PICK_ADDRESS altret(E_NOUSER);

  11279 13 000540   000727 701000 13                 TSX1    PICK_ADDRESS
        13 000541   000443 702000 13                 TSX2    E_NOUSER
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:54   

      403    11280    2           goto OPEN_FOLDER;

  11280 13 000542   000170 710000 13                 TRA     OPEN_FOLDER

      404    11281    2       end;
      405    11282
      406    11283    2       whenaltreturn do;               /*  Use  VM_RADDRESS    */

      407    11284    2           VM_RADDRESS1.FOLDER   = ' ';

  11284 13 000543   040100 100400                    MLR     fill='040'O
        13 000544   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000545   200042 400031                    ADSC9   VM_RADDRESS1+7,,AUTO     cn=2,n=25

      408    11285    2           VM_RADDRESS1.PASS     = ' ';

  11285 13 000546   040100 100400                    MLR     fill='040'O
        13 000547   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000550   200050 600010                    ADSC9   VM_RADDRESS1+13,,AUTO    cn=3,n=8

      409    11286    2           VM_RADDRESS1.SITENAME = ' ';

  11286 13 000551   040100 100400                    MLR     fill='040'O
        13 000552   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000553   200052 600010                    ADSC9   VM_RADDRESS1+15,,AUTO    cn=3,n=8

      410    11287    3           if substr(USER_NAME.TEXT,,1) ~= '.' then do;

  11287 13 000554   200004 470500                    LDP0    @USER_NAME,,AUTO
        13 000555   000100 101500                    MRL     fill='000'O
        13 000556   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        13 000557   200316 000002                    ADSC9   @ADDR_SPEC+1,,AUTO       cn=0,n=2
        13 000560   200316 220100                    LDX0    @ADDR_SPEC+1,,AUTO
        13 000561   040000 106500                    CMPC    fill='040'O
        13 000562   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
        13 000563   000031 000001 14                 ADSC9   25                       cn=0,n=1
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:55   
        13 000564   000622 600000 13                 TZE     s:11293

      411    11288                                                /**  must be DP#psn.acct  **/
      412    11289    3               call index(IA,'.',USER_NAME.TEXT);

  11289 13 000565   000100 101500                    MRL     fill='000'O
        13 000566   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        13 000567   200316 000002                    ADSC9   @ADDR_SPEC+1,,AUTO       cn=0,n=2
        13 000570   200316 220100                    LDX0    @ADDR_SPEC+1,,AUTO
        13 000571   000000 124540                    SCM     mask='000'O
        13 000572   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
        13 000573   000031 000001 14                 ADSC9   25                       cn=0,n=1
        13 000574   200032 000100                    ARG     IA,,AUTO

      413    11290    3               VM_RADDRESS1.ACCT = substr(USER_NAME.TEXT,IA+1);

  11290 13 000575   000100 101500                    MRL     fill='000'O
        13 000576   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        13 000577   200316 000002                    ADSC9   @ADDR_SPEC+1,,AUTO       cn=0,n=2
        13 000600   200316 220100                    LDX0    @ADDR_SPEC+1,,AUTO
        13 000601   000000 636010                    EAQ     0,X0
        13 000602   000022 772000                    QRL     18
        13 000603   200032 136100                    SBLQ    IA,,AUTO
        13 000604   777777 621006                    EAX1    -1,QL
        13 000605   200032 235100                    LDA     IA,,AUTO
        13 000606   040100 100545                    MLR     fill='040'O
        13 000607   000000 400011                    ADSC9   0,A,PR0                  cn=2,n=*X1
        13 000610   200054 600010                    ADSC9   VM_RADDRESS1+17,,AUTO    cn=3,n=8

      414    11291    3               VM_RADDRESS1.NOMAD.PSID = substr(USER_NAME.TEXT,3,IA-3);

  11291 13 000611   000100 101500                    MRL     fill='000'O
        13 000612   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        13 000613   200316 000002                    ADSC9   @ADDR_SPEC+1,,AUTO       cn=0,n=2
        13 000614   200316 220100                    LDX0    @ADDR_SPEC+1,,AUTO
        13 000615   777775 621005                    EAX1    -3,AL
        13 000616   040100 100540                    MLR     fill='040'O
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:56   
        13 000617   000001 000011                    ADSC9   1,,PR0                   cn=0,n=*X1
        13 000620   200047 200006                    ADSC9   VM_RADDRESS1+12,,AUTO    cn=1,n=6

      415    11292    3           end;

  11292 13 000621   000632 710000 13                 TRA     s:11294

      416    11293    2           else VM_RADDRESS1.ACCT = SUBSTR(USER_NAME.TEXT,1);

  11293 13 000622   000100 101500                    MRL     fill='000'O
        13 000623   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        13 000624   200316 000002                    ADSC9   @ADDR_SPEC+1,,AUTO       cn=0,n=2
        13 000625   200316 220100                    LDX0    @ADDR_SPEC+1,,AUTO
        13 000626   777777 621010                    EAX1    -1,X0
        13 000627   040100 100540                    MLR     fill='040'O
        13 000630   000000 400011                    ADSC9   0,,PR0                   cn=2,n=*X1
        13 000631   200054 600010                    ADSC9   VM_RADDRESS1+17,,AUTO    cn=3,n=8

      417    11294    2           VM_FOLDER_INFO.FLAGS.ACCT_SPEC = %YES#;

  11294 13 000632   200005 471500                    LDP1    @VM_FOLDER_INFO,,AUTO
        13 000633   100000 236003                    LDQ     32768,DU
        13 000634   100023 256100                    ORSQ    19,,PR1

      418    11295    2           SPEC$ = addr(VM_RADDRESS1);

  11295 13 000635   200033 633500                    EPPR3   VM_RADDRESS1,,AUTO
        13 000636   200012 453500                    STP3    SPEC$,,AUTO

      419    11296    2           call SET_FLAGS;

  11296 13 000637   001204 701000 13                 TSX1    SET_FLAGS
        13 000640   000000 011000                    NOP     0

      420    11297    2           goto OPEN_FOLDER;

  11297 13 000641   000170 710000 13                 TRA     OPEN_FOLDER
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:57   

      421    11298    2       end;
      422    11299        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:58   
      423    11300        /*F*
      424    11301             NAME: VMB$USE_SAME
      425    11302             PURPOSE:
      426    11303                   To open the specified DCB to same place as VM_FOLDER_INFO.
      427    11304             DESCRIPTION:
      428    11305                   This routine will find but not open the CENTRAL FOLDER
      429    11306                   for the current user.
      430    11307
      431    11308                   This routine has the following parameters:
      432    11309
      433    11310                      ADDRESS$         - Not used in this routine.
      434    11311                      USER_NAME        - Not used in this routine.
      435    11312                      VM_FOLDER_INFO   - structure containing info about the
      436    11313                                         folder which will be opened.
      437    11314                      DCB#             - DCB to use to open the folder.
      438    11315                      VM_SEARCH_INFO   - Not used in this routine.
      439    11316                      FUN              - FUN to be used to open the folder.
      440    11317                                         Default is UPDATE. (optional)
      441    11318        */
      442    11319    1   VMB$USE_SAME: ENTRY (ADDRESS$,USER_NAME,VM_FOLDER_INFO,DCB#,VM_SEARCH_INFO,FUN,
             11319            SKIPERR) ALTRET;

  11319 13 000642   000000 700200 xent  VMB$USE_SAME TSX0  ! X66_AUTO_N
        13 000643   000326 000007                    ZERO    214,7

      443    11320        /*
      444    11321             ***** Set a flag so that the file will be opened ...
      445    11322        */
      446    11323    1       OPEN_FLAG# = %YES#;

  11323 13 000644   400000 236003                    LDQ     -131072,DU
        13 000645   200016 756100                    STQ     OPEN_FLAG#,,AUTO

      447    11324        /*
      448    11325             ***** Move info into VM_RADDRESS2 ...
      449    11326        */
      450    11327    1       VM_RADDRESS2.ACCT = VM_FOLDER_INFO.ACCT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:59   

  11327 13 000646   200005 470500                    LDP0    @VM_FOLDER_INFO,,AUTO
        13 000647   040100 100500                    MLR     fill='040'O
        13 000650   000001 400010                    ADSC9   1,,PR0                   cn=2,n=8
        13 000651   200100 600010                    ADSC9   VM_RADDRESS2+17,,AUTO    cn=3,n=8

      451    11328    1       VM_RADDRESS2.FOLDER = VM_FOLDER_INFO.FOLDER;

  11328 13 000652   040100 100500                    MLR     fill='040'O
        13 000653   000003 400031                    ADSC9   3,,PR0                   cn=2,n=25
        13 000654   200066 400031                    ADSC9   VM_RADDRESS2+7,,AUTO     cn=2,n=25

      452    11329    1       VM_RADDRESS2.PASS = VM_FOLDER_INFO.PASS;

  11329 13 000655   040100 100500                    MLR     fill='040'O
        13 000656   000011 600010                    ADSC9   9,,PR0                   cn=3,n=8
        13 000657   200074 600010                    ADSC9   VM_RADDRESS2+13,,AUTO    cn=3,n=8

      453    11330    1       VM_RADDRESS2.SITENAME = VM_FOLDER_INFO.SITENAME;

  11330 13 000660   040100 100500                    MLR     fill='040'O
        13 000661   000013 600010                    ADSC9   11,,PR0                  cn=3,n=8
        13 000662   200076 600010                    ADSC9   VM_RADDRESS2+15,,AUTO    cn=3,n=8

      454    11331    1       SPEC$ = ADDR(VM_RADDRESS2);

  11331 13 000663   200057 631500                    EPPR1   VM_RADDRESS2,,AUTO
        13 000664   200012 451500                    STP1    SPEC$,,AUTO

      455    11332    1       GOTO OPEN_NOW;

  11332 13 000665   000306 710000 13                 TRA     OPEN_NOW

      456    11333        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:60   
      457    11334    1   RESOLVE_USER: PROC (ADDR_SPEC) ALTRET;

  11334 13 000666   200314 741300       RESOLVE_USER STX1  ! VM_UADDRESS2+69,,AUTO

      458    11335        %VM_UADDRESS (NAME=ADDR_SPEC,STCLASS=" ");
      459    11372        /*
      460    11373             ***** M$MAIL_GLOBAL must be open in order to
      461    11374                   resolve any user definition ...
      462    11375        */
      463    11376    2       IF DCBADDR(M$MAIL_GLOBAL_NUM) -> F$DCB.FCD# = %NO#

  11376 13 000667   000032 470400 14                 LDP0    26
        13 000670   000000 471500                    LDP1    0,,PR0
        13 000671   000000 720000 xsym               LXL0    M$MAIL_GLOBAL_NUM
        13 000672   100000 473510                    LDP3    0,X0,PR1
        13 000673   300031 236100                    LDQ     25,,PR3
        13 000674   020000 316007                    CANQ    8192,DL
        13 000675   000677 601000 13                 TNZ     s:11379

      464    11377    2       THEN                            /* Impossible to resolve this user */
      465    11378    2           ALTRETURN;

  11378 13 000676   000000 702211                    TSX2  ! 0,X1

      466    11379    2       VM_FOLDER_INFO.USER_NAME.COUNT = ADDR_SPEC.USER_NAME.COUNT;

  11379 13 000677   200315 474500                    LDP4    @ADDR_SPEC,,AUTO
        13 000700   200005 475500                    LDP5    @VM_FOLDER_INFO,,AUTO
        13 000701   400021 236100                    LDQ     17,,PR4
        13 000702   000033 736000                    QLS     27
        13 000703   500024 552140                    STBQ    20,'40'O,PR5

      467    11380    2       VM_FOLDER_INFO.USER_NAME.TEXT = SUBSTR(ADDR_SPEC.USER_NAME.TEXT,

  11380 13 000704   400021 721100                    LXL1    17,,PR4
        13 000705   000777 361003                    ANX1    511,DU
        13 000706   040100 100540                    MLR     fill='040'O
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:61   
        13 000707   400022 000011                    ADSC9   18,,PR4                  cn=0,n=*X1
        13 000710   500024 200310                    ADSC9   20,,PR5                  cn=1,n=200

      468    11381    2         0,ADDR_SPEC.USER_NAME.COUNT);
      469    11382    2       VM_USERKEY.TEXT = SUBSTR(ADDR_SPEC.USER_NAME.TEXT,0,

  11382 13 000711   400021 721100                    LXL1    17,,PR4
        13 000712   000777 361003                    ANX1    511,DU
        13 000713   040000 100540                    MLR     fill='040'O
        13 000714   400022 000011                    ADSC9   18,,PR4                  cn=0,n=*X1
        13 000715   000002 400310 11                 ADSC9   VM_USERKEY               cn=2,n=200

      470    11383    2         ADDR_SPEC.USER_NAME.COUNT);
      471    11384    2       CALL VMA$GET_LIST (VM_USERKEY,VM_WORK$,M$MAIL_GLOBAL_NUM)

  11384 13 000716   000033 630400 14                 EPPR0   27
        13 000717   000012 631400 14                 EPPR1   10
        13 000720   000000 701000 xent               TSX1    VMA$GET_LIST
        13 000721   000723 702000 13                 TSX2    s:11387
        13 000722   000725 710000 13                 TRA     s:11389

      472    11385    2       WHENALTRETURN
      473    11386    3       DO;

      474    11387    3           ALTRETURN;

  11387 13 000723   200314 221300                    LDX1  ! VM_UADDRESS2+69,,AUTO
        13 000724   000000 702211                    TSX2  ! 0,X1

      475    11388    3       END;
      476    11389    2       RETURN;

  11389 13 000725   200314 221300                    LDX1  ! VM_UADDRESS2+69,,AUTO
        13 000726   000001 702211                    TSX2  ! 1,X1

      477    11390    2   END RESOLVE_USER;
      478    11391        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:62   
      479    11392    1   PICK_ADDRESS: PROC ALTRET;

  11392 13 000727   200314 741300       PICK_ADDRESS STX1  ! VM_UADDRESS2+69,,AUTO

      480    11393        /*
      481    11394             ***** If the definition contains multiple definitions
      482    11395                   then chose which one to open based upon the following
      483    11396                   rules.
      484    11397
      485    11398                   1) if sitename specifies a foreign site,
      486    11399                      then this address cannot be used.
      487    11400                   2) if one of the definitions points to the current
      488    11401                      account/uname then use this definition.
      489    11402                   3) if one of the definitions points to the current
      490    11403                      account(any uname) then use this definition.
      491    11404                   4) otherwise, use the first definition that refers
      492    11405                      to an address on the local site.
      493    11406        */
      494    11407    2       NEXT2$ = VM_WORK$ -> VM_ADD_HEAD.HEAD$;

  11407 13 000730   000000 470400 xsym               LDP0    VM_WORK$
        13 000731   000003 236100                    LDQ     3,,PR0
        13 000732   200014 756100                    STQ     NEXT2$,,AUTO

      495    11408    3       DO FOREVER;

      496    11409    3           CALL VMA$GET_NEXT_ENTRY (VM_UADDRESS2,VM_RADDRESS2,

  11409 13 000733   000034 236000 14                 LDQ     28
        13 000734   200321 756100                    STQ     @ADDR_SPEC+4,,AUTO
        13 000735   200014 630500                    EPPR0   NEXT2$,,AUTO
        13 000736   200320 450500                    STP0    @ADDR_SPEC+3,,AUTO
        13 000737   200057 631500                    EPPR1   VM_RADDRESS2,,AUTO
        13 000740   200317 451500                    STP1    @ADDR_SPEC+2,,AUTO
        13 000741   200207 633500                    EPPR3   VM_UADDRESS2,,AUTO
        13 000742   200316 453500                    STP3    @ADDR_SPEC+1,,AUTO
        13 000743   200316 630500                    EPPR0   @ADDR_SPEC+1,,AUTO
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:63   
        13 000744   000015 631400 14                 EPPR1   13
        13 000745   000000 701000 xent               TSX1    VMA$GET_NEXT_ENTRY
        13 000746   001012 702000 13                 TSX2    SEARCH_LOOPX

      497    11410    3             NEXT2$,VM_WORK$) ALTRET(SEARCH_LOOPX);
      498    11411    3           SITENAME = VM_RADDRESS2.SITENAME;

  11411 13 000747   040100 100500                    MLR     fill='040'O
        13 000750   200076 600010                    ADSC9   VM_RADDRESS2+15,,AUTO    cn=3,n=8
        13 000751   200021 000010                    ADSC9   SITENAME,,AUTO           cn=0,n=8

      499    11412    3           CALL VMA$GET_SITE_NAME (VM_RADDRESS2.SITENAME, SITENAME);

  11412 13 000752   200021 630500                    EPPR0   SITENAME,,AUTO
        13 000753   200317 450500                    STP0    @ADDR_SPEC+2,,AUTO
        13 000754   200320 452500                    STP2    @ADDR_SPEC+3,,AUTO
        13 000755   200320 236100                    LDQ     @ADDR_SPEC+3,,AUTO
        13 000756   000036 036000 14                 ADLQ    30
        13 000757   200316 756100                    STQ     @ADDR_SPEC+1,,AUTO
        13 000760   200316 630500                    EPPR0   @ADDR_SPEC+1,,AUTO
        13 000761   000020 631400 14                 EPPR1   16
        13 000762   000000 701000 xent               TSX1    VMA$GET_SITE_NAME
        13 000763   000000 011000                    NOP     0

      500    11413    3           IF (SITENAME = ' ' OR SITENAME = VM_SITENAME)

  11413 13 000764   040000 106500                    CMPC    fill='040'O
        13 000765   200021 000010                    ADSC9   SITENAME,,AUTO           cn=0,n=8
        13 000766   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 000767   000774 600000 13                 TZE     s:11413+8
        13 000770   040000 106500                    CMPC    fill='040'O
        13 000771   200021 000010                    ADSC9   SITENAME,,AUTO           cn=0,n=8
        13 000772   000000 000010 xsym               ADSC9   VM_SITENAME              cn=0,n=8
        13 000773   001011 601000 13                 TNZ     s:11419
        13 000774   200061 236100                    LDQ     VM_RADDRESS2+2,,AUTO
        13 000775   000777 376003                    ANQ     511,DU
        13 000776   000001 116003                    CMPQ    1,DU
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:64   
        13 000777   001011 601000 13                 TNZ     s:11419
        13 001000   000000 470400 xsym               LDP0    B$JIT$
        13 001001   040100 106500                    CMPC    fill='040'O
        13 001002   200100 600010                    ADSC9   VM_RADDRESS2+17,,AUTO    cn=3,n=8
        13 001003   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8
        13 001004   001011 601000 13                 TNZ     s:11419
        13 001005   040100 106500                    CMPC    fill='040'O
        13 001006   200063 400014                    ADSC9   VM_RADDRESS2+4,,AUTO     cn=2,n=12
        13 001007   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
        13 001010   001155 600000 13                 TZE     FOUND_IT

      501    11414    3             AND VM_RADDRESS2.TYPE = %VM_ADD_RESOLVED
      502    11415    3             AND VM_RADDRESS2.ACCT = B$JIT.FACCN
      503    11416    3             AND SUBSTR (VM_RADDRESS2.NAME_KEY, 8) = B$JIT.UNAME
      504    11417    3           THEN
      505    11418    3               GOTO FOUND_IT;
      506    11419    3       END;

  11419 13 001011   000733 710000 13                 TRA     s:11409

      507    11420    2   SEARCH_LOOPX:
      508    11421    2       NEXT2$ = VM_WORK$ -> VM_ADD_HEAD.HEAD$;

  11421 13 001012   000000 470400 xsym  SEARCH_LOOPX LDP0    VM_WORK$
        13 001013   000003 236100                    LDQ     3,,PR0
        13 001014   200014 756100                    STQ     NEXT2$,,AUTO

      509    11422    3       DO FOREVER;

      510    11423    3           CALL VMA$GET_NEXT_ENTRY (VM_UADDRESS2,VM_RADDRESS2,

  11423 13 001015   000034 236000 14                 LDQ     28
        13 001016   200321 756100                    STQ     @ADDR_SPEC+4,,AUTO
        13 001017   200014 630500                    EPPR0   NEXT2$,,AUTO
        13 001020   200320 450500                    STP0    @ADDR_SPEC+3,,AUTO
        13 001021   200057 631500                    EPPR1   VM_RADDRESS2,,AUTO
        13 001022   200317 451500                    STP1    @ADDR_SPEC+2,,AUTO
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:65   
        13 001023   200207 633500                    EPPR3   VM_UADDRESS2,,AUTO
        13 001024   200316 453500                    STP3    @ADDR_SPEC+1,,AUTO
        13 001025   200316 630500                    EPPR0   @ADDR_SPEC+1,,AUTO
        13 001026   000015 631400 14                 EPPR1   13
        13 001027   000000 701000 xent               TSX1    VMA$GET_NEXT_ENTRY
        13 001030   001107 702000 13                 TSX2    SEARCH_LOOP2

      511    11424    3             NEXT2$,VM_WORK$) ALTRET(SEARCH_LOOP2);
      512    11425    3           SITENAME = VM_RADDRESS2.SITENAME;

  11425 13 001031   040100 100500                    MLR     fill='040'O
        13 001032   200076 600010                    ADSC9   VM_RADDRESS2+15,,AUTO    cn=3,n=8
        13 001033   200021 000010                    ADSC9   SITENAME,,AUTO           cn=0,n=8

      513    11426    3           CALL VMA$GET_SITE_NAME (VM_RADDRESS2.SITENAME, SITENAME);

  11426 13 001034   200021 630500                    EPPR0   SITENAME,,AUTO
        13 001035   200317 450500                    STP0    @ADDR_SPEC+2,,AUTO
        13 001036   200320 452500                    STP2    @ADDR_SPEC+3,,AUTO
        13 001037   200320 236100                    LDQ     @ADDR_SPEC+3,,AUTO
        13 001040   000036 036000 14                 ADLQ    30
        13 001041   200316 756100                    STQ     @ADDR_SPEC+1,,AUTO
        13 001042   200316 630500                    EPPR0   @ADDR_SPEC+1,,AUTO
        13 001043   000020 631400 14                 EPPR1   16
        13 001044   000000 701000 xent               TSX1    VMA$GET_SITE_NAME
        13 001045   000000 011000                    NOP     0

      514    11427    3           IF SITENAME = ' ' OR SITENAME = VM_SITENAME

  11427 13 001046   040000 106500                    CMPC    fill='040'O
        13 001047   200021 000010                    ADSC9   SITENAME,,AUTO           cn=0,n=8
        13 001050   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 001051   001056 600000 13                 TZE     s:11430
        13 001052   040000 106500                    CMPC    fill='040'O
        13 001053   200021 000010                    ADSC9   SITENAME,,AUTO           cn=0,n=8
        13 001054   000000 000010 xsym               ADSC9   VM_SITENAME              cn=0,n=8
        13 001055   001015 601000 13                 TNZ     s:11423
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:66   

      515    11428    3           THEN                       /* Found one at local site */
      516    11429    4           DO;

      517    11430    4               IF VM_RADDRESS2.TYPE = %VM_ADD_RESOLVED

  11430 13 001056   200061 236100                    LDQ     VM_RADDRESS2+2,,AUTO
        13 001057   000777 376003                    ANQ     511,DU
        13 001060   000001 116003                    CMPQ    1,DU
        13 001061   001070 601000 13                 TNZ     s:11439

      518    11431    4               THEN
      519    11432    5               DO;

      520    11433    5                   IF VM_RADDRESS2.ACCT = B$JIT.FACCN

  11433 13 001062   000000 470400 xsym               LDP0    B$JIT$
        13 001063   040100 106500                    CMPC    fill='040'O
        13 001064   200100 600010                    ADSC9   VM_RADDRESS2+17,,AUTO    cn=3,n=8
        13 001065   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8
        13 001066   001155 600000 13                 TZE     FOUND_IT

      521    11434    5                   THEN   /* Use this one */
      522    11435    5                       GOTO FOUND_IT;
      523    11436    5               END;

  11436 13 001067   001015 710000 13                 TRA     s:11423

      524    11437    4               ELSE
      525    11438    5               DO;

      526    11439    5                   IF VM_UADDRESS2.NAME_KEY ~= ' '

  11439 13 001070   040000 106500                    CMPC    fill='040'O
        13 001071   200211 400024                    ADSC9   VM_UADDRESS2+2,,AUTO     cn=2,n=20
        13 001072   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 001073   001015 600000 13                 TZE     s:11423
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:67   

      527    11440    5                   THEN   /* Use this one */
      528    11441    6                   DO;  /* Fake a VM_RADDRESS2 */

      529    11442    6                       VM_RADDRESS2.TYPE = %VM_ADD_RESOLVED;

  11442 13 001074   000001 236003                    LDQ     1,DU
        13 001075   200061 552120                    STBQ    VM_RADDRESS2+2,'20'O,AUTO

      530    11443    6                       VM_RADDRESS2.ACCT = SUBSTR(VM_UADDRESS2.NAME_KEY,

  11443 13 001076   040100 100500                    MLR     fill='040'O
        13 001077   200211 400010                    ADSC9   VM_UADDRESS2+2,,AUTO     cn=2,n=8
        13 001100   200100 600010                    ADSC9   VM_RADDRESS2+17,,AUTO    cn=3,n=8

      531    11444    6                         0,LENGTHC(B$JIT.ACCN));
      532    11445    6                       IF VM_RADDRESS2.ACCT = B$JIT.FACCN

  11445 13 001101   000000 470400 xsym               LDP0    B$JIT$
        13 001102   040100 106500                    CMPC    fill='040'O
        13 001103   200100 600010                    ADSC9   VM_RADDRESS2+17,,AUTO    cn=3,n=8
        13 001104   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8
        13 001105   001155 600000 13                 TZE     FOUND_IT

      533    11446    6                       THEN   /* Use this one */
      534    11447    6                           GOTO FOUND_IT;
      535    11448    6                   END;

      536    11449    5               END;

      537    11450    4           END;

      538    11451    3       END;                            /* Do forever ... end */

  11451 13 001106   001015 710000 13                 TRA     s:11423

      539    11452        /*
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:68   
      540    11453             ***** Since none of the definitions pointed to the
      541    11454                   current account, just look for a definition on
      542    11455                   the current system ...
      543    11456        */
      544    11457    2   SEARCH_LOOP2:
      545    11458    2       NEXT2$ = VM_WORK$ -> VM_ADD_HEAD.HEAD$;

  11458 13 001107   000000 470400 xsym  SEARCH_LOOP2 LDP0    VM_WORK$
        13 001110   000003 236100                    LDQ     3,,PR0
        13 001111   200014 756100                    STQ     NEXT2$,,AUTO

      546    11459    3       DO FOREVER;

      547    11460    3           CALL VMA$GET_NEXT_ENTRY (VM_UADDRESS2,VM_RADDRESS2,

  11460 13 001112   000034 236000 14                 LDQ     28
        13 001113   200321 756100                    STQ     @ADDR_SPEC+4,,AUTO
        13 001114   200014 630500                    EPPR0   NEXT2$,,AUTO
        13 001115   200320 450500                    STP0    @ADDR_SPEC+3,,AUTO
        13 001116   200057 631500                    EPPR1   VM_RADDRESS2,,AUTO
        13 001117   200317 451500                    STP1    @ADDR_SPEC+2,,AUTO
        13 001120   200207 633500                    EPPR3   VM_UADDRESS2,,AUTO
        13 001121   200316 453500                    STP3    @ADDR_SPEC+1,,AUTO
        13 001122   200316 630500                    EPPR0   @ADDR_SPEC+1,,AUTO
        13 001123   000015 631400 14                 EPPR1   13
        13 001124   000000 701000 xent               TSX1    VMA$GET_NEXT_ENTRY
        13 001125   001202 702000 13                 TSX2    E_GETUSER

      548    11461    3             NEXT2$,VM_WORK$) ALTRET(E_GETUSER);
      549    11462    3           IF VM_RADDRESS2.SITENAME = ' '

  11462 13 001126   040000 106500                    CMPC    fill='040'O
        13 001127   200076 600010                    ADSC9   VM_RADDRESS2+15,,AUTO    cn=3,n=8
        13 001130   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 001131   001136 600000 13                 TZE     s:11466
        13 001132   040000 106500                    CMPC    fill='040'O
        13 001133   200076 600010                    ADSC9   VM_RADDRESS2+15,,AUTO    cn=3,n=8
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:69   
        13 001134   000000 000010 xsym               ADSC9   VM_SITENAME              cn=0,n=8
        13 001135   001112 601000 13                 TNZ     s:11460

      550    11463    3             OR VM_RADDRESS2.SITENAME = VM_SITENAME
      551    11464    3           THEN                       /* Found one at local site */
      552    11465    4           DO;

      553    11466    4               IF VM_RADDRESS2.TYPE = %VM_ADD_RESOLVED

  11466 13 001136   200061 236100                    LDQ     VM_RADDRESS2+2,,AUTO
        13 001137   000777 376003                    ANQ     511,DU
        13 001140   000001 116003                    CMPQ    1,DU
        13 001141   001143 601000 13                 TNZ     s:11473

      554    11467    4               THEN
      555    11468    5               DO;

      556    11469    5                   GOTO FOUND_IT;

  11469 13 001142   001155 710000 13                 TRA     FOUND_IT

      557    11470    5               END;
      558    11471    4               ELSE
      559    11472    5               DO;

      560    11473    5                   IF VM_UADDRESS2.NAME_KEY ~= ' '

  11473 13 001143   040000 106500                    CMPC    fill='040'O
        13 001144   200211 400024                    ADSC9   VM_UADDRESS2+2,,AUTO     cn=2,n=20
        13 001145   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 001146   001112 600000 13                 TZE     s:11460

      561    11474    5                   THEN   /* Use this one */
      562    11475    6                   DO;  /* Fake a VM_RADDRESS2 */

      563    11476    6                       VM_RADDRESS2.TYPE = %VM_ADD_RESOLVED;

PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:70   
  11476 13 001147   000001 236003                    LDQ     1,DU
        13 001150   200061 552120                    STBQ    VM_RADDRESS2+2,'20'O,AUTO

      564    11477    6                       VM_RADDRESS2.ACCT = SUBSTR(VM_UADDRESS2.NAME_KEY,

  11477 13 001151   040100 100500                    MLR     fill='040'O
        13 001152   200211 400010                    ADSC9   VM_UADDRESS2+2,,AUTO     cn=2,n=8
        13 001153   200100 600010                    ADSC9   VM_RADDRESS2+17,,AUTO    cn=3,n=8

      565    11478    6                         0,LENGTHC(B$JIT.ACCN));
      566    11479    6                       GOTO FOUND_IT;

  11479 13 001154   001155 710000 13                 TRA     FOUND_IT

      567    11480    6                   END;
      568    11481    5               END;
      569    11482    4           END;
      570    11483    3       END;                            /* Do forever ... end */

      571    11484        /*
      572    11485             ***** Now that a user has been found, fill in any
      573    11486                   overriding info from the VM_UADDRESS1 ...
      574    11487        */
      575    11488    2   FOUND_IT:
      576    11489    2       IF VM_UADDRESS1.FOLDER ~= ' '

  11489 13 001155   040000 106500       FOUND_IT     CMPC    fill='040'O
        13 001156   200112 400031                    ADSC9   VM_UADDRESS1+7,,AUTO     cn=2,n=25
        13 001157   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 001160   001167 600000 13                 TZE     s:11495

      577    11490    2       THEN
      578    11491    3       DO;

      579    11492    3           VM_RADDRESS2.FOLDER = VM_UADDRESS1.FOLDER;

  11492 13 001161   040100 100500                    MLR     fill='040'O
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:71   
        13 001162   200112 400031                    ADSC9   VM_UADDRESS1+7,,AUTO     cn=2,n=25
        13 001163   200066 400031                    ADSC9   VM_RADDRESS2+7,,AUTO     cn=2,n=25

      580    11493    3           VM_FOLDER_INFO.FLAGS.FOLDER_SPEC = %YES#;

  11493 13 001164   200005 470500                    LDP0    @VM_FOLDER_INFO,,AUTO
        13 001165   040000 236003                    LDQ     16384,DU
        13 001166   000023 256100                    ORSQ    19,,PR0

      581    11494    3       END;

      582    11495    2       IF VM_UADDRESS1.PASS ~= ' '

  11495 13 001167   040000 106500                    CMPC    fill='040'O
        13 001170   200120 600010                    ADSC9   VM_UADDRESS1+13,,AUTO    cn=3,n=8
        13 001171   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 001172   001176 600000 13                 TZE     s:11500

      583    11496    2       THEN
      584    11497    3       DO;

      585    11498    3           VM_RADDRESS2.PASS = VM_UADDRESS1.PASS;

  11498 13 001173   040100 100500                    MLR     fill='040'O
        13 001174   200120 600010                    ADSC9   VM_UADDRESS1+13,,AUTO    cn=3,n=8
        13 001175   200074 600010                    ADSC9   VM_RADDRESS2+13,,AUTO    cn=3,n=8

      586    11499    3       END;

      587    11500    2       SPEC$ = ADDR(VM_RADDRESS2);

  11500 13 001176   200057 630500                    EPPR0   VM_RADDRESS2,,AUTO
        13 001177   200012 450500                    STP0    SPEC$,,AUTO

      588    11501    2       RETURN;

  11501 13 001200   200314 221300                    LDX1  ! VM_UADDRESS2+69,,AUTO
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:72   
        13 001201   000001 702211                    TSX2  ! 1,X1

      589    11502        /**/
      590    11503    2   E_GETUSER:
      591    11504    2       ALTRETURN;

  11504 13 001202   200314 221300       E_GETUSER    LDX1  ! VM_UADDRESS2+69,,AUTO
        13 001203   000000 702211                    TSX2  ! 0,X1

      592    11505    2   END PICK_ADDRESS;
      593    11506        %EJECT;
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:73   
      594    11507    1   SET_FLAGS: PROC;

  11507 13 001204   200314 741300       SET_FLAGS    STX1  ! VM_UADDRESS2+69,,AUTO

      595    11508        /*
      596    11509             ***** Set flags in VM_FOLDER_INFO based
      597    11510                   on info in VM_RADDRESS1 ...
      598    11511        */
      599    11512    2       IF VM_RADDRESS1.FOLDER ~= ' '

  11512 13 001205   040000 106500                    CMPC    fill='040'O
        13 001206   200042 400031                    ADSC9   VM_RADDRESS1+7,,AUTO     cn=2,n=25
        13 001207   000000 000001 14                 ADSC9   0                        cn=0,n=1
        13 001210   001214 600000 13                 TZE     s:11520

      600    11513    2       THEN
      601    11514    3       DO;

      602    11515    3           VM_FOLDER_INFO.FLAGS.FOLDER_SPEC = %YES#;

  11515 13 001211   200005 470500                    LDP0    @VM_FOLDER_INFO,,AUTO
        13 001212   040000 236003                    LDQ     16384,DU
        13 001213   000023 256100                    ORSQ    19,,PR0

      603    11516    3       END;

      604    11517        /*
      605    11518             ***** Anything else???
      606    11519        */
      607    11520    2       RETURN;

  11520 13 001214   200314 221300                    LDX1  ! VM_UADDRESS2+69,,AUTO
        13 001215   000001 702211                    TSX2  ! 1,X1

ERROR
 Sect OctLoc
  11     000   000000 000000                                                    ....
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:74   

VM_USERKEY
 Sect OctLoc
  11     002   311120 ******   ****** ******   ****** ******   ****** ******    .P..............
  11     062*  ****** ******   ****** ******   ****** ******                    ............

E_TOOMANYADDRESSES
 Sect OctLoc
  12     000   261502 001440                                                    ....

E_NULLLIST
 Sect OctLoc
  12     001   261502 001470                                                    ....

E_NOTRESOLVED
 Sect OctLoc
  12     002   261502 007750                                                    ....

E_BADUSE
 Sect OctLoc
  12     003   261502 007760                                                    ....

E_NOUSER
 Sect OctLoc
  12     004   261502 007770                                                    ....

E_ILLWSN
 Sect OctLoc
  12     005   261502 010000                                                    ....

E_NOFOLDER
 Sect OctLoc
  12     006   261502 001700                                                    ....

(unnamed)
 Sect OctLoc
  12     007   103105 116124   122101 114040                                    CENTRAL
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:75   

(unnamed)
 Sect OctLoc
  14     000   040040 040040   000005 000000   400000 000000   000000 000000        ............
  14     004   000003 006000   000002 006000   000001 000000   000001 006000    ................
  14     010   000062 177640   000021 600000   000003 000000   000000 006014    .2..............
  14     014   000002 006000   000004 000000   000000 006000   000000 006000    ................
  14     020   000002 000000   000017 600000   000005 006000   000000 000002    ................
  14     024   000023 006000   000006 006000   000000 006000   000003 006000    ................
  14     030   000004 006000   056040 040040   000000 006003   000002 006000    .....   ........
  14     034   000000 006000   000000 006000   000076 600000                    .........>..
      608    11521    2   END SET_FLAGS;
      609    11522    1   END VMB$USE_SPECIFIED;
      610    11523        %EOD;

PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:76   
--  Include file information  --

   B_MACROS_C.:LIB_E05  is referenced.
   VM_DATA_R.:VMB6TOU  cannot be made into a system file and is referenced.
   VM_MACRO_C.:VMB6TOU  is referenced.
   VM_PERR_C.:VMB6TOU  is referenced.
   VM_SUBS_C.:VMB6TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIB_E05  is referenced.
   B$JIT_C.:LIB_E05  is referenced.
   B$JIT.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure VMB$USE_SPECIFIED.
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:77   

 **** Variables and constants ****

  ****  Section 011  Data  VMB$USE_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w UBIN              1 EDCB#                      0-0-0/w STRC        r     1 ERROR
     2-0-0/c STRC(1818)  r     1 VM_USERKEY

  ****  Section 012 RoData VMB$USE_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w STRC        r     1 E_BADUSE                   5-0-0/w STRC        r     1 E_ILLWSN
     6-0-0/w STRC        r     1 E_NOFOLDER                 2-0-0/w STRC        r     1 E_NOTRESOLVED
     4-0-0/w STRC        r     1 E_NOUSER                   1-0-0/w STRC        r     1 E_NULLLIST
     0-0-0/w STRC        r     1 E_TOOMANYADDRESSES

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ADDRESS$                315-0-0/w PTR         r     1 @ADDR_SPEC
     6-0-0/w PTR         r     1 @DCB#                     10-0-0/w PTR         r     1 @FUN
    11-0-0/w PTR         r     1 @SKIPERR                   4-0-0/w PTR         r     1 @USER_NAME
     5-0-0/w PTR         r     1 @VM_FOLDER_INFO            7-0-0/w PTR         r     1 @VM_SEARCH_INFO
    *0-0-0/w PTR         r     1 ADDRESS$                  *0-0-0/w STRC(2448)  r     1 ADDR_SPEC
    *0-0-0/w UBIN        r     1 DCB#                      23-0-0/c CHAR(25)    r     1 FOLDER
    15-0-0/b BIT         r     1 FOUND_FLAG#               *0-0-0/w SBIN        r     1 FUN
    32-0-0/w SBIN        r     1 IA                        13-0-0/w PTR         r     1 NEXT1$
    14-0-0/w PTR         r     1 NEXT2$                    16-0-0/b BIT         r     1 OPEN_FLAG#
    21-0-0/c CHAR(8)     r     1 SITENAME                  *0-0-0/b BIT         r     1 SKIPERR
    12-0-0/w PTR         r     1 SPEC$                     17-0-0/b BIT         r     1 TBIT
    20-0-0/w UBIN        r     1 TFUN                      *0-0-0/c ASTR(9)     r     1 USER_NAME
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:78   
    *0-0-0/w STRC(2529)  r     1 VM_FOLDER_INFO            33-0-0/w STRC(711)   r     1 VM_RADDRESS1
    57-0-0/w STRC(711)   r     1 VM_RADDRESS2              *0-0-0/w STRC(1260)  r     1 VM_SEARCH_INFO
   103-0-0/w STRC(2448)  r     1 VM_UADDRESS1             207-0-0/w STRC(2448)  r     1 VM_UADDRESS2

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/c ASTR(9)     r     1 ERRMSG_FID                 0-0-0/w UBIN              1 M$DO_NUM
     0-0-0/w UBIN              1 M$LO_NUM                   0-0-0/w UBIN              1 M$MAIL_CENTRAL_NUM
     0-0-0/w UBIN              1 M$MAIL_COMGROUP_NUM        0-0-0/w UBIN              1 M$MAIL_FILE_NUM
     0-0-0/w UBIN        r     1 M$MAIL_GLOBAL_NUM          0-0-0/w UBIN              1 M$ME_NUM
     0-0-0/w UBIN              1 M$NODE_NUM                 0-0-0/w UBIN              1 M$SI_NUM
     0-0-0/w UBIN              1 M$WORK_NUM                 0-0-0/w PTR         r     1 VM_ADDLIST$
     0-0-0/d VECT              1 VM_ADDLIST_                0-0-0/w PTR               1 VM_ADDREC$
     0-0-0/d VECT              1 VM_ADDREC_                 0-0-0/w PTR               1 VM_COPY$
     0-0-0/d VECT              1 VM_COPY_                   0-0-0/w PTR               1 VM_ENCLLIST$
     0-0-0/d VECT              1 VM_ENCLLIST_               0-0-0/w PTR               1 VM_ENCLREC$
     0-0-0/d VECT              1 VM_ENCLREC_                0-0-0/c STRC(270)         1 VM_FORWARD_ENCL_NAME
     0-0-0/c STRC(270)         1 VM_FORWARD_FILE_NAME       0-0-0/c STRC(72)          1 VM_FORWARD_FILE_PASS
     0-0-0/w PTR               1 VM_HEADER$                 0-0-0/d VECT              1 VM_HEADER_
     0-0-0/d VECT              1 VM_HEADER_INIT_            0-0-0/w PTR               1 VM_INPUT$
     0-0-0/d VECT              1 VM_INPUT_                  0-0-0/c STRC(72)          1 VM_MAILCG_NAME
     0-0-0/w STRC(432)         1 VM_MAILCG_SETSTA           0-0-0/c STRC(72)          1 VM_MAIL_ACCT
     0-0-0/c STRC(54)          1 VM_NAME_MAP_NAME           0-0-0/w PTR               1 VM_PARSEAREA$
     0-0-0/d VECT              1 VM_PARSEAREA_              0-0-0/w PTR               1 VM_PROFILE$
     0-0-0/d VECT              1 VM_PROFILE_                0-0-0/w PTR               1 VM_SELECT$
     0-0-0/d VECT              1 VM_SELECT_                 0-0-0/c STRC(288)         1 VM_SEND_FILE_NAME
     0-0-0/c CHAR(8)     r     1 VM_SITENAME                0-0-0/w PTR         r     1 VM_WORK$
     0-0-0/d VECT              1 VM_WORK_

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:79   

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0N  NULL        r     1 M$DO                       0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$MAIL_CENTRAL             0-0-0N  NULL        r     1 M$MAIL_COMGROUP
     0-0-0N  NULL        r     1 M$MAIL_FILE                0-0-0N  NULL        r     1 M$MAIL_GLOBAL
     0-0-0N  NULL        r     1 M$ME                       0-0-0N  NULL        r     1 M$NODE
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$UC
     0-0-0N  NULL        r     1 M$WORK                     0-0-0/w STRC(711)   r     1 VM$RADDRESS
     0-0-0/w STRC(2448)  r     1 VM$UADDRESS                0-0-0/w STRC(252)   r     1 VM_ADD_HEAD
     0-0-0/w STRC(252)   r     1 VM_LIST_HEAD               0-0-0/c ASTR(9)     r     1 X$STRING


   Procedure VMB$USE_SPECIFIED requires 654 words for executable code.
   Procedure VMB$USE_SPECIFIED requires 214 words of local(AUTO) storage.
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:80   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:81   
          MINI XREF LISTING

ADDRESS$
     10115**DCL        29--PROC    11020<>CALL    11045--ENTRY   11229--ENTRY   11255--ENTRY   11319--ENTRY
ADDR_SPEC IN PROCEDURE RESOLVE_USER
     11345**DCL     11334--PROC
ADDR_SPEC.FOLDER IN PROCEDURE RESOLVE_USER
     11360**DCL     11361--REDEF
ADDR_SPEC.USER_NAME.COUNT IN PROCEDURE RESOLVE_USER
     11369**DCL     11379>>ASSIGN  11380>>ASSIGN  11382>>ASSIGN
ADDR_SPEC.USER_NAME.TEXT IN PROCEDURE RESOLVE_USER
     11370**DCL     11380>>ASSIGN  11382>>ASSIGN
B$ALT.CODE
     10273**DCL     10273--REDEF   10274--REDEF   10274--REDEF
B$ALT.ERR
     10274**DCL     11188>>ASSIGN
B$ALT.ERR.ERR#
     10275**DCL     10275--REDEF
B$ALT.EVID
     10274**DCL     10274--REDEF   10274--REDEF
B$JIT.ACCN
       358**DCL     11443--ASSIGN  11477--ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       452**DCL       452--REDEF
B$JIT.ERR.MID
       359**DCL       359--REDEF
B$JIT.FACCN
       358**DCL     11128>>ASSIGN  11413>>IF      11433>>IF      11445>>IF
B$JIT.JRESPEAK
       520**DCL       521--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       629**DCL       629--REDEF     630--REDEF
B$JIT.PNR
       533**DCL       533--REDEF
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:82   
B$JIT.TSLINE
       627**DCL       628--REDEF
B$JIT.UNAME
       358**DCL     11413>>IF
B$JIT$
      9890**DCL       353--IMP-PTR 11128>>ASSIGN  11413>>IF      11413>>IF      11433>>IF      11445>>IF
B$TCB.ALT$
     10269**DCL     11188>>ASSIGN
B$TCB$
      9891**DCL     10269--IMP-PTR 11188>>ASSIGN
COMMON_CODE
     11059**LABEL   11025--GOTO
DCB#
     10173**DCL        29--PROC    11045--ENTRY   11173<>CALL    11181<>CALL    11193<>CALL    11229--ENTRY
     11255--ENTRY   11319--ENTRY
ERRMSG_FID.L#
      9959**DCL      9959--IMP-SIZ
ERROR
     10234**DCL     11188<<ASSIGN  11193<>CALL
ERROR.ERR#
     10264**DCL     11189>>IF
E_BADUSE
     10814**DCL     11200<>CALL
E_GETUSER IN PROCEDURE PICK_ADDRESS
     11504**LABEL   11460--CALLALT
E_ILLWSN
     10912**DCL     11157<>CALL
E_NOFOLDER
     10961**DCL     11191<>CALL
E_NOTRESOLVED
     10765**DCL     11072<>CALL
E_NOUSER
     11204**LABEL   11090--GOTO    11112--CALLALT 11116--CALLALT 11207<>CALL    11278--CALLALT 11279--CALLALT
E_NULLLIST
     10716**DCL     11062<>CALL
E_OPEN
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:83   
     11179**LABEL   11173--CALLALT
E_OPEN1
     11185**LABEL   11181--CALLALT
E_PMME
     11197**LABEL   11023--GOTO
E_TOOMANYADDRESSES
     10666**DCL     11099<>CALL
F$DCB.ACTPOS
     10628**DCL     10628--REDEF
F$DCB.ARS#
     10602**DCL     10602--REDEF
F$DCB.ATTR
     10621**DCL     10622--REDEF
F$DCB.BORROW
     10636**DCL     10636--REDEF   10636--REDEF   10636--REDEF
F$DCB.DCBNAME.L
     10650**DCL     10650--IMP-SIZ
F$DCB.EOMCHAR#
     10606**DCL     10606--REDEF
F$DCB.FCD#
     10615**DCL     11376>>IF
F$DCB.FLDID
     10631**DCL     10631--REDEF
F$DCB.FORM$
     10625**DCL     10625--REDEF
F$DCB.FSECT
     10641**DCL     10641--REDEF
F$DCB.FSN#
     10618**DCL     10618--REDEF   10618--REDEF   10619--REDEF
F$DCB.HEADER$
     10624**DCL     10624--REDEF
F$DCB.IXTNSIZE#
     10622**DCL     10622--REDEF
F$DCB.LASTSTA$
     10611**DCL     10611--REDEF
F$DCB.LVL
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:84   
     10637**DCL     10637--REDEF
F$DCB.NAME#.C
     10612**DCL     10612--REDEF
F$DCB.NOEOF
     10634**DCL     10634--REDEF
F$DCB.NRECS#
     10623**DCL     10623--REDEF
F$DCB.NRECX
     10642**DCL     10642--REDEF
F$DCB.OHDR
     10634**DCL     10634--REDEF
F$DCB.ORG#
     10617**DCL     10617--REDEF
F$DCB.PRECNO
     10640**DCL     10640--REDEF
F$DCB.RCSZ
     10646**DCL     10646--REDEF
F$DCB.RES#
     10613**DCL     10613--REDEF
F$DCB.SETX
     10625**DCL     10625--REDEF
F$DCB.TAB$
     10625**DCL     10625--REDEF
F$DCB.TDA
     10639**DCL     10640--REDEF
F$DCB.WSN#
     10613**DCL     10613--REDEF
FOLDER
     10220**DCL     11135<<ASSIGN  11142<<ASSIGN  11146>>IF      11148>>ASSIGN
FOUND_FLAG#
     10215**DCL     11081<<ASSIGN  11086>>IF      11096>>IF      11102<<ASSIGN
FOUND_IT IN PROCEDURE PICK_ADDRESS
     11489**LABEL   11418--GOTO    11435--GOTO    11447--GOTO    11469--GOTO    11479--GOTO
FUN
     10201**DCL        29--PROC    11045--ENTRY   11168--IF      11170>>ASSIGN  11229--ENTRY   11255--ENTRY
     11319--ENTRY
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:85   
IA
     10221**DCL     11289<<CALLBLT 11290>>ASSIGN  11291>>ASSIGN
INITIALIZE_DEFAULT
     11264**LABEL   11234--GOTO
M$MAIL_GLOBAL_NUM
      9874**DCL     11376--IF      11384<>CALL
NEXT1$
     10213**DCL     11080<<ASSIGN  11083<>CALL
NEXT2$
     10214**DCL     11407<<ASSIGN  11409<>CALL    11421<<ASSIGN  11423<>CALL    11458<<ASSIGN  11460<>CALL
OPEN_FLAG#
     10216**DCL     11010<<ASSIGN  11049<<ASSIGN  11165>>IF      11233<<ASSIGN  11259<<ASSIGN  11323<<ASSIGN
OPEN_FOLDER
     11124**LABEL   11088--GOTO    11280--GOTO    11297--GOTO
OPEN_NOW
     11165**LABEL   11332--GOTO
PICK_ADDRESS
     11392**PROC    11116--CALL    11279--CALL
RESOLVE_USER
     11334**PROC    11112--CALL    11278--CALL
SEARCH_LOOP2 IN PROCEDURE PICK_ADDRESS
     11458**LABEL   11423--CALLALT
SEARCH_LOOPX IN PROCEDURE PICK_ADDRESS
     11421**LABEL   11409--CALLALT
SET_FLAGS
     11507**PROC    11108--CALL    11296--CALL
SITENAME
     10219**DCL     11152<<ASSIGN  11153<>CALL    11154>>IF      11154>>IF      11411<<ASSIGN  11412<>CALL
     11413>>IF      11413>>IF      11425<<ASSIGN  11426<>CALL    11427>>IF      11427>>IF
SKIPERR
     10202**DCL        29--PROC    11045--ENTRY   11185--IF      11185>>ASSIGN  11197--IF      11197>>ASSIGN
     11204--IF      11204>>ASSIGN  11229--ENTRY   11255--ENTRY   11319--ENTRY
SPEC$
     10212**DCL     11107<<ASSIGN  11124>>IF      11126>>ASSIGN  11130>>IF      11130>>IF      11134>>ASSIGN
     11135>>ASSIGN  11142>>ASSIGN  11152>>ASSIGN  11153>>CALL    11173<>CALL    11181<>CALL    11295<<ASSIGN
     11331<<ASSIGN  11500<<ASSIGN
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:86   
TBIT
     10217**DCL     11185<<ASSIGN  11186<<ASSIGN  11187>>IF      11197<<ASSIGN  11198<<ASSIGN  11199>>IF
     11204<<ASSIGN  11205<<ASSIGN  11206>>IF
TFUN
     10218**DCL     11170<<ASSIGN  11172<<ASSIGN  11173<>CALL    11179>>IF
USER_NAME
     10117**DCL        29--PROC    11020<>CALL    11045--ENTRY   11229--ENTRY   11255--ENTRY   11270<>CALL
     11319--ENTRY
USER_NAME.SIZ
     10118**DCL     10119--IMP-SIZ 11020>>CALL    11270>>CALL    11273>>ASSIGN  11274>>ASSIGN  11287>>IF
     11289>>CALLBLT 11290>>ASSIGN  11291>>ASSIGN  11293>>ASSIGN
USER_NAME.TEXT
     10119**DCL     11273>>ASSIGN  11287>>IF      11289>>CALLBLT 11290>>ASSIGN  11291>>ASSIGN  11293>>ASSIGN
VM$RADDRESS.ACCT
     10556**DCL     11124>>IF      11126>>ASSIGN
VM$RADDRESS.FOLDER
     10548**DCL     10549--REDEF   11142>>ASSIGN
VM$RADDRESS.NOMAD.DELIM
     10551**DCL     11130>>IF
VM$RADDRESS.NOMAD.FOLDER
     10550**DCL     11135>>ASSIGN
VM$RADDRESS.NOMAD.PSID
     10552**DCL     11130>>IF      11134>>ASSIGN
VM$RADDRESS.SITENAME
     10555**DCL     11152>>ASSIGN  11153<>CALL
VM$UADDRESS.FLAGS.UNDEF#
     10574**DCL     11069>>IF
VM$UADDRESS.FOLDER
     10583**DCL     10584--REDEF
VM$UADDRESS.USER_NAME
     10591**DCL     11072--CALL
VMA$ADDRESS
     10204**DCL-ENT 11020--CALL
VMA$ERRMSG
     10205**DCL-ENT 11062--CALL    11072--CALL    11099--CALL    11157--CALL    11191--CALL    11193--CALL
     11200--CALL    11207--CALL
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:87   
VMA$GET_LIST
     10207**DCL-ENT 11384--CALL
VMA$GET_NEXT_ENTRY
     10206**DCL-ENT 11083--CALL    11409--CALL    11423--CALL    11460--CALL
VMA$GET_SITE_NAME
     10208**DCL-ENT 11153--CALL    11412--CALL    11426--CALL
VMA$OPEN_FOLDER
     10209**DCL-ENT 11173--CALL    11181--CALL
VMB$TESTREG
     10210**DCL-ENT 11270--CALL
VM_ADDLIST$
      9813**DCL     10475--IMP-PTR 10504--IMP-PTR 11022>>IF      11059>>IF      11069>>IF      11072>>CALL
     11080>>ASSIGN  11083<>CALL
VM_ADD_HEAD.HEAD$
     10514**DCL     11080>>ASSIGN  11407>>ASSIGN  11421>>ASSIGN  11458>>ASSIGN
VM_FOLDER_INFO
     10131**DCL        29--PROC    11045--ENTRY   11173<>CALL    11181<>CALL    11229--ENTRY   11255--ENTRY
     11319--ENTRY
VM_FOLDER_INFO.ACCT
     10134**DCL     11126<<ASSIGN  11128<<ASSIGN  11327>>ASSIGN
VM_FOLDER_INFO.FLAGS
     10154**DCL     11016<<ASSIGN  11052<<ASSIGN  11266<<ASSIGN
VM_FOLDER_INFO.FLAGS.ACCT_SPEC
     10159**DCL     11294<<ASSIGN
VM_FOLDER_INFO.FLAGS.FOLDER_SPEC
     10161**DCL     11493<<ASSIGN  11515<<ASSIGN
VM_FOLDER_INFO.FOLDER
     10136**DCL     11148<<ASSIGN  11150<<ASSIGN  11328>>ASSIGN
VM_FOLDER_INFO.PASS
     10138**DCL     11329>>ASSIGN
VM_FOLDER_INFO.PSID
     10132**DCL     11134<<ASSIGN  11141<<ASSIGN
VM_FOLDER_INFO.SITENAME
     10140**DCL     11330>>ASSIGN
VM_FOLDER_INFO.USER_NAME.COUNT
     10170**DCL     11014<<ASSIGN  11050<<ASSIGN  11264<<ASSIGN  11379<<ASSIGN
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:88   
VM_FOLDER_INFO.USER_NAME.TEXT
     10171**DCL     11015<<ASSIGN  11051<<ASSIGN  11265<<ASSIGN  11380<<ASSIGN
VM_LIST_HEAD.FLAGS.ERR#
     10481**DCL     11022>>IF
VM_LIST_HEAD.HEAD$
     10485**DCL     11069>>IF      11072>>CALL
VM_LIST_HEAD.NUM_ENTRIES
     10478**DCL     11059>>IF
VM_RADDRESS1
     10314**DCL     11083<>CALL    11106>>ASSIGN  11295--ASSIGN
VM_RADDRESS1.ACCT
     10337**DCL     11290<<ASSIGN  11293<<ASSIGN
VM_RADDRESS1.FOLDER
     10329**DCL     10330--REDEF   11284<<ASSIGN  11512>>IF
VM_RADDRESS1.NOMAD.PSID
     10333**DCL     11291<<ASSIGN
VM_RADDRESS1.PASS
     10334**DCL     11285<<ASSIGN
VM_RADDRESS1.SITENAME
     10336**DCL     11092>>IF      11092>>IF      11286<<ASSIGN
VM_RADDRESS1.TYPE
     10326**DCL     11103>>IF
VM_RADDRESS2
     10349**DCL     11106<<ASSIGN  11107--ASSIGN  11331--ASSIGN  11409<>CALL    11423<>CALL    11460<>CALL
     11500--ASSIGN
VM_RADDRESS2.ACCT
     10372**DCL     11327<<ASSIGN  11413>>IF      11433>>IF      11443<<ASSIGN  11445>>IF      11477<<ASSIGN
VM_RADDRESS2.FOLDER
     10364**DCL     10365--REDEF   11328<<ASSIGN  11492<<ASSIGN
VM_RADDRESS2.NAME_KEY
     10362**DCL     11413>>IF
VM_RADDRESS2.PASS
     10369**DCL     11329<<ASSIGN  11498<<ASSIGN
VM_RADDRESS2.SITENAME
     10371**DCL     11330<<ASSIGN  11411>>ASSIGN  11412<>CALL    11425>>ASSIGN  11426<>CALL    11462>>IF
     11462>>IF
PL6.E3A0      #001=VMB$USE_SPECIFIED File=VMB$USE.:VMB6TSI                       WED 08/20/97 15:06 Page:89   
VM_RADDRESS2.TYPE
     10361**DCL     11413>>IF      11430>>IF      11442<<ASSIGN  11466>>IF      11476<<ASSIGN
VM_SEARCH_INFO
     10184**DCL        29--PROC    11020<>CALL    11045--ENTRY   11229--ENTRY   11255--ENTRY   11319--ENTRY
VM_SITENAME
     10082**DCL     11092>>IF      11154>>IF      11413>>IF      11427>>IF      11462>>IF
VM_UADDRESS1
     10384**DCL     11083<>CALL    11112<>CALL    11278<>CALL
VM_UADDRESS1.FOLDER
     10399**DCL     10400--REDEF   11275<<ASSIGN  11489>>IF      11492>>ASSIGN
VM_UADDRESS1.PASS
     10404**DCL     11276<<ASSIGN  11495>>IF      11498>>ASSIGN
VM_UADDRESS1.SITENAME
     10406**DCL     11277<<ASSIGN
VM_UADDRESS1.USER_NAME.COUNT
     10408**DCL     11274<<ASSIGN
VM_UADDRESS1.USER_NAME.TEXT
     10409**DCL     11273<<ASSIGN
VM_UADDRESS2
     10421**DCL     11409<>CALL    11423<>CALL    11460<>CALL
VM_UADDRESS2.FOLDER
     10436**DCL     10437--REDEF
VM_UADDRESS2.NAME_KEY
     10434**DCL     11439>>IF      11443>>ASSIGN  11473>>IF      11477>>ASSIGN
VM_USERKEY
     10458**DCL     11384<>CALL
VM_USERKEY.TEXT
     10462**DCL     11382<<ASSIGN
VM_WORK$
      9817**DCL     11384<>CALL    11407>>ASSIGN  11409<>CALL    11421>>ASSIGN  11423<>CALL    11458>>ASSIGN
     11460<>CALL
X$STRING.SIZ
      9805**DCL      9806--IMP-SIZ

PL6.E3A0      #002=VMB$TESTREG File=VMB$USE.:VMB6TSI                             WED 08/20/97 15:07 Page:90   
      611        1        /*T***********************************************************/
      612        2        /*T*                                                         */
      613        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      614        4        /*T*                                                         */
      615        5        /*T***********************************************************/
      616        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,DCI=4 */
      617        7        /*F*
      618        8             NAME:    VMB$TESTREG
      619        9
      620       10             PURPOSE: To indicate whether the specified textc
      621       11                      field is a registered user name.
      622       12
      623       13             DESCRIPTION:
      624       14                      If the specified textc field is a username,
      625       15                      it does not begin with a "." character and
      626       16                      it does not have the form: "DP#xxxxxx.acct[/folder].
      627       17        */
      628       18        VMB$TESTREG: proc(USER_NAME) altret;
      629       19
      630       20    1   dcl  IA    sbin;
      631       21    1   dcl  IB    sbin;
      632       22    1   dcl 1     USER_NAME      aligned,
      633       23    1         2  COUNT          ubin(9) caligned,
      634       24    1         2  TEXT           char(USER_NAME.COUNT);
      635       25
      636       26    1       if substr(USER_NAME.TEXT,,3) = 'DP#' then
      637       27    2       do;
      638       28    2           call index(IA,'.',USER_NAME.TEXT) altret(Its_Resolved);
      639       29    2           call index(IB,'/',USER_NAME.TEXT);
      640       30    2           IA = MINIMUM(IA,IB);
      641       31    2           if IA < 4 or IA > 10 then goto Its_Resolved;
      642       32    2           altreturn;
      643       33    2       end;
      644       34    1       else if substr(USER_NAME.TEXT,,1) = '.'
      645       35    1           then altreturn;
      646       36
      647       37    1   Its_Resolved:
PL6.E3A0      #002=VMB$TESTREG File=VMB$USE.:VMB6TSI                             WED 08/20/97 15:07 Page:91   
      648       38    1       return;
      649       39
      650       40    1   end;

PL6.E3A0      #002=VMB$TESTREG File=VMB$USE.:VMB6TSI                             WED 08/20/97 15:07 Page:92   
      No diagnostics issued in procedure VMB$TESTREG.

   Procedure VMB$TESTREG requires 35 words for executable code.
   Procedure VMB$TESTREG requires 6 words of local(AUTO) storage.

    No errors detected in file VMB$USE.:VMB6TSI    .

PL6.E3A0      #002=VMB$TESTREG File=VMB$USE.:VMB6TSI                             WED 08/20/97 15:07 Page:93   

 Object Unit name= VMB$TESTREG                                File name= VMB$USE.:VMB6TOU
 UTS= AUG 20 '97 15:07:23.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  VMB$TESTREG
    1   Proc  even  none    35     43  VMB$TESTREG
    2  RoData even  none     2      2  VMB$TESTREG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  VMB$TESTREG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #002=VMB$TESTREG File=VMB$USE.:VMB6TSI                             WED 08/20/97 15:07 Page:94   


      611        1        /*T***********************************************************/
      612        2        /*T*                                                         */
      613        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      614        4        /*T*                                                         */
      615        5        /*T***********************************************************/
      616        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,DCI=4 */
      617        7        /*F*
      618        8             NAME:    VMB$TESTREG
      619        9
      620       10             PURPOSE: To indicate whether the specified textc
      621       11                      field is a registered user name.
      622       12
      623       13             DESCRIPTION:
      624       14                      If the specified textc field is a username,
      625       15                      it does not begin with a "." character and
      626       16                      it does not have the form: "DP#xxxxxx.acct[/folder].
      627       17        */
      628       18        VMB$TESTREG: proc(USER_NAME) altret;

     18  1 000000   000000 700200 xent  VMB$TESTREG  TSX0  ! X66_AUTO_1
         1 000001   000006 000001                    ZERO    6,1

      629       19
      630       20    1   dcl  IA    sbin;
      631       21    1   dcl  IB    sbin;
      632       22    1   dcl 1     USER_NAME      aligned,
      633       23    1         2  COUNT          ubin(9) caligned,
      634       24    1         2  TEXT           char(USER_NAME.COUNT);
      635       25
      636       26    1       if substr(USER_NAME.TEXT,,3) = 'DP#' then

     26  1 000002   200003 470500                    LDP0    @USER_NAME,,AUTO
         1 000003   000000 236100                    LDQ     0,,PR0
         1 000004   000033 772000                    QRL     27
         1 000005   040000 106500                    CMPC    fill='040'O
         1 000006   000000 200003                    ADSC9   0,,PR0                   cn=1,n=3
PL6.E3A0      #002=VMB$TESTREG File=VMB$USE.:VMB6TSI                             WED 08/20/97 15:07 Page:95   
         1 000007   000000 000003 0                  ADSC9   0                        cn=0,n=3
         1 000010   000035 601000 1                  TNZ     s:34

      637       27    2       do;

      638       28    2           call index(IA,'.',USER_NAME.TEXT) altret(Its_Resolved);

     28  1 000011   000000 620006                    EAX0    0,QL
         1 000012   000000 124540                    SCM     mask='000'O
         1 000013   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         1 000014   000000 000001 2                  ADSC9   0                        cn=0,n=1
         1 000015   200004 000100                    ARG     IA,,AUTO
         1 000016   000042 606400 1                  TTN     ITS_RESOLVED

      639       29    2           call index(IB,'/',USER_NAME.TEXT);

     29  1 000017   000000 124540                    SCM     mask='000'O
         1 000020   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         1 000021   000001 000001 2                  ADSC9   1                        cn=0,n=1
         1 000022   200005 000100                    ARG     IB,,AUTO

      640       30    2           IA = MINIMUM(IA,IB);

     30  1 000023   200005 236100                    LDQ     IB,,AUTO
         1 000024   200004 116100                    CMPQ    IA,,AUTO
         1 000025   000027 604400 1                  TMOZ    s:30+4
         1 000026   200004 236100                    LDQ     IA,,AUTO
         1 000027   200004 756100                    STQ     IA,,AUTO

      641       31    2           if IA < 4 or IA > 10 then goto Its_Resolved;

     31  1 000030   000004 116007                    CMPQ    4,DL
         1 000031   000042 604000 1                  TMI     ITS_RESOLVED
         1 000032   000012 116007                    CMPQ    10,DL
         1 000033   000042 605400 1                  TPNZ    ITS_RESOLVED

      642       32    2           altreturn;
PL6.E3A0      #002=VMB$TESTREG File=VMB$USE.:VMB6TSI                             WED 08/20/97 15:07 Page:96   

     32  1 000034   000000 702200 xent               TSX2  ! X66_AALT

      643       33    2       end;
      644       34    1       else if substr(USER_NAME.TEXT,,1) = '.'

     34  1 000035   000000 236100                    LDQ     0,,PR0
         1 000036   000777 376003                    ANQ     511,DU
         1 000037   000056 116003                    CMPQ    46,DU
         1 000040   000042 601000 1                  TNZ     ITS_RESOLVED

      645       35    1           then altreturn;

     35  1 000041   000000 702200 xent               TSX2  ! X66_AALT

      646       36
      647       37    1   Its_Resolved:
      648       38    1       return;

     38  1 000042   000000 702200 xent  ITS_RESOLVED TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   0     000   104120 043040                                                    DP#

(unnamed)
 Sect OctLoc
   2     000   056040 040040   057040 040040                                    .   /
      649       39
      650       40    1   end;

PL6.E3A0      #002=VMB$TESTREG File=VMB$USE.:VMB6TSI                             WED 08/20/97 15:07 Page:97   
      No diagnostics issued in procedure VMB$TESTREG.
PL6.E3A0      #002=VMB$TESTREG File=VMB$USE.:VMB6TSI                             WED 08/20/97 15:07 Page:98   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @USER_NAME                 4-0-0/w SBIN        r     1 IA
     5-0-0/w SBIN        r     1 IB                        *0-0-0/w ASTR(9)     r     1 USER_NAME


   Procedure VMB$TESTREG requires 35 words for executable code.
   Procedure VMB$TESTREG requires 6 words of local(AUTO) storage.

    No errors detected in file VMB$USE.:VMB6TSI    .
PL6.E3A0      #002=VMB$TESTREG File=VMB$USE.:VMB6TSI                             WED 08/20/97 15:07 Page:99   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VMB$TESTREG File=VMB$USE.:VMB6TSI                             WED 08/20/97 15:07 Page:100  
          MINI XREF LISTING

IA
        20**DCL        28<<CALLBLT    30<<ASSIGN     30>>ASSIGN     31>>IF         31>>IF
IB
        21**DCL        29<<CALLBLT    30>>ASSIGN
ITS_RESOLVED
        38**LABEL      28--CALLALT    31--GOTO
USER_NAME
        22**DCL        18--PROC
USER_NAME.COUNT
        23**DCL        24--IMP-SIZ    26>>IF         28>>CALLBLT    29>>CALLBLT    34>>IF
USER_NAME.TEXT
        24**DCL        26>>IF         28>>CALLBLT    29>>CALLBLT    34>>IF
