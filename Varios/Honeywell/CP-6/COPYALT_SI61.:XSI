/*M* COPYALT - Copies file with alternate indexes */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X* DDA */
COPYALT: PROC MAIN;
       %INCLUDE CP_6;
       %INCLUDE CP_6_SUBS;
       %INCLUDE B_SEGIDS_C;
       %INCLUDE B_ERRORS_C;
/* */
       %FPT_OPEN(FPTN=OPEN_SI, DCB=M$SI, FPARAM=FPARAM);
       %FPT_OPEN(FPTN=OPEN_OU, DCB=M$OU, IFPARAM=FPARAM,
          LOAD=YES, ACS=DIRECT);
       %FPT_GDS(RESULTS=VLP_VECTOR, FREE=YES);
       %VLP_VECTOR(SEGID=%DS3SID);
       %FPT_OPEN(FPTN=OPEN_SCRATCH, DCB=M$SCRATCH, DISP=SCRATCH,
          ORG=KEYED, ASN=FILE, FUN=CREATE, ACS=DIRECT);
       %FPT_PRECORD(DCB=M$SI, N=0, ID=YES, IDBUF=ID);
       %FPT_WRITE(FPTN=FPT_WRITE_ID, DCB=M$SCRATCH,
          KEY=KEY);
       %FPT_REW(DCB=M$SCRATCH);
       %FPT_PRECORD(FPTN=PRECORD_GET_ID, KEYR=YES, N=0,
          KEY=KEY, DCB=M$SCRATCH);
       %FPT_PRECORD(FPTN=PRECORD_SET_ID, IDS=YES, KEYS=NO,
          IDBUF=ID, DCB=M$SI);
       %FPT_READ(FPTN=READ_SI, DCB=M$SI);
       %FPT_WRITE(FPTN=WRITE_OU, DCB=M$OU);
       %FPT_CLOSE(FPTN=CLOSE_SI, DCB=M$SI, DISP=SAVE);
       %FPT_CLOSE(FPTN=CLOSE_OU, DCB=M$OU, DISP=SAVE);
       %FPT_WRITE(FPTN=WRITE_LO, DCB=M$LO, BUF=LO_BUF);
       %F$DCB(DCBN=F$DCB, BASED="BASED(DCB$)");
/* */
       %B$TCB;
       %B$ALT;
/* */
       DCL XUR$ERRMSG ENTRY(7) ALTRET;
/* */
       DCL M$SI DCB;
       DCL M$OU DCB;
       DCL M$LO DCB;
       DCL M$SCRATCH DCB;
/* */
       DCL B$TCB$ PTR SYMREF;
       DCL DCB$ PTR;
       DCL LO_BUF CHAR(0) CONSTANT INIT('..COPYALTing');
       DCL FPARAM(0:1023) UBIN STATIC INIT(0*0);
       DCL 1 ID STATIC,
            2 * UBIN,
            2 GX UBIN(10) UNAL,
            2 DA UBIN(26) UNAL;
       DCL 1 KEY STATIC,
            2 * UBIN(9) CALIGNED INIT(4),
            2 DA UBIN(26) UNAL,
            2 GX UBIN(10) UNAL;
/* */
       CALL M$OPEN(OPEN_SI) ALTRET(MERR);
       DCB$=DCBADDR(DCBNUM(M$SI));
 
       READ_SI.BUF_.BOUND=F$DCB.ARS#-1;
 
       FPT_GDS.V.SEGSIZE#=F$DCB.ARS#/4;
       CALL M$GDS(FPT_GDS) ALTRET(MERR);
       READ_SI.BUF_.BUF$=VLP_VECTOR.PTR$;
       WRITE_OU.BUF_.BUF$=VLP_VECTOR.PTR$;
 
       CALL M$OPEN(OPEN_OU) ALTRET(MERR);
       CALL M$OPEN(OPEN_SCRATCH) ALTRET(MERR);
 
       CALL M$WRITE(WRITE_LO) ALTRET(MERR);
 
       DO WHILE('1'B);
          CALL M$PRECORD(FPT_PRECORD) ALTRET(EOF);
          FPT_PRECORD.V.N#=1;
 
          KEY.DA=ID.DA;
          KEY.GX=ID.GX;
          CALL M$WRITE(FPT_WRITE_ID) ALTRET(MERR);
       END;  /* WHILE */
 
EOF:   IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$EOF THEN
          GOTO MERR;
 
       CALL M$REW(FPT_REW) ALTRET(MERR);
 
       DO WHILE('1'B);
          CALL M$PRECORD(PRECORD_GET_ID) ALTRET(EOF2);
          PRECORD_GET_ID.V.N#=1;
          ID.DA=KEY.DA;
          ID.GX=KEY.GX;
 
          CALL M$PRECORD(PRECORD_SET_ID) ALTRET(MERR);
          CALL M$READ(READ_SI) ALTRET(MERR);
          WRITE_OU.BUF_.BOUND=F$DCB.ARS#-1;
          CALL M$WRITE(WRITE_OU) ALTRET(MERR);
       END;  /* WHILE */
 
EOF2:  IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$EOF THEN
          GOTO MERR;
 
       CALL M$CLOSE(CLOSE_SI) ALTRET(MERR);
       CALL M$CLOSE(CLOSE_OU) ALTRET(MERR);
 
       CALL M$EXIT;
MERR:  CALL XUR$ERRMSG(B$TCB$->B$TCB.ALT$->B$ALT.ERR,
          B$TCB$->B$TCB.ALT$->B$ALT.DCB#);
       CALL M$EXIT;
       END COPYALT;
