FILER provides a testbed envorinment for experimentation with CP-6
monitor services.  Each FILER command is a single uppercase letter.
Other help topics of general interest are keyed to a single number.
HELP file for: FILER
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
Notation used in this guide
 
a - alphabetic single char name
b - buffer specified by its name (a) or name contained in Z-reg (*Za)
         (except in the <offset>, <size> and <range> descriptions)
[...] - optional item
 
Available to the user
 
26 I/O buffers--size/contents set by user
26 Z-registers--36 bits wide/contents set by user
         both referenced by alphabetic name A...Z
Which word/char/bit?
 
<offset> ::= W[w][,[c][,[b]]] - bit b of char c of word w
             [C][c][,[b]] - bit b of char c
             B[b] - bit b
         Any w, c or b is optional and assumed zero if missing;
         all are values (see Values section below).
 
How many words/chars/bits?
 
<size> ::= W[w][,[c][,[b]]] - w words, c chars and b bits
           [C][c][,[b]] - c chars and b bits
           B[b] - b bits
         Any w, c or b is optional; all are values (below).
         If W, C or B is specified with no corresponding
         w, c or b a value of 1 for w, c or b is assumed.
Which words/chars/bits?
 
<range> ::= <offset>
         ex: W3,,17 bit 17 of word 3 - one bit
            <offset1> - <offset2>
         ex: W4-5  words 4 through 5 - two words
            <offset1> : <size>
         ex: C4:5  chars 4, 5, 6, 7 and 8 (5 chars starting with char 4)
              If <offset1> is missing the first bit of
              the buffer is assumed.  if <offset2> is
              missing the last bit of the buffer is assumed.
            .fptname.PL-6 qualification
         ex: Y.FPT_OPEN.V.ATTR.DENS# - six bits
            .fptname.PL-6 qualification-<offset>
            .fptname.PL-6 qualification:<size>
              Rather than selecting a field both above
              select only a starting bit.  The <offset> or <size>
              specifies the ending bit.
Values
 
 'text'  "textc"  .octal  Za  [b[<range>]] #based [$]decimal
Note: the outer square brackets above represent square brackets.
 $-decimal  $+decimal
 %b = size of buffer b in bits, 0 if NIL/ERASE, -1 if unallocated--36 bit value
 
         Values may be concatenated by appearing adjacent to
         one another.  Text values require 9 bits/char.  Textc
         values require 9 bits/char plus one 9 bit char count.
         Octal values require 3 bits/digit.  Based values
         require n bits/digit where 2**n is the current base.
         Decimal and Z-register values require 36 bits.
         Buffer values are not the same as buffers.  M$READ BUF=b
         is not the same as M$READ BUF=[b].  The first reads into
         b, the second reads into a temporary which contains contents
         identical to b.
Value width modification
 
<value>(<size>) makes <value> have size <size> by extending to
         the left with zero bits or truncating leftmost bits
     e.g. 'A'(W) is the 36 bit value .000000000101, 'A' is the 9
     bit value .101
<value>{<size>} makes a <size> value composed of repetitions of <value>
Formats <fmt>
 
I - decimal integer M - machine(octal)   @ - based   T - text
L - textc   X - command   W - width   S - text with no single quotes
         Both I and W formats display values of not more than 36 bits.
 
Displaying values
 
<value1> [<fmt1>] [, <valuen> [<fmtn>] ]...
         display <value1> is format <fmt1>, <value2> in <fmt2>, ...
Comments
 
/* commentary */  Must appear as a single command followed by a
         semi-colon if other commands follow.
FILER programs
 
FILER programs are created either by entering commands into
a buffer (Ab=C) or by entering them for immediate execution.
A FILER program is composed of commands separated by semi-colons.
Commands may be grouped into lines to facilitate addressing
certain commands for transfer operations.  When a new line
is desired, terminate the current line with a semi-colon and
then hit 'RETURN'.  You will be prompted by the line number of
the next line.  If a line is terminated with an ampersand,
the next line typed will become part of the previous
line and is prompted for without a line number.  When entering commands
into a buffer the first line is also prompted for.
 
ex:
      AB=C /* Accept commands into buffer B */
[1]   AG80;MREAD BUF=G,DCB=1,WAIT=YES&
      ,KEY="FIRSTKEY",KEYS;
[2]   [G]T;/* DISPLAY BUFFER G IN TEXT FORMAT */
      GB; /* Goto buffer B (execute the command) */
DCB's used by FILER
 
M$SI    input
M$LO    output
M$F1    FILER DCB # 1.
M$F2      "    "  # 2.
M$F3      "    "  # 3.
 
Using BATCH or XEQ
 
FILER echos commands input when running batch or XEQ.
Execution will be aborted if an error occurs while running batch or XEQ.
Notes...
 
All buffers are DALIGNED.
Buffer Y will contain the last FPT created for a(n attempted)
         monitor service call.
Buffer X will contain the last command typed if that command
         refered to a non-X buffer or attempted to execute
         a monitor service call.
The specified value for most FPT fields is stored right
         justified except for CHAR and BIT type fields for which
         the value is stored left justified.
Options which initialize <=2 bit fields have the default value YES
         ex: instead of saying KEYR=YES just say KEYR
Complete qualification of FPT items is not necessary
         ex: .OPEN.DENS# may replace .OPEN.V.ATTR.DENS#
Hitting BREAK causes the command currently being executed to be
         errored unless execution is at a point which can't be
         interrupted.
The '!' command causes information regarding buffer storage to
         be displayed.
Z-register X will contain JIT.ERR.CODE after each service call
Z-register Y is used to tell FILER certain runtime messages:
         '000000000001'O  don't give minor verification messages
         '000000000002'O  don't give ALTRET messages
         '000000000004'O  abort execution of the current command string
                          and return to command level
         '000000000010'O  don't use M$ERRMSG to report ALTRETs
         '000000000020'O  abort execution and return to command level
                          if a M$ service call ALTRETs
         Z-register Y is initially '000000000000'O.
Z-register Z is used to return event information.  It is a bit array
         in which BIT(x) is set to indicate event x completed.  The
         user must re-zero the Z-register as needed.
Buffers are limited to 7200 words.
FILER data space (total of all buffers, etc.)
         is limited to 255K words.
Allocating buffers
 
A             list used buffers, types and widths
Ab            deallocate buffer b
Ab[?]=<value> allocate as DCB number <value>; form a correspondence
         between buffer b and DCB number <value>--references to
         buffer b will actually refer to the specified DCB
         Note: <value> must be >0 and <=3.
Ab[?]<size>   allocate with size <size>; +/- size if already allocated
Ab+<size>     increase size
Ab-<size>     decrease size
Ab[?]=P<value> allocate as area pointed to by pointer <value>;
         like DCB 'allocation' except forms a correspondence between buffer
         b and the area pointed to by the pointer specified as <value>
Ab[?]=C       accept commands from the terminal and store them in b
Ab[?]=E       allocate b as if it were an ERASE buffer
Ab[?]=N       allocate b as if it were a NIL buffer
 
         If ? appears, the buffer b must not currently be allocated.
         Buffers allocated by "A" are not expanded or contracted by "S".
Base
 
B             display the current base
B<value>      set the current base to <value>
         The current base affects the interpretation
         and display of based values.  Legal bases are 2, 4, 8 and 16.
6/15/89 - Make M$Rxxx use FPT_xxx if there's no FPT_Rxxx. (star 38268)
11/4/87 - Fixed help for programs.
5/26/87 and 6/15/87 - Fix minor bugs in 5/15 changes.
5/15/87 - Star fixes. Helpier help. "Sb=fptname options" works, Q quits.
7/18/85 (by Frank Mayhar)
Set up JCL and programs to munge CP_6_C.:LIBRARY into a form readable by
the BASIC routines, in order to make FILER able to compile successfully.
Also fixed two bugs that were causing memory faults.  Closed stars 6090
and 19446.
??/??/??
Installed in LADC X account.
CHANGES
Default DCB number
 
D        display the default DCB number
D=<value> set default DCB number to <value>
 
         The default DCB number is used whenever the user fails to specify
         a value for an option which is used to initialize an FPT field
         with its DCBNUM. The default DCB is initialy 1.  The default DCB
         number may be set to 0 to indicate no default is to be supplied.
8
Editing buffers
 
Eb[<occurrence>][:<line#>] / <value1> / <value2> / [<groupwidth>]
 
         Searches for the <occurrence> occurrence of <value1> in b
         starting at line number <line#> and substitutes <value2>
         if found.  If <occurrence> is not specified 1 is assumed.
         If <=0 is specified, all occurrences are changed. If <line#>
         is not specfied, line number [1] is assumed.
         The <groupwidth> serves to tell FILER how the buffer
         should be searched--in what groups of bits.  If the
         <groupwidth> is not specified, C (9 bits) is assumed.
 
         <occurrence> and <line#> are values; <groupwidth>
         is a <size>.
If
 
F<value1><relop><value2><transfer command>
         <relop> is <, <=, =, >=, > or ~=
         <value1> is compared to <value2>.  The shorter (lengthwise) value
         is extended to the right with zeroes.  If <value1> <relop> <value2>
         is true, the <transfer command> is executed.  (The <transfer command>
         is either a G or U command.)  If the condition is false, the command
         following the F command is executed.
5
Goto
 
Gb       goto buffer b
Gb:<value> goto buffer b line <value>
G:<value> goto line <value> (current buffer)
G+<value> goto line <value> plus current line number
G-<value> goto line - <value> plus current line number
G[b]:0   return or terminate execution of current buffer
Help
 
H         tells how to use FILER
H c       tell about specific command "c"
?         displays names of known structures
H M name  displays valid options and values
? name    displays valid options and values
H M name. displays names of structure items
? name.   displays names of structure items
Line width/mode
 
L        displays the current line width and mode
L<value> changes the line width to <value>
LU       change mode to automatic upshift of lower case alphas
LN       change mode to leave lower case alphas alone (default)
LX       change mode to "do not echo XEQ files" (default)
LE       change mode to "echo XEQ files"
Monitor call
 
M$callname [/fptname]  [<options>,...][<option>=b,...][<option>=<value>,...]
             [<option>=<option>,...]
 
ex: M$WRITE BUF='record contents',DCB=1,WAIT
    M$WRITE BUF=B,DCB=3,WAIT=NO,KEY=.003000000001,KEYS
 
         Options which would normally be assigned to a DCB name should be
         assigned to a value of 1 to 3 specifying which DCB.
         A leading portion of a buffer may be specified by following the
         buffer specification with a <size> in parentheses.  Thus,
         M$READ BUF=B(W2,3) would read into the first 11 bytes of B only.
         If the optional fptname is specified, e.g. M$GTRMCTL/FPT_TRMCTL,
         it is used instead of the default FPT_pmmename to determine
         proper FPT and options.
Peter Rumsey, LADC
7
X
Read command file
 
R filename [ . account]  begin accepting commands from the specified file
R             resume reading the previous command source (might be
              file or terminal)
Buffer modification (set command)
 
Sb=<value> set buffer contents to <value>
Sb=<vlp_name> <options> set buffer contents to VLP with specified options
Sb<range>=<value> set contents of buffer range to <value>
         If the width of the value exceeds that of the range
         leading zero bits are ignored.  If value width is
         less than that of the range the value is left
         justified in the range.  The S command may be used
         to implicitly allocate variable size buffers.
         Variable size buffers may be implicitly expanded
         or contracted.
 
ex: SBB2=0 set bit 2 of buffer B to 0
    SD='TEXT STRING' set buffer D to text string 'TEXT STRING'
    SB.VLP_SN.SN#(2)='PSN000' Set the 3rd serial number to 'PSN000'
    SB=VLP_TRMCTL DISPINPUT=NO  Make buffer B a VLP_TRMCTL
Undertake (GOSUB, CALL)
 
U...     same as G except execution resumes with the following
         command when the buffer transferred to terminates
         execution.
Exit
 
X or Q
FILER.X
AID=UTILITY
AID=PROGRAMMING
TOOL=FILER
Allows interactive execution of Monitor Services.
Z-register
 
Za[<fmt>] display the Z-register in specified format; default decimal
Za<op><value> perform the <op> with Z-register a and <value>
         as operands and store the result in Z-register "a".
Za=<value> assign <value> to Z-register a
Za=<value1><op><value2>  perform <op> with <value1> and <value2>
         as operands and store the result in Z-register a
 
         <op> is +, -, *, /, &, !, < or ** (left shift),
                       > or **- (shift right)
 
         The resultant value is right justified.
CHANGES
