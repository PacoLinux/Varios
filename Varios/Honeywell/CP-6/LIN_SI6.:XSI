/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1990    */
/*T*                                                         */
/*T***********************************************************/
LIN:PROC MAIN;
%INCLUDE CP_6;
%INCLUDE B$JIT;
DCL B$JIT$ PTR SYMREF;
DCL B$TCB$ PTR SYMREF;
%B$TCB(STCLASS="BASED(B$TCB$)");
%B$ALT;
%FPT_ERRMSG(CODE=C,BUF=LBUF,OUTDCB1=M$ME);
%FPT_WRITE(FPTN=LINEWR,DCB=M$ME,BUF=LBUF);
%FPT_OPEN(EXIST=OLDFILE,SETDCB=YES,ORG=KEYED,CTG=YES,ACS=DIRECT);
%FPT_CLOSE;
%FPT_READ(FPTN=README,DCB=M$ME,BUF=LBUF,STCLASS=CONSTANT);
%FPT_READ(FPTN=READSI,DCB=M$SI,BUF=LBUF,STCLASS=CONSTANT);
%FPT_PRECORD(DCB=M$SI);
%FPT_WRITE(DCB=M$UI,BUF=LBUF,KEY=EDITKEY,NEWKEY=YES,ONEWKEY=NO);
%FPT_WRITE(DCB=M$UI,FPTN=WRITE_NIL,KEY=EDITKEY,NEWKEY=YES,ONEWKEY=NO);
%FPT_TIME(STCLASS=CONSTANT,DATE=CBUF,DEST=LOCAL);
%FPT_YC(LINK=YES,ECHO=NO,CMD=YCBUF.T,STCLASS=CONSTANT);
%FPT_PROMPT(PROMPT=PLUS,STCLASS=CONSTANT);
%INCLUDE XUW_MACRO_C;
%XUW_WILDCARD (PATTERN="ID_PATTERNS(0)",OUTPUT=LBUF,
               TEMPLATE=XUW_WILDCARD.WILD_CHAR#);
DCL X$WILDFMT ENTRY(1) ALTRET;
DCL PATTERN CHAR(8) BASED(XUW_WILDCARD.PATTERN_.PATTERN$);
DCL PLUS CHAR(1)CONSTANT INIT('+');
%F$DCB;
DCL M$ME DCB;
DCL M$SI DCB;
DCL M$UI DCB;
DCL LBUF CHAR(256) STATIC;
DCL 1 YCBUF REDEF LBUF,
   2 T CHAR(140), /* MODMOVE WANTS ONLY 140 CHARS */
   2 O CHAR(116);
DCL TBUF CHAR(8);
DCL CBUF CHAR(70) STATIC;
DCL LINBUF CHAR(20) STATIC;
DCL LINSIZ SBIN STATIC INIT(0);
DCL ID_PATTERN_COUNT SBIN STATIC SYMDEF INIT(20);
DCL ID_PATTERNS(0:39) CHAR(8) STATIC SYMDEF INIT(
'?ACTC','?APL','?APL','?ARES','?BASIC','?C80','?CAP','?COB','?CSD','?DOCUM',
'?FEP','?FORT','?HOST','?IDSII','?MNGR','?PL6','?SECR','?SOFT','?SUPRT',
'?TEXT',' '*0);
DCL CSIZ UBIN;
DCL I UBIN;
DCL J UBIN;
DCL C STATIC UBIN;
DCL 1 EDITKEY STATIC,
 2 L UBIN(9)UNAL INIT(3),
 2 N UBIN(27)UNAL;
DCL M$SI$ PTR;
DCL M$ME$ PTR;
DCL M$UI$ PTR;
 
   CALL M$TIME(FPT_TIME);
   CALL INSERT(CBUF,1,,SUBSTR(CBUF,0,8));
   CALL INSERT(CBUF,0,1,' ');
/* Find the best match of ACCN to ID_PATTERNS */
   CALL INDEX(CSIZ,' ',B$JIT.ACCN);
   SUBSTR(CBUF,10)=B$JIT.ACCN;
   XUW_WILDCARD.INPUT_.BOUND=CSIZ-1;
   XUW_WILDCARD.INPUT_.INPUT$=ADDR(B$JIT.ACCN);
   DO WHILE ID_PATTERN_COUNT>0;
      CALL INDEX(I,' ',PATTERN);
      XUW_WILDCARD.PATTERN_.BOUND=I-1;
      CALL X$WILDFMT (XUW_WILDCARD) WHENRETURN DO;
         IF CSIZ<=XUW_WILDCARD.OUTPUT_LEN THEN EXIT;
         IF XUW_WILDCARD.OUTPUT_LEN<2 THEN EXIT;
         CSIZ=XUW_WILDCARD.OUTPUT_LEN;
         SUBSTR(CBUF,10)=SUBSTR(LBUF,0,CSIZ);
         END;
      XUW_WILDCARD.PATTERN_.PATTERN$=PINCRC(XUW_WILDCARD.PATTERN_.PATTERN$,8);
      ID_PATTERN_COUNT=ID_PATTERN_COUNT-1;
      END;
   I=CSIZ+12;
   CALL INSERT(CBUF,I-1,4,'#???');
   J=B$JIT.CCARS-1;
   IF SUBSTR(B$JIT.CCBUF,J,1)=')' THEN J=J-1;
   IF J>B$JIT.CCDISP THEN DO;
      J=J-B$JIT.CCDISP;
      CALL INSERT(CBUF,I,J,SUBSTR(B$JIT.CCBUF,B$JIT.CCDISP+1,J));
      END;
   ELSE J=3;
   CSIZ=I+J;
   CALL M$PROMPT(FPT_PROMPT);
   M$UI$=DCBADDR(DCBNUM(M$UI));
   M$SI$=DCBADDR(DCBNUM(M$SI));
   M$ME$=DCBADDR(DCBNUM(M$ME));
   IF M$UI$->F$DCB.RES#='CR' THEN FPT_OPEN.V.ASN#=1;
   IF M$UI$->F$DCB.NAME#.C<=' ' THEN
OPNUI: FPT_OPEN.NAME_=VECTOR(M$SI$->F$DCB.NAME#);
   FPT_OPEN.V.FUN#=3;
   FPT_OPEN.V.DCB#=DCBNUM(M$UI);
   CALL M$OPEN(FPT_OPEN);
   J=0;
   DO WHILE('1'B);
NEWREAD:;
      LBUF=' ';
      CALL M$READ(README);
      CALL INDEX1(I,'A',LBUF,0,'677'O)ALTRET(NUMBER);
      J=0;
      FPT_CLOSE.V.DCB#=DCBNUM(M$SI);
      CALL M$CLOSE(FPT_CLOSE)ALTRET(NOTOPN);
      FPT_CLOSE.V.DCB#=DCBNUM(M$UI);
      CALL M$CLOSE(FPT_CLOSE)ALTRET(NOTOPN);
NOTOPN:;
      IF SUBSTR(LBUF,0,1)='!' THEN DO;
         LBUF=SUBSTR(LBUF,1);
         CALL M$YC(FPT_YC) ALTRET(NEWREAD);
         GOTO NEWREAD;
      END;
      TBUF=SUBSTR(LBUF,0,8);
      DO I=0 TO 7;
         IF SUBSTR(LBUF,I,1)>'_' THEN CALL INSERT(LBUF,I,1,
           BITASC(ASCBIT(SUBSTR(LBUF,I,1))&'737'O));
         END;
      IF LBUF='E' THEN DO;
         CALL CONCAT(LBUF,'E ',SUBSTR(M$UI$->F$DCB.NAME#.C,0,
           M$UI$->F$DCB.NAME#.L),'.',M$UI$->F$DCB.ACCT#);
         CALL M$YC(FPT_YC) ALTRET(NXTREAD);
         END;
      ELSE IF LBUF='EX' THEN DO;
         CALL CONCAT(LBUF,'EX ',SUBSTR(M$SI$->F$DCB.NAME#.C,0,
           M$SI$->F$DCB.NAME#.L),'.',M$SI$->F$DCB.ACCT#);
         CALL M$YC(FPT_YC) ALTRET(NXTREAD);
         END;
      ELSE IF SUBSTR(LBUF,0,2)='K' THEN DO;
         IF LBUF~='K' THEN CALL CONCAT(YCBUF.O,'(',SUBSTR(LBUF,2,
           M$ME$->F$DCB.ARS#-2),')');
         CALL CONCAT(YCBUF.T,'KEYUP.X ',SUBSTR(M$UI$->F$DCB.NAME#.C,0,
           M$UI$->F$DCB.NAME#.L),'.',M$UI$->F$DCB.ACCT#,YCBUF.O);
         CALL M$YC(FPT_YC) ALTRET(NXTREAD);
         END;
      ELSE IF LBUF='6E' OR LBUF='6' THEN DO;
         CALL CONCAT(LBUF,'6EDIT ',SUBSTR(M$UI$->F$DCB.NAME#.C,0,
           M$UI$->F$DCB.NAME#.L),'.',M$UI$->F$DCB.ACCT#,
           '($BY EQ .1;$REKEY EQ 0',SUBSTR(LINBUF,0,LINSIZ));
         CALL M$YC(FPT_YC) ALTRET(NXTREAD);
         END;
      ELSE IF LBUF='6EX' OR LBUF='6X' THEN DO;
         CALL CONCAT(LBUF,'6EDIT (PR FI ',SUBSTR(M$SI$->F$DCB.NAME#.C,0,
           M$SI$->F$DCB.NAME#.L),'.',M$SI$->F$DCB.ACCT#,')');
         CALL M$YC(FPT_YC) ALTRET(NXTREAD);
         END;
      ELSE IF LBUF='PEX' OR LBUF='PX' THEN DO;
         CALL CONCAT(LBUF,'PULSE ',SUBSTR(M$SI$->F$DCB.NAME#.C,0,
           M$SI$->F$DCB.NAME#.L),'.',M$SI$->F$DCB.ACCT#);
         CALL M$YC(FPT_YC) ALTRET(NXTREAD);
         END;
      ELSE IF LBUF='PE' OR LBUF='P' THEN DO;
         CALL CONCAT(LBUF,'PULSE ',SUBSTR(M$UI$->F$DCB.NAME#.C,0,
           M$UI$->F$DCB.NAME#.L),'.',M$UI$->F$DCB.ACCT#);
         CALL M$YC(FPT_YC) ALTRET(NXTREAD);
         END;
      ELSE IF SUBSTR(LBUF,0,2)='C=' THEN DO;
         CALL INDEX1(C,'#',CBUF);
         CALL INSERT(LBUF,0,8,TBUF);
         CALL INSERT(CBUF,C+1,,SUBSTR(LBUF,2,M$ME$->F$DCB.ARS#-2));
         CSIZ=C+M$ME$->F$DCB.ARS#-1;
         GOTO NEWREAD;
         END;
      ELSE IF SUBSTR(LBUF,0,2)='Q' OR SUBSTR(LBUF,0,2)='X' THEN RETURN;
      ELSE IF SUBSTR(LBUF,0,8)='MODMOVE' OR SUBSTR(LBUF,0,2)='M' THEN DO;
         CALL INDEX1(C,' ',LBUF);
         IF SUBSTR(LBUF,C)~=' '
         THEN CALL CONCAT(YCBUF.O,'(',SUBSTR(LBUF,C+1,M$ME$->F$DCB.ARS#-C),
           SUBSTR(M$UI$->F$DCB.NAME#.C,0,M$UI$->F$DCB.NAME#.L),
           '.',M$UI$->F$DCB.ACCT#,')');
         CALL CONCAT(YCBUF.T,'MODMOVE ',YCBUF.O);
         CALL M$YC(FPT_YC) ALTRET(NXTREAD);
         END;
      ELSE DO;
         SUBSTR(LBUF,0,8)=TBUF;
         CALL INSERT(LBUF,1,31,SUBSTR(LBUF,0,31));
         CALL INSERT(LBUF,0,1,BINASC(M$ME$->F$DCB.ARS#));
         FPT_OPEN.NAME_=VECTOR(LBUF);
         FPT_OPEN.V.DCB#=DCBNUM(M$SI);
         FPT_OPEN.V.FUN#=2;
         CALL M$OPEN(FPT_OPEN);
         LINSIZ=0;
         GOTO OPNUI;
         END;
NXTREAD:;
      LINSIZ=0;
      GOTO NEWREAD;
/**/
NUMBER:
      CALL INDEX1(C,',',SUBSTR(LBUF,0,M$ME$->F$DCB.ARS#),0,'003'O);
      IF C=0 THEN DO;
         LBUF=SUBSTR(LBUF,1);
         C=M$ME$->F$DCB.ARS#-1;
         END;
      CALL CHRBIN(I,0,C)ALTRET(BADBIN);
      FPT_PRECORD.V.N#=I-J-1;
      CALL M$PRECORD(FPT_PRECORD) ALTRET(ERR0);
      EDITKEY.N=I*1000;
      J=I;
      IF C=M$ME$->F$DCB.ARS# THEN DO;
         CALL INSERT(LBUF,1,,SUBSTR(LBUF,0,C),',',SUBSTR(LBUF,1,C),CBUF);
         FPT_WRITE.BUF_.BOUND=C*2+CSIZ+1;
         END;
      ELSE IF C=M$ME$->F$DCB.ARS#-1 THEN DO;
         CALL INSERT(LBUF,1,,SUBSTR(LBUF,0,C),CBUF);
         FPT_WRITE.BUF_.BOUND=C+CSIZ;
         I=I+1; /* We always read the first record to test existence */
         END;
      ELSE DO;
         FPT_WRITE.BUF_.BOUND=M$ME$->F$DCB.ARS#+CSIZ;
         J=I-1; /* Get position right if we go to BADBIN */
         CALL CHRBIN(J,C+1,M$ME$->F$DCB.ARS#-C-1)ALTRET(BADBIN);
         IF J<I THEN GOTO J_LT_I;
         CALL INSERT(LBUF,C,1,',');
         CALL INSERT(LBUF,1,,SUBSTR(LBUF,0,M$ME$->F$DCB.ARS#),CBUF);
      END;
      CALL INSERT(LBUF,0,1,'+');
      CALL M$WRITE(FPT_WRITE)ALTRET(ERR);
      IF LINSIZ=0 THEN DO;
         CALL CONCAT(LINBUF,';BO ',SUBSTR(LBUF,1,C),';BO ''%%R''');
         LINSIZ=-C; /* Save halfway, in case of errors */
         END;
      C=100;
      DO WHILE(C*(J-I+1) > 999);
         C=C/2;
         IF C=25 THEN C=20;
         END;
      IF C=0 THEN C=1;
      DO UNTIL I>J;
         CALL M$READ(READSI)WHENALTRETURN DO;
            IF LINSIZ<0 THEN LINSIZ=0;
            GOTO ERR;
            END;
         IF LINSIZ<0 THEN LINSIZ=13-LINSIZ;
         IF I>J THEN EXIT;
         I=I+1;
         EDITKEY.N=EDITKEY.N+C;
         FPT_WRITE.BUF_.BOUND=M$SI$->F$DCB.ARS#-1;
         IF M$SI$->F$DCB.ARS#~=0 THEN CALL M$WRITE(FPT_WRITE)ALTRET(ERR);
         ELSE CALL M$WRITE(WRITE_NIL)ALTRET(ERR);
      END;
   END;
/**/
ERR0:;                                  /* FIX OUR FILE POSITION              */
   IF I>J THEN I=I+M$SI$->F$DCB.ARS#-FPT_PRECORD.V.N#;
   ELSE I=I-M$SI$->F$DCB.ARS#-FPT_PRECORD.V.N#;
ERR:;
   C=BITBIN(B$TCB.ALT$->B$ALT.ERR&'777777777770'O);
   FPT_ERRMSG.V.DCB#=B$TCB.ALT$->B$ALT.DCB#;
   CALL M$ERRMSG(FPT_ERRMSG);
   J=I-1;
   LBUF=' at line';
   IF FPT_ERRMSG.V.DCB#~=DCBNUM(M$SI) THEN DO;
      CALL BINCHAR(SUBSTR(LBUF,10,8),EDITKEY.N);
      CALL INSERT(LBUF,9,6,SUBSTR(LBUF,10,5),'.');
      END;
   ELSE CALL BINCHAR(SUBSTR(LBUF,9,5),I);
   CALL EDITCHAR(LBUF,9,4,'104'O,SUBSTR(LBUF,9,5));
   CALL M$WRITE(LINEWR);
   GOTO NEWREAD;
J_LT_I: J=I-1;
   LBUF='  +i>j ???';
   CALL M$WRITE(LINEWR);
   GOTO NEWREAD;
BADBIN: LBUF='  That''s not a number!!';
   CALL M$WRITE(LINEWR);
   GOTO NEWREAD;
/**/
CHRBIN: PROC(OUT,FIRST,SIZ) ALTRET;
DCL OUT UBIN;
DCL FIRST UBIN;
DCL SIZ UBIN;
DCL X UBIN;
   X=FIRST;
   DO WHILE X<FIRST+SIZ;
      IF SUBSTR(LBUF,X,1)<'0' OR SUBSTR(LBUF,X,1)>'9' THEN ALTRETURN;
      X=X+1;
      END;
   CALL CHARBIN(OUT,SUBSTR(LBUF,FIRST,SIZ));
   RETURN;
   END;
END;
