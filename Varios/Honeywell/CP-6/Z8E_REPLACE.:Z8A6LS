

09:21 AUG 09 '97 Z8E_REPLACE.:Z8A6SI/Z8E_REPLACE.:Z8A6TUI                  1    
    1      /*M* LEX_REPLACE -- Data structures for source text replacement */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7
    8
    9      %EQU WITH_DATA_SIZE = 9;
   10      %EQU NO_DATA_SIZE = 7;
   11      %EQU WITH_DATA_TEXT = 'WITH DATA';
   12      %EQU NO_DATA_TEXT = 'NO DATA';
   13
   14      DCL CURRENT_SYMBOL_LEVEL SBIN WORD EXT INIT(0);
   15      DCL REPLACE_ACTIVE BOOLEAN EXT INIT(FALSE);
   16      DCL IGNORE_COPY_REPLACE BOOLEAN EXT INIT(FALSE);
   17      DCL COPY_DEBUG_LEVEL SBIN EXT INIT(0);
   18
   19      DCL 1 REPLACE_ITEM BASED,
   20            2 LINK$      PTR,
   21            2 FROM_LIST$ PTR,
   22            2 TO_LIST$   PTR,
   23            2 LEVEL      SBIN WORD,
   24            2 FROM_IS_PSEUDO_TEXT BIT(1) ALIGNED,
   25            2 TO_IS_PSEUDO_TEXT BIT(1) ALIGNED,
   26            2 TO_PSEUDO_TEXT_LINES$  PTR;
   27
   28
   29      DCL 1 REPLACE_LIST EXT,
   30            2 LINK$ PTR INIT(ADDR(NIL)),
   31            2 *     PTR,
   32            2 *     PTR,
   33            2 *     SBIN WORD;
   34
   35
   36      %MACRO GET_BRAND_NEW_TOKEN;
   37
09:21 AUG 09 '97 Z8E_REPLACE.:Z8A6SI/Z8E_REPLACE.:Z8A6TUI                  2    
   38          DO;
   39            CALL Z8ES$SCANNER;
   40
   41            DO WHILE LEX_SYMBOL.TYPE = %END_OF_LINE;
   42              CALL Z8EL$GET_NEXT_SCANNER_LINE;
   43              CALL Z8ES$SCANNER;
   44            END;
   45          END;
   46
   47      %MEND;
   48
   49
   50      %MACRO GET_LEX_SYMBOL_FROM_QUEUE;
   51        DO;
   52          %COPY_BASED_LEX_SYMBOL(FROM$=LEX_SYMBOL_QUEUE$,
   53                                 TO$ = "ADDR(LEX_SYMBOL)");
   54          CALL Z8ED$DISPOSE_HEAP (LEX_SYMBOL_QUEUE$,
   55                                     %LEX_SYMBOL_ACTUAL_WORD_LEN(S$=LEX_SYMBOL_QUEUE$);
   56                                    );
   57          LEX_SYMBOL_QUEUE$ = LEX_SYMBOL.NEXT$;
   58          LEX_SYMBOL.NEXT$ = ADDR(NIL);
   59        END;
   60      %MEND;
   61
   62
   63      %MACRO GET_A_TOKEN;
   64
   65      DO;
   66        IF LEX_SYMBOL_QUEUE$ ~= ADDR(NIL) THEN
   67        %GET_LEX_SYMBOL_FROM_QUEUE;
   68        ELSE
   69          DO;
   70            %GET_BRAND_NEW_TOKEN;
   71            IF LEX_SYMBOL.LEVEL ~= CURRENT_SYMBOL_LEVEL
   72                 AND NOT LEX_SYMBOL.B.REPLACED_TOKEN THEN
   73              CALL Z8EL$HANDLE_LEVEL_CHANGE(LEX_SYMBOL.LEVEL);
   74        END;
09:21 AUG 09 '97 Z8E_REPLACE.:Z8A6SI/Z8E_REPLACE.:Z8A6TUI                  3    
   75      END;
   76      %MEND;
   77
   78    * %MACRO GET_A_TOKEN_OR_COPY;
   79    *
   80    *   /* This macro is used in REPLACE statement processing
   81    *      in place of GET_A_TOKEN in order to conform to ANSI-85
   82    *      page XII-7, "any REPLACE statements are processed after
   83    *      the processing of any COPY statements".
   84    *   */
   85    *
   86    *   DO;
   87    *
   88    *     %GET_A_TOKEN;
   89    *
   90    *     IF LEX_SYMBOL.SIZE = 4
   91    *     AND SUBSTR (LEX_SYMBOL.SYMBOL, 0, 4) = 'COPY' THEN DO;
   92    *
   93    *       CALL Z8EL$PROCESS_COPY;
   94    *       %GET_A_TOKEN;
   95    *
   96    *     END; /* LEX_SYMBOL = 'COPY' */
   97    *
   98    *   END;
   99    *
  100    * %MEND;  /* GET_A_TOKEN_OR_COPY */
  101
  102      %MACRO PARSE_A_TOKEN;
  103        DO;
  104          %GET_A_TOKEN;
  105          %UPDATE_PARSE_POSITION;
  106        END;
  107      %MEND;
  108
  109
  110      %MACRO UPDATE_PARSE_POSITION;
  111        DO;
09:21 AUG 09 '97 Z8E_REPLACE.:Z8A6SI/Z8E_REPLACE.:Z8A6TUI                  4    
  112          COMCOM.CURRENT.LINE = LEX_SYMBOL.LINE;
  113          COMCOM.CURRENT.COLUMN = LEX_SYMBOL.COLUMN;
  114        END;
  115      %MEND;
  116
  117
  118      DCL Z8ES$SCANNER ENTRY;
  119      DCL Z8EL$GET_NEXT_SCANNER_LINE ENTRY;
  120
  121      DCL LEX_SYMBOL_QUEUE$ PTR EXT INIT(ADDR(NIL));
  122
  123
  124      %MACRO LEX_SYMBOL_ACTUAL_WORD_LEN (S$=);
  125
  126        ((LENGTHC(S$ -> BASED_LEX_SYMBOL) + 3) / 4)
  127
  128      %MEND;
  129
  130
  131      %MACRO COPY_BASED_LEX_SYMBOL (FROM$=, TO$=);
  132        DO;
  133          TO$ -> BASED_LEX_SYMBOL.SIZE = FROM$ -> BASED_LEX_SYMBOL.SIZE;
  134          TO$ -> BASED_LEX_SYMBOL = FROM$ -> BASED_LEX_SYMBOL;
  135        END;
  136
  137      %MEND;
  138
  139
  140
  141      %MACRO COPY_TO_NEW_LEX_SYMBOL (FROM$=, TO$=);
  142
  143        DO;
  144          CALL Z8ED$NEW_HEAP (TO$,
  145                                 %LEX_SYMBOL_ACTUAL_WORD_LEN(S$=FROM$);
  146                                );
  147          %COPY_BASED_LEX_SYMBOL(FROM$=FROM$, TO$=TO$);
  148        END;
09:21 AUG 09 '97 Z8E_REPLACE.:Z8A6SI/Z8E_REPLACE.:Z8A6TUI                  5    
  149
  150      %MEND;
  151
  152
  153
  154      %MACRO NEW_REPLACE_ITEM (@REPLACE$ = REPLACE$,
  155                               @FROM_LIST$ = "ADDR(NIL)",
  156                               @TO_LIST$ = "ADDR(NIL)",
  157                               @LEVEL = 0,
  158                               @LINK$ = "ADDR(NIL)");
  159
  160        DO;
  161          CALL Z8ED$NEW_HEAP (@REPLACE$,
  162                                 LENGTHW(REPLACE_ITEM));
  163          @REPLACE$ -> REPLACE_ITEM.FROM_LIST$ = @FROM_LIST$;
  164          @REPLACE$ -> REPLACE_ITEM.TO_LIST$ = @TO_LIST$;
  165          @REPLACE$ -> REPLACE_ITEM.LEVEL = @LEVEL;
  166          @REPLACE$ -> REPLACE_ITEM.LINK$ = @LINK$;
  167          @REPLACE$ -> REPLACE_ITEM.TO_IS_PSEUDO_TEXT = FALSE;
  168          @REPLACE$ -> REPLACE_ITEM.FROM_IS_PSEUDO_TEXT = FALSE;
  169          @REPLACE$ -> REPLACE_ITEM.TO_PSEUDO_TEXT_LINES$ = ADDR(NIL);
  170        END;
  171
  172      %MEND;
  173
  174      %MACRO REPLACE_WITH_DATA_NO_DATA;
  175        DO;
  176          IF LEX_SYMBOL.SIZE = 4 AND
  177            SUBSTR(LEX_SYMBOL.SYMBOL,0,4) = 'WITH' THEN
  178             DO;
  179               %SAVE_CURRENT_TOKEN;
  180
  181               %GET_A_TOKEN;
  182
  183               IF LEX_SYMBOL.SIZE = 4 AND
  184                 SUBSTR(LEX_SYMBOL.SYMBOL,0,4) = 'DATA' THEN
  185                   %REPLACE_WITH_DATA_TOKEN;
09:21 AUG 09 '97 Z8E_REPLACE.:Z8A6SI/Z8E_REPLACE.:Z8A6TUI                  6    
  186               ELSE
  187                 DO;
  188                   %SAVE_TOKEN_ON_THE_QUEUE;
  189
  190                   %LOAD_SAVED_TOKEN;
  191                 END;
  192             END;
  193
  194          IF LEX_SYMBOL.SIZE = 2 AND
  195            SUBSTR(LEX_SYMBOL.SYMBOL,0,2) = 'NO' THEN
  196             DO;
  197               %SAVE_CURRENT_TOKEN;
  198
  199               %GET_A_TOKEN;
  200
  201               IF LEX_SYMBOL.SIZE = 4 AND
  202                 SUBSTR(LEX_SYMBOL.SYMBOL,0,4) = 'DATA' THEN
  203                   %REPLACE_NO_DATA_TOKEN;
  204               ELSE
  205                 DO;
  206                   %SAVE_TOKEN_ON_THE_QUEUE;
  207
  208                   %LOAD_SAVED_TOKEN;
  209                 END;
  210             END;
  211        END;
  212      %MEND;
  213
  214       %MACRO SAVE_CURRENT_TOKEN;
  215         DO;
  216           TEMP_LEX_SYMBOL = LEX_SYMBOL;
  217         END;
  218       %MEND;
  219
  220       %MACRO LOAD_SAVED_TOKEN;
  221         DO;
  222           LEX_SYMBOL = TEMP_LEX_SYMBOL;
09:21 AUG 09 '97 Z8E_REPLACE.:Z8A6SI/Z8E_REPLACE.:Z8A6TUI                  7    
  223         END;
  224       %MEND;
  225
  226       %MACRO SAVE_TOKEN_ON_THE_QUEUE;
  227         DO;
  228           %COPY_TO_NEW_LEX_SYMBOL (FROM$ = "ADDR(LEX_SYMBOL)",
  229                                    TO$   = HEAP$);
  230           HEAP$ -> BASED_LEX_SYMBOL.NEXT$ = LEX_SYMBOL_QUEUE$;
  231           LEX_SYMBOL_QUEUE$ = HEAP$;
  232         END;
  233       %MEND;
  234
  235       %MACRO REPLACE_WITH_DATA_TOKEN;
  236         DO;
  237           LEX_SYMBOL.LINE = TEMP_LEX_SYMBOL.LINE;
  238           LEX_SYMBOL.COLUMN = TEMP_LEX_SYMBOL.COLUMN;
  239           LEX_SYMBOL.SIZE = %WITH_DATA_SIZE;
  240           SUBSTR(LEX_SYMBOL.SYMBOL,0,%WITH_DATA_SIZE) = %WITH_DATA_TEXT;
  241         END;
  242       %MEND;
  243
  244       %MACRO REPLACE_NO_DATA_TOKEN;
  245         DO;
  246           LEX_SYMBOL.LINE = TEMP_LEX_SYMBOL.LINE;
  247           LEX_SYMBOL.COLUMN = TEMP_LEX_SYMBOL.COLUMN;
  248           LEX_SYMBOL.SIZE = %NO_DATA_SIZE;
  249           SUBSTR(LEX_SYMBOL.SYMBOL,0,%NO_DATA_SIZE) = %NO_DATA_TEXT;
  250         END;
  251       %MEND;
  252
  253      %MACRO REPLACE_ON_EXCEPTION_TOKEN;
  254        DO;
  255          IF LEX_SYMBOL.SIZE = 2 AND
  256            SUBSTR(LEX_SYMBOL.SYMBOL,0,2) = 'ON' THEN
  257            DO;
  258              %SAVE_CURRENT_TOKEN;
  259
09:21 AUG 09 '97 Z8E_REPLACE.:Z8A6SI/Z8E_REPLACE.:Z8A6TUI                  8    
  260              %GET_A_TOKEN;
  261
  262              IF LEX_SYMBOL.SIZE ~= 9 OR
  263                SUBSTR(LEX_SYMBOL.SYMBOL,0,9) ~= 'EXCEPTION' THEN
  264                DO;
  265                  %SAVE_TOKEN_ON_THE_QUEUE;
  266
  267                  %LOAD_SAVED_TOKEN;
  268
  269                END;
  270            END;
  271        END;
  272      %MEND;
  273
  274      %MACRO REPLACE_NOT_ON_EXCEPTION_TOKEN;
  275        DO;
  276          IF LEX_SYMBOL.SIZE = 3 AND
  277             SUBSTR(LEX_SYMBOL.SYMBOL,0,3) = 'NOT' THEN
  278            DO;
  279              TEMP_LEX_SYMBOL2 = LEX_SYMBOL;
  280
  281              %GET_A_TOKEN;
  282
  283              %REPLACE_ON_EXCEPTION_TOKEN;
  284
  285              IF LEX_SYMBOL.SIZE ~= 9 OR
  286                 SUBSTR(LEX_SYMBOL.SYMBOL,0,9) ~= 'EXCEPTION' THEN
  287                DO;
  288                  %SAVE_TOKEN_ON_THE_QUEUE;
  289
  290                  LEX_SYMBOL = TEMP_LEX_SYMBOL2;
  291                END;
  292              ELSE
  293                DO;
  294                  LEX_SYMBOL.LINE = TEMP_LEX_SYMBOL2.LINE;
  295                  LEX_SYMBOL.COLUMN = TEMP_LEX_SYMBOL2.COLUMN;
  296                  LEX_SYMBOL.SIZE = 16;
09:21 AUG 09 '97 Z8E_REPLACE.:Z8A6SI/Z8E_REPLACE.:Z8A6TUI                  9    
  297                  SUBSTR(LEX_SYMBOL.SYMBOL,0,16) = 'NOT ON EXCEPTION';
  298                END;
  299            END;
  300         END;
  301      %MEND;
  302

