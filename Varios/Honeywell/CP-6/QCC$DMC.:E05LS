VERSION E05

CALF.D00   OU Name=QCC$DMC                 File=QCC$DMC.:E05TSI                 WED JUL 30 '97 05:04 Page:2
                                     1  *M*  QCC$DMC:  Decimal move and convert.
                                     2  *T***********************************************************
                                     3  *T*                                                         *
                                     4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                     5  *T*                                                         *
                                     6  *T***********************************************************
                                     7  *
                                     8  *********************************************************************
                                     9  *                                                                   *
                                    10  *       D E C I M A L     M O V E     A N D     C O N V E R T       *
                                    11  *                                                                   *
                                    12  *********************************************************************
                                    13  *
                                    14  *P*  NAME:         QCC$DMC
                                    15  *P*  PURPOSE:      Decimal move and convert
                                    16  *P*  DESCRIPTION:  Decimal move from one operand to another.  If size
                                    17  *P*                error is specified, an overflow test operation
                                    18  *P*                will be performed.  When overflow is detected,
                                    19  *P*                this routine altreturns and the destination
                                    20  *P*                remains unchanged.
                                    21        LISTINC
                                    22        INCLUDE   QCC_ASMEQU_E
                                     1+ *M*  QCC_ASMEQU_E:  Common EQUates for assembly routines.
                                     2+ *T***********************************************************
                                     3+ *T*                                                         *
                                     4+ *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                     5+ *T*                                                         *
                                     6+ *T***********************************************************
         00000000                    7+ ZERO              EQU 0
         00000001                    8+ ONE               EQU 1
         00000002                    9+ TWO               EQU 2
         00000000                   10+ CIP_DESC_STRUC    EQU 0
         00000000                   11+ SOURCE_DESC       EQU 0
         00000006                   12+ SOURCE_PTR        EQU 6
         00000002                   13+ TARGET_DESC       EQU 2
         00000008                   14+ TARGET_PTR        EQU 8
CALF.D00   OU Name=QCC$DMC                 File=QCC$DMC.:E05TSI                 WED JUL 30 '97 05:04 Page:3
         00000004                   15+ AUX_DESC          EQU 4
         0000000A                   16+ AUX_PTR           EQU 10
         0000000C                   17+ SOURCE_LEN        EQU 12
         0000000D                   18+ TARGET_LEN        EQU 13
         0000000E                   19+ AUX_LEN           EQU 14
         0000000C                   20+ ARG_LEN           EQU SOURCE_LEN
         0000000D                   21+ ARG_LIST_LEN      EQU TARGET_LEN
         0000000C                   22+ SOURCE_SHIFT_CNT  EQU SOURCE_LEN
         0000000D                   23+ TARGET_SHIFT_CNT  EQU TARGET_LEN
         0000000E                   24+ AUX_SHIFT_CNT     EQU AUX_LEN
         0000000E                   25+ MOP_LEN           EQU AUX_LEN
         0000000F                   26+ SOURCE_DEC        EQU 15
         00000010                   27+ TARGET_DEC        EQU 16
         00000011                   28+ AUX_DEC           EQU 17
         0000000F                   29+ SOURCE_INX        EQU SOURCE_DEC
         00000010                   30+ TARGET_INX        EQU TARGET_DEC
         00000011                   31+ AUX_INX           EQU AUX_DEC
         00000011                   32+ RESULT_DEC        EQU AUX_DEC
         00000012                   33+ ELEM_LEN          EQU 18
         00000013                   34+ ELEM_LIST_LEN     EQU 19
         00000014                   35+ INT_RESULT_LEN    EQU 20
         00000015                   36+ PIC_STRING_DEC    EQU 21
         00000014                   37+ SRCH_RESULT_NUM   EQU INT_RESULT_LEN
         00000015                   38+ SRCH_RESULT_DISP  EQU PIC_STRING_DEC
         00000014                   39+ VRFY_RESULT_DISP  EQU INT_RESULT_LEN
         00000016                   40+ SIZE_ERROR        EQU 22
         00000016                   41+ FILL              EQU SIZE_ERROR
         00000017                   42+ ROUND             EQU 23
         00000017                   43+ COMP_RESULT       EQU ROUND
         00000017                   44+ TARGET_SIZE       EQU ROUND
                                    23        OUNAME    QCC$DMC
                                    24        ENTDEF    QCC$DMC
                                    25        SYMREF    QI_SWORK
                                    26        SYMREF    QI_SWORK_2
                                    27  *D*  NAME:         QCC$DMC
                                    28  *D*  CALL:         CALL QCC$DMC ( cip-desc-struc ) ALTRET ( label )
CALF.D00   OU Name=QCC$DMC                 File=QCC$DMC.:E05TSI                 WED JUL 30 '97 05:04 Page:4
                                    29  *D*  PARAMETERS:   cip-desc-struc contains:
                                    30  *D*                 1. source descriptor
                                    31  *D*                 2. target descriptor
                                    32  *D*                 3. source decimal place
                                    33  *D*                 4. target decimal place
                                    34  *D*                 5. size error (optional)
                                    35  *D*  INTERFACE:
                                    36  *D*  ENVIRONMENT:  Called by the interpreter on behalf of an FPL
                                    37  *D*                routine;  may be called by any language which
                                    38  *D*                adheres to the standard calling sequence.
                                    39  *D*  INPUT:        cip-desc-struc
                                    40  *D*  OUTPUT:       Converted source value placed in target referred
                                    41  *D*                to by the second descriptor.
                                    42  *D*  SCRATCH:
                                    43  *D*  DESCRIPTION:  This routine does decimal moves from one operand
                                    44  *D*                to another.  The source field is aligned to the
                                    45  *D*                target's decimal place prior to the move.  If
                                    46  *D*                SIZE_ERROR is specified, the target address is
                                    47  *D*                replaced with that of a temp area, and the DMC
                                    48  *D*                is executed.  If overflow is imminent, the target
                                    49  *D*                remains unchanged and this routine altreturns.
                                    50  *D*                If no overflow condition is detected, the target
                                    51  *D*                pointer is restored, and the operation is done.
                                    52  *
                                    53  *
         000000(0)                  54             SECT      PROC,ZERO
         000000(0)                  55  QCC$DMC    ALIGN     WORD
                                    56  *
 00000   BCC3 0000                  57             LDB,B3    CIP_DESC_STRUC,B3   /* Load addr of structure */
 00002   F843 0016                  58             LDR,R7    SIZE_ERROR,B3          /* Get SIZE_ERROR arg. */
 00004   D843 0010                  59             LDR,R5    TARGET_DEC,B3      /* Get 2nd CIP dec pos arg */
 00006   D243 000F                  60             SUB,R5    SOURCE_DEC,B3      /* Get 1st CIP dec pos arg */
 00008   000C                       61             LRDB                     /* Load Remote Descriptor Base */
 00009   5981 0017                  62             BNEZ,R5   NEEDS_ALIGN,PREL             /* Go if R5 ~= 0 */
                                    63  *
                                    64  * HERE -> NO ALIGNMENT NEEDED
CALF.D00   OU Name=QCC$DMC                 File=QCC$DMC.:E05TSI                 WED JUL 30 '97 05:04 Page:5
                                    65  *
 0000B   7901 000F                  66             BEZ,R7    DO_REMOTE_OP,PREL/* Go if NO SIZE_ERROR check */
 0000D   9CC3 0008                  67             LDB,B1    TARGET_PTR,B3          /* Save target pointer */
 0000F   AB80 000000(0)s            68             LAB,B2    QI_SWORK             /* Get addr of test area */
 00012   AFC3 0008                  69             STB,B2    TARGET_PTR,B3 /* target ptr <- ADDR(testarea) */
 00014   0025 0000 0010             70             DMC       REMOTE(ZERO),REMOTE(ONE)        /* Issue test */
 00017   9FC3 0008                  71             STB,B1    TARGET_PTR,B3 /* target ptr <- old target ptr */
 00019   1301 003E                  72             CBOV      SIZE_ERROR_OCCUR,PREL           /* Go if ovfl */
                                    73  *
         00001B(0)                  74  DO_REMOTE_OP    ALIGN     WORD
 0001B   0025 0000 0010             75             DMC       REMOTE(ZERO),REMOTE(ONE)        /* Real McCoy */
                                    76             INCLUDE   QCC_ASMRET_C
                                     1+ *M*  QCC_ASMRET_C:  Common normal RETURN code for assembly routines.
                                     2+ *T***********************************************************
                                     3+ *T*                                                         *
                                     4+ *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                     5+ *T*                                                         *
                                     6+ *T***********************************************************
 0001E   437F                        7+            CSYNC
 0001F   C3C6 0001                   8+            LNJ,B4    1,B6                     /* RETURN(NORMAL) */
                                    77  *
                                    78  * HERE -> ALIGNMENT IS NEEDED
                                    79  *
         000021(0)                  80  NEEDS_ALIGN     ALIGN     WORD
 00021   DB80 000000(1)s            81             LAB,B5    QI_SWORK_2     /* Get addr of temp align area */
 00024   2C00                       82             LDV,R2    0                   /* Clear overflow flag    */
 00025   0025 0000 3F850000         83             DMC       REMOTE(ZERO),PACKED(0,B5,0,31,TRAILING)
 00029   437F                       84             CSYNC
 0002A   5A01 000B                  85             BGZ,R5    SHIFT_LEFT,PREL  /* Determine shift direction */
                                    86  *
                                    87  * HERE -> SHIFT RIGHT
                                    88  *
 0002C   8255                       89             NEG       R5                             /* R5 <- (-R5) */
 0002D   D470 0080                  90             OR,R5     ='80'X                  /* Assign right shift */
 0002F   002E 3F850000              91             DSH       PACKED(0,B5,0,31,TRAILING)     /* Shift right */
 00032   00780000
CALF.D00   OU Name=QCC$DMC                 File=QCC$DMC.:E05TSI                 WED JUL 30 '97 05:04 Page:6
 00034   4381 0009                  92             CSNCB     CHECK_SIZE_ERROR,PREL
                                    93  *
         000036(0)                  94  SHIFT_LEFT      ALIGN     WORD
 00036   002E 3F850000              95             DSH       PACKED(0,B5,0,31,TRAILING)      /* Shift left */
 00039   00780000
 0003B   1381 0002                  96             CBNOV     CHECK_SIZE_ERROR,PREL  /* Go if NO SIZE_ERROR */
 0003D   2C01                       97             LDV,R2    1                   /* Set overflow flag      */
                                    98  *
         00003E(0)                  99  CHECK_SIZE_ERROR ALIGN    WORD
 0003E   7901 0012                 100             BEZ,R7    DO_INLINE_OP,PREL/* Go if NO SIZE_ERROR check */
 00040   2981 0017                 101             BNEZ,R2   SIZE_ERROR_OCCUR,PREL
 00042   9CC3 0008                 102             LDB,B1    TARGET_PTR,B3          /* Save target pointer */
 00044   AB80 000000(0)s           103             LAB,B2    QI_SWORK       /* Get addr of temp align area */
 00047   AFC3 0008                 104             STB,B2    TARGET_PTR,B3 /* target ptr <- ADDR(testarea) */
 00049   0025 3F850000 0010        105             DMC       PACKED(0,B5,0,31,TRAILING),REMOTE(ONE)
 0004D   9FC3 0008                 106             STB,B1    TARGET_PTR,B3 /* target ptr <- old target ptr */
 0004F   1301 0008                 107             CBOV      SIZE_ERROR_OCCUR,PREL     /* Go if SIZE_ERROR */
                                   108  *
         000051(0)                 109  DO_INLINE_OP    ALIGN     WORD
 00051   0025 3F850000 0010        110             DMC       PACKED(0,B5,0,31,TRAILING),REMOTE(ONE)
                                   111             INCLUDE   QCC_ASMRET_C
                                     1+ *M*  QCC_ASMRET_C:  Common normal RETURN code for assembly routines.
                                     2+ *T***********************************************************
                                     3+ *T*                                                         *
                                     4+ *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                     5+ *T*                                                         *
                                     6+ *T***********************************************************
 00055   437F                        7+            CSYNC
 00056   C3C6 0001                   8+            LNJ,B4    1,B6                     /* RETURN(NORMAL) */
                                   112  *
         000058(0)                 113  SIZE_ERROR_OCCUR ALIGN    WORD
                                   114             INCLUDE   QCC_ASMALTRET_C
                                     1+ *M*  QCC_ASMALTRET_C:  Common ALTRETURN code for assembly routines.
                                     2+ *T***********************************************************
                                     3+ *T*                                                         *
                                     4+ *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
CALF.D00   OU Name=QCC$DMC                 File=QCC$DMC.:E05TSI                 WED JUL 30 '97 05:04 Page:7
                                     5+ *T*                                                         *
                                     6+ *T***********************************************************
 00058   437F                        7+            CSYNC
 00059   9846 0000                   8+            LDR,R1    0,B6
 0005B   C396                        9+            LNJ,B4    ,B6,R1                     /* ALTRETURN */
                                   115  *
                                   116             END
      No Errors in this assembly.
