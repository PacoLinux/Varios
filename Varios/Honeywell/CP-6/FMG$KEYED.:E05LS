VERSION E05

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1    
        1        1        /*M*   FMG$KEYED - Keyed disk file PMME processing and subroutines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*P*     NAME:     FMG$KEYED
        9        9                 PURPOSE:  To handle M$PFIL, M$REW, M$PRECORD, M$DELREC, M$READ,
       10       10                           and M$WRITE for keyed files.
       11       11        */
       12       12        /*F*     NAME:     FMG$KEYED
       13       13                 PURPOSE:  To handle M$PFIL, M$REW, M$PRECORD, M$DELREC, M$READ,
       14       14                           and M$WRITE for keyed files.
       15       15
       16       16        */
       17       17        /*D*     NAME:     FMG$KEYED
       18       18                 ENTRY:    FMG$ADDKEY, FMG$ADDSEG, FMG$CURKEY, FMG$FINDKEY,
       19       19                           FMG$KEYSQZ, FMG$MOVKEYS, FMG$NXTKEY, FMG$NXTKEYNM,
       20       20                           FMG$NXTSEG, FMG$REMKEY, FMG$KPMME, FMG$NXTKEY_ORG
       21       21                 CALL:     CALL FMG$KEYED(FPTCODE) [ALTRET(label)]
       22       22                 INPUT:    FPTCODE - The operation to be performed
       23       23                 DESCRIPTION:
       24       24
       25       25                      This module handles all PMMEs for keyed, indexed, and irel
       26       26                 files, except for M$OPEN and M$CLOSE.  The basic idea of this
       27       27                 module is to first do some basic initialization, then chose the
       28       28                 right subroutine to branch to.  Some subroutines, like FINDKEY
       29       29                 are general prupose routines that may be used by almost any
       30       30                 PMME.
       31       31
       32       32                      Keyed files are basically organized into two types of granules,
       33       33                 index and data granules.  Index granules contain the text of the
       34       34                 keys, and point to granules containing the records.  The granules
       35       35                 with the record text are called data granules.
       36       36
       37       37                      Index granules are a fairly complex structure that are very
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:2    
       38       38                 dynamic.  The first 5 words of an index granule are the header,
       39       39                 FM$GRAN.  Next, is the key table.  This is 280 bytes long.  Each
       40       40                 byte in the table points to a key, with a rather odd exception.
       41       41                 The first byte of the table is usually refered to as the "BOUND".
       42       42                 Since granules are 1024 words long, and since the maximum value
       43       43                 that can be stored in 9 bits is 511, we need a way to access the
       44       44                 last 512 words in the granule.  BOUND is an index into the key
       45       45                 table that indicates where the "overflow" begins.  In other words,
       46       46                 the values of the key table from FM$KEYTBL(BOUND) to the end of
       47       47                 the table, must have 512 added in order to access the key.
       48       48
       49       49                      Keys within the granule, and the entries in the key table that
       50       50                 point to the keys are kept sorted.  Keys are located within the
       51       51                 granule by a binary search.  If keys are inserted into a granule,
       52       52                 then the key table is reorganized.
       53       53
       54       54                      The actual keys are stored in two forms, depending on the
       55       55                 file organization.  Keyed and indexed keys are stored in a textc
       56       56                 form.  Irel keys are stored in texth form.
       57       57
       58       58                      After the key is one or more master index segments, or
       59       59                 MISEGs.  Each of these point to a part of the record.
       60       60
       61       61                      Files with alternate indexes will have extra sets of index
       62       62                 granules, one for each alternate index.  These are organized like
       63       63                 normal index granules with one exception.  Duplicate keys are
       64       64                 allowed to exist along alternate indexes.  If a key has duplicate
       65       65                 values, then we keep one copy of the key.  The list of duplicates
       66       66                 is maintained by allowing multiple MISEGs to exist for the key.
       67       67                 Since each duplicate key may have more than one MISEG, the
       68       68                 first MISEG for each duplicate will have FM$MISEG.FAK set so
       69       69                 that we can find each separate duplicate key in a list of
       70       70                 MISEGS.
       71       71
       72       72                      Each index for a file may also have an upper level structure.
       73       73                 This is a fast path for locating granules.  It is organized into
       74       74                 a tree structure.  The upper level is organized in the same way
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:3    
       75       75                 that an index granule is, except that instead of an MISEG after
       76       76                 the key, there is a disk address that points to the next lower
       77       77                 level.
       78       78
       79       79                      The buffers pointed to by F$DCB.BFR in FMG$KEYED have more
       80       80                 or less fixed purposes.  Buffer 0 is used for holding data granules.
       81       81                 Buffer 1 is used for holding the current level 0 index granule.
       82       82                 Buffer 2 is used for holding the TDA (top of the upper level).
       83       83                 Buffers 3 and 4 are used for holding the flink and blink when
       84       84                 building a new link into the file.
       85       85        */
       86       86                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:4    
       87       87        FMG$KEYED: PROC(PSEG$, PSEGCNT, PKEY$, PKEYIN$) ALTRET;
       88       88    1          DCL PSEG$ PTR;
       89       89    1          DCL FPTCODE REDEF PSEG$ SBIN;
       90       90    1          DCL NUMWRDS REDEF PSEG$ SBIN;
       91       91    1          DCL PSEGCNT UBIN;
       92       92    1          DCL PKEY$ PTR;
       93       93    1          DCL PKEYIN$ PTR;
       94       94        /* */
       95       95               %INCLUDE B$JIT;
       96      698               %MACRO F$DCB(BASED=BASED);
       97      699               %INCLUDE F$DCB;
       98      748               %MEND;
       99      749               %INCLUDE FM_CACHE_R;
      100      761               %INCLUDE FM$MACROS;
      101     1136               %INCLUDE FM_DATA_R;
      102     1150               %INCLUDE FM_FIELD_C;
      103     1191               %INCLUDE F_ERRORS_C;
      104     1431               %INCLUDE F_FPTCODE_C;
      105     1467               %INCLUDE F$CP6V_C;
      106     1693               %INCLUDE CP_6_SUBS;
      107     2233               %INCLUDE B$SS;
      108     2412               %INCLUDE B$USER;
      109     2628               %INCLUDE B_STRINGS_C;
      110     2757               %INCLUDE B_MAGIC_C;
      111     2875               %INCLUDE B$OBJECT_C;
      112     6305               %INCLUDE UD_ERRORS_C;
      113     6347        /* */
      114     6348               %F$DCB(BASED="BASED(JDCB$)");
      115     6398               %FM$CFU(BASED="BASED(CFU$)");
      116     6404               %FM$CFUA;
      117     6410               %FM$GRAN(BASED="BASED(BUF$)");
      118     6414               %FM$GRAN(FM$GRAN=FM$GRAN3, BASED="BASED(BUF3$)");
      119     6418               %FM$KEYENT(BASED="BASED(KEY$)");
      120     6421               %FM$IRENT(BASED="BASED(KEY$)");
      121     6424               %FM$MISEG(BASED="BASED(SEG$)");
      122     6428               %FM$ULSEG(BASED="BASED(KEY$)");
      123     6431               %FM$KEYTBL(BASED="BASED(KTPTR$)");
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:5    
      124     6434               %FM$KEYTBL(FM$KEYTBL=FM$KEYTBL3, FM$KT=FM$KT3);
      125     6437               %FITALTKEYS(FITALTKEYS=ALTKEYS, BASED="BASED(ALTKEY$)");
      126     6443               %FMG$IRKEYS(FPTN=IRKEYS, STCLASS="BASED(ALTKEY$)");
      127     6450               %FMG$KFIELD(FPTN=KFIELD, STCLASS="BASED(KFIELD$)");
      128     6453               %VLP$RECFIELD_V(FPTN=RECFIELD, BASED="BASED(RECFIELD$)");
      129     6490               %FM$FIELD_START(FPTN=FIELD_START, STCLASS="BASED(START$)");
      130     6512               %CODE02;
      131     6516               %CODE03;
      132     6523               %B_MPT(FPTN=B_MPT,STCLASS=SYMREF);
      133     6616               %B$USERREFS;
      134     6620               %VREBL_DATATYPES;
      135     6695        /* */
      136     6696               %FPT$READ_V(BASED="BASED(B$PS0$)");
      137     6703               %FPT$WRITE_V(BASED="BASED(B$PS0$)");
      138     6709               %FPT$DELREC_V(BASED="BASED(B$PS0$)");
      139     6713               %FPT$PFIL_V(BASED="BASED(B$PS0$)");
      140     6716               %FPT$PRECORD_V(BASED="BASED(B$PS0$)");
      141     6721        /* */
      142     6722               %SUB FCG#='0615'O;
      143     6723               %SUB MID#='07'O;
      144     6724               %ERRCODE (NAME=ERRWRWOKEY, COD#=%E$WRWOKEY);
      145     6728               %ERRCODE (NAME=ERRREWRITE, COD#=%E$REWRITE);
      146     6732               %ERRCODE (NAME=ERROLDREC, COD#=%E$OLDREC);
      147     6736               %ERRCODE (NAME=ERRWRITNEW, COD#=%E$WRITNEW);
      148     6740               %ERRCODE (NAME=ERRFREC, COD#=%E$FREC);
      149     6744               %ERRCODE (NAME=ERRNEWREC, COD#=%E$NEWREC);
      150     6748               %ERRCODE (NAME=ERRLD, COD#=%E$LD);
      151     6752               %ERRCODE (NAME=ERRNOKEY, COD#=%E$NOKEY);
      152     6756               %ERRCODE (NAME=ERRBADKEY2, COD#=%E$BADKEY2);
      153     6760               %ERRCODE (NAME=ERRBADKEY, COD#=%E$BADKEY);
      154     6764               %ERRCODE (NAME=ERRINDBC, COD#=%E$INDBC);
      155     6768               %ERRCODE (NAME=ERRFIT, COD#=%E$FIT);
      156     6772               %ERRCODE (NAME=ERRKEYORDER, COD#=%E$KEYORDER);
      157     6776               %ERRCODE (NAME=ERRNOCONT, COD#=%E$NOCONT);
      158     6780               %ERRCODE (NAME=ERRINDSEED, COD#=%E$INDSEED);
      159     6784               %ERRCODE (NAME=ERRBOF, COD#=%E$BOF);
      160     6788               %ERRCODE (NAME=ERREOF, COD#=%E$EOF);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:6    
      161     6792               %ERRCODE (NAME=ERRPMMEINT, COD#=%E$PMMEINT);
      162     6796               %ERRCODE (NAME=ERRNOSUCHINDX, COD#=%E$NOSUCHINDX);
      163     6800               %ERRCODE (NAME=ERRNOREC, COD#=%E$NOREC);
      164     6804               %ERRCODE (NAME=ERRKEYCHNG, COD#=%E$KEYCHNG);
      165     6808               %ERRCODE (NAME=ERRDUPKEY, COD#=%E$DUPKEY);
      166     6812               %ERRCODE (NAME=ERRNOALT, COD#=%E$NOALT);
      167     6816               %ERRCODE (NAME=ERRKEYTRAP, COD#=%E$BADVECT1);
      168     6820               %ERRCODE (NAME=ERRIDTRAP, COD#=%E$BADVECT3);
      169     6824               %ERRCODE (NAME=ERRALLIDS, COD#=%E$ALLIDS);
      170     6828               %ERRCODE (NAME=ERRIDSMALL, COD#=%E$IDSMALL);
      171     6832               %ERRCODE (NAME=ERRNOALTKEY, COD#=%E$NOALTKEY);
      172     6836               %ERRCODE (NAME=ERRIDONLY, COD#=%E$IDONLY);
      173     6840               %ERRCODE (NAME=ERRBADID, COD#=%E$BADID);
      174     6844               %ERRCODE (NAME=ERRDMY, COD#=0);
      175     6848        /* */
      176     6849    1          DCL B$JIT$ PTR SYMREF READONLY;
      177     6850    1          DCL B$PS0$ PTR SYMREF;
      178     6851    1          DCL B$PS1$ PTR SYMREF READONLY;
      179     6852    1          DCL B$PS2$ PTR SYMREF READONLY;
      180     6853    1          DCL B$PS3$ PTR SYMREF READONLY;
      181     6854    1          DCL B$ROSEG$ PTR SYMREF READONLY;
      182     6855    1          DCL FM$BUF$(0:0) PTR SYMREF;
      183     6856        /* */
      184     6857    1          DCL FAF$CHKDAFR ENTRY(1) ALTRET;
      185     6858    1          DCL FAF$GETGRAN ENTRY(1) ALTRET;
      186     6859    1          DCL FAG$G1DIR ENTRY(1) ALTRET;
      187     6860    1          DCL FAG$REXT ENTRY(1) ALTRET;
      188     6861    1          DCL FMB$ERRTYP ENTRY(1);
      189     6862    1          DCL FMB$IOSPIN ENTRY;
      190     6863    1          DCL FMB$LOGERR ENTRY(11);
      191     6864    1          DCL FMC$CLR1 ENTRY(1);
      192     6865    1          DCL FMC$CLRFILE ENTRY(1);
      193     6866    1          DCL FMD$CHKFIELD ENTRY(2) ALTRET;
      194     6867    1          DCL FMD$FLSHBUF ENTRY(1);
      195     6868    1          DCL FMD$FLSHBUFNR ENTRY(1);
      196     6869    1          DCL FMD$GETBUF ENTRY(3);
      197     6870    1          DCL FMD$RECTRAN ENTRY(8) ALTRET;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:7    
      198     6871    1          DCL FMD$REDBUF ENTRY(6) ALTRET;
      199     6872    1          DCL FMD$RELBUF ENTRY(1);
      200     6873    1          DCL FMD$WRTBUF ENTRY(1);
      201     6874    1          DCL FMD$WRTSV ENTRY(1);
      202     6875    1          DCL FMD$WRTSVNW ENTRY(1);
      203     6876    1          DCL FMG$COMPUDTS ENTRY(4);
      204     6877    1          DCL FMG$COMPUDLS ENTRY(4);
      205     6878    1          DCL FMG$COMPUDLO ENTRY(4);
      206     6879    1          DCL FMG$COMPUDTO ENTRY(4);
      207     6880    1          DCL FMG$COMPPDLS ENTRY(4);
      208     6881    1          DCL FMG$COMPPDNS ENTRY(4);
      209     6882    1          DCL FMG$COMPPDTS ENTRY(4);
      210     6883    1          DCL FMG$COMPSFLT ENTRY(3);
      211     6884    1          DCL FMG$COMPDFLT ENTRY(3);
      212     6885    1          DCL FMG$COMPPDFLT ENTRY(4);
      213     6886    1          DCL FMG$COMPUDFLT ENTRY(4);
      214     6887    1          DCL FMG$INIT ENTRY ALTRET;
      215     6888    1          DCL FMN$GETFIT ENTRY(2) ALTRET;
      216     6889    1          DCL FMO$LOCCODP ENTRY(2) ALTRET;
      217     6890    1          DCL FMR$SLIDE ENTRY(3);
      218     6891    1          DCL HFF$DSIZ ENTRY(2) ALTRET;
      219     6892    1          DCL HFF$NILERASE ENTRY(1) ALTRET;
      220     6893    1          DCL HFF$WRITE    ENTRY(1) ALTRET;
      221     6894        /* */
      222     6895    1          DCL 1 INITKEYTBL CONSTANT,
      223     6896    1               2 * UBIN(9) UNAL INIT(SIZEC(FM$KEYTBL));
      224     6897        /* */
      225     6898    1          DCL JDCB$ PTR;
      226     6899    1          DCL CFU$ PTR;
      227     6900    1          DCL INDEX# UBIN;
      228     6901    1          DCL SAVE_INDEX# UBIN;
      229     6902    1          DCL SEGX SBIN;
      230     6903    1          DCL SEG$ PTR;
      231     6904    1          DCL CRECX UBIN;
      232     6905    1          DCL BOUND SBIN;
      233     6906    1          DCL KEYCNT SBIN;
      234     6907    1          DCL KEY$ PTR;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:8    
      235     6908    1          DCL DA UBIN;
      236     6909    1          DCL ORG UBIN;
      237     6910    1          DCL ALTKEY$ PTR;
      238     6911    1          DCL BUF$ PTR;
      239     6912    1          DCL KTPTR$ PTR;
      240     6913    1          DCL G$ PTR;
      241     6914    1          DCL FM_MISEG BIT(72);
      242     6915    1          DCL RESULT UBIN;
      243     6916    1          DCL FOUND UBIN;
      244     6917    1          DCL RECNUM UBIN;
      245     6918    1          DCL IDPTR$ PTR;
      246     6919    1          DCL SEGCNT SBIN;
      247     6920    1          DCL EOP UBIN;
      248     6921    1          DCL KEYIN$ PTR;
      249     6922    1          DCL DBUF$ PTR;
      250     6923    1          DCL OLD_MISEG BIT(72);
      251     6924    1          DCL FAK SBIN;
      252     6925    1          DCL BUFNUM UBIN;
      253     6926    1          DCL TOTSIZE UBIN;
      254     6927    1          DCL KEYWORDS UBIN;
      255     6928    1          DCL ADDFLG SBIN;
      256     6929    1          DCL BUF3$ PTR;
      257     6930    1          DCL ENUF SBIN;
      258     6931    1          DCL INSRT SBIN;
      259     6932    1          DCL SPARE UBIN;
      260     6933    1          DCL INDX SBIN;
      261     6934    1          DCL MOVECNT SBIN;
      262     6935    1          DCL KEYIN_SIZE UBIN;
      263     6936    1          DCL ANEWSEG SBIN;
      264     6937    1          DCL COMFLG UBIN;
      265     6938    1          DCL LEN UBIN;
      266     6939    1          DCL REC$ PTR;
      267     6940    1          DCL IRKEY$ PTR;
      268     6941    1          DCL FN UBIN;
      269     6942    1          DCL RECFIELD$ PTR;
      270     6943    1          DCL START$ PTR;
      271     6944    1          DCL KFIELD$ PTR;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:9    
      272     6945    1          DCL FIELD$ PTR;
      273     6946    1          DCL FIELDIN$ PTR;
      274     6947    1          DCL TEMP_CHAR CHAR(1) CALIGNED;
      275     6948    1          DCL USERKEY_SIZE UBIN;
      276     6949    1          DCL DELALL_FAST BIT(1) ALIGNED;
      277     6950        /* */
      278     6951    1          DCL 1 ID BASED(IDPTR$),
      279     6952    1               2 COUNT UBIN,
      280     6953    1               2 GX UBIN(10) UNAL,
      281     6954    1               2 DA UBIN(26) UNAL;
      282     6955    1          DCL 1 KEYIN BASED(KEYIN$),
      283     6956    1               2 SIZE CHAR(1) CALIGNED,
      284     6957    1               2 TEXT CHAR(KEYIN_SIZE);
      285     6958    1          DCL CHAR1 CHAR(1) BASED;
      286     6959    1          DCL 1 FIELD BASED CALIGNED,
      287     6960    1               2 P BIT(1) UNAL,
      288     6961    1               2 SIZE UBIN(8) UNAL;
      289     6962    1          DCL FIELD_PTR UBIN BASED(FIELD$);
      290     6963    1          DCL FIELDIN_PTR UBIN BASED(FIELDIN$);
      291     6964        /* */
      292     6965               %EQU EQUAL=0;
      293     6966               %EQU LESS=1;
      294     6967               %EQU GREATER=2;
      295     6968               %EQU NOO=0;
      296     6969               %EQU YESS=1;
      297     6970               %EQU NONE=3;
      298     6971               %EQU KEY=0;
      299     6972               %EQU SEG=1;
      300     6973               %EQU USEREC=1;
      301     6974               %EQU FMREC=2;
      302     6975               %EQU BEGIN=0;
      303     6976               %EQU MIDDLE=1;
      304     6977               %EQU END=2;
      305     6978               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:10   
      306     6979    1   FMG$KPMME: ENTRY(PSEG$) ALTRET;
      307     6980        /* */
      308     6981    1          CALL KINIT ALTRET(ERR);
      309     6982
      310     6983    2          DO CASE(FPTCODE);
      311     6984    2             CASE(FPTREAD);
      312     6985    2                CALL READ ALTRET(ERR);
      313     6986
      314     6987    2             CASE(FPTPFIL);
      315     6988    2                CALL PFIL ALTRET(ERR);
      316     6989
      317     6990    2             CASE(FPTPFILEOF);
      318     6991    2                CALL PTOEOF ALTRET(ERR);
      319     6992
      320     6993    2             CASE(FPTREW);
      321     6994    2                CALL PTOBOF ALTRET(ERR);
      322     6995
      323     6996    2             CASE(FPTPREC);
      324     6997    2                CALL PREC ALTRET(ERR);
      325     6998
      326     6999    2             CASE(FPTDELREC);
      327     7000    2                CALL DELREC ALTRET(ERR);
      328     7001
      329     7002    2             CASE(FPTWRITE);
      330     7003    2                CALL WRITE ALTRET(ERR);
      331     7004
      332     7005    2          END;
      333     7006
      334     7007    1          IF FPTCODE = FPTWRITE THEN
      335     7008    1             F$DCB.CONT=FPT$WRITE_V.DVBYTE.CONT;
      336     7009
      337     7010    1          F$DCB.EOP=FM_EOP(FPTCODE);
      338     7011    1          IF INDEX# ~= SAVE_INDEX# THEN
      339     7012    2             DO;   /* RESTORE INDEX */
      340     7013    2             INDEX#=SAVE_INDEX#+1;
      341     7014    2             CALL SETINDEX ALTRET(ERR);
      342     7015    2             END;  /* RESTORE INDEX */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:11   
      343     7016
      344     7017    1          RETURN;
      345     7018
      346     7019    1   ERR:   ALTRETURN;
      347     7020               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:12   
      348     7021        /*I*     NAME:     ADDDATA
      349     7022                 PURPOSE:  To allocate data space and build a MISEG
      350     7023
      351     7024                 DESCRIPTION:
      352     7025                      If we don't have a data granule, or the current data granule
      353     7026                 is full, then allocate another granule.
      354     7027
      355     7028                      Next move the data from the user buffer to the data
      356     7029                 granule.  Update the data granule information.  Then, build
      357     7030                 the MISEG.
      358     7031
      359     7032                      If this file has alternate indexes, then build any necessary
      360     7033                 segments in those indexes.
      361     7034        */
      362     7035                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:13   
      363     7036    1   ADDDATA: PROC ALTRET;
      364     7037    2          DCL GACTB UBIN;
      365     7038    2          DCL GSIZ UBIN;
      366     7039        /* */
      367     7040    2          DA=FM$CFU.GDA;
      368     7041    2          IF DA = 0 THEN
      369     7042    2             CALL ALLOCATE ALTRET(ERR);
      370     7043
      371     7044    2          F$DCB.LVL=7;
      372     7045    2          DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));
      373     7046    2          IF DBUF$ = ADDR(NIL) OR
      374     7047    2             F$DCB.BFR.DA(0) ~= DA THEN
      375     7048    2             CALL FMD$REDBUF(DBUF$, 0, DA, 0, 0) ALTRET(ALLOC);
      376     7049
      377     7050    2          IF DBUF$->FM$GRAN.AVAIL = 0 THEN
      378     7051    2   ALLOC:    CALL ALLOCATE ALTRET(ERR);
      379     7052
      380     7053    2          G$=PINCRW(DBUF$, DBUF$->FM$GRAN.NAVX);
      381     7054    2          GACTB=DBUF$->FM$GRAN.AVAIL*4;
      382     7055
      383     7056    2          CALL FMD$RECTRAN(G$, GACTB, 0, 1, FAK, FPT$WRITE_V.SEED) ALTRET(ERR);
      384     7057    2          GSIZ=(GACTB+3)/4;
      385     7058    2          IF GSIZ > 0 THEN
      386     7059    2             FM$MISEG.GX=DBUF$->FM$GRAN.NAVX;
      387     7060    2          DBUF$->FM$GRAN.AVAIL=DBUF$->FM$GRAN.AVAIL-GSIZ;
      388     7061    2          DBUF$->FM$GRAN.NAVX=DBUF$->FM$GRAN.NAVX+GSIZ;
      389     7062
      390     7063    2          F$DCB.RPOS='0'B;
      391     7064    2          FM$MISEG.GSIZ=GSIZ;
      392     7065    2          FM$MISEG.GDA=DA;
      393     7066    2          FM$MISEG.GACTB=GACTB;
      394     7067    2          F$DCB.BFR.BUFUP(1)='1'B;
      395     7068    2          IF ALTKEY$ ~= ADDR(NIL) THEN
      396     7069    3             DO;   /* UPDATE ALT SEGS */
      397     7070    3             FM_MISEG=FM$MISEG;
      398     7071    3             IF FAK = 1 THEN
      399     7072    3                ADDR(FM_MISEG)->FM$MISEG.FAK='1'B;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:14   
      400     7073    3             CALL BLDALTSEG ALTRET(ERR);
      401     7074    3             END;  /* UPDATE ALT SEGS */
      402     7075
      403     7076    2          RETURN;
      404     7077    2   ERR:   ALTRETURN;
      405     7078    2          END ADDDATA;
      406     7079               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:15   
      407     7080        /*I*     NAME:     ADDKEY
      408     7081                 PURPOSE:  To add a key to an index granule
      409     7082                 DESCRIPTION:
      410     7083                      Calculate the number of words that the key will occupy.  If the
      411     7084                 file is an irel file, then the size field is two bytes.  Call
      412     7085                 GETSPACE to allocate the space in the data granule.
      413     7086        */
      414     7087    1   ADDKEY: PROC ALTRET;
      415     7088        /* */
      416     7089    2          IF ORG = %IREL# THEN
      417     7090    2             KEYWORDS=(KEYIN_SIZE+5)/4;
      418     7091    2          ELSE
      419     7092    2             KEYWORDS=(KEYIN_SIZE+4)/4;
      420     7093    2          TOTSIZE=KEYWORDS+SEGCNT;
      421     7094
      422     7095    2          ADDFLG=%KEY;
      423     7096    2          CALL GETSPACE ALTRET(ERR);
      424     7097    2          RETURN;
      425     7098    2   ERR:   ALTRETURN;
      426     7099    2          END ADDKEY;
      427     7100               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:16   
      428     7101        /*I*     NAME:     ADDSEG
      429     7102                 PURPOSE:  To add a segment to an index granule
      430     7103                 DESCRIPTION:
      431     7104                      Just set the size to the number of segment words we need, set
      432     7105                 the flag, and call GETSPACE to allocate space.
      433     7106        */
      434     7107    1   ADDSEG: PROC ALTRET;
      435     7108        /* */
      436     7109    2          KEYWORDS=0;
      437     7110    2          TOTSIZE=SEGCNT;
      438     7111
      439     7112    2          ADDFLG=%SEG;
      440     7113    2          CALL GETSPACE ALTRET(ERR);
      441     7114    2          RETURN;
      442     7115    2   ERR:   ALTRETURN;
      443     7116    2          END ADDSEG;
      444     7117               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:17   
      445     7118        /*I*     NAME:     ALLOCATE
      446     7119                 PURPOSE:  To allocate a data granule
      447     7120                 DESCRIPTION:
      448     7121                      Get a granule, and initialize the header to a data granule.
      449     7122                 If an index granule is also a FIT, then allocating a new granule
      450     7123                 may have caused an extent to be added, which may have caused the
      451     7124                 key information to move.  Update all of the necessary information.
      452     7125
      453     7126                      If we are out of granules, then delete any partial key that
      454     7127                 may have been formed.
      455     7128        */
      456     7129                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:18   
      457     7130    1   ALLOCATE: PROC ALTRET;
      458     7131    2          DCL SIZE SBIN;
      459     7132        /* */
      460     7133    2          CALL FAF$GETGRAN(DA) ALTRET(ALLOC_ERR);
      461     7134    2          CALL FMD$FLSHBUFNR(0);
      462     7135    2          CALL FMD$GETBUF(0, 1, DBUF$);
      463     7136    2          DBUF$->FM$GRAN='0'B;
      464     7137    2          DBUF$->FM$GRAN.STAMP.HASH=F$DCB.HASH;
      465     7138    2          DBUF$->FM$GRAN.STAMP.GMOD=DA;
      466     7139    2          DBUF$->FM$GRAN.ORG=F$DCB.ORG;
      467     7140    2          DBUF$->FM$GRAN.LVL=7;
      468     7141    2          DBUF$->FM$GRAN.NAVX=2;
      469     7142    2          DBUF$->FM$GRAN.AVAIL=1022;
      470     7143    2          F$DCB.BFR.DA(0)=DA;
      471     7144    2          F$DCB.BFR.BUFUP(0)='1'B;
      472     7145    2          F$DCB.BFR.SCRUB(0)='1'B;
      473     7146    2          F$DCB.CRECX=CRECX;
      474     7147    2          F$DCB.SEGX=SEGX;
      475     7148    2          FM$CFU.GDA=DA;
      476     7149    2          IF POFFW(KTPTR$, BUF$) ~= FM$GRAN.FCEX THEN
      477     7150    3             DO;   /* MAY HAVE MOVED BECAUSE OF NEW EXTNT */
      478     7151    3             SIZE=FM$GRAN.FCEX-POFFW(KTPTR$, BUF$);
      479     7152    3             KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
      480     7153    3             KEY$=PINCRW(KEY$, SIZE);
      481     7154    3             SEG$=PINCRW(SEG$, SIZE);
      482     7155    3             SEGX=SEGX+SIZE;
      483     7156    3             F$DCB.SEGX=SEGX;
      484     7157    3             BOUND=FM$KEYTBL(0);
      485     7158    3             END;  /* MAY HAVE MOVED BECAUSE OF NEW EXTNT */
      486     7159
      487     7160    2          RETURN;
      488     7161    2   ALLOC_ERR: ;
      489     7162    2          IF (B$JIT.ERR.CODE = %E$ACGRANS OR
      490     7163    2              B$JIT.ERR.CODE = %E$USGRANS OR
      491     7164    2              B$JIT.ERR.CODE = %E$PSGRANS OR
      492     7165    2              B$JIT.ERR.CODE = %E$VLPERR) AND
      493     7166    2             SEGCNT > 0 AND SEG$ ~= ADDR(NIL) THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:19   
      494     7167    2             IF FM$MISEG.GACTB = 0 THEN
      495     7168    3                DO;   /* DELETE KEY */
      496     7169    3                CALL CURKEY ALTRET(ERR);
      497     7170    3                KEY$->FM$KEYENT.D='1'B;
      498     7171    3                FM$CFU.NRECS=FM$CFU.NRECS-1;
      499     7172    3                END;  /* DELETE KEY */
      500     7173    2   ERR:   ALTRETURN;
      501     7174    2          END ALLOCATE;
      502     7175               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:20   
      503     7176        /*I*     NAME:     ALTCHK
      504     7177                 PURPOSE:  To check alternate keys
      505     7178                 DESCRIPTION:
      506     7179                      When a record is rewritten in a file with alternate indexes,
      507     7180                 that may have caused some of the keys associated with that record
      508     7181                 to change.  We have to compare the old record with the new record
      509     7182                 and make any necessary corrections.
      510     7183
      511     7184                      We set up FM_MISEG with the first MISEG associated with this
      512     7185                 record.  It may be necessary to use this to search for dups.  Loop
      513     7186                 through all of the indexes comparing the old key with the new key
      514     7187                 in the record.  If the key changed, then next check to see if this
      515     7188                 key is supposed to be unique.  If it is supposed to be unique, then
      516     7189                 next check to see if any other key with the same value exists.  If
      517     7190                 one does, altreturn.  Otherwise, if everything is okay, delete the
      518     7191                 old key.
      519     7192
      520     7193                      If any keys changed, then call REBLD_ALT to add the new keys
      521     7194                 for this record.
      522     7195        */
      523     7196                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:21   
      524     7197    1   ALTCHK: PROC ALTRET;
      525     7198    2          DCL DA UBIN;
      526     7199    2          DCL NUMENTS UBIN;
      527     7200    2          DCL I UBIN;
      528     7201    2          DCL ICHNG BIT(1);
      529     7202    2          DCL UNIQUE BIT(1);
      530     7203    2          DCL SIZE UBIN;
      531     7204    2          DCL CHARS CHAR(SIZE) BASED;
      532     7205        /* */
      533     7206    2          IF ORG = %INDEXED# THEN
      534     7207    2             NUMENTS=ALTKEYS.NUMENTS-1;
      535     7208    2          ELSE
      536     7209    2             NUMENTS=IRKEYS.NKEYS-1;
      537     7210
      538     7211    3          DO I=1 TO NUMENTS;
      539     7212    3             IF ORG = %INDEXED# THEN
      540     7213    3                ALTKEYS.K.INDXCHNG(I)='0'B;
      541     7214    3             ELSE
      542     7215    3                IRKEYS.K.INDXCHNG(I)='0'B;
      543     7216    3          END;  /* DO I */
      544     7217
      545     7218    2          FM_MISEG=FM$MISEG;
      546     7219    2          ADDR(FM_MISEG)->FM$MISEG.FAK='1'B;
      547     7220    2          DA=FM$MISEG.GDA;
      548     7221    2          ICHNG='0'B;
      549     7222    2          F$DCB.LVL=7;
      550     7223    2          DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));
      551     7224    2          IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= DA THEN
      552     7225    2             CALL FMD$REDBUF(DBUF$, 0, DA,, 0) ALTRET(DATAERR);
      553     7226    2          G$=PINCRW(DBUF$, FM$MISEG.GX);
      554     7227
      555     7228    3          DO I=1 TO NUMENTS;
      556     7229    3             IF ORG = %INDEXED# THEN
      557     7230    4                DO;   /* COMPARE KEYS */
      558     7231    4                SIZE=ALTKEYS.K.KEYL(I);
      559     7232    4                IF PINCRC(G$, ALTKEYS.K.KEYX(I))->CHARS ~=
      560     7233    4                   PINCRC(B$PS2$, ALTKEYS.K.KEYX(I))->CHARS THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:22   
      561     7234    4                   RESULT=%LESS;
      562     7235    4                ELSE
      563     7236    4                   RESULT=%EQUAL;
      564     7237    4                END;  /* COMPARE KEYS */
      565     7238    3             ELSE
      566     7239    3                CALL CHKEY(I);
      567     7240    3             IF RESULT ~= %EQUAL THEN
      568     7241    4                DO;   /* KEYS NOT EQUAL */
      569     7242    4                IF ORG = %INDEXED# THEN
      570     7243    4                   UNIQUE=ALTKEYS.K.UNIQUE(I);
      571     7244    4                ELSE
      572     7245    4                   UNIQUE=IRKEYS.K.UNIQUE(I);
      573     7246
      574     7247    4                IF (NOT F$DCB.LDFLG) OR
      575     7248    4                   (UNIQUE AND NOT F$DCB.UNIQUEBLD) THEN
      576     7249    5                   DO;   /* KEY CHANGED */
      577     7250    5                   ICHNG='1'B;
      578     7251    5                   IF ORG = %INDEXED# THEN
      579     7252    5                      ALTKEYS.K.INDXCHNG(I)='1'B;
      580     7253    5                   ELSE
      581     7254    5                      IRKEYS.K.INDXCHNG(I)='1'B;
      582     7255    5                   IF UNIQUE THEN
      583     7256    6                      DO;   /* MAKE SURE ITS UNIQUE */
      584     7257    6                      INDEX#=I+1;
      585     7258    6                      CALL SETINDEX ALTRET(ERR);
      586     7259    6                      KEYIN$=PINCRC(B$PS2$, F$DCB.KEYX);
      587     7260    6                      COMFLG=%USEREC;
      588     7261    6                      CALL FINDKEY ALTRET(NODUPS);
      589     7262    6                      B$JIT.ERR=ERRDUPKEY;
      590     7263    6                      ALTRETURN;
      591     7264        /*E*   ERROR:   FMG-E$DUPKEY-2
      592     7265               MESSAGE: Attempt to write duplicate key into alternate index.
      593     7266        */
      594     7267    6                      END;  /* MAKE SURE ITS UNIQUE */
      595     7268
      596     7269    5   NODUPS:         INDEX#=I+1;
      597     7270    5                   CALL DELALT ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:23   
      598     7271    5                   COMFLG=%USEREC;
      599     7272    5                   CALL SETKEY(B$PS2$);
      600     7273    5                   END;  /* KEY CHANGED */
      601     7274    4                ELSE
      602     7275    4                   FM$CFU.ALTBLD='1'B;
      603     7276    4                END;  /* KEYS NOT EQUAL */
      604     7277    3          END;  /* DO I */
      605     7278
      606     7279    2          IF ICHNG THEN
      607     7280    2             CALL REBLD_ALT ALTRET(ERR);
      608     7281
      609     7282    2          INDEX#=1;
      610     7283    2          CALL SETINDEX ALTRET(ERR);
      611     7284    2          CALL RESTOREPOS ALTRET(ERR);
      612     7285    2          CALL CURKEY ALTRET(ERR);
      613     7286
      614     7287    2          RETURN;
      615     7288    2   DATAERR: CALL DATAERROR;
      616     7289    2   ERR:   ALTRETURN;
      617     7290    2          END ALTCHK;
      618     7291               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:24   
      619     7292        /*I*     NAME:     BINSEARCH
      620     7293                 PURPOSE:  To binary search for a record
      621     7294                 DESCRIPTION:
      622     7295                      Use the plain-old everyday vanilla regular binary search
      623     7296                 to try to find a specified key.  If it don't exist, point to
      624     7297                 the next higher one.
      625     7298        */
      626     7299                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:25   
      627     7300    1   BINSEARCH: PROC ALTRET;
      628     7301    2          DCL LOW UBIN;
      629     7302    2          DCL HIGH UBIN;
      630     7303    2          DCL TCRECX UBIN;
      631     7304        /* */
      632     7305    2          FOUND=%YESS;
      633     7306    2          LOW=1;
      634     7307    2          HIGH=KEYCNT+1;
      635     7308    2          TCRECX=(HIGH+LOW)/2;
      636     7309
      637     7310    3          DO UNTIL (CRECX = TCRECX);
      638     7311    3             CRECX=TCRECX;
      639     7312    3             IF CRECX < BOUND THEN
      640     7313    3                KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));
      641     7314    3             ELSE
      642     7315    3                KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);
      643     7316
      644     7317    3             CALL COMKEY ALTRET(ERR);
      645     7318
      646     7319    4             DO CASE(RESULT);
      647     7320    4                CASE(%EQUAL);
      648     7321    4                   RETURN;
      649     7322
      650     7323    4                CASE(%GREATER);
      651     7324    4                   LOW=CRECX;
      652     7325
      653     7326    4                CASE(%LESS);
      654     7327    4                   HIGH=CRECX;
      655     7328
      656     7329    4             END;  /* CASE */
      657     7330    3             TCRECX=(LOW+HIGH)/2;
      658     7331    3          END;  /* WHILE */
      659     7332
      660     7333    2          CRECX=HIGH;
      661     7334    2          F$DCB.RPOS='1'B;
      662     7335    2          FOUND=%NOO;
      663     7336    2          RETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:26   
      664     7337
      665     7338    2   ERR:   ALTRETURN;
      666     7339    2          END BINSEARCH;
      667     7340               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:27   
      668     7341        /*I*     NAME:     BLDALTSEG
      669     7342                 PURPOSE:  To build keys and segments in alternate indexes
      670     7343                 DESCRIPTION:
      671     7344                      Whenever a new key or segment is added to the primary
      672     7345                 index, the appropriate alternate indexes must be updated.
      673     7346                 Loop through the set of indexes.  If the key is unique, or
      674     7347                 LOAD=NO, then we must build the key or segment now.  Otherwise,
      675     7348                 we can defer it to the close.
      676     7349                      If FAK is 1, then this is the first segment for a new key.
      677     7350                 Try to find a key with the same value.  If one exists, then add
      678     7351                 this segment as a duplicate.  Otherwise, build a new key.
      679     7352                 If FAK is zero, then the appropriate number of segments should
      680     7353                 already exist, just position to the current empty one.
      681     7354        */
      682     7355                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:28   
      683     7356    1   BLDALTSEG: PROC ALTRET;
      684     7357    2          DCL I UBIN;
      685     7358    2          DCL NUMENTS UBIN;
      686     7359    2          DCL UNIQUE BIT(1);
      687     7360        /* */
      688     7361    2          IF ORG = %INDEXED# THEN
      689     7362    2             NUMENTS=ALTKEYS.NUMENTS;
      690     7363    2          ELSE
      691     7364    2             NUMENTS=IRKEYS.NKEYS;
      692     7365
      693     7366    3          DO I=2 TO NUMENTS;
      694     7367    3             IF ORG = %INDEXED# THEN
      695     7368    3                UNIQUE=ALTKEYS.K.UNIQUE(I-1);
      696     7369    3             ELSE
      697     7370    3                UNIQUE=IRKEYS.K.UNIQUE(I-1);
      698     7371
      699     7372    3             IF (NOT F$DCB.LDFLG) OR
      700     7373    3                (UNIQUE AND NOT F$DCB.UNIQUEBLD) THEN
      701     7374    4                DO;   /* BUILD KEY */
      702     7375    4                INDEX#=I;
      703     7376    4                CALL SETINDEX ALTRET(ERR);
      704     7377
      705     7378    4                IF FAK = 1 THEN
      706     7379    5                   DO;   /* ADD NEW KEY FIRST */
      707     7380    5                   KEYIN$=PINCRC(B$PS2$, F$DCB.KEYX);
      708     7381    5                   COMFLG=%USEREC;
      709     7382    5                   CALL FINDKEY ALTRET(NEW);
      710     7383
      711     7384    5                   CALL ADDSEG ALTRET(ERR);
      712     7385
      713     7386    6                   DO WHILE('0'B);
      714     7387    6   NEW:               IF B$JIT.ERR.CODE ~= %E$NOKEY THEN
      715     7388    6                         ALTRETURN;
      716     7389    6                      B$JIT.ERR='0'B;
      717     7390    6                      CALL ADDKEY ALTRET(ERR);
      718     7391    6                   END;
      719     7392    5                   END;  /* ADD NEW KEY FIRST */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:29   
      720     7393    4                ELSE
      721     7394    5                   DO;   /* POSITION TO SEG */
      722     7395    5                   CALL RESTOREPOS ALTRET(ERR);
      723     7396    5                   SEG$=PINCRW(BUF$, SEGX);
      724     7397    5                   END;  /* POSITION TO SEG */
      725     7398
      726     7399    4                F$DCB.BFR.BUFUP(1)='1'B;
      727     7400    4                FM$MISEG=FM_MISEG;
      728     7401    4                CALL NXTSEG ALTRET(ERR);
      729     7402    4                END;  /* BUILD KEY */
      730     7403    3             ELSE
      731     7404    3                FM$CFU.ALTBLD='1'B;
      732     7405    3          END;  /* DO I */
      733     7406
      734     7407    2          IF INDEX# ~= 0 THEN
      735     7408    3             DO;   /* RESET INDEX */
      736     7409    3             INDEX#=1;
      737     7410    3             CALL SETINDEX ALTRET(ERR);
      738     7411    3             CALL RESTOREPOS ALTRET(ERR);
      739     7412    3             SEG$=PINCRW(BUF$, SEGX);
      740     7413    3             END;  /* RESET INDEX */
      741     7414
      742     7415    2          RETURN;
      743     7416    2   ERR:   ALTRETURN;
      744     7417    2          END BLDALTSEG;
      745     7418               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:30   
      746     7419        /*I*     NAME:     BLDFLINK
      747     7420                 PURPOSE:  To build a new index granule
      748     7421                 DESCRIPTION:
      749     7422                      First allocate another granule.  If this is a file directory,
      750     7423                 make sure the granule gets charged to the right place.
      751     7424
      752     7425                      The new granule we allocate will go into buffer 3, and
      753     7426                 become the flink.  If there is something already in buffer 3,
      754     7427                 then move it to buffer 4.  If there is nothing in buffer 3, then
      755     7428                 this granule will be at the end of the list, make sure we update
      756     7429                 LDA.
      757     7430
      758     7431                      Check SLIDE and LSLIDE to see if an upper level should be
      759     7432                 built yet.
      760     7433
      761     7434                      Initialize the new granule.  Set the flink to the flink
      762     7435                 (the granule in buffer 4) and the blink to what is in buffer
      763     7436                 1.  Then write out all three buffers to prevent link check
      764     7437                 failures.
      765     7438        */
      766     7439                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:31   
      767     7440    1   BLDFLINK: PROC ALTRET;
      768     7441    2          DCL BUF4$ PTR;
      769     7442    2          DCL FLINKDA UBIN;
      770     7443    2          DCL KTPTR3$ PTR;
      771     7444    2          DCL HDR(0:1) UBIN BASED;
      772     7445        /* */
      773     7446    2          F$DCB.MOVED=0;
      774     7447    2          IF FM$GRAN.ORG ~= 0 THEN
      775     7448    2             CALL FAF$GETGRAN(DA) ALTRET(ERR);
      776     7449    2          ELSE
      777     7450    2             CALL FAG$G1DIR(DA) ALTRET(ERR);
      778     7451
      779     7452    2          IF F$DCB.MOVED ~= 0 AND ALTKEY$ ~= ADDR(NIL) THEN
      780     7453    3             DO;   /* Adjust SEGX if FIT size changed */
      781     7454    3             IF ORG = %INDEXED# THEN
      782     7455    4                DO;
      783     7456    4                IF ALTKEYS.K.CDA(0)=FM_FRZERO THEN
      784     7457    4                   ALTKEYS.K.SEGX(0)=ALTKEYS.K.SEGX(0)+F$DCB.MOVED;
      785     7458    4                END;
      786     7459    4             ELSE DO;
      787     7460    4                IF IRKEYS.K.CDA(0)=FM_FRZERO THEN
      788     7461    4                   IRKEYS.K.SEGX(0)=IRKEYS.K.SEGX(0)+F$DCB.MOVED;
      789     7462    4                END;
      790     7463    3             F$DCB.MOVED=0;
      791     7464    3             END;  /* Adjust SEGX if FIT size changed */
      792     7465
      793     7466    2          BUF4$=ADDR(NIL);
      794     7467    2          IF BUF3$ ~= ADDR(NIL) THEN
      795     7468    3             DO;   /* ALREADY HAVE A FLINK */
      796     7469    3             CALL FMD$FLSHBUF(4);
      797     7470    3             F$DCB.BFR(4)=F$DCB.BFR(3);
      798     7471    3             F$DCB.BFR1(4)=F$DCB.BFR1(3);
      799     7472    3             F$DCB.BFR(3)='0'B;
      800     7473    3             F$DCB.BFR1(3)='0'B;
      801     7474    3             BUF4$=BUF3$;
      802     7475    3             BUF4$->FM$GRAN.BLINK=DA;
      803     7476    3             FLINKDA=F$DCB.BFR.DA(4);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:32   
      804     7477    3             F$DCB.BFR.BUFUP(4)='1'B;
      805     7478    3             END;  /* ALREADY HAVE A FLINK */
      806     7479    2          ELSE
      807     7480    3             DO;   /* NO FLINK */
      808     7481    3             FLINKDA=0;
      809     7482    3             IF FM$GRAN.ORG ~= 0 THEN
      810     7483    4                DO;   /* SET LDA */
      811     7484    4                IF ALTKEY$ ~= ADDR(NIL) THEN
      812     7485    4                   IF ORG = %INDEXED# THEN
      813     7486    4                      ALTKEYS.K.LDA(INDEX#)=DA;
      814     7487    4                   ELSE
      815     7488    4                      IRKEYS.K.LDA(INDEX#)=DA;
      816     7489    4                IF INDEX# = 0 THEN
      817     7490    4                   FM$CFU.LDA=DA;
      818     7491    4                END;  /* SET LDA */
      819     7492    3             END;  /* NO FLINK */
      820     7493
      821     7494    2          IF FM$GRAN.ORG ~= 0 THEN
      822     7495    3             DO;   /* FILE */
      823     7496    3             IF FM$CFU.SLIDE < 511 THEN
      824     7497    3                FM$CFU.SLIDE=FM$CFU.SLIDE+1;
      825     7498    3             F$DCB.SLIDE=FM$CFU.SLIDE;
      826     7499    3             IF F$DCB.SLIDE > F$DCB.LSLIDE THEN
      827     7500    3                FM$CFU.ULBLD=1;
      828     7501    3             KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
      829     7502    3             BOUND=FM$KEYTBL(0);
      830     7503    3             END;  /* FILE */
      831     7504
      832     7505    2          CALL FMD$FLSHBUF(3);
      833     7506    2          CALL FMD$GETBUF(3, 1, BUF3$);
      834     7507    2          F$DCB.BFR.DA(3)=DA;
      835     7508    2          FM$GRAN3='0'B;
      836     7509
      837     7510    2          BUF3$->HDR=BUF$->HDR;
      838     7511
      839     7512    2          FM$GRAN3.STAMP.GMOD=DA;
      840     7513    2          FM$GRAN3.FCEX=5;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:33   
      841     7514    2          FM$GRAN3.FLINK=FLINKDA;
      842     7515    2          FM$GRAN3.BLINK=F$DCB.BFR.DA(1);
      843     7516    2          FM$GRAN3.AVAIL=1024-5-SIZEW(FM$KEYTBL);
      844     7517    2          FM$GRAN3.NAVX=5+SIZEW(FM$KEYTBL);
      845     7518
      846     7519    2          KTPTR3$=PINCRW(BUF3$, 5);
      847     7520    2          KTPTR3$->FM$KEYTBL3='0'B;
      848     7521    2          KTPTR3$->FM$KEYTBL3(0)=SIZEC(FM$KEYTBL);
      849     7522
      850     7523    2          F$DCB.BFR.BUFUP(3)='1'B;
      851     7524    2          F$DCB.BFR.SCRUB(3)='1'B;
      852     7525
      853     7526    2          FM$GRAN.FLINK=DA;
      854     7527    2          F$DCB.BFR.BUFUP(1)='1'B;
      855     7528
      856     7529    2          IF BUF4$ ~= ADDR(NIL) OR FM$GRAN.ORG = 0 THEN
      857     7530    3             DO;   /* HELP PREVENT LINK FAILURES */
      858     7531    3             CALL FMD$WRTSVNW(3);
      859     7532    3             CALL FMD$WRTSVNW(1);
      860     7533    3             CALL FMD$FLSHBUF(4);
      861     7534    3             CALL FMB$IOSPIN;
      862     7535    3             END;  /* HELP PREVENT LINK FAILURES */
      863     7536
      864     7537    2          RETURN;
      865     7538    2   ERR:   ALTRETURN;
      866     7539    2          END BLDFLINK;
      867     7540               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:34   
      868     7541        /*I*     NAME:     BLDREC
      869     7542                 PURPOSE:  To build a record
      870     7543                 DESCRIPTION:
      871     7544                      FAK indicates whether or not this is our first time through
      872     7545                 the loop.
      873     7546
      874     7547                      Loop until we run out of data to transmit from the users
      875     7548                 buffer and there aren't any more segments.
      876     7549
      877     7550                      If we ran out of data before we ran out of segments, set
      878     7551                 the number of active bytes to 0.
      879     7552
      880     7553                      If we ran out of segments before we ran out of data, then
      881     7554                 call NEWSEG to add segment space.
      882     7555
      883     7556                      If there is some usable space in the segment we are pointing
      884     7557                 to, then we will use it.  Read in the data granule that this
      885     7558                 segment points to.  If this file has alternate indexes, then
      886     7559                 stash the current MISEG.  This may be needed for searching a list
      887     7560                 of dups later.  Transfer the data from the user's buffer to
      888     7561                 to the data granule.  Then set the number of active bytes.
      889     7562                 If this file has alternate indexes and the MISEG changed,
      890     7563                 call UPALTSEGS to make any necessary changes.
      891     7564
      892     7565                      If there wasn't any useable space in the current MISEG, then
      893     7566                 call ADDDATA to allocate data space.
      894     7567
      895     7568                      If the user asked for an ID back, give him one.  Set the
      896     7569                 DVBYTE.  Then position to the next segment.
      897     7570        */
      898     7571                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:35   
      899     7572    1   BLDREC: PROC ALTRET;
      900     7573    2          DCL GACTB UBIN;
      901     7574    2          DCL GX UBIN;
      902     7575    2          DCL GSIZ UBIN;
      903     7576    2          DCL BUFNUM UBIN;
      904     7577    2          DCL SAVE_ERROR BIT(36);
      905     7578        /* */
      906     7579    2          FAK=1;
      907     7580    2          B$JIT.ERR='0'B;
      908     7581    2          IDPTR$=PINCRW(ADDR(F$DCB.ID), -1);
      909     7582    2          ID.DA=FM$MISEG.GDA;
      910     7583    2          ID.GX=FM$MISEG.GX;
      911     7584    2          SAVE_ERROR='0'B;
      912     7585
      913     7586    3          DO UNTIL (SEG$ = ADDR(NIL) AND F$DCB.UBYTES = 0);
      914     7587    3             IF F$DCB.UBYTES = 0 THEN
      915     7588    4                DO;   /* NULL RECORD */
      916     7589    4                IF ALTKEY$~=ADDR(NIL) THEN
      917     7590    4                   OLD_MISEG=FM$MISEG;
      918     7591    4                FM$MISEG.GACTB=0;
      919     7592    4                F$DCB.BFR.BUFUP(1)='1'B;
      920     7593    4                IF ALTKEY$~=ADDR(NIL) AND OLD_MISEG~=FM$MISEG THEN
      921     7594    5                   DO;   /* Update alt segs */
      922     7595    5                   FM_MISEG=FM$MISEG;
      923     7596    5                   IF FAK=1 THEN
      924     7597    6                      DO;
      925     7598    6                      ADDR(FM_MISEG)->FM$MISEG.FAK='1'B;
      926     7599    6                      ADDR(OLD_MISEG)->FM$MISEG.FAK='1'B;
      927     7600    6                      END;
      928     7601    5                   CALL UPALTSEGS ALTRET(ERR);
      929     7602    5                   END;  /* Update alt segs */
      930     7603    4                END;  /* NULL RECORD */
      931     7604    3             ELSE
      932     7605    4                DO;   /* NOT NULL */
      933     7606    4                IF SEG$ = ADDR(NIL) THEN
      934     7607    4                   CALL NEWSEG ALTRET(ERR);
      935     7608
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:36   
      936     7609    4                IF FM$MISEG.GSIZ > 0 THEN
      937     7610    5                   DO;   /* START USING CURRENT SEG */
      938     7611    5                   DA=FM$MISEG.GDA;
      939     7612    5                   F$DCB.LVL=7;
      940     7613    5                   DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));
      941     7614    5                   IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= DA THEN
      942     7615    5                      CALL FMD$REDBUF(DBUF$, 0, DA,, 0) ALTRET(DATAERR);
      943     7616    5                   GX=FM$MISEG.GX;
      944     7617    5                   G$=PINCRW(DBUF$, GX);
      945     7618
      946     7619    5                   GACTB=FM$MISEG.GSIZ*4;
      947     7620    5                   IF ALTKEY$ ~= ADDR(NIL) THEN
      948     7621    6                      DO;   /* SAVE OLD MISEG */
      949     7622    6                      OLD_MISEG=FM$MISEG;
      950     7623    6                      END;  /* SAVE OLD MISEG */
      951     7624
      952     7625    5                   CALL FMD$RECTRAN(G$, GACTB, 0, 1, FAK, FPT$WRITE_V.SEED) ALTRET(ERR)
              7625                            ;
      953     7626    5                   FM$MISEG.GACTB=GACTB;
      954     7627
      955     7628    5                   F$DCB.BFR.BUFUP(1)='1'B;
      956     7629    5                   IF ALTKEY$~=ADDR(NIL) THEN
      957     7630    6                      DO;   /* Set FM_MISEG for next go-round */
      958     7631    6                      FM_MISEG=FM$MISEG;
      959     7632    6                      IF FAK=1 THEN
      960     7633    6                         ADDR(FM_MISEG)->FM$MISEG.FAK='1'B;
      961     7634    6                      IF OLD_MISEG~=FM$MISEG THEN
      962     7635    7                         DO;   /* Update alt segs */
      963     7636    7                         IF FAK=1 THEN
      964     7637    7                            ADDR(OLD_MISEG)->FM$MISEG.FAK='1'B;
      965     7638    7                         CALL UPALTSEGS ALTRET(ERR);
      966     7639    7                         END;  /* Update alt segs */
      967     7640    6                      END;  /* Set FM_MISEG for next go-round */
      968     7641    5                   END;  /* START USING CURRENT SEGS */
      969     7642    4                ELSE
      970     7643    5                   DO;   /* NEED TO ALLOCATE DATA */
      971     7644    5                   CALL ADDDATA ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:37   
      972     7645    5                   END;  /* NEED TO ALLOCATE DATA */
      973     7646    4                END;  /* NOT NULL */
      974     7647
      975     7648    3             IF FAK = 1 THEN
      976     7649    4                DO;   /* FIRST TIME AROUND */
      977     7650    4                IF FPT$WRITE_V.ID THEN
      978     7651    4                   CALL GETIDRW WHENALTRETURN
      979     7652    5                      DO;   /* SAVE ERROR */
      980     7653    5                      SAVE_ERROR=B$JIT.ERR;
      981     7654    5                      END;  /* SAVE ERROR */
      982     7655    4                IF F$DCB.SHARED THEN
      983     7656    4                   CALL SETID;
      984     7657    4                FM$MISEG.CTL=FPT$WRITE_V.DVBYTE;
      985     7658    4                END;  /* FIRST TIME AROUND */
      986     7659    3             CALL NXTSEG ALTRET(ERR);
      987     7660    3             FAK=0;
      988     7661    3          END;  /* WHILE */
      989     7662
      990     7663    2          IF SAVE_ERROR ~= '0'B THEN
      991     7664    3             DO;   /* REPORT ERROR */
      992     7665    3             B$JIT.ERR=SAVE_ERROR;
      993     7666    3             ALTRETURN;
      994     7667    3             END;  /* REPORT ERROR */
      995     7668    2          ELSE
      996     7669    2             RETURN;
      997     7670    2   DATAERR: CALL DATAERROR;
      998     7671    2          ALTRETURN;
      999     7672    2   ERR:   ALTRETURN;
     1000     7673    2          END BLDREC;
     1001     7674               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:38   
     1002     7675        /*I*     NAME:     BLINK
     1003     7676                 PURPOSE:  To position backwards one granule
     1004     7677                 DESCRIPTION:
     1005     7678                      Get the disk address of the previous index granule.  If there
     1006     7679                 isn't one, altreturn.  Then read the granule.
     1007     7680        */
     1008     7681    1   BLINK: PROC ALTRET;
     1009     7682        /* */
     1010     7683    2          DA=FM$GRAN.BLINK;
     1011     7684    2          IF DA = 0 THEN
     1012     7685    3             DO;   /* BOF */
     1013     7686    3             B$JIT.ERR=ERRBOF;
     1014     7687    3             ALTRETURN;
     1015     7688    3             END;  /* BOF */
     1016     7689
     1017     7690    2          CALL RDGRAN ALTRET(ERR);
     1018     7691
     1019     7692    2          RETURN;
     1020     7693    2   ERR:   ALTRETURN;
     1021     7694    2          END BLINK;
     1022     7695               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:39   
     1023     7696        /*I*     NAME:     BUILD_FIELD
     1024     7697                 PURPOSE:  To build a field in a key
     1025     7698                 DESCRIPTION:
     1026     7699                      Use a CASE statement to decide if we need to build a nibble
     1027     7700                 or character field.  Only build the field if the data is present.
     1028     7701                 Increment the key pointer to the next field.
     1029     7702        */
     1030     7703    1   BUILD_FIELD: PROC;
     1031     7704        /* */
     1032     7705    2   DCL F$ PTR;
     1033     7706    2   DCL CHRS CHAR(LEN) BASED;
     1034     7707        /* */
     1035     7708    3          DO CASE(RECFIELD.FIELD.TYPE(FN));
     1036     7709    3             CASE(%PDLA_DATATYPE, %PDTA_DATATYPE, %PDNS_DATATYPE,
     1037     7710    3                  %PDFLT_DATATYPE, %PDLE_DATATYPE, %PDTE_DATATYPE,
     1038     7711    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     1039     7712    3                CALL BUILD_NIBFIELD;
     1040     7713    3                IRKEY$=PINCRC(IRKEY$, (LEN+1)/2);
     1041     7714
     1042     7715    3             CASE(ELSE);
     1043     7716    3                F$=PINCRC(REC$, FIELD_START.OFFSET(FN)/9);
     1044     7717    3                IRKEY$->CHRS=F$->CHRS;
     1045     7718    3                IRKEY$=PINCRC(IRKEY$, LEN);
     1046     7719
     1047     7720    3          END;  /* CASE */
     1048     7721
     1049     7722    2          RETURN;
     1050     7723    2          END BUILD_FIELD;
     1051     7724               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:40   
     1052     7725        /*I*     NAME:     BUILD_IRKEY
     1053     7726                 PURPOSE:  To build an irel key in either an index granule
     1054     7727                           or a user key buffer.
     1055     7728                 DESCRIPTION:
     1056     7729                 If we're building the key in an index granule, then
     1057     7730                 KEYIN_SIZE is initialized to the number of bytes in this
     1058     7731                 irel key. Set SIZE to KEYIN_SIZE plus the two byte size
     1059     7732                 field and initialize the whole thing to zero. Then, set
     1060     7733                 the size of the irel key. IRKEY$ is used as a floating
     1061     7734                 pointer to the current field of interest.
     1062     7735
     1063     7736                 If we're building the key in a user's key buffer, then
     1064     7737                 set SIZE to F$DCB.KEYL and initialize the user's key buffer
     1065     7738                 to zero.
     1066     7739
     1067     7740                 Loop through the set of fields used to build this key.
     1068     7741                 KFIELD is a list of fields used to build the key.  FN is the
     1069     7742                 field number in RECFIELD.  Call SET_LEN to set the value of
     1070     7743                 LEN, the length of the current field. Call BUILD_FIELD to
     1071     7744                 move the key field into the proper place and increment the
     1072     7745                 IRKEY$ pointer to the next field.
     1073     7746        */
     1074     7747                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:41   
     1075     7748    1   BUILD_IRKEY: PROC(TYPE);
     1076     7749    2          DCL TYPE UBIN;
     1077     7750    2          DCL SIZE UBIN;
     1078     7751    2          DCL I UBIN;
     1079     7752    2          DCL 1 ZAP BASED,
     1080     7753    2               2 * CHAR(SIZE);
     1081     7754        /* */
     1082     7755    3          IF TYPE=%FMREC THEN DO;
     1083     7756    3             SIZE=KEYIN_SIZE+2;
     1084     7757    3             KEY$->ZAP='0'B;
     1085     7758    3             REC$=KEYIN$;
     1086     7759    3             FM$IRENT.KLB=KEYIN_SIZE;
     1087     7760    3             IRKEY$=PINCRC(KEY$, 2);
     1088     7761    3             END;
     1089     7762    3          ELSE DO; /* TYPE=%USEREC */
     1090     7763    3             SIZE=F$DCB.KEYL;
     1091     7764    3             IRKEY$=B$PS1$;
     1092     7765    3             IRKEY$->ZAP='0'B;
     1093     7766    3             REC$=KEY$;
     1094     7767    3             END;
     1095     7768
     1096     7769    3          DO I=0 TO IRKEYS.K.NFIELDS(INDEX#)-1;
     1097     7770    3             FN=KFIELD.FIELD(I+IRKEYS.K.FIRSTFIELD(INDEX#));
     1098     7771    3             CALL SET_LEN;
     1099     7772    3             CALL BUILD_FIELD;
     1100     7773    3          END;  /* DO I */
     1101     7774
     1102     7775    2          RETURN;
     1103     7776    2          END BUILD_IRKEY;
     1104     7777               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:42   
     1105     7778        /*I*     NAME:     BUILD_NIBFIELD
     1106     7779                 PURPOSE:  To build a nibble field
     1107     7780                 DESCRIPTION:
     1108     7781                      This routine moves a packed decimal field.  Because of the
     1109     7782                 %#@&in' hardware that we have to run on, we can't use bit string
     1110     7783                 instructions to move data unless the description is double word
     1111     7784                 aligned.  Since user passed buffers only have to be character
     1112     7785                 aligned, and there is an extra bit left over from each byte, we
     1113     7786                 have to do a lot of chicken waving to get this to work.
     1114     7787
     1115     7788                      First, we build F$ to point to the field in the user record
     1116     7789                 that we want to move.  ODD indicates whether we are starting on
     1117     7790                 an odd nibble boundary in the string.
     1118     7791
     1119     7792                      We will now proceed to move one nibble at a time to the
     1120     7793                 place of interest.  First move the whole byte from the source
     1121     7794                 to a temp.  Then move the nibble out of that byte to a nibble
     1122     7795                 sized temp.  Next pull the byte out of the destination field
     1123     7796                 that we want to change.  Store the nibble that is being changed
     1124     7797                 into that byte.  Now the byte gets store back where it was.
     1125     7798                 This way only the nibble that we want to move gets changed.
     1126     7799        */
     1127     7800                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:43   
     1128     7801    1   BUILD_NIBFIELD: PROC;
     1129     7802    2          DCL ODD UBIN;
     1130     7803    2          DCL F$ PTR;
     1131     7804    2          DCL TEMP UBIN(4);
     1132     7805    2          DCL BTEMP UBIN(9) CALIGNED;
     1133     7806    2          DCL 1 BTEMPS REDEF BTEMP CALIGNED,
     1134     7807    2               2 * BIT(1) UNAL,
     1135     7808    2               2 UPPER UBIN(4) UNAL,
     1136     7809    2               2 LOWER UBIN(4) UNAL;
     1137     7810    2          DCL I UBIN;
     1138     7811    2          DCL BYT(0:0) UBIN(9) CALIGNED BASED;
     1139     7812        /* */
     1140     7813    2          F$=PINCRC(REC$, FIELD_START.OFFSET(FN)/9);
     1141     7814    2          ODD=MOD(FIELD_START.OFFSET(FN), 9);
     1142     7815    2          IF ODD > 0 THEN
     1143     7816    2             ODD=1;
     1144     7817
     1145     7818    3          DO I=0 TO LEN-1;
     1146     7819    3             BTEMP=F$->BYT((I+ODD)/2);
     1147     7820    3             IF MOD(I+ODD, 2) = 1 THEN
     1148     7821    3                TEMP=BTEMPS.LOWER;
     1149     7822    3             ELSE
     1150     7823    3                TEMP=BTEMPS.UPPER;
     1151     7824
     1152     7825    3             BTEMP=IRKEY$->BYT(I/2);
     1153     7826    3             IF MOD(I,2) = 1 THEN
     1154     7827    3                BTEMPS.LOWER=TEMP;
     1155     7828    3             ELSE
     1156     7829    3                BTEMPS.UPPER=TEMP;
     1157     7830    3             IRKEY$->BYT(I/2)=BTEMP;
     1158     7831    3          END;  /* DO I */
     1159     7832
     1160     7833
     1161     7834    2          RETURN;
     1162     7835    2          END BUILD_NIBFIELD;
     1163     7836               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:44   
     1164     7837        /*I*     NAME:     CALCSEG
     1165     7838                 PURPOSE:  To calculate the number of new Master Index
     1166     7839                           Segments (MISEGs), or actually the number of
     1167     7840                           additional segment words, required for this record
     1168     7841                           or record chunk.
     1169     7842                 DESCRIPTION:
     1170     7843                      If we currently don't have a data buffer in memory, read one
     1171     7844                 in, if it exists.  Set AVAIL to the amount of space available
     1172     7845                 in the data granule.
     1173     7846
     1174     7847                      If this file has alternate indexes, then make sure that
     1175     7848                 enough of the record gets stored in the data granule so that
     1176     7849                 we can access all of the key information we need.
     1177     7850
     1178     7851                      Each data granule can hold a maximum of 1022 words,
     1179     7852                 1024 minus 2 words of header.  Each MISEG used to indicate
     1180     7853                 where a record or piece of record is stored requires 2 words.
     1181     7854                 It's possible for F$DCB.UBYTES, the number of bytes remaining
     1182     7855                 to be stored, to be greater than will fit in the current
     1183     7856                 data granule.  It may be large enough to require storage on
     1184     7857                 multiple data granules.  If the file is compressed, we can't
     1185     7858                 tell how much room it will take, so start with one MISEG or
     1186     7859                 2 words.  Otherwise, if F$DCB.UBYTES will fit in the
     1187     7860                 available space in the current data granule, we only need
     1188     7861                 one MISEG or two words.  If UBYTES is larger than that, we
     1189     7862                 may need multiple MISEGs, one for each different data granule
     1190     7863                 to be used.  So, compute the number of additional data
     1191     7864                 granules needed to store F$DCB.UBYTES - AVAIL bytes and
     1192     7865                 multiply that by 2.  If there's room left on the current data
     1193     7866                 granule, add 2 more words since that space will be used and
     1194     7867                 we'll need an MISEG for it too.
     1195     7868        */
     1196     7869                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:45   
     1197     7870    1   CALCSEG: PROC ALTRET;
     1198     7871    2          DCL AVAIL UBIN;
     1199     7872    2          DCL MIN_SIZE UBIN;
     1200     7873        /* */
     1201     7874    2          IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= FM$CFU.GDA THEN
     1202     7875    2             IF FM$CFU.GDA = 0 THEN
     1203     7876    2                AVAIL=0;
     1204     7877    2             ELSE
     1205     7878    3                DO;   /* READ IN DATA GRAN */
     1206     7879    3                DA=FM$CFU.GDA;
     1207     7880    3                F$DCB.LVL=7;
     1208     7881    3                DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));
     1209     7882    3                IF F$DCB.BFR.DA(0) ~= DA OR DBUF$ = ADDR(NIL) THEN
     1210     7883    3                   CALL FMD$REDBUF(DBUF$, 0, DA,, 0) ALTRET(DATAERR);
     1211     7884    3                AVAIL=DBUF$->FM$GRAN.AVAIL*4;
     1212     7885    3                END;  /* READ IN DATA GRAN */
     1213     7886    2          ELSE
     1214     7887    2             AVAIL=DBUF$->FM$GRAN.AVAIL*4;
     1215     7888
     1216     7889    2          IF ALTKEY$ ~= ADDR(NIL) AND FAK = 1 THEN
     1217     7890    3             DO;   /* MAY NEED EXTRA SPACE */
     1218     7891    3             IF ORG = %IREL# THEN
     1219     7892    3                MIN_SIZE=IRKEYS.MINSIZE;
     1220     7893    3             ELSE
     1221     7894    3                MIN_SIZE=ALTKEYS.MINWRSIZ;
     1222     7895    3             IF MIN_SIZE > AVAIL THEN
     1223     7896    4                DO;   /* ALLOCATE ANOTHER DATA GRAN */
     1224     7897    4                CALL ALLOCATE ALTRET(ERR);
     1225     7898    4                AVAIL=DBUF$->FM$GRAN.AVAIL*4;
     1226     7899    4                END;  /* ALLOCATE ANOTHER DATA GRAN */
     1227     7900    3             END;  /* MAY NEED EXTRA SPACE */
     1228     7901
     1229     7902    2          IF F$DCB.COMP OR F$DCB.UBYTES <= AVAIL THEN
     1230     7903    2             SEGCNT=2; /* Compressed or will fit in current data gran */
     1231     7904    2          ELSE
     1232     7905    3             DO;   /* May need multiple segs */
     1233     7906    3             SEGCNT=( (F$DCB.UBYTES-AVAIL+(4096-8-1))/(4096-8) )*2;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:46   
     1234     7907    3             IF AVAIL > 0 THEN
     1235     7908    3                SEGCNT=SEGCNT+2;
     1236     7909    3             END;  /* May need multiple segs */
     1237     7910
     1238     7911    2          RETURN;
     1239     7912    2   DATAERR: ;
     1240     7913    2          CALL DATAERROR;
     1241     7914    2   ERR:   ALTRETURN;
     1242     7915    2          END CALCSEG;
     1243     7916               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:47   
     1244     7917        /*I*     NAME:     CALC_INSRT
     1245     7918                 PURPOSE:  To calculate the insertion point of a key or segment
     1246     7919                 DESCRIPTION:
     1247     7920                      ALTSEG indicates whether or not we are inserting in the
     1248     7921                 middle of a list of duplicates.  This is done when a record
     1249     7922                 expands, and is tricky.
     1250     7923
     1251     7924                      TSIZE indicates how many segments there are between the
     1252     7925                 beginning of the key information and the first key, if there
     1253     7926                 is one.  If we are adding a key, and there are no segments
     1254     7927                 at the beginning, then we want to indicate that the key is
     1255     7928                 being inserted at the beginning.  Otherwise, we check KEYCNT
     1256     7929                 to decide if we are going to insert at the end or in the
     1257     7930                 middle.
     1258     7931
     1259     7932                      If this is an alternate index, and we are adding a new
     1260     7933                 segment, as opposed to adding a duplicate key entry, then
     1261     7934                 we have to find the correct insertion point.  First, position
     1262     7935                 to the beginning of the key.  Then loop through the list of
     1263     7936                 segments to find the correct duplicate key that we are adding
     1264     7937                 the segment to.  Now, position to the next record.  If there
     1265     7938                 is a next record for this key, this will position us just
     1266     7939                 past the end of the duplicate key, which is where we want to
     1267     7940                 add the new segment.  In this case, use SEGX to determine
     1268     7941                 whether we are now at the beginning or middle of a granule.
     1269     7942                 If there is no next record for this key, then we're at the
     1270     7943                 end of the list of duplicates.  In this case, we want to act
     1271     7944                 as though we're adding a new duplicate except that we also
     1272     7945                 need to set SEGX and SEG$ again since they won't be correct.
     1273     7946
     1274     7947                      If we are adding a duplicate key, then we want to add it
     1275     7948                 to the end of the list of duplicates.  Position to the next
     1276     7949                 key to get to the end of the duplicates list.  Then, back up
     1277     7950                 the record pointer by one.  If this puts us at the beginning
     1278     7951                 of a granule, then go back one granule, and try to insert at
     1279     7952                 the end.  Otherwise, we are in the middle.
     1280     7953        */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:48   
     1281     7954                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:49   
     1282     7955    1   CALC_INSRT: PROC ALTRET;
     1283     7956    2          DCL TSIZE SBIN;
     1284     7957        /* */
     1285     7958
     1286     7959    2          IF KEYCNT = 0 THEN
     1287     7960    2             TSIZE=FM$GRAN.NAVX-FM$GRAN.FCEX-SIZEW(FM$KEYTBL);
     1288     7961    2          ELSE
     1289     7962    2             IF BOUND = 1 THEN
     1290     7963    2                TSIZE=FM$KEYTBL(1)+512-FM$GRAN.FCEX-SIZEW(FM$KEYTBL);
     1291     7964    2             ELSE
     1292     7965    2                TSIZE=FM$KEYTBL(1)-FM$GRAN.FCEX-SIZEW(FM$KEYTBL);
     1293     7966
     1294     7967    2          IF ADDFLG = %KEY THEN
     1295     7968    3             DO;   /* KEY */
     1296     7969    3             IF CRECX = 1 AND TSIZE = 0 THEN
     1297     7970    3                INSRT=%BEGIN;
     1298     7971    3             ELSE
     1299     7972    3                IF CRECX > KEYCNT THEN
     1300     7973    3                   INSRT=%END;
     1301     7974    3                ELSE
     1302     7975    3                   INSRT=%MIDDLE;
     1303     7976    3             END;  /* KEY */
     1304     7977    2          ELSE
     1305     7978    3             DO;   /* SEGMENT */
     1306     7979    3             IF INDEX# > 0 AND ANEWSEG = %YESS THEN
     1307     7980    4                DO;   /* POSITION TO INSERTION POINT */
     1308     7981    4                CALL CURKEY ALTRET(ERR);
     1309     7982    5                DO WHILE (FM$MISEG ~= FM_MISEG);
     1310     7983    5                   CALL NXTSEG ALTRET(ERR);
     1311     7984    5                END;
     1312     7985    4                CALL NXTRECNM
     1313     7986    5                WHENRETURN DO;
     1314     7987    5                   IF SEGX = SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL) THEN
     1315     7988    5                      INSRT=%BEGIN;
     1316     7989    5                   ELSE
     1317     7990    5                      INSRT=%MIDDLE;
     1318     7991    5                   END;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:50   
     1319     7992    5                WHENALTRETURN DO;
     1320     7993    5                   IF B$JIT.ERR.CODE~=%E$KEYCHNG THEN
     1321     7994    5                      GOTO ERR;
     1322     7995    5                   B$JIT.ERR='0'B;
     1323     7996    5                   GOTO NORM_SEG;
     1324     7997    5                   END;
     1325     7998    4                END;  /* POSITION TO INSERTION POINT */
     1326     7999    3             ELSE
     1327     8000    4                DO;   /* NORMAL SEG */
     1328     8001    4   NORM_SEG:    CALL NXTKEY ALTRET(EOF);
     1329     8002    4                CRECX=CRECX-1;
     1330     8003    4                F$DCB.CRECX=CRECX;
     1331     8004    4                IF POFFW(KEY$, BUF$) = FM$GRAN.FCEX+SIZEW(FM$KEYTBL) THEN
     1332     8005    5                   DO;   /* At beginning of gran */
     1333     8006    5                   CALL BLINK ALTRET(ERR);
     1334     8007    5                   INSRT=%END;
     1335     8008    5                   CRECX=KEYCNT;
     1336     8009    5                   F$DCB.CRECX=CRECX;
     1337     8010    5                   END;  /* At beginning of gran */
     1338     8011    4                ELSE
     1339     8012    4                   INSRT=%MIDDLE;
     1340     8013
     1341     8014    5                DO WHILE ('0'B);
     1342     8015    5   EOF:            IF B$JIT.ERR.CODE ~= %E$EOF THEN
     1343     8016    5                      ALTRETURN;
     1344     8017    5                   B$JIT.ERR='0'B;
     1345     8018    5                   INSRT=%END;
     1346     8019    5                   CRECX=KEYCNT;
     1347     8020    5                   F$DCB.CRECX=CRECX;
     1348     8021    5                END;
     1349     8022
     1350     8023    4                IF INDEX# > 0 AND ANEWSEG=%YESS THEN
     1351     8024    5                   DO;  /* Not a new record */
     1352     8025    5                   IF INSRT=%END THEN
     1353     8026    5                      SEGX=FM$GRAN.NAVX;
     1354     8027    5                   ELSE SEGX=POFFW(KEY$,BUF$);
     1355     8028    5                   F$DCB.SEGX=SEGX;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:51   
     1356     8029    5                   SEG$=PINCRW(BUF$,SEGX);
     1357     8030    5                   END; /* Not a new record */
     1358     8031    4                END;  /* NORMAL SEG */
     1359     8032    3             END;  /* SEGMENT */
     1360     8033
     1361     8034    2          RETURN;
     1362     8035    2   ERR:   ALTRETURN;
     1363     8036    2          END CALC_INSRT;
     1364     8037               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:52   
     1365     8038        /*I*     NAME:     CALC_SPACE
     1366     8039                 PURPOSE:  To determine if enough space exists in the granule
     1367     8040                 DESCRIPTION:
     1368     8041                      If we are inserting at the end of the granule, then we
     1369     8042                 have to leave some empty space at the end, per the user's
     1370     8043                 request.
     1371     8044
     1372     8045                      Set the flag to indicate whether or not there is enough
     1373     8046                 space in the granule to add the key or segment.
     1374     8047        */
     1375     8048                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:53   
     1376     8049    1   CALC_SPACE: PROC;
     1377     8050    2          DCL SIZE SBIN;
     1378     8051        /* */
     1379     8052    2          SIZE=FM$GRAN.AVAIL;
     1380     8053    2          SPARE=0;
     1381     8054    2          IF FM$GRAN.FLINK = 0 AND INSRT = %END THEN
     1382     8055    3             DO;
     1383     8056    3             IF ORG ~= 0 THEN
     1384     8057    3                SPARE=F$DCB.SPARE;
     1385     8058    3             ELSE
     1386     8059    3                IF FM$GRAN.LVL = FMGTFD THEN
     1387     8060    3                   SPARE=40;
     1388     8061    3                ELSE
     1389     8062    3                   SPARE=16;
     1390     8063    3             SIZE=SIZE-SPARE;
     1391     8064    3             END;
     1392     8065
     1393     8066    2          IF SIZE >= TOTSIZE AND (KEYCNT < 279 OR ADDFLG = %SEG) THEN
     1394     8067    2             ENUF=%YESS;
     1395     8068    2          ELSE
     1396     8069    2             ENUF=%NOO;
     1397     8070
     1398     8071    2          RETURN;
     1399     8072    2          END CALC_SPACE;
     1400     8073               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:54   
     1401     8074        /*I*     NAME:     CHECK_LAST
     1402     8075                 PURPOSE:  To check position for a sequential write
     1403     8076                 DESCRIPTION:
     1404     8077                      If the user is doing a sequential write, we only allow
     1405     8078                 the write if the key is greater than the last key in the file.
     1406     8079                 Position to the end of the file, and compare the specified key with
     1407     8080                 the last key in the file.
     1408     8081        */
     1409     8082                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:55   
     1410     8083    1   CHECK_LAST: PROC ALTRET;
     1411     8084        /* */
     1412     8085    2          CALL PTOEOF ALTRET(ERR);
     1413     8086    2          KEYCNT=FM$GRAN.KEYCNT;
     1414     8087    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
     1415     8088    2          BOUND=FM$KEYTBL(0);
     1416     8089
     1417     8090    2          IF KEYCNT < BOUND THEN
     1418     8091    2             KEY$=PINCRW(BUF$, FM$KEYTBL(KEYCNT));
     1419     8092    2          ELSE
     1420     8093    2             KEY$=PINCRW(BUF$, FM$KEYTBL(KEYCNT)+512);
     1421     8094
     1422     8095    2          IF KEYCNT = 0 THEN
     1423     8096    2             RESULT=%GREATER;
     1424     8097    2          ELSE
     1425     8098    2             CALL COMKEY ALTRET(ERR);
     1426     8099
     1427     8100    2          RETURN;
     1428     8101    2   ERR:   ALTRETURN;
     1429     8102    2          END CHECK_LAST;
     1430     8103               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:56   
     1431     8104        /*I*     NAME:     CHECKGRAN
     1432     8105                 PURPOSE:  To see if a specified key could be within the current
     1433     8106                           granule.
     1434     8107                 DESCRIPTION:
     1435     8108                      Check the specified key against the first and last key
     1436     8109                 in the granule.  Set RESULT accordingly.
     1437     8110        */
     1438     8111                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:57   
     1439     8112    1   CHECKGRAN: PROC ALTRET;
     1440     8113        /* */
     1441     8114    2          IF KEYCNT = 0 THEN
     1442     8115    3             DO;   /* NO KEYS HERE */
     1443     8116    3             RESULT=%NONE;
     1444     8117    3             RETURN;
     1445     8118    3             END;  /* NO KEYS HERE */
     1446     8119
     1447     8120    2          IF KEYCNT < BOUND THEN
     1448     8121    2             KEY$=PINCRW(BUF$, FM$KEYTBL(KEYCNT));
     1449     8122    2          ELSE
     1450     8123    2             KEY$=PINCRW(BUF$, FM$KEYTBL(KEYCNT)+512);
     1451     8124
     1452     8125    2          CALL COMKEY ALTRET(ERR);
     1453     8126
     1454     8127    2          IF RESULT = %EQUAL OR RESULT = %GREATER THEN
     1455     8128    2             RETURN;
     1456     8129
     1457     8130    2          IF BOUND > 1 THEN
     1458     8131    2             KEY$=PINCRW(BUF$, FM$KEYTBL(1));
     1459     8132    2          ELSE
     1460     8133    2             KEY$=PINCRW(BUF$, FM$KEYTBL(1)+512);
     1461     8134
     1462     8135    2          CALL COMKEY ALTRET(ERR);
     1463     8136
     1464     8137    2          IF RESULT = %EQUAL OR RESULT = %LESS THEN
     1465     8138    2             RETURN;
     1466     8139
     1467     8140    2          RESULT=%EQUAL;
     1468     8141    2          RETURN;
     1469     8142    2   ERR:   ALTRETURN;
     1470     8143    2          END CHECKGRAN;
     1471     8144               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:58   
     1472     8145        /*I*     NAME:     CHKEY
     1473     8146                 PURPOSE:  To compare two irel keys within records
     1474     8147                 DESCRIPTION:
     1475     8148                      This routine is called from ALTCHK to see if a specific irel
     1476     8149                 key changes as a result of rewriting a record.  KEY$ will
     1477     8150                 point to the key in the file.
     1478     8151
     1479     8152                      If this is a degenerate key with contiguous fields, just do
     1480     8153                 a straight ASCII compare of the keys.  Else loop through the set
     1481     8154                 of fields that form this key.  Set FN to index into RECFIELD that
     1482     8155                 we are interested in.  Then, compare the fields.
     1483     8156        */
     1484     8157                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:59   
     1485     8158    1   CHKEY: PROC(INDX);
     1486     8159    2          DCL INDX UBIN;
     1487     8160    2          DCL I UBIN;
     1488     8161    2          DCL CHRS CHAR(I) BASED;
     1489     8162        /* */
     1490     8163    2          KEY$=G$;
     1491     8164    3          IF IRKEYS.K.DEGENERATE(INDX) AND IRKEYS.K.CONTIGUOUS(INDX) THEN DO;
     1492     8165    3             I = IRKEYS.K.KEYL(INDX);
     1493     8166    3             FN = KFIELD.FIELD(IRKEYS.K.FIRSTFIELD(INDX));
     1494     8167    3             FIELD$ = PINCRB(KEY$,FIELD_START.OFFSET(FN));
     1495     8168    3             FIELDIN$ = PINCRB(KEYIN$,FIELD_START.OFFSET(FN));
     1496     8169    3             IF FIELDIN$->CHRS ~= FIELD$->CHRS THEN
     1497     8170    3                IF FIELDIN$->CHRS < FIELD$->CHRS THEN
     1498     8171    3                   RESULT = %LESS;
     1499     8172    3                ELSE
     1500     8173    3                   RESULT = %GREATER;
     1501     8174    3             END;
     1502     8175    3          ELSE DO;
     1503     8176    4   LOOP:     DO I=IRKEYS.K.FIRSTFIELD(INDX) TO IRKEYS.K.FIRSTFIELD(INDX)+
     1504     8177    4                                               IRKEYS.K.NFIELDS(INDX)-1;
     1505     8178    4                FN=KFIELD.FIELD(I);
     1506     8179
     1507     8180    4                FIELD$=PINCRB(KEY$, FIELD_START.OFFSET(FN));
     1508     8181    4                FIELDIN$=PINCRB(KEYIN$, FIELD_START.OFFSET(FN));
     1509     8182
     1510     8183    4                CALL COMPFIELD;
     1511     8184
     1512     8185    4                IF RESULT ~= %EQUAL THEN
     1513     8186    4                   EXIT LOOP;
     1514     8187    4                END;  /* DO I */
     1515     8188    3             END;
     1516     8189
     1517     8190    2          RETURN;
     1518     8191    2          END CHKEY;
     1519     8192               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:60   
     1520     8193        /*I*     NAME:     COMKEY
     1521     8194                 PURPOSE:  To compare a user specified key with a key in the file
     1522     8195                 DESCRIPTION:
     1523     8196                      If this is a keyed file, then first we set the comparison
     1524     8197                 length to the length of the shorter key.  If the text of the
     1525     8198                 keys do not match, then set the result accordingly.
     1526     8199
     1527     8200                      If this is an indexed file, then we check to see if this
     1528     8201                 is a delete along an alternate index.  If it is, then get the
     1529     8202                 size from the DCB.  The key is actually specified by pointing
     1530     8203                 to text within a record.  If this is a user specified key, then
     1531     8204                 the key size is the size of the buffer passed.  Again, use the
     1532     8205                 shorter of the two lengths for comparison purposes.  Compare the
     1533     8206                 text of the two keys, and set the result.
     1534     8207
     1535     8208                      If this is an irel key, then call a special subroutine.
     1536     8209
     1537     8210                      If we got this far, then the text of the keys matched as
     1538     8211                 far as the shorter of the two keys.  Finish the comparison based
     1539     8212                 on the lengths of the keys.
     1540     8213        */
     1541     8214                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:61   
     1542     8215    1   COMKEY: PROC ALTRET;
     1543     8216    2          DCL LEN UBIN;
     1544     8217    2          DCL LEN1 UBIN;
     1545     8218    2          DCL LEN2 UBIN;
     1546     8219    2          DCL CHARS CHAR(LEN) BASED;
     1547     8220    2          DCL 1 KEY BASED ALIGNED,
     1548     8221    2               2 * BIT(1),
     1549     8222    2               2 SIZE UBIN(8) UNAL,
     1550     8223    2               2 TEXT CHAR(LEN);
     1551     8224        /* */
     1552     8225    2          RESULT=%EQUAL;
     1553     8226    2          IF ORG = %KEYED# OR ORG = 0 THEN
     1554     8227    3             DO;   /* KEYED */
     1555     8228    3             LEN1=KEYIN_SIZE;
     1556     8229    3             LEN2=FM$KEYENT.KLB;
     1557     8230    3             IF LEN2 = 0 THEN
     1558     8231    3                GOTO KEYERR;
     1559     8232
     1560     8233    3             IF LEN1 <= LEN2 THEN
     1561     8234    3                LEN=LEN1;
     1562     8235    3             ELSE
     1563     8236    3                LEN=LEN2;
     1564     8237
     1565     8238    3             IF KEYIN$->KEY.TEXT > KEY$->KEY.TEXT THEN
     1566     8239    4                DO;   /* GREATER THAN */
     1567     8240    4                RESULT=%GREATER;
     1568     8241    4                RETURN;
     1569     8242    4                END;  /* GREATER THAN */
     1570     8243
     1571     8244    3             IF KEYIN$->KEY.TEXT < KEY$->KEY.TEXT THEN
     1572     8245    4                DO;   /* LESS THAN */
     1573     8246    4                RESULT=%LESS;
     1574     8247    4                RETURN;
     1575     8248    4                END;  /* LESS THAN */
     1576     8249
     1577     8250    3             END;  /* KEYED */
     1578     8251    2          ELSE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:62   
     1579     8252    2             IF ORG = %INDEXED# THEN
     1580     8253    3                DO;   /* INDEXED FILE */
     1581     8254    3                LEN2=KEY$->KEY.SIZE;
     1582     8255    3                IF LEN2 > F$DCB.KEYL THEN
     1583     8256    3                   GOTO KEYERR;
     1584     8257
     1585     8258    3                IF KEYIN$ = B$PS1$ OR (KEYIN$ = B$PS2$ AND FPTCODE = FPTDELREC) THEN
     1586     8259    4                   DO;   /* FIND SIZE */
     1587     8260    4                   CALL HFF$DSIZ(KEYIN$, LEN1);
     1588     8261    4                   END;  /* FIND SIZE */
     1589     8262    3                ELSE
     1590     8263    3                   LEN1=LEN2;
     1591     8264
     1592     8265    3                IF LEN1 > LEN2 THEN
     1593     8266    3                   LEN=LEN2;
     1594     8267    3                ELSE
     1595     8268    3                   LEN=LEN1;
     1596     8269
     1597     8270    3                IF KEYIN$->CHARS > KEY$->KEY.TEXT THEN
     1598     8271    4                   DO;   /* GREATER THAN */
     1599     8272    4                   RESULT=%GREATER;
     1600     8273    4                   RETURN;
     1601     8274    4                   END;  /* GREATER THAN */
     1602     8275    3                IF KEYIN$->CHARS < KEY$->KEY.TEXT THEN
     1603     8276    4                   DO;   /* LESS THAN */
     1604     8277    4                   RESULT=%LESS;
     1605     8278    4                   RETURN;
     1606     8279    4                   END;  /* LESS THAN */
     1607     8280
     1608     8281    3                END;  /* INDEXED */
     1609     8282    3             ELSE DO;   /* IREL */
     1610     8283    4                DO CASE(COMFLG);
     1611     8284    4                   CASE(%KEY);
     1612     8285    4                      CALL COMPKEY;
     1613     8286    4                   CASE(%USEREC,%FMREC);
     1614     8287    4                      CALL COMPREC;
     1615     8288    4                   END;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:63   
     1616     8289    3                RETURN;
     1617     8290    3                END;  /* IREL */
     1618     8291
     1619     8292    2          IF LEN1 ~= LEN2 THEN
     1620     8293    3             DO;   /* NOT EQUAL */
     1621     8294    3             IF LEN1 > LEN2 THEN
     1622     8295    3                RESULT=%GREATER;
     1623     8296    3             ELSE
     1624     8297    3                RESULT=%LESS;
     1625     8298    3             END;  /* NOT EQUAL */
     1626     8299
     1627     8300    2          RETURN;
     1628     8301
     1629     8302    2   KEYERR: ;
     1630     8303    2          CALL FMB$ERRTYP(LEN);
     1631     8304    2          LEN1=F$DCB.BFR.DA(1);
     1632     8305    2          CALL FMB$LOGERR(LEN, 24, 8, LEN1, KEY$, 0, 1, 0, KEY$);
     1633     8306    2          B$JIT.ERR=ERRDMY;
     1634     8307    2          B$JIT.ERR.CODE=LEN;
     1635     8308    2          ALTRETURN;
     1636     8309    2          END COMKEY;
     1637     8310               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:64   
     1638     8311        /*I*     NAME:     COMPFIELD
     1639     8312                 PURPOSE:  To compare two fields
     1640     8313                 DESCRIPTION:
     1641     8314                      With irel files, there are many different data types to
     1642     8315                 be concerned with.  For most of the decimal and floating data
     1643     8316                 types, a GMAP routine is called to do the actual comparison.
     1644     8317
     1645     8318                      Fields with data type CHAR, UBIN, or UTS can
     1646     8319                 be compared with a simple string compare.
     1647     8320
     1648     8321                      For decimal fields with overpunched signs, a PL6 routine
     1649     8322                 will be called to unpack the sign byte, then a GMAP routine
     1650     8323                 will be called.
     1651     8324
     1652     8325                      Fields with data type NO, TEXTC, TEXTH, LIST, or
     1653     8326                 VLIST cannot be used in keys, so we don't need to worry
     1654     8327                 about them.  (They were disqualified in the create open of
     1655     8328                 of the file.)
     1656     8329        */
     1657     8330                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:65   
     1658     8331    1   COMPFIELD: PROC;
     1659     8332    2          DCL CHR CHAR(LEN) BASED;
     1660     8333    2          DCL TEMP_SIZE CHAR(1) CALIGNED;
     1661     8334    2          DCL FIELD_TEMP CHAR(8) DALIGNED;
     1662     8335    2          DCL FIELDIN_TEMP CHAR(8) DALIGNED;
     1663     8336    2          DCL CHAR4 CHAR(4) BASED;
     1664     8337    2          DCL CHAR8 CHAR(8) BASED;
     1665     8338        /* */
     1666     8339    2          CALL SET_LEN;
     1667     8340    3          DO CASE(RECFIELD.FIELD.TYPE(FN));
     1668     8341    3             CASE(%UDTS_DATATYPE);
     1669     8342    3                CALL FMG$COMPUDTS(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);
     1670     8343
     1671     8344    3             CASE(%UDLS_DATATYPE);
     1672     8345    3                CALL FMG$COMPUDLS(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);
     1673     8346
     1674     8347    3             CASE(%UDLO_DATATYPE);
     1675     8348    3                CALL FMG$COMPUDLO(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);
     1676     8349
     1677     8350    3             CASE(%UDTO_DATATYPE);
     1678     8351    3                CALL FMG$COMPUDTO(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);
     1679     8352
     1680     8353    3             CASE(%PDLA_DATATYPE, %PDLE_DATATYPE, %DATE_DATATYPE,
     1681     8354    3                  %TIME_DATATYPE);
     1682     8355    3                CALL FMG$COMPPDLS(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);
     1683     8356
     1684     8357    3             CASE(%PDNS_DATATYPE);
     1685     8358    3                CALL FMG$COMPPDNS(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);
     1686     8359
     1687     8360    3             CASE(%PDTA_DATATYPE, %PDTE_DATATYPE);
     1688     8361    3                CALL FMG$COMPPDTS(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);
     1689     8362
     1690     8363    3             CASE(%CHAR_DATATYPE, %UBIN_DATATYPE, %UTS_DATATYPE, %UDNS_DATATYPE);
     1691     8364    3                IF FIELDIN$->CHR ~= FIELD$->CHR THEN
     1692     8365    3                   IF FIELDIN$->CHR < FIELD$->CHR THEN
     1693     8366    3                      RESULT=%LESS;
     1694     8367    3                   ELSE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:66   
     1695     8368    3                      RESULT=%GREATER;
     1696     8369
     1697     8370    3             CASE(%SFLT_DATATYPE);
     1698     8371    3                FIELD_TEMP=FIELD$->CHAR4;
     1699     8372    3                FIELDIN_TEMP=FIELDIN$->CHAR4;
     1700     8373    3                CALL FMG$COMPSFLT(FIELDIN_TEMP, FIELD_TEMP, RESULT);
     1701     8374
     1702     8375    3             CASE(%DFLT_DATATYPE);
     1703     8376    3                FIELD_TEMP=FIELD$->CHAR8;
     1704     8377    3                FIELDIN_TEMP=FIELDIN$->CHAR8;
     1705     8378    3                CALL FMG$COMPDFLT(FIELDIN_TEMP, FIELD_TEMP, RESULT);
     1706     8379
     1707     8380    3             CASE(%SBIN_DATATYPE);
     1708     8381    3                CALL COMPSBIN;
     1709     8382
     1710     8383    3             CASE(%PDFLT_DATATYPE);
     1711     8384    3                CALL FMG$COMPPDFLT(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);
     1712     8385
     1713     8386    3             CASE(%UDFLT_DATATYPE);
     1714     8387    3                CALL FMG$COMPUDFLT(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);
     1715     8388
     1716     8389    3          END;  /* CASE */
     1717     8390
     1718     8391    2          RETURN;
     1719     8392    2          END COMPFIELD;
     1720     8393               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:67   
     1721     8394        /*I*     NAME:     COMPKEY
     1722     8395                 PURPOSE:  To compare a user specified irel key
     1723     8396                 DESCRIPTION:
     1724     8397                      First, get the size of the user's key.  He may only
     1725     8398                 want to compare a partial key.  If this is a degenerate key,
     1726     8399                 just do a straight ASCII compare of the keys, else compare the
     1727     8400                 key field-by-field, until we have compared all of the user's key.
     1728     8401
     1729     8402                      If at any point the fields are not equal, we don't have
     1730     8403                 to compare any more.  Set up the pointers to the next fields
     1731     8404                 to compare.
     1732     8405
     1733     8406                      If the keys compared equal, but the user specified only
     1734     8407                 a partial key, then the user specified key is less.
     1735     8408        */
     1736     8409                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:68   
     1737     8410    1   COMPKEY: PROC;
     1738     8411    2          DCL I UBIN;
     1739     8412    2          DCL KCHRS SBIN;
     1740     8413    2          DCL KCHR CHAR(KCHRS) BASED;
     1741     8414    2          DCL SIZE UBIN;
     1742     8415        /* */
     1743     8416    2          FIELD$=PINCRC(KEY$, 2);
     1744     8417    2          FIELDIN$=KEYIN$;
     1745     8418    2          RESULT=%EQUAL;
     1746     8419    2          KCHRS=USERKEY_SIZE;
     1747     8420    2          I=0;
     1748     8421
     1749     8422    3          IF IRKEYS.K.DEGENERATE(INDEX#) THEN DO;
     1750     8423    4             IF FIELDIN$->KCHR ~= FIELD$->KCHR THEN DO;
     1751     8424    4                IF FIELDIN$->KCHR < FIELD$->KCHR THEN
     1752     8425    4                   RESULT = %LESS;
     1753     8426    4                ELSE
     1754     8427    4                   RESULT = %GREATER;
     1755     8428    4                RETURN;
     1756     8429    4                END;
     1757     8430    3             END;
     1758     8431    2          ELSE
     1759     8432    3   LOOP:     DO WHILE(KCHRS > 0);
     1760     8433    3                FN=KFIELD.FIELD(I+IRKEYS.K.FIRSTFIELD(INDEX#));
     1761     8434    3                CALL COMPFIELD;
     1762     8435    3                IF RESULT ~= %EQUAL THEN
     1763     8436    3                   EXIT LOOP;
     1764     8437    3                I=I+1;
     1765     8438    3                CALL SET_SIZE(SIZE);
     1766     8439    3                KCHRS=KCHRS-SIZE;
     1767     8440    3                FIELDIN$=PINCRC(FIELDIN$, SIZE);
     1768     8441    3                FIELD$=PINCRC(FIELD$, SIZE);
     1769     8442    3                END;  /* DO WHILE */
     1770     8443
     1771     8444    2          IF RESULT = %EQUAL AND USERKEY_SIZE < F$DCB.KEYL THEN
     1772     8445    2             RESULT=%LESS;
     1773     8446
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:69   
     1774     8447    2          RETURN;
     1775     8448    2          END COMPKEY;
     1776     8449               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:70   
     1777     8450        /*I*     NAME:     COMPREC
     1778     8451                 PURPOSE:  To compare a key within a record to an FM key
     1779     8452                 DESCRIPTION:
     1780     8453                      Set the FM field pointer to the first field in the key.
     1781     8454
     1782     8455                      If this is a degenerate key with contiguous fields, just do
     1783     8456                 a straight ASCII compare of the keys.  Else loop through the set
     1784     8457                 of fields that form this key.  Set FN to index into RECFIELD that
     1785     8458                 we are interested in.  Then, compare the fields.
     1786     8459
     1787     8460                      If the fields are not equal, then quit comparing.  Otherwise,
     1788     8461                 increment the pointer to the next field.
     1789     8462        */
     1790     8463                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:71   
     1791     8464    1   COMPREC: PROC;
     1792     8465    2          DCL I UBIN;
     1793     8466    2          DCL CHRS CHAR(I) BASED;
     1794     8467    2          DCL SIZE UBIN;
     1795     8468        /* */
     1796     8469    2          FIELD$=PINCRC(KEY$, 2);
     1797     8470    3          IF IRKEYS.K.DEGENERATE(INDEX#) AND IRKEYS.K.CONTIGUOUS(INDEX#) THEN DO;
     1798     8471    3             I = IRKEYS.K.KEYL(INDEX#);
     1799     8472    3             FN = KFIELD.FIELD(IRKEYS.K.FIRSTFIELD(INDEX#));
     1800     8473    3             FIELDIN$ = PINCRB(KEYIN$,FIELD_START.OFFSET(FN));
     1801     8474    4             IF FIELDIN$->CHRS ~= FIELD$->CHRS THEN DO;
     1802     8475    4                IF FIELDIN$->CHRS < FIELD$->CHRS THEN
     1803     8476    4                   RESULT = %LESS;
     1804     8477    4                ELSE
     1805     8478    4                   RESULT = %GREATER;
     1806     8479    4                RETURN;
     1807     8480    4                END;
     1808     8481    3             END;
     1809     8482    3          ELSE DO;
     1810     8483    4   LOOP:     DO I=IRKEYS.K.FIRSTFIELD(INDEX#) TO IRKEYS.K.FIRSTFIELD(INDEX#)+
     1811     8484    4                                                 IRKEYS.K.NFIELDS(INDEX#)-1;
     1812     8485
     1813     8486    4                FN=KFIELD.FIELD(I);
     1814     8487    4                FIELDIN$=PINCRB(KEYIN$, FIELD_START.OFFSET(FN));
     1815     8488    4                CALL COMPFIELD;
     1816     8489    4                IF RESULT ~= %EQUAL THEN
     1817     8490    4                   EXIT LOOP;
     1818     8491    4                CALL SET_SIZE(SIZE);
     1819     8492    4                FIELD$=PINCRC(FIELD$, SIZE);
     1820     8493    4                END;  /* DO I */
     1821     8494    3             END;
     1822     8495
     1823     8496    2          RETURN;
     1824     8497    2          END COMPREC;
     1825     8498               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:72   
     1826     8499        /*I*     NAME:     COMPSBIN
     1827     8500                 PURPOSE:  To compare SBIN fields
     1828     8501                 DESCRIPTION:
     1829     8502                      SBIN fields may be from 1 to 4 bytes in length.  Move the
     1830     8503                 bytes we want to compare to the high order "LEN" bytes of
     1831     8504                 a character temp.  Then compare the two words as SBIN numbers.
     1832     8505        */
     1833     8506                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:73   
     1834     8507    1   COMPSBIN: PROC;
     1835     8508    2          DCL CTEMP CHAR(LEN) BASED;
     1836     8509    2          DCL STEMP_FIELD SBIN;
     1837     8510    2          DCL CTEMP_FIELD REDEF STEMP_FIELD CHAR(4);
     1838     8511    2          DCL STEMP_FIELDIN SBIN;
     1839     8512    2          DCL CTEMP_FIELDIN REDEF STEMP_FIELDIN CHAR(4);
     1840     8513        /* */
     1841     8514    2          CTEMP_FIELD=FIELD$->CTEMP;
     1842     8515    2          CTEMP_FIELDIN=FIELDIN$->CTEMP;
     1843     8516
     1844     8517    2          IF STEMP_FIELDIN ~= STEMP_FIELD THEN
     1845     8518    3             DO;   /* NOT EQUAL */
     1846     8519    3             IF STEMP_FIELDIN < STEMP_FIELD THEN
     1847     8520    3                RESULT=%LESS;
     1848     8521    3             ELSE
     1849     8522    3                RESULT=%GREATER;
     1850     8523    3             END;  /* NOT EQUAL */
     1851     8524    2          RETURN;
     1852     8525    2          END COMPSBIN;
     1853     8526               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:74   
     1854     8527        /*I*     NAME:     CURKEY
     1855     8528                 PURPOSE:  To position to the beginning of the current key.
     1856     8529                 DESCRIPTION:
     1857     8530                      If CRECX is 0, then we are positioned somewhere at the
     1858     8531                 end of a list of segments.  Loop backwards until we find the
     1859     8532                 beginning of the key.  If RPOS is set, then we are actually
     1860     8533                 positioned one beyond the current position.  Back up one
     1861     8534                 key.
     1862     8535        */
     1863     8536                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:75   
     1864     8537    1   CURKEY: PROC ALTRET;
     1865     8538        /* */
     1866     8539    3          DO WHILE (CRECX = 0);
     1867     8540    3             CALL BLINK ALTRET(ERR);
     1868     8541    3             CRECX=KEYCNT;
     1869     8542    3             F$DCB.CRECX=CRECX;
     1870     8543    3          END;  /* WHILE */
     1871     8544
     1872     8545    2          IF F$DCB.RPOS THEN
     1873     8546    3             DO;   /* BACK UP AGAIN */
     1874     8547    3             F$DCB.RPOS='0'B;
     1875     8548    3             IF CRECX = 1 THEN
     1876     8549    4                DO;   /* NO PREV KEYS HERE */
     1877     8550    4                CRECX=0;
     1878     8551    5                DO UNTIL (KEYCNT ~= 0);
     1879     8552    5                   CALL BLINK ALTRET(ERR1);
     1880     8553    5                END;
     1881     8554    4                CRECX=KEYCNT;
     1882     8555    4                END;  /* NO PREV KEYS HERE */
     1883     8556    3             ELSE
     1884     8557    3                CRECX=CRECX-1;
     1885     8558    3             F$DCB.CRECX=CRECX;
     1886     8559    3             END;  /* BACK UP AGAIN */
     1887     8560
     1888     8561    2          CALL SETPTRS;
     1889     8562    2          RETURN;
     1890     8563
     1891     8564    2   ERR1:  F$DCB.CRECX=CRECX;
     1892     8565    2   ERR:   ALTRETURN;
     1893     8566    2          END CURKEY;
     1894     8567               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:76   
     1895     8568        /*I*     NAME:     CURREC
     1896     8569                 PURPOSE:  To position to the beginning of the current record
     1897     8570                 DESCRIPTION:
     1898     8571                      If this is the primary index, this is the same operation
     1899     8572                 as CURKEY.  Otherwise, we may be positioned in a list of
     1900     8573                 duplicates.  If this isn't the first segment of a duplicate
     1901     8574                 record in the list of duplicates, then back up to the start
     1902     8575                 of the record.  If RPOS is set, then we are actually one
     1903     8576                 beyond where we need to be.  Back up again.
     1904     8577        */
     1905     8578                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:77   
     1906     8579    1   CURREC: PROC ALTRET;
     1907     8580        /* */
     1908     8581    2          IF INDEX# = 0 THEN
     1909     8582    3             DO;   /* PRIMARY KEY */
     1910     8583    3             CALL CURKEY ALTRET(ERR);
     1911     8584    3             RETURN;
     1912     8585    3             END;  /* PRIMARY KEY */
     1913     8586
     1914     8587    2          SEG$=PINCRW(BUF$, SEGX);
     1915     8588
     1916     8589    2          IF SEGX = 0 OR
     1917     8590    2             NOT(FM$MISEG.FAK) THEN
     1918     8591    3   CUR_REC:  DO;  /* Position to start of current record */
     1919     8592    3             IF SEGX=0 AND CRECX > KEYCNT THEN
     1920     8593    4                DO;  /* EOF */
     1921     8594    4                CRECX=KEYCNT;
     1922     8595    4                F$DCB.CRECX=CRECX;
     1923     8596    4                IF F$DCB.RPOS THEN
     1924     8597    4                   EXIT CUR_REC; /* Don't back up twice at EOF */
     1925     8598                     /* RPOS shouldn't be 0 */
     1926     8599    4                END; /* EOF */
     1927     8600    3             CALL PREVREC ALTRET(ERR);
     1928     8601    3             END; /* Position to start of current record */
     1929     8602
     1930     8603    2          IF F$DCB.RPOS THEN
     1931     8604    3             DO;   /* BACK UP ONE */
     1932     8605    3             F$DCB.RPOS='0'B;
     1933     8606    3             CALL PREVREC ALTRET(ERR);
     1934     8607    3             END;  /* BACK UP ONE */
     1935     8608
     1936     8609    2          RETURN;
     1937     8610    2   ERR:   ALTRETURN;
     1938     8611    2          END CURREC;
     1939     8612               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:78   
     1940     8613        /*I*     NAME:     DATAERROR
     1941     8614                 PURPOSE:  To record a data inconsistancy error
     1942     8615                 DESCRIPTION:
     1943     8616                      If the disk address is invalid, log an error in the
     1944     8617                 current index granule.
     1945     8618        */
     1946     8619    1   DATAERROR: PROC;
     1947     8620    2          DCL I SBIN;
     1948     8621    2          DCL CURDA UBIN;
     1949     8622        /* */
     1950     8623    2          CALL FAF$CHKDAFR(DA) ALTRET(DATAERR1);
     1951     8624    2          RETURN;
     1952     8625    2   DATAERR1: ;
     1953     8626    2          I=POFFW(SEG$, BUF$);
     1954     8627    2          CURDA=F$DCB.BFR.DA(1);
     1955     8628    2          CALL FMB$LOGERR(%E$FREC, 23, 8, CURDA, BUF$, 0, I, I+1, CRECX);
     1956     8629    2          RETURN;
     1957     8630    2          END DATAERROR;
     1958     8631               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:79   
     1959     8632        /*I*     NAME:     DELALL
     1960     8633                 PURPOSE:  To delete all records in the file.
     1961     8634                 DESCRIPTION:
     1962     8635                      Make sure we're on the primary index.  If the file is
     1963     8636                 not shared and this is the only user, call DELEND to
     1964     8637                 initialize all indexes to indicate that there are no records
     1965     8638                 in the file.  If the file is shared, we have to do something
     1966     8639                 like a delete with range.  First, PFIL to the beginning of
     1967     8640                 the primary index and set up our index granule variables.
     1968     8641                 Then call NXTKEY and delete the key if it isn't already
     1969     8642                 deleted. Keep doing this until we hit end of file.
     1970     8643        */
     1971     8644               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:80   
     1972     8645    1   DELALL: PROC ALTRET;
     1973     8646        /* */
     1974     8647    2          IF INDEX# ~= 0 THEN
     1975     8648    3             DO;
     1976     8649    3             INDEX#=1;
     1977     8650    3             CALL SETINDEX ALTRET(FIERR);
     1978     8651    3             END;
     1979     8652
     1980     8653    2          IF (F$DCB.SHARED AND F$DCB.TDA ~= 0) OR FM$CFU.USECNT > 1 THEN
     1981     8654    3             DO;   /* Do it the long way */
     1982     8655
     1983     8656    3             CALL PTOBOF ALTRET(ERR);
     1984     8657    3             KTPTR$=PINCRW(BUF$,FM$GRAN.FCEX);
     1985     8658    3             BOUND=FM$KEYTBL(0);
     1986     8659    3             KEYCNT=FM$GRAN.KEYCNT;
     1987     8660    3             CRECX=0;
     1988     8661    3             SEGX=0;
     1989     8662    3             KEY$=ADDR(NIL);
     1990     8663    3             SEG$=ADDR(NIL);
     1991     8664
     1992     8665    4             DO WHILE('1'B);
     1993     8666    4                CALL NXTKEY ALTRET(EOF);
     1994     8667    4                IF NOT FM$KEYENT.D THEN
     1995     8668    4                   CALL DELETE ALTRET(ERR);
     1996     8669    4                IF FPT$DELREC_V.BRK AND
     1997     8670    4                   S$CU$->B$U.ASYNCH&(~%U_RESET) AND
     1998     8671    4                   B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
     1999     8672    5                   DO;   /* Got interrupted and OK to interrupt */
     2000     8673    5                   B$JIT.ERR=ERRPMMEINT;
     2001     8674    5                   B$JIT.JUNK=B$JIT.JUNK|%JJ_BAKIC#;
     2002     8675    5                   F$DCB.RPOS='1'B;
     2003     8676    5                   GOTO ERR;
     2004     8677    5                   END;  /* Got interrupted and OK to interrupt */
     2005     8678    4                END; /* WHILE */
     2006     8679    3             END;  /* Do it the long way */
     2007     8680    2          ELSE DELALL_FAST='1'B; /* Do it fast */
     2008     8681
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:81   
     2009     8682    3          DO WHILE('0'B);
     2010     8683    3   EOF:      IF B$JIT.ERR.CODE ~= %E$EOF THEN
     2011     8684    3                ALTRETURN;
     2012     8685    3             B$JIT.ERR='0'B;
     2013     8686    3             END;
     2014     8687
     2015     8688    2          RETURN;
     2016     8689
     2017     8690    2   FIERR: DA=F$DCB.BFR.DA(1);
     2018     8691    2          CALL FMB$LOGERR(%E$FREC,75,0,DA,,,,,0);
     2019     8692    2   ERR:   ALTRETURN;
     2020     8693
     2021     8694    2   END DELALL;
     2022     8695        %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:82   
     2023     8696        /*I*     NAME:     DELALT
     2024     8697                 PURPOSE:  To delete a record from an alternate index
     2025     8698                 DESCRIPTION:
     2026     8699                      Find the key that we want to delete.  Then find the
     2027     8700                 actual record within the list of dups to delete.  Remove
     2028     8701                 the segments associated with the record.
     2029     8702        */
     2030     8703    1   DELALT: PROC ALTRET;
     2031     8704        /* */
     2032     8705    2          CALL SETINDEX ALTRET(ERR);
     2033     8706    2          KEYIN$=PINCRC(G$, F$DCB.KEYX);
     2034     8707    2          COMFLG=%FMREC;
     2035     8708    2          CALL FINDKEY ALTRET(FIERR);
     2036     8709
     2037     8710    3          DO WHILE (FM$MISEG ~= FM_MISEG);
     2038     8711    3             CALL NXTRECNM ALTRET(FIERR);
     2039     8712    3          END;
     2040     8713
     2041     8714    2          CALL REMSEG ALTRET(ERR);
     2042     8715    2          RETURN;
     2043     8716    2   ERR:   ALTRETURN;
     2044     8717    2   FIERR: DA=F$DCB.BFR.DA(1);
     2045     8718    2          CALL FMB$LOGERR(%E$FREC, 75, 0, DA,,,,, INDEX#);
     2046     8719    2          RETURN;
     2047     8720    2          END DELALT;
     2048     8721               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:83   
     2049     8722        /*I*     NAME:     DELDUPS
     2050     8723                 PURPOSE:  To delete all duplicates of a specified key
     2051     8724                 DESCRIPTION:
     2052     8725                      Loop through the list, deleting the duplicates, then
     2053     8726                 positioning to the next record.  If there are no more
     2054     8727                 duplicates then we're done.  If the user hits break and the
     2055     8728                 pmme break option is set, then stop deleting wherever we are.
     2056     8729        */
     2057     8730                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:84   
     2058     8731    1   DELDUPS: PROC ALTRET;
     2059     8732        /* */
     2060     8733    3          DO WHILE ('1'B);
     2061     8734    3             CALL DELETE ALTRET(ERR);
     2062     8735    3             CALL NXTRECNM ALTRET(DONE);
     2063     8736    3             IF FPT$DELREC_V.BRK AND
     2064     8737    3                S$CU$->B$U.ASYNCH&(~%U_RESET) AND
     2065     8738    3                B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
     2066     8739    4                DO;   /* Got interrupted and OK to interrupt */
     2067     8740    4                B$JIT.ERR=ERRPMMEINT;
     2068     8741    4                B$JIT.JUNK=B$JIT.JUNK|%JJ_BAKIC#;
     2069     8742    4                F$DCB.RPOS='1'B;
     2070     8743    4                RETURN;
     2071     8744    4                END;  /* Got interrupted and OK to interrupt */
     2072     8745    3          END;  /* WHILE */
     2073     8746
     2074     8747    2   DONE:  IF B$JIT.ERR.CODE ~= %E$EOF AND
     2075     8748    2             B$JIT.ERR.CODE ~= %E$KEYCHNG THEN
     2076     8749    2             ALTRETURN;
     2077     8750
     2078     8751    2          B$JIT.ERR='0'B;
     2079     8752
     2080     8753    2          RETURN;
     2081     8754    2   ERR:   ALTRETURN;
     2082     8755    2          END DELDUPS;
     2083     8756               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:85   
     2084     8757        /*I*     NAME:     DELEND
     2085     8758                 PURPOSE:  To reclaim file space if all records are deleted
     2086     8759                 DESCRIPTION:
     2087     8760                      Don't try to reclaim space under some conditions.
     2088     8761
     2089     8762                      If DELALL_FAST is set, we know we were called by DELALL
     2090     8763                 to do a fast delete of all the records in a file.  At this
     2091     8764                 point, we know that even if we had deleted all the records
     2092     8765                 the hard way, we still would have reinitialized the file at
     2093     8766                 this time. So, act as though all the records are really gone
     2094     8767                 without bothering to delete them one by one first.
     2095     8768
     2096     8769                      Otherwise, this is a normal call to DELEND after one or
     2097     8770                 more records have been deleted. Read in the first granule and
     2098     8771                 loop through the file counting records.  This is done in case
     2099     8772                 our record count was off for some reason.
     2100     8773
     2101     8774                      If all of the records are really gone, then read in
     2102     8775                 the FDA.  Initialize the granule to indicate that there
     2103     8776                 are no records in the file.  Set up the DCB and CFU to
     2104     8777                 indicate that all of the file except for the first granule
     2105     8778                 is now available space.  Next, we have to clear out any
     2106     8779                 granules from the cache that were associated with this.
     2107     8780                 If the file has an AFIT, then buffer 1 must be flushed.
     2108     8781                 This is because the cached granule in buffer 1 had the
     2109     8782                 error flag set by the previous call to FMC$CLRFILE because
     2110     8783                 it was still in use.  If the buffer isn't flushed now,
     2111     8784                 some data may be lost.
     2112     8785
     2113     8786                      Update the information in the FIT and write the FIT back
     2114     8787                 out to disk.
     2115     8788
     2116     8789                      If this file has alternate indexes, then reinitialize
     2117     8790                 those too.
     2118     8791        */
     2119     8792                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:86   
     2120     8793    1   DELEND: PROC ALTRET;
     2121     8794    2          DCL I SBIN;
     2122     8795    2          DCL FIT$ PTR;
     2123     8796    2          DCL T$ PTR;
     2124     8797        /* */
     2125     8798    2          IF F$DCB.SHARED THEN
     2126     8799    2             CALL SETID;
     2127     8800
     2128     8801    2          IF (NOT DELALL_FAST AND (FM$CFU.NRECS ~= 0 OR
     2129     8802    2             F$DCB.ARS = 0)) OR
     2130     8803    2             (F$DCB.SHARED AND F$DCB.TDA ~= 0) OR
     2131     8804    2             FM$CFU.USECNT > 1 THEN
     2132     8805    2             RETURN;
     2133     8806
     2134     8807    2          CALL FMD$FLSHBUF(0);
     2135     8808    2          F$DCB.LVL=0;
     2136     8809
     2137     8810    2          IF NOT DELALL_FAST THEN
     2138     8811    3             DO; /* Count the records */
     2139     8812    3             IF ALTKEY$ ~= ADDR(NIL) THEN
     2140     8813    4                DO;  /* Get primary key */
     2141     8814    4                INDEX#=1;
     2142     8815    4                CALL SETINDEX ALTRET(ERR);
     2143     8816    4                END;
     2144     8817    3             CALL FMD$REDBUF(BUF$, 1, FM_FRZERO, 0, 0) ALTRET(ERR);
     2145     8818    3             F$DCB.CRECX=0;
     2146     8819    3             F$DCB.RPOS='0'B;
     2147     8820    3             F$DCB.INDX=1;
     2148     8821    3             KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
     2149     8822    3             BOUND=FM$KEYTBL(0);
     2150     8823    3             KEYCNT=FM$GRAN.KEYCNT;
     2151     8824
     2152     8825    4             DO WHILE('1'B);
     2153     8826    4                CALL NXTRECND ALTRET(EOF);
     2154     8827    4                FM$CFU.NRECS=FM$CFU.NRECS+1;
     2155     8828    4             END;  /* WHILE */
     2156     8829
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:87   
     2157     8830    3   EOF:      IF B$JIT.ERR.CODE ~= %E$EOF THEN
     2158     8831    3                ALTRETURN;
     2159     8832    3             B$JIT.ERR='0'B;
     2160     8833    3             F$DCB.NRECS=FM$CFU.NRECS;
     2161     8834    3             END;  /* Count the records */
     2162     8835
     2163     8836    2          IF F$DCB.NRECS = 0 OR DELALL_FAST THEN
     2164     8837    3             DO;   /* ZERO RECORDS */
     2165     8838    4             DO I=2 TO 4;
     2166     8839    4                IF F$DCB.BFR.DA(I) < FM_SRZERO THEN
     2167     8840    4                   CALL FMD$FLSHBUF(I);
     2168     8841    4             END;  /* DO I */
     2169     8842
     2170     8843    3             CALL FMD$REDBUF(BUF$, 1, FM_FRZERO,, 0) ALTRET(ERR);
     2171     8844
     2172     8845    3             FM$GRAN.FLINK=0;
     2173     8846    3             FM$GRAN.NAVX=FM$GRAN.FCEX+SIZEW(FM$KEYTBL);
     2174     8847    3             FM$GRAN.AVAIL=1024-FM$GRAN.NAVX;
     2175     8848    3             FM$GRAN.KEYCNT=0;
     2176     8849
     2177     8850    3             KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
     2178     8851    3             FM$KEYTBL=INITKEYTBL;
     2179     8852
     2180     8853    3             F$DCB.BFR.BUFUP(1)='1'B;
     2181     8854    3             F$DCB.BFR.SCRUB(1)='1'B;
     2182     8855    3             IF DELALL_FAST THEN
     2183     8856    4                DO;
     2184     8857    4                F$DCB.ARS=FM$CFU.NRECS;
     2185     8858    4                FM$CFU.NRECS=0;
     2186     8859    4                F$DCB.NRECS=0;
     2187     8860    4                END;
     2188     8861    3             F$DCB.TDA=0;
     2189     8862    3             F$DCB.TDALVL=0;
     2190     8863    3             F$DCB.SLIDE=1;
     2191     8864    3             F$DCB.CRECX=0;
     2192     8865    3             F$DCB.RPOS='0'B;
     2193     8866
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:88   
     2194     8867    3             FM$CFU.GDA=0;
     2195     8868    3             FM$CFU.ULBLD=0;
     2196     8869    3             FM$CFU.B=0;
     2197     8870    3             FM$CFU.RCSZ=0;
     2198     8871    3             FM$CFU.SLIDE=1;
     2199     8872    3             FM$CFU.LDA=FM_FRZERO;
     2200     8873    3             FM$CFU.NGAVAL=FM$CFU.NGAVAL+FM$CFU.UGRANS-1;
     2201     8874    3             FM$CFU.UGRANS=1;
     2202     8875
     2203     8876    3             BUFNUM=0;
     2204     8877    3             CALL FMN$GETFIT(BUF$, BUFNUM) ALTRET(FITERR1);
     2205     8878    3             FIT$=PINCRW(BUF$, SIZEW(FM$GRAN));
     2206     8879    3             CALL FMC$CLRFILE(FIT$);
     2207     8880    3             F$DCB.GTYP=FMGTFILE;
     2208     8881    3             T$=PINCRW(BUF$, SIZEW(FM$GRAN));
     2209     8882    3             CALL FMO$LOCCODP(T$, 2) ALTRET(FITERR);
     2210     8883    3             T$->CODE02.TDA=0;
     2211     8884    3             T$->CODE02.GDA=0;
     2212     8885    3             T$->CODE02.SLIDE=1;
     2213     8886    3             T$=PINCRW(BUF$, SIZEW(FM$GRAN));
     2214     8887
     2215     8888    3             CALL FMO$LOCCODP(T$, 3) ALTRET(FITERR);
     2216     8889    3             T$->CODE03.RCSZ=0;
     2217     8890    3             T$->CODE03.NRECS=0;
     2218     8891    3             T$->CODE03.LDA=FM_FRZERO;
     2219     8892
     2220     8893    3             IF BUFNUM ~= 1 THEN
     2221     8894    3                CALL FMD$WRTBUF(BUFNUM);
     2222     8895    3             CALL FMD$WRTSV(1);
     2223     8896    3             IF FM$CFU.AFIT = 1 THEN
     2224     8897    3                CALL FMD$FLSHBUF(1);
     2225     8898    3             IF ALTKEY$ ~= ADDR(NIL) THEN
     2226     8899    3                IF ORG = %INDEXED# THEN
     2227     8900    3                   CALL INIT_AKEY ALTRET(ERR);
     2228     8901    3                ELSE
     2229     8902    3                   CALL INIT_IRKEY ALTRET(ERR);
     2230     8903    3             FM$CFU.ALTBLD='0'B;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:89   
     2231     8904    3             END;  /* ZERO RECORDS */
     2232     8905
     2233     8906    2          RETURN;
     2234     8907    2   FITERR: B$JIT.ERR=ERRFIT;
     2235     8908    2   FITERR1: ;
     2236     8909    2          F$DCB.GTYP=FMGTFILE;
     2237     8910        /*E*   ERROR:   FMG-E$FIT-2
     2238     8911               MESSAGE: Error reading FIT of %FN while deleting all records
     2239     8912               DESCRIPTION:
     2240     8913                  An error occurred while trying to update UGRANS and NGAVAL
     2241     8914                  in the FIT after the number of records in the file went
     2242     8915                  to zero.
     2243     8916        */
     2244     8917    2   ERR:   ALTRETURN;
     2245     8918    2          END DELEND;
     2246     8919               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:90   
     2247     8920        /*I*     NAME:     DELETE
     2248     8921                 PURPOSE:  To delete a record from a file
     2249     8922                 DESCRIPTION:
     2250     8923                      If the user is trying to delete a record from an
     2251     8924                 alternate index, then first find the primary key associated
     2252     8925                 with this record.  We want to start from there.
     2253     8926
     2254     8927                      Delete the record.
     2255     8928
     2256     8929                      If there are alternate indexes, then we have to delete
     2257     8930                 those records too.  Set up FM_MISEG so we can locate a record
     2258     8931                 within a list of duplicates.  Loop through the file, deleting
     2259     8932                 the records from all of the alternate indexes.
     2260     8933
     2261     8934                      Restore the index back to whatever it was.
     2262     8935        */
     2263     8936                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:91   
     2264     8937    1   DELETE: PROC ALTRET;
     2265     8938    2          DCL I SBIN;
     2266     8939    2          DCL NUMENTS UBIN;
     2267     8940    2          DCL UNIQUE BIT(1);
     2268     8941        /* */
     2269     8942    2          IF INDEX# ~= 0 THEN
     2270     8943    3             DO;   /* GET PRIMARY KEY */
     2271     8944    3             DA=FM$MISEG.GDA;
     2272     8945    3             F$DCB.LVL=7;
     2273     8946    3             DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));
     2274     8947    3             IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= DA THEN
     2275     8948    3                CALL FMD$REDBUF(DBUF$, 0, DA) ALTRET(DATAERR);
     2276     8949    3             G$=PINCRW(DBUF$, FM$MISEG.GX);
     2277     8950
     2278     8951    3             INDEX#=1;
     2279     8952    3             CALL SETINDEX ALTRET(FIERR);
     2280     8953    3             KEYIN$=PINCRC(G$, F$DCB.KEYX);
     2281     8954    3             CALL RESTOREPOS ALTRET(ERR);
     2282     8955    3             COMFLG=%FMREC;
     2283     8956    3             CALL FINDKEY ALTRET(FIERR);
     2284     8957    3             END;  /* GET PRIMARY KEY */
     2285     8958
     2286     8959    2          FM$CFU.FMOD='1'B;
     2287     8960    2          FM$KEYENT.D='1'B;
     2288     8961    2          F$DCB.BFR.BUFUP(1)='1'B;
     2289     8962    2          FM$CFU.NRECS=FM$CFU.NRECS-1;
     2290     8963    2          F$DCB.NRECS=FM$CFU.NRECS;
     2291     8964    2          F$DCB.ARS=F$DCB.ARS+1;
     2292     8965
     2293     8966    2          IF ALTKEY$ ~= ADDR(NIL) THEN
     2294     8967    3             DO;   /* DELETE ALTERNATE INDEXES */
     2295     8968    3             FM_MISEG=FM$MISEG;
     2296     8969    3             ADDR(FM_MISEG)->FM$MISEG.FAK='1'B;
     2297     8970    3             DA=FM$MISEG.GDA;
     2298     8971    3             F$DCB.LVL=7;
     2299     8972    3             DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));
     2300     8973    3             IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= DA THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:92   
     2301     8974    3                CALL FMD$REDBUF(DBUF$, 0, DA) ALTRET(DATAERR);
     2302     8975    3             G$=PINCRW(DBUF$, FM$MISEG.GX);
     2303     8976
     2304     8977    3             IF ORG = %INDEXED# THEN
     2305     8978    3                NUMENTS=ALTKEYS.NUMENTS;
     2306     8979    3             ELSE
     2307     8980    3                NUMENTS=IRKEYS.NKEYS;
     2308     8981
     2309     8982    4             DO I=2 TO NUMENTS;
     2310     8983    4                IF ORG = %INDEXED# THEN
     2311     8984    4                   UNIQUE=ALTKEYS.K.UNIQUE(I-1);
     2312     8985    4                ELSE
     2313     8986    4                   UNIQUE=IRKEYS.K.UNIQUE(I-1);
     2314     8987
     2315     8988    4                IF (NOT F$DCB.LDFLG) OR
     2316     8989    4                   (UNIQUE AND NOT F$DCB.UNIQUEBLD) THEN
     2317     8990    5                   DO;   /* DELETE KEY */
     2318     8991    5                   INDEX#=I;
     2319     8992    5                   CALL DELALT;
     2320     8993    5                   END;  /* DELETE KEY */
     2321     8994    4                ELSE
     2322     8995    4                   FM$CFU.ALTBLD='1'B;
     2323     8996    4             END;
     2324     8997    3             END;  /* DELETE ALTERNATE INDEXES */
     2325     8998
     2326     8999    2          IF INDEX# ~= SAVE_INDEX# THEN
     2327     9000    3             DO;   /* RESTORE INDEX */
     2328     9001    3             INDEX#=SAVE_INDEX#+1;
     2329     9002    3             CALL SETINDEX ALTRET(ERR);
     2330     9003    3             CALL RESTOREPOS ALTRET(ERR);
     2331     9004    3             END;  /* RESTORE INDEX */
     2332     9005
     2333     9006    2          RETURN;
     2334     9007    2   FIERR: DA=F$DCB.BFR.DA(1);
     2335     9008    2          CALL FMB$LOGERR(%E$FREC, 75, 0, DA,,,,, 0);
     2336     9009    2          GOTO ERR;
     2337     9010    2   DATAERR:;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:93   
     2338     9011    2          CALL DATAERROR;
     2339     9012    2   ERR:   ALTRETURN;
     2340     9013    2          END DELETE;
     2341     9014               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:94   
     2342     9015        /*I*     NAME:     DELKEY
     2343     9016                 PURPOSE:  To do a keyed delete
     2344     9017                 DESCRIPTION:
     2345     9018                      Check the size of the second key.  The user may have
     2346     9019                 specified a key range.
     2347     9020
     2348     9021                      Find the first user specified key.  If the key is deleted,
     2349     9022                 then check to see if a key range was specified.  If a key range
     2350     9023                 was specified, and the first key was at the end of the file,
     2351     9024                 then return, we are done.  Otherwise, if a key range was
     2352     9025                 specified, then we need to verify the range. If LKEY < KEY,
     2353     9026                 then we don't really have a normal range, so we'll just
     2354     9027                 pretend that LKEY is NIL and only use KEY. Otherwise,
     2355     9028                 DELRANGE will end up either not deleting anything at all or,
     2356     9029                 if we're on an alternate key with duplicates, it may delete
     2357     9030                 more than was intended. If LKEY >= KEY, then proceed to
     2358     9031                 delete the range.
     2359     9032
     2360     9033                      If this is an alternate index, then we have to find the
     2361     9034                 correct duplicate entry at which to begin the deletion.
     2362     9035
     2363     9036                      Call the correct deletion subroutine.
     2364     9037        */
     2365     9038                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:95   
     2366     9039    1   DELKEY:   PROC ALTRET;
     2367     9040    2          DCL LKEY SBIN;
     2368     9041    2          DCL IGNORE_LKEY BIT(1);
     2369     9042        /* */
     2370     9043    2          IGNORE_LKEY='0'B;
     2371     9044    2          CALL HFF$DSIZ(B$PS2$, LKEY);
     2372     9045    2          IF ORG = %IREL# AND LKEY > 0 THEN
     2373     9046    2             CALL FMD$CHKFIELD(B$PS2$, %FMD_CHKTYP_KEY) ALTRET(ERR);
     2374     9047
     2375     9048    2          CALL SETKEY(B$PS1$) ALTRET(ERR);
     2376     9049    2          COMFLG=%KEY;
     2377     9050    2          CALL FINDKEY ALTRET(NOKEY);
     2378     9051    2          IF FM$KEYENT.D THEN
     2379     9052    3             DO;   /* NO PRIMARY KEY */
     2380     9053    4             DO WHILE ('0'B);
     2381     9054    4   NOKEY:       IF KEY$ = ADDR(NIL) THEN
     2382     9055    4                   IF LKEY > 0 THEN
     2383     9056    4                      RETURN;
     2384     9057    4                   ELSE
     2385     9058    4                      ALTRETURN;
     2386     9059    4                B$JIT.ERR='0'B;
     2387     9060    4                F$DCB.RPOS='1'B;
     2388     9061    4             END;  /* NEVER */
     2389     9062
     2390     9063    3             IF LKEY > 0 THEN
     2391     9064    4                DO;   /* DELETE RANGE */
     2392     9065    4                B$JIT.ERR='0'B;
     2393     9066    4                CALL SETKEY(B$PS2$) ALTRET(LKEYERR);
     2394     9067    4                CALL COMKEY ALTRET(ERR);
     2395     9068    4                IF RESULT=%LESS THEN
     2396     9069    4                   RETURN; /* LKEY < KEY */
     2397     9070    4                CALL DELRANGE ALTRET(ERR);
     2398     9071    4                RETURN;
     2399     9072    4                END;   /* DELETE RANGE */
     2400     9073    3             ELSE
     2401     9074    4                DO;   /* NO KEY */
     2402     9075    4                B$JIT.ERR=ERRNOKEY;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:96   
     2403     9076    4                ALTRETURN;
     2404     9077    4                END;  /* NO KEY */
     2405     9078    3             END;  /* NO PRIMARY KEY */
     2406     9079
     2407     9080    2          IF LKEY > 0 THEN
     2408     9081    3             DO;  /* See if LKEY < KEY */
     2409     9082    3             CALL SETKEY(B$PS2$) ALTRET(LKEYERR);
     2410     9083    3             CALL COMKEY ALTRET(ERR);
     2411     9084    3             IF RESULT=%LESS THEN
     2412     9085    3                IGNORE_LKEY='1'B;
     2413     9086    3             END; /* See if LKEY < KEY */
     2414     9087
     2415     9088    2          IF INDEX# > 0 THEN
     2416     9089    3             DO;   /* FIND DUP */
     2417     9090    3             CALL HFF$NILERASE(B$PS3$) ALTRET(NONE);
     2418     9091    3             IDPTR$=B$PS3$;
     2419     9092    3             CALL FINDID ALTRET(ERR);
     2420     9093
     2421     9094    4             DO WHILE ('0'B);
     2422     9095    4   NONE:        IF B$JIT.ERR ~= '0'B THEN
     2423     9096    4                   ALTRETURN;
     2424     9097    4                RECNUM=FPT$DELREC_V.RECNUM;
     2425     9098    4                CALL MOVERECN ALTRET(ERR);
     2426     9099    4             END;  /* FIND RECNUM */
     2427     9100    3             END;  /* FIND DUP */
     2428     9101
     2429     9102    2          IF LKEY = 0 OR IGNORE_LKEY THEN
     2430     9103    3             DO;   /* No 2nd key or ignore 2nd key */
     2431     9104    3             IF INDEX# > 0 AND FPT$DELREC_V.ALLDUPS AND NOT IGNORE_LKEY THEN
     2432     9105    3                CALL DELDUPS ALTRET(ERR);
     2433     9106    3             ELSE
     2434     9107    3                CALL DELETE ALTRET(ERR);
     2435     9108    3             END;  /* No 2nd key or ignore 2nd key */
     2436     9109    2          ELSE
     2437     9110    2             CALL DELRANGE ALTRET(ERR);
     2438     9111
     2439     9112    2          RETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:97   
     2440     9113    2   LKEYERR:;
     2441     9114    2          B$JIT.ERR=ERRBADKEY2;
     2442     9115    2   ERR:   ALTRETURN;
     2443     9116    2          END DELKEY;
     2444     9117               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:98   
     2445     9118        /*I*     NAME:     DELRANGE
     2446     9119                 PURPOSE:  To delete a range of records
     2447     9120                 DESCRIPTION:
     2448     9121                      Every time through the loop, compare the end of the user
     2449     9122                 specified range with the next record.  If we hit the end of the
     2450     9123                 range, exit the loop.
     2451     9124
     2452     9125                      Otherwise, we delete the record.  If the user hits break
     2453     9126                 and the pmme break option is set, then exit immediately.
     2454     9127        */
     2455     9128                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:99   
     2456     9129    1   DELRANGE: PROC ALTRET;
     2457     9130        /* */
     2458     9131    2          F$DCB.RPOS='1'B;
     2459     9132    3   LOOP:  DO WHILE ('1'B);
     2460     9133    3             CALL SETKEY(B$PS2$) ALTRET(LKEYERR);
     2461     9134    3             CALL NXTREC ALTRET(DELEOF);
     2462     9135    3             COMFLG=%KEY;
     2463     9136                  /* If KEY$=ADDR(NIL), we're inside a list of duplicates.
     2464     9137                     Since we've already checked the key and know we want to
     2465     9138                     delete it, we know we need to delete this duplicate.
     2466     9139                     Otherwise, the key is new so compare it.            */
     2467     9140    3             IF KEY$~=ADDR(NIL) THEN
     2468     9141    3                CALL COMKEY ALTRET(ERR);
     2469     9142    3             ELSE RESULT=%GREATER;
     2470     9143
     2471     9144    3             IF RESULT = %LESS THEN
     2472     9145    4                DO;   /* LAST KEY */
     2473     9146    4                F$DCB.RPOS='1'B;
     2474     9147    4                EXIT LOOP;
     2475     9148    4                END;  /* LAST KEY */
     2476     9149    3             ELSE
     2477     9150    4                DO;   /* DELETE KEY */
     2478     9151    4                IF INDEX# = 0 THEN
     2479     9152    4                   IF NOT FM$KEYENT.D THEN
     2480     9153    4                      CALL DELETE ALTRET(ERR);
     2481     9154    4                   ELSE;
     2482     9155    4                ELSE
     2483     9156    4                   CALL DELETE ALTRET(ERR);
     2484     9157    4                IF FPT$DELREC_V.BRK AND
     2485     9158    4                   S$CU$->B$U.ASYNCH&(~%U_RESET) AND
     2486     9159    4                   B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
     2487     9160    5                   DO;   /* Got interrupted and OK to interrupt */
     2488     9161    5                   B$JIT.ERR=ERRPMMEINT;
     2489     9162        /*E*   ERROR:   FMG-E$PMMEINT-2
     2490     9163        */
     2491     9164    5                   B$JIT.JUNK=B$JIT.JUNK|%JJ_BAKIC#;
     2492     9165    5                   F$DCB.RPOS='1'B;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:100  
     2493     9166    5                   GOTO ERR;
     2494     9167    5                   END;  /* Got interrupted and OK to interrupt */
     2495     9168    4                END;  /* DELETE KEY */
     2496     9169    3          END;  /* WHILE */
     2497     9170
     2498     9171    2          RETURN;
     2499     9172    2   ERR:   ALTRETURN;
     2500     9173    2   DELEOF: ;
     2501     9174    2          IF B$JIT.ERR.CODE ~= %E$EOF THEN
     2502     9175    2             ALTRETURN;
     2503     9176    2          B$JIT.ERR='0'B;
     2504     9177    2          RETURN;
     2505     9178    2   LKEYERR: ;
     2506     9179    2          B$JIT.ERR=ERRBADKEY2;
     2507     9180    2          ALTRETURN;
     2508     9181        /*E*   ERROR:      FMG-E$BADKEY2-2
     2509     9182               MESSAGE: M$DELREC:  The length of the second key is bad% for %FN%
     2510     9183        */
     2511     9184    2          END DELRANGE;
     2512     9185               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:101  
     2513     9186        /*I*     NAME:     DELREC
     2514     9187                 PURPOSE:  To handle the M$DELREC PMME
     2515     9188                 DESCRIPTION:
     2516     9189                      If DELALL is specified, we want to delete all the keys
     2517     9190                 in the file.  No other parameter is necessary.  Call DELALL
     2518     9191                 to accomplish this and return.
     2519     9192
     2520     9193                      Otherwise, if this is a one granule keyed file, then
     2521     9194                 expand it to two granules before modifying it.  Set the
     2522     9195                 number of deleted records to 0.  If the user specified a key
     2523     9196                 and this is an IREL file, then check the key to make sure the
     2524     9197                 fields are valid. Delete the record, then do the cleanup.
     2525     9198
     2526     9199                      If the user didn't specify a key, then we will delete the
     2527     9200                 current record.  First, make sure we are positioned to something.
     2528     9201                 Then check the last operation.  This is only allowed if the
     2529     9202                 previous operation was a read or precord.
     2530     9203
     2531     9204                      Next, call the proper deletion subroutine.
     2532     9205        */
     2533     9206                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:102  
     2534     9207    1   DELREC: PROC ALTRET;
     2535     9208        /* */
     2536     9209    2          F$DCB.ARS=0;
     2537     9210    2          DELALL_FAST='0'B;
     2538     9211    2          IF FPT$DELREC_V.DELALL THEN
     2539     9212    2             CALL DELALL ALTRET(ENDERR);
     2540     9213    3          ELSE DO;
     2541     9214    3             CALL HFF$NILERASE(B$PS1$) ALTRET(NOKEY);
     2542     9215    3             IF ORG = %IREL# THEN
     2543     9216    3                CALL FMD$CHKFIELD(B$PS1$, %FMD_CHKTYP_KEY) ALTRET(ERR);
     2544     9217    3             CALL DELKEY ALTRET(ERR);
     2545     9218    3             END;
     2546     9219
     2547     9220    2          CALL DELEND ALTRET(ENDERR);
     2548     9221    2          RETURN;
     2549     9222
     2550     9223    2   NOKEY: ;
     2551     9224    2          CALL SHAREPOS ALTRET(ENDERR);
     2552     9225
     2553     9226    3          DO CASE(EOP);
     2554     9227    3             CASE(1);   /* LAST OP WAS READ */
     2555     9228    3                CALL CURREC ALTRET(ERR);
     2556     9229
     2557     9230    3             CASE(2);   /* LAST OP WAS PRECORD */
     2558     9231    3                CALL NXTRECND ALTRET(ERR);
     2559     9232
     2560     9233    3             CASE(ELSE);
     2561     9234    3                B$JIT.ERR=ERRWRWOKEY;
     2562     9235    3                ALTRETURN;
     2563     9236    3          END;  /* CASE */
     2564     9237        /*E*   ERROR:   FMG-E$WRWOKEY-2
     2565     9238               MESSAGE: This M$WRITE or M$DELREC must specify a key%, file %FN%
     2566     9239               MESSAGE1: An M$WRITE or M$DELREC without a key is not allowed if:
     2567     9240                         A)  This operation was not preceded by an M$READ or
     2568     9241                             M$PRECORD, or
     2569     9242                         B)  This M$DELREC caused the alternate index to change.
     2570     9243        */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:103  
     2571     9244
     2572     9245    2          IF INDEX# > 0 AND FPT$DELREC_V.ALLDUPS THEN
     2573     9246    2             CALL DELDUPS ALTRET(ERR);
     2574     9247    2          ELSE
     2575     9248    2             CALL DELETE ALTRET(ERR);
     2576     9249    2          CALL DELEND ALTRET(ENDERR);
     2577     9250
     2578     9251    2          RETURN;
     2579     9252    2   ERR:   CALL DELEND;
     2580     9253    2   ENDERR: ALTRETURN;
     2581     9254    2          END DELREC;
     2582     9255               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:104  
     2583     9256        /*I*     NAME:     FINDID
     2584     9257                 PURPOSE:  To find a user specified ID
     2585     9258                 DESCRIPTION:
     2586     9259                      Loop through the set of duplicates, searching for the
     2587     9260                 specified ID.  If the ID doesn't exist, then we can't tell
     2588     9261                 where in the list of duplicates to position.  In that case,
     2589     9262                 position to the beginning of the current key just to make
     2590     9263                 sure we're positioned someplace.  Assuming that most users
     2591     9264                 are moving in a forward direction in a list of duplicates,
     2592     9265                 this may cause them to see some records more than once, but
     2593     9266                 at least they're less likely to skip some without knowing it.
     2594     9267        */
     2595     9268    1   FINDID: PROC ALTRET;
     2596     9269        /* */
     2597     9270    3          DO WHILE (FM$MISEG.GX ~= ID.GX OR
     2598     9271    3                    FM$MISEG.GDA ~= ID.DA);
     2599     9272    3             CALL NXTRECNM ALTRET(NONE);
     2600     9273    3          END;
     2601     9274
     2602     9275    2          RETURN;
     2603     9276    2   NONE:  CALL CURKEY ALTRET(ERR);
     2604     9277    2          B$JIT.ERR=ERRNOKEY;
     2605     9278    2   ERR:   ALTRETURN;
     2606     9279    2          END FINDID;
     2607     9280               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:105  
     2608     9281        /*I*     NAME:     FINDIDO
     2609     9282                 PURPOSE:  To position in a file with only an ID
     2610     9283                 DESCRIPTION:
     2611     9284                      If the file is not shared, or hasn't been modified since
     2612     9285                 this user's last monitor call, then check to see if the current
     2613     9286                 position matches the ID.  This could save us a lot of extra
     2614     9287                 work.
     2615     9288
     2616     9289                      If we need to reposition, then first read in the data
     2617     9290                 granule from the ID.  If it looks like the record could fit
     2618     9291                 in what the ID indicates, then try to find the key, then find
     2619     9292                 the specific ID.
     2620     9293        */
     2621     9294                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:106  
     2622     9295    1   FINDIDO: PROC ALTRET;
     2623     9296    2          DCL REPOS UBIN;
     2624     9297    2          DCL MINSIZE UBIN;
     2625     9298        /* */
     2626     9299    2          REPOS=1;
     2627     9300    2          IF (F$DCB.SHARED AND F$DCB.MODCNT = FM$CFU.MODCNT) OR
     2628     9301    2             NOT F$DCB.SHARED THEN
     2629     9302    3             DO;   /* CHECK TO SEE IF WE ARE ALREADY THERE */
     2630     9303    3             CALL SHAREPOS ALTRET(ERR);
     2631     9304    3             IF SEGX > 0 THEN
     2632     9305    4                DO;   /* CHECK SEG */
     2633     9306    4                SEG$=PINCRW(BUF$, SEGX);
     2634     9307    4                IF ID.GX = FM$MISEG.GX AND
     2635     9308    4                   ID.DA = FM$MISEG.GDA THEN
     2636     9309    4                   REPOS=0;
     2637     9310    4                END;  /* CHECK SEG */
     2638     9311    3             END;  /* CHECK TO SEE IF WE ARE ALREADY THERE */
     2639     9312    2          ELSE IF FPTCODE ~= FPTWRITE THEN
     2640     9313    2             CALL SHAREPOS ALTRET(ERR); /* Shared or not, make sure auto
     2641     9314                                             is set to something reasonable */
     2642     9315
     2643     9316    2          IF REPOS = 1 THEN
     2644     9317    3             DO;   /* POSITION BY ID */
     2645     9318    3             DA=ID.DA;
     2646     9319    3             IF DA=FM_FRZERO THEN
     2647     9320    4                DO;  /* 1 gran file */
     2648     9321    4                F$DCB.LVL=0;
     2649     9322    4                BUFNUM=1;
     2650     9323    4                END; /* 1 gran file */
     2651     9324    3             ELSE
     2652     9325    4                DO;  /* Multi-gran file */
     2653     9326    4                F$DCB.LVL=7;
     2654     9327    4                BUFNUM=0;
     2655     9328    4                F$DCB.SEZ_OK = '1'B; /* Don't check LVL in REDBUF. */
     2656     9329    4                END; /* Multi-gran file */
     2657     9330    3             IF F$DCB.CFU$->FM$CFU.UGRANS <= DA - FM_FRZERO OR
     2658     9331    3                  DA < FM_FRZERO OR DA > FM_FRMAX THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:107  
     2659     9332    3                GOTO BADID;
     2660     9333    3             CALL FMD$REDBUF(DBUF$, BUFNUM, DA,,, -1) ALTRET(BADID);
     2661     9334    4             IF F$DCB.SEZ_OK THEN DO;
     2662     9335    4                IF DBUF$->FM$GRAN.LVL ~= 7 THEN
     2663     9336    4                   GOTO BADID;
     2664     9337    4                F$DCB.SEZ_OK = '0'B;
     2665     9338    4                END;
     2666     9339    3             IF ORG = %INDEXED# THEN
     2667     9340    4                DO;
     2668     9341    4                IF ALTKEY$=ADDR(NIL) THEN
     2669     9342    4                   MINSIZE=F$DCB.KEYX+F$DCB.KEYL;
     2670     9343    4                ELSE MINSIZE=ALTKEYS.MINWRSIZ;
     2671     9344    4                IF ID.GX*4+MINSIZE > 4096 THEN
     2672     9345    4                   GOTO BADID;
     2673     9346    4                END;
     2674     9347    3             ELSE
     2675     9348    4                DO;   /* IRKEY */
     2676     9349    4                IF ID.GX*4+IRKEYS.MINSIZE > 4096 THEN
     2677     9350    4                   GOTO BADID;
     2678     9351    4                END;  /* IRKEY */
     2679     9352    3             KEYIN$=PINCRC(DBUF$, F$DCB.KEYX+ID.GX*4);
     2680     9353    3             COMFLG=%FMREC;
     2681     9354    3             CALL FINDKEY ALTRET(NOKEY);
     2682     9355    3             CALL FINDID ALTRET(NOKEY);
     2683     9356    3             END;  /* POSITION BY ID */
     2684     9357
     2685     9358    2          RETURN;
     2686     9359    2   BADID: B$JIT.ERR=ERRBADID;
     2687     9360        /*E*      ERROR:  FMG-E$BADID-0
     2688     9361                MESSAGE:  Record ID not found% in %UF%.
     2689     9362               MESSAGE1:  The ID that you tried to read or position by could not
     2690     9363                          be found% in %UF%.
     2691     9364               DESCRIPTION:  Either the referenced block does not exist in the file, or
     2692     9365                             the referenced record isn't in that block.
     2693     9366        */
     2694     9367    2          ALTRETURN;
     2695     9368    2   NOKEY: B$JIT.ERR=ERRNOKEY;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:108  
     2696     9369    2   ERR:   ALTRETURN;
     2697     9370    2          END FINDIDO;
     2698     9371               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:109  
     2699     9372        /*I*     NAME:     FINDKEY
     2700     9373                 PURPOSE:  To find a specific key within a file
     2701     9374                 DESCRIPTION:
     2702     9375                      First check the current index granule to see if the key
     2703     9376                 could be here.
     2704     9377
     2705     9378                      If the key was not in the granule, then we have to look
     2706     9379                 for the proper granule.  If there is an upper level, then
     2707     9380                 try searching that.
     2708     9381
     2709     9382                      Loop through the file, searching for the granule of your
     2710     9383                 dreams.  If we find the proper granule, then leave, now!  If
     2711     9384                 the key was greater than the last key in the granule, then
     2712     9385                 FLINK to the next granule to try again.  If the key was less
     2713     9386                 then the first key in the granule, then we need to blink.
     2714     9387                 If we got here as a result of a flink last time, then we
     2715     9388                 are stuck between two granules, go ahead and leave.
     2716     9389
     2717     9390                      If the granule didn't have any keys at all, then we've
     2718     9391                 got trouble.  Use the last result to decide what to do.  We
     2719     9392                 will try searching in the same direction that we started out
     2720     9393                 in.  If the last time there weren't any keys, we will start
     2721     9394                 off trying to search backwards.  If we hit the beginning of
     2722     9395                 the file without finding anything, then we will try searching
     2723     9396                 to the end of the file.  Set the result to the previous
     2724     9397                 result, to make sure we keep searching in the same direction.
     2725     9398
     2726     9399                      After all of that, check the current granule to see if
     2727     9400                 the key goes here.
     2728     9401
     2729     9402                      After finding the proper granule, then binary search
     2730     9403                 the granule for the specified key.
     2731     9404
     2732     9405                      See how many reads on level 0 we had to do to find the
     2733     9406                 key.  The upper level may need to be rebuilt.
     2734     9407
     2735     9408                      If we ran into the beginning of the file, then position
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:110  
     2736     9409                 ouselves to the first key in the file.
     2737     9410
     2738     9411                      If we ran into the end of the file, then position ourselves
     2739     9412                 to one beyond the last key in the file.
     2740     9413        */
     2741     9414                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:111  
     2742     9415    1   FINDKEY: PROC ALTRET;
     2743     9416    2          DCL FORWARD UBIN;
     2744     9417    2          DCL LAST_RESULT UBIN;
     2745     9418        /* */
     2746     9419    2          RESULT=%NONE;
     2747     9420    2          FORWARD=0;
     2748     9421    2          F$DCB.RDL0=0;
     2749     9422    2          IF F$DCB.BFR.BUFX(1) ~= 0 THEN
     2750     9423    3             DO;   /* CHECK CURRENT GRAN FIRST */
     2751     9424    3             BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));
     2752     9425    3             KEYCNT=FM$GRAN.KEYCNT;
     2753     9426    3             KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
     2754     9427    3             BOUND=FM$KEYTBL(0);
     2755     9428    3             CALL CHECKGRAN ALTRET(ERR);
     2756     9429    3             IF RESULT = %GREATER AND FM$GRAN.FLINK = 0 THEN
     2757     9430    3                GOTO AT_EOF;
     2758     9431    3             END;  /* CHECK CURRENT GRAN FIRST */
     2759     9432
     2760     9433    2          IF RESULT ~= %EQUAL THEN
     2761     9434    3             DO;   /* SEARCH FOR GRAN */
     2762     9435    3             IF F$DCB.GTYP = FMGTFILE AND F$DCB.TDA ~= 0 THEN
     2763     9436    4                DO;   /* SEARCH UPPER LEVEL */
     2764     9437    4                CALL ULSEARCH ALTRET(ERR);
     2765     9438    4                KEYCNT=FM$GRAN.KEYCNT;
     2766     9439    4                KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
     2767     9440    4                BOUND=FM$KEYTBL(0);
     2768     9441    4                CALL CHECKGRAN ALTRET(ERR);
     2769     9442    4                END;  /* SEARCH UPPER LEVEL */
     2770     9443
     2771     9444    3             BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));
     2772     9445    3             IF BUF$ = ADDR(NIL) THEN
     2773     9446    4                DO;   /* READ BUFFER */
     2774     9447    4                F$DCB.LVL=0;
     2775     9448    4                DA=F$DCB.BFR.DA(1);
     2776     9449    4                CALL FMD$REDBUF(BUF$, 1, DA, 0, -1) ALTRET(ERR);
     2777     9450    4                KEYCNT=FM$GRAN.KEYCNT;
     2778     9451    4                KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:112  
     2779     9452    4                BOUND=FM$KEYTBL(0);
     2780     9453    4                CALL CHECKGRAN ALTRET(ERR);
     2781     9454    4                END;  /* READ BUFFER */
     2782     9455
     2783     9456    3             LAST_RESULT=RESULT;
     2784     9457    4   SRCH:     DO WHILE (RESULT ~= %EQUAL);
     2785     9458
     2786     9459    5                DO CASE(RESULT);
     2787     9460    5                   CASE(%EQUAL);
     2788     9461    5                      EXIT SRCH;
     2789     9462
     2790     9463    5                   CASE(%GREATER);
     2791     9464    5                      CALL FLINK ALTRET(EOF);
     2792     9465
     2793     9466    5                   CASE(%LESS);
     2794     9467    5                      IF LAST_RESULT = %GREATER THEN
     2795     9468    6                         DO;   /* IN BETWEEN GRANS */
     2796     9469    6                         RESULT=%EQUAL;
     2797     9470    6                         EXIT SRCH;
     2798     9471    6                         END;  /* IN BETWEEN GRANS */
     2799     9472    5                      ELSE
     2800     9473    5                         CALL BLINK ALTRET(BOF);
     2801     9474
     2802     9475    5                   CASE(%NONE);
     2803     9476    6                      DO CASE(LAST_RESULT);
     2804     9477    6                         CASE(%LESS);
     2805     9478    6                            CALL BLINK ALTRET(BOF);
     2806     9479
     2807     9480    6                         CASE(%GREATER);
     2808     9481    6                            CALL FLINK ALTRET(EOF);
     2809     9482
     2810     9483    6                         CASE(%NONE);
     2811     9484    7                            DO WHILE ('0'B);
     2812     9485    7   TRY_FORWARD:                IF B$JIT.ERR.CODE = %E$BOF THEN
     2813     9486    8                                  DO;   /* TRY FORWARD */
     2814     9487    8                                  FORWARD=1;
     2815     9488    8                                  B$JIT.ERR='0'B;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:113  
     2816     9489    8                                  END;  /* TRY FORWARD */
     2817     9490    7                               ELSE
     2818     9491    7                                  ALTRETURN;
     2819     9492    7                            END;
     2820     9493
     2821     9494    6                            IF FORWARD = 0 THEN
     2822     9495    6                               CALL BLINK ALTRET(TRY_FORWARD);
     2823     9496    6                            ELSE
     2824     9497    6                               CALL FLINK ALTRET(EOF);
     2825     9498    6                      END;  /* CASE */
     2826     9499
     2827     9500    5                      RESULT=LAST_RESULT;
     2828     9501    5                END;  /* CASE */
     2829     9502
     2830     9503    4                LAST_RESULT=RESULT;
     2831     9504    4                CALL CHECKGRAN ALTRET(ERR);
     2832     9505    4             END;  /* WHILE RESULT ~= %EQUAL */
     2833     9506    3             END;  /* SEARCH FOR GRAN */
     2834     9507
     2835     9508    2          CALL BINSEARCH ALTRET(ERR);
     2836     9509
     2837     9510    2          F$DCB.RPOS='0'B;
     2838     9511    2          F$DCB.CRECX=CRECX;
     2839     9512    2          CALL SETPTRS;
     2840     9513
     2841     9514    2          IF ORG ~= 0 THEN
     2842     9515    2             IF F$DCB.RDL0 > F$DCB.LRDL0 THEN
     2843     9516    2                FM$CFU.ULBLD=1;
     2844     9517    2          IF FOUND = %NOO THEN
     2845     9518    3             DO;   /* NOT FOUND */
     2846     9519    3             B$JIT.ERR=ERRNOKEY;
     2847     9520    3             ALTRETURN;
     2848     9521    3             END;  /* NOT FOUND */
     2849     9522
     2850     9523    2          RETURN;
     2851     9524
     2852     9525    2   BOF:   IF B$JIT.ERR.CODE = %E$BOF THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:114  
     2853     9526    3             DO;   /* BOF */
     2854     9527    3             IF KEYCNT = 0 THEN
     2855     9528    4                DO;   /* GO TO FIRST KEY */
     2856     9529    4                F$DCB.RPOS='0'B;
     2857     9530    4                CRECX=0;
     2858     9531    4                SEGX=0;
     2859     9532    4                CALL NXTREC ALTRET(EOF);
     2860     9533    4                END;  /* GO TO FIRST KEY */
     2861     9534    3             ELSE
     2862     9535    4                DO;
     2863     9536    4                CRECX=1;
     2864     9537    4                F$DCB.CRECX=CRECX;
     2865     9538    4                CALL SETPTRS;
     2866     9539    4                END;  /* GO TO FIRST KEY */
     2867     9540
     2868     9541    3             B$JIT.ERR=ERRNOKEY;
     2869     9542
     2870     9543        /*E*   ERROR:   -E$NOKEY-2
     2871     9544               MESSAGE: The specified key does not exist% in %UF%
     2872     9545        */
     2873     9546    3             F$DCB.RPOS='1'B;
     2874     9547    3             IF ORG ~= 0 THEN
     2875     9548    3                IF F$DCB.RDL0 > F$DCB.LRDL0 THEN
     2876     9549    3                   FM$CFU.ULBLD=1;
     2877     9550    3             ALTRETURN;
     2878     9551    3             END;  /* BOF */
     2879     9552
     2880     9553    2   EOF:   IF B$JIT.ERR.CODE = %E$EOF THEN
     2881     9554    3             DO;   /* EOF */
     2882     9555    3   AT_EOF:   CRECX=KEYCNT+1;
     2883     9556    3             F$DCB.CRECX=CRECX;
     2884     9557    3             B$JIT.ERR=ERRNOKEY;
     2885     9558    3             END;  /* EOF */
     2886     9559
     2887     9560    2   ERR:   KEY$=ADDR(NIL);
     2888     9561    2          SEG$=ADDR(NIL);
     2889     9562    2          SEGX=0;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:115  
     2890     9563    2          F$DCB.SEGX=0;
     2891     9564    2          F$DCB.RPOS='1'B;
     2892     9565    2          IF ORG ~= 0 THEN
     2893     9566    2             IF F$DCB.RDL0 > F$DCB.LRDL0 THEN
     2894     9567    2                FM$CFU.ULBLD=1;
     2895     9568    2          ALTRETURN;
     2896     9569    2          END FINDKEY;
     2897     9570               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:116  
     2898     9571        /*I*     NAME:     FLINK
     2899     9572                 PURPOSE:  To link forward one granule
     2900     9573                 DESCRIPTION:
     2901     9574                      Get the disk address of the next granule.  If it is not
     2902     9575                 0, read it.
     2903     9576        */
     2904     9577    1   FLINK: PROC ALTRET;
     2905     9578        /* */
     2906     9579    2          DA=FM$GRAN.FLINK;
     2907     9580    2          IF DA = 0 THEN
     2908     9581    3             DO;   /* EOF */
     2909     9582    3             B$JIT.ERR=ERREOF;
     2910     9583    3             ALTRETURN;
     2911     9584    3             END;  /* EOF */
     2912     9585
     2913     9586    2          CALL RDGRAN ALTRET(ERR);
     2914     9587
     2915     9588    2          RETURN;
     2916     9589    2   ERR:   ALTRETURN;
     2917     9590    2          END FLINK;
     2918     9591               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:117  
     2919     9592        /*I*     NAME:     GETBLINK
     2920     9593                 PURPOSE:  To get the blink into buffer 1
     2921     9594                 DESCRIPTION:
     2922     9595                      We actually want whatever is in buffer 1 to end up and the
     2923     9596                 flink in buffer 3.  So, first we read the blink into buffer 4.
     2924     9597                 Then, we put buffer 1 into buffer 3, and buffer 4 into buffer 1.
     2925     9598                 Make sure all of the pointers, etc. end up with the right values.
     2926     9599        */
     2927     9600                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:118  
     2928     9601    1   GETBLINK: PROC ALTRET;
     2929     9602    2          DCL LCDA SBIN;
     2930     9603    2          DCL BUF4$ PTR;
     2931     9604        /* */
     2932     9605    2          DA=FM$GRAN.BLINK;
     2933     9606    2          LCDA=F$DCB.BFR.DA(1);
     2934     9607    2          F$DCB.LVL=0;
     2935     9608    2          CALL FMD$REDBUF(BUF4$, 4, DA, LCDA) ALTRET(ERR);
     2936     9609    2          CALL FMD$FLSHBUF(3);
     2937     9610
     2938     9611    2          F$DCB.BFR(3)=F$DCB.BFR(1);
     2939     9612    2          F$DCB.BFR1(3)=F$DCB.BFR1(1);
     2940     9613    2          F$DCB.BFR(1)=F$DCB.BFR(4);
     2941     9614    2          F$DCB.BFR1(1)=F$DCB.BFR1(4);
     2942     9615    2          F$DCB.BFR(4)='0'B;
     2943     9616    2          F$DCB.BFR1(4)='0'B;
     2944     9617    2          BUF3$=BUF$;
     2945     9618    2          BUF$=BUF4$;
     2946     9619    2          BUF4$=ADDR(NIL);
     2947     9620    2          KEYCNT=FM$GRAN.KEYCNT;
     2948     9621    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
     2949     9622    2          BOUND=FM$KEYTBL(0);
     2950     9623    2          IF ADDFLG = %KEY THEN
     2951     9624    2             CRECX=KEYCNT+1;
     2952     9625    2          ELSE
     2953     9626    2             CRECX=KEYCNT;
     2954     9627    2          F$DCB.CRECX=CRECX;
     2955     9628
     2956     9629    2          RETURN;
     2957     9630    2   ERR:   ALTRETURN;
     2958     9631    2          END GETBLINK;
     2959     9632               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:119  
     2960     9633        /*I*     NAME:     GETIDP
     2961     9634                 PURPOSE:  To return IDs for PRECORD
     2962     9635                 DESCRIPTION:
     2963     9636                      Get the size of the user's id buffer.  If it is too small
     2964     9637                 for anything, then just return.
     2965     9638
     2966     9639                      If the user only asked for one id, then return the id of
     2967     9640                 the segment we are currently pointing to.
     2968     9641
     2969     9642                      The user may have asked for all ids.  First we need to
     2970     9643                 save our current position, so we can return to it later.
     2971     9644                 Keep looping through the list of duplicates, putting the ids
     2972     9645                 into the id buffer.
     2973     9646
     2974     9647                      Restore the position to wherever we were.  If all of the
     2975     9648                 ids couldn't fit, then return an error message.
     2976     9649        */
     2977     9650                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:120  
     2978     9651    1   GETIDP: PROC ALTRET;
     2979     9652    2          DCL PTR$ PTR;
     2980     9653    2          DCL I SBIN;
     2981     9654    2          DCL 1 SAVE,
     2982     9655    2               2 CRECX UBIN(9) CALIGNED,
     2983     9656    2               2 DA UBIN(27) CALIGNED,
     2984     9657    2               2 RPOS BIT(1) UNAL,
     2985     9658    2               2 SEGX UBIN(35) UNAL;
     2986     9659        /* */
     2987     9660    2          IF ORG = %KEYED# THEN
     2988     9661    2             RETURN;
     2989     9662
     2990     9663    2          IDPTR$=B$PS2$;
     2991     9664    2          CALL HFF$DSIZ(B$PS2$, I)
     2992     9665    3            WHENRETURN DO;
     2993     9666    3              CALL HFF$WRITE(B$PS2$)
     2994     9667    4                WHENALTRETURN DO;
     2995     9668    4                  B$JIT.ERR=ERRIDTRAP;
     2996     9669    4                  ALTRETURN;
     2997     9670    4                END;
     2998     9671    3            END;
     2999     9672    2          I=I/4;
     3000     9673    2          IF I <= 0 THEN
     3001     9674    2             RETURN;
     3002     9675
     3003     9676    2          IF NOT FPT$PRECORD_V.IDALL OR INDEX# = 0 THEN
     3004     9677    3             DO;   /* JUST ONE ID */
     3005     9678    3             IF SEG$ = ADDR(NIL) OR I = 1 THEN
     3006     9679    3                ID.COUNT=0;
     3007     9680    3             ELSE
     3008     9681    4                DO;   /* GET ID */
     3009     9682    4                ID.COUNT=1;
     3010     9683    4                ID.GX=FM$MISEG.GX;
     3011     9684    4                ID.DA=FM$MISEG.GDA;
     3012     9685    4                END;  /* GET ID */
     3013     9686    3             END;  /* JUST ONE ID */
     3014     9687    2          ELSE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:121  
     3015     9688    3             DO;   /* ALL IDS */
     3016     9689    3             ID.COUNT=0;
     3017     9690    3             I=I-1;
     3018     9691    3             SAVE.DA=F$DCB.BFR.DA(1);
     3019     9692    3             SAVE.CRECX=CRECX;
     3020     9693    3             SAVE.SEGX=SEGX;
     3021     9694    3             SAVE.RPOS=F$DCB.RPOS;
     3022     9695    3             PTR$=B$PS2$;
     3023     9696    4             DO WHILE ('1'B);
     3024     9697    4                CALL NXTRECNM ALTRET(NOMORE);
     3025     9698    4                IF I > 0 THEN
     3026     9699    5                   DO;   /* STILL ROOM LEFT */
     3027     9700    5                   PTR$->ID.GX=FM$MISEG.GX;
     3028     9701    5                   PTR$->ID.DA=FM$MISEG.GDA;
     3029     9702    5                   PTR$=PINCRW(PTR$, 1);
     3030     9703    5                   END;  /* STILL ROOM LEFT */
     3031     9704    4                I=I-1;
     3032     9705    4                ID.COUNT=ID.COUNT+1;
     3033     9706    4             END;  /* FOREVER */
     3034     9707
     3035     9708    3   NOMORE:   F$DCB.RPOS='0'B;
     3036     9709    3             IF F$DCB.BFR.DA(1) ~= SAVE.DA THEN
     3037     9710    4                DO;   /* RESTORE DA */
     3038     9711    4                CALL FMD$FLSHBUF(1);
     3039     9712    4                F$DCB.BFR.DA(1)=SAVE.DA;
     3040     9713    4                END;
     3041     9714    3             CRECX=SAVE.CRECX;
     3042     9715    3             SEGX=SAVE.SEGX;
     3043     9716    3             F$DCB.CRECX=CRECX;
     3044     9717    3             F$DCB.SEGX=SEGX;
     3045     9718    3             F$DCB.RPOS=SAVE.RPOS;
     3046     9719    3             IF I < 0 THEN
     3047     9720    4                DO;   /* COULDNT RETURN ALL IDS */
     3048     9721    4                B$JIT.ERR=ERRALLIDS;
     3049     9722    4                ALTRETURN;
     3050     9723    4                END;  /* COULDNT RETURN ALL IDS */
     3051     9724        /*E*   ERROR:      FMG-E$ALLIDS-2
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:122  
     3052     9725               MESSAGE: There are more IDs than could fit in the passed
     3053     9726                        buffer.
     3054     9727               MESSAGE1: The vector passed was not large enough to hold a
     3055     9728                         single ID, if ID was specified, or all IDs if IDALL
     3056     9729                         was specified.
     3057     9730        */
     3058     9731    3             END;  /* ALL IDS */
     3059     9732
     3060     9733    2          IF B$JIT.ERR = '0'B THEN
     3061     9734    2             RETURN;
     3062     9735    2          ELSE IF B$JIT.ERR.CODE = %E$KEYCHNG THEN
     3063     9736    3             DO;   /* ZAP ERROR */
     3064     9737    3             B$JIT.ERR='0'B;
     3065     9738    3             RETURN;
     3066     9739    3             END;  /* ZAP ERROR */
     3067     9740    2          ELSE
     3068     9741    2             ALTRETURN;
     3069     9742    2          END GETIDP;
     3070     9743               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:123  
     3071     9744        /*I*     NAME:     GETIDRW
     3072     9745                 PURPOSE:  To return an ID for M$READ and M$WRITE
     3073     9746                 DESCRIPTION:
     3074     9747                      Get the size of the user's id buffer.  If the buffer is
     3075     9748                 large enough, then return an id.
     3076     9749        */
     3077     9750    1   GETIDRW: PROC ALTRET;
     3078     9751    2          DCL I SBIN;
     3079     9752    2          IF ORG = %KEYED# THEN
     3080     9753    2             RETURN;
     3081     9754
     3082     9755        /* */
     3083     9756    2          IDPTR$=B$PS3$;
     3084     9757    2          CALL HFF$DSIZ(B$PS3$, I) ALTRET(ERR);
     3085     9758    2          CALL HFF$WRITE(B$PS3$) ALTRET(ERR2);
     3086     9759    2          IF I > 4 THEN
     3087     9760    2             IF SEG$ = ADDR(NIL) OR I < 8 THEN
     3088     9761    3                DO;   /* CANT RETURN WHOLE ID */
     3089     9762    3                ID.COUNT=0;
     3090     9763    3                GOTO ERR;
     3091     9764    3                END;  /* CANT RETURN WHOLE ID */
     3092     9765    2             ELSE
     3093     9766    3                DO;   /* SET ID */
     3094     9767    3                ID.COUNT=1;
     3095     9768    3                ID.GX=FM$MISEG.GX;
     3096     9769    3                ID.DA=FM$MISEG.GDA;
     3097     9770    3                END;  /* SET ID */
     3098     9771
     3099     9772    2          RETURN;
     3100     9773    2   ERR:   B$JIT.ERR=ERRALLIDS;
     3101     9774    2          ALTRETURN;
     3102     9775    2   ERR2:  B$JIT.ERR=ERRIDTRAP;
     3103     9776    2          ALTRETURN;
     3104     9777    2          END GETIDRW;
     3105     9778               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:124  
     3106     9779        /*I*     NAME:     GETKEY
     3107     9780                 PURPOSE:  To return a key to the user
     3108     9781                 DESCRIPTION:
     3109     9782                      Call KEYPTR to build a pointer to a key, if needed, for
     3110     9783                 alternate indexes.
     3111     9784
     3112     9785                      If this is an irel file, then we need to call a special
     3113     9786                 subroutine.  If this is an alternate index, then get the
     3114     9787                 size from the ALTKEYS structure.  This is done because we
     3115     9788                 are probably actually pointing to the middle of a record that
     3116     9789                 contains the key text, instead of a key in an index granule.
     3117     9790                 Return the key text, and for keyed files, the key size.
     3118     9791        */
     3119     9792                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:125  
     3120     9793    1   GETKEY: PROC ALTRET;
     3121     9794    2          DCL SIZE UBIN(18);
     3122     9795    2          DCL CHARS CHAR(SIZE) BASED;
     3123     9796    2          DCL 1 KEY BASED,
     3124     9797    2               2 SIZE CHAR(1) CALIGNED,
     3125     9798    2               2 TEXT CHAR(SIZE) CALIGNED;
     3126     9799        /* */
     3127     9800    2          CALL KEYPTR ALTRET(ERR);
     3128     9801
     3129     9802    2          IF ORG = %IREL# AND F$DCB.CRECX = 0 THEN
     3130     9803    2             CALL BUILD_IRKEY(%USEREC);
     3131     9804    3          ELSE DO;   /* Normal keys */
     3132     9805    3             IF ORG = %INDEXED# AND F$DCB.CRECX = 0 THEN
     3133     9806    3                SIZE = ALTKEYS.K.KEYL(INDEX#);
     3134     9807    3             ELSE IF ORG = %IREL# THEN
     3135     9808    3                SIZE = FM$IRENT.KLB;
     3136     9809    3             ELSE
     3137     9810    3                SIZE = FM$KEYENT.KLB;
     3138     9811    4             DO CASE(ORG);
     3139     9812    4                CASE(%INDEXED#);
     3140     9813    4                   B$PS1$->CHARS = KEY$->KEY.TEXT;
     3141     9814    4                CASE(%IREL#);
     3142     9815    4                   B$PS1$->CHARS = FM$IRENT.TXT;
     3143     9816    4                CASE(ELSE);
     3144     9817    4                   B$PS1$->KEY.SIZE = BINASC(SIZE);
     3145     9818    4                   B$PS1$->KEY.TEXT = KEY$->KEY.TEXT;
     3146     9819    4                END;
     3147     9820    3             END;
     3148     9821
     3149     9822    2          RETURN;
     3150     9823    2   ERR:   ALTRETURN;
     3151     9824    2          END GETKEY;
     3152     9825               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:126  
     3153     9826        /*I*     NAME:     GETFLINK
     3154     9827                 PURPOSE:  To read the flink granule into buffer 3
     3155     9828                 DESCRIPTION:
     3156     9829                      IF there is a flink, then read it in.  If there isn't a flink
     3157     9830                 then make one!
     3158     9831        */
     3159     9832    1   GETFLINK: PROC ALTRET;
     3160     9833    2          DCL LCDA SBIN;
     3161     9834        /* */
     3162     9835    2          DA=FM$GRAN.FLINK;
     3163     9836    2          IF DA ~= 0 THEN
     3164     9837    3             DO;   /* GET FLINK */
     3165     9838    3             LCDA=F$DCB.BFR.DA(1);
     3166     9839    3             CALL FMD$REDBUF(BUF3$, 3, DA,, LCDA) ALTRET(ERR);
     3167     9840    3             END;  /* GET FLINK */
     3168     9841    2          ELSE
     3169     9842    2             CALL BLDFLINK ALTRET(ERR);
     3170     9843
     3171     9844    2          RETURN;
     3172     9845    2   ERR:   ALTRETURN;
     3173     9846    2          END GETFLINK;
     3174     9847               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:127  
     3175     9848        /*I*     NAME:     GETREC
     3176     9849                 PURPOSE:  To read a record into a user's buffer
     3177     9850                 DESCRIPTION:
     3178     9851                      FAK indicates whether or not this is our first time through
     3179     9852                 the loop.  This is important under certain conditions.
     3180     9853
     3181     9854                      Set the disk address of the segment.  If the number of
     3182     9855                 active bytes in this segment is 0, then we are done.  By convention,
     3183     9856                 there will not be any useful information after this point.  If
     3184     9857                 the granule disk address is file relative 0, then this is probably
     3185     9858                 a 1 granule keyed file.  Read the data granule into the correct
     3186     9859                 buffer.
     3187     9860
     3188     9861                      GX is the offset from the beginning of the granule to the
     3189     9862                 start of the record information.
     3190     9863
     3191     9864                      If this is our first time through, we need to return
     3192     9865                 DVBYTE.
     3193     9866
     3194     9867                      Format the record into the user's buffer.  If there is
     3195     9868                 anything left over, then there wasn't enough room in the buffer
     3196     9869                 to hold all of the user's record.
     3197     9870
     3198     9871                      Get the next segment.  If FAK is set in the segment, then
     3199     9872                 this is the end of a duplicate record.
     3200     9873        */
     3201     9874                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:128  
     3202     9875    1   GETREC: PROC ALTRET;
     3203     9876    2          DCL GX SBIN;
     3204     9877    2          DCL I SBIN;
     3205     9878    2          DCL GACTB SBIN;
     3206     9879        /* */
     3207     9880    2          FAK=1;
     3208     9881    3   LOOP:  DO WHILE ('1'B);
     3209     9882    3             DA=FM$MISEG.GDA;
     3210     9883    3             IF FM$MISEG.GACTB = 0 THEN
     3211     9884    3                EXIT LOOP;
     3212     9885
     3213     9886    3             IF DA = FM_FRZERO THEN
     3214     9887    4                DO;   /* 1 GRAN FILE */
     3215     9888    4                F$DCB.LVL=0;
     3216     9889    4                BUFNUM=1;
     3217     9890    4                END;  /* 1 GRAN FILE */
     3218     9891    3             ELSE
     3219     9892    4                DO;   /* MULTI-GRAN FILE */
     3220     9893    4                F$DCB.LVL=7;
     3221     9894    4                BUFNUM=0;
     3222     9895    4                END;  /* MULTI-GRAN FILE */
     3223     9896
     3224     9897    3             DBUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM));
     3225     9898    3             IF DBUF$ = ADDR(NIL) OR
     3226     9899    3                F$DCB.BFR.DA(BUFNUM) ~= DA THEN
     3227     9900    3                CALL FMD$REDBUF(DBUF$, BUFNUM, DA,, 0) ALTRET(DATAERR);
     3228     9901
     3229     9902    3             GX=FM$MISEG.GX;
     3230     9903
     3231     9904    3             G$=PINCRW(DBUF$, GX);
     3232     9905    3             GACTB=FM$MISEG.GACTB;
     3233     9906    3             IF FAK = 1 THEN
     3234     9907    3                F$DCB.DVBYTE=FM$MISEG.CTL;
     3235     9908
     3236     9909    3             CALL FMD$RECTRAN(G$, GACTB, BUFNUM, 0, FAK, FPT$READ_V.SEED) ALTRET(ERR);
     3237     9910    3             IF GACTB > 0 THEN
     3238     9911    3                GOTO LOSTDATA;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:129  
     3239     9912
     3240     9913    3             FAK=0;
     3241     9914    3             CALL NXTSEG ALTRET(ERR);
     3242     9915    3             IF SEGX > 0 THEN
     3243     9916    3                IF FM$MISEG.FAK THEN
     3244     9917    4                   DO;   /* DUP ALTERNATE */
     3245     9918    4                   F$DCB.RPOS='1'B;
     3246     9919    4                   EXIT LOOP;
     3247     9920    4                   END;  /* DUP ALTERNATE */
     3248     9921    3                ELSE;
     3249     9922    3             ELSE
     3250     9923    3                EXIT LOOP;
     3251     9924    3          END;  /* WHILE */
     3252     9925
     3253     9926    2          RETURN;
     3254     9927    2   LOSTDATA: ;
     3255     9928    2          B$JIT.ERR=ERRLD;
     3256     9929    2          F$DCB.EOP=FM_EOP(FPTCODE);
     3257     9930    2          ALTRETURN;
     3258     9931    2   DATAERR: CALL DATAERROR;
     3259     9932    2   ERR:   ALTRETURN;
     3260     9933    2          END GETREC;
     3261     9934               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:130  
     3262     9935        /*I*     NAME:     GETSPACE
     3263     9936                 PURPOSE:  To make room for a key or segments
     3264     9937                 DESCRIPTION:
     3265     9938                      If the total amount of space needed is too large, set it
     3266     9939                 to something more reasonable.
     3267     9940
     3268     9941                      CALC_INSRT calculates the insertion point for a key or
     3269     9942                 segment.
     3270     9943
     3271     9944                      Loop until we have enough space.  CALC_SPACE determines
     3272     9945                 whether or not there is enough room in buffer 1.  If there
     3273     9946                 isn't enough room, and we are trying to insert at the
     3274     9947                 beginning of a granule, then try inserting at the end of
     3275     9948                 the previous granule.  Otherwise, get the flink, we may
     3276     9949                 try shuffling some stuff into the flink later.  Now, check
     3277     9950                 to see if there is enough room in the flink.  If there still
     3278     9951                 isn't, then build a new flink.
     3279     9952
     3280     9953                      If we are inserting into the middle of a granule, then
     3281     9954                 call MAKE_SPACE to move stuff around, then check again.
     3282     9955
     3283     9956                      If we are inserting at the end of a granule, then try
     3284     9957                 to keep the key together.  See how much we have to move to
     3285     9958                 keep the key together.  If the total size is enough to
     3286     9959                 fit into a granule, then move the entire key, and recalcuate
     3287     9960                 the insertion point.  If we can't keep the whole key together,
     3288     9961                 then get the space we need from the beginning of the next
     3289     9962                 granule.
     3290     9963
     3291     9964                      SLIDE actually moves the stuff in the granule to make
     3292     9965                 room for the key or segments.
     3293     9966        */
     3294     9967                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:131  
     3295     9968    1   GETSPACE: PROC ALTRET;
     3296     9969    2          DCL TBUF$ PTR;
     3297     9970        /* */
     3298     9971    2          IF TOTSIZE > 1024-SIZEW(FM$GRAN)-SIZEW(FM$KEYTBL) THEN
     3299     9972    3             DO;   /* TOO BIG */
     3300     9973    3             SEGCNT=1024-SIZEW(FM$GRAN)-SIZEW(FM$KEYTBL)-KEYWORDS;
     3301     9974    3             SEGCNT=(SEGCNT/4)*4;
     3302     9975    3             TOTSIZE=KEYWORDS+SEGCNT;
     3303     9976    3             END;  /* TOO BIG */
     3304     9977
     3305     9978    2          IF F$DCB.GTYP = FMGTFILE THEN
     3306     9979    2             ORG=F$DCB.ORG;
     3307     9980    2          ELSE
     3308     9981    2             ORG=0;
     3309     9982
     3310     9983    2          F$DCB.LVL=0;
     3311     9984    2          BUF3$=ADDR(NIL);
     3312     9985
     3313     9986    2          CALL CALC_INSRT ALTRET(ERR);
     3314     9987    3   LOOP:  DO WHILE ('1'B);
     3315     9988    3   AGAIN:    CALL CALC_SPACE;
     3316     9989    3             IF ENUF = %YESS THEN
     3317     9990    3                EXIT LOOP;
     3318     9991
     3319     9992    3             IF INSRT = %BEGIN AND FM$GRAN.BLINK ~= 0 THEN
     3320     9993    4                DO;   /* GET BLINK */
     3321     9994    4                CALL GETBLINK ALTRET(ERR);
     3322     9995    4                INSRT=%END;
     3323     9996    4                SEG$=PINCRW(BUF$, FM$GRAN.NAVX);
     3324     9997    4                GOTO AGAIN;
     3325     9998    4                END;  /* GET BLINK */
     3326     9999    3             ELSE
     3327    10000    3                CALL GETFLINK ALTRET(ERR);
     3328    10001
     3329    10002    3             TBUF$=BUF$;
     3330    10003    3             BUF$=BUF3$;
     3331    10004    3             KEYCNT=FM$GRAN.KEYCNT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:132  
     3332    10005    3             CALL CALC_SPACE; /* Sets SPARE for BUF3 too */
     3333    10006    3             BUF$=TBUF$;
     3334    10007    3             KEYCNT=FM$GRAN.KEYCNT;
     3335    10008    3             IF ENUF = %NOO THEN
     3336    10009    4                DO;
     3337    10010    4                CALL BLDFLINK ALTRET(ERR);
     3338    10011    4                SPARE=0;
     3339    10012    4                END;
     3340    10013
     3341    10014    3             IF INSRT ~= %END THEN
     3342    10015    4                DO;   /* MOVE KEYS */
     3343    10016    4                CALL MAKE_SPACE ALTRET(ERR);
     3344    10017    4                CALL CALC_INSRT ALTRET(ERR);
     3345    10018    4                END;  /* MOVE KEYS */
     3346    10019    3             ELSE
     3347    10020    4                DO;   /* ENUF AT END */
     3348    10021    4                IF CRECX < BOUND THEN
     3349    10022    4                   MOVECNT=FM$GRAN.NAVX-FM$KEYTBL(CRECX);
     3350    10023    4                ELSE
     3351    10024    4                   MOVECNT=FM$GRAN.NAVX-FM$KEYTBL(CRECX)-512;
     3352    10025    4                IF MOVECNT+TOTSIZE < 1024-SIZEW(FM$GRAN)-SIZEW(FM$KEYTBL)-SPARE AND
     3353    10026    4                   ADDFLG = %SEG AND CRECX > 0 THEN
     3354    10027    5                   DO;   /* KEEP KEY TOGETHER */
     3355    10028    5                   IF MOVECNT+TOTSIZE > BUF3$->FM$GRAN.AVAIL THEN
     3356    10029    5                      CALL BLDFLINK ALTRET(ERR);
     3357    10030
     3358    10031    5                   INDX=KEYCNT;
     3359    10032    5                   CALL MOVETOB3 ALTRET(ERR);
     3360    10033    5                   CALL SWITCH1_3;
     3361    10034    5                   CRECX=1;
     3362    10035    5                   F$DCB.CRECX=1;
     3363    10036    5                   CALL CALC_INSRT ALTRET(ERR);
     3364    10037    5                   END;  /* KEEP KEY TOGETHER */
     3365    10038    4                ELSE
     3366    10039    5                   DO;   /* BEGINNING OF NEXT GRAN */
     3367    10040    5                   CALL SWITCH1_3;
     3368    10041    5                   INSRT=%BEGIN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:133  
     3369    10042    5                   SEG$=PINCRW(BUF$, SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL));
     3370    10043    5                   END;  /* BEGINNING OF NEXT GRAN */
     3371    10044    4                END;  /* ENUF AT END */
     3372    10045    3          END;  /* WHILE */
     3373    10046
     3374    10047    2          CALL SLIDE ALTRET(ERR);
     3375    10048    2          RETURN;
     3376    10049    2   ERR:   CALL FMD$FLSHBUF(1);
     3377    10050    2          CALL FMD$FLSHBUF(3);
     3378    10051    2          CALL FMD$FLSHBUF(4);
     3379    10052    2          ALTRETURN;
     3380    10053    2          END GETSPACE;
     3381    10054               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:134  
     3382    10055        /*I*     NAME:     INIT_AKEY
     3383    10056                 PURPOSE:  To reinitialize an indexed file with alternate keys.
     3384    10057                 DESCRIPTION:
     3385    10058                      If all of the records from an alternate keyed file have
     3386    10059                 been deleted, then we reset everything except for granule 0,
     3387    10060                 back to NGAVAL.  Then we have to go back and make sure that
     3388    10061                 all of the alternate indexes have an FDA also.
     3389    10062
     3390    10063                      Entry 0 in the structure is the same as the primary key.
     3391    10064                 First, loop through, reseting everything in the structure
     3392    10065                 back to 0.  Then, get a granule, initialize it, and point to
     3393    10066                 it.
     3394    10067        */
     3395    10068                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:135  
     3396    10069    1   INIT_AKEY: PROC ALTRET;
     3397    10070    2          DCL I SBIN;
     3398    10071        /* */
     3399    10072    2          ALTKEYS.K.FDA(0)=FM_FRZERO;
     3400    10073    2          ALTKEYS.K.LDA(0)=FM$CFU.LDA;
     3401    10074    2          ALTKEYS.K.TDA(0)=F$DCB.TDA;
     3402    10075    2          ALTKEYS.K.TDALVL(0)=F$DCB.TDALVL;
     3403    10076    2          ALTKEYS.K.CDA(0)=FM_FRZERO;
     3404    10077
     3405    10078    3          DO I=1 TO ALTKEYS.NUMENTS-1;
     3406    10079    3             ALTKEYS.K.RPOS(I)='0'B;
     3407    10080    3             ALTKEYS.K.CRECX(I)=0;
     3408    10081    3             ALTKEYS.K.SEGX(I)=0;
     3409    10082    3             ALTKEYS.K.FDA(I)=0;
     3410    10083    3             ALTKEYS.K.LDA(I)=0;
     3411    10084    3             ALTKEYS.K.TDA(I)=0;
     3412    10085    3             ALTKEYS.K.TDALVL(I)=0;
     3413    10086    3             ALTKEYS.K.CDA(I)=0;
     3414    10087    3          END;
     3415    10088
     3416    10089    3          DO I=1 TO ALTKEYS.NUMENTS-1;
     3417    10090    3             CALL INIT_GRAN ALTRET(ERR);
     3418    10091    3             ALTKEYS.K.FDA(I)=DA;
     3419    10092    3             ALTKEYS.K.LDA(I)=DA;
     3420    10093    3             ALTKEYS.K.CDA(I)=DA;
     3421    10094    3          END;  /* DO I */
     3422    10095
     3423    10096    2          RETURN;
     3424    10097    2   ERR:   IF B$JIT.ERR.CODE = %E$PSGRANS OR
     3425    10098    2             B$JIT.ERR.CODE = %E$USGRANS OR
     3426    10099    2             B$JIT.ERR.CODE = %E$ACGRANS THEN
     3427    10100    3             DO;   /* DONT ALTRETURN */
     3428    10101    3             B$JIT.ERR='0'B;
     3429    10102    3             RETURN;
     3430    10103    3             END;  /* DONT ALTRETURN */
     3431    10104    2          ALTRETURN;
     3432    10105    2          END INIT_AKEY;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:136  
     3433    10106               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:137  
     3434    10107        /*I*     NAME:     INIT_GRAN
     3435    10108                 PURPOSE:  To initialize an index granule
     3436    10109                 DESCRIPTION:
     3437    10110                      This gets an index granule, and initializes it for use by
     3438    10111                 INIT_AKEY, and INIT_IRKEY.
     3439    10112        */
     3440    10113                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:138  
     3441    10114    1   INIT_GRAN: PROC ALTRET;
     3442    10115        /* */
     3443    10116    2          CALL FMD$FLSHBUF(2);
     3444    10117    2          CALL FAF$GETGRAN(DA) ALTRET(ERR);
     3445    10118    2          CALL FMD$GETBUF(2, 1, BUF$);
     3446    10119    2          F$DCB.BFR.DA(2)=DA;
     3447    10120    2          F$DCB.BFR.BUFUP(2)='1'B;
     3448    10121    2          F$DCB.BFR.SCRUB(2)='1'B;
     3449    10122
     3450    10123    2          FM$GRAN='0'B;
     3451    10124    2          FM$GRAN.STAMP.HASH=F$DCB.HASH;
     3452    10125    2          FM$GRAN.STAMP.GMOD=DA;
     3453    10126    2          FM$GRAN.NAVX=SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL);
     3454    10127    2          FM$GRAN.HDR='1'B;
     3455    10128    2          FM$GRAN.ORG=F$DCB.ORG;
     3456    10129    2          FM$GRAN.AVAIL=1024-FM$GRAN.NAVX;
     3457    10130    2          FM$GRAN.FCEX=SIZEW(FM$GRAN);
     3458    10131    2          PINCRW(BUF$, SIZEW(FM$GRAN))->FM$KEYTBL=INITKEYTBL;
     3459    10132    2          RETURN;
     3460    10133    2   ERR:   ALTRETURN;
     3461    10134    2          END INIT_GRAN;
     3462    10135               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:139  
     3463    10136        /*I*     NAME:     INIT_IRKEY
     3464    10137                 PURPOSE:  To reinitialize an irel file
     3465    10138                 DESCRIPTION:
     3466    10139                      Entry 0 is the same thing as the primary index.  Next,
     3467    10140                 reset all of the entries for the alternate indexes.  Then,
     3468    10141                 go through getting a granule, and calling it the FDA.
     3469    10142        */
     3470    10143                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:140  
     3471    10144    1   INIT_IRKEY: PROC ALTRET;
     3472    10145    2          DCL I SBIN;
     3473    10146        /* */
     3474    10147    2          IRKEYS.K.FDA(0)=FM_FRZERO;
     3475    10148    2          IRKEYS.K.LDA(0)=FM$CFU.LDA;
     3476    10149    2          IRKEYS.K.TDA(0)=F$DCB.TDA;
     3477    10150    2          IRKEYS.K.TDALVL(0)=F$DCB.TDALVL;
     3478    10151    2          IRKEYS.K.CDA(0)=FM_FRZERO;
     3479    10152
     3480    10153    3          DO I=1 TO IRKEYS.NKEYS-1;
     3481    10154    3             IRKEYS.K.RPOS(I)='0'B;
     3482    10155    3             IRKEYS.K.CRECX(I)=0;
     3483    10156    3             IRKEYS.K.SEGX(I)=0;
     3484    10157    3             IRKEYS.K.FDA(I)=0;
     3485    10158    3             IRKEYS.K.LDA(I)=0;
     3486    10159    3             IRKEYS.K.TDA(I)=0;
     3487    10160    3             IRKEYS.K.TDALVL(I)=0;
     3488    10161    3             IRKEYS.K.CDA(I)=0;
     3489    10162    3          END;
     3490    10163
     3491    10164    3          DO I=1 TO IRKEYS.NKEYS-1;
     3492    10165    3             CALL INIT_GRAN ALTRET(ERR);
     3493    10166    3             IRKEYS.K.FDA(I)=DA;
     3494    10167    3             IRKEYS.K.LDA(I)=DA;
     3495    10168    3             IRKEYS.K.CDA(I)=DA;
     3496    10169    3          END;  /* DO I */
     3497    10170
     3498    10171    2          RETURN;
     3499    10172    2   ERR:   IF B$JIT.ERR.CODE = %E$PSGRANS OR
     3500    10173    2             B$JIT.ERR.CODE = %E$USGRANS OR
     3501    10174    2             B$JIT.ERR.CODE = %E$ACGRANS THEN
     3502    10175    3             DO;   /* DONT ALTRETURN */
     3503    10176    3             B$JIT.ERR='0'B;
     3504    10177    3             RETURN;
     3505    10178    3             END;  /* DONT ALTRETURN */
     3506    10179    2          ALTRETURN;
     3507    10180    2          END INIT_IRKEY;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:141  
     3508    10181               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:142  
     3509    10182        /*I*     NAME:     KEYEXP
     3510    10183                 PURPOSE:  To expand a 1 granule keyed file
     3511    10184                 DESCRIPTION:
     3512    10185                      Whenever a modification needs to be done to a 1 granule
     3513    10186                 keyed file, it is first expanded to 2 granules.  First, we
     3514    10187                 save our current position.  Then, we make sure that granule
     3515    10188                 0 is in buffer 1.  Next, we get a granule for the data, and
     3516    10189                 put it in granule 0.
     3517    10190
     3518    10191                      The data in buffer 1 is at the end of the granule.  So,
     3519    10192                 since NAVX points to the end of the list of keys, and AVAIL
     3520    10193                 is the amount of space between the list of keys, and the
     3521    10194                 start of the data, the amount of data space is 1024 less
     3522    10195                 NAVX and AVAIL.  The data gets moved to buffer 0.  Then, we
     3523    10196                 get a granule, and call it GDA.  Make sure all of the
     3524    10197                 NAVX and AVAIL values are okay.
     3525    10198
     3526    10199                      Now, we have to loop through the file, making sure all
     3527    10200                 of the MISEGs point to the right place.  J is the number of
     3528    10201                 words that the data moved forward.
     3529    10202
     3530    10203                      When that's all done, then make sure that both granules
     3531    10204                 get written to disk, and restore the file position.
     3532    10205        */
     3533    10206                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:143  
     3534    10207    1   KEYEXP: PROC ALTRET;
     3535    10208    2          DCL MOVCNT SBIN;
     3536    10209    2          DCL P1$ PTR;
     3537    10210    2          DCL P2$ PTR;
     3538    10211    2          DCL J SBIN;
     3539    10212    2          DCL SIZE SBIN;
     3540    10213    2          DCL CHARS CHAR(SIZE) BASED;
     3541    10214        /* */
     3542    10215    2          IF FM$CFU.GDA ~= 1 THEN
     3543    10216    2             RETURN;
     3544    10217    2          CALL FMG$INIT;
     3545    10218
     3546    10219    2          F$DCB.GTYP=FMGTFILE;
     3547    10220    2          F$DCB.LVL=0;
     3548    10221    2          CALL FMD$REDBUF(BUF$, 1, FM_FRZERO,, 0) ALTRET(ERR);
     3549    10222
     3550    10223    2          CALL FMD$GETBUF(0, 1, DBUF$);
     3551    10224    2          DBUF$->FM$GRAN=FM$GRAN;
     3552    10225    2          DBUF$->FM$GRAN.HDR='0'B;
     3553    10226    2          DBUF$->FM$GRAN.LVL=7;
     3554    10227
     3555    10228    2          MOVCNT=1024-FM$GRAN.NAVX-FM$GRAN.AVAIL;
     3556    10229    2          P1$=PINCRW(BUF$, 1024-MOVCNT);
     3557    10230    2          P2$=PINCRW(DBUF$, 2);
     3558    10231
     3559    10232    2          SIZE=MOVCNT*4;
     3560    10233    2          P2$->CHARS=P1$->CHARS;
     3561    10234
     3562    10235    2          DBUF$->FM$GRAN.AVAIL=1024-2-MOVCNT;
     3563    10236    2          DBUF$->FM$GRAN.NAVX=MOVCNT+2;
     3564    10237
     3565    10238    2          CALL FAF$GETGRAN(DA) ALTRET(RERR);
     3566    10239    2          FM$CFU.GDA=DA;
     3567    10240
     3568    10241    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL+MOVCNT;
     3569    10242    2          F$DCB.BFR.DA(0)=DA;
     3570    10243    2          DBUF$->FM$GRAN.STAMP.GMOD=DA;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:144  
     3571    10244
     3572    10245    2          F$DCB.BFR.BUFUP(0)='1'B;
     3573    10246    2          F$DCB.BFR.SCRUB(0)='1'B;
     3574    10247
     3575    10248    2          J=POFFW(P1$, BUF$)-2;
     3576    10249    2          F$DCB.RPOS='0'B;
     3577    10250    2          CALL SETUP;
     3578    10251    2          ORG=F$DCB.ORG;     /* SETUP CLOBBERS ORG */
     3579    10252    2          CRECX=0;
     3580    10253    3          DO WHILE ('1'B);
     3581    10254    3             CALL NXTKEYNM ALTRET(DONE);
     3582    10255    4             DO WHILE (SEG$ ~= ADDR(NIL));
     3583    10256    4                IF FM$MISEG.GDA=FM_FRZERO THEN
     3584    10257    5                   DO;   /* ADJUST MISEG */
     3585    10258    5                   IF FM$MISEG.GDA = F$DCB.ID.DA AND
     3586    10259    5                      FM$MISEG.GX = F$DCB.ID.GX THEN
     3587    10260    6                      DO;   /* ADJUST ID */
     3588    10261    6                      F$DCB.ID.DA=DA;
     3589    10262    6                      F$DCB.ID.GX=F$DCB.ID.GX-J;
     3590    10263    6                      END;  /* ADJUST ID */
     3591    10264
     3592    10265    5                   FM$MISEG.GDA=DA;
     3593    10266    5                   FM$MISEG.GX=FM$MISEG.GX-J;
     3594    10267    5                   END;  /* ADJUST MISEG */
     3595    10268    4                CALL NXTSEG ALTRET(ERR);
     3596    10269    4             END;  /* WHILE */
     3597    10270    3          END;  /* FOREVER */
     3598    10271
     3599    10272    2   DONE:  F$DCB.BFR.BUFUP(1)='1'B;
     3600    10273    2          F$DCB.SPAN='1'B;
     3601    10274    2          CALL FMD$WRTBUF(0);
     3602    10275    2          CALL FMD$WRTSV(1);
     3603    10276    2          CALL FMG$INIT;
     3604    10277    2          RETURN;
     3605    10278    2   RERR:  CALL FMD$RELBUF(0);
     3606    10279    2   ERR:   ALTRETURN;
     3607    10280    2          END KEYEXP;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:145  
     3608    10281               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:146  
     3609    10282        /*I*     NAME:     KEYPTR
     3610    10283                 PURPOSE:  To build a pointer to an alternate key
     3611    10284                 DESCRIPTION:
     3612    10285                      Since the user may ask for a key back when we are pointing
     3613    10286                 to a duplicate key entry, we have to read the record to actually
     3614    10287                 get the key value.  We read in the data granule that is associated
     3615    10288                 with this key.  Then set up KEY$ to point to the part of the
     3616    10289                 record where the key text will actually be found.
     3617    10290        */
     3618    10291                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:147  
     3619    10292    1   KEYPTR: PROC ALTRET;
     3620    10293        /* */
     3621    10294    3          IF INDEX# > 0 OR ORG = %IREL# THEN DO;   /* Set KEY$ */
     3622    10295    3             IF SEG$ = ADDR(NIL) THEN
     3623    10296    3                KEY$=ADDR(NIL);
     3624    10297    3             ELSE                               /* Set up key pointer */
     3625    10298    4                IF F$DCB.CRECX = 0 THEN DO;    /* Key not in current granule? */
     3626    10299    4                   DA=FM$MISEG.GDA;
     3627    10300    4                   F$DCB.LVL=7;
     3628    10301    4                   DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));
     3629    10302    4                   IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= DA THEN
     3630    10303    4                      CALL FMD$REDBUF(DBUF$, 0, DA,, 0) ALTRET(ERR);
     3631    10304    4                   KEY$=PINCRW(DBUF$, FM$MISEG.GX);
     3632    10305    4                   IF ORG = %INDEXED# THEN
     3633    10306    4                      KEY$=PINCRC(KEY$, F$DCB.KEYX-1);
     3634    10307    4                   END;
     3635    10308    4                ELSE DO;           /* Key is in current granule. */
     3636    10309    4                   CRECX = F$DCB.CRECX;
     3637    10310    4                   BUF$ = FM$BUF$(F$DCB.BFR.BUFX(1));
     3638    10311    4                   KTPTR$ = PINCRW(BUF$,FM$GRAN.FCEX);
     3639    10312    4                   IF CRECX < FM$KEYTBL(0) THEN
     3640    10313    4                      KEY$ = PINCRW(BUF$,FM$KEYTBL(CRECX));
     3641    10314    4                   ELSE
     3642    10315    4                      KEY$ = PINCRW(BUF$,FM$KEYTBL(CRECX)+512);
     3643    10316    4                   END;
     3644    10317    3             END;
     3645    10318
     3646    10319    2          RETURN;
     3647    10320    2   ERR:   CALL DATAERROR;
     3648    10321    2          ALTRETURN;
     3649    10322    2          END KEYPTR;
     3650    10323               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:148  
     3651    10324        /*I*     NAME:     KEYSQZ
     3652    10325                 PURPOSE:  To try to squeeze a keyed file to 1 granule
     3653    10326                 DESCRIPTION:
     3654    10327                      When closing a keyed file, we'll try to squeeze a two
     3655    10328                 granule file down to one granule.  There are a lot of
     3656    10329                 restrictions on what we'll try to squeeze.  By the way,
     3657    10330                 FM$CFU.GDA=1 indicates that a file is already squeezed.
     3658    10331
     3659    10332                      A truly squeezable file has two granules, one index and
     3660    10333                 one data.  However, there's one other possibility.  If the
     3661    10334                 file's last record was deleted, then the DELEND routine will
     3662    10335                 have already squeezed it down.  I.e., FM_FRZERO will be
     3663    10336                 initialized to a skeleton index granule and FM$CFU.UGRANS
     3664    10337                 will be set to 1, among other things.  However, we still need
     3665    10338                 to indicate that the file was squeezed here so that
     3666    10339                 FMO$MODFIT will know.  Otherwise, the NGAVAL granules won't
     3667    10340                 be released in the case where F$DCB.SPAN='1'B, indicating
     3668    10341                 that the file was expanded to two granules at open time, but
     3669    10342                 F$DCB.FFLG.DELF='0'B.  Expanding this sort of file during a
     3670    10343                 future open will still work.
     3671    10344
     3672    10345                      Otherwise, if it really is a two granule file, there's
     3673    10346                 more work to do.
     3674    10347
     3675    10348                      First, we read the data granule into buffer 0.  If the
     3676    10349                 amount of data space is greater than the free space in buffer
     3677    10350                 1, then we can't squeeze it.  Otherwise, we move the data to
     3678    10351                 the end of buffer 1.
     3679    10352
     3680    10353                      Now, loop through the file, readjusting the MISEGs to
     3681    10354                 point to the correct place in granule 0.
     3682    10355
     3683    10356                      NGAVAL just increased by one.
     3684    10357        */
     3685    10358                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:149  
     3686    10359    1   KEYSQZ: PROC;
     3687    10360    2          DCL MOVCNT SBIN;
     3688    10361    2          DCL J SBIN;
     3689    10362    2          DCL P1$ PTR;
     3690    10363    2          DCL P2$ PTR;
     3691    10364    2          DCL SIZE SBIN;
     3692    10365    2          DCL CHARS CHAR(SIZE) BASED;
     3693    10366        /* */
     3694    10367    2          FPTCODE=0;
     3695    10368    2          CALL SETUP;
     3696    10369
     3697    10370    2          IF F$DCB.ACS = %BLOCK# OR F$DCB.IORG ~= %KEYED# OR
     3698    10371    2             F$DCB.STARF OR FM$CFU.USECNT ~= 1 OR
     3699    10372    2             FM$CFU.SLIDE ~= 1 OR FM$CFU.AFIT ~= 0 OR
     3700    10373    2             FM$CFU.GDA = 1 OR
     3701    10374    2             (F$DCB.ALTKEYX > 0 AND F$DCB.ORG ~= %KEYED#) OR
     3702    10375    2             FM$GRAN.FLINK ~= 0 THEN
     3703    10376    2             RETURN;
     3704    10377
     3705    10378    2          IF FM$CFU.UGRANS ~= 2 THEN
     3706    10379    2             IF FM$CFU.UGRANS=1 AND FM$CFU.GDA=0 THEN
     3707    10380    2                GOTO ONE_GRAN; /* It was 'squeezed' in DELEND already */
     3708    10381    2             ELSE RETURN;
     3709    10382
     3710    10383    2          F$DCB.LVL=7;
     3711    10384    2          F$DCB.GTYP=FMGTFILE;
     3712    10385    2          CALL FMD$REDBUF(DBUF$, 0, FM_FRZERO+1) ALTRET(NOSQZ);
     3713    10386
     3714    10387    2          MOVCNT=DBUF$->FM$GRAN.NAVX-2;
     3715    10388    2          IF MOVCNT > FM$GRAN.AVAIL THEN
     3716    10389    2             GOTO NOSQZ;
     3717    10390
     3718    10391    2          P1$=PINCRW(BUF$, 1024-MOVCNT);
     3719    10392    2          P2$=PINCRW(DBUF$, 2);
     3720    10393    2          SIZE=MOVCNT*4;
     3721    10394    2          P1$->CHARS=P2$->CHARS;
     3722    10395    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL-MOVCNT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:150  
     3723    10396
     3724    10397    2          J=POFFW(P1$, BUF$)-2;
     3725    10398    2          F$DCB.RPOS='0'B;
     3726    10399    2          CRECX=0;
     3727    10400
     3728    10401    3          DO WHILE('1'B);
     3729    10402    3             CALL NXTKEYNM ALTRET(DONE);
     3730    10403    4             DO WHILE (SEG$ ~= ADDR(NIL));
     3731    10404    4                IF FM$MISEG.GDA = FM_FRZERO+1 THEN
     3732    10405    5                   DO;   /* ADJUST MISEG */
     3733    10406    5                   FM$MISEG.GDA=FM_FRZERO;
     3734    10407    5                   FM$MISEG.GX=FM$MISEG.GX+J;
     3735    10408    5                   END;  /* ADJUST MISEG */
     3736    10409    4                CALL NXTSEG ALTRET(NOSQZ);
     3737    10410    4             END;  /* WHILE */
     3738    10411    3          END;  /* FOREVER */
     3739    10412
     3740    10413    2   DONE:  F$DCB.BFR.BUFUP(1)='1'B;
     3741    10414    2          FM$CFU.UGRANS=1;
     3742    10415    2          FM$CFU.NGAVAL=FM$CFU.NGAVAL+1;
     3743    10416    2          CALL FMD$RELBUF(0);
     3744    10417    2   ONE_GRAN:;
     3745    10418    2          FM$CFU.GDA=1;
     3746    10419    2          FPTCODE=1;
     3747    10420    2          RETURN;
     3748    10421
     3749    10422    2   NOSQZ: CALL FMD$FLSHBUF(0);
     3750    10423    2          RETURN;
     3751    10424    2          END KEYSQZ;
     3752    10425               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:151  
     3753    10426        /*I*     NAME:     KINIT
     3754    10427                 PURPOSE:  To handle general initialization
     3755    10428                 DESCRIPTION:
     3756    10429                      First set up some local variables for faster access.  Next,
     3757    10430                 if this file has alternate indexes, then initialize the index.
     3758    10431
     3759    10432                      Set up any pointers to irel stuff.  SAVE_INDEX# is
     3760    10433                 used for restoring the index from operations that inherently
     3761    10434                 change the index.
     3762    10435        */
     3763    10436                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:152  
     3764    10437    1   KINIT: PROC ALTRET;
     3765    10438        /* */
     3766    10439    2          JDCB$=B$JIT.DCB$;
     3767    10440    2          CFU$=F$DCB.CFU$;
     3768    10441    2          ORG=F$DCB.ORG;
     3769    10442    2          EOP=F$DCB.EOP;
     3770    10443    2          ANEWSEG=%NOO;
     3771    10444    2          SEG$=ADDR(NIL);
     3772    10445
     3773    10446    2          IF F$DCB.ALTKEYX > 0 AND F$DCB.ORG ~= %KEYED# THEN
     3774    10447    3             DO;   /* ALTERNATE KEYS */
     3775    10448    4             DO CASE(FPTCODE);
     3776    10449    4                CASE(FPTREAD);
     3777    10450    4                   INDEX#=FPT$READ_V.INDX;
     3778    10451
     3779    10452    4                CASE(FPTPFIL, FPTREW);
     3780    10453    4                   INDEX#=FPT$PFIL_V.INDX;
     3781    10454
     3782    10455    4                CASE(FPTPREC);
     3783    10456    4                   INDEX#=FPT$PRECORD_V.INDX;
     3784    10457
     3785    10458    4                CASE(FPTDELREC);
     3786    10459    4                   INDEX#=FPT$DELREC_V.INDX;
     3787    10460
     3788    10461    4                CASE(FPTWRITE, FPTPFILEOF);
     3789    10462    4                   INDEX#=1;
     3790    10463    4             END;  /* DO CASE */
     3791    10464
     3792    10465    3             CALL SETINDEX ALTRET(ERR);
     3793    10466    3             END;  /* ALTERNATE KEYS */
     3794    10467    2          ELSE
     3795    10468    3             DO;   /* NO ALTERNATE KEYS */
     3796    10469    3             ALTKEY$=ADDR(NIL);
     3797    10470    3             INDEX#=0;
     3798    10471    3             END;  /* NO ALTERNATE KEYS */
     3799    10472
     3800    10473    2          IF F$DCB.KFIELDX > 0 THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:153  
     3801    10474    2             KFIELD$=PINCRW(B$ROSEG$, F$DCB.KFIELDX);
     3802    10475    2          ELSE
     3803    10476    2             KFIELD$=ADDR(NIL);
     3804    10477
     3805    10478    3          IF ORG=%IREL# THEN DO;
     3806    10479    3             RECFIELD$=PINCRW(B$ROSEG$, F$DCB.FIELDX);
     3807    10480    3             START$=PINCRW(B$ROSEG$, F$DCB.STARTX);
     3808    10481    3             END;
     3809    10482    3          ELSE DO;
     3810    10483    3             RECFIELD$=ADDR(NIL);
     3811    10484    3             START$=ADDR(NIL);
     3812    10485    3             END;
     3813    10486
     3814    10487    2          SAVE_INDEX#=INDEX#;
     3815    10488    2          RETURN;
     3816    10489    2   ERR:   ALTRETURN;
     3817    10490    2          END KINIT;
     3818    10491               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:154  
     3819    10492        /*I*     NAME:     MAKE_SPACE
     3820    10493                 PURPOSE:  To make sure there is enough space to insert a key
     3821    10494                           or segments
     3822    10495                 DESCRIPTION:
     3823    10496                      This routine freely juggles keys around to make enough
     3824    10497                 space in buffer 1 for the key or segments that need to be
     3825    10498                 added.
     3826    10499
     3827    10500                      Loop through the list of keys in the granule, starting
     3828    10501                 at the last key and moving backwards until we have enough
     3829    10502                 room.  We don't actually take the first chance, we try to
     3830    10503                 more or less optimize the move to equalize the amount of
     3831    10504                 space in buffers 1 and 3.  If the amount of space in the
     3832    10505                 flink is only about 3 times the amount of space we need,
     3833    10506                 then we won't be able to balance things very well.
     3834    10507
     3835    10508                      If the amount of space to move ended up being 0, and we
     3836    10509                 aren't trying to insert into the middle of a segment list
     3837    10510                 (ANEWSEG ~= %YESS) then the key table is probably screwed up.
     3838    10511                 In this case, we want to log an error and altreturn.  For
     3839    10512                 instance, if we're adding a new segment at the end of a list
     3840    10513                 of segments (ANEWSEG=%NOO), then we're either inserting at
     3841    10514                 the end of the granule and MAKE_SPACE isn't called or we're
     3842    10515                 inserting in the middle and there should be at least one
     3843    10516                 subsequent key on the current granule (CRECX < KEYCNT).  But
     3844    10517                 if ANEWSEG=%YESS, then we're inserting in the middle of a
     3845    10518                 list of duplicates for an alternate key and there might not
     3846    10519                 be another key for miles to come.  So, it's OK if the amount
     3847    10520                 of space is 0 at this point.  In this case we'll move
     3848    10521                 all the subsequent segments on this granule to another
     3849    10522                 granule in order to make enough room.
     3850    10523
     3851    10524                      If we don't have enough space, then check again.  We
     3852    10525                 may be able to make a move that is not so optimal.  If that
     3853    10526                 doesn't work, then see if everything will fit in buffer 3.
     3854    10527                 If all else fails, build another link.
     3855    10528        */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:155  
     3856    10529                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:156  
     3857    10530    1   MAKE_SPACE: PROC ALTRET;
     3858    10531    2          DCL TCRECX UBIN;
     3859    10532        /* */
     3860    10533    2          MOVECNT=0;
     3861    10534    2          IF ADDFLG = %KEY THEN
     3862    10535    2             TCRECX=CRECX;
     3863    10536    2          ELSE
     3864    10537    2             TCRECX=CRECX+1;
     3865    10538
     3866    10539    2          ENUF=%NOO;
     3867    10540    2          INDX=KEYCNT+1;
     3868    10541    3          DO WHILE (ENUF = %NOO AND INDX > TCRECX);
     3869    10542    3             INDX=INDX-1;
     3870    10543    3             IF INDX < BOUND THEN
     3871    10544    3                MOVECNT=FM$GRAN.NAVX-FM$KEYTBL(INDX);
     3872    10545    3             ELSE
     3873    10546    3                MOVECNT=FM$GRAN.NAVX-FM$KEYTBL(INDX)-512;
     3874    10547
     3875    10548    3             IF MOVECNT+FM$GRAN.AVAIL >= TOTSIZE THEN
     3876    10549    3                IF ORG = 0 OR
     3877    10550    3                   (MOVECNT >= (FM$GRAN3.AVAIL+TOTSIZE-FM$GRAN.AVAIL)/2) THEN
     3878    10551    3                   ENUF=%YESS;
     3879    10552    3                ELSE
     3880    10553    3                   IF FM$GRAN3.AVAIL < TOTSIZE*3 THEN
     3881    10554    3                      ENUF=%YESS;
     3882    10555    3          END;  /* WHILE */
     3883    10556
     3884    10557    2          IF MOVECNT = 0 THEN
     3885    10558    2             IF ANEWSEG ~= %YESS THEN
     3886    10559    3                DO;   /* ERROR */
     3887    10560    3                B$JIT.ERR=ERRFREC;
     3888    10561        /*E*   ERROR:      FMG-E$FREC-2
     3889    10562               MESSAGE:    Inconsistency in record pointers% in file %FN%
     3890    10563               DESCRIPTION:
     3891    10564                  The current record is inaccessible
     3892    10565        */
     3893    10566    3                CALL FMB$LOGERR(%E$FREC, 12, 8, DA, BUF$, 0, 1, 2, INDX);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:157  
     3894    10567    3                ALTRETURN;
     3895    10568    3                END;  /* ERROR */
     3896    10569    2             ELSE
     3897    10570    3                DO;   /* NEED TO MOVE MIDDLE OF KEY */
     3898    10571    3                MOVECNT=FM$GRAN.NAVX-POFFW(SEG$, BUF$);
     3899    10572    3                END;  /* NEED TO MOVE MIDDLE OF KEY */
     3900    10573
     3901    10574    2          IF ENUF = %NOO THEN
     3902    10575    3             DO;   /* MAYBE ENUF */
     3903    10576    3             INDX=TCRECX;
     3904    10577    3             IF MOVECNT+FM$GRAN.AVAIL >= TOTSIZE THEN
     3905    10578    3                CALL MOVETOB3 ALTRET(ERR);
     3906    10579    3             ELSE
     3907    10580    4                DO;   /* ENUF IN BUFFER 3 */
     3908    10581    4                IF TOTSIZE+MOVECNT > FM$GRAN3.AVAIL THEN
     3909    10582    4                   CALL BLDFLINK ALTRET(ERR);
     3910    10583    4                CALL MOVETOB3 ALTRET(ERR);
     3911    10584    4                CALL SWITCH1_3;
     3912    10585    4                END;  /* ENUF IN BUFFER 3 */
     3913    10586    3             END;  /* MAYBE ENUF */
     3914    10587    2          ELSE
     3915    10588    3             DO;   /* MOVE IT */
     3916    10589    3             CALL MOVETOB3 ALTRET(ERR);
     3917    10590    3             END;  /* MOVE IT */
     3918    10591
     3919    10592    2          RETURN;
     3920    10593    2   ERR:   ALTRETURN;
     3921    10594    2          END MAKE_SPACE;
     3922    10595               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:158  
     3923    10596        /*I*     NAME:     MOVEN
     3924    10597                 PURPOSE:  To move N records for M$PRECORD
     3925    10598                 DESCRIPTION:
     3926    10599                      If the user specified positive N, then just keep moving
     3927    10600                 forward until we run out of N, or records, whichever comes
     3928    10601                 first.  F$DCB.ARS specifies how many records we moved.
     3929    10602
     3930    10603                      If N was negative, then first make sure we are pointing
     3931    10604                 to the beginning of the current record.  If the current record
     3932    10605                 is deleted, then this doesn't count as a record.  Otherwise,
     3933    10606                 keep moving backwards until we are done.
     3934    10607
     3935    10608                      If we hit EOF, then it really doesn't count as an error
     3936    10609                 if this was our last move.  We will now be positioned such
     3937    10610                 that our next read will return EOF to the user.
     3938    10611
     3939    10612                      If we hit BOF, and the user asked for the key back, then
     3940    10613                 we will try to give him the first key.
     3941    10614
     3942    10615                      If the user hits break and the pmme break option is set,
     3943    10616                 stop positioning at whatever record we're currently
     3944    10617                 positioned to and altreturn.
     3945    10618        */
     3946    10619                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:159  
     3947    10620    1   MOVEN: PROC ALTRET;
     3948    10621    2          DCL N SBIN;
     3949    10622    2          DCL ERRTMP UBIN;
     3950    10623        /* */
     3951    10624    2          IF NOT FPT$PRECORD_V.IDS AND NOT FPT$PRECORD_V.KEYS AND
     3952    10625    2             NOT FPT$PRECORD_V.BOF AND NOT FPT$PRECORD_V.EOF THEN
     3953    10626    2             CALL SHAREPOS ALTRET(ERR);
     3954    10627
     3955    10628    2          N=FPT$PRECORD_V.N;
     3956    10629
     3957    10630    2          IF N >= 0 THEN
     3958    10631    3             DO;   /* MOVE FORWARD */
     3959    10632    3             CALL NXTRECND ALTRET(EOF);
     3960    10633    4             DO WHILE (N > 0);
     3961    10634    4                F$DCB.ARS=F$DCB.ARS+1;
     3962    10635    4                N=N-1;
     3963    10636    4                CALL NXTRECND ALTRET(EOF);
     3964    10637
     3965    10638    4                IF FPT$PRECORD_V.BRK AND
     3966    10639    4                   S$CU$->B$U.ASYNCH&(~%U_RESET) AND
     3967    10640    4                   B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
     3968    10641    5                   DO;   /* Got interrupted and OK to interrupt */
     3969    10642    5                   GOTO ERR_INT;
     3970    10643    5                   END;  /* Got interrupted and OK to interrupt */
     3971    10644    4             END;  /* WHILE */
     3972    10645    3             END;  /* MOVE FORWARD */
     3973    10646    2          ELSE
     3974    10647    3             DO;   /* MOVE BACKWARD */
     3975    10648    3             CALL CURREC ALTRET(BOF);
     3976    10649    3             IF INDEX# = 0 THEN
     3977    10650    4                DO;   /* CHECK FOR DELETED KEY */
     3978    10651    4                IF NOT FM$KEYENT.D THEN
     3979    10652    5                   DO;   /* SKIP OVER DELETED KEY */
     3980    10653    5                   N=N+1;
     3981    10654    5                   F$DCB.ARS=F$DCB.ARS+1;
     3982    10655    5                   END;  /* SKIP OVER DELETED KEY */
     3983    10656    4                END;  /* CHECK FOR DELETED KEY */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:160  
     3984    10657    3             ELSE
     3985    10658    4                DO;   /* COUNT FIRST RECORD */
     3986    10659    4                N=N+1;
     3987    10660    4                F$DCB.ARS=F$DCB.ARS+1;
     3988    10661    4                END;  /* COUNT FIRST RECORD */
     3989    10662
     3990    10663    4             DO WHILE (N < 0);
     3991    10664    4                CALL PREVRECND ALTRET(BOF);
     3992    10665    4                N=N+1;
     3993    10666    4                F$DCB.ARS=F$DCB.ARS+1;
     3994    10667
     3995    10668    4                IF FPT$PRECORD_V.BRK AND
     3996    10669    4                   S$CU$->B$U.ASYNCH&(~%U_RESET) AND
     3997    10670    4                   B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
     3998    10671    5                   DO;   /* Got interrupted and OK to interrupt */
     3999    10672    5                   GOTO ERR_INT;
     4000    10673    5                   END;  /* Got interrupted and OK to interrupt */
     4001    10674    4             END;
     4002    10675    3             END;  /* MOVE BACKWARD */
     4003    10676    2          F$DCB.RPOS='1'B;
     4004    10677
     4005    10678    2          RETURN;
     4006    10679    2   EOF:   IF B$JIT.ERR.CODE ~= %E$EOF THEN
     4007    10680    2             ALTRETURN;
     4008    10681
     4009    10682    2          IF N = 0 THEN
     4010    10683    3             DO;   /* NO ERROR YET */
     4011    10684    3             B$JIT.ERR='0'B;
     4012    10685    3             SEG$=ADDR(NIL);
     4013    10686    3             KEY$=ADDR(NIL);
     4014    10687    3             RETURN;
     4015    10688    3             END;  /* NO ERROR YET */
     4016    10689    2          ELSE
     4017    10690    2             ALTRETURN;
     4018    10691
     4019    10692    2   BOF:   IF B$JIT.ERR.CODE ~= %E$BOF THEN
     4020    10693    2             ALTRETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:161  
     4021    10694
     4022    10695    2          IF FPT$PRECORD_V.KEYR THEN
     4023    10696    3             DO;   /* RETURN KEY */
     4024    10697    3             ERRTMP=BITBIN(B$JIT.ERR);
     4025    10698    3             CALL NXTRECND ALTRET(IGNORE);
     4026    10699    3             F$DCB.RPOS='1'B;
     4027    10700    3   IGNORE: ;
     4028    10701    3             B$JIT.ERR=BINBIT(ERRTMP, 36);
     4029    10702    3             IF (KEY$ = ADDR(NIL) AND INDEX# = 0) OR
     4030    10703    3                (SEG$ = ADDR(NIL) AND INDEX# > 0) THEN
     4031    10704    3                CALL ZAPKEY;
     4032    10705    3             ELSE
     4033    10706    3                CALL GETKEY ALTRET(ERR);
     4034    10707    3             END;  /* RETURN KEY */
     4035    10708
     4036    10709    2   ERR:   ALTRETURN;
     4037    10710    2   ERR_INT:  B$JIT.ERR=ERRPMMEINT;
     4038    10711    2          F$DCB.RPOS='1'B;
     4039    10712    2          ALTRETURN;
     4040    10713    2          END MOVEN;
     4041    10714               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:162  
     4042    10715        /*I*     NAME:     MOVERECN
     4043    10716                 PURPOSE:  To move the number of records specified by RECNUM
     4044    10717                 DESCRIPTION:
     4045    10718                      Since RECNUM can be specified by various PMMEs, the local
     4046    10719                 variable is set before calling this routine.  Just move forward
     4047    10720                 until we hit the end of this list of duplicates, or have move
     4048    10721                 the specified number of records.
     4049    10722        */
     4050    10723                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:163  
     4051    10724    1   MOVERECN: PROC ALTRET;
     4052    10725    2          DCL N SBIN;
     4053    10726        /* */
     4054    10727    2          IF INDEX# = 0 THEN
     4055    10728    2             RETURN;
     4056    10729
     4057    10730    2          N=RECNUM;
     4058    10731
     4059    10732    3          DO WHILE (N > 1);
     4060    10733    3             CALL NXTRECNM ALTRET(NOREC);
     4061    10734    3             N=N-1;
     4062    10735    3          END;  /* WHILE */
     4063    10736
     4064    10737    2          RETURN;
     4065    10738    2   NOREC: IF B$JIT.ERR.CODE = %E$KEYCHNG THEN
     4066    10739    2             B$JIT.ERR=ERRNOREC;
     4067    10740        /*E*   ERROR:   FMG-E$NOREC-2
     4068    10741               MESSAGE: No such record
     4069    10742               MESSAGE1: The specified record in this key does not exist.
     4070    10743        */
     4071    10744    2   ERR:   ALTRETURN;
     4072    10745    2          END MOVERECN;
     4073    10746               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:164  
     4074    10747        /*I*     NAME:     MOVETOB3
     4075    10748                 PURPOSE:  To move keys from buffer 1 to buffer 3
     4076    10749                 DESCRIPTION:
     4077    10750                      Set up some local values for buffer 3.  If for some reason
     4078    10751                 we got here without enough room in buffer 3 for this stuff, then
     4079    10752                 build a new flink.  Otherwise, move the stuff in buffer 3 back
     4080    10753                 to make room for the stuff from buffer 1.
     4081    10754
     4082    10755                      Now move the stuff from buffer 1 to the empty space in buffer
     4083    10756                 3.  If buffer 3 had a value for bound, then it will have to be
     4084    10757                 readjusted.  Make sure that we point to the place in the key table
     4085    10758                 where the bound used to be.  This will probably change later.
     4086    10759
     4087    10760                      Now, we will loop backwards in the key table from the end
     4088    10761                 of the table to where the start of the key table used to be in
     4089    10762                 buffer 3.  If the key is beyond word 511, and this occurs earlier
     4090    10763                 in the key table than it used to, then it becomes the new bound.
     4091    10764
     4092    10765                      When we moved keys from the end of buffer one to the
     4093    10766                 beginning of buffer 3, they move "backwards" in a sense.  TSIZE
     4094    10767                 is the number of words backwards that they moved.  We now
     4095    10768                 loop backwards through the key tables in buffers 1 and 3
     4096    10769                 adjusting values for the keys that got moved from buffer 1 to
     4097    10770                 buffer 3.  SIZE is now the new position in buffer 3 where the
     4098    10771                 keys are.  Again, if we find a bound that is less than what
     4099    10772                 we used to think it was, then we readjust it.
     4100    10773
     4101    10774                      Make sure that the bounds and key counts are all correct.
     4102    10775
     4103    10776                      If the bound in buffer 1 is now greater than the number of
     4104    10777                 keys there, that is because all of the keys beyond bound were
     4105    10778                 moved.
     4106    10779        */
     4107    10780                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:165  
     4108    10781    1   MOVETOB3: PROC ALTRET;
     4109    10782    2          DCL KEYCNT3 SBIN;
     4110    10783    2          DCL KTPTR3$ PTR;
     4111    10784    2          DCL BOUND3 SBIN;
     4112    10785    2          DCL P3$ PTR;
     4113    10786    2          DCL MKEYCNT SBIN;
     4114    10787    2          DCL P1$ PTR;
     4115    10788    2          DCL SIZE SBIN;
     4116    10789    2          DCL I SBIN;
     4117    10790    2          DCL J SBIN;
     4118    10791    2          DCL TSIZE SBIN;
     4119    10792    2          DCL CHARS CHAR(SIZE) BASED;
     4120    10793        /* */
     4121    10794
     4122    10795    2          KEYCNT3=FM$GRAN3.KEYCNT;
     4123    10796    2          KTPTR3$=PINCRW(BUF3$, FM$GRAN3.FCEX);
     4124    10797    2          BOUND3=KTPTR3$->FM$KEYTBL3(0);
     4125    10798
     4126    10799    2          P3$=PINCRW(KTPTR3$, SIZEW(FM$KEYTBL));
     4127    10800    2          MKEYCNT=KEYCNT-INDX+1;
     4128    10801
     4129    10802    2          IF MOVECNT > FM$GRAN3.AVAIL OR
     4130    10803    2             MKEYCNT+KEYCNT3 > 279 THEN
     4131    10804    3             DO;   /* NEED A NEW FLINK */
     4132    10805    3             CALL BLDFLINK ALTRET(ERR);
     4133    10806    3             BOUND3=SIZEC(FM$KEYTBL);
     4134    10807    3             KEYCNT3=0;
     4135    10808    3             KTPTR3$=PINCRW(BUF3$, BUF3$->FM$GRAN.FCEX);
     4136    10809    3             P3$=PINCRW(KTPTR3$, SIZEW(FM$KEYTBL));
     4137    10810    3             END;  /* NEED A NEW FLINK */
     4138    10811    2          ELSE
     4139    10812    3             DO;   /* MAKE SPACE */
     4140    10813    3             TSIZE=FM$GRAN3.NAVX-FM$GRAN3.FCEX-SIZEW(FM$KEYTBL);
     4141    10814    3             IF TSIZE > 0 THEN
     4142    10815    3                CALL FMR$SLIDE(P3$, MOVECNT, TSIZE);
     4143    10816    3             END;  /* MAKE SPACE */
     4144    10817
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:166  
     4145    10818    2          SIZE=MOVECNT*4;
     4146    10819    2          P1$=PINCRW(BUF$, FM$GRAN.NAVX-MOVECNT);
     4147    10820    2          P3$->CHARS=P1$->CHARS;
     4148    10821
     4149    10822    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL+MOVECNT;
     4150    10823    2          FM$GRAN.NAVX=FM$GRAN.NAVX-MOVECNT;
     4151    10824
     4152    10825    2          I=KEYCNT3;
     4153    10826    2          J=I+MKEYCNT;
     4154    10827    2          IF BOUND3 < SIZEC(FM$KEYTBL) THEN
     4155    10828    2             BOUND3=BOUND3+MKEYCNT;
     4156    10829
     4157    10830    3          DO WHILE (I > 0);
     4158    10831    3             TSIZE=KTPTR3$->FM$KEYTBL3(I)+MOVECNT;
     4159    10832    3             IF TSIZE > 511 AND BOUND3 > J THEN
     4160    10833    3                BOUND3=J;
     4161    10834    3             KTPTR3$->FM$KEYTBL3(J)=TSIZE;
     4162    10835    3             I=I-1;
     4163    10836    3             J=J-1;
     4164    10837    3          END;  /* WHILE */
     4165    10838
     4166    10839    2          I=MKEYCNT;
     4167    10840    2          J=KEYCNT;
     4168    10841    2          TSIZE=FM$GRAN3.FCEX+SIZEW(FM$KEYTBL)-FM$KEYTBL(J-I+1);
     4169    10842
     4170    10843    2          IF J-I+1 >= BOUND THEN
     4171    10844    2             TSIZE=TSIZE-512;
     4172    10845
     4173    10846    3          DO WHILE (I > 0);
     4174    10847    3             SIZE=FM$KEYTBL(J)+TSIZE;
     4175    10848    3             FM$KEYTBL(J)=0;
     4176    10849    3             IF J >= BOUND THEN
     4177    10850    3                SIZE=SIZE+512;
     4178    10851
     4179    10852    3             IF SIZE > 511 AND I < BOUND3 THEN
     4180    10853    3                BOUND3=I;
     4181    10854    3             KTPTR3$->FM$KEYTBL3(I)=SIZE;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:167  
     4182    10855    3             I=I-1;
     4183    10856    3             J=J-1;
     4184    10857    3          END;  /* WHILE */
     4185    10858
     4186    10859    2          KTPTR3$->FM$KEYTBL3(0)=BOUND3;
     4187    10860    2          KEYCNT=KEYCNT-MKEYCNT;
     4188    10861    2          FM$GRAN.KEYCNT=KEYCNT;
     4189    10862
     4190    10863    2          IF BOUND > KEYCNT THEN
     4191    10864    3             DO;   /* REST ARE GONE */
     4192    10865    3             BOUND=SIZEC(FM$KEYTBL);
     4193    10866    3             FM$KEYTBL(0)=BOUND;
     4194    10867    3             END;  /* REST ARE GONE */
     4195    10868
     4196    10869    2          FM$GRAN3.AVAIL=FM$GRAN3.AVAIL-MOVECNT;
     4197    10870    2          FM$GRAN3.NAVX=FM$GRAN3.NAVX+MOVECNT;
     4198    10871    2          KEYCNT3=KEYCNT3+MKEYCNT;
     4199    10872    2          FM$GRAN3.KEYCNT=KEYCNT3;
     4200    10873    2          F$DCB.BFR.BUFUP(1)='1'B;
     4201    10874    2          F$DCB.BFR.BUFUP(3)='1'B;
     4202    10875
     4203    10876    2          RETURN;
     4204    10877    2   ERR:   ALTRETURN;
     4205    10878    2          END MOVETOB3;
     4206    10879               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:168  
     4207    10880        /*I*     NAME:     MOVKEYS
     4208    10881                 PURPOSE:  To move some keys back in the FIT
     4209    10882                 DESCRIPTION:
     4210    10883                      When some information is added to the FIT, then we may have
     4211    10884                 to move some keys back to make room for it.  First, if this is
     4212    10885                 a one granule keyed file, then expand it to 2 granules.
     4213    10886
     4214    10887                      If there isn't enough room here, then check the flink.
     4215    10888                 If there isn't one, then make one.
     4216    10889
     4217    10890                      We will loop backwards through the key table, until we find
     4218    10891                 a spot with enough room for the keys.  If there isn't enough
     4219    10892                 room, even if we moved all of the keys, then altreturn.  Otherwise,
     4220    10893                 move the necessary keys to buffer 3.
     4221    10894
     4222    10895                      Now move the keys that are left, back.  Loop through the
     4223    10896                 key table adding the amount of space moved to the key table
     4224    10897                 enties.  BOUND will probably have gotten smaller.
     4225    10898        */
     4226    10899                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:169  
     4227    10900    1   MOVKEYS: PROC ALTRET;
     4228    10901    2          DCL LCDA UBIN;
     4229    10902    2          DCL I SBIN;
     4230    10903    2          DCL N SBIN;
     4231    10904    2          DCL P$ PTR;
     4232    10905    2          DCL DONE SBIN;
     4233    10906        /* */
     4234    10907    2          IF NUMWRDS > FM$GRAN.AVAIL THEN
     4235    10908    3             DO;   /* MOVE KEYS */
     4236    10909    3             BUF3$=ADDR(NIL);
     4237    10910
     4238    10911    3             IF FM$GRAN.FLINK = 0 THEN
     4239    10912    3                CALL BLDFLINK ALTRET(ERR);
     4240    10913    3             ELSE
     4241    10914    4                DO;   /* ALREADY HAVE FLINK */
     4242    10915    4                DA=FM$GRAN.FLINK;
     4243    10916    4                LCDA=F$DCB.BFR.DA(1);
     4244    10917    4                F$DCB.LVL=0;
     4245    10918    4                CALL FMD$REDBUF(BUF3$, 3, DA,, LCDA) ALTRET(ERR);
     4246    10919
     4247    10920    4                IF NUMWRDS > FM$GRAN.AVAIL+FM$GRAN3.AVAIL THEN
     4248    10921    4                   CALL BLDFLINK ALTRET(ERR);
     4249    10922    4                END;  /* ALREADY HAVE FLINK */
     4250    10923
     4251    10924    3             MOVECNT=0;
     4252    10925    3             INDX=KEYCNT;
     4253    10926
     4254    10927    3             DONE=0;
     4255    10928    4             DO WHILE (INDX ~= 0 AND DONE = 0);
     4256    10929    4                IF INDX < BOUND THEN
     4257    10930    4                   MOVECNT=FM$GRAN.NAVX-FM$KEYTBL(INDX);
     4258    10931    4                ELSE
     4259    10932    4                   MOVECNT=FM$GRAN.NAVX-FM$KEYTBL(INDX)-512;
     4260    10933    4                IF MOVECNT+FM$GRAN.AVAIL >= NUMWRDS THEN
     4261    10934    4                   DONE=1;
     4262    10935    4                ELSE
     4263    10936    4                   INDX=INDX-1;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:170  
     4264    10937    4             END;  /* WHILE */
     4265    10938
     4266    10939    3             IF DONE = 0 THEN
     4267    10940    4                DO;   /* NOT ENUF ROOM */
     4268    10941    4                B$JIT.ERR='0'B;
     4269    10942    4                CALL FMD$FLSHBUF(1);
     4270    10943    4                CALL FMD$FLSHBUF(3);
     4271    10944    4                CALL FMD$FLSHBUF(4);
     4272    10945    4                ALTRETURN;
     4273    10946    4                END;  /* NOT ENUF ROOM */
     4274    10947
     4275    10948    3             CALL MOVETOB3 ALTRET(ERR);
     4276    10949    3             CALL FMD$FLSHBUF(3);
     4277    10950    3             END;  /* MOVE KEYS */
     4278    10951
     4279    10952    2          P$=PINCRW(BUF$, FM$GRAN.FCEX);
     4280    10953    2          CALL FMR$SLIDE(P$, NUMWRDS, FM$GRAN.NAVX-FM$GRAN.FCEX);
     4281    10954    2          FM$GRAN.FCEX=FM$GRAN.FCEX+NUMWRDS;
     4282    10955    2          FM$GRAN.NAVX=FM$GRAN.NAVX+NUMWRDS;
     4283    10956    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL-NUMWRDS;
     4284    10957    2          F$DCB.MOVED=NUMWRDS;
     4285    10958    2          KTPTR$=PINCRW(KTPTR$, NUMWRDS);
     4286    10959
     4287    10960    3          DO I=1 TO KEYCNT;
     4288    10961    3             N=FM$KEYTBL(I)+NUMWRDS;
     4289    10962    3             IF N > 511 AND I < BOUND THEN
     4290    10963    3                BOUND=I;
     4291    10964    3             FM$KEYTBL(I)=N;
     4292    10965    3          END;  /* DO I */
     4293    10966
     4294    10967    2          FM$KEYTBL(0)=BOUND;
     4295    10968    2          F$DCB.BFR.BUFUP(1)='1'B;
     4296    10969    2          RETURN;
     4297    10970    2   ERR:   CALL FMD$FLSHBUF(1);
     4298    10971    2          CALL FMD$FLSHBUF(3);
     4299    10972    2          CALL FMD$FLSHBUF(4);
     4300    10973    2          ALTRETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:171  
     4301    10974    2          END MOVKEYS;
     4302    10975               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:172  
     4303    10976        /*I*     NAME:     NEWKEY
     4304    10977                 PURPOSE:  To add a new key to a file
     4305    10978                 DESCRIPTION:
     4306    10979                      If this file has alternate indexes, then we may have to
     4307    10980                 check for duplicates.  If any index specifies unique, then we
     4308    10981                 try to find the key the user specified.  If we find it, then
     4309    10982                 this is an error.  If the index changed, then restore it to
     4310    10983                 the primary index.
     4311    10984
     4312    10985                      Figure out how many segments we need, then add the key.
     4313    10986        */
     4314    10987                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:173  
     4315    10988    1   NEWKEY: PROC ALTRET;
     4316    10989    2          DCL I UBIN;
     4317    10990    2          DCL NUMENTS UBIN;
     4318    10991    2          DCL UNIQUE BIT(1) ALIGNED;
     4319    10992        /* */
     4320    10993    2          IF ALTKEY$ ~= ADDR(NIL) THEN
     4321    10994    3             DO;   /* CHECK ALT KEYS */
     4322    10995
     4323    10996    3             IF ORG=%IREL# THEN
     4324    10997    3                NUMENTS=IRKEYS.NKEYS;
     4325    10998    3             ELSE NUMENTS=ALTKEYS.NUMENTS;
     4326    10999
     4327    11000    4             DO I=2 TO NUMENTS;
     4328    11001
     4329    11002    4                IF ORG=%IREL# THEN
     4330    11003    4                   UNIQUE=IRKEYS.K.UNIQUE(I-1);
     4331    11004    4                ELSE UNIQUE=ALTKEYS.K.UNIQUE(I-1);
     4332    11005
     4333    11006    4                IF UNIQUE THEN
     4334    11007    5                   DO;   /* Shouldn't have duplicate */
     4335    11008    5                   INDEX#=I;
     4336    11009    5                   CALL SETINDEX ALTRET(ERR);
     4337    11010    5                   KEYIN$=PINCRC(B$PS2$, F$DCB.KEYX);
     4338    11011    6                   CALL FINDKEY WHENRETURN DO;
     4339    11012    6                      B$JIT.ERR=ERRDUPKEY;
     4340    11013    6                      ALTRETURN;
     4341    11014    6                      END;
     4342    11015    6                   WHENALTRETURN DO;
     4343    11016    6                      IF B$JIT.ERR.CODE ~= %E$NOKEY THEN
     4344    11017    6                         GOTO ERR;
     4345    11018    6                      B$JIT.ERR='0'B;
     4346    11019    6                      END;
     4347    11020    5                   END;  /* Shouldn't have duplicate */
     4348    11021
     4349    11022    4             END;  /* DO I */
     4350    11023
     4351    11024    3             IF INDEX# ~= 0 THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:174  
     4352    11025    4                DO;   /* SET INDEX BACK TO 1 */
     4353    11026    4                INDEX#=1;
     4354    11027    4                CALL SETINDEX ALTRET(ERR);
     4355    11028    4                CALL RESTOREPOS ALTRET(ERR);
     4356    11029    4                SEG$=PINCRW(BUF$, SEGX);
     4357    11030    4                CRECX=F$DCB.CRECX;
     4358    11031    4                KEYIN$=PINCRC(B$PS2$, F$DCB.KEYX);
     4359    11032    4                END;  /* SET INDEX BACK TO 1 */
     4360    11033
     4361    11034    3             END;  /* CHECK ALTKEYS */
     4362    11035
     4363    11036    2          DBUF$=ADDR(NIL);
     4364    11037    2          FAK=1;
     4365    11038    2          CALL CALCSEG ALTRET(ERR);
     4366    11039    2          CALL ADDKEY ALTRET(ERR);
     4367    11040
     4368    11041    2          RETURN;
     4369    11042    2   ERR:   ALTRETURN;
     4370    11043    2          END NEWKEY;
     4371    11044               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:175  
     4372    11045        /*I*     NAME:     NEWSEG
     4373    11046                 PURPOSE:  To add a new segment to a key
     4374    11047                 DESCRIPTION:
     4375    11048                      Calculate the number of segments we need, then call
     4376    11049                 ADDSEG to add them.
     4377    11050
     4378    11051                      If this file has alternate indexes, then we'll need to
     4379    11052                 add segments to those too.  Loop through all of the alternate
     4380    11053                 indexes.  If the index is unique, or this isn't load mode,
     4381    11054                 then this index needs to be kept up to date.  Find the key
     4382    11055                 that we are adding to.  Set ANEWSEG to %YES.  This means
     4383    11056                 that we will be adding a new segment, possibly to a duplicate
     4384    11057                 record in the middle of a list of duplicates.  This is
     4385    11058                 different from the usual segment addition, which always
     4386    11059                 adds to the end of the list.
     4387    11060        */
     4388    11061                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:176  
     4389    11062    1   NEWSEG: PROC ALTRET;
     4390    11063    2          DCL I SBIN;
     4391    11064    2          DCL NUMENTS UBIN;
     4392    11065    2          DCL UNIQUE BIT(1);
     4393    11066        /* */
     4394    11067    2          CALL CALCSEG ALTRET(ERR);
     4395    11068    2          CALL ADDSEG ALTRET(ERR);
     4396    11069
     4397    11070    2          IF ALTKEY$ ~= ADDR(NIL) THEN
     4398    11071    3             DO;   /* UPDATE ALTERNATE INDEXES */
     4399    11072    3             IF ORG = %INDEXED# THEN
     4400    11073    3                NUMENTS=ALTKEYS.NUMENTS;
     4401    11074    3             ELSE
     4402    11075    3                NUMENTS=IRKEYS.NKEYS;
     4403    11076
     4404    11077    4             DO I=2 TO NUMENTS;
     4405    11078    4                IF ORG = %INDEXED# THEN
     4406    11079    4                   UNIQUE=ALTKEYS.K.UNIQUE(I-1);
     4407    11080    4                ELSE
     4408    11081    4                   UNIQUE=IRKEYS.K.UNIQUE(I-1);
     4409    11082
     4410    11083    4                IF (NOT F$DCB.LDFLG) OR
     4411    11084    4                   (UNIQUE AND NOT F$DCB.UNIQUEBLD) THEN
     4412    11085    5                   DO;   /* ADD SEG NOW */
     4413    11086    5                   INDEX#=I;
     4414    11087    5                   CALL SETINDEX ALTRET(ERR);
     4415    11088
     4416    11089    5                   KEYIN$=PINCRC(B$PS2$, F$DCB.KEYX);
     4417    11090    5                   COMFLG=%USEREC;
     4418    11091    5                   CALL FINDKEY ALTRET(FI);
     4419    11092
     4420    11093    5                   ANEWSEG=%YESS;
     4421    11094    5                   CALL ADDSEG ALTRET(ERR);
     4422    11095    5                   ANEWSEG=%NOO;
     4423    11096    5                   END;  /* ADD SEG NOW */
     4424    11097    4                ELSE
     4425    11098    4                   FM$CFU.ALTBLD='1'B;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:177  
     4426    11099    4             END;  /* DO I */
     4427    11100
     4428    11101    3             INDEX#=1;
     4429    11102    3             CALL SETINDEX ALTRET(ERR);
     4430    11103    3             CALL RESTOREPOS ALTRET(ERR);
     4431    11104    3             SEG$=PINCRW(BUF$, SEGX);
     4432    11105    3             END;  /* UPDATE ALTERNATE INDEXES */
     4433    11106
     4434    11107    2          RETURN;
     4435    11108    2   FI:    DA=F$DCB.BFR.DA(1);
     4436    11109    2          CALL FMB$LOGERR(%E$FREC, 75, 8, DA,,,,, INDEX#);
     4437    11110    2   ERR:   ALTRETURN;
     4438    11111    2          END NEWSEG;
     4439    11112               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:178  
     4440    11113        /*I*     NAME:     NXTKEY
     4441    11114                 PURPOSE:  To position to the next key in a file
     4442    11115                 DESCRIPTION:
     4443    11116                      If RPOS is set, then that means that we are already pointed
     4444    11117                 to the next key.  If we are positioned beyond the end of the
     4445    11118                 file (this may occur in shared files with multiple updaters),
     4446    11119                 then go forward until we find a key.
     4447    11120
     4448    11121                      If RPOS isn't set, then increment the record counter.  Again,
     4449    11122                 make sure we aren't positioned beyond the end of the file.
     4450    11123        */
     4451    11124                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:179  
     4452    11125    1   NXTKEY: PROC ALTRET;
     4453    11126    2          DCL NOMORE SBIN;
     4454    11127        /* */
     4455    11128    2          NOMORE=0;
     4456    11129    2          GOTO COMMON;
     4457    11130        /* */
     4458    11131    2   NXTKEYNM: ENTRY ALTRET;
     4459    11132    2          NOMORE=1;
     4460    11133
     4461    11134    2   COMMON: ;
     4462    11135        /* */
     4463    11136    2          IF F$DCB.RPOS THEN
     4464    11137    3             DO;   /* SHOULD BE AT KEY */
     4465    11138    3             IF CRECX > KEYCNT THEN
     4466    11139    4                DO;    /* FIRST RECORD OF NEXT GRAN */
     4467    11140    5                DO UNTIL (KEYCNT > 0);
     4468    11141    5                   IF NOMORE = 1 THEN
     4469    11142    5                      ALTRETURN;
     4470    11143    5                   CALL FLINK ALTRET(ERR);
     4471    11144    5                END;
     4472    11145    4                CRECX=1;
     4473    11146    4                END;   /* FIRST RECORD OF NEXT GRAN */
     4474    11147    3             F$DCB.RPOS='0'B;
     4475    11148    3             END;  /* SHOULD BE AT KEY */
     4476    11149    2          ELSE
     4477    11150    3             DO;   /* NEXT KEY PLEASE */
     4478    11151    3             IF CRECX >= KEYCNT THEN
     4479    11152    4                DO;   /* NEXT GRANULE */
     4480    11153    5                DO UNTIL (KEYCNT > 0);
     4481    11154    5                   IF NOMORE = 1 THEN
     4482    11155    5                      ALTRETURN;
     4483    11156    5                   CALL FLINK ALTRET(ERR);
     4484    11157    5                END;
     4485    11158    4                CRECX=1;
     4486    11159    4                END;  /* NEXT GRANULE */
     4487    11160    3             ELSE
     4488    11161    3                CRECX=CRECX+1;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:180  
     4489    11162    3             END;  /* NEXT KEY PLEASE */
     4490    11163
     4491    11164    2          F$DCB.CRECX=CRECX;
     4492    11165    2          CALL SETPTRS;
     4493    11166    2          RETURN;
     4494    11167    2   ERR:   ALTRETURN;
     4495    11168    2          END NXTKEY;
     4496    11169               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:181  
     4497    11170        /*I*     NAME:     NXTREC
     4498    11171                 PURPOSE:  To position to the next record in a file
     4499    11172                 DESCRIPTION:
     4500    11173                      An option the user can specify is "KEYCHNG".  This means
     4501    11174                 that we altreturn if we hit the end of a list of duplicates.
     4502    11175                 If KEYCHNG is specified, and we are at the beginning of a list
     4503    11176                 of duplicates, then report an error.  Otherwise, we just get
     4504    11177                 the next key.
     4505    11178
     4506    11179                      If RPOS is set, then we are already positioned to the next
     4507    11180                 record.  Otherwise, loop until we hit the end of a list of
     4508    11181                 dups, or we find the beginning of another duplicate key.
     4509    11182                 Again, if KEYCHNG is specified, we report an error, if not, we
     4510    11183                 get the next key.
     4511    11184        */
     4512    11185                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:182  
     4513    11186    1   NXTREC: PROC ALTRET;
     4514    11187    2          DCL KEYCHNG SBIN;
     4515    11188        /* */
     4516    11189    2          KEYCHNG=0;
     4517    11190    2          GOTO NXTR;
     4518    11191
     4519    11192    2   NXTRECNM: ENTRY ALTRET;
     4520    11193    2          KEYCHNG=1;
     4521    11194
     4522    11195    2   NXTR:  KEY$=ADDR(NIL);
     4523    11196    2          IF INDEX# = 0 OR SEGX = 0 THEN
     4524    11197    2             IF KEYCHNG = 1 THEN
     4525    11198    3                DO;   /* KEY CHANGED */
     4526    11199    3                B$JIT.ERR=ERRKEYCHNG;
     4527    11200        /*E*   ERROR:   FMG-E$KEYCHNG-2
     4528    11201               MESSAGE: There are no more records of the same key.
     4529    11202        */
     4530    11203    3                IF INDEX# > 0 THEN
     4531    11204    4                   DO;   /* RESET SEGX */
     4532    11205    4                   SEGX=0;
     4533    11206    4                   F$DCB.SEGX=0;
     4534    11207    4                   END;  /* RESET SEGX */
     4535    11208    3                ALTRETURN;
     4536    11209    3                END;  /* KEY CHANGED */
     4537    11210    2             ELSE
     4538    11211    3                DO;   /* NEXT KEY */
     4539    11212    3                CALL NXTKEY ALTRET(ERR);
     4540    11213    3                RETURN;
     4541    11214    3                END;  /* NEXT KEY */
     4542    11215
     4543    11216    2          IF F$DCB.RPOS THEN
     4544    11217    2             IF CRECX > KEYCNT THEN
     4545    11218    3                DO;   /* FIRST RECORD OF NEXT GRANULE */
     4546    11219    3                SEGX=FM$GRAN.NAVX;
     4547    11220    4   LOOP1:       DO WHILE('1'B);
     4548    11221    4                   CALL NXTSEG ALTRET(ERR);
     4549    11222    4                   IF SEG$ ~= ADDR(NIL) THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:183  
     4550    11223    4                      IF FM$MISEG.FAK THEN
     4551    11224    4                         EXIT LOOP1;
     4552    11225    4                      ELSE;
     4553    11226    4                   ELSE
     4554    11227    4                      EXIT LOOP1;
     4555    11228    4                END;
     4556    11229    3                F$DCB.RPOS='0'B;
     4557    11230    3                END;  /* FIRST RECORD OF NEXT GRANULE */
     4558    11231    2             ELSE
     4559    11232    3                DO;   /* ALREADY THERE */
     4560    11233    3                F$DCB.RPOS='0'B;
     4561    11234    3                SEGX=F$DCB.SEGX;
     4562    11235    3                SEG$=PINCRW(BUF$, SEGX);
     4563    11236    3                END;  /* ALREADY THERE */
     4564    11237    2          ELSE
     4565    11238    3             DO;   /* NEXT RECORD */
     4566    11239    4   LOOP:     DO WHILE('1'B);
     4567    11240    4                CALL NXTSEG ALTRET(ERR);
     4568    11241    4                IF SEG$ ~= ADDR(NIL) THEN
     4569    11242    4                   IF FM$MISEG.FAK THEN
     4570    11243    4                      EXIT LOOP;
     4571    11244    4                   ELSE;
     4572    11245    4                ELSE
     4573    11246    4                   EXIT LOOP;
     4574    11247    4             END;  /* WHILE */
     4575    11248
     4576    11249    3             IF SEG$ = ADDR(NIL) THEN
     4577    11250    3                IF KEYCHNG = 1 THEN
     4578    11251    4                   DO;   /* KEY CHANGED */
     4579    11252    4                   B$JIT.ERR=ERRKEYCHNG;
     4580    11253    4                   SEGX=0;
     4581    11254    4                   F$DCB.SEGX=0;
     4582    11255    4                   ALTRETURN;
     4583    11256    4                   END;  /* KEY CHANGED */
     4584    11257    3                ELSE
     4585    11258    4                   DO;   /* NEXT KEY */
     4586    11259    4                   CALL NXTKEY ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:184  
     4587    11260    4                   END;  /* NEXT KEY */
     4588    11261    3             END;  /* NEXT RECORD */
     4589    11262
     4590    11263    2          RETURN;
     4591    11264    2   ERR:   ALTRETURN;
     4592    11265    2          END NXTREC;
     4593    11266               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:185  
     4594    11267        /*I*     NAME:     NXTRECND
     4595    11268                 PURPOSE:  To get the next non-deleted record
     4596    11269                 DESCRIPTION:
     4597    11270                      If this is the primary index, loop until we find a record
     4598    11271                 that isn't deleted, or hit EOF.  If this is a secondary index,
     4599    11272                 then there is no such thing as records that are marked deleted,
     4600    11273                 when a record is deleted, it goes away.
     4601    11274        */
     4602    11275    1   NXTRECND: PROC ALTRET;
     4603    11276        /* */
     4604    11277    2          IF INDEX# = 0 THEN
     4605    11278    3             DO;   /* PRIMARY KEY */
     4606    11279    4             DO UNTIL (NOT FM$KEYENT.D);
     4607    11280    4                CALL NXTKEY ALTRET(ERR);
     4608    11281    4             END;
     4609    11282    3             END;  /* PRIMARY KEY */
     4610    11283    2          ELSE
     4611    11284    3             DO;   /* NEXT RECORD */
     4612    11285    3             CALL NXTREC ALTRET(ERR);
     4613    11286    3             END;  /* NEXT RECORD */
     4614    11287
     4615    11288    2          RETURN;
     4616    11289    2   ERR:   ALTRETURN;
     4617    11290    2          END NXTRECND;
     4618    11291               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:186  
     4619    11292        /*I*     NAME:     NXTSEG
     4620    11293                 PURPOSE:  To get the next segment
     4621    11294                 DESCRIPTION:
     4622    11295                      Increment the segment pointer, if it points past the end
     4623    11296                 of the granule, then loop until we find a granule with something
     4624    11297                 in it.
     4625    11298
     4626    11299                      LASTSEG will be the last segment for a key.  If we point
     4627    11300                 past the list of segments for a key, then there is nothing
     4628    11301                 to return.  Otherwise, set up a pointer to the next segment.
     4629    11302        */
     4630    11303                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:187  
     4631    11304    1   NXTSEG: PROC ALTRET;
     4632    11305    2          DCL ENDGRAN SBIN;
     4633    11306    2          DCL LASTSEG SBIN;
     4634    11307        /* */
     4635    11308    2          ENDGRAN=FM$GRAN.NAVX;
     4636    11309
     4637    11310    2          SEGX=SEGX+2;
     4638    11311    3          DO WHILE (SEGX >= ENDGRAN);
     4639    11312    3             CALL FLINK ALTRET(ERR);
     4640    11313    3             CRECX=0;
     4641    11314    3             F$DCB.CRECX=0;
     4642    11315    3             SEGX=FM$GRAN.FCEX+SIZEW(FM$KEYTBL);
     4643    11316    3             ENDGRAN=FM$GRAN.NAVX;
     4644    11317    3          END;  /* WHILE */
     4645    11318
     4646    11319    2          IF CRECX < KEYCNT THEN
     4647    11320    3             DO;   /* LAST SEG IN KEY */
     4648    11321    3             IF CRECX+1 < BOUND THEN
     4649    11322    3                LASTSEG=FM$KEYTBL(CRECX+1);
     4650    11323    3             ELSE
     4651    11324    3                LASTSEG=FM$KEYTBL(CRECX+1)+512;
     4652    11325    3             END;  /* LAST SEG IN KEY */
     4653    11326    2          ELSE
     4654    11327    2             LASTSEG=ENDGRAN;
     4655    11328
     4656    11329    2          IF SEGX >= LASTSEG THEN
     4657    11330    3             DO;   /* NO MORE */
     4658    11331    3             SEGX=0;
     4659    11332    3             SEG$=ADDR(NIL);
     4660    11333    3             END;  /* NO MORE */
     4661    11334    2          ELSE
     4662    11335    2             SEG$=PINCRW(BUF$, SEGX);
     4663    11336
     4664    11337    2          F$DCB.SEGX=SEGX;
     4665    11338
     4666    11339    2          RETURN;
     4667    11340    2   ERR:   IF B$JIT.ERR.CODE = %E$EOF THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:188  
     4668    11341    3             DO;   /* END OF LINE */
     4669    11342    3             SEGX=0;
     4670    11343    3             F$DCB.SEGX=0;
     4671    11344    3             SEG$=ADDR(NIL);
     4672    11345    3             B$JIT.ERR='0'B;
     4673    11346    3             RETURN;
     4674    11347    3             END;  /* END OF LINE */
     4675    11348    2          ALTRETURN;
     4676    11349    2          END NXTSEG;
     4677    11350               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:189  
     4678    11351        /*I*     NAME:     PFIL
     4679    11352                 PURPOSE:  To handle the M$PFIL pmme
     4680    11353                 DESCRIPTION:
     4681    11354                      If BOF was specified, position to the beginning of the file,
     4682    11355                 otherwise, position to the end of the file.
     4683    11356        */
     4684    11357    1   PFIL:  PROC ALTRET;
     4685    11358        /* */
     4686    11359    2          IF FPT$PFIL_V.BOF THEN
     4687    11360    2             CALL PTOBOF ALTRET(ERR);
     4688    11361    2          ELSE
     4689    11362    2             CALL PTOEOF ALTRET(ERR);
     4690    11363
     4691    11364    2          RETURN;
     4692    11365    2   ERR:   ALTRETURN;
     4693    11366    2          END PFIL;
     4694    11367               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:190  
     4695    11368        /*I*     NAME:     PREC
     4696    11369                 PURPOSE:  To handle the M$PRECORD pmme
     4697    11370                 DESCRIPTION:
     4698    11371                      F$DCB.ARS will be the number of records forward positioned
     4699    11372                 if the N option was specified.
     4700    11373
     4701    11374                      If the user specified BOF or EOF, then PFIL in the
     4702    11375                 appropriate direction.  If either is true, ignore KEYS, IDS,
     4703    11376                 and RECNUM since the PFIL operation prevents them from being
     4704    11377                 meaningful.  (BOF and EOF are especially nice when used on an
     4705    11378                 alternate index of a shared IREL file in order to obtain the
     4706    11379                 first or last existing key on the index. This can also be
     4707    11380                 done by PRECORDing with the minimum or maximum possible key.
     4708    11381                 But, for IREL files, such keys can be a real pain to initialize.)
     4709    11382
     4710    11383                      If neither BOF or EOF was specified, then check the
     4711    11384                 following.
     4712    11385
     4713    11386                      If the user specified an ID, but not a key, then he wants
     4714    11387                 to position by ID only.
     4715    11388
     4716    11389                      If a key was specified, then, if it was an irel file, check
     4717    11390                 out the key first for illegal fields.  Then try to find the key.
     4718    11391                 If the key was found, and an ID or RECNUM was specified, then
     4719    11392                 position again.
     4720    11393
     4721    11394                      Regardless of the other options specified, call MOVEN to
     4722    11395                 move the number of records specified by the N option.
     4723    11396
     4724    11397                      Next, return any information the user wants back, key
     4725    11398                 and/or ID.  If the user hit break while we were positioning
     4726    11399                 by N, the key and/or ID returned will reflect the record
     4727    11400                 positioned to when we stopped.
     4728    11401
     4729    11402                      Leaving this routine, RPOS will be set.  This means that we
     4730    11403                 are actually positioned to the "next" record.  This
     4731    11404                 is done because when the user does an M$PRECORD to a location,
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:191  
     4732    11405                 he actually wants to be positioned such that the next M$READ will
     4733    11406                 read from that location.
     4734    11407
     4735    11408                      If the key didn't exist, and an N was specified, then try
     4736    11409                 to move the number of records specified.  Otherwise, position
     4737    11410                 to the next non-deleted record.
     4738    11411        */
     4739    11412                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:192  
     4740    11413    1   PREC:  PROC ALTRET;
     4741    11414    2          DCL KLB SBIN;
     4742    11415    2          DCL I SBIN;
     4743    11416    2          DCL SAVE_ERR BIT(36) ALIGNED;
     4744    11417        /* */
     4745    11418    2          F$DCB.ARS=0;
     4746    11419
     4747    11420    2          IF FPT$PRECORD_V.BOF OR FPT$PRECORD_V.EOF THEN
     4748    11421    3             DO;  /* PFIL accordingly */
     4749    11422    3             IF FPT$PRECORD_V.BOF THEN
     4750    11423    3                CALL PTOBOF ALTRET(ERR1);
     4751    11424    3             ELSE CALL PTOEOF ALTRET(ERR1);
     4752    11425    3             CALL RESTOREPOS ALTRET(ERR1);
     4753    11426    3             END; /* PFIL accordingly */
     4754    11427    2          ELSE
     4755    11428    3             DO;  /* Check for KEYS/IDS/RECNUM */
     4756    11429    3             IF FPT$PRECORD_V.IDS THEN
     4757    11430    4                DO;   /* CHECK SIZE OF ID */
     4758    11431    4                CALL HFF$DSIZ(B$PS2$, I);
     4759    11432    4                IF I < 8 THEN
     4760    11433    5                   DO;   /* TOO SMALL */
     4761    11434    5                   B$JIT.ERR=ERRIDSMALL;
     4762    11435    5                   ALTRETURN;
     4763    11436    5                   END;  /* TOO SMALL */
     4764    11437    4                END;  /* CHECK SIZE OF ID */
     4765    11438
     4766    11439    3             IF FPT$PRECORD_V.IDS AND (NOT FPT$PRECORD_V.KEYS) THEN
     4767    11440    4                DO;   /* Position by ID only */
     4768    11441    4                IF ORG ~= %INDEXED# AND ORG ~= %IREL# THEN
     4769    11442    5                   DO;  /* Can't position with ID only */
     4770    11443    5                   B$JIT.ERR=ERRIDONLY;
     4771    11444    5                   ALTRETURN;
     4772    11445    5                   END; /* Can't position with ID only */
     4773    11446        /*E*   ERROR:    FMG-E$IDONLY-2
     4774    11447               MESSAGE:  Cannot read or position in file% %FN% with ID but no
     4775    11448                         key since ORG is not INDEXED or IREL
     4776    11449        */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:193  
     4777    11450    4                IDPTR$=B$PS2$;
     4778    11451    5                CALL FINDIDO WHENALTRETURN DO;
     4779    11452    5                   IF B$JIT.ERR.CODE = %E$BADID THEN
     4780    11453    5                      GOTO ERR1;
     4781    11454    5                   GOTO NOKEY;
     4782    11455    5                   END;
     4783    11456    4                F$DCB.RPOS='1'B;
     4784    11457    4                END;  /* Position by ID only */
     4785    11458
     4786    11459    3             IF FPT$PRECORD_V.KEYS THEN
     4787    11460    4                DO;   /* POSITION TO KEY */
     4788    11461    4                IF ORG = %IREL# THEN
     4789    11462    4                   CALL FMD$CHKFIELD(B$PS1$, %FMD_CHKTYP_KEY) ALTRET(ERR);
     4790    11463    4                CALL SETKEY(B$PS1$) ALTRET(ERR);
     4791    11464    4                COMFLG=%KEY;
     4792    11465    5                CALL FINDKEY WHENALTRETURN DO;
     4793    11466    5                   IF NOT FPT$PRECORD_V.NEXTKEY OR B$JIT.ERR.CODE ~= %E$NOKEY THEN
     4794    11467    5                      GOTO NOKEY;
     4795    11468    5                   END;
     4796    11469    4                IF FPT$PRECORD_V.NEXTKEY THEN
     4797    11470    4                   CALL NXTRECND ALTRET(NOKEY);
     4798    11471    4                IF FM$KEYENT.D THEN
     4799    11472    4                   GOTO NOKEY1;
     4800    11473
     4801    11474
     4802    11475    4                IF FPT$PRECORD_V.IDS THEN
     4803    11476    5                   DO;   /* FIND ID */
     4804    11477    5                   IDPTR$=B$PS2$;
     4805    11478    5                   CALL FINDID ALTRET(NOKEY);
     4806    11479    5                   END;  /* FIND ID */
     4807    11480    4                ELSE
     4808    11481    4                   IF FPT$PRECORD_V.RECNUM > 0 THEN
     4809    11482    5                      DO;
     4810    11483    5                      RECNUM=FPT$PRECORD_V.RECNUM;
     4811    11484    5                      CALL MOVERECN ALTRET(ERR);
     4812    11485    5                      END;
     4813    11486    4                F$DCB.RPOS='1'B;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:194  
     4814    11487    4                END;
     4815    11488    3             END; /* Check for KEYS/IDS/RECNUM */
     4816    11489
     4817    11490
     4818    11491    2   PRECN: CALL MOVEN WHENALTRETURN
     4819    11492    3             DO;   /* CHECK FOR INTERRUPT */
     4820    11493    3             IF B$JIT.ERR.CODE = %E$PMMEINT THEN
     4821    11494    3                GOTO PMMEINT;
     4822    11495    3             ELSE
     4823    11496    3                GOTO ERR1;
     4824    11497    3             END;  /* CHECK FOR INTERRUPT */
     4825    11498
     4826    11499    2          B$JIT.ERR='0'B;
     4827    11500
     4828    11501    2          IF FPT$PRECORD_V.KEYR THEN
     4829    11502    2             IF KEY$ ~= ADDR(NIL) OR
     4830    11503    2                (INDEX# > 0 AND SEG$ ~= ADDR(NIL)) THEN
     4831    11504    2                CALL GETKEY ALTRET(ERR);
     4832    11505    2             ELSE
     4833    11506    2                CALL ZAPKEY;
     4834    11507
     4835    11508    2          IF FPT$PRECORD_V.ID OR FPT$PRECORD_V.IDALL THEN
     4836    11509    2             CALL GETIDP ALTRET(ERR1);
     4837    11510
     4838    11511    2          IF F$DCB.SHARED THEN
     4839    11512    2             CALL SETID;
     4840    11513
     4841    11514    2          RETURN;
     4842    11515
     4843    11516    2   NOKEY: IF B$JIT.ERR.CODE = %E$NOKEY THEN
     4844    11517    3             DO;   /* NO KEY */
     4845    11518    3   NOKEY1:   B$JIT.ERR=ERRNOKEY;
     4846    11519    3             F$DCB.RPOS='1'B;
     4847    11520    3             IF FPT$PRECORD_V.N ~= 0 THEN
     4848    11521    3                GOTO PRECN;
     4849    11522
     4850    11523    3   PMMEINT:  CALL NXTRECND ALTRET(NONXTKEY);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:195  
     4851    11524    3             F$DCB.RPOS='1'B;
     4852    11525
     4853    11526    3             IF FPT$PRECORD_V.KEYR THEN
     4854    11527    3                CALL GETKEY ALTRET(ERR);
     4855    11528
     4856    11529    3             IF FPT$PRECORD_V.ID OR FPT$PRECORD_V.IDALL THEN
     4857    11530    4                DO;
     4858    11531    4                SAVE_ERR=B$JIT.ERR;
     4859    11532    4                B$JIT.ERR='0'B;
     4860    11533    4                CALL GETIDP ALTRET(ERR1);
     4861    11534    4                B$JIT.ERR=SAVE_ERR;
     4862    11535    4                END;
     4863    11536
     4864    11537    3             IF F$DCB.SHARED THEN
     4865    11538    3                CALL SETID;
     4866    11539
     4867    11540    3             ALTRETURN;
     4868    11541    3             END;  /* NO KEY */
     4869    11542
     4870    11543    2   ERR:   IF FPT$PRECORD_V.KEYR THEN
     4871    11544    3             DO;
     4872    11545    3             CALL ZAPKEY;
     4873    11546    3             ALTRETURN;
     4874    11547    3             END;
     4875    11548    2   NONXTKEY: ;
     4876    11549    2          IF FPT$PRECORD_V.KEYR THEN
     4877    11550    2             CALL ZAPKEY;
     4878    11551    2          IF FPT$PRECORD_V.ID OR FPT$PRECORD_V.IDALL THEN
     4879    11552    2             CALL ZAPID(B$PS2$);
     4880    11553    2          IF B$JIT.ERR.CODE ~= %E$EOF THEN
     4881    11554    2             ALTRETURN;
     4882    11555    2          B$JIT.ERR=ERRNOKEY;
     4883    11556    2   ERR1:  ALTRETURN;
     4884    11557    2          END PREC;
     4885    11558               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:196  
     4886    11559        /*I*     NAME:     PREVREC
     4887    11560                 PURPOSE:  To position to the previous record
     4888    11561                 DESCRIPTION:
     4889    11562                      If this is the primary index, then this is easy, just set
     4890    11563                 RPOS, and say we want the "current" key.  This effectively
     4891    11564                 positions us back one record.
     4892    11565
     4893    11566                      Otherwise, things get a little more complicated.  If the
     4894    11567                 segment counter is 0, then we're positioned past the last
     4895    11568                 segment on a key.  In that case, we need to set SEGX to the
     4896    11569                 start of the next key or NAVX, whichever CRECX dictates.
     4897    11570                 Otherwise, the segment counter is OK the way it is.
     4898    11571                 Then decrement the segment counter and make pointers to the
     4899    11572                 the beginning of the granule and the beginning of the key.
     4900    11573                 Loop backwards until we find the beginning of a duplicate
     4901    11574                 record, beginning of the key, or beginning of the granule.
     4902    11575                 If we hit the beginning of the granule, then blink.  If we
     4903    11576                 hit the beginning of the key, then go back to the last segment
     4904    11577                 of the previous key.
     4905    11578
     4906    11579                      Set the segment pointers.
     4907    11580        */
     4908    11581                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:197  
     4909    11582    1   PREVREC: PROC ALTRET;
     4910    11583    2          DCL BEGGRAN SBIN;
     4911    11584    2          DCL FIRSTSEG UBIN;
     4912    11585    2          DCL KLB SBIN;
     4913    11586        /* */
     4914    11587    2          IF INDEX# = 0 THEN
     4915    11588    3             DO;   /* PRIMARY KEY */
     4916    11589    3             F$DCB.RPOS='1'B;
     4917    11590    3             CALL CURKEY ALTRET(ERR);
     4918    11591    3             RETURN;
     4919    11592    3             END;  /* PRIMARY KEY */
     4920    11593
     4921    11594    2          IF SEGX = 0 THEN
     4922    11595    3             DO;   /* At end of key segs */
     4923    11596    3             IF CRECX < KEYCNT THEN
     4924    11597    4                DO;
     4925    11598    4                SEGX=FM$KEYTBL(CRECX+1);
     4926    11599    4                IF CRECX+1 >= BOUND THEN
     4927    11600    4                   SEGX=SEGX+512;
     4928    11601    4                END;
     4929    11602    3             ELSE SEGX=FM$GRAN.NAVX;
     4930    11603    3             END;  /* At end of key segs */
     4931    11604
     4932    11605    2          SEGX=SEGX-2;
     4933    11606    3   LOOP:  DO WHILE ('1'B);
     4934    11607    3             SEG$=PINCRW(BUF$, SEGX);
     4935    11608    3             BEGGRAN=FM$GRAN.FCEX+SIZEW(FM$KEYTBL);
     4936    11609    3             IF CRECX >= BOUND THEN
     4937    11610    3                KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);
     4938    11611    3             ELSE
     4939    11612    3                KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));
     4940    11613    3             IF ORG = %IREL# THEN
     4941    11614    3                KLB=FM$IRENT.KLB+1;
     4942    11615    3             ELSE
     4943    11616    3                KLB=FM$KEYENT.KLB;
     4944    11617    3             IF CRECX > 0 THEN
     4945    11618    3                FIRSTSEG=POFFW(KEY$, BUF$)+(KLB+4)/4;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:198  
     4946    11619    3             ELSE
     4947    11620    3                FIRSTSEG=BEGGRAN;
     4948    11621
     4949    11622    4             DO WHILE (NOT FM$MISEG.FAK AND
     4950    11623    4                       SEGX >= FIRSTSEG AND
     4951    11624    4                       SEGX >= BEGGRAN);
     4952    11625    4                SEGX=SEGX-2;
     4953    11626    4                SEG$=PINCRW(BUF$, SEGX);
     4954    11627    4             END;  /* WHILE */
     4955    11628
     4956    11629    3             IF SEGX < BEGGRAN THEN
     4957    11630    4                DO;   /* PREVIOUS GRANULE */
     4958    11631    4                CALL BLINK ALTRET(BOF);
     4959    11632    4                SEGX=FM$GRAN.NAVX-2;
     4960    11633    4                CRECX=KEYCNT;
     4961    11634    4                F$DCB.CRECX=CRECX;
     4962    11635    4                END;  /* PREVIOUS GRANULE */
     4963    11636    3             ELSE
     4964    11637    3                IF SEGX < FIRSTSEG THEN
     4965    11638    4                   DO;   /* BACK UP 1 KEY */
     4966    11639    4                   CRECX=CRECX-1;
     4967    11640    4                   F$DCB.CRECX=CRECX;
     4968    11641    4                   SEGX=POFFW(KEY$, BUF$)-2;
     4969    11642    4                   END;  /* BACK UP 1 KEY */
     4970    11643    3                ELSE
     4971    11644    3                   EXIT LOOP;
     4972    11645
     4973    11646    3          END;  /* WHILE */
     4974    11647
     4975    11648    2   DONE:  F$DCB.SEGX=SEGX;
     4976    11649    2          SEG$=PINCRW(BUF$, SEGX);
     4977    11650
     4978    11651    2          RETURN;
     4979    11652    2   ERR:   ALTRETURN;
     4980    11653    2   BOF:   SEGX=0;
     4981    11654    2          F$DCB.SEGX=0;
     4982    11655    2          SEG$=ADDR(NIL);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:199  
     4983    11656    2          ALTRETURN;
     4984    11657    2          END PREVREC;
     4985    11658               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:200  
     4986    11659        /*I*     NAME:     PREVRECND
     4987    11660                 PURPOSE:  To position to the previous non-deleted record
     4988    11661                 DESCRIPTION:
     4989    11662                      If this is the primary index, then loop backwards through
     4990    11663                 the file until we find a non-deleted record, or until we hit
     4991    11664                 BOF.  If this is a secondary index, then just get the previous
     4992    11665                 record.  When records are deleted from a secondary index, they
     4993    11666                 are removed, so there are no records marked as deleted.
     4994    11667        */
     4995    11668    1   PREVRECND: PROC ALTRET;
     4996    11669        /* */
     4997    11670    2          IF INDEX# = 0 THEN
     4998    11671    3             DO;   /* PRIMARY KEY */
     4999    11672    4             DO UNTIL (NOT FM$KEYENT.D);
     5000    11673    4                F$DCB.RPOS='1'B;
     5001    11674    4                CALL CURKEY ALTRET(ERR);
     5002    11675    4             END;
     5003    11676    3             END;  /* PRIMARY KEY */
     5004    11677    2          ELSE
     5005    11678    2             CALL PREVREC ALTRET(ERR);
     5006    11679
     5007    11680    2          RETURN;
     5008    11681    2   ERR:   ALTRETURN;
     5009    11682    2          END PREVRECND;
     5010    11683               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:201  
     5011    11684        /*I*     NAME:     PTOBOF
     5012    11685                 PURPOSE:  To position to the beginning of the file
     5013    11686                 DESCRIPTION:
     5014    11687                      If the file doesn't have secondary indexes, then BOF is the
     5015    11688                 same as file relative 0.  Otherwise, get the FDA from the right
     5016    11689                 structure.
     5017    11690
     5018    11691                      Read the granule, and reset some values.
     5019    11692        */
     5020    11693    1   PTOBOF: PROC ALTRET;
     5021    11694        /* */
     5022    11695    2          IF ALTKEY$ = ADDR(NIL) THEN
     5023    11696    2             DA=FM_FRZERO;
     5024    11697    2          ELSE
     5025    11698    2             IF ORG = %INDEXED# THEN
     5026    11699    2                DA=ALTKEYS.K.FDA(INDEX#);
     5027    11700    2             ELSE
     5028    11701    2                DA=IRKEYS.K.FDA(INDEX#);
     5029    11702
     5030    11703    2          F$DCB.LVL=0;
     5031    11704    2          CALL FMD$REDBUF(BUF$, 1, DA, 0, 0) ALTRET(ERR);
     5032    11705    2          F$DCB.CRECX=0;
     5033    11706    2          F$DCB.SEGX=0;
     5034    11707    2          F$DCB.RPOS='0'B;
     5035    11708    2          F$DCB.ID='0'B;
     5036    11709
     5037    11710    2          RETURN;
     5038    11711    2   ERR:   ALTRETURN;
     5039    11712    2          END PTOBOF;
     5040    11713               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:202  
     5041    11714        /*I*     NAME:     PTOEOF
     5042    11715                 PURPOSE:  To position to the end of the file
     5043    11716                 DESCRIPTION:
     5044    11717                      If this file doesn't have any secondary indexes, then get the
     5045    11718                 last disk address from the CFU.  Otherwise, get it from the right
     5046    11719                 table.
     5047    11720
     5048    11721                      If the granule isn't in memory, read it in.  If the granule
     5049    11722                 has a flink, then this isn't the real LDA, flink until we find the
     5050    11723                 real one.
     5051    11724        */
     5052    11725                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:203  
     5053    11726    1   PTOEOF: PROC ALTRET;
     5054    11727    2          DCL LCDA SBIN;
     5055    11728        /* */
     5056    11729    2          IF ALTKEY$ = ADDR(NIL) THEN
     5057    11730    2             DA=FM$CFU.LDA;
     5058    11731    2          ELSE
     5059    11732    2             IF ORG = %INDEXED# THEN
     5060    11733    2                DA=ALTKEYS.K.LDA(INDEX#);
     5061    11734    2             ELSE
     5062    11735    2                DA=IRKEYS.K.LDA(INDEX#);
     5063    11736
     5064    11737    2          LCDA=-1;
     5065    11738    3          DO UNTIL (DA = 0);
     5066    11739    3             F$DCB.LVL=0;
     5067    11740    3             BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));
     5068    11741    3             IF BUF$ = ADDR(NIL) OR DA ~= F$DCB.BFR.DA(1) THEN
     5069    11742    3                CALL FMD$REDBUF(BUF$, 1, DA, 0, LCDA) ALTRET(ERR);
     5070    11743    3             F$DCB.CRECX=FM$GRAN.KEYCNT;
     5071    11744    3             F$DCB.SEGX=0;
     5072    11745    3             F$DCB.RPOS='0'B;
     5073    11746    3             LCDA=F$DCB.BFR.DA(1);
     5074    11747    3             DA=FM$GRAN.FLINK;
     5075    11748
     5076    11749    3             IF DA ~= 0 THEN
     5077    11750    4                DO;   /* ANOTHER LINK */
     5078    11751    4                IF ALTKEY$ ~= ADDR(NIL) THEN
     5079    11752    4                   IF ORG = %INDEXED# THEN
     5080    11753    4                      ALTKEYS.K.LDA(INDEX#)=DA;
     5081    11754    4                   ELSE
     5082    11755    4                      IRKEYS.K.LDA(INDEX#)=DA;
     5083    11756
     5084    11757    4                IF INDEX# = 0 THEN
     5085    11758    4                   FM$CFU.LDA=DA;
     5086    11759
     5087    11760    4                END;  /* ANOTHER LINK */
     5088    11761    3          END;  /* UNTIL */
     5089    11762
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:204  
     5090    11763    2          RETURN;
     5091    11764    2   ERR:   ALTRETURN;
     5092    11765    2          END PTOEOF;
     5093    11766               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:205  
     5094    11767        /*I*     NAME:     RDCONT
     5095    11768                 PURPOSE:  To handle continued reads
     5096    11769                 DESCRIPTION:
     5097    11770                      If this is a shared file, then contiued reads are not allowed
     5098    11771                 without specifying a key.  If this is an irel file, then check out
     5099    11772                 the key for illegal fields.  Then find the key.
     5100    11773
     5101    11774                      If this file isn't shared, then the previous operation must
     5102    11775                 have been a read.
     5103    11776
     5104    11777                      Loop until we fill up the user's buffer, or we run out of
     5105    11778                 information to transfer.  F$DCB.GDISP will be a count of how many
     5106    11779                 bytes we've given to the user so far.  First we have to find the
     5107    11780                 right MISEG to continue the read from.  If the DA from the MISEG
     5108    11781                 is FRZERO, then this is probably a one granule keyed file.  INDX
     5109    11782                 will be the offset from the start of this segment where we left
     5110    11783                 off last time.  Transfer the data to the user's buffer, and
     5111    11784                 increment out counters and pointers.
     5112    11785
     5113    11786                      Get another segment, if there is one.  If FAK is set, then
     5114    11787                 this is a duplicate record, we're done.
     5115    11788        */
     5116    11789                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:206  
     5117    11790    1   RDCONT: PROC ALTRET;
     5118    11791    2          DCL I SBIN;
     5119    11792    2          DCL GX SBIN;
     5120    11793    2          DCL SIZE SBIN;
     5121    11794    2          DCL LCDA UBIN;
     5122    11795    2          DCL INDX SBIN;
     5123    11796    2          DCL CHARS CHAR(SIZE) BASED;
     5124    11797    2          DCL GACTB SBIN;
     5125    11798        /* */
     5126    11799    2          IF F$DCB.SHARED THEN
     5127    11800    3             DO;   /* SHARED */
     5128    11801    3             IF NOT FPT$READ_V.KEYS THEN
     5129    11802    4                DO;   /* NO CONTINUE */
     5130    11803    4                B$JIT.ERR=ERRNOCONT;
     5131    11804        /*E*   ERROR:   FMG-E$NOCONT-2
     5132    11805               MESSAGE: Illegal use of CONT option
     5133    11806               MESSAGE1: An attempt was made to use the CONT option in one
     5134    11807                         of the following illegal situations:
     5135    11808                         1) Previous operation was not the same as this
     5136    11809                            operation
     5137    11810                         2) File is compressed or encryption was specified
     5138    11811                         3) File is opened in shared mode and KEYS was not
     5139    11812                            specified
     5140    11813        */
     5141    11814    4                ALTRETURN;
     5142    11815    4                END;  /* NO CONTINUE */
     5143    11816
     5144    11817    3             CALL SETKEY(B$PS1$) ALTRET(ERR);
     5145    11818    3             IF ORG = %IREL# THEN
     5146    11819    3                CALL FMD$CHKFIELD(B$PS1$, %FMD_CHKTYP_KEY) ALTRET(ERR);
     5147    11820    3             COMFLG=%KEY;
     5148    11821    3             CALL FINDKEY ALTRET(NOKEY);
     5149    11822    3             IF F$DCB.SHARED THEN
     5150    11823    3                CALL SETID;
     5151    11824
     5152    11825    3             IF FM$KEYENT.D THEN
     5153    11826    3                GOTO NOKEY;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:207  
     5154    11827    3             END;  /* SHARED */
     5155    11828    2          ELSE
     5156    11829    3             DO;   /* NOT SHARED */
     5157    11830    3             IF EOP ~= 1 OR F$DCB.COMP OR FPT$READ_V.SEED OR F$DCB.SEED THEN
     5158    11831    4                DO;   /* NO CONTINUE */
     5159    11832    4                B$JIT.ERR=ERRNOCONT;
     5160    11833    4                ALTRETURN;
     5161    11834    4                END;  /* NO CONTINUE */
     5162    11835
     5163    11836    3             CALL RESTOREPOS ALTRET(ERR);
     5164    11837    3             CALL CURREC ALTRET(ERR);
     5165    11838    3             END;  /* NOT SHARED */
     5166    11839
     5167    11840    2          I=0;
     5168    11841    3   LOOP:  DO WHILE ('1'B);
     5169    11842    3             DA=FM$MISEG.GDA;
     5170    11843    3             IF FM$MISEG.GACTB = 0 THEN
     5171    11844    3                EXIT;
     5172    11845
     5173    11846    3             IF FM$MISEG.GACTB+I >= F$DCB.GDISP THEN
     5174    11847    4                DO;
     5175    11848    4                IF DA = FM_FRZERO THEN
     5176    11849    4                   BUFNUM=1;
     5177    11850    4                ELSE
     5178    11851    4                   BUFNUM=0;
     5179    11852
     5180    11853    4                DBUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM));
     5181    11854    4                IF DBUF$ = ADDR(NIL) OR
     5182    11855    4                   F$DCB.BFR.DA(BUFNUM) ~= DA THEN
     5183    11856    5                   DO;   /* READ GRANULE */
     5184    11857    5                   F$DCB.LVL=7;
     5185    11858    5                   CALL FMD$REDBUF(DBUF$, BUFNUM, DA,,) ALTRET(DATAERR);
     5186    11859    5                   END;  /* READ GRANULE */
     5187    11860
     5188    11861    4                GX=FM$MISEG.GX;
     5189    11862
     5190    11863    4                G$=PINCRW(DBUF$, GX);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:208  
     5191    11864    4                INDX=F$DCB.GDISP-I;
     5192    11865
     5193    11866    4                GACTB=FM$MISEG.GACTB-INDX;
     5194    11867    4                IF GACTB > F$DCB.UBYTES THEN
     5195    11868    4                   SIZE=F$DCB.UBYTES;
     5196    11869    4                ELSE
     5197    11870    4                   SIZE=GACTB;
     5198    11871    4                F$DCB.UB$->CHARS=SUBSTR(G$->CHAR1, INDX, SIZE);
     5199    11872    4                F$DCB.ARS=F$DCB.ARS+SIZE;
     5200    11873
     5201    11874    4                F$DCB.GDISP=F$DCB.GDISP+SIZE;
     5202    11875    4                F$DCB.UBYTES=F$DCB.UBYTES-SIZE;
     5203    11876    4                F$DCB.UB$=PINCRC(F$DCB.UB$, SIZE);
     5204    11877    4                IF SIZE < GACTB THEN
     5205    11878    4                   GOTO LOSTDATA;
     5206    11879
     5207    11880    4                END;
     5208    11881
     5209    11882    3             I=I+FM$MISEG.GACTB;
     5210    11883    3             CALL NXTSEG ALTRET(ERR);
     5211    11884    3             IF SEGX > 0 THEN
     5212    11885    3                IF FM$MISEG.FAK THEN
     5213    11886    4                   DO;   /* DUP ALT */
     5214    11887    4                   F$DCB.RPOS='1'B;
     5215    11888    4                   EXIT LOOP;
     5216    11889    4                   END;  /* DUP ALT */
     5217    11890    3                ELSE;
     5218    11891    3             ELSE
     5219    11892    3                EXIT LOOP;
     5220    11893
     5221    11894    3             END;
     5222    11895
     5223    11896    2          RETURN;
     5224    11897    2   ERR:   ALTRETURN;
     5225    11898    2   DATAERR: CALL DATAERROR;
     5226    11899    2          ALTRETURN;
     5227    11900    2   LOSTDATA: ;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:209  
     5228    11901    2          B$JIT.ERR=ERRLD;
     5229    11902    2          F$DCB.EOP=FM_EOP(FPTCODE);
     5230    11903    2          ALTRETURN;
     5231    11904    2   NOKEY: ;
     5232    11905    2          IF FPT$READ_V.KEYR THEN
     5233    11906    3             DO;   /* RETURN NEXT KEY */
     5234    11907    3             CALL NXTRECND ALTRET(NONXTKEY);
     5235    11908    3             F$DCB.RPOS='1'B;
     5236    11909    3             CALL GETKEY ALTRET(ERR);
     5237    11910    3             END;
     5238    11911    2          B$JIT.ERR=ERRNOKEY;
     5239    11912    2          ALTRETURN;
     5240    11913    2   NONXTKEY: ;
     5241    11914    2          IF B$JIT.ERR.CODE ~= %E$EOF THEN
     5242    11915    2             ALTRETURN;
     5243    11916    2          CALL ZAPKEY;
     5244    11917    2          B$JIT.ERR=ERRNOKEY;
     5245    11918    2          ALTRETURN;
     5246    11919    2          END RDCONT;
     5247    11920               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:210  
     5248    11921        /*I*     NAME:     RDGRAN
     5249    11922                 PURPOSE:  To read an index granule
     5250    11923                 DESCRIPTION:
     5251    11924                      LCDA is the "link check disk address".  Increment the number
     5252    11925                 of reads on level 0 we've had to do.
     5253    11926        */
     5254    11927    1   RDGRAN: PROC ALTRET;
     5255    11928    2          DCL LCDA SBIN;
     5256    11929        /* */
     5257    11930    2          F$DCB.LVL=0;
     5258    11931    2          LCDA=F$DCB.BFR.DA(1);
     5259    11932
     5260    11933    2          CALL FMD$REDBUF(BUF$, 1, DA,, LCDA) ALTRET(ERR);
     5261    11934    2          F$DCB.RDL0=F$DCB.RDL0+1;
     5262    11935    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
     5263    11936    2          KEYCNT=FM$GRAN.KEYCNT;
     5264    11937    2          BOUND=FM$KEYTBL(0);
     5265    11938
     5266    11939    2          RETURN;
     5267    11940    2   ERR:   ALTRETURN;
     5268    11941    2          END RDGRAN;
     5269    11942               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:211  
     5270    11943        /*I*     NAME:     READ
     5271    11944                 PURPOSE:  To handle the M$READ pmme
     5272    11945                 DESCRIPTION:
     5273    11946                      If an ID was specified, pre-check it for proper size.
     5274    11947
     5275    11948                      If this is a continued read, then call RDCONT.  Otherwise,
     5276    11949                 this is a normal read.  Encryption is illegal for indexed or IREL files,
     5277    11950                 there wouldn't be any way to find keys and associate them with
     5278    11951                 records.
     5279    11952
     5280    11953                      If the user specified a key, then use the key to do the read.
     5281    11954                 Otherwise, just call READNOKEY to probably read the next record.
     5282    11955        */
     5283    11956                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:212  
     5284    11957    1   READ:  PROC ALTRET;
     5285    11958    2          DCL I SBIN;
     5286    11959        /* */
     5287    11960    2          IF FPT$READ_V.IDS THEN
     5288    11961    3             DO;   /* CHECK SIZE OF ID */
     5289    11962    3             CALL HFF$DSIZ(B$PS3$, I);
     5290    11963    3             IF I < 8 THEN
     5291    11964    4                DO;   /* TOO SMALL */
     5292    11965    4                B$JIT.ERR=ERRIDSMALL;
     5293    11966    4                ALTRETURN;
     5294    11967    4                END;  /* TOO SMALL */
     5295    11968        /*E*   ERROR:      FMG-E$IDSMALL-2
     5296    11969               MESSAGE: ID buffer is too small
     5297    11970               MESSAGE1: The ID buffer passed to file management is too
     5298    11971                         small to hold an entire ID.
     5299    11972        */
     5300    11973    3             END;  /* CHECK SIZE OF ID */
     5301    11974
     5302    11975    2          IF FPT$READ_V.DVBYTE.CONT THEN
     5303    11976    2             CALL RDCONT ALTRET(ERR);
     5304    11977    2          ELSE
     5305    11978    3             DO;   /* SANE READ */
     5306    11979    3             F$DCB.GDISP=0;
     5307    11980    3             IF (FPT$READ_V.SEED OR F$DCB.SEED) AND ORG ~= %KEYED# THEN
     5308    11981    4                DO;   /* CANT DO THAT */
     5309    11982    4                B$JIT.ERR=ERRINDSEED;
     5310    11983        /*E*   ERROR:      FMG-E$INDSEED-2
     5311    11984               MESSAGE: Encryption is illegal for indexed and IREL files%, file %FN%
     5312    11985               DESCRIPTION:
     5313    11986                  An encryption seed may not be specified for reads and
     5314    11987                  writes to indexed or IREL files.
     5315    11988        */
     5316    11989    4                ALTRETURN;
     5317    11990    4                END;  /* CANT DO THAT */
     5318    11991
     5319    11992
     5320    11993    3             IF FPT$READ_V.KEYS THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:213  
     5321    11994    3                CALL READKEY ALTRET(ERR);
     5322    11995    3             ELSE
     5323    11996    4                DO;   /* NO KEY */
     5324    11997    4                IF FPT$READ_V.IDS THEN
     5325    11998    5                   DO;   /* Position by ID only */
     5326    11999    5                   IF ORG ~= %INDEXED# AND ORG ~= %IREL# THEN
     5327    12000    6                      DO;  /* Can't position with ID only */
     5328    12001    6                      B$JIT.ERR=ERRIDONLY;
     5329    12002    6                      ALTRETURN;
     5330    12003    6                      END; /* Can't position with ID only */
     5331    12004    5                   IDPTR$=B$PS3$;
     5332    12005    5                   CALL FINDIDO ALTRET(ERR);
     5333    12006    5                   F$DCB.RPOS='1'B;
     5334    12007    5                   END;  /* Position by ID only */
     5335    12008    4                CALL READNOKEY ALTRET(ERR);
     5336    12009    4                END;  /* NO KEY */
     5337    12010
     5338    12011    3             END;  /* SANE READ */
     5339    12012
     5340    12013    2          RETURN;
     5341    12014    2   ERR:   ALTRETURN;
     5342    12015    2          END READ;
     5343    12016               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:214  
     5344    12017        /*I*     NAME:     READKEY
     5345    12018                 PURPOSE:  To handle keyed reads
     5346    12019                 DESCRIPTION:
     5347    12020                      If this is an irel file, then check out the key for illegal
     5348    12021                 fields.
     5349    12022
     5350    12023                      Find the key that the user specified.  If an ID or RECNUM was
     5351    12024                 specified, then use those to find the correct duplicate key.
     5352    12025
     5353    12026                      If the user asked for anything back (key or ID), return
     5354    12027                 return them now.  IDs especially need to be returned now
     5355    12028                 because we have to use the first segment in a possible list
     5356    12029                 of segments to return the information.  The read process may
     5357    12030                 position us beyond the first segment.
     5358    12031
     5359    12032                      Now, call GETREC to actually read the record.
     5360    12033
     5361    12034                      If the key the user asked for didn't exist, then position to
     5362    12035                 the next non-deleted record, and return the key or ID.
     5363    12036        */
     5364    12037                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:215  
     5365    12038    1   READKEY: PROC ALTRET;
     5366    12039        /* */
     5367    12040    2          CALL SETKEY(B$PS1$) ALTRET(ERR);
     5368    12041    2          IF ORG = %IREL# THEN
     5369    12042    2             CALL FMD$CHKFIELD(B$PS1$, %FMD_CHKTYP_KEY) ALTRET(ERR);
     5370    12043
     5371    12044    2          COMFLG=%KEY;
     5372    12045    2          CALL FINDKEY ALTRET(NOKEY);
     5373    12046
     5374    12047    2          IF FPT$READ_V.IDS THEN
     5375    12048    3             DO;   /* POSITION TO ID */
     5376    12049    3             IDPTR$=B$PS3$;
     5377    12050    3             CALL FINDID ALTRET(NOKEY1);
     5378    12051    3             END;  /* POSITION TO ID */
     5379    12052    2          ELSE
     5380    12053    3             DO;   /* TRY RECNUM */
     5381    12054    3             IF FPT$READ_V.RECNUM > 0 THEN
     5382    12055    4                DO;
     5383    12056    4                RECNUM=FPT$READ_V.RECNUM;
     5384    12057    4                CALL MOVERECN ALTRET(NOREC);
     5385    12058    4                END;
     5386    12059    3             END;  /* TRY RECNUM */
     5387    12060
     5388    12061    2          IF INDEX# = 0 THEN
     5389    12062    2             IF FM$KEYENT.D THEN
     5390    12063    2                GOTO NOKEY1;
     5391    12064
     5392    12065    2          IF FPT$READ_V.KEYR THEN
     5393    12066    2             CALL GETKEY ALTRET(ERR);
     5394    12067
     5395    12068    2          IF FPT$READ_V.ID THEN
     5396    12069    2             CALL GETIDRW ALTRET(ERR);
     5397    12070
     5398    12071    2          IF F$DCB.SHARED THEN
     5399    12072    2             CALL SETID;
     5400    12073
     5401    12074    2          CALL GETREC ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:216  
     5402    12075
     5403    12076    2          RETURN;
     5404    12077    2   ERR:   ALTRETURN;
     5405    12078    2   NOKEY: IF B$JIT.ERR.CODE ~= %E$NOKEY THEN
     5406    12079    2             ALTRETURN;
     5407    12080    2   NOKEY1: ;
     5408    12081    2          F$DCB.RPOS='1'B;
     5409    12082    2          CALL NXTRECND ALTRET(NONXTKEY);
     5410    12083    2          F$DCB.RPOS='1'B;
     5411    12084    2          IF FPT$READ_V.KEYR THEN
     5412    12085    3             DO;   /* RETURN NEXT KEY */
     5413    12086    3             CALL GETKEY ALTRET(ERR);
     5414    12087    3             END;
     5415    12088
     5416    12089    2          IF FPT$READ_V.ID THEN
     5417    12090    2             CALL GETIDRW ALTRET(ERR);
     5418    12091
     5419    12092    2          IF F$DCB.SHARED THEN
     5420    12093    2             CALL SETID;
     5421    12094
     5422    12095    2          B$JIT.ERR=ERRNOKEY;
     5423    12096    2          ALTRETURN;
     5424    12097    2   NONXTKEY: ;
     5425    12098    2          IF B$JIT.ERR.CODE ~= %E$EOF THEN
     5426    12099    2             ALTRETURN;
     5427    12100    2          B$JIT.ERR=ERRNOKEY;
     5428    12101    2   NOREC: IF FPT$READ_V.KEYR THEN
     5429    12102    2             CALL ZAPKEY;
     5430    12103    2          IF FPT$READ_V.ID THEN
     5431    12104    2             CALL ZAPID(B$PS3$);
     5432    12105    2          ALTRETURN;
     5433    12106    2          END READKEY;
     5434    12107               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:217  
     5435    12108        /*I*     NAME:     READNOKEY
     5436    12109                 PURPOSE:  To handle reads without a key
     5437    12110                 DESCRIPTION:
     5438    12111                      If this is the primary index, then get the next non-deleted
     5439    12112                 record.  If this is a secondary index, then we don't have to worry
     5440    12113                 about non-deleted records.  But we do have to worry about the
     5441    12114                 KEYCHNG option.
     5442    12115
     5443    12116                      Return any information, especially about the ID, before
     5444    12117                 we actually do the information transfer.
     5445    12118        */
     5446    12119                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:218  
     5447    12120    1   READNOKEY: PROC ALTRET;
     5448    12121        /* */
     5449    12122    2          IF NOT FPT$READ_V.IDS THEN
     5450    12123    2             CALL SHAREPOS ALTRET(ERR);
     5451    12124
     5452    12125    2          IF INDEX# = 0 THEN
     5453    12126    2             CALL NXTRECND ALTRET(ERR);
     5454    12127    2          ELSE
     5455    12128    3             DO;   /* ALTERNATE INDEX */
     5456    12129    3             IF FPT$READ_V.KEYCHNG THEN
     5457    12130    3                CALL NXTRECNM ALTRET(ERR);
     5458    12131    3             ELSE
     5459    12132    3                CALL NXTREC ALTRET(ERR);
     5460    12133    3             END;  /* ALTERNATE INDEX */
     5461    12134    2          IF FPT$READ_V.KEYR THEN
     5462    12135    2             CALL GETKEY ALTRET(ERR);
     5463    12136
     5464    12137    2          IF FPT$READ_V.ID THEN
     5465    12138    2             CALL GETIDRW ALTRET(ERR);
     5466    12139
     5467    12140    2          IF F$DCB.SHARED THEN
     5468    12141    2             CALL SETID;
     5469    12142
     5470    12143    2          CALL GETREC ALTRET(ERR);
     5471    12144
     5472    12145    2          RETURN;
     5473    12146    2   ERR:   ALTRETURN;
     5474    12147    2          END READNOKEY;
     5475    12148               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:219  
     5476    12149        /*I*     NAME:     REBLD_ALT
     5477    12150                 PURPOSE:  To rebuild alternate indexes
     5478    12151                 DESCRIPTION:
     5479    12152                      After rewriting a record, or reusing a deleted record, the
     5480    12153                 alternate indexes for the record have to be rebuilt.  Position
     5481    12154                 to the beginning of the record for the primary index.  We will
     5482    12155                 try to move 2 segments at a time from the primary index to the
     5483    12156                 alternate indexes.
     5484    12157
     5485    12158                      Loop through the set of alternate indexes, building record
     5486    12159                 entries for the indexes that changed.  If this is the first time
     5487    12160                 through, then we will need to add segments, or possibly a whole
     5488    12161                 new key.  If this is not the first time through, then we should
     5489    12162                 have all the segment space we need, so just position to the next
     5490    12163                 segment.
     5491    12164        */
     5492    12165                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:220  
     5493    12166    1   REBLD_ALT: PROC ALTRET;
     5494    12167    2          DCL MISEG(0:1) BIT(72);
     5495    12168    2          DCL I SBIN;
     5496    12169    2          DCL NUMENTS UBIN;
     5497    12170    2          DCL INDXCHNG BIT(1);
     5498    12171        /* */
     5499    12172    2          FAK=1;
     5500    12173    2          INDEX#=1;
     5501    12174    2          CALL SETINDEX ALTRET(ERR);
     5502    12175    2          CALL RESTOREPOS ALTRET(ERR);
     5503    12176    2          SEG$=PINCRW(BUF$, SEGX);
     5504    12177
     5505    12178    3          DO UNTIL (SEGX = 0);
     5506    12179    3             MISEG(0)=FM$MISEG;
     5507    12180    3             SEGCNT=2;
     5508    12181    3             IF FAK ~= 0 THEN
     5509    12182    3                ADDR(MISEG(0))->FM$MISEG.FAK='1'B;
     5510    12183    3             CALL NXTSEG ALTRET(ERR);
     5511    12184    3             IF SEG$ ~= ADDR(NIL) THEN
     5512    12185    4                DO;   /* 'NOTHER SEG */
     5513    12186    4                MISEG(1)=FM$MISEG;
     5514    12187    4                SEGCNT=4;
     5515    12188    4                CALL NXTSEG ALTRET(ERR);
     5516    12189    4                END;  /* 'NOTHER SEG */
     5517    12190
     5518    12191    3             IF ORG = %INDEXED# THEN
     5519    12192    3                NUMENTS=ALTKEYS.NUMENTS;
     5520    12193    3             ELSE
     5521    12194    3                NUMENTS=IRKEYS.NKEYS;
     5522    12195
     5523    12196    4             DO I=2 TO NUMENTS;
     5524    12197    4                IF ORG = %INDEXED# THEN
     5525    12198    4                   INDXCHNG=ALTKEYS.K.INDXCHNG(I-1);
     5526    12199    4                ELSE
     5527    12200    4                   INDXCHNG=IRKEYS.K.INDXCHNG(I-1);
     5528    12201
     5529    12202    4                IF INDXCHNG THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:221  
     5530    12203    5                   DO;   /* ADD SEGS */
     5531    12204    5                   INDEX#=I;
     5532    12205    5                   CALL SETINDEX ALTRET(ERR);
     5533    12206    5                   IF FAK ~= 0 THEN
     5534    12207    6                      DO;   /* TRY TO FIND KEY */
     5535    12208    6                      KEYIN$=PINCRC(B$PS2$, F$DCB.KEYX);
     5536    12209    6                      COMFLG=%USEREC;
     5537    12210    6                      CALL FINDKEY ALTRET(NEW);
     5538    12211    6                      END;  /* TRY TO FIND KEY */
     5539    12212    5                   ELSE
     5540    12213    6                      DO;   /* ALREADY KNOW POSITION */
     5541    12214    6                      DA=F$DCB.BFR.DA(1);
     5542    12215    6                      CALL RESTOREPOS ALTRET(ERR);
     5543    12216    6                      END;  /* ALREADY KNOW POSITION */
     5544    12217    5                   CALL ADDSEG ALTRET(ERR);
     5545    12218
     5546    12219    6                   DO WHILE ('0'B);
     5547    12220    6   NEW:               IF B$JIT.ERR.CODE ~= %E$NOKEY THEN
     5548    12221    6                         GOTO ERR;
     5549    12222    6                      B$JIT.ERR='0'B;
     5550    12223    6                      CALL ADDKEY ALTRET(ERR);
     5551    12224    6                      F$DCB.RPOS='0'B;
     5552    12225    6                   END;
     5553    12226
     5554    12227    5                   FM$MISEG=MISEG(0);
     5555    12228    5                   IF SEGCNT = 4 THEN
     5556    12229    6                      DO;   /* STILL 'NOTHER SEG */
     5557    12230    6                      CALL NXTSEG ALTRET(ERR);
     5558    12231    6                      FM$MISEG=MISEG(1);
     5559    12232    6                      END;  /* STILL 'NOTHER SEG */
     5560    12233    5                   END;  /* ADD SEGS */
     5561    12234    4             END;  /* DO I */
     5562    12235
     5563    12236    3             FAK=0;
     5564    12237    3             INDEX#=1;
     5565    12238    3             CALL SETINDEX ALTRET(ERR);
     5566    12239    3             CALL RESTOREPOS ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:222  
     5567    12240    3             SEG$=PINCRW(BUF$, SEGX);
     5568    12241    3          END;  /* WHILE */
     5569    12242
     5570    12243    2          RETURN;
     5571    12244    2   ERR:   ALTRETURN;
     5572    12245    2          END REBLD_ALT;
     5573    12246               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:223  
     5574    12247        /*I*     NAME:     REMKEY
     5575    12248                 PURPOSE:  To remove a key from an index granule
     5576    12249                 DESCRIPION:
     5577    12250                      KEY$ will point to the beginning of the key.  DISP is the
     5578    12251                 space between the two keys that has to be removed.  SIZE is the
     5579    12252                 amount of space that has to be slid back.
     5580    12253
     5581    12254                      Now, we have to update the key table.  Loop from the place
     5582    12255                 we slid back to the end of the key table.  Subtract the amount
     5583    12256                 that we slid back from each key table entry.  If TSIZE went
     5584    12257                 negative, then that means it really went from being greater
     5585    12258                 than 511 to being less than 511.  This means the the bound
     5586    12259                 probably changed.  If TSIZE didn't do anything funny, and
     5587    12260                 the bound is the next key, then the bound is now the current
     5588    12261                 key, because everything is slid back one key.
     5589    12262        */
     5590    12263                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:224  
     5591    12264    1   REMKEY: PROC ALTRET;
     5592    12265    2          DCL SIZE SBIN;
     5593    12266    2          DCL J SBIN;
     5594    12267    2          DCL TSIZE SBIN;
     5595    12268    2          DCL DISP SBIN;
     5596    12269    2          DCL LCDA SBIN;
     5597    12270    2          DCL BUF3$ PTR;
     5598    12271    2          DCL BUF4$ PTR;
     5599    12272    2          DCL I SBIN;
     5600    12273    2          DCL 1 EXTNT,
     5601    12274    2               2 SIZE UBIN(9) CALIGNED,
     5602    12275    2               2 DA UBIN(27) CALIGNED;
     5603    12276        /* */
     5604    12277    2          IF CRECX < BOUND THEN
     5605    12278    2             KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));
     5606    12279    2          ELSE
     5607    12280    2             KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);
     5608    12281
     5609    12282    2          IF CRECX < KEYCNT THEN
     5610    12283    3             DO;   /* SLIDE STUFF BACK */
     5611    12284    3             IF CRECX+1 < BOUND THEN
     5612    12285    3                DISP=FM$KEYTBL(CRECX+1)-POFFW(KEY$, BUF$);
     5613    12286    3             ELSE
     5614    12287    3                DISP=FM$KEYTBL(CRECX+1)+512-POFFW(KEY$, BUF$);
     5615    12288
     5616    12289    3             SIZE=FM$GRAN.NAVX-POFFW(KEY$, BUF$)-DISP;
     5617    12290
     5618    12291    3             CALL FMR$SLIDE(KEY$, -DISP, SIZE);
     5619    12292    3             END;  /* SLIDE STUFF BACK */
     5620    12293    2          ELSE
     5621    12294    2             DISP=FM$GRAN.NAVX-POFFW(KEY$, BUF$);
     5622    12295
     5623    12296    2          FAK=0;
     5624    12297    3          DO I=CRECX TO KEYCNT-1;
     5625    12298    3             J=I+1;
     5626    12299    3             TSIZE=FM$KEYTBL(J)-DISP;
     5627    12300    3             IF TSIZE < 0 THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:225  
     5628    12301    4                DO;   /* CROSSED BOUNDRY */
     5629    12302    4                IF BOUND < J THEN
     5630    12303    4                   BOUND=J;
     5631    12304    4                END;  /* CROSSED BOUNDRY */
     5632    12305    3             ELSE
     5633    12306    3                IF BOUND = J THEN
     5634    12307    3                   BOUND=I;
     5635    12308
     5636    12309    3             FM$KEYTBL(I)=TSIZE;
     5637    12310    3          END;  /* DO I */
     5638    12311
     5639    12312    2          FM$KEYTBL(KEYCNT)=0;
     5640    12313    2          KEYCNT=KEYCNT-1;
     5641    12314
     5642    12315    2          IF BOUND > KEYCNT THEN
     5643    12316    2             BOUND=SIZEC(FM$KEYTBL);
     5644    12317
     5645    12318    2          FM$KEYTBL(0)=BOUND;
     5646    12319
     5647    12320    2          FM$GRAN.KEYCNT=KEYCNT;
     5648    12321    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL+DISP;
     5649    12322    2          FM$GRAN.NAVX=FM$GRAN.NAVX-DISP;
     5650    12323
     5651    12324    2          F$DCB.BFR.BUFUP(1)='1'B;
     5652    12325    2          F$DCB.BFR.SCRUB(1)='1'B;
     5653    12326
     5654    12327    2          IF KEYCNT = 0 AND               /* If the granule is empty, it's a     */
     5655    12328    2              FM$GRAN.ORG = 0 AND         /* file directory granule, it's not    */
     5656    12329    2              FM$GRAN.LVL = FMGTFD AND    /* the FIT, and it's not part of a     */
     5657    12330    2              FM$GRAN.BLINK ~= 0 AND      /* star-file directory, release it.    */
     5658    12331    3              F$DCB.CFU$->FM$CFU.STARX.F = 0 THEN DO;
     5659    12332    3             EXTNT.SIZE = 1;              /* One-granule extent.                 */
     5660    12333    3             EXTNT.DA = F$DCB.BFR.DA(1);  /* SRDA of that extent.                */
     5661    12334    3             CALL FMD$FLSHBUF(3);         /* Flush buffer 3.                     */
     5662    12335    3             DA = FM$GRAN.BLINK;          /* Read the blink.                     */
     5663    12336    3             LCDA = F$DCB.BFR.DA(1);
     5664    12337    3             CALL FMD$REDBUF(BUF3$,3,DA,,LCDA) ALTRET(ERR); /* Get the granule.  */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:226  
     5665    12338    3             BUF4$ = ADDR(NIL);
     5666    12339    4             IF FM$GRAN.FLINK ~= 0 THEN DO; /* If there's a FLINK get it.        */
     5667    12340    4                CALL FMD$FLSHBUF(4);      /* Flush buffer 4.                     */
     5668    12341    4                DA = FM$GRAN.FLINK;       /* Read the flink.                     */
     5669    12342    4                LCDA = F$DCB.BFR.DA(1);
     5670    12343    4                CALL FMD$REDBUF(BUF4$,4,DA,,LCDA) ALTRET(ERR); /* Get the gran.  */
     5671    12344    4                END;
     5672    12345    3             BUF3$->FM$GRAN.FLINK = FM$GRAN.FLINK; /* Link out current granule.  */
     5673    12346    3             F$DCB.BFR.BUFUP(3) = '1'B;   /* Buffer changed.                     */
     5674    12347    4             IF BUF4$ ~= ADDR(NIL) THEN DO;
     5675    12348    4                BUF4$->FM$GRAN.BLINK = FM$GRAN.BLINK;
     5676    12349    4                F$DCB.BFR.BUFUP(4) = '1'B;
     5677    12350    4                END;
     5678    12351    3             FM$GRAN.BLINK = 0;           /* Zero blink and flink of curr gran.  */
     5679    12352    3             FM$GRAN.FLINK = 0;
     5680    12353    3             CALL FMD$FLSHBUF(1);         /* Flush it.                           */
     5681    12354    3             CALL FMD$WRTSVNW(3);         /* Write the blink, don't release it.  */
     5682    12355    3             CALL FMD$FLSHBUF(4);         /* Flush the flink, if any.            */
     5683    12356    3             CALL FMB$IOSPIN;             /* Spin.                               */
     5684    12357    3             F$DCB.BFR(1) = F$DCB.BFR(3); /* Make the blink the current granule. */
     5685    12358    3             F$DCB.BFR1(1) = F$DCB.BFR1(3);
     5686    12359    3             F$DCB.BFR(3) = '0'B;         /* Clear buffer 3.                     */
     5687    12360    3             F$DCB.BFR1(3) = '0'B;
     5688    12361    3             CFU$ = PINCRW(F$CFU$,F$DCB.CFU$->FM$CFU.ACCTX);
     5689    12362    3             CFU$->FM$CFUA.FDCSDA = F$DCB.BFR.DA(1); /* Set new DA in CFU.       */
     5690    12363    3             BUF$ = BUF3$;
     5691    12364    3             F$DCB.CRECX = 0;
     5692    12365    3             IF FM$GRAN.KEYCNT > 0 THEN   /* Keys in this gran?                  */
     5693    12366    3                F$DCB.CRECX = FM$GRAN.KEYCNT - 1; /* Yes, set CRECX.             */
     5694    12367    3             F$DCB.RPOS = '0'B;           /* Make sure RPOS is off.              */
     5695    12368    3             CALL FAG$REXT(EXTNT) ALTRET(ERR);  /* Release that one-gran extent. */
     5696    12369    3             END;
     5697    12370
     5698    12371    2          RETURN;
     5699    12372
     5700    12373    2   ERR:   ALTRETURN;
     5701    12374
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:227  
     5702    12375    2          END REMKEY;
     5703    12376               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:228  
     5704    12377        /*I*     NAME:     REMOVESEG
     5705    12378                 PURPOSE:  To remove a segment from an index granule
     5706    12379                 DESCRIPTION:
     5707    12380                      SIZE is the amount of space we have to slide back.  Slide
     5708    12381                 everything back from the deletion point by two words, the size
     5709    12382                 of a segment.  Now loop through the key table, subtracting 2 from
     5710    12383                 every key table entry.  If one of them went negative, then the
     5711    12384                 bound changed, point it to the next key.
     5712    12385        */
     5713    12386                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:229  
     5714    12387    1   REMOVESEG: PROC ALTRET;
     5715    12388    2          DCL SIZE SBIN;
     5716    12389    2          DCL TSIZE SBIN;
     5717    12390    2          DCL I SBIN;
     5718    12391        /* */
     5719    12392    2          SIZE=FM$GRAN.NAVX-POFFW(SEG$, BUF$)-2;
     5720    12393
     5721    12394    2          IF SIZE ~= 0 THEN
     5722    12395    3             DO;   /* SLIDE STUFF BACK */
     5723    12396    3             CALL FMR$SLIDE(SEG$, -2, SIZE);
     5724    12397
     5725    12398    4             DO I=CRECX+1 TO KEYCNT;
     5726    12399    4                TSIZE=FM$KEYTBL(I)-2;
     5727    12400    4                IF TSIZE < 0 THEN
     5728    12401    4                   BOUND=I+1;
     5729    12402    4                FM$KEYTBL(I)=TSIZE;
     5730    12403    4             END;  /* DO I */
     5731    12404
     5732    12405    3             IF BOUND > KEYCNT THEN
     5733    12406    3                BOUND=SIZEC(FM$KEYTBL);
     5734    12407    3             FM$KEYTBL(0)=BOUND;
     5735    12408    3             END;  /* SLIDE STUFF BACK */
     5736    12409
     5737    12410    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL+2;
     5738    12411    2          FM$GRAN.NAVX=FM$GRAN.NAVX-2;
     5739    12412    2          F$DCB.BFR.BUFUP(1)='1'B;
     5740    12413    2          F$DCB.BFR.SCRUB(1)='1'B;
     5741    12414    2          SEGCNT=SEGCNT-2;
     5742    12415
     5743    12416    2          RETURN;
     5744    12417    2          END REMOVESEG;
     5745    12418               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:230  
     5746    12419        /*I*     NAME:     REMSEG
     5747    12420                 PURPOSE:  To remove a duplicate key
     5748    12421                 DESCRIPTION:
     5749    12422                      SEGCNT is going to be the number of words from the segment
     5750    12423                 to be deleted to either the next key, or the end of the granule.
     5751    12424
     5752    12425                      We will loop until we delete all of the segments associated
     5753    12426                 with the record.  If SEGCNT went to 0, and this is the last key
     5754    12427                 in the granule, then we don't want to leave a key with no segments
     5755    12428                 in the granule.  Get the first segment of the next granule, delete
     5756    12429                 it from that granule, and paste at the end of the previous granule.
     5757    12430                 If FAK is set, or we ran out of segments, then we're done.
     5758    12431
     5759    12432                      If SEG$ is nil, or SEGCNT is 0, then we may have deleted
     5760    12433                 all of the segments from a key.  Check the amount of space
     5761    12434                 between the beginning of the key and the next key, or end of
     5762    12435                 the granule.  If there isn't any room for segments, then remove
     5763    12436                 the whole key, and position to the beginning of the next key.
     5764    12437        */
     5765    12438                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:231  
     5766    12439    1   REMSEG: PROC ALTRET;
     5767    12440    2          DCL I SBIN;
     5768    12441    2          DCL SAVE_MISEG BIT(72);
     5769    12442    2          DCL KLB SBIN;
     5770    12443        /* */
     5771    12444    2          IF CRECX = KEYCNT THEN
     5772    12445    2             SEGCNT=FM$GRAN.NAVX-POFFW(SEG$, BUF$);
     5773    12446    2          ELSE
     5774    12447    2             IF CRECX+1 < BOUND THEN
     5775    12448    2                SEGCNT=FM$KEYTBL(CRECX+1)-POFFW(SEG$, BUF$);
     5776    12449    2             ELSE
     5777    12450    2                SEGCNT=FM$KEYTBL(CRECX+1)+512-POFFW(SEG$, BUF$);
     5778    12451
     5779    12452    3   LOOP:  DO WHILE (SEGCNT > 0);
     5780    12453    3             CALL REMOVESEG ALTRET(ERR);
     5781    12454    3             IF SEGCNT = 0 AND CRECX = KEYCNT AND KEYCNT > 0 THEN
     5782    12455    4                DO;   /* MAYBE GET NEXT SEG */
     5783    12456    4                IF CRECX >= BOUND THEN
     5784    12457    4                   KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);
     5785    12458    4                ELSE
     5786    12459    4                   KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));
     5787    12460    4                IF ORG = %INDEXED# THEN
     5788    12461    4                   KLB=FM$KEYENT.KLB;
     5789    12462    4                ELSE
     5790    12463    4                   KLB=FM$IRENT.KLB+1;
     5791    12464    4                IF FM$GRAN.NAVX = POFFW(KEY$, BUF$)+(KLB+4)/4 THEN
     5792    12465    5                   DO;   /* TRY TO GET NEXT SEG */
     5793    12466    5                   CALL NXTSEG ALTRET(ERR);
     5794    12467    5                   IF SEG$ ~= ADDR(NIL) THEN
     5795    12468    6                      DO;   /* PULL IN SEG */
     5796    12469    6                      SAVE_MISEG=FM$MISEG;
     5797    12470    6                      CALL REMOVESEG ALTRET(ERR);
     5798    12471    6                      CALL CURKEY ALTRET(ERR);
     5799    12472    6                      FM$MISEG=SAVE_MISEG;
     5800    12473    6                      FM$GRAN.NAVX=FM$GRAN.NAVX+2;
     5801    12474    6                      FM$GRAN.AVAIL=FM$GRAN.AVAIL-2;
     5802    12475    6                      F$DCB.BFR.BUFUP(1)='1'B;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:232  
     5803    12476    6                      SEGCNT=2;
     5804    12477    6                      END;  /* PULL IN SEG */
     5805    12478    5                   END;  /* TRY TO GET NEXT SEG */
     5806    12479    4                END;  /* MAYBE GET NEXT SEG */
     5807    12480    3             IF SEGCNT=0 AND CRECX=KEYCNT AND SEG$~=ADDR(NIL) THEN
     5808    12481    4                DO;  /* See if there are more on next index gran */
     5809    12482    4                CALL NXTSEG ALTRET(ERR);
     5810    12483    4                IF SEG$~=ADDR(NIL) THEN
     5811    12484    4                   IF CRECX=KEYCNT THEN
     5812    12485    4                      SEGCNT=FM$GRAN.NAVX-POFFW(SEG$,BUF$);
     5813    12486    4                   ELSE
     5814    12487    4                      IF CRECX+1 < BOUND THEN
     5815    12488    4                         SEGCNT=FM$KEYTBL(CRECX+1)-POFFW(SEG$,BUF$);
     5816    12489    4                      ELSE
     5817    12490    4                         SEGCNT=FM$KEYTBL(CRECX+1)+512-POFFW(SEG$,BUF$);
     5818    12491    4                END; /* See if there are more on next index gran */
     5819    12492    3             IF SEG$ = ADDR(NIL) THEN
     5820    12493    3                EXIT LOOP;
     5821    12494    3             ELSE
     5822    12495    3                IF FM$MISEG.FAK THEN
     5823    12496    3                   EXIT LOOP;
     5824    12497    3          END;  /* WHILE */
     5825    12498
     5826    12499    2          IF SEG$ = ADDR(NIL) OR SEGCNT = 0 THEN
     5827    12500    3             DO;   /* POSSIBLE LAST SEG */
     5828    12501    3             CALL CURKEY ALTRET(ERR);
     5829    12502
     5830    12503    3             IF ORG = %INDEXED# THEN
     5831    12504    3                KLB=FM$KEYENT.KLB;
     5832    12505    3             ELSE
     5833    12506    3                KLB=FM$IRENT.KLB+1;
     5834    12507
     5835    12508    3             IF CRECX < KEYCNT THEN
     5836    12509    4                DO;   /* MIDDLE KEY */
     5837    12510    4                IF CRECX+1 < BOUND THEN
     5838    12511    4                   I=FM$KEYTBL(CRECX+1);
     5839    12512    4                ELSE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:233  
     5840    12513    4                   I=FM$KEYTBL(CRECX+1)+512;
     5841    12514    4                IF I = POFFW(KEY$, BUF$)+(KLB+4)/4 THEN
     5842    12515    5                   DO;   /* NO MORE SEGS */
     5843    12516    5                   CALL REMKEY ALTRET(ERR);
     5844    12517    5                   F$DCB.RPOS='1'B;
     5845    12518    5                   SEG$=ADDR(NIL);
     5846    12519    5                   SEGX=0;
     5847    12520    5                   F$DCB.SEGX=0;
     5848    12521    5                   END;  /* NO MORE SEGS */
     5849    12522    4                END;  /* MIDDLE KEY */
     5850    12523    3             ELSE
     5851    12524    4                DO;   /* LAST KEY */
     5852    12525    4                IF FM$GRAN.NAVX = POFFW(KEY$, BUF$)+(KLB+4)/4 THEN
     5853    12526    5                   DO;   /* REMOVE KEY */
     5854    12527    5                   CALL REMKEY ALTRET(ERR);
     5855    12528    5                   SEGX=0;
     5856    12529    5                   SEG$=ADDR(NIL);
     5857    12530    5                   F$DCB.SEGX=0;
     5858    12531    5                   END;  /* REMOVE KEY */
     5859    12532    4                END;  /* LAST KEY */
     5860    12533    3             CALL NXTKEY ALTRET(NXTEOF);
     5861    12534    3             SEG$=ADDR(NIL);
     5862    12535    3             SEGX=0;
     5863    12536    3             F$DCB.SEGX=0;
     5864    12537    3             END;  /* POSSIBLE LAST SEG */
     5865    12538
     5866    12539    2          F$DCB.RPOS='1'B;
     5867    12540
     5868    12541    2          RETURN;
     5869    12542    2   NXTEOF: IF B$JIT.ERR.CODE = %E$EOF THEN
     5870    12543    3             DO;   /* EOF */
     5871    12544    3             SEG$=ADDR(NIL);
     5872    12545    3             SEGX=0;
     5873    12546    3             F$DCB.SEGX=0;
     5874    12547    3             B$JIT.ERR='0'B;
     5875    12548    3             RETURN;
     5876    12549    3             END;  /* EOF */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:234  
     5877    12550    2   ERR:   ALTRETURN;
     5878    12551    2          END REMSEG;
     5879    12552               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:235  
     5880    12553        /*I*     NAME:     RESTOREPOS
     5881    12554                 PURPOSE:  To restore position
     5882    12555                 DESCRIPTION:
     5883    12556                      First, make sure that we have the current index
     5884    12557                 granule in memory.  Then set some local variables for
     5885    12558                 quicker access.
     5886    12559        */
     5887    12560    1   RESTOREPOS: PROC ALTRET;
     5888    12561        /* */
     5889    12562    2          DA=F$DCB.BFR.DA(1);
     5890    12563    2          F$DCB.LVL=0;
     5891    12564    2          BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));
     5892    12565    2          IF BUF$ = ADDR(NIL) THEN
     5893    12566    2             CALL FMD$REDBUF(BUF$, 1, DA, 0, -1) ALTRET(ERR);
     5894    12567
     5895    12568    2          KEYCNT=FM$GRAN.KEYCNT;
     5896    12569    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
     5897    12570    2          BOUND=FM$KEYTBL(0);
     5898    12571    2          CRECX=F$DCB.CRECX;
     5899    12572    2          SEGX=F$DCB.SEGX;
     5900    12573    2          KEY$=ADDR(NIL);
     5901    12574    2          SEG$=ADDR(NIL);
     5902    12575
     5903    12576    2          RETURN;
     5904    12577    2   ERR:   ALTRETURN;
     5905    12578    2          END RESTOREPOS;
     5906    12579               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:236  
     5907    12580        /*I*     NAME:     REUSE_ALT
     5908    12581                 PURPOSE:  To reuse a deleted record
     5909    12582                 DESCRIPTION:
     5910    12583                      When we reuse a key that has been marked as deleted, then
     5911    12584                 we have to rebuild the alternate indexes associated with the
     5912    12585                 record.  Loop through the table of alternate indexes, setting
     5913    12586                 the INDXCHNG bit.  This indicates whether or not this index
     5914    12587                 needs to be rebuilt.  This bit is set if the index is unique
     5915    12588                 or this is not load mode.  In either case, the index must be
     5916    12589                 continually up to date.
     5917    12590
     5918    12591                      Call REBLD_ALT to actually rebuild the indexes.
     5919    12592        */
     5920    12593                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:237  
     5921    12594    1   REUSE_ALT: PROC ALTRET;
     5922    12595    2          DCL I SBIN;
     5923    12596        /* */
     5924    12597    2          IF ORG = %INDEXED# THEN
     5925    12598    3             DO I=1 TO ALTKEYS.NUMENTS-1;
     5926    12599    3                IF (NOT F$DCB.LDFLG) OR
     5927    12600    3                   (ALTKEYS.K.UNIQUE(I) AND NOT F$DCB.UNIQUEBLD) THEN
     5928    12601    3                   ALTKEYS.K.INDXCHNG(I)='1'B;
     5929    12602    3                ELSE
     5930    12603    4                   DO;   /* LOAD MODE */
     5931    12604    4                   FM$CFU.ALTBLD='1'B;
     5932    12605    4                   ALTKEYS.K.INDXCHNG(I)='0'B;
     5933    12606    4                   END;  /* LOAD MODE */
     5934    12607    3             END;  /* DO I */
     5935    12608    2          ELSE
     5936    12609    3             DO I=1 TO IRKEYS.NKEYS-1;
     5937    12610    3                IF (NOT F$DCB.LDFLG) OR
     5938    12611    3                   (IRKEYS.K.UNIQUE(I) AND NOT F$DCB.UNIQUEBLD) THEN
     5939    12612    3                   IRKEYS.K.INDXCHNG(I)='1'B;
     5940    12613    3                ELSE
     5941    12614    4                   DO;   /* LOAD MODE */
     5942    12615    4                   FM$CFU.ALTBLD='1'B;
     5943    12616    4                   IRKEYS.K.INDXCHNG(I)='0'B;
     5944    12617    4                   END;  /* LOAD MODE */
     5945    12618    3             END;  /* DO I */
     5946    12619
     5947    12620    2          CALL REBLD_ALT ALTRET(ERR);
     5948    12621    2          INDEX#=1;
     5949    12622    2          CALL SETINDEX ALTRET(ERR);
     5950    12623    2          CALL RESTOREPOS ALTRET(ERR);
     5951    12624    2          CALL CURKEY ALTRET(ERR);
     5952    12625
     5953    12626    2          RETURN;
     5954    12627    2   ERR:   ALTRETURN;
     5955    12628    2          END REUSE_ALT;
     5956    12629               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:238  
     5957    12630        /*I*     NAME:     SETARG
     5958    12631                 PURPOSE:  To set some pointers
     5959    12632                 DESCRIPTION:
     5960    12633                      This routine is used from the various entry points to set
     5961    12634                 some pointers that are passed as arguments.
     5962    12635        */
     5963    12636    1   SETARG: PROC;
     5964    12637        /* */
     5965    12638    2          PSEG$=SEG$;
     5966    12639    2          IF ADDR(PKEY$) ~= ADDR(NIL) THEN
     5967    12640    2             PKEY$=KEY$;
     5968    12641    2          RETURN;
     5969    12642    2          END SETARG;
     5970    12643               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:239  
     5971    12644        /*I*     NAME:     SETID
     5972    12645                 PURPOSE:  To remember current position in shared files.
     5973    12646                 DESCRIPTION:
     5974    12647                      For shared files, the only accurate way to remember
     5975    12648                 current position is by key or record ID.  Keys are faster,
     5976    12649                 but take up lots of space.  So, we just store the
     5977    12650                 record ID in the DCB.
     5978    12651        */
     5979    12652    1   SETID: PROC;
     5980    12653        /* */
     5981    12654    2          IF SEG$ ~= ADDR(NIL) THEN
     5982    12655    3             DO;   /* SET ID */
     5983    12656    3             F$DCB.ID.DA=FM$MISEG.GDA;
     5984    12657    3             F$DCB.ID.GX=FM$MISEG.GX;
     5985    12658    3             END;  /* SET ID */
     5986    12659    2          ELSE
     5987    12660    3             DO;   /* NO ID */
     5988    12661    3             F$DCB.ID='0'B;
     5989    12662    3             END;  /* NO ID */
     5990    12663    2          RETURN;
     5991    12664    2          END SETID;
     5992    12665               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:240  
     5993    12666        /*I*     NAME:     SETINDEX
     5994    12667                 PURPOSE:  To position to a specified index
     5995    12668                 DESCRIPTION:
     5996    12669                      Call the correct subroutine depending on whether this is
     5997    12670                 an indexed, or irel file.
     5998    12671        */
     5999    12672    1   SETINDEX: PROC ALTRET;
     6000    12673        /* */
     6001    12674    2          IF ORG = %INDEXED# THEN
     6002    12675    2             CALL SETUP_ALTKEY ALTRET(ERR);
     6003    12676    2          ELSE
     6004    12677    2             CALL SETUP_IRKEY ALTRET(ERR);
     6005    12678
     6006    12679    2          RETURN;
     6007    12680    2   ERR:   ALTRETURN;
     6008    12681    2          END SETINDEX;
     6009    12682               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:241  
     6010    12683        /*I*     NAME:     SETKEY
     6011    12684                 PURPOSE:  To set up the KEYIN$ pointer
     6012    12685                 DESCRIPTION:
     6013    12686                      KEYIN$ is used to point to a user specified key.  If this
     6014    12687                 is a keyed file, then just set KEYIN$ to whatever the user specified.
     6015    12688                 KEYIN_SIZE is the size of the user specified key.
     6016    12689
     6017    12690                      If this is an indexed or IREL file, then first get the
     6018    12691                 size.  If this is a write, then the key is actually imbedded
     6019    12692                 in the record that the user specified.
     6020    12693        */
     6021    12694                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:242  
     6022    12695    1   SETKEY: PROC(K$) ALTRET;
     6023    12696    2          DCL K$ PTR;
     6024    12697        /* */
     6025    12698    2          IF ORG = %KEYED# THEN
     6026    12699    3             DO;   /* KEYED FILE */
     6027    12700    3             KEYIN$=K$;
     6028    12701    3             TEMP_CHAR=KEYIN.SIZE;
     6029    12702    3             KEYIN_SIZE=ASCBIN(TEMP_CHAR);
     6030    12703    3             IF KEYIN_SIZE = 0 OR KEYIN_SIZE > 255 THEN
     6031    12704    4                DO;   /* BAD KEY LENGTH */
     6032    12705    4                B$JIT.ERR = ERRBADKEY;
     6033    12706        /*E*   ERROR:   FMG-E$BADKEY-2
     6034    12707               MESSAGE: Illegal key length% for %UF%
     6035    12708               MESSAGE1: Key length is 0 or > 255
     6036    12709        */
     6037    12710    4                ALTRETURN;
     6038    12711    4                END;  /* BAD KEY LENGTH */
     6039    12712    3             END;  /* KEYED FILE */
     6040    12713    2          ELSE
     6041    12714    3             DO;   /* INDEXED FILE */
     6042    12715    3             IF ORG = %INDEXED# THEN
     6043    12716    3                KEYIN_SIZE=F$DCB.KEYL;
     6044    12717    3             ELSE
     6045    12718    4                DO;   /* SET UP KEY SIZES */
     6046    12719    4                KEYIN_SIZE=IRKEYS.K.KEYL(INDEX#);
     6047    12720    4                CALL HFF$DSIZ(K$, USERKEY_SIZE);
     6048    12721    4                END;  /* SET UP KEY SIZES */
     6049    12722    3             IF FPTCODE = FPTWRITE THEN
     6050    12723    3                KEYIN$=PINCRC(F$DCB.UB$, F$DCB.KEYX);
     6051    12724    3             ELSE
     6052    12725    3                KEYIN$=K$;
     6053    12726    3             END;  /* INDEXED FILE */
     6054    12727
     6055    12728    2          RETURN;
     6056    12729    2          END SETKEY;
     6057    12730               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:243  
     6058    12731        /*I*     NAME:     SETPTRS
     6059    12732                 PURPOSE:  To set up some pointers
     6060    12733                 DESCRIPTION:
     6061    12734                      After positioning in a file, then initialize the KEY$ and SEG$
     6062    12735                 pointers.  Also, set SEGX.
     6063    12736        */
     6064    12737    1   SETPTRS:  PROC;
     6065    12738        /* */
     6066    12739    2          IF CRECX < BOUND THEN
     6067    12740    2             KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));
     6068    12741    2          ELSE
     6069    12742    2             KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);
     6070    12743
     6071    12744    2          IF ORG = %IREL# THEN
     6072    12745    2             SEG$=PINCRW(KEY$, (FM$IRENT.KLB+5)/4);
     6073    12746    2          ELSE
     6074    12747    2             SEG$=PINCRW(KEY$, (FM$KEYENT.KLB+4)/4);
     6075    12748    2          SEGX=POFFW(SEG$, BUF$);
     6076    12749    2          F$DCB.SEGX=SEGX;
     6077    12750
     6078    12751    2          RETURN;
     6079    12752    2          END SETPTRS;
     6080    12753               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:244  
     6081    12754        /*I*     NAME:     SETUP
     6082    12755                 PURPOSE:  To do basic initialization for entry points
     6083    12756                 DESCRIPTION:
     6084    12757                      When we enter from one of the odd entry points, then some
     6085    12758                 basic initialization needs to be done.  We don't have to worry
     6086    12759                 about alternate indexes or irel files here, yet.
     6087    12760        */
     6088    12761    1   SETUP: PROC;
     6089    12762        /* */
     6090    12763    2          JDCB$=B$JIT.DCB$;
     6091    12764    2          CFU$=F$DCB.CFU$;
     6092    12765    2          BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));
     6093    12766    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
     6094    12767    2          BOUND=FM$KEYTBL(0);
     6095    12768    2          KEYCNT=FM$GRAN.KEYCNT;
     6096    12769    2          CRECX=F$DCB.CRECX;
     6097    12770    2          ORG=0;
     6098    12771    2          SEGX=F$DCB.SEGX;
     6099    12772    2          INDEX#=0;
     6100    12773    2          ALTKEY$=ADDR(NIL);
     6101    12774    2          ANEWSEG=%NOO;
     6102    12775    2          RETURN;
     6103    12776    2          END SETUP;
     6104    12777               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:245  
     6105    12778        /*I*     NAME:     SETUP_ALTKEY
     6106    12779                 PURPOSE:  To change indexes on indexed files
     6107    12780                 DESCRIPTION:
     6108    12781                      If the index specified was 0, then that means to use the same
     6109    12782                 index that was used last time.
     6110    12783
     6111    12784                      Otherwise, if the index changed, then there is a lot that has
     6112    12785                 to be reinitialized.  First of all, check for the index being legal.
     6113    12786                 If the ALTBLD flag is set and this isn't a primary, or UNIQUE index,
     6114    12787                 then the index is not complete.
     6115    12788
     6116    12789                      Next, we stash away our current position in the ALTKEYS
     6117    12790                 structure.  Then, we reset the index, and restore the position
     6118    12791                 from the last time this index was used.
     6119    12792        */
     6120    12793                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:246  
     6121    12794    1   SETUP_ALTKEY: PROC ALTRET;
     6122    12795    2          DCL I SBIN;
     6123    12796        /* */
     6124    12797    2          ALTKEY$=PINCRW(B$ROSEG$, F$DCB.ALTKEYX);
     6125    12798
     6126    12799    2          IF INDEX# = 0 THEN
     6127    12800    2             INDEX#=F$DCB.INDX-1;
     6128    12801    2          ELSE
     6129    12802    2             IF INDEX# ~= F$DCB.INDX THEN
     6130    12803    3                DO;   /* CHANGE INDEX */
     6131    12804    3                IF ALTKEYS.NUMENTS < INDEX# OR
     6132    12805    3                   ALTKEYS.K.FDA(INDEX#-1) = 0 THEN
     6133    12806    4                   DO;   /* ERROR */
     6134    12807    4                   B$JIT.ERR=ERRNOSUCHINDX;
     6135    12808        /*E*   ERROR:      FMG-E$NOSUCHINDX-2
     6136    12809               MESSAGE: Indexed or IREL file %%UF %does not have the specified index.
     6137    12810        */
     6138    12811    4                   ALTRETURN;
     6139    12812    4                   END;  /* ERROR */
     6140    12813
     6141    12814    3                IF F$DCB.UNIQUEBLD OR
     6142    12815    3                   (FM$CFU.ALTBLD AND
     6143    12816    3                   (INDEX# ~= 1 AND (NOT ALTKEYS.K.UNIQUE(INDEX#-1)))) THEN
     6144    12817    4                   DO;   /* ANOTHER ERROR */
     6145    12818    4                   B$JIT.ERR=ERRNOALT;
     6146    12819        /*E*   ERROR:      FMG-E$NOALT-2
     6147    12820               MESSAGE: Specified alternate index is incomplete.
     6148    12821               MESSAGE1: The alternate indexes must be rebuilt before
     6149    12822                         they can be accessed.
     6150    12823        */
     6151    12824    4                   ALTRETURN;
     6152    12825    4                   END;  /* ANOTHER ERROR */
     6153    12826
     6154    12827    3                CALL FMD$FLSHBUF(1);
     6155    12828    3                I=F$DCB.INDX-1;
     6156    12829    3                ALTKEYS.K.RPOS(I)=F$DCB.RPOS;
     6157    12830    3                ALTKEYS.K.CRECX(I)=F$DCB.CRECX;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:247  
     6158    12831    3                ALTKEYS.K.SEGX(I)=F$DCB.SEGX;
     6159    12832    3                ALTKEYS.K.CDA(I)=F$DCB.BFR.DA(1);
     6160    12833    3                F$DCB.INDX=INDEX#;
     6161    12834
     6162    12835    3                INDEX#=INDEX#-1;
     6163    12836    3                EOP=0;
     6164    12837    3                F$DCB.RPOS=ALTKEYS.K.RPOS(INDEX#);
     6165    12838    3                F$DCB.CRECX=ALTKEYS.K.CRECX(INDEX#);
     6166    12839    3                F$DCB.KEYL=ALTKEYS.K.KEYL(INDEX#);
     6167    12840    3                F$DCB.KEYX=ALTKEYS.K.KEYX(INDEX#);
     6168    12841    3                KEYIN_SIZE=F$DCB.KEYL;
     6169    12842    3                CRECX=F$DCB.CRECX;
     6170    12843    3                F$DCB.SEGX=ALTKEYS.K.SEGX(INDEX#);
     6171    12844    3                SEGX=F$DCB.SEGX;
     6172    12845    3                F$DCB.BFR.DA(1)=ALTKEYS.K.CDA(INDEX#);
     6173    12846    3                F$DCB.TDA=0;
     6174    12847    3                IF ALTKEYS.K.TDA(INDEX#) ~= 0 THEN
     6175    12848    4                   DO;   /* SET UP TDA */
     6176    12849    4                   F$DCB.TDA=ALTKEYS.K.TDA(INDEX#);
     6177    12850    4                   F$DCB.TDALVL=ALTKEYS.K.TDALVL(INDEX#);
     6178    12851    4                   CALL FMD$FLSHBUF(2);
     6179    12852    4                   F$DCB.BFR.DA(2)=F$DCB.TDA;
     6180    12853    4                   END;  /* SET UP TDA */
     6181    12854
     6182    12855    3                END;  /* CHANGE INDEX */
     6183    12856    2             ELSE
     6184    12857    2                INDEX#=INDEX#-1;
     6185    12858
     6186    12859    2          RETURN;
     6187    12860    2          END SETUP_ALTKEY;
     6188    12861               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:248  
     6189    12862        /*I*     NAME:     SETUP_IRKEY
     6190    12863                 PURPOSE:  To change indexes for an irel file
     6191    12864                 DESCRIPTION:
     6192    12865                      If the index specified was 0, then that means to use the
     6193    12866                 same index that was used last time.  Otherwise, if the index
     6194    12867                 changed, then reinitialize some stuff.  Make sure that this index
     6195    12868                 is legal.  Also, if ALTBLD is set, and this isn't the primary index,
     6196    12869                 or a unique index, then that means that the index needs to be
     6197    12870                 rebuilt.
     6198    12871
     6199    12872                      Stash away our current position.  Then reset the index, and
     6200    12873                 restore our old position.  F$DCB.KEYX is always 0 since the
     6201    12874                 key is spread across the record in random places.
     6202    12875        */
     6203    12876                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:249  
     6204    12877    1   SETUP_IRKEY: PROC ALTRET;
     6205    12878    2          DCL I SBIN;
     6206    12879        /* */
     6207    12880    2          ALTKEY$=PINCRW(B$ROSEG$, F$DCB.ALTKEYX);
     6208    12881
     6209    12882    2          IF INDEX# = 0 THEN
     6210    12883    2             INDEX#=F$DCB.INDX-1;
     6211    12884    2          ELSE
     6212    12885    2             IF INDEX# ~= F$DCB.INDX THEN
     6213    12886    3                DO;   /* CHANGE INDEX */
     6214    12887    3                IF IRKEYS.NKEYS < INDEX# OR
     6215    12888    3                   IRKEYS.K.FDA(INDEX#-1) = 0 THEN
     6216    12889    4                   DO;   /* NO SUCH INDEX */
     6217    12890    4                   B$JIT.ERR=ERRNOSUCHINDX;
     6218    12891    4                   ALTRETURN;
     6219    12892    4                   END;  /* NO SUCH INDEX */
     6220    12893
     6221    12894    3                IF F$DCB.UNIQUEBLD OR
     6222    12895    3                   (FM$CFU.ALTBLD AND
     6223    12896    3                   (INDEX# ~= 1 AND (NOT IRKEYS.K.UNIQUE(INDEX#-1)))) THEN
     6224    12897    4                   DO;   /* NEEDS REBUILDING */
     6225    12898    4                   B$JIT.ERR=ERRNOALT;
     6226    12899    4                   ALTRETURN;
     6227    12900    4                   END;  /* NEEDS REBUILDING */
     6228    12901
     6229    12902    3                CALL FMD$FLSHBUF(1);
     6230    12903    3                I=F$DCB.INDX-1;
     6231    12904    3                IRKEYS.K.RPOS(I)=F$DCB.RPOS;
     6232    12905    3                IRKEYS.K.CRECX(I)=F$DCB.CRECX;
     6233    12906    3                IRKEYS.K.SEGX(I)=F$DCB.SEGX;
     6234    12907    3                IRKEYS.K.CDA(I)=F$DCB.BFR.DA(1);
     6235    12908    3                F$DCB.INDX=INDEX#;
     6236    12909
     6237    12910    3                INDEX#=INDEX#-1;
     6238    12911    3                EOP=0;
     6239    12912    3                F$DCB.RPOS=IRKEYS.K.RPOS(INDEX#);
     6240    12913    3                F$DCB.CRECX=IRKEYS.K.CRECX(INDEX#);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:250  
     6241    12914    3                F$DCB.KEYL=IRKEYS.K.KEYL(INDEX#);
     6242    12915    3                KEYIN_SIZE=IRKEYS.K.KEYL(INDEX#);
     6243    12916    3                F$DCB.KEYX=0;
     6244    12917    3                F$DCB.SEGX=IRKEYS.K.SEGX(INDEX#);
     6245    12918    3                SEGX=F$DCB.SEGX;
     6246    12919    3                F$DCB.BFR.DA(1)=IRKEYS.K.CDA(INDEX#);
     6247    12920    3                IF IRKEYS.K.TDA(INDEX#) ~= 0 THEN
     6248    12921    4                   DO;   /* SET UP TDA */
     6249    12922    4                   F$DCB.TDA=IRKEYS.K.TDA(INDEX#);
     6250    12923    4                   F$DCB.TDALVL=IRKEYS.K.TDALVL(INDEX#);
     6251    12924    4                   CALL FMD$FLSHBUF(2);
     6252    12925    4                   F$DCB.BFR.DA(2)=F$DCB.TDA;
     6253    12926    4                   END;  /* SET UP TDA */
     6254    12927    3                ELSE
     6255    12928    3                   F$DCB.TDA=0;
     6256    12929
     6257    12930    3                END;  /* CHANGE INDEX */
     6258    12931    2             ELSE
     6259    12932    2                INDEX#=INDEX#-1;
     6260    12933
     6261    12934    2          RETURN;
     6262    12935    2          END SETUP_IRKEY;
     6263    12936               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:251  
     6264    12937        /*I*     NAME:     SET_LEN
     6265    12938                 PURPOSE:  To set LEN
     6266    12939                 DESCRIPTION:
     6267    12940                      We have to pull the length of decimal fields from
     6268    12941                 RECFIELD.DECFIELD since they can have a scale factor. Packed
     6269    12942                 decimal fields will give length in nibbles. Unpacked fields
     6270    12943                 will give length in bytes. Otherwise, use RECFIELD.FIELD.
     6271    12944                 UBIN, SBIN, and UTS data types have lengths in bits, but
     6272    12945                 they must be byte aligned on both sides to qualify as keys,
     6273    12946                 so we can just figure their lengths in bytes. The others
     6274    12947                 (CHAR, SFLT, and DFLT) already have their lengths in bytes.
     6275    12948        */
     6276    12949    1   SET_LEN: PROC;
     6277    12950        /* */
     6278    12951    3          DO CASE(RECFIELD.FIELD.TYPE(FN));
     6279    12952    3             CASE(%UDLS_DATATYPE, %UDTS_DATATYPE, %UDNS_DATATYPE,
     6280    12953    3                  %PDLA_DATATYPE, %PDTA_DATATYPE, %PDNS_DATATYPE,
     6281    12954    3                  %UDLO_DATATYPE, %UDTO_DATATYPE, %PDLE_DATATYPE,
     6282    12955    3                  %PDTE_DATATYPE, %PDFLT_DATATYPE, %UDFLT_DATATYPE,
     6283    12956    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     6284    12957    3                LEN=RECFIELD.DECFIELD.LEN(FN);
     6285    12958
     6286    12959    3             CASE(%SBIN_DATATYPE, %UBIN_DATATYPE, %UTS_DATATYPE);
     6287    12960    3                LEN=RECFIELD.FIELD.LEN(FN)/9;
     6288    12961
     6289    12962    3             CASE(ELSE);
     6290    12963    3                LEN=RECFIELD.FIELD.LEN(FN);
     6291    12964
     6292    12965    3          END;  /* CASE */
     6293    12966    2          RETURN;
     6294    12967    2          END SET_LEN;
     6295    12968               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:252  
     6296    12969        /*I*     NAME:     SET_SIZE
     6297    12970                 PURPOSE:  To get the size in bytes of a key field.
     6298    12971                 DESCRIPTION:
     6299    12972                 Packed decimal fields have lengths specified in nibbles.
     6300    12973                 Turn this into bytes, rounding up for odd lengths.  SBIN,
     6301    12974                 UBIN, and UTS fields have lengths in bits, but they must
     6302    12975                 have been an even number of bytes long to qualify as key
     6303    12976                 fields, so just divide by 9.  All other key fields have
     6304    12977                 lengths already in bytes.
     6305    12978        */
     6306    12979    1   SET_SIZE: PROC(SIZE);
     6307    12980        /* */
     6308    12981    2   DCL SIZE UBIN;
     6309    12982        /* */
     6310    12983    3          DO CASE(RECFIELD.FIELD.TYPE(FN));
     6311    12984    3             CASE(%PDLA_DATATYPE, %PDTA_DATATYPE, %PDLE_DATATYPE,
     6312    12985    3                  %PDTE_DATATYPE, %PDNS_DATATYPE, %PDFLT_DATATYPE,
     6313    12986    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     6314    12987    3                SIZE=(RECFIELD.DECFIELD.LEN(FN)+1)/2;
     6315    12988
     6316    12989    3             CASE(%UDLS_DATATYPE, %UDTS_DATATYPE, %UDNS_DATATYPE,
     6317    12990    3                  %UDLO_DATATYPE, %UDTO_DATATYPE, %UDFLT_DATATYPE);
     6318    12991    3                SIZE=RECFIELD.DECFIELD.LEN(FN);
     6319    12992
     6320    12993    3             CASE(%UBIN_DATATYPE, %SBIN_DATATYPE, %UTS_DATATYPE);
     6321    12994    3                SIZE=RECFIELD.FIELD.LEN(FN)/9;
     6322    12995
     6323    12996    3             CASE(ELSE); /* CHAR, SFLT, DFLT */
     6324    12997    3                SIZE=RECFIELD.FIELD.LEN(FN);
     6325    12998
     6326    12999    3             END; /* Case */
     6327    13000
     6328    13001    2          RETURN;
     6329    13002    2          END SET_SIZE;
     6330    13003               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:253  
     6331    13004        /*I*     NAME:     SHAREPOS
     6332    13005                 PURPOSE:  To set up some local variables
     6333    13006                 DESCRIPTION:
     6334    13007                      First, make sure that we have the current index granule in
     6335    13008                 memory.  Then, set some local variables for quicker access.
     6336    13009
     6337    13010                      If the file is shared, then there is a chance that the
     6338    13011                 keys moved around.  If this is an alternate index, then
     6339    13012                 there is no way to restore the previous position with an
     6340    13013                 ID alone.  If a record was rewritten, then trying to find
     6341    13014                 the record by using an ID would position to where the
     6342    13015                 record was rewritten, not where we left off.  Otherwise,
     6343    13016                 first make sure that we point to a key in the granule.
     6344    13017                 Then, begin searching forward for the key that we used
     6345    13018                 to be at.                                                            */
     6346    13019                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:254  
     6347    13020    1   SHAREPOS: PROC ALTRET;
     6348    13021    2            DCL RPOS BIT(1);
     6349    13022        /* */
     6350    13023    2          DA=F$DCB.BFR.DA(1);
     6351    13024    2          F$DCB.LVL=0;
     6352    13025    2          BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));
     6353    13026    2          IF BUF$ = ADDR(NIL) THEN
     6354    13027    2             CALL FMD$REDBUF(BUF$, 1, DA, 0, -1) ALTRET(ERR);
     6355    13028
     6356    13029    2          KEYCNT=FM$GRAN.KEYCNT;
     6357    13030    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
     6358    13031    2          BOUND=FM$KEYTBL(0);
     6359    13032    2          CRECX=F$DCB.CRECX;
     6360    13033    2          SEGX=F$DCB.SEGX;
     6361    13034    2          KEY$=ADDR(NIL);
     6362    13035    2          SEG$=ADDR(NIL);
     6363    13036
     6364    13037    2          IF FM$CFU.SHARE = %ALL# THEN
     6365    13038    3             DO;   /* RESTORE POSITION */
     6366    13039                  /* WRNOKEY does call SHAREPOS, but it's only used when
     6367    13040                     ORG=KEYED, so INDEX# is always 0. Any other type of write
     6368    13041                     always specifies a key, either directly or from the
     6369    13042                     user's record buffer, so we don't want to error our
     6370    13043                     internal alt key operations for those.                */
     6371    13044    3             IF INDEX# > 0 AND FPTCODE ~= FPTWRITE THEN
     6372    13045    4                DO;   /* CANT RESTORE ON ALTERNATE INDEXES */
     6373    13046    4                B$JIT.ERR=ERRNOALTKEY;
     6374    13047    4                ALTRETURN;
     6375    13048    4                END;  /* CANT RESTORE ON ALTERNATE INDEXES */
     6376    13049        /*E*   ERROR:   FMG-E$NOALTKEY-2
     6377    13050               MESSAGE: A key must be specified
     6378    13051               MESSAGE1: Operations on alternate indexes to a shared
     6379    13052                         file must specify a key.
     6380    13053        */
     6381    13054
     6382    13055    3             IF FM$CFU.MODCNT ~= F$DCB.MODCNT THEN
     6383    13056    4                DO;   /* FIND POSITION */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:255  
     6384    13057    4                RPOS=F$DCB.RPOS;
     6385    13058    4                IF CRECX > KEYCNT THEN
     6386    13059    5                   DO;   /* POSITION TO LAST KEY */
     6387    13060    5                   F$DCB.RPOS='1'B;
     6388    13061    5                   CRECX=KEYCNT+1;
     6389    13062    5                   F$DCB.CRECX=CRECX;
     6390    13063    5                   END;  /* POSITION TO LAST KEY */
     6391    13064
     6392    13065    4                IF F$DCB.ID ~= '0'B THEN
     6393    13066    5                   DO;   /* RESTORE POSITION */
     6394    13067    5                   IF F$DCB.ID.DA = 1 THEN
     6395    13068    5                      CALL PTOEOF ALTRET(ERR);
     6396    13069    5                   ELSE
     6397    13070    6                      DO;   /* POSITION TO KEY */
     6398    13071    6                      IF CRECX = 1 AND FM$GRAN.BLINK = 0 THEN
     6399    13072    6                         CALL SETPTRS;
     6400    13073    6                      ELSE
     6401    13074    6                         CALL CURKEY ALTRET(ERR);
     6402    13075    7                      DO WHILE (F$DCB.ID.DA ~= FM$MISEG.GDA OR
     6403    13076    7                                F$DCB.ID.GX ~= FM$MISEG.GX);
     6404    13077    7                         CALL NXTKEY ALTRET(ERR);
     6405    13078    7                      END;  /* WHILE */
     6406    13079    6                      END;  /* POSITION TO KEY */
     6407    13080    5                   END;  /* RESTORE POSITION */
     6408    13081    4                F$DCB.RPOS=RPOS;
     6409    13082    4                END;  /* FIND POSITION */
     6410    13083    3             END;  /* RESTORE POSITION */
     6411    13084
     6412    13085    2          RETURN;
     6413    13086    2   ERR:   ALTRETURN;
     6414    13087    2          END SHAREPOS;
     6415    13088               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:256  
     6416    13089        /*I*     NAME:     SLIDE
     6417    13090                 PURPOSE:  To make room in the current granule for a key
     6418    13091                           or segments
     6419    13092                 DESCRIPTION:
     6420    13093                      If this is a key, then the insertion point is the current
     6421    13094                 position.  If this is a segment, then the insertion point is at
     6422    13095                 the end of the key.  If we are adding a segment to a duplicate
     6423    13096                 record, then the insertion point will probably be in the middle
     6424    13097                 of a list of segments somewhere.
     6425    13098
     6426    13099                      TSIZE is the amount of space that needs to be moved. TOTSIZE
     6427    13100                 was set by the calling routine to be the number of words we need.
     6428    13101                 If this isn't at the end of the granule, then slide the stuff
     6429    13102                 back.  Now the key table has to be rebuilt.  First, adjust the
     6430    13103                 bound, if necessary, for the added key.  Then loop through
     6431    13104                 the key table, from the insertion point (INDX) to the end of
     6432    13105                 the key table.
     6433    13106
     6434    13107                      Now, set the space to all zeros.  If we are adding a key,
     6435    13108                 then we have to build the key.  If this is an irel file, then
     6436    13109                 we need to do a lot of work to build the key.  Otherwise,
     6437    13110                 set the key size and text.
     6438    13111
     6439    13112                      If this isn't a file (ie. file directory), then we have
     6440    13113                 to flush buffers 3 and 4, otherwise, they won't be flushed later
     6441    13114                 since they don't go through the normal file close.
     6442    13115        */
     6443    13116                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:257  
     6444    13117    1   SLIDE: PROC ALTRET;
     6445    13118    2          DCL I$ PTR;
     6446    13119    2          DCL TSIZE SBIN;
     6447    13120    2          DCL I SBIN;
     6448    13121    2          DCL J SBIN;
     6449    13122    2          DCL SIZE SBIN;
     6450    13123    2          DCL CHARS CHAR(KEYIN_SIZE) BASED;
     6451    13124    2          DCL 1 ZAP BASED,
     6452    13125    2               2 * CHAR(SIZE);
     6453    13126    2          DCL 1 KEY BASED ALIGNED,
     6454    13127    2               2 SIZE UBIN(9) CALIGNED,
     6455    13128    2               2 TEXT CHAR(KEYIN_SIZE) CALIGNED;
     6456    13129        /* */
     6457    13130    2          IF ADDFLG = %KEY THEN
     6458    13131    2             INDX=CRECX;
     6459    13132    2          ELSE
     6460    13133    2             INDX=CRECX+1;
     6461    13134
     6462    13135    2          IF ANEWSEG = %YESS THEN
     6463    13136    2             I$=SEG$;
     6464    13137    2          ELSE
     6465    13138    3             DO;   /* NORMAL INSERT */
     6466    13139    3             IF INDX > KEYCNT THEN
     6467    13140    3                I$=PINCRW(BUF$, FM$GRAN.NAVX);
     6468    13141    3             ELSE
     6469    13142    3                IF INDX < BOUND THEN
     6470    13143    3                   I$=PINCRW(BUF$, FM$KEYTBL(INDX));
     6471    13144    3                ELSE
     6472    13145    3                   I$=PINCRW(BUF$, FM$KEYTBL(INDX)+512);
     6473    13146    3             END;  /* NORMAL INSERT */
     6474    13147
     6475    13148    2          TSIZE=FM$GRAN.NAVX-POFFW(I$, BUF$);
     6476    13149
     6477    13150    2          IF TSIZE < 0 THEN
     6478    13151    3             DO;   /* ERROR */
     6479    13152    3             CALL FMB$ERRTYP(I);
     6480    13153    3             B$JIT.ERR=ERRDMY;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:258  
     6481    13154    3             B$JIT.ERR.CODE=I;
     6482    13155    3             CALL FMB$LOGERR(I, 12, 8, DA, BUF$, 0, 1, 2, CRECX);
     6483    13156    3             ALTRETURN;
     6484    13157    3             END;  /* ERROR */
     6485    13158
     6486    13159    2          IF TSIZE > 0 THEN
     6487    13160    3             DO;   /* MOVE KEYS */
     6488    13161    3             CALL FMR$SLIDE(I$, TOTSIZE, TSIZE);
     6489    13162    3             I=KEYCNT;
     6490    13163
     6491    13164    3             IF ADDFLG = %KEY THEN
     6492    13165    4                DO;   /* ADJUST BOUND */
     6493    13166    4                J=I+1;
     6494    13167    4                IF BOUND >= CRECX AND BOUND < SIZEC(FM$KEYTBL) THEN
     6495    13168    4                   BOUND=BOUND+1;
     6496    13169    4                END;  /* ADJUST BOUND */
     6497    13170    3             ELSE
     6498    13171    3                J=I;
     6499    13172
     6500    13173    4             DO WHILE (I >= INDX);
     6501    13174    4                TSIZE=FM$KEYTBL(I)+TOTSIZE;
     6502    13175    4                IF TSIZE > 511 AND J < BOUND THEN
     6503    13176    4                   BOUND=J;
     6504    13177    4                FM$KEYTBL(J)=TSIZE;
     6505    13178    4                I=I-1;
     6506    13179    4                J=J-1;
     6507    13180    4             END;  /* WHILE */
     6508    13181    3             FM$KEYTBL(0)=BOUND;
     6509    13182    3             END;  /* MOVE KEYS */
     6510    13183
     6511    13184    2          SIZE=TOTSIZE*4;
     6512    13185    2          I$->ZAP='0'B;
     6513    13186    2          F$DCB.BFR.BUFUP(1)='1'B;
     6514    13187
     6515    13188    2          IF ADDFLG = %KEY THEN
     6516    13189    3             DO;   /* PUT IN KEY TEXT */
     6517    13190    3             KEY$=I$;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:259  
     6518    13191    3             IF ORG = %IREL# THEN
     6519    13192    3                CALL BUILD_IRKEY(%FMREC);
     6520    13193    3             ELSE
     6521    13194    4                DO;   /* NORMAL KEYS */
     6522    13195    4                I$->KEY.SIZE=KEYIN_SIZE;
     6523    13196    4                IF ORG = %INDEXED# THEN
     6524    13197    4                   I$->KEY.TEXT=KEYIN$->CHARS;
     6525    13198    4                ELSE
     6526    13199    4                   I$->KEY.TEXT=KEYIN$->KEY.TEXT;
     6527    13200    4                END;  /* NORMAL KEYS */
     6528    13201
     6529    13202    3             TSIZE=POFFW(I$, BUF$);
     6530    13203    3             FM$KEYTBL(CRECX)=TSIZE;
     6531    13204    3             IF TSIZE > 511 AND CRECX < BOUND THEN
     6532    13205    4                DO;   /* ADJUST BOUND */
     6533    13206    4                FM$KEYTBL(0)=CRECX;
     6534    13207    4                BOUND=CRECX;
     6535    13208    4                END;  /* ADJUST BOUND */
     6536    13209
     6537    13210    3             KEYCNT=KEYCNT+1;
     6538    13211    3             FM$GRAN.KEYCNT=KEYCNT;
     6539    13212    3             SEG$=PINCRW(KEY$, KEYWORDS);
     6540    13213    3             END;  /* PUT IN KEY TEXT */
     6541    13214    2          ELSE
     6542    13215    2             SEG$=I$;
     6543    13216
     6544    13217    2          SEGX=POFFW(SEG$, BUF$);
     6545    13218    2          F$DCB.SEGX=SEGX;
     6546    13219    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL-TOTSIZE;
     6547    13220    2          FM$GRAN.NAVX=FM$GRAN.NAVX+TOTSIZE;
     6548    13221
     6549    13222    2          IF ORG = 0 THEN
     6550    13223    3             DO;   /* FLUSH EXTRANEOUS BUFFERS */
     6551    13224    3             IF F$DCB.BFR.BUFX(3) > 0 THEN
     6552    13225    3                CALL FMD$FLSHBUF(3);
     6553    13226    3             IF F$DCB.BFR.BUFX(4) > 0 THEN
     6554    13227    3                CALL FMD$FLSHBUF(4);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:260  
     6555    13228    3             END;  /* FLUSH EXTRANEOUS BUFFERS */
     6556    13229
     6557    13230    2          RETURN;
     6558    13231    2          END SLIDE;
     6559    13232               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:261  
     6560    13233        /*I*     NAME:     SRCHGRAN
     6561    13234                 PURPOSE:  To search an upper level granule for a key
     6562    13235                 DESCRIPTION:
     6563    13236                      This is a lot like BINSEARCH, except that we want to position
     6564    13237                 to the key that is less than or equal to the specified key.  This is
     6565    13238                 because the key will point to the first key of the next lower level.
     6566    13239
     6567    13240                      Set DA to the disk address of the next lower level.
     6568    13241        */
     6569    13242                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:262  
     6570    13243    1   SRCHGRAN: PROC ALTRET;
     6571    13244    2          DCL HIGH UBIN;
     6572    13245    2          DCL LOW UBIN;
     6573    13246    2          DCL TEMP SBIN;
     6574    13247    2          DCL KLB SBIN;
     6575    13248        /* */
     6576    13249    2          LOW=1;
     6577    13250    2          HIGH=KEYCNT+1;
     6578    13251    2          TEMP=(LOW+HIGH)/2;
     6579    13252
     6580    13253    3   LOOP:  DO WHILE ('1'B);
     6581    13254    3             CRECX=TEMP;
     6582    13255    3             IF CRECX < BOUND THEN
     6583    13256    3                KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));
     6584    13257    3             ELSE
     6585    13258    3                KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);
     6586    13259
     6587    13260    3             CALL COMKEY ALTRET(ERR);
     6588    13261
     6589    13262    4             DO CASE(RESULT);
     6590    13263    4                CASE(%EQUAL);
     6591    13264    4                   LOW=CRECX;
     6592    13265    4                   EXIT LOOP;
     6593    13266
     6594    13267    4                CASE(%GREATER);
     6595    13268    4                   LOW=CRECX;
     6596    13269
     6597    13270    4                CASE(%LESS);
     6598    13271    4                   HIGH=CRECX;
     6599    13272
     6600    13273    4             END;  /* CASE */
     6601    13274    3             TEMP=(LOW+HIGH)/2;
     6602    13275    3             IF TEMP = CRECX THEN
     6603    13276    3                EXIT LOOP;
     6604    13277    3          END;  /* WHILE */
     6605    13278
     6606    13279    2          CRECX=LOW;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:263  
     6607    13280    2          IF CRECX < BOUND THEN
     6608    13281    2             KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));
     6609    13282    2          ELSE
     6610    13283    2             KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);
     6611    13284
     6612    13285    2          IF ORG = %IREL# THEN
     6613    13286    2             KLB=FM$IRENT.KLB+1;
     6614    13287    2          ELSE
     6615    13288    2             KLB=FM$KEYENT.KLB;
     6616    13289    2          KEY$=PINCRW(KEY$, (KLB+4)/4);
     6617    13290    2          DA=FM$ULSEG.DA;
     6618    13291    2          RETURN;
     6619    13292    2   ERR:   ALTRETURN;
     6620    13293    2          END SRCHGRAN;
     6621    13294               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:264  
     6622    13295        /*I*     NAME:     SRCHLVL
     6623    13296                 PURPOSE:  To search an upper level
     6624    13297                 DESCRIPTION:
     6625    13298                      The upper level has to be searched to find the correct granule
     6626    13299                 for locating a specified key.  We will loop until we find a granule
     6627    13300                 that will locate the key we are interested in.  First, check the
     6628    13301                 current granule.
     6629    13302
     6630    13303                      If the key is equal to the current granule, then search the
     6631    13304                 granule for the right key.
     6632    13305
     6633    13306                      If the key is less than the current granule, and there is
     6634    13307                 a blink, then get it.  If there isn't a blink, and this is the
     6635    13308                 last of the upper level, use the FDA of level 0.  There is no
     6636    13309                 entry in the upper level for the FDA.  If this isn't level 1, then
     6637    13310                 use the lowest key to continue the search to the next lower level.
     6638    13311
     6639    13312                      If the key is greater than the current granule, and the last
     6640    13313                 result was less, then we are in between two granules.  Use the
     6641    13314                 current granule for the search.  If there is a flink, then use
     6642    13315                 that.  If there isn't a flink, then use the highest key in the
     6643    13316                 granule to continue the search to the next level.
     6644    13317        */
     6645    13318                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:265  
     6646    13319    1   SRCHLVL: PROC ALTRET;
     6647    13320    2          DCL LAST_RESULT UBIN;
     6648    13321    2          DCL KLB SBIN;
     6649    13322        /* */
     6650    13323    2          RESULT=%NONE;
     6651    13324    3          DO UNTIL (RESULT = %EQUAL);
     6652    13325    3             LAST_RESULT=RESULT;
     6653    13326    3             KEYCNT=FM$GRAN.KEYCNT;
     6654    13327    3             KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
     6655    13328    3             BOUND=FM$KEYTBL(0);
     6656    13329    3             CALL CHECKGRAN ALTRET(ERR);
     6657    13330
     6658    13331    4             DO CASE(RESULT);
     6659    13332    4                CASE(%EQUAL);
     6660    13333    4                   CALL SRCHGRAN;
     6661    13334    4                   RESULT=%EQUAL;
     6662    13335
     6663    13336    4                CASE(%LESS);
     6664    13337    4                   IF FM$GRAN.BLINK ~= 0 THEN
     6665    13338    4                      CALL ULBLINK ALTRET(ERR);
     6666    13339    4                   ELSE
     6667    13340    4                      IF FM$GRAN.LVL = 1 THEN
     6668    13341    5                         DO;   /* USE FDA */
     6669    13342    5                         IF ALTKEY$ = ADDR(NIL) THEN
     6670    13343    5                            DA=FM_FRZERO;
     6671    13344    5                         ELSE
     6672    13345    5                            IF ORG = %INDEXED# THEN
     6673    13346    5                               DA=ALTKEYS.K.FDA(INDEX#);
     6674    13347    5                            ELSE
     6675    13348    5                               DA=IRKEYS.K.FDA(INDEX#);
     6676    13349    5                         RESULT=%EQUAL;
     6677    13350    5                         END;  /* USE FDA */
     6678    13351    4                      ELSE
     6679    13352    5                         DO;   /* USE LOWEST */
     6680    13353    5                         KEY$=PINCRW(BUF$, FM$KEYTBL(1));
     6681    13354    5                         IF ORG = %IREL# THEN
     6682    13355    5                            KLB=FM$IRENT.KLB+1;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:266  
     6683    13356    5                         ELSE
     6684    13357    5                            KLB=FM$KEYENT.KLB;
     6685    13358    5                         KEY$=PINCRW(KEY$, (KLB+4)/4);
     6686    13359    5                         DA=FM$ULSEG.DA;
     6687    13360    5                         RESULT=%EQUAL;
     6688    13361    5                         END;  /* USE LOWEST */
     6689    13362
     6690    13363    4                CASE(%GREATER);
     6691    13364    4                   IF LAST_RESULT = %LESS THEN
     6692    13365    5                      DO;   /* IN BETWEEN GRANULES */
     6693    13366    5                      CALL SRCHGRAN;
     6694    13367    5                      RESULT=%EQUAL;
     6695    13368    5                      END;  /* IN BETWEEN GRANULES */
     6696    13369    4                   ELSE
     6697    13370    5                      DO;   /* TRY TO FLINK */
     6698    13371    5                      IF FM$GRAN.FLINK ~= 0 AND NOT FM$GRAN.ENDLVL THEN
     6699    13372    5                         CALL ULFLINK ALTRET(ERR);
     6700    13373    5                      ELSE
     6701    13374    6                         DO;   /* USE HIGHEST */
     6702    13375    6                         IF KEYCNT >= BOUND THEN
     6703    13376    6                            KEY$=PINCRW(BUF$, FM$KEYTBL(KEYCNT)+512);
     6704    13377    6                         ELSE
     6705    13378    6                            KEY$=PINCRW(BUF$, FM$KEYTBL(KEYCNT));
     6706    13379    6                         IF ORG = %IREL# THEN
     6707    13380    6                            KLB=FM$IRENT.KLB+1;
     6708    13381    6                         ELSE
     6709    13382    6                            KLB=FM$KEYENT.KLB;
     6710    13383    6                         KEY$=PINCRW(KEY$, (KLB+4)/4);
     6711    13384    6                         DA=FM$ULSEG.DA;
     6712    13385    6                         RESULT=%EQUAL;
     6713    13386    6                         END;  /* USE HIGHEST */
     6714    13387    5                      END;  /* TRY TO FLINK */
     6715    13388    4             END;  /* CASE */
     6716    13389    3          END;  /* WHILE */
     6717    13390
     6718    13391    2          RETURN;
     6719    13392
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:267  
     6720    13393    2   ERR:   ALTRETURN;
     6721    13394    2          END SRCHLVL;
     6722    13395               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:268  
     6723    13396        /*I*     NAME:     SWITCH1_3
     6724    13397                 PURPOSE:  To switch buffers 1 and 3
     6725    13398                 DESCRIPTION:
     6726    13399                      Switch the values in buffers 1 and 3, and any local variables
     6727    13400                 that are associated with the buffers.  If we are adding a key, then
     6728    13401                 we are now pointing to the first key of the next granule.  Otherwise,
     6729    13402                 we will point in front of the first key if we are adding a segment.
     6730    13403        */
     6731    13404                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:269  
     6732    13405    1   SWITCH1_3: PROC;
     6733    13406    2          DCL BFR BIT(36);
     6734    13407    2          DCL BFR1 BIT(36);
     6735    13408        /* */
     6736    13409    2          BFR=F$DCB.BFR(1);
     6737    13410    2          BFR1=F$DCB.BFR1(1);
     6738    13411    2          F$DCB.BFR(1)=F$DCB.BFR(3);
     6739    13412    2          F$DCB.BFR1(1)=F$DCB.BFR1(3);
     6740    13413    2          F$DCB.BFR(3)=BFR;
     6741    13414    2          F$DCB.BFR1(3)=BFR1;
     6742    13415    2          BUF$=BUF3$;
     6743    13416    2          KEYCNT=FM$GRAN.KEYCNT;
     6744    13417    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);
     6745    13418    2          BOUND=FM$KEYTBL(0);
     6746    13419    2          BUF3$=ADDR(NIL);
     6747    13420    2          IF ADDFLG = %KEY THEN
     6748    13421    2             CRECX=1;
     6749    13422    2          ELSE
     6750    13423    2             CRECX=0;
     6751    13424    2          F$DCB.CRECX=CRECX;
     6752    13425
     6753    13426    2          RETURN;
     6754    13427    2          END SWITCH1_3;
     6755    13428               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:270  
     6756    13429        /*I*     NAME:     ULBLINK
     6757    13430                 PURPOSE:  To blink on an upper level
     6758    13431                 DESCRIPTION:
     6759    13432                      Read the blink granule.
     6760    13433        */
     6761    13434    1   ULBLINK: PROC ALTRET;
     6762    13435    2          DCL LCDA UBIN;
     6763    13436        /* */
     6764    13437    2          LCDA=F$DCB.BFR.DA(BUFNUM);
     6765    13438    2          DA=BUF$->FM$GRAN.BLINK;
     6766    13439    2          CALL FMD$REDBUF(BUF$, BUFNUM, DA, 0, LCDA) ALTRET(ERR);
     6767    13440    2          RETURN;
     6768    13441
     6769    13442    2   ERR:   ALTRETURN;
     6770    13443    2          END ULBLINK;
     6771    13444               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:271  
     6772    13445        /*I*     NAME:     ULFLINK
     6773    13446                 PURPOSE:  To flink on an upper level
     6774    13447                 DESCRIPTION:
     6775    13448                      Read the flink granule.
     6776    13449        */
     6777    13450    1   ULFLINK:  PROC ALTRET;
     6778    13451    2          DCL LCDA UBIN;
     6779    13452        /* */
     6780    13453    2          LCDA=F$DCB.BFR.DA(BUFNUM);
     6781    13454    2          DA=BUF$->FM$GRAN.FLINK;
     6782    13455    2          CALL FMD$REDBUF(BUF$, BUFNUM, DA, 0, LCDA) ALTRET(ERR);
     6783    13456    2          RETURN;
     6784    13457    2   ERR:   ALTRETURN;
     6785    13458    2          END ULFLINK;
     6786    13459               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:272  
     6787    13460        /*I*     NAME:     ULSEARCH
     6788    13461                 PURPOSE:  To search the upper level for a key
     6789    13462                 DESCRIPTION:
     6790    13463                      Read the top disk address into buffer 2, if it isn't already
     6791    13464                 there.
     6792    13465
     6793    13466                      Now loop until we hit level 0.  Call SRCHLVL to search the
     6794    13467                 current level.  When we find the granule on the next lower level
     6795    13468                 to read, decrement the level, and read the next granule.
     6796    13469
     6797    13470                      If we ran into any errors searching the upper level, try
     6798    13471                 flushing all the granules, reset the TDA to 0, so it doesn't get
     6799    13472                 used again, and use the old sequential search from the beginning
     6800    13473                 to find the granule.
     6801    13474        */
     6802    13475                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:273  
     6803    13476    1   ULSEARCH: PROC ALTRET;
     6804    13477    2          DCL LEVEL SBIN;
     6805    13478        /* */
     6806    13479    2          LEVEL=F$DCB.TDALVL;
     6807    13480    2          F$DCB.LVL=LEVEL;
     6808    13481    2          DA=F$DCB.TDA;
     6809    13482    2          F$DCB.GTYP=FMGTFILE;
     6810    13483
     6811    13484    2          BUF$=FM$BUF$(F$DCB.BFR.BUFX(2));
     6812    13485    2          IF BUF$ = ADDR(NIL) THEN
     6813    13486    2             CALL FMD$REDBUF(BUF$, 2, DA, 0, -1) ALTRET(ERR);
     6814    13487
     6815    13488    2          BUFNUM=2;
     6816    13489    3          DO UNTIL (LEVEL = 0);
     6817    13490    3             CALL SRCHLVL ALTRET(ERR);
     6818    13491    3             BUFNUM=1;
     6819    13492    3             LEVEL=LEVEL-1;
     6820    13493    3             F$DCB.LVL=LEVEL;
     6821    13494    3             CALL FMD$REDBUF(BUF$, 1, DA, 0, -1) ALTRET(ERR);
     6822    13495    3          END;
     6823    13496
     6824    13497    2          RETURN;
     6825    13498    2   ERR:   FM$CFU.ULBLD=1;
     6826    13499    2          CALL FMD$FLSHBUF(4);
     6827    13500    2          CALL FMD$FLSHBUF(2);
     6828    13501    2          CALL FMD$FLSHBUF(3);
     6829    13502    2          CALL FMD$FLSHBUF(1);
     6830    13503    2          B$JIT.ERR='0'B;
     6831    13504    2          F$DCB.TDA=0;
     6832    13505    2          IF ALTKEY$ = ADDR(NIL) THEN
     6833    13506    2             DA=FM_FRZERO;
     6834    13507    2          ELSE
     6835    13508    3             DO;
     6836    13509    4             IF ORG=%INDEXED# THEN DO;
     6837    13510    4                DA=ALTKEYS.K.FDA(INDEX#);
     6838    13511    4                ALTKEYS.K.TDA(INDEX#)=0;
     6839    13512    4                END;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:274  
     6840    13513    4             ELSE DO; /* IREL */
     6841    13514    4                DA=IRKEYS.K.FDA(INDEX#);
     6842    13515    4                IRKEYS.K.TDA(INDEX#)=0;
     6843    13516    4                END;
     6844    13517    3             END;
     6845    13518    2          F$DCB.BFR.DA(1)=DA;
     6846    13519    2          F$DCB.LVL=0;
     6847    13520    2          CALL FMD$REDBUF(BUF$, 1, DA, 0, -1) ALTRET(ERR1);
     6848    13521    2          RETURN;
     6849    13522    2   ERR1:  ALTRETURN;
     6850    13523    2          END ULSEARCH;
     6851    13524               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:275  
     6852    13525        /*I*     NAME:     UPALTSEGS
     6853    13526                 PURPOSE:  To update alternate indexes
     6854    13527                 DESCRIPTION:
     6855    13528                      When rewriting a record with alternate indexes, the MISEGs
     6856    13529                 on the alternate indexes need to be updated.
     6857    13530
     6858    13531                      Loop through the alternate indexes.  If the index is unique,
     6859    13532                 or this isn't load mode, then this index needs to be updated.
     6860    13533                 First, find the key in the alternate index, then the segment that
     6861    13534                 needs to be updated.  Store the new value into the segment.
     6862    13535        */
     6863    13536                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:276  
     6864    13537    1   UPALTSEGS: PROC ALTRET;
     6865    13538    2          DCL I SBIN;
     6866    13539    2          DCL NUMENTS UBIN;
     6867    13540    2          DCL UNIQUE BIT(1);
     6868    13541        /* */
     6869    13542    2          IF ORG = %INDEXED# THEN
     6870    13543    2             NUMENTS=ALTKEYS.NUMENTS;
     6871    13544    2          ELSE
     6872    13545    2             NUMENTS=IRKEYS.NKEYS;
     6873    13546
     6874    13547    3          DO I=2 TO NUMENTS;
     6875    13548    3             IF ORG = %INDEXED# THEN
     6876    13549    3                UNIQUE=ALTKEYS.K.UNIQUE(I-1);
     6877    13550    3             ELSE
     6878    13551    3                UNIQUE=IRKEYS.K.UNIQUE(I-1);
     6879    13552
     6880    13553    3             IF (NOT F$DCB.LDFLG) OR
     6881    13554    3                (UNIQUE AND NOT F$DCB.UNIQUEBLD) THEN
     6882    13555    4                DO;   /* UPDATE ALT SEG */
     6883    13556    4                INDEX#=I;
     6884    13557    4                CALL SETINDEX ALTRET(ERR);
     6885    13558    4                CALL FINDIDO ALTRET(ERR);
     6886    13559
     6887    13560    5                DO WHILE (OLD_MISEG ~= FM$MISEG);
     6888    13561    5                   CALL NXTSEG ALTRET(ERR);
     6889    13562    5                END;
     6890    13563
     6891    13564    4                FM$MISEG=FM_MISEG;
     6892    13565    4                F$DCB.BFR.BUFUP(1)='1'B;
     6893    13566    4                END;  /* UPDATE ALT SEG */
     6894    13567    3             ELSE
     6895    13568    3                FM$CFU.ALTBLD='1'B;
     6896    13569    3          END;  /* DO I */
     6897    13570
     6898    13571    2          INDEX#=1;
     6899    13572    2          CALL SETINDEX ALTRET(ERR);
     6900    13573    2          CALL RESTOREPOS ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:277  
     6901    13574    2          SEG$=PINCRW(BUF$, SEGX);
     6902    13575
     6903    13576    2          RETURN;
     6904    13577    2   ERR:   ALTRETURN;
     6905    13578    2          END UPALTSEGS;
     6906    13579               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:278  
     6907    13580        /*I*     NAME:     WRCONT
     6908    13581                 PURPOSE:  To handle continued writes
     6909    13582                 DESCRIPTION:
     6910    13583                      In order to do continued writes, the last operation must have
     6911    13584                 been a write, the file can't be compressed, and it can't be
     6912    13585                 encrypted.
     6913    13586
     6914    13587                      Position to the current key.
     6915    13588
     6916    13589                      Next, loop until we find where we left off last time.
     6917    13590                 F$DCB.GDISP will be the total number of bytes written so far.
     6918    13591
     6919    13592                      Now loop until we have gotten to all of the segments and
     6920    13593                 we have transferred all of the bytes from the user's buffer.
     6921    13594                 If we ran out of segments first, then add some new segs.  If the
     6922    13595                 segment is empty, then call ADDDATA to allocate some more data
     6923    13596                 space.  Otherwise, read in the current data granule.  Save the
     6924    13597                 old value of the MISEG, we may need it later to update alternate
     6925    13598                 indexes.  INDX will be the index into the current segment of where
     6926    13599                 we left off.  If the number of bytes to write
     6927    13600                 is greater than the amount of extra space, and the record is
     6928    13601                 at the end of the data granule, then try expanding the data
     6929    13602                 granule space.  T is the amount of space we need.  If it is
     6930    13603                 more than is available, then use what is available.
     6931    13604
     6932    13605                      Transfer the less of either the number of bytes in the
     6933    13606                 user record, or the number of bytes in this segment.  If
     6934    13607                 this file has alternate indexes, then update those now.
     6935    13608
     6936    13609                      Update some counts, then get the next segment.
     6937    13610        */
     6938    13611                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:279  
     6939    13612    1   WRCONT: PROC ALTRET;
     6940    13613    2          DCL TOT SBIN;
     6941    13614    2          DCL GX SBIN;
     6942    13615    2          DCL INDX UBIN;
     6943    13616    2          DCL T SBIN;
     6944    13617    2          DCL GACTB SBIN;
     6945    13618    2          DCL SIZE SBIN;
     6946    13619    2          DCL CHARS CHAR(SIZE) BASED;
     6947    13620        /* */
     6948    13621    2          IF EOP ~= 3 OR F$DCB.COMP OR FPT$WRITE_V.SEED OR F$DCB.SEED OR
     6949    13622    2             FM$CFU.SHARE = %ALL# THEN
     6950    13623    3             DO;   /* NO SHARING */
     6951    13624    3             B$JIT.ERR=ERRNOCONT;
     6952    13625    3             ALTRETURN;
     6953    13626    3             END;  /* NO SHARING */
     6954    13627
     6955    13628    2          CALL RESTOREPOS ALTRET(ERR);
     6956    13629    2          CALL CURKEY ALTRET(ERR);
     6957    13630
     6958    13631    2          IDPTR$=PINCRW(ADDR(F$DCB.ID), -1);
     6959    13632    2          ID.DA=FM$MISEG.GDA;
     6960    13633    2          ID.GX=FM$MISEG.GX;
     6961    13634
     6962    13635    2          IF FM$KEYENT.D THEN
     6963    13636    3             DO;   /* NO KEY */
     6964    13637    3             B$JIT.ERR=ERRNOKEY;
     6965    13638    3             ALTRETURN;
     6966    13639    3             END;  /* NO KEY */
     6967    13640
     6968    13641    2          FAK=1;
     6969    13642    2          TOT=0;
     6970    13643    3   LOOP:  DO WHILE ('1'B);
     6971    13644    3             IF SEG$ ~= ADDR(NIL) THEN
     6972    13645    3                IF FM$MISEG.GACTB+TOT >= F$DCB.GDISP THEN
     6973    13646    3                   EXIT LOOP;
     6974    13647    3                ELSE
     6975    13648    4                   DO;   /* GET NEXT SEG */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:280  
     6976    13649    4                   TOT=FM$MISEG.GACTB+TOT;
     6977    13650    4                   CALL NXTSEG ALTRET(ERR);
     6978    13651    4                   FAK=0;
     6979    13652    4                   END;  /* GET NEXT SEG */
     6980    13653    3             ELSE
     6981    13654    3                EXIT LOOP;
     6982    13655    3          END;
     6983    13656
     6984    13657    3          DO UNTIL (SEG$ = ADDR(NIL) AND F$DCB.UBYTES = 0);
     6985    13658    3             IF SEG$ = ADDR(NIL) THEN
     6986    13659    3                CALL NEWSEG ALTRET(ERR);
     6987    13660
     6988    13661    3             DA=FM$MISEG.GDA;
     6989    13662    3             IF FM$MISEG.GACTB = 0 AND DA = 0 THEN
     6990    13663    3                CALL ADDDATA ALTRET(ERR);
     6991    13664    3             ELSE
     6992    13665    4                DO;   /* ADD TO CURRENT SEG */
     6993    13666    4                F$DCB.LVL=7;
     6994    13667    4                DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));
     6995    13668    4                IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= DA THEN
     6996    13669    4                   CALL FMD$REDBUF(DBUF$, 0, DA) ALTRET(DATAERR);
     6997    13670
     6998    13671    4                OLD_MISEG=FM$MISEG;
     6999    13672    4                IF FAK = 1 THEN
     7000    13673    4                   ADDR(OLD_MISEG)->FM$MISEG.FAK='1'B;
     7001    13674    4                GX=FM$MISEG.GX;
     7002    13675
     7003    13676    4                G$=PINCRW(DBUF$, GX);
     7004    13677    4                INDX=F$DCB.GDISP-TOT;
     7005    13678    4                IF F$DCB.UBYTES > FM$MISEG.GSIZ*4-INDX THEN
     7006    13679    4                   IF FM$MISEG.GX+FM$MISEG.GSIZ = DBUF$->FM$GRAN.NAVX THEN
     7007    13680    5                      DO;   /* AT END OF GRAN */
     7008    13681    5                      T=(F$DCB.UBYTES+INDX-(FM$MISEG.GSIZ*4)+3)/4;
     7009    13682    5                      IF T > DBUF$->FM$GRAN.AVAIL THEN
     7010    13683    5                         T=DBUF$->FM$GRAN.AVAIL;
     7011    13684    5                      FM$MISEG.GSIZ=FM$MISEG.GSIZ+T;
     7012    13685    5                      DBUF$->FM$GRAN.NAVX=DBUF$->FM$GRAN.NAVX+T;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:281  
     7013    13686    5                      DBUF$->FM$GRAN.AVAIL=DBUF$->FM$GRAN.AVAIL-T;
     7014    13687    5                      END;  /* AT END OF GRAN */
     7015    13688
     7016    13689    4                GACTB=FM$MISEG.GSIZ*4-INDX;
     7017    13690
     7018    13691    4                IF GACTB > F$DCB.UBYTES THEN
     7019    13692    4                   SIZE=F$DCB.UBYTES;
     7020    13693    4                ELSE
     7021    13694    4                   SIZE=GACTB;
     7022    13695    4                CALL INSERT(G$->CHAR1, INDX, SIZE, F$DCB.UB$->CHARS);
     7023    13696    4                FM$MISEG.GACTB=SIZE+INDX;
     7024    13697    4                IF ALTKEY$ ~= ADDR(NIL) THEN
     7025    13698    5                   DO;   /* UPDATE ALT SEGS */
     7026    13699    5                   FM_MISEG=FM$MISEG;
     7027    13700    5                   CALL UPALTSEGS ALTRET(ERR);
     7028    13701    5                   END;  /* UPDAT ALT SEGS */
     7029    13702
     7030    13703    4                F$DCB.BFR.BUFUP(1)='1'B;
     7031    13704    4                F$DCB.BFR.BUFUP(0)='1'B;
     7032    13705
     7033    13706    4                F$DCB.GDISP=F$DCB.GDISP+SIZE;
     7034    13707    4                F$DCB.UBYTES=F$DCB.UBYTES-SIZE;
     7035    13708    4                F$DCB.UB$=PINCRC(F$DCB.UB$, SIZE);
     7036    13709    4                END;  /* ADD TO CURRENT SEG */
     7037    13710
     7038    13711    3             TOT=TOT+FM$MISEG.GACTB;
     7039    13712    3             CALL NXTSEG ALTRET(ERR);
     7040    13713    3             FAK=0;
     7041    13714    3          END;  /* WHILE */
     7042    13715
     7043    13716    2          RETURN;
     7044    13717    2   DATAERR: CALL DATAERROR;
     7045    13718    2          ALTRETURN;
     7046    13719    2   ERR:   ALTRETURN;
     7047    13720    2          END WRCONT;
     7048    13721               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:282  
     7049    13722        /*I*     NAME:     WRITE
     7050    13723                 PURPOSE:  To handle the M$WRITE pmme
     7051    13724                 DESCRIPTION:
     7052    13725                      If the file has defined fields, then check out the
     7053    13726                 record for illegal key fields.
     7054    13727
     7055    13728                      If this is a one granule keyed file, then expand it to a two
     7056    13729                 granule keyed file.
     7057    13730
     7058    13731                      If this is a continued write, then call the continued write
     7059    13732                 subroutine.  Otherwise, if the user specified CONT now, and
     7060    13733                 F$DCB.CONT wasn't set, that means that this is the first write
     7061    13734                 in a set of continued writes.  We handle the first part here.
     7062    13735
     7063    13736                      Next, set FM$CFU.RCSZ if this is a large write.  FM$CFU.RCSZ
     7064    13737                 is just supposed to be a rough estimate (within 4k bytes) of the
     7065    13738                 largest record in the file.  If this isn't a keyed file, then there
     7066    13739                 will be some restrictions.  First of all, the record must be large
     7067    13740                 enough to hold all of the specified keys.  Also, we can't handle
     7068    13741                 encrypted records.  There would be no way to find keys.  If this
     7069    13742                 is a keyed file, then check out the user specified key.  Make sure
     7070    13743                 that all of the key is there so we don't trap later.  If the
     7071    13744                 user didn't specify a key, then call WRNOKEY.
     7072    13745        */
     7073    13746                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:283  
     7074    13747    1   WRITE: PROC ALTRET;
     7075    13748    2          DCL I SBIN;
     7076    13749    2          DCL 1 ZAP BASED,
     7077    13750    2               2 * CHAR(I);
     7078    13751        /* */
     7079    13752    2          FM$CFU.FMOD='1'B;
     7080    13753    2          DBUF$=ADDR(NIL);
     7081    13754
     7082    13755    2          IF F$DCB.CONT THEN
     7083    13756    2             CALL WRCONT ALTRET(ERR);
     7084    13757    2          ELSE
     7085    13758    3             DO;   /* NORMAL WRITE */
     7086    13759    3             F$DCB.GDISP=0;
     7087    13760
     7088    13761    3             IF FPT$WRITE_V.DVBYTE.CONT THEN
     7089    13762    3                IF F$DCB.COMP OR FPT$WRITE_V.SEED OR F$DCB.SEED OR F$DCB.SHARED THEN
     7090    13763    4                   DO;   /* NO CONTINUATION ALLOWED */
     7091    13764    4                   B$JIT.ERR=ERRNOCONT;
     7092    13765    4                   ALTRETURN;
     7093    13766    4                   END;  /* NO CONTINUATION ALLOWED */
     7094    13767    3             IF F$DCB.UBYTES >= 4096 THEN
     7095    13768    3                IF F$DCB.UBYTES/4096 > FM$CFU.RCSZ THEN
     7096    13769    3                   FM$CFU.RCSZ=F$DCB.UBYTES/4096;
     7097    13770
     7098    13771    3             IF ORG ~= %KEYED# THEN
     7099    13772    4                DO;   /* CHECK INDEXED RESTRICTIONS */
     7100    13773    4                IF ALTKEY$ = ADDR(NIL) THEN
     7101    13774    4                   I=F$DCB.KEYX+F$DCB.KEYL;
     7102    13775    4                ELSE
     7103    13776    4                   IF ORG = %INDEXED# THEN
     7104    13777    4                      I=ALTKEYS.MINWRSIZ;
     7105    13778    4                   ELSE
     7106    13779    4                      I=IRKEYS.MINSIZE;
     7107    13780    4                IF I > F$DCB.UBYTES THEN
     7108    13781    5                   DO;   /* RECORD TOO SMALL */
     7109    13782    5                   B$JIT.ERR=ERRINDBC;
     7110    13783    5                   ALTRETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:284  
     7111    13784    5                   END;  /* RECORD TOO SMALL */
     7112    13785        /*E*   ERROR:      FMG-E$INDBC-2
     7113    13786               MESSAGE: On an M$WRITE to an indexed or IREL file, the byte
     7114    13787                        count is too small to include all the key(s).
     7115    13788        */
     7116    13789    4                IF FPT$WRITE_V.SEED OR F$DCB.SEED THEN
     7117    13790    5                   DO;   /* NO SEEDS ALLOWED */
     7118    13791    5                   B$JIT.ERR=ERRINDSEED;
     7119    13792    5                   ALTRETURN;
     7120    13793    5                   END;  /* NO SEEDS ALLOWED */
     7121    13794
     7122    13795    4                IF ORG=%IREL# THEN
     7123    13796    4                   CALL FMD$CHKFIELD(B$PS2$, %FMD_CHKTYP_REC) ALTRET(ERR);
     7124    13797
     7125    13798    4                CALL WRKEY ALTRET(ERR);
     7126    13799    4                END;  /* CHECK INDEX RESTRICTIONS */
     7127    13800    3             ELSE
     7128    13801    4                DO;   /* CHECK KEY RESTRICTIONS */
     7129    13802    4                CALL HFF$DSIZ(B$PS1$, I) ALTRET(NOKEY);
     7130    13803    4                TEMP_CHAR=B$PS1$->CHAR1;
     7131    13804    4                IF ASCBIN(TEMP_CHAR)+1 > I THEN
     7132    13805    5                   DO;   /* KEY TRAP */
     7133    13806    5                   B$JIT.ERR=ERRKEYTRAP;
     7134    13807    5                   ALTRETURN;
     7135    13808    5                   END;  /* KEY TRAP */
     7136    13809    4                CALL WRKEY ALTRET(ERR);
     7137    13810
     7138    13811    5                DO WHILE ('0'B);
     7139    13812    5   NOKEY:          CALL WRNOKEY ALTRET(ERR);
     7140    13813    5                END;
     7141    13814    4                END;  /* CHECK KEY RESTRICTIONS */
     7142    13815    3             END;  /* NORMAL WRITE */
     7143    13816
     7144    13817    2          RETURN;
     7145    13818    2   ERR:   ALTRETURN;
     7146    13819    2          END WRITE;
     7147    13820               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:285  
     7148    13821        /*I*     NAME:     WRKEY
     7149    13822                 PURPOSE:  To handle keyed writes
     7150    13823                 DESCRIPTION:
     7151    13824                      If this is a sequential write, then try a short cut.
     7152    13825                 check the current key against the last key in the file, if it
     7153    13826                 is greater, then allow the write.
     7154    13827
     7155    13828                      Try to find the key that the user specified.  If it is
     7156    13829                 deleted, that doesn't count.  If the key did exist, and the
     7157    13830                 user doesn't have update privilege, then that is a no no.
     7158    13831                 If the user said that we are only to allow new keys, then
     7159    13832                 altreturn.  If the file has alternate indexes, then check
     7160    13833                 them out for any changes that might have occurred.
     7161    13834
     7162    13835                      If we didn't find the key, then check to see if the user
     7163    13836                 is allowed to write new keys.  Make sure that the user said
     7164    13837                 that writing new keys was okay.  Now write the new key.
     7165    13838        */
     7166    13839                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:286  
     7167    13840    1   WRKEY: PROC ALTRET;
     7168    13841        /* */
     7169    13842    2          CALL SETKEY(B$PS1$) ALTRET(ERR);
     7170    13843    2          COMFLG=%USEREC;
     7171    13844
     7172    13845    2          IF F$DCB.FUN = %CREATE# AND F$DCB.ACS ~= %DIRECT# THEN
     7173    13846    3             DO;   /* CHECK LAST KEY */
     7174    13847    3             CALL CHECK_LAST ALTRET(ERR);
     7175    13848    3             IF RESULT = %GREATER THEN
     7176    13849    4                DO;   /* LAST KEY */
     7177    13850    4                CRECX=KEYCNT+1;
     7178    13851    4                F$DCB.CRECX=CRECX;
     7179    13852    4                KEY$=ADDR(NIL);
     7180    13853    4                GOTO NOTFIND1;
     7181    13854    4                END;  /* LAST KEY */
     7182    13855    3             END;  /* CHECK LAST KEY */
     7183    13856    2          CALL FINDKEY ALTRET(NOTFIND);
     7184    13857    2          IF FM$KEYENT.D THEN
     7185    13858    2             GOTO NOTFIND1;
     7186    13859
     7187    13860    2         IF F$DCB.FUN = %CREATE# AND F$DCB.ACS ~= %DIRECT# THEN
     7188    13861    3            DO;   /* KEY OUT OF ORDER */
     7189    13862    3            B$JIT.ERR=ERRKEYORDER;
     7190    13863    3            ALTRETURN;
     7191    13864    3            END;  /* KEY OUT OF ORDER */
     7192    13865
     7193    13866    2          IF NOT F$DCB.FFLG.UPD THEN
     7194    13867    3             DO;   /* CANT REWRITE */
     7195    13868    3             B$JIT.ERR=ERRREWRITE;
     7196    13869    3             ALTRETURN;
     7197    13870    3             END;  /* CANT REWRITE */
     7198    13871        /*E*   ERROR:      FMG-E$REWRITE-2
     7199    13872               MESSAGE: You are not allowed to rewrite records% in file %FN%
     7200    13873               DESCRIPTION:  The user does not have permission to rewrite
     7201    13874                             existing records in this file.
     7202    13875        */
     7203    13876    2          IF (NOT FPT$WRITE_V.ONEWKEY) AND FPT$WRITE_V.NEWKEY THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:287  
     7204    13877    3             DO;   /* CANT REWRITE */
     7205    13878    3             B$JIT.ERR=ERROLDREC;
     7206    13879    3             ALTRETURN;
     7207    13880    3             END;  /* CANT REWRITE */
     7208    13881        /*E*   ERROR:      FMG-E$OLDREC-2
     7209    13882               MESSAGE:    Key already exists and NEWKEY was specified% for %FN%
     7210    13883               DESCRIPTION:  The key already exists in the file and NEWKEY
     7211    13884                             was specified and ONEWKEY was not.
     7212    13885        */
     7213    13886    2          IF ALTKEY$ ~= ADDR(NIL) THEN
     7214    13887    2             CALL ALTCHK ALTRET(ERR);
     7215    13888
     7216    13889    2          CALL BLDREC ALTRET(ERR);
     7217    13890    2          RETURN;
     7218    13891    2   NOTFIND: ;
     7219    13892    2          IF B$JIT.ERR.CODE ~= %E$NOKEY THEN
     7220    13893    2             ALTRETURN;
     7221    13894    2   NOTFIND1: ;
     7222    13895    2          IF NOT F$DCB.FFLG.WNEW THEN
     7223    13896    3             DO;   /* CANT WRITE NEW RECS */
     7224    13897    3             B$JIT.ERR=ERRWRITNEW;
     7225    13898    3             ALTRETURN;
     7226    13899    3             END;  /* CANT WRITE NEW RECS */
     7227    13900        /*E*   ERROR:      FMG-E$WRITNEW-2
     7228    13901               MESSAGE: You are not allowed to write new records% in file %FN%
     7229    13902               DESCRIPTION:  This user does not have permission to write new
     7230    13903                             records into this file.
     7231    13904        */
     7232    13905    2          IF (NOT FPT$WRITE_V.ONEWKEY) AND (NOT FPT$WRITE_V.NEWKEY) THEN
     7233    13906    3             DO;   /* CANT WRITE NEW RECS */
     7234    13907    3             B$JIT.ERR=ERRNEWREC;
     7235    13908    3             ALTRETURN;
     7236    13909    3             END;  /* CANT WRITE NEW RECS */
     7237    13910        /*E*   ERROR:      FMG-E$NEWREC-2
     7238    13911               MESSAGE: NEWKEY or ONEWKEY required to write new records% in  %FN%
     7239    13912               DESCRIPTION:  The key does not already exist in the file and
     7240    13913                             NEWKEY or ONEWKEY was not specified
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:288  
     7241    13914        */
     7242    13915    2          IF F$DCB.FUN = %CREATE# AND F$DCB.ACS ~= %DIRECT# THEN
     7243    13916    2             IF KEY$ ~= ADDR(NIL) THEN
     7244    13917    3             DO;   /* KEY ORDER */
     7245    13918    3             B$JIT.ERR=ERRKEYORDER;
     7246    13919    3             ALTRETURN;
     7247    13920    3             END;  /* KEY ORDER */
     7248    13921
     7249    13922    2          CALL WRNEWKEY ALTRET(ERR);
     7250    13923    2          RETURN;
     7251    13924    2   ERR:   ALTRETURN;
     7252    13925    2          END WRKEY;
     7253    13926               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:289  
     7254    13927        /*I*     NAME:     WRNEWKEY
     7255    13928                 PURPOSE:  To write new records
     7256    13929                 DESCRIPTION:
     7257    13930                      B$JIT.ERR is set to 0 because we probably got here as a
     7258    13931                 result of not finding a key.  If the key is at the beginning,
     7259    13932                 or end of the granule, or there isn't a deleted key to reuse,
     7260    13933                 then set the flag to indicate we need a new key.
     7261    13934
     7262    13935                      If it appears that we can reuse a key, then, if it is an
     7263    13936                 indexed file, store the new text.  If it is a keyed file, then
     7264    13937                 check the size of the key.  The key sizes must be the same number
     7265    13938                 of words.  If they aren't, it's too much trouble to change the
     7266    13939                 key size.  If this is an irel file, then call a subroutine to
     7267    13940                 build the key.
     7268    13941
     7269    13942                      If we were able to reuse the key, then we may have had to
     7270    13943                 back up to reuse a deleted key.  If the file has alternate
     7271    13944                 indexes, then make sure that they are rebuilt.
     7272    13945
     7273    13946                      Call BLDREC to transfer the record to the file.
     7274    13947        */
     7275    13948                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:290  
     7276    13949    1   WRNEWKEY: PROC ALTRET;
     7277    13950    2          DCL TCRECX UBIN;
     7278    13951    2          DCL I SBIN;
     7279    13952    2          DCL NEWKEYF SBIN;
     7280    13953    2          DCL CHARS CHAR(KEYIN_SIZE) BASED;
     7281    13954    2          DCL ARRAY(0:0) SBIN BASED;
     7282    13955    2          DCL 1 KEY BASED ALIGNED,
     7283    13956    2               2 * BIT(1) UNAL,
     7284    13957    2               2 SIZE UBIN(8) UNAL,
     7285    13958    2               2 TEXT CHAR(KEYIN_SIZE) CALIGNED;
     7286    13959        /* */
     7287    13960    2          B$JIT.ERR='0'B;
     7288    13961    2          F$DCB.RPOS='0'B;
     7289    13962    2          NEWKEYF=0;
     7290    13963    2          IF KEY$ = ADDR(NIL) THEN
     7291    13964    2             NEWKEYF=1;
     7292    13965    2          ELSE
     7293    13966    2             IF NOT FM$KEYENT.D THEN
     7294    13967    2                IF CRECX > 1 THEN
     7295    13968    3                   DO;   /* CHECK PREV KEY */
     7296    13969    3                   TCRECX=CRECX-1;
     7297    13970    3                   IF TCRECX < BOUND THEN
     7298    13971    3                      KEY$=PINCRW(BUF$, FM$KEYTBL(TCRECX));
     7299    13972    3                   ELSE
     7300    13973    3                      KEY$=PINCRW(BUF$, FM$KEYTBL(TCRECX)+512);
     7301    13974    3                   IF NOT FM$KEYENT.D THEN
     7302    13975    3                      NEWKEYF=1;
     7303    13976    3                   END;
     7304    13977    2                ELSE
     7305    13978    2                   NEWKEYF=1;
     7306    13979    2             ELSE
     7307    13980    2                TCRECX=CRECX;
     7308    13981
     7309    13982    2          IF NEWKEYF = 0 THEN
     7310    13983    3             DO;   /* TRY TO REUSE KEY */
     7311    13984    3             IF ORG = %INDEXED# THEN
     7312    13985    4                DO;   /* INDEXED */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:291  
     7313    13986    4                KEY$->KEY.TEXT=KEYIN$->CHARS;
     7314    13987    4                END;  /* INDEXED */
     7315    13988    3             ELSE
     7316    13989    3                IF ORG = %KEYED# THEN
     7317    13990    4                   DO;   /* KEYED */
     7318    13991    4                   IF KEYIN_SIZE/4 ~= FM$KEYENT.KLB/4 THEN
     7319    13992    4                      NEWKEYF=1;
     7320    13993    4                   ELSE
     7321    13994    5                      DO;   /* REUSE KEY */
     7322    13995    5                      KEY$->ARRAY(KEYIN_SIZE/4)=0;
     7323    13996    5                      FM$KEYENT.KLB=KEYIN_SIZE;
     7324    13997    5                      KEY$->KEY.TEXT=KEYIN$->KEY.TEXT;
     7325    13998    5                      END;  /* REUSE KEY */
     7326    13999    4                   END;  /* KEYED */
     7327    14000    3                ELSE
     7328    14001    4                   DO;   /* IREL */
     7329    14002    4                   CALL BUILD_IRKEY(%FMREC);
     7330    14003    4                   END;  /* IREL */
     7331    14004    3             END;  /* TRY TO REUSE KEY */
     7332    14005
     7333    14006    2          IF NEWKEYF = 0 THEN
     7334    14007    3             DO;   /* REUSE KEY */
     7335    14008    3             IF CRECX ~= TCRECX THEN
     7336    14009    3                CALL PREVREC ALTRET(ERR);
     7337    14010    3             F$DCB.RPOS='0'B;
     7338    14011    3             FM$KEYENT.D='0'B;
     7339    14012    3             F$DCB.BFR.BUFUP(1)='1'B;
     7340    14013    3             IF ALTKEY$ ~= ADDR(NIL) THEN
     7341    14014    3                CALL REUSE_ALT ALTRET(ERR);
     7342    14015    3             END;  /* REUSE KEY */
     7343    14016    2          ELSE
     7344    14017    2             CALL NEWKEY ALTRET(ERR);
     7345    14018
     7346    14019    2          FM$CFU.NRECS=FM$CFU.NRECS+1;
     7347    14020    2          F$DCB.NRECS=FM$CFU.NRECS;
     7348    14021
     7349    14022    2          CALL BLDREC ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:292  
     7350    14023    2          RETURN;
     7351    14024    2   ERR:   ALTRETURN;
     7352    14025    2          END WRNEWKEY;
     7353    14026               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:293  
     7354    14027        /*I*     NAME:     WRNOKEY
     7355    14028                 PURPOSE:  To handle writes without a key
     7356    14029                 DESCRIPTION:
     7357    14030                      Make sure that the user is allowed to rewrite records, and
     7358    14031                 that he wants to.  Make sure that we are positioned to something
     7359    14032                 sensible.
     7360    14033
     7361    14034                      Writes without keys are only allowed if the previous operation
     7362    14035                 was an M$READ or M$PRECORD.
     7363    14036
     7364    14037                      If the record had alternate indexes, then check them out for
     7365    14038                 any possible changes.
     7366    14039        */
     7367    14040                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:294  
     7368    14041    1   WRNOKEY: PROC ALTRET;
     7369    14042        /* */
     7370    14043    2          IF NOT F$DCB.FFLG.UPD THEN
     7371    14044    3             DO;   /* CANT REWRITE */
     7372    14045    3             B$JIT.ERR=ERRREWRITE;
     7373    14046    3             ALTRETURN;
     7374    14047    3             END;  /* CANT REWRITE */
     7375    14048
     7376    14049    2          IF (NOT FPT$WRITE_V.ONEWKEY) AND FPT$WRITE_V.NEWKEY THEN
     7377    14050    3             DO;   /* CANT REWRITE */
     7378    14051    3             B$JIT.ERR=ERROLDREC;
     7379    14052    3             ALTRETURN;
     7380    14053    3             END;  /* CANT REWRITE */
     7381    14054
     7382    14055    2          CALL SHAREPOS ALTRET(ERR);
     7383    14056
     7384    14057    3          DO CASE(F$DCB.EOP);
     7385    14058    3             CASE(1);  /* PREV OP WAS READ */
     7386    14059    3                CALL CURREC ALTRET(ERR);
     7387    14060
     7388    14061    3             CASE(2);  /* PREV OP WAS PRECORD */
     7389    14062    3                CALL NXTRECND ALTRET(ERR);
     7390    14063
     7391    14064    3             CASE(ELSE);
     7392    14065    3                B$JIT.ERR=ERRWRWOKEY;
     7393    14066    3                ALTRETURN;
     7394    14067    3          END;  /* CASE */
     7395    14068
     7396    14069    2          IF ALTKEY$ ~= ADDR(NIL) THEN
     7397    14070    2             CALL ALTCHK ALTRET(ERR);
     7398    14071
     7399    14072    2          CALL BLDREC ALTRET(ERR);
     7400    14073    2          RETURN;
     7401    14074    2   ERR:   ALTRETURN;
     7402    14075    2          END WRNOKEY;
     7403    14076               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:295  
     7404    14077        /*I*     NAME:     ZAPID
     7405    14078                 PURPOSE:  To set the ID count to zero
     7406    14079                 DESCRIPTION:
     7407    14080
     7408    14081                      This routine is called when someone asks for an ID
     7409    14082                 back, and an EOF was hit.  Set the ID count to zero.
     7410    14083        */
     7411    14084    1   ZAPID: PROC(ID$);
     7412    14085    2          DCL ID$ PTR;
     7413    14086    2          DCL I SBIN;
     7414    14087        /* */
     7415    14088    2          CALL HFF$DSIZ(ID$,I);
     7416    14089    2          IF I < 4 THEN
     7417    14090    2             RETURN;
     7418    14091    2          ID$->ID.COUNT=0;
     7419    14092
     7420    14093    2          RETURN;
     7421    14094    2          END ZAPID;
     7422    14095               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:296  
     7423    14096        /*I*     NAME:     ZAPKEY
     7424    14097                 PURPOSE:  To set a user's key to zeros
     7425    14098                 DESCRIPTION:
     7426    14099                      If the user asked for a key back, and we couldn't return
     7427    14100                 one (probably because we hit EOF), then for keyed files, set the
     7428    14101                 size field to 0.  For other files, set the whole key to 0.
     7429    14102        */
     7430    14103    1   ZAPKEY: PROC;
     7431    14104    2          DCL SIZE SBIN;
     7432    14105    2          DCL 1 ZAP BASED,
     7433    14106    2               2 * CHAR(SIZE);
     7434    14107    2          DCL 1 UKEY BASED,
     7435    14108    2               2 SIZE CHAR(1) CALIGNED,
     7436    14109    2               2 TEXT CHAR(LEN) CALIGNED;
     7437    14110        /* */
     7438    14111    2          IF ORG = %KEYED# THEN
     7439    14112    2             B$PS1$->UKEY.SIZE=BINASC(0);
     7440    14113    2          ELSE
     7441    14114    3             DO;   /* INDEXED OR IREL */
     7442    14115    3             SIZE=F$DCB.KEYL;
     7443    14116    3             B$PS1$->ZAP='0'B;
     7444    14117    3             END;  /* INDEXED OR IREL */
     7445    14118
     7446    14119    2          IF F$DCB.SHARED THEN
     7447    14120    3             DO;   /* SET ID */
     7448    14121    3             F$DCB.ID='0'B;
     7449    14122    3             IF B$JIT.ERR.CODE = %E$EOF THEN
     7450    14123    3                F$DCB.ID.DA=1;
     7451    14124    3             END;  /* SET ID */
     7452    14125
     7453    14126    2          RETURN;
     7454    14127    2          END ZAPKEY;
     7455    14128               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:297  
     7456    14129        /*F*     NAME:     FMG$ADDKEY
     7457    14130                 PURPOSE:  To add a key
     7458    14131                 CALL:     CALL FMG$ADDKEY(SEG$, SEGCNT, KEY$, KEYIN$) [ALTRET(label)]
     7459    14132                 INPUT:    KEYIN$ - Pointer to the key to be added
     7460    14133                           SEGCNT - Number of segment words to add
     7461    14134                 OUTPUT:   SEG$ - Pointer to the first segment for the new key
     7462    14135                           KEY$ - Pointer to the key added
     7463    14136                 DESCRIPTION:
     7464    14137                      Call SETUP to do some basic initialization.  Set up some
     7465    14138                 local variables.  Then, add one key, stir well. . . call
     7466    14139                 SETARG to set the return values.
     7467    14140        */
     7468    14141    1   FMG$ADDKEY: ENTRY(PSEG$, PSEGCNT, PKEY$, PKEYIN$) ALTRET;
     7469    14142        /* */
     7470    14143    1          CALL SETUP;
     7471    14144    1          KEYIN$=PKEYIN$;
     7472    14145    1          TEMP_CHAR=KEYIN.SIZE;
     7473    14146    1          KEYIN_SIZE=ASCBIN(TEMP_CHAR);
     7474    14147    1          SEGCNT=PSEGCNT;
     7475    14148    1          CALL ADDKEY ALTRET(ERRAK);
     7476    14149    1          CALL SETARG;
     7477    14150    1          RETURN;
     7478    14151    1   ERRAK: CALL SETARG;
     7479    14152    1          ALTRETURN;
     7480    14153               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:298  
     7481    14154        /*F*     NAME:     FMG$ADDSEG
     7482    14155                 PURPOSE:  To add segments
     7483    14156                 CALL:     CALL FMG$ADDSEG(SEG$, SEGCNT) [ALTRET(label)]
     7484    14157                 INPUT:    SEGCNT - The number of segment words to add
     7485    14158                 OUTPUT:   SEG$ - Pointer to the segment space added
     7486    14159                 DESCRIPTION:
     7487    14160                      Do the usual initialization, call ADDSEG to add the segment
     7488    14161                 space.  Then return the segment pointer.
     7489    14162        */
     7490    14163    1   FMG$ADDSEG: ENTRY(PSEG$, PSEGCNT) ALTRET;
     7491    14164        /* */
     7492    14165    1          CALL SETUP;
     7493    14166    1          SEGCNT=PSEGCNT;
     7494    14167    1          CALL ADDSEG ALTRET(ERRAS);
     7495    14168    1          PSEG$=SEG$;
     7496    14169    1          RETURN;
     7497    14170    1   ERRAS: PSEG$=SEG$;
     7498    14171    1          ALTRETURN;
     7499    14172               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:299  
     7500    14173        /*F*     NAME:     FMG$CURKEY
     7501    14174                 PURPOSE:  To position to the current key
     7502    14175                 CALL:     CALL FMG$CURKEY(SEG$, SEGCNT, KEY$) [ALTRET(label)]
     7503    14176                 INPUT:    None
     7504    14177                 OUTPUT:   SEG$ - Pointer to the first segment for the current key
     7505    14178                           SEGCNT - Number of segment words for this key
     7506    14179                           KEY$ - Pointer to the current key; this argument optional
     7507    14180                 DESCRIPTION:
     7508    14181                      Initialize, then position to the current key.  SEGX will
     7509    14182                 point to the start of the new segment.  The number of words will
     7510    14183                 be the offset from that to the end of the granule, or next key
     7511    14184                 whichever comes first.
     7512    14185        */
     7513    14186    1   FMG$CURKEY: ENTRY(PSEG$, PSEGCNT, PKEY$) ALTRET;
     7514    14187        /* */
     7515    14188    1          CALL SETUP;
     7516    14189    1          CALL CURKEY ALTRET(ERRC);
     7517    14190    1          IF CRECX = KEYCNT THEN
     7518    14191    1             PSEGCNT=FM$GRAN.NAVX-SEGX;
     7519    14192    1          ELSE
     7520    14193    1             IF CRECX+1 < BOUND THEN
     7521    14194    1                PSEGCNT=FM$KEYTBL(CRECX+1)-SEGX;
     7522    14195    1             ELSE
     7523    14196    1                PSEGCNT=FM$KEYTBL(CRECX+1)+512-SEGX;
     7524    14197    1          CALL SETARG;
     7525    14198    1          RETURN;
     7526    14199    1   ERRC:  CALL SETARG;
     7527    14200    1          ALTRETURN;
     7528    14201               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:300  
     7529    14202        /*F*     NAME:     FMG$FINDKEY
     7530    14203                 PURPOSE:  To find a key
     7531    14204                 CALL:     CALL FMG$FINDKEY(SEG$, , KEY$, KEYIN$) [ALTRET(label)]
     7532    14205                 INPUT:    KEYIN$ - Pointer to the key to find
     7533    14206                 OUTPUT:   SEG$ - Pointer to the first segment for the key found
     7534    14207                           KEY$ - Pointer to the key found
     7535    14208                 DESCRIPTION:
     7536    14209                      Initialize, find the key, then return the pointers.
     7537    14210        */
     7538    14211    1   FMG$FINDKEY: ENTRY(PSEG$, PSEGCNT, PKEY$, PKEYIN$) ALTRET;
     7539    14212        /* */
     7540    14213    1          CALL SETUP;
     7541    14214    1          KEYIN$=PKEYIN$;
     7542    14215    1          TEMP_CHAR=KEYIN.SIZE;
     7543    14216    1          KEYIN_SIZE=ASCBIN(TEMP_CHAR);
     7544    14217    1          CALL FINDKEY ALTRET(ERRF);
     7545    14218    1          CALL SETARG;
     7546    14219    1          RETURN;
     7547    14220    1   ERRF:  CALL SETARG;
     7548    14221    1          IF KEY$ ~= ADDR(NIL) THEN
     7549    14222    1             F$DCB.RPOS='1'B;
     7550    14223    1          ALTRETURN;
     7551    14224               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:301  
     7552    14225        /*F*     NAME:     FMG$KEYEXP
     7553    14226                 PURPOSE:  To expand a one granule keyed file to 2 grans
     7554    14227                 CALL:     CALL FMG$KEYEXP
     7555    14228                 DESCRIPTION:
     7556    14229
     7557    14230                      Initialize, then call KEYEXP to expand the file
     7558    14231                 to two granules.
     7559    14232        */
     7560    14233    1   FMG$KEYEXP: ENTRY ALTRET;
     7561    14234        /* */
     7562    14235    1          JDCB$=B$JIT.DCB$;
     7563    14236    1          CFU$=F$DCB.CFU$;
     7564    14237    1          CALL KEYEXP ALTRET(ERRK);
     7565    14238
     7566    14239    1          RETURN;
     7567    14240    1   ERRK:  ALTRETURN;
     7568    14241               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:302  
     7569    14242        /*F*     NAME:     FMG$KEYSQZ
     7570    14243                 PURPOSE:  To squeeze a 2 gran file to 1 gran
     7571    14244                 CALL:     CALL FMG$KEYSQZ [ALTRET(label)]
     7572    14245                 DESCRIPTION:
     7573    14246                      Call KEYSQZ to try to squeeze the file to 1 granule.
     7574    14247        */
     7575    14248    1   FMG$KEYSQZ: ENTRY(PSEG$) ALTRET;
     7576    14249        /* */
     7577    14250    1          CALL KEYSQZ;
     7578    14251    1          RETURN;
     7579    14252               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:303  
     7580    14253        /*F*     NAME:     FMG$MOVKEYS
     7581    14254                 PURPOSE:  To make space in the FIT
     7582    14255                 CALL:     CALL FMG$MOVKEYS(NUMWORDS) [ALTRET(label)]
     7583    14256                 INPUT:    NUMWORDS - The amount of space to leave
     7584    14257                 DESCRIPTION:
     7585    14258                      Do the usual initialization, then call MOVKEYS for the
     7586    14259                 tough stuff.
     7587    14260        */
     7588    14261    1   FMG$MOVKEYS: ENTRY(PSEG$) ALTRET;
     7589    14262        /* */
     7590    14263    1          CALL SETUP;
     7591    14264    1          CALL MOVKEYS ALTRET(ERRM);
     7592    14265    1          RETURN;
     7593    14266    1   ERRM:  ALTRETURN;
     7594    14267               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:304  
     7595    14268        /*F*     NAME:     FMG$NXTKEY
     7596    14269                 PURPOSE:  To position to the next key
     7597    14270                 CALL:     CALL FMG$NXTKEY(SEG$, , KEY$) [ALTRET(label)]
     7598    14271                 OUTPUT:   SEG$ - Pointer to the segment for the next key
     7599    14272                           KEY$ - Pointer to the next key
     7600    14273                 DESCRIPTION:
     7601    14274                      Initialize, position to the next key, then return the pointers.
     7602    14275        */
     7603    14276    1   FMG$NXTKEY: ENTRY(PSEG$, PSEGCNT, PKEY$) ALTRET;
     7604    14277        /* */
     7605    14278    1          CALL SETUP;
     7606    14279    1          CALL NXTKEY ALTRET(ERRN);
     7607    14280    1          CALL SETARG;
     7608    14281    1          RETURN;
     7609    14282    1   ERRN:  CALL SETARG;
     7610    14283    1          ALTRETURN;
     7611    14284               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:305  
     7612    14285        /*F*     NAME:     FMG$NXTKEY_ORG
     7613    14286                 PURPOSE:  To position to the next key using F$DCB.ORG
     7614    14287                 CALL:     CALL FMG$NXTKEY(SEG$, , KEY$) [ALTRET(label)]
     7615    14288                 OUTPUT:   SEG$ - Pointer to the segment for the next key
     7616    14289                           KEY$ - Pointer to the next key
     7617    14290                 DESCRIPTION:
     7618    14291
     7619    14292                      Initialize, set the INDEX# to the primary index,
     7620    14293                 set the ORG from F$DCB.ORG.  Get the next key, and
     7621    14294                 return some pointers.
     7622    14295        */
     7623    14296    1   FMG$NXTKEY_ORG: ENTRY(PSEG$, PSEGCNT, PKEY$) ALTRET;
     7624    14297        /* */
     7625    14298    1          CALL SETUP;
     7626    14299    1          INDEX#=0;
     7627    14300    1          ORG=F$DCB.ORG;
     7628    14301    1          CALL NXTKEY ALTRET(ERRNO);
     7629    14302    1          CALL SETARG;
     7630    14303    1          RETURN;
     7631    14304    1   ERRNO: CALL SETARG;
     7632    14305    1          ALTRETURN;
     7633    14306               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:306  
     7634    14307        /*F*     NAME:     FMG$NXTKEYNM
     7635    14308                 PURPOSE:  To position to the next key within the current granule
     7636    14309                 CALL:     CALL FMG$NXTKEYNM(SEG$, , KEY$) [ALTRET(label)]
     7637    14310                 OUTPUT:   SEG$ - Pointer to the segment for the next key
     7638    14311                           KEY$ - Pointer to the next key
     7639    14312                 DESCRIPTION:
     7640    14313                      This routine will only position to the next key if it is
     7641    14314                 within the current granule, otherwise, it will altreturn.
     7642    14315        */
     7643    14316    1   FMG$NXTKEYNM: ENTRY(PSEG$, PSEGCNT, PKEY$) ALTRET;
     7644    14317        /* */
     7645    14318    1          CALL SETUP;
     7646    14319    1          CALL NXTKEYNM ALTRET(ERRNM);
     7647    14320    1          CALL SETARG;
     7648    14321    1          RETURN;
     7649    14322    1   ERRNM: CALL SETARG;
     7650    14323    1          ALTRETURN;
     7651    14324               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:307  
     7652    14325        /*F*     NAME:     FMG$NXTREC
     7653    14326                 PURPOSE:  To position to the next record
     7654    14327                 CALL:     CALL FMG$NXTREC [ALTRET(label)]
     7655    14328                 DESCRIPTION:
     7656    14329                      This routine is used primarily to count the number of
     7657    14330                 records along an alternate index to check for inconsistancies.
     7658    14331                 Set the index to the current index, and position to the next
     7659    14332                 record.
     7660    14333        */
     7661    14334    1   FMG$NXTREC: ENTRY ALTRET;
     7662    14335        /* */
     7663    14336    1          CALL SETUP;
     7664    14337    1          INDEX#=F$DCB.INDX-1;
     7665    14338    1          ORG=F$DCB.ORG;
     7666    14339    1          CALL NXTREC ALTRET(ERRNR);
     7667    14340    1          RETURN;
     7668    14341    1   ERRNR: ALTRETURN;
     7669    14342               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:308  
     7670    14343        /*F*     NAME:     FMG$NXTSEG
     7671    14344                 PURPOSE:  To position to the next segment
     7672    14345                 CALL:     CALL FMG$NXTSEG [ALTRET(label)]
     7673    14346                 OUTPUT:   SEG$ - Pointer to the next segment
     7674    14347                 DESCRIPTION:
     7675    14348                      Position to the next segment, and return the pointer.
     7676    14349        */
     7677    14350    1   FMG$NXTSEG: ENTRY(PSEG$) ALTRET;
     7678    14351        /* */
     7679    14352    1          CALL SETUP;
     7680    14353    1          CALL NXTSEG ALTRET(ERRNS);
     7681    14354    1          PSEG$=SEG$;
     7682    14355    1          RETURN;
     7683    14356    1   ERRNS: PSEG$=SEG$;
     7684    14357    1          ALTRETURN;
     7685    14358               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:309  
     7686    14359        /*F*     NAME:     FMG$REMKEY
     7687    14360                 PURPOSE:  To remove a key
     7688    14361                 CALL:     CALL FMG$REMKEY [ALTRET(label)]
     7689    14362                 DESCRIPTION:
     7690    14363                      Remove the key currently pointed to (by F$DCB.CRECX).
     7691    14364        */
     7692    14365    1   FMG$REMKEY: ENTRY ALTRET;
     7693    14366        /* */
     7694    14367    1          CALL SETUP;
     7695    14368    1          CALL REMKEY ALTRET(ERRR);
     7696    14369    1          RETURN;
     7697    14370    1   ERRR:  ALTRETURN;
     7698    14371    1          END FMG$KEYED;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:310  
--  Include file information  --

   UD_ERRORS_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FM_FIELD_C.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM$MACROS.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMG$KEYED.

   Procedure FMG$KEYED requires 11790 words for executable code.
   Procedure FMG$KEYED requires 128 words of local(AUTO) storage.

    No errors detected in file FMG$KEYED.:E05TSI    .

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:311  

 Object Unit name= FMG$KEYED                                  File name= FMG$KEYED.:E05TOU
 UTS= JUL 29 '97 16:43:17.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     32     40  FMG$KEYED
    1   Proc  even  none 11790  27016  FMG$KEYED
    2  RoData even  none    63     77  FMG$KEYED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        4  FMG$KEYED
     1      3          yes     yes      Std        1  FMG$KPMME
     1  26461          yes     yes      Std        4  FMG$ADDKEY
     1  26512          yes     yes      Std        2  FMG$ADDSEG
     1  26533          yes     yes      Std        3  FMG$CURKEY
     1  26612          yes     yes      Std        4  FMG$FINDKEY
     1  26646          yes     yes      Std        0  FMG$KEYEXP
     1  26662          yes     yes      Std        1  FMG$KEYSQZ
     1  26667          yes     yes      Std        1  FMG$MOVKEYS
     1  26677          yes     yes      Std        3  FMG$NXTKEY
     1  26713          yes     yes      Std        3  FMG$NXTKEY_ORG
     1  26734          yes     yes      Std        3  FMG$NXTKEYNM
     1  26750          yes     yes      Std        0  FMG$NXTREC
     1  26770          yes     yes      Std        1  FMG$NXTSEG
     1  27006          yes     yes      Std        0  FMG$REMKEY
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:312  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       8 FMD$RECTRAN
 yes     yes           Std       6 FMD$REDBUF
 yes     yes           Std       1 FAF$GETGRAN
         yes           Std       1 FMD$FLSHBUFNR
         yes           Std       3 FMD$GETBUF
         yes           Std       0 FMB$IOSPIN
 yes     yes           Std       1 FAG$G1DIR
         yes           Std       1 FMD$FLSHBUF
         yes           Std       1 FMD$WRTSVNW
 yes     yes           Std       2 HFF$DSIZ
         yes           Std       1 FMB$ERRTYP
         yes           Std      11 FMB$LOGERR
         yes           Std       4 FMG$COMPPDLS
         yes           Std       3 FMG$COMPSFLT
         yes           Std       3 FMG$COMPDFLT
         yes           Std       4 FMG$COMPUDFLT
         yes           Std       4 FMG$COMPPDNS
         yes           Std       4 FMG$COMPPDTS
         yes           Std       4 FMG$COMPPDFLT
         yes           Std       4 FMG$COMPUDTS
         yes           Std       4 FMG$COMPUDLS
         yes           Std       4 FMG$COMPUDLO
         yes           Std       4 FMG$COMPUDTO
 yes     yes           Std       1 FAF$CHKDAFR
 yes     yes           Std       2 FMO$LOCCODP
         yes           Std       1 FMD$WRTSV
         yes           Std       1 FMD$WRTBUF
 yes     yes           Std       2 FMN$GETFIT
         yes           Std       1 FMC$CLRFILE
 yes     yes           Std       1 HFF$NILERASE
 yes     yes           Std       2 FMD$CHKFIELD
 yes     yes           Std       1 HFF$WRITE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:313  
 yes     yes           Std       0 FMG$INIT
         yes           Std       1 FMD$RELBUF
         yes           Std       3 FMR$SLIDE
 yes     yes           Std       1 FAG$REXT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHEPGCNT$                  r    FM_FRZERO                        r    FM_FRMAX
r    FM_SRZERO                        r    FM_EOP                           r    F$CFU$
     B_MPT                                 S$CU$                            r    B$JIT$
     B$PS0$                           r    B$PS1$                           r    B$PS2$
r    B$PS3$                           r    B$ROSEG$                              FM$BUF$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:314  


        1        1        /*M*   FMG$KEYED - Keyed disk file PMME processing and subroutines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*P*     NAME:     FMG$KEYED
        9        9                 PURPOSE:  To handle M$PFIL, M$REW, M$PRECORD, M$DELREC, M$READ,
       10       10                           and M$WRITE for keyed files.
       11       11        */
       12       12        /*F*     NAME:     FMG$KEYED
       13       13                 PURPOSE:  To handle M$PFIL, M$REW, M$PRECORD, M$DELREC, M$READ,
       14       14                           and M$WRITE for keyed files.
       15       15
       16       16        */
       17       17        /*D*     NAME:     FMG$KEYED
       18       18                 ENTRY:    FMG$ADDKEY, FMG$ADDSEG, FMG$CURKEY, FMG$FINDKEY,
       19       19                           FMG$KEYSQZ, FMG$MOVKEYS, FMG$NXTKEY, FMG$NXTKEYNM,
       20       20                           FMG$NXTSEG, FMG$REMKEY, FMG$KPMME, FMG$NXTKEY_ORG
       21       21                 CALL:     CALL FMG$KEYED(FPTCODE) [ALTRET(label)]
       22       22                 INPUT:    FPTCODE - The operation to be performed
       23       23                 DESCRIPTION:
       24       24
       25       25                      This module handles all PMMEs for keyed, indexed, and irel
       26       26                 files, except for M$OPEN and M$CLOSE.  The basic idea of this
       27       27                 module is to first do some basic initialization, then chose the
       28       28                 right subroutine to branch to.  Some subroutines, like FINDKEY
       29       29                 are general prupose routines that may be used by almost any
       30       30                 PMME.
       31       31
       32       32                      Keyed files are basically organized into two types of granules,
       33       33                 index and data granules.  Index granules contain the text of the
       34       34                 keys, and point to granules containing the records.  The granules
       35       35                 with the record text are called data granules.
       36       36
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:315  
       37       37                      Index granules are a fairly complex structure that are very
       38       38                 dynamic.  The first 5 words of an index granule are the header,
       39       39                 FM$GRAN.  Next, is the key table.  This is 280 bytes long.  Each
       40       40                 byte in the table points to a key, with a rather odd exception.
       41       41                 The first byte of the table is usually refered to as the "BOUND".
       42       42                 Since granules are 1024 words long, and since the maximum value
       43       43                 that can be stored in 9 bits is 511, we need a way to access the
       44       44                 last 512 words in the granule.  BOUND is an index into the key
       45       45                 table that indicates where the "overflow" begins.  In other words,
       46       46                 the values of the key table from FM$KEYTBL(BOUND) to the end of
       47       47                 the table, must have 512 added in order to access the key.
       48       48
       49       49                      Keys within the granule, and the entries in the key table that
       50       50                 point to the keys are kept sorted.  Keys are located within the
       51       51                 granule by a binary search.  If keys are inserted into a granule,
       52       52                 then the key table is reorganized.
       53       53
       54       54                      The actual keys are stored in two forms, depending on the
       55       55                 file organization.  Keyed and indexed keys are stored in a textc
       56       56                 form.  Irel keys are stored in texth form.
       57       57
       58       58                      After the key is one or more master index segments, or
       59       59                 MISEGs.  Each of these point to a part of the record.
       60       60
       61       61                      Files with alternate indexes will have extra sets of index
       62       62                 granules, one for each alternate index.  These are organized like
       63       63                 normal index granules with one exception.  Duplicate keys are
       64       64                 allowed to exist along alternate indexes.  If a key has duplicate
       65       65                 values, then we keep one copy of the key.  The list of duplicates
       66       66                 is maintained by allowing multiple MISEGs to exist for the key.
       67       67                 Since each duplicate key may have more than one MISEG, the
       68       68                 first MISEG for each duplicate will have FM$MISEG.FAK set so
       69       69                 that we can find each separate duplicate key in a list of
       70       70                 MISEGS.
       71       71
       72       72                      Each index for a file may also have an upper level structure.
       73       73                 This is a fast path for locating granules.  It is organized into
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:316  
       74       74                 a tree structure.  The upper level is organized in the same way
       75       75                 that an index granule is, except that instead of an MISEG after
       76       76                 the key, there is a disk address that points to the next lower
       77       77                 level.
       78       78
       79       79                      The buffers pointed to by F$DCB.BFR in FMG$KEYED have more
       80       80                 or less fixed purposes.  Buffer 0 is used for holding data granules.
       81       81                 Buffer 1 is used for holding the current level 0 index granule.
       82       82                 Buffer 2 is used for holding the TDA (top of the upper level).
       83       83                 Buffers 3 and 4 are used for holding the flink and blink when
       84       84                 building a new link into the file.
       85       85        */
       86       86                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:317  
       87       87        FMG$KEYED: PROC(PSEG$, PSEGCNT, PKEY$, PKEYIN$) ALTRET;

     87  1 000000   000000 700200 xent  FMG$KEYED    TSX0  ! X66_AUTO_4
         1 000001   000200 000004                    ZERO    128,4
         1 000002   000005 710000 1                  TRA     s:6981

       88       88    1          DCL PSEG$ PTR;
       89       89    1          DCL FPTCODE REDEF PSEG$ SBIN;
       90       90    1          DCL NUMWRDS REDEF PSEG$ SBIN;
       91       91    1          DCL PSEGCNT UBIN;
       92       92    1          DCL PKEY$ PTR;
       93       93    1          DCL PKEYIN$ PTR;
       94       94        /* */
       95       95               %INCLUDE B$JIT;
       96      698               %MACRO F$DCB(BASED=BASED);
       97      699               %INCLUDE F$DCB;
       98      748               %MEND;
       99      749               %INCLUDE FM_CACHE_R;
      100      761               %INCLUDE FM$MACROS;
      101     1136               %INCLUDE FM_DATA_R;
      102     1150               %INCLUDE FM_FIELD_C;
      103     1191               %INCLUDE F_ERRORS_C;
      104     1431               %INCLUDE F_FPTCODE_C;
      105     1467               %INCLUDE F$CP6V_C;
      106     1693               %INCLUDE CP_6_SUBS;
      107     2233               %INCLUDE B$SS;
      108     2412               %INCLUDE B$USER;
      109     2628               %INCLUDE B_STRINGS_C;
      110     2757               %INCLUDE B_MAGIC_C;
      111     2875               %INCLUDE B$OBJECT_C;
      112     6305               %INCLUDE UD_ERRORS_C;
      113     6347        /* */
      114     6348               %F$DCB(BASED="BASED(JDCB$)");
      115     6398               %FM$CFU(BASED="BASED(CFU$)");
      116     6404               %FM$CFUA;
      117     6410               %FM$GRAN(BASED="BASED(BUF$)");
      118     6414               %FM$GRAN(FM$GRAN=FM$GRAN3, BASED="BASED(BUF3$)");
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:318  
      119     6418               %FM$KEYENT(BASED="BASED(KEY$)");
      120     6421               %FM$IRENT(BASED="BASED(KEY$)");
      121     6424               %FM$MISEG(BASED="BASED(SEG$)");
      122     6428               %FM$ULSEG(BASED="BASED(KEY$)");
      123     6431               %FM$KEYTBL(BASED="BASED(KTPTR$)");
      124     6434               %FM$KEYTBL(FM$KEYTBL=FM$KEYTBL3, FM$KT=FM$KT3);
      125     6437               %FITALTKEYS(FITALTKEYS=ALTKEYS, BASED="BASED(ALTKEY$)");
      126     6443               %FMG$IRKEYS(FPTN=IRKEYS, STCLASS="BASED(ALTKEY$)");
      127     6450               %FMG$KFIELD(FPTN=KFIELD, STCLASS="BASED(KFIELD$)");
      128     6453               %VLP$RECFIELD_V(FPTN=RECFIELD, BASED="BASED(RECFIELD$)");
      129     6490               %FM$FIELD_START(FPTN=FIELD_START, STCLASS="BASED(START$)");
      130     6512               %CODE02;
      131     6516               %CODE03;
      132     6523               %B_MPT(FPTN=B_MPT,STCLASS=SYMREF);
      133     6616               %B$USERREFS;
      134     6620               %VREBL_DATATYPES;
      135     6695        /* */
      136     6696               %FPT$READ_V(BASED="BASED(B$PS0$)");
      137     6703               %FPT$WRITE_V(BASED="BASED(B$PS0$)");
      138     6709               %FPT$DELREC_V(BASED="BASED(B$PS0$)");
      139     6713               %FPT$PFIL_V(BASED="BASED(B$PS0$)");
      140     6716               %FPT$PRECORD_V(BASED="BASED(B$PS0$)");
      141     6721        /* */
      142     6722               %SUB FCG#='0615'O;
      143     6723               %SUB MID#='07'O;
      144     6724               %ERRCODE (NAME=ERRWRWOKEY, COD#=%E$WRWOKEY);
      145     6728               %ERRCODE (NAME=ERRREWRITE, COD#=%E$REWRITE);
      146     6732               %ERRCODE (NAME=ERROLDREC, COD#=%E$OLDREC);
      147     6736               %ERRCODE (NAME=ERRWRITNEW, COD#=%E$WRITNEW);
      148     6740               %ERRCODE (NAME=ERRFREC, COD#=%E$FREC);
      149     6744               %ERRCODE (NAME=ERRNEWREC, COD#=%E$NEWREC);
      150     6748               %ERRCODE (NAME=ERRLD, COD#=%E$LD);
      151     6752               %ERRCODE (NAME=ERRNOKEY, COD#=%E$NOKEY);
      152     6756               %ERRCODE (NAME=ERRBADKEY2, COD#=%E$BADKEY2);
      153     6760               %ERRCODE (NAME=ERRBADKEY, COD#=%E$BADKEY);
      154     6764               %ERRCODE (NAME=ERRINDBC, COD#=%E$INDBC);
      155     6768               %ERRCODE (NAME=ERRFIT, COD#=%E$FIT);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:319  
      156     6772               %ERRCODE (NAME=ERRKEYORDER, COD#=%E$KEYORDER);
      157     6776               %ERRCODE (NAME=ERRNOCONT, COD#=%E$NOCONT);
      158     6780               %ERRCODE (NAME=ERRINDSEED, COD#=%E$INDSEED);
      159     6784               %ERRCODE (NAME=ERRBOF, COD#=%E$BOF);
      160     6788               %ERRCODE (NAME=ERREOF, COD#=%E$EOF);
      161     6792               %ERRCODE (NAME=ERRPMMEINT, COD#=%E$PMMEINT);
      162     6796               %ERRCODE (NAME=ERRNOSUCHINDX, COD#=%E$NOSUCHINDX);
      163     6800               %ERRCODE (NAME=ERRNOREC, COD#=%E$NOREC);
      164     6804               %ERRCODE (NAME=ERRKEYCHNG, COD#=%E$KEYCHNG);
      165     6808               %ERRCODE (NAME=ERRDUPKEY, COD#=%E$DUPKEY);
      166     6812               %ERRCODE (NAME=ERRNOALT, COD#=%E$NOALT);
      167     6816               %ERRCODE (NAME=ERRKEYTRAP, COD#=%E$BADVECT1);
      168     6820               %ERRCODE (NAME=ERRIDTRAP, COD#=%E$BADVECT3);
      169     6824               %ERRCODE (NAME=ERRALLIDS, COD#=%E$ALLIDS);
      170     6828               %ERRCODE (NAME=ERRIDSMALL, COD#=%E$IDSMALL);
      171     6832               %ERRCODE (NAME=ERRNOALTKEY, COD#=%E$NOALTKEY);
      172     6836               %ERRCODE (NAME=ERRIDONLY, COD#=%E$IDONLY);
      173     6840               %ERRCODE (NAME=ERRBADID, COD#=%E$BADID);
      174     6844               %ERRCODE (NAME=ERRDMY, COD#=0);
      175     6848        /* */
      176     6849    1          DCL B$JIT$ PTR SYMREF READONLY;
      177     6850    1          DCL B$PS0$ PTR SYMREF;
      178     6851    1          DCL B$PS1$ PTR SYMREF READONLY;
      179     6852    1          DCL B$PS2$ PTR SYMREF READONLY;
      180     6853    1          DCL B$PS3$ PTR SYMREF READONLY;
      181     6854    1          DCL B$ROSEG$ PTR SYMREF READONLY;
      182     6855    1          DCL FM$BUF$(0:0) PTR SYMREF;
      183     6856        /* */
      184     6857    1          DCL FAF$CHKDAFR ENTRY(1) ALTRET;
      185     6858    1          DCL FAF$GETGRAN ENTRY(1) ALTRET;
      186     6859    1          DCL FAG$G1DIR ENTRY(1) ALTRET;
      187     6860    1          DCL FAG$REXT ENTRY(1) ALTRET;
      188     6861    1          DCL FMB$ERRTYP ENTRY(1);
      189     6862    1          DCL FMB$IOSPIN ENTRY;
      190     6863    1          DCL FMB$LOGERR ENTRY(11);
      191     6864    1          DCL FMC$CLR1 ENTRY(1);
      192     6865    1          DCL FMC$CLRFILE ENTRY(1);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:320  
      193     6866    1          DCL FMD$CHKFIELD ENTRY(2) ALTRET;
      194     6867    1          DCL FMD$FLSHBUF ENTRY(1);
      195     6868    1          DCL FMD$FLSHBUFNR ENTRY(1);
      196     6869    1          DCL FMD$GETBUF ENTRY(3);
      197     6870    1          DCL FMD$RECTRAN ENTRY(8) ALTRET;
      198     6871    1          DCL FMD$REDBUF ENTRY(6) ALTRET;
      199     6872    1          DCL FMD$RELBUF ENTRY(1);
      200     6873    1          DCL FMD$WRTBUF ENTRY(1);
      201     6874    1          DCL FMD$WRTSV ENTRY(1);
      202     6875    1          DCL FMD$WRTSVNW ENTRY(1);
      203     6876    1          DCL FMG$COMPUDTS ENTRY(4);
      204     6877    1          DCL FMG$COMPUDLS ENTRY(4);
      205     6878    1          DCL FMG$COMPUDLO ENTRY(4);
      206     6879    1          DCL FMG$COMPUDTO ENTRY(4);
      207     6880    1          DCL FMG$COMPPDLS ENTRY(4);
      208     6881    1          DCL FMG$COMPPDNS ENTRY(4);
      209     6882    1          DCL FMG$COMPPDTS ENTRY(4);
      210     6883    1          DCL FMG$COMPSFLT ENTRY(3);
      211     6884    1          DCL FMG$COMPDFLT ENTRY(3);
      212     6885    1          DCL FMG$COMPPDFLT ENTRY(4);
      213     6886    1          DCL FMG$COMPUDFLT ENTRY(4);
      214     6887    1          DCL FMG$INIT ENTRY ALTRET;
      215     6888    1          DCL FMN$GETFIT ENTRY(2) ALTRET;
      216     6889    1          DCL FMO$LOCCODP ENTRY(2) ALTRET;
      217     6890    1          DCL FMR$SLIDE ENTRY(3);
      218     6891    1          DCL HFF$DSIZ ENTRY(2) ALTRET;
      219     6892    1          DCL HFF$NILERASE ENTRY(1) ALTRET;
      220     6893    1          DCL HFF$WRITE    ENTRY(1) ALTRET;
      221     6894        /* */
      222     6895    1          DCL 1 INITKEYTBL CONSTANT,
      223     6896    1               2 * UBIN(9) UNAL INIT(SIZEC(FM$KEYTBL));
      224     6897        /* */
      225     6898    1          DCL JDCB$ PTR;
      226     6899    1          DCL CFU$ PTR;
      227     6900    1          DCL INDEX# UBIN;
      228     6901    1          DCL SAVE_INDEX# UBIN;
      229     6902    1          DCL SEGX SBIN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:321  
      230     6903    1          DCL SEG$ PTR;
      231     6904    1          DCL CRECX UBIN;
      232     6905    1          DCL BOUND SBIN;
      233     6906    1          DCL KEYCNT SBIN;
      234     6907    1          DCL KEY$ PTR;
      235     6908    1          DCL DA UBIN;
      236     6909    1          DCL ORG UBIN;
      237     6910    1          DCL ALTKEY$ PTR;
      238     6911    1          DCL BUF$ PTR;
      239     6912    1          DCL KTPTR$ PTR;
      240     6913    1          DCL G$ PTR;
      241     6914    1          DCL FM_MISEG BIT(72);
      242     6915    1          DCL RESULT UBIN;
      243     6916    1          DCL FOUND UBIN;
      244     6917    1          DCL RECNUM UBIN;
      245     6918    1          DCL IDPTR$ PTR;
      246     6919    1          DCL SEGCNT SBIN;
      247     6920    1          DCL EOP UBIN;
      248     6921    1          DCL KEYIN$ PTR;
      249     6922    1          DCL DBUF$ PTR;
      250     6923    1          DCL OLD_MISEG BIT(72);
      251     6924    1          DCL FAK SBIN;
      252     6925    1          DCL BUFNUM UBIN;
      253     6926    1          DCL TOTSIZE UBIN;
      254     6927    1          DCL KEYWORDS UBIN;
      255     6928    1          DCL ADDFLG SBIN;
      256     6929    1          DCL BUF3$ PTR;
      257     6930    1          DCL ENUF SBIN;
      258     6931    1          DCL INSRT SBIN;
      259     6932    1          DCL SPARE UBIN;
      260     6933    1          DCL INDX SBIN;
      261     6934    1          DCL MOVECNT SBIN;
      262     6935    1          DCL KEYIN_SIZE UBIN;
      263     6936    1          DCL ANEWSEG SBIN;
      264     6937    1          DCL COMFLG UBIN;
      265     6938    1          DCL LEN UBIN;
      266     6939    1          DCL REC$ PTR;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:322  
      267     6940    1          DCL IRKEY$ PTR;
      268     6941    1          DCL FN UBIN;
      269     6942    1          DCL RECFIELD$ PTR;
      270     6943    1          DCL START$ PTR;
      271     6944    1          DCL KFIELD$ PTR;
      272     6945    1          DCL FIELD$ PTR;
      273     6946    1          DCL FIELDIN$ PTR;
      274     6947    1          DCL TEMP_CHAR CHAR(1) CALIGNED;
      275     6948    1          DCL USERKEY_SIZE UBIN;
      276     6949    1          DCL DELALL_FAST BIT(1) ALIGNED;
      277     6950        /* */
      278     6951    1          DCL 1 ID BASED(IDPTR$),
      279     6952    1               2 COUNT UBIN,
      280     6953    1               2 GX UBIN(10) UNAL,
      281     6954    1               2 DA UBIN(26) UNAL;
      282     6955    1          DCL 1 KEYIN BASED(KEYIN$),
      283     6956    1               2 SIZE CHAR(1) CALIGNED,
      284     6957    1               2 TEXT CHAR(KEYIN_SIZE);
      285     6958    1          DCL CHAR1 CHAR(1) BASED;
      286     6959    1          DCL 1 FIELD BASED CALIGNED,
      287     6960    1               2 P BIT(1) UNAL,
      288     6961    1               2 SIZE UBIN(8) UNAL;
      289     6962    1          DCL FIELD_PTR UBIN BASED(FIELD$);
      290     6963    1          DCL FIELDIN_PTR UBIN BASED(FIELDIN$);
      291     6964        /* */
      292     6965               %EQU EQUAL=0;
      293     6966               %EQU LESS=1;
      294     6967               %EQU GREATER=2;
      295     6968               %EQU NOO=0;
      296     6969               %EQU YESS=1;
      297     6970               %EQU NONE=3;
      298     6971               %EQU KEY=0;
      299     6972               %EQU SEG=1;
      300     6973               %EQU USEREC=1;
      301     6974               %EQU FMREC=2;
      302     6975               %EQU BEGIN=0;
      303     6976               %EQU MIDDLE=1;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:323  
      304     6977               %EQU END=2;
      305     6978               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:324  
      306     6979    1   FMG$KPMME: ENTRY(PSEG$) ALTRET;

   6979  1 000003   000000 700200 xent  FMG$KPMME    TSX0  ! X66_AUTO_4
         1 000004   000200 000004                    ZERO    128,4

      307     6980        /* */
      308     6981    1          CALL KINIT ALTRET(ERR);

   6981  1 000005   013014 701000 1                  TSX1    KINIT
         1 000006   000104 702000 1                  TSX2    ERR

      309     6982
      310     6983    2          DO CASE(FPTCODE);

   6983  1 000007   200003 470500                    LDP0    @PSEG$,,AUTO
         1 000010   000000 235100                    LDA     0,,PR0
         1 000011   000011 115007                    CMPA    9,DL
         1 000012   000014 602005 1                  TNC     s:6983+5,AL
         1 000013   000051 710000 1                  TRA     s:7007
         1 000014   000025 710000 1                  TRA     s:6985
         1 000015   000047 710000 1                  TRA     s:7003
         1 000016   000044 710000 1                  TRA     s:7000
         1 000017   000041 710000 1                  TRA     s:6997
         1 000020   000030 710000 1                  TRA     s:6988
         1 000021   000051 710000 1                  TRA     s:7007
         1 000022   000036 710000 1                  TRA     s:6994
         1 000023   000051 710000 1                  TRA     s:7007
         1 000024   000033 710000 1                  TRA     s:6991

      311     6984    2             CASE(FPTREAD);

      312     6985    2                CALL READ ALTRET(ERR);

   6985  1 000025   017236 701000 1                  TSX1    READ
         1 000026   000104 702000 1                  TSX2    ERR
         1 000027   000051 710000 1                  TRA     s:7007

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:325  
      313     6986
      314     6987    2             CASE(FPTPFIL);

      315     6988    2                CALL PFIL ALTRET(ERR);

   6988  1 000030   015473 701000 1                  TSX1    PFIL
         1 000031   000104 702000 1                  TSX2    ERR
         1 000032   000051 710000 1                  TRA     s:7007

      316     6989
      317     6990    2             CASE(FPTPFILEOF);

      318     6991    2                CALL PTOEOF ALTRET(ERR);

   6991  1 000033   016454 701000 1                  TSX1    PTOEOF
         1 000034   000104 702000 1                  TSX2    ERR
         1 000035   000051 710000 1                  TRA     s:7007

      319     6992
      320     6993    2             CASE(FPTREW);

      321     6994    2                CALL PTOBOF ALTRET(ERR);

   6994  1 000036   016372 701000 1                  TSX1    PTOBOF
         1 000037   000104 702000 1                  TSX2    ERR
         1 000040   000051 710000 1                  TRA     s:7007

      322     6995
      323     6996    2             CASE(FPTPREC);

      324     6997    2                CALL PREC ALTRET(ERR);

   6997  1 000041   015511 701000 1                  TSX1    PREC
         1 000042   000104 702000 1                  TSX2    ERR
         1 000043   000051 710000 1                  TRA     s:7007

      325     6998
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:326  
      326     6999    2             CASE(FPTDELREC);

      327     7000    2                CALL DELREC ALTRET(ERR);

   7000  1 000044   007115 701000 1                  TSX1    DELREC
         1 000045   000104 702000 1                  TSX2    ERR
         1 000046   000051 710000 1                  TRA     s:7007

      328     7001
      329     7002    2             CASE(FPTWRITE);

      330     7003    2                CALL WRITE ALTRET(ERR);

   7003  1 000047   025476 701000 1                  TSX1    WRITE
         1 000050   000104 702000 1                  TSX2    ERR

      331     7004
      332     7005    2          END;

      333     7006
      334     7007    1          IF FPTCODE = FPTWRITE THEN

   7007  1 000051   200003 470500                    LDP0    @PSEG$,,AUTO
         1 000052   000000 235100                    LDA     0,,PR0
         1 000053   000001 115007                    CMPA    1,DL
         1 000054   000064 601000 1                  TNZ     s:7010

      335     7008    1             F$DCB.CONT=FPT$WRITE_V.DVBYTE.CONT;

   7008  1 000055   200007 471500                    LDP1    JDCB$,,AUTO
         1 000056   000000 473400 xsym               LDP3    B$PS0$
         1 000057   300003 236100                    LDQ     3,,PR3
         1 000060   000026 772000                    QRL     22
         1 000061   100064 676100                    ERQ     52,,PR1
         1 000062   000040 376007                    ANQ     32,DL
         1 000063   100064 656100                    ERSQ    52,,PR1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:327  
      336     7009
      337     7010    1          F$DCB.EOP=FM_EOP(FPTCODE);

   7010  1 000064   000000 720100                    LXL0    0,,PR0
         1 000065   200007 471500                    LDP1    JDCB$,,AUTO
         1 000066   000000 236010 xsym               LDQ     FM_EOP,X0
         1 000067   000033 736000                    QLS     27
         1 000070   100064 676100                    ERQ     52,,PR1
         1 000071   003000 376003                    ANQ     1536,DU
         1 000072   100064 656100                    ERSQ    52,,PR1

      338     7011    1          IF INDEX# ~= SAVE_INDEX# THEN

   7011  1 000073   200011 236100                    LDQ     INDEX#,,AUTO
         1 000074   200012 116100                    CMPQ    SAVE_INDEX#,,AUTO
         1 000075   000103 600000 1                  TZE     s:7017

      339     7012    2             DO;   /* RESTORE INDEX */

      340     7013    2             INDEX#=SAVE_INDEX#+1;

   7013  1 000076   200012 235100                    LDA     SAVE_INDEX#,,AUTO
         1 000077   000001 035007                    ADLA    1,DL
         1 000100   200011 755100                    STA     INDEX#,,AUTO

      341     7014    2             CALL SETINDEX ALTRET(ERR);

   7014  1 000101   021667 701000 1                  TSX1    SETINDEX
         1 000102   000104 702000 1                  TSX2    ERR

      342     7015    2             END;  /* RESTORE INDEX */

      343     7016
      344     7017    1          RETURN;

   7017  1 000103   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:328  
      345     7018
      346     7019    1   ERR:   ALTRETURN;

   7019  1 000104   000000 702200 xent  ERR          TSX2  ! X66_AALT

      347     7020               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:329  
      348     7021        /*I*     NAME:     ADDDATA
      349     7022                 PURPOSE:  To allocate data space and build a MISEG
      350     7023
      351     7024                 DESCRIPTION:
      352     7025                      If we don't have a data granule, or the current data granule
      353     7026                 is full, then allocate another granule.
      354     7027
      355     7028                      Next move the data from the user buffer to the data
      356     7029                 granule.  Update the data granule information.  Then, build
      357     7030                 the MISEG.
      358     7031
      359     7032                      If this file has alternate indexes, then build any necessary
      360     7033                 segments in those indexes.
      361     7034        */
      362     7035                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:330  
      363     7036    1   ADDDATA: PROC ALTRET;

   7036  1 000105   200114 741300       ADDDATA      STX1  ! @K$+1,,AUTO

      364     7037    2          DCL GACTB UBIN;
      365     7038    2          DCL GSIZ UBIN;
      366     7039        /* */
      367     7040    2          DA=FM$CFU.GDA;

   7040  1 000106   200010 470500                    LDP0    CFU$,,AUTO
         1 000107   000005 236100                    LDQ     5,,PR0
         1 000110   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000111   200021 756100                    STQ     DA,,AUTO

      368     7041    2          IF DA = 0 THEN

   7041  1 000112   000115 601000 1                  TNZ     s:7044

      369     7042    2             CALL ALLOCATE ALTRET(ERR);

   7042  1 000113   000343 701000 1                  TSX1    ALLOCATE
         1 000114   000277 702000 1                  TSX2    ERR

      370     7043
      371     7044    2          F$DCB.LVL=7;

   7044  1 000115   200007 470500                    LDP0    JDCB$,,AUTO
         1 000116   070000 236003                    LDQ     28672,DU
         1 000117   000067 256100                    ORSQ    55,,PR0

      372     7045    2          DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));

   7045  1 000120   000115 236100                    LDQ     77,,PR0
         1 000121   000033 772000                    QRL     27
         1 000122   000037 376007                    ANQ     31,DL
         1 000123   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 000124   200040 756100                    STQ     DBUF$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:331  

      373     7046    2          IF DBUF$ = ADDR(NIL) OR

   7046  1 000125   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000126   000133 600000 1                  TZE     s:7048
         1 000127   000115 236100                    LDQ     77,,PR0
         1 000130   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000131   200021 116100                    CMPQ    DA,,AUTO
         1 000132   000147 600000 1                  TZE     s:7050

      374     7047    2             F$DCB.BFR.DA(0) ~= DA THEN
      375     7048    2             CALL FMD$REDBUF(DBUF$, 0, DA, 0, 0) ALTRET(ALLOC);

   7048  1 000133   000000 236000 2                  LDQ     0
         1 000134   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 000135   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 000136   200021 631500                    EPPR1   DA,,AUTO
         1 000137   200170 451500                    STP1    STEMP_FIELDIN+4,,AUTO
         1 000140   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 000141   200040 633500                    EPPR3   DBUF$,,AUTO
         1 000142   200166 453500                    STP3    STEMP_FIELDIN+2,,AUTO
         1 000143   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 000144   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000145   000000 701000 xent               TSX1    FMD$REDBUF
         1 000146   000153 702000 1                  TSX2    ALLOC

      376     7049
      377     7050    2          IF DBUF$->FM$GRAN.AVAIL = 0 THEN

   7050  1 000147   200040 470500                    LDP0    DBUF$,,AUTO
         1 000150   000001 236100                    LDQ     1,,PR0
         1 000151   001777 316007                    CANQ    1023,DL
         1 000152   000155 601000 1                  TNZ     s:7053

      378     7051    2   ALLOC:    CALL ALLOCATE ALTRET(ERR);

   7051  1 000153   000343 701000 1     ALLOC        TSX1    ALLOCATE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:332  
         1 000154   000277 702000 1                  TSX2    ERR

      379     7052
      380     7053    2          G$=PINCRW(DBUF$, DBUF$->FM$GRAN.NAVX);

   7053  1 000155   200040 470500                    LDP0    DBUF$,,AUTO
         1 000156   000001 220100                    LDX0    1,,PR0
         1 000157   000000 636010                    EAQ     0,X0
         1 000160   200040 036100                    ADLQ    DBUF$,,AUTO
         1 000161   200026 756100                    STQ     G$,,AUTO

      381     7054    2          GACTB=DBUF$->FM$GRAN.AVAIL*4;

   7054  1 000162   000001 236100                    LDQ     1,,PR0
         1 000163   000002 736000                    QLS     2
         1 000164   007774 376007                    ANQ     4092,DL
         1 000165   200115 756100                    STQ     GACTB,,AUTO

      382     7055
      383     7056    2          CALL FMD$RECTRAN(G$, GACTB, 0, 1, FAK, FPT$WRITE_V.SEED) ALTRET(ERR);

   7056  1 000166   000000 236000 xsym               LDQ     B$PS0$
         1 000167   000002 036003                    ADLQ    2,DU
         1 000170   200173 756100                    STQ     STEMP_FIELDIN+7,,AUTO
         1 000171   200043 631500                    EPPR1   FAK,,AUTO
         1 000172   200172 451500                    STP1    STEMP_FIELDIN+6,,AUTO
         1 000173   000002 237000 2                  LDAQ    2
         1 000174   200170 757100                    STAQ    STEMP_FIELDIN+4,,AUTO
         1 000175   200115 633500                    EPPR3   GACTB,,AUTO
         1 000176   200167 453500                    STP3    STEMP_FIELDIN+3,,AUTO
         1 000177   200026 634500                    EPPR4   G$,,AUTO
         1 000200   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 000201   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 000202   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000203   000000 701000 xent               TSX1    FMD$RECTRAN
         1 000204   000277 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:333  
      384     7057    2          GSIZ=(GACTB+3)/4;

   7057  1 000205   200115 236100                    LDQ     GACTB,,AUTO
         1 000206   000003 036007                    ADLQ    3,DL
         1 000207   000002 772000                    QRL     2
         1 000210   200116 756100                    STQ     GSIZ,,AUTO

      385     7058    2          IF GSIZ > 0 THEN

   7058  1 000211   000221 600000 1                  TZE     s:7060

      386     7059    2             FM$MISEG.GX=DBUF$->FM$GRAN.NAVX;

   7059  1 000212   200014 470500                    LDP0    SEG$,,AUTO
         1 000213   200040 471500                    LDP1    DBUF$,,AUTO
         1 000214   100001 236100                    LDQ     1,,PR1
         1 000215   000006 772000                    QRL     6
         1 000216   000000 676100                    ERQ     0,,PR0
         1 000217   000004 376000 2                  ANQ     4
         1 000220   000000 656100                    ERSQ    0,,PR0

      387     7060    2          DBUF$->FM$GRAN.AVAIL=DBUF$->FM$GRAN.AVAIL-GSIZ;

   7060  1 000221   200040 470500                    LDP0    DBUF$,,AUTO
         1 000222   000001 236100                    LDQ     1,,PR0
         1 000223   001777 376007                    ANQ     1023,DL
         1 000224   200116 136100                    SBLQ    GSIZ,,AUTO
         1 000225   000001 676100                    ERQ     1,,PR0
         1 000226   001777 376007                    ANQ     1023,DL
         1 000227   000001 656100                    ERSQ    1,,PR0

      388     7061    2          DBUF$->FM$GRAN.NAVX=DBUF$->FM$GRAN.NAVX+GSIZ;

   7061  1 000230   200040 470500                    LDP0    DBUF$,,AUTO
         1 000231   000001 236100                    LDQ     1,,PR0
         1 000232   000022 772000                    QRL     18
         1 000233   200116 036100                    ADLQ    GSIZ,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:334  
         1 000234   000000 620006                    EAX0    0,QL
         1 000235   000001 740100                    STX0    1,,PR0

      389     7062
      390     7063    2          F$DCB.RPOS='0'B;

   7063  1 000236   200007 470500                    LDP0    JDCB$,,AUTO
         1 000237   000005 236000 2                  LDQ     5
         1 000240   000064 356100                    ANSQ    52,,PR0

      391     7064    2          FM$MISEG.GSIZ=GSIZ;

   7064  1 000241   200014 471500                    LDP1    SEG$,,AUTO
         1 000242   200116 236100                    LDQ     GSIZ,,AUTO
         1 000243   000030 736000                    QLS     24
         1 000244   100000 676100                    ERQ     0,,PR1
         1 000245   177700 376003                    ANQ     65472,DU
         1 000246   100000 656100                    ERSQ    0,,PR1

      392     7065    2          FM$MISEG.GDA=DA;

   7065  1 000247   200014 471500                    LDP1    SEG$,,AUTO
         1 000250   200021 236100                    LDQ     DA,,AUTO
         1 000251   100001 552134                    STBQ    1,'34'O,PR1

      393     7066    2          FM$MISEG.GACTB=GACTB;

   7066  1 000252   200014 471500                    LDP1    SEG$,,AUTO
         1 000253   200115 236100                    LDQ     GACTB,,AUTO
         1 000254   100000 752103                    STCQ    0,'03'O,PR1

      394     7067    2          F$DCB.BFR.BUFUP(1)='1'B;

   7067  1 000255   400000 236003                    LDQ     -131072,DU
         1 000256   000116 256100                    ORSQ    78,,PR0

      395     7068    2          IF ALTKEY$ ~= ADDR(NIL) THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:335  

   7068  1 000257   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 000260   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000261   000275 600000 1                  TZE     s:7076

      396     7069    3             DO;   /* UPDATE ALT SEGS */

      397     7070    3             FM_MISEG=FM$MISEG;

   7070  1 000262   200014 471500                    LDP1    SEG$,,AUTO
         1 000263   000100 100500                    MLR     fill='000'O
         1 000264   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 000265   200027 000010                    ADSC9   FM_MISEG,,AUTO           cn=0,n=8

      398     7071    3             IF FAK = 1 THEN

   7071  1 000266   200043 235100                    LDA     FAK,,AUTO
         1 000267   000001 115007                    CMPA    1,DL
         1 000270   000273 601000 1                  TNZ     s:7073

      399     7072    3                ADDR(FM_MISEG)->FM$MISEG.FAK='1'B;

   7072  1 000271   400000 236003                    LDQ     -131072,DU
         1 000272   200027 256100                    ORSQ    FM_MISEG,,AUTO

      400     7073    3             CALL BLDALTSEG ALTRET(ERR);

   7073  1 000273   001222 701000 1                  TSX1    BLDALTSEG
         1 000274   000277 702000 1                  TSX2    ERR

      401     7074    3             END;  /* UPDATE ALT SEGS */

      402     7075
      403     7076    2          RETURN;

   7076  1 000275   200114 221300                    LDX1  ! @K$+1,,AUTO
         1 000276   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:336  

      404     7077    2   ERR:   ALTRETURN;

   7077  1 000277   200114 221300       ERR          LDX1  ! @K$+1,,AUTO
         1 000300   000000 702211                    TSX2  ! 0,X1

      405     7078    2          END ADDDATA;
      406     7079               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:337  
      407     7080        /*I*     NAME:     ADDKEY
      408     7081                 PURPOSE:  To add a key to an index granule
      409     7082                 DESCRIPTION:
      410     7083                      Calculate the number of words that the key will occupy.  If the
      411     7084                 file is an irel file, then the size field is two bytes.  Call
      412     7085                 GETSPACE to allocate the space in the data granule.
      413     7086        */
      414     7087    1   ADDKEY: PROC ALTRET;

   7087  1 000301   200124 741300       ADDKEY       STX1  ! SIZE+1,,AUTO

      415     7088        /* */
      416     7089    2          IF ORG = %IREL# THEN

   7089  1 000302   200022 235100                    LDA     ORG,,AUTO
         1 000303   000015 115007                    CMPA    13,DL
         1 000304   000312 601000 1                  TNZ     s:7092

      417     7090    2             KEYWORDS=(KEYIN_SIZE+5)/4;

   7090  1 000305   200056 236100                    LDQ     KEYIN_SIZE,,AUTO
         1 000306   000005 036007                    ADLQ    5,DL
         1 000307   000002 772000                    QRL     2
         1 000310   200046 756100                    STQ     KEYWORDS,,AUTO
         1 000311   000316 710000 1                  TRA     s:7093

      418     7091    2          ELSE
      419     7092    2             KEYWORDS=(KEYIN_SIZE+4)/4;

   7092  1 000312   200056 236100                    LDQ     KEYIN_SIZE,,AUTO
         1 000313   000004 036007                    ADLQ    4,DL
         1 000314   000002 772000                    QRL     2
         1 000315   200046 756100                    STQ     KEYWORDS,,AUTO

      420     7093    2          TOTSIZE=KEYWORDS+SEGCNT;

   7093  1 000316   200035 036100                    ADLQ    SEGCNT,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:338  
         1 000317   200045 756100                    STQ     TOTSIZE,,AUTO

      421     7094
      422     7095    2          ADDFLG=%KEY;

   7095  1 000320   200047 450100                    STZ     ADDFLG,,AUTO

      423     7096    2          CALL GETSPACE ALTRET(ERR);

   7096  1 000321   011215 701000 1                  TSX1    GETSPACE
         1 000322   000325 702000 1                  TSX2    ERR

      424     7097    2          RETURN;

   7097  1 000323   200124 221300                    LDX1  ! SIZE+1,,AUTO
         1 000324   000001 702211                    TSX2  ! 1,X1

      425     7098    2   ERR:   ALTRETURN;

   7098  1 000325   200124 221300       ERR          LDX1  ! SIZE+1,,AUTO
         1 000326   000000 702211                    TSX2  ! 0,X1

      426     7099    2          END ADDKEY;
      427     7100               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:339  
      428     7101        /*I*     NAME:     ADDSEG
      429     7102                 PURPOSE:  To add a segment to an index granule
      430     7103                 DESCRIPTION:
      431     7104                      Just set the size to the number of segment words we need, set
      432     7105                 the flag, and call GETSPACE to allocate space.
      433     7106        */
      434     7107    1   ADDSEG: PROC ALTRET;

   7107  1 000327   200124 741300       ADDSEG       STX1  ! SIZE+1,,AUTO

      435     7108        /* */
      436     7109    2          KEYWORDS=0;

   7109  1 000330   200046 450100                    STZ     KEYWORDS,,AUTO

      437     7110    2          TOTSIZE=SEGCNT;

   7110  1 000331   200035 235100                    LDA     SEGCNT,,AUTO
         1 000332   200045 755100                    STA     TOTSIZE,,AUTO

      438     7111
      439     7112    2          ADDFLG=%SEG;

   7112  1 000333   000001 236007                    LDQ     1,DL
         1 000334   200047 756100                    STQ     ADDFLG,,AUTO

      440     7113    2          CALL GETSPACE ALTRET(ERR);

   7113  1 000335   011215 701000 1                  TSX1    GETSPACE
         1 000336   000341 702000 1                  TSX2    ERR

      441     7114    2          RETURN;

   7114  1 000337   200124 221300                    LDX1  ! SIZE+1,,AUTO
         1 000340   000001 702211                    TSX2  ! 1,X1

      442     7115    2   ERR:   ALTRETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:340  

   7115  1 000341   200124 221300       ERR          LDX1  ! SIZE+1,,AUTO
         1 000342   000000 702211                    TSX2  ! 0,X1

      443     7116    2          END ADDSEG;
      444     7117               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:341  
      445     7118        /*I*     NAME:     ALLOCATE
      446     7119                 PURPOSE:  To allocate a data granule
      447     7120                 DESCRIPTION:
      448     7121                      Get a granule, and initialize the header to a data granule.
      449     7122                 If an index granule is also a FIT, then allocating a new granule
      450     7123                 may have caused an extent to be added, which may have caused the
      451     7124                 key information to move.  Update all of the necessary information.
      452     7125
      453     7126                      If we are out of granules, then delete any partial key that
      454     7127                 may have been formed.
      455     7128        */
      456     7129                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:342  
      457     7130    1   ALLOCATE: PROC ALTRET;

   7130  1 000343   200124 741300       ALLOCATE     STX1  ! SIZE+1,,AUTO

      458     7131    2          DCL SIZE SBIN;
      459     7132        /* */
      460     7133    2          CALL FAF$GETGRAN(DA) ALTRET(ALLOC_ERR);

   7133  1 000344   200021 630500                    EPPR0   DA,,AUTO
         1 000345   200166 450500                    STP0    STEMP_FIELDIN+2,,AUTO
         1 000346   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 000347   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000350   000000 701000 xent               TSX1    FAF$GETGRAN
         1 000351   000515 702000 1                  TSX2    ALLOC_ERR

      461     7134    2          CALL FMD$FLSHBUFNR(0);

   7134  1 000352   000000 630400 2                  EPPR0   0
         1 000353   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000354   000000 701000 xent               TSX1    FMD$FLSHBUFNR
         1 000355   000000 011000                    NOP     0

      462     7135    2          CALL FMD$GETBUF(0, 1, DBUF$);

   7135  1 000356   200040 630500                    EPPR0   DBUF$,,AUTO
         1 000357   200170 450500                    STP0    STEMP_FIELDIN+4,,AUTO
         1 000360   000000 237000 2                  LDAQ    0
         1 000361   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 000362   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 000363   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000364   000000 701000 xent               TSX1    FMD$GETBUF
         1 000365   000000 011000                    NOP     0

      463     7136    2          DBUF$->FM$GRAN='0'B;

   7136  1 000366   200040 470500                    LDP0    DBUF$,,AUTO
         1 000367   000100 100400                    MLR     fill='000'O
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:343  
         1 000370   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000371   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20

      464     7137    2          DBUF$->FM$GRAN.STAMP.HASH=F$DCB.HASH;

   7137  1 000372   200007 470500                    LDP0    JDCB$,,AUTO
         1 000373   200040 471500                    LDP1    DBUF$,,AUTO
         1 000374   000073 236100                    LDQ     59,,PR0
         1 000375   100000 552170                    STBQ    0,'70'O,PR1

      465     7138    2          DBUF$->FM$GRAN.STAMP.GMOD=DA;

   7138  1 000376   200040 471500                    LDP1    DBUF$,,AUTO
         1 000377   200021 236100                    LDQ     DA,,AUTO
         1 000400   100000 552104                    STBQ    0,'04'O,PR1

      466     7139    2          DBUF$->FM$GRAN.ORG=F$DCB.ORG;

   7139  1 000401   200040 471500                    LDP1    DBUF$,,AUTO
         1 000402   000032 236100                    LDQ     26,,PR0
         1 000403   000021 772000                    QRL     17
         1 000404   100001 676100                    ERQ     1,,PR1
         1 000405   036000 376007                    ANQ     15360,DL
         1 000406   100001 656100                    ERSQ    1,,PR1

      467     7140    2          DBUF$->FM$GRAN.LVL=7;

   7140  1 000407   200040 471500                    LDP1    DBUF$,,AUTO
         1 000410   340000 236007                    LDQ     114688,DL
         1 000411   100001 256100                    ORSQ    1,,PR1

      468     7141    2          DBUF$->FM$GRAN.NAVX=2;

   7141  1 000412   000002 220003                    LDX0    2,DU
         1 000413   200040 471500                    LDP1    DBUF$,,AUTO
         1 000414   100001 740100                    STX0    1,,PR1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:344  
      469     7142    2          DBUF$->FM$GRAN.AVAIL=1022;

   7142  1 000415   200040 471500                    LDP1    DBUF$,,AUTO
         1 000416   100001 236100                    LDQ     1,,PR1
         1 000417   000006 376000 2                  ANQ     6
         1 000420   001776 276007                    ORQ     1022,DL
         1 000421   100001 756100                    STQ     1,,PR1

      470     7143    2          F$DCB.BFR.DA(0)=DA;

   7143  1 000422   200021 236100                    LDQ     DA,,AUTO
         1 000423   000115 552134                    STBQ    77,'34'O,PR0

      471     7144    2          F$DCB.BFR.BUFUP(0)='1'B;

   7144  1 000424   400000 236003                    LDQ     -131072,DU
         1 000425   000115 256100                    ORSQ    77,,PR0

      472     7145    2          F$DCB.BFR.SCRUB(0)='1'B;

   7145  1 000426   200000 236003                    LDQ     65536,DU
         1 000427   000115 256100                    ORSQ    77,,PR0

      473     7146    2          F$DCB.CRECX=CRECX;

   7146  1 000430   200015 721100                    LXL1    CRECX,,AUTO
         1 000431   000067 441100                    SXL1    55,,PR0

      474     7147    2          F$DCB.SEGX=SEGX;

   7147  1 000432   200013 722100                    LXL2    SEGX,,AUTO
         1 000433   000100 442100                    SXL2    64,,PR0

      475     7148    2          FM$CFU.GDA=DA;

   7148  1 000434   200010 471500                    LDP1    CFU$,,AUTO
         1 000435   200021 236100                    LDQ     DA,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:345  
         1 000436   100005 552134                    STBQ    5,'34'O,PR1

      476     7149    2          IF POFFW(KTPTR$, BUF$) ~= FM$GRAN.FCEX THEN

   7149  1 000437   200024 235100                    LDA     BUF$,,AUTO
         1 000440   000022 771000                    ARL     18
         1 000441   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 000442   200025 236100                    LDQ     KTPTR$,,AUTO
         1 000443   000022 772000                    QRL     18
         1 000444   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 000445   200024 473500                    LDP3    BUF$,,AUTO
         1 000446   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 000447   300002 236100                    LDQ     2,,PR3
         1 000450   000022 772000                    QRL     18
         1 000451   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 000452   200167 236100                    LDQ     STEMP_FIELDIN+3,,AUTO
         1 000453   200170 116100                    CMPQ    STEMP_FIELDIN+4,,AUTO
         1 000454   000513 600000 1                  TZE     s:7160

      477     7150    3             DO;   /* MAY HAVE MOVED BECAUSE OF NEW EXTNT */

      478     7151    3             SIZE=FM$GRAN.FCEX-POFFW(KTPTR$, BUF$);

   7151  1 000455   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 000456   200025 236100                    LDQ     KTPTR$,,AUTO
         1 000457   000022 772000                    QRL     18
         1 000460   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 000461   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 000462   300002 236100                    LDQ     2,,PR3
         1 000463   000022 772000                    QRL     18
         1 000464   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 000465   200125 756100                    STQ     SIZE,,AUTO

      479     7152    3             KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

   7152  1 000466   300002 221100                    LDX1    2,,PR3
         1 000467   000000 636011                    EAQ     0,X1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:346  
         1 000470   200024 036100                    ADLQ    BUF$,,AUTO
         1 000471   200025 756100                    STQ     KTPTR$,,AUTO

      480     7153    3             KEY$=PINCRW(KEY$, SIZE);

   7153  1 000472   200125 236100                    LDQ     SIZE,,AUTO
         1 000473   000022 736000                    QLS     18
         1 000474   200020 036100                    ADLQ    KEY$,,AUTO
         1 000475   200020 756100                    STQ     KEY$,,AUTO

      481     7154    3             SEG$=PINCRW(SEG$, SIZE);

   7154  1 000476   200125 236100                    LDQ     SIZE,,AUTO
         1 000477   000022 736000                    QLS     18
         1 000500   200014 036100                    ADLQ    SEG$,,AUTO
         1 000501   200014 756100                    STQ     SEG$,,AUTO

      482     7155    3             SEGX=SEGX+SIZE;

   7155  1 000502   200013 236100                    LDQ     SEGX,,AUTO
         1 000503   200125 036100                    ADLQ    SIZE,,AUTO
         1 000504   200013 756100                    STQ     SEGX,,AUTO

      483     7156    3             F$DCB.SEGX=SEGX;

   7156  1 000505   000000 621006                    EAX1    0,QL
         1 000506   000100 441100                    SXL1    64,,PR0

      484     7157    3             BOUND=FM$KEYTBL(0);

   7157  1 000507   200025 474500                    LDP4    KTPTR$,,AUTO
         1 000510   400000 236100                    LDQ     0,,PR4
         1 000511   000033 772000                    QRL     27
         1 000512   200016 756100                    STQ     BOUND,,AUTO

      485     7158    3             END;  /* MAY HAVE MOVED BECAUSE OF NEW EXTNT */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:347  
      486     7159
      487     7160    2          RETURN;

   7160  1 000513   200124 221300                    LDX1  ! SIZE+1,,AUTO
         1 000514   000001 702211                    TSX2  ! 1,X1

   7154  1 000515                       ALLOC_ERR    null
      488     7161    2   ALLOC_ERR: ;
      489     7162    2          IF (B$JIT.ERR.CODE = %E$ACGRANS OR

   7162  1 000515   000000 470400 xsym               LDP0    B$JIT$
         1 000516   000012 236100                    LDQ     10,,PR0
         1 000517   377770 376007                    ANQ     131064,DL
         1 000520   002160 116007                    CMPQ    1136,DL
         1 000521   000530 600000 1                  TZE     ALLOC_ERR+11
         1 000522   002150 116007                    CMPQ    1128,DL
         1 000523   000530 600000 1                  TZE     ALLOC_ERR+11
         1 000524   002140 116007                    CMPQ    1120,DL
         1 000525   000530 600000 1                  TZE     ALLOC_ERR+11
         1 000526   001720 116007                    CMPQ    976,DL
         1 000527   000551 601000 1                  TNZ     ERR
         1 000530   200035 235100                    LDA     SEGCNT,,AUTO
         1 000531   000551 604400 1                  TMOZ    ERR
         1 000532   200014 236100                    LDQ     SEG$,,AUTO
         1 000533   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000534   000551 600000 1                  TZE     ERR

      490     7163    2              B$JIT.ERR.CODE = %E$USGRANS OR
      491     7164    2              B$JIT.ERR.CODE = %E$PSGRANS OR
      492     7165    2              B$JIT.ERR.CODE = %E$VLPERR) AND
      493     7166    2             SEGCNT > 0 AND SEG$ ~= ADDR(NIL) THEN
      494     7167    2             IF FM$MISEG.GACTB = 0 THEN

   7167  1 000535   200014 471500                    LDP1    SEG$,,AUTO
         1 000536   100000 236100                    LDQ     0,,PR1
         1 000537   007777 316007                    CANQ    4095,DL
         1 000540   000551 601000 1                  TNZ     ERR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:348  

      495     7168    3                DO;   /* DELETE KEY */

      496     7169    3                CALL CURKEY ALTRET(ERR);

   7169  1 000541   005060 701000 1                  TSX1    CURKEY
         1 000542   000551 702000 1                  TSX2    ERR

      497     7170    3                KEY$->FM$KEYENT.D='1'B;

   7170  1 000543   200020 470500                    LDP0    KEY$,,AUTO
         1 000544   400000 236003                    LDQ     -131072,DU
         1 000545   000000 256100                    ORSQ    0,,PR0

      498     7171    3                FM$CFU.NRECS=FM$CFU.NRECS-1;

   7171  1 000546   200010 470500                    LDP0    CFU$,,AUTO
         1 000547   000001 336007                    LCQ     1,DL
         1 000550   000001 056100                    ASQ     1,,PR0

      499     7172    3                END;  /* DELETE KEY */

      500     7173    2   ERR:   ALTRETURN;

   7173  1 000551   200124 221300       ERR          LDX1  ! SIZE+1,,AUTO
         1 000552   000000 702211                    TSX2  ! 0,X1

      501     7174    2          END ALLOCATE;
      502     7175               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:349  
      503     7176        /*I*     NAME:     ALTCHK
      504     7177                 PURPOSE:  To check alternate keys
      505     7178                 DESCRIPTION:
      506     7179                      When a record is rewritten in a file with alternate indexes,
      507     7180                 that may have caused some of the keys associated with that record
      508     7181                 to change.  We have to compare the old record with the new record
      509     7182                 and make any necessary corrections.
      510     7183
      511     7184                      We set up FM_MISEG with the first MISEG associated with this
      512     7185                 record.  It may be necessary to use this to search for dups.  Loop
      513     7186                 through all of the indexes comparing the old key with the new key
      514     7187                 in the record.  If the key changed, then next check to see if this
      515     7188                 key is supposed to be unique.  If it is supposed to be unique, then
      516     7189                 next check to see if any other key with the same value exists.  If
      517     7190                 one does, altreturn.  Otherwise, if everything is okay, delete the
      518     7191                 old key.
      519     7192
      520     7193                      If any keys changed, then call REBLD_ALT to add the new keys
      521     7194                 for this record.
      522     7195        */
      523     7196                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:350  
      524     7197    1   ALTCHK: PROC ALTRET;

   7197  1 000553   200102 741300       ALTCHK       STX1  ! TOT+1,,AUTO

      525     7198    2          DCL DA UBIN;
      526     7199    2          DCL NUMENTS UBIN;
      527     7200    2          DCL I UBIN;
      528     7201    2          DCL ICHNG BIT(1);
      529     7202    2          DCL UNIQUE BIT(1);
      530     7203    2          DCL SIZE UBIN;
      531     7204    2          DCL CHARS CHAR(SIZE) BASED;
      532     7205        /* */
      533     7206    2          IF ORG = %INDEXED# THEN

   7206  1 000554   200022 235100                    LDA     ORG,,AUTO
         1 000555   000006 115007                    CMPA    6,DL
         1 000556   000566 601000 1                  TNZ     s:7209

      534     7207    2             NUMENTS=ALTKEYS.NUMENTS-1;

   7207  1 000557   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 000560   000000 236100                    LDQ     0,,PR0
         1 000561   000022 772000                    QRL     18
         1 000562   000377 376007                    ANQ     255,DL
         1 000563   000001 136007                    SBLQ    1,DL
         1 000564   200104 756100                    STQ     NUMENTS,,AUTO
         1 000565   000573 710000 1                  TRA     s:7211

      535     7208    2          ELSE
      536     7209    2             NUMENTS=IRKEYS.NKEYS-1;

   7209  1 000566   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 000567   000000 236100                    LDQ     0,,PR0
         1 000570   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000571   000001 136007                    SBLQ    1,DL
         1 000572   200104 756100                    STQ     NUMENTS,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:351  
      537     7210
      538     7211    3          DO I=1 TO NUMENTS;

   7211  1 000573   000001 235007                    LDA     1,DL
         1 000574   200105 755100                    STA     I,,AUTO
         1 000575   000621 710000 1                  TRA     s:7216+3

      539     7212    3             IF ORG = %INDEXED# THEN

   7212  1 000576   200022 235100                    LDA     ORG,,AUTO
         1 000577   000006 115007                    CMPA    6,DL
         1 000600   000610 601000 1                  TNZ     s:7215

      540     7213    3                ALTKEYS.K.INDXCHNG(I)='0'B;

   7213  1 000601   200105 236100                    LDQ     I,,AUTO
         1 000602   000006 402007                    MPY     6,DL
         1 000603   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 000604   000000 620006                    EAX0    0,QL
         1 000605   000007 236000 2                  LDQ     7
         1 000606   000004 356110                    ANSQ    4,X0,PR0
         1 000607   000616 710000 1                  TRA     s:7216

      541     7214    3             ELSE
      542     7215    3                IRKEYS.K.INDXCHNG(I)='0'B;

   7215  1 000610   200105 236100                    LDQ     I,,AUTO
         1 000611   000007 402007                    MPY     7,DL
         1 000612   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 000613   000000 620006                    EAX0    0,QL
         1 000614   000010 236000 2                  LDQ     8
         1 000615   000006 356110                    ANSQ    6,X0,PR0

      543     7216    3          END;  /* DO I */

   7216  1 000616   200105 235100                    LDA     I,,AUTO
         1 000617   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:352  
         1 000620   200105 755100                    STA     I,,AUTO
         1 000621   200104 236100                    LDQ     NUMENTS,,AUTO
         1 000622   200105 116100                    CMPQ    I,,AUTO
         1 000623   000576 603000 1                  TRC     s:7212

      544     7217
      545     7218    2          FM_MISEG=FM$MISEG;

   7218  1 000624   200014 471500                    LDP1    SEG$,,AUTO
         1 000625   000100 100500                    MLR     fill='000'O
         1 000626   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 000627   200027 000010                    ADSC9   FM_MISEG,,AUTO           cn=0,n=8

      546     7219    2          ADDR(FM_MISEG)->FM$MISEG.FAK='1'B;

   7219  1 000630   400000 236003                    LDQ     -131072,DU
         1 000631   200027 256100                    ORSQ    FM_MISEG,,AUTO

      547     7220    2          DA=FM$MISEG.GDA;

   7220  1 000632   100001 236100                    LDQ     1,,PR1
         1 000633   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000634   200103 756100                    STQ     DA,,AUTO

      548     7221    2          ICHNG='0'B;

   7221  1 000635   200106 450100                    STZ     ICHNG,,AUTO

      549     7222    2          F$DCB.LVL=7;

   7222  1 000636   200007 473500                    LDP3    JDCB$,,AUTO
         1 000637   070000 236003                    LDQ     28672,DU
         1 000640   300067 256100                    ORSQ    55,,PR3

      550     7223    2          DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));

   7223  1 000641   300115 236100                    LDQ     77,,PR3
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:353  
         1 000642   000033 772000                    QRL     27
         1 000643   000037 376007                    ANQ     31,DL
         1 000644   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 000645   200040 756100                    STQ     DBUF$,,AUTO

      551     7224    2          IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= DA THEN

   7224  1 000646   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000647   000654 600000 1                  TZE     s:7225
         1 000650   300115 236100                    LDQ     77,,PR3
         1 000651   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000652   200103 116100                    CMPQ    DA,,AUTO
         1 000653   000672 600000 1                  TZE     s:7226

      552     7225    2             CALL FMD$REDBUF(DBUF$, 0, DA,, 0) ALTRET(DATAERR);

   7225  1 000654   000000 236000 2                  LDQ     0
         1 000655   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 000656   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000657   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 000660   200103 634500                    EPPR4   DA,,AUTO
         1 000661   200170 454500                    STP4    STEMP_FIELDIN+4,,AUTO
         1 000662   000000 236000 2                  LDQ     0
         1 000663   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 000664   200040 635500                    EPPR5   DBUF$,,AUTO
         1 000665   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 000666   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 000667   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000670   000000 701000 xent               TSX1    FMD$REDBUF
         1 000671   001115 702000 1                  TSX2    DATAERR

      553     7226    2          G$=PINCRW(DBUF$, FM$MISEG.GX);

   7226  1 000672   200014 470500                    LDP0    SEG$,,AUTO
         1 000673   000000 236100                    LDQ     0,,PR0
         1 000674   000014 772000                    QRL     12
         1 000675   001777 376007                    ANQ     1023,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:354  
         1 000676   000022 736000                    QLS     18
         1 000677   200040 036100                    ADLQ    DBUF$,,AUTO
         1 000700   200026 756100                    STQ     G$,,AUTO

      554     7227
      555     7228    3          DO I=1 TO NUMENTS;

   7228  1 000701   000001 235007                    LDA     1,DL
         1 000702   200105 755100                    STA     I,,AUTO
         1 000703   001074 710000 1                  TRA     s:7277+3

      556     7229    3             IF ORG = %INDEXED# THEN

   7229  1 000704   200022 235100                    LDA     ORG,,AUTO
         1 000705   000006 115007                    CMPA    6,DL
         1 000706   000743 601000 1                  TNZ     s:7239

      557     7230    4                DO;   /* COMPARE KEYS */

      558     7231    4                SIZE=ALTKEYS.K.KEYL(I);

   7231  1 000707   200105 236100                    LDQ     I,,AUTO
         1 000710   000006 402007                    MPY     6,DL
         1 000711   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 000712   000001 236106                    LDQ     1,QL,PR0
         1 000713   000033 772000                    QRL     27
         1 000714   200110 756100                    STQ     SIZE,,AUTO

      559     7232    4                IF PINCRC(G$, ALTKEYS.K.KEYX(I))->CHARS ~=

   7232  1 000715   200105 236100                    LDQ     I,,AUTO
         1 000716   000006 402007                    MPY     6,DL
         1 000717   000003 236106                    LDQ     3,QL,PR0
         1 000720   777777 376007                    ANQ     -1,DL
         1 000721   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 000722   200105 236100                    LDQ     I,,AUTO
         1 000723   000006 402007                    MPY     6,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:355  
         1 000724   000003 236106                    LDQ     3,QL,PR0
         1 000725   777777 376007                    ANQ     -1,DL
         1 000726   200026 471500                    LDP1    G$,,AUTO
         1 000727   200110 720100                    LXL0    SIZE,,AUTO
         1 000730   200166 235100                    LDA     STEMP_FIELDIN+2,,AUTO
         1 000731   000000 473400 xsym               LDP3    B$PS2$
         1 000732   040146 106545                    CMPC    fill='040'O
         1 000733   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0
         1 000734   300000 000010                    ADSC9   0,Q,PR3                  cn=0,n=*X0
         1 000735   000741 600000 1                  TZE     s:7236

      560     7233    4                   PINCRC(B$PS2$, ALTKEYS.K.KEYX(I))->CHARS THEN
      561     7234    4                   RESULT=%LESS;

   7234  1 000736   000001 235007                    LDA     1,DL
         1 000737   200031 755100                    STA     RESULT,,AUTO
         1 000740   000747 710000 1                  TRA     s:7240

      562     7235    4                ELSE
      563     7236    4                   RESULT=%EQUAL;

   7236  1 000741   200031 450100                    STZ     RESULT,,AUTO

      564     7237    4                END;  /* COMPARE KEYS */

   7237  1 000742   000747 710000 1                  TRA     s:7240

      565     7238    3             ELSE
      566     7239    3                CALL CHKEY(I);

   7239  1 000743   200105 630500                    EPPR0   I,,AUTO
         1 000744   200113 450500                    STP0    SIZE+2,,AUTO
         1 000745   003575 701000 1                  TSX1    CHKEY
         1 000746   000000 011000                    NOP     0

      567     7240    3             IF RESULT ~= %EQUAL THEN

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:356  
   7240  1 000747   200031 235100                    LDA     RESULT,,AUTO
         1 000750   001071 600000 1                  TZE     s:7277

      568     7241    4                DO;   /* KEYS NOT EQUAL */

      569     7242    4                IF ORG = %INDEXED# THEN

   7242  1 000751   200022 236100                    LDQ     ORG,,AUTO
         1 000752   000006 116007                    CMPQ    6,DL
         1 000753   000764 601000 1                  TNZ     s:7245

      570     7243    4                   UNIQUE=ALTKEYS.K.UNIQUE(I);

   7243  1 000754   200105 236100                    LDQ     I,,AUTO
         1 000755   000006 402007                    MPY     6,DL
         1 000756   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 000757   000004 236106                    LDQ     4,QL,PR0
         1 000760   000011 736000                    QLS     9
         1 000761   400000 376003                    ANQ     -131072,DU
         1 000762   200107 756100                    STQ     UNIQUE,,AUTO
         1 000763   000773 710000 1                  TRA     s:7247

      571     7244    4                ELSE
      572     7245    4                   UNIQUE=IRKEYS.K.UNIQUE(I);

   7245  1 000764   200105 236100                    LDQ     I,,AUTO
         1 000765   000007 402007                    MPY     7,DL
         1 000766   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 000767   000006 236106                    LDQ     6,QL,PR0
         1 000770   000022 736000                    QLS     18
         1 000771   400000 376003                    ANQ     -131072,DU
         1 000772   200107 756100                    STQ     UNIQUE,,AUTO

      573     7246
      574     7247    4                IF (NOT F$DCB.LDFLG) OR

   7247  1 000773   200007 471500                    LDP1    JDCB$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:357  
         1 000774   100064 236100                    LDQ     52,,PR1
         1 000775   200000 316007                    CANQ    65536,DL
         1 000776   001004 600000 1                  TZE     s:7250
         1 000777   200107 234100                    SZN     UNIQUE,,AUTO
         1 001000   001066 605000 1                  TPL     s:7275
         1 001001   100103 236100                    LDQ     67,,PR1
         1 001002   002000 316007                    CANQ    1024,DL
         1 001003   001066 601000 1                  TNZ     s:7275

      575     7248    4                   (UNIQUE AND NOT F$DCB.UNIQUEBLD) THEN
      576     7249    5                   DO;   /* KEY CHANGED */

      577     7250    5                   ICHNG='1'B;

   7250  1 001004   400000 236003                    LDQ     -131072,DU
         1 001005   200106 756100                    STQ     ICHNG,,AUTO

      578     7251    5                   IF ORG = %INDEXED# THEN

   7251  1 001006   200022 235100                    LDA     ORG,,AUTO
         1 001007   000006 115007                    CMPA    6,DL
         1 001010   001017 601000 1                  TNZ     s:7254

      579     7252    5                      ALTKEYS.K.INDXCHNG(I)='1'B;

   7252  1 001011   200105 236100                    LDQ     I,,AUTO
         1 001012   000006 402007                    MPY     6,DL
         1 001013   000000 620006                    EAX0    0,QL
         1 001014   000040 236003                    LDQ     32,DU
         1 001015   000004 256110                    ORSQ    4,X0,PR0
         1 001016   001024 710000 1                  TRA     s:7255

      580     7253    5                   ELSE
      581     7254    5                      IRKEYS.K.INDXCHNG(I)='1'B;

   7254  1 001017   200105 236100                    LDQ     I,,AUTO
         1 001020   000007 402007                    MPY     7,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:358  
         1 001021   000000 620006                    EAX0    0,QL
         1 001022   100000 236007                    LDQ     32768,DL
         1 001023   000006 256110                    ORSQ    6,X0,PR0

      582     7255    5                   IF UNIQUE THEN

   7255  1 001024   200107 234100                    SZN     UNIQUE,,AUTO
         1 001025   001052 605000 1                  TPL     NODUPS

      583     7256    6                      DO;   /* MAKE SURE ITS UNIQUE */

      584     7257    6                      INDEX#=I+1;

   7257  1 001026   200105 235100                    LDA     I,,AUTO
         1 001027   000001 035007                    ADLA    1,DL
         1 001030   200011 755100                    STA     INDEX#,,AUTO

      585     7258    6                      CALL SETINDEX ALTRET(ERR);

   7258  1 001031   021667 701000 1                  TSX1    SETINDEX
         1 001032   001117 702000 1                  TSX2    ERR

      586     7259    6                      KEYIN$=PINCRC(B$PS2$, F$DCB.KEYX);

   7259  1 001033   200007 470500                    LDP0    JDCB$,,AUTO
         1 001034   000036 236100                    LDQ     30,,PR0
         1 001035   000022 772000                    QRL     18
         1 001036   000020 736000                    QLS     16
         1 001037   000000 036000 xsym               ADLQ    B$PS2$
         1 001040   200037 756100                    STQ     KEYIN$,,AUTO

      587     7260    6                      COMFLG=%USEREC;

   7260  1 001041   000001 235007                    LDA     1,DL
         1 001042   200060 755100                    STA     COMFLG,,AUTO

      588     7261    6                      CALL FINDKEY ALTRET(NODUPS);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:359  

   7261  1 001043   007536 701000 1                  TSX1    FINDKEY
         1 001044   001052 702000 1                  TSX2    NODUPS

      589     7262    6                      B$JIT.ERR=ERRDUPKEY;

   7262  1 001045   000025 236000 0                  LDQ     ERRDUPKEY
         1 001046   000000 470400 xsym               LDP0    B$JIT$
         1 001047   000012 756100                    STQ     10,,PR0

      590     7263    6                      ALTRETURN;

   7263  1 001050   200102 221300                    LDX1  ! TOT+1,,AUTO
         1 001051   000000 702211                    TSX2  ! 0,X1

      591     7264        /*E*   ERROR:   FMG-E$DUPKEY-2
      592     7265               MESSAGE: Attempt to write duplicate key into alternate index.
      593     7266        */
      594     7267    6                      END;  /* MAKE SURE ITS UNIQUE */
      595     7268
      596     7269    5   NODUPS:         INDEX#=I+1;

   7269  1 001052   200105 235100       NODUPS       LDA     I,,AUTO
         1 001053   000001 035007                    ADLA    1,DL
         1 001054   200011 755100                    STA     INDEX#,,AUTO

      597     7270    5                   CALL DELALT ALTRET(ERR);

   7270  1 001055   005432 701000 1                  TSX1    DELALT
         1 001056   001117 702000 1                  TSX2    ERR

      598     7271    5                   COMFLG=%USEREC;

   7271  1 001057   000001 235007                    LDA     1,DL
         1 001060   200060 755100                    STA     COMFLG,,AUTO

      599     7272    5                   CALL SETKEY(B$PS2$);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:360  

   7272  1 001061   000011 236000 2                  LDQ     9
         1 001062   200113 756100                    STQ     SIZE+2,,AUTO
         1 001063   021704 701000 1                  TSX1    SETKEY
         1 001064   000000 011000                    NOP     0

      600     7273    5                   END;  /* KEY CHANGED */

   7273  1 001065   001071 710000 1                  TRA     s:7277

      601     7274    4                ELSE
      602     7275    4                   FM$CFU.ALTBLD='1'B;

   7275  1 001066   200010 473500                    LDP3    CFU$,,AUTO
         1 001067   000004 236003                    LDQ     4,DU
         1 001070   300006 256100                    ORSQ    6,,PR3

      603     7276    4                END;  /* KEYS NOT EQUAL */

      604     7277    3          END;  /* DO I */

   7277  1 001071   200105 235100                    LDA     I,,AUTO
         1 001072   000001 035007                    ADLA    1,DL
         1 001073   200105 755100                    STA     I,,AUTO
         1 001074   200104 236100                    LDQ     NUMENTS,,AUTO
         1 001075   200105 116100                    CMPQ    I,,AUTO
         1 001076   000704 603000 1                  TRC     s:7229

      605     7278
      606     7279    2          IF ICHNG THEN

   7279  1 001077   200106 234100                    SZN     ICHNG,,AUTO
         1 001100   001103 605000 1                  TPL     s:7282

      607     7280    2             CALL REBLD_ALT ALTRET(ERR);

   7280  1 001101   017616 701000 1                  TSX1    REBLD_ALT
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:361  
         1 001102   001117 702000 1                  TSX2    ERR

      608     7281
      609     7282    2          INDEX#=1;

   7282  1 001103   000001 235007                    LDA     1,DL
         1 001104   200011 755100                    STA     INDEX#,,AUTO

      610     7283    2          CALL SETINDEX ALTRET(ERR);

   7283  1 001105   021667 701000 1                  TSX1    SETINDEX
         1 001106   001117 702000 1                  TSX2    ERR

      611     7284    2          CALL RESTOREPOS ALTRET(ERR);

   7284  1 001107   021403 701000 1                  TSX1    RESTOREPOS
         1 001110   001117 702000 1                  TSX2    ERR

      612     7285    2          CALL CURKEY ALTRET(ERR);

   7285  1 001111   005060 701000 1                  TSX1    CURKEY
         1 001112   001117 702000 1                  TSX2    ERR

      613     7286
      614     7287    2          RETURN;

   7287  1 001113   200102 221300                    LDX1  ! TOT+1,,AUTO
         1 001114   000001 702211                    TSX2  ! 1,X1

      615     7288    2   DATAERR: CALL DATAERROR;

   7288  1 001115   005205 701000 1     DATAERR      TSX1    DATAERROR
         1 001116   000000 011000                    NOP     0

      616     7289    2   ERR:   ALTRETURN;

   7289  1 001117   200102 221300       ERR          LDX1  ! TOT+1,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:362  
         1 001120   000000 702211                    TSX2  ! 0,X1

      617     7290    2          END ALTCHK;
      618     7291               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:363  
      619     7292        /*I*     NAME:     BINSEARCH
      620     7293                 PURPOSE:  To binary search for a record
      621     7294                 DESCRIPTION:
      622     7295                      Use the plain-old everyday vanilla regular binary search
      623     7296                 to try to find a specified key.  If it don't exist, point to
      624     7297                 the next higher one.
      625     7298        */
      626     7299                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:364  
      627     7300    1   BINSEARCH: PROC ALTRET;

   7300  1 001121   200130 741300       BINSEARCH    STX1  ! I+1,,AUTO

      628     7301    2          DCL LOW UBIN;
      629     7302    2          DCL HIGH UBIN;
      630     7303    2          DCL TCRECX UBIN;
      631     7304        /* */
      632     7305    2          FOUND=%YESS;

   7305  1 001122   000001 235007                    LDA     1,DL
         1 001123   200032 755100                    STA     FOUND,,AUTO

      633     7306    2          LOW=1;

   7306  1 001124   200131 755100                    STA     LOW,,AUTO

      634     7307    2          HIGH=KEYCNT+1;

   7307  1 001125   200017 236100                    LDQ     KEYCNT,,AUTO
         1 001126   000001 036007                    ADLQ    1,DL
         1 001127   200132 756100                    STQ     HIGH,,AUTO

      635     7308    2          TCRECX=(HIGH+LOW)/2;

   7308  1 001130   200131 036100                    ADLQ    LOW,,AUTO
         1 001131   000001 772000                    QRL     1
         1 001132   200133 756100                    STQ     TCRECX,,AUTO

      636     7309
      637     7310    3          DO UNTIL (CRECX = TCRECX);

      638     7311    3             CRECX=TCRECX;

   7311  1 001133   200133 235100                    LDA     TCRECX,,AUTO
         1 001134   200015 755100                    STA     CRECX,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:365  
      639     7312    3             IF CRECX < BOUND THEN

   7312  1 001135   200015 236100                    LDQ     CRECX,,AUTO
         1 001136   001152 604000 1                  TMI     s:7315
         1 001137   200016 116100                    CMPQ    BOUND,,AUTO
         1 001140   001152 605000 1                  TPL     s:7315

      640     7313    3                KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));

   7313  1 001141   200025 470500                    LDP0    KTPTR$,,AUTO
         1 001142   000100 101506                    MRL     fill='000'O
         1 001143   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 001144   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 001145   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 001146   000000 636010                    EAQ     0,X0
         1 001147   200024 036100                    ADLQ    BUF$,,AUTO
         1 001150   200020 756100                    STQ     KEY$,,AUTO
         1 001151   001162 710000 1                  TRA     s:7317

      641     7314    3             ELSE
      642     7315    3                KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);

   7315  1 001152   200025 470500                    LDP0    KTPTR$,,AUTO
         1 001153   000100 101506                    MRL     fill='000'O
         1 001154   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 001155   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 001156   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 001157   001000 636010                    EAQ     512,X0
         1 001160   200024 036100                    ADLQ    BUF$,,AUTO
         1 001161   200020 756100                    STQ     KEY$,,AUTO

      643     7316
      644     7317    3             CALL COMKEY ALTRET(ERR);

   7317  1 001162   003743 701000 1                  TSX1    COMKEY
         1 001163   001220 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:366  
      645     7318
      646     7319    4             DO CASE(RESULT);

   7319  1 001164   200031 235100                    LDA     RESULT,,AUTO
         1 001165   000003 115007                    CMPA    3,DL
         1 001166   001170 602005 1                  TNC     s:7319+4,AL
         1 001167   001202 710000 1                  TRA     s:7330
         1 001170   001173 710000 1                  TRA     s:7321
         1 001171   001200 710000 1                  TRA     s:7327
         1 001172   001175 710000 1                  TRA     s:7324

      647     7320    4                CASE(%EQUAL);

      648     7321    4                   RETURN;

   7321  1 001173   200130 221300                    LDX1  ! I+1,,AUTO
         1 001174   000001 702211                    TSX2  ! 1,X1

      649     7322
      650     7323    4                CASE(%GREATER);

      651     7324    4                   LOW=CRECX;

   7324  1 001175   200015 236100                    LDQ     CRECX,,AUTO
         1 001176   200131 756100                    STQ     LOW,,AUTO
         1 001177   001202 710000 1                  TRA     s:7330

      652     7325
      653     7326    4                CASE(%LESS);

      654     7327    4                   HIGH=CRECX;

   7327  1 001200   200015 236100                    LDQ     CRECX,,AUTO
         1 001201   200132 756100                    STQ     HIGH,,AUTO

      655     7328
      656     7329    4             END;  /* CASE */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:367  

      657     7330    3             TCRECX=(LOW+HIGH)/2;

   7330  1 001202   200131 236100                    LDQ     LOW,,AUTO
         1 001203   200132 036100                    ADLQ    HIGH,,AUTO
         1 001204   000001 772000                    QRL     1
         1 001205   200133 756100                    STQ     TCRECX,,AUTO

      658     7331    3          END;  /* WHILE */

   7331  1 001206   200015 116100                    CMPQ    CRECX,,AUTO
         1 001207   001133 601000 1                  TNZ     s:7311

      659     7332
      660     7333    2          CRECX=HIGH;

   7333  1 001210   200132 235100                    LDA     HIGH,,AUTO
         1 001211   200015 755100                    STA     CRECX,,AUTO

      661     7334    2          F$DCB.RPOS='1'B;

   7334  1 001212   200007 470500                    LDP0    JDCB$,,AUTO
         1 001213   010000 236007                    LDQ     4096,DL
         1 001214   000064 256100                    ORSQ    52,,PR0

      662     7335    2          FOUND=%NOO;

   7335  1 001215   200032 450100                    STZ     FOUND,,AUTO

      663     7336    2          RETURN;

   7336  1 001216   200130 221300                    LDX1  ! I+1,,AUTO
         1 001217   000001 702211                    TSX2  ! 1,X1

      664     7337
      665     7338    2   ERR:   ALTRETURN;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:368  
   7338  1 001220   200130 221300       ERR          LDX1  ! I+1,,AUTO
         1 001221   000000 702211                    TSX2  ! 0,X1

      666     7339    2          END BINSEARCH;
      667     7340               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:369  
      668     7341        /*I*     NAME:     BLDALTSEG
      669     7342                 PURPOSE:  To build keys and segments in alternate indexes
      670     7343                 DESCRIPTION:
      671     7344                      Whenever a new key or segment is added to the primary
      672     7345                 index, the appropriate alternate indexes must be updated.
      673     7346                 Loop through the set of indexes.  If the key is unique, or
      674     7347                 LOAD=NO, then we must build the key or segment now.  Otherwise,
      675     7348                 we can defer it to the close.
      676     7349                      If FAK is 1, then this is the first segment for a new key.
      677     7350                 Try to find a key with the same value.  If one exists, then add
      678     7351                 this segment as a duplicate.  Otherwise, build a new key.
      679     7352                 If FAK is zero, then the appropriate number of segments should
      680     7353                 already exist, just position to the current empty one.
      681     7354        */
      682     7355                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:370  
      683     7356    1   BLDALTSEG: PROC ALTRET;

   7356  1 001222   200120 741300       BLDALTSEG    STX1  ! UNIQUE+1,,AUTO

      684     7357    2          DCL I UBIN;
      685     7358    2          DCL NUMENTS UBIN;
      686     7359    2          DCL UNIQUE BIT(1);
      687     7360        /* */
      688     7361    2          IF ORG = %INDEXED# THEN

   7361  1 001223   200022 235100                    LDA     ORG,,AUTO
         1 001224   000006 115007                    CMPA    6,DL
         1 001225   001234 601000 1                  TNZ     s:7364

      689     7362    2             NUMENTS=ALTKEYS.NUMENTS;

   7362  1 001226   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 001227   000000 236100                    LDQ     0,,PR0
         1 001230   000022 772000                    QRL     18
         1 001231   000377 376007                    ANQ     255,DL
         1 001232   200122 756100                    STQ     NUMENTS,,AUTO
         1 001233   001240 710000 1                  TRA     s:7366

      690     7363    2          ELSE
      691     7364    2             NUMENTS=IRKEYS.NKEYS;

   7364  1 001234   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 001235   000000 236100                    LDQ     0,,PR0
         1 001236   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001237   200122 756100                    STQ     NUMENTS,,AUTO

      692     7365
      693     7366    3          DO I=2 TO NUMENTS;

   7366  1 001240   000002 235007                    LDA     2,DL
         1 001241   200121 755100                    STA     I,,AUTO
         1 001242   001363 710000 1                  TRA     s:7405+3
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:371  

      694     7367    3             IF ORG = %INDEXED# THEN

   7367  1 001243   200022 235100                    LDA     ORG,,AUTO
         1 001244   000006 115007                    CMPA    6,DL
         1 001245   001256 601000 1                  TNZ     s:7370

      695     7368    3                UNIQUE=ALTKEYS.K.UNIQUE(I-1);

   7368  1 001246   200121 236100                    LDQ     I,,AUTO
         1 001247   000006 402007                    MPY     6,DL
         1 001250   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 001251   077776 236106                    LDQ     -2,QL,PR0
         1 001252   000011 736000                    QLS     9
         1 001253   400000 376003                    ANQ     -131072,DU
         1 001254   200123 756100                    STQ     UNIQUE,,AUTO
         1 001255   001265 710000 1                  TRA     s:7372

      696     7369    3             ELSE
      697     7370    3                UNIQUE=IRKEYS.K.UNIQUE(I-1);

   7370  1 001256   200121 236100                    LDQ     I,,AUTO
         1 001257   000007 402007                    MPY     7,DL
         1 001260   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 001261   077777 236106                    LDQ     -1,QL,PR0
         1 001262   000022 736000                    QLS     18
         1 001263   400000 376003                    ANQ     -131072,DU
         1 001264   200123 756100                    STQ     UNIQUE,,AUTO

      698     7371
      699     7372    3             IF (NOT F$DCB.LDFLG) OR

   7372  1 001265   200007 471500                    LDP1    JDCB$,,AUTO
         1 001266   100064 236100                    LDQ     52,,PR1
         1 001267   200000 316007                    CANQ    65536,DL
         1 001270   001276 600000 1                  TZE     s:7375
         1 001271   200123 234100                    SZN     UNIQUE,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:372  
         1 001272   001355 605000 1                  TPL     s:7404
         1 001273   100103 236100                    LDQ     67,,PR1
         1 001274   002000 316007                    CANQ    1024,DL
         1 001275   001355 601000 1                  TNZ     s:7404

      700     7373    3                (UNIQUE AND NOT F$DCB.UNIQUEBLD) THEN
      701     7374    4                DO;   /* BUILD KEY */

      702     7375    4                INDEX#=I;

   7375  1 001276   200121 235100                    LDA     I,,AUTO
         1 001277   200011 755100                    STA     INDEX#,,AUTO

      703     7376    4                CALL SETINDEX ALTRET(ERR);

   7376  1 001300   021667 701000 1                  TSX1    SETINDEX
         1 001301   001404 702000 1                  TSX2    ERR

      704     7377
      705     7378    4                IF FAK = 1 THEN

   7378  1 001302   200043 235100                    LDA     FAK,,AUTO
         1 001303   000001 115007                    CMPA    1,DL
         1 001304   001335 601000 1                  TNZ     s:7395

      706     7379    5                   DO;   /* ADD NEW KEY FIRST */

      707     7380    5                   KEYIN$=PINCRC(B$PS2$, F$DCB.KEYX);

   7380  1 001305   200007 470500                    LDP0    JDCB$,,AUTO
         1 001306   000036 236100                    LDQ     30,,PR0
         1 001307   000022 772000                    QRL     18
         1 001310   000020 736000                    QLS     16
         1 001311   000000 036000 xsym               ADLQ    B$PS2$
         1 001312   200037 756100                    STQ     KEYIN$,,AUTO

      708     7381    5                   COMFLG=%USEREC;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:373  

   7381  1 001313   000001 235007                    LDA     1,DL
         1 001314   200060 755100                    STA     COMFLG,,AUTO

      709     7382    5                   CALL FINDKEY ALTRET(NEW);

   7382  1 001315   007536 701000 1                  TSX1    FINDKEY
         1 001316   001322 702000 1                  TSX2    NEW

      710     7383
      711     7384    5                   CALL ADDSEG ALTRET(ERR);

   7384  1 001317   000327 701000 1                  TSX1    ADDSEG
         1 001320   001404 702000 1                  TSX2    ERR

      712     7385
      713     7386    6                   DO WHILE('0'B);

   7386  1 001321   001343 710000 1                  TRA     s:7399

      714     7387    6   NEW:               IF B$JIT.ERR.CODE ~= %E$NOKEY THEN

   7387  1 001322   000000 470400 xsym  NEW          LDP0    B$JIT$
         1 001323   000012 236100                    LDQ     10,,PR0
         1 001324   377770 376007                    ANQ     131064,DL
         1 001325   001020 116007                    CMPQ    528,DL
         1 001326   001331 600000 1                  TZE     s:7389

      715     7388    6                         ALTRETURN;

   7388  1 001327   200120 221300                    LDX1  ! UNIQUE+1,,AUTO
         1 001330   000000 702211                    TSX2  ! 0,X1

      716     7389    6                      B$JIT.ERR='0'B;

   7389  1 001331   000012 450100                    STZ     10,,PR0

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:374  
      717     7390    6                      CALL ADDKEY ALTRET(ERR);

   7390  1 001332   000301 701000 1                  TSX1    ADDKEY
         1 001333   001404 702000 1                  TSX2    ERR

      718     7391    6                   END;

      719     7392    5                   END;  /* ADD NEW KEY FIRST */

   7392  1 001334   001343 710000 1                  TRA     s:7399

      720     7393    4                ELSE
      721     7394    5                   DO;   /* POSITION TO SEG */

      722     7395    5                   CALL RESTOREPOS ALTRET(ERR);

   7395  1 001335   021403 701000 1                  TSX1    RESTOREPOS
         1 001336   001404 702000 1                  TSX2    ERR

      723     7396    5                   SEG$=PINCRW(BUF$, SEGX);

   7396  1 001337   200013 236100                    LDQ     SEGX,,AUTO
         1 001340   000022 736000                    QLS     18
         1 001341   200024 036100                    ADLQ    BUF$,,AUTO
         1 001342   200014 756100                    STQ     SEG$,,AUTO

      724     7397    5                   END;  /* POSITION TO SEG */

      725     7398
      726     7399    4                F$DCB.BFR.BUFUP(1)='1'B;

   7399  1 001343   200007 470500                    LDP0    JDCB$,,AUTO
         1 001344   400000 236003                    LDQ     -131072,DU
         1 001345   000116 256100                    ORSQ    78,,PR0

      727     7400    4                FM$MISEG=FM_MISEG;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:375  
   7400  1 001346   200014 471500                    LDP1    SEG$,,AUTO
         1 001347   000100 100500                    MLR     fill='000'O
         1 001350   200027 000010                    ADSC9   FM_MISEG,,AUTO           cn=0,n=8
         1 001351   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8

      728     7401    4                CALL NXTSEG ALTRET(ERR);

   7401  1 001352   015351 701000 1                  TSX1    NXTSEG
         1 001353   001404 702000 1                  TSX2    ERR

      729     7402    4                END;  /* BUILD KEY */

   7402  1 001354   001360 710000 1                  TRA     s:7405

      730     7403    3             ELSE
      731     7404    3                FM$CFU.ALTBLD='1'B;

   7404  1 001355   200010 473500                    LDP3    CFU$,,AUTO
         1 001356   000004 236003                    LDQ     4,DU
         1 001357   300006 256100                    ORSQ    6,,PR3

      732     7405    3          END;  /* DO I */

   7405  1 001360   200121 235100                    LDA     I,,AUTO
         1 001361   000001 035007                    ADLA    1,DL
         1 001362   200121 755100                    STA     I,,AUTO
         1 001363   200122 236100                    LDQ     NUMENTS,,AUTO
         1 001364   200121 116100                    CMPQ    I,,AUTO
         1 001365   001243 603000 1                  TRC     s:7367

      733     7406
      734     7407    2          IF INDEX# ~= 0 THEN

   7407  1 001366   200011 235100                    LDA     INDEX#,,AUTO
         1 001367   001402 600000 1                  TZE     s:7415

      735     7408    3             DO;   /* RESET INDEX */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:376  

      736     7409    3             INDEX#=1;

   7409  1 001370   000001 235007                    LDA     1,DL
         1 001371   200011 755100                    STA     INDEX#,,AUTO

      737     7410    3             CALL SETINDEX ALTRET(ERR);

   7410  1 001372   021667 701000 1                  TSX1    SETINDEX
         1 001373   001404 702000 1                  TSX2    ERR

      738     7411    3             CALL RESTOREPOS ALTRET(ERR);

   7411  1 001374   021403 701000 1                  TSX1    RESTOREPOS
         1 001375   001404 702000 1                  TSX2    ERR

      739     7412    3             SEG$=PINCRW(BUF$, SEGX);

   7412  1 001376   200013 236100                    LDQ     SEGX,,AUTO
         1 001377   000022 736000                    QLS     18
         1 001400   200024 036100                    ADLQ    BUF$,,AUTO
         1 001401   200014 756100                    STQ     SEG$,,AUTO

      740     7413    3             END;  /* RESET INDEX */

      741     7414
      742     7415    2          RETURN;

   7415  1 001402   200120 221300                    LDX1  ! UNIQUE+1,,AUTO
         1 001403   000001 702211                    TSX2  ! 1,X1

      743     7416    2   ERR:   ALTRETURN;

   7416  1 001404   200120 221300       ERR          LDX1  ! UNIQUE+1,,AUTO
         1 001405   000000 702211                    TSX2  ! 0,X1

      744     7417    2          END BLDALTSEG;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:377  
      745     7418               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:378  
      746     7419        /*I*     NAME:     BLDFLINK
      747     7420                 PURPOSE:  To build a new index granule
      748     7421                 DESCRIPTION:
      749     7422                      First allocate another granule.  If this is a file directory,
      750     7423                 make sure the granule gets charged to the right place.
      751     7424
      752     7425                      The new granule we allocate will go into buffer 3, and
      753     7426                 become the flink.  If there is something already in buffer 3,
      754     7427                 then move it to buffer 4.  If there is nothing in buffer 3, then
      755     7428                 this granule will be at the end of the list, make sure we update
      756     7429                 LDA.
      757     7430
      758     7431                      Check SLIDE and LSLIDE to see if an upper level should be
      759     7432                 built yet.
      760     7433
      761     7434                      Initialize the new granule.  Set the flink to the flink
      762     7435                 (the granule in buffer 4) and the blink to what is in buffer
      763     7436                 1.  Then write out all three buffers to prevent link check
      764     7437                 failures.
      765     7438        */
      766     7439                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:379  
      767     7440    1   BLDFLINK: PROC ALTRET;

   7440  1 001406   200146 741300       BLDFLINK     STX1  ! LEN+1,,AUTO

      768     7441    2          DCL BUF4$ PTR;
      769     7442    2          DCL FLINKDA UBIN;
      770     7443    2          DCL KTPTR3$ PTR;
      771     7444    2          DCL HDR(0:1) UBIN BASED;
      772     7445        /* */
      773     7446    2          F$DCB.MOVED=0;

   7446  1 001407   000000 220003                    LDX0    0,DU
         1 001410   200007 470500                    LDP0    JDCB$,,AUTO
         1 001411   000104 740100                    STX0    68,,PR0

      774     7447    2          IF FM$GRAN.ORG ~= 0 THEN

   7447  1 001412   200024 471500                    LDP1    BUF$,,AUTO
         1 001413   100001 236100                    LDQ     1,,PR1
         1 001414   036000 316007                    CANQ    15360,DL
         1 001415   001425 600000 1                  TZE     s:7450

      775     7448    2             CALL FAF$GETGRAN(DA) ALTRET(ERR);

   7448  1 001416   200021 633500                    EPPR3   DA,,AUTO
         1 001417   200166 453500                    STP3    STEMP_FIELDIN+2,,AUTO
         1 001420   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 001421   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001422   000000 701000 xent               TSX1    FAF$GETGRAN
         1 001423   001770 702000 1                  TSX2    ERR
         1 001424   001433 710000 1                  TRA     s:7452

      776     7449    2          ELSE
      777     7450    2             CALL FAG$G1DIR(DA) ALTRET(ERR);

   7450  1 001425   200021 633500                    EPPR3   DA,,AUTO
         1 001426   200166 453500                    STP3    STEMP_FIELDIN+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:380  
         1 001427   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 001430   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001431   000000 701000 xent               TSX1    FAG$G1DIR
         1 001432   001770 702000 1                  TSX2    ERR

      778     7451
      779     7452    2          IF F$DCB.MOVED ~= 0 AND ALTKEY$ ~= ADDR(NIL) THEN

   7452  1 001433   200007 470500                    LDP0    JDCB$,,AUTO
         1 001434   000104 220100                    LDX0    68,,PR0
         1 001435   001500 600000 1                  TZE     s:7466
         1 001436   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 001437   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001440   001500 600000 1                  TZE     s:7466

      780     7453    3             DO;   /* Adjust SEGX if FIT size changed */

      781     7454    3             IF ORG = %INDEXED# THEN

   7454  1 001441   200022 235100                    LDA     ORG,,AUTO
         1 001442   000006 115007                    CMPA    6,DL
         1 001443   001461 601000 1                  TNZ     s:7460

      782     7455    4                DO;

      783     7456    4                IF ALTKEYS.K.CDA(0)=FM_FRZERO THEN

   7456  1 001444   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 001445   100006 236100                    LDQ     6,,PR1
         1 001446   000000 116000 xsym               CMPQ    FM_FRZERO
         1 001447   001476 601000 1                  TNZ     s:7463

      784     7457    4                   ALTKEYS.K.SEGX(0)=ALTKEYS.K.SEGX(0)+F$DCB.MOVED;

   7457  1 001450   000104 236100                    LDQ     68,,PR0
         1 001451   000022 732000                    QRS     18
         1 001452   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:381  
         1 001453   100005 236100                    LDQ     5,,PR1
         1 001454   777777 376007                    ANQ     -1,DL
         1 001455   200166 036100                    ADLQ    STEMP_FIELDIN+2,,AUTO
         1 001456   000000 620006                    EAX0    0,QL
         1 001457   100005 440100                    SXL0    5,,PR1

      785     7458    4                END;

   7458  1 001460   001476 710000 1                  TRA     s:7463

      786     7459    4             ELSE DO;

      787     7460    4                IF IRKEYS.K.CDA(0)=FM_FRZERO THEN

   7460  1 001461   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 001462   100010 236100                    LDQ     8,,PR1
         1 001463   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001464   000000 116000 xsym               CMPQ    FM_FRZERO
         1 001465   001476 601000 1                  TNZ     s:7463

      788     7461    4                   IRKEYS.K.SEGX(0)=IRKEYS.K.SEGX(0)+F$DCB.MOVED;

   7461  1 001466   000104 236100                    LDQ     68,,PR0
         1 001467   000022 732000                    QRS     18
         1 001470   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 001471   100005 236100                    LDQ     5,,PR1
         1 001472   777777 376007                    ANQ     -1,DL
         1 001473   200166 036100                    ADLQ    STEMP_FIELDIN+2,,AUTO
         1 001474   000000 620006                    EAX0    0,QL
         1 001475   100005 440100                    SXL0    5,,PR1

      789     7462    4                END;

      790     7463    3             F$DCB.MOVED=0;

   7463  1 001476   000000 220003                    LDX0    0,DU
         1 001477   000104 740100                    STX0    68,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:382  

      791     7464    3             END;  /* Adjust SEGX if FIT size changed */

      792     7465
      793     7466    2          BUF4$=ADDR(NIL);

   7466  1 001500   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001501   200147 756100                    STQ     BUF4$,,AUTO

      794     7467    2          IF BUF3$ ~= ADDR(NIL) THEN

   7467  1 001502   200050 236100                    LDQ     BUF3$,,AUTO
         1 001503   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001504   001533 600000 1                  TZE     s:7481

      795     7468    3             DO;   /* ALREADY HAVE A FLINK */

      796     7469    3             CALL FMD$FLSHBUF(4);

   7469  1 001505   000012 630400 2                  EPPR0   10
         1 001506   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001507   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001510   000000 011000                    NOP     0

      797     7470    3             F$DCB.BFR(4)=F$DCB.BFR(3);

   7470  1 001511   200007 470500                    LDP0    JDCB$,,AUTO
         1 001512   000120 236100                    LDQ     80,,PR0
         1 001513   000121 756100                    STQ     81,,PR0

      798     7471    3             F$DCB.BFR1(4)=F$DCB.BFR1(3);

   7471  1 001514   000125 236100                    LDQ     85,,PR0
         1 001515   000126 756100                    STQ     86,,PR0

      799     7472    3             F$DCB.BFR(3)='0'B;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:383  
   7472  1 001516   000120 450100                    STZ     80,,PR0

      800     7473    3             F$DCB.BFR1(3)='0'B;

   7473  1 001517   000125 450100                    STZ     85,,PR0

      801     7474    3             BUF4$=BUF3$;

   7474  1 001520   200050 236100                    LDQ     BUF3$,,AUTO
         1 001521   200147 756100                    STQ     BUF4$,,AUTO

      802     7475    3             BUF4$->FM$GRAN.BLINK=DA;

   7475  1 001522   200021 235100                    LDA     DA,,AUTO
         1 001523   200147 471500                    LDP1    BUF4$,,AUTO
         1 001524   100003 755100                    STA     3,,PR1

      803     7476    3             FLINKDA=F$DCB.BFR.DA(4);

   7476  1 001525   000121 236100                    LDQ     81,,PR0
         1 001526   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001527   200150 756100                    STQ     FLINKDA,,AUTO

      804     7477    3             F$DCB.BFR.BUFUP(4)='1'B;

   7477  1 001530   400000 236003                    LDQ     -131072,DU
         1 001531   000121 256100                    ORSQ    81,,PR0

      805     7478    3             END;  /* ALREADY HAVE A FLINK */

   7478  1 001532   001576 710000 1                  TRA     s:7494

      806     7479    2          ELSE
      807     7480    3             DO;   /* NO FLINK */

      808     7481    3             FLINKDA=0;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:384  
   7481  1 001533   200150 450100                    STZ     FLINKDA,,AUTO

      809     7482    3             IF FM$GRAN.ORG ~= 0 THEN

   7482  1 001534   200024 471500                    LDP1    BUF$,,AUTO
         1 001535   100001 236100                    LDQ     1,,PR1
         1 001536   036000 316007                    CANQ    15360,DL
         1 001537   001576 600000 1                  TZE     s:7494

      810     7483    4                DO;   /* SET LDA */

      811     7484    4                IF ALTKEY$ ~= ADDR(NIL) THEN

   7484  1 001540   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 001541   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001542   001570 600000 1                  TZE     s:7489

      812     7485    4                   IF ORG = %INDEXED# THEN

   7485  1 001543   200022 235100                    LDA     ORG,,AUTO
         1 001544   000006 115007                    CMPA    6,DL
         1 001545   001560 601000 1                  TNZ     s:7488

      813     7486    4                      ALTKEYS.K.LDA(INDEX#)=DA;

   7486  1 001546   200011 236100                    LDQ     INDEX#,,AUTO
         1 001547   000006 402007                    MPY     6,DL
         1 001550   200023 473500                    LDP3    ALTKEY$,,AUTO
         1 001551   000000 621006                    EAX1    0,QL
         1 001552   200021 236100                    LDQ     DA,,AUTO
         1 001553   000011 736000                    QLS     9
         1 001554   300002 676111                    ERQ     2,X1,PR3
         1 001555   000013 376000 2                  ANQ     11
         1 001556   300002 656111                    ERSQ    2,X1,PR3
         1 001557   001570 710000 1                  TRA     s:7489

      814     7487    4                   ELSE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:385  
      815     7488    4                      IRKEYS.K.LDA(INDEX#)=DA;

   7488  1 001560   200011 236100                    LDQ     INDEX#,,AUTO
         1 001561   000007 402007                    MPY     7,DL
         1 001562   200023 473500                    LDP3    ALTKEY$,,AUTO
         1 001563   000000 621006                    EAX1    0,QL
         1 001564   200021 236100                    LDQ     DA,,AUTO
         1 001565   300011 676111                    ERQ     9,X1,PR3
         1 001566   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001567   300011 656111                    ERSQ    9,X1,PR3

      816     7489    4                IF INDEX# = 0 THEN

   7489  1 001570   200011 235100                    LDA     INDEX#,,AUTO
         1 001571   001576 601000 1                  TNZ     s:7494

      817     7490    4                   FM$CFU.LDA=DA;

   7490  1 001572   200010 471500                    LDP1    CFU$,,AUTO
         1 001573   000100 101500                    MRL     fill='000'O
         1 001574   200021 000004                    ADSC9   DA,,AUTO                 cn=0,n=4
         1 001575   100006 400003                    ADSC9   6,,PR1                   cn=2,n=3

      818     7491    4                END;  /* SET LDA */

      819     7492    3             END;  /* NO FLINK */

      820     7493
      821     7494    2          IF FM$GRAN.ORG ~= 0 THEN

   7494  1 001576   200024 471500                    LDP1    BUF$,,AUTO
         1 001577   100001 236100                    LDQ     1,,PR1
         1 001600   036000 316007                    CANQ    15360,DL
         1 001601   001641 600000 1                  TZE     s:7505

      822     7495    3             DO;   /* FILE */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:386  
      823     7496    3             IF FM$CFU.SLIDE < 511 THEN

   7496  1 001602   200010 473500                    LDP3    CFU$,,AUTO
         1 001603   300005 236100                    LDQ     5,,PR3
         1 001604   777000 376003                    ANQ     -512,DU
         1 001605   777000 116003                    CMPQ    -512,DU
         1 001606   001612 603000 1                  TRC     s:7498

      824     7497    3                FM$CFU.SLIDE=FM$CFU.SLIDE+1;

   7497  1 001607   300005 236100                    LDQ     5,,PR3
         1 001610   001000 036003                    ADLQ    512,DU
         1 001611   300005 552140                    STBQ    5,'40'O,PR3

      825     7498    3             F$DCB.SLIDE=FM$CFU.SLIDE;

   7498  1 001612   300005 236100                    LDQ     5,,PR3
         1 001613   000022 772000                    QRL     18
         1 001614   000003 552110                    STBQ    3,'10'O,PR0

      826     7499    3             IF F$DCB.SLIDE > F$DCB.LSLIDE THEN

   7499  1 001615   000003 236100                    LDQ     3,,PR0
         1 001616   000011 772000                    QRL     9
         1 001617   000777 376007                    ANQ     511,DL
         1 001620   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 001621   000037 236100                    LDQ     31,,PR0
         1 001622   000011 772000                    QRL     9
         1 001623   000777 376007                    ANQ     511,DL
         1 001624   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 001625   001630 605000 1                  TPL     s:7501

      827     7500    3                FM$CFU.ULBLD=1;

   7500  1 001626   000001 236003                    LDQ     1,DU
         1 001627   300006 256100                    ORSQ    6,,PR3

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:387  
      828     7501    3             KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

   7501  1 001630   200024 471500                    LDP1    BUF$,,AUTO
         1 001631   100002 220100                    LDX0    2,,PR1
         1 001632   000000 636010                    EAQ     0,X0
         1 001633   200024 036100                    ADLQ    BUF$,,AUTO
         1 001634   200025 756100                    STQ     KTPTR$,,AUTO

      829     7502    3             BOUND=FM$KEYTBL(0);

   7502  1 001635   200025 474500                    LDP4    KTPTR$,,AUTO
         1 001636   400000 236100                    LDQ     0,,PR4
         1 001637   000033 772000                    QRL     27
         1 001640   200016 756100                    STQ     BOUND,,AUTO

      830     7503    3             END;  /* FILE */

      831     7504
      832     7505    2          CALL FMD$FLSHBUF(3);

   7505  1 001641   000014 630400 2                  EPPR0   12
         1 001642   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001643   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001644   000000 011000                    NOP     0

      833     7506    2          CALL FMD$GETBUF(3, 1, BUF3$);

   7506  1 001645   200050 630500                    EPPR0   BUF3$,,AUTO
         1 001646   200170 450500                    STP0    STEMP_FIELDIN+4,,AUTO
         1 001647   000016 237000 2                  LDAQ    14
         1 001650   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 001651   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 001652   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001653   000000 701000 xent               TSX1    FMD$GETBUF
         1 001654   000000 011000                    NOP     0

      834     7507    2          F$DCB.BFR.DA(3)=DA;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:388  

   7507  1 001655   200007 470500                    LDP0    JDCB$,,AUTO
         1 001656   200021 236100                    LDQ     DA,,AUTO
         1 001657   000120 552134                    STBQ    80,'34'O,PR0

      835     7508    2          FM$GRAN3='0'B;

   7508  1 001660   200050 471500                    LDP1    BUF3$,,AUTO
         1 001661   000100 100400                    MLR     fill='000'O
         1 001662   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 001663   100000 000024                    ADSC9   0,,PR1                   cn=0,n=20

      836     7509
      837     7510    2          BUF3$->HDR=BUF$->HDR;

   7510  1 001664   200024 471500                    LDP1    BUF$,,AUTO
         1 001665   200050 473500                    LDP3    BUF3$,,AUTO
         1 001666   000100 100500                    MLR     fill='000'O
         1 001667   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 001670   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8

      838     7511
      839     7512    2          FM$GRAN3.STAMP.GMOD=DA;

   7512  1 001671   200050 471500                    LDP1    BUF3$,,AUTO
         1 001672   200021 236100                    LDQ     DA,,AUTO
         1 001673   100000 552104                    STBQ    0,'04'O,PR1

      840     7513    2          FM$GRAN3.FCEX=5;

   7513  1 001674   000005 220003                    LDX0    5,DU
         1 001675   200050 471500                    LDP1    BUF3$,,AUTO
         1 001676   100002 740100                    STX0    2,,PR1

      841     7514    2          FM$GRAN3.FLINK=FLINKDA;

   7514  1 001677   200150 235100                    LDA     FLINKDA,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:389  
         1 001700   200050 471500                    LDP1    BUF3$,,AUTO
         1 001701   100004 755100                    STA     4,,PR1

      842     7515    2          FM$GRAN3.BLINK=F$DCB.BFR.DA(1);

   7515  1 001702   000116 236100                    LDQ     78,,PR0
         1 001703   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001704   200050 471500                    LDP1    BUF3$,,AUTO
         1 001705   100003 756100                    STQ     3,,PR1

      843     7516    2          FM$GRAN3.AVAIL=1024-5-SIZEW(FM$KEYTBL);

   7516  1 001706   200050 471500                    LDP1    BUF3$,,AUTO
         1 001707   100001 236100                    LDQ     1,,PR1
         1 001710   000006 376000 2                  ANQ     6
         1 001711   001665 276007                    ORQ     949,DL
         1 001712   100001 756100                    STQ     1,,PR1

      844     7517    2          FM$GRAN3.NAVX=5+SIZEW(FM$KEYTBL);

   7517  1 001713   000113 221003                    LDX1    75,DU
         1 001714   200050 471500                    LDP1    BUF3$,,AUTO
         1 001715   100001 741100                    STX1    1,,PR1

      845     7518
      846     7519    2          KTPTR3$=PINCRW(BUF3$, 5);

   7519  1 001716   200050 236100                    LDQ     BUF3$,,AUTO
         1 001717   000005 036003                    ADLQ    5,DU
         1 001720   200151 756100                    STQ     KTPTR3$,,AUTO

      847     7520    2          KTPTR3$->FM$KEYTBL3='0'B;

   7520  1 001721   200151 471500                    LDP1    KTPTR3$,,AUTO
         1 001722   000100 100400                    MLR     fill='000'O
         1 001723   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 001724   100000 000430                    ADSC9   0,,PR1                   cn=0,n=280
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:390  

      848     7521    2          KTPTR3$->FM$KEYTBL3(0)=SIZEC(FM$KEYTBL);

   7521  1 001725   430000 236003                    LDQ     -118784,DU
         1 001726   100000 552140                    STBQ    0,'40'O,PR1

      849     7522
      850     7523    2          F$DCB.BFR.BUFUP(3)='1'B;

   7523  1 001727   400000 236003                    LDQ     -131072,DU
         1 001730   000120 256100                    ORSQ    80,,PR0

      851     7524    2          F$DCB.BFR.SCRUB(3)='1'B;

   7524  1 001731   200000 236003                    LDQ     65536,DU
         1 001732   000120 256100                    ORSQ    80,,PR0

      852     7525
      853     7526    2          FM$GRAN.FLINK=DA;

   7526  1 001733   200021 235100                    LDA     DA,,AUTO
         1 001734   200024 473500                    LDP3    BUF$,,AUTO
         1 001735   300004 755100                    STA     4,,PR3

      854     7527    2          F$DCB.BFR.BUFUP(1)='1'B;

   7527  1 001736   400000 236003                    LDQ     -131072,DU
         1 001737   000116 256100                    ORSQ    78,,PR0

      855     7528
      856     7529    2          IF BUF4$ ~= ADDR(NIL) OR FM$GRAN.ORG = 0 THEN

   7529  1 001740   200147 236100                    LDQ     BUF4$,,AUTO
         1 001741   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001742   001747 601000 1                  TNZ     s:7531
         1 001743   200024 473500                    LDP3    BUF$,,AUTO
         1 001744   300001 236100                    LDQ     1,,PR3
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:391  
         1 001745   036000 316007                    CANQ    15360,DL
         1 001746   001766 601000 1                  TNZ     s:7537

      857     7530    3             DO;   /* HELP PREVENT LINK FAILURES */

      858     7531    3             CALL FMD$WRTSVNW(3);

   7531  1 001747   000014 630400 2                  EPPR0   12
         1 001750   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001751   000000 701000 xent               TSX1    FMD$WRTSVNW
         1 001752   000000 011000                    NOP     0

      859     7532    3             CALL FMD$WRTSVNW(1);

   7532  1 001753   000001 630400 2                  EPPR0   1
         1 001754   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001755   000000 701000 xent               TSX1    FMD$WRTSVNW
         1 001756   000000 011000                    NOP     0

      860     7533    3             CALL FMD$FLSHBUF(4);

   7533  1 001757   000012 630400 2                  EPPR0   10
         1 001760   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001761   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001762   000000 011000                    NOP     0

      861     7534    3             CALL FMB$IOSPIN;

   7534  1 001763   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001764   000000 701000 xent               TSX1    FMB$IOSPIN
         1 001765   000000 011000                    NOP     0

      862     7535    3             END;  /* HELP PREVENT LINK FAILURES */

      863     7536
      864     7537    2          RETURN;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:392  
   7537  1 001766   200146 221300                    LDX1  ! LEN+1,,AUTO
         1 001767   000001 702211                    TSX2  ! 1,X1

      865     7538    2   ERR:   ALTRETURN;

   7538  1 001770   200146 221300       ERR          LDX1  ! LEN+1,,AUTO
         1 001771   000000 702211                    TSX2  ! 0,X1

      866     7539    2          END BLDFLINK;
      867     7540               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:393  
      868     7541        /*I*     NAME:     BLDREC
      869     7542                 PURPOSE:  To build a record
      870     7543                 DESCRIPTION:
      871     7544                      FAK indicates whether or not this is our first time through
      872     7545                 the loop.
      873     7546
      874     7547                      Loop until we run out of data to transmit from the users
      875     7548                 buffer and there aren't any more segments.
      876     7549
      877     7550                      If we ran out of data before we ran out of segments, set
      878     7551                 the number of active bytes to 0.
      879     7552
      880     7553                      If we ran out of segments before we ran out of data, then
      881     7554                 call NEWSEG to add segment space.
      882     7555
      883     7556                      If there is some usable space in the segment we are pointing
      884     7557                 to, then we will use it.  Read in the data granule that this
      885     7558                 segment points to.  If this file has alternate indexes, then
      886     7559                 stash the current MISEG.  This may be needed for searching a list
      887     7560                 of dups later.  Transfer the data from the user's buffer to
      888     7561                 to the data granule.  Then set the number of active bytes.
      889     7562                 If this file has alternate indexes and the MISEG changed,
      890     7563                 call UPALTSEGS to make any necessary changes.
      891     7564
      892     7565                      If there wasn't any useable space in the current MISEG, then
      893     7566                 call ADDDATA to allocate data space.
      894     7567
      895     7568                      If the user asked for an ID back, give him one.  Set the
      896     7569                 DVBYTE.  Then position to the next segment.
      897     7570        */
      898     7571                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:394  
      899     7572    1   BLDREC: PROC ALTRET;

   7572  1 001772   200106 741300       BLDREC       STX1  ! ICHNG,,AUTO

      900     7573    2          DCL GACTB UBIN;
      901     7574    2          DCL GX UBIN;
      902     7575    2          DCL GSIZ UBIN;
      903     7576    2          DCL BUFNUM UBIN;
      904     7577    2          DCL SAVE_ERROR BIT(36);
      905     7578        /* */
      906     7579    2          FAK=1;

   7579  1 001773   000001 235007                    LDA     1,DL
         1 001774   200043 755100                    STA     FAK,,AUTO

      907     7580    2          B$JIT.ERR='0'B;

   7580  1 001775   000000 470400 xsym               LDP0    B$JIT$
         1 001776   000012 450100                    STZ     10,,PR0

      908     7581    2          IDPTR$=PINCRW(ADDR(F$DCB.ID), -1);

   7581  1 001777   200007 236100                    LDQ     JDCB$,,AUTO
         1 002000   000106 036003                    ADLQ    70,DU
         1 002001   200034 756100                    STQ     IDPTR$,,AUTO

      909     7582    2          ID.DA=FM$MISEG.GDA;

   7582  1 002002   200014 471500                    LDP1    SEG$,,AUTO
         1 002003   200034 473500                    LDP3    IDPTR$,,AUTO
         1 002004   100001 236100                    LDQ     1,,PR1
         1 002005   300001 676100                    ERQ     1,,PR3
         1 002006   000020 376000 2                  ANQ     16
         1 002007   300001 656100                    ERSQ    1,,PR3

      910     7583    2          ID.GX=FM$MISEG.GX;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:395  
   7583  1 002010   200014 471500                    LDP1    SEG$,,AUTO
         1 002011   100000 236100                    LDQ     0,,PR1
         1 002012   000016 736000                    QLS     14
         1 002013   300001 676100                    ERQ     1,,PR3
         1 002014   777400 376003                    ANQ     -256,DU
         1 002015   300001 656100                    ERSQ    1,,PR3

      911     7584    2          SAVE_ERROR='0'B;

   7584  1 002016   200113 450100                    STZ     SAVE_ERROR,,AUTO

      912     7585
      913     7586    3          DO UNTIL (SEG$ = ADDR(NIL) AND F$DCB.UBYTES = 0);

      914     7587    3             IF F$DCB.UBYTES = 0 THEN

   7587  1 002017   200007 470500                    LDP0    JDCB$,,AUTO
         1 002020   000076 235100                    LDA     62,,PR0
         1 002021   002062 601000 1                  TNZ     s:7606

      915     7588    4                DO;   /* NULL RECORD */

      916     7589    4                IF ALTKEY$~=ADDR(NIL) THEN

   7589  1 002022   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 002023   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002024   002031 600000 1                  TZE     s:7591

      917     7590    4                   OLD_MISEG=FM$MISEG;

   7590  1 002025   200014 471500                    LDP1    SEG$,,AUTO
         1 002026   000100 100500                    MLR     fill='000'O
         1 002027   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 002030   200041 000010                    ADSC9   OLD_MISEG,,AUTO          cn=0,n=8

      918     7591    4                FM$MISEG.GACTB=0;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:396  
   7591  1 002031   200014 471500                    LDP1    SEG$,,AUTO
         1 002032   000000 236003                    LDQ     0,DU
         1 002033   100000 752103                    STCQ    0,'03'O,PR1

      919     7592    4                F$DCB.BFR.BUFUP(1)='1'B;

   7592  1 002034   400000 236003                    LDQ     -131072,DU
         1 002035   000116 256100                    ORSQ    78,,PR0

      920     7593    4                IF ALTKEY$~=ADDR(NIL) AND OLD_MISEG~=FM$MISEG THEN

   7593  1 002036   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 002037   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002040   002232 600000 1                  TZE     s:7648
         1 002041   200014 471500                    LDP1    SEG$,,AUTO
         1 002042   000100 106500                    CMPC    fill='000'O
         1 002043   200041 000010                    ADSC9   OLD_MISEG,,AUTO          cn=0,n=8
         1 002044   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 002045   002232 600000 1                  TZE     s:7648

      921     7594    5                   DO;   /* Update alt segs */

      922     7595    5                   FM_MISEG=FM$MISEG;

   7595  1 002046   000100 100500                    MLR     fill='000'O
         1 002047   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 002050   200027 000010                    ADSC9   FM_MISEG,,AUTO           cn=0,n=8

      923     7596    5                   IF FAK=1 THEN

   7596  1 002051   200043 235100                    LDA     FAK,,AUTO
         1 002052   000001 115007                    CMPA    1,DL
         1 002053   002057 601000 1                  TNZ     s:7601

      924     7597    6                      DO;

      925     7598    6                      ADDR(FM_MISEG)->FM$MISEG.FAK='1'B;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:397  

   7598  1 002054   400000 236003                    LDQ     -131072,DU
         1 002055   200027 256100                    ORSQ    FM_MISEG,,AUTO

      926     7599    6                      ADDR(OLD_MISEG)->FM$MISEG.FAK='1'B;

   7599  1 002056   200041 256100                    ORSQ    OLD_MISEG,,AUTO

      927     7600    6                      END;

      928     7601    5                   CALL UPALTSEGS ALTRET(ERR);

   7601  1 002057   024717 701000 1                  TSX1    UPALTSEGS
         1 002060   002312 702000 1                  TSX2    ERR

      929     7602    5                   END;  /* Update alt segs */

      930     7603    4                END;  /* NULL RECORD */

   7603  1 002061   002232 710000 1                  TRA     s:7648

      931     7604    3             ELSE
      932     7605    4                DO;   /* NOT NULL */

      933     7606    4                IF SEG$ = ADDR(NIL) THEN

   7606  1 002062   200014 236100                    LDQ     SEG$,,AUTO
         1 002063   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002064   002067 601000 1                  TNZ     s:7609

      934     7607    4                   CALL NEWSEG ALTRET(ERR);

   7607  1 002065   014722 701000 1                  TSX1    NEWSEG
         1 002066   002312 702000 1                  TSX2    ERR

      935     7608
      936     7609    4                IF FM$MISEG.GSIZ > 0 THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:398  

   7609  1 002067   200014 470500                    LDP0    SEG$,,AUTO
         1 002070   000000 236100                    LDQ     0,,PR0
         1 002071   177700 316003                    CANQ    65472,DU
         1 002072   002230 600000 1                  TZE     s:7644

      937     7610    5                   DO;   /* START USING CURRENT SEG */

      938     7611    5                   DA=FM$MISEG.GDA;

   7611  1 002073   000001 236100                    LDQ     1,,PR0
         1 002074   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002075   200021 756100                    STQ     DA,,AUTO

      939     7612    5                   F$DCB.LVL=7;

   7612  1 002076   200007 471500                    LDP1    JDCB$,,AUTO
         1 002077   070000 236003                    LDQ     28672,DU
         1 002100   100067 256100                    ORSQ    55,,PR1

      940     7613    5                   DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));

   7613  1 002101   100115 236100                    LDQ     77,,PR1
         1 002102   000033 772000                    QRL     27
         1 002103   000037 376007                    ANQ     31,DL
         1 002104   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 002105   200040 756100                    STQ     DBUF$,,AUTO

      941     7614    5                   IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= DA THEN

   7614  1 002106   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002107   002114 600000 1                  TZE     s:7615
         1 002110   100115 236100                    LDQ     77,,PR1
         1 002111   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002112   200021 116100                    CMPQ    DA,,AUTO
         1 002113   002132 600000 1                  TZE     s:7616

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:399  
      942     7615    5                      CALL FMD$REDBUF(DBUF$, 0, DA,, 0) ALTRET(DATAERR);

   7615  1 002114   000000 236000 2                  LDQ     0
         1 002115   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 002116   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 002117   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 002120   200021 633500                    EPPR3   DA,,AUTO
         1 002121   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 002122   000000 236000 2                  LDQ     0
         1 002123   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 002124   200040 634500                    EPPR4   DBUF$,,AUTO
         1 002125   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 002126   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 002127   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 002130   000000 701000 xent               TSX1    FMD$REDBUF
         1 002131   002306 702000 1                  TSX2    DATAERR

      943     7616    5                   GX=FM$MISEG.GX;

   7616  1 002132   200014 470500                    LDP0    SEG$,,AUTO
         1 002133   000000 236100                    LDQ     0,,PR0
         1 002134   000014 772000                    QRL     12
         1 002135   001777 376007                    ANQ     1023,DL
         1 002136   200110 756100                    STQ     GX,,AUTO

      944     7617    5                   G$=PINCRW(DBUF$, GX);

   7617  1 002137   000022 736000                    QLS     18
         1 002140   200040 036100                    ADLQ    DBUF$,,AUTO
         1 002141   200026 756100                    STQ     G$,,AUTO

      945     7618
      946     7619    5                   GACTB=FM$MISEG.GSIZ*4;

   7619  1 002142   000000 236100                    LDQ     0,,PR0
         1 002143   000026 772000                    QRL     22
         1 002144   007774 376007                    ANQ     4092,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:400  
         1 002145   200107 756100                    STQ     GACTB,,AUTO

      947     7620    5                   IF ALTKEY$ ~= ADDR(NIL) THEN

   7620  1 002146   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 002147   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002150   002154 600000 1                  TZE     s:7625

      948     7621    6                      DO;   /* SAVE OLD MISEG */

      949     7622    6                      OLD_MISEG=FM$MISEG;

   7622  1 002151   000100 100500                    MLR     fill='000'O
         1 002152   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 002153   200041 000010                    ADSC9   OLD_MISEG,,AUTO          cn=0,n=8

      950     7623    6                      END;  /* SAVE OLD MISEG */

      951     7624
      952     7625    5                  CALL FMD$RECTRAN(G$, GACTB, 0, 1, FAK, FPT$WRITE_V.SEED) ALTRET(ERR)
              7625                            ;

   7625  1 002154   000000 236000 xsym               LDQ     B$PS0$
         1 002155   000002 036003                    ADLQ    2,DU
         1 002156   200173 756100                    STQ     STEMP_FIELDIN+7,,AUTO
         1 002157   200043 631500                    EPPR1   FAK,,AUTO
         1 002160   200172 451500                    STP1    STEMP_FIELDIN+6,,AUTO
         1 002161   000000 237000 2                  LDAQ    0
         1 002162   200170 757100                    STAQ    STEMP_FIELDIN+4,,AUTO
         1 002163   200107 633500                    EPPR3   GACTB,,AUTO
         1 002164   200167 453500                    STP3    STEMP_FIELDIN+3,,AUTO
         1 002165   200026 634500                    EPPR4   G$,,AUTO
         1 002166   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 002167   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 002170   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 002171   000000 701000 xent               TSX1    FMD$RECTRAN
         1 002172   002312 702000 1                  TSX2    ERR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:401  

      953     7626    5                   FM$MISEG.GACTB=GACTB;

   7626  1 002173   200014 470500                    LDP0    SEG$,,AUTO
         1 002174   200107 236100                    LDQ     GACTB,,AUTO
         1 002175   000000 752103                    STCQ    0,'03'O,PR0

      954     7627
      955     7628    5                   F$DCB.BFR.BUFUP(1)='1'B;

   7628  1 002176   200007 470500                    LDP0    JDCB$,,AUTO
         1 002177   400000 236003                    LDQ     -131072,DU
         1 002200   000116 256100                    ORSQ    78,,PR0

      956     7629    5                   IF ALTKEY$~=ADDR(NIL) THEN

   7629  1 002201   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 002202   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002203   002232 600000 1                  TZE     s:7648

      957     7630    6                      DO;   /* Set FM_MISEG for next go-round */

      958     7631    6                      FM_MISEG=FM$MISEG;

   7631  1 002204   200014 471500                    LDP1    SEG$,,AUTO
         1 002205   000100 100500                    MLR     fill='000'O
         1 002206   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 002207   200027 000010                    ADSC9   FM_MISEG,,AUTO           cn=0,n=8

      959     7632    6                      IF FAK=1 THEN

   7632  1 002210   200043 235100                    LDA     FAK,,AUTO
         1 002211   000001 115007                    CMPA    1,DL
         1 002212   002215 601000 1                  TNZ     s:7634

      960     7633    6                         ADDR(FM_MISEG)->FM$MISEG.FAK='1'B;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:402  
   7633  1 002213   400000 236003                    LDQ     -131072,DU
         1 002214   200027 256100                    ORSQ    FM_MISEG,,AUTO

      961     7634    6                      IF OLD_MISEG~=FM$MISEG THEN

   7634  1 002215   000100 106500                    CMPC    fill='000'O
         1 002216   200041 000010                    ADSC9   OLD_MISEG,,AUTO          cn=0,n=8
         1 002217   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 002220   002232 600000 1                  TZE     s:7648

      962     7635    7                         DO;   /* Update alt segs */

      963     7636    7                         IF FAK=1 THEN

   7636  1 002221   000001 115007                    CMPA    1,DL
         1 002222   002225 601000 1                  TNZ     s:7638

      964     7637    7                            ADDR(OLD_MISEG)->FM$MISEG.FAK='1'B;

   7637  1 002223   400000 236003                    LDQ     -131072,DU
         1 002224   200041 256100                    ORSQ    OLD_MISEG,,AUTO

      965     7638    7                         CALL UPALTSEGS ALTRET(ERR);

   7638  1 002225   024717 701000 1                  TSX1    UPALTSEGS
         1 002226   002312 702000 1                  TSX2    ERR

      966     7639    7                         END;  /* Update alt segs */

      967     7640    6                      END;  /* Set FM_MISEG for next go-round */

      968     7641    5                   END;  /* START USING CURRENT SEGS */

   7641  1 002227   002232 710000 1                  TRA     s:7648

      969     7642    4                ELSE
      970     7643    5                   DO;   /* NEED TO ALLOCATE DATA */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:403  

      971     7644    5                   CALL ADDDATA ALTRET(ERR);

   7644  1 002230   000105 701000 1                  TSX1    ADDDATA
         1 002231   002312 702000 1                  TSX2    ERR

      972     7645    5                   END;  /* NEED TO ALLOCATE DATA */

      973     7646    4                END;  /* NOT NULL */

      974     7647
      975     7648    3             IF FAK = 1 THEN

   7648  1 002232   200043 235100                    LDA     FAK,,AUTO
         1 002233   000001 115007                    CMPA    1,DL
         1 002234   002264 601000 1                  TNZ     s:7659

      976     7649    4                DO;   /* FIRST TIME AROUND */

      977     7650    4                IF FPT$WRITE_V.ID THEN

   7650  1 002235   000000 470400 xsym               LDP0    B$PS0$
         1 002236   000000 236100                    LDQ     0,,PR0
         1 002237   040000 316007                    CANQ    16384,DL
         1 002240   002247 600000 1                  TZE     s:7655

      978     7651    4                   CALL GETIDRW WHENALTRETURN

   7651  1 002241   010551 701000 1                  TSX1    GETIDRW
         1 002242   002244 702000 1                  TSX2    s:7653
         1 002243   002247 710000 1                  TRA     s:7655

      979     7652    5                      DO;   /* SAVE ERROR */

      980     7653    5                      SAVE_ERROR=B$JIT.ERR;

   7653  1 002244   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:404  
         1 002245   000012 236100                    LDQ     10,,PR0
         1 002246   200113 756100                    STQ     SAVE_ERROR,,AUTO

      981     7654    5                      END;  /* SAVE ERROR */

      982     7655    4                IF F$DCB.SHARED THEN

   7655  1 002247   200007 470500                    LDP0    JDCB$,,AUTO
         1 002250   000064 236100                    LDQ     52,,PR0
         1 002251   100000 316003                    CANQ    32768,DU
         1 002252   002255 600000 1                  TZE     s:7657

      983     7656    4                   CALL SETID;

   7656  1 002253   021643 701000 1                  TSX1    SETID
         1 002254   000000 011000                    NOP     0

      984     7657    4                FM$MISEG.CTL=FPT$WRITE_V.DVBYTE;

   7657  1 002255   200014 470500                    LDP0    SEG$,,AUTO
         1 002256   000000 471400 xsym               LDP1    B$PS0$
         1 002257   100003 236100                    LDQ     3,,PR1
         1 002260   000001 772000                    QRL     1
         1 002261   000001 676100                    ERQ     1,,PR0
         1 002262   377000 376003                    ANQ     130560,DU
         1 002263   000001 656100                    ERSQ    1,,PR0

      985     7658    4                END;  /* FIRST TIME AROUND */

      986     7659    3             CALL NXTSEG ALTRET(ERR);

   7659  1 002264   015351 701000 1                  TSX1    NXTSEG
         1 002265   002312 702000 1                  TSX2    ERR

      987     7660    3             FAK=0;

   7660  1 002266   200043 450100                    STZ     FAK,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:405  

      988     7661    3          END;  /* WHILE */

   7661  1 002267   200014 236100                    LDQ     SEG$,,AUTO
         1 002270   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002271   002017 601000 1                  TNZ     s:7587
         1 002272   200007 470500                    LDP0    JDCB$,,AUTO
         1 002273   000076 235100                    LDA     62,,PR0
         1 002274   002017 601000 1                  TNZ     s:7587

      989     7662
      990     7663    2          IF SAVE_ERROR ~= '0'B THEN

   7663  1 002275   200113 235100                    LDA     SAVE_ERROR,,AUTO
         1 002276   002304 600000 1                  TZE     s:7669

      991     7664    3             DO;   /* REPORT ERROR */

      992     7665    3             B$JIT.ERR=SAVE_ERROR;

   7665  1 002277   200113 236100                    LDQ     SAVE_ERROR,,AUTO
         1 002300   000000 471400 xsym               LDP1    B$JIT$
         1 002301   100012 756100                    STQ     10,,PR1

      993     7666    3             ALTRETURN;

   7666  1 002302   200106 221300                    LDX1  ! ICHNG,,AUTO
         1 002303   000000 702211                    TSX2  ! 0,X1

      994     7667    3             END;  /* REPORT ERROR */
      995     7668    2          ELSE
      996     7669    2             RETURN;

   7669  1 002304   200106 221300                    LDX1  ! ICHNG,,AUTO
         1 002305   000001 702211                    TSX2  ! 1,X1

      997     7670    2   DATAERR: CALL DATAERROR;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:406  

   7670  1 002306   005205 701000 1     DATAERR      TSX1    DATAERROR
         1 002307   000000 011000                    NOP     0

      998     7671    2          ALTRETURN;

   7671  1 002310   200106 221300                    LDX1  ! ICHNG,,AUTO
         1 002311   000000 702211                    TSX2  ! 0,X1

      999     7672    2   ERR:   ALTRETURN;

   7672  1 002312   200106 221300       ERR          LDX1  ! ICHNG,,AUTO
         1 002313   000000 702211                    TSX2  ! 0,X1

     1000     7673    2          END BLDREC;
     1001     7674               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:407  
     1002     7675        /*I*     NAME:     BLINK
     1003     7676                 PURPOSE:  To position backwards one granule
     1004     7677                 DESCRIPTION:
     1005     7678                      Get the disk address of the previous index granule.  If there
     1006     7679                 isn't one, altreturn.  Then read the granule.
     1007     7680        */
     1008     7681    1   BLINK: PROC ALTRET;

   7681  1 002314   200134 741300       BLINK        STX1  ! BFR+1,,AUTO

     1009     7682        /* */
     1010     7683    2          DA=FM$GRAN.BLINK;

   7683  1 002315   200024 470500                    LDP0    BUF$,,AUTO
         1 002316   000003 235100                    LDA     3,,PR0
         1 002317   200021 755100                    STA     DA,,AUTO

     1011     7684    2          IF DA = 0 THEN

   7684  1 002320   002326 601000 1                  TNZ     s:7690

     1012     7685    3             DO;   /* BOF */

     1013     7686    3             B$JIT.ERR=ERRBOF;

   7686  1 002321   000017 236000 0                  LDQ     ERRBOF
         1 002322   000000 471400 xsym               LDP1    B$JIT$
         1 002323   100012 756100                    STQ     10,,PR1

     1014     7687    3             ALTRETURN;

   7687  1 002324   200134 221300                    LDX1  ! BFR+1,,AUTO
         1 002325   000000 702211                    TSX2  ! 0,X1

     1015     7688    3             END;  /* BOF */
     1016     7689
     1017     7690    2          CALL RDGRAN ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:408  

   7690  1 002326   017165 701000 1                  TSX1    RDGRAN
         1 002327   002332 702000 1                  TSX2    ERR

     1018     7691
     1019     7692    2          RETURN;

   7692  1 002330   200134 221300                    LDX1  ! BFR+1,,AUTO
         1 002331   000001 702211                    TSX2  ! 1,X1

     1020     7693    2   ERR:   ALTRETURN;

   7693  1 002332   200134 221300       ERR          LDX1  ! BFR+1,,AUTO
         1 002333   000000 702211                    TSX2  ! 0,X1

     1021     7694    2          END BLINK;
     1022     7695               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:409  
     1023     7696        /*I*     NAME:     BUILD_FIELD
     1024     7697                 PURPOSE:  To build a field in a key
     1025     7698                 DESCRIPTION:
     1026     7699                      Use a CASE statement to decide if we need to build a nibble
     1027     7700                 or character field.  Only build the field if the data is present.
     1028     7701                 Increment the key pointer to the next field.
     1029     7702        */
     1030     7703    1   BUILD_FIELD: PROC;

   7703  1 002334   200142 741300       BUILD_FIELD  STX1  ! TEMP+1,,AUTO

     1031     7704        /* */
     1032     7705    2   DCL F$ PTR;
     1033     7706    2   DCL CHRS CHAR(LEN) BASED;
     1034     7707        /* */
     1035     7708    3          DO CASE(RECFIELD.FIELD.TYPE(FN));

   7708  1 002335   200064 236100                    LDQ     FN,,AUTO
         1 002336   000003 402007                    MPY     3,DL
         1 002337   200065 470500                    LDP0    RECFIELD$,,AUTO
         1 002340   000100 101506                    MRL     fill='000'O
         1 002341   000001 020001                    ADSC6   1,Q,PR0                  cn=0,n=1
         1 002342   200166 020006                    ADSC6   STEMP_FIELDIN+2,,AUTO    cn=0,n=6
         1 002343   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 002344   000011 136007                    SBLQ    9,DL
         1 002345   000061 116007                    CMPQ    49,DL
         1 002346   002350 602006 1                  TNC     s:7708+11,QL
         1 002347   002442 710000 1                  TRA     s:7716
         1 002350   002431 710000 1                  TRA     s:7712
         1 002351   002431 710000 1                  TRA     s:7712
         1 002352   002442 710000 1                  TRA     s:7716
         1 002353   002442 710000 1                  TRA     s:7716
         1 002354   002442 710000 1                  TRA     s:7716
         1 002355   002442 710000 1                  TRA     s:7716
         1 002356   002442 710000 1                  TRA     s:7716
         1 002357   002442 710000 1                  TRA     s:7716
         1 002360   002442 710000 1                  TRA     s:7716
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:410  
         1 002361   002442 710000 1                  TRA     s:7716
         1 002362   002442 710000 1                  TRA     s:7716
         1 002363   002442 710000 1                  TRA     s:7716
         1 002364   002442 710000 1                  TRA     s:7716
         1 002365   002442 710000 1                  TRA     s:7716
         1 002366   002442 710000 1                  TRA     s:7716
         1 002367   002442 710000 1                  TRA     s:7716
         1 002370   002431 710000 1                  TRA     s:7712
         1 002371   002442 710000 1                  TRA     s:7716
         1 002372   002442 710000 1                  TRA     s:7716
         1 002373   002442 710000 1                  TRA     s:7716
         1 002374   002442 710000 1                  TRA     s:7716
         1 002375   002442 710000 1                  TRA     s:7716
         1 002376   002431 710000 1                  TRA     s:7712
         1 002377   002442 710000 1                  TRA     s:7716
         1 002400   002442 710000 1                  TRA     s:7716
         1 002401   002442 710000 1                  TRA     s:7716
         1 002402   002442 710000 1                  TRA     s:7716
         1 002403   002442 710000 1                  TRA     s:7716
         1 002404   002442 710000 1                  TRA     s:7716
         1 002405   002442 710000 1                  TRA     s:7716
         1 002406   002442 710000 1                  TRA     s:7716
         1 002407   002431 710000 1                  TRA     s:7712
         1 002410   002442 710000 1                  TRA     s:7716
         1 002411   002442 710000 1                  TRA     s:7716
         1 002412   002442 710000 1                  TRA     s:7716
         1 002413   002442 710000 1                  TRA     s:7716
         1 002414   002442 710000 1                  TRA     s:7716
         1 002415   002442 710000 1                  TRA     s:7716
         1 002416   002442 710000 1                  TRA     s:7716
         1 002417   002442 710000 1                  TRA     s:7716
         1 002420   002442 710000 1                  TRA     s:7716
         1 002421   002442 710000 1                  TRA     s:7716
         1 002422   002431 710000 1                  TRA     s:7712
         1 002423   002442 710000 1                  TRA     s:7716
         1 002424   002442 710000 1                  TRA     s:7716
         1 002425   002431 710000 1                  TRA     s:7712
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:411  
         1 002426   002442 710000 1                  TRA     s:7716
         1 002427   002442 710000 1                  TRA     s:7716
         1 002430   002431 710000 1                  TRA     s:7712

     1036     7709    3             CASE(%PDLA_DATATYPE, %PDTA_DATATYPE, %PDNS_DATATYPE,

     1037     7710    3                  %PDFLT_DATATYPE, %PDLE_DATATYPE, %PDTE_DATATYPE,
     1038     7711    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     1039     7712    3                CALL BUILD_NIBFIELD;

   7712  1 002431   002571 701000 1                  TSX1    BUILD_NIBFIELD
         1 002432   000000 011000                    NOP     0

     1040     7713    3                IRKEY$=PINCRC(IRKEY$, (LEN+1)/2);

   7713  1 002433   200061 236100                    LDQ     LEN,,AUTO
         1 002434   000001 036007                    ADLQ    1,DL
         1 002435   000001 772000                    QRL     1
         1 002436   000020 736000                    QLS     16
         1 002437   200063 036100                    ADLQ    IRKEY$,,AUTO
         1 002440   200063 756100                    STQ     IRKEY$,,AUTO
         1 002441   002463 710000 1                  TRA     s:7722

     1041     7714
     1042     7715    3             CASE(ELSE);

     1043     7716    3                F$=PINCRC(REC$, FIELD_START.OFFSET(FN)/9);

   7716  1 002442   200066 471500                    LDP1    START$,,AUTO
         1 002443   200064 720100                    LXL0    FN,,AUTO
         1 002444   100001 236110                    LDQ     1,X0,PR1
         1 002445   000011 506007                    DIV     9,DL
         1 002446   000020 736000                    QLS     16
         1 002447   200062 036100                    ADLQ    REC$,,AUTO
         1 002450   200143 756100                    STQ     F$,,AUTO

     1044     7717    3                IRKEY$->CHRS=F$->CHRS;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:412  

   7717  1 002451   200143 473500                    LDP3    F$,,AUTO
         1 002452   200061 722100                    LXL2    LEN,,AUTO
         1 002453   200063 474500                    LDP4    IRKEY$,,AUTO
         1 002454   040140 100540                    MLR     fill='040'O
         1 002455   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2
         1 002456   400000 000012                    ADSC9   0,,PR4                   cn=0,n=*X2

     1045     7718    3                IRKEY$=PINCRC(IRKEY$, LEN);

   7718  1 002457   200061 236100                    LDQ     LEN,,AUTO
         1 002460   000020 736000                    QLS     16
         1 002461   200063 036100                    ADLQ    IRKEY$,,AUTO
         1 002462   200063 756100                    STQ     IRKEY$,,AUTO

     1046     7719
     1047     7720    3          END;  /* CASE */

     1048     7721
     1049     7722    2          RETURN;

   7722  1 002463   200142 221300                    LDX1  ! TEMP+1,,AUTO
         1 002464   000001 702211                    TSX2  ! 1,X1

     1050     7723    2          END BUILD_FIELD;
     1051     7724               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:413  
     1052     7725        /*I*     NAME:     BUILD_IRKEY
     1053     7726                 PURPOSE:  To build an irel key in either an index granule
     1054     7727                           or a user key buffer.
     1055     7728                 DESCRIPTION:
     1056     7729                 If we're building the key in an index granule, then
     1057     7730                 KEYIN_SIZE is initialized to the number of bytes in this
     1058     7731                 irel key. Set SIZE to KEYIN_SIZE plus the two byte size
     1059     7732                 field and initialize the whole thing to zero. Then, set
     1060     7733                 the size of the irel key. IRKEY$ is used as a floating
     1061     7734                 pointer to the current field of interest.
     1062     7735
     1063     7736                 If we're building the key in a user's key buffer, then
     1064     7737                 set SIZE to F$DCB.KEYL and initialize the user's key buffer
     1065     7738                 to zero.
     1066     7739
     1067     7740                 Loop through the set of fields used to build this key.
     1068     7741                 KFIELD is a list of fields used to build the key.  FN is the
     1069     7742                 field number in RECFIELD.  Call SET_LEN to set the value of
     1070     7743                 LEN, the length of the current field. Call BUILD_FIELD to
     1071     7744                 move the key field into the proper place and increment the
     1072     7745                 IRKEY$ pointer to the next field.
     1073     7746        */
     1074     7747                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:414  
     1075     7748    1   BUILD_IRKEY: PROC(TYPE);

   7748  1 002465   200136 741300       BUILD_IRKEY  STX1  ! SIZE+1,,AUTO

     1076     7749    2          DCL TYPE UBIN;
     1077     7750    2          DCL SIZE UBIN;
     1078     7751    2          DCL I UBIN;
     1079     7752    2          DCL 1 ZAP BASED,
     1080     7753    2               2 * CHAR(SIZE);
     1081     7754        /* */
     1082     7755    3          IF TYPE=%FMREC THEN DO;

   7755  1 002466   200137 470500                    LDP0    @TYPE,,AUTO
         1 002467   000000 235100                    LDA     0,,PR0
         1 002470   000002 115007                    CMPA    2,DL
         1 002471   002516 601000 1                  TNZ     s:7763

     1083     7756    3             SIZE=KEYIN_SIZE+2;

   7756  1 002472   200056 236100                    LDQ     KEYIN_SIZE,,AUTO
         1 002473   000002 036007                    ADLQ    2,DL
         1 002474   200140 756100                    STQ     SIZE,,AUTO

     1084     7757    3             KEY$->ZAP='0'B;

   7757  1 002475   200020 471500                    LDP1    KEY$,,AUTO
         1 002476   000000 620006                    EAX0    0,QL
         1 002477   000140 100400                    MLR     fill='000'O
         1 002500   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 002501   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1085     7758    3             REC$=KEYIN$;

   7758  1 002502   200037 236100                    LDQ     KEYIN$,,AUTO
         1 002503   200062 756100                    STQ     REC$,,AUTO

     1086     7759    3             FM$IRENT.KLB=KEYIN_SIZE;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:415  

   7759  1 002504   200020 471500                    LDP1    KEY$,,AUTO
         1 002505   200056 236100                    LDQ     KEYIN_SIZE,,AUTO
         1 002506   000022 736000                    QLS     18
         1 002507   100000 676100                    ERQ     0,,PR1
         1 002510   377777 376003                    ANQ     131071,DU
         1 002511   100000 656100                    ERSQ    0,,PR1

     1087     7760    3             IRKEY$=PINCRC(KEY$, 2);

   7760  1 002512   200020 236100                    LDQ     KEY$,,AUTO
         1 002513   400000 036007                    ADLQ    -131072,DL
         1 002514   200063 756100                    STQ     IRKEY$,,AUTO

     1088     7761    3             END;

   7761  1 002515   002534 710000 1                  TRA     s:7769

     1089     7762    3          ELSE DO; /* TYPE=%USEREC */

     1090     7763    3             SIZE=F$DCB.KEYL;

   7763  1 002516   200007 471500                    LDP1    JDCB$,,AUTO
         1 002517   100036 236100                    LDQ     30,,PR1
         1 002520   000011 772000                    QRL     9
         1 002521   000777 376007                    ANQ     511,DL
         1 002522   200140 756100                    STQ     SIZE,,AUTO

     1091     7764    3             IRKEY$=B$PS1$;

   7764  1 002523   000000 236000 xsym               LDQ     B$PS1$
         1 002524   200063 756100                    STQ     IRKEY$,,AUTO

     1092     7765    3             IRKEY$->ZAP='0'B;

   7765  1 002525   200063 473500                    LDP3    IRKEY$,,AUTO
         1 002526   200140 720100                    LXL0    SIZE,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:416  
         1 002527   000140 100400                    MLR     fill='000'O
         1 002530   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 002531   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

     1093     7766    3             REC$=KEY$;

   7766  1 002532   200020 236100                    LDQ     KEY$,,AUTO
         1 002533   200062 756100                    STQ     REC$,,AUTO

     1094     7767    3             END;

     1095     7768
     1096     7769    3          DO I=0 TO IRKEYS.K.NFIELDS(INDEX#)-1;

   7769  1 002534   200141 450100                    STZ     I,,AUTO
         1 002535   002557 710000 1                  TRA     s:7773+3

     1097     7770    3             FN=KFIELD.FIELD(I+IRKEYS.K.FIRSTFIELD(INDEX#));

   7770  1 002536   200011 236100                    LDQ     INDEX#,,AUTO
         1 002537   000007 402007                    MPY     7,DL
         1 002540   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 002541   000004 236106                    LDQ     4,QL,PR0
         1 002542   000022 772000                    QRL     18
         1 002543   200141 036100                    ADLQ    I,,AUTO
         1 002544   200067 471500                    LDP1    KFIELD$,,AUTO
         1 002545   000100 101506                    MRL     fill='000'O
         1 002546   100002 000001                    ADSC9   2,Q,PR1                  cn=0,n=1
         1 002547   200064 000004                    ADSC9   FN,,AUTO                 cn=0,n=4

     1098     7771    3             CALL SET_LEN;

   7771  1 002550   022612 701000 1                  TSX1    SET_LEN
         1 002551   000000 011000                    NOP     0

     1099     7772    3             CALL BUILD_FIELD;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:417  
   7772  1 002552   002334 701000 1                  TSX1    BUILD_FIELD
         1 002553   000000 011000                    NOP     0

     1100     7773    3          END;  /* DO I */

   7773  1 002554   200141 235100                    LDA     I,,AUTO
         1 002555   000001 035007                    ADLA    1,DL
         1 002556   200141 755100                    STA     I,,AUTO
         1 002557   200011 236100                    LDQ     INDEX#,,AUTO
         1 002560   000007 402007                    MPY     7,DL
         1 002561   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 002562   000004 236106                    LDQ     4,QL,PR0
         1 002563   777777 376007                    ANQ     -1,DL
         1 002564   200141 116100                    CMPQ    I,,AUTO
         1 002565   002567 600000 1                  TZE     s:7775
         1 002566   002536 603000 1                  TRC     s:7770

     1101     7774
     1102     7775    2          RETURN;

   7775  1 002567   200136 221300                    LDX1  ! SIZE+1,,AUTO
         1 002570   000001 702211                    TSX2  ! 1,X1

     1103     7776    2          END BUILD_IRKEY;
     1104     7777               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:418  
     1105     7778        /*I*     NAME:     BUILD_NIBFIELD
     1106     7779                 PURPOSE:  To build a nibble field
     1107     7780                 DESCRIPTION:
     1108     7781                      This routine moves a packed decimal field.  Because of the
     1109     7782                 %#@&in' hardware that we have to run on, we can't use bit string
     1110     7783                 instructions to move data unless the description is double word
     1111     7784                 aligned.  Since user passed buffers only have to be character
     1112     7785                 aligned, and there is an extra bit left over from each byte, we
     1113     7786                 have to do a lot of chicken waving to get this to work.
     1114     7787
     1115     7788                      First, we build F$ to point to the field in the user record
     1116     7789                 that we want to move.  ODD indicates whether we are starting on
     1117     7790                 an odd nibble boundary in the string.
     1118     7791
     1119     7792                      We will now proceed to move one nibble at a time to the
     1120     7793                 place of interest.  First move the whole byte from the source
     1121     7794                 to a temp.  Then move the nibble out of that byte to a nibble
     1122     7795                 sized temp.  Next pull the byte out of the destination field
     1123     7796                 that we want to change.  Store the nibble that is being changed
     1124     7797                 into that byte.  Now the byte gets store back where it was.
     1125     7798                 This way only the nibble that we want to move gets changed.
     1126     7799        */
     1127     7800                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:419  
     1128     7801    1   BUILD_NIBFIELD: PROC;

   7801  1 002571   200144 741300       BUILD_NIBFI* STX1  ! LCDA+1,,AUTO

     1129     7802    2          DCL ODD UBIN;
     1130     7803    2          DCL F$ PTR;
     1131     7804    2          DCL TEMP UBIN(4);
     1132     7805    2          DCL BTEMP UBIN(9) CALIGNED;
     1133     7806    2          DCL 1 BTEMPS REDEF BTEMP CALIGNED,
     1134     7807    2               2 * BIT(1) UNAL,
     1135     7808    2               2 UPPER UBIN(4) UNAL,
     1136     7809    2               2 LOWER UBIN(4) UNAL;
     1137     7810    2          DCL I UBIN;
     1138     7811    2          DCL BYT(0:0) UBIN(9) CALIGNED BASED;
     1139     7812        /* */
     1140     7813    2          F$=PINCRC(REC$, FIELD_START.OFFSET(FN)/9);

   7813  1 002572   200066 470500                    LDP0    START$,,AUTO
         1 002573   200064 720100                    LXL0    FN,,AUTO
         1 002574   000001 236110                    LDQ     1,X0,PR0
         1 002575   000011 506007                    DIV     9,DL
         1 002576   000020 736000                    QLS     16
         1 002577   200062 036100                    ADLQ    REC$,,AUTO
         1 002600   200146 756100                    STQ     F$,,AUTO

     1141     7814    2          ODD=MOD(FIELD_START.OFFSET(FN), 9);

   7814  1 002601   000001 236110                    LDQ     1,X0,PR0
         1 002602   000011 506007                    DIV     9,DL
         1 002603   200145 755100                    STA     ODD,,AUTO

     1142     7815    2          IF ODD > 0 THEN

   7815  1 002604   000000 115003                    CMPA    0,DU
         1 002605   002610 600000 1                  TZE     s:7818

     1143     7816    2             ODD=1;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:420  

   7816  1 002606   000001 236007                    LDQ     1,DL
         1 002607   200145 756100                    STQ     ODD,,AUTO

     1144     7817
     1145     7818    3          DO I=0 TO LEN-1;

   7818  1 002610   200151 450100                    STZ     I,,AUTO
         1 002611   002676 710000 1                  TRA     s:7831+3

     1146     7819    3             BTEMP=F$->BYT((I+ODD)/2);

   7819  1 002612   200151 236100                    LDQ     I,,AUTO
         1 002613   200145 036100                    ADLQ    ODD,,AUTO
         1 002614   000001 772000                    QRL     1
         1 002615   200146 470500                    LDP0    F$,,AUTO
         1 002616   000100 100506                    MLR     fill='000'O
         1 002617   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 002620   200150 000001                    ADSC9   BTEMP,,AUTO              cn=0,n=1

     1147     7820    3             IF MOD(I+ODD, 2) = 1 THEN

   7820  1 002621   200151 236100                    LDQ     I,,AUTO
         1 002622   200145 036100                    ADLQ    ODD,,AUTO
         1 002623   000001 376007                    ANQ     1,DL
         1 002624   000001 116007                    CMPQ    1,DL
         1 002625   002634 601000 1                  TNZ     s:7823

     1148     7821    3                TEMP=BTEMPS.LOWER;

   7821  1 002626   200150 236100                    LDQ     BTEMP,,AUTO
         1 002627   000033 772000                    QRL     27
         1 002630   000017 376007                    ANQ     15,DL
         1 002631   000040 736000                    QLS     32
         1 002632   200147 756100                    STQ     TEMP,,AUTO
         1 002633   002641 710000 1                  TRA     s:7825

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:421  
     1149     7822    3             ELSE
     1150     7823    3                TEMP=BTEMPS.UPPER;

   7823  1 002634   200150 236100                    LDQ     BTEMP,,AUTO
         1 002635   000037 772000                    QRL     31
         1 002636   000017 376007                    ANQ     15,DL
         1 002637   000040 736000                    QLS     32
         1 002640   200147 756100                    STQ     TEMP,,AUTO

     1151     7824
     1152     7825    3             BTEMP=IRKEY$->BYT(I/2);

   7825  1 002641   200151 236100                    LDQ     I,,AUTO
         1 002642   000001 772000                    QRL     1
         1 002643   200063 471500                    LDP1    IRKEY$,,AUTO
         1 002644   000100 100506                    MLR     fill='000'O
         1 002645   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1
         1 002646   200150 000001                    ADSC9   BTEMP,,AUTO              cn=0,n=1

     1153     7826    3             IF MOD(I,2) = 1 THEN

   7826  1 002647   200151 236100                    LDQ     I,,AUTO
         1 002650   000001 376007                    ANQ     1,DL
         1 002651   000001 116007                    CMPQ    1,DL
         1 002652   002661 601000 1                  TNZ     s:7829

     1154     7827    3                BTEMPS.LOWER=TEMP;

   7827  1 002653   200147 236100                    LDQ     TEMP,,AUTO
         1 002654   000005 772000                    QRL     5
         1 002655   200150 676100                    ERQ     BTEMP,,AUTO
         1 002656   017000 376003                    ANQ     7680,DU
         1 002657   200150 656100                    ERSQ    BTEMP,,AUTO
         1 002660   002666 710000 1                  TRA     s:7830

     1155     7828    3             ELSE
     1156     7829    3                BTEMPS.UPPER=TEMP;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:422  

   7829  1 002661   200147 236100                    LDQ     TEMP,,AUTO
         1 002662   000001 772000                    QRL     1
         1 002663   200150 676100                    ERQ     BTEMP,,AUTO
         1 002664   360000 376003                    ANQ     122880,DU
         1 002665   200150 656100                    ERSQ    BTEMP,,AUTO

     1157     7830    3             IRKEY$->BYT(I/2)=BTEMP;

   7830  1 002666   200151 236100                    LDQ     I,,AUTO
         1 002667   000001 772000                    QRL     1
         1 002670   000106 100500                    MLR     fill='000'O
         1 002671   200150 000001                    ADSC9   BTEMP,,AUTO              cn=0,n=1
         1 002672   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1

     1158     7831    3          END;  /* DO I */

   7831  1 002673   200151 235100                    LDA     I,,AUTO
         1 002674   000001 035007                    ADLA    1,DL
         1 002675   200151 755100                    STA     I,,AUTO
         1 002676   200151 236100                    LDQ     I,,AUTO
         1 002677   200061 116100                    CMPQ    LEN,,AUTO
         1 002700   002612 602000 1                  TNC     s:7819

     1159     7832
     1160     7833
     1161     7834    2          RETURN;

   7834  1 002701   200144 221300                    LDX1  ! LCDA+1,,AUTO
         1 002702   000001 702211                    TSX2  ! 1,X1

     1162     7835    2          END BUILD_NIBFIELD;
     1163     7836               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:423  
     1164     7837        /*I*     NAME:     CALCSEG
     1165     7838                 PURPOSE:  To calculate the number of new Master Index
     1166     7839                           Segments (MISEGs), or actually the number of
     1167     7840                           additional segment words, required for this record
     1168     7841                           or record chunk.
     1169     7842                 DESCRIPTION:
     1170     7843                      If we currently don't have a data buffer in memory, read one
     1171     7844                 in, if it exists.  Set AVAIL to the amount of space available
     1172     7845                 in the data granule.
     1173     7846
     1174     7847                      If this file has alternate indexes, then make sure that
     1175     7848                 enough of the record gets stored in the data granule so that
     1176     7849                 we can access all of the key information we need.
     1177     7850
     1178     7851                      Each data granule can hold a maximum of 1022 words,
     1179     7852                 1024 minus 2 words of header.  Each MISEG used to indicate
     1180     7853                 where a record or piece of record is stored requires 2 words.
     1181     7854                 It's possible for F$DCB.UBYTES, the number of bytes remaining
     1182     7855                 to be stored, to be greater than will fit in the current
     1183     7856                 data granule.  It may be large enough to require storage on
     1184     7857                 multiple data granules.  If the file is compressed, we can't
     1185     7858                 tell how much room it will take, so start with one MISEG or
     1186     7859                 2 words.  Otherwise, if F$DCB.UBYTES will fit in the
     1187     7860                 available space in the current data granule, we only need
     1188     7861                 one MISEG or two words.  If UBYTES is larger than that, we
     1189     7862                 may need multiple MISEGs, one for each different data granule
     1190     7863                 to be used.  So, compute the number of additional data
     1191     7864                 granules needed to store F$DCB.UBYTES - AVAIL bytes and
     1192     7865                 multiply that by 2.  If there's room left on the current data
     1193     7866                 granule, add 2 more words since that space will be used and
     1194     7867                 we'll need an MISEG for it too.
     1195     7868        */
     1196     7869                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:424  
     1197     7870    1   CALCSEG: PROC ALTRET;

   7870  1 002703   200120 741300       CALCSEG      STX1  ! UNIQUE+1,,AUTO

     1198     7871    2          DCL AVAIL UBIN;
     1199     7872    2          DCL MIN_SIZE UBIN;
     1200     7873        /* */
     1201     7874    2          IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= FM$CFU.GDA THEN

   7874  1 002704   200040 236100                    LDQ     DBUF$,,AUTO
         1 002705   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002706   002715 600000 1                  TZE     s:7875
         1 002707   200010 470500                    LDP0    CFU$,,AUTO
         1 002710   200007 471500                    LDP1    JDCB$,,AUTO
         1 002711   100115 236100                    LDQ     77,,PR1
         1 002712   000005 676100                    ERQ     5,,PR0
         1 002713   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002714   002771 600000 1                  TZE     s:7887

     1202     7875    2             IF FM$CFU.GDA = 0 THEN

   7875  1 002715   200010 470500                    LDP0    CFU$,,AUTO
         1 002716   000005 236100                    LDQ     5,,PR0
         1 002717   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 002720   002723 601000 1                  TNZ     s:7879

     1203     7876    2                AVAIL=0;

   7876  1 002721   200121 450100                    STZ     AVAIL,,AUTO
         1 002722   002776 710000 1                  TRA     s:7889

     1204     7877    2             ELSE
     1205     7878    3                DO;   /* READ IN DATA GRAN */

     1206     7879    3                DA=FM$CFU.GDA;

   7879  1 002723   000005 236100                    LDQ     5,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:425  
         1 002724   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002725   200021 756100                    STQ     DA,,AUTO

     1207     7880    3                F$DCB.LVL=7;

   7880  1 002726   200007 471500                    LDP1    JDCB$,,AUTO
         1 002727   070000 236003                    LDQ     28672,DU
         1 002730   100067 256100                    ORSQ    55,,PR1

     1208     7881    3                DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));

   7881  1 002731   100115 236100                    LDQ     77,,PR1
         1 002732   000033 772000                    QRL     27
         1 002733   000037 376007                    ANQ     31,DL
         1 002734   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 002735   200040 756100                    STQ     DBUF$,,AUTO

     1209     7882    3                IF F$DCB.BFR.DA(0) ~= DA OR DBUF$ = ADDR(NIL) THEN

   7882  1 002736   100115 236100                    LDQ     77,,PR1
         1 002737   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002740   200021 116100                    CMPQ    DA,,AUTO
         1 002741   002745 601000 1                  TNZ     s:7883
         1 002742   200040 236100                    LDQ     DBUF$,,AUTO
         1 002743   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002744   002763 601000 1                  TNZ     s:7884

     1210     7883    3                   CALL FMD$REDBUF(DBUF$, 0, DA,, 0) ALTRET(DATAERR);

   7883  1 002745   000000 236000 2                  LDQ     0
         1 002746   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 002747   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 002750   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 002751   200021 633500                    EPPR3   DA,,AUTO
         1 002752   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 002753   000000 236000 2                  LDQ     0
         1 002754   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:426  
         1 002755   200040 634500                    EPPR4   DBUF$,,AUTO
         1 002756   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 002757   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 002760   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 002761   000000 701000 xent               TSX1    FMD$REDBUF
         1 002762   003057 702000 1                  TSX2    DATAERR

     1211     7884    3                AVAIL=DBUF$->FM$GRAN.AVAIL*4;

   7884  1 002763   200040 470500                    LDP0    DBUF$,,AUTO
         1 002764   000001 236100                    LDQ     1,,PR0
         1 002765   000002 736000                    QLS     2
         1 002766   007774 376007                    ANQ     4092,DL
         1 002767   200121 756100                    STQ     AVAIL,,AUTO

     1212     7885    3                END;  /* READ IN DATA GRAN */

   7885  1 002770   002776 710000 1                  TRA     s:7889

     1213     7886    2          ELSE
     1214     7887    2             AVAIL=DBUF$->FM$GRAN.AVAIL*4;

   7887  1 002771   200040 473500                    LDP3    DBUF$,,AUTO
         1 002772   300001 236100                    LDQ     1,,PR3
         1 002773   000002 736000                    QLS     2
         1 002774   007774 376007                    ANQ     4092,DL
         1 002775   200121 756100                    STQ     AVAIL,,AUTO

     1215     7888
     1216     7889    2          IF ALTKEY$ ~= ADDR(NIL) AND FAK = 1 THEN

   7889  1 002776   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 002777   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 003000   003031 600000 1                  TZE     s:7902
         1 003001   200043 235100                    LDA     FAK,,AUTO
         1 003002   000001 115007                    CMPA    1,DL
         1 003003   003031 601000 1                  TNZ     s:7902
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:427  

     1217     7890    3             DO;   /* MAY NEED EXTRA SPACE */

     1218     7891    3             IF ORG = %IREL# THEN

   7891  1 003004   200022 235100                    LDA     ORG,,AUTO
         1 003005   000015 115007                    CMPA    13,DL
         1 003006   003013 601000 1                  TNZ     s:7894

     1219     7892    3                MIN_SIZE=IRKEYS.MINSIZE;

   7892  1 003007   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 003010   000001 235100                    LDA     1,,PR0
         1 003011   200122 755100                    STA     MIN_SIZE,,AUTO
         1 003012   003017 710000 1                  TRA     s:7895

     1220     7893    3             ELSE
     1221     7894    3                MIN_SIZE=ALTKEYS.MINWRSIZ;

   7894  1 003013   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 003014   000000 236100                    LDQ     0,,PR0
         1 003015   007777 376007                    ANQ     4095,DL
         1 003016   200122 756100                    STQ     MIN_SIZE,,AUTO

     1222     7895    3             IF MIN_SIZE > AVAIL THEN

   7895  1 003017   200121 236100                    LDQ     AVAIL,,AUTO
         1 003020   200122 116100                    CMPQ    MIN_SIZE,,AUTO
         1 003021   003031 603000 1                  TRC     s:7902

     1223     7896    4                DO;   /* ALLOCATE ANOTHER DATA GRAN */

     1224     7897    4                CALL ALLOCATE ALTRET(ERR);

   7897  1 003022   000343 701000 1                  TSX1    ALLOCATE
         1 003023   003061 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:428  
     1225     7898    4                AVAIL=DBUF$->FM$GRAN.AVAIL*4;

   7898  1 003024   200040 470500                    LDP0    DBUF$,,AUTO
         1 003025   000001 236100                    LDQ     1,,PR0
         1 003026   000002 736000                    QLS     2
         1 003027   007774 376007                    ANQ     4092,DL
         1 003030   200121 756100                    STQ     AVAIL,,AUTO

     1226     7899    4                END;  /* ALLOCATE ANOTHER DATA GRAN */

     1227     7900    3             END;  /* MAY NEED EXTRA SPACE */

     1228     7901
     1229     7902    2          IF F$DCB.COMP OR F$DCB.UBYTES <= AVAIL THEN

   7902  1 003031   200007 470500                    LDP0    JDCB$,,AUTO
         1 003032   000031 236100                    LDQ     25,,PR0
         1 003033   000100 316007                    CANQ    64,DL
         1 003034   003040 601000 1                  TNZ     s:7903
         1 003035   200121 236100                    LDQ     AVAIL,,AUTO
         1 003036   000076 116100                    CMPQ    62,,PR0
         1 003037   003043 602000 1                  TNC     s:7906

     1230     7903    2             SEGCNT=2; /* Compressed or will fit in current data gran */

   7903  1 003040   000002 235007                    LDA     2,DL
         1 003041   200035 755100                    STA     SEGCNT,,AUTO
         1 003042   003055 710000 1                  TRA     s:7911

     1231     7904    2          ELSE
     1232     7905    3             DO;   /* May need multiple segs */

     1233     7906    3             SEGCNT=( (F$DCB.UBYTES-AVAIL+(4096-8-1))/(4096-8) )*2;

   7906  1 003043   000076 236100                    LDQ     62,,PR0
         1 003044   200121 136100                    SBLQ    AVAIL,,AUTO
         1 003045   007767 036007                    ADLQ    4087,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:429  
         1 003046   007770 506007                    DIV     4088,DL
         1 003047   000001 736000                    QLS     1
         1 003050   200035 756100                    STQ     SEGCNT,,AUTO

     1234     7907    3             IF AVAIL > 0 THEN

   7907  1 003051   200121 235100                    LDA     AVAIL,,AUTO
         1 003052   003055 600000 1                  TZE     s:7911

     1235     7908    3                SEGCNT=SEGCNT+2;

   7908  1 003053   000002 236007                    LDQ     2,DL
         1 003054   200035 056100                    ASQ     SEGCNT,,AUTO

     1236     7909    3             END;  /* May need multiple segs */

     1237     7910
     1238     7911    2          RETURN;

   7911  1 003055   200120 221300                    LDX1  ! UNIQUE+1,,AUTO
         1 003056   000001 702211                    TSX2  ! 1,X1

   7908  1 003057                       DATAERR      null
     1239     7912    2   DATAERR: ;
     1240     7913    2          CALL DATAERROR;

   7913  1 003057   005205 701000 1                  TSX1    DATAERROR
         1 003060   000000 011000                    NOP     0

     1241     7914    2   ERR:   ALTRETURN;

   7914  1 003061   200120 221300       ERR          LDX1  ! UNIQUE+1,,AUTO
         1 003062   000000 702211                    TSX2  ! 0,X1

     1242     7915    2          END CALCSEG;
     1243     7916               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:430  
     1244     7917        /*I*     NAME:     CALC_INSRT
     1245     7918                 PURPOSE:  To calculate the insertion point of a key or segment
     1246     7919                 DESCRIPTION:
     1247     7920                      ALTSEG indicates whether or not we are inserting in the
     1248     7921                 middle of a list of duplicates.  This is done when a record
     1249     7922                 expands, and is tricky.
     1250     7923
     1251     7924                      TSIZE indicates how many segments there are between the
     1252     7925                 beginning of the key information and the first key, if there
     1253     7926                 is one.  If we are adding a key, and there are no segments
     1254     7927                 at the beginning, then we want to indicate that the key is
     1255     7928                 being inserted at the beginning.  Otherwise, we check KEYCNT
     1256     7929                 to decide if we are going to insert at the end or in the
     1257     7930                 middle.
     1258     7931
     1259     7932                      If this is an alternate index, and we are adding a new
     1260     7933                 segment, as opposed to adding a duplicate key entry, then
     1261     7934                 we have to find the correct insertion point.  First, position
     1262     7935                 to the beginning of the key.  Then loop through the list of
     1263     7936                 segments to find the correct duplicate key that we are adding
     1264     7937                 the segment to.  Now, position to the next record.  If there
     1265     7938                 is a next record for this key, this will position us just
     1266     7939                 past the end of the duplicate key, which is where we want to
     1267     7940                 add the new segment.  In this case, use SEGX to determine
     1268     7941                 whether we are now at the beginning or middle of a granule.
     1269     7942                 If there is no next record for this key, then we're at the
     1270     7943                 end of the list of duplicates.  In this case, we want to act
     1271     7944                 as though we're adding a new duplicate except that we also
     1272     7945                 need to set SEGX and SEG$ again since they won't be correct.
     1273     7946
     1274     7947                      If we are adding a duplicate key, then we want to add it
     1275     7948                 to the end of the list of duplicates.  Position to the next
     1276     7949                 key to get to the end of the duplicates list.  Then, back up
     1277     7950                 the record pointer by one.  If this puts us at the beginning
     1278     7951                 of a granule, then go back one granule, and try to insert at
     1279     7952                 the end.  Otherwise, we are in the middle.
     1280     7953        */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:431  
     1281     7954                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:432  
     1282     7955    1   CALC_INSRT: PROC ALTRET;

   7955  1 003063   200130 741300       CALC_INSRT   STX1  ! I+1,,AUTO

     1283     7956    2          DCL TSIZE SBIN;
     1284     7957        /* */
     1285     7958
     1286     7959    2          IF KEYCNT = 0 THEN

   7959  1 003064   200017 235100                    LDA     KEYCNT,,AUTO
         1 003065   003100 601000 1                  TNZ     s:7962

     1287     7960    2             TSIZE=FM$GRAN.NAVX-FM$GRAN.FCEX-SIZEW(FM$KEYTBL);

   7960  1 003066   200024 470500                    LDP0    BUF$,,AUTO
         1 003067   000002 236100                    LDQ     2,,PR0
         1 003070   000022 772000                    QRL     18
         1 003071   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 003072   000001 236100                    LDQ     1,,PR0
         1 003073   000022 772000                    QRL     18
         1 003074   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 003075   000106 136007                    SBLQ    70,DL
         1 003076   200131 756100                    STQ     TSIZE,,AUTO
         1 003077   003132 710000 1                  TRA     s:7967

     1288     7961    2          ELSE
     1289     7962    2             IF BOUND = 1 THEN

   7962  1 003100   200016 236100                    LDQ     BOUND,,AUTO
         1 003101   000001 116007                    CMPQ    1,DL
         1 003102   003117 601000 1                  TNZ     s:7965

     1290     7963    2                TSIZE=FM$KEYTBL(1)+512-FM$GRAN.FCEX-SIZEW(FM$KEYTBL);

   7963  1 003103   200024 470500                    LDP0    BUF$,,AUTO
         1 003104   000002 236100                    LDQ     2,,PR0
         1 003105   000022 772000                    QRL     18
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:433  
         1 003106   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 003107   200025 471500                    LDP1    KTPTR$,,AUTO
         1 003110   100000 236100                    LDQ     0,,PR1
         1 003111   000022 772000                    QRL     18
         1 003112   000777 376007                    ANQ     511,DL
         1 003113   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 003114   000672 036007                    ADLQ    442,DL
         1 003115   200131 756100                    STQ     TSIZE,,AUTO
         1 003116   003132 710000 1                  TRA     s:7967

     1291     7964    2             ELSE
     1292     7965    2                TSIZE=FM$KEYTBL(1)-FM$GRAN.FCEX-SIZEW(FM$KEYTBL);

   7965  1 003117   200024 470500                    LDP0    BUF$,,AUTO
         1 003120   000002 236100                    LDQ     2,,PR0
         1 003121   000022 772000                    QRL     18
         1 003122   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 003123   200025 471500                    LDP1    KTPTR$,,AUTO
         1 003124   100000 236100                    LDQ     0,,PR1
         1 003125   000022 772000                    QRL     18
         1 003126   000777 376007                    ANQ     511,DL
         1 003127   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 003130   000106 136007                    SBLQ    70,DL
         1 003131   200131 756100                    STQ     TSIZE,,AUTO

     1293     7966
     1294     7967    2          IF ADDFLG = %KEY THEN

   7967  1 003132   200047 235100                    LDA     ADDFLG,,AUTO
         1 003133   003155 601000 1                  TNZ     s:7979

     1295     7968    3             DO;   /* KEY */

     1296     7969    3             IF CRECX = 1 AND TSIZE = 0 THEN

   7969  1 003134   200015 235100                    LDA     CRECX,,AUTO
         1 003135   000001 115007                    CMPA    1,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:434  
         1 003136   003143 601000 1                  TNZ     s:7972
         1 003137   000000 116003                    CMPQ    0,DU
         1 003140   003143 601000 1                  TNZ     s:7972

     1297     7970    3                INSRT=%BEGIN;

   7970  1 003141   200052 450100                    STZ     INSRT,,AUTO
         1 003142   003340 710000 1                  TRA     s:8034

     1298     7971    3             ELSE
     1299     7972    3                IF CRECX > KEYCNT THEN

   7972  1 003143   200015 236100                    LDQ     CRECX,,AUTO
         1 003144   003147 604000 1                  TMI     s:7973
         1 003145   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 003146   003152 604400 1                  TMOZ    s:7975

     1300     7973    3                   INSRT=%END;

   7973  1 003147   000002 235007                    LDA     2,DL
         1 003150   200052 755100                    STA     INSRT,,AUTO
         1 003151   003340 710000 1                  TRA     s:8034

     1301     7974    3                ELSE
     1302     7975    3                   INSRT=%MIDDLE;

   7975  1 003152   000001 235007                    LDA     1,DL
         1 003153   200052 755100                    STA     INSRT,,AUTO

     1303     7976    3             END;  /* KEY */

   7976  1 003154   003340 710000 1                  TRA     s:8034

     1304     7977    2          ELSE
     1305     7978    3             DO;   /* SEGMENT */

     1306     7979    3             IF INDEX# > 0 AND ANEWSEG = %YESS THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:435  

   7979  1 003155   200011 235100                    LDA     INDEX#,,AUTO
         1 003156   003222 600000 1                  TZE     NORM_SEG
         1 003157   200057 235100                    LDA     ANEWSEG,,AUTO
         1 003160   000001 115007                    CMPA    1,DL
         1 003161   003222 601000 1                  TNZ     NORM_SEG

     1307     7980    4                DO;   /* POSITION TO INSERTION POINT */

     1308     7981    4                CALL CURKEY ALTRET(ERR);

   7981  1 003162   005060 701000 1                  TSX1    CURKEY
         1 003163   003342 702000 1                  TSX2    ERR

     1309     7982    5                DO WHILE (FM$MISEG ~= FM_MISEG);

   7982  1 003164   200014 470500                    LDP0    SEG$,,AUTO
         1 003165   000100 106500                    CMPC    fill='000'O
         1 003166   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 003167   200027 000010                    ADSC9   FM_MISEG,,AUTO           cn=0,n=8
         1 003170   003200 600000 1                  TZE     s:7985

     1310     7983    5                   CALL NXTSEG ALTRET(ERR);

   7983  1 003171   015351 701000 1                  TSX1    NXTSEG
         1 003172   003342 702000 1                  TSX2    ERR

     1311     7984    5                END;

   7984  1 003173   200014 470500                    LDP0    SEG$,,AUTO
         1 003174   000100 106500                    CMPC    fill='000'O
         1 003175   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 003176   200027 000010                    ADSC9   FM_MISEG,,AUTO           cn=0,n=8
         1 003177   003171 601000 1                  TNZ     s:7983

     1312     7985    4                CALL NXTRECNM

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:436  
   7985  1 003200   015200 701000 1                  TSX1    NXTRECNM
         1 003201   003212 702000 1                  TSX2    s:7993

     1313     7986    5                WHENRETURN DO;

     1314     7987    5                   IF SEGX = SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL) THEN

   7987  1 003202   200013 235100                    LDA     SEGX,,AUTO
         1 003203   000113 115007                    CMPA    75,DL
         1 003204   003207 601000 1                  TNZ     s:7990

     1315     7988    5                      INSRT=%BEGIN;

   7988  1 003205   200052 450100                    STZ     INSRT,,AUTO
         1 003206   003211 710000 1                  TRA     s:7991

     1316     7989    5                   ELSE
     1317     7990    5                      INSRT=%MIDDLE;

   7990  1 003207   000001 236007                    LDQ     1,DL
         1 003210   200052 756100                    STQ     INSRT,,AUTO

     1318     7991    5                   END;

   7991  1 003211   003221 710000 1                  TRA     s:7998

     1319     7992    5                WHENALTRETURN DO;

     1320     7993    5                   IF B$JIT.ERR.CODE~=%E$KEYCHNG THEN

   7993  1 003212   000000 470400 xsym               LDP0    B$JIT$
         1 003213   000012 236100                    LDQ     10,,PR0
         1 003214   377770 376007                    ANQ     131064,DL
         1 003215   001300 116007                    CMPQ    704,DL
         1 003216   003342 601000 1                  TNZ     ERR

     1321     7994    5                      GOTO ERR;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:437  
     1322     7995    5                   B$JIT.ERR='0'B;

   7995  1 003217   000012 450100                    STZ     10,,PR0

     1323     7996    5                   GOTO NORM_SEG;

   7996  1 003220   003222 710000 1                  TRA     NORM_SEG

     1324     7997    5                   END;
     1325     7998    4                END;  /* POSITION TO INSERTION POINT */

   7998  1 003221   003340 710000 1                  TRA     s:8034

     1326     7999    3             ELSE
     1327     8000    4                DO;   /* NORMAL SEG */

     1328     8001    4   NORM_SEG:    CALL NXTKEY ALTRET(EOF);

   8001  1 003222   015105 701000 1     NORM_SEG     TSX1    NXTKEY
         1 003223   003266 702000 1                  TSX2    EOF

     1329     8002    4                CRECX=CRECX-1;

   8002  1 003224   200015 235100                    LDA     CRECX,,AUTO
         1 003225   000001 135007                    SBLA    1,DL
         1 003226   200015 755100                    STA     CRECX,,AUTO

     1330     8003    4                F$DCB.CRECX=CRECX;

   8003  1 003227   000000 620005                    EAX0    0,AL
         1 003230   200007 470500                    LDP0    JDCB$,,AUTO
         1 003231   000067 440100                    SXL0    55,,PR0

     1331     8004    4                IF POFFW(KEY$, BUF$) = FM$GRAN.FCEX+SIZEW(FM$KEYTBL) THEN

   8004  1 003232   200024 235100                    LDA     BUF$,,AUTO
         1 003233   000022 771000                    ARL     18
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:438  
         1 003234   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 003235   200020 236100                    LDQ     KEY$,,AUTO
         1 003236   000022 772000                    QRL     18
         1 003237   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 003240   200024 471500                    LDP1    BUF$,,AUTO
         1 003241   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 003242   100002 236100                    LDQ     2,,PR1
         1 003243   000022 772000                    QRL     18
         1 003244   000106 036007                    ADLQ    70,DL
         1 003245   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 003246   200167 236100                    LDQ     STEMP_FIELDIN+3,,AUTO
         1 003247   200170 116100                    CMPQ    STEMP_FIELDIN+4,,AUTO
         1 003250   003263 601000 1                  TNZ     s:8012

     1332     8005    5                   DO;   /* At beginning of gran */

     1333     8006    5                   CALL BLINK ALTRET(ERR);

   8006  1 003251   002314 701000 1                  TSX1    BLINK
         1 003252   003342 702000 1                  TSX2    ERR

     1334     8007    5                   INSRT=%END;

   8007  1 003253   000002 235007                    LDA     2,DL
         1 003254   200052 755100                    STA     INSRT,,AUTO

     1335     8008    5                   CRECX=KEYCNT;

   8008  1 003255   200017 236100                    LDQ     KEYCNT,,AUTO
         1 003256   200015 756100                    STQ     CRECX,,AUTO

     1336     8009    5                   F$DCB.CRECX=CRECX;

   8009  1 003257   000000 620006                    EAX0    0,QL
         1 003260   200007 470500                    LDP0    JDCB$,,AUTO
         1 003261   000067 440100                    SXL0    55,,PR0

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:439  
     1337     8010    5                   END;  /* At beginning of gran */

   8010  1 003262   003265 710000 1                  TRA     s:8014

     1338     8011    4                ELSE
     1339     8012    4                   INSRT=%MIDDLE;

   8012  1 003263   000001 235007                    LDA     1,DL
         1 003264   200052 755100                    STA     INSRT,,AUTO

     1340     8013
     1341     8014    5                DO WHILE ('0'B);

   8014  1 003265   003305 710000 1                  TRA     s:8023

     1342     8015    5   EOF:            IF B$JIT.ERR.CODE ~= %E$EOF THEN

   8015  1 003266   000000 470400 xsym  EOF          LDP0    B$JIT$
         1 003267   000012 236100                    LDQ     10,,PR0
         1 003270   377770 376007                    ANQ     131064,DL
         1 003271   000060 116007                    CMPQ    48,DL
         1 003272   003275 600000 1                  TZE     s:8017

     1343     8016    5                      ALTRETURN;

   8016  1 003273   200130 221300                    LDX1  ! I+1,,AUTO
         1 003274   000000 702211                    TSX2  ! 0,X1

     1344     8017    5                   B$JIT.ERR='0'B;

   8017  1 003275   000012 450100                    STZ     10,,PR0

     1345     8018    5                   INSRT=%END;

   8018  1 003276   000002 235007                    LDA     2,DL
         1 003277   200052 755100                    STA     INSRT,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:440  
     1346     8019    5                   CRECX=KEYCNT;

   8019  1 003300   200017 236100                    LDQ     KEYCNT,,AUTO
         1 003301   200015 756100                    STQ     CRECX,,AUTO

     1347     8020    5                   F$DCB.CRECX=CRECX;

   8020  1 003302   000000 620006                    EAX0    0,QL
         1 003303   200007 471500                    LDP1    JDCB$,,AUTO
         1 003304   100067 440100                    SXL0    55,,PR1

     1348     8021    5                END;

     1349     8022
     1350     8023    4                IF INDEX# > 0 AND ANEWSEG=%YESS THEN

   8023  1 003305   200011 236100                    LDQ     INDEX#,,AUTO
         1 003306   003340 600000 1                  TZE     s:8034
         1 003307   200057 235100                    LDA     ANEWSEG,,AUTO
         1 003310   000001 115007                    CMPA    1,DL
         1 003311   003340 601000 1                  TNZ     s:8034

     1351     8024    5                   DO;  /* Not a new record */

     1352     8025    5                   IF INSRT=%END THEN

   8025  1 003312   200052 235100                    LDA     INSRT,,AUTO
         1 003313   000002 115007                    CMPA    2,DL
         1 003314   003322 601000 1                  TNZ     s:8027

     1353     8026    5                      SEGX=FM$GRAN.NAVX;

   8026  1 003315   200024 470500                    LDP0    BUF$,,AUTO
         1 003316   000001 236100                    LDQ     1,,PR0
         1 003317   000022 772000                    QRL     18
         1 003320   200013 756100                    STQ     SEGX,,AUTO
         1 003321   003331 710000 1                  TRA     s:8028
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:441  

     1354     8027    5                   ELSE SEGX=POFFW(KEY$,BUF$);

   8027  1 003322   200024 235100                    LDA     BUF$,,AUTO
         1 003323   000022 771000                    ARL     18
         1 003324   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 003325   200020 236100                    LDQ     KEY$,,AUTO
         1 003326   000022 772000                    QRL     18
         1 003327   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 003330   200013 756100                    STQ     SEGX,,AUTO

     1355     8028    5                   F$DCB.SEGX=SEGX;

   8028  1 003331   000000 620006                    EAX0    0,QL
         1 003332   200007 470500                    LDP0    JDCB$,,AUTO
         1 003333   000100 440100                    SXL0    64,,PR0

     1356     8029    5                   SEG$=PINCRW(BUF$,SEGX);

   8029  1 003334   200013 236100                    LDQ     SEGX,,AUTO
         1 003335   000022 736000                    QLS     18
         1 003336   200024 036100                    ADLQ    BUF$,,AUTO
         1 003337   200014 756100                    STQ     SEG$,,AUTO

     1357     8030    5                   END; /* Not a new record */

     1358     8031    4                END;  /* NORMAL SEG */

     1359     8032    3             END;  /* SEGMENT */

     1360     8033
     1361     8034    2          RETURN;

   8034  1 003340   200130 221300                    LDX1  ! I+1,,AUTO
         1 003341   000001 702211                    TSX2  ! 1,X1

     1362     8035    2   ERR:   ALTRETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:442  

   8035  1 003342   200130 221300       ERR          LDX1  ! I+1,,AUTO
         1 003343   000000 702211                    TSX2  ! 0,X1

     1363     8036    2          END CALC_INSRT;
     1364     8037               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:443  
     1365     8038        /*I*     NAME:     CALC_SPACE
     1366     8039                 PURPOSE:  To determine if enough space exists in the granule
     1367     8040                 DESCRIPTION:
     1368     8041                      If we are inserting at the end of the granule, then we
     1369     8042                 have to leave some empty space at the end, per the user's
     1370     8043                 request.
     1371     8044
     1372     8045                      Set the flag to indicate whether or not there is enough
     1373     8046                 space in the granule to add the key or segment.
     1374     8047        */
     1375     8048                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:444  
     1376     8049    1   CALC_SPACE: PROC;

   8049  1 003344   200130 741300       CALC_SPACE   STX1  ! I+1,,AUTO

     1377     8050    2          DCL SIZE SBIN;
     1378     8051        /* */
     1379     8052    2          SIZE=FM$GRAN.AVAIL;

   8052  1 003345   200024 470500                    LDP0    BUF$,,AUTO
         1 003346   000001 236100                    LDQ     1,,PR0
         1 003347   001777 376007                    ANQ     1023,DL
         1 003350   200131 756100                    STQ     SIZE,,AUTO

     1380     8053    2          SPARE=0;

   8053  1 003351   200053 450100                    STZ     SPARE,,AUTO

     1381     8054    2          IF FM$GRAN.FLINK = 0 AND INSRT = %END THEN

   8054  1 003352   000004 235100                    LDA     4,,PR0
         1 003353   003402 601000 1                  TNZ     s:8066
         1 003354   200052 235100                    LDA     INSRT,,AUTO
         1 003355   000002 115007                    CMPA    2,DL
         1 003356   003402 601000 1                  TNZ     s:8066

     1382     8055    3             DO;

     1383     8056    3             IF ORG ~= 0 THEN

   8056  1 003357   200022 235100                    LDA     ORG,,AUTO
         1 003360   003366 600000 1                  TZE     s:8059

     1384     8057    3                SPARE=F$DCB.SPARE;

   8057  1 003361   200007 471500                    LDP1    JDCB$,,AUTO
         1 003362   100040 236100                    LDQ     32,,PR1
         1 003363   000033 772000                    QRL     27
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:445  
         1 003364   200053 756100                    STQ     SPARE,,AUTO
         1 003365   003377 710000 1                  TRA     s:8063

     1385     8058    3             ELSE
     1386     8059    3                IF FM$GRAN.LVL = FMGTFD THEN

   8059  1 003366   000001 236100                    LDQ     1,,PR0
         1 003367   340000 376007                    ANQ     114688,DL
         1 003370   200000 116007                    CMPQ    65536,DL
         1 003371   003375 601000 1                  TNZ     s:8062

     1387     8060    3                   SPARE=40;

   8060  1 003372   000050 235007                    LDA     40,DL
         1 003373   200053 755100                    STA     SPARE,,AUTO
         1 003374   003377 710000 1                  TRA     s:8063

     1388     8061    3                ELSE
     1389     8062    3                   SPARE=16;

   8062  1 003375   000020 235007                    LDA     16,DL
         1 003376   200053 755100                    STA     SPARE,,AUTO

     1390     8063    3             SIZE=SIZE-SPARE;

   8063  1 003377   200131 236100                    LDQ     SIZE,,AUTO
         1 003400   200053 136100                    SBLQ    SPARE,,AUTO
         1 003401   200131 756100                    STQ     SIZE,,AUTO

     1391     8064    3             END;

     1392     8065
     1393     8066    2          IF SIZE >= TOTSIZE AND (KEYCNT < 279 OR ADDFLG = %SEG) THEN

   8066  1 003402   000000 116003                    CMPQ    0,DU
         1 003403   003417 604000 1                  TMI     s:8069
         1 003404   200045 116100                    CMPQ    TOTSIZE,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:446  
         1 003405   003417 602000 1                  TNC     s:8069
         1 003406   200017 235100                    LDA     KEYCNT,,AUTO
         1 003407   000427 115007                    CMPA    279,DL
         1 003410   003414 604000 1                  TMI     s:8067
         1 003411   200047 235100                    LDA     ADDFLG,,AUTO
         1 003412   000001 115007                    CMPA    1,DL
         1 003413   003417 601000 1                  TNZ     s:8069

     1394     8067    2             ENUF=%YESS;

   8067  1 003414   000001 235007                    LDA     1,DL
         1 003415   200051 755100                    STA     ENUF,,AUTO
         1 003416   003420 710000 1                  TRA     s:8071

     1395     8068    2          ELSE
     1396     8069    2             ENUF=%NOO;

   8069  1 003417   200051 450100                    STZ     ENUF,,AUTO

     1397     8070
     1398     8071    2          RETURN;

   8071  1 003420   000001 702211                    TSX2  ! 1,X1

     1399     8072    2          END CALC_SPACE;
     1400     8073               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:447  
     1401     8074        /*I*     NAME:     CHECK_LAST
     1402     8075                 PURPOSE:  To check position for a sequential write
     1403     8076                 DESCRIPTION:
     1404     8077                      If the user is doing a sequential write, we only allow
     1405     8078                 the write if the key is greater than the last key in the file.
     1406     8079                 Position to the end of the file, and compare the specified key with
     1407     8080                 the last key in the file.
     1408     8081        */
     1409     8082                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:448  
     1410     8083    1   CHECK_LAST: PROC ALTRET;

   8083  1 003421   200102 741300       CHECK_LAST   STX1  ! TOT+1,,AUTO

     1411     8084        /* */
     1412     8085    2          CALL PTOEOF ALTRET(ERR);

   8085  1 003422   016454 701000 1                  TSX1    PTOEOF
         1 003423   003474 702000 1                  TSX2    ERR

     1413     8086    2          KEYCNT=FM$GRAN.KEYCNT;

   8086  1 003424   200024 470500                    LDP0    BUF$,,AUTO
         1 003425   000002 236100                    LDQ     2,,PR0
         1 003426   000777 376007                    ANQ     511,DL
         1 003427   200017 756100                    STQ     KEYCNT,,AUTO

     1414     8087    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

   8087  1 003430   000002 220100                    LDX0    2,,PR0
         1 003431   000000 636010                    EAQ     0,X0
         1 003432   200024 036100                    ADLQ    BUF$,,AUTO
         1 003433   200025 756100                    STQ     KTPTR$,,AUTO

     1415     8088    2          BOUND=FM$KEYTBL(0);

   8088  1 003434   200025 471500                    LDP1    KTPTR$,,AUTO
         1 003435   100000 236100                    LDQ     0,,PR1
         1 003436   000033 772000                    QRL     27
         1 003437   200016 756100                    STQ     BOUND,,AUTO

     1416     8089
     1417     8090    2          IF KEYCNT < BOUND THEN

   8090  1 003440   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 003441   003453 604400 1                  TMOZ    s:8093

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:449  
     1418     8091    2             KEY$=PINCRW(BUF$, FM$KEYTBL(KEYCNT));

   8091  1 003442   200017 235100                    LDA     KEYCNT,,AUTO
         1 003443   000100 101505                    MRL     fill='000'O
         1 003444   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1
         1 003445   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 003446   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 003447   000000 636010                    EAQ     0,X0
         1 003450   200024 036100                    ADLQ    BUF$,,AUTO
         1 003451   200020 756100                    STQ     KEY$,,AUTO
         1 003452   003463 710000 1                  TRA     s:8095

     1419     8092    2          ELSE
     1420     8093    2             KEY$=PINCRW(BUF$, FM$KEYTBL(KEYCNT)+512);

   8093  1 003453   200017 235100                    LDA     KEYCNT,,AUTO
         1 003454   000100 101505                    MRL     fill='000'O
         1 003455   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1
         1 003456   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 003457   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 003460   001000 636010                    EAQ     512,X0
         1 003461   200024 036100                    ADLQ    BUF$,,AUTO
         1 003462   200020 756100                    STQ     KEY$,,AUTO

     1421     8094
     1422     8095    2          IF KEYCNT = 0 THEN

   8095  1 003463   000000 115003                    CMPA    0,DU
         1 003464   003470 601000 1                  TNZ     s:8098

     1423     8096    2             RESULT=%GREATER;

   8096  1 003465   000002 235007                    LDA     2,DL
         1 003466   200031 755100                    STA     RESULT,,AUTO
         1 003467   003472 710000 1                  TRA     s:8100

     1424     8097    2          ELSE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:450  
     1425     8098    2             CALL COMKEY ALTRET(ERR);

   8098  1 003470   003743 701000 1                  TSX1    COMKEY
         1 003471   003474 702000 1                  TSX2    ERR

     1426     8099
     1427     8100    2          RETURN;

   8100  1 003472   200102 221300                    LDX1  ! TOT+1,,AUTO
         1 003473   000001 702211                    TSX2  ! 1,X1

     1428     8101    2   ERR:   ALTRETURN;

   8101  1 003474   200102 221300       ERR          LDX1  ! TOT+1,,AUTO
         1 003475   000000 702211                    TSX2  ! 0,X1

     1429     8102    2          END CHECK_LAST;
     1430     8103               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:451  
     1431     8104        /*I*     NAME:     CHECKGRAN
     1432     8105                 PURPOSE:  To see if a specified key could be within the current
     1433     8106                           granule.
     1434     8107                 DESCRIPTION:
     1435     8108                      Check the specified key against the first and last key
     1436     8109                 in the granule.  Set RESULT accordingly.
     1437     8110        */
     1438     8111                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:452  
     1439     8112    1   CHECKGRAN: PROC ALTRET;

   8112  1 003476   200136 741300       CHECKGRAN    STX1  ! SIZE+1,,AUTO

     1440     8113        /* */
     1441     8114    2          IF KEYCNT = 0 THEN

   8114  1 003477   200017 235100                    LDA     KEYCNT,,AUTO
         1 003500   003504 601000 1                  TNZ     s:8120

     1442     8115    3             DO;   /* NO KEYS HERE */

     1443     8116    3             RESULT=%NONE;

   8116  1 003501   000003 236007                    LDQ     3,DL
         1 003502   200031 756100                    STQ     RESULT,,AUTO

     1444     8117    3             RETURN;

   8117  1 003503   000001 702211                    TSX2  ! 1,X1

     1445     8118    3             END;  /* NO KEYS HERE */
     1446     8119
     1447     8120    2          IF KEYCNT < BOUND THEN

   8120  1 003504   200017 236100                    LDQ     KEYCNT,,AUTO
         1 003505   200016 116100                    CMPQ    BOUND,,AUTO
         1 003506   003520 605000 1                  TPL     s:8123

     1448     8121    2             KEY$=PINCRW(BUF$, FM$KEYTBL(KEYCNT));

   8121  1 003507   200025 470500                    LDP0    KTPTR$,,AUTO
         1 003510   000100 101506                    MRL     fill='000'O
         1 003511   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 003512   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 003513   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 003514   000000 636010                    EAQ     0,X0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:453  
         1 003515   200024 036100                    ADLQ    BUF$,,AUTO
         1 003516   200020 756100                    STQ     KEY$,,AUTO
         1 003517   003530 710000 1                  TRA     s:8125

     1449     8122    2          ELSE
     1450     8123    2             KEY$=PINCRW(BUF$, FM$KEYTBL(KEYCNT)+512);

   8123  1 003520   200025 470500                    LDP0    KTPTR$,,AUTO
         1 003521   000100 101506                    MRL     fill='000'O
         1 003522   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 003523   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 003524   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 003525   001000 636010                    EAQ     512,X0
         1 003526   200024 036100                    ADLQ    BUF$,,AUTO
         1 003527   200020 756100                    STQ     KEY$,,AUTO

     1451     8124
     1452     8125    2          CALL COMKEY ALTRET(ERR);

   8125  1 003530   003743 701000 1                  TSX1    COMKEY
         1 003531   003573 702000 1                  TSX2    ERR

     1453     8126
     1454     8127    2          IF RESULT = %EQUAL OR RESULT = %GREATER THEN

   8127  1 003532   200031 235100                    LDA     RESULT,,AUTO
         1 003533   003536 600000 1                  TZE     s:8128
         1 003534   000002 115007                    CMPA    2,DL
         1 003535   003540 601000 1                  TNZ     s:8130

     1455     8128    2             RETURN;

   8128  1 003536   200136 221300                    LDX1  ! SIZE+1,,AUTO
         1 003537   000001 702211                    TSX2  ! 1,X1

     1456     8129
     1457     8130    2          IF BOUND > 1 THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:454  

   8130  1 003540   200016 236100                    LDQ     BOUND,,AUTO
         1 003541   000001 116007                    CMPQ    1,DL
         1 003542   003552 604400 1                  TMOZ    s:8133

     1458     8131    2             KEY$=PINCRW(BUF$, FM$KEYTBL(1));

   8131  1 003543   200025 470500                    LDP0    KTPTR$,,AUTO
         1 003544   000000 220100                    LDX0    0,,PR0
         1 003545   000777 360003                    ANX0    511,DU
         1 003546   000000 636010                    EAQ     0,X0
         1 003547   200024 036100                    ADLQ    BUF$,,AUTO
         1 003550   200020 756100                    STQ     KEY$,,AUTO
         1 003551   003560 710000 1                  TRA     s:8135

     1459     8132    2          ELSE
     1460     8133    2             KEY$=PINCRW(BUF$, FM$KEYTBL(1)+512);

   8133  1 003552   200025 470500                    LDP0    KTPTR$,,AUTO
         1 003553   000000 220100                    LDX0    0,,PR0
         1 003554   000777 360003                    ANX0    511,DU
         1 003555   001000 636010                    EAQ     512,X0
         1 003556   200024 036100                    ADLQ    BUF$,,AUTO
         1 003557   200020 756100                    STQ     KEY$,,AUTO

     1461     8134
     1462     8135    2          CALL COMKEY ALTRET(ERR);

   8135  1 003560   003743 701000 1                  TSX1    COMKEY
         1 003561   003573 702000 1                  TSX2    ERR

     1463     8136
     1464     8137    2          IF RESULT = %EQUAL OR RESULT = %LESS THEN

   8137  1 003562   200031 235100                    LDA     RESULT,,AUTO
         1 003563   003566 600000 1                  TZE     s:8138
         1 003564   000001 115007                    CMPA    1,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:455  
         1 003565   003570 601000 1                  TNZ     s:8140

     1465     8138    2             RETURN;

   8138  1 003566   200136 221300                    LDX1  ! SIZE+1,,AUTO
         1 003567   000001 702211                    TSX2  ! 1,X1

     1466     8139
     1467     8140    2          RESULT=%EQUAL;

   8140  1 003570   200031 450100                    STZ     RESULT,,AUTO

     1468     8141    2          RETURN;

   8141  1 003571   200136 221300                    LDX1  ! SIZE+1,,AUTO
         1 003572   000001 702211                    TSX2  ! 1,X1

     1469     8142    2   ERR:   ALTRETURN;

   8142  1 003573   200136 221300       ERR          LDX1  ! SIZE+1,,AUTO
         1 003574   000000 702211                    TSX2  ! 0,X1

     1470     8143    2          END CHECKGRAN;
     1471     8144               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:456  
     1472     8145        /*I*     NAME:     CHKEY
     1473     8146                 PURPOSE:  To compare two irel keys within records
     1474     8147                 DESCRIPTION:
     1475     8148                      This routine is called from ALTCHK to see if a specific irel
     1476     8149                 key changes as a result of rewriting a record.  KEY$ will
     1477     8150                 point to the key in the file.
     1478     8151
     1479     8152                      If this is a degenerate key with contiguous fields, just do
     1480     8153                 a straight ASCII compare of the keys.  Else loop through the set
     1481     8154                 of fields that form this key.  Set FN to index into RECFIELD that
     1482     8155                 we are interested in.  Then, compare the fields.
     1483     8156        */
     1484     8157                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:457  
     1485     8158    1   CHKEY: PROC(INDX);

   8158  1 003575   200112 741300       CHKEY        STX1  ! SIZE+1,,AUTO

     1486     8159    2          DCL INDX UBIN;
     1487     8160    2          DCL I UBIN;
     1488     8161    2          DCL CHRS CHAR(I) BASED;
     1489     8162        /* */
     1490     8163    2          KEY$=G$;

   8163  1 003576   200026 236100                    LDQ     G$,,AUTO
         1 003577   200020 756100                    STQ     KEY$,,AUTO

     1491     8164    3          IF IRKEYS.K.DEGENERATE(INDX) AND IRKEYS.K.CONTIGUOUS(INDX) THEN DO;

   8164  1 003600   200113 470500                    LDP0    @INDX,,AUTO
         1 003601   000000 236100                    LDQ     0,,PR0
         1 003602   000007 402007                    MPY     7,DL
         1 003603   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 003604   100006 236106                    LDQ     6,QL,PR1
         1 003605   040000 316007                    CANQ    16384,DL
         1 003606   003663 600000 1                  TZE     LOOP
         1 003607   000000 236100                    LDQ     0,,PR0
         1 003610   000007 402007                    MPY     7,DL
         1 003611   100006 236106                    LDQ     6,QL,PR1
         1 003612   020000 316007                    CANQ    8192,DL
         1 003613   003663 600000 1                  TZE     LOOP

     1492     8165    3             I = IRKEYS.K.KEYL(INDX);

   8165  1 003614   000000 236100                    LDQ     0,,PR0
         1 003615   000007 402007                    MPY     7,DL
         1 003616   100005 236106                    LDQ     5,QL,PR1
         1 003617   000022 772000                    QRL     18
         1 003620   200114 756100                    STQ     I,,AUTO

     1493     8166    3             FN = KFIELD.FIELD(IRKEYS.K.FIRSTFIELD(INDX));
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:458  

   8166  1 003621   000000 236100                    LDQ     0,,PR0
         1 003622   000007 402007                    MPY     7,DL
         1 003623   100004 236106                    LDQ     4,QL,PR1
         1 003624   000022 772000                    QRL     18
         1 003625   200067 473500                    LDP3    KFIELD$,,AUTO
         1 003626   000100 101506                    MRL     fill='000'O
         1 003627   300002 000001                    ADSC9   2,Q,PR3                  cn=0,n=1
         1 003630   200064 000004                    ADSC9   FN,,AUTO                 cn=0,n=4

     1494     8167    3             FIELD$ = PINCRB(KEY$,FIELD_START.OFFSET(FN));

   8167  1 003631   200066 474500                    LDP4    START$,,AUTO
         1 003632   200064 720100                    LXL0    FN,,AUTO
         1 003633   400001 236110                    LDQ     1,X0,PR4
         1 003634   200020 475500                    LDP5    KEY$,,AUTO
         1 003635   003637 605000 1                  TPL     s:8167+6
         1 003636   000044 036003                    ADLQ    36,DU
         1 003637   500000 503506                    ABD     0,QL,PR5
         1 003640   200070 455500                    STP5    FIELD$,,AUTO

     1495     8168    3             FIELDIN$ = PINCRB(KEYIN$,FIELD_START.OFFSET(FN));

   8168  1 003641   400001 236110                    LDQ     1,X0,PR4
         1 003642   200037 476500                    LDP6    KEYIN$,,AUTO
         1 003643   003645 605000 1                  TPL     s:8168+4
         1 003644   000044 036003                    ADLQ    36,DU
         1 003645   600000 503506                    ABD     0,QL,PR6
         1 003646   200071 456500                    STP6    FIELDIN$,,AUTO

     1496     8169    3             IF FIELDIN$->CHRS ~= FIELD$->CHRS THEN

   8169  1 003647   200114 722100                    LXL2    I,,AUTO
         1 003650   040140 106540                    CMPC    fill='040'O
         1 003651   600000 000012                    ADSC9   0,,PR6                   cn=0,n=*X2
         1 003652   500000 000012                    ADSC9   0,,PR5                   cn=0,n=*X2
         1 003653   003741 600000 1                  TZE     s:8190
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:459  

     1497     8170    3                IF FIELDIN$->CHRS < FIELD$->CHRS THEN

   8170  1 003654   003660 603000 1                  TRC     s:8173

     1498     8171    3                   RESULT = %LESS;

   8171  1 003655   000001 235007                    LDA     1,DL
         1 003656   200031 755100                    STA     RESULT,,AUTO
         1 003657   003741 710000 1                  TRA     s:8190

     1499     8172    3                ELSE
     1500     8173    3                   RESULT = %GREATER;

   8173  1 003660   000002 235007                    LDA     2,DL
         1 003661   200031 755100                    STA     RESULT,,AUTO

     1501     8174    3             END;

   8174  1 003662   003741 710000 1                  TRA     s:8190

     1502     8175    3          ELSE DO;

     1503     8176    4   LOOP:     DO I=IRKEYS.K.FIRSTFIELD(INDX) TO IRKEYS.K.FIRSTFIELD(INDX)+

   8176  1 003663   000000 236100       LOOP         LDQ     0,,PR0
         1 003664   000007 402007                    MPY     7,DL
         1 003665   100004 236106                    LDQ     4,QL,PR1
         1 003666   000022 772000                    QRL     18
         1 003667   200114 756100                    STQ     I,,AUTO
         1 003670   003723 710000 1                  TRA     s:8187+3

     1504     8177    4                                               IRKEYS.K.NFIELDS(INDX)-1;
     1505     8178    4                FN=KFIELD.FIELD(I);

   8178  1 003671   200067 470500                    LDP0    KFIELD$,,AUTO
         1 003672   200114 235100                    LDA     I,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:460  
         1 003673   000100 101505                    MRL     fill='000'O
         1 003674   000002 000001                    ADSC9   2,A,PR0                  cn=0,n=1
         1 003675   200064 000004                    ADSC9   FN,,AUTO                 cn=0,n=4

     1506     8179
     1507     8180    4                FIELD$=PINCRB(KEY$, FIELD_START.OFFSET(FN));

   8180  1 003676   200066 471500                    LDP1    START$,,AUTO
         1 003677   200064 720100                    LXL0    FN,,AUTO
         1 003700   100001 236110                    LDQ     1,X0,PR1
         1 003701   200020 473500                    LDP3    KEY$,,AUTO
         1 003702   003704 605000 1                  TPL     s:8180+6
         1 003703   000044 036003                    ADLQ    36,DU
         1 003704   300000 503506                    ABD     0,QL,PR3
         1 003705   200070 453500                    STP3    FIELD$,,AUTO

     1508     8181    4                FIELDIN$=PINCRB(KEYIN$, FIELD_START.OFFSET(FN));

   8181  1 003706   100001 236110                    LDQ     1,X0,PR1
         1 003707   200037 474500                    LDP4    KEYIN$,,AUTO
         1 003710   003712 605000 1                  TPL     s:8181+4
         1 003711   000044 036003                    ADLQ    36,DU
         1 003712   400000 503506                    ABD     0,QL,PR4
         1 003713   200071 454500                    STP4    FIELDIN$,,AUTO

     1509     8182
     1510     8183    4                CALL COMPFIELD;

   8183  1 003714   004177 701000 1                  TSX1    COMPFIELD
         1 003715   000000 011000                    NOP     0

     1511     8184
     1512     8185    4                IF RESULT ~= %EQUAL THEN

   8185  1 003716   200031 235100                    LDA     RESULT,,AUTO
         1 003717   003741 601000 1                  TNZ     s:8190

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:461  
     1513     8186    4                   EXIT LOOP;
     1514     8187    4                END;  /* DO I */

   8187  1 003720   200114 236100                    LDQ     I,,AUTO
         1 003721   000001 036007                    ADLQ    1,DL
         1 003722   200114 756100                    STQ     I,,AUTO
         1 003723   200113 470500                    LDP0    @INDX,,AUTO
         1 003724   000000 236100                    LDQ     0,,PR0
         1 003725   000007 402007                    MPY     7,DL
         1 003726   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 003727   000000 620006                    EAX0    0,QL
         1 003730   100004 236106                    LDQ     4,QL,PR1
         1 003731   777777 376007                    ANQ     -1,DL
         1 003732   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 003733   100004 236110                    LDQ     4,X0,PR1
         1 003734   000022 772000                    QRL     18
         1 003735   200166 036100                    ADLQ    STEMP_FIELDIN+2,,AUTO
         1 003736   200114 116100                    CMPQ    I,,AUTO
         1 003737   003741 600000 1                  TZE     s:8190
         1 003740   003671 603000 1                  TRC     s:8178

     1515     8188    3             END;

     1516     8189
     1517     8190    2          RETURN;

   8190  1 003741   200112 221300                    LDX1  ! SIZE+1,,AUTO
         1 003742   000001 702211                    TSX2  ! 1,X1

     1518     8191    2          END CHKEY;
     1519     8192               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:462  
     1520     8193        /*I*     NAME:     COMKEY
     1521     8194                 PURPOSE:  To compare a user specified key with a key in the file
     1522     8195                 DESCRIPTION:
     1523     8196                      If this is a keyed file, then first we set the comparison
     1524     8197                 length to the length of the shorter key.  If the text of the
     1525     8198                 keys do not match, then set the result accordingly.
     1526     8199
     1527     8200                      If this is an indexed file, then we check to see if this
     1528     8201                 is a delete along an alternate index.  If it is, then get the
     1529     8202                 size from the DCB.  The key is actually specified by pointing
     1530     8203                 to text within a record.  If this is a user specified key, then
     1531     8204                 the key size is the size of the buffer passed.  Again, use the
     1532     8205                 shorter of the two lengths for comparison purposes.  Compare the
     1533     8206                 text of the two keys, and set the result.
     1534     8207
     1535     8208                      If this is an irel key, then call a special subroutine.
     1536     8209
     1537     8210                      If we got this far, then the text of the keys matched as
     1538     8211                 far as the shorter of the two keys.  Finish the comparison based
     1539     8212                 on the lengths of the keys.
     1540     8213        */
     1541     8214                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:463  
     1542     8215    1   COMKEY: PROC ALTRET;

   8215  1 003743   200144 741300       COMKEY       STX1  ! LCDA+1,,AUTO

     1543     8216    2          DCL LEN UBIN;
     1544     8217    2          DCL LEN1 UBIN;
     1545     8218    2          DCL LEN2 UBIN;
     1546     8219    2          DCL CHARS CHAR(LEN) BASED;
     1547     8220    2          DCL 1 KEY BASED ALIGNED,
     1548     8221    2               2 * BIT(1),
     1549     8222    2               2 SIZE UBIN(8) UNAL,
     1550     8223    2               2 TEXT CHAR(LEN);
     1551     8224        /* */
     1552     8225    2          RESULT=%EQUAL;

   8225  1 003744   200031 450100                    STZ     RESULT,,AUTO

     1553     8226    2          IF ORG = %KEYED# OR ORG = 0 THEN

   8226  1 003745   200022 235100                    LDA     ORG,,AUTO
         1 003746   000002 115007                    CMPA    2,DL
         1 003747   003752 600000 1                  TZE     s:8228
         1 003750   000000 115003                    CMPA    0,DU
         1 003751   004006 601000 1                  TNZ     s:8252

     1554     8227    3             DO;   /* KEYED */

     1555     8228    3             LEN1=KEYIN_SIZE;

   8228  1 003752   200056 236100                    LDQ     KEYIN_SIZE,,AUTO
         1 003753   200146 756100                    STQ     LEN1,,AUTO

     1556     8229    3             LEN2=FM$KEYENT.KLB;

   8229  1 003754   200020 470500                    LDP0    KEY$,,AUTO
         1 003755   000000 236100                    LDQ     0,,PR0
         1 003756   000033 772000                    QRL     27
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:464  
         1 003757   000377 376007                    ANQ     255,DL
         1 003760   200147 756100                    STQ     LEN2,,AUTO

     1557     8230    3             IF LEN2 = 0 THEN

   8230  1 003761   004127 600000 1                  TZE     KEYERR

     1558     8231    3                GOTO KEYERR;
     1559     8232
     1560     8233    3             IF LEN1 <= LEN2 THEN

   8233  1 003762   200146 116100                    CMPQ    LEN1,,AUTO
         1 003763   003767 602000 1                  TNC     s:8236

     1561     8234    3                LEN=LEN1;

   8234  1 003764   200146 235100                    LDA     LEN1,,AUTO
         1 003765   200145 755100                    STA     LEN,,AUTO
         1 003766   003770 710000 1                  TRA     s:8238

     1562     8235    3             ELSE
     1563     8236    3                LEN=LEN2;

   8236  1 003767   200145 756100                    STQ     LEN,,AUTO

     1564     8237
     1565     8238    3             IF KEYIN$->KEY.TEXT > KEY$->KEY.TEXT THEN

   8238  1 003770   200145 720100                    LXL0    LEN,,AUTO
         1 003771   200037 471500                    LDP1    KEYIN$,,AUTO
         1 003772   040140 106540                    CMPC    fill='040'O
         1 003773   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         1 003774   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 003775   004001 603000 1                  TRC     s:8244

     1566     8239    4                DO;   /* GREATER THAN */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:465  
     1567     8240    4                RESULT=%GREATER;

   8240  1 003776   000002 235007                    LDA     2,DL
         1 003777   200031 755100                    STA     RESULT,,AUTO

     1568     8241    4                RETURN;

   8241  1 004000   000001 702211                    TSX2  ! 1,X1

     1569     8242    4                END;  /* GREATER THAN */
     1570     8243
     1571     8244    3             IF KEYIN$->KEY.TEXT < KEY$->KEY.TEXT THEN

   8244  1 004001   004115 602000 1                  TNC     s:8292
         1 004002   004115 600000 1                  TZE     s:8292

     1572     8245    4                DO;   /* LESS THAN */

     1573     8246    4                RESULT=%LESS;

   8246  1 004003   000001 235007                    LDA     1,DL
         1 004004   200031 755100                    STA     RESULT,,AUTO

     1574     8247    4                RETURN;

   8247  1 004005   000001 702211                    TSX2  ! 1,X1

     1575     8248    4                END;  /* LESS THAN */
     1576     8249
     1577     8250    3             END;  /* KEYED */
     1578     8251    2          ELSE
     1579     8252    2             IF ORG = %INDEXED# THEN

   8252  1 004006   000006 115007                    CMPA    6,DL
         1 004007   004077 601000 1                  TNZ     s:8283

     1580     8253    3                DO;   /* INDEXED FILE */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:466  

     1581     8254    3                LEN2=KEY$->KEY.SIZE;

   8254  1 004010   200020 470500                    LDP0    KEY$,,AUTO
         1 004011   000000 236100                    LDQ     0,,PR0
         1 004012   000033 772000                    QRL     27
         1 004013   000377 376007                    ANQ     255,DL
         1 004014   200147 756100                    STQ     LEN2,,AUTO

     1582     8255    3                IF LEN2 > F$DCB.KEYL THEN

   8255  1 004015   200007 471500                    LDP1    JDCB$,,AUTO
         1 004016   100036 236100                    LDQ     30,,PR1
         1 004017   000011 772000                    QRL     9
         1 004020   000777 376007                    ANQ     511,DL
         1 004021   200147 116100                    CMPQ    LEN2,,AUTO
         1 004022   004127 602000 1                  TNC     KEYERR

     1583     8256    3                   GOTO KEYERR;
     1584     8257
     1585     8258    3                IF KEYIN$ = B$PS1$ OR (KEYIN$ = B$PS2$ AND FPTCODE = FPTDELREC) THEN

   8258  1 004023   200037 236100                    LDQ     KEYIN$,,AUTO
         1 004024   000000 116000 xsym               CMPQ    B$PS1$
         1 004025   004034 600000 1                  TZE     s:8260
         1 004026   000000 116000 xsym               CMPQ    B$PS2$
         1 004027   004045 601000 1                  TNZ     s:8263
         1 004030   200003 473500                    LDP3    @PSEG$,,AUTO
         1 004031   300000 235100                    LDA     0,,PR3
         1 004032   000002 115007                    CMPA    2,DL
         1 004033   004045 601000 1                  TNZ     s:8263

     1586     8259    4                   DO;   /* FIND SIZE */

     1587     8260    4                   CALL HFF$DSIZ(KEYIN$, LEN1);

   8260  1 004034   200146 633500                    EPPR3   LEN1,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:467  
         1 004035   200167 453500                    STP3    STEMP_FIELDIN+3,,AUTO
         1 004036   200037 634500                    EPPR4   KEYIN$,,AUTO
         1 004037   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 004040   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004041   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 004042   000000 701000 xent               TSX1    HFF$DSIZ
         1 004043   000000 011000                    NOP     0

     1588     8261    4                   END;  /* FIND SIZE */

   8261  1 004044   004047 710000 1                  TRA     s:8265

     1589     8262    3                ELSE
     1590     8263    3                   LEN1=LEN2;

   8263  1 004045   200147 235100                    LDA     LEN2,,AUTO
         1 004046   200146 755100                    STA     LEN1,,AUTO

     1591     8264
     1592     8265    3                IF LEN1 > LEN2 THEN

   8265  1 004047   200147 236100                    LDQ     LEN2,,AUTO
         1 004050   200146 116100                    CMPQ    LEN1,,AUTO
         1 004051   004054 603000 1                  TRC     s:8268

     1593     8266    3                   LEN=LEN2;

   8266  1 004052   200145 756100                    STQ     LEN,,AUTO
         1 004053   004056 710000 1                  TRA     s:8270

     1594     8267    3                ELSE
     1595     8268    3                   LEN=LEN1;

   8268  1 004054   200146 235100                    LDA     LEN1,,AUTO
         1 004055   200145 755100                    STA     LEN,,AUTO

     1596     8269
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:468  
     1597     8270    3                IF KEYIN$->CHARS > KEY$->KEY.TEXT THEN

   8270  1 004056   200020 470500                    LDP0    KEY$,,AUTO
         1 004057   200145 720100                    LXL0    LEN,,AUTO
         1 004060   200037 471500                    LDP1    KEYIN$,,AUTO
         1 004061   040140 106540                    CMPC    fill='040'O
         1 004062   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         1 004063   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 004064   004071 603000 1                  TRC     s:8275

     1598     8271    4                   DO;   /* GREATER THAN */

     1599     8272    4                   RESULT=%GREATER;

   8272  1 004065   000002 235007                    LDA     2,DL
         1 004066   200031 755100                    STA     RESULT,,AUTO

     1600     8273    4                   RETURN;

   8273  1 004067   200144 221300                    LDX1  ! LCDA+1,,AUTO
         1 004070   000001 702211                    TSX2  ! 1,X1

     1601     8274    4                   END;  /* GREATER THAN */
     1602     8275    3                IF KEYIN$->CHARS < KEY$->KEY.TEXT THEN

   8275  1 004071   004115 602000 1                  TNC     s:8292
         1 004072   004115 600000 1                  TZE     s:8292

     1603     8276    4                   DO;   /* LESS THAN */

     1604     8277    4                   RESULT=%LESS;

   8277  1 004073   000001 235007                    LDA     1,DL
         1 004074   200031 755100                    STA     RESULT,,AUTO

     1605     8278    4                   RETURN;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:469  
   8278  1 004075   200144 221300                    LDX1  ! LCDA+1,,AUTO
         1 004076   000001 702211                    TSX2  ! 1,X1

     1606     8279    4                   END;  /* LESS THAN */
     1607     8280
     1608     8281    3                END;  /* INDEXED */
     1609     8282    3             ELSE DO;   /* IREL */

     1610     8283    4                DO CASE(COMFLG);

   8283  1 004077   200060 236100                    LDQ     COMFLG,,AUTO
         1 004100   000003 116007                    CMPQ    3,DL
         1 004101   004103 602006 1                  TNC     s:8283+4,QL
         1 004102   004113 710000 1                  TRA     s:8289
         1 004103   004106 710000 1                  TRA     s:8285
         1 004104   004111 710000 1                  TRA     s:8287
         1 004105   004111 710000 1                  TRA     s:8287

     1611     8284    4                   CASE(%KEY);

     1612     8285    4                      CALL COMPKEY;

   8285  1 004106   004552 701000 1                  TSX1    COMPKEY
         1 004107   000000 011000                    NOP     0
         1 004110   004113 710000 1                  TRA     s:8289

     1613     8286    4                   CASE(%USEREC,%FMREC);

     1614     8287    4                      CALL COMPREC;

   8287  1 004111   004671 701000 1                  TSX1    COMPREC
         1 004112   000000 011000                    NOP     0

     1615     8288    4                   END;

     1616     8289    3                RETURN;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:470  
   8289  1 004113   200144 221300                    LDX1  ! LCDA+1,,AUTO
         1 004114   000001 702211                    TSX2  ! 1,X1

     1617     8290    3                END;  /* IREL */
     1618     8291
     1619     8292    2          IF LEN1 ~= LEN2 THEN

   8292  1 004115   200146 116100                    CMPQ    LEN1,,AUTO
         1 004116   004125 600000 1                  TZE     s:8300

     1620     8293    3             DO;   /* NOT EQUAL */

     1621     8294    3             IF LEN1 > LEN2 THEN

   8294  1 004117   004123 603000 1                  TRC     s:8297

     1622     8295    3                RESULT=%GREATER;

   8295  1 004120   000002 235007                    LDA     2,DL
         1 004121   200031 755100                    STA     RESULT,,AUTO
         1 004122   004125 710000 1                  TRA     s:8300

     1623     8296    3             ELSE
     1624     8297    3                RESULT=%LESS;

   8297  1 004123   000001 235007                    LDA     1,DL
         1 004124   200031 755100                    STA     RESULT,,AUTO

     1625     8298    3             END;  /* NOT EQUAL */

     1626     8299
     1627     8300    2          RETURN;

   8300  1 004125   200144 221300                    LDX1  ! LCDA+1,,AUTO
         1 004126   000001 702211                    TSX2  ! 1,X1

   8292  1 004127                       KEYERR       null
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:471  
     1628     8301
     1629     8302    2   KEYERR: ;
     1630     8303    2          CALL FMB$ERRTYP(LEN);

   8303  1 004127   200145 631500                    EPPR1   LEN,,AUTO
         1 004130   200166 451500                    STP1    STEMP_FIELDIN+2,,AUTO
         1 004131   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004132   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 004133   000000 701000 xent               TSX1    FMB$ERRTYP
         1 004134   000000 011000                    NOP     0

     1631     8304    2          LEN1=F$DCB.BFR.DA(1);

   8304  1 004135   200007 470500                    LDP0    JDCB$,,AUTO
         1 004136   000116 236100                    LDQ     78,,PR0
         1 004137   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 004140   200146 756100                    STQ     LEN1,,AUTO

     1632     8305    2          CALL FMB$LOGERR(LEN, 24, 8, LEN1, KEY$, 0, 1, 0, KEY$);

   8305  1 004141   200020 631500                    EPPR1   KEY$,,AUTO
         1 004142   200176 451500                    STP1    STEMP_FIELDIN+10,,AUTO
         1 004143   000024 237000 2                  LDAQ    20
         1 004144   200174 757100                    STAQ    STEMP_FIELDIN+8,,AUTO
         1 004145   000000 236000 2                  LDQ     0
         1 004146   200173 756100                    STQ     STEMP_FIELDIN+7,,AUTO
         1 004147   200020 633500                    EPPR3   KEY$,,AUTO
         1 004150   200172 453500                    STP3    STEMP_FIELDIN+6,,AUTO
         1 004151   200146 634500                    EPPR4   LEN1,,AUTO
         1 004152   200171 454500                    STP4    STEMP_FIELDIN+5,,AUTO
         1 004153   000023 236000 2                  LDQ     19
         1 004154   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 004155   000026 236000 2                  LDQ     22
         1 004156   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 004157   200145 635500                    EPPR5   LEN,,AUTO
         1 004160   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 004161   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:472  
         1 004162   000021 631400 2                  EPPR1   17
         1 004163   000000 701000 xent               TSX1    FMB$LOGERR
         1 004164   000000 011000                    NOP     0

     1633     8306    2          B$JIT.ERR=ERRDMY;

   8306  1 004165   000036 236000 0                  LDQ     ERRDMY
         1 004166   000000 470400 xsym               LDP0    B$JIT$
         1 004167   000012 756100                    STQ     10,,PR0

     1634     8307    2          B$JIT.ERR.CODE=LEN;

   8307  1 004170   200145 236100                    LDQ     LEN,,AUTO
         1 004171   000003 736000                    QLS     3
         1 004172   000012 676100                    ERQ     10,,PR0
         1 004173   377770 376007                    ANQ     131064,DL
         1 004174   000012 656100                    ERSQ    10,,PR0

     1635     8308    2          ALTRETURN;

   8308  1 004175   200144 221300                    LDX1  ! LCDA+1,,AUTO
         1 004176   000000 702211                    TSX2  ! 0,X1

     1636     8309    2          END COMKEY;
     1637     8310               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:473  
     1638     8311        /*I*     NAME:     COMPFIELD
     1639     8312                 PURPOSE:  To compare two fields
     1640     8313                 DESCRIPTION:
     1641     8314                      With irel files, there are many different data types to
     1642     8315                 be concerned with.  For most of the decimal and floating data
     1643     8316                 types, a GMAP routine is called to do the actual comparison.
     1644     8317
     1645     8318                      Fields with data type CHAR, UBIN, or UTS can
     1646     8319                 be compared with a simple string compare.
     1647     8320
     1648     8321                      For decimal fields with overpunched signs, a PL6 routine
     1649     8322                 will be called to unpack the sign byte, then a GMAP routine
     1650     8323                 will be called.
     1651     8324
     1652     8325                      Fields with data type NO, TEXTC, TEXTH, LIST, or
     1653     8326                 VLIST cannot be used in keys, so we don't need to worry
     1654     8327                 about them.  (They were disqualified in the create open of
     1655     8328                 of the file.)
     1656     8329        */
     1657     8330                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:474  
     1658     8331    1   COMPFIELD: PROC;

   8331  1 004177   200154 741300       COMPFIELD    STX1  ! SIZE+1,,AUTO

     1659     8332    2          DCL CHR CHAR(LEN) BASED;
     1660     8333    2          DCL TEMP_SIZE CHAR(1) CALIGNED;
     1661     8334    2          DCL FIELD_TEMP CHAR(8) DALIGNED;
     1662     8335    2          DCL FIELDIN_TEMP CHAR(8) DALIGNED;
     1663     8336    2          DCL CHAR4 CHAR(4) BASED;
     1664     8337    2          DCL CHAR8 CHAR(8) BASED;
     1665     8338        /* */
     1666     8339    2          CALL SET_LEN;

   8339  1 004200   022612 701000 1                  TSX1    SET_LEN
         1 004201   000000 011000                    NOP     0

     1667     8340    3          DO CASE(RECFIELD.FIELD.TYPE(FN));

   8340  1 004202   200064 236100                    LDQ     FN,,AUTO
         1 004203   000003 402007                    MPY     3,DL
         1 004204   200065 470500                    LDP0    RECFIELD$,,AUTO
         1 004205   000100 101506                    MRL     fill='000'O
         1 004206   000001 020001                    ADSC6   1,Q,PR0                  cn=0,n=1
         1 004207   200166 020003                    ADSC6   STEMP_FIELDIN+2,,AUTO    cn=0,n=3
         1 004210   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 004211   000072 100003                    CMPX0   58,DU
         1 004212   004214 602010 1                  TNC     s:8340+10,X0
         1 004213   004550 710000 1                  TRA     s:8391
         1 004214   004550 710000 1                  TRA     s:8391
         1 004215   004516 710000 1                  TRA     s:8381
         1 004216   004550 710000 1                  TRA     s:8391
         1 004217   004450 710000 1                  TRA     s:8371
         1 004220   004473 710000 1                  TRA     s:8376
         1 004221   004550 710000 1                  TRA     s:8391
         1 004222   004550 710000 1                  TRA     s:8391
         1 004223   004550 710000 1                  TRA     s:8391
         1 004224   004550 710000 1                  TRA     s:8391
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:475  
         1 004225   004366 710000 1                  TRA     s:8355
         1 004226   004521 710000 1                  TRA     s:8384
         1 004227   004550 710000 1                  TRA     s:8391
         1 004230   004550 710000 1                  TRA     s:8391
         1 004231   004550 710000 1                  TRA     s:8391
         1 004232   004550 710000 1                  TRA     s:8391
         1 004233   004550 710000 1                  TRA     s:8391
         1 004234   004550 710000 1                  TRA     s:8391
         1 004235   004550 710000 1                  TRA     s:8391
         1 004236   004550 710000 1                  TRA     s:8391
         1 004237   004550 710000 1                  TRA     s:8391
         1 004240   004550 710000 1                  TRA     s:8391
         1 004241   004432 710000 1                  TRA     s:8364
         1 004242   004550 710000 1                  TRA     s:8391
         1 004243   004550 710000 1                  TRA     s:8391
         1 004244   004432 710000 1                  TRA     s:8364
         1 004245   004416 710000 1                  TRA     s:8361
         1 004246   004550 710000 1                  TRA     s:8391
         1 004247   004550 710000 1                  TRA     s:8391
         1 004250   004550 710000 1                  TRA     s:8391
         1 004251   004550 710000 1                  TRA     s:8391
         1 004252   004550 710000 1                  TRA     s:8391
         1 004253   004416 710000 1                  TRA     s:8361
         1 004254   004550 710000 1                  TRA     s:8391
         1 004255   004550 710000 1                  TRA     s:8391
         1 004256   004550 710000 1                  TRA     s:8391
         1 004257   004550 710000 1                  TRA     s:8391
         1 004260   004550 710000 1                  TRA     s:8391
         1 004261   004550 710000 1                  TRA     s:8391
         1 004262   004550 710000 1                  TRA     s:8391
         1 004263   004550 710000 1                  TRA     s:8391
         1 004264   004402 710000 1                  TRA     s:8358
         1 004265   004432 710000 1                  TRA     s:8364
         1 004266   004322 710000 1                  TRA     s:8345
         1 004267   004306 710000 1                  TRA     s:8342
         1 004270   004336 710000 1                  TRA     s:8348
         1 004271   004352 710000 1                  TRA     s:8351
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:476  
         1 004272   004550 710000 1                  TRA     s:8391
         1 004273   004550 710000 1                  TRA     s:8391
         1 004274   004550 710000 1                  TRA     s:8391
         1 004275   004550 710000 1                  TRA     s:8391
         1 004276   004535 710000 1                  TRA     s:8387
         1 004277   004366 710000 1                  TRA     s:8355
         1 004300   004550 710000 1                  TRA     s:8391
         1 004301   004550 710000 1                  TRA     s:8391
         1 004302   004366 710000 1                  TRA     s:8355
         1 004303   004432 710000 1                  TRA     s:8364
         1 004304   004550 710000 1                  TRA     s:8391
         1 004305   004366 710000 1                  TRA     s:8355

     1668     8341    3             CASE(%UDTS_DATATYPE);

     1669     8342    3                CALL FMG$COMPUDTS(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);

   8342  1 004306   200031 631500                    EPPR1   RESULT,,AUTO
         1 004307   200171 451500                    STP1    STEMP_FIELDIN+5,,AUTO
         1 004310   200061 633500                    EPPR3   LEN,,AUTO
         1 004311   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 004312   200070 236100                    LDQ     FIELD$,,AUTO
         1 004313   200071 235100                    LDA     FIELDIN$,,AUTO
         1 004314   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 004315   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004316   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 004317   000000 701000 xent               TSX1    FMG$COMPUDTS
         1 004320   000000 011000                    NOP     0
         1 004321   004550 710000 1                  TRA     s:8391

     1670     8343
     1671     8344    3             CASE(%UDLS_DATATYPE);

     1672     8345    3                CALL FMG$COMPUDLS(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);

   8345  1 004322   200031 631500                    EPPR1   RESULT,,AUTO
         1 004323   200171 451500                    STP1    STEMP_FIELDIN+5,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:477  
         1 004324   200061 633500                    EPPR3   LEN,,AUTO
         1 004325   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 004326   200070 236100                    LDQ     FIELD$,,AUTO
         1 004327   200071 235100                    LDA     FIELDIN$,,AUTO
         1 004330   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 004331   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004332   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 004333   000000 701000 xent               TSX1    FMG$COMPUDLS
         1 004334   000000 011000                    NOP     0
         1 004335   004550 710000 1                  TRA     s:8391

     1673     8346
     1674     8347    3             CASE(%UDLO_DATATYPE);

     1675     8348    3                CALL FMG$COMPUDLO(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);

   8348  1 004336   200031 631500                    EPPR1   RESULT,,AUTO
         1 004337   200171 451500                    STP1    STEMP_FIELDIN+5,,AUTO
         1 004340   200061 633500                    EPPR3   LEN,,AUTO
         1 004341   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 004342   200070 236100                    LDQ     FIELD$,,AUTO
         1 004343   200071 235100                    LDA     FIELDIN$,,AUTO
         1 004344   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 004345   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004346   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 004347   000000 701000 xent               TSX1    FMG$COMPUDLO
         1 004350   000000 011000                    NOP     0
         1 004351   004550 710000 1                  TRA     s:8391

     1676     8349
     1677     8350    3             CASE(%UDTO_DATATYPE);

     1678     8351    3                CALL FMG$COMPUDTO(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);

   8351  1 004352   200031 631500                    EPPR1   RESULT,,AUTO
         1 004353   200171 451500                    STP1    STEMP_FIELDIN+5,,AUTO
         1 004354   200061 633500                    EPPR3   LEN,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:478  
         1 004355   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 004356   200070 236100                    LDQ     FIELD$,,AUTO
         1 004357   200071 235100                    LDA     FIELDIN$,,AUTO
         1 004360   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 004361   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004362   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 004363   000000 701000 xent               TSX1    FMG$COMPUDTO
         1 004364   000000 011000                    NOP     0
         1 004365   004550 710000 1                  TRA     s:8391

     1679     8352
     1680     8353    3             CASE(%PDLA_DATATYPE, %PDLE_DATATYPE, %DATE_DATATYPE,

     1681     8354    3                  %TIME_DATATYPE);
     1682     8355    3                CALL FMG$COMPPDLS(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);

   8355  1 004366   200031 631500                    EPPR1   RESULT,,AUTO
         1 004367   200171 451500                    STP1    STEMP_FIELDIN+5,,AUTO
         1 004370   200061 633500                    EPPR3   LEN,,AUTO
         1 004371   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 004372   200070 236100                    LDQ     FIELD$,,AUTO
         1 004373   200071 235100                    LDA     FIELDIN$,,AUTO
         1 004374   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 004375   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004376   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 004377   000000 701000 xent               TSX1    FMG$COMPPDLS
         1 004400   000000 011000                    NOP     0
         1 004401   004550 710000 1                  TRA     s:8391

     1683     8356
     1684     8357    3             CASE(%PDNS_DATATYPE);

     1685     8358    3                CALL FMG$COMPPDNS(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);

   8358  1 004402   200031 631500                    EPPR1   RESULT,,AUTO
         1 004403   200171 451500                    STP1    STEMP_FIELDIN+5,,AUTO
         1 004404   200061 633500                    EPPR3   LEN,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:479  
         1 004405   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 004406   200070 236100                    LDQ     FIELD$,,AUTO
         1 004407   200071 235100                    LDA     FIELDIN$,,AUTO
         1 004410   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 004411   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004412   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 004413   000000 701000 xent               TSX1    FMG$COMPPDNS
         1 004414   000000 011000                    NOP     0
         1 004415   004550 710000 1                  TRA     s:8391

     1686     8359
     1687     8360    3             CASE(%PDTA_DATATYPE, %PDTE_DATATYPE);

     1688     8361    3                CALL FMG$COMPPDTS(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);

   8361  1 004416   200031 631500                    EPPR1   RESULT,,AUTO
         1 004417   200171 451500                    STP1    STEMP_FIELDIN+5,,AUTO
         1 004420   200061 633500                    EPPR3   LEN,,AUTO
         1 004421   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 004422   200070 236100                    LDQ     FIELD$,,AUTO
         1 004423   200071 235100                    LDA     FIELDIN$,,AUTO
         1 004424   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 004425   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004426   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 004427   000000 701000 xent               TSX1    FMG$COMPPDTS
         1 004430   000000 011000                    NOP     0
         1 004431   004550 710000 1                  TRA     s:8391

     1689     8362
     1690     8363    3             CASE(%CHAR_DATATYPE, %UBIN_DATATYPE, %UTS_DATATYPE, %UDNS_DATATYPE);

     1691     8364    3                IF FIELDIN$->CHR ~= FIELD$->CHR THEN

   8364  1 004432   200071 471500                    LDP1    FIELDIN$,,AUTO
         1 004433   200061 721100                    LXL1    LEN,,AUTO
         1 004434   200070 473500                    LDP3    FIELD$,,AUTO
         1 004435   040140 106540                    CMPC    fill='040'O
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:480  
         1 004436   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         1 004437   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         1 004440   004550 600000 1                  TZE     s:8391

     1692     8365    3                   IF FIELDIN$->CHR < FIELD$->CHR THEN

   8365  1 004441   004445 603000 1                  TRC     s:8368

     1693     8366    3                      RESULT=%LESS;

   8366  1 004442   000001 235007                    LDA     1,DL
         1 004443   200031 755100                    STA     RESULT,,AUTO
         1 004444   004550 710000 1                  TRA     s:8391

     1694     8367    3                   ELSE
     1695     8368    3                      RESULT=%GREATER;

   8368  1 004445   000002 235007                    LDA     2,DL
         1 004446   200031 755100                    STA     RESULT,,AUTO
         1 004447   004550 710000 1                  TRA     s:8391

     1696     8369
     1697     8370    3             CASE(%SFLT_DATATYPE);

     1698     8371    3                FIELD_TEMP=FIELD$->CHAR4;

   8371  1 004450   200070 471500                    LDP1    FIELD$,,AUTO
         1 004451   040100 100500                    MLR     fill='040'O
         1 004452   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 004453   200156 000010                    ADSC9   FIELD_TEMP,,AUTO         cn=0,n=8

     1699     8372    3                FIELDIN_TEMP=FIELDIN$->CHAR4;

   8372  1 004454   200071 473500                    LDP3    FIELDIN$,,AUTO
         1 004455   040100 100500                    MLR     fill='040'O
         1 004456   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         1 004457   200160 000010                    ADSC9   FIELDIN_TEMP,,AUTO       cn=0,n=8
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:481  

     1700     8373    3                CALL FMG$COMPSFLT(FIELDIN_TEMP, FIELD_TEMP, RESULT);

   8373  1 004460   200031 634500                    EPPR4   RESULT,,AUTO
         1 004461   200170 454500                    STP4    STEMP_FIELDIN+4,,AUTO
         1 004462   200156 635500                    EPPR5   FIELD_TEMP,,AUTO
         1 004463   200167 455500                    STP5    STEMP_FIELDIN+3,,AUTO
         1 004464   200160 636500                    EPPR6   FIELDIN_TEMP,,AUTO
         1 004465   200166 456500                    STP6    STEMP_FIELDIN+2,,AUTO
         1 004466   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004467   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 004470   000000 701000 xent               TSX1    FMG$COMPSFLT
         1 004471   000000 011000                    NOP     0
         1 004472   004550 710000 1                  TRA     s:8391

     1701     8374
     1702     8375    3             CASE(%DFLT_DATATYPE);

     1703     8376    3                FIELD_TEMP=FIELD$->CHAR8;

   8376  1 004473   200070 471500                    LDP1    FIELD$,,AUTO
         1 004474   040100 100500                    MLR     fill='040'O
         1 004475   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 004476   200156 000010                    ADSC9   FIELD_TEMP,,AUTO         cn=0,n=8

     1704     8377    3                FIELDIN_TEMP=FIELDIN$->CHAR8;

   8377  1 004477   200071 473500                    LDP3    FIELDIN$,,AUTO
         1 004500   040100 100500                    MLR     fill='040'O
         1 004501   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8
         1 004502   200160 000010                    ADSC9   FIELDIN_TEMP,,AUTO       cn=0,n=8

     1705     8378    3                CALL FMG$COMPDFLT(FIELDIN_TEMP, FIELD_TEMP, RESULT);

   8378  1 004503   200031 634500                    EPPR4   RESULT,,AUTO
         1 004504   200170 454500                    STP4    STEMP_FIELDIN+4,,AUTO
         1 004505   200156 635500                    EPPR5   FIELD_TEMP,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:482  
         1 004506   200167 455500                    STP5    STEMP_FIELDIN+3,,AUTO
         1 004507   200160 636500                    EPPR6   FIELDIN_TEMP,,AUTO
         1 004510   200166 456500                    STP6    STEMP_FIELDIN+2,,AUTO
         1 004511   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004512   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 004513   000000 701000 xent               TSX1    FMG$COMPDFLT
         1 004514   000000 011000                    NOP     0
         1 004515   004550 710000 1                  TRA     s:8391

     1706     8379
     1707     8380    3             CASE(%SBIN_DATATYPE);

     1708     8381    3                CALL COMPSBIN;

   8381  1 004516   005034 701000 1                  TSX1    COMPSBIN
         1 004517   000000 011000                    NOP     0
         1 004520   004550 710000 1                  TRA     s:8391

     1709     8382
     1710     8383    3             CASE(%PDFLT_DATATYPE);

     1711     8384    3                CALL FMG$COMPPDFLT(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);

   8384  1 004521   200031 631500                    EPPR1   RESULT,,AUTO
         1 004522   200171 451500                    STP1    STEMP_FIELDIN+5,,AUTO
         1 004523   200061 633500                    EPPR3   LEN,,AUTO
         1 004524   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 004525   200070 236100                    LDQ     FIELD$,,AUTO
         1 004526   200071 235100                    LDA     FIELDIN$,,AUTO
         1 004527   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 004530   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004531   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 004532   000000 701000 xent               TSX1    FMG$COMPPDFLT
         1 004533   000000 011000                    NOP     0
         1 004534   004550 710000 1                  TRA     s:8391

     1712     8385
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:483  
     1713     8386    3             CASE(%UDFLT_DATATYPE);

     1714     8387    3                CALL FMG$COMPUDFLT(FIELDIN_PTR, FIELD_PTR, LEN, RESULT);

   8387  1 004535   200031 631500                    EPPR1   RESULT,,AUTO
         1 004536   200171 451500                    STP1    STEMP_FIELDIN+5,,AUTO
         1 004537   200061 633500                    EPPR3   LEN,,AUTO
         1 004540   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 004541   200070 236100                    LDQ     FIELD$,,AUTO
         1 004542   200071 235100                    LDA     FIELDIN$,,AUTO
         1 004543   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 004544   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 004545   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 004546   000000 701000 xent               TSX1    FMG$COMPUDFLT
         1 004547   000000 011000                    NOP     0

     1715     8388
     1716     8389    3          END;  /* CASE */

     1717     8390
     1718     8391    2          RETURN;

   8391  1 004550   200154 221300                    LDX1  ! SIZE+1,,AUTO
         1 004551   000001 702211                    TSX2  ! 1,X1

     1719     8392    2          END COMPFIELD;
     1720     8393               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:484  
     1721     8394        /*I*     NAME:     COMPKEY
     1722     8395                 PURPOSE:  To compare a user specified irel key
     1723     8396                 DESCRIPTION:
     1724     8397                      First, get the size of the user's key.  He may only
     1725     8398                 want to compare a partial key.  If this is a degenerate key,
     1726     8399                 just do a straight ASCII compare of the keys, else compare the
     1727     8400                 key field-by-field, until we have compared all of the user's key.
     1728     8401
     1729     8402                      If at any point the fields are not equal, we don't have
     1730     8403                 to compare any more.  Set up the pointers to the next fields
     1731     8404                 to compare.
     1732     8405
     1733     8406                      If the keys compared equal, but the user specified only
     1734     8407                 a partial key, then the user specified key is less.
     1735     8408        */
     1736     8409                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:485  
     1737     8410    1   COMPKEY: PROC;

   8410  1 004552   200150 741300       COMPKEY      STX1  ! BTEMP,,AUTO

     1738     8411    2          DCL I UBIN;
     1739     8412    2          DCL KCHRS SBIN;
     1740     8413    2          DCL KCHR CHAR(KCHRS) BASED;
     1741     8414    2          DCL SIZE UBIN;
     1742     8415        /* */
     1743     8416    2          FIELD$=PINCRC(KEY$, 2);

   8416  1 004553   200020 236100                    LDQ     KEY$,,AUTO
         1 004554   400000 036007                    ADLQ    -131072,DL
         1 004555   200070 756100                    STQ     FIELD$,,AUTO

     1744     8417    2          FIELDIN$=KEYIN$;

   8417  1 004556   200037 236100                    LDQ     KEYIN$,,AUTO
         1 004557   200071 756100                    STQ     FIELDIN$,,AUTO

     1745     8418    2          RESULT=%EQUAL;

   8418  1 004560   200031 450100                    STZ     RESULT,,AUTO

     1746     8419    2          KCHRS=USERKEY_SIZE;

   8419  1 004561   200073 235100                    LDA     USERKEY_SIZE,,AUTO
         1 004562   200152 755100                    STA     KCHRS,,AUTO

     1747     8420    2          I=0;

   8420  1 004563   200151 450100                    STZ     I,,AUTO

     1748     8421
     1749     8422    3          IF IRKEYS.K.DEGENERATE(INDEX#) THEN DO;

   8422  1 004564   200011 236100                    LDQ     INDEX#,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:486  
         1 004565   000007 402007                    MPY     7,DL
         1 004566   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 004567   000006 236106                    LDQ     6,QL,PR0
         1 004570   040000 316007                    CANQ    16384,DL
         1 004571   004610 600000 1                  TZE     LOOP

     1750     8423    4             IF FIELDIN$->KCHR ~= FIELD$->KCHR THEN DO;

   8423  1 004572   200071 471500                    LDP1    FIELDIN$,,AUTO
         1 004573   200152 720100                    LXL0    KCHRS,,AUTO
         1 004574   200070 473500                    LDP3    FIELD$,,AUTO
         1 004575   040140 106540                    CMPC    fill='040'O
         1 004576   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 004577   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 004600   004654 600000 1                  TZE     s:8444

     1751     8424    4                IF FIELDIN$->KCHR < FIELD$->KCHR THEN

   8424  1 004601   004605 603000 1                  TRC     s:8427

     1752     8425    4                   RESULT = %LESS;

   8425  1 004602   000001 235007                    LDA     1,DL
         1 004603   200031 755100                    STA     RESULT,,AUTO
         1 004604   004607 710000 1                  TRA     s:8428

     1753     8426    4                ELSE
     1754     8427    4                   RESULT = %GREATER;

   8427  1 004605   000002 235007                    LDA     2,DL
         1 004606   200031 755100                    STA     RESULT,,AUTO

     1755     8428    4                RETURN;

   8428  1 004607   000001 702211                    TSX2  ! 1,X1

     1756     8429    4                END;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:487  
     1757     8430    3             END;
     1758     8431    2          ELSE
     1759     8432    3   LOOP:     DO WHILE(KCHRS > 0);

   8432  1 004610   200152 235100       LOOP         LDA     KCHRS,,AUTO
         1 004611   004654 604400 1                  TMOZ    s:8444

     1760     8433    3                FN=KFIELD.FIELD(I+IRKEYS.K.FIRSTFIELD(INDEX#));

   8433  1 004612   200011 236100                    LDQ     INDEX#,,AUTO
         1 004613   000007 402007                    MPY     7,DL
         1 004614   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 004615   000004 236106                    LDQ     4,QL,PR0
         1 004616   000022 772000                    QRL     18
         1 004617   200151 036100                    ADLQ    I,,AUTO
         1 004620   200067 471500                    LDP1    KFIELD$,,AUTO
         1 004621   000100 101506                    MRL     fill='000'O
         1 004622   100002 000001                    ADSC9   2,Q,PR1                  cn=0,n=1
         1 004623   200064 000004                    ADSC9   FN,,AUTO                 cn=0,n=4

     1761     8434    3                CALL COMPFIELD;

   8434  1 004624   004177 701000 1                  TSX1    COMPFIELD
         1 004625   000000 011000                    NOP     0

     1762     8435    3                IF RESULT ~= %EQUAL THEN

   8435  1 004626   200031 235100                    LDA     RESULT,,AUTO
         1 004627   004654 601000 1                  TNZ     s:8444

     1763     8436    3                   EXIT LOOP;
     1764     8437    3                I=I+1;

   8437  1 004630   200151 236100                    LDQ     I,,AUTO
         1 004631   000001 036007                    ADLQ    1,DL
         1 004632   200151 756100                    STQ     I,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:488  
     1765     8438    3                CALL SET_SIZE(SIZE);

   8438  1 004633   200153 630500                    EPPR0   SIZE,,AUTO
         1 004634   200155 450500                    STP0    SIZE+2,,AUTO
         1 004635   022736 701000 1                  TSX1    SET_SIZE
         1 004636   000000 011000                    NOP     0

     1766     8439    3                KCHRS=KCHRS-SIZE;

   8439  1 004637   200152 236100                    LDQ     KCHRS,,AUTO
         1 004640   200153 136100                    SBLQ    SIZE,,AUTO
         1 004641   200152 756100                    STQ     KCHRS,,AUTO

     1767     8440    3                FIELDIN$=PINCRC(FIELDIN$, SIZE);

   8440  1 004642   200153 236100                    LDQ     SIZE,,AUTO
         1 004643   000020 736000                    QLS     16
         1 004644   200071 036100                    ADLQ    FIELDIN$,,AUTO
         1 004645   200071 756100                    STQ     FIELDIN$,,AUTO

     1768     8441    3                FIELD$=PINCRC(FIELD$, SIZE);

   8441  1 004646   200153 236100                    LDQ     SIZE,,AUTO
         1 004647   000020 736000                    QLS     16
         1 004650   200070 036100                    ADLQ    FIELD$,,AUTO
         1 004651   200070 756100                    STQ     FIELD$,,AUTO

     1769     8442    3                END;  /* DO WHILE */

   8442  1 004652   200152 235100                    LDA     KCHRS,,AUTO
         1 004653   004612 605400 1                  TPNZ    s:8433

     1770     8443
     1771     8444    2          IF RESULT = %EQUAL AND USERKEY_SIZE < F$DCB.KEYL THEN

   8444  1 004654   200031 235100                    LDA     RESULT,,AUTO
         1 004655   004667 601000 1                  TNZ     s:8447
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:489  
         1 004656   200007 470500                    LDP0    JDCB$,,AUTO
         1 004657   000036 236100                    LDQ     30,,PR0
         1 004660   000011 772000                    QRL     9
         1 004661   000777 376007                    ANQ     511,DL
         1 004662   200073 116100                    CMPQ    USERKEY_SIZE,,AUTO
         1 004663   004667 602000 1                  TNC     s:8447
         1 004664   004667 600000 1                  TZE     s:8447

     1772     8445    2             RESULT=%LESS;

   8445  1 004665   000001 235007                    LDA     1,DL
         1 004666   200031 755100                    STA     RESULT,,AUTO

     1773     8446
     1774     8447    2          RETURN;

   8447  1 004667   200150 221300                    LDX1  ! BTEMP,,AUTO
         1 004670   000001 702211                    TSX2  ! 1,X1

     1775     8448    2          END COMPKEY;
     1776     8449               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:490  
     1777     8450        /*I*     NAME:     COMPREC
     1778     8451                 PURPOSE:  To compare a key within a record to an FM key
     1779     8452                 DESCRIPTION:
     1780     8453                      Set the FM field pointer to the first field in the key.
     1781     8454
     1782     8455                      If this is a degenerate key with contiguous fields, just do
     1783     8456                 a straight ASCII compare of the keys.  Else loop through the set
     1784     8457                 of fields that form this key.  Set FN to index into RECFIELD that
     1785     8458                 we are interested in.  Then, compare the fields.
     1786     8459
     1787     8460                      If the fields are not equal, then quit comparing.  Otherwise,
     1788     8461                 increment the pointer to the next field.
     1789     8462        */
     1790     8463                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:491  
     1791     8464    1   COMPREC: PROC;

   8464  1 004671   200150 741300       COMPREC      STX1  ! BTEMP,,AUTO

     1792     8465    2          DCL I UBIN;
     1793     8466    2          DCL CHRS CHAR(I) BASED;
     1794     8467    2          DCL SIZE UBIN;
     1795     8468        /* */
     1796     8469    2          FIELD$=PINCRC(KEY$, 2);

   8469  1 004672   200020 236100                    LDQ     KEY$,,AUTO
         1 004673   400000 036007                    ADLQ    -131072,DL
         1 004674   200070 756100                    STQ     FIELD$,,AUTO

     1797     8470    3          IF IRKEYS.K.DEGENERATE(INDEX#) AND IRKEYS.K.CONTIGUOUS(INDEX#) THEN DO;

   8470  1 004675   200011 236100                    LDQ     INDEX#,,AUTO
         1 004676   000007 402007                    MPY     7,DL
         1 004677   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 004700   000006 236106                    LDQ     6,QL,PR0
         1 004701   040000 316007                    CANQ    16384,DL
         1 004702   004752 600000 1                  TZE     LOOP
         1 004703   200011 236100                    LDQ     INDEX#,,AUTO
         1 004704   000007 402007                    MPY     7,DL
         1 004705   000006 236106                    LDQ     6,QL,PR0
         1 004706   020000 316007                    CANQ    8192,DL
         1 004707   004752 600000 1                  TZE     LOOP

     1798     8471    3             I = IRKEYS.K.KEYL(INDEX#);

   8471  1 004710   200011 236100                    LDQ     INDEX#,,AUTO
         1 004711   000007 402007                    MPY     7,DL
         1 004712   000005 236106                    LDQ     5,QL,PR0
         1 004713   000022 772000                    QRL     18
         1 004714   200151 756100                    STQ     I,,AUTO

     1799     8472    3             FN = KFIELD.FIELD(IRKEYS.K.FIRSTFIELD(INDEX#));
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:492  

   8472  1 004715   200011 236100                    LDQ     INDEX#,,AUTO
         1 004716   000007 402007                    MPY     7,DL
         1 004717   000004 236106                    LDQ     4,QL,PR0
         1 004720   000022 772000                    QRL     18
         1 004721   200067 471500                    LDP1    KFIELD$,,AUTO
         1 004722   000100 101506                    MRL     fill='000'O
         1 004723   100002 000001                    ADSC9   2,Q,PR1                  cn=0,n=1
         1 004724   200064 000004                    ADSC9   FN,,AUTO                 cn=0,n=4

     1800     8473    3             FIELDIN$ = PINCRB(KEYIN$,FIELD_START.OFFSET(FN));

   8473  1 004725   200066 473500                    LDP3    START$,,AUTO
         1 004726   200064 720100                    LXL0    FN,,AUTO
         1 004727   300001 236110                    LDQ     1,X0,PR3
         1 004730   200037 474500                    LDP4    KEYIN$,,AUTO
         1 004731   004733 605000 1                  TPL     s:8473+6
         1 004732   000044 036003                    ADLQ    36,DU
         1 004733   400000 503506                    ABD     0,QL,PR4
         1 004734   200071 454500                    STP4    FIELDIN$,,AUTO

     1801     8474    4             IF FIELDIN$->CHRS ~= FIELD$->CHRS THEN DO;

   8474  1 004735   200151 722100                    LXL2    I,,AUTO
         1 004736   200070 475500                    LDP5    FIELD$,,AUTO
         1 004737   040140 106540                    CMPC    fill='040'O
         1 004740   400000 000012                    ADSC9   0,,PR4                   cn=0,n=*X2
         1 004741   500000 000012                    ADSC9   0,,PR5                   cn=0,n=*X2
         1 004742   005032 600000 1                  TZE     s:8496

     1802     8475    4                IF FIELDIN$->CHRS < FIELD$->CHRS THEN

   8475  1 004743   004747 603000 1                  TRC     s:8478

     1803     8476    4                   RESULT = %LESS;

   8476  1 004744   000001 235007                    LDA     1,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:493  
         1 004745   200031 755100                    STA     RESULT,,AUTO
         1 004746   004751 710000 1                  TRA     s:8479

     1804     8477    4                ELSE
     1805     8478    4                   RESULT = %GREATER;

   8478  1 004747   000002 235007                    LDA     2,DL
         1 004750   200031 755100                    STA     RESULT,,AUTO

     1806     8479    4                RETURN;

   8479  1 004751   000001 702211                    TSX2  ! 1,X1

     1807     8480    4                END;
     1808     8481    3             END;
     1809     8482    3          ELSE DO;

     1810     8483    4   LOOP:     DO I=IRKEYS.K.FIRSTFIELD(INDEX#) TO IRKEYS.K.FIRSTFIELD(INDEX#)+

   8483  1 004752   200011 236100       LOOP         LDQ     INDEX#,,AUTO
         1 004753   000007 402007                    MPY     7,DL
         1 004754   000004 236106                    LDQ     4,QL,PR0
         1 004755   000022 772000                    QRL     18
         1 004756   200151 756100                    STQ     I,,AUTO
         1 004757   005014 710000 1                  TRA     s:8493+3

     1811     8484    4                                                 IRKEYS.K.NFIELDS(INDEX#)-1;
     1812     8485
     1813     8486    4                FN=KFIELD.FIELD(I);

   8486  1 004760   200067 470500                    LDP0    KFIELD$,,AUTO
         1 004761   200151 235100                    LDA     I,,AUTO
         1 004762   000100 101505                    MRL     fill='000'O
         1 004763   000002 000001                    ADSC9   2,A,PR0                  cn=0,n=1
         1 004764   200064 000004                    ADSC9   FN,,AUTO                 cn=0,n=4

     1814     8487    4                FIELDIN$=PINCRB(KEYIN$, FIELD_START.OFFSET(FN));
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:494  

   8487  1 004765   200066 471500                    LDP1    START$,,AUTO
         1 004766   200064 720100                    LXL0    FN,,AUTO
         1 004767   100001 236110                    LDQ     1,X0,PR1
         1 004770   200037 473500                    LDP3    KEYIN$,,AUTO
         1 004771   004773 605000 1                  TPL     s:8487+6
         1 004772   000044 036003                    ADLQ    36,DU
         1 004773   300000 503506                    ABD     0,QL,PR3
         1 004774   200071 453500                    STP3    FIELDIN$,,AUTO

     1815     8488    4                CALL COMPFIELD;

   8488  1 004775   004177 701000 1                  TSX1    COMPFIELD
         1 004776   000000 011000                    NOP     0

     1816     8489    4                IF RESULT ~= %EQUAL THEN

   8489  1 004777   200031 235100                    LDA     RESULT,,AUTO
         1 005000   005032 601000 1                  TNZ     s:8496

     1817     8490    4                   EXIT LOOP;
     1818     8491    4                CALL SET_SIZE(SIZE);

   8491  1 005001   200152 630500                    EPPR0   SIZE,,AUTO
         1 005002   200155 450500                    STP0    SIZE+2,,AUTO
         1 005003   022736 701000 1                  TSX1    SET_SIZE
         1 005004   000000 011000                    NOP     0

     1819     8492    4                FIELD$=PINCRC(FIELD$, SIZE);

   8492  1 005005   200152 236100                    LDQ     SIZE,,AUTO
         1 005006   000020 736000                    QLS     16
         1 005007   200070 036100                    ADLQ    FIELD$,,AUTO
         1 005010   200070 756100                    STQ     FIELD$,,AUTO

     1820     8493    4                END;  /* DO I */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:495  
   8493  1 005011   200151 235100                    LDA     I,,AUTO
         1 005012   000001 035007                    ADLA    1,DL
         1 005013   200151 755100                    STA     I,,AUTO
         1 005014   200011 236100                    LDQ     INDEX#,,AUTO
         1 005015   000007 402007                    MPY     7,DL
         1 005016   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 005017   000004 236106                    LDQ     4,QL,PR0
         1 005020   777777 376007                    ANQ     -1,DL
         1 005021   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 005022   200011 236100                    LDQ     INDEX#,,AUTO
         1 005023   000007 402007                    MPY     7,DL
         1 005024   000004 236106                    LDQ     4,QL,PR0
         1 005025   000022 772000                    QRL     18
         1 005026   200166 036100                    ADLQ    STEMP_FIELDIN+2,,AUTO
         1 005027   200151 116100                    CMPQ    I,,AUTO
         1 005030   005032 600000 1                  TZE     s:8496
         1 005031   004760 603000 1                  TRC     s:8486

     1821     8494    3             END;

     1822     8495
     1823     8496    2          RETURN;

   8496  1 005032   200150 221300                    LDX1  ! BTEMP,,AUTO
         1 005033   000001 702211                    TSX2  ! 1,X1

     1824     8497    2          END COMPREC;
     1825     8498               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:496  
     1826     8499        /*I*     NAME:     COMPSBIN
     1827     8500                 PURPOSE:  To compare SBIN fields
     1828     8501                 DESCRIPTION:
     1829     8502                      SBIN fields may be from 1 to 4 bytes in length.  Move the
     1830     8503                 bytes we want to compare to the high order "LEN" bytes of
     1831     8504                 a character temp.  Then compare the two words as SBIN numbers.
     1832     8505        */
     1833     8506                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:497  
     1834     8507    1   COMPSBIN: PROC;

   8507  1 005034   200162 741300       COMPSBIN     STX1  ! FIELDIN_TEMP+2,,AUTO

     1835     8508    2          DCL CTEMP CHAR(LEN) BASED;
     1836     8509    2          DCL STEMP_FIELD SBIN;
     1837     8510    2          DCL CTEMP_FIELD REDEF STEMP_FIELD CHAR(4);
     1838     8511    2          DCL STEMP_FIELDIN SBIN;
     1839     8512    2          DCL CTEMP_FIELDIN REDEF STEMP_FIELDIN CHAR(4);
     1840     8513        /* */
     1841     8514    2          CTEMP_FIELD=FIELD$->CTEMP;

   8514  1 005035   200070 470500                    LDP0    FIELD$,,AUTO
         1 005036   200061 720100                    LXL0    LEN,,AUTO
         1 005037   040100 100540                    MLR     fill='040'O
         1 005040   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         1 005041   200163 000004                    ADSC9   STEMP_FIELD,,AUTO        cn=0,n=4

     1842     8515    2          CTEMP_FIELDIN=FIELDIN$->CTEMP;

   8515  1 005042   200071 471500                    LDP1    FIELDIN$,,AUTO
         1 005043   040100 100540                    MLR     fill='040'O
         1 005044   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 005045   200164 000004                    ADSC9   STEMP_FIELDIN,,AUTO      cn=0,n=4

     1843     8516
     1844     8517    2          IF STEMP_FIELDIN ~= STEMP_FIELD THEN

   8517  1 005046   200164 236100                    LDQ     STEMP_FIELDIN,,AUTO
         1 005047   200163 116100                    CMPQ    STEMP_FIELD,,AUTO
         1 005050   005057 600000 1                  TZE     s:8524

     1845     8518    3             DO;   /* NOT EQUAL */

     1846     8519    3             IF STEMP_FIELDIN < STEMP_FIELD THEN

   8519  1 005051   005055 605000 1                  TPL     s:8522
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:498  

     1847     8520    3                RESULT=%LESS;

   8520  1 005052   000001 235007                    LDA     1,DL
         1 005053   200031 755100                    STA     RESULT,,AUTO
         1 005054   005057 710000 1                  TRA     s:8524

     1848     8521    3             ELSE
     1849     8522    3                RESULT=%GREATER;

   8522  1 005055   000002 235007                    LDA     2,DL
         1 005056   200031 755100                    STA     RESULT,,AUTO

     1850     8523    3             END;  /* NOT EQUAL */

     1851     8524    2          RETURN;

   8524  1 005057   000001 702211                    TSX2  ! 1,X1

     1852     8525    2          END COMPSBIN;
     1853     8526               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:499  
     1854     8527        /*I*     NAME:     CURKEY
     1855     8528                 PURPOSE:  To position to the beginning of the current key.
     1856     8529                 DESCRIPTION:
     1857     8530                      If CRECX is 0, then we are positioned somewhere at the
     1858     8531                 end of a list of segments.  Loop backwards until we find the
     1859     8532                 beginning of the key.  If RPOS is set, then we are actually
     1860     8533                 positioned one beyond the current position.  Back up one
     1861     8534                 key.
     1862     8535        */
     1863     8536                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:500  
     1864     8537    1   CURKEY: PROC ALTRET;

   8537  1 005060   200132 741300       CURKEY       STX1  ! HIGH,,AUTO

     1865     8538        /* */
     1866     8539    3          DO WHILE (CRECX = 0);

   8539  1 005061   200015 235100                    LDA     CRECX,,AUTO
         1 005062   005074 601000 1                  TNZ     s:8545

     1867     8540    3             CALL BLINK ALTRET(ERR);

   8540  1 005063   002314 701000 1                  TSX1    BLINK
         1 005064   005127 702000 1                  TSX2    ERR

     1868     8541    3             CRECX=KEYCNT;

   8541  1 005065   200017 235100                    LDA     KEYCNT,,AUTO
         1 005066   200015 755100                    STA     CRECX,,AUTO

     1869     8542    3             F$DCB.CRECX=CRECX;

   8542  1 005067   000000 620005                    EAX0    0,AL
         1 005070   200007 470500                    LDP0    JDCB$,,AUTO
         1 005071   000067 440100                    SXL0    55,,PR0

     1870     8543    3          END;  /* WHILE */

   8543  1 005072   200015 235100                    LDA     CRECX,,AUTO
         1 005073   005063 600000 1                  TZE     s:8540

     1871     8544
     1872     8545    2          IF F$DCB.RPOS THEN

   8545  1 005074   200007 470500                    LDP0    JDCB$,,AUTO
         1 005075   000064 236100                    LDQ     52,,PR0
         1 005076   010000 316007                    CANQ    4096,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:501  
         1 005077   005120 600000 1                  TZE     s:8561

     1873     8546    3             DO;   /* BACK UP AGAIN */

     1874     8547    3             F$DCB.RPOS='0'B;

   8547  1 005100   000005 236000 2                  LDQ     5
         1 005101   000064 356100                    ANSQ    52,,PR0

     1875     8548    3             IF CRECX = 1 THEN

   8548  1 005102   000001 115007                    CMPA    1,DL
         1 005103   005113 601000 1                  TNZ     s:8557

     1876     8549    4                DO;   /* NO PREV KEYS HERE */

     1877     8550    4                CRECX=0;

   8550  1 005104   200015 450100                    STZ     CRECX,,AUTO

     1878     8551    5                DO UNTIL (KEYCNT ~= 0);

     1879     8552    5                   CALL BLINK ALTRET(ERR1);

   8552  1 005105   002314 701000 1                  TSX1    BLINK
         1 005106   005124 702000 1                  TSX2    ERR1

     1880     8553    5                END;

   8553  1 005107   200017 235100                    LDA     KEYCNT,,AUTO
         1 005110   005105 600000 1                  TZE     s:8552

     1881     8554    4                CRECX=KEYCNT;

   8554  1 005111   200015 755100                    STA     CRECX,,AUTO

     1882     8555    4                END;  /* NO PREV KEYS HERE */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:502  

   8555  1 005112   005115 710000 1                  TRA     s:8558

     1883     8556    3             ELSE
     1884     8557    3                CRECX=CRECX-1;

   8557  1 005113   000001 135007                    SBLA    1,DL
         1 005114   200015 755100                    STA     CRECX,,AUTO

     1885     8558    3             F$DCB.CRECX=CRECX;

   8558  1 005115   000000 620005                    EAX0    0,AL
         1 005116   200007 470500                    LDP0    JDCB$,,AUTO
         1 005117   000067 440100                    SXL0    55,,PR0

     1886     8559    3             END;  /* BACK UP AGAIN */

     1887     8560
     1888     8561    2          CALL SETPTRS;

   8561  1 005120   022001 701000 1                  TSX1    SETPTRS
         1 005121   000000 011000                    NOP     0

     1889     8562    2          RETURN;

   8562  1 005122   200132 221300                    LDX1  ! HIGH,,AUTO
         1 005123   000001 702211                    TSX2  ! 1,X1

     1890     8563
     1891     8564    2   ERR1:  F$DCB.CRECX=CRECX;

   8564  1 005124   200015 720100       ERR1         LXL0    CRECX,,AUTO
         1 005125   200007 470500                    LDP0    JDCB$,,AUTO
         1 005126   000067 440100                    SXL0    55,,PR0

     1892     8565    2   ERR:   ALTRETURN;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:503  
   8565  1 005127   200132 221300       ERR          LDX1  ! HIGH,,AUTO
         1 005130   000000 702211                    TSX2  ! 0,X1

     1893     8566    2          END CURKEY;
     1894     8567               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:504  
     1895     8568        /*I*     NAME:     CURREC
     1896     8569                 PURPOSE:  To position to the beginning of the current record
     1897     8570                 DESCRIPTION:
     1898     8571                      If this is the primary index, this is the same operation
     1899     8572                 as CURKEY.  Otherwise, we may be positioned in a list of
     1900     8573                 duplicates.  If this isn't the first segment of a duplicate
     1901     8574                 record in the list of duplicates, then back up to the start
     1902     8575                 of the record.  If RPOS is set, then we are actually one
     1903     8576                 beyond where we need to be.  Back up again.
     1904     8577        */
     1905     8578                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:505  
     1906     8579    1   CURREC: PROC ALTRET;

   8579  1 005131   200110 741300       CURREC       STX1  ! GX,,AUTO

     1907     8580        /* */
     1908     8581    2          IF INDEX# = 0 THEN

   8581  1 005132   200011 235100                    LDA     INDEX#,,AUTO
         1 005133   005140 601000 1                  TNZ     s:8587

     1909     8582    3             DO;   /* PRIMARY KEY */

     1910     8583    3             CALL CURKEY ALTRET(ERR);

   8583  1 005134   005060 701000 1                  TSX1    CURKEY
         1 005135   005203 702000 1                  TSX2    ERR

     1911     8584    3             RETURN;

   8584  1 005136   200110 221300                    LDX1  ! GX,,AUTO
         1 005137   000001 702211                    TSX2  ! 1,X1

     1912     8585    3             END;  /* PRIMARY KEY */
     1913     8586
     1914     8587    2          SEG$=PINCRW(BUF$, SEGX);

   8587  1 005140   200013 236100                    LDQ     SEGX,,AUTO
         1 005141   000022 736000                    QLS     18
         1 005142   200024 036100                    ADLQ    BUF$,,AUTO
         1 005143   200014 756100                    STQ     SEG$,,AUTO

     1915     8588
     1916     8589    2          IF SEGX = 0 OR

   8589  1 005144   200013 235100                    LDA     SEGX,,AUTO
         1 005145   005151 600000 1                  TZE     CUR_REC
         1 005146   200014 470500                    LDP0    SEG$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:506  
         1 005147   000000 234100                    SZN     0,,PR0
         1 005150   005171 604000 1                  TMI     s:8603

     1917     8590    2             NOT(FM$MISEG.FAK) THEN
     1918     8591    3   CUR_REC:  DO;  /* Position to start of current record */

   8591  1 005151                       CUR_REC      null
     1919     8592    3             IF SEGX=0 AND CRECX > KEYCNT THEN

   8592  1 005151   000000 115003                    CMPA    0,DU
         1 005152   005167 601000 1                  TNZ     s:8600
         1 005153   200015 236100                    LDQ     CRECX,,AUTO
         1 005154   005157 604000 1                  TMI     s:8594
         1 005155   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 005156   005167 604400 1                  TMOZ    s:8600

     1920     8593    4                DO;  /* EOF */

     1921     8594    4                CRECX=KEYCNT;

   8594  1 005157   200017 235100                    LDA     KEYCNT,,AUTO
         1 005160   200015 755100                    STA     CRECX,,AUTO

     1922     8595    4                F$DCB.CRECX=CRECX;

   8595  1 005161   000000 620005                    EAX0    0,AL
         1 005162   200007 470500                    LDP0    JDCB$,,AUTO
         1 005163   000067 440100                    SXL0    55,,PR0

     1923     8596    4                IF F$DCB.RPOS THEN

   8596  1 005164   000064 236100                    LDQ     52,,PR0
         1 005165   010000 316007                    CANQ    4096,DL
         1 005166   005171 601000 1                  TNZ     s:8603

     1924     8597    4                   EXIT CUR_REC; /* Don't back up twice at EOF */
     1925     8598                     /* RPOS shouldn't be 0 */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:507  
     1926     8599    4                END; /* EOF */

     1927     8600    3             CALL PREVREC ALTRET(ERR);

   8600  1 005167   016103 701000 1                  TSX1    PREVREC
         1 005170   005203 702000 1                  TSX2    ERR

     1928     8601    3             END; /* Position to start of current record */

     1929     8602
     1930     8603    2          IF F$DCB.RPOS THEN

   8603  1 005171   200007 470500                    LDP0    JDCB$,,AUTO
         1 005172   000064 236100                    LDQ     52,,PR0
         1 005173   010000 316007                    CANQ    4096,DL
         1 005174   005201 600000 1                  TZE     s:8609

     1931     8604    3             DO;   /* BACK UP ONE */

     1932     8605    3             F$DCB.RPOS='0'B;

   8605  1 005175   000005 236000 2                  LDQ     5
         1 005176   000064 356100                    ANSQ    52,,PR0

     1933     8606    3             CALL PREVREC ALTRET(ERR);

   8606  1 005177   016103 701000 1                  TSX1    PREVREC
         1 005200   005203 702000 1                  TSX2    ERR

     1934     8607    3             END;  /* BACK UP ONE */

     1935     8608
     1936     8609    2          RETURN;

   8609  1 005201   200110 221300                    LDX1  ! GX,,AUTO
         1 005202   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:508  
     1937     8610    2   ERR:   ALTRETURN;

   8610  1 005203   200110 221300       ERR          LDX1  ! GX,,AUTO
         1 005204   000000 702211                    TSX2  ! 0,X1

     1938     8611    2          END CURREC;
     1939     8612               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:509  
     1940     8613        /*I*     NAME:     DATAERROR
     1941     8614                 PURPOSE:  To record a data inconsistancy error
     1942     8615                 DESCRIPTION:
     1943     8616                      If the disk address is invalid, log an error in the
     1944     8617                 current index granule.
     1945     8618        */
     1946     8619    1   DATAERROR: PROC;

   8619  1 005205   200124 741300       DATAERROR    STX1  ! SIZE+1,,AUTO

     1947     8620    2          DCL I SBIN;
     1948     8621    2          DCL CURDA UBIN;
     1949     8622        /* */
     1950     8623    2          CALL FAF$CHKDAFR(DA) ALTRET(DATAERR1);

   8623  1 005206   200021 630500                    EPPR0   DA,,AUTO
         1 005207   200166 450500                    STP0    STEMP_FIELDIN+2,,AUTO
         1 005210   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 005211   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 005212   000000 701000 xent               TSX1    FAF$CHKDAFR
         1 005213   005216 702000 1                  TSX2    DATAERR1

     1951     8624    2          RETURN;

   8624  1 005214   200124 221300                    LDX1  ! SIZE+1,,AUTO
         1 005215   000001 702211                    TSX2  ! 1,X1

   8623  1 005216                       DATAERR1     null
     1952     8625    2   DATAERR1: ;
     1953     8626    2          I=POFFW(SEG$, BUF$);

   8626  1 005216   200024 235100                    LDA     BUF$,,AUTO
         1 005217   000022 771000                    ARL     18
         1 005220   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 005221   200014 236100                    LDQ     SEG$,,AUTO
         1 005222   000022 772000                    QRL     18
         1 005223   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:510  
         1 005224   200125 756100                    STQ     I,,AUTO

     1954     8627    2          CURDA=F$DCB.BFR.DA(1);

   8627  1 005225   200007 470500                    LDP0    JDCB$,,AUTO
         1 005226   000116 236100                    LDQ     78,,PR0
         1 005227   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 005230   200126 756100                    STQ     CURDA,,AUTO

     1955     8628    2          CALL FMB$LOGERR(%E$FREC, 23, 8, CURDA, BUF$, 0, I, I+1, CRECX);

   8628  1 005231   200125 235100                    LDA     I,,AUTO
         1 005232   000001 035007                    ADLA    1,DL
         1 005233   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 005234   200015 631500                    EPPR1   CRECX,,AUTO
         1 005235   200177 451500                    STP1    STEMP_FIELDIN+11,,AUTO
         1 005236   200166 633500                    EPPR3   STEMP_FIELDIN+2,,AUTO
         1 005237   200176 453500                    STP3    STEMP_FIELDIN+10,,AUTO
         1 005240   200125 634500                    EPPR4   I,,AUTO
         1 005241   200175 454500                    STP4    STEMP_FIELDIN+9,,AUTO
         1 005242   000000 236000 2                  LDQ     0
         1 005243   200174 756100                    STQ     STEMP_FIELDIN+8,,AUTO
         1 005244   200024 635500                    EPPR5   BUF$,,AUTO
         1 005245   200173 455500                    STP5    STEMP_FIELDIN+7,,AUTO
         1 005246   200126 636500                    EPPR6   CURDA,,AUTO
         1 005247   200172 456500                    STP6    STEMP_FIELDIN+6,,AUTO
         1 005250   000032 237000 2                  LDAQ    26
         1 005251   200170 757100                    STAQ    STEMP_FIELDIN+4,,AUTO
         1 005252   000031 236000 2                  LDQ     25
         1 005253   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 005254   200167 630500                    EPPR0   STEMP_FIELDIN+3,,AUTO
         1 005255   000021 631400 2                  EPPR1   17
         1 005256   000000 701000 xent               TSX1    FMB$LOGERR
         1 005257   000000 011000                    NOP     0

     1956     8629    2          RETURN;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:511  
   8629  1 005260   200124 221300                    LDX1  ! SIZE+1,,AUTO
         1 005261   000001 702211                    TSX2  ! 1,X1

     1957     8630    2          END DATAERROR;
     1958     8631               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:512  
     1959     8632        /*I*     NAME:     DELALL
     1960     8633                 PURPOSE:  To delete all records in the file.
     1961     8634                 DESCRIPTION:
     1962     8635                      Make sure we're on the primary index.  If the file is
     1963     8636                 not shared and this is the only user, call DELEND to
     1964     8637                 initialize all indexes to indicate that there are no records
     1965     8638                 in the file.  If the file is shared, we have to do something
     1966     8639                 like a delete with range.  First, PFIL to the beginning of
     1967     8640                 the primary index and set up our index granule variables.
     1968     8641                 Then call NXTKEY and delete the key if it isn't already
     1969     8642                 deleted. Keep doing this until we hit end of file.
     1970     8643        */
     1971     8644               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:513  
     1972     8645    1   DELALL: PROC ALTRET;

   8645  1 005262   200100 741300       DELALL       STX1  ! I+1,,AUTO

     1973     8646        /* */
     1974     8647    2          IF INDEX# ~= 0 THEN

   8647  1 005263   200011 235100                    LDA     INDEX#,,AUTO
         1 005264   005271 600000 1                  TZE     s:8653

     1975     8648    3             DO;

     1976     8649    3             INDEX#=1;

   8649  1 005265   000001 236007                    LDQ     1,DL
         1 005266   200011 756100                    STQ     INDEX#,,AUTO

     1977     8650    3             CALL SETINDEX ALTRET(FIERR);

   8650  1 005267   021667 701000 1                  TSX1    SETINDEX
         1 005270   005402 702000 1                  TSX2    FIERR

     1978     8651    3             END;

     1979     8652
     1980     8653    2          IF (F$DCB.SHARED AND F$DCB.TDA ~= 0) OR FM$CFU.USECNT > 1 THEN

   8653  1 005271   200007 470500                    LDP0    JDCB$,,AUTO
         1 005272   000064 236100                    LDQ     52,,PR0
         1 005273   100000 316003                    CANQ    32768,DU
         1 005274   005300 600000 1                  TZE     s:8653+7
         1 005275   000070 236100                    LDQ     56,,PR0
         1 005276   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 005277   005304 601000 1                  TNZ     s:8656
         1 005300   200010 471500                    LDP1    CFU$,,AUTO
         1 005301   100003 720100                    LXL0    3,,PR1
         1 005302   000002 100003                    CMPX0   2,DU
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:514  
         1 005303   005365 602000 1                  TNC     s:8680

     1981     8654    3             DO;   /* Do it the long way */

     1982     8655
     1983     8656    3             CALL PTOBOF ALTRET(ERR);

   8656  1 005304   016372 701000 1                  TSX1    PTOBOF
         1 005305   005430 702000 1                  TSX2    ERR

     1984     8657    3             KTPTR$=PINCRW(BUF$,FM$GRAN.FCEX);

   8657  1 005306   200024 470500                    LDP0    BUF$,,AUTO
         1 005307   000002 220100                    LDX0    2,,PR0
         1 005310   000000 636010                    EAQ     0,X0
         1 005311   200024 036100                    ADLQ    BUF$,,AUTO
         1 005312   200025 756100                    STQ     KTPTR$,,AUTO

     1985     8658    3             BOUND=FM$KEYTBL(0);

   8658  1 005313   200025 471500                    LDP1    KTPTR$,,AUTO
         1 005314   100000 236100                    LDQ     0,,PR1
         1 005315   000033 772000                    QRL     27
         1 005316   200016 756100                    STQ     BOUND,,AUTO

     1986     8659    3             KEYCNT=FM$GRAN.KEYCNT;

   8659  1 005317   000002 236100                    LDQ     2,,PR0
         1 005320   000777 376007                    ANQ     511,DL
         1 005321   200017 756100                    STQ     KEYCNT,,AUTO

     1987     8660    3             CRECX=0;

   8660  1 005322   200015 450100                    STZ     CRECX,,AUTO

     1988     8661    3             SEGX=0;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:515  
   8661  1 005323   200013 450100                    STZ     SEGX,,AUTO

     1989     8662    3             KEY$=ADDR(NIL);

   8662  1 005324   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 005325   200020 756100                    STQ     KEY$,,AUTO

     1990     8663    3             SEG$=ADDR(NIL);

   8663  1 005326   200014 756100                    STQ     SEG$,,AUTO

     1991     8664
     1992     8665    4             DO WHILE('1'B);

     1993     8666    4                CALL NXTKEY ALTRET(EOF);

   8666  1 005327   015105 701000 1                  TSX1    NXTKEY
         1 005330   005370 702000 1                  TSX2    EOF

     1994     8667    4                IF NOT FM$KEYENT.D THEN

   8667  1 005331   200020 470500                    LDP0    KEY$,,AUTO
         1 005332   000000 234100                    SZN     0,,PR0
         1 005333   005336 604000 1                  TMI     s:8669

     1995     8668    4                   CALL DELETE ALTRET(ERR);

   8668  1 005334   006261 701000 1                  TSX1    DELETE
         1 005335   005430 702000 1                  TSX2    ERR

     1996     8669    4                IF FPT$DELREC_V.BRK AND

   8669  1 005336   000000 470400 xsym               LDP0    B$PS0$
         1 005337   000001 236100                    LDQ     1,,PR0
         1 005340   200000 316007                    CANQ    65536,DL
         1 005341   005327 600000 1                  TZE     s:8666
         1 005342   000003 236000 xsym               LDQ     B_VECTNIL+3
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:516  
         1 005343   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 005344   000000 471400 xsym               LDP1    S$CU$
         1 005345   100001 376100                    ANQ     1,,PR1
         1 005346   005327 600000 1                  TZE     s:8666
         1 005347   000000 473400 xsym               LDP3    B_MPT
         1 005350   300010 236100                    LDQ     8,,PR3
         1 005351   000160 316007                    CANQ    112,DL
         1 005352   005327 600000 1                  TZE     s:8666

     1997     8670    4                   S$CU$->B$U.ASYNCH&(~%U_RESET) AND
     1998     8671    4                   B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
     1999     8672    5                   DO;   /* Got interrupted and OK to interrupt */

     2000     8673    5                   B$JIT.ERR=ERRPMMEINT;

   8673  1 005353   000021 236000 0                  LDQ     ERRPMMEINT
         1 005354   000000 474400 xsym               LDP4    B$JIT$
         1 005355   400012 756100                    STQ     10,,PR4

     2001     8674    5                   B$JIT.JUNK=B$JIT.JUNK|%JJ_BAKIC#;

   8674  1 005356   400315 220100                    LDX0    205,,PR4
         1 005357   001000 260003                    ORX0    512,DU
         1 005360   400315 740100                    STX0    205,,PR4

     2002     8675    5                   F$DCB.RPOS='1'B;

   8675  1 005361   200007 475500                    LDP5    JDCB$,,AUTO
         1 005362   010000 236007                    LDQ     4096,DL
         1 005363   500064 256100                    ORSQ    52,,PR5

     2003     8676    5                   GOTO ERR;

   8676  1 005364   005430 710000 1                  TRA     ERR

     2004     8677    5                   END;  /* Got interrupted and OK to interrupt */
     2005     8678    4                END; /* WHILE */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:517  

     2006     8679    3             END;  /* Do it the long way */
     2007     8680    2          ELSE DELALL_FAST='1'B; /* Do it fast */

   8680  1 005365   400000 236003                    LDQ     -131072,DU
         1 005366   200074 756100                    STQ     DELALL_FAST,,AUTO

     2008     8681
     2009     8682    3          DO WHILE('0'B);

   8682  1 005367   005400 710000 1                  TRA     s:8688

     2010     8683    3   EOF:      IF B$JIT.ERR.CODE ~= %E$EOF THEN

   8683  1 005370   000000 470400 xsym  EOF          LDP0    B$JIT$
         1 005371   000012 236100                    LDQ     10,,PR0
         1 005372   377770 376007                    ANQ     131064,DL
         1 005373   000060 116007                    CMPQ    48,DL
         1 005374   005377 600000 1                  TZE     s:8685

     2011     8684    3                ALTRETURN;

   8684  1 005375   200100 221300                    LDX1  ! I+1,,AUTO
         1 005376   000000 702211                    TSX2  ! 0,X1

     2012     8685    3             B$JIT.ERR='0'B;

   8685  1 005377   000012 450100                    STZ     10,,PR0

     2013     8686    3             END;

     2014     8687
     2015     8688    2          RETURN;

   8688  1 005400   200100 221300                    LDX1  ! I+1,,AUTO
         1 005401   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:518  
     2016     8689
     2017     8690    2   FIERR: DA=F$DCB.BFR.DA(1);

   8690  1 005402   200007 470500       FIERR        LDP0    JDCB$,,AUTO
         1 005403   000116 236100                    LDQ     78,,PR0
         1 005404   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 005405   200021 756100                    STQ     DA,,AUTO

     2018     8691    2          CALL FMB$LOGERR(%E$FREC,75,0,DA,,,,,0);

   8691  1 005406   000000 236000 2                  LDQ     0
         1 005407   200176 756100                    STQ     STEMP_FIELDIN+10,,AUTO
         1 005410   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 005411   000001 235000 xsym               LDA     B_VECTNIL+1
         1 005412   200174 757100                    STAQ    STEMP_FIELDIN+8,,AUTO
         1 005413   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 005414   000001 235000 xsym               LDA     B_VECTNIL+1
         1 005415   200172 757100                    STAQ    STEMP_FIELDIN+6,,AUTO
         1 005416   200021 631500                    EPPR1   DA,,AUTO
         1 005417   200171 451500                    STP1    STEMP_FIELDIN+5,,AUTO
         1 005420   000000 236000 2                  LDQ     0
         1 005421   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 005422   000036 237000 2                  LDAQ    30
         1 005423   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 005424   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 005425   000021 631400 2                  EPPR1   17
         1 005426   000000 701000 xent               TSX1    FMB$LOGERR
         1 005427   000000 011000                    NOP     0

     2019     8692    2   ERR:   ALTRETURN;

   8692  1 005430   200100 221300       ERR          LDX1  ! I+1,,AUTO
         1 005431   000000 702211                    TSX2  ! 0,X1

     2020     8693
     2021     8694    2   END DELALL;
     2022     8695        %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:519  
     2023     8696        /*I*     NAME:     DELALT
     2024     8697                 PURPOSE:  To delete a record from an alternate index
     2025     8698                 DESCRIPTION:
     2026     8699                      Find the key that we want to delete.  Then find the
     2027     8700                 actual record within the list of dups to delete.  Remove
     2028     8701                 the segments associated with the record.
     2029     8702        */
     2030     8703    1   DELALT: PROC ALTRET;

   8703  1 005432   200112 741300       DELALT       STX1  ! SIZE+1,,AUTO

     2031     8704        /* */
     2032     8705    2          CALL SETINDEX ALTRET(ERR);

   8705  1 005433   021667 701000 1                  TSX1    SETINDEX
         1 005434   005467 702000 1                  TSX2    ERR

     2033     8706    2          KEYIN$=PINCRC(G$, F$DCB.KEYX);

   8706  1 005435   200007 470500                    LDP0    JDCB$,,AUTO
         1 005436   000036 236100                    LDQ     30,,PR0
         1 005437   000022 772000                    QRL     18
         1 005440   000020 736000                    QLS     16
         1 005441   200026 036100                    ADLQ    G$,,AUTO
         1 005442   200037 756100                    STQ     KEYIN$,,AUTO

     2034     8707    2          COMFLG=%FMREC;

   8707  1 005443   000002 235007                    LDA     2,DL
         1 005444   200060 755100                    STA     COMFLG,,AUTO

     2035     8708    2          CALL FINDKEY ALTRET(FIERR);

   8708  1 005445   007536 701000 1                  TSX1    FINDKEY
         1 005446   005471 702000 1                  TSX2    FIERR

     2036     8709
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:520  
     2037     8710    3          DO WHILE (FM$MISEG ~= FM_MISEG);

   8710  1 005447   200014 470500                    LDP0    SEG$,,AUTO
         1 005450   000100 106500                    CMPC    fill='000'O
         1 005451   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 005452   200027 000010                    ADSC9   FM_MISEG,,AUTO           cn=0,n=8
         1 005453   005463 600000 1                  TZE     s:8714

     2038     8711    3             CALL NXTRECNM ALTRET(FIERR);

   8711  1 005454   015200 701000 1                  TSX1    NXTRECNM
         1 005455   005471 702000 1                  TSX2    FIERR

     2039     8712    3          END;

   8712  1 005456   200014 470500                    LDP0    SEG$,,AUTO
         1 005457   000100 106500                    CMPC    fill='000'O
         1 005460   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 005461   200027 000010                    ADSC9   FM_MISEG,,AUTO           cn=0,n=8
         1 005462   005454 601000 1                  TNZ     s:8711

     2040     8713
     2041     8714    2          CALL REMSEG ALTRET(ERR);

   8714  1 005463   020647 701000 1                  TSX1    REMSEG
         1 005464   005467 702000 1                  TSX2    ERR

     2042     8715    2          RETURN;

   8715  1 005465   200112 221300                    LDX1  ! SIZE+1,,AUTO
         1 005466   000001 702211                    TSX2  ! 1,X1

     2043     8716    2   ERR:   ALTRETURN;

   8716  1 005467   200112 221300       ERR          LDX1  ! SIZE+1,,AUTO
         1 005470   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:521  
     2044     8717    2   FIERR: DA=F$DCB.BFR.DA(1);

   8717  1 005471   200007 470500       FIERR        LDP0    JDCB$,,AUTO
         1 005472   000116 236100                    LDQ     78,,PR0
         1 005473   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 005474   200021 756100                    STQ     DA,,AUTO

     2045     8718    2          CALL FMB$LOGERR(%E$FREC, 75, 0, DA,,,,, INDEX#);

   8718  1 005475   200011 631500                    EPPR1   INDEX#,,AUTO
         1 005476   200176 451500                    STP1    STEMP_FIELDIN+10,,AUTO
         1 005477   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 005500   000001 235000 xsym               LDA     B_VECTNIL+1
         1 005501   200174 757100                    STAQ    STEMP_FIELDIN+8,,AUTO
         1 005502   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 005503   000001 235000 xsym               LDA     B_VECTNIL+1
         1 005504   200172 757100                    STAQ    STEMP_FIELDIN+6,,AUTO
         1 005505   200021 633500                    EPPR3   DA,,AUTO
         1 005506   200171 453500                    STP3    STEMP_FIELDIN+5,,AUTO
         1 005507   000000 236000 2                  LDQ     0
         1 005510   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 005511   000036 237000 2                  LDAQ    30
         1 005512   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 005513   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 005514   000021 631400 2                  EPPR1   17
         1 005515   000000 701000 xent               TSX1    FMB$LOGERR
         1 005516   000000 011000                    NOP     0

     2046     8719    2          RETURN;

   8719  1 005517   200112 221300                    LDX1  ! SIZE+1,,AUTO
         1 005520   000001 702211                    TSX2  ! 1,X1

     2047     8720    2          END DELALT;
     2048     8721               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:522  
     2049     8722        /*I*     NAME:     DELDUPS
     2050     8723                 PURPOSE:  To delete all duplicates of a specified key
     2051     8724                 DESCRIPTION:
     2052     8725                      Loop through the list, deleting the duplicates, then
     2053     8726                 positioning to the next record.  If there are no more
     2054     8727                 duplicates then we're done.  If the user hits break and the
     2055     8728                 pmme break option is set, then stop deleting wherever we are.
     2056     8729        */
     2057     8730                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:523  
     2058     8731    1   DELDUPS: PROC ALTRET;

   8731  1 005521   200104 741300       DELDUPS      STX1  ! NUMENTS,,AUTO

     2059     8732        /* */
     2060     8733    3          DO WHILE ('1'B);

     2061     8734    3             CALL DELETE ALTRET(ERR);

   8734  1 005522   006261 701000 1                  TSX1    DELETE
         1 005523   005572 702000 1                  TSX2    ERR

     2062     8735    3             CALL NXTRECNM ALTRET(DONE);

   8735  1 005524   015200 701000 1                  TSX1    NXTRECNM
         1 005525   005556 702000 1                  TSX2    DONE

     2063     8736    3             IF FPT$DELREC_V.BRK AND

   8736  1 005526   000000 470400 xsym               LDP0    B$PS0$
         1 005527   000001 236100                    LDQ     1,,PR0
         1 005530   200000 316007                    CANQ    65536,DL
         1 005531   005522 600000 1                  TZE     s:8734
         1 005532   000003 236000 xsym               LDQ     B_VECTNIL+3
         1 005533   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 005534   000000 471400 xsym               LDP1    S$CU$
         1 005535   100001 376100                    ANQ     1,,PR1
         1 005536   005522 600000 1                  TZE     s:8734
         1 005537   000000 473400 xsym               LDP3    B_MPT
         1 005540   300010 236100                    LDQ     8,,PR3
         1 005541   000160 316007                    CANQ    112,DL
         1 005542   005522 600000 1                  TZE     s:8734

     2064     8737    3                S$CU$->B$U.ASYNCH&(~%U_RESET) AND
     2065     8738    3                B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
     2066     8739    4                DO;   /* Got interrupted and OK to interrupt */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:524  
     2067     8740    4                B$JIT.ERR=ERRPMMEINT;

   8740  1 005543   000021 236000 0                  LDQ     ERRPMMEINT
         1 005544   000000 474400 xsym               LDP4    B$JIT$
         1 005545   400012 756100                    STQ     10,,PR4

     2068     8741    4                B$JIT.JUNK=B$JIT.JUNK|%JJ_BAKIC#;

   8741  1 005546   400315 220100                    LDX0    205,,PR4
         1 005547   001000 260003                    ORX0    512,DU
         1 005550   400315 740100                    STX0    205,,PR4

     2069     8742    4                F$DCB.RPOS='1'B;

   8742  1 005551   200007 475500                    LDP5    JDCB$,,AUTO
         1 005552   010000 236007                    LDQ     4096,DL
         1 005553   500064 256100                    ORSQ    52,,PR5

     2070     8743    4                RETURN;

   8743  1 005554   200104 221300                    LDX1  ! NUMENTS,,AUTO
         1 005555   000001 702211                    TSX2  ! 1,X1

     2071     8744    4                END;  /* Got interrupted and OK to interrupt */
     2072     8745    3          END;  /* WHILE */

     2073     8746
     2074     8747    2   DONE:  IF B$JIT.ERR.CODE ~= %E$EOF AND

   8747  1 005556   000000 470400 xsym  DONE         LDP0    B$JIT$
         1 005557   000012 236100                    LDQ     10,,PR0
         1 005560   377770 376007                    ANQ     131064,DL
         1 005561   000060 116007                    CMPQ    48,DL
         1 005562   005567 600000 1                  TZE     s:8751
         1 005563   001300 116007                    CMPQ    704,DL
         1 005564   005567 600000 1                  TZE     s:8751

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:525  
     2075     8748    2             B$JIT.ERR.CODE ~= %E$KEYCHNG THEN
     2076     8749    2             ALTRETURN;

   8749  1 005565   200104 221300                    LDX1  ! NUMENTS,,AUTO
         1 005566   000000 702211                    TSX2  ! 0,X1

     2077     8750
     2078     8751    2          B$JIT.ERR='0'B;

   8751  1 005567   000012 450100                    STZ     10,,PR0

     2079     8752
     2080     8753    2          RETURN;

   8753  1 005570   200104 221300                    LDX1  ! NUMENTS,,AUTO
         1 005571   000001 702211                    TSX2  ! 1,X1

     2081     8754    2   ERR:   ALTRETURN;

   8754  1 005572   200104 221300       ERR          LDX1  ! NUMENTS,,AUTO
         1 005573   000000 702211                    TSX2  ! 0,X1

     2082     8755    2          END DELDUPS;
     2083     8756               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:526  
     2084     8757        /*I*     NAME:     DELEND
     2085     8758                 PURPOSE:  To reclaim file space if all records are deleted
     2086     8759                 DESCRIPTION:
     2087     8760                      Don't try to reclaim space under some conditions.
     2088     8761
     2089     8762                      If DELALL_FAST is set, we know we were called by DELALL
     2090     8763                 to do a fast delete of all the records in a file.  At this
     2091     8764                 point, we know that even if we had deleted all the records
     2092     8765                 the hard way, we still would have reinitialized the file at
     2093     8766                 this time. So, act as though all the records are really gone
     2094     8767                 without bothering to delete them one by one first.
     2095     8768
     2096     8769                      Otherwise, this is a normal call to DELEND after one or
     2097     8770                 more records have been deleted. Read in the first granule and
     2098     8771                 loop through the file counting records.  This is done in case
     2099     8772                 our record count was off for some reason.
     2100     8773
     2101     8774                      If all of the records are really gone, then read in
     2102     8775                 the FDA.  Initialize the granule to indicate that there
     2103     8776                 are no records in the file.  Set up the DCB and CFU to
     2104     8777                 indicate that all of the file except for the first granule
     2105     8778                 is now available space.  Next, we have to clear out any
     2106     8779                 granules from the cache that were associated with this.
     2107     8780                 If the file has an AFIT, then buffer 1 must be flushed.
     2108     8781                 This is because the cached granule in buffer 1 had the
     2109     8782                 error flag set by the previous call to FMC$CLRFILE because
     2110     8783                 it was still in use.  If the buffer isn't flushed now,
     2111     8784                 some data may be lost.
     2112     8785
     2113     8786                      Update the information in the FIT and write the FIT back
     2114     8787                 out to disk.
     2115     8788
     2116     8789                      If this file has alternate indexes, then reinitialize
     2117     8790                 those too.
     2118     8791        */
     2119     8792                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:527  
     2120     8793    1   DELEND: PROC ALTRET;

   8793  1 005574   200100 741300       DELEND       STX1  ! I+1,,AUTO

     2121     8794    2          DCL I SBIN;
     2122     8795    2          DCL FIT$ PTR;
     2123     8796    2          DCL T$ PTR;
     2124     8797        /* */
     2125     8798    2          IF F$DCB.SHARED THEN

   8798  1 005575   200007 470500                    LDP0    JDCB$,,AUTO
         1 005576   000064 236100                    LDQ     52,,PR0
         1 005577   100000 316003                    CANQ    32768,DU
         1 005600   005603 600000 1                  TZE     s:8801

     2126     8799    2             CALL SETID;

   8799  1 005601   021643 701000 1                  TSX1    SETID
         1 005602   000000 011000                    NOP     0

     2127     8800
     2128     8801    2          IF (NOT DELALL_FAST AND (FM$CFU.NRECS ~= 0 OR

   8801  1 005603   200074 234100                    SZN     DELALL_FAST,,AUTO
         1 005604   005613 604000 1                  TMI     s:8801+8
         1 005605   200010 470500                    LDP0    CFU$,,AUTO
         1 005606   000001 235100                    LDA     1,,PR0
         1 005607   005626 601000 1                  TNZ     s:8805
         1 005610   200007 471500                    LDP1    JDCB$,,AUTO
         1 005611   100000 235100                    LDA     0,,PR1
         1 005612   005626 600000 1                  TZE     s:8805
         1 005613   200007 470500                    LDP0    JDCB$,,AUTO
         1 005614   000064 236100                    LDQ     52,,PR0
         1 005615   100000 316003                    CANQ    32768,DU
         1 005616   005622 600000 1                  TZE     s:8801+15
         1 005617   000070 236100                    LDQ     56,,PR0
         1 005620   000032 316000 xsym               CANQ    B_VECTNIL+26
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:528  
         1 005621   005626 601000 1                  TNZ     s:8805
         1 005622   200010 471500                    LDP1    CFU$,,AUTO
         1 005623   100003 720100                    LXL0    3,,PR1
         1 005624   000002 100003                    CMPX0   2,DU
         1 005625   005630 602000 1                  TNC     s:8807

     2129     8802    2             F$DCB.ARS = 0)) OR
     2130     8803    2             (F$DCB.SHARED AND F$DCB.TDA ~= 0) OR
     2131     8804    2             FM$CFU.USECNT > 1 THEN
     2132     8805    2             RETURN;

   8805  1 005626   200100 221300                    LDX1  ! I+1,,AUTO
         1 005627   000001 702211                    TSX2  ! 1,X1

     2133     8806
     2134     8807    2          CALL FMD$FLSHBUF(0);

   8807  1 005630   000000 630400 2                  EPPR0   0
         1 005631   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 005632   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 005633   000000 011000                    NOP     0

     2135     8808    2          F$DCB.LVL=0;

   8808  1 005634   200007 470500                    LDP0    JDCB$,,AUTO
         1 005635   000035 236000 2                  LDQ     29
         1 005636   000067 356100                    ANSQ    55,,PR0

     2136     8809
     2137     8810    2          IF NOT DELALL_FAST THEN

   8810  1 005637   200074 234100                    SZN     DELALL_FAST,,AUTO
         1 005640   005730 604000 1                  TMI     s:8836

     2138     8811    3             DO; /* Count the records */

     2139     8812    3             IF ALTKEY$ ~= ADDR(NIL) THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:529  

   8812  1 005641   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 005642   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 005643   005650 600000 1                  TZE     s:8817

     2140     8813    4                DO;  /* Get primary key */

     2141     8814    4                INDEX#=1;

   8814  1 005644   000001 235007                    LDA     1,DL
         1 005645   200011 755100                    STA     INDEX#,,AUTO

     2142     8815    4                CALL SETINDEX ALTRET(ERR);

   8815  1 005646   021667 701000 1                  TSX1    SETINDEX
         1 005647   006257 702000 1                  TSX2    ERR

     2143     8816    4                END;

     2144     8817    3             CALL FMD$REDBUF(BUF$, 1, FM_FRZERO, 0, 0) ALTRET(ERR);

   8817  1 005650   000000 236000 2                  LDQ     0
         1 005651   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 005652   000040 237000 2                  LDAQ    32
         1 005653   200170 757100                    STAQ    STEMP_FIELDIN+4,,AUTO
         1 005654   000001 236000 2                  LDQ     1
         1 005655   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 005656   200024 630500                    EPPR0   BUF$,,AUTO
         1 005657   200166 450500                    STP0    STEMP_FIELDIN+2,,AUTO
         1 005660   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 005661   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 005662   000000 701000 xent               TSX1    FMD$REDBUF
         1 005663   006257 702000 1                  TSX2    ERR

     2145     8818    3             F$DCB.CRECX=0;

   8818  1 005664   000000 220003                    LDX0    0,DU
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:530  
         1 005665   200007 470500                    LDP0    JDCB$,,AUTO
         1 005666   000067 440100                    SXL0    55,,PR0

     2146     8819    3             F$DCB.RPOS='0'B;

   8819  1 005667   000005 236000 2                  LDQ     5
         1 005670   000064 356100                    ANSQ    52,,PR0

     2147     8820    3             F$DCB.INDX=1;

   8820  1 005671   000001 221003                    LDX1    1,DU
         1 005672   000077 741100                    STX1    63,,PR0

     2148     8821    3             KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

   8821  1 005673   200024 471500                    LDP1    BUF$,,AUTO
         1 005674   100002 222100                    LDX2    2,,PR1
         1 005675   000000 636012                    EAQ     0,X2
         1 005676   200024 036100                    ADLQ    BUF$,,AUTO
         1 005677   200025 756100                    STQ     KTPTR$,,AUTO

     2149     8822    3             BOUND=FM$KEYTBL(0);

   8822  1 005700   200025 473500                    LDP3    KTPTR$,,AUTO
         1 005701   300000 236100                    LDQ     0,,PR3
         1 005702   000033 772000                    QRL     27
         1 005703   200016 756100                    STQ     BOUND,,AUTO

     2150     8823    3             KEYCNT=FM$GRAN.KEYCNT;

   8823  1 005704   100002 236100                    LDQ     2,,PR1
         1 005705   000777 376007                    ANQ     511,DL
         1 005706   200017 756100                    STQ     KEYCNT,,AUTO

     2151     8824
     2152     8825    4             DO WHILE('1'B);

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:531  
     2153     8826    4                CALL NXTRECND ALTRET(EOF);

   8826  1 005707   015332 701000 1                  TSX1    NXTRECND
         1 005710   005714 702000 1                  TSX2    EOF

     2154     8827    4                FM$CFU.NRECS=FM$CFU.NRECS+1;

   8827  1 005711   200010 470500                    LDP0    CFU$,,AUTO
         1 005712   000001 054100                    AOS     1,,PR0

     2155     8828    4             END;  /* WHILE */

   8828  1 005713   005707 710000 1                  TRA     s:8826

     2156     8829
     2157     8830    3   EOF:      IF B$JIT.ERR.CODE ~= %E$EOF THEN

   8830  1 005714   000000 470400 xsym  EOF          LDP0    B$JIT$
         1 005715   000012 236100                    LDQ     10,,PR0
         1 005716   377770 376007                    ANQ     131064,DL
         1 005717   000060 116007                    CMPQ    48,DL
         1 005720   005723 600000 1                  TZE     s:8832

     2158     8831    3                ALTRETURN;

   8831  1 005721   200100 221300                    LDX1  ! I+1,,AUTO
         1 005722   000000 702211                    TSX2  ! 0,X1

     2159     8832    3             B$JIT.ERR='0'B;

   8832  1 005723   000012 450100                    STZ     10,,PR0

     2160     8833    3             F$DCB.NRECS=FM$CFU.NRECS;

   8833  1 005724   200010 471500                    LDP1    CFU$,,AUTO
         1 005725   200007 473500                    LDP3    JDCB$,,AUTO
         1 005726   100001 235100                    LDA     1,,PR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:532  
         1 005727   300042 755100                    STA     34,,PR3

     2161     8834    3             END;  /* Count the records */

     2162     8835
     2163     8836    2          IF F$DCB.NRECS = 0 OR DELALL_FAST THEN

   8836  1 005730   200007 470500                    LDP0    JDCB$,,AUTO
         1 005731   000042 235100                    LDA     34,,PR0
         1 005732   005735 600000 1                  TZE     s:8838
         1 005733   200074 234100                    SZN     DELALL_FAST,,AUTO
         1 005734   006245 605000 1                  TPL     s:8906

     2164     8837    3             DO;   /* ZERO RECORDS */

     2165     8838    4             DO I=2 TO 4;

   8838  1 005735   000002 236007                    LDQ     2,DL
         1 005736   200101 756100                    STQ     I,,AUTO

     2166     8839    4                IF F$DCB.BFR.DA(I) < FM_SRZERO THEN

   8839  1 005737   200007 470500                    LDP0    JDCB$,,AUTO
         1 005740   200101 720100                    LXL0    I,,AUTO
         1 005741   000115 236110                    LDQ     77,X0,PR0
         1 005742   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 005743   000000 116000 xsym               CMPQ    FM_SRZERO
         1 005744   005753 603000 1                  TRC     s:8841

     2167     8840    4                   CALL FMD$FLSHBUF(I);

   8840  1 005745   200101 631500                    EPPR1   I,,AUTO
         1 005746   200166 451500                    STP1    STEMP_FIELDIN+2,,AUTO
         1 005747   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 005750   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 005751   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 005752   000000 011000                    NOP     0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:533  

     2168     8841    4             END;  /* DO I */

   8841  1 005753   200101 054100                    AOS     I,,AUTO
         1 005754   200101 235100                    LDA     I,,AUTO
         1 005755   000004 115007                    CMPA    4,DL
         1 005756   005737 604400 1                  TMOZ    s:8839

     2169     8842
     2170     8843    3             CALL FMD$REDBUF(BUF$, 1, FM_FRZERO,, 0) ALTRET(ERR);

   8843  1 005757   000000 236000 2                  LDQ     0
         1 005760   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 005761   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 005762   000040 235000 2                  LDA     32
         1 005763   200170 757100                    STAQ    STEMP_FIELDIN+4,,AUTO
         1 005764   000001 236000 2                  LDQ     1
         1 005765   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 005766   200024 630500                    EPPR0   BUF$,,AUTO
         1 005767   200166 450500                    STP0    STEMP_FIELDIN+2,,AUTO
         1 005770   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 005771   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 005772   000000 701000 xent               TSX1    FMD$REDBUF
         1 005773   006257 702000 1                  TSX2    ERR

     2171     8844
     2172     8845    3             FM$GRAN.FLINK=0;

   8845  1 005774   200024 470500                    LDP0    BUF$,,AUTO
         1 005775   000004 450100                    STZ     4,,PR0

     2173     8846    3             FM$GRAN.NAVX=FM$GRAN.FCEX+SIZEW(FM$KEYTBL);

   8846  1 005776   200024 470500                    LDP0    BUF$,,AUTO
         1 005777   000002 220100                    LDX0    2,,PR0
         1 006000   000106 621010                    EAX1    70,X0
         1 006001   000001 741100                    STX1    1,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:534  

     2174     8847    3             FM$GRAN.AVAIL=1024-FM$GRAN.NAVX;

   8847  1 006002   200024 470500                    LDP0    BUF$,,AUTO
         1 006003   000001 236100                    LDQ     1,,PR0
         1 006004   000022 772000                    QRL     18
         1 006005   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 006006   002001 036007                    ADLQ    1025,DL
         1 006007   000001 676100                    ERQ     1,,PR0
         1 006010   001777 376007                    ANQ     1023,DL
         1 006011   000001 656100                    ERSQ    1,,PR0

     2175     8848    3             FM$GRAN.KEYCNT=0;

   8848  1 006012   200024 470500                    LDP0    BUF$,,AUTO
         1 006013   000000 236003                    LDQ     0,DU
         1 006014   000002 552104                    STBQ    2,'04'O,PR0

     2176     8849
     2177     8850    3             KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

   8850  1 006015   200024 470500                    LDP0    BUF$,,AUTO
         1 006016   000002 220100                    LDX0    2,,PR0
         1 006017   000000 636010                    EAQ     0,X0
         1 006020   200024 036100                    ADLQ    BUF$,,AUTO
         1 006021   200025 756100                    STQ     KTPTR$,,AUTO

     2178     8851    3             FM$KEYTBL=INITKEYTBL;

   8851  1 006022   200025 471500                    LDP1    KTPTR$,,AUTO
         1 006023   000100 100400                    MLR     fill='000'O
         1 006024   000037 000001 0                  ADSC9   INITKEYTBL               cn=0,n=1
         1 006025   100000 000430                    ADSC9   0,,PR1                   cn=0,n=280

     2179     8852
     2180     8853    3             F$DCB.BFR.BUFUP(1)='1'B;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:535  
   8853  1 006026   200007 470500                    LDP0    JDCB$,,AUTO
         1 006027   400000 236003                    LDQ     -131072,DU
         1 006030   000116 256100                    ORSQ    78,,PR0

     2181     8854    3             F$DCB.BFR.SCRUB(1)='1'B;

   8854  1 006031   200000 236003                    LDQ     65536,DU
         1 006032   000116 256100                    ORSQ    78,,PR0

     2182     8855    3             IF DELALL_FAST THEN

   8855  1 006033   200074 234100                    SZN     DELALL_FAST,,AUTO
         1 006034   006042 605000 1                  TPL     s:8861

     2183     8856    4                DO;

     2184     8857    4                F$DCB.ARS=FM$CFU.NRECS;

   8857  1 006035   200010 473500                    LDP3    CFU$,,AUTO
         1 006036   300001 235100                    LDA     1,,PR3
         1 006037   000000 755100                    STA     0,,PR0

     2185     8858    4                FM$CFU.NRECS=0;

   8858  1 006040   300001 450100                    STZ     1,,PR3

     2186     8859    4                F$DCB.NRECS=0;

   8859  1 006041   000042 450100                    STZ     34,,PR0

     2187     8860    4                END;

     2188     8861    3             F$DCB.TDA=0;

   8861  1 006042   000000 236003                    LDQ     0,DU
         1 006043   000070 552134                    STBQ    56,'34'O,PR0

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:536  
     2189     8862    3             F$DCB.TDALVL=0;

   8862  1 006044   000042 236000 2                  LDQ     34
         1 006045   000067 356100                    ANSQ    55,,PR0

     2190     8863    3             F$DCB.SLIDE=1;

   8863  1 006046   001000 236007                    LDQ     512,DL
         1 006047   000003 552110                    STBQ    3,'10'O,PR0

     2191     8864    3             F$DCB.CRECX=0;

   8864  1 006050   000000 220003                    LDX0    0,DU
         1 006051   000067 440100                    SXL0    55,,PR0

     2192     8865    3             F$DCB.RPOS='0'B;

   8865  1 006052   000005 236000 2                  LDQ     5
         1 006053   000064 356100                    ANSQ    52,,PR0

     2193     8866
     2194     8867    3             FM$CFU.GDA=0;

   8867  1 006054   200010 473500                    LDP3    CFU$,,AUTO
         1 006055   000000 236003                    LDQ     0,DU
         1 006056   300005 552134                    STBQ    5,'34'O,PR3

     2195     8868    3             FM$CFU.ULBLD=0;

   8868  1 006057   000043 236000 2                  LDQ     35
         1 006060   300006 356100                    ANSQ    6,,PR3

     2196     8869    3             FM$CFU.B=0;

   8869  1 006061   000044 236000 2                  LDQ     36
         1 006062   300006 356100                    ANSQ    6,,PR3

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:537  
     2197     8870    3             FM$CFU.RCSZ=0;

   8870  1 006063   000000 236003                    LDQ     0,DU
         1 006064   300004 552140                    STBQ    4,'40'O,PR3

     2198     8871    3             FM$CFU.SLIDE=1;

   8871  1 006065   001000 236003                    LDQ     512,DU
         1 006066   300005 552140                    STBQ    5,'40'O,PR3

     2199     8872    3             FM$CFU.LDA=FM_FRZERO;

   8872  1 006067   000100 101400                    MRL     fill='000'O
         1 006070   000000 000004 xsym               ADSC9   FM_FRZERO                cn=0,n=4
         1 006071   300006 400003                    ADSC9   6,,PR3                   cn=2,n=3

     2200     8873    3             FM$CFU.NGAVAL=FM$CFU.NGAVAL+FM$CFU.UGRANS-1;

   8873  1 006072   300004 236100                    LDQ     4,,PR3
         1 006073   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 006074   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 006075   300007 236100                    LDQ     7,,PR3
         1 006076   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 006077   200166 036100                    ADLQ    STEMP_FIELDIN+2,,AUTO
         1 006100   000001 136007                    SBLQ    1,DL
         1 006101   300007 552134                    STBQ    7,'34'O,PR3

     2201     8874    3             FM$CFU.UGRANS=1;

   8874  1 006102   000001 236007                    LDQ     1,DL
         1 006103   300004 552134                    STBQ    4,'34'O,PR3

     2202     8875
     2203     8876    3             BUFNUM=0;

   8876  1 006104   200044 450100                    STZ     BUFNUM,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:538  
     2204     8877    3             CALL FMN$GETFIT(BUF$, BUFNUM) ALTRET(FITERR1);

   8877  1 006105   200044 634500                    EPPR4   BUFNUM,,AUTO
         1 006106   200167 454500                    STP4    STEMP_FIELDIN+3,,AUTO
         1 006107   200024 635500                    EPPR5   BUF$,,AUTO
         1 006110   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 006111   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 006112   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 006113   000000 701000 xent               TSX1    FMN$GETFIT
         1 006114   006252 702000 1                  TSX2    FITERR1

     2205     8878    3             FIT$=PINCRW(BUF$, SIZEW(FM$GRAN));

   8878  1 006115   200024 236100                    LDQ     BUF$,,AUTO
         1 006116   000005 036003                    ADLQ    5,DU
         1 006117   200102 756100                    STQ     FIT$,,AUTO

     2206     8879    3             CALL FMC$CLRFILE(FIT$);

   8879  1 006120   200102 630500                    EPPR0   FIT$,,AUTO
         1 006121   200166 450500                    STP0    STEMP_FIELDIN+2,,AUTO
         1 006122   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 006123   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 006124   000000 701000 xent               TSX1    FMC$CLRFILE
         1 006125   000000 011000                    NOP     0

     2207     8880    3             F$DCB.GTYP=FMGTFILE;

   8880  1 006126   200007 470500                    LDP0    JDCB$,,AUTO
         1 006127   000064 236100                    LDQ     52,,PR0
         1 006130   000045 376000 2                  ANQ     37
         1 006131   030000 276003                    ORQ     12288,DU
         1 006132   000064 756100                    STQ     52,,PR0

     2208     8881    3             T$=PINCRW(BUF$, SIZEW(FM$GRAN));

   8881  1 006133   200024 236100                    LDQ     BUF$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:539  
         1 006134   000005 036003                    ADLQ    5,DU
         1 006135   200103 756100                    STQ     T$,,AUTO

     2209     8882    3             CALL FMO$LOCCODP(T$, 2) ALTRET(FITERR);

   8882  1 006136   000046 236000 2                  LDQ     38
         1 006137   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 006140   200103 631500                    EPPR1   T$,,AUTO
         1 006141   200166 451500                    STP1    STEMP_FIELDIN+2,,AUTO
         1 006142   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 006143   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 006144   000000 701000 xent               TSX1    FMO$LOCCODP
         1 006145   006247 702000 1                  TSX2    FITERR

     2210     8883    3             T$->CODE02.TDA=0;

   8883  1 006146   200103 470500                    LDP0    T$,,AUTO
         1 006147   000000 236003                    LDQ     0,DU
         1 006150   000001 552134                    STBQ    1,'34'O,PR0

     2211     8884    3             T$->CODE02.GDA=0;

   8884  1 006151   200103 470500                    LDP0    T$,,AUTO
         1 006152   000002 552134                    STBQ    2,'34'O,PR0

     2212     8885    3             T$->CODE02.SLIDE=1;

   8885  1 006153   200103 470500                    LDP0    T$,,AUTO
         1 006154   000001 236007                    LDQ     1,DL
         1 006155   000000 552104                    STBQ    0,'04'O,PR0

     2213     8886    3             T$=PINCRW(BUF$, SIZEW(FM$GRAN));

   8886  1 006156   200024 236100                    LDQ     BUF$,,AUTO
         1 006157   000005 036003                    ADLQ    5,DU
         1 006160   200103 756100                    STQ     T$,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:540  
     2214     8887
     2215     8888    3             CALL FMO$LOCCODP(T$, 3) ALTRET(FITERR);

   8888  1 006161   000014 236000 2                  LDQ     12
         1 006162   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 006163   200103 630500                    EPPR0   T$,,AUTO
         1 006164   200166 450500                    STP0    STEMP_FIELDIN+2,,AUTO
         1 006165   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 006166   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 006167   000000 701000 xent               TSX1    FMO$LOCCODP
         1 006170   006247 702000 1                  TSX2    FITERR

     2216     8889    3             T$->CODE03.RCSZ=0;

   8889  1 006171   200103 470500                    LDP0    T$,,AUTO
         1 006172   000000 236003                    LDQ     0,DU
         1 006173   000003 552140                    STBQ    3,'40'O,PR0

     2217     8890    3             T$->CODE03.NRECS=0;

   8890  1 006174   200103 470500                    LDP0    T$,,AUTO
         1 006175   000002 450100                    STZ     2,,PR0

     2218     8891    3             T$->CODE03.LDA=FM_FRZERO;

   8891  1 006176   200103 470500                    LDP0    T$,,AUTO
         1 006177   000000 236000 xsym               LDQ     FM_FRZERO
         1 006200   000004 552134                    STBQ    4,'34'O,PR0

     2219     8892
     2220     8893    3             IF BUFNUM ~= 1 THEN

   8893  1 006201   200044 235100                    LDA     BUFNUM,,AUTO
         1 006202   000001 115007                    CMPA    1,DL
         1 006203   006212 600000 1                  TZE     s:8895

     2221     8894    3                CALL FMD$WRTBUF(BUFNUM);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:541  

   8894  1 006204   200044 630500                    EPPR0   BUFNUM,,AUTO
         1 006205   200166 450500                    STP0    STEMP_FIELDIN+2,,AUTO
         1 006206   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 006207   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 006210   000000 701000 xent               TSX1    FMD$WRTBUF
         1 006211   000000 011000                    NOP     0

     2222     8895    3             CALL FMD$WRTSV(1);

   8895  1 006212   000001 630400 2                  EPPR0   1
         1 006213   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 006214   000000 701000 xent               TSX1    FMD$WRTSV
         1 006215   000000 011000                    NOP     0

     2223     8896    3             IF FM$CFU.AFIT = 1 THEN

   8896  1 006216   200010 470500                    LDP0    CFU$,,AUTO
         1 006217   000000 236100                    LDQ     0,,PR0
         1 006220   001000 376003                    ANQ     512,DU
         1 006221   001000 116003                    CMPQ    512,DU
         1 006222   006227 601000 1                  TNZ     s:8898

     2224     8897    3                CALL FMD$FLSHBUF(1);

   8897  1 006223   000001 630400 2                  EPPR0   1
         1 006224   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 006225   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 006226   000000 011000                    NOP     0

     2225     8898    3             IF ALTKEY$ ~= ADDR(NIL) THEN

   8898  1 006227   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 006230   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 006231   006242 600000 1                  TZE     s:8903

     2226     8899    3                IF ORG = %INDEXED# THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:542  

   8899  1 006232   200022 235100                    LDA     ORG,,AUTO
         1 006233   000006 115007                    CMPA    6,DL
         1 006234   006240 601000 1                  TNZ     s:8902

     2227     8900    3                   CALL INIT_AKEY ALTRET(ERR);

   8900  1 006235   011460 701000 1                  TSX1    INIT_AKEY
         1 006236   006257 702000 1                  TSX2    ERR
         1 006237   006242 710000 1                  TRA     s:8903

     2228     8901    3                ELSE
     2229     8902    3                   CALL INIT_IRKEY ALTRET(ERR);

   8902  1 006240   011720 701000 1                  TSX1    INIT_IRKEY
         1 006241   006257 702000 1                  TSX2    ERR

     2230     8903    3             FM$CFU.ALTBLD='0'B;

   8903  1 006242   200010 470500                    LDP0    CFU$,,AUTO
         1 006243   000047 236000 2                  LDQ     39
         1 006244   000006 356100                    ANSQ    6,,PR0

     2231     8904    3             END;  /* ZERO RECORDS */

     2232     8905
     2233     8906    2          RETURN;

   8906  1 006245   200100 221300                    LDX1  ! I+1,,AUTO
         1 006246   000001 702211                    TSX2  ! 1,X1

     2234     8907    2   FITERR: B$JIT.ERR=ERRFIT;

   8907  1 006247   000013 236000 0     FITERR       LDQ     ERRFIT
         1 006250   000000 470400 xsym               LDP0    B$JIT$
         1 006251   000012 756100                    STQ     10,,PR0

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:543  
   8898  1 006252                       FITERR1      null
     2235     8908    2   FITERR1: ;
     2236     8909    2          F$DCB.GTYP=FMGTFILE;

   8909  1 006252   200007 470500                    LDP0    JDCB$,,AUTO
         1 006253   000064 236100                    LDQ     52,,PR0
         1 006254   000045 376000 2                  ANQ     37
         1 006255   030000 276003                    ORQ     12288,DU
         1 006256   000064 756100                    STQ     52,,PR0

     2237     8910        /*E*   ERROR:   FMG-E$FIT-2
     2238     8911               MESSAGE: Error reading FIT of %FN while deleting all records
     2239     8912               DESCRIPTION:
     2240     8913                  An error occurred while trying to update UGRANS and NGAVAL
     2241     8914                  in the FIT after the number of records in the file went
     2242     8915                  to zero.
     2243     8916        */
     2244     8917    2   ERR:   ALTRETURN;

   8917  1 006257   200100 221300       ERR          LDX1  ! I+1,,AUTO
         1 006260   000000 702211                    TSX2  ! 0,X1

     2245     8918    2          END DELEND;
     2246     8919               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:544  
     2247     8920        /*I*     NAME:     DELETE
     2248     8921                 PURPOSE:  To delete a record from a file
     2249     8922                 DESCRIPTION:
     2250     8923                      If the user is trying to delete a record from an
     2251     8924                 alternate index, then first find the primary key associated
     2252     8925                 with this record.  We want to start from there.
     2253     8926
     2254     8927                      Delete the record.
     2255     8928
     2256     8929                      If there are alternate indexes, then we have to delete
     2257     8930                 those records too.  Set up FM_MISEG so we can locate a record
     2258     8931                 within a list of duplicates.  Loop through the file, deleting
     2259     8932                 the records from all of the alternate indexes.
     2260     8933
     2261     8934                      Restore the index back to whatever it was.
     2262     8935        */
     2263     8936                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:545  
     2264     8937    1   DELETE: PROC ALTRET;

   8937  1 006261   200106 741300       DELETE       STX1  ! ICHNG,,AUTO

     2265     8938    2          DCL I SBIN;
     2266     8939    2          DCL NUMENTS UBIN;
     2267     8940    2          DCL UNIQUE BIT(1);
     2268     8941        /* */
     2269     8942    2          IF INDEX# ~= 0 THEN

   8942  1 006262   200011 235100                    LDA     INDEX#,,AUTO
         1 006263   006347 600000 1                  TZE     s:8959

     2270     8943    3             DO;   /* GET PRIMARY KEY */

     2271     8944    3             DA=FM$MISEG.GDA;

   8944  1 006264   200014 470500                    LDP0    SEG$,,AUTO
         1 006265   000001 236100                    LDQ     1,,PR0
         1 006266   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 006267   200021 756100                    STQ     DA,,AUTO

     2272     8945    3             F$DCB.LVL=7;

   8945  1 006270   200007 471500                    LDP1    JDCB$,,AUTO
         1 006271   070000 236003                    LDQ     28672,DU
         1 006272   100067 256100                    ORSQ    55,,PR1

     2273     8946    3             DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));

   8946  1 006273   100115 236100                    LDQ     77,,PR1
         1 006274   000033 772000                    QRL     27
         1 006275   000037 376007                    ANQ     31,DL
         1 006276   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 006277   200040 756100                    STQ     DBUF$,,AUTO

     2274     8947    3             IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= DA THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:546  

   8947  1 006300   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 006301   006306 600000 1                  TZE     s:8948
         1 006302   100115 236100                    LDQ     77,,PR1
         1 006303   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 006304   200021 116100                    CMPQ    DA,,AUTO
         1 006305   006320 600000 1                  TZE     s:8949

     2275     8948    3                CALL FMD$REDBUF(DBUF$, 0, DA) ALTRET(DATAERR);

   8948  1 006306   200021 633500                    EPPR3   DA,,AUTO
         1 006307   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 006310   000000 236000 2                  LDQ     0
         1 006311   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 006312   200040 634500                    EPPR4   DBUF$,,AUTO
         1 006313   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 006314   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 006315   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 006316   000000 701000 xent               TSX1    FMD$REDBUF
         1 006317   006571 702000 1                  TSX2    DATAERR

     2276     8949    3             G$=PINCRW(DBUF$, FM$MISEG.GX);

   8949  1 006320   200014 470500                    LDP0    SEG$,,AUTO
         1 006321   000000 236100                    LDQ     0,,PR0
         1 006322   000014 772000                    QRL     12
         1 006323   001777 376007                    ANQ     1023,DL
         1 006324   000022 736000                    QLS     18
         1 006325   200040 036100                    ADLQ    DBUF$,,AUTO
         1 006326   200026 756100                    STQ     G$,,AUTO

     2277     8950
     2278     8951    3             INDEX#=1;

   8951  1 006327   000001 235007                    LDA     1,DL
         1 006330   200011 755100                    STA     INDEX#,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:547  
     2279     8952    3             CALL SETINDEX ALTRET(FIERR);

   8952  1 006331   021667 701000 1                  TSX1    SETINDEX
         1 006332   006542 702000 1                  TSX2    FIERR

     2280     8953    3             KEYIN$=PINCRC(G$, F$DCB.KEYX);

   8953  1 006333   200007 470500                    LDP0    JDCB$,,AUTO
         1 006334   000036 236100                    LDQ     30,,PR0
         1 006335   000022 772000                    QRL     18
         1 006336   000020 736000                    QLS     16
         1 006337   200026 036100                    ADLQ    G$,,AUTO
         1 006340   200037 756100                    STQ     KEYIN$,,AUTO

     2281     8954    3             CALL RESTOREPOS ALTRET(ERR);

   8954  1 006341   021403 701000 1                  TSX1    RESTOREPOS
         1 006342   006573 702000 1                  TSX2    ERR

     2282     8955    3             COMFLG=%FMREC;

   8955  1 006343   000002 235007                    LDA     2,DL
         1 006344   200060 755100                    STA     COMFLG,,AUTO

     2283     8956    3             CALL FINDKEY ALTRET(FIERR);

   8956  1 006345   007536 701000 1                  TSX1    FINDKEY
         1 006346   006542 702000 1                  TSX2    FIERR

     2284     8957    3             END;  /* GET PRIMARY KEY */

     2285     8958
     2286     8959    2          FM$CFU.FMOD='1'B;

   8959  1 006347   200010 470500                    LDP0    CFU$,,AUTO
         1 006350   004000 236003                    LDQ     2048,DU
         1 006351   000000 256100                    ORSQ    0,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:548  

     2287     8960    2          FM$KEYENT.D='1'B;

   8960  1 006352   200020 471500                    LDP1    KEY$,,AUTO
         1 006353   400000 236003                    LDQ     -131072,DU
         1 006354   100000 256100                    ORSQ    0,,PR1

     2288     8961    2          F$DCB.BFR.BUFUP(1)='1'B;

   8961  1 006355   200007 471500                    LDP1    JDCB$,,AUTO
         1 006356   100116 256100                    ORSQ    78,,PR1

     2289     8962    2          FM$CFU.NRECS=FM$CFU.NRECS-1;

   8962  1 006357   000001 336007                    LCQ     1,DL
         1 006360   000001 056100                    ASQ     1,,PR0

     2290     8963    2          F$DCB.NRECS=FM$CFU.NRECS;

   8963  1 006361   000001 235100                    LDA     1,,PR0
         1 006362   100042 755100                    STA     34,,PR1

     2291     8964    2          F$DCB.ARS=F$DCB.ARS+1;

   8964  1 006363   100000 054100                    AOS     0,,PR1

     2292     8965
     2293     8966    2          IF ALTKEY$ ~= ADDR(NIL) THEN

   8966  1 006364   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 006365   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 006366   006526 600000 1                  TZE     s:8999

     2294     8967    3             DO;   /* DELETE ALTERNATE INDEXES */

     2295     8968    3             FM_MISEG=FM$MISEG;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:549  
   8968  1 006367   200014 473500                    LDP3    SEG$,,AUTO
         1 006370   000100 100500                    MLR     fill='000'O
         1 006371   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8
         1 006372   200027 000010                    ADSC9   FM_MISEG,,AUTO           cn=0,n=8

     2296     8969    3             ADDR(FM_MISEG)->FM$MISEG.FAK='1'B;

   8969  1 006373   400000 236003                    LDQ     -131072,DU
         1 006374   200027 256100                    ORSQ    FM_MISEG,,AUTO

     2297     8970    3             DA=FM$MISEG.GDA;

   8970  1 006375   300001 236100                    LDQ     1,,PR3
         1 006376   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 006377   200021 756100                    STQ     DA,,AUTO

     2298     8971    3             F$DCB.LVL=7;

   8971  1 006400   070000 236003                    LDQ     28672,DU
         1 006401   100067 256100                    ORSQ    55,,PR1

     2299     8972    3             DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));

   8972  1 006402   100115 236100                    LDQ     77,,PR1
         1 006403   000033 772000                    QRL     27
         1 006404   000037 376007                    ANQ     31,DL
         1 006405   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 006406   200040 756100                    STQ     DBUF$,,AUTO

     2300     8973    3             IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= DA THEN

   8973  1 006407   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 006410   006415 600000 1                  TZE     s:8974
         1 006411   100115 236100                    LDQ     77,,PR1
         1 006412   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 006413   200021 116100                    CMPQ    DA,,AUTO
         1 006414   006427 600000 1                  TZE     s:8975
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:550  

     2301     8974    3                CALL FMD$REDBUF(DBUF$, 0, DA) ALTRET(DATAERR);

   8974  1 006415   200021 634500                    EPPR4   DA,,AUTO
         1 006416   200170 454500                    STP4    STEMP_FIELDIN+4,,AUTO
         1 006417   000000 236000 2                  LDQ     0
         1 006420   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 006421   200040 635500                    EPPR5   DBUF$,,AUTO
         1 006422   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 006423   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 006424   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 006425   000000 701000 xent               TSX1    FMD$REDBUF
         1 006426   006571 702000 1                  TSX2    DATAERR

     2302     8975    3             G$=PINCRW(DBUF$, FM$MISEG.GX);

   8975  1 006427   200014 470500                    LDP0    SEG$,,AUTO
         1 006430   000000 236100                    LDQ     0,,PR0
         1 006431   000014 772000                    QRL     12
         1 006432   001777 376007                    ANQ     1023,DL
         1 006433   000022 736000                    QLS     18
         1 006434   200040 036100                    ADLQ    DBUF$,,AUTO
         1 006435   200026 756100                    STQ     G$,,AUTO

     2303     8976
     2304     8977    3             IF ORG = %INDEXED# THEN

   8977  1 006436   200022 235100                    LDA     ORG,,AUTO
         1 006437   000006 115007                    CMPA    6,DL
         1 006440   006447 601000 1                  TNZ     s:8980

     2305     8978    3                NUMENTS=ALTKEYS.NUMENTS;

   8978  1 006441   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 006442   100000 236100                    LDQ     0,,PR1
         1 006443   000022 772000                    QRL     18
         1 006444   000377 376007                    ANQ     255,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:551  
         1 006445   200110 756100                    STQ     NUMENTS,,AUTO
         1 006446   006453 710000 1                  TRA     s:8982

     2306     8979    3             ELSE
     2307     8980    3                NUMENTS=IRKEYS.NKEYS;

   8980  1 006447   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 006450   100000 236100                    LDQ     0,,PR1
         1 006451   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 006452   200110 756100                    STQ     NUMENTS,,AUTO

     2308     8981
     2309     8982    4             DO I=2 TO NUMENTS;

   8982  1 006453   000002 235007                    LDA     2,DL
         1 006454   200107 755100                    STA     I,,AUTO
         1 006455   006522 710000 1                  TRA     s:8996+1

     2310     8983    4                IF ORG = %INDEXED# THEN

   8983  1 006456   200022 235100                    LDA     ORG,,AUTO
         1 006457   000006 115007                    CMPA    6,DL
         1 006460   006471 601000 1                  TNZ     s:8986

     2311     8984    4                   UNIQUE=ALTKEYS.K.UNIQUE(I-1);

   8984  1 006461   200107 236100                    LDQ     I,,AUTO
         1 006462   000006 402007                    MPY     6,DL
         1 006463   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 006464   077776 236106                    LDQ     -2,QL,PR0
         1 006465   000011 736000                    QLS     9
         1 006466   400000 376003                    ANQ     -131072,DU
         1 006467   200111 756100                    STQ     UNIQUE,,AUTO
         1 006470   006500 710000 1                  TRA     s:8988

     2312     8985    4                ELSE
     2313     8986    4                   UNIQUE=IRKEYS.K.UNIQUE(I-1);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:552  

   8986  1 006471   200107 236100                    LDQ     I,,AUTO
         1 006472   000007 402007                    MPY     7,DL
         1 006473   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 006474   077777 236106                    LDQ     -1,QL,PR0
         1 006475   000022 736000                    QLS     18
         1 006476   400000 376003                    ANQ     -131072,DU
         1 006477   200111 756100                    STQ     UNIQUE,,AUTO

     2314     8987
     2315     8988    4                IF (NOT F$DCB.LDFLG) OR

   8988  1 006500   200007 471500                    LDP1    JDCB$,,AUTO
         1 006501   100064 236100                    LDQ     52,,PR1
         1 006502   200000 316007                    CANQ    65536,DL
         1 006503   006511 600000 1                  TZE     s:8991
         1 006504   200111 234100                    SZN     UNIQUE,,AUTO
         1 006505   006516 605000 1                  TPL     s:8995
         1 006506   100103 236100                    LDQ     67,,PR1
         1 006507   002000 316007                    CANQ    1024,DL
         1 006510   006516 601000 1                  TNZ     s:8995

     2316     8989    4                   (UNIQUE AND NOT F$DCB.UNIQUEBLD) THEN
     2317     8990    5                   DO;   /* DELETE KEY */

     2318     8991    5                   INDEX#=I;

   8991  1 006511   200107 235100                    LDA     I,,AUTO
         1 006512   200011 755100                    STA     INDEX#,,AUTO

     2319     8992    5                   CALL DELALT;

   8992  1 006513   005432 701000 1                  TSX1    DELALT
         1 006514   000000 011000                    NOP     0

     2320     8993    5                   END;  /* DELETE KEY */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:553  
   8993  1 006515   006521 710000 1                  TRA     s:8996

     2321     8994    4                ELSE
     2322     8995    4                   FM$CFU.ALTBLD='1'B;

   8995  1 006516   200010 473500                    LDP3    CFU$,,AUTO
         1 006517   000004 236003                    LDQ     4,DU
         1 006520   300006 256100                    ORSQ    6,,PR3

     2323     8996    4             END;

   8996  1 006521   200107 054100                    AOS     I,,AUTO
         1 006522   200110 236100                    LDQ     NUMENTS,,AUTO
         1 006523   006456 604000 1                  TMI     s:8983
         1 006524   200107 116100                    CMPQ    I,,AUTO
         1 006525   006456 605000 1                  TPL     s:8983

     2324     8997    3             END;  /* DELETE ALTERNATE INDEXES */

     2325     8998
     2326     8999    2          IF INDEX# ~= SAVE_INDEX# THEN

   8999  1 006526   200011 236100                    LDQ     INDEX#,,AUTO
         1 006527   200012 116100                    CMPQ    SAVE_INDEX#,,AUTO
         1 006530   006540 600000 1                  TZE     s:9006

     2327     9000    3             DO;   /* RESTORE INDEX */

     2328     9001    3             INDEX#=SAVE_INDEX#+1;

   9001  1 006531   200012 235100                    LDA     SAVE_INDEX#,,AUTO
         1 006532   000001 035007                    ADLA    1,DL
         1 006533   200011 755100                    STA     INDEX#,,AUTO

     2329     9002    3             CALL SETINDEX ALTRET(ERR);

   9002  1 006534   021667 701000 1                  TSX1    SETINDEX
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:554  
         1 006535   006573 702000 1                  TSX2    ERR

     2330     9003    3             CALL RESTOREPOS ALTRET(ERR);

   9003  1 006536   021403 701000 1                  TSX1    RESTOREPOS
         1 006537   006573 702000 1                  TSX2    ERR

     2331     9004    3             END;  /* RESTORE INDEX */

     2332     9005
     2333     9006    2          RETURN;

   9006  1 006540   200106 221300                    LDX1  ! ICHNG,,AUTO
         1 006541   000001 702211                    TSX2  ! 1,X1

     2334     9007    2   FIERR: DA=F$DCB.BFR.DA(1);

   9007  1 006542   200007 470500       FIERR        LDP0    JDCB$,,AUTO
         1 006543   000116 236100                    LDQ     78,,PR0
         1 006544   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 006545   200021 756100                    STQ     DA,,AUTO

     2335     9008    2          CALL FMB$LOGERR(%E$FREC, 75, 0, DA,,,,, 0);

   9008  1 006546   000000 236000 2                  LDQ     0
         1 006547   200176 756100                    STQ     STEMP_FIELDIN+10,,AUTO
         1 006550   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 006551   000001 235000 xsym               LDA     B_VECTNIL+1
         1 006552   200174 757100                    STAQ    STEMP_FIELDIN+8,,AUTO
         1 006553   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 006554   000001 235000 xsym               LDA     B_VECTNIL+1
         1 006555   200172 757100                    STAQ    STEMP_FIELDIN+6,,AUTO
         1 006556   200021 631500                    EPPR1   DA,,AUTO
         1 006557   200171 451500                    STP1    STEMP_FIELDIN+5,,AUTO
         1 006560   000000 236000 2                  LDQ     0
         1 006561   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 006562   000036 237000 2                  LDAQ    30
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:555  
         1 006563   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 006564   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 006565   000021 631400 2                  EPPR1   17
         1 006566   000000 701000 xent               TSX1    FMB$LOGERR
         1 006567   000000 011000                    NOP     0

     2336     9009    2          GOTO ERR;

   9009  1 006570   006573 710000 1                  TRA     ERR

   9008  1 006571                       DATAERR      null
     2337     9010    2   DATAERR:;
     2338     9011    2          CALL DATAERROR;

   9011  1 006571   005205 701000 1                  TSX1    DATAERROR
         1 006572   000000 011000                    NOP     0

     2339     9012    2   ERR:   ALTRETURN;

   9012  1 006573   200106 221300       ERR          LDX1  ! ICHNG,,AUTO
         1 006574   000000 702211                    TSX2  ! 0,X1

     2340     9013    2          END DELETE;
     2341     9014               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:556  
     2342     9015        /*I*     NAME:     DELKEY
     2343     9016                 PURPOSE:  To do a keyed delete
     2344     9017                 DESCRIPTION:
     2345     9018                      Check the size of the second key.  The user may have
     2346     9019                 specified a key range.
     2347     9020
     2348     9021                      Find the first user specified key.  If the key is deleted,
     2349     9022                 then check to see if a key range was specified.  If a key range
     2350     9023                 was specified, and the first key was at the end of the file,
     2351     9024                 then return, we are done.  Otherwise, if a key range was
     2352     9025                 specified, then we need to verify the range. If LKEY < KEY,
     2353     9026                 then we don't really have a normal range, so we'll just
     2354     9027                 pretend that LKEY is NIL and only use KEY. Otherwise,
     2355     9028                 DELRANGE will end up either not deleting anything at all or,
     2356     9029                 if we're on an alternate key with duplicates, it may delete
     2357     9030                 more than was intended. If LKEY >= KEY, then proceed to
     2358     9031                 delete the range.
     2359     9032
     2360     9033                      If this is an alternate index, then we have to find the
     2361     9034                 correct duplicate entry at which to begin the deletion.
     2362     9035
     2363     9036                      Call the correct deletion subroutine.
     2364     9037        */
     2365     9038                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:557  
     2366     9039    1   DELKEY:   PROC ALTRET;

   9039  1 006575   200100 741300       DELKEY       STX1  ! I+1,,AUTO

     2367     9040    2          DCL LKEY SBIN;
     2368     9041    2          DCL IGNORE_LKEY BIT(1);
     2369     9042        /* */
     2370     9043    2          IGNORE_LKEY='0'B;

   9043  1 006576   200102 450100                    STZ     IGNORE_LKEY,,AUTO

     2371     9044    2          CALL HFF$DSIZ(B$PS2$, LKEY);

   9044  1 006577   200101 630500                    EPPR0   LKEY,,AUTO
         1 006600   200167 450500                    STP0    STEMP_FIELDIN+3,,AUTO
         1 006601   000011 236000 2                  LDQ     9
         1 006602   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 006603   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 006604   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 006605   000000 701000 xent               TSX1    HFF$DSIZ
         1 006606   000000 011000                    NOP     0

     2372     9045    2          IF ORG = %IREL# AND LKEY > 0 THEN

   9045  1 006607   200022 235100                    LDA     ORG,,AUTO
         1 006610   000015 115007                    CMPA    13,DL
         1 006611   006620 601000 1                  TNZ     s:9048
         1 006612   200101 236100                    LDQ     LKEY,,AUTO
         1 006613   006620 604400 1                  TMOZ    s:9048

     2373     9046    2             CALL FMD$CHKFIELD(B$PS2$, %FMD_CHKTYP_KEY) ALTRET(ERR);

   9046  1 006614   000050 630400 2                  EPPR0   40
         1 006615   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 006616   000000 701000 xent               TSX1    FMD$CHKFIELD
         1 006617   006775 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:558  
     2374     9047
     2375     9048    2          CALL SETKEY(B$PS1$) ALTRET(ERR);

   9048  1 006620   000052 236000 2                  LDQ     42
         1 006621   200113 756100                    STQ     @INDX,,AUTO
         1 006622   021704 701000 1                  TSX1    SETKEY
         1 006623   006775 702000 1                  TSX2    ERR

     2376     9049    2          COMFLG=%KEY;

   9049  1 006624   200060 450100                    STZ     COMFLG,,AUTO

     2377     9050    2          CALL FINDKEY ALTRET(NOKEY);

   9050  1 006625   007536 701000 1                  TSX1    FINDKEY
         1 006626   006633 702000 1                  TSX2    NOKEY

     2378     9051    2          IF FM$KEYENT.D THEN

   9051  1 006627   200020 470500                    LDP0    KEY$,,AUTO
         1 006630   000000 234100                    SZN     0,,PR0
         1 006631   006701 605000 1                  TPL     s:9080

     2379     9052    3             DO;   /* NO PRIMARY KEY */

     2380     9053    4             DO WHILE ('0'B);

   9053  1 006632   006651 710000 1                  TRA     s:9063

     2381     9054    4   NOKEY:       IF KEY$ = ADDR(NIL) THEN

   9054  1 006633   200020 236100       NOKEY        LDQ     KEY$,,AUTO
         1 006634   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 006635   006644 601000 1                  TNZ     s:9059

     2382     9055    4                   IF LKEY > 0 THEN

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:559  
   9055  1 006636   200101 235100                    LDA     LKEY,,AUTO
         1 006637   006642 604400 1                  TMOZ    s:9058

     2383     9056    4                      RETURN;

   9056  1 006640   200100 221300                    LDX1  ! I+1,,AUTO
         1 006641   000001 702211                    TSX2  ! 1,X1

     2384     9057    4                   ELSE
     2385     9058    4                      ALTRETURN;

   9058  1 006642   200100 221300                    LDX1  ! I+1,,AUTO
         1 006643   000000 702211                    TSX2  ! 0,X1

     2386     9059    4                B$JIT.ERR='0'B;

   9059  1 006644   000000 470400 xsym               LDP0    B$JIT$
         1 006645   000012 450100                    STZ     10,,PR0

     2387     9060    4                F$DCB.RPOS='1'B;

   9060  1 006646   200007 471500                    LDP1    JDCB$,,AUTO
         1 006647   010000 236007                    LDQ     4096,DL
         1 006650   100064 256100                    ORSQ    52,,PR1

     2388     9061    4             END;  /* NEVER */

     2389     9062
     2390     9063    3             IF LKEY > 0 THEN

   9063  1 006651   200101 235100                    LDA     LKEY,,AUTO
         1 006652   006674 604400 1                  TMOZ    s:9075

     2391     9064    4                DO;   /* DELETE RANGE */

     2392     9065    4                B$JIT.ERR='0'B;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:560  
   9065  1 006653   000000 470400 xsym               LDP0    B$JIT$
         1 006654   000012 450100                    STZ     10,,PR0

     2393     9066    4                CALL SETKEY(B$PS2$) ALTRET(LKEYERR);

   9066  1 006655   000011 236000 2                  LDQ     9
         1 006656   200113 756100                    STQ     @INDX,,AUTO
         1 006657   021704 701000 1                  TSX1    SETKEY
         1 006660   006772 702000 1                  TSX2    LKEYERR

     2394     9067    4                CALL COMKEY ALTRET(ERR);

   9067  1 006661   003743 701000 1                  TSX1    COMKEY
         1 006662   006775 702000 1                  TSX2    ERR

     2395     9068    4                IF RESULT=%LESS THEN

   9068  1 006663   200031 235100                    LDA     RESULT,,AUTO
         1 006664   000001 115007                    CMPA    1,DL
         1 006665   006670 601000 1                  TNZ     s:9070

     2396     9069    4                   RETURN; /* LKEY < KEY */

   9069  1 006666   200100 221300                    LDX1  ! I+1,,AUTO
         1 006667   000001 702211                    TSX2  ! 1,X1

     2397     9070    4                CALL DELRANGE ALTRET(ERR);

   9070  1 006670   006777 701000 1                  TSX1    DELRANGE
         1 006671   006775 702000 1                  TSX2    ERR

     2398     9071    4                RETURN;

   9071  1 006672   200100 221300                    LDX1  ! I+1,,AUTO
         1 006673   000001 702211                    TSX2  ! 1,X1

     2399     9072    4                END;   /* DELETE RANGE */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:561  
     2400     9073    3             ELSE
     2401     9074    4                DO;   /* NO KEY */

     2402     9075    4                B$JIT.ERR=ERRNOKEY;

   9075  1 006674   000007 236000 0                  LDQ     ERRNOKEY
         1 006675   000000 470400 xsym               LDP0    B$JIT$
         1 006676   000012 756100                    STQ     10,,PR0

     2403     9076    4                ALTRETURN;

   9076  1 006677   200100 221300                    LDX1  ! I+1,,AUTO
         1 006700   000000 702211                    TSX2  ! 0,X1

     2404     9077    4                END;  /* NO KEY */
     2405     9078    3             END;  /* NO PRIMARY KEY */
     2406     9079
     2407     9080    2          IF LKEY > 0 THEN

   9080  1 006701   200101 235100                    LDA     LKEY,,AUTO
         1 006702   006716 604400 1                  TMOZ    s:9088

     2408     9081    3             DO;  /* See if LKEY < KEY */

     2409     9082    3             CALL SETKEY(B$PS2$) ALTRET(LKEYERR);

   9082  1 006703   000011 236000 2                  LDQ     9
         1 006704   200113 756100                    STQ     @INDX,,AUTO
         1 006705   021704 701000 1                  TSX1    SETKEY
         1 006706   006772 702000 1                  TSX2    LKEYERR

     2410     9083    3             CALL COMKEY ALTRET(ERR);

   9083  1 006707   003743 701000 1                  TSX1    COMKEY
         1 006710   006775 702000 1                  TSX2    ERR

     2411     9084    3             IF RESULT=%LESS THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:562  

   9084  1 006711   200031 235100                    LDA     RESULT,,AUTO
         1 006712   000001 115007                    CMPA    1,DL
         1 006713   006716 601000 1                  TNZ     s:9088

     2412     9085    3                IGNORE_LKEY='1'B;

   9085  1 006714   400000 236003                    LDQ     -131072,DU
         1 006715   200102 756100                    STQ     IGNORE_LKEY,,AUTO

     2413     9086    3             END; /* See if LKEY < KEY */

     2414     9087
     2415     9088    2          IF INDEX# > 0 THEN

   9088  1 006716   200011 235100                    LDA     INDEX#,,AUTO
         1 006717   006744 600000 1                  TZE     s:9102

     2416     9089    3             DO;   /* FIND DUP */

     2417     9090    3             CALL HFF$NILERASE(B$PS3$) ALTRET(NONE);

   9090  1 006720   000053 630400 2                  EPPR0   43
         1 006721   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 006722   000000 701000 xent               TSX1    HFF$NILERASE
         1 006723   006731 702000 1                  TSX2    NONE

     2418     9091    3             IDPTR$=B$PS3$;

   9091  1 006724   000000 236000 xsym               LDQ     B$PS3$
         1 006725   200034 756100                    STQ     IDPTR$,,AUTO

     2419     9092    3             CALL FINDID ALTRET(ERR);

   9092  1 006726   007220 701000 1                  TSX1    FINDID
         1 006727   006775 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:563  
     2420     9093
     2421     9094    4             DO WHILE ('0'B);

   9094  1 006730   006744 710000 1                  TRA     s:9102

     2422     9095    4   NONE:        IF B$JIT.ERR ~= '0'B THEN

   9095  1 006731   000000 470400 xsym  NONE         LDP0    B$JIT$
         1 006732   000012 235100                    LDA     10,,PR0
         1 006733   006736 600000 1                  TZE     s:9097

     2423     9096    4                   ALTRETURN;

   9096  1 006734   200100 221300                    LDX1  ! I+1,,AUTO
         1 006735   000000 702211                    TSX2  ! 0,X1

     2424     9097    4                RECNUM=FPT$DELREC_V.RECNUM;

   9097  1 006736   000000 471400 xsym               LDP1    B$PS0$
         1 006737   100001 236100                    LDQ     1,,PR1
         1 006740   000022 772000                    QRL     18
         1 006741   200033 756100                    STQ     RECNUM,,AUTO

     2425     9098    4                CALL MOVERECN ALTRET(ERR);

   9098  1 006742   013632 701000 1                  TSX1    MOVERECN
         1 006743   006775 702000 1                  TSX2    ERR

     2426     9099    4             END;  /* FIND RECNUM */

     2427     9100    3             END;  /* FIND DUP */

     2428     9101
     2429     9102    2          IF LKEY = 0 OR IGNORE_LKEY THEN

   9102  1 006744   200101 235100                    LDA     LKEY,,AUTO
         1 006745   006750 600000 1                  TZE     s:9104
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:564  
         1 006746   200102 234100                    SZN     IGNORE_LKEY,,AUTO
         1 006747   006766 605000 1                  TPL     s:9110

     2430     9103    3             DO;   /* No 2nd key or ignore 2nd key */

     2431     9104    3             IF INDEX# > 0 AND FPT$DELREC_V.ALLDUPS AND NOT IGNORE_LKEY THEN

   9104  1 006750   200011 236100                    LDQ     INDEX#,,AUTO
         1 006751   006763 600000 1                  TZE     s:9107
         1 006752   000000 470400 xsym               LDP0    B$PS0$
         1 006753   000001 236100                    LDQ     1,,PR0
         1 006754   400000 316007                    CANQ    -131072,DL
         1 006755   006763 600000 1                  TZE     s:9107
         1 006756   200102 234100                    SZN     IGNORE_LKEY,,AUTO
         1 006757   006763 604000 1                  TMI     s:9107

     2432     9105    3                CALL DELDUPS ALTRET(ERR);

   9105  1 006760   005521 701000 1                  TSX1    DELDUPS
         1 006761   006775 702000 1                  TSX2    ERR
         1 006762   006770 710000 1                  TRA     s:9112

     2433     9106    3             ELSE
     2434     9107    3                CALL DELETE ALTRET(ERR);

   9107  1 006763   006261 701000 1                  TSX1    DELETE
         1 006764   006775 702000 1                  TSX2    ERR

     2435     9108    3             END;  /* No 2nd key or ignore 2nd key */

   9108  1 006765   006770 710000 1                  TRA     s:9112

     2436     9109    2          ELSE
     2437     9110    2             CALL DELRANGE ALTRET(ERR);

   9110  1 006766   006777 701000 1                  TSX1    DELRANGE
         1 006767   006775 702000 1                  TSX2    ERR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:565  

     2438     9111
     2439     9112    2          RETURN;

   9112  1 006770   200100 221300                    LDX1  ! I+1,,AUTO
         1 006771   000001 702211                    TSX2  ! 1,X1

   9102  1 006772                       LKEYERR      null
     2440     9113    2   LKEYERR:;
     2441     9114    2          B$JIT.ERR=ERRBADKEY2;

   9114  1 006772   000010 236000 0                  LDQ     ERRBADKEY2
         1 006773   000000 470400 xsym               LDP0    B$JIT$
         1 006774   000012 756100                    STQ     10,,PR0

     2442     9115    2   ERR:   ALTRETURN;

   9115  1 006775   200100 221300       ERR          LDX1  ! I+1,,AUTO
         1 006776   000000 702211                    TSX2  ! 0,X1

     2443     9116    2          END DELKEY;
     2444     9117               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:566  
     2445     9118        /*I*     NAME:     DELRANGE
     2446     9119                 PURPOSE:  To delete a range of records
     2447     9120                 DESCRIPTION:
     2448     9121                      Every time through the loop, compare the end of the user
     2449     9122                 specified range with the next record.  If we hit the end of the
     2450     9123                 range, exit the loop.
     2451     9124
     2452     9125                      Otherwise, we delete the record.  If the user hits break
     2453     9126                 and the pmme break option is set, then exit immediately.
     2454     9127        */
     2455     9128                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:567  
     2456     9129    1   DELRANGE: PROC ALTRET;

   9129  1 006777   200104 741300       DELRANGE     STX1  ! NUMENTS,,AUTO

     2457     9130        /* */
     2458     9131    2          F$DCB.RPOS='1'B;

   9131  1 007000   200007 470500                    LDP0    JDCB$,,AUTO
         1 007001   010000 236007                    LDQ     4096,DL
         1 007002   000064 256100                    ORSQ    52,,PR0

     2459     9132    3   LOOP:  DO WHILE ('1'B);

   9132  1 007003                       LOOP         null
     2460     9133    3             CALL SETKEY(B$PS2$) ALTRET(LKEYERR);

   9133  1 007003   000011 236000 2                  LDQ     9
         1 007004   200113 756100                    STQ     @INDX,,AUTO
         1 007005   021704 701000 1                  TSX1    SETKEY
         1 007006   007110 702000 1                  TSX2    LKEYERR

     2461     9134    3             CALL NXTREC ALTRET(DELEOF);

   9134  1 007007   015175 701000 1                  TSX1    NXTREC
         1 007010   007076 702000 1                  TSX2    DELEOF

     2462     9135    3             COMFLG=%KEY;

   9135  1 007011   200060 450100                    STZ     COMFLG,,AUTO

     2463     9136                  /* If KEY$=ADDR(NIL), we're inside a list of duplicates.
     2464     9137                     Since we've already checked the key and know we want to
     2465     9138                     delete it, we know we need to delete this duplicate.
     2466     9139                     Otherwise, the key is new so compare it.            */
     2467     9140    3             IF KEY$~=ADDR(NIL) THEN

   9140  1 007012   200020 236100                    LDQ     KEY$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:568  
         1 007013   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 007014   007020 600000 1                  TZE     s:9142

     2468     9141    3                CALL COMKEY ALTRET(ERR);

   9141  1 007015   003743 701000 1                  TSX1    COMKEY
         1 007016   007074 702000 1                  TSX2    ERR
         1 007017   007022 710000 1                  TRA     s:9144

     2469     9142    3             ELSE RESULT=%GREATER;

   9142  1 007020   000002 235007                    LDA     2,DL
         1 007021   200031 755100                    STA     RESULT,,AUTO

     2470     9143
     2471     9144    3             IF RESULT = %LESS THEN

   9144  1 007022   200031 235100                    LDA     RESULT,,AUTO
         1 007023   000001 115007                    CMPA    1,DL
         1 007024   007031 601000 1                  TNZ     s:9151

     2472     9145    4                DO;   /* LAST KEY */

     2473     9146    4                F$DCB.RPOS='1'B;

   9146  1 007025   200007 470500                    LDP0    JDCB$,,AUTO
         1 007026   010000 236007                    LDQ     4096,DL
         1 007027   000064 256100                    ORSQ    52,,PR0

     2474     9147    4                EXIT LOOP;

   9147  1 007030   007072 710000 1                  TRA     s:9171

     2475     9148    4                END;  /* LAST KEY */
     2476     9149    3             ELSE
     2477     9150    4                DO;   /* DELETE KEY */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:569  
     2478     9151    4                IF INDEX# = 0 THEN

   9151  1 007031   200011 236100                    LDQ     INDEX#,,AUTO
         1 007032   007041 601000 1                  TNZ     s:9156

     2479     9152    4                   IF NOT FM$KEYENT.D THEN

   9152  1 007033   200020 470500                    LDP0    KEY$,,AUTO
         1 007034   000000 234100                    SZN     0,,PR0
         1 007035   007043 604000 1                  TMI     s:9157

     2480     9153    4                      CALL DELETE ALTRET(ERR);

   9153  1 007036   006261 701000 1                  TSX1    DELETE
         1 007037   007074 702000 1                  TSX2    ERR
         1 007040   007043 710000 1                  TRA     s:9157

     2481     9154    4                   ELSE;
     2482     9155    4                ELSE
     2483     9156    4                   CALL DELETE ALTRET(ERR);

   9156  1 007041   006261 701000 1                  TSX1    DELETE
         1 007042   007074 702000 1                  TSX2    ERR

     2484     9157    4                IF FPT$DELREC_V.BRK AND

   9157  1 007043   000000 470400 xsym               LDP0    B$PS0$
         1 007044   000001 236100                    LDQ     1,,PR0
         1 007045   200000 316007                    CANQ    65536,DL
         1 007046   007003 600000 1                  TZE     LOOP
         1 007047   000003 236000 xsym               LDQ     B_VECTNIL+3
         1 007050   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 007051   000000 471400 xsym               LDP1    S$CU$
         1 007052   100001 376100                    ANQ     1,,PR1
         1 007053   007003 600000 1                  TZE     LOOP
         1 007054   000000 473400 xsym               LDP3    B_MPT
         1 007055   300010 236100                    LDQ     8,,PR3
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:570  
         1 007056   000160 316007                    CANQ    112,DL
         1 007057   007003 600000 1                  TZE     LOOP

     2485     9158    4                   S$CU$->B$U.ASYNCH&(~%U_RESET) AND
     2486     9159    4                   B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
     2487     9160    5                   DO;   /* Got interrupted and OK to interrupt */

     2488     9161    5                   B$JIT.ERR=ERRPMMEINT;

   9161  1 007060   000021 236000 0                  LDQ     ERRPMMEINT
         1 007061   000000 474400 xsym               LDP4    B$JIT$
         1 007062   400012 756100                    STQ     10,,PR4

     2489     9162        /*E*   ERROR:   FMG-E$PMMEINT-2
     2490     9163        */
     2491     9164    5                   B$JIT.JUNK=B$JIT.JUNK|%JJ_BAKIC#;

   9164  1 007063   400315 220100                    LDX0    205,,PR4
         1 007064   001000 260003                    ORX0    512,DU
         1 007065   400315 740100                    STX0    205,,PR4

     2492     9165    5                   F$DCB.RPOS='1'B;

   9165  1 007066   200007 475500                    LDP5    JDCB$,,AUTO
         1 007067   010000 236007                    LDQ     4096,DL
         1 007070   500064 256100                    ORSQ    52,,PR5

     2493     9166    5                   GOTO ERR;

   9166  1 007071   007074 710000 1                  TRA     ERR

     2494     9167    5                   END;  /* Got interrupted and OK to interrupt */
     2495     9168    4                END;  /* DELETE KEY */
     2496     9169    3          END;  /* WHILE */

     2497     9170
     2498     9171    2          RETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:571  

   9171  1 007072   200104 221300                    LDX1  ! NUMENTS,,AUTO
         1 007073   000001 702211                    TSX2  ! 1,X1

     2499     9172    2   ERR:   ALTRETURN;

   9172  1 007074   200104 221300       ERR          LDX1  ! NUMENTS,,AUTO
         1 007075   000000 702211                    TSX2  ! 0,X1

   9166  1 007076                       DELEOF       null
     2500     9173    2   DELEOF: ;
     2501     9174    2          IF B$JIT.ERR.CODE ~= %E$EOF THEN

   9174  1 007076   000000 470400 xsym               LDP0    B$JIT$
         1 007077   000012 236100                    LDQ     10,,PR0
         1 007100   377770 376007                    ANQ     131064,DL
         1 007101   000060 116007                    CMPQ    48,DL
         1 007102   007105 600000 1                  TZE     s:9176

     2502     9175    2             ALTRETURN;

   9175  1 007103   200104 221300                    LDX1  ! NUMENTS,,AUTO
         1 007104   000000 702211                    TSX2  ! 0,X1

     2503     9176    2          B$JIT.ERR='0'B;

   9176  1 007105   000012 450100                    STZ     10,,PR0

     2504     9177    2          RETURN;

   9177  1 007106   200104 221300                    LDX1  ! NUMENTS,,AUTO
         1 007107   000001 702211                    TSX2  ! 1,X1

   9176  1 007110                       LKEYERR      null
     2505     9178    2   LKEYERR: ;
     2506     9179    2          B$JIT.ERR=ERRBADKEY2;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:572  
   9179  1 007110   000010 236000 0                  LDQ     ERRBADKEY2
         1 007111   000000 470400 xsym               LDP0    B$JIT$
         1 007112   000012 756100                    STQ     10,,PR0

     2507     9180    2          ALTRETURN;

   9180  1 007113   200104 221300                    LDX1  ! NUMENTS,,AUTO
         1 007114   000000 702211                    TSX2  ! 0,X1

     2508     9181        /*E*   ERROR:      FMG-E$BADKEY2-2
     2509     9182               MESSAGE: M$DELREC:  The length of the second key is bad% for %FN%
     2510     9183        */
     2511     9184    2          END DELRANGE;
     2512     9185               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:573  
     2513     9186        /*I*     NAME:     DELREC
     2514     9187                 PURPOSE:  To handle the M$DELREC PMME
     2515     9188                 DESCRIPTION:
     2516     9189                      If DELALL is specified, we want to delete all the keys
     2517     9190                 in the file.  No other parameter is necessary.  Call DELALL
     2518     9191                 to accomplish this and return.
     2519     9192
     2520     9193                      Otherwise, if this is a one granule keyed file, then
     2521     9194                 expand it to two granules before modifying it.  Set the
     2522     9195                 number of deleted records to 0.  If the user specified a key
     2523     9196                 and this is an IREL file, then check the key to make sure the
     2524     9197                 fields are valid. Delete the record, then do the cleanup.
     2525     9198
     2526     9199                      If the user didn't specify a key, then we will delete the
     2527     9200                 current record.  First, make sure we are positioned to something.
     2528     9201                 Then check the last operation.  This is only allowed if the
     2529     9202                 previous operation was a read or precord.
     2530     9203
     2531     9204                      Next, call the proper deletion subroutine.
     2532     9205        */
     2533     9206                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:574  
     2534     9207    1   DELREC: PROC ALTRET;

   9207  1 007115   200076 741300       DELREC       STX1  ! DELALL_FAST+2,,AUTO

     2535     9208        /* */
     2536     9209    2          F$DCB.ARS=0;

   9209  1 007116   200007 470500                    LDP0    JDCB$,,AUTO
         1 007117   000000 450100                    STZ     0,,PR0

     2537     9210    2          DELALL_FAST='0'B;

   9210  1 007120   200074 450100                    STZ     DELALL_FAST,,AUTO

     2538     9211    2          IF FPT$DELREC_V.DELALL THEN

   9211  1 007121   000000 471400 xsym               LDP1    B$PS0$
         1 007122   100001 236100                    LDQ     1,,PR1
         1 007123   100000 316007                    CANQ    32768,DL
         1 007124   007130 600000 1                  TZE     s:9214

     2539     9212    2             CALL DELALL ALTRET(ENDERR);

   9212  1 007125   005262 701000 1                  TSX1    DELALL
         1 007126   007216 702000 1                  TSX2    ENDERR
         1 007127   007145 710000 1                  TRA     s:9220

     2540     9213    3          ELSE DO;

     2541     9214    3             CALL HFF$NILERASE(B$PS1$) ALTRET(NOKEY);

   9214  1 007130   000052 630400 2                  EPPR0   42
         1 007131   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 007132   000000 701000 xent               TSX1    HFF$NILERASE
         1 007133   007151 702000 1                  TSX2    NOKEY

     2542     9215    3             IF ORG = %IREL# THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:575  

   9215  1 007134   200022 235100                    LDA     ORG,,AUTO
         1 007135   000015 115007                    CMPA    13,DL
         1 007136   007143 601000 1                  TNZ     s:9217

     2543     9216    3                CALL FMD$CHKFIELD(B$PS1$, %FMD_CHKTYP_KEY) ALTRET(ERR);

   9216  1 007137   000054 630400 2                  EPPR0   44
         1 007140   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 007141   000000 701000 xent               TSX1    FMD$CHKFIELD
         1 007142   007214 702000 1                  TSX2    ERR

     2544     9217    3             CALL DELKEY ALTRET(ERR);

   9217  1 007143   006575 701000 1                  TSX1    DELKEY
         1 007144   007214 702000 1                  TSX2    ERR

     2545     9218    3             END;

     2546     9219
     2547     9220    2          CALL DELEND ALTRET(ENDERR);

   9220  1 007145   005574 701000 1                  TSX1    DELEND
         1 007146   007216 702000 1                  TSX2    ENDERR

     2548     9221    2          RETURN;

   9221  1 007147   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 007150   000001 702211                    TSX2  ! 1,X1

   9220  1 007151                       NOKEY        null
     2549     9222
     2550     9223    2   NOKEY: ;
     2551     9224    2          CALL SHAREPOS ALTRET(ENDERR);

   9224  1 007151   023077 701000 1                  TSX1    SHAREPOS
         1 007152   007216 702000 1                  TSX2    ENDERR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:576  

     2552     9225
     2553     9226    3          DO CASE(EOP);

   9226  1 007153   200036 235100                    LDA     EOP,,AUTO
         1 007154   000003 115007                    CMPA    3,DL
         1 007155   007157 602005 1                  TNC     s:9226+4,AL
         1 007156   007170 710000 1                  TRA     s:9234
         1 007157   007170 710000 1                  TRA     s:9234
         1 007160   007162 710000 1                  TRA     s:9228
         1 007161   007165 710000 1                  TRA     s:9231

     2554     9227    3             CASE(1);   /* LAST OP WAS READ */

     2555     9228    3                CALL CURREC ALTRET(ERR);

   9228  1 007162   005131 701000 1                  TSX1    CURREC
         1 007163   007214 702000 1                  TSX2    ERR
         1 007164   007175 710000 1                  TRA     s:9245

     2556     9229
     2557     9230    3             CASE(2);   /* LAST OP WAS PRECORD */

     2558     9231    3                CALL NXTRECND ALTRET(ERR);

   9231  1 007165   015332 701000 1                  TSX1    NXTRECND
         1 007166   007214 702000 1                  TSX2    ERR
         1 007167   007175 710000 1                  TRA     s:9245

     2559     9232
     2560     9233    3             CASE(ELSE);

     2561     9234    3                B$JIT.ERR=ERRWRWOKEY;

   9234  1 007170   000000 236000 0                  LDQ     ERRWRWOKEY
         1 007171   000000 470400 xsym               LDP0    B$JIT$
         1 007172   000012 756100                    STQ     10,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:577  

     2562     9235    3                ALTRETURN;

   9235  1 007173   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 007174   000000 702211                    TSX2  ! 0,X1

     2563     9236    3          END;  /* CASE */

     2564     9237        /*E*   ERROR:   FMG-E$WRWOKEY-2
     2565     9238               MESSAGE: This M$WRITE or M$DELREC must specify a key%, file %FN%
     2566     9239               MESSAGE1: An M$WRITE or M$DELREC without a key is not allowed if:
     2567     9240                         A)  This operation was not preceded by an M$READ or
     2568     9241                             M$PRECORD, or
     2569     9242                         B)  This M$DELREC caused the alternate index to change.
     2570     9243        */
     2571     9244
     2572     9245    2          IF INDEX# > 0 AND FPT$DELREC_V.ALLDUPS THEN

   9245  1 007175   200011 235100                    LDA     INDEX#,,AUTO
         1 007176   007206 600000 1                  TZE     s:9248
         1 007177   000000 470400 xsym               LDP0    B$PS0$
         1 007200   000001 236100                    LDQ     1,,PR0
         1 007201   400000 316007                    CANQ    -131072,DL
         1 007202   007206 600000 1                  TZE     s:9248

     2573     9246    2             CALL DELDUPS ALTRET(ERR);

   9246  1 007203   005521 701000 1                  TSX1    DELDUPS
         1 007204   007214 702000 1                  TSX2    ERR
         1 007205   007210 710000 1                  TRA     s:9249

     2574     9247    2          ELSE
     2575     9248    2             CALL DELETE ALTRET(ERR);

   9248  1 007206   006261 701000 1                  TSX1    DELETE
         1 007207   007214 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:578  
     2576     9249    2          CALL DELEND ALTRET(ENDERR);

   9249  1 007210   005574 701000 1                  TSX1    DELEND
         1 007211   007216 702000 1                  TSX2    ENDERR

     2577     9250
     2578     9251    2          RETURN;

   9251  1 007212   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 007213   000001 702211                    TSX2  ! 1,X1

     2579     9252    2   ERR:   CALL DELEND;

   9252  1 007214   005574 701000 1     ERR          TSX1    DELEND
         1 007215   000000 011000                    NOP     0

     2580     9253    2   ENDERR: ALTRETURN;

   9253  1 007216   200076 221300       ENDERR       LDX1  ! DELALL_FAST+2,,AUTO
         1 007217   000000 702211                    TSX2  ! 0,X1

     2581     9254    2          END DELREC;
     2582     9255               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:579  
     2583     9256        /*I*     NAME:     FINDID
     2584     9257                 PURPOSE:  To find a user specified ID
     2585     9258                 DESCRIPTION:
     2586     9259                      Loop through the set of duplicates, searching for the
     2587     9260                 specified ID.  If the ID doesn't exist, then we can't tell
     2588     9261                 where in the list of duplicates to position.  In that case,
     2589     9262                 position to the beginning of the current key just to make
     2590     9263                 sure we're positioned someplace.  Assuming that most users
     2591     9264                 are moving in a forward direction in a list of duplicates,
     2592     9265                 this may cause them to see some records more than once, but
     2593     9266                 at least they're less likely to skip some without knowing it.
     2594     9267        */
     2595     9268    1   FINDID: PROC ALTRET;

   9268  1 007220   200124 741300       FINDID       STX1  ! SIZE+1,,AUTO

     2596     9269        /* */
     2597     9270    3          DO WHILE (FM$MISEG.GX ~= ID.GX OR

   9270  1 007221   007224 710000 1                  TRA     s:9273

     2598     9271    3                    FM$MISEG.GDA ~= ID.DA);
     2599     9272    3             CALL NXTRECNM ALTRET(NONE);

   9272  1 007222   015200 701000 1                  TSX1    NXTRECNM
         1 007223   007247 702000 1                  TSX2    NONE

     2600     9273    3          END;

   9273  1 007224   200034 470500                    LDP0    IDPTR$,,AUTO
         1 007225   000001 236100                    LDQ     1,,PR0
         1 007226   000032 772000                    QRL     26
         1 007227   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 007230   200014 471500                    LDP1    SEG$,,AUTO
         1 007231   100000 236100                    LDQ     0,,PR1
         1 007232   000014 772000                    QRL     12
         1 007233   001777 376007                    ANQ     1023,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:580  
         1 007234   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 007235   007222 601000 1                  TNZ     s:9272
         1 007236   000001 236100                    LDQ     1,,PR0
         1 007237   000020 376000 2                  ANQ     16
         1 007240   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 007241   100001 236100                    LDQ     1,,PR1
         1 007242   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 007243   200167 116100                    CMPQ    STEMP_FIELDIN+3,,AUTO
         1 007244   007222 601000 1                  TNZ     s:9272

     2601     9274
     2602     9275    2          RETURN;

   9275  1 007245   200124 221300                    LDX1  ! SIZE+1,,AUTO
         1 007246   000001 702211                    TSX2  ! 1,X1

     2603     9276    2   NONE:  CALL CURKEY ALTRET(ERR);

   9276  1 007247   005060 701000 1     NONE         TSX1    CURKEY
         1 007250   007254 702000 1                  TSX2    ERR

     2604     9277    2          B$JIT.ERR=ERRNOKEY;

   9277  1 007251   000007 236000 0                  LDQ     ERRNOKEY
         1 007252   000000 470400 xsym               LDP0    B$JIT$
         1 007253   000012 756100                    STQ     10,,PR0

     2605     9278    2   ERR:   ALTRETURN;

   9278  1 007254   200124 221300       ERR          LDX1  ! SIZE+1,,AUTO
         1 007255   000000 702211                    TSX2  ! 0,X1

     2606     9279    2          END FINDID;
     2607     9280               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:581  
     2608     9281        /*I*     NAME:     FINDIDO
     2609     9282                 PURPOSE:  To position in a file with only an ID
     2610     9283                 DESCRIPTION:
     2611     9284                      If the file is not shared, or hasn't been modified since
     2612     9285                 this user's last monitor call, then check to see if the current
     2613     9286                 position matches the ID.  This could save us a lot of extra
     2614     9287                 work.
     2615     9288
     2616     9289                      If we need to reposition, then first read in the data
     2617     9290                 granule from the ID.  If it looks like the record could fit
     2618     9291                 in what the ID indicates, then try to find the key, then find
     2619     9292                 the specific ID.
     2620     9293        */
     2621     9294                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:582  
     2622     9295    1   FINDIDO: PROC ALTRET;

   9295  1 007256   200120 741300       FINDIDO      STX1  ! UNIQUE+1,,AUTO

     2623     9296    2          DCL REPOS UBIN;
     2624     9297    2          DCL MINSIZE UBIN;
     2625     9298        /* */
     2626     9299    2          REPOS=1;

   9299  1 007257   000001 235007                    LDA     1,DL
         1 007260   200121 755100                    STA     REPOS,,AUTO

     2627     9300    2          IF (F$DCB.SHARED AND F$DCB.MODCNT = FM$CFU.MODCNT) OR

   9300  1 007261   200007 470500                    LDP0    JDCB$,,AUTO
         1 007262   000064 236100                    LDQ     52,,PR0
         1 007263   100000 316003                    CANQ    32768,DU
         1 007264   007275 600000 1                  TZE     s:9300+12
         1 007265   200010 471500                    LDP1    CFU$,,AUTO
         1 007266   100006 236100                    LDQ     6,,PR1
         1 007267   000025 772000                    QRL     21
         1 007270   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 007271   000100 236100                    LDQ     64,,PR0
         1 007272   000022 772000                    QRL     18
         1 007273   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 007274   007300 600000 1                  TZE     s:9303
         1 007275   000064 236100                    LDQ     52,,PR0
         1 007276   100000 316003                    CANQ    32768,DU
         1 007277   007333 601000 1                  TNZ     s:9312

     2628     9301    2             NOT F$DCB.SHARED THEN
     2629     9302    3             DO;   /* CHECK TO SEE IF WE ARE ALREADY THERE */

     2630     9303    3             CALL SHAREPOS ALTRET(ERR);

   9303  1 007300   023077 701000 1                  TSX1    SHAREPOS
         1 007301   007534 702000 1                  TSX2    ERR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:583  

     2631     9304    3             IF SEGX > 0 THEN

   9304  1 007302   200013 235100                    LDA     SEGX,,AUTO
         1 007303   007341 604400 1                  TMOZ    s:9316

     2632     9305    4                DO;   /* CHECK SEG */

     2633     9306    4                SEG$=PINCRW(BUF$, SEGX);

   9306  1 007304   200013 236100                    LDQ     SEGX,,AUTO
         1 007305   000022 736000                    QLS     18
         1 007306   200024 036100                    ADLQ    BUF$,,AUTO
         1 007307   200014 756100                    STQ     SEG$,,AUTO

     2634     9307    4                IF ID.GX = FM$MISEG.GX AND

   9307  1 007310   200014 470500                    LDP0    SEG$,,AUTO
         1 007311   000000 236100                    LDQ     0,,PR0
         1 007312   000014 772000                    QRL     12
         1 007313   001777 376007                    ANQ     1023,DL
         1 007314   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 007315   200034 471500                    LDP1    IDPTR$,,AUTO
         1 007316   100001 236100                    LDQ     1,,PR1
         1 007317   000032 772000                    QRL     26
         1 007320   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 007321   007341 601000 1                  TNZ     s:9316
         1 007322   000001 236100                    LDQ     1,,PR0
         1 007323   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 007324   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 007325   100001 236100                    LDQ     1,,PR1
         1 007326   000020 376000 2                  ANQ     16
         1 007327   200167 116100                    CMPQ    STEMP_FIELDIN+3,,AUTO
         1 007330   007341 601000 1                  TNZ     s:9316

     2635     9308    4                   ID.DA = FM$MISEG.GDA THEN
     2636     9309    4                   REPOS=0;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:584  

   9309  1 007331   200121 450100                    STZ     REPOS,,AUTO

     2637     9310    4                END;  /* CHECK SEG */

     2638     9311    3             END;  /* CHECK TO SEE IF WE ARE ALREADY THERE */

   9311  1 007332   007341 710000 1                  TRA     s:9316

     2639     9312    2          ELSE IF FPTCODE ~= FPTWRITE THEN

   9312  1 007333   200003 471500                    LDP1    @PSEG$,,AUTO
         1 007334   100000 235100                    LDA     0,,PR1
         1 007335   000001 115007                    CMPA    1,DL
         1 007336   007341 600000 1                  TZE     s:9316

     2640     9313    2             CALL SHAREPOS ALTRET(ERR); /* Shared or not, make sure auto

   9313  1 007337   023077 701000 1                  TSX1    SHAREPOS
         1 007340   007534 702000 1                  TSX2    ERR

     2641     9314                                             is set to something reasonable */
     2642     9315
     2643     9316    2          IF REPOS = 1 THEN

   9316  1 007341   200121 235100                    LDA     REPOS,,AUTO
         1 007342   000001 115007                    CMPA    1,DL
         1 007343   007522 601000 1                  TNZ     s:9358

     2644     9317    3             DO;   /* POSITION BY ID */

     2645     9318    3             DA=ID.DA;

   9318  1 007344   200034 470500                    LDP0    IDPTR$,,AUTO
         1 007345   000001 236100                    LDQ     1,,PR0
         1 007346   000020 376000 2                  ANQ     16
         1 007347   200021 756100                    STQ     DA,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:585  

     2646     9319    3             IF DA=FM_FRZERO THEN

   9319  1 007350   000000 116000 xsym               CMPQ    FM_FRZERO
         1 007351   007360 601000 1                  TNZ     s:9326

     2647     9320    4                DO;  /* 1 gran file */

     2648     9321    4                F$DCB.LVL=0;

   9321  1 007352   200007 471500                    LDP1    JDCB$,,AUTO
         1 007353   000035 236000 2                  LDQ     29
         1 007354   100067 356100                    ANSQ    55,,PR1

     2649     9322    4                BUFNUM=1;

   9322  1 007355   000001 235007                    LDA     1,DL
         1 007356   200044 755100                    STA     BUFNUM,,AUTO

     2650     9323    4                END; /* 1 gran file */

   9323  1 007357   007366 710000 1                  TRA     s:9330

     2651     9324    3             ELSE
     2652     9325    4                DO;  /* Multi-gran file */

     2653     9326    4                F$DCB.LVL=7;

   9326  1 007360   200007 471500                    LDP1    JDCB$,,AUTO
         1 007361   070000 236003                    LDQ     28672,DU
         1 007362   100067 256100                    ORSQ    55,,PR1

     2654     9327    4                BUFNUM=0;

   9327  1 007363   200044 450100                    STZ     BUFNUM,,AUTO

     2655     9328    4                F$DCB.SEZ_OK = '1'B; /* Don't check LVL in REDBUF. */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:586  

   9328  1 007364   000004 236003                    LDQ     4,DU
         1 007365   100064 256100                    ORSQ    52,,PR1

     2656     9329    4                END; /* Multi-gran file */

     2657     9330    3             IF F$DCB.CFU$->FM$CFU.UGRANS <= DA - FM_FRZERO OR

   9330  1 007366   100066 473500                    LDP3    54,,PR1
         1 007367   200021 236100                    LDQ     DA,,AUTO
         1 007370   000000 136000 xsym               SBLQ    FM_FRZERO
         1 007371   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 007372   300004 236100                    LDQ     4,,PR3
         1 007373   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 007374   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 007375   007524 604400 1                  TMOZ    BADID
         1 007376   200021 236100                    LDQ     DA,,AUTO
         1 007377   000000 116000 xsym               CMPQ    FM_FRZERO
         1 007400   007524 602000 1                  TNC     BADID
         1 007401   000000 116000 xsym               CMPQ    FM_FRMAX
         1 007402   007404 600000 1                  TZE     s:9333
         1 007403   007524 603000 1                  TRC     BADID

     2658     9331    3                  DA < FM_FRZERO OR DA > FM_FRMAX THEN
     2659     9332    3                GOTO BADID;
     2660     9333    3             CALL FMD$REDBUF(DBUF$, BUFNUM, DA,,, -1) ALTRET(BADID);

   9333  1 007404   000056 236000 2                  LDQ     46
         1 007405   000001 235000 xsym               LDA     B_VECTNIL+1
         1 007406   200172 757100                    STAQ    STEMP_FIELDIN+6,,AUTO
         1 007407   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 007410   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 007411   200021 633500                    EPPR3   DA,,AUTO
         1 007412   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 007413   200044 634500                    EPPR4   BUFNUM,,AUTO
         1 007414   200167 454500                    STP4    STEMP_FIELDIN+3,,AUTO
         1 007415   200040 635500                    EPPR5   DBUF$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:587  
         1 007416   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 007417   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 007420   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 007421   000000 701000 xent               TSX1    FMD$REDBUF
         1 007422   007524 702000 1                  TSX2    BADID

     2661     9334    4             IF F$DCB.SEZ_OK THEN DO;

   9334  1 007423   200007 470500                    LDP0    JDCB$,,AUTO
         1 007424   000064 236100                    LDQ     52,,PR0
         1 007425   000004 316003                    CANQ    4,DU
         1 007426   007436 600000 1                  TZE     s:9339

     2662     9335    4                IF DBUF$->FM$GRAN.LVL ~= 7 THEN

   9335  1 007427   200040 471500                    LDP1    DBUF$,,AUTO
         1 007430   100001 236100                    LDQ     1,,PR1
         1 007431   340000 376007                    ANQ     114688,DL
         1 007432   340000 116007                    CMPQ    114688,DL
         1 007433   007524 601000 1                  TNZ     BADID

     2663     9336    4                   GOTO BADID;
     2664     9337    4                F$DCB.SEZ_OK = '0'B;

   9337  1 007434   000047 236000 2                  LDQ     39
         1 007435   000064 356100                    ANSQ    52,,PR0

     2665     9338    4                END;

     2666     9339    3             IF ORG = %INDEXED# THEN

   9339  1 007436   200022 235100                    LDA     ORG,,AUTO
         1 007437   000006 115007                    CMPA    6,DL
         1 007440   007471 601000 1                  TNZ     s:9349

     2667     9340    4                DO;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:588  
     2668     9341    4                IF ALTKEY$=ADDR(NIL) THEN

   9341  1 007441   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 007442   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 007443   007455 601000 1                  TNZ     s:9343

     2669     9342    4                   MINSIZE=F$DCB.KEYX+F$DCB.KEYL;

   9342  1 007444   000036 236100                    LDQ     30,,PR0
         1 007445   000011 772000                    QRL     9
         1 007446   000777 376007                    ANQ     511,DL
         1 007447   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 007450   000036 236100                    LDQ     30,,PR0
         1 007451   000022 772000                    QRL     18
         1 007452   200166 036100                    ADLQ    STEMP_FIELDIN+2,,AUTO
         1 007453   200122 756100                    STQ     MINSIZE,,AUTO
         1 007454   007461 710000 1                  TRA     s:9344

     2670     9343    4                ELSE MINSIZE=ALTKEYS.MINWRSIZ;

   9343  1 007455   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 007456   100000 236100                    LDQ     0,,PR1
         1 007457   007777 376007                    ANQ     4095,DL
         1 007460   200122 756100                    STQ     MINSIZE,,AUTO

     2671     9344    4                IF ID.GX*4+MINSIZE > 4096 THEN

   9344  1 007461   200034 471500                    LDP1    IDPTR$,,AUTO
         1 007462   100001 236100                    LDQ     1,,PR1
         1 007463   000030 772000                    QRL     24
         1 007464   007774 376007                    ANQ     4092,DL
         1 007465   200122 036100                    ADLQ    MINSIZE,,AUTO
         1 007466   010001 116007                    CMPQ    4097,DL
         1 007467   007524 603000 1                  TRC     BADID

     2672     9345    4                   GOTO BADID;
     2673     9346    4                END;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:589  

   9346  1 007470   007501 710000 1                  TRA     s:9352

     2674     9347    3             ELSE
     2675     9348    4                DO;   /* IRKEY */

     2676     9349    4                IF ID.GX*4+IRKEYS.MINSIZE > 4096 THEN

   9349  1 007471   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 007472   200034 473500                    LDP3    IDPTR$,,AUTO
         1 007473   300001 236100                    LDQ     1,,PR3
         1 007474   000030 772000                    QRL     24
         1 007475   007774 376007                    ANQ     4092,DL
         1 007476   100001 036100                    ADLQ    1,,PR1
         1 007477   010001 116007                    CMPQ    4097,DL
         1 007500   007524 603000 1                  TRC     BADID

     2677     9350    4                   GOTO BADID;
     2678     9351    4                END;  /* IRKEY */

     2679     9352    3             KEYIN$=PINCRC(DBUF$, F$DCB.KEYX+ID.GX*4);

   9352  1 007501   000036 236100                    LDQ     30,,PR0
         1 007502   000022 772000                    QRL     18
         1 007503   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 007504   200034 471500                    LDP1    IDPTR$,,AUTO
         1 007505   100001 236100                    LDQ     1,,PR1
         1 007506   000030 772000                    QRL     24
         1 007507   007774 376007                    ANQ     4092,DL
         1 007510   200166 036100                    ADLQ    STEMP_FIELDIN+2,,AUTO
         1 007511   000020 736000                    QLS     16
         1 007512   200040 036100                    ADLQ    DBUF$,,AUTO
         1 007513   200037 756100                    STQ     KEYIN$,,AUTO

     2680     9353    3             COMFLG=%FMREC;

   9353  1 007514   000002 235007                    LDA     2,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:590  
         1 007515   200060 755100                    STA     COMFLG,,AUTO

     2681     9354    3             CALL FINDKEY ALTRET(NOKEY);

   9354  1 007516   007536 701000 1                  TSX1    FINDKEY
         1 007517   007531 702000 1                  TSX2    NOKEY

     2682     9355    3             CALL FINDID ALTRET(NOKEY);

   9355  1 007520   007220 701000 1                  TSX1    FINDID
         1 007521   007531 702000 1                  TSX2    NOKEY

     2683     9356    3             END;  /* POSITION BY ID */

     2684     9357
     2685     9358    2          RETURN;

   9358  1 007522   200120 221300                    LDX1  ! UNIQUE+1,,AUTO
         1 007523   000001 702211                    TSX2  ! 1,X1

     2686     9359    2   BADID: B$JIT.ERR=ERRBADID;

   9359  1 007524   000035 236000 0     BADID        LDQ     ERRBADID
         1 007525   000000 470400 xsym               LDP0    B$JIT$
         1 007526   000012 756100                    STQ     10,,PR0

     2687     9360        /*E*      ERROR:  FMG-E$BADID-0
     2688     9361                MESSAGE:  Record ID not found% in %UF%.
     2689     9362               MESSAGE1:  The ID that you tried to read or position by could not
     2690     9363                          be found% in %UF%.
     2691     9364               DESCRIPTION:  Either the referenced block does not exist in the file, or
     2692     9365                             the referenced record isn't in that block.
     2693     9366        */
     2694     9367    2          ALTRETURN;

   9367  1 007527   200120 221300                    LDX1  ! UNIQUE+1,,AUTO
         1 007530   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:591  

     2695     9368    2   NOKEY: B$JIT.ERR=ERRNOKEY;

   9368  1 007531   000007 236000 0     NOKEY        LDQ     ERRNOKEY
         1 007532   000000 470400 xsym               LDP0    B$JIT$
         1 007533   000012 756100                    STQ     10,,PR0

     2696     9369    2   ERR:   ALTRETURN;

   9369  1 007534   200120 221300       ERR          LDX1  ! UNIQUE+1,,AUTO
         1 007535   000000 702211                    TSX2  ! 0,X1

     2697     9370    2          END FINDIDO;
     2698     9371               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:592  
     2699     9372        /*I*     NAME:     FINDKEY
     2700     9373                 PURPOSE:  To find a specific key within a file
     2701     9374                 DESCRIPTION:
     2702     9375                      First check the current index granule to see if the key
     2703     9376                 could be here.
     2704     9377
     2705     9378                      If the key was not in the granule, then we have to look
     2706     9379                 for the proper granule.  If there is an upper level, then
     2707     9380                 try searching that.
     2708     9381
     2709     9382                      Loop through the file, searching for the granule of your
     2710     9383                 dreams.  If we find the proper granule, then leave, now!  If
     2711     9384                 the key was greater than the last key in the granule, then
     2712     9385                 FLINK to the next granule to try again.  If the key was less
     2713     9386                 then the first key in the granule, then we need to blink.
     2714     9387                 If we got here as a result of a flink last time, then we
     2715     9388                 are stuck between two granules, go ahead and leave.
     2716     9389
     2717     9390                      If the granule didn't have any keys at all, then we've
     2718     9391                 got trouble.  Use the last result to decide what to do.  We
     2719     9392                 will try searching in the same direction that we started out
     2720     9393                 in.  If the last time there weren't any keys, we will start
     2721     9394                 off trying to search backwards.  If we hit the beginning of
     2722     9395                 the file without finding anything, then we will try searching
     2723     9396                 to the end of the file.  Set the result to the previous
     2724     9397                 result, to make sure we keep searching in the same direction.
     2725     9398
     2726     9399                      After all of that, check the current granule to see if
     2727     9400                 the key goes here.
     2728     9401
     2729     9402                      After finding the proper granule, then binary search
     2730     9403                 the granule for the specified key.
     2731     9404
     2732     9405                      See how many reads on level 0 we had to do to find the
     2733     9406                 key.  The upper level may need to be rebuilt.
     2734     9407
     2735     9408                      If we ran into the beginning of the file, then position
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:593  
     2736     9409                 ouselves to the first key in the file.
     2737     9410
     2738     9411                      If we ran into the end of the file, then position ourselves
     2739     9412                 to one beyond the last key in the file.
     2740     9413        */
     2741     9414                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:594  
     2742     9415    1   FINDKEY: PROC ALTRET;

   9415  1 007536   200124 741300       FINDKEY      STX1  ! SIZE+1,,AUTO

     2743     9416    2          DCL FORWARD UBIN;
     2744     9417    2          DCL LAST_RESULT UBIN;
     2745     9418        /* */
     2746     9419    2          RESULT=%NONE;

   9419  1 007537   000003 235007                    LDA     3,DL
         1 007540   200031 755100                    STA     RESULT,,AUTO

     2747     9420    2          FORWARD=0;

   9420  1 007541   200125 450100                    STZ     FORWARD,,AUTO

     2748     9421    2          F$DCB.RDL0=0;

   9421  1 007542   200007 470500                    LDP0    JDCB$,,AUTO
         1 007543   000000 236003                    LDQ     0,DU
         1 007544   000003 552120                    STBQ    3,'20'O,PR0

     2749     9422    2          IF F$DCB.BFR.BUFX(1) ~= 0 THEN

   9422  1 007545   000116 236100                    LDQ     78,,PR0
         1 007546   037000 316003                    CANQ    15872,DU
         1 007547   007601 600000 1                  TZE     s:9433

     2750     9423    3             DO;   /* CHECK CURRENT GRAN FIRST */

     2751     9424    3             BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));

   9424  1 007550   000116 236100                    LDQ     78,,PR0
         1 007551   000033 772000                    QRL     27
         1 007552   000037 376007                    ANQ     31,DL
         1 007553   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 007554   200024 756100                    STQ     BUF$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:595  

     2752     9425    3             KEYCNT=FM$GRAN.KEYCNT;

   9425  1 007555   200024 471500                    LDP1    BUF$,,AUTO
         1 007556   100002 236100                    LDQ     2,,PR1
         1 007557   000777 376007                    ANQ     511,DL
         1 007560   200017 756100                    STQ     KEYCNT,,AUTO

     2753     9426    3             KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

   9426  1 007561   100002 220100                    LDX0    2,,PR1
         1 007562   000000 636010                    EAQ     0,X0
         1 007563   200024 036100                    ADLQ    BUF$,,AUTO
         1 007564   200025 756100                    STQ     KTPTR$,,AUTO

     2754     9427    3             BOUND=FM$KEYTBL(0);

   9427  1 007565   200025 473500                    LDP3    KTPTR$,,AUTO
         1 007566   300000 236100                    LDQ     0,,PR3
         1 007567   000033 772000                    QRL     27
         1 007570   200016 756100                    STQ     BOUND,,AUTO

     2755     9428    3             CALL CHECKGRAN ALTRET(ERR);

   9428  1 007571   003476 701000 1                  TSX1    CHECKGRAN
         1 007572   010135 702000 1                  TSX2    ERR

     2756     9429    3             IF RESULT = %GREATER AND FM$GRAN.FLINK = 0 THEN

   9429  1 007573   200031 235100                    LDA     RESULT,,AUTO
         1 007574   000002 115007                    CMPA    2,DL
         1 007575   007601 601000 1                  TNZ     s:9433
         1 007576   200024 470500                    LDP0    BUF$,,AUTO
         1 007577   000004 235100                    LDA     4,,PR0
         1 007600   010124 600000 1                  TZE     AT_EOF

     2757     9430    3                GOTO AT_EOF;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:596  
     2758     9431    3             END;  /* CHECK CURRENT GRAN FIRST */

     2759     9432
     2760     9433    2          IF RESULT ~= %EQUAL THEN

   9433  1 007601   200031 235100                    LDA     RESULT,,AUTO
         1 007602   010004 600000 1                  TZE     s:9508

     2761     9434    3             DO;   /* SEARCH FOR GRAN */

     2762     9435    3             IF F$DCB.GTYP = FMGTFILE AND F$DCB.TDA ~= 0 THEN

   9435  1 007603   200007 470500                    LDP0    JDCB$,,AUTO
         1 007604   000064 236100                    LDQ     52,,PR0
         1 007605   034000 376003                    ANQ     14336,DU
         1 007606   030000 116003                    CMPQ    12288,DU
         1 007607   007633 601000 1                  TNZ     s:9444
         1 007610   000070 236100                    LDQ     56,,PR0
         1 007611   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 007612   007633 600000 1                  TZE     s:9444

     2763     9436    4                DO;   /* SEARCH UPPER LEVEL */

     2764     9437    4                CALL ULSEARCH ALTRET(ERR);

   9437  1 007613   024473 701000 1                  TSX1    ULSEARCH
         1 007614   010135 702000 1                  TSX2    ERR

     2765     9438    4                KEYCNT=FM$GRAN.KEYCNT;

   9438  1 007615   200024 470500                    LDP0    BUF$,,AUTO
         1 007616   000002 236100                    LDQ     2,,PR0
         1 007617   000777 376007                    ANQ     511,DL
         1 007620   200017 756100                    STQ     KEYCNT,,AUTO

     2766     9439    4                KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:597  
   9439  1 007621   000002 220100                    LDX0    2,,PR0
         1 007622   000000 636010                    EAQ     0,X0
         1 007623   200024 036100                    ADLQ    BUF$,,AUTO
         1 007624   200025 756100                    STQ     KTPTR$,,AUTO

     2767     9440    4                BOUND=FM$KEYTBL(0);

   9440  1 007625   200025 471500                    LDP1    KTPTR$,,AUTO
         1 007626   100000 236100                    LDQ     0,,PR1
         1 007627   000033 772000                    QRL     27
         1 007630   200016 756100                    STQ     BOUND,,AUTO

     2768     9441    4                CALL CHECKGRAN ALTRET(ERR);

   9441  1 007631   003476 701000 1                  TSX1    CHECKGRAN
         1 007632   010135 702000 1                  TSX2    ERR

     2769     9442    4                END;  /* SEARCH UPPER LEVEL */

     2770     9443
     2771     9444    3             BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));

   9444  1 007633   200007 470500                    LDP0    JDCB$,,AUTO
         1 007634   000116 236100                    LDQ     78,,PR0
         1 007635   000033 772000                    QRL     27
         1 007636   000037 376007                    ANQ     31,DL
         1 007637   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 007640   200024 756100                    STQ     BUF$,,AUTO

     2772     9445    3             IF BUF$ = ADDR(NIL) THEN

   9445  1 007641   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 007642   007704 601000 1                  TNZ     s:9456

     2773     9446    4                DO;   /* READ BUFFER */

     2774     9447    4                F$DCB.LVL=0;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:598  

   9447  1 007643   000035 236000 2                  LDQ     29
         1 007644   000067 356100                    ANSQ    55,,PR0

     2775     9448    4                DA=F$DCB.BFR.DA(1);

   9448  1 007645   000116 236100                    LDQ     78,,PR0
         1 007646   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 007647   200021 756100                    STQ     DA,,AUTO

     2776     9449    4                CALL FMD$REDBUF(BUF$, 1, DA, 0, -1) ALTRET(ERR);

   9449  1 007650   000056 236000 2                  LDQ     46
         1 007651   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 007652   000000 236000 2                  LDQ     0
         1 007653   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 007654   200021 631500                    EPPR1   DA,,AUTO
         1 007655   200170 451500                    STP1    STEMP_FIELDIN+4,,AUTO
         1 007656   000001 236000 2                  LDQ     1
         1 007657   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 007660   200024 633500                    EPPR3   BUF$,,AUTO
         1 007661   200166 453500                    STP3    STEMP_FIELDIN+2,,AUTO
         1 007662   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 007663   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 007664   000000 701000 xent               TSX1    FMD$REDBUF
         1 007665   010135 702000 1                  TSX2    ERR

     2777     9450    4                KEYCNT=FM$GRAN.KEYCNT;

   9450  1 007666   200024 470500                    LDP0    BUF$,,AUTO
         1 007667   000002 236100                    LDQ     2,,PR0
         1 007670   000777 376007                    ANQ     511,DL
         1 007671   200017 756100                    STQ     KEYCNT,,AUTO

     2778     9451    4                KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

   9451  1 007672   000002 220100                    LDX0    2,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:599  
         1 007673   000000 636010                    EAQ     0,X0
         1 007674   200024 036100                    ADLQ    BUF$,,AUTO
         1 007675   200025 756100                    STQ     KTPTR$,,AUTO

     2779     9452    4                BOUND=FM$KEYTBL(0);

   9452  1 007676   200025 471500                    LDP1    KTPTR$,,AUTO
         1 007677   100000 236100                    LDQ     0,,PR1
         1 007700   000033 772000                    QRL     27
         1 007701   200016 756100                    STQ     BOUND,,AUTO

     2780     9453    4                CALL CHECKGRAN ALTRET(ERR);

   9453  1 007702   003476 701000 1                  TSX1    CHECKGRAN
         1 007703   010135 702000 1                  TSX2    ERR

     2781     9454    4                END;  /* READ BUFFER */

     2782     9455
     2783     9456    3             LAST_RESULT=RESULT;

   9456  1 007704   200031 235100                    LDA     RESULT,,AUTO
         1 007705   200126 755100                    STA     LAST_RESULT,,AUTO

     2784     9457    4   SRCH:     DO WHILE (RESULT ~= %EQUAL);

   9457  1 007706   010004 600000 1     SRCH         TZE     s:9508

     2785     9458
     2786     9459    5                DO CASE(RESULT);

   9459  1 007707   200031 235100                    LDA     RESULT,,AUTO
         1 007710   000004 115007                    CMPA    4,DL
         1 007711   007713 602005 1                  TNC     s:9459+4,AL
         1 007712   007776 710000 1                  TRA     s:9503
         1 007713   007717 710000 1                  TRA     s:9461
         1 007714   007723 710000 1                  TRA     s:9467
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:600  
         1 007715   007720 710000 1                  TRA     s:9464
         1 007716   007733 710000 1                  TRA     s:9476

     2787     9460    5                   CASE(%EQUAL);

     2788     9461    5                      EXIT SRCH;

   9461  1 007717   010004 710000 1                  TRA     s:9508

     2789     9462
     2790     9463    5                   CASE(%GREATER);

     2791     9464    5                      CALL FLINK ALTRET(EOF);

   9464  1 007720   010165 701000 1                  TSX1    FLINK
         1 007721   010117 702000 1                  TSX2    EOF
         1 007722   007776 710000 1                  TRA     s:9503

     2792     9465
     2793     9466    5                   CASE(%LESS);

     2794     9467    5                      IF LAST_RESULT = %GREATER THEN

   9467  1 007723   200126 236100                    LDQ     LAST_RESULT,,AUTO
         1 007724   000002 116007                    CMPQ    2,DL
         1 007725   007730 601000 1                  TNZ     s:9473

     2795     9468    6                         DO;   /* IN BETWEEN GRANS */

     2796     9469    6                         RESULT=%EQUAL;

   9469  1 007726   200031 450100                    STZ     RESULT,,AUTO

     2797     9470    6                         EXIT SRCH;

   9470  1 007727   010004 710000 1                  TRA     s:9508

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:601  
     2798     9471    6                         END;  /* IN BETWEEN GRANS */
     2799     9472    5                      ELSE
     2800     9473    5                         CALL BLINK ALTRET(BOF);

   9473  1 007730   002314 701000 1                  TSX1    BLINK
         1 007731   010044 702000 1                  TSX2    BOF
         1 007732   007776 710000 1                  TRA     s:9503

     2801     9474
     2802     9475    5                   CASE(%NONE);

     2803     9476    6                      DO CASE(LAST_RESULT);

   9476  1 007733   200126 236100                    LDQ     LAST_RESULT,,AUTO
         1 007734   000004 116007                    CMPQ    4,DL
         1 007735   007737 602006 1                  TNC     s:9476+4,QL
         1 007736   007774 710000 1                  TRA     s:9500
         1 007737   007774 710000 1                  TRA     s:9500
         1 007740   007743 710000 1                  TRA     s:9478
         1 007741   007746 710000 1                  TRA     s:9481
         1 007742   007751 710000 1                  TRA     s:9484

     2804     9477    6                         CASE(%LESS);

     2805     9478    6                            CALL BLINK ALTRET(BOF);

   9478  1 007743   002314 701000 1                  TSX1    BLINK
         1 007744   010044 702000 1                  TSX2    BOF
         1 007745   007774 710000 1                  TRA     s:9500

     2806     9479
     2807     9480    6                         CASE(%GREATER);

     2808     9481    6                            CALL FLINK ALTRET(EOF);

   9481  1 007746   010165 701000 1                  TSX1    FLINK
         1 007747   010117 702000 1                  TSX2    EOF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:602  
         1 007750   007774 710000 1                  TRA     s:9500

     2809     9482
     2810     9483    6                         CASE(%NONE);

     2811     9484    7                            DO WHILE ('0'B);

   9484  1 007751   007765 710000 1                  TRA     s:9494

     2812     9485    7   TRY_FORWARD:                IF B$JIT.ERR.CODE = %E$BOF THEN

   9485  1 007752   000000 470400 xsym  TRY_FORWARD  LDP0    B$JIT$
         1 007753   000012 236100                    LDQ     10,,PR0
         1 007754   377770 376007                    ANQ     131064,DL
         1 007755   000040 116007                    CMPQ    32,DL
         1 007756   007763 601000 1                  TNZ     s:9491

     2813     9486    8                                  DO;   /* TRY FORWARD */

     2814     9487    8                                  FORWARD=1;

   9487  1 007757   000001 235007                    LDA     1,DL
         1 007760   200125 755100                    STA     FORWARD,,AUTO

     2815     9488    8                                  B$JIT.ERR='0'B;

   9488  1 007761   000012 450100                    STZ     10,,PR0

     2816     9489    8                                  END;  /* TRY FORWARD */

   9489  1 007762   007765 710000 1                  TRA     s:9494

     2817     9490    7                               ELSE
     2818     9491    7                                  ALTRETURN;

   9491  1 007763   200124 221300                    LDX1  ! SIZE+1,,AUTO
         1 007764   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:603  

     2819     9492    7                            END;

     2820     9493
     2821     9494    6                            IF FORWARD = 0 THEN

   9494  1 007765   200125 235100                    LDA     FORWARD,,AUTO
         1 007766   007772 601000 1                  TNZ     s:9497

     2822     9495    6                               CALL BLINK ALTRET(TRY_FORWARD);

   9495  1 007767   002314 701000 1                  TSX1    BLINK
         1 007770   007752 702000 1                  TSX2    TRY_FORWARD
         1 007771   007774 710000 1                  TRA     s:9500

     2823     9496    6                            ELSE
     2824     9497    6                               CALL FLINK ALTRET(EOF);

   9497  1 007772   010165 701000 1                  TSX1    FLINK
         1 007773   010117 702000 1                  TSX2    EOF

     2825     9498    6                      END;  /* CASE */

     2826     9499
     2827     9500    5                      RESULT=LAST_RESULT;

   9500  1 007774   200126 235100                    LDA     LAST_RESULT,,AUTO
         1 007775   200031 755100                    STA     RESULT,,AUTO

     2828     9501    5                END;  /* CASE */

     2829     9502
     2830     9503    4                LAST_RESULT=RESULT;

   9503  1 007776   200031 235100                    LDA     RESULT,,AUTO
         1 007777   200126 755100                    STA     LAST_RESULT,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:604  
     2831     9504    4                CALL CHECKGRAN ALTRET(ERR);

   9504  1 010000   003476 701000 1                  TSX1    CHECKGRAN
         1 010001   010135 702000 1                  TSX2    ERR

     2832     9505    4             END;  /* WHILE RESULT ~= %EQUAL */

   9505  1 010002   200031 235100                    LDA     RESULT,,AUTO
         1 010003   007707 601000 1                  TNZ     s:9459

     2833     9506    3             END;  /* SEARCH FOR GRAN */

     2834     9507
     2835     9508    2          CALL BINSEARCH ALTRET(ERR);

   9508  1 010004   001121 701000 1                  TSX1    BINSEARCH
         1 010005   010135 702000 1                  TSX2    ERR

     2836     9509
     2837     9510    2          F$DCB.RPOS='0'B;

   9510  1 010006   200007 470500                    LDP0    JDCB$,,AUTO
         1 010007   000005 236000 2                  LDQ     5
         1 010010   000064 356100                    ANSQ    52,,PR0

     2838     9511    2          F$DCB.CRECX=CRECX;

   9511  1 010011   200015 720100                    LXL0    CRECX,,AUTO
         1 010012   000067 440100                    SXL0    55,,PR0

     2839     9512    2          CALL SETPTRS;

   9512  1 010013   022001 701000 1                  TSX1    SETPTRS
         1 010014   000000 011000                    NOP     0

     2840     9513
     2841     9514    2          IF ORG ~= 0 THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:605  

   9514  1 010015   200022 235100                    LDA     ORG,,AUTO
         1 010016   010033 600000 1                  TZE     s:9517

     2842     9515    2             IF F$DCB.RDL0 > F$DCB.LRDL0 THEN

   9515  1 010017   200007 470500                    LDP0    JDCB$,,AUTO
         1 010020   000003 236100                    LDQ     3,,PR0
         1 010021   000022 772000                    QRL     18
         1 010022   000777 376007                    ANQ     511,DL
         1 010023   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 010024   000037 236100                    LDQ     31,,PR0
         1 010025   000777 376007                    ANQ     511,DL
         1 010026   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 010027   010033 605000 1                  TPL     s:9517

     2843     9516    2                FM$CFU.ULBLD=1;

   9516  1 010030   200010 471500                    LDP1    CFU$,,AUTO
         1 010031   000001 236003                    LDQ     1,DU
         1 010032   100006 256100                    ORSQ    6,,PR1

     2844     9517    2          IF FOUND = %NOO THEN

   9517  1 010033   200032 236100                    LDQ     FOUND,,AUTO
         1 010034   010042 601000 1                  TNZ     s:9523

     2845     9518    3             DO;   /* NOT FOUND */

     2846     9519    3             B$JIT.ERR=ERRNOKEY;

   9519  1 010035   000007 236000 0                  LDQ     ERRNOKEY
         1 010036   000000 470400 xsym               LDP0    B$JIT$
         1 010037   000012 756100                    STQ     10,,PR0

     2847     9520    3             ALTRETURN;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:606  
   9520  1 010040   200124 221300                    LDX1  ! SIZE+1,,AUTO
         1 010041   000000 702211                    TSX2  ! 0,X1

     2848     9521    3             END;  /* NOT FOUND */
     2849     9522
     2850     9523    2          RETURN;

   9523  1 010042   200124 221300                    LDX1  ! SIZE+1,,AUTO
         1 010043   000001 702211                    TSX2  ! 1,X1

     2851     9524
     2852     9525    2   BOF:   IF B$JIT.ERR.CODE = %E$BOF THEN

   9525  1 010044   000000 470400 xsym  BOF          LDP0    B$JIT$
         1 010045   000012 236100                    LDQ     10,,PR0
         1 010046   377770 376007                    ANQ     131064,DL
         1 010047   000040 116007                    CMPQ    32,DL
         1 010050   010117 601000 1                  TNZ     EOF

     2853     9526    3             DO;   /* BOF */

     2854     9527    3             IF KEYCNT = 0 THEN

   9527  1 010051   200017 235100                    LDA     KEYCNT,,AUTO
         1 010052   010063 601000 1                  TNZ     s:9536

     2855     9528    4                DO;   /* GO TO FIRST KEY */

     2856     9529    4                F$DCB.RPOS='0'B;

   9529  1 010053   200007 471500                    LDP1    JDCB$,,AUTO
         1 010054   000005 236000 2                  LDQ     5
         1 010055   100064 356100                    ANSQ    52,,PR1

     2857     9530    4                CRECX=0;

   9530  1 010056   200015 450100                    STZ     CRECX,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:607  

     2858     9531    4                SEGX=0;

   9531  1 010057   200013 450100                    STZ     SEGX,,AUTO

     2859     9532    4                CALL NXTREC ALTRET(EOF);

   9532  1 010060   015175 701000 1                  TSX1    NXTREC
         1 010061   010117 702000 1                  TSX2    EOF

     2860     9533    4                END;  /* GO TO FIRST KEY */

   9533  1 010062   010072 710000 1                  TRA     s:9541

     2861     9534    3             ELSE
     2862     9535    4                DO;

     2863     9536    4                CRECX=1;

   9536  1 010063   000001 235007                    LDA     1,DL
         1 010064   200015 755100                    STA     CRECX,,AUTO

     2864     9537    4                F$DCB.CRECX=CRECX;

   9537  1 010065   000000 620005                    EAX0    0,AL
         1 010066   200007 471500                    LDP1    JDCB$,,AUTO
         1 010067   100067 440100                    SXL0    55,,PR1

     2865     9538    4                CALL SETPTRS;

   9538  1 010070   022001 701000 1                  TSX1    SETPTRS
         1 010071   000000 011000                    NOP     0

     2866     9539    4                END;  /* GO TO FIRST KEY */

     2867     9540
     2868     9541    3             B$JIT.ERR=ERRNOKEY;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:608  

   9541  1 010072   000007 236000 0                  LDQ     ERRNOKEY
         1 010073   000000 470400 xsym               LDP0    B$JIT$
         1 010074   000012 756100                    STQ     10,,PR0

     2869     9542
     2870     9543        /*E*   ERROR:   -E$NOKEY-2
     2871     9544               MESSAGE: The specified key does not exist% in %UF%
     2872     9545        */
     2873     9546    3             F$DCB.RPOS='1'B;

   9546  1 010075   200007 471500                    LDP1    JDCB$,,AUTO
         1 010076   010000 236007                    LDQ     4096,DL
         1 010077   100064 256100                    ORSQ    52,,PR1

     2874     9547    3             IF ORG ~= 0 THEN

   9547  1 010100   200022 235100                    LDA     ORG,,AUTO
         1 010101   010115 600000 1                  TZE     s:9550

     2875     9548    3                IF F$DCB.RDL0 > F$DCB.LRDL0 THEN

   9548  1 010102   100003 236100                    LDQ     3,,PR1
         1 010103   000022 772000                    QRL     18
         1 010104   000777 376007                    ANQ     511,DL
         1 010105   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 010106   100037 236100                    LDQ     31,,PR1
         1 010107   000777 376007                    ANQ     511,DL
         1 010110   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 010111   010115 605000 1                  TPL     s:9550

     2876     9549    3                   FM$CFU.ULBLD=1;

   9549  1 010112   200010 473500                    LDP3    CFU$,,AUTO
         1 010113   000001 236003                    LDQ     1,DU
         1 010114   300006 256100                    ORSQ    6,,PR3

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:609  
     2877     9550    3             ALTRETURN;

   9550  1 010115   200124 221300                    LDX1  ! SIZE+1,,AUTO
         1 010116   000000 702211                    TSX2  ! 0,X1

     2878     9551    3             END;  /* BOF */
     2879     9552
     2880     9553    2   EOF:   IF B$JIT.ERR.CODE = %E$EOF THEN

   9553  1 010117   000000 470400 xsym  EOF          LDP0    B$JIT$
         1 010120   000012 236100                    LDQ     10,,PR0
         1 010121   377770 376007                    ANQ     131064,DL
         1 010122   000060 116007                    CMPQ    48,DL
         1 010123   010135 601000 1                  TNZ     ERR

     2881     9554    3             DO;   /* EOF */

     2882     9555    3   AT_EOF:   CRECX=KEYCNT+1;

   9555  1 010124   200017 235100       AT_EOF       LDA     KEYCNT,,AUTO
         1 010125   000001 035007                    ADLA    1,DL
         1 010126   200015 755100                    STA     CRECX,,AUTO

     2883     9556    3             F$DCB.CRECX=CRECX;

   9556  1 010127   000000 620005                    EAX0    0,AL
         1 010130   200007 470500                    LDP0    JDCB$,,AUTO
         1 010131   000067 440100                    SXL0    55,,PR0

     2884     9557    3             B$JIT.ERR=ERRNOKEY;

   9557  1 010132   000007 236000 0                  LDQ     ERRNOKEY
         1 010133   000000 471400 xsym               LDP1    B$JIT$
         1 010134   100012 756100                    STQ     10,,PR1

     2885     9558    3             END;  /* EOF */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:610  
     2886     9559
     2887     9560    2   ERR:   KEY$=ADDR(NIL);

   9560  1 010135   000001 236000 xsym  ERR          LDQ     B_VECTNIL+1
         1 010136   200020 756100                    STQ     KEY$,,AUTO

     2888     9561    2          SEG$=ADDR(NIL);

   9561  1 010137   200014 756100                    STQ     SEG$,,AUTO

     2889     9562    2          SEGX=0;

   9562  1 010140   200013 450100                    STZ     SEGX,,AUTO

     2890     9563    2          F$DCB.SEGX=0;

   9563  1 010141   000000 220003                    LDX0    0,DU
         1 010142   200007 470500                    LDP0    JDCB$,,AUTO
         1 010143   000100 440100                    SXL0    64,,PR0

     2891     9564    2          F$DCB.RPOS='1'B;

   9564  1 010144   010000 236007                    LDQ     4096,DL
         1 010145   000064 256100                    ORSQ    52,,PR0

     2892     9565    2          IF ORG ~= 0 THEN

   9565  1 010146   200022 235100                    LDA     ORG,,AUTO
         1 010147   010163 600000 1                  TZE     s:9568

     2893     9566    2             IF F$DCB.RDL0 > F$DCB.LRDL0 THEN

   9566  1 010150   000003 236100                    LDQ     3,,PR0
         1 010151   000022 772000                    QRL     18
         1 010152   000777 376007                    ANQ     511,DL
         1 010153   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 010154   000037 236100                    LDQ     31,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:611  
         1 010155   000777 376007                    ANQ     511,DL
         1 010156   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 010157   010163 605000 1                  TPL     s:9568

     2894     9567    2                FM$CFU.ULBLD=1;

   9567  1 010160   200010 471500                    LDP1    CFU$,,AUTO
         1 010161   000001 236003                    LDQ     1,DU
         1 010162   100006 256100                    ORSQ    6,,PR1

     2895     9568    2          ALTRETURN;

   9568  1 010163   200124 221300                    LDX1  ! SIZE+1,,AUTO
         1 010164   000000 702211                    TSX2  ! 0,X1

     2896     9569    2          END FINDKEY;
     2897     9570               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:612  
     2898     9571        /*I*     NAME:     FLINK
     2899     9572                 PURPOSE:  To link forward one granule
     2900     9573                 DESCRIPTION:
     2901     9574                      Get the disk address of the next granule.  If it is not
     2902     9575                 0, read it.
     2903     9576        */
     2904     9577    1   FLINK: PROC ALTRET;

   9577  1 010165   200140 741300       FLINK        STX1  ! SIZE,,AUTO

     2905     9578        /* */
     2906     9579    2          DA=FM$GRAN.FLINK;

   9579  1 010166   200024 470500                    LDP0    BUF$,,AUTO
         1 010167   000004 235100                    LDA     4,,PR0
         1 010170   200021 755100                    STA     DA,,AUTO

     2907     9580    2          IF DA = 0 THEN

   9580  1 010171   010177 601000 1                  TNZ     s:9586

     2908     9581    3             DO;   /* EOF */

     2909     9582    3             B$JIT.ERR=ERREOF;

   9582  1 010172   000020 236000 0                  LDQ     ERREOF
         1 010173   000000 471400 xsym               LDP1    B$JIT$
         1 010174   100012 756100                    STQ     10,,PR1

     2910     9583    3             ALTRETURN;

   9583  1 010175   200140 221300                    LDX1  ! SIZE,,AUTO
         1 010176   000000 702211                    TSX2  ! 0,X1

     2911     9584    3             END;  /* EOF */
     2912     9585
     2913     9586    2          CALL RDGRAN ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:613  

   9586  1 010177   017165 701000 1                  TSX1    RDGRAN
         1 010200   010203 702000 1                  TSX2    ERR

     2914     9587
     2915     9588    2          RETURN;

   9588  1 010201   200140 221300                    LDX1  ! SIZE,,AUTO
         1 010202   000001 702211                    TSX2  ! 1,X1

     2916     9589    2   ERR:   ALTRETURN;

   9589  1 010203   200140 221300       ERR          LDX1  ! SIZE,,AUTO
         1 010204   000000 702211                    TSX2  ! 0,X1

     2917     9590    2          END FLINK;
     2918     9591               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:614  
     2919     9592        /*I*     NAME:     GETBLINK
     2920     9593                 PURPOSE:  To get the blink into buffer 1
     2921     9594                 DESCRIPTION:
     2922     9595                      We actually want whatever is in buffer 1 to end up and the
     2923     9596                 flink in buffer 3.  So, first we read the blink into buffer 4.
     2924     9597                 Then, we put buffer 1 into buffer 3, and buffer 4 into buffer 1.
     2925     9598                 Make sure all of the pointers, etc. end up with the right values.
     2926     9599        */
     2927     9600                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:615  
     2928     9601    1   GETBLINK: PROC ALTRET;

   9601  1 010205   200130 741300       GETBLINK     STX1  ! I+1,,AUTO

     2929     9602    2          DCL LCDA SBIN;
     2930     9603    2          DCL BUF4$ PTR;
     2931     9604        /* */
     2932     9605    2          DA=FM$GRAN.BLINK;

   9605  1 010206   200024 470500                    LDP0    BUF$,,AUTO
         1 010207   000003 235100                    LDA     3,,PR0
         1 010210   200021 755100                    STA     DA,,AUTO

     2933     9606    2          LCDA=F$DCB.BFR.DA(1);

   9606  1 010211   200007 471500                    LDP1    JDCB$,,AUTO
         1 010212   100116 236100                    LDQ     78,,PR1
         1 010213   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 010214   200131 756100                    STQ     LCDA,,AUTO

     2934     9607    2          F$DCB.LVL=0;

   9607  1 010215   000035 236000 2                  LDQ     29
         1 010216   100067 356100                    ANSQ    55,,PR1

     2935     9608    2          CALL FMD$REDBUF(BUF4$, 4, DA, LCDA) ALTRET(ERR);

   9608  1 010217   200131 633500                    EPPR3   LCDA,,AUTO
         1 010220   200171 453500                    STP3    STEMP_FIELDIN+5,,AUTO
         1 010221   200021 634500                    EPPR4   DA,,AUTO
         1 010222   200170 454500                    STP4    STEMP_FIELDIN+4,,AUTO
         1 010223   000012 236000 2                  LDQ     10
         1 010224   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 010225   200132 635500                    EPPR5   BUF4$,,AUTO
         1 010226   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 010227   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 010230   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:616  
         1 010231   000000 701000 xent               TSX1    FMD$REDBUF
         1 010232   010310 702000 1                  TSX2    ERR

     2936     9609    2          CALL FMD$FLSHBUF(3);

   9609  1 010233   000014 630400 2                  EPPR0   12
         1 010234   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 010235   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 010236   000000 011000                    NOP     0

     2937     9610
     2938     9611    2          F$DCB.BFR(3)=F$DCB.BFR(1);

   9611  1 010237   200007 470500                    LDP0    JDCB$,,AUTO
         1 010240   000116 236100                    LDQ     78,,PR0
         1 010241   000120 756100                    STQ     80,,PR0

     2939     9612    2          F$DCB.BFR1(3)=F$DCB.BFR1(1);

   9612  1 010242   000123 236100                    LDQ     83,,PR0
         1 010243   000125 756100                    STQ     85,,PR0

     2940     9613    2          F$DCB.BFR(1)=F$DCB.BFR(4);

   9613  1 010244   000121 236100                    LDQ     81,,PR0
         1 010245   000116 756100                    STQ     78,,PR0

     2941     9614    2          F$DCB.BFR1(1)=F$DCB.BFR1(4);

   9614  1 010246   000126 236100                    LDQ     86,,PR0
         1 010247   000123 756100                    STQ     83,,PR0

     2942     9615    2          F$DCB.BFR(4)='0'B;

   9615  1 010250   000121 450100                    STZ     81,,PR0

     2943     9616    2          F$DCB.BFR1(4)='0'B;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:617  

   9616  1 010251   000126 450100                    STZ     86,,PR0

     2944     9617    2          BUF3$=BUF$;

   9617  1 010252   200024 236100                    LDQ     BUF$,,AUTO
         1 010253   200050 756100                    STQ     BUF3$,,AUTO

     2945     9618    2          BUF$=BUF4$;

   9618  1 010254   200132 236100                    LDQ     BUF4$,,AUTO
         1 010255   200024 756100                    STQ     BUF$,,AUTO

     2946     9619    2          BUF4$=ADDR(NIL);

   9619  1 010256   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 010257   200132 756100                    STQ     BUF4$,,AUTO

     2947     9620    2          KEYCNT=FM$GRAN.KEYCNT;

   9620  1 010260   200024 471500                    LDP1    BUF$,,AUTO
         1 010261   100002 236100                    LDQ     2,,PR1
         1 010262   000777 376007                    ANQ     511,DL
         1 010263   200017 756100                    STQ     KEYCNT,,AUTO

     2948     9621    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

   9621  1 010264   100002 220100                    LDX0    2,,PR1
         1 010265   000000 636010                    EAQ     0,X0
         1 010266   200024 036100                    ADLQ    BUF$,,AUTO
         1 010267   200025 756100                    STQ     KTPTR$,,AUTO

     2949     9622    2          BOUND=FM$KEYTBL(0);

   9622  1 010270   200025 473500                    LDP3    KTPTR$,,AUTO
         1 010271   300000 236100                    LDQ     0,,PR3
         1 010272   000033 772000                    QRL     27
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:618  
         1 010273   200016 756100                    STQ     BOUND,,AUTO

     2950     9623    2          IF ADDFLG = %KEY THEN

   9623  1 010274   200047 235100                    LDA     ADDFLG,,AUTO
         1 010275   010302 601000 1                  TNZ     s:9626

     2951     9624    2             CRECX=KEYCNT+1;

   9624  1 010276   200017 235100                    LDA     KEYCNT,,AUTO
         1 010277   000001 035007                    ADLA    1,DL
         1 010300   200015 755100                    STA     CRECX,,AUTO
         1 010301   010304 710000 1                  TRA     s:9627

     2952     9625    2          ELSE
     2953     9626    2             CRECX=KEYCNT;

   9626  1 010302   200017 235100                    LDA     KEYCNT,,AUTO
         1 010303   200015 755100                    STA     CRECX,,AUTO

     2954     9627    2          F$DCB.CRECX=CRECX;

   9627  1 010304   000000 620005                    EAX0    0,AL
         1 010305   000067 440100                    SXL0    55,,PR0

     2955     9628
     2956     9629    2          RETURN;

   9629  1 010306   200130 221300                    LDX1  ! I+1,,AUTO
         1 010307   000001 702211                    TSX2  ! 1,X1

     2957     9630    2   ERR:   ALTRETURN;

   9630  1 010310   200130 221300       ERR          LDX1  ! I+1,,AUTO
         1 010311   000000 702211                    TSX2  ! 0,X1

     2958     9631    2          END GETBLINK;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:619  
     2959     9632               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:620  
     2960     9633        /*I*     NAME:     GETIDP
     2961     9634                 PURPOSE:  To return IDs for PRECORD
     2962     9635                 DESCRIPTION:
     2963     9636                      Get the size of the user's id buffer.  If it is too small
     2964     9637                 for anything, then just return.
     2965     9638
     2966     9639                      If the user only asked for one id, then return the id of
     2967     9640                 the segment we are currently pointing to.
     2968     9641
     2969     9642                      The user may have asked for all ids.  First we need to
     2970     9643                 save our current position, so we can return to it later.
     2971     9644                 Keep looping through the list of duplicates, putting the ids
     2972     9645                 into the id buffer.
     2973     9646
     2974     9647                      Restore the position to wherever we were.  If all of the
     2975     9648                 ids couldn't fit, then return an error message.
     2976     9649        */
     2977     9650                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:621  
     2978     9651    1   GETIDP: PROC ALTRET;

   9651  1 010312   200102 741300       GETIDP       STX1  ! IGNORE_LKEY,,AUTO

     2979     9652    2          DCL PTR$ PTR;
     2980     9653    2          DCL I SBIN;
     2981     9654    2          DCL 1 SAVE,
     2982     9655    2               2 CRECX UBIN(9) CALIGNED,
     2983     9656    2               2 DA UBIN(27) CALIGNED,
     2984     9657    2               2 RPOS BIT(1) UNAL,
     2985     9658    2               2 SEGX UBIN(35) UNAL;
     2986     9659        /* */
     2987     9660    2          IF ORG = %KEYED# THEN

   9660  1 010313   200022 235100                    LDA     ORG,,AUTO
         1 010314   000002 115007                    CMPA    2,DL
         1 010315   010317 601000 1                  TNZ     s:9663

     2988     9661    2             RETURN;

   9661  1 010316   000001 702211                    TSX2  ! 1,X1

     2989     9662
     2990     9663    2          IDPTR$=B$PS2$;

   9663  1 010317   000000 236000 xsym               LDQ     B$PS2$
         1 010320   200034 756100                    STQ     IDPTR$,,AUTO

     2991     9664    2          CALL HFF$DSIZ(B$PS2$, I)

   9664  1 010321   200104 630500                    EPPR0   I,,AUTO
         1 010322   200167 450500                    STP0    STEMP_FIELDIN+3,,AUTO
         1 010323   000011 236000 2                  LDQ     9
         1 010324   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 010325   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 010326   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 010327   000000 701000 xent               TSX1    HFF$DSIZ
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:622  
         1 010330   010343 702000 1                  TSX2    s:9672

     2992     9665    3            WHENRETURN DO;

     2993     9666    3              CALL HFF$WRITE(B$PS2$)

   9666  1 010331   000011 630400 2                  EPPR0   9
         1 010332   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 010333   000000 701000 xent               TSX1    HFF$WRITE
         1 010334   010336 702000 1                  TSX2    s:9668
         1 010335   010343 710000 1                  TRA     s:9672

     2994     9667    4                WHENALTRETURN DO;

     2995     9668    4                  B$JIT.ERR=ERRIDTRAP;

   9668  1 010336   000030 236000 0                  LDQ     ERRIDTRAP
         1 010337   000000 470400 xsym               LDP0    B$JIT$
         1 010340   000012 756100                    STQ     10,,PR0

     2996     9669    4                  ALTRETURN;

   9669  1 010341   200102 221300                    LDX1  ! IGNORE_LKEY,,AUTO
         1 010342   000000 702211                    TSX2  ! 0,X1

     2997     9670    4                END;
     2998     9671    3            END;

     2999     9672    2          I=I/4;

   9672  1 010343   200104 236100                    LDQ     I,,AUTO
         1 010344   000004 506007                    DIV     4,DL
         1 010345   200104 756100                    STQ     I,,AUTO

     3000     9673    2          IF I <= 0 THEN

   9673  1 010346   000000 116003                    CMPQ    0,DU
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:623  
         1 010347   010352 605400 1                  TPNZ    s:9676

     3001     9674    2             RETURN;

   9674  1 010350   200102 221300                    LDX1  ! IGNORE_LKEY,,AUTO
         1 010351   000001 702211                    TSX2  ! 1,X1

     3002     9675
     3003     9676    2          IF NOT FPT$PRECORD_V.IDALL OR INDEX# = 0 THEN

   9676  1 010352   000000 470400 xsym               LDP0    B$PS0$
         1 010353   000000 236100                    LDQ     0,,PR0
         1 010354   001000 316007                    CANQ    512,DL
         1 010355   010360 600000 1                  TZE     s:9678
         1 010356   200011 235100                    LDA     INDEX#,,AUTO
         1 010357   010410 601000 1                  TNZ     s:9689

     3004     9677    3             DO;   /* JUST ONE ID */

     3005     9678    3             IF SEG$ = ADDR(NIL) OR I = 1 THEN

   9678  1 010360   200014 236100                    LDQ     SEG$,,AUTO
         1 010361   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 010362   010366 600000 1                  TZE     s:9679
         1 010363   200104 235100                    LDA     I,,AUTO
         1 010364   000001 115007                    CMPA    1,DL
         1 010365   010371 601000 1                  TNZ     s:9682

     3006     9679    3                ID.COUNT=0;

   9679  1 010366   200034 471500                    LDP1    IDPTR$,,AUTO
         1 010367   100000 450100                    STZ     0,,PR1
         1 010370   010533 710000 1                  TRA     s:9733

     3007     9680    3             ELSE
     3008     9681    4                DO;   /* GET ID */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:624  
     3009     9682    4                ID.COUNT=1;

   9682  1 010371   000001 235007                    LDA     1,DL
         1 010372   200034 471500                    LDP1    IDPTR$,,AUTO
         1 010373   100000 755100                    STA     0,,PR1

     3010     9683    4                ID.GX=FM$MISEG.GX;

   9683  1 010374   200014 470500                    LDP0    SEG$,,AUTO
         1 010375   000000 236100                    LDQ     0,,PR0
         1 010376   000016 736000                    QLS     14
         1 010377   100001 676100                    ERQ     1,,PR1
         1 010400   777400 376003                    ANQ     -256,DU
         1 010401   100001 656100                    ERSQ    1,,PR1

     3011     9684    4                ID.DA=FM$MISEG.GDA;

   9684  1 010402   200014 470500                    LDP0    SEG$,,AUTO
         1 010403   000001 236100                    LDQ     1,,PR0
         1 010404   100001 676100                    ERQ     1,,PR1
         1 010405   000020 376000 2                  ANQ     16
         1 010406   100001 656100                    ERSQ    1,,PR1

     3012     9685    4                END;  /* GET ID */

     3013     9686    3             END;  /* JUST ONE ID */

   9686  1 010407   010533 710000 1                  TRA     s:9733

     3014     9687    2          ELSE
     3015     9688    3             DO;   /* ALL IDS */

     3016     9689    3             ID.COUNT=0;

   9689  1 010410   200034 471500                    LDP1    IDPTR$,,AUTO
         1 010411   100000 450100                    STZ     0,,PR1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:625  
     3017     9690    3             I=I-1;

   9690  1 010412   000001 336007                    LCQ     1,DL
         1 010413   200104 056100                    ASQ     I,,AUTO

     3018     9691    3             SAVE.DA=F$DCB.BFR.DA(1);

   9691  1 010414   200007 470500                    LDP0    JDCB$,,AUTO
         1 010415   000116 236100                    LDQ     78,,PR0
         1 010416   200105 552134                    STBQ    SAVE,'34'O,AUTO

     3019     9692    3             SAVE.CRECX=CRECX;

   9692  1 010417   200015 236100                    LDQ     CRECX,,AUTO
         1 010420   000033 736000                    QLS     27
         1 010421   200105 552140                    STBQ    SAVE,'40'O,AUTO

     3020     9693    3             SAVE.SEGX=SEGX;

   9693  1 010422   200013 236100                    LDQ     SEGX,,AUTO
         1 010423   200106 676100                    ERQ     ICHNG,,AUTO
         1 010424   000031 376000 xsym               ANQ     B_VECTNIL+25
         1 010425   200106 656100                    ERSQ    ICHNG,,AUTO

     3021     9694    3             SAVE.RPOS=F$DCB.RPOS;

   9694  1 010426   000064 236100                    LDQ     52,,PR0
         1 010427   000027 736000                    QLS     23
         1 010430   200106 676100                    ERQ     ICHNG,,AUTO
         1 010431   400000 376003                    ANQ     -131072,DU
         1 010432   200106 656100                    ERSQ    ICHNG,,AUTO

     3022     9695    3             PTR$=B$PS2$;

   9695  1 010433   000000 236000 xsym               LDQ     B$PS2$
         1 010434   200103 756100                    STQ     PTR$,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:626  
     3023     9696    4             DO WHILE ('1'B);

     3024     9697    4                CALL NXTRECNM ALTRET(NOMORE);

   9697  1 010435   015200 701000 1                  TSX1    NXTRECNM
         1 010436   010467 702000 1                  TSX2    NOMORE

     3025     9698    4                IF I > 0 THEN

   9698  1 010437   200104 235100                    LDA     I,,AUTO
         1 010440   010460 604400 1                  TMOZ    s:9704

     3026     9699    5                   DO;   /* STILL ROOM LEFT */

     3027     9700    5                   PTR$->ID.GX=FM$MISEG.GX;

   9700  1 010441   200014 470500                    LDP0    SEG$,,AUTO
         1 010442   200103 471500                    LDP1    PTR$,,AUTO
         1 010443   000000 236100                    LDQ     0,,PR0
         1 010444   000016 736000                    QLS     14
         1 010445   100001 676100                    ERQ     1,,PR1
         1 010446   777400 376003                    ANQ     -256,DU
         1 010447   100001 656100                    ERSQ    1,,PR1

     3028     9701    5                   PTR$->ID.DA=FM$MISEG.GDA;

   9701  1 010450   200014 470500                    LDP0    SEG$,,AUTO
         1 010451   000001 236100                    LDQ     1,,PR0
         1 010452   100001 676100                    ERQ     1,,PR1
         1 010453   000020 376000 2                  ANQ     16
         1 010454   100001 656100                    ERSQ    1,,PR1

     3029     9702    5                   PTR$=PINCRW(PTR$, 1);

   9702  1 010455   200103 236100                    LDQ     PTR$,,AUTO
         1 010456   000001 036003                    ADLQ    1,DU
         1 010457   200103 756100                    STQ     PTR$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:627  

     3030     9703    5                   END;  /* STILL ROOM LEFT */

     3031     9704    4                I=I-1;

   9704  1 010460   000001 336007                    LCQ     1,DL
         1 010461   200104 056100                    ASQ     I,,AUTO

     3032     9705    4                ID.COUNT=ID.COUNT+1;

   9705  1 010462   200034 470500                    LDP0    IDPTR$,,AUTO
         1 010463   000000 235100                    LDA     0,,PR0
         1 010464   000001 035007                    ADLA    1,DL
         1 010465   000000 755100                    STA     0,,PR0

     3033     9706    4             END;  /* FOREVER */

   9706  1 010466   010435 710000 1                  TRA     s:9697

     3034     9707
     3035     9708    3   NOMORE:   F$DCB.RPOS='0'B;

   9708  1 010467   200007 470500       NOMORE       LDP0    JDCB$,,AUTO
         1 010470   000005 236000 2                  LDQ     5
         1 010471   000064 356100                    ANSQ    52,,PR0

     3036     9709    3             IF F$DCB.BFR.DA(1) ~= SAVE.DA THEN

   9709  1 010472   000116 236100                    LDQ     78,,PR0
         1 010473   200105 676100                    ERQ     SAVE,,AUTO
         1 010474   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 010475   010505 600000 1                  TZE     s:9714

     3037     9710    4                DO;   /* RESTORE DA */

     3038     9711    4                CALL FMD$FLSHBUF(1);

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:628  
   9711  1 010476   000001 630400 2                  EPPR0   1
         1 010477   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 010500   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 010501   000000 011000                    NOP     0

     3039     9712    4                F$DCB.BFR.DA(1)=SAVE.DA;

   9712  1 010502   200007 470500                    LDP0    JDCB$,,AUTO
         1 010503   200105 236100                    LDQ     SAVE,,AUTO
         1 010504   000116 552134                    STBQ    78,'34'O,PR0

     3040     9713    4                END;

     3041     9714    3             CRECX=SAVE.CRECX;

   9714  1 010505   200105 236100                    LDQ     SAVE,,AUTO
         1 010506   000033 772000                    QRL     27
         1 010507   200015 756100                    STQ     CRECX,,AUTO

     3042     9715    3             SEGX=SAVE.SEGX;

   9715  1 010510   200106 236100                    LDQ     ICHNG,,AUTO
         1 010511   000031 376000 xsym               ANQ     B_VECTNIL+25
         1 010512   200013 756100                    STQ     SEGX,,AUTO

     3043     9716    3             F$DCB.CRECX=CRECX;

   9716  1 010513   200015 720100                    LXL0    CRECX,,AUTO
         1 010514   000067 440100                    SXL0    55,,PR0

     3044     9717    3             F$DCB.SEGX=SEGX;

   9717  1 010515   000000 621006                    EAX1    0,QL
         1 010516   000100 441100                    SXL1    64,,PR0

     3045     9718    3             F$DCB.RPOS=SAVE.RPOS;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:629  
   9718  1 010517   200106 236100                    LDQ     ICHNG,,AUTO
         1 010520   000027 772000                    QRL     23
         1 010521   000064 676100                    ERQ     52,,PR0
         1 010522   010000 376007                    ANQ     4096,DL
         1 010523   000064 656100                    ERSQ    52,,PR0

     3046     9719    3             IF I < 0 THEN

   9719  1 010524   200104 235100                    LDA     I,,AUTO
         1 010525   010533 605000 1                  TPL     s:9733

     3047     9720    4                DO;   /* COULDNT RETURN ALL IDS */

     3048     9721    4                B$JIT.ERR=ERRALLIDS;

   9721  1 010526   000031 236000 0                  LDQ     ERRALLIDS
         1 010527   000000 471400 xsym               LDP1    B$JIT$
         1 010530   100012 756100                    STQ     10,,PR1

     3049     9722    4                ALTRETURN;

   9722  1 010531   200102 221300                    LDX1  ! IGNORE_LKEY,,AUTO
         1 010532   000000 702211                    TSX2  ! 0,X1

     3050     9723    4                END;  /* COULDNT RETURN ALL IDS */
     3051     9724        /*E*   ERROR:      FMG-E$ALLIDS-2
     3052     9725               MESSAGE: There are more IDs than could fit in the passed
     3053     9726                        buffer.
     3054     9727               MESSAGE1: The vector passed was not large enough to hold a
     3055     9728                         single ID, if ID was specified, or all IDs if IDALL
     3056     9729                         was specified.
     3057     9730        */
     3058     9731    3             END;  /* ALL IDS */
     3059     9732
     3060     9733    2          IF B$JIT.ERR = '0'B THEN

   9733  1 010533   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:630  
         1 010534   000012 235100                    LDA     10,,PR0
         1 010535   010540 601000 1                  TNZ     s:9735

     3061     9734    2             RETURN;

   9734  1 010536   200102 221300                    LDX1  ! IGNORE_LKEY,,AUTO
         1 010537   000001 702211                    TSX2  ! 1,X1

     3062     9735    2          ELSE IF B$JIT.ERR.CODE = %E$KEYCHNG THEN

   9735  1 010540   000012 236100                    LDQ     10,,PR0
         1 010541   377770 376007                    ANQ     131064,DL
         1 010542   001300 116007                    CMPQ    704,DL
         1 010543   010547 601000 1                  TNZ     s:9741

     3063     9736    3             DO;   /* ZAP ERROR */

     3064     9737    3             B$JIT.ERR='0'B;

   9737  1 010544   000012 450100                    STZ     10,,PR0

     3065     9738    3             RETURN;

   9738  1 010545   200102 221300                    LDX1  ! IGNORE_LKEY,,AUTO
         1 010546   000001 702211                    TSX2  ! 1,X1

     3066     9739    3             END;  /* ZAP ERROR */
     3067     9740    2          ELSE
     3068     9741    2             ALTRETURN;

   9741  1 010547   200102 221300                    LDX1  ! IGNORE_LKEY,,AUTO
         1 010550   000000 702211                    TSX2  ! 0,X1

     3069     9742    2          END GETIDP;
     3070     9743               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:631  
     3071     9744        /*I*     NAME:     GETIDRW
     3072     9745                 PURPOSE:  To return an ID for M$READ and M$WRITE
     3073     9746                 DESCRIPTION:
     3074     9747                      Get the size of the user's id buffer.  If the buffer is
     3075     9748                 large enough, then return an id.
     3076     9749        */
     3077     9750    1   GETIDRW: PROC ALTRET;

   9750  1 010551   200114 741300       GETIDRW      STX1  ! I,,AUTO

     3078     9751    2          DCL I SBIN;
     3079     9752    2          IF ORG = %KEYED# THEN

   9752  1 010552   200022 235100                    LDA     ORG,,AUTO
         1 010553   000002 115007                    CMPA    2,DL
         1 010554   010556 601000 1                  TNZ     s:9756

     3080     9753    2             RETURN;

   9753  1 010555   000001 702211                    TSX2  ! 1,X1

     3081     9754
     3082     9755        /* */
     3083     9756    2          IDPTR$=B$PS3$;

   9756  1 010556   000000 236000 xsym               LDQ     B$PS3$
         1 010557   200034 756100                    STQ     IDPTR$,,AUTO

     3084     9757    2          CALL HFF$DSIZ(B$PS3$, I) ALTRET(ERR);

   9757  1 010560   200115 630500                    EPPR0   I,,AUTO
         1 010561   200167 450500                    STP0    STEMP_FIELDIN+3,,AUTO
         1 010562   000053 236000 2                  LDQ     43
         1 010563   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 010564   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 010565   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 010566   000000 701000 xent               TSX1    HFF$DSIZ
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:632  
         1 010567   010627 702000 1                  TSX2    ERR

     3085     9758    2          CALL HFF$WRITE(B$PS3$) ALTRET(ERR2);

   9758  1 010570   000053 630400 2                  EPPR0   43
         1 010571   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 010572   000000 701000 xent               TSX1    HFF$WRITE
         1 010573   010634 702000 1                  TSX2    ERR2

     3086     9759    2          IF I > 4 THEN

   9759  1 010574   200115 235100                    LDA     I,,AUTO
         1 010575   000004 115007                    CMPA    4,DL
         1 010576   010625 604400 1                  TMOZ    s:9772

     3087     9760    2             IF SEG$ = ADDR(NIL) OR I < 8 THEN

   9760  1 010577   200014 236100                    LDQ     SEG$,,AUTO
         1 010600   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 010601   010604 600000 1                  TZE     s:9762
         1 010602   000010 115007                    CMPA    8,DL
         1 010603   010607 605000 1                  TPL     s:9767

     3088     9761    3                DO;   /* CANT RETURN WHOLE ID */

     3089     9762    3                ID.COUNT=0;

   9762  1 010604   200034 470500                    LDP0    IDPTR$,,AUTO
         1 010605   000000 450100                    STZ     0,,PR0

     3090     9763    3                GOTO ERR;

   9763  1 010606   010627 710000 1                  TRA     ERR

     3091     9764    3                END;  /* CANT RETURN WHOLE ID */
     3092     9765    2             ELSE
     3093     9766    3                DO;   /* SET ID */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:633  

     3094     9767    3                ID.COUNT=1;

   9767  1 010607   000001 235007                    LDA     1,DL
         1 010610   200034 470500                    LDP0    IDPTR$,,AUTO
         1 010611   000000 755100                    STA     0,,PR0

     3095     9768    3                ID.GX=FM$MISEG.GX;

   9768  1 010612   200014 471500                    LDP1    SEG$,,AUTO
         1 010613   100000 236100                    LDQ     0,,PR1
         1 010614   000016 736000                    QLS     14
         1 010615   000001 676100                    ERQ     1,,PR0
         1 010616   777400 376003                    ANQ     -256,DU
         1 010617   000001 656100                    ERSQ    1,,PR0

     3096     9769    3                ID.DA=FM$MISEG.GDA;

   9769  1 010620   200014 471500                    LDP1    SEG$,,AUTO
         1 010621   100001 236100                    LDQ     1,,PR1
         1 010622   000001 676100                    ERQ     1,,PR0
         1 010623   000020 376000 2                  ANQ     16
         1 010624   000001 656100                    ERSQ    1,,PR0

     3097     9770    3                END;  /* SET ID */

     3098     9771
     3099     9772    2          RETURN;

   9772  1 010625   200114 221300                    LDX1  ! I,,AUTO
         1 010626   000001 702211                    TSX2  ! 1,X1

     3100     9773    2   ERR:   B$JIT.ERR=ERRALLIDS;

   9773  1 010627   000031 236000 0     ERR          LDQ     ERRALLIDS
         1 010630   000000 470400 xsym               LDP0    B$JIT$
         1 010631   000012 756100                    STQ     10,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:634  

     3101     9774    2          ALTRETURN;

   9774  1 010632   200114 221300                    LDX1  ! I,,AUTO
         1 010633   000000 702211                    TSX2  ! 0,X1

     3102     9775    2   ERR2:  B$JIT.ERR=ERRIDTRAP;

   9775  1 010634   000030 236000 0     ERR2         LDQ     ERRIDTRAP
         1 010635   000000 470400 xsym               LDP0    B$JIT$
         1 010636   000012 756100                    STQ     10,,PR0

     3103     9776    2          ALTRETURN;

   9776  1 010637   200114 221300                    LDX1  ! I,,AUTO
         1 010640   000000 702211                    TSX2  ! 0,X1

     3104     9777    2          END GETIDRW;
     3105     9778               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:635  
     3106     9779        /*I*     NAME:     GETKEY
     3107     9780                 PURPOSE:  To return a key to the user
     3108     9781                 DESCRIPTION:
     3109     9782                      Call KEYPTR to build a pointer to a key, if needed, for
     3110     9783                 alternate indexes.
     3111     9784
     3112     9785                      If this is an irel file, then we need to call a special
     3113     9786                 subroutine.  If this is an alternate index, then get the
     3114     9787                 size from the ALTKEYS structure.  This is done because we
     3115     9788                 are probably actually pointing to the middle of a record that
     3116     9789                 contains the key text, instead of a key in an index granule.
     3117     9790                 Return the key text, and for keyed files, the key size.
     3118     9791        */
     3119     9792                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:636  
     3120     9793    1   GETKEY: PROC ALTRET;

   9793  1 010641   200110 741300       GETKEY       STX1  ! NUMENTS,,AUTO

     3121     9794    2          DCL SIZE UBIN(18);
     3122     9795    2          DCL CHARS CHAR(SIZE) BASED;
     3123     9796    2          DCL 1 KEY BASED,
     3124     9797    2               2 SIZE CHAR(1) CALIGNED,
     3125     9798    2               2 TEXT CHAR(SIZE) CALIGNED;
     3126     9799        /* */
     3127     9800    2          CALL KEYPTR ALTRET(ERR);

   9800  1 010642   012363 701000 1                  TSX1    KEYPTR
         1 010643   010766 702000 1                  TSX2    ERR

     3128     9801
     3129     9802    2          IF ORG = %IREL# AND F$DCB.CRECX = 0 THEN

   9802  1 010644   200022 235100                    LDA     ORG,,AUTO
         1 010645   000015 115007                    CMPA    13,DL
         1 010646   010657 601000 1                  TNZ     s:9805
         1 010647   200007 470500                    LDP0    JDCB$,,AUTO
         1 010650   000067 720100                    LXL0    55,,PR0
         1 010651   010657 601000 1                  TNZ     s:9805

     3130     9803    2             CALL BUILD_IRKEY(%USEREC);

   9803  1 010652   000001 236000 2                  LDQ     1
         1 010653   200137 756100                    STQ     @TYPE,,AUTO
         1 010654   002465 701000 1                  TSX1    BUILD_IRKEY
         1 010655   000000 011000                    NOP     0
         1 010656   010764 710000 1                  TRA     s:9822

     3131     9804    3          ELSE DO;   /* Normal keys */

     3132     9805    3             IF ORG = %INDEXED# AND F$DCB.CRECX = 0 THEN

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:637  
   9805  1 010657   000006 115007                    CMPA    6,DL
         1 010660   010674 601000 1                  TNZ     s:9807
         1 010661   200007 470500                    LDP0    JDCB$,,AUTO
         1 010662   000067 720100                    LXL0    55,,PR0
         1 010663   010674 601000 1                  TNZ     s:9807

     3133     9806    3                SIZE = ALTKEYS.K.KEYL(INDEX#);

   9806  1 010664   200011 236100                    LDQ     INDEX#,,AUTO
         1 010665   000006 402007                    MPY     6,DL
         1 010666   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 010667   100001 236106                    LDQ     1,QL,PR1
         1 010670   000033 772000                    QRL     27
         1 010671   000000 621006                    EAX1    0,QL
         1 010672   200111 741100                    STX1    SIZE,,AUTO
         1 010673   010711 710000 1                  TRA     s:9811

     3134     9807    3             ELSE IF ORG = %IREL# THEN

   9807  1 010674   000015 115007                    CMPA    13,DL
         1 010675   010703 601000 1                  TNZ     s:9810

     3135     9808    3                SIZE = FM$IRENT.KLB;

   9808  1 010676   200020 470500                    LDP0    KEY$,,AUTO
         1 010677   000000 220100                    LDX0    0,,PR0
         1 010700   377777 360003                    ANX0    131071,DU
         1 010701   200111 740100                    STX0    SIZE,,AUTO
         1 010702   010711 710000 1                  TRA     s:9811

     3136     9809    3             ELSE
     3137     9810    3                SIZE = FM$KEYENT.KLB;

   9810  1 010703   200020 470500                    LDP0    KEY$,,AUTO
         1 010704   000000 236100                    LDQ     0,,PR0
         1 010705   000033 772000                    QRL     27
         1 010706   000377 376007                    ANQ     255,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:638  
         1 010707   000000 620006                    EAX0    0,QL
         1 010710   200111 740100                    STX0    SIZE,,AUTO

     3138     9811    4             DO CASE(ORG);

   9811  1 010711   200022 235100                    LDA     ORG,,AUTO
         1 010712   000006 135007                    SBLA    6,DL
         1 010713   000010 115007                    CMPA    8,DL
         1 010714   010716 602005 1                  TNC     s:9811+5,AL
         1 010715   010746 710000 1                  TRA     s:9817
         1 010716   010726 710000 1                  TRA     s:9813
         1 010717   010746 710000 1                  TRA     s:9817
         1 010720   010746 710000 1                  TRA     s:9817
         1 010721   010746 710000 1                  TRA     s:9817
         1 010722   010746 710000 1                  TRA     s:9817
         1 010723   010746 710000 1                  TRA     s:9817
         1 010724   010746 710000 1                  TRA     s:9817
         1 010725   010735 710000 1                  TRA     s:9815

     3139     9812    4                CASE(%INDEXED#);

     3140     9813    4                   B$PS1$->CHARS = KEY$->KEY.TEXT;

   9813  1 010726   200020 470500                    LDP0    KEY$,,AUTO
         1 010727   200111 220100                    LDX0    SIZE,,AUTO
         1 010730   000000 471400 xsym               LDP1    B$PS1$
         1 010731   040140 100540                    MLR     fill='040'O
         1 010732   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         1 010733   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 010734   010764 710000 1                  TRA     s:9822

     3141     9814    4                CASE(%IREL#);

     3142     9815    4                   B$PS1$->CHARS = FM$IRENT.TXT;

   9815  1 010735   200020 470500                    LDP0    KEY$,,AUTO
         1 010736   000000 220100                    LDX0    0,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:639  
         1 010737   377777 360003                    ANX0    131071,DU
         1 010740   000000 471400 xsym               LDP1    B$PS1$
         1 010741   200111 221100                    LDX1    SIZE,,AUTO
         1 010742   040140 100540                    MLR     fill='040'O
         1 010743   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         1 010744   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         1 010745   010764 710000 1                  TRA     s:9822

     3143     9816    4                CASE(ELSE);

     3144     9817    4                   B$PS1$->KEY.SIZE = BINASC(SIZE);

   9817  1 010746   200111 236100                    LDQ     SIZE,,AUTO
         1 010747   000022 772000                    QRL     18
         1 010750   000033 736000                    QLS     27
         1 010751   000057 276000 2                  ORQ     47
         1 010752   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 010753   000000 470400 xsym               LDP0    B$PS1$
         1 010754   040100 100500                    MLR     fill='040'O
         1 010755   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 010756   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

     3145     9818    4                   B$PS1$->KEY.TEXT = KEY$->KEY.TEXT;

   9818  1 010757   200020 471500                    LDP1    KEY$,,AUTO
         1 010760   200111 220100                    LDX0    SIZE,,AUTO
         1 010761   040140 100540                    MLR     fill='040'O
         1 010762   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 010763   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0

     3146     9819    4                END;

     3147     9820    3             END;

     3148     9821
     3149     9822    2          RETURN;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:640  
   9822  1 010764   200110 221300                    LDX1  ! NUMENTS,,AUTO
         1 010765   000001 702211                    TSX2  ! 1,X1

     3150     9823    2   ERR:   ALTRETURN;

   9823  1 010766   200110 221300       ERR          LDX1  ! NUMENTS,,AUTO
         1 010767   000000 702211                    TSX2  ! 0,X1

     3151     9824    2          END GETKEY;
     3152     9825               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:641  
     3153     9826        /*I*     NAME:     GETFLINK
     3154     9827                 PURPOSE:  To read the flink granule into buffer 3
     3155     9828                 DESCRIPTION:
     3156     9829                      IF there is a flink, then read it in.  If there isn't a flink
     3157     9830                 then make one!
     3158     9831        */
     3159     9832    1   GETFLINK: PROC ALTRET;

   9832  1 010770   200130 741300       GETFLINK     STX1  ! I+1,,AUTO

     3160     9833    2          DCL LCDA SBIN;
     3161     9834        /* */
     3162     9835    2          DA=FM$GRAN.FLINK;

   9835  1 010771   200024 470500                    LDP0    BUF$,,AUTO
         1 010772   000004 235100                    LDA     4,,PR0
         1 010773   200021 755100                    STA     DA,,AUTO

     3163     9836    2          IF DA ~= 0 THEN

   9836  1 010774   011020 600000 1                  TZE     s:9842

     3164     9837    3             DO;   /* GET FLINK */

     3165     9838    3             LCDA=F$DCB.BFR.DA(1);

   9838  1 010775   200007 471500                    LDP1    JDCB$,,AUTO
         1 010776   100116 236100                    LDQ     78,,PR1
         1 010777   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 011000   200131 756100                    STQ     LCDA,,AUTO

     3166     9839    3             CALL FMD$REDBUF(BUF3$, 3, DA,, LCDA) ALTRET(ERR);

   9839  1 011001   200131 633500                    EPPR3   LCDA,,AUTO
         1 011002   200172 453500                    STP3    STEMP_FIELDIN+6,,AUTO
         1 011003   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 011004   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:642  
         1 011005   200021 634500                    EPPR4   DA,,AUTO
         1 011006   200170 454500                    STP4    STEMP_FIELDIN+4,,AUTO
         1 011007   000014 236000 2                  LDQ     12
         1 011010   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 011011   200050 635500                    EPPR5   BUF3$,,AUTO
         1 011012   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 011013   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 011014   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 011015   000000 701000 xent               TSX1    FMD$REDBUF
         1 011016   011024 702000 1                  TSX2    ERR

     3167     9840    3             END;  /* GET FLINK */

   9840  1 011017   011022 710000 1                  TRA     s:9844

     3168     9841    2          ELSE
     3169     9842    2             CALL BLDFLINK ALTRET(ERR);

   9842  1 011020   001406 701000 1                  TSX1    BLDFLINK
         1 011021   011024 702000 1                  TSX2    ERR

     3170     9843
     3171     9844    2          RETURN;

   9844  1 011022   200130 221300                    LDX1  ! I+1,,AUTO
         1 011023   000001 702211                    TSX2  ! 1,X1

     3172     9845    2   ERR:   ALTRETURN;

   9845  1 011024   200130 221300       ERR          LDX1  ! I+1,,AUTO
         1 011025   000000 702211                    TSX2  ! 0,X1

     3173     9846    2          END GETFLINK;
     3174     9847               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:643  
     3175     9848        /*I*     NAME:     GETREC
     3176     9849                 PURPOSE:  To read a record into a user's buffer
     3177     9850                 DESCRIPTION:
     3178     9851                      FAK indicates whether or not this is our first time through
     3179     9852                 the loop.  This is important under certain conditions.
     3180     9853
     3181     9854                      Set the disk address of the segment.  If the number of
     3182     9855                 active bytes in this segment is 0, then we are done.  By convention,
     3183     9856                 there will not be any useful information after this point.  If
     3184     9857                 the granule disk address is file relative 0, then this is probably
     3185     9858                 a 1 granule keyed file.  Read the data granule into the correct
     3186     9859                 buffer.
     3187     9860
     3188     9861                      GX is the offset from the beginning of the granule to the
     3189     9862                 start of the record information.
     3190     9863
     3191     9864                      If this is our first time through, we need to return
     3192     9865                 DVBYTE.
     3193     9866
     3194     9867                      Format the record into the user's buffer.  If there is
     3195     9868                 anything left over, then there wasn't enough room in the buffer
     3196     9869                 to hold all of the user's record.
     3197     9870
     3198     9871                      Get the next segment.  If FAK is set in the segment, then
     3199     9872                 this is the end of a duplicate record.
     3200     9873        */
     3201     9874                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:644  
     3202     9875    1   GETREC: PROC ALTRET;

   9875  1 011026   200102 741300       GETREC       STX1  ! IGNORE_LKEY,,AUTO

     3203     9876    2          DCL GX SBIN;
     3204     9877    2          DCL I SBIN;
     3205     9878    2          DCL GACTB SBIN;
     3206     9879        /* */
     3207     9880    2          FAK=1;

   9880  1 011027   000001 235007                    LDA     1,DL
         1 011030   200043 755100                    STA     FAK,,AUTO

     3208     9881    3   LOOP:  DO WHILE ('1'B);

   9881  1 011031                       LOOP         null
     3209     9882    3             DA=FM$MISEG.GDA;

   9882  1 011031   200014 470500                    LDP0    SEG$,,AUTO
         1 011032   000001 236100                    LDQ     1,,PR0
         1 011033   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 011034   200021 756100                    STQ     DA,,AUTO

     3210     9883    3             IF FM$MISEG.GACTB = 0 THEN

   9883  1 011035   000000 236100                    LDQ     0,,PR0
         1 011036   007777 316007                    CANQ    4095,DL
         1 011037   011172 600000 1                  TZE     s:9926

     3211     9884    3                EXIT LOOP;
     3212     9885
     3213     9886    3             IF DA = FM_FRZERO THEN

   9886  1 011040   200021 236100                    LDQ     DA,,AUTO
         1 011041   000000 116000 xsym               CMPQ    FM_FRZERO
         1 011042   011051 601000 1                  TNZ     s:9893

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:645  
     3214     9887    4                DO;   /* 1 GRAN FILE */

     3215     9888    4                F$DCB.LVL=0;

   9888  1 011043   200007 471500                    LDP1    JDCB$,,AUTO
         1 011044   000035 236000 2                  LDQ     29
         1 011045   100067 356100                    ANSQ    55,,PR1

     3216     9889    4                BUFNUM=1;

   9889  1 011046   000001 235007                    LDA     1,DL
         1 011047   200044 755100                    STA     BUFNUM,,AUTO

     3217     9890    4                END;  /* 1 GRAN FILE */

   9890  1 011050   011055 710000 1                  TRA     s:9897

     3218     9891    3             ELSE
     3219     9892    4                DO;   /* MULTI-GRAN FILE */

     3220     9893    4                F$DCB.LVL=7;

   9893  1 011051   200007 471500                    LDP1    JDCB$,,AUTO
         1 011052   070000 236003                    LDQ     28672,DU
         1 011053   100067 256100                    ORSQ    55,,PR1

     3221     9894    4                BUFNUM=0;

   9894  1 011054   200044 450100                    STZ     BUFNUM,,AUTO

     3222     9895    4                END;  /* MULTI-GRAN FILE */

     3223     9896
     3224     9897    3             DBUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM));

   9897  1 011055   200044 720100                    LXL0    BUFNUM,,AUTO
         1 011056   100115 236110                    LDQ     77,X0,PR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:646  
         1 011057   000033 772000                    QRL     27
         1 011060   000037 376007                    ANQ     31,DL
         1 011061   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 011062   200040 756100                    STQ     DBUF$,,AUTO

     3225     9898    3             IF DBUF$ = ADDR(NIL) OR

   9898  1 011063   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 011064   011071 600000 1                  TZE     s:9900
         1 011065   100115 236110                    LDQ     77,X0,PR1
         1 011066   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 011067   200021 116100                    CMPQ    DA,,AUTO
         1 011070   011107 600000 1                  TZE     s:9902

     3226     9899    3                F$DCB.BFR.DA(BUFNUM) ~= DA THEN
     3227     9900    3                CALL FMD$REDBUF(DBUF$, BUFNUM, DA,, 0) ALTRET(DATAERR);

   9900  1 011071   000000 236000 2                  LDQ     0
         1 011072   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 011073   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 011074   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 011075   200021 633500                    EPPR3   DA,,AUTO
         1 011076   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 011077   200044 634500                    EPPR4   BUFNUM,,AUTO
         1 011100   200167 454500                    STP4    STEMP_FIELDIN+3,,AUTO
         1 011101   200040 635500                    EPPR5   DBUF$,,AUTO
         1 011102   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 011103   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 011104   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 011105   000000 701000 xent               TSX1    FMD$REDBUF
         1 011106   011211 702000 1                  TSX2    DATAERR

     3228     9901
     3229     9902    3             GX=FM$MISEG.GX;

   9902  1 011107   200014 470500                    LDP0    SEG$,,AUTO
         1 011110   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:647  
         1 011111   000014 772000                    QRL     12
         1 011112   001777 376007                    ANQ     1023,DL
         1 011113   200103 756100                    STQ     GX,,AUTO

     3230     9903
     3231     9904    3             G$=PINCRW(DBUF$, GX);

   9904  1 011114   000022 736000                    QLS     18
         1 011115   200040 036100                    ADLQ    DBUF$,,AUTO
         1 011116   200026 756100                    STQ     G$,,AUTO

     3232     9905    3             GACTB=FM$MISEG.GACTB;

   9905  1 011117   000000 236100                    LDQ     0,,PR0
         1 011120   007777 376007                    ANQ     4095,DL
         1 011121   200105 756100                    STQ     GACTB,,AUTO

     3233     9906    3             IF FAK = 1 THEN

   9906  1 011122   200043 235100                    LDA     FAK,,AUTO
         1 011123   000001 115007                    CMPA    1,DL
         1 011124   011133 601000 1                  TNZ     s:9909

     3234     9907    3                F$DCB.DVBYTE=FM$MISEG.CTL;

   9907  1 011125   200007 471500                    LDP1    JDCB$,,AUTO
         1 011126   000001 236100                    LDQ     1,,PR0
         1 011127   000001 736000                    QLS     1
         1 011130   100003 676100                    ERQ     3,,PR1
         1 011131   776000 376003                    ANQ     -1024,DU
         1 011132   100003 656100                    ERSQ    3,,PR1

     3235     9908
     3236     9909    3             CALL FMD$RECTRAN(G$, GACTB, BUFNUM, 0, FAK, FPT$READ_V.SEED) ALTRET(ERR);

   9909  1 011133   000000 236000 xsym               LDQ     B$PS0$
         1 011134   000002 036003                    ADLQ    2,DU
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:648  
         1 011135   200173 756100                    STQ     STEMP_FIELDIN+7,,AUTO
         1 011136   200043 630500                    EPPR0   FAK,,AUTO
         1 011137   200172 450500                    STP0    STEMP_FIELDIN+6,,AUTO
         1 011140   000000 236000 2                  LDQ     0
         1 011141   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 011142   200044 631500                    EPPR1   BUFNUM,,AUTO
         1 011143   200170 451500                    STP1    STEMP_FIELDIN+4,,AUTO
         1 011144   200105 633500                    EPPR3   GACTB,,AUTO
         1 011145   200167 453500                    STP3    STEMP_FIELDIN+3,,AUTO
         1 011146   200026 634500                    EPPR4   G$,,AUTO
         1 011147   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 011150   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 011151   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 011152   000000 701000 xent               TSX1    FMD$RECTRAN
         1 011153   011213 702000 1                  TSX2    ERR

     3237     9910    3             IF GACTB > 0 THEN

   9910  1 011154   200105 235100                    LDA     GACTB,,AUTO
         1 011155   011174 605400 1                  TPNZ    LOSTDATA

     3238     9911    3                GOTO LOSTDATA;
     3239     9912
     3240     9913    3             FAK=0;

   9913  1 011156   200043 450100                    STZ     FAK,,AUTO

     3241     9914    3             CALL NXTSEG ALTRET(ERR);

   9914  1 011157   015351 701000 1                  TSX1    NXTSEG
         1 011160   011213 702000 1                  TSX2    ERR

     3242     9915    3             IF SEGX > 0 THEN

   9915  1 011161   200013 235100                    LDA     SEGX,,AUTO
         1 011162   011172 604400 1                  TMOZ    s:9926

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:649  
     3243     9916    3                IF FM$MISEG.FAK THEN

   9916  1 011163   200014 470500                    LDP0    SEG$,,AUTO
         1 011164   000000 234100                    SZN     0,,PR0
         1 011165   011031 605000 1                  TPL     LOOP

     3244     9917    4                   DO;   /* DUP ALTERNATE */

     3245     9918    4                   F$DCB.RPOS='1'B;

   9918  1 011166   200007 471500                    LDP1    JDCB$,,AUTO
         1 011167   010000 236007                    LDQ     4096,DL
         1 011170   100064 256100                    ORSQ    52,,PR1

     3246     9919    4                   EXIT LOOP;

   9919  1 011171   011172 710000 1                  TRA     s:9926

     3247     9920    4                   END;  /* DUP ALTERNATE */
     3248     9921    3                ELSE;
     3249     9922    3             ELSE
     3250     9923    3                EXIT LOOP;
     3251     9924    3          END;  /* WHILE */

     3252     9925
     3253     9926    2          RETURN;

   9926  1 011172   200102 221300                    LDX1  ! IGNORE_LKEY,,AUTO
         1 011173   000001 702211                    TSX2  ! 1,X1

   9919  1 011174                       LOSTDATA     null
     3254     9927    2   LOSTDATA: ;
     3255     9928    2          B$JIT.ERR=ERRLD;

   9928  1 011174   000006 236000 0                  LDQ     ERRLD
         1 011175   000000 470400 xsym               LDP0    B$JIT$
         1 011176   000012 756100                    STQ     10,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:650  

     3256     9929    2          F$DCB.EOP=FM_EOP(FPTCODE);

   9929  1 011177   200003 471500                    LDP1    @PSEG$,,AUTO
         1 011200   100000 720100                    LXL0    0,,PR1
         1 011201   200007 473500                    LDP3    JDCB$,,AUTO
         1 011202   000000 236010 xsym               LDQ     FM_EOP,X0
         1 011203   000033 736000                    QLS     27
         1 011204   300064 676100                    ERQ     52,,PR3
         1 011205   003000 376003                    ANQ     1536,DU
         1 011206   300064 656100                    ERSQ    52,,PR3

     3257     9930    2          ALTRETURN;

   9930  1 011207   200102 221300                    LDX1  ! IGNORE_LKEY,,AUTO
         1 011210   000000 702211                    TSX2  ! 0,X1

     3258     9931    2   DATAERR: CALL DATAERROR;

   9931  1 011211   005205 701000 1     DATAERR      TSX1    DATAERROR
         1 011212   000000 011000                    NOP     0

     3259     9932    2   ERR:   ALTRETURN;

   9932  1 011213   200102 221300       ERR          LDX1  ! IGNORE_LKEY,,AUTO
         1 011214   000000 702211                    TSX2  ! 0,X1

     3260     9933    2          END GETREC;
     3261     9934               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:651  
     3262     9935        /*I*     NAME:     GETSPACE
     3263     9936                 PURPOSE:  To make room for a key or segments
     3264     9937                 DESCRIPTION:
     3265     9938                      If the total amount of space needed is too large, set it
     3266     9939                 to something more reasonable.
     3267     9940
     3268     9941                      CALC_INSRT calculates the insertion point for a key or
     3269     9942                 segment.
     3270     9943
     3271     9944                      Loop until we have enough space.  CALC_SPACE determines
     3272     9945                 whether or not there is enough room in buffer 1.  If there
     3273     9946                 isn't enough room, and we are trying to insert at the
     3274     9947                 beginning of a granule, then try inserting at the end of
     3275     9948                 the previous granule.  Otherwise, get the flink, we may
     3276     9949                 try shuffling some stuff into the flink later.  Now, check
     3277     9950                 to see if there is enough room in the flink.  If there still
     3278     9951                 isn't, then build a new flink.
     3279     9952
     3280     9953                      If we are inserting into the middle of a granule, then
     3281     9954                 call MAKE_SPACE to move stuff around, then check again.
     3282     9955
     3283     9956                      If we are inserting at the end of a granule, then try
     3284     9957                 to keep the key together.  See how much we have to move to
     3285     9958                 keep the key together.  If the total size is enough to
     3286     9959                 fit into a granule, then move the entire key, and recalcuate
     3287     9960                 the insertion point.  If we can't keep the whole key together,
     3288     9961                 then get the space we need from the beginning of the next
     3289     9962                 granule.
     3290     9963
     3291     9964                      SLIDE actually moves the stuff in the granule to make
     3292     9965                 room for the key or segments.
     3293     9966        */
     3294     9967                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:652  
     3295     9968    1   GETSPACE: PROC ALTRET;

   9968  1 011215   200126 741300       GETSPACE     STX1  ! LAST_RESULT,,AUTO

     3296     9969    2          DCL TBUF$ PTR;
     3297     9970        /* */
     3298     9971    2          IF TOTSIZE > 1024-SIZEW(FM$GRAN)-SIZEW(FM$KEYTBL) THEN

   9971  1 011216   200045 235100                    LDA     TOTSIZE,,AUTO
         1 011217   001666 115007                    CMPA    950,DL
         1 011220   011231 602000 1                  TNC     s:9978

     3299     9972    3             DO;   /* TOO BIG */

     3300     9973    3             SEGCNT=1024-SIZEW(FM$GRAN)-SIZEW(FM$KEYTBL)-KEYWORDS;

   9973  1 011221   001665 236007                    LDQ     949,DL
         1 011222   200046 136100                    SBLQ    KEYWORDS,,AUTO
         1 011223   200035 756100                    STQ     SEGCNT,,AUTO

     3301     9974    3             SEGCNT=(SEGCNT/4)*4;

   9974  1 011224   000004 506007                    DIV     4,DL
         1 011225   000002 736000                    QLS     2
         1 011226   200035 756100                    STQ     SEGCNT,,AUTO

     3302     9975    3             TOTSIZE=KEYWORDS+SEGCNT;

   9975  1 011227   200046 036100                    ADLQ    KEYWORDS,,AUTO
         1 011230   200045 756100                    STQ     TOTSIZE,,AUTO

     3303     9976    3             END;  /* TOO BIG */

     3304     9977
     3305     9978    2          IF F$DCB.GTYP = FMGTFILE THEN

   9978  1 011231   200007 470500                    LDP0    JDCB$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:653  
         1 011232   000064 236100                    LDQ     52,,PR0
         1 011233   034000 376003                    ANQ     14336,DU
         1 011234   030000 116003                    CMPQ    12288,DU
         1 011235   011242 601000 1                  TNZ     s:9981

     3306     9979    2             ORG=F$DCB.ORG;

   9979  1 011236   000032 236100                    LDQ     26,,PR0
         1 011237   000033 772000                    QRL     27
         1 011240   200022 756100                    STQ     ORG,,AUTO
         1 011241   011243 710000 1                  TRA     s:9983

     3307     9980    2          ELSE
     3308     9981    2             ORG=0;

   9981  1 011242   200022 450100                    STZ     ORG,,AUTO

     3309     9982
     3310     9983    2          F$DCB.LVL=0;

   9983  1 011243   000035 236000 2                  LDQ     29
         1 011244   000067 356100                    ANSQ    55,,PR0

     3311     9984    2          BUF3$=ADDR(NIL);

   9984  1 011245   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 011246   200050 756100                    STQ     BUF3$,,AUTO

     3312     9985
     3313     9986    2          CALL CALC_INSRT ALTRET(ERR);

   9986  1 011247   003063 701000 1                  TSX1    CALC_INSRT
         1 011250   011442 702000 1                  TSX2    ERR

     3314     9987    3   LOOP:  DO WHILE ('1'B);

   9987  1 011251                       LOOP         null
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:654  
     3315     9988    3   AGAIN:    CALL CALC_SPACE;

   9988  1 011251   003344 701000 1     AGAIN        TSX1    CALC_SPACE
         1 011252   000000 011000                    NOP     0

     3316     9989    3             IF ENUF = %YESS THEN

   9989  1 011253   200051 235100                    LDA     ENUF,,AUTO
         1 011254   000001 115007                    CMPA    1,DL
         1 011255   011436 600000 1                  TZE     s:10047

     3317     9990    3                EXIT LOOP;
     3318     9991
     3319     9992    3             IF INSRT = %BEGIN AND FM$GRAN.BLINK ~= 0 THEN

   9992  1 011256   200052 236100                    LDQ     INSRT,,AUTO
         1 011257   011275 601000 1                  TNZ     s:10000
         1 011260   200024 470500                    LDP0    BUF$,,AUTO
         1 011261   000003 235100                    LDA     3,,PR0
         1 011262   011275 600000 1                  TZE     s:10000

     3320     9993    4                DO;   /* GET BLINK */

     3321     9994    4                CALL GETBLINK ALTRET(ERR);

   9994  1 011263   010205 701000 1                  TSX1    GETBLINK
         1 011264   011442 702000 1                  TSX2    ERR

     3322     9995    4                INSRT=%END;

   9995  1 011265   000002 235007                    LDA     2,DL
         1 011266   200052 755100                    STA     INSRT,,AUTO

     3323     9996    4                SEG$=PINCRW(BUF$, FM$GRAN.NAVX);

   9996  1 011267   200024 470500                    LDP0    BUF$,,AUTO
         1 011270   000001 220100                    LDX0    1,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:655  
         1 011271   000000 636010                    EAQ     0,X0
         1 011272   200024 036100                    ADLQ    BUF$,,AUTO
         1 011273   200014 756100                    STQ     SEG$,,AUTO

     3324     9997    4                GOTO AGAIN;

   9997  1 011274   011251 710000 1                  TRA     LOOP

     3325     9998    4                END;  /* GET BLINK */
     3326     9999    3             ELSE
     3327    10000    3                CALL GETFLINK ALTRET(ERR);

  10000  1 011275   010770 701000 1                  TSX1    GETFLINK
         1 011276   011442 702000 1                  TSX2    ERR

     3328    10001
     3329    10002    3             TBUF$=BUF$;

  10002  1 011277   200024 236100                    LDQ     BUF$,,AUTO
         1 011300   200127 756100                    STQ     TBUF$,,AUTO

     3330    10003    3             BUF$=BUF3$;

  10003  1 011301   200050 236100                    LDQ     BUF3$,,AUTO
         1 011302   200024 756100                    STQ     BUF$,,AUTO

     3331    10004    3             KEYCNT=FM$GRAN.KEYCNT;

  10004  1 011303   200024 470500                    LDP0    BUF$,,AUTO
         1 011304   000002 236100                    LDQ     2,,PR0
         1 011305   000777 376007                    ANQ     511,DL
         1 011306   200017 756100                    STQ     KEYCNT,,AUTO

     3332    10005    3             CALL CALC_SPACE; /* Sets SPARE for BUF3 too */

  10005  1 011307   003344 701000 1                  TSX1    CALC_SPACE
         1 011310   000000 011000                    NOP     0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:656  

     3333    10006    3             BUF$=TBUF$;

  10006  1 011311   200127 236100                    LDQ     TBUF$,,AUTO
         1 011312   200024 756100                    STQ     BUF$,,AUTO

     3334    10007    3             KEYCNT=FM$GRAN.KEYCNT;

  10007  1 011313   200024 470500                    LDP0    BUF$,,AUTO
         1 011314   000002 236100                    LDQ     2,,PR0
         1 011315   000777 376007                    ANQ     511,DL
         1 011316   200017 756100                    STQ     KEYCNT,,AUTO

     3335    10008    3             IF ENUF = %NOO THEN

  10008  1 011317   200051 235100                    LDA     ENUF,,AUTO
         1 011320   011324 601000 1                  TNZ     s:10014

     3336    10009    4                DO;

     3337    10010    4                CALL BLDFLINK ALTRET(ERR);

  10010  1 011321   001406 701000 1                  TSX1    BLDFLINK
         1 011322   011442 702000 1                  TSX2    ERR

     3338    10011    4                SPARE=0;

  10011  1 011323   200053 450100                    STZ     SPARE,,AUTO

     3339    10012    4                END;

     3340    10013
     3341    10014    3             IF INSRT ~= %END THEN

  10014  1 011324   200052 235100                    LDA     INSRT,,AUTO
         1 011325   000002 115007                    CMPA    2,DL
         1 011326   011334 600000 1                  TZE     s:10021
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:657  

     3342    10015    4                DO;   /* MOVE KEYS */

     3343    10016    4                CALL MAKE_SPACE ALTRET(ERR);

  10016  1 011327   013153 701000 1                  TSX1    MAKE_SPACE
         1 011330   011442 702000 1                  TSX2    ERR

     3344    10017    4                CALL CALC_INSRT ALTRET(ERR);

  10017  1 011331   003063 701000 1                  TSX1    CALC_INSRT
         1 011332   011442 702000 1                  TSX2    ERR

     3345    10018    4                END;  /* MOVE KEYS */

  10018  1 011333   011251 710000 1                  TRA     LOOP

     3346    10019    3             ELSE
     3347    10020    4                DO;   /* ENUF AT END */

     3348    10021    4                IF CRECX < BOUND THEN

  10021  1 011334   200015 236100                    LDQ     CRECX,,AUTO
         1 011335   011352 604000 1                  TMI     s:10024
         1 011336   200016 116100                    CMPQ    BOUND,,AUTO
         1 011337   011352 605000 1                  TPL     s:10024

     3349    10022    4                   MOVECNT=FM$GRAN.NAVX-FM$KEYTBL(CRECX);

  10022  1 011340   200025 470500                    LDP0    KTPTR$,,AUTO
         1 011341   000100 101506                    MRL     fill='000'O
         1 011342   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 011343   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 011344   200024 471500                    LDP1    BUF$,,AUTO
         1 011345   100001 236100                    LDQ     1,,PR1
         1 011346   000022 772000                    QRL     18
         1 011347   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:658  
         1 011350   200055 756100                    STQ     MOVECNT,,AUTO
         1 011351   011364 710000 1                  TRA     s:10025

     3350    10023    4                ELSE
     3351    10024    4                   MOVECNT=FM$GRAN.NAVX-FM$KEYTBL(CRECX)-512;

  10024  1 011352   200025 470500                    LDP0    KTPTR$,,AUTO
         1 011353   000100 101506                    MRL     fill='000'O
         1 011354   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 011355   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 011356   200024 471500                    LDP1    BUF$,,AUTO
         1 011357   100001 236100                    LDQ     1,,PR1
         1 011360   000022 772000                    QRL     18
         1 011361   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 011362   001000 136007                    SBLQ    512,DL
         1 011363   200055 756100                    STQ     MOVECNT,,AUTO

     3352    10025    4                IF MOVECNT+TOTSIZE < 1024-SIZEW(FM$GRAN)-SIZEW(FM$KEYTBL)-SPARE AND

  10025  1 011364   200045 036100                    ADLQ    TOTSIZE,,AUTO
         1 011365   001665 235007                    LDA     949,DL
         1 011366   200053 135100                    SBLA    SPARE,,AUTO
         1 011367   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 011370   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 011371   011427 605000 1                  TPL     s:10040
         1 011372   200047 236100                    LDQ     ADDFLG,,AUTO
         1 011373   000001 116007                    CMPQ    1,DL
         1 011374   011427 601000 1                  TNZ     s:10040
         1 011375   200015 235100                    LDA     CRECX,,AUTO
         1 011376   011427 600000 1                  TZE     s:10040

     3353    10026    4                   ADDFLG = %SEG AND CRECX > 0 THEN
     3354    10027    5                   DO;   /* KEEP KEY TOGETHER */

     3355    10028    5                   IF MOVECNT+TOTSIZE > BUF3$->FM$GRAN.AVAIL THEN

  10028  1 011377   200055 236100                    LDQ     MOVECNT,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:659  
         1 011400   200045 036100                    ADLQ    TOTSIZE,,AUTO
         1 011401   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 011402   200050 473500                    LDP3    BUF3$,,AUTO
         1 011403   300001 236100                    LDQ     1,,PR3
         1 011404   001777 376007                    ANQ     1023,DL
         1 011405   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 011406   011411 605000 1                  TPL     s:10031

     3356    10029    5                      CALL BLDFLINK ALTRET(ERR);

  10029  1 011407   001406 701000 1                  TSX1    BLDFLINK
         1 011410   011442 702000 1                  TSX2    ERR

     3357    10030
     3358    10031    5                   INDX=KEYCNT;

  10031  1 011411   200017 235100                    LDA     KEYCNT,,AUTO
         1 011412   200054 755100                    STA     INDX,,AUTO

     3359    10032    5                   CALL MOVETOB3 ALTRET(ERR);

  10032  1 011413   013664 701000 1                  TSX1    MOVETOB3
         1 011414   011442 702000 1                  TSX2    ERR

     3360    10033    5                   CALL SWITCH1_3;

  10033  1 011415   024335 701000 1                  TSX1    SWITCH1_3
         1 011416   000000 011000                    NOP     0

     3361    10034    5                   CRECX=1;

  10034  1 011417   000001 235007                    LDA     1,DL
         1 011420   200015 755100                    STA     CRECX,,AUTO

     3362    10035    5                   F$DCB.CRECX=1;

  10035  1 011421   000001 220003                    LDX0    1,DU
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:660  
         1 011422   200007 470500                    LDP0    JDCB$,,AUTO
         1 011423   000067 440100                    SXL0    55,,PR0

     3363    10036    5                   CALL CALC_INSRT ALTRET(ERR);

  10036  1 011424   003063 701000 1                  TSX1    CALC_INSRT
         1 011425   011442 702000 1                  TSX2    ERR

     3364    10037    5                   END;  /* KEEP KEY TOGETHER */

  10037  1 011426   011251 710000 1                  TRA     LOOP

     3365    10038    4                ELSE
     3366    10039    5                   DO;   /* BEGINNING OF NEXT GRAN */

     3367    10040    5                   CALL SWITCH1_3;

  10040  1 011427   024335 701000 1                  TSX1    SWITCH1_3
         1 011430   000000 011000                    NOP     0

     3368    10041    5                   INSRT=%BEGIN;

  10041  1 011431   200052 450100                    STZ     INSRT,,AUTO

     3369    10042    5                   SEG$=PINCRW(BUF$, SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL));

  10042  1 011432   200024 236100                    LDQ     BUF$,,AUTO
         1 011433   000113 036003                    ADLQ    75,DU
         1 011434   200014 756100                    STQ     SEG$,,AUTO

     3370    10043    5                   END;  /* BEGINNING OF NEXT GRAN */

     3371    10044    4                END;  /* ENUF AT END */

     3372    10045    3          END;  /* WHILE */

  10045  1 011435   011251 710000 1                  TRA     LOOP
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:661  

     3373    10046
     3374    10047    2          CALL SLIDE ALTRET(ERR);

  10047  1 011436   023310 701000 1                  TSX1    SLIDE
         1 011437   011442 702000 1                  TSX2    ERR

     3375    10048    2          RETURN;

  10048  1 011440   200126 221300                    LDX1  ! LAST_RESULT,,AUTO
         1 011441   000001 702211                    TSX2  ! 1,X1

     3376    10049    2   ERR:   CALL FMD$FLSHBUF(1);

  10049  1 011442   000001 630400 2     ERR          EPPR0   1
         1 011443   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 011444   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 011445   000000 011000                    NOP     0

     3377    10050    2          CALL FMD$FLSHBUF(3);

  10050  1 011446   000014 630400 2                  EPPR0   12
         1 011447   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 011450   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 011451   000000 011000                    NOP     0

     3378    10051    2          CALL FMD$FLSHBUF(4);

  10051  1 011452   000012 630400 2                  EPPR0   10
         1 011453   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 011454   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 011455   000000 011000                    NOP     0

     3379    10052    2          ALTRETURN;

  10052  1 011456   200126 221300                    LDX1  ! LAST_RESULT,,AUTO
         1 011457   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:662  

     3380    10053    2          END GETSPACE;
     3381    10054               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:663  
     3382    10055        /*I*     NAME:     INIT_AKEY
     3383    10056                 PURPOSE:  To reinitialize an indexed file with alternate keys.
     3384    10057                 DESCRIPTION:
     3385    10058                      If all of the records from an alternate keyed file have
     3386    10059                 been deleted, then we reset everything except for granule 0,
     3387    10060                 back to NGAVAL.  Then we have to go back and make sure that
     3388    10061                 all of the alternate indexes have an FDA also.
     3389    10062
     3390    10063                      Entry 0 in the structure is the same as the primary key.
     3391    10064                 First, loop through, reseting everything in the structure
     3392    10065                 back to 0.  Then, get a granule, initialize it, and point to
     3393    10066                 it.
     3394    10067        */
     3395    10068                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:664  
     3396    10069    1   INIT_AKEY: PROC ALTRET;

  10069  1 011460   200104 741300       INIT_AKEY    STX1  ! I,,AUTO

     3397    10070    2          DCL I SBIN;
     3398    10071        /* */
     3399    10072    2          ALTKEYS.K.FDA(0)=FM_FRZERO;

  10072  1 011461   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 011462   000000 236000 xsym               LDQ     FM_FRZERO
         1 011463   000001 552134                    STBQ    1,'34'O,PR0

     3400    10073    2          ALTKEYS.K.LDA(0)=FM$CFU.LDA;

  10073  1 011464   200010 471500                    LDP1    CFU$,,AUTO
         1 011465   100006 235100                    LDA     6,,PR1
         1 011466   100007 236100                    LDQ     7,,PR1
         1 011467   000033 773000                    LRL     27
         1 011470   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 011471   000011 736000                    QLS     9
         1 011472   000002 552170                    STBQ    2,'70'O,PR0

     3401    10074    2          ALTKEYS.K.TDA(0)=F$DCB.TDA;

  10074  1 011473   200007 473500                    LDP3    JDCB$,,AUTO
         1 011474   000100 100500                    MLR     fill='000'O
         1 011475   300070 200003                    ADSC9   56,,PR3                  cn=1,n=3
         1 011476   000002 600003                    ADSC9   2,,PR0                   cn=3,n=3

     3402    10075    2          ALTKEYS.K.TDALVL(0)=F$DCB.TDALVL;

  10075  1 011477   300067 236100                    LDQ     55,,PR3
         1 011500   700000 376003                    ANQ     -32768,DU
         1 011501   000006 772000                    QRL     6
         1 011502   000004 552140                    STBQ    4,'40'O,PR0

     3403    10076    2          ALTKEYS.K.CDA(0)=FM_FRZERO;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:665  

  10076  1 011503   000000 235000 xsym               LDA     FM_FRZERO
         1 011504   000006 755100                    STA     6,,PR0

     3404    10077
     3405    10078    3          DO I=1 TO ALTKEYS.NUMENTS-1;

  10078  1 011505   000001 236007                    LDQ     1,DL
         1 011506   200105 756100                    STQ     I,,AUTO
         1 011507   011536 710000 1                  TRA     s:10087+1

     3406    10079    3             ALTKEYS.K.RPOS(I)='0'B;

  10079  1 011510   200105 236100                    LDQ     I,,AUTO
         1 011511   000006 402007                    MPY     6,DL
         1 011512   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 011513   000000 620006                    EAX0    0,QL
         1 011514   000060 236000 2                  LDQ     48
         1 011515   000004 356110                    ANSQ    4,X0,PR0

     3407    10080    3             ALTKEYS.K.CRECX(I)=0;

  10080  1 011516   000000 221003                    LDX1    0,DU
         1 011517   000005 741110                    STX1    5,X0,PR0

     3408    10081    3             ALTKEYS.K.SEGX(I)=0;

  10081  1 011520   000005 441110                    SXL1    5,X0,PR0

     3409    10082    3             ALTKEYS.K.FDA(I)=0;

  10082  1 011521   777000 236003                    LDQ     -512,DU
         1 011522   000001 356110                    ANSQ    1,X0,PR0

     3410    10083    3             ALTKEYS.K.LDA(I)=0;

  10083  1 011523   000777 236007                    LDQ     511,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:666  
         1 011524   000002 356110                    ANSQ    2,X0,PR0

     3411    10084    3             ALTKEYS.K.TDA(I)=0;

  10084  1 011525   000000 635010                    EAA     0,X0
         1 011526   000020 731000                    ARS     16
         1 011527   000105 101400                    MRL     fill='000'O
         1 011530   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         1 011531   000002 600003                    ADSC9   2,A,PR0                  cn=3,n=3

     3412    10085    3             ALTKEYS.K.TDALVL(I)=0;

  10085  1 011532   000032 236000 xsym               LDQ     B_VECTNIL+26
         1 011533   000004 356110                    ANSQ    4,X0,PR0

     3413    10086    3             ALTKEYS.K.CDA(I)=0;

  10086  1 011534   000006 450110                    STZ     6,X0,PR0

     3414    10087    3          END;

  10087  1 011535   200105 054100                    AOS     I,,AUTO
         1 011536   000000 236100                    LDQ     0,,PR0
         1 011537   000022 772000                    QRL     18
         1 011540   000377 376007                    ANQ     255,DL
         1 011541   200105 116100                    CMPQ    I,,AUTO
         1 011542   011510 605400 1                  TPNZ    s:10079

     3415    10088
     3416    10089    3          DO I=1 TO ALTKEYS.NUMENTS-1;

  10089  1 011543   000001 235007                    LDA     1,DL
         1 011544   200105 755100                    STA     I,,AUTO
         1 011545   011570 710000 1                  TRA     s:10094+1

     3417    10090    3             CALL INIT_GRAN ALTRET(ERR);

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:667  
  10090  1 011546   011615 701000 1                  TSX1    INIT_GRAN
         1 011547   011577 702000 1                  TSX2    ERR

     3418    10091    3             ALTKEYS.K.FDA(I)=DA;

  10091  1 011550   200105 236100                    LDQ     I,,AUTO
         1 011551   000006 402007                    MPY     6,DL
         1 011552   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 011553   000000 620006                    EAX0    0,QL
         1 011554   200021 236100                    LDQ     DA,,AUTO
         1 011555   000001 676110                    ERQ     1,X0,PR0
         1 011556   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 011557   000001 656110                    ERSQ    1,X0,PR0

     3419    10092    3             ALTKEYS.K.LDA(I)=DA;

  10092  1 011560   200021 236100                    LDQ     DA,,AUTO
         1 011561   000011 736000                    QLS     9
         1 011562   000002 676110                    ERQ     2,X0,PR0
         1 011563   000013 376000 2                  ANQ     11
         1 011564   000002 656110                    ERSQ    2,X0,PR0

     3420    10093    3             ALTKEYS.K.CDA(I)=DA;

  10093  1 011565   200021 235100                    LDA     DA,,AUTO
         1 011566   000006 755110                    STA     6,X0,PR0

     3421    10094    3          END;  /* DO I */

  10094  1 011567   200105 054100                    AOS     I,,AUTO
         1 011570   000000 236100                    LDQ     0,,PR0
         1 011571   000022 772000                    QRL     18
         1 011572   000377 376007                    ANQ     255,DL
         1 011573   200105 116100                    CMPQ    I,,AUTO
         1 011574   011546 605400 1                  TPNZ    s:10090

     3422    10095
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:668  
     3423    10096    2          RETURN;

  10096  1 011575   200104 221300                    LDX1  ! I,,AUTO
         1 011576   000001 702211                    TSX2  ! 1,X1

     3424    10097    2   ERR:   IF B$JIT.ERR.CODE = %E$PSGRANS OR

  10097  1 011577   000000 470400 xsym  ERR          LDP0    B$JIT$
         1 011600   000012 236100                    LDQ     10,,PR0
         1 011601   377770 376007                    ANQ     131064,DL
         1 011602   002140 116007                    CMPQ    1120,DL
         1 011603   011610 600000 1                  TZE     s:10101
         1 011604   002150 116007                    CMPQ    1128,DL
         1 011605   011610 600000 1                  TZE     s:10101
         1 011606   002160 116007                    CMPQ    1136,DL
         1 011607   011613 601000 1                  TNZ     s:10104

     3425    10098    2             B$JIT.ERR.CODE = %E$USGRANS OR
     3426    10099    2             B$JIT.ERR.CODE = %E$ACGRANS THEN
     3427    10100    3             DO;   /* DONT ALTRETURN */

     3428    10101    3             B$JIT.ERR='0'B;

  10101  1 011610   000012 450100                    STZ     10,,PR0

     3429    10102    3             RETURN;

  10102  1 011611   200104 221300                    LDX1  ! I,,AUTO
         1 011612   000001 702211                    TSX2  ! 1,X1

     3430    10103    3             END;  /* DONT ALTRETURN */
     3431    10104    2          ALTRETURN;

  10104  1 011613   200104 221300                    LDX1  ! I,,AUTO
         1 011614   000000 702211                    TSX2  ! 0,X1

     3432    10105    2          END INIT_AKEY;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:669  
     3433    10106               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:670  
     3434    10107        /*I*     NAME:     INIT_GRAN
     3435    10108                 PURPOSE:  To initialize an index granule
     3436    10109                 DESCRIPTION:
     3437    10110                      This gets an index granule, and initializes it for use by
     3438    10111                 INIT_AKEY, and INIT_IRKEY.
     3439    10112        */
     3440    10113                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:671  
     3441    10114    1   INIT_GRAN: PROC ALTRET;

  10114  1 011615   200106 741300       INIT_GRAN    STX1  ! ICHNG,,AUTO

     3442    10115        /* */
     3443    10116    2          CALL FMD$FLSHBUF(2);

  10116  1 011616   000046 630400 2                  EPPR0   38
         1 011617   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 011620   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 011621   000000 011000                    NOP     0

     3444    10117    2          CALL FAF$GETGRAN(DA) ALTRET(ERR);

  10117  1 011622   200021 630500                    EPPR0   DA,,AUTO
         1 011623   200166 450500                    STP0    STEMP_FIELDIN+2,,AUTO
         1 011624   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 011625   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 011626   000000 701000 xent               TSX1    FAF$GETGRAN
         1 011627   011716 702000 1                  TSX2    ERR

     3445    10118    2          CALL FMD$GETBUF(2, 1, BUF$);

  10118  1 011630   200024 630500                    EPPR0   BUF$,,AUTO
         1 011631   200170 450500                    STP0    STEMP_FIELDIN+4,,AUTO
         1 011632   000062 237000 2                  LDAQ    50
         1 011633   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 011634   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 011635   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 011636   000000 701000 xent               TSX1    FMD$GETBUF
         1 011637   000000 011000                    NOP     0

     3446    10119    2          F$DCB.BFR.DA(2)=DA;

  10119  1 011640   200007 470500                    LDP0    JDCB$,,AUTO
         1 011641   200021 236100                    LDQ     DA,,AUTO
         1 011642   000117 552134                    STBQ    79,'34'O,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:672  

     3447    10120    2          F$DCB.BFR.BUFUP(2)='1'B;

  10120  1 011643   400000 236003                    LDQ     -131072,DU
         1 011644   000117 256100                    ORSQ    79,,PR0

     3448    10121    2          F$DCB.BFR.SCRUB(2)='1'B;

  10121  1 011645   200000 236003                    LDQ     65536,DU
         1 011646   000117 256100                    ORSQ    79,,PR0

     3449    10122
     3450    10123    2          FM$GRAN='0'B;

  10123  1 011647   200024 471500                    LDP1    BUF$,,AUTO
         1 011650   000100 100400                    MLR     fill='000'O
         1 011651   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 011652   100000 000024                    ADSC9   0,,PR1                   cn=0,n=20

     3451    10124    2          FM$GRAN.STAMP.HASH=F$DCB.HASH;

  10124  1 011653   200024 471500                    LDP1    BUF$,,AUTO
         1 011654   000073 236100                    LDQ     59,,PR0
         1 011655   100000 552170                    STBQ    0,'70'O,PR1

     3452    10125    2          FM$GRAN.STAMP.GMOD=DA;

  10125  1 011656   200024 471500                    LDP1    BUF$,,AUTO
         1 011657   200021 236100                    LDQ     DA,,AUTO
         1 011660   100000 552104                    STBQ    0,'04'O,PR1

     3453    10126    2          FM$GRAN.NAVX=SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL);

  10126  1 011661   000113 220003                    LDX0    75,DU
         1 011662   200024 471500                    LDP1    BUF$,,AUTO
         1 011663   100001 740100                    STX0    1,,PR1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:673  
     3454    10127    2          FM$GRAN.HDR='1'B;

  10127  1 011664   200024 471500                    LDP1    BUF$,,AUTO
         1 011665   400000 236007                    LDQ     -131072,DL
         1 011666   100001 256100                    ORSQ    1,,PR1

     3455    10128    2          FM$GRAN.ORG=F$DCB.ORG;

  10128  1 011667   200024 471500                    LDP1    BUF$,,AUTO
         1 011670   000032 236100                    LDQ     26,,PR0
         1 011671   000021 772000                    QRL     17
         1 011672   100001 676100                    ERQ     1,,PR1
         1 011673   036000 376007                    ANQ     15360,DL
         1 011674   100001 656100                    ERSQ    1,,PR1

     3456    10129    2          FM$GRAN.AVAIL=1024-FM$GRAN.NAVX;

  10129  1 011675   200024 471500                    LDP1    BUF$,,AUTO
         1 011676   100001 236100                    LDQ     1,,PR1
         1 011677   000022 772000                    QRL     18
         1 011700   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 011701   002001 036007                    ADLQ    1025,DL
         1 011702   100001 676100                    ERQ     1,,PR1
         1 011703   001777 376007                    ANQ     1023,DL
         1 011704   100001 656100                    ERSQ    1,,PR1

     3457    10130    2          FM$GRAN.FCEX=SIZEW(FM$GRAN);

  10130  1 011705   000005 221003                    LDX1    5,DU
         1 011706   200024 471500                    LDP1    BUF$,,AUTO
         1 011707   100002 741100                    STX1    2,,PR1

     3458    10131    2          PINCRW(BUF$, SIZEW(FM$GRAN))->FM$KEYTBL=INITKEYTBL;

  10131  1 011710   200024 471500                    LDP1    BUF$,,AUTO
         1 011711   000100 100400                    MLR     fill='000'O
         1 011712   000037 000001 0                  ADSC9   INITKEYTBL               cn=0,n=1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:674  
         1 011713   100005 000430                    ADSC9   5,,PR1                   cn=0,n=280

     3459    10132    2          RETURN;

  10132  1 011714   200106 221300                    LDX1  ! ICHNG,,AUTO
         1 011715   000001 702211                    TSX2  ! 1,X1

     3460    10133    2   ERR:   ALTRETURN;

  10133  1 011716   200106 221300       ERR          LDX1  ! ICHNG,,AUTO
         1 011717   000000 702211                    TSX2  ! 0,X1

     3461    10134    2          END INIT_GRAN;
     3462    10135               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:675  
     3463    10136        /*I*     NAME:     INIT_IRKEY
     3464    10137                 PURPOSE:  To reinitialize an irel file
     3465    10138                 DESCRIPTION:
     3466    10139                      Entry 0 is the same thing as the primary index.  Next,
     3467    10140                 reset all of the entries for the alternate indexes.  Then,
     3468    10141                 go through getting a granule, and calling it the FDA.
     3469    10142        */
     3470    10143                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:676  
     3471    10144    1   INIT_IRKEY: PROC ALTRET;

  10144  1 011720   200104 741300       INIT_IRKEY   STX1  ! I,,AUTO

     3472    10145    2          DCL I SBIN;
     3473    10146        /* */
     3474    10147    2          IRKEYS.K.FDA(0)=FM_FRZERO;

  10147  1 011721   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 011722   000000 236000 xsym               LDQ     FM_FRZERO
         1 011723   000007 552134                    STBQ    7,'34'O,PR0

     3475    10148    2          IRKEYS.K.LDA(0)=FM$CFU.LDA;

  10148  1 011724   200010 471500                    LDP1    CFU$,,AUTO
         1 011725   100006 235100                    LDA     6,,PR1
         1 011726   100007 236100                    LDQ     7,,PR1
         1 011727   000033 773000                    LRL     27
         1 011730   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 011731   000011 552134                    STBQ    9,'34'O,PR0

     3476    10149    2          IRKEYS.K.TDA(0)=F$DCB.TDA;

  10149  1 011732   200007 473500                    LDP3    JDCB$,,AUTO
         1 011733   300070 236100                    LDQ     56,,PR3
         1 011734   000003 552134                    STBQ    3,'34'O,PR0

     3477    10150    2          IRKEYS.K.TDALVL(0)=F$DCB.TDALVL;

  10150  1 011735   300067 236100                    LDQ     55,,PR3
         1 011736   700000 376003                    ANQ     -32768,DU
         1 011737   000006 772000                    QRL     6
         1 011740   000003 552140                    STBQ    3,'40'O,PR0

     3478    10151    2          IRKEYS.K.CDA(0)=FM_FRZERO;

  10151  1 011741   000000 236000 xsym               LDQ     FM_FRZERO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:677  
         1 011742   000010 552134                    STBQ    8,'34'O,PR0

     3479    10152
     3480    10153    3          DO I=1 TO IRKEYS.NKEYS-1;

  10153  1 011743   000001 235007                    LDA     1,DL
         1 011744   200105 755100                    STA     I,,AUTO
         1 011745   011770 710000 1                  TRA     s:10162+1

     3481    10154    3             IRKEYS.K.RPOS(I)='0'B;

  10154  1 011746   200105 236100                    LDQ     I,,AUTO
         1 011747   000007 402007                    MPY     7,DL
         1 011750   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 011751   000000 620006                    EAX0    0,QL
         1 011752   000061 236000 2                  LDQ     49
         1 011753   000006 356110                    ANSQ    6,X0,PR0

     3482    10155    3             IRKEYS.K.CRECX(I)=0;

  10155  1 011754   000000 221003                    LDX1    0,DU
         1 011755   000006 741110                    STX1    6,X0,PR0

     3483    10156    3             IRKEYS.K.SEGX(I)=0;

  10156  1 011756   000005 441110                    SXL1    5,X0,PR0

     3484    10157    3             IRKEYS.K.FDA(I)=0;

  10157  1 011757   777000 236003                    LDQ     -512,DU
         1 011760   000007 356110                    ANSQ    7,X0,PR0

     3485    10158    3             IRKEYS.K.LDA(I)=0;

  10158  1 011761   000011 356110                    ANSQ    9,X0,PR0

     3486    10159    3             IRKEYS.K.TDA(I)=0;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:678  

  10159  1 011762   000003 356110                    ANSQ    3,X0,PR0

     3487    10160    3             IRKEYS.K.TDALVL(I)=0;

  10160  1 011763   000032 236000 xsym               LDQ     B_VECTNIL+26
         1 011764   000003 356110                    ANSQ    3,X0,PR0

     3488    10161    3             IRKEYS.K.CDA(I)=0;

  10161  1 011765   777000 236003                    LDQ     -512,DU
         1 011766   000010 356110                    ANSQ    8,X0,PR0

     3489    10162    3          END;

  10162  1 011767   200105 054100                    AOS     I,,AUTO
         1 011770   000000 236100                    LDQ     0,,PR0
         1 011771   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 011772   200105 116100                    CMPQ    I,,AUTO
         1 011773   011746 605400 1                  TPNZ    s:10154

     3490    10163
     3491    10164    3          DO I=1 TO IRKEYS.NKEYS-1;

  10164  1 011774   000001 235007                    LDA     1,DL
         1 011775   200105 755100                    STA     I,,AUTO
         1 011776   012022 710000 1                  TRA     s:10169+1

     3492    10165    3             CALL INIT_GRAN ALTRET(ERR);

  10165  1 011777   011615 701000 1                  TSX1    INIT_GRAN
         1 012000   012030 702000 1                  TSX2    ERR

     3493    10166    3             IRKEYS.K.FDA(I)=DA;

  10166  1 012001   200105 236100                    LDQ     I,,AUTO
         1 012002   000007 402007                    MPY     7,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:679  
         1 012003   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 012004   000000 620006                    EAX0    0,QL
         1 012005   200021 236100                    LDQ     DA,,AUTO
         1 012006   000007 676110                    ERQ     7,X0,PR0
         1 012007   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 012010   000007 656110                    ERSQ    7,X0,PR0

     3494    10167    3             IRKEYS.K.LDA(I)=DA;

  10167  1 012011   200021 236100                    LDQ     DA,,AUTO
         1 012012   000011 676110                    ERQ     9,X0,PR0
         1 012013   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 012014   000011 656110                    ERSQ    9,X0,PR0

     3495    10168    3             IRKEYS.K.CDA(I)=DA;

  10168  1 012015   200021 236100                    LDQ     DA,,AUTO
         1 012016   000010 676110                    ERQ     8,X0,PR0
         1 012017   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 012020   000010 656110                    ERSQ    8,X0,PR0

     3496    10169    3          END;  /* DO I */

  10169  1 012021   200105 054100                    AOS     I,,AUTO
         1 012022   000000 236100                    LDQ     0,,PR0
         1 012023   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 012024   200105 116100                    CMPQ    I,,AUTO
         1 012025   011777 605400 1                  TPNZ    s:10165

     3497    10170
     3498    10171    2          RETURN;

  10171  1 012026   200104 221300                    LDX1  ! I,,AUTO
         1 012027   000001 702211                    TSX2  ! 1,X1

     3499    10172    2   ERR:   IF B$JIT.ERR.CODE = %E$PSGRANS OR

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:680  
  10172  1 012030   000000 470400 xsym  ERR          LDP0    B$JIT$
         1 012031   000012 236100                    LDQ     10,,PR0
         1 012032   377770 376007                    ANQ     131064,DL
         1 012033   002140 116007                    CMPQ    1120,DL
         1 012034   012041 600000 1                  TZE     s:10176
         1 012035   002150 116007                    CMPQ    1128,DL
         1 012036   012041 600000 1                  TZE     s:10176
         1 012037   002160 116007                    CMPQ    1136,DL
         1 012040   012044 601000 1                  TNZ     s:10179

     3500    10173    2             B$JIT.ERR.CODE = %E$USGRANS OR
     3501    10174    2             B$JIT.ERR.CODE = %E$ACGRANS THEN
     3502    10175    3             DO;   /* DONT ALTRETURN */

     3503    10176    3             B$JIT.ERR='0'B;

  10176  1 012041   000012 450100                    STZ     10,,PR0

     3504    10177    3             RETURN;

  10177  1 012042   200104 221300                    LDX1  ! I,,AUTO
         1 012043   000001 702211                    TSX2  ! 1,X1

     3505    10178    3             END;  /* DONT ALTRETURN */
     3506    10179    2          ALTRETURN;

  10179  1 012044   200104 221300                    LDX1  ! I,,AUTO
         1 012045   000000 702211                    TSX2  ! 0,X1

     3507    10180    2          END INIT_IRKEY;
     3508    10181               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:681  
     3509    10182        /*I*     NAME:     KEYEXP
     3510    10183                 PURPOSE:  To expand a 1 granule keyed file
     3511    10184                 DESCRIPTION:
     3512    10185                      Whenever a modification needs to be done to a 1 granule
     3513    10186                 keyed file, it is first expanded to 2 granules.  First, we
     3514    10187                 save our current position.  Then, we make sure that granule
     3515    10188                 0 is in buffer 1.  Next, we get a granule for the data, and
     3516    10189                 put it in granule 0.
     3517    10190
     3518    10191                      The data in buffer 1 is at the end of the granule.  So,
     3519    10192                 since NAVX points to the end of the list of keys, and AVAIL
     3520    10193                 is the amount of space between the list of keys, and the
     3521    10194                 start of the data, the amount of data space is 1024 less
     3522    10195                 NAVX and AVAIL.  The data gets moved to buffer 0.  Then, we
     3523    10196                 get a granule, and call it GDA.  Make sure all of the
     3524    10197                 NAVX and AVAIL values are okay.
     3525    10198
     3526    10199                      Now, we have to loop through the file, making sure all
     3527    10200                 of the MISEGs point to the right place.  J is the number of
     3528    10201                 words that the data moved forward.
     3529    10202
     3530    10203                      When that's all done, then make sure that both granules
     3531    10204                 get written to disk, and restore the file position.
     3532    10205        */
     3533    10206                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:682  
     3534    10207    1   KEYEXP: PROC ALTRET;

  10207  1 012046   200076 741300       KEYEXP       STX1  ! DELALL_FAST+2,,AUTO

     3535    10208    2          DCL MOVCNT SBIN;
     3536    10209    2          DCL P1$ PTR;
     3537    10210    2          DCL P2$ PTR;
     3538    10211    2          DCL J SBIN;
     3539    10212    2          DCL SIZE SBIN;
     3540    10213    2          DCL CHARS CHAR(SIZE) BASED;
     3541    10214        /* */
     3542    10215    2          IF FM$CFU.GDA ~= 1 THEN

  10215  1 012047   200010 470500                    LDP0    CFU$,,AUTO
         1 012050   000005 236100                    LDQ     5,,PR0
         1 012051   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 012052   000001 116007                    CMPQ    1,DL
         1 012053   012055 600000 1                  TZE     s:10217

     3543    10216    2             RETURN;

  10216  1 012054   000001 702211                    TSX2  ! 1,X1

     3544    10217    2          CALL FMG$INIT;

  10217  1 012055   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 012056   000000 701000 xent               TSX1    FMG$INIT
         1 012057   000000 011000                    NOP     0

     3545    10218
     3546    10219    2          F$DCB.GTYP=FMGTFILE;

  10219  1 012060   200007 470500                    LDP0    JDCB$,,AUTO
         1 012061   000064 236100                    LDQ     52,,PR0
         1 012062   000045 376000 2                  ANQ     37
         1 012063   030000 276003                    ORQ     12288,DU
         1 012064   000064 756100                    STQ     52,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:683  

     3547    10220    2          F$DCB.LVL=0;

  10220  1 012065   000035 236000 2                  LDQ     29
         1 012066   000067 356100                    ANSQ    55,,PR0

     3548    10221    2          CALL FMD$REDBUF(BUF$, 1, FM_FRZERO,, 0) ALTRET(ERR);

  10221  1 012067   000000 236000 2                  LDQ     0
         1 012070   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 012071   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 012072   000040 235000 2                  LDA     32
         1 012073   200170 757100                    STAQ    STEMP_FIELDIN+4,,AUTO
         1 012074   000001 236000 2                  LDQ     1
         1 012075   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 012076   200024 631500                    EPPR1   BUF$,,AUTO
         1 012077   200166 451500                    STP1    STEMP_FIELDIN+2,,AUTO
         1 012100   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 012101   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 012102   000000 701000 xent               TSX1    FMD$REDBUF
         1 012103   012361 702000 1                  TSX2    ERR

     3549    10222
     3550    10223    2          CALL FMD$GETBUF(0, 1, DBUF$);

  10223  1 012104   200040 630500                    EPPR0   DBUF$,,AUTO
         1 012105   200170 450500                    STP0    STEMP_FIELDIN+4,,AUTO
         1 012106   000000 237000 2                  LDAQ    0
         1 012107   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 012110   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 012111   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 012112   000000 701000 xent               TSX1    FMD$GETBUF
         1 012113   000000 011000                    NOP     0

     3551    10224    2          DBUF$->FM$GRAN=FM$GRAN;

  10224  1 012114   200024 470500                    LDP0    BUF$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:684  
         1 012115   200040 471500                    LDP1    DBUF$,,AUTO
         1 012116   000100 100500                    MLR     fill='000'O
         1 012117   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20
         1 012120   100000 000024                    ADSC9   0,,PR1                   cn=0,n=20

     3552    10225    2          DBUF$->FM$GRAN.HDR='0'B;

  10225  1 012121   200040 470500                    LDP0    DBUF$,,AUTO
         1 012122   000064 236000 2                  LDQ     52
         1 012123   000001 356100                    ANSQ    1,,PR0

     3553    10226    2          DBUF$->FM$GRAN.LVL=7;

  10226  1 012124   200040 470500                    LDP0    DBUF$,,AUTO
         1 012125   340000 236007                    LDQ     114688,DL
         1 012126   000001 256100                    ORSQ    1,,PR0

     3554    10227
     3555    10228    2          MOVCNT=1024-FM$GRAN.NAVX-FM$GRAN.AVAIL;

  10228  1 012127   200024 470500                    LDP0    BUF$,,AUTO
         1 012130   000001 236100                    LDQ     1,,PR0
         1 012131   001777 376007                    ANQ     1023,DL
         1 012132   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 012133   000001 236100                    LDQ     1,,PR0
         1 012134   000022 772000                    QRL     18
         1 012135   200166 036100                    ADLQ    STEMP_FIELDIN+2,,AUTO
         1 012136   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 012137   002001 036007                    ADLQ    1025,DL
         1 012140   200077 756100                    STQ     MOVCNT,,AUTO

     3556    10229    2          P1$=PINCRW(BUF$, 1024-MOVCNT);

  10229  1 012141   000022 736000                    QLS     18
         1 012142   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 012143   000065 036000 2                  ADLQ    53
         1 012144   200024 036100                    ADLQ    BUF$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:685  
         1 012145   200100 756100                    STQ     P1$,,AUTO

     3557    10230    2          P2$=PINCRW(DBUF$, 2);

  10230  1 012146   200040 236100                    LDQ     DBUF$,,AUTO
         1 012147   000002 036003                    ADLQ    2,DU
         1 012150   200101 756100                    STQ     P2$,,AUTO

     3558    10231
     3559    10232    2          SIZE=MOVCNT*4;

  10232  1 012151   200077 235100                    LDA     MOVCNT,,AUTO
         1 012152   000002 735000                    ALS     2
         1 012153   200103 755100                    STA     SIZE,,AUTO

     3560    10233    2          P2$->CHARS=P1$->CHARS;

  10233  1 012154   200100 471500                    LDP1    P1$,,AUTO
         1 012155   000000 620005                    EAX0    0,AL
         1 012156   200101 473500                    LDP3    P2$,,AUTO
         1 012157   200103 721100                    LXL1    SIZE,,AUTO
         1 012160   040140 100540                    MLR     fill='040'O
         1 012161   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 012162   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1

     3561    10234
     3562    10235    2          DBUF$->FM$GRAN.AVAIL=1024-2-MOVCNT;

  10235  1 012163   200040 470500                    LDP0    DBUF$,,AUTO
         1 012164   001776 236007                    LDQ     1022,DL
         1 012165   200077 136100                    SBLQ    MOVCNT,,AUTO
         1 012166   000001 676100                    ERQ     1,,PR0
         1 012167   001777 376007                    ANQ     1023,DL
         1 012170   000001 656100                    ERSQ    1,,PR0

     3563    10236    2          DBUF$->FM$GRAN.NAVX=MOVCNT+2;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:686  
  10236  1 012171   200077 720100                    LXL0    MOVCNT,,AUTO
         1 012172   000002 622010                    EAX2    2,X0
         1 012173   200040 470500                    LDP0    DBUF$,,AUTO
         1 012174   000001 742100                    STX2    1,,PR0

     3564    10237
     3565    10238    2          CALL FAF$GETGRAN(DA) ALTRET(RERR);

  10238  1 012175   200021 630500                    EPPR0   DA,,AUTO
         1 012176   200166 450500                    STP0    STEMP_FIELDIN+2,,AUTO
         1 012177   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 012200   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 012201   000000 701000 xent               TSX1    FAF$GETGRAN
         1 012202   012355 702000 1                  TSX2    RERR

     3566    10239    2          FM$CFU.GDA=DA;

  10239  1 012203   200010 470500                    LDP0    CFU$,,AUTO
         1 012204   200021 236100                    LDQ     DA,,AUTO
         1 012205   000005 552134                    STBQ    5,'34'O,PR0

     3567    10240
     3568    10241    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL+MOVCNT;

  10241  1 012206   200024 471500                    LDP1    BUF$,,AUTO
         1 012207   100001 236100                    LDQ     1,,PR1
         1 012210   001777 376007                    ANQ     1023,DL
         1 012211   200077 036100                    ADLQ    MOVCNT,,AUTO
         1 012212   100001 676100                    ERQ     1,,PR1
         1 012213   001777 376007                    ANQ     1023,DL
         1 012214   100001 656100                    ERSQ    1,,PR1

     3569    10242    2          F$DCB.BFR.DA(0)=DA;

  10242  1 012215   200007 471500                    LDP1    JDCB$,,AUTO
         1 012216   200021 236100                    LDQ     DA,,AUTO
         1 012217   100115 552134                    STBQ    77,'34'O,PR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:687  

     3570    10243    2          DBUF$->FM$GRAN.STAMP.GMOD=DA;

  10243  1 012220   200040 473500                    LDP3    DBUF$,,AUTO
         1 012221   300000 552104                    STBQ    0,'04'O,PR3

     3571    10244
     3572    10245    2          F$DCB.BFR.BUFUP(0)='1'B;

  10245  1 012222   400000 236003                    LDQ     -131072,DU
         1 012223   100115 256100                    ORSQ    77,,PR1

     3573    10246    2          F$DCB.BFR.SCRUB(0)='1'B;

  10246  1 012224   200000 236003                    LDQ     65536,DU
         1 012225   100115 256100                    ORSQ    77,,PR1

     3574    10247
     3575    10248    2          J=POFFW(P1$, BUF$)-2;

  10248  1 012226   200024 235100                    LDA     BUF$,,AUTO
         1 012227   000022 771000                    ARL     18
         1 012230   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 012231   200100 236100                    LDQ     P1$,,AUTO
         1 012232   000022 772000                    QRL     18
         1 012233   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 012234   000002 136007                    SBLQ    2,DL
         1 012235   200102 756100                    STQ     J,,AUTO

     3576    10249    2          F$DCB.RPOS='0'B;

  10249  1 012236   000005 236000 2                  LDQ     5
         1 012237   100064 356100                    ANSQ    52,,PR1

     3577    10250    2          CALL SETUP;

  10250  1 012240   022071 701000 1                  TSX1    SETUP
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:688  
         1 012241   000000 011000                    NOP     0

     3578    10251    2          ORG=F$DCB.ORG;     /* SETUP CLOBBERS ORG */

  10251  1 012242   200007 470500                    LDP0    JDCB$,,AUTO
         1 012243   000032 236100                    LDQ     26,,PR0
         1 012244   000033 772000                    QRL     27
         1 012245   200022 756100                    STQ     ORG,,AUTO

     3579    10252    2          CRECX=0;

  10252  1 012246   200015 450100                    STZ     CRECX,,AUTO

     3580    10253    3          DO WHILE ('1'B);

     3581    10254    3             CALL NXTKEYNM ALTRET(DONE);

  10254  1 012247   015110 701000 1                  TSX1    NXTKEYNM
         1 012250   012333 702000 1                  TSX2    DONE

     3582    10255    4             DO WHILE (SEG$ ~= ADDR(NIL));

  10255  1 012251   012327 710000 1                  TRA     s:10269

     3583    10256    4                IF FM$MISEG.GDA=FM_FRZERO THEN

  10256  1 012252   200014 470500                    LDP0    SEG$,,AUTO
         1 012253   000001 236100                    LDQ     1,,PR0
         1 012254   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 012255   000000 116000 xsym               CMPQ    FM_FRZERO
         1 012256   012325 601000 1                  TNZ     s:10268

     3584    10257    5                   DO;   /* ADJUST MISEG */

     3585    10258    5                   IF FM$MISEG.GDA = F$DCB.ID.DA AND

  10258  1 012257   200007 471500                    LDP1    JDCB$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:689  
         1 012260   100107 236100                    LDQ     71,,PR1
         1 012261   000020 376000 2                  ANQ     16
         1 012262   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 012263   000001 236100                    LDQ     1,,PR0
         1 012264   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 012265   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 012266   012312 601000 1                  TNZ     s:10265
         1 012267   100107 236100                    LDQ     71,,PR1
         1 012270   000032 772000                    QRL     26
         1 012271   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 012272   000000 236100                    LDQ     0,,PR0
         1 012273   000014 772000                    QRL     12
         1 012274   001777 376007                    ANQ     1023,DL
         1 012275   200167 116100                    CMPQ    STEMP_FIELDIN+3,,AUTO
         1 012276   012312 601000 1                  TNZ     s:10265

     3586    10259    5                      FM$MISEG.GX = F$DCB.ID.GX THEN
     3587    10260    6                      DO;   /* ADJUST ID */

     3588    10261    6                      F$DCB.ID.DA=DA;

  10261  1 012277   200021 236100                    LDQ     DA,,AUTO
         1 012300   100107 676100                    ERQ     71,,PR1
         1 012301   000020 376000 2                  ANQ     16
         1 012302   100107 656100                    ERSQ    71,,PR1

     3589    10262    6                      F$DCB.ID.GX=F$DCB.ID.GX-J;

  10262  1 012303   100107 236100                    LDQ     71,,PR1
         1 012304   000032 772000                    QRL     26
         1 012305   200102 136100                    SBLQ    J,,AUTO
         1 012306   000032 736000                    QLS     26
         1 012307   100107 676100                    ERQ     71,,PR1
         1 012310   777400 376003                    ANQ     -256,DU
         1 012311   100107 656100                    ERSQ    71,,PR1

     3590    10263    6                      END;  /* ADJUST ID */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:690  

     3591    10264
     3592    10265    5                   FM$MISEG.GDA=DA;

  10265  1 012312   200021 236100                    LDQ     DA,,AUTO
         1 012313   000001 552134                    STBQ    1,'34'O,PR0

     3593    10266    5                   FM$MISEG.GX=FM$MISEG.GX-J;

  10266  1 012314   200014 470500                    LDP0    SEG$,,AUTO
         1 012315   000000 236100                    LDQ     0,,PR0
         1 012316   000014 772000                    QRL     12
         1 012317   001777 376007                    ANQ     1023,DL
         1 012320   200102 136100                    SBLQ    J,,AUTO
         1 012321   000014 736000                    QLS     12
         1 012322   000000 676100                    ERQ     0,,PR0
         1 012323   000004 376000 2                  ANQ     4
         1 012324   000000 656100                    ERSQ    0,,PR0

     3594    10267    5                   END;  /* ADJUST MISEG */

     3595    10268    4                CALL NXTSEG ALTRET(ERR);

  10268  1 012325   015351 701000 1                  TSX1    NXTSEG
         1 012326   012361 702000 1                  TSX2    ERR

     3596    10269    4             END;  /* WHILE */

  10269  1 012327   200014 236100                    LDQ     SEG$,,AUTO
         1 012330   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 012331   012252 601000 1                  TNZ     s:10256

     3597    10270    3          END;  /* FOREVER */

  10270  1 012332   012247 710000 1                  TRA     s:10254

     3598    10271
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:691  
     3599    10272    2   DONE:  F$DCB.BFR.BUFUP(1)='1'B;

  10272  1 012333   200007 470500       DONE         LDP0    JDCB$,,AUTO
         1 012334   400000 236003                    LDQ     -131072,DU
         1 012335   000116 256100                    ORSQ    78,,PR0

     3600    10273    2          F$DCB.SPAN='1'B;

  10273  1 012336   100000 236007                    LDQ     32768,DL
         1 012337   000064 256100                    ORSQ    52,,PR0

     3601    10274    2          CALL FMD$WRTBUF(0);

  10274  1 012340   000000 630400 2                  EPPR0   0
         1 012341   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 012342   000000 701000 xent               TSX1    FMD$WRTBUF
         1 012343   000000 011000                    NOP     0

     3602    10275    2          CALL FMD$WRTSV(1);

  10275  1 012344   000001 630400 2                  EPPR0   1
         1 012345   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 012346   000000 701000 xent               TSX1    FMD$WRTSV
         1 012347   000000 011000                    NOP     0

     3603    10276    2          CALL FMG$INIT;

  10276  1 012350   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 012351   000000 701000 xent               TSX1    FMG$INIT
         1 012352   000000 011000                    NOP     0

     3604    10277    2          RETURN;

  10277  1 012353   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 012354   000001 702211                    TSX2  ! 1,X1

     3605    10278    2   RERR:  CALL FMD$RELBUF(0);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:692  

  10278  1 012355   000000 630400 2     RERR         EPPR0   0
         1 012356   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 012357   000000 701000 xent               TSX1    FMD$RELBUF
         1 012360   000000 011000                    NOP     0

     3606    10279    2   ERR:   ALTRETURN;

  10279  1 012361   200076 221300       ERR          LDX1  ! DELALL_FAST+2,,AUTO
         1 012362   000000 702211                    TSX2  ! 0,X1

     3607    10280    2          END KEYEXP;
     3608    10281               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:693  
     3609    10282        /*I*     NAME:     KEYPTR
     3610    10283                 PURPOSE:  To build a pointer to an alternate key
     3611    10284                 DESCRIPTION:
     3612    10285                      Since the user may ask for a key back when we are pointing
     3613    10286                 to a duplicate key entry, we have to read the record to actually
     3614    10287                 get the key value.  We read in the data granule that is associated
     3615    10288                 with this key.  Then set up KEY$ to point to the part of the
     3616    10289                 record where the key text will actually be found.
     3617    10290        */
     3618    10291                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:694  
     3619    10292    1   KEYPTR: PROC ALTRET;

  10292  1 012363   200112 741300       KEYPTR       STX1  ! SIZE+1,,AUTO

     3620    10293        /* */
     3621    10294    3          IF INDEX# > 0 OR ORG = %IREL# THEN DO;   /* Set KEY$ */

  10294  1 012364   200011 235100                    LDA     INDEX#,,AUTO
         1 012365   012371 601000 1                  TNZ     s:10295
         1 012366   200022 236100                    LDQ     ORG,,AUTO
         1 012367   000015 116007                    CMPQ    13,DL
         1 012370   012527 601000 1                  TNZ     s:10319

     3622    10295    3             IF SEG$ = ADDR(NIL) THEN

  10295  1 012371   200014 236100                    LDQ     SEG$,,AUTO
         1 012372   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 012373   012377 601000 1                  TNZ     s:10298

     3623    10296    3                KEY$=ADDR(NIL);

  10296  1 012374   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 012375   200020 756100                    STQ     KEY$,,AUTO
         1 012376   012527 710000 1                  TRA     s:10319

     3624    10297    3             ELSE                               /* Set up key pointer */
     3625    10298    4                IF F$DCB.CRECX = 0 THEN DO;    /* Key not in current granule? */

  10298  1 012377   200007 470500                    LDP0    JDCB$,,AUTO
         1 012400   000067 720100                    LXL0    55,,PR0
         1 012401   012463 601000 1                  TNZ     s:10309

     3626    10299    4                   DA=FM$MISEG.GDA;

  10299  1 012402   200014 471500                    LDP1    SEG$,,AUTO
         1 012403   100001 236100                    LDQ     1,,PR1
         1 012404   000032 376000 xsym               ANQ     B_VECTNIL+26
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:695  
         1 012405   200021 756100                    STQ     DA,,AUTO

     3627    10300    4                   F$DCB.LVL=7;

  10300  1 012406   070000 236003                    LDQ     28672,DU
         1 012407   000067 256100                    ORSQ    55,,PR0

     3628    10301    4                   DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));

  10301  1 012410   000115 236100                    LDQ     77,,PR0
         1 012411   000033 772000                    QRL     27
         1 012412   000037 376007                    ANQ     31,DL
         1 012413   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 012414   200040 756100                    STQ     DBUF$,,AUTO

     3629    10302    4                   IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= DA THEN

  10302  1 012415   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 012416   012423 600000 1                  TZE     s:10303
         1 012417   000115 236100                    LDQ     77,,PR0
         1 012420   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 012421   200021 116100                    CMPQ    DA,,AUTO
         1 012422   012441 600000 1                  TZE     s:10304

     3630    10303    4                      CALL FMD$REDBUF(DBUF$, 0, DA,, 0) ALTRET(ERR);

  10303  1 012423   000000 236000 2                  LDQ     0
         1 012424   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 012425   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 012426   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 012427   200021 633500                    EPPR3   DA,,AUTO
         1 012430   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 012431   000000 236000 2                  LDQ     0
         1 012432   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 012433   200040 634500                    EPPR4   DBUF$,,AUTO
         1 012434   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 012435   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:696  
         1 012436   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 012437   000000 701000 xent               TSX1    FMD$REDBUF
         1 012440   012531 702000 1                  TSX2    ERR

     3631    10304    4                   KEY$=PINCRW(DBUF$, FM$MISEG.GX);

  10304  1 012441   200014 470500                    LDP0    SEG$,,AUTO
         1 012442   000000 236100                    LDQ     0,,PR0
         1 012443   000014 772000                    QRL     12
         1 012444   001777 376007                    ANQ     1023,DL
         1 012445   000022 736000                    QLS     18
         1 012446   200040 036100                    ADLQ    DBUF$,,AUTO
         1 012447   200020 756100                    STQ     KEY$,,AUTO

     3632    10305    4                   IF ORG = %INDEXED# THEN

  10305  1 012450   200022 235100                    LDA     ORG,,AUTO
         1 012451   000006 115007                    CMPA    6,DL
         1 012452   012527 601000 1                  TNZ     s:10319

     3633    10306    4                      KEY$=PINCRC(KEY$, F$DCB.KEYX-1);

  10306  1 012453   200007 471500                    LDP1    JDCB$,,AUTO
         1 012454   100036 236100                    LDQ     30,,PR1
         1 012455   000022 772000                    QRL     18
         1 012456   000020 736000                    QLS     16
         1 012457   200000 136007                    SBLQ    65536,DL
         1 012460   200020 036100                    ADLQ    KEY$,,AUTO
         1 012461   200020 756100                    STQ     KEY$,,AUTO

     3634    10307    4                   END;

  10307  1 012462   012527 710000 1                  TRA     s:10319

     3635    10308    4                ELSE DO;           /* Key is in current granule. */

     3636    10309    4                   CRECX = F$DCB.CRECX;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:697  

  10309  1 012463   000067 236100                    LDQ     55,,PR0
         1 012464   777777 376007                    ANQ     -1,DL
         1 012465   200015 756100                    STQ     CRECX,,AUTO

     3637    10310    4                   BUF$ = FM$BUF$(F$DCB.BFR.BUFX(1));

  10310  1 012466   000116 236100                    LDQ     78,,PR0
         1 012467   000033 772000                    QRL     27
         1 012470   000037 376007                    ANQ     31,DL
         1 012471   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 012472   200024 756100                    STQ     BUF$,,AUTO

     3638    10311    4                   KTPTR$ = PINCRW(BUF$,FM$GRAN.FCEX);

  10311  1 012473   200024 471500                    LDP1    BUF$,,AUTO
         1 012474   100002 222100                    LDX2    2,,PR1
         1 012475   000000 636012                    EAQ     0,X2
         1 012476   200024 036100                    ADLQ    BUF$,,AUTO
         1 012477   200025 756100                    STQ     KTPTR$,,AUTO

     3639    10312    4                   IF CRECX < FM$KEYTBL(0) THEN

  10312  1 012500   200025 473500                    LDP3    KTPTR$,,AUTO
         1 012501   300000 236100                    LDQ     0,,PR3
         1 012502   000033 772000                    QRL     27
         1 012503   200015 116100                    CMPQ    CRECX,,AUTO
         1 012504   012517 602000 1                  TNC     s:10315
         1 012505   012517 600000 1                  TZE     s:10315

     3640    10313    4                      KEY$ = PINCRW(BUF$,FM$KEYTBL(CRECX));

  10313  1 012506   200015 235100                    LDA     CRECX,,AUTO
         1 012507   000100 101505                    MRL     fill='000'O
         1 012510   300000 000001                    ADSC9   0,A,PR3                  cn=0,n=1
         1 012511   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 012512   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:698  
         1 012513   000000 636010                    EAQ     0,X0
         1 012514   200024 036100                    ADLQ    BUF$,,AUTO
         1 012515   200020 756100                    STQ     KEY$,,AUTO
         1 012516   012527 710000 1                  TRA     s:10319

     3641    10314    4                   ELSE
     3642    10315    4                      KEY$ = PINCRW(BUF$,FM$KEYTBL(CRECX)+512);

  10315  1 012517   200015 235100                    LDA     CRECX,,AUTO
         1 012520   000100 101505                    MRL     fill='000'O
         1 012521   300000 000001                    ADSC9   0,A,PR3                  cn=0,n=1
         1 012522   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 012523   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 012524   001000 636010                    EAQ     512,X0
         1 012525   200024 036100                    ADLQ    BUF$,,AUTO
         1 012526   200020 756100                    STQ     KEY$,,AUTO

     3643    10316    4                   END;

     3644    10317    3             END;

     3645    10318
     3646    10319    2          RETURN;

  10319  1 012527   200112 221300                    LDX1  ! SIZE+1,,AUTO
         1 012530   000001 702211                    TSX2  ! 1,X1

     3647    10320    2   ERR:   CALL DATAERROR;

  10320  1 012531   005205 701000 1     ERR          TSX1    DATAERROR
         1 012532   000000 011000                    NOP     0

     3648    10321    2          ALTRETURN;

  10321  1 012533   200112 221300                    LDX1  ! SIZE+1,,AUTO
         1 012534   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:699  
     3649    10322    2          END KEYPTR;
     3650    10323               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:700  
     3651    10324        /*I*     NAME:     KEYSQZ
     3652    10325                 PURPOSE:  To try to squeeze a keyed file to 1 granule
     3653    10326                 DESCRIPTION:
     3654    10327                      When closing a keyed file, we'll try to squeeze a two
     3655    10328                 granule file down to one granule.  There are a lot of
     3656    10329                 restrictions on what we'll try to squeeze.  By the way,
     3657    10330                 FM$CFU.GDA=1 indicates that a file is already squeezed.
     3658    10331
     3659    10332                      A truly squeezable file has two granules, one index and
     3660    10333                 one data.  However, there's one other possibility.  If the
     3661    10334                 file's last record was deleted, then the DELEND routine will
     3662    10335                 have already squeezed it down.  I.e., FM_FRZERO will be
     3663    10336                 initialized to a skeleton index granule and FM$CFU.UGRANS
     3664    10337                 will be set to 1, among other things.  However, we still need
     3665    10338                 to indicate that the file was squeezed here so that
     3666    10339                 FMO$MODFIT will know.  Otherwise, the NGAVAL granules won't
     3667    10340                 be released in the case where F$DCB.SPAN='1'B, indicating
     3668    10341                 that the file was expanded to two granules at open time, but
     3669    10342                 F$DCB.FFLG.DELF='0'B.  Expanding this sort of file during a
     3670    10343                 future open will still work.
     3671    10344
     3672    10345                      Otherwise, if it really is a two granule file, there's
     3673    10346                 more work to do.
     3674    10347
     3675    10348                      First, we read the data granule into buffer 0.  If the
     3676    10349                 amount of data space is greater than the free space in buffer
     3677    10350                 1, then we can't squeeze it.  Otherwise, we move the data to
     3678    10351                 the end of buffer 1.
     3679    10352
     3680    10353                      Now, loop through the file, readjusting the MISEGs to
     3681    10354                 point to the correct place in granule 0.
     3682    10355
     3683    10356                      NGAVAL just increased by one.
     3684    10357        */
     3685    10358                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:701  
     3686    10359    1   KEYSQZ: PROC;

  10359  1 012535   200076 741300       KEYSQZ       STX1  ! DELALL_FAST+2,,AUTO

     3687    10360    2          DCL MOVCNT SBIN;
     3688    10361    2          DCL J SBIN;
     3689    10362    2          DCL P1$ PTR;
     3690    10363    2          DCL P2$ PTR;
     3691    10364    2          DCL SIZE SBIN;
     3692    10365    2          DCL CHARS CHAR(SIZE) BASED;
     3693    10366        /* */
     3694    10367    2          FPTCODE=0;

  10367  1 012536   200003 470500                    LDP0    @PSEG$,,AUTO
         1 012537   000000 450100                    STZ     0,,PR0

     3695    10368    2          CALL SETUP;

  10368  1 012540   022071 701000 1                  TSX1    SETUP
         1 012541   000000 011000                    NOP     0

     3696    10369
     3697    10370    2          IF F$DCB.ACS = %BLOCK# OR F$DCB.IORG ~= %KEYED# OR

  10370  1 012542   200007 470500                    LDP0    JDCB$,,AUTO
         1 012543   000036 236100                    LDQ     30,,PR0
         1 012544   000777 376007                    ANQ     511,DL
         1 012545   000003 116007                    CMPQ    3,DL
         1 012546   012606 600000 1                  TZE     s:10376
         1 012547   000070 236100                    LDQ     56,,PR0
         1 012550   077000 376003                    ANQ     32256,DU
         1 012551   002000 116003                    CMPQ    1024,DU
         1 012552   012606 601000 1                  TNZ     s:10376
         1 012553   000064 236100                    LDQ     52,,PR0
         1 012554   200000 316003                    CANQ    65536,DU
         1 012555   012606 601000 1                  TNZ     s:10376
         1 012556   200010 471500                    LDP1    CFU$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:702  
         1 012557   100003 720100                    LXL0    3,,PR1
         1 012560   000001 100003                    CMPX0   1,DU
         1 012561   012606 601000 1                  TNZ     s:10376
         1 012562   100005 236100                    LDQ     5,,PR1
         1 012563   777000 376003                    ANQ     -512,DU
         1 012564   001000 116003                    CMPQ    512,DU
         1 012565   012606 601000 1                  TNZ     s:10376
         1 012566   100000 236100                    LDQ     0,,PR1
         1 012567   001000 316003                    CANQ    512,DU
         1 012570   012606 601000 1                  TNZ     s:10376
         1 012571   100005 236100                    LDQ     5,,PR1
         1 012572   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 012573   000001 116007                    CMPQ    1,DL
         1 012574   012606 600000 1                  TZE     s:10376
         1 012575   000052 721100                    LXL1    42,,PR0
         1 012576   012603 600000 1                  TZE     s:10370+33
         1 012577   000032 236100                    LDQ     26,,PR0
         1 012600   777000 376003                    ANQ     -512,DU
         1 012601   002000 116003                    CMPQ    1024,DU
         1 012602   012606 601000 1                  TNZ     s:10376
         1 012603   200024 473500                    LDP3    BUF$,,AUTO
         1 012604   300004 235100                    LDA     4,,PR3
         1 012605   012610 600000 1                  TZE     s:10378

     3698    10371    2             F$DCB.STARF OR FM$CFU.USECNT ~= 1 OR
     3699    10372    2             FM$CFU.SLIDE ~= 1 OR FM$CFU.AFIT ~= 0 OR
     3700    10373    2             FM$CFU.GDA = 1 OR
     3701    10374    2             (F$DCB.ALTKEYX > 0 AND F$DCB.ORG ~= %KEYED#) OR
     3702    10375    2             FM$GRAN.FLINK ~= 0 THEN
     3703    10376    2             RETURN;

  10376  1 012606   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 012607   000001 702211                    TSX2  ! 1,X1

     3704    10377
     3705    10378    2          IF FM$CFU.UGRANS ~= 2 THEN

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:703  
  10378  1 012610   100004 236100                    LDQ     4,,PR1
         1 012611   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 012612   000002 116007                    CMPQ    2,DL
         1 012613   012623 600000 1                  TZE     s:10383

     3706    10379    2             IF FM$CFU.UGRANS=1 AND FM$CFU.GDA=0 THEN

  10379  1 012614   000001 116007                    CMPQ    1,DL
         1 012615   012621 601000 1                  TNZ     s:10381
         1 012616   100005 236100                    LDQ     5,,PR1
         1 012617   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 012620   012776 600000 1                  TZE     ONE_GRAN

     3707    10380    2                GOTO ONE_GRAN; /* It was 'squeezed' in DELEND already */
     3708    10381    2             ELSE RETURN;

  10381  1 012621   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 012622   000001 702211                    TSX2  ! 1,X1

     3709    10382
     3710    10383    2          F$DCB.LVL=7;

  10383  1 012623   070000 236003                    LDQ     28672,DU
         1 012624   000067 256100                    ORSQ    55,,PR0

     3711    10384    2          F$DCB.GTYP=FMGTFILE;

  10384  1 012625   000064 236100                    LDQ     52,,PR0
         1 012626   000045 376000 2                  ANQ     37
         1 012627   030000 276003                    ORQ     12288,DU
         1 012630   000064 756100                    STQ     52,,PR0

     3712    10385    2          CALL FMD$REDBUF(DBUF$, 0, FM_FRZERO+1) ALTRET(NOSQZ);

  10385  1 012631   000000 235000 xsym               LDA     FM_FRZERO
         1 012632   000001 035007                    ADLA    1,DL
         1 012633   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:704  
         1 012634   200166 634500                    EPPR4   STEMP_FIELDIN+2,,AUTO
         1 012635   200171 454500                    STP4    STEMP_FIELDIN+5,,AUTO
         1 012636   000000 236000 2                  LDQ     0
         1 012637   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 012640   200040 635500                    EPPR5   DBUF$,,AUTO
         1 012641   200167 455500                    STP5    STEMP_FIELDIN+3,,AUTO
         1 012642   200167 630500                    EPPR0   STEMP_FIELDIN+3,,AUTO
         1 012643   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 012644   000000 701000 xent               TSX1    FMD$REDBUF
         1 012645   013006 702000 1                  TSX2    NOSQZ

     3713    10386
     3714    10387    2          MOVCNT=DBUF$->FM$GRAN.NAVX-2;

  10387  1 012646   200040 470500                    LDP0    DBUF$,,AUTO
         1 012647   000001 236100                    LDQ     1,,PR0
         1 012650   000022 772000                    QRL     18
         1 012651   000002 136007                    SBLQ    2,DL
         1 012652   200077 756100                    STQ     MOVCNT,,AUTO

     3715    10388    2          IF MOVCNT > FM$GRAN.AVAIL THEN

  10388  1 012653   200024 471500                    LDP1    BUF$,,AUTO
         1 012654   100001 236100                    LDQ     1,,PR1
         1 012655   001777 376007                    ANQ     1023,DL
         1 012656   200077 116100                    CMPQ    MOVCNT,,AUTO
         1 012657   013006 604000 1                  TMI     NOSQZ

     3716    10389    2             GOTO NOSQZ;
     3717    10390
     3718    10391    2          P1$=PINCRW(BUF$, 1024-MOVCNT);

  10391  1 012660   002000 236007                    LDQ     1024,DL
         1 012661   200077 136100                    SBLQ    MOVCNT,,AUTO
         1 012662   000022 736000                    QLS     18
         1 012663   200024 036100                    ADLQ    BUF$,,AUTO
         1 012664   200101 756100                    STQ     P1$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:705  

     3719    10392    2          P2$=PINCRW(DBUF$, 2);

  10392  1 012665   200040 236100                    LDQ     DBUF$,,AUTO
         1 012666   000002 036003                    ADLQ    2,DU
         1 012667   200102 756100                    STQ     P2$,,AUTO

     3720    10393    2          SIZE=MOVCNT*4;

  10393  1 012670   200077 235100                    LDA     MOVCNT,,AUTO
         1 012671   000002 735000                    ALS     2
         1 012672   200103 755100                    STA     SIZE,,AUTO

     3721    10394    2          P1$->CHARS=P2$->CHARS;

  10394  1 012673   200102 473500                    LDP3    P2$,,AUTO
         1 012674   000000 620005                    EAX0    0,AL
         1 012675   200101 474500                    LDP4    P1$,,AUTO
         1 012676   200103 721100                    LXL1    SIZE,,AUTO
         1 012677   040140 100540                    MLR     fill='040'O
         1 012700   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 012701   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1

     3722    10395    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL-MOVCNT;

  10395  1 012702   200024 470500                    LDP0    BUF$,,AUTO
         1 012703   000001 236100                    LDQ     1,,PR0
         1 012704   001777 376007                    ANQ     1023,DL
         1 012705   200077 136100                    SBLQ    MOVCNT,,AUTO
         1 012706   000001 676100                    ERQ     1,,PR0
         1 012707   001777 376007                    ANQ     1023,DL
         1 012710   000001 656100                    ERSQ    1,,PR0

     3723    10396
     3724    10397    2          J=POFFW(P1$, BUF$)-2;

  10397  1 012711   200024 235100                    LDA     BUF$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:706  
         1 012712   000022 771000                    ARL     18
         1 012713   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 012714   200101 236100                    LDQ     P1$,,AUTO
         1 012715   000022 772000                    QRL     18
         1 012716   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 012717   000002 136007                    SBLQ    2,DL
         1 012720   200100 756100                    STQ     J,,AUTO

     3725    10398    2          F$DCB.RPOS='0'B;

  10398  1 012721   200007 470500                    LDP0    JDCB$,,AUTO
         1 012722   000005 236000 2                  LDQ     5
         1 012723   000064 356100                    ANSQ    52,,PR0

     3726    10399    2          CRECX=0;

  10399  1 012724   200015 450100                    STZ     CRECX,,AUTO

     3727    10400
     3728    10401    3          DO WHILE('1'B);

     3729    10402    3             CALL NXTKEYNM ALTRET(DONE);

  10402  1 012725   015110 701000 1                  TSX1    NXTKEYNM
         1 012726   012761 702000 1                  TSX2    DONE

     3730    10403    4             DO WHILE (SEG$ ~= ADDR(NIL));

  10403  1 012727   012755 710000 1                  TRA     s:10410

     3731    10404    4                IF FM$MISEG.GDA = FM_FRZERO+1 THEN

  10404  1 012730   000000 235000 xsym               LDA     FM_FRZERO
         1 012731   000001 035007                    ADLA    1,DL
         1 012732   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 012733   200014 470500                    LDP0    SEG$,,AUTO
         1 012734   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:707  
         1 012735   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 012736   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 012737   012753 601000 1                  TNZ     s:10409

     3732    10405    5                   DO;   /* ADJUST MISEG */

     3733    10406    5                   FM$MISEG.GDA=FM_FRZERO;

  10406  1 012740   000000 236000 xsym               LDQ     FM_FRZERO
         1 012741   000001 552134                    STBQ    1,'34'O,PR0

     3734    10407    5                   FM$MISEG.GX=FM$MISEG.GX+J;

  10407  1 012742   200014 470500                    LDP0    SEG$,,AUTO
         1 012743   000000 236100                    LDQ     0,,PR0
         1 012744   000014 772000                    QRL     12
         1 012745   001777 376007                    ANQ     1023,DL
         1 012746   200100 036100                    ADLQ    J,,AUTO
         1 012747   000014 736000                    QLS     12
         1 012750   000000 676100                    ERQ     0,,PR0
         1 012751   000004 376000 2                  ANQ     4
         1 012752   000000 656100                    ERSQ    0,,PR0

     3735    10408    5                   END;  /* ADJUST MISEG */

     3736    10409    4                CALL NXTSEG ALTRET(NOSQZ);

  10409  1 012753   015351 701000 1                  TSX1    NXTSEG
         1 012754   013006 702000 1                  TSX2    NOSQZ

     3737    10410    4             END;  /* WHILE */

  10410  1 012755   200014 236100                    LDQ     SEG$,,AUTO
         1 012756   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 012757   012730 601000 1                  TNZ     s:10404

     3738    10411    3          END;  /* FOREVER */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:708  

  10411  1 012760   012725 710000 1                  TRA     s:10402

     3739    10412
     3740    10413    2   DONE:  F$DCB.BFR.BUFUP(1)='1'B;

  10413  1 012761   200007 470500       DONE         LDP0    JDCB$,,AUTO
         1 012762   400000 236003                    LDQ     -131072,DU
         1 012763   000116 256100                    ORSQ    78,,PR0

     3741    10414    2          FM$CFU.UGRANS=1;

  10414  1 012764   200010 471500                    LDP1    CFU$,,AUTO
         1 012765   000001 236007                    LDQ     1,DL
         1 012766   100004 552134                    STBQ    4,'34'O,PR1

     3742    10415    2          FM$CFU.NGAVAL=FM$CFU.NGAVAL+1;

  10415  1 012767   100007 236100                    LDQ     7,,PR1
         1 012770   000001 036007                    ADLQ    1,DL
         1 012771   100007 552134                    STBQ    7,'34'O,PR1

     3743    10416    2          CALL FMD$RELBUF(0);

  10416  1 012772   000000 630400 2                  EPPR0   0
         1 012773   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 012774   000000 701000 xent               TSX1    FMD$RELBUF
         1 012775   000000 011000                    NOP     0

  10415  1 012776                       ONE_GRAN     null
     3744    10417    2   ONE_GRAN:;
     3745    10418    2          FM$CFU.GDA=1;

  10418  1 012776   200010 470500                    LDP0    CFU$,,AUTO
         1 012777   000001 236007                    LDQ     1,DL
         1 013000   000005 552134                    STBQ    5,'34'O,PR0

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:709  
     3746    10419    2          FPTCODE=1;

  10419  1 013001   000001 235007                    LDA     1,DL
         1 013002   200003 471500                    LDP1    @PSEG$,,AUTO
         1 013003   100000 755100                    STA     0,,PR1

     3747    10420    2          RETURN;

  10420  1 013004   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 013005   000001 702211                    TSX2  ! 1,X1

     3748    10421
     3749    10422    2   NOSQZ: CALL FMD$FLSHBUF(0);

  10422  1 013006   000000 630400 2     NOSQZ        EPPR0   0
         1 013007   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 013010   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 013011   000000 011000                    NOP     0

     3750    10423    2          RETURN;

  10423  1 013012   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 013013   000001 702211                    TSX2  ! 1,X1

     3751    10424    2          END KEYSQZ;
     3752    10425               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:710  
     3753    10426        /*I*     NAME:     KINIT
     3754    10427                 PURPOSE:  To handle general initialization
     3755    10428                 DESCRIPTION:
     3756    10429                      First set up some local variables for faster access.  Next,
     3757    10430                 if this file has alternate indexes, then initialize the index.
     3758    10431
     3759    10432                      Set up any pointers to irel stuff.  SAVE_INDEX# is
     3760    10433                 used for restoring the index from operations that inherently
     3761    10434                 change the index.
     3762    10435        */
     3763    10436                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:711  
     3764    10437    1   KINIT: PROC ALTRET;

  10437  1 013014   200076 741300       KINIT        STX1  ! DELALL_FAST+2,,AUTO

     3765    10438        /* */
     3766    10439    2          JDCB$=B$JIT.DCB$;

  10439  1 013015   000000 470400 xsym               LDP0    B$JIT$
         1 013016   000232 236100                    LDQ     154,,PR0
         1 013017   200007 756100                    STQ     JDCB$,,AUTO

     3767    10440    2          CFU$=F$DCB.CFU$;

  10440  1 013020   200007 471500                    LDP1    JDCB$,,AUTO
         1 013021   100066 236100                    LDQ     54,,PR1
         1 013022   200010 756100                    STQ     CFU$,,AUTO

     3768    10441    2          ORG=F$DCB.ORG;

  10441  1 013023   100032 236100                    LDQ     26,,PR1
         1 013024   000033 772000                    QRL     27
         1 013025   200022 756100                    STQ     ORG,,AUTO

     3769    10442    2          EOP=F$DCB.EOP;

  10442  1 013026   100064 236100                    LDQ     52,,PR1
         1 013027   000033 772000                    QRL     27
         1 013030   000003 376007                    ANQ     3,DL
         1 013031   200036 756100                    STQ     EOP,,AUTO

     3770    10443    2          ANEWSEG=%NOO;

  10443  1 013032   200057 450100                    STZ     ANEWSEG,,AUTO

     3771    10444    2          SEG$=ADDR(NIL);

  10444  1 013033   000001 236000 xsym               LDQ     B_VECTNIL+1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:712  
         1 013034   200014 756100                    STQ     SEG$,,AUTO

     3772    10445
     3773    10446    2          IF F$DCB.ALTKEYX > 0 AND F$DCB.ORG ~= %KEYED# THEN

  10446  1 013035   100052 720100                    LXL0    42,,PR1
         1 013036   013112 600000 1                  TZE     s:10469
         1 013037   100032 236100                    LDQ     26,,PR1
         1 013040   777000 376003                    ANQ     -512,DU
         1 013041   002000 116003                    CMPQ    1024,DU
         1 013042   013112 600000 1                  TZE     s:10469

     3774    10447    3             DO;   /* ALTERNATE KEYS */

     3775    10448    4             DO CASE(FPTCODE);

  10448  1 013043   200003 473500                    LDP3    @PSEG$,,AUTO
         1 013044   300000 235100                    LDA     0,,PR3
         1 013045   000011 115007                    CMPA    9,DL
         1 013046   013050 602005 1                  TNC     s:10448+5,AL
         1 013047   013107 710000 1                  TRA     s:10465
         1 013050   013061 710000 1                  TRA     s:10450
         1 013051   013105 710000 1                  TRA     s:10462
         1 013052   013100 710000 1                  TRA     s:10459
         1 013053   013073 710000 1                  TRA     s:10456
         1 013054   013066 710000 1                  TRA     s:10453
         1 013055   013107 710000 1                  TRA     s:10465
         1 013056   013066 710000 1                  TRA     s:10453
         1 013057   013107 710000 1                  TRA     s:10465
         1 013060   013105 710000 1                  TRA     s:10462

     3776    10449    4                CASE(FPTREAD);

     3777    10450    4                   INDEX#=FPT$READ_V.INDX;

  10450  1 013061   000000 474400 xsym               LDP4    B$PS0$
         1 013062   400000 236100                    LDQ     0,,PR4
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:713  
         1 013063   000777 376007                    ANQ     511,DL
         1 013064   200011 756100                    STQ     INDEX#,,AUTO
         1 013065   013107 710000 1                  TRA     s:10465

     3778    10451
     3779    10452    4                CASE(FPTPFIL, FPTREW);

     3780    10453    4                   INDEX#=FPT$PFIL_V.INDX;

  10453  1 013066   000000 474400 xsym               LDP4    B$PS0$
         1 013067   400000 236100                    LDQ     0,,PR4
         1 013070   000777 376007                    ANQ     511,DL
         1 013071   200011 756100                    STQ     INDEX#,,AUTO
         1 013072   013107 710000 1                  TRA     s:10465

     3781    10454
     3782    10455    4                CASE(FPTPREC);

     3783    10456    4                   INDEX#=FPT$PRECORD_V.INDX;

  10456  1 013073   000000 474400 xsym               LDP4    B$PS0$
         1 013074   400000 236100                    LDQ     0,,PR4
         1 013075   000777 376007                    ANQ     511,DL
         1 013076   200011 756100                    STQ     INDEX#,,AUTO
         1 013077   013107 710000 1                  TRA     s:10465

     3784    10457
     3785    10458    4                CASE(FPTDELREC);

     3786    10459    4                   INDEX#=FPT$DELREC_V.INDX;

  10459  1 013100   000000 474400 xsym               LDP4    B$PS0$
         1 013101   400000 236100                    LDQ     0,,PR4
         1 013102   000777 376007                    ANQ     511,DL
         1 013103   200011 756100                    STQ     INDEX#,,AUTO
         1 013104   013107 710000 1                  TRA     s:10465

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:714  
     3787    10460
     3788    10461    4                CASE(FPTWRITE, FPTPFILEOF);

     3789    10462    4                   INDEX#=1;

  10462  1 013105   000001 235007                    LDA     1,DL
         1 013106   200011 755100                    STA     INDEX#,,AUTO

     3790    10463    4             END;  /* DO CASE */

     3791    10464
     3792    10465    3             CALL SETINDEX ALTRET(ERR);

  10465  1 013107   021667 701000 1                  TSX1    SETINDEX
         1 013110   013151 702000 1                  TSX2    ERR

     3793    10466    3             END;  /* ALTERNATE KEYS */

  10466  1 013111   013115 710000 1                  TRA     s:10473

     3794    10467    2          ELSE
     3795    10468    3             DO;   /* NO ALTERNATE KEYS */

     3796    10469    3             ALTKEY$=ADDR(NIL);

  10469  1 013112   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 013113   200023 756100                    STQ     ALTKEY$,,AUTO

     3797    10470    3             INDEX#=0;

  10470  1 013114   200011 450100                    STZ     INDEX#,,AUTO

     3798    10471    3             END;  /* NO ALTERNATE KEYS */

     3799    10472
     3800    10473    2          IF F$DCB.KFIELDX > 0 THEN

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:715  
  10473  1 013115   200007 470500                    LDP0    JDCB$,,AUTO
         1 013116   000056 720100                    LXL0    46,,PR0
         1 013117   013124 600000 1                  TZE     s:10476

     3801    10474    2             KFIELD$=PINCRW(B$ROSEG$, F$DCB.KFIELDX);

  10474  1 013120   000000 636010                    EAQ     0,X0
         1 013121   000000 036000 xsym               ADLQ    B$ROSEG$
         1 013122   200067 756100                    STQ     KFIELD$,,AUTO
         1 013123   013126 710000 1                  TRA     s:10478

     3802    10475    2          ELSE
     3803    10476    2             KFIELD$=ADDR(NIL);

  10476  1 013124   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 013125   200067 756100                    STQ     KFIELD$,,AUTO

     3804    10477
     3805    10478    3          IF ORG=%IREL# THEN DO;

  10478  1 013126   200022 235100                    LDA     ORG,,AUTO
         1 013127   000015 115007                    CMPA    13,DL
         1 013130   013142 601000 1                  TNZ     s:10483

     3806    10479    3             RECFIELD$=PINCRW(B$ROSEG$, F$DCB.FIELDX);

  10479  1 013131   000054 721100                    LXL1    44,,PR0
         1 013132   000000 636011                    EAQ     0,X1
         1 013133   000000 036000 xsym               ADLQ    B$ROSEG$
         1 013134   200065 756100                    STQ     RECFIELD$,,AUTO

     3807    10480    3             START$=PINCRW(B$ROSEG$, F$DCB.STARTX);

  10480  1 013135   000057 222100                    LDX2    47,,PR0
         1 013136   000000 636012                    EAQ     0,X2
         1 013137   000000 036000 xsym               ADLQ    B$ROSEG$
         1 013140   200066 756100                    STQ     START$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:716  

     3808    10481    3             END;

  10481  1 013141   013145 710000 1                  TRA     s:10487

     3809    10482    3          ELSE DO;

     3810    10483    3             RECFIELD$=ADDR(NIL);

  10483  1 013142   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 013143   200065 756100                    STQ     RECFIELD$,,AUTO

     3811    10484    3             START$=ADDR(NIL);

  10484  1 013144   200066 756100                    STQ     START$,,AUTO

     3812    10485    3             END;

     3813    10486
     3814    10487    2          SAVE_INDEX#=INDEX#;

  10487  1 013145   200011 235100                    LDA     INDEX#,,AUTO
         1 013146   200012 755100                    STA     SAVE_INDEX#,,AUTO

     3815    10488    2          RETURN;

  10488  1 013147   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 013150   000001 702211                    TSX2  ! 1,X1

     3816    10489    2   ERR:   ALTRETURN;

  10489  1 013151   200076 221300       ERR          LDX1  ! DELALL_FAST+2,,AUTO
         1 013152   000000 702211                    TSX2  ! 0,X1

     3817    10490    2          END KINIT;
     3818    10491               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:717  
     3819    10492        /*I*     NAME:     MAKE_SPACE
     3820    10493                 PURPOSE:  To make sure there is enough space to insert a key
     3821    10494                           or segments
     3822    10495                 DESCRIPTION:
     3823    10496                      This routine freely juggles keys around to make enough
     3824    10497                 space in buffer 1 for the key or segments that need to be
     3825    10498                 added.
     3826    10499
     3827    10500                      Loop through the list of keys in the granule, starting
     3828    10501                 at the last key and moving backwards until we have enough
     3829    10502                 room.  We don't actually take the first chance, we try to
     3830    10503                 more or less optimize the move to equalize the amount of
     3831    10504                 space in buffers 1 and 3.  If the amount of space in the
     3832    10505                 flink is only about 3 times the amount of space we need,
     3833    10506                 then we won't be able to balance things very well.
     3834    10507
     3835    10508                      If the amount of space to move ended up being 0, and we
     3836    10509                 aren't trying to insert into the middle of a segment list
     3837    10510                 (ANEWSEG ~= %YESS) then the key table is probably screwed up.
     3838    10511                 In this case, we want to log an error and altreturn.  For
     3839    10512                 instance, if we're adding a new segment at the end of a list
     3840    10513                 of segments (ANEWSEG=%NOO), then we're either inserting at
     3841    10514                 the end of the granule and MAKE_SPACE isn't called or we're
     3842    10515                 inserting in the middle and there should be at least one
     3843    10516                 subsequent key on the current granule (CRECX < KEYCNT).  But
     3844    10517                 if ANEWSEG=%YESS, then we're inserting in the middle of a
     3845    10518                 list of duplicates for an alternate key and there might not
     3846    10519                 be another key for miles to come.  So, it's OK if the amount
     3847    10520                 of space is 0 at this point.  In this case we'll move
     3848    10521                 all the subsequent segments on this granule to another
     3849    10522                 granule in order to make enough room.
     3850    10523
     3851    10524                      If we don't have enough space, then check again.  We
     3852    10525                 may be able to make a move that is not so optimal.  If that
     3853    10526                 doesn't work, then see if everything will fit in buffer 3.
     3854    10527                 If all else fails, build another link.
     3855    10528        */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:718  
     3856    10529                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:719  
     3857    10530    1   MAKE_SPACE: PROC ALTRET;

  10530  1 013153   200130 741300       MAKE_SPACE   STX1  ! I+1,,AUTO

     3858    10531    2          DCL TCRECX UBIN;
     3859    10532        /* */
     3860    10533    2          MOVECNT=0;

  10533  1 013154   200055 450100                    STZ     MOVECNT,,AUTO

     3861    10534    2          IF ADDFLG = %KEY THEN

  10534  1 013155   200047 235100                    LDA     ADDFLG,,AUTO
         1 013156   013162 601000 1                  TNZ     s:10537

     3862    10535    2             TCRECX=CRECX;

  10535  1 013157   200015 236100                    LDQ     CRECX,,AUTO
         1 013160   200131 756100                    STQ     TCRECX,,AUTO
         1 013161   013165 710000 1                  TRA     s:10539

     3863    10536    2          ELSE
     3864    10537    2             TCRECX=CRECX+1;

  10537  1 013162   200015 236100                    LDQ     CRECX,,AUTO
         1 013163   000001 036007                    ADLQ    1,DL
         1 013164   200131 756100                    STQ     TCRECX,,AUTO

     3865    10538
     3866    10539    2          ENUF=%NOO;

  10539  1 013165   200051 450100                    STZ     ENUF,,AUTO

     3867    10540    2          INDX=KEYCNT+1;

  10540  1 013166   200017 235100                    LDA     KEYCNT,,AUTO
         1 013167   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:720  
         1 013170   200054 755100                    STA     INDX,,AUTO

     3868    10541    3          DO WHILE (ENUF = %NOO AND INDX > TCRECX);

  10541  1 013171   013264 710000 1                  TRA     s:10555

     3869    10542    3             INDX=INDX-1;

  10542  1 013172   000001 336007                    LCQ     1,DL
         1 013173   200054 056100                    ASQ     INDX,,AUTO

     3870    10543    3             IF INDX < BOUND THEN

  10543  1 013174   200054 236100                    LDQ     INDX,,AUTO
         1 013175   200016 116100                    CMPQ    BOUND,,AUTO
         1 013176   013211 605000 1                  TPL     s:10546

     3871    10544    3                MOVECNT=FM$GRAN.NAVX-FM$KEYTBL(INDX);

  10544  1 013177   200025 470500                    LDP0    KTPTR$,,AUTO
         1 013200   000100 101506                    MRL     fill='000'O
         1 013201   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 013202   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 013203   200024 471500                    LDP1    BUF$,,AUTO
         1 013204   100001 236100                    LDQ     1,,PR1
         1 013205   000022 772000                    QRL     18
         1 013206   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 013207   200055 756100                    STQ     MOVECNT,,AUTO
         1 013210   013223 710000 1                  TRA     s:10548

     3872    10545    3             ELSE
     3873    10546    3                MOVECNT=FM$GRAN.NAVX-FM$KEYTBL(INDX)-512;

  10546  1 013211   200025 470500                    LDP0    KTPTR$,,AUTO
         1 013212   000100 101506                    MRL     fill='000'O
         1 013213   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 013214   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:721  
         1 013215   200024 471500                    LDP1    BUF$,,AUTO
         1 013216   100001 236100                    LDQ     1,,PR1
         1 013217   000022 772000                    QRL     18
         1 013220   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 013221   001000 136007                    SBLQ    512,DL
         1 013222   200055 756100                    STQ     MOVECNT,,AUTO

     3874    10547
     3875    10548    3             IF MOVECNT+FM$GRAN.AVAIL >= TOTSIZE THEN

  10548  1 013223   100001 236100                    LDQ     1,,PR1
         1 013224   001777 376007                    ANQ     1023,DL
         1 013225   200055 036100                    ADLQ    MOVECNT,,AUTO
         1 013226   013264 604000 1                  TMI     s:10555
         1 013227   200045 116100                    CMPQ    TOTSIZE,,AUTO
         1 013230   013264 602000 1                  TNC     s:10555

     3876    10549    3                IF ORG = 0 OR

  10549  1 013231   200022 235100                    LDA     ORG,,AUTO
         1 013232   013250 600000 1                  TZE     s:10551
         1 013233   200050 473500                    LDP3    BUF3$,,AUTO
         1 013234   300001 236100                    LDQ     1,,PR3
         1 013235   001777 376007                    ANQ     1023,DL
         1 013236   200045 036100                    ADLQ    TOTSIZE,,AUTO
         1 013237   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 013240   100001 236100                    LDQ     1,,PR1
         1 013241   001777 376007                    ANQ     1023,DL
         1 013242   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 013243   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 013244   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 013245   000002 506007                    DIV     2,DL
         1 013246   200055 116100                    CMPQ    MOVECNT,,AUTO
         1 013247   013253 605400 1                  TPNZ    s:10553

     3877    10550    3                   (MOVECNT >= (FM$GRAN3.AVAIL+TOTSIZE-FM$GRAN.AVAIL)/2) THEN
     3878    10551    3                   ENUF=%YESS;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:722  

  10551  1 013250   000001 235007                    LDA     1,DL
         1 013251   200051 755100                    STA     ENUF,,AUTO
         1 013252   013264 710000 1                  TRA     s:10555

     3879    10552    3                ELSE
     3880    10553    3                   IF FM$GRAN3.AVAIL < TOTSIZE*3 THEN

  10553  1 013253   200045 236100                    LDQ     TOTSIZE,,AUTO
         1 013254   000003 402007                    MPY     3,DL
         1 013255   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 013256   300001 236100                    LDQ     1,,PR3
         1 013257   001777 376007                    ANQ     1023,DL
         1 013260   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 013261   013264 603000 1                  TRC     s:10555

     3881    10554    3                      ENUF=%YESS;

  10554  1 013262   000001 235007                    LDA     1,DL
         1 013263   200051 755100                    STA     ENUF,,AUTO

     3882    10555    3          END;  /* WHILE */

  10555  1 013264   200051 235100                    LDA     ENUF,,AUTO
         1 013265   013272 601000 1                  TNZ     s:10557
         1 013266   200131 236100                    LDQ     TCRECX,,AUTO
         1 013267   013272 604000 1                  TMI     s:10557
         1 013270   200054 116100                    CMPQ    INDX,,AUTO
         1 013271   013172 604000 1                  TMI     s:10542

     3883    10556
     3884    10557    2          IF MOVECNT = 0 THEN

  10557  1 013272   200055 236100                    LDQ     MOVECNT,,AUTO
         1 013273   013342 601000 1                  TNZ     s:10574

     3885    10558    2             IF ANEWSEG ~= %YESS THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:723  

  10558  1 013274   200057 235100                    LDA     ANEWSEG,,AUTO
         1 013275   000001 115007                    CMPA    1,DL
         1 013276   013326 600000 1                  TZE     s:10571

     3886    10559    3                DO;   /* ERROR */

     3887    10560    3                B$JIT.ERR=ERRFREC;

  10560  1 013277   000004 236000 0                  LDQ     ERRFREC
         1 013300   000000 470400 xsym               LDP0    B$JIT$
         1 013301   000012 756100                    STQ     10,,PR0

     3888    10561        /*E*   ERROR:      FMG-E$FREC-2
     3889    10562               MESSAGE:    Inconsistency in record pointers% in file %FN%
     3890    10563               DESCRIPTION:
     3891    10564                  The current record is inaccessible
     3892    10565        */
     3893    10566    3                CALL FMB$LOGERR(%E$FREC, 12, 8, DA, BUF$, 0, 1, 2, INDX);

  10566  1 013302   200054 631500                    EPPR1   INDX,,AUTO
         1 013303   200176 451500                    STP1    STEMP_FIELDIN+10,,AUTO
         1 013304   000070 237000 2                  LDAQ    56
         1 013305   200174 757100                    STAQ    STEMP_FIELDIN+8,,AUTO
         1 013306   000000 236000 2                  LDQ     0
         1 013307   200173 756100                    STQ     STEMP_FIELDIN+7,,AUTO
         1 013310   200024 633500                    EPPR3   BUF$,,AUTO
         1 013311   200172 453500                    STP3    STEMP_FIELDIN+6,,AUTO
         1 013312   200021 634500                    EPPR4   DA,,AUTO
         1 013313   200171 454500                    STP4    STEMP_FIELDIN+5,,AUTO
         1 013314   000023 236000 2                  LDQ     19
         1 013315   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 013316   000072 237000 2                  LDAQ    58
         1 013317   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 013320   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 013321   000021 631400 2                  EPPR1   17
         1 013322   000000 701000 xent               TSX1    FMB$LOGERR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:724  
         1 013323   000000 011000                    NOP     0

     3894    10567    3                ALTRETURN;

  10567  1 013324   200130 221300                    LDX1  ! I+1,,AUTO
         1 013325   000000 702211                    TSX2  ! 0,X1

     3895    10568    3                END;  /* ERROR */
     3896    10569    2             ELSE
     3897    10570    3                DO;   /* NEED TO MOVE MIDDLE OF KEY */

     3898    10571    3                MOVECNT=FM$GRAN.NAVX-POFFW(SEG$, BUF$);

  10571  1 013326   200024 235100                    LDA     BUF$,,AUTO
         1 013327   000022 771000                    ARL     18
         1 013330   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 013331   200014 236100                    LDQ     SEG$,,AUTO
         1 013332   000022 772000                    QRL     18
         1 013333   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 013334   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 013335   200024 470500                    LDP0    BUF$,,AUTO
         1 013336   000001 236100                    LDQ     1,,PR0
         1 013337   000022 772000                    QRL     18
         1 013340   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 013341   200055 756100                    STQ     MOVECNT,,AUTO

     3899    10572    3                END;  /* NEED TO MOVE MIDDLE OF KEY */

     3900    10573
     3901    10574    2          IF ENUF = %NOO THEN

  10574  1 013342   200051 235100                    LDA     ENUF,,AUTO
         1 013343   013377 601000 1                  TNZ     s:10589

     3902    10575    3             DO;   /* MAYBE ENUF */

     3903    10576    3             INDX=TCRECX;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:725  

  10576  1 013344   200131 235100                    LDA     TCRECX,,AUTO
         1 013345   200054 755100                    STA     INDX,,AUTO

     3904    10577    3             IF MOVECNT+FM$GRAN.AVAIL >= TOTSIZE THEN

  10577  1 013346   200024 470500                    LDP0    BUF$,,AUTO
         1 013347   000001 236100                    LDQ     1,,PR0
         1 013350   001777 376007                    ANQ     1023,DL
         1 013351   200055 036100                    ADLQ    MOVECNT,,AUTO
         1 013352   013360 604000 1                  TMI     s:10581
         1 013353   200045 116100                    CMPQ    TOTSIZE,,AUTO
         1 013354   013360 602000 1                  TNC     s:10581

     3905    10578    3                CALL MOVETOB3 ALTRET(ERR);

  10578  1 013355   013664 701000 1                  TSX1    MOVETOB3
         1 013356   013403 702000 1                  TSX2    ERR
         1 013357   013401 710000 1                  TRA     s:10592

     3906    10579    3             ELSE
     3907    10580    4                DO;   /* ENUF IN BUFFER 3 */

     3908    10581    4                IF TOTSIZE+MOVECNT > FM$GRAN3.AVAIL THEN

  10581  1 013360   200045 236100                    LDQ     TOTSIZE,,AUTO
         1 013361   200055 036100                    ADLQ    MOVECNT,,AUTO
         1 013362   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 013363   200050 471500                    LDP1    BUF3$,,AUTO
         1 013364   100001 236100                    LDQ     1,,PR1
         1 013365   001777 376007                    ANQ     1023,DL
         1 013366   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 013367   013372 605000 1                  TPL     s:10583

     3909    10582    4                   CALL BLDFLINK ALTRET(ERR);

  10582  1 013370   001406 701000 1                  TSX1    BLDFLINK
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:726  
         1 013371   013403 702000 1                  TSX2    ERR

     3910    10583    4                CALL MOVETOB3 ALTRET(ERR);

  10583  1 013372   013664 701000 1                  TSX1    MOVETOB3
         1 013373   013403 702000 1                  TSX2    ERR

     3911    10584    4                CALL SWITCH1_3;

  10584  1 013374   024335 701000 1                  TSX1    SWITCH1_3
         1 013375   000000 011000                    NOP     0

     3912    10585    4                END;  /* ENUF IN BUFFER 3 */

     3913    10586    3             END;  /* MAYBE ENUF */

  10586  1 013376   013401 710000 1                  TRA     s:10592

     3914    10587    2          ELSE
     3915    10588    3             DO;   /* MOVE IT */

     3916    10589    3             CALL MOVETOB3 ALTRET(ERR);

  10589  1 013377   013664 701000 1                  TSX1    MOVETOB3
         1 013400   013403 702000 1                  TSX2    ERR

     3917    10590    3             END;  /* MOVE IT */

     3918    10591
     3919    10592    2          RETURN;

  10592  1 013401   200130 221300                    LDX1  ! I+1,,AUTO
         1 013402   000001 702211                    TSX2  ! 1,X1

     3920    10593    2   ERR:   ALTRETURN;

  10593  1 013403   200130 221300       ERR          LDX1  ! I+1,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:727  
         1 013404   000000 702211                    TSX2  ! 0,X1

     3921    10594    2          END MAKE_SPACE;
     3922    10595               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:728  
     3923    10596        /*I*     NAME:     MOVEN
     3924    10597                 PURPOSE:  To move N records for M$PRECORD
     3925    10598                 DESCRIPTION:
     3926    10599                      If the user specified positive N, then just keep moving
     3927    10600                 forward until we run out of N, or records, whichever comes
     3928    10601                 first.  F$DCB.ARS specifies how many records we moved.
     3929    10602
     3930    10603                      If N was negative, then first make sure we are pointing
     3931    10604                 to the beginning of the current record.  If the current record
     3932    10605                 is deleted, then this doesn't count as a record.  Otherwise,
     3933    10606                 keep moving backwards until we are done.
     3934    10607
     3935    10608                      If we hit EOF, then it really doesn't count as an error
     3936    10609                 if this was our last move.  We will now be positioned such
     3937    10610                 that our next read will return EOF to the user.
     3938    10611
     3939    10612                      If we hit BOF, and the user asked for the key back, then
     3940    10613                 we will try to give him the first key.
     3941    10614
     3942    10615                      If the user hits break and the pmme break option is set,
     3943    10616                 stop positioning at whatever record we're currently
     3944    10617                 positioned to and altreturn.
     3945    10618        */
     3946    10619                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:729  
     3947    10620    1   MOVEN: PROC ALTRET;

  10620  1 013405   200102 741300       MOVEN        STX1  ! P2$,,AUTO

     3948    10621    2          DCL N SBIN;
     3949    10622    2          DCL ERRTMP UBIN;
     3950    10623        /* */
     3951    10624    2          IF NOT FPT$PRECORD_V.IDS AND NOT FPT$PRECORD_V.KEYS AND

  10624  1 013406   000000 470400 xsym               LDP0    B$PS0$
         1 013407   000000 236100                    LDQ     0,,PR0
         1 013410   040000 316007                    CANQ    16384,DL
         1 013411   013422 601000 1                  TNZ     s:10628
         1 013412   400000 316007                    CANQ    -131072,DL
         1 013413   013422 601000 1                  TNZ     s:10628
         1 013414   020000 316007                    CANQ    8192,DL
         1 013415   013422 601000 1                  TNZ     s:10628
         1 013416   010000 316007                    CANQ    4096,DL
         1 013417   013422 601000 1                  TNZ     s:10628

     3952    10625    2             NOT FPT$PRECORD_V.BOF AND NOT FPT$PRECORD_V.EOF THEN
     3953    10626    2             CALL SHAREPOS ALTRET(ERR);

  10626  1 013420   023077 701000 1                  TSX1    SHAREPOS
         1 013421   013620 702000 1                  TSX2    ERR

     3954    10627
     3955    10628    2          N=FPT$PRECORD_V.N;

  10628  1 013422   000000 470400 xsym               LDP0    B$PS0$
         1 013423   000001 235100                    LDA     1,,PR0
         1 013424   200103 755100                    STA     N,,AUTO

     3956    10629
     3957    10630    2          IF N >= 0 THEN

  10630  1 013425   013461 604000 1                  TMI     s:10648
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:730  

     3958    10631    3             DO;   /* MOVE FORWARD */

     3959    10632    3             CALL NXTRECND ALTRET(EOF);

  10632  1 013426   015332 701000 1                  TSX1    NXTRECND
         1 013427   013533 702000 1                  TSX2    EOF

     3960    10633    4             DO WHILE (N > 0);

  10633  1 013430   200103 235100                    LDA     N,,AUTO
         1 013431   013526 604400 1                  TMOZ    s:10676

     3961    10634    4                F$DCB.ARS=F$DCB.ARS+1;

  10634  1 013432   200007 470500                    LDP0    JDCB$,,AUTO
         1 013433   000000 054100                    AOS     0,,PR0

     3962    10635    4                N=N-1;

  10635  1 013434   000001 336007                    LCQ     1,DL
         1 013435   200103 056100                    ASQ     N,,AUTO

     3963    10636    4                CALL NXTRECND ALTRET(EOF);

  10636  1 013436   015332 701000 1                  TSX1    NXTRECND
         1 013437   013533 702000 1                  TSX2    EOF

     3964    10637
     3965    10638    4                IF FPT$PRECORD_V.BRK AND

  10638  1 013440   000000 470400 xsym               LDP0    B$PS0$
         1 013441   000000 236100                    LDQ     0,,PR0
         1 013442   004000 316007                    CANQ    2048,DL
         1 013443   013456 600000 1                  TZE     s:10644
         1 013444   000003 236000 xsym               LDQ     B_VECTNIL+3
         1 013445   000027 676000 xsym               ERQ     B_VECTNIL+23
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:731  
         1 013446   000000 471400 xsym               LDP1    S$CU$
         1 013447   100001 376100                    ANQ     1,,PR1
         1 013450   013456 600000 1                  TZE     s:10644
         1 013451   000000 473400 xsym               LDP3    B_MPT
         1 013452   300010 236100                    LDQ     8,,PR3
         1 013453   000160 316007                    CANQ    112,DL
         1 013454   013456 600000 1                  TZE     s:10644

     3966    10639    4                   S$CU$->B$U.ASYNCH&(~%U_RESET) AND
     3967    10640    4                   B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
     3968    10641    5                   DO;   /* Got interrupted and OK to interrupt */

     3969    10642    5                   GOTO ERR_INT;

  10642  1 013455   013622 710000 1                  TRA     ERR_INT

     3970    10643    5                   END;  /* Got interrupted and OK to interrupt */
     3971    10644    4             END;  /* WHILE */

  10644  1 013456   200103 235100                    LDA     N,,AUTO
         1 013457   013432 605400 1                  TPNZ    s:10634

     3972    10645    3             END;  /* MOVE FORWARD */

  10645  1 013460   013526 710000 1                  TRA     s:10676

     3973    10646    2          ELSE
     3974    10647    3             DO;   /* MOVE BACKWARD */

     3975    10648    3             CALL CURREC ALTRET(BOF);

  10648  1 013461   005131 701000 1                  TSX1    CURREC
         1 013462   013554 702000 1                  TSX2    BOF

     3976    10649    3             IF INDEX# = 0 THEN

  10649  1 013463   200011 235100                    LDA     INDEX#,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:732  
         1 013464   013474 601000 1                  TNZ     s:10659

     3977    10650    4                DO;   /* CHECK FOR DELETED KEY */

     3978    10651    4                IF NOT FM$KEYENT.D THEN

  10651  1 013465   200020 470500                    LDP0    KEY$,,AUTO
         1 013466   000000 234100                    SZN     0,,PR0
         1 013467   013477 604000 1                  TMI     s:10663

     3979    10652    5                   DO;   /* SKIP OVER DELETED KEY */

     3980    10653    5                   N=N+1;

  10653  1 013470   200103 054100                    AOS     N,,AUTO

     3981    10654    5                   F$DCB.ARS=F$DCB.ARS+1;

  10654  1 013471   200007 471500                    LDP1    JDCB$,,AUTO
         1 013472   100000 054100                    AOS     0,,PR1

     3982    10655    5                   END;  /* SKIP OVER DELETED KEY */

     3983    10656    4                END;  /* CHECK FOR DELETED KEY */

  10656  1 013473   013477 710000 1                  TRA     s:10663

     3984    10657    3             ELSE
     3985    10658    4                DO;   /* COUNT FIRST RECORD */

     3986    10659    4                N=N+1;

  10659  1 013474   200103 054100                    AOS     N,,AUTO

     3987    10660    4                F$DCB.ARS=F$DCB.ARS+1;

  10660  1 013475   200007 470500                    LDP0    JDCB$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:733  
         1 013476   000000 054100                    AOS     0,,PR0

     3988    10661    4                END;  /* COUNT FIRST RECORD */

     3989    10662
     3990    10663    4             DO WHILE (N < 0);

  10663  1 013477   200103 235100                    LDA     N,,AUTO
         1 013500   013526 605000 1                  TPL     s:10676

     3991    10664    4                CALL PREVRECND ALTRET(BOF);

  10664  1 013501   016350 701000 1                  TSX1    PREVRECND
         1 013502   013554 702000 1                  TSX2    BOF

     3992    10665    4                N=N+1;

  10665  1 013503   200103 054100                    AOS     N,,AUTO

     3993    10666    4                F$DCB.ARS=F$DCB.ARS+1;

  10666  1 013504   200007 470500                    LDP0    JDCB$,,AUTO
         1 013505   000000 054100                    AOS     0,,PR0

     3994    10667
     3995    10668    4                IF FPT$PRECORD_V.BRK AND

  10668  1 013506   000000 471400 xsym               LDP1    B$PS0$
         1 013507   100000 236100                    LDQ     0,,PR1
         1 013510   004000 316007                    CANQ    2048,DL
         1 013511   013524 600000 1                  TZE     s:10674
         1 013512   000003 236000 xsym               LDQ     B_VECTNIL+3
         1 013513   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 013514   000000 473400 xsym               LDP3    S$CU$
         1 013515   300001 376100                    ANQ     1,,PR3
         1 013516   013524 600000 1                  TZE     s:10674
         1 013517   000000 474400 xsym               LDP4    B_MPT
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:734  
         1 013520   400010 236100                    LDQ     8,,PR4
         1 013521   000160 316007                    CANQ    112,DL
         1 013522   013524 600000 1                  TZE     s:10674

     3996    10669    4                   S$CU$->B$U.ASYNCH&(~%U_RESET) AND
     3997    10670    4                   B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
     3998    10671    5                   DO;   /* Got interrupted and OK to interrupt */

     3999    10672    5                   GOTO ERR_INT;

  10672  1 013523   013622 710000 1                  TRA     ERR_INT

     4000    10673    5                   END;  /* Got interrupted and OK to interrupt */
     4001    10674    4             END;

  10674  1 013524   200103 235100                    LDA     N,,AUTO
         1 013525   013501 604000 1                  TMI     s:10664

     4002    10675    3             END;  /* MOVE BACKWARD */

     4003    10676    2          F$DCB.RPOS='1'B;

  10676  1 013526   200007 470500                    LDP0    JDCB$,,AUTO
         1 013527   010000 236007                    LDQ     4096,DL
         1 013530   000064 256100                    ORSQ    52,,PR0

     4004    10677
     4005    10678    2          RETURN;

  10678  1 013531   200102 221300                    LDX1  ! P2$,,AUTO
         1 013532   000001 702211                    TSX2  ! 1,X1

     4006    10679    2   EOF:   IF B$JIT.ERR.CODE ~= %E$EOF THEN

  10679  1 013533   000000 470400 xsym  EOF          LDP0    B$JIT$
         1 013534   000012 236100                    LDQ     10,,PR0
         1 013535   377770 376007                    ANQ     131064,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:735  
         1 013536   000060 116007                    CMPQ    48,DL
         1 013537   013542 600000 1                  TZE     s:10682

     4007    10680    2             ALTRETURN;

  10680  1 013540   200102 221300                    LDX1  ! P2$,,AUTO
         1 013541   000000 702211                    TSX2  ! 0,X1

     4008    10681
     4009    10682    2          IF N = 0 THEN

  10682  1 013542   200103 235100                    LDA     N,,AUTO
         1 013543   013552 601000 1                  TNZ     s:10690

     4010    10683    3             DO;   /* NO ERROR YET */

     4011    10684    3             B$JIT.ERR='0'B;

  10684  1 013544   000012 450100                    STZ     10,,PR0

     4012    10685    3             SEG$=ADDR(NIL);

  10685  1 013545   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 013546   200014 756100                    STQ     SEG$,,AUTO

     4013    10686    3             KEY$=ADDR(NIL);

  10686  1 013547   200020 756100                    STQ     KEY$,,AUTO

     4014    10687    3             RETURN;

  10687  1 013550   200102 221300                    LDX1  ! P2$,,AUTO
         1 013551   000001 702211                    TSX2  ! 1,X1

     4015    10688    3             END;  /* NO ERROR YET */
     4016    10689    2          ELSE
     4017    10690    2             ALTRETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:736  

  10690  1 013552   200102 221300                    LDX1  ! P2$,,AUTO
         1 013553   000000 702211                    TSX2  ! 0,X1

     4018    10691
     4019    10692    2   BOF:   IF B$JIT.ERR.CODE ~= %E$BOF THEN

  10692  1 013554   000000 470400 xsym  BOF          LDP0    B$JIT$
         1 013555   000012 236100                    LDQ     10,,PR0
         1 013556   377770 376007                    ANQ     131064,DL
         1 013557   000040 116007                    CMPQ    32,DL
         1 013560   013563 600000 1                  TZE     s:10695

     4020    10693    2             ALTRETURN;

  10693  1 013561   200102 221300                    LDX1  ! P2$,,AUTO
         1 013562   000000 702211                    TSX2  ! 0,X1

     4021    10694
     4022    10695    2          IF FPT$PRECORD_V.KEYR THEN

  10695  1 013563   000000 471400 xsym               LDP1    B$PS0$
         1 013564   100000 236100                    LDQ     0,,PR1
         1 013565   200000 316007                    CANQ    65536,DL
         1 013566   013620 600000 1                  TZE     ERR

     4023    10696    3             DO;   /* RETURN KEY */

     4024    10697    3             ERRTMP=BITBIN(B$JIT.ERR);

  10697  1 013567   000012 235100                    LDA     10,,PR0
         1 013570   200104 755100                    STA     ERRTMP,,AUTO

     4025    10698    3             CALL NXTRECND ALTRET(IGNORE);

  10698  1 013571   015332 701000 1                  TSX1    NXTRECND
         1 013572   013576 702000 1                  TSX2    IGNORE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:737  

     4026    10699    3             F$DCB.RPOS='1'B;

  10699  1 013573   200007 470500                    LDP0    JDCB$,,AUTO
         1 013574   010000 236007                    LDQ     4096,DL
         1 013575   000064 256100                    ORSQ    52,,PR0

  10699  1 013576                       IGNORE       null
     4027    10700    3   IGNORE: ;
     4028    10701    3             B$JIT.ERR=BINBIT(ERRTMP, 36);

  10701  1 013576   200104 236100                    LDQ     ERRTMP,,AUTO
         1 013577   000000 470400 xsym               LDP0    B$JIT$
         1 013600   000012 756100                    STQ     10,,PR0

     4029    10702    3             IF (KEY$ = ADDR(NIL) AND INDEX# = 0) OR

  10702  1 013601   200020 236100                    LDQ     KEY$,,AUTO
         1 013602   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 013603   013606 601000 1                  TNZ     s:10702+5
         1 013604   200011 235100                    LDA     INDEX#,,AUTO
         1 013605   013613 600000 1                  TZE     s:10704
         1 013606   200014 236100                    LDQ     SEG$,,AUTO
         1 013607   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 013610   013616 601000 1                  TNZ     s:10706
         1 013611   200011 235100                    LDA     INDEX#,,AUTO
         1 013612   013616 600000 1                  TZE     s:10706

     4030    10703    3                (SEG$ = ADDR(NIL) AND INDEX# > 0) THEN
     4031    10704    3                CALL ZAPKEY;

  10704  1 013613   026416 701000 1                  TSX1    ZAPKEY
         1 013614   000000 011000                    NOP     0
         1 013615   013620 710000 1                  TRA     ERR

     4032    10705    3             ELSE
     4033    10706    3                CALL GETKEY ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:738  

  10706  1 013616   010641 701000 1                  TSX1    GETKEY
         1 013617   013620 702000 1                  TSX2    ERR

     4034    10707    3             END;  /* RETURN KEY */

     4035    10708
     4036    10709    2   ERR:   ALTRETURN;

  10709  1 013620   200102 221300       ERR          LDX1  ! P2$,,AUTO
         1 013621   000000 702211                    TSX2  ! 0,X1

     4037    10710    2   ERR_INT:  B$JIT.ERR=ERRPMMEINT;

  10710  1 013622   000021 236000 0     ERR_INT      LDQ     ERRPMMEINT
         1 013623   000000 470400 xsym               LDP0    B$JIT$
         1 013624   000012 756100                    STQ     10,,PR0

     4038    10711    2          F$DCB.RPOS='1'B;

  10711  1 013625   200007 471500                    LDP1    JDCB$,,AUTO
         1 013626   010000 236007                    LDQ     4096,DL
         1 013627   100064 256100                    ORSQ    52,,PR1

     4039    10712    2          ALTRETURN;

  10712  1 013630   200102 221300                    LDX1  ! P2$,,AUTO
         1 013631   000000 702211                    TSX2  ! 0,X1

     4040    10713    2          END MOVEN;
     4041    10714               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:739  
     4042    10715        /*I*     NAME:     MOVERECN
     4043    10716                 PURPOSE:  To move the number of records specified by RECNUM
     4044    10717                 DESCRIPTION:
     4045    10718                      Since RECNUM can be specified by various PMMEs, the local
     4046    10719                 variable is set before calling this routine.  Just move forward
     4047    10720                 until we hit the end of this list of duplicates, or have move
     4048    10721                 the specified number of records.
     4049    10722        */
     4050    10723                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:740  
     4051    10724    1   MOVERECN: PROC ALTRET;

  10724  1 013632   200104 741300       MOVERECN     STX1  ! ERRTMP,,AUTO

     4052    10725    2          DCL N SBIN;
     4053    10726        /* */
     4054    10727    2          IF INDEX# = 0 THEN

  10727  1 013633   200011 235100                    LDA     INDEX#,,AUTO
         1 013634   013636 601000 1                  TNZ     s:10730

     4055    10728    2             RETURN;

  10728  1 013635   000001 702211                    TSX2  ! 1,X1

     4056    10729
     4057    10730    2          N=RECNUM;

  10730  1 013636   200033 236100                    LDQ     RECNUM,,AUTO
         1 013637   200105 756100                    STQ     N,,AUTO

     4058    10731
     4059    10732    3          DO WHILE (N > 1);

  10732  1 013640   000001 116007                    CMPQ    1,DL
         1 013641   013651 604400 1                  TMOZ    s:10737

     4060    10733    3             CALL NXTRECNM ALTRET(NOREC);

  10733  1 013642   015200 701000 1                  TSX1    NXTRECNM
         1 013643   013653 702000 1                  TSX2    NOREC

     4061    10734    3             N=N-1;

  10734  1 013644   000001 336007                    LCQ     1,DL
         1 013645   200105 056100                    ASQ     N,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:741  
     4062    10735    3          END;  /* WHILE */

  10735  1 013646   200105 235100                    LDA     N,,AUTO
         1 013647   000001 115007                    CMPA    1,DL
         1 013650   013642 605400 1                  TPNZ    s:10733

     4063    10736
     4064    10737    2          RETURN;

  10737  1 013651   200104 221300                    LDX1  ! ERRTMP,,AUTO
         1 013652   000001 702211                    TSX2  ! 1,X1

     4065    10738    2   NOREC: IF B$JIT.ERR.CODE = %E$KEYCHNG THEN

  10738  1 013653   000000 470400 xsym  NOREC        LDP0    B$JIT$
         1 013654   000012 236100                    LDQ     10,,PR0
         1 013655   377770 376007                    ANQ     131064,DL
         1 013656   001300 116007                    CMPQ    704,DL
         1 013657   013662 601000 1                  TNZ     ERR

     4066    10739    2             B$JIT.ERR=ERRNOREC;

  10739  1 013660   000023 236000 0                  LDQ     ERRNOREC
         1 013661   000012 756100                    STQ     10,,PR0

     4067    10740        /*E*   ERROR:   FMG-E$NOREC-2
     4068    10741               MESSAGE: No such record
     4069    10742               MESSAGE1: The specified record in this key does not exist.
     4070    10743        */
     4071    10744    2   ERR:   ALTRETURN;

  10744  1 013662   200104 221300       ERR          LDX1  ! ERRTMP,,AUTO
         1 013663   000000 702211                    TSX2  ! 0,X1

     4072    10745    2          END MOVERECN;
     4073    10746               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:742  
     4074    10747        /*I*     NAME:     MOVETOB3
     4075    10748                 PURPOSE:  To move keys from buffer 1 to buffer 3
     4076    10749                 DESCRIPTION:
     4077    10750                      Set up some local values for buffer 3.  If for some reason
     4078    10751                 we got here without enough room in buffer 3 for this stuff, then
     4079    10752                 build a new flink.  Otherwise, move the stuff in buffer 3 back
     4080    10753                 to make room for the stuff from buffer 1.
     4081    10754
     4082    10755                      Now move the stuff from buffer 1 to the empty space in buffer
     4083    10756                 3.  If buffer 3 had a value for bound, then it will have to be
     4084    10757                 readjusted.  Make sure that we point to the place in the key table
     4085    10758                 where the bound used to be.  This will probably change later.
     4086    10759
     4087    10760                      Now, we will loop backwards in the key table from the end
     4088    10761                 of the table to where the start of the key table used to be in
     4089    10762                 buffer 3.  If the key is beyond word 511, and this occurs earlier
     4090    10763                 in the key table than it used to, then it becomes the new bound.
     4091    10764
     4092    10765                      When we moved keys from the end of buffer one to the
     4093    10766                 beginning of buffer 3, they move "backwards" in a sense.  TSIZE
     4094    10767                 is the number of words backwards that they moved.  We now
     4095    10768                 loop backwards through the key tables in buffers 1 and 3
     4096    10769                 adjusting values for the keys that got moved from buffer 1 to
     4097    10770                 buffer 3.  SIZE is now the new position in buffer 3 where the
     4098    10771                 keys are.  Again, if we find a bound that is less than what
     4099    10772                 we used to think it was, then we readjust it.
     4100    10773
     4101    10774                      Make sure that the bounds and key counts are all correct.
     4102    10775
     4103    10776                      If the bound in buffer 1 is now greater than the number of
     4104    10777                 keys there, that is because all of the keys beyond bound were
     4105    10778                 moved.
     4106    10779        */
     4107    10780                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:743  
     4108    10781    1   MOVETOB3: PROC ALTRET;

  10781  1 013664   200132 741300       MOVETOB3     STX1  ! BUF4$,,AUTO

     4109    10782    2          DCL KEYCNT3 SBIN;
     4110    10783    2          DCL KTPTR3$ PTR;
     4111    10784    2          DCL BOUND3 SBIN;
     4112    10785    2          DCL P3$ PTR;
     4113    10786    2          DCL MKEYCNT SBIN;
     4114    10787    2          DCL P1$ PTR;
     4115    10788    2          DCL SIZE SBIN;
     4116    10789    2          DCL I SBIN;
     4117    10790    2          DCL J SBIN;
     4118    10791    2          DCL TSIZE SBIN;
     4119    10792    2          DCL CHARS CHAR(SIZE) BASED;
     4120    10793        /* */
     4121    10794
     4122    10795    2          KEYCNT3=FM$GRAN3.KEYCNT;

  10795  1 013665   200050 470500                    LDP0    BUF3$,,AUTO
         1 013666   000002 236100                    LDQ     2,,PR0
         1 013667   000777 376007                    ANQ     511,DL
         1 013670   200133 756100                    STQ     KEYCNT3,,AUTO

     4123    10796    2          KTPTR3$=PINCRW(BUF3$, FM$GRAN3.FCEX);

  10796  1 013671   000002 220100                    LDX0    2,,PR0
         1 013672   000000 636010                    EAQ     0,X0
         1 013673   200050 036100                    ADLQ    BUF3$,,AUTO
         1 013674   200134 756100                    STQ     KTPTR3$,,AUTO

     4124    10797    2          BOUND3=KTPTR3$->FM$KEYTBL3(0);

  10797  1 013675   200134 471500                    LDP1    KTPTR3$,,AUTO
         1 013676   100000 236100                    LDQ     0,,PR1
         1 013677   000033 772000                    QRL     27
         1 013700   200135 756100                    STQ     BOUND3,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:744  

     4125    10798
     4126    10799    2          P3$=PINCRW(KTPTR3$, SIZEW(FM$KEYTBL));

  10799  1 013701   200134 236100                    LDQ     KTPTR3$,,AUTO
         1 013702   000106 036003                    ADLQ    70,DU
         1 013703   200136 756100                    STQ     P3$,,AUTO

     4127    10800    2          MKEYCNT=KEYCNT-INDX+1;

  10800  1 013704   200017 236100                    LDQ     KEYCNT,,AUTO
         1 013705   200054 136100                    SBLQ    INDX,,AUTO
         1 013706   000001 036007                    ADLQ    1,DL
         1 013707   200137 756100                    STQ     MKEYCNT,,AUTO

     4128    10801
     4129    10802    2          IF MOVECNT > FM$GRAN3.AVAIL OR

  10802  1 013710   000001 236100                    LDQ     1,,PR0
         1 013711   001777 376007                    ANQ     1023,DL
         1 013712   200055 116100                    CMPQ    MOVECNT,,AUTO
         1 013713   013720 604000 1                  TMI     s:10805
         1 013714   200137 236100                    LDQ     MKEYCNT,,AUTO
         1 013715   200133 036100                    ADLQ    KEYCNT3,,AUTO
         1 013716   000427 116007                    CMPQ    279,DL
         1 013717   013735 604400 1                  TMOZ    s:10813

     4130    10803    2             MKEYCNT+KEYCNT3 > 279 THEN
     4131    10804    3             DO;   /* NEED A NEW FLINK */

     4132    10805    3             CALL BLDFLINK ALTRET(ERR);

  10805  1 013720   001406 701000 1                  TSX1    BLDFLINK
         1 013721   014225 702000 1                  TSX2    ERR

     4133    10806    3             BOUND3=SIZEC(FM$KEYTBL);

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:745  
  10806  1 013722   000430 235007                    LDA     280,DL
         1 013723   200135 755100                    STA     BOUND3,,AUTO

     4134    10807    3             KEYCNT3=0;

  10807  1 013724   200133 450100                    STZ     KEYCNT3,,AUTO

     4135    10808    3             KTPTR3$=PINCRW(BUF3$, BUF3$->FM$GRAN.FCEX);

  10808  1 013725   200050 470500                    LDP0    BUF3$,,AUTO
         1 013726   000002 220100                    LDX0    2,,PR0
         1 013727   000000 636010                    EAQ     0,X0
         1 013730   200050 036100                    ADLQ    BUF3$,,AUTO
         1 013731   200134 756100                    STQ     KTPTR3$,,AUTO

     4136    10809    3             P3$=PINCRW(KTPTR3$, SIZEW(FM$KEYTBL));

  10809  1 013732   000106 036003                    ADLQ    70,DU
         1 013733   200136 756100                    STQ     P3$,,AUTO

     4137    10810    3             END;  /* NEED A NEW FLINK */

  10810  1 013734   013760 710000 1                  TRA     s:10818

     4138    10811    2          ELSE
     4139    10812    3             DO;   /* MAKE SPACE */

     4140    10813    3             TSIZE=FM$GRAN3.NAVX-FM$GRAN3.FCEX-SIZEW(FM$KEYTBL);

  10813  1 013735   000002 236100                    LDQ     2,,PR0
         1 013736   000022 772000                    QRL     18
         1 013737   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 013740   000001 236100                    LDQ     1,,PR0
         1 013741   000022 772000                    QRL     18
         1 013742   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 013743   000106 136007                    SBLQ    70,DL
         1 013744   200144 756100                    STQ     TSIZE,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:746  

     4141    10814    3             IF TSIZE > 0 THEN

  10814  1 013745   013760 604400 1                  TMOZ    s:10818

     4142    10815    3                CALL FMR$SLIDE(P3$, MOVECNT, TSIZE);

  10815  1 013746   200144 633500                    EPPR3   TSIZE,,AUTO
         1 013747   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 013750   200055 634500                    EPPR4   MOVECNT,,AUTO
         1 013751   200167 454500                    STP4    STEMP_FIELDIN+3,,AUTO
         1 013752   200136 635500                    EPPR5   P3$,,AUTO
         1 013753   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 013754   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 013755   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 013756   000000 701000 xent               TSX1    FMR$SLIDE
         1 013757   000000 011000                    NOP     0

     4143    10816    3             END;  /* MAKE SPACE */

     4144    10817
     4145    10818    2          SIZE=MOVECNT*4;

  10818  1 013760   200055 235100                    LDA     MOVECNT,,AUTO
         1 013761   000002 735000                    ALS     2
         1 013762   200141 755100                    STA     SIZE,,AUTO

     4146    10819    2          P1$=PINCRW(BUF$, FM$GRAN.NAVX-MOVECNT);

  10819  1 013763   200024 470500                    LDP0    BUF$,,AUTO
         1 013764   000001 236100                    LDQ     1,,PR0
         1 013765   000022 772000                    QRL     18
         1 013766   200055 136100                    SBLQ    MOVECNT,,AUTO
         1 013767   000022 736000                    QLS     18
         1 013770   200024 036100                    ADLQ    BUF$,,AUTO
         1 013771   200140 756100                    STQ     P1$,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:747  
     4147    10820    2          P3$->CHARS=P1$->CHARS;

  10820  1 013772   200140 471500                    LDP1    P1$,,AUTO
         1 013773   000000 620005                    EAX0    0,AL
         1 013774   200136 473500                    LDP3    P3$,,AUTO
         1 013775   200141 721100                    LXL1    SIZE,,AUTO
         1 013776   040140 100540                    MLR     fill='040'O
         1 013777   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 014000   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1

     4148    10821
     4149    10822    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL+MOVECNT;

  10822  1 014001   200024 470500                    LDP0    BUF$,,AUTO
         1 014002   000001 236100                    LDQ     1,,PR0
         1 014003   001777 376007                    ANQ     1023,DL
         1 014004   200055 036100                    ADLQ    MOVECNT,,AUTO
         1 014005   000001 676100                    ERQ     1,,PR0
         1 014006   001777 376007                    ANQ     1023,DL
         1 014007   000001 656100                    ERSQ    1,,PR0

     4150    10823    2          FM$GRAN.NAVX=FM$GRAN.NAVX-MOVECNT;

  10823  1 014010   200024 470500                    LDP0    BUF$,,AUTO
         1 014011   000001 236100                    LDQ     1,,PR0
         1 014012   000022 772000                    QRL     18
         1 014013   200055 136100                    SBLQ    MOVECNT,,AUTO
         1 014014   000000 620006                    EAX0    0,QL
         1 014015   000001 740100                    STX0    1,,PR0

     4151    10824
     4152    10825    2          I=KEYCNT3;

  10825  1 014016   200133 235100                    LDA     KEYCNT3,,AUTO
         1 014017   200142 755100                    STA     I,,AUTO

     4153    10826    2          J=I+MKEYCNT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:748  

  10826  1 014020   200142 236100                    LDQ     I,,AUTO
         1 014021   200137 036100                    ADLQ    MKEYCNT,,AUTO
         1 014022   200143 756100                    STQ     J,,AUTO

     4154    10827    2          IF BOUND3 < SIZEC(FM$KEYTBL) THEN

  10827  1 014023   200135 235100                    LDA     BOUND3,,AUTO
         1 014024   000430 115007                    CMPA    280,DL
         1 014025   014031 605000 1                  TPL     s:10830

     4155    10828    2             BOUND3=BOUND3+MKEYCNT;

  10828  1 014026   200135 236100                    LDQ     BOUND3,,AUTO
         1 014027   200137 036100                    ADLQ    MKEYCNT,,AUTO
         1 014030   200135 756100                    STQ     BOUND3,,AUTO

     4156    10829
     4157    10830    3          DO WHILE (I > 0);

  10830  1 014031   200142 235100                    LDA     I,,AUTO
         1 014032   014063 604400 1                  TMOZ    s:10839

     4158    10831    3             TSIZE=KTPTR3$->FM$KEYTBL3(I)+MOVECNT;

  10831  1 014033   200134 470500                    LDP0    KTPTR3$,,AUTO
         1 014034   200142 235100                    LDA     I,,AUTO
         1 014035   000100 101505                    MRL     fill='000'O
         1 014036   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 014037   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 014040   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 014041   200055 036100                    ADLQ    MOVECNT,,AUTO
         1 014042   200144 756100                    STQ     TSIZE,,AUTO

     4159    10832    3             IF TSIZE > 511 AND BOUND3 > J THEN

  10832  1 014043   000777 116007                    CMPQ    511,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:749  
         1 014044   014052 604400 1                  TMOZ    s:10834
         1 014045   200135 236100                    LDQ     BOUND3,,AUTO
         1 014046   200143 116100                    CMPQ    J,,AUTO
         1 014047   014052 604400 1                  TMOZ    s:10834

     4160    10833    3                BOUND3=J;

  10833  1 014050   200143 235100                    LDA     J,,AUTO
         1 014051   200135 755100                    STA     BOUND3,,AUTO

     4161    10834    3             KTPTR3$->FM$KEYTBL3(J)=TSIZE;

  10834  1 014052   200143 235100                    LDA     J,,AUTO
         1 014053   000105 101500                    MRL     fill='000'O
         1 014054   200144 000004                    ADSC9   TSIZE,,AUTO              cn=0,n=4
         1 014055   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

     4162    10835    3             I=I-1;

  10835  1 014056   000001 336007                    LCQ     1,DL
         1 014057   200142 056100                    ASQ     I,,AUTO

     4163    10836    3             J=J-1;

  10836  1 014060   200143 056100                    ASQ     J,,AUTO

     4164    10837    3          END;  /* WHILE */

  10837  1 014061   200142 235100                    LDA     I,,AUTO
         1 014062   014033 605400 1                  TPNZ    s:10831

     4165    10838
     4166    10839    2          I=MKEYCNT;

  10839  1 014063   200137 236100                    LDQ     MKEYCNT,,AUTO
         1 014064   200142 756100                    STQ     I,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:750  
     4167    10840    2          J=KEYCNT;

  10840  1 014065   200017 235100                    LDA     KEYCNT,,AUTO
         1 014066   200143 755100                    STA     J,,AUTO

     4168    10841    2          TSIZE=FM$GRAN3.FCEX+SIZEW(FM$KEYTBL)-FM$KEYTBL(J-I+1);

  10841  1 014067   200143 236100                    LDQ     J,,AUTO
         1 014070   200142 136100                    SBLQ    I,,AUTO
         1 014071   200025 470500                    LDP0    KTPTR$,,AUTO
         1 014072   000100 101506                    MRL     fill='000'O
         1 014073   000000 200001                    ADSC9   0,Q,PR0                  cn=1,n=1
         1 014074   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 014075   200050 471500                    LDP1    BUF3$,,AUTO
         1 014076   100002 236100                    LDQ     2,,PR1
         1 014077   000022 772000                    QRL     18
         1 014100   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 014101   000106 036007                    ADLQ    70,DL
         1 014102   200144 756100                    STQ     TSIZE,,AUTO

     4169    10842
     4170    10843    2          IF J-I+1 >= BOUND THEN

  10843  1 014103   200143 236100                    LDQ     J,,AUTO
         1 014104   200142 136100                    SBLQ    I,,AUTO
         1 014105   000001 036007                    ADLQ    1,DL
         1 014106   200016 116100                    CMPQ    BOUND,,AUTO
         1 014107   014112 604000 1                  TMI     s:10846

     4171    10844    2             TSIZE=TSIZE-512;

  10844  1 014110   001000 336007                    LCQ     512,DL
         1 014111   200144 056100                    ASQ     TSIZE,,AUTO

     4172    10845
     4173    10846    3          DO WHILE (I > 0);

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:751  
  10846  1 014112   200142 236100                    LDQ     I,,AUTO
         1 014113   014155 604400 1                  TMOZ    s:10859

     4174    10847    3             SIZE=FM$KEYTBL(J)+TSIZE;

  10847  1 014114   200025 470500                    LDP0    KTPTR$,,AUTO
         1 014115   200143 235100                    LDA     J,,AUTO
         1 014116   000100 101505                    MRL     fill='000'O
         1 014117   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 014120   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 014121   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 014122   200144 036100                    ADLQ    TSIZE,,AUTO
         1 014123   200141 756100                    STQ     SIZE,,AUTO

     4175    10848    3             FM$KEYTBL(J)=0;

  10848  1 014124   000105 101400                    MRL     fill='000'O
         1 014125   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         1 014126   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

     4176    10849    3             IF J >= BOUND THEN

  10849  1 014127   200143 236100                    LDQ     J,,AUTO
         1 014130   200016 116100                    CMPQ    BOUND,,AUTO
         1 014131   014134 604000 1                  TMI     s:10852

     4177    10850    3                SIZE=SIZE+512;

  10850  1 014132   001000 236007                    LDQ     512,DL
         1 014133   200141 056100                    ASQ     SIZE,,AUTO

     4178    10851
     4179    10852    3             IF SIZE > 511 AND I < BOUND3 THEN

  10852  1 014134   200141 236100                    LDQ     SIZE,,AUTO
         1 014135   000777 116007                    CMPQ    511,DL
         1 014136   014143 604400 1                  TMOZ    s:10854
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:752  
         1 014137   200142 236100                    LDQ     I,,AUTO
         1 014140   200135 116100                    CMPQ    BOUND3,,AUTO
         1 014141   014143 605000 1                  TPL     s:10854

     4180    10853    3                BOUND3=I;

  10853  1 014142   200135 756100                    STQ     BOUND3,,AUTO

     4181    10854    3             KTPTR3$->FM$KEYTBL3(I)=SIZE;

  10854  1 014143   200134 471500                    LDP1    KTPTR3$,,AUTO
         1 014144   200142 236100                    LDQ     I,,AUTO
         1 014145   000106 101500                    MRL     fill='000'O
         1 014146   200141 000004                    ADSC9   SIZE,,AUTO               cn=0,n=4
         1 014147   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1

     4182    10855    3             I=I-1;

  10855  1 014150   000001 336007                    LCQ     1,DL
         1 014151   200142 056100                    ASQ     I,,AUTO

     4183    10856    3             J=J-1;

  10856  1 014152   200143 056100                    ASQ     J,,AUTO

     4184    10857    3          END;  /* WHILE */

  10857  1 014153   200142 235100                    LDA     I,,AUTO
         1 014154   014114 605400 1                  TPNZ    s:10847

     4185    10858
     4186    10859    2          KTPTR3$->FM$KEYTBL3(0)=BOUND3;

  10859  1 014155   200134 471500                    LDP1    KTPTR3$,,AUTO
         1 014156   200135 236100                    LDQ     BOUND3,,AUTO
         1 014157   000033 736000                    QLS     27
         1 014160   100000 552140                    STBQ    0,'40'O,PR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:753  

     4187    10860    2          KEYCNT=KEYCNT-MKEYCNT;

  10860  1 014161   200017 236100                    LDQ     KEYCNT,,AUTO
         1 014162   200137 136100                    SBLQ    MKEYCNT,,AUTO
         1 014163   200017 756100                    STQ     KEYCNT,,AUTO

     4188    10861    2          FM$GRAN.KEYCNT=KEYCNT;

  10861  1 014164   200024 473500                    LDP3    BUF$,,AUTO
         1 014165   300002 552104                    STBQ    2,'04'O,PR3

     4189    10862
     4190    10863    2          IF BOUND > KEYCNT THEN

  10863  1 014166   200016 116100                    CMPQ    BOUND,,AUTO
         1 014167   014175 605000 1                  TPL     s:10869

     4191    10864    3             DO;   /* REST ARE GONE */

     4192    10865    3             BOUND=SIZEC(FM$KEYTBL);

  10865  1 014170   000430 235007                    LDA     280,DL
         1 014171   200016 755100                    STA     BOUND,,AUTO

     4193    10866    3             FM$KEYTBL(0)=BOUND;

  10866  1 014172   200016 236100                    LDQ     BOUND,,AUTO
         1 014173   000033 736000                    QLS     27
         1 014174   000000 552140                    STBQ    0,'40'O,PR0

     4194    10867    3             END;  /* REST ARE GONE */

     4195    10868
     4196    10869    2          FM$GRAN3.AVAIL=FM$GRAN3.AVAIL-MOVECNT;

  10869  1 014175   200050 473500                    LDP3    BUF3$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:754  
         1 014176   300001 236100                    LDQ     1,,PR3
         1 014177   001777 376007                    ANQ     1023,DL
         1 014200   200055 136100                    SBLQ    MOVECNT,,AUTO
         1 014201   300001 676100                    ERQ     1,,PR3
         1 014202   001777 376007                    ANQ     1023,DL
         1 014203   300001 656100                    ERSQ    1,,PR3

     4197    10870    2          FM$GRAN3.NAVX=FM$GRAN3.NAVX+MOVECNT;

  10870  1 014204   200050 473500                    LDP3    BUF3$,,AUTO
         1 014205   300001 236100                    LDQ     1,,PR3
         1 014206   000022 772000                    QRL     18
         1 014207   200055 036100                    ADLQ    MOVECNT,,AUTO
         1 014210   000000 620006                    EAX0    0,QL
         1 014211   300001 740100                    STX0    1,,PR3

     4198    10871    2          KEYCNT3=KEYCNT3+MKEYCNT;

  10871  1 014212   200133 236100                    LDQ     KEYCNT3,,AUTO
         1 014213   200137 036100                    ADLQ    MKEYCNT,,AUTO
         1 014214   200133 756100                    STQ     KEYCNT3,,AUTO

     4199    10872    2          FM$GRAN3.KEYCNT=KEYCNT3;

  10872  1 014215   200050 473500                    LDP3    BUF3$,,AUTO
         1 014216   300002 552104                    STBQ    2,'04'O,PR3

     4200    10873    2          F$DCB.BFR.BUFUP(1)='1'B;

  10873  1 014217   200007 473500                    LDP3    JDCB$,,AUTO
         1 014220   400000 236003                    LDQ     -131072,DU
         1 014221   300116 256100                    ORSQ    78,,PR3

     4201    10874    2          F$DCB.BFR.BUFUP(3)='1'B;

  10874  1 014222   300120 256100                    ORSQ    80,,PR3

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:755  
     4202    10875
     4203    10876    2          RETURN;

  10876  1 014223   200132 221300                    LDX1  ! BUF4$,,AUTO
         1 014224   000001 702211                    TSX2  ! 1,X1

     4204    10877    2   ERR:   ALTRETURN;

  10877  1 014225   200132 221300       ERR          LDX1  ! BUF4$,,AUTO
         1 014226   000000 702211                    TSX2  ! 0,X1

     4205    10878    2          END MOVETOB3;
     4206    10879               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:756  
     4207    10880        /*I*     NAME:     MOVKEYS
     4208    10881                 PURPOSE:  To move some keys back in the FIT
     4209    10882                 DESCRIPTION:
     4210    10883                      When some information is added to the FIT, then we may have
     4211    10884                 to move some keys back to make room for it.  First, if this is
     4212    10885                 a one granule keyed file, then expand it to 2 granules.
     4213    10886
     4214    10887                      If there isn't enough room here, then check the flink.
     4215    10888                 If there isn't one, then make one.
     4216    10889
     4217    10890                      We will loop backwards through the key table, until we find
     4218    10891                 a spot with enough room for the keys.  If there isn't enough
     4219    10892                 room, even if we moved all of the keys, then altreturn.  Otherwise,
     4220    10893                 move the necessary keys to buffer 3.
     4221    10894
     4222    10895                      Now move the keys that are left, back.  Loop through the
     4223    10896                 key table adding the amount of space moved to the key table
     4224    10897                 enties.  BOUND will probably have gotten smaller.
     4225    10898        */
     4226    10899                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:757  
     4227    10900    1   MOVKEYS: PROC ALTRET;

  10900  1 014227   200076 741300       MOVKEYS      STX1  ! DELALL_FAST+2,,AUTO

     4228    10901    2          DCL LCDA UBIN;
     4229    10902    2          DCL I SBIN;
     4230    10903    2          DCL N SBIN;
     4231    10904    2          DCL P$ PTR;
     4232    10905    2          DCL DONE SBIN;
     4233    10906        /* */
     4234    10907    2          IF NUMWRDS > FM$GRAN.AVAIL THEN

  10907  1 014230   200003 470500                    LDP0    @PSEG$,,AUTO
         1 014231   200024 471500                    LDP1    BUF$,,AUTO
         1 014232   100001 236100                    LDQ     1,,PR1
         1 014233   001777 376007                    ANQ     1023,DL
         1 014234   000000 116100                    CMPQ    0,,PR0
         1 014235   014413 605000 1                  TPL     s:10952

     4235    10908    3             DO;   /* MOVE KEYS */

     4236    10909    3             BUF3$=ADDR(NIL);

  10909  1 014236   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 014237   200050 756100                    STQ     BUF3$,,AUTO

     4237    10910
     4238    10911    3             IF FM$GRAN.FLINK = 0 THEN

  10911  1 014240   100004 235100                    LDA     4,,PR1
         1 014241   014245 601000 1                  TNZ     s:10915

     4239    10912    3                CALL BLDFLINK ALTRET(ERR);

  10912  1 014242   001406 701000 1                  TSX1    BLDFLINK
         1 014243   014536 702000 1                  TSX2    ERR
         1 014244   014310 710000 1                  TRA     s:10924
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:758  

     4240    10913    3             ELSE
     4241    10914    4                DO;   /* ALREADY HAVE FLINK */

     4242    10915    4                DA=FM$GRAN.FLINK;

  10915  1 014245   200021 755100                    STA     DA,,AUTO

     4243    10916    4                LCDA=F$DCB.BFR.DA(1);

  10916  1 014246   200007 473500                    LDP3    JDCB$,,AUTO
         1 014247   300116 236100                    LDQ     78,,PR3
         1 014250   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 014251   200077 756100                    STQ     LCDA,,AUTO

     4244    10917    4                F$DCB.LVL=0;

  10917  1 014252   000035 236000 2                  LDQ     29
         1 014253   300067 356100                    ANSQ    55,,PR3

     4245    10918    4                CALL FMD$REDBUF(BUF3$, 3, DA,, LCDA) ALTRET(ERR);

  10918  1 014254   200077 634500                    EPPR4   LCDA,,AUTO
         1 014255   200172 454500                    STP4    STEMP_FIELDIN+6,,AUTO
         1 014256   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 014257   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 014260   200021 635500                    EPPR5   DA,,AUTO
         1 014261   200170 455500                    STP5    STEMP_FIELDIN+4,,AUTO
         1 014262   000014 236000 2                  LDQ     12
         1 014263   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 014264   200050 636500                    EPPR6   BUF3$,,AUTO
         1 014265   200166 456500                    STP6    STEMP_FIELDIN+2,,AUTO
         1 014266   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 014267   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 014270   000000 701000 xent               TSX1    FMD$REDBUF
         1 014271   014536 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:759  
     4246    10919
     4247    10920    4                IF NUMWRDS > FM$GRAN.AVAIL+FM$GRAN3.AVAIL THEN

  10920  1 014272   200050 470500                    LDP0    BUF3$,,AUTO
         1 014273   000001 236100                    LDQ     1,,PR0
         1 014274   001777 376007                    ANQ     1023,DL
         1 014275   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 014276   200024 471500                    LDP1    BUF$,,AUTO
         1 014277   100001 236100                    LDQ     1,,PR1
         1 014300   001777 376007                    ANQ     1023,DL
         1 014301   200166 036100                    ADLQ    STEMP_FIELDIN+2,,AUTO
         1 014302   200003 473500                    LDP3    @PSEG$,,AUTO
         1 014303   014310 604000 1                  TMI     s:10924
         1 014304   300000 116100                    CMPQ    0,,PR3
         1 014305   014310 605000 1                  TPL     s:10924

     4248    10921    4                   CALL BLDFLINK ALTRET(ERR);

  10921  1 014306   001406 701000 1                  TSX1    BLDFLINK
         1 014307   014536 702000 1                  TSX2    ERR

     4249    10922    4                END;  /* ALREADY HAVE FLINK */

     4250    10923
     4251    10924    3             MOVECNT=0;

  10924  1 014310   200055 450100                    STZ     MOVECNT,,AUTO

     4252    10925    3             INDX=KEYCNT;

  10925  1 014311   200017 235100                    LDA     KEYCNT,,AUTO
         1 014312   200054 755100                    STA     INDX,,AUTO

     4253    10926
     4254    10927    3             DONE=0;

  10927  1 014313   200103 450100                    STZ     DONE,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:760  

     4255    10928    4             DO WHILE (INDX ~= 0 AND DONE = 0);

  10928  1 014314   014357 710000 1                  TRA     s:10937

     4256    10929    4                IF INDX < BOUND THEN

  10929  1 014315   200054 236100                    LDQ     INDX,,AUTO
         1 014316   200016 116100                    CMPQ    BOUND,,AUTO
         1 014317   014332 605000 1                  TPL     s:10932

     4257    10930    4                   MOVECNT=FM$GRAN.NAVX-FM$KEYTBL(INDX);

  10930  1 014320   200025 470500                    LDP0    KTPTR$,,AUTO
         1 014321   000100 101506                    MRL     fill='000'O
         1 014322   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 014323   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 014324   200024 471500                    LDP1    BUF$,,AUTO
         1 014325   100001 236100                    LDQ     1,,PR1
         1 014326   000022 772000                    QRL     18
         1 014327   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 014330   200055 756100                    STQ     MOVECNT,,AUTO
         1 014331   014344 710000 1                  TRA     s:10933

     4258    10931    4                ELSE
     4259    10932    4                   MOVECNT=FM$GRAN.NAVX-FM$KEYTBL(INDX)-512;

  10932  1 014332   200025 470500                    LDP0    KTPTR$,,AUTO
         1 014333   000100 101506                    MRL     fill='000'O
         1 014334   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 014335   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 014336   200024 471500                    LDP1    BUF$,,AUTO
         1 014337   100001 236100                    LDQ     1,,PR1
         1 014340   000022 772000                    QRL     18
         1 014341   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 014342   001000 136007                    SBLQ    512,DL
         1 014343   200055 756100                    STQ     MOVECNT,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:761  

     4260    10933    4                IF MOVECNT+FM$GRAN.AVAIL >= NUMWRDS THEN

  10933  1 014344   100001 236100                    LDQ     1,,PR1
         1 014345   001777 376007                    ANQ     1023,DL
         1 014346   200055 036100                    ADLQ    MOVECNT,,AUTO
         1 014347   200003 473500                    LDP3    @PSEG$,,AUTO
         1 014350   300000 116100                    CMPQ    0,,PR3
         1 014351   014355 604000 1                  TMI     s:10936

     4261    10934    4                   DONE=1;

  10934  1 014352   000001 235007                    LDA     1,DL
         1 014353   200103 755100                    STA     DONE,,AUTO
         1 014354   014357 710000 1                  TRA     s:10937

     4262    10935    4                ELSE
     4263    10936    4                   INDX=INDX-1;

  10936  1 014355   000001 336007                    LCQ     1,DL
         1 014356   200054 056100                    ASQ     INDX,,AUTO

     4264    10937    4             END;  /* WHILE */

  10937  1 014357   200054 235100                    LDA     INDX,,AUTO
         1 014360   014363 600000 1                  TZE     s:10939
         1 014361   200103 236100                    LDQ     DONE,,AUTO
         1 014362   014315 600000 1                  TZE     s:10929

     4265    10938
     4266    10939    3             IF DONE = 0 THEN

  10939  1 014363   200103 236100                    LDQ     DONE,,AUTO
         1 014364   014405 601000 1                  TNZ     s:10948

     4267    10940    4                DO;   /* NOT ENUF ROOM */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:762  
     4268    10941    4                B$JIT.ERR='0'B;

  10941  1 014365   000000 470400 xsym               LDP0    B$JIT$
         1 014366   000012 450100                    STZ     10,,PR0

     4269    10942    4                CALL FMD$FLSHBUF(1);

  10942  1 014367   000001 630400 2                  EPPR0   1
         1 014370   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 014371   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 014372   000000 011000                    NOP     0

     4270    10943    4                CALL FMD$FLSHBUF(3);

  10943  1 014373   000014 630400 2                  EPPR0   12
         1 014374   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 014375   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 014376   000000 011000                    NOP     0

     4271    10944    4                CALL FMD$FLSHBUF(4);

  10944  1 014377   000012 630400 2                  EPPR0   10
         1 014400   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 014401   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 014402   000000 011000                    NOP     0

     4272    10945    4                ALTRETURN;

  10945  1 014403   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 014404   000000 702211                    TSX2  ! 0,X1

     4273    10946    4                END;  /* NOT ENUF ROOM */
     4274    10947
     4275    10948    3             CALL MOVETOB3 ALTRET(ERR);

  10948  1 014405   013664 701000 1                  TSX1    MOVETOB3
         1 014406   014536 702000 1                  TSX2    ERR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:763  

     4276    10949    3             CALL FMD$FLSHBUF(3);

  10949  1 014407   000014 630400 2                  EPPR0   12
         1 014410   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 014411   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 014412   000000 011000                    NOP     0

     4277    10950    3             END;  /* MOVE KEYS */

     4278    10951
     4279    10952    2          P$=PINCRW(BUF$, FM$GRAN.FCEX);

  10952  1 014413   200024 470500                    LDP0    BUF$,,AUTO
         1 014414   000002 220100                    LDX0    2,,PR0
         1 014415   000000 636010                    EAQ     0,X0
         1 014416   200024 036100                    ADLQ    BUF$,,AUTO
         1 014417   200102 756100                    STQ     P$,,AUTO

     4280    10953    2          CALL FMR$SLIDE(P$, NUMWRDS, FM$GRAN.NAVX-FM$GRAN.FCEX);

  10953  1 014420   000002 236100                    LDQ     2,,PR0
         1 014421   000022 772000                    QRL     18
         1 014422   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 014423   000001 236100                    LDQ     1,,PR0
         1 014424   000022 772000                    QRL     18
         1 014425   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 014426   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 014427   200167 631500                    EPPR1   STEMP_FIELDIN+3,,AUTO
         1 014430   200172 451500                    STP1    STEMP_FIELDIN+6,,AUTO
         1 014431   200003 236100                    LDQ     @PSEG$,,AUTO
         1 014432   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 014433   200102 633500                    EPPR3   P$,,AUTO
         1 014434   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 014435   200170 630500                    EPPR0   STEMP_FIELDIN+4,,AUTO
         1 014436   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 014437   000000 701000 xent               TSX1    FMR$SLIDE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:764  
         1 014440   000000 011000                    NOP     0

     4281    10954    2          FM$GRAN.FCEX=FM$GRAN.FCEX+NUMWRDS;

  10954  1 014441   200003 470500                    LDP0    @PSEG$,,AUTO
         1 014442   200024 471500                    LDP1    BUF$,,AUTO
         1 014443   100002 236100                    LDQ     2,,PR1
         1 014444   000022 772000                    QRL     18
         1 014445   000000 036100                    ADLQ    0,,PR0
         1 014446   000000 620006                    EAX0    0,QL
         1 014447   100002 740100                    STX0    2,,PR1

     4282    10955    2          FM$GRAN.NAVX=FM$GRAN.NAVX+NUMWRDS;

  10955  1 014450   200024 471500                    LDP1    BUF$,,AUTO
         1 014451   100001 236100                    LDQ     1,,PR1
         1 014452   000022 772000                    QRL     18
         1 014453   000000 036100                    ADLQ    0,,PR0
         1 014454   000000 620006                    EAX0    0,QL
         1 014455   100001 740100                    STX0    1,,PR1

     4283    10956    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL-NUMWRDS;

  10956  1 014456   200024 471500                    LDP1    BUF$,,AUTO
         1 014457   100001 236100                    LDQ     1,,PR1
         1 014460   001777 376007                    ANQ     1023,DL
         1 014461   000000 136100                    SBLQ    0,,PR0
         1 014462   100001 676100                    ERQ     1,,PR1
         1 014463   001777 376007                    ANQ     1023,DL
         1 014464   100001 656100                    ERSQ    1,,PR1

     4284    10957    2          F$DCB.MOVED=NUMWRDS;

  10957  1 014465   000000 720100                    LXL0    0,,PR0
         1 014466   200007 471500                    LDP1    JDCB$,,AUTO
         1 014467   100104 740100                    STX0    68,,PR1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:765  
     4285    10958    2          KTPTR$=PINCRW(KTPTR$, NUMWRDS);

  10958  1 014470   000000 236100                    LDQ     0,,PR0
         1 014471   000022 736000                    QLS     18
         1 014472   200025 036100                    ADLQ    KTPTR$,,AUTO
         1 014473   200025 756100                    STQ     KTPTR$,,AUTO

     4286    10959
     4287    10960    3          DO I=1 TO KEYCNT;

  10960  1 014474   000001 235007                    LDA     1,DL
         1 014475   200100 755100                    STA     I,,AUTO
         1 014476   014522 710000 1                  TRA     s:10965+1

     4288    10961    3             N=FM$KEYTBL(I)+NUMWRDS;

  10961  1 014477   200003 470500                    LDP0    @PSEG$,,AUTO
         1 014500   200025 471500                    LDP1    KTPTR$,,AUTO
         1 014501   200100 235100                    LDA     I,,AUTO
         1 014502   000100 101505                    MRL     fill='000'O
         1 014503   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1
         1 014504   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 014505   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 014506   000000 036100                    ADLQ    0,,PR0
         1 014507   200101 756100                    STQ     N,,AUTO

     4289    10962    3             IF N > 511 AND I < BOUND THEN

  10962  1 014510   000777 116007                    CMPQ    511,DL
         1 014511   014516 604400 1                  TMOZ    s:10964
         1 014512   200100 236100                    LDQ     I,,AUTO
         1 014513   200016 116100                    CMPQ    BOUND,,AUTO
         1 014514   014516 605000 1                  TPL     s:10964

     4290    10963    3                BOUND=I;

  10963  1 014515   200016 756100                    STQ     BOUND,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:766  

     4291    10964    3             FM$KEYTBL(I)=N;

  10964  1 014516   000105 101500                    MRL     fill='000'O
         1 014517   200101 000004                    ADSC9   N,,AUTO                  cn=0,n=4
         1 014520   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1

     4292    10965    3          END;  /* DO I */

  10965  1 014521   200100 054100                    AOS     I,,AUTO
         1 014522   200100 236100                    LDQ     I,,AUTO
         1 014523   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 014524   014477 604400 1                  TMOZ    s:10961

     4293    10966
     4294    10967    2          FM$KEYTBL(0)=BOUND;

  10967  1 014525   200025 471500                    LDP1    KTPTR$,,AUTO
         1 014526   200016 236100                    LDQ     BOUND,,AUTO
         1 014527   000033 736000                    QLS     27
         1 014530   100000 552140                    STBQ    0,'40'O,PR1

     4295    10968    2          F$DCB.BFR.BUFUP(1)='1'B;

  10968  1 014531   200007 473500                    LDP3    JDCB$,,AUTO
         1 014532   400000 236003                    LDQ     -131072,DU
         1 014533   300116 256100                    ORSQ    78,,PR3

     4296    10969    2          RETURN;

  10969  1 014534   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 014535   000001 702211                    TSX2  ! 1,X1

     4297    10970    2   ERR:   CALL FMD$FLSHBUF(1);

  10970  1 014536   000001 630400 2     ERR          EPPR0   1
         1 014537   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:767  
         1 014540   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 014541   000000 011000                    NOP     0

     4298    10971    2          CALL FMD$FLSHBUF(3);

  10971  1 014542   000014 630400 2                  EPPR0   12
         1 014543   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 014544   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 014545   000000 011000                    NOP     0

     4299    10972    2          CALL FMD$FLSHBUF(4);

  10972  1 014546   000012 630400 2                  EPPR0   10
         1 014547   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 014550   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 014551   000000 011000                    NOP     0

     4300    10973    2          ALTRETURN;

  10973  1 014552   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 014553   000000 702211                    TSX2  ! 0,X1

     4301    10974    2          END MOVKEYS;
     4302    10975               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:768  
     4303    10976        /*I*     NAME:     NEWKEY
     4304    10977                 PURPOSE:  To add a new key to a file
     4305    10978                 DESCRIPTION:
     4306    10979                      If this file has alternate indexes, then we may have to
     4307    10980                 check for duplicates.  If any index specifies unique, then we
     4308    10981                 try to find the key the user specified.  If we find it, then
     4309    10982                 this is an error.  If the index changed, then restore it to
     4310    10983                 the primary index.
     4311    10984
     4312    10985                      Figure out how many segments we need, then add the key.
     4313    10986        */
     4314    10987                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:769  
     4315    10988    1   NEWKEY: PROC ALTRET;

  10988  1 014554   200106 741300       NEWKEY       STX1  ! ICHNG,,AUTO

     4316    10989    2          DCL I UBIN;
     4317    10990    2          DCL NUMENTS UBIN;
     4318    10991    2          DCL UNIQUE BIT(1) ALIGNED;
     4319    10992        /* */
     4320    10993    2          IF ALTKEY$ ~= ADDR(NIL) THEN

  10993  1 014555   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 014556   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 014557   014706 600000 1                  TZE     s:11036

     4321    10994    3             DO;   /* CHECK ALT KEYS */

     4322    10995
     4323    10996    3             IF ORG=%IREL# THEN

  10996  1 014560   200022 235100                    LDA     ORG,,AUTO
         1 014561   000015 115007                    CMPA    13,DL
         1 014562   014570 601000 1                  TNZ     s:10998

     4324    10997    3                NUMENTS=IRKEYS.NKEYS;

  10997  1 014563   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 014564   000000 236100                    LDQ     0,,PR0
         1 014565   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 014566   200110 756100                    STQ     NUMENTS,,AUTO
         1 014567   014575 710000 1                  TRA     s:11000

     4325    10998    3             ELSE NUMENTS=ALTKEYS.NUMENTS;

  10998  1 014570   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 014571   000000 236100                    LDQ     0,,PR0
         1 014572   000022 772000                    QRL     18
         1 014573   000377 376007                    ANQ     255,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:770  
         1 014574   200110 756100                    STQ     NUMENTS,,AUTO

     4326    10999
     4327    11000    4             DO I=2 TO NUMENTS;

  11000  1 014575   000002 235007                    LDA     2,DL
         1 014576   200107 755100                    STA     I,,AUTO
         1 014577   014656 710000 1                  TRA     s:11022+3

     4328    11001
     4329    11002    4                IF ORG=%IREL# THEN

  11002  1 014600   200022 235100                    LDA     ORG,,AUTO
         1 014601   000015 115007                    CMPA    13,DL
         1 014602   014613 601000 1                  TNZ     s:11004

     4330    11003    4                   UNIQUE=IRKEYS.K.UNIQUE(I-1);

  11003  1 014603   200107 236100                    LDQ     I,,AUTO
         1 014604   000007 402007                    MPY     7,DL
         1 014605   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 014606   077777 236106                    LDQ     -1,QL,PR0
         1 014607   000022 736000                    QLS     18
         1 014610   400000 376003                    ANQ     -131072,DU
         1 014611   200111 756100                    STQ     UNIQUE,,AUTO
         1 014612   014622 710000 1                  TRA     s:11006

     4331    11004    4                ELSE UNIQUE=ALTKEYS.K.UNIQUE(I-1);

  11004  1 014613   200107 236100                    LDQ     I,,AUTO
         1 014614   000006 402007                    MPY     6,DL
         1 014615   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 014616   077776 236106                    LDQ     -2,QL,PR0
         1 014617   000011 736000                    QLS     9
         1 014620   400000 376003                    ANQ     -131072,DU
         1 014621   200111 756100                    STQ     UNIQUE,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:771  
     4332    11005
     4333    11006    4                IF UNIQUE THEN

  11006  1 014622   200111 234100                    SZN     UNIQUE,,AUTO
         1 014623   014653 605000 1                  TPL     s:11022

     4334    11007    5                   DO;   /* Shouldn't have duplicate */

     4335    11008    5                   INDEX#=I;

  11008  1 014624   200107 235100                    LDA     I,,AUTO
         1 014625   200011 755100                    STA     INDEX#,,AUTO

     4336    11009    5                   CALL SETINDEX ALTRET(ERR);

  11009  1 014626   021667 701000 1                  TSX1    SETINDEX
         1 014627   014720 702000 1                  TSX2    ERR

     4337    11010    5                   KEYIN$=PINCRC(B$PS2$, F$DCB.KEYX);

  11010  1 014630   200007 470500                    LDP0    JDCB$,,AUTO
         1 014631   000036 236100                    LDQ     30,,PR0
         1 014632   000022 772000                    QRL     18
         1 014633   000020 736000                    QLS     16
         1 014634   000000 036000 xsym               ADLQ    B$PS2$
         1 014635   200037 756100                    STQ     KEYIN$,,AUTO

     4338    11011    6                   CALL FINDKEY WHENRETURN DO;

  11011  1 014636   007536 701000 1                  TSX1    FINDKEY
         1 014637   014645 702000 1                  TSX2    s:11016

     4339    11012    6                      B$JIT.ERR=ERRDUPKEY;

  11012  1 014640   000025 236000 0                  LDQ     ERRDUPKEY
         1 014641   000000 470400 xsym               LDP0    B$JIT$
         1 014642   000012 756100                    STQ     10,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:772  

     4340    11013    6                      ALTRETURN;

  11013  1 014643   200106 221300                    LDX1  ! ICHNG,,AUTO
         1 014644   000000 702211                    TSX2  ! 0,X1

     4341    11014    6                      END;
     4342    11015    6                   WHENALTRETURN DO;

     4343    11016    6                      IF B$JIT.ERR.CODE ~= %E$NOKEY THEN

  11016  1 014645   000000 470400 xsym               LDP0    B$JIT$
         1 014646   000012 236100                    LDQ     10,,PR0
         1 014647   377770 376007                    ANQ     131064,DL
         1 014650   001020 116007                    CMPQ    528,DL
         1 014651   014720 601000 1                  TNZ     ERR

     4344    11017    6                         GOTO ERR;
     4345    11018    6                      B$JIT.ERR='0'B;

  11018  1 014652   000012 450100                    STZ     10,,PR0

     4346    11019    6                      END;

     4347    11020    5                   END;  /* Shouldn't have duplicate */

     4348    11021
     4349    11022    4             END;  /* DO I */

  11022  1 014653   200107 235100                    LDA     I,,AUTO
         1 014654   000001 035007                    ADLA    1,DL
         1 014655   200107 755100                    STA     I,,AUTO
         1 014656   200110 236100                    LDQ     NUMENTS,,AUTO
         1 014657   200107 116100                    CMPQ    I,,AUTO
         1 014660   014600 603000 1                  TRC     s:11002

     4350    11023
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:773  
     4351    11024    3             IF INDEX# ~= 0 THEN

  11024  1 014661   200011 235100                    LDA     INDEX#,,AUTO
         1 014662   014706 600000 1                  TZE     s:11036

     4352    11025    4                DO;   /* SET INDEX BACK TO 1 */

     4353    11026    4                INDEX#=1;

  11026  1 014663   000001 235007                    LDA     1,DL
         1 014664   200011 755100                    STA     INDEX#,,AUTO

     4354    11027    4                CALL SETINDEX ALTRET(ERR);

  11027  1 014665   021667 701000 1                  TSX1    SETINDEX
         1 014666   014720 702000 1                  TSX2    ERR

     4355    11028    4                CALL RESTOREPOS ALTRET(ERR);

  11028  1 014667   021403 701000 1                  TSX1    RESTOREPOS
         1 014670   014720 702000 1                  TSX2    ERR

     4356    11029    4                SEG$=PINCRW(BUF$, SEGX);

  11029  1 014671   200013 236100                    LDQ     SEGX,,AUTO
         1 014672   000022 736000                    QLS     18
         1 014673   200024 036100                    ADLQ    BUF$,,AUTO
         1 014674   200014 756100                    STQ     SEG$,,AUTO

     4357    11030    4                CRECX=F$DCB.CRECX;

  11030  1 014675   200007 470500                    LDP0    JDCB$,,AUTO
         1 014676   000067 236100                    LDQ     55,,PR0
         1 014677   777777 376007                    ANQ     -1,DL
         1 014700   200015 756100                    STQ     CRECX,,AUTO

     4358    11031    4                KEYIN$=PINCRC(B$PS2$, F$DCB.KEYX);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:774  

  11031  1 014701   000036 236100                    LDQ     30,,PR0
         1 014702   000022 772000                    QRL     18
         1 014703   000020 736000                    QLS     16
         1 014704   000000 036000 xsym               ADLQ    B$PS2$
         1 014705   200037 756100                    STQ     KEYIN$,,AUTO

     4359    11032    4                END;  /* SET INDEX BACK TO 1 */

     4360    11033
     4361    11034    3             END;  /* CHECK ALTKEYS */

     4362    11035
     4363    11036    2          DBUF$=ADDR(NIL);

  11036  1 014706   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 014707   200040 756100                    STQ     DBUF$,,AUTO

     4364    11037    2          FAK=1;

  11037  1 014710   000001 235007                    LDA     1,DL
         1 014711   200043 755100                    STA     FAK,,AUTO

     4365    11038    2          CALL CALCSEG ALTRET(ERR);

  11038  1 014712   002703 701000 1                  TSX1    CALCSEG
         1 014713   014720 702000 1                  TSX2    ERR

     4366    11039    2          CALL ADDKEY ALTRET(ERR);

  11039  1 014714   000301 701000 1                  TSX1    ADDKEY
         1 014715   014720 702000 1                  TSX2    ERR

     4367    11040
     4368    11041    2          RETURN;

  11041  1 014716   200106 221300                    LDX1  ! ICHNG,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:775  
         1 014717   000001 702211                    TSX2  ! 1,X1

     4369    11042    2   ERR:   ALTRETURN;

  11042  1 014720   200106 221300       ERR          LDX1  ! ICHNG,,AUTO
         1 014721   000000 702211                    TSX2  ! 0,X1

     4370    11043    2          END NEWKEY;
     4371    11044               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:776  
     4372    11045        /*I*     NAME:     NEWSEG
     4373    11046                 PURPOSE:  To add a new segment to a key
     4374    11047                 DESCRIPTION:
     4375    11048                      Calculate the number of segments we need, then call
     4376    11049                 ADDSEG to add them.
     4377    11050
     4378    11051                      If this file has alternate indexes, then we'll need to
     4379    11052                 add segments to those too.  Loop through all of the alternate
     4380    11053                 indexes.  If the index is unique, or this isn't load mode,
     4381    11054                 then this index needs to be kept up to date.  Find the key
     4382    11055                 that we are adding to.  Set ANEWSEG to %YES.  This means
     4383    11056                 that we will be adding a new segment, possibly to a duplicate
     4384    11057                 record in the middle of a list of duplicates.  This is
     4385    11058                 different from the usual segment addition, which always
     4386    11059                 adds to the end of the list.
     4387    11060        */
     4388    11061                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:777  
     4389    11062    1   NEWSEG: PROC ALTRET;

  11062  1 014722   200114 741300       NEWSEG       STX1  ! I,,AUTO

     4390    11063    2          DCL I SBIN;
     4391    11064    2          DCL NUMENTS UBIN;
     4392    11065    2          DCL UNIQUE BIT(1);
     4393    11066        /* */
     4394    11067    2          CALL CALCSEG ALTRET(ERR);

  11067  1 014723   002703 701000 1                  TSX1    CALCSEG
         1 014724   015103 702000 1                  TSX2    ERR

     4395    11068    2          CALL ADDSEG ALTRET(ERR);

  11068  1 014725   000327 701000 1                  TSX1    ADDSEG
         1 014726   015103 702000 1                  TSX2    ERR

     4396    11069
     4397    11070    2          IF ALTKEY$ ~= ADDR(NIL) THEN

  11070  1 014727   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 014730   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 014731   015053 600000 1                  TZE     s:11107

     4398    11071    3             DO;   /* UPDATE ALTERNATE INDEXES */

     4399    11072    3             IF ORG = %INDEXED# THEN

  11072  1 014732   200022 235100                    LDA     ORG,,AUTO
         1 014733   000006 115007                    CMPA    6,DL
         1 014734   014743 601000 1                  TNZ     s:11075

     4400    11073    3                NUMENTS=ALTKEYS.NUMENTS;

  11073  1 014735   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 014736   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:778  
         1 014737   000022 772000                    QRL     18
         1 014740   000377 376007                    ANQ     255,DL
         1 014741   200116 756100                    STQ     NUMENTS,,AUTO
         1 014742   014747 710000 1                  TRA     s:11077

     4401    11074    3             ELSE
     4402    11075    3                NUMENTS=IRKEYS.NKEYS;

  11075  1 014743   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 014744   000000 236100                    LDQ     0,,PR0
         1 014745   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 014746   200116 756100                    STQ     NUMENTS,,AUTO

     4403    11076
     4404    11077    4             DO I=2 TO NUMENTS;

  11077  1 014747   000002 235007                    LDA     2,DL
         1 014750   200115 755100                    STA     I,,AUTO
         1 014751   015035 710000 1                  TRA     s:11099+1

     4405    11078    4                IF ORG = %INDEXED# THEN

  11078  1 014752   200022 235100                    LDA     ORG,,AUTO
         1 014753   000006 115007                    CMPA    6,DL
         1 014754   014765 601000 1                  TNZ     s:11081

     4406    11079    4                   UNIQUE=ALTKEYS.K.UNIQUE(I-1);

  11079  1 014755   200115 236100                    LDQ     I,,AUTO
         1 014756   000006 402007                    MPY     6,DL
         1 014757   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 014760   077776 236106                    LDQ     -2,QL,PR0
         1 014761   000011 736000                    QLS     9
         1 014762   400000 376003                    ANQ     -131072,DU
         1 014763   200117 756100                    STQ     UNIQUE,,AUTO
         1 014764   014774 710000 1                  TRA     s:11083

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:779  
     4407    11080    4                ELSE
     4408    11081    4                   UNIQUE=IRKEYS.K.UNIQUE(I-1);

  11081  1 014765   200115 236100                    LDQ     I,,AUTO
         1 014766   000007 402007                    MPY     7,DL
         1 014767   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 014770   077777 236106                    LDQ     -1,QL,PR0
         1 014771   000022 736000                    QLS     18
         1 014772   400000 376003                    ANQ     -131072,DU
         1 014773   200117 756100                    STQ     UNIQUE,,AUTO

     4409    11082
     4410    11083    4                IF (NOT F$DCB.LDFLG) OR

  11083  1 014774   200007 471500                    LDP1    JDCB$,,AUTO
         1 014775   100064 236100                    LDQ     52,,PR1
         1 014776   200000 316007                    CANQ    65536,DL
         1 014777   015005 600000 1                  TZE     s:11086
         1 015000   200117 234100                    SZN     UNIQUE,,AUTO
         1 015001   015031 605000 1                  TPL     s:11098
         1 015002   100103 236100                    LDQ     67,,PR1
         1 015003   002000 316007                    CANQ    1024,DL
         1 015004   015031 601000 1                  TNZ     s:11098

     4411    11084    4                   (UNIQUE AND NOT F$DCB.UNIQUEBLD) THEN
     4412    11085    5                   DO;   /* ADD SEG NOW */

     4413    11086    5                   INDEX#=I;

  11086  1 015005   200115 235100                    LDA     I,,AUTO
         1 015006   200011 755100                    STA     INDEX#,,AUTO

     4414    11087    5                   CALL SETINDEX ALTRET(ERR);

  11087  1 015007   021667 701000 1                  TSX1    SETINDEX
         1 015010   015103 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:780  
     4415    11088
     4416    11089    5                   KEYIN$=PINCRC(B$PS2$, F$DCB.KEYX);

  11089  1 015011   200007 470500                    LDP0    JDCB$,,AUTO
         1 015012   000036 236100                    LDQ     30,,PR0
         1 015013   000022 772000                    QRL     18
         1 015014   000020 736000                    QLS     16
         1 015015   000000 036000 xsym               ADLQ    B$PS2$
         1 015016   200037 756100                    STQ     KEYIN$,,AUTO

     4417    11090    5                   COMFLG=%USEREC;

  11090  1 015017   000001 235007                    LDA     1,DL
         1 015020   200060 755100                    STA     COMFLG,,AUTO

     4418    11091    5                   CALL FINDKEY ALTRET(FI);

  11091  1 015021   007536 701000 1                  TSX1    FINDKEY
         1 015022   015055 702000 1                  TSX2    FI

     4419    11092
     4420    11093    5                   ANEWSEG=%YESS;

  11093  1 015023   000001 235007                    LDA     1,DL
         1 015024   200057 755100                    STA     ANEWSEG,,AUTO

     4421    11094    5                   CALL ADDSEG ALTRET(ERR);

  11094  1 015025   000327 701000 1                  TSX1    ADDSEG
         1 015026   015103 702000 1                  TSX2    ERR

     4422    11095    5                   ANEWSEG=%NOO;

  11095  1 015027   200057 450100                    STZ     ANEWSEG,,AUTO

     4423    11096    5                   END;  /* ADD SEG NOW */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:781  
  11096  1 015030   015034 710000 1                  TRA     s:11099

     4424    11097    4                ELSE
     4425    11098    4                   FM$CFU.ALTBLD='1'B;

  11098  1 015031   200010 473500                    LDP3    CFU$,,AUTO
         1 015032   000004 236003                    LDQ     4,DU
         1 015033   300006 256100                    ORSQ    6,,PR3

     4426    11099    4             END;  /* DO I */

  11099  1 015034   200115 054100                    AOS     I,,AUTO
         1 015035   200116 236100                    LDQ     NUMENTS,,AUTO
         1 015036   014752 604000 1                  TMI     s:11078
         1 015037   200115 116100                    CMPQ    I,,AUTO
         1 015040   014752 605000 1                  TPL     s:11078

     4427    11100
     4428    11101    3             INDEX#=1;

  11101  1 015041   000001 235007                    LDA     1,DL
         1 015042   200011 755100                    STA     INDEX#,,AUTO

     4429    11102    3             CALL SETINDEX ALTRET(ERR);

  11102  1 015043   021667 701000 1                  TSX1    SETINDEX
         1 015044   015103 702000 1                  TSX2    ERR

     4430    11103    3             CALL RESTOREPOS ALTRET(ERR);

  11103  1 015045   021403 701000 1                  TSX1    RESTOREPOS
         1 015046   015103 702000 1                  TSX2    ERR

     4431    11104    3             SEG$=PINCRW(BUF$, SEGX);

  11104  1 015047   200013 236100                    LDQ     SEGX,,AUTO
         1 015050   000022 736000                    QLS     18
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:782  
         1 015051   200024 036100                    ADLQ    BUF$,,AUTO
         1 015052   200014 756100                    STQ     SEG$,,AUTO

     4432    11105    3             END;  /* UPDATE ALTERNATE INDEXES */

     4433    11106
     4434    11107    2          RETURN;

  11107  1 015053   200114 221300                    LDX1  ! I,,AUTO
         1 015054   000001 702211                    TSX2  ! 1,X1

     4435    11108    2   FI:    DA=F$DCB.BFR.DA(1);

  11108  1 015055   200007 470500       FI           LDP0    JDCB$,,AUTO
         1 015056   000116 236100                    LDQ     78,,PR0
         1 015057   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 015060   200021 756100                    STQ     DA,,AUTO

     4436    11109    2          CALL FMB$LOGERR(%E$FREC, 75, 8, DA,,,,, INDEX#);

  11109  1 015061   200011 631500                    EPPR1   INDEX#,,AUTO
         1 015062   200176 451500                    STP1    STEMP_FIELDIN+10,,AUTO
         1 015063   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 015064   000001 235000 xsym               LDA     B_VECTNIL+1
         1 015065   200174 757100                    STAQ    STEMP_FIELDIN+8,,AUTO
         1 015066   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 015067   000001 235000 xsym               LDA     B_VECTNIL+1
         1 015070   200172 757100                    STAQ    STEMP_FIELDIN+6,,AUTO
         1 015071   200021 633500                    EPPR3   DA,,AUTO
         1 015072   200171 453500                    STP3    STEMP_FIELDIN+5,,AUTO
         1 015073   000023 236000 2                  LDQ     19
         1 015074   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 015075   000036 237000 2                  LDAQ    30
         1 015076   200166 757100                    STAQ    STEMP_FIELDIN+2,,AUTO
         1 015077   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 015100   000021 631400 2                  EPPR1   17
         1 015101   000000 701000 xent               TSX1    FMB$LOGERR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:783  
         1 015102   000000 011000                    NOP     0

     4437    11110    2   ERR:   ALTRETURN;

  11110  1 015103   200114 221300       ERR          LDX1  ! I,,AUTO
         1 015104   000000 702211                    TSX2  ! 0,X1

     4438    11111    2          END NEWSEG;
     4439    11112               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:784  
     4440    11113        /*I*     NAME:     NXTKEY
     4441    11114                 PURPOSE:  To position to the next key in a file
     4442    11115                 DESCRIPTION:
     4443    11116                      If RPOS is set, then that means that we are already pointed
     4444    11117                 to the next key.  If we are positioned beyond the end of the
     4445    11118                 file (this may occur in shared files with multiple updaters),
     4446    11119                 then go forward until we find a key.
     4447    11120
     4448    11121                      If RPOS isn't set, then increment the record counter.  Again,
     4449    11122                 make sure we aren't positioned beyond the end of the file.
     4450    11123        */
     4451    11124                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:785  
     4452    11125    1   NXTKEY: PROC ALTRET;

  11125  1 015105   200134 741300       NXTKEY       STX1  ! KTPTR3$,,AUTO

     4453    11126    2          DCL NOMORE SBIN;
     4454    11127        /* */
     4455    11128    2          NOMORE=0;

  11128  1 015106   200135 450100                    STZ     NOMORE,,AUTO

     4456    11129    2          GOTO COMMON;

  11129  1 015107   015113 710000 1                  TRA     COMMON

     4457    11130        /* */
     4458    11131    2   NXTKEYNM: ENTRY ALTRET;

  11131  1 015110   200134 741300       NXTKEYNM     STX1  ! KTPTR3$,,AUTO

     4459    11132    2          NOMORE=1;

  11132  1 015111   000001 235007                    LDA     1,DL
         1 015112   200135 755100                    STA     NOMORE,,AUTO

  11132  1 015113                       COMMON       null
     4460    11133
     4461    11134    2   COMMON: ;
     4462    11135        /* */
     4463    11136    2          IF F$DCB.RPOS THEN

  11136  1 015113   200007 470500                    LDP0    JDCB$,,AUTO
         1 015114   000064 236100                    LDQ     52,,PR0
         1 015115   010000 316007                    CANQ    4096,DL
         1 015116   015142 600000 1                  TZE     s:11151

     4464    11137    3             DO;   /* SHOULD BE AT KEY */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:786  
     4465    11138    3             IF CRECX > KEYCNT THEN

  11138  1 015117   200015 236100                    LDQ     CRECX,,AUTO
         1 015120   015123 604000 1                  TMI     s:11141
         1 015121   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 015122   015136 604400 1                  TMOZ    s:11147

     4466    11139    4                DO;    /* FIRST RECORD OF NEXT GRAN */

     4467    11140    5                DO UNTIL (KEYCNT > 0);

     4468    11141    5                   IF NOMORE = 1 THEN

  11141  1 015123   200135 235100                    LDA     NOMORE,,AUTO
         1 015124   000001 115007                    CMPA    1,DL
         1 015125   015130 601000 1                  TNZ     s:11143

     4469    11142    5                      ALTRETURN;

  11142  1 015126   200134 221300                    LDX1  ! KTPTR3$,,AUTO
         1 015127   000000 702211                    TSX2  ! 0,X1

     4470    11143    5                   CALL FLINK ALTRET(ERR);

  11143  1 015130   010165 701000 1                  TSX1    FLINK
         1 015131   015173 702000 1                  TSX2    ERR

     4471    11144    5                END;

  11144  1 015132   200017 235100                    LDA     KEYCNT,,AUTO
         1 015133   015123 604400 1                  TMOZ    s:11141

     4472    11145    4                CRECX=1;

  11145  1 015134   000001 236007                    LDQ     1,DL
         1 015135   200015 756100                    STQ     CRECX,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:787  
     4473    11146    4                END;   /* FIRST RECORD OF NEXT GRAN */

     4474    11147    3             F$DCB.RPOS='0'B;

  11147  1 015136   200007 470500                    LDP0    JDCB$,,AUTO
         1 015137   000005 236000 2                  LDQ     5
         1 015140   000064 356100                    ANSQ    52,,PR0

     4475    11148    3             END;  /* SHOULD BE AT KEY */

  11148  1 015141   015164 710000 1                  TRA     s:11164

     4476    11149    2          ELSE
     4477    11150    3             DO;   /* NEXT KEY PLEASE */

     4478    11151    3             IF CRECX >= KEYCNT THEN

  11151  1 015142   200015 236100                    LDQ     CRECX,,AUTO
         1 015143   015146 604000 1                  TMI     s:11154
         1 015144   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 015145   015162 604000 1                  TMI     s:11161

     4479    11152    4                DO;   /* NEXT GRANULE */

     4480    11153    5                DO UNTIL (KEYCNT > 0);

     4481    11154    5                   IF NOMORE = 1 THEN

  11154  1 015146   200135 235100                    LDA     NOMORE,,AUTO
         1 015147   000001 115007                    CMPA    1,DL
         1 015150   015153 601000 1                  TNZ     s:11156

     4482    11155    5                      ALTRETURN;

  11155  1 015151   200134 221300                    LDX1  ! KTPTR3$,,AUTO
         1 015152   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:788  
     4483    11156    5                   CALL FLINK ALTRET(ERR);

  11156  1 015153   010165 701000 1                  TSX1    FLINK
         1 015154   015173 702000 1                  TSX2    ERR

     4484    11157    5                END;

  11157  1 015155   200017 235100                    LDA     KEYCNT,,AUTO
         1 015156   015146 604400 1                  TMOZ    s:11154

     4485    11158    4                CRECX=1;

  11158  1 015157   000001 236007                    LDQ     1,DL
         1 015160   200015 756100                    STQ     CRECX,,AUTO

     4486    11159    4                END;  /* NEXT GRANULE */

  11159  1 015161   015164 710000 1                  TRA     s:11164

     4487    11160    3             ELSE
     4488    11161    3                CRECX=CRECX+1;

  11161  1 015162   000001 036007                    ADLQ    1,DL
         1 015163   200015 756100                    STQ     CRECX,,AUTO

     4489    11162    3             END;  /* NEXT KEY PLEASE */

     4490    11163
     4491    11164    2          F$DCB.CRECX=CRECX;

  11164  1 015164   200015 720100                    LXL0    CRECX,,AUTO
         1 015165   200007 470500                    LDP0    JDCB$,,AUTO
         1 015166   000067 440100                    SXL0    55,,PR0

     4492    11165    2          CALL SETPTRS;

  11165  1 015167   022001 701000 1                  TSX1    SETPTRS
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:789  
         1 015170   000000 011000                    NOP     0

     4493    11166    2          RETURN;

  11166  1 015171   200134 221300                    LDX1  ! KTPTR3$,,AUTO
         1 015172   000001 702211                    TSX2  ! 1,X1

     4494    11167    2   ERR:   ALTRETURN;

  11167  1 015173   200134 221300       ERR          LDX1  ! KTPTR3$,,AUTO
         1 015174   000000 702211                    TSX2  ! 0,X1

     4495    11168    2          END NXTKEY;
     4496    11169               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:790  
     4497    11170        /*I*     NAME:     NXTREC
     4498    11171                 PURPOSE:  To position to the next record in a file
     4499    11172                 DESCRIPTION:
     4500    11173                      An option the user can specify is "KEYCHNG".  This means
     4501    11174                 that we altreturn if we hit the end of a list of duplicates.
     4502    11175                 If KEYCHNG is specified, and we are at the beginning of a list
     4503    11176                 of duplicates, then report an error.  Otherwise, we just get
     4504    11177                 the next key.
     4505    11178
     4506    11179                      If RPOS is set, then we are already positioned to the next
     4507    11180                 record.  Otherwise, loop until we hit the end of a list of
     4508    11181                 dups, or we find the beginning of another duplicate key.
     4509    11182                 Again, if KEYCHNG is specified, we report an error, if not, we
     4510    11183                 get the next key.
     4511    11184        */
     4512    11185                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:791  
     4513    11186    1   NXTREC: PROC ALTRET;

  11186  1 015175   200132 741300       NXTREC       STX1  ! BUF4$,,AUTO

     4514    11187    2          DCL KEYCHNG SBIN;
     4515    11188        /* */
     4516    11189    2          KEYCHNG=0;

  11189  1 015176   200133 450100                    STZ     KEYCHNG,,AUTO

     4517    11190    2          GOTO NXTR;

  11190  1 015177   015203 710000 1                  TRA     NXTR

     4518    11191
     4519    11192    2   NXTRECNM: ENTRY ALTRET;

  11192  1 015200   200132 741300       NXTRECNM     STX1  ! BUF4$,,AUTO

     4520    11193    2          KEYCHNG=1;

  11193  1 015201   000001 235007                    LDA     1,DL
         1 015202   200133 755100                    STA     KEYCHNG,,AUTO

     4521    11194
     4522    11195    2   NXTR:  KEY$=ADDR(NIL);

  11195  1 015203   000001 236000 xsym  NXTR         LDQ     B_VECTNIL+1
         1 015204   200020 756100                    STQ     KEY$,,AUTO

     4523    11196    2          IF INDEX# = 0 OR SEGX = 0 THEN

  11196  1 015205   200011 235100                    LDA     INDEX#,,AUTO
         1 015206   015211 600000 1                  TZE     s:11197
         1 015207   200013 235100                    LDA     SEGX,,AUTO
         1 015210   015233 601000 1                  TNZ     s:11216

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:792  
     4524    11197    2             IF KEYCHNG = 1 THEN

  11197  1 015211   200133 235100                    LDA     KEYCHNG,,AUTO
         1 015212   000001 115007                    CMPA    1,DL
         1 015213   015227 601000 1                  TNZ     s:11212

     4525    11198    3                DO;   /* KEY CHANGED */

     4526    11199    3                B$JIT.ERR=ERRKEYCHNG;

  11199  1 015214   000024 236000 0                  LDQ     ERRKEYCHNG
         1 015215   000000 470400 xsym               LDP0    B$JIT$
         1 015216   000012 756100                    STQ     10,,PR0

     4527    11200        /*E*   ERROR:   FMG-E$KEYCHNG-2
     4528    11201               MESSAGE: There are no more records of the same key.
     4529    11202        */
     4530    11203    3                IF INDEX# > 0 THEN

  11203  1 015217   200011 235100                    LDA     INDEX#,,AUTO
         1 015220   015225 600000 1                  TZE     s:11208

     4531    11204    4                   DO;   /* RESET SEGX */

     4532    11205    4                   SEGX=0;

  11205  1 015221   200013 450100                    STZ     SEGX,,AUTO

     4533    11206    4                   F$DCB.SEGX=0;

  11206  1 015222   000000 220003                    LDX0    0,DU
         1 015223   200007 471500                    LDP1    JDCB$,,AUTO
         1 015224   100100 440100                    SXL0    64,,PR1

     4534    11207    4                   END;  /* RESET SEGX */

     4535    11208    3                ALTRETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:793  

  11208  1 015225   200132 221300                    LDX1  ! BUF4$,,AUTO
         1 015226   000000 702211                    TSX2  ! 0,X1

     4536    11209    3                END;  /* KEY CHANGED */
     4537    11210    2             ELSE
     4538    11211    3                DO;   /* NEXT KEY */

     4539    11212    3                CALL NXTKEY ALTRET(ERR);

  11212  1 015227   015105 701000 1                  TSX1    NXTKEY
         1 015230   015330 702000 1                  TSX2    ERR

     4540    11213    3                RETURN;

  11213  1 015231   200132 221300                    LDX1  ! BUF4$,,AUTO
         1 015232   000001 702211                    TSX2  ! 1,X1

     4541    11214    3                END;  /* NEXT KEY */
     4542    11215
     4543    11216    2          IF F$DCB.RPOS THEN

  11216  1 015233   200007 470500                    LDP0    JDCB$,,AUTO
         1 015234   000064 236100                    LDQ     52,,PR0
         1 015235   010000 316007                    CANQ    4096,DL
         1 015236   015275 600000 1                  TZE     LOOP

     4544    11217    2             IF CRECX > KEYCNT THEN

  11217  1 015237   200015 236100                    LDQ     CRECX,,AUTO
         1 015240   015243 604000 1                  TMI     s:11219
         1 015241   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 015242   015264 604400 1                  TMOZ    s:11233

     4545    11218    3                DO;   /* FIRST RECORD OF NEXT GRANULE */

     4546    11219    3                SEGX=FM$GRAN.NAVX;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:794  

  11219  1 015243   200024 471500                    LDP1    BUF$,,AUTO
         1 015244   100001 236100                    LDQ     1,,PR1
         1 015245   000022 772000                    QRL     18
         1 015246   200013 756100                    STQ     SEGX,,AUTO

     4547    11220    4   LOOP1:       DO WHILE('1'B);

  11220  1 015247                       LOOP1        null
     4548    11221    4                   CALL NXTSEG ALTRET(ERR);

  11221  1 015247   015351 701000 1                  TSX1    NXTSEG
         1 015250   015330 702000 1                  TSX2    ERR

     4549    11222    4                   IF SEG$ ~= ADDR(NIL) THEN

  11222  1 015251   200014 236100                    LDQ     SEG$,,AUTO
         1 015252   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 015253   015260 600000 1                  TZE     s:11229

     4550    11223    4                      IF FM$MISEG.FAK THEN

  11223  1 015254   200014 470500                    LDP0    SEG$,,AUTO
         1 015255   000000 234100                    SZN     0,,PR0
         1 015256   015260 604000 1                  TMI     s:11229
         1 015257   015247 710000 1                  TRA     LOOP1

     4551    11224    4                         EXIT LOOP1;
     4552    11225    4                      ELSE;
     4553    11226    4                   ELSE
     4554    11227    4                      EXIT LOOP1;
     4555    11228    4                END;

     4556    11229    3                F$DCB.RPOS='0'B;

  11229  1 015260   200007 470500                    LDP0    JDCB$,,AUTO
         1 015261   000005 236000 2                  LDQ     5
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:795  
         1 015262   000064 356100                    ANSQ    52,,PR0

     4557    11230    3                END;  /* FIRST RECORD OF NEXT GRANULE */

  11230  1 015263   015326 710000 1                  TRA     s:11263

     4558    11231    2             ELSE
     4559    11232    3                DO;   /* ALREADY THERE */

     4560    11233    3                F$DCB.RPOS='0'B;

  11233  1 015264   000005 236000 2                  LDQ     5
         1 015265   000064 356100                    ANSQ    52,,PR0

     4561    11234    3                SEGX=F$DCB.SEGX;

  11234  1 015266   000100 236100                    LDQ     64,,PR0
         1 015267   777777 376007                    ANQ     -1,DL
         1 015270   200013 756100                    STQ     SEGX,,AUTO

     4562    11235    3                SEG$=PINCRW(BUF$, SEGX);

  11235  1 015271   000022 736000                    QLS     18
         1 015272   200024 036100                    ADLQ    BUF$,,AUTO
         1 015273   200014 756100                    STQ     SEG$,,AUTO

     4563    11236    3                END;  /* ALREADY THERE */

  11236  1 015274   015326 710000 1                  TRA     s:11263

     4564    11237    2          ELSE
     4565    11238    3             DO;   /* NEXT RECORD */

     4566    11239    4   LOOP:     DO WHILE('1'B);

  11239  1 015275                       LOOP         null
     4567    11240    4                CALL NXTSEG ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:796  

  11240  1 015275   015351 701000 1                  TSX1    NXTSEG
         1 015276   015330 702000 1                  TSX2    ERR

     4568    11241    4                IF SEG$ ~= ADDR(NIL) THEN

  11241  1 015277   200014 236100                    LDQ     SEG$,,AUTO
         1 015300   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 015301   015306 600000 1                  TZE     s:11249

     4569    11242    4                   IF FM$MISEG.FAK THEN

  11242  1 015302   200014 470500                    LDP0    SEG$,,AUTO
         1 015303   000000 234100                    SZN     0,,PR0
         1 015304   015306 604000 1                  TMI     s:11249
         1 015305   015275 710000 1                  TRA     LOOP

     4570    11243    4                      EXIT LOOP;
     4571    11244    4                   ELSE;
     4572    11245    4                ELSE
     4573    11246    4                   EXIT LOOP;
     4574    11247    4             END;  /* WHILE */

     4575    11248
     4576    11249    3             IF SEG$ = ADDR(NIL) THEN

  11249  1 015306   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 015307   015326 601000 1                  TNZ     s:11263

     4577    11250    3                IF KEYCHNG = 1 THEN

  11250  1 015310   200133 235100                    LDA     KEYCHNG,,AUTO
         1 015311   000001 115007                    CMPA    1,DL
         1 015312   015324 601000 1                  TNZ     s:11259

     4578    11251    4                   DO;   /* KEY CHANGED */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:797  
     4579    11252    4                   B$JIT.ERR=ERRKEYCHNG;

  11252  1 015313   000024 236000 0                  LDQ     ERRKEYCHNG
         1 015314   000000 470400 xsym               LDP0    B$JIT$
         1 015315   000012 756100                    STQ     10,,PR0

     4580    11253    4                   SEGX=0;

  11253  1 015316   200013 450100                    STZ     SEGX,,AUTO

     4581    11254    4                   F$DCB.SEGX=0;

  11254  1 015317   000000 220003                    LDX0    0,DU
         1 015320   200007 471500                    LDP1    JDCB$,,AUTO
         1 015321   100100 440100                    SXL0    64,,PR1

     4582    11255    4                   ALTRETURN;

  11255  1 015322   200132 221300                    LDX1  ! BUF4$,,AUTO
         1 015323   000000 702211                    TSX2  ! 0,X1

     4583    11256    4                   END;  /* KEY CHANGED */
     4584    11257    3                ELSE
     4585    11258    4                   DO;   /* NEXT KEY */

     4586    11259    4                   CALL NXTKEY ALTRET(ERR);

  11259  1 015324   015105 701000 1                  TSX1    NXTKEY
         1 015325   015330 702000 1                  TSX2    ERR

     4587    11260    4                   END;  /* NEXT KEY */

     4588    11261    3             END;  /* NEXT RECORD */

     4589    11262
     4590    11263    2          RETURN;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:798  
  11263  1 015326   200132 221300                    LDX1  ! BUF4$,,AUTO
         1 015327   000001 702211                    TSX2  ! 1,X1

     4591    11264    2   ERR:   ALTRETURN;

  11264  1 015330   200132 221300       ERR          LDX1  ! BUF4$,,AUTO
         1 015331   000000 702211                    TSX2  ! 0,X1

     4592    11265    2          END NXTREC;
     4593    11266               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:799  
     4594    11267        /*I*     NAME:     NXTRECND
     4595    11268                 PURPOSE:  To get the next non-deleted record
     4596    11269                 DESCRIPTION:
     4597    11270                      If this is the primary index, loop until we find a record
     4598    11271                 that isn't deleted, or hit EOF.  If this is a secondary index,
     4599    11272                 then there is no such thing as records that are marked deleted,
     4600    11273                 when a record is deleted, it goes away.
     4601    11274        */
     4602    11275    1   NXTRECND: PROC ALTRET;

  11275  1 015332   200110 741300       NXTRECND     STX1  ! NUMENTS,,AUTO

     4603    11276        /* */
     4604    11277    2          IF INDEX# = 0 THEN

  11277  1 015333   200011 235100                    LDA     INDEX#,,AUTO
         1 015334   015343 601000 1                  TNZ     s:11285

     4605    11278    3             DO;   /* PRIMARY KEY */

     4606    11279    4             DO UNTIL (NOT FM$KEYENT.D);

     4607    11280    4                CALL NXTKEY ALTRET(ERR);

  11280  1 015335   015105 701000 1                  TSX1    NXTKEY
         1 015336   015347 702000 1                  TSX2    ERR

     4608    11281    4             END;

  11281  1 015337   200020 470500                    LDP0    KEY$,,AUTO
         1 015340   000000 234100                    SZN     0,,PR0
         1 015341   015335 604000 1                  TMI     s:11280

     4609    11282    3             END;  /* PRIMARY KEY */

  11282  1 015342   015345 710000 1                  TRA     s:11288

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:800  
     4610    11283    2          ELSE
     4611    11284    3             DO;   /* NEXT RECORD */

     4612    11285    3             CALL NXTREC ALTRET(ERR);

  11285  1 015343   015175 701000 1                  TSX1    NXTREC
         1 015344   015347 702000 1                  TSX2    ERR

     4613    11286    3             END;  /* NEXT RECORD */

     4614    11287
     4615    11288    2          RETURN;

  11288  1 015345   200110 221300                    LDX1  ! NUMENTS,,AUTO
         1 015346   000001 702211                    TSX2  ! 1,X1

     4616    11289    2   ERR:   ALTRETURN;

  11289  1 015347   200110 221300       ERR          LDX1  ! NUMENTS,,AUTO
         1 015350   000000 702211                    TSX2  ! 0,X1

     4617    11290    2          END NXTRECND;
     4618    11291               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:801  
     4619    11292        /*I*     NAME:     NXTSEG
     4620    11293                 PURPOSE:  To get the next segment
     4621    11294                 DESCRIPTION:
     4622    11295                      Increment the segment pointer, if it points past the end
     4623    11296                 of the granule, then loop until we find a granule with something
     4624    11297                 in it.
     4625    11298
     4626    11299                      LASTSEG will be the last segment for a key.  If we point
     4627    11300                 past the list of segments for a key, then there is nothing
     4628    11301                 to return.  Otherwise, set up a pointer to the next segment.
     4629    11302        */
     4630    11303                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:802  
     4631    11304    1   NXTSEG: PROC ALTRET;

  11304  1 015351   200134 741300       NXTSEG       STX1  ! KTPTR3$,,AUTO

     4632    11305    2          DCL ENDGRAN SBIN;
     4633    11306    2          DCL LASTSEG SBIN;
     4634    11307        /* */
     4635    11308    2          ENDGRAN=FM$GRAN.NAVX;

  11308  1 015352   200024 470500                    LDP0    BUF$,,AUTO
         1 015353   000001 236100                    LDQ     1,,PR0
         1 015354   000022 772000                    QRL     18
         1 015355   200135 756100                    STQ     ENDGRAN,,AUTO

     4636    11309
     4637    11310    2          SEGX=SEGX+2;

  11310  1 015356   000002 236007                    LDQ     2,DL
         1 015357   200013 056100                    ASQ     SEGX,,AUTO

     4638    11311    3          DO WHILE (SEGX >= ENDGRAN);

  11311  1 015360   200013 236100                    LDQ     SEGX,,AUTO
         1 015361   200135 116100                    CMPQ    ENDGRAN,,AUTO
         1 015362   015403 604000 1                  TMI     s:11319

     4639    11312    3             CALL FLINK ALTRET(ERR);

  11312  1 015363   010165 701000 1                  TSX1    FLINK
         1 015364   015453 702000 1                  TSX2    ERR

     4640    11313    3             CRECX=0;

  11313  1 015365   200015 450100                    STZ     CRECX,,AUTO

     4641    11314    3             F$DCB.CRECX=0;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:803  
  11314  1 015366   000000 220003                    LDX0    0,DU
         1 015367   200007 470500                    LDP0    JDCB$,,AUTO
         1 015370   000067 440100                    SXL0    55,,PR0

     4642    11315    3             SEGX=FM$GRAN.FCEX+SIZEW(FM$KEYTBL);

  11315  1 015371   200024 471500                    LDP1    BUF$,,AUTO
         1 015372   100002 236100                    LDQ     2,,PR1
         1 015373   000022 772000                    QRL     18
         1 015374   000106 036007                    ADLQ    70,DL
         1 015375   200013 756100                    STQ     SEGX,,AUTO

     4643    11316    3             ENDGRAN=FM$GRAN.NAVX;

  11316  1 015376   100001 236100                    LDQ     1,,PR1
         1 015377   000022 772000                    QRL     18
         1 015400   200135 756100                    STQ     ENDGRAN,,AUTO

     4644    11317    3          END;  /* WHILE */

  11317  1 015401   200013 116100                    CMPQ    SEGX,,AUTO
         1 015402   015363 604400 1                  TMOZ    s:11312

     4645    11318
     4646    11319    2          IF CRECX < KEYCNT THEN

  11319  1 015403   200015 236100                    LDQ     CRECX,,AUTO
         1 015404   015432 604000 1                  TMI     s:11327
         1 015405   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 015406   015432 605000 1                  TPL     s:11327

     4647    11320    3             DO;   /* LAST SEG IN KEY */

     4648    11321    3             IF CRECX+1 < BOUND THEN

  11321  1 015407   000001 036007                    ADLQ    1,DL
         1 015410   015421 604000 1                  TMI     s:11324
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:804  
         1 015411   200016 116100                    CMPQ    BOUND,,AUTO
         1 015412   015421 605000 1                  TPL     s:11324

     4649    11322    3                LASTSEG=FM$KEYTBL(CRECX+1);

  11322  1 015413   200025 470500                    LDP0    KTPTR$,,AUTO
         1 015414   200015 235100                    LDA     CRECX,,AUTO
         1 015415   000100 101505                    MRL     fill='000'O
         1 015416   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         1 015417   200136 000004                    ADSC9   LASTSEG,,AUTO            cn=0,n=4
         1 015420   015434 710000 1                  TRA     s:11329

     4650    11323    3             ELSE
     4651    11324    3                LASTSEG=FM$KEYTBL(CRECX+1)+512;

  11324  1 015421   200025 470500                    LDP0    KTPTR$,,AUTO
         1 015422   200015 235100                    LDA     CRECX,,AUTO
         1 015423   000100 101505                    MRL     fill='000'O
         1 015424   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         1 015425   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 015426   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 015427   001000 036007                    ADLQ    512,DL
         1 015430   200136 756100                    STQ     LASTSEG,,AUTO

     4652    11325    3             END;  /* LAST SEG IN KEY */

  11325  1 015431   015434 710000 1                  TRA     s:11329

     4653    11326    2          ELSE
     4654    11327    2             LASTSEG=ENDGRAN;

  11327  1 015432   200135 235100                    LDA     ENDGRAN,,AUTO
         1 015433   200136 755100                    STA     LASTSEG,,AUTO

     4655    11328
     4656    11329    2          IF SEGX >= LASTSEG THEN

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:805  
  11329  1 015434   200013 236100                    LDQ     SEGX,,AUTO
         1 015435   200136 116100                    CMPQ    LASTSEG,,AUTO
         1 015436   015443 604000 1                  TMI     s:11335

     4657    11330    3             DO;   /* NO MORE */

     4658    11331    3             SEGX=0;

  11331  1 015437   200013 450100                    STZ     SEGX,,AUTO

     4659    11332    3             SEG$=ADDR(NIL);

  11332  1 015440   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 015441   200014 756100                    STQ     SEG$,,AUTO

     4660    11333    3             END;  /* NO MORE */

  11333  1 015442   015446 710000 1                  TRA     s:11337

     4661    11334    2          ELSE
     4662    11335    2             SEG$=PINCRW(BUF$, SEGX);

  11335  1 015443   000022 736000                    QLS     18
         1 015444   200024 036100                    ADLQ    BUF$,,AUTO
         1 015445   200014 756100                    STQ     SEG$,,AUTO

     4663    11336
     4664    11337    2          F$DCB.SEGX=SEGX;

  11337  1 015446   200013 720100                    LXL0    SEGX,,AUTO
         1 015447   200007 470500                    LDP0    JDCB$,,AUTO
         1 015450   000100 440100                    SXL0    64,,PR0

     4665    11338
     4666    11339    2          RETURN;

  11339  1 015451   200134 221300                    LDX1  ! KTPTR3$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:806  
         1 015452   000001 702211                    TSX2  ! 1,X1

     4667    11340    2   ERR:   IF B$JIT.ERR.CODE = %E$EOF THEN

  11340  1 015453   000000 470400 xsym  ERR          LDP0    B$JIT$
         1 015454   000012 236100                    LDQ     10,,PR0
         1 015455   377770 376007                    ANQ     131064,DL
         1 015456   000060 116007                    CMPQ    48,DL
         1 015457   015471 601000 1                  TNZ     s:11348

     4668    11341    3             DO;   /* END OF LINE */

     4669    11342    3             SEGX=0;

  11342  1 015460   200013 450100                    STZ     SEGX,,AUTO

     4670    11343    3             F$DCB.SEGX=0;

  11343  1 015461   000000 220003                    LDX0    0,DU
         1 015462   200007 471500                    LDP1    JDCB$,,AUTO
         1 015463   100100 440100                    SXL0    64,,PR1

     4671    11344    3             SEG$=ADDR(NIL);

  11344  1 015464   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 015465   200014 756100                    STQ     SEG$,,AUTO

     4672    11345    3             B$JIT.ERR='0'B;

  11345  1 015466   000012 450100                    STZ     10,,PR0

     4673    11346    3             RETURN;

  11346  1 015467   200134 221300                    LDX1  ! KTPTR3$,,AUTO
         1 015470   000001 702211                    TSX2  ! 1,X1

     4674    11347    3             END;  /* END OF LINE */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:807  
     4675    11348    2          ALTRETURN;

  11348  1 015471   200134 221300                    LDX1  ! KTPTR3$,,AUTO
         1 015472   000000 702211                    TSX2  ! 0,X1

     4676    11349    2          END NXTSEG;
     4677    11350               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:808  
     4678    11351        /*I*     NAME:     PFIL
     4679    11352                 PURPOSE:  To handle the M$PFIL pmme
     4680    11353                 DESCRIPTION:
     4681    11354                      If BOF was specified, position to the beginning of the file,
     4682    11355                 otherwise, position to the end of the file.
     4683    11356        */
     4684    11357    1   PFIL:  PROC ALTRET;

  11357  1 015473   200076 741300       PFIL         STX1  ! DELALL_FAST+2,,AUTO

     4685    11358        /* */
     4686    11359    2          IF FPT$PFIL_V.BOF THEN

  11359  1 015474   000000 470400 xsym               LDP0    B$PS0$
         1 015475   000000 236100                    LDQ     0,,PR0
         1 015476   400000 316007                    CANQ    -131072,DL
         1 015477   015503 600000 1                  TZE     s:11362

     4687    11360    2             CALL PTOBOF ALTRET(ERR);

  11360  1 015500   016372 701000 1                  TSX1    PTOBOF
         1 015501   015507 702000 1                  TSX2    ERR
         1 015502   015505 710000 1                  TRA     s:11364

     4688    11361    2          ELSE
     4689    11362    2             CALL PTOEOF ALTRET(ERR);

  11362  1 015503   016454 701000 1                  TSX1    PTOEOF
         1 015504   015507 702000 1                  TSX2    ERR

     4690    11363
     4691    11364    2          RETURN;

  11364  1 015505   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 015506   000001 702211                    TSX2  ! 1,X1

     4692    11365    2   ERR:   ALTRETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:809  

  11365  1 015507   200076 221300       ERR          LDX1  ! DELALL_FAST+2,,AUTO
         1 015510   000000 702211                    TSX2  ! 0,X1

     4693    11366    2          END PFIL;
     4694    11367               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:810  
     4695    11368        /*I*     NAME:     PREC
     4696    11369                 PURPOSE:  To handle the M$PRECORD pmme
     4697    11370                 DESCRIPTION:
     4698    11371                      F$DCB.ARS will be the number of records forward positioned
     4699    11372                 if the N option was specified.
     4700    11373
     4701    11374                      If the user specified BOF or EOF, then PFIL in the
     4702    11375                 appropriate direction.  If either is true, ignore KEYS, IDS,
     4703    11376                 and RECNUM since the PFIL operation prevents them from being
     4704    11377                 meaningful.  (BOF and EOF are especially nice when used on an
     4705    11378                 alternate index of a shared IREL file in order to obtain the
     4706    11379                 first or last existing key on the index. This can also be
     4707    11380                 done by PRECORDing with the minimum or maximum possible key.
     4708    11381                 But, for IREL files, such keys can be a real pain to initialize.)
     4709    11382
     4710    11383                      If neither BOF or EOF was specified, then check the
     4711    11384                 following.
     4712    11385
     4713    11386                      If the user specified an ID, but not a key, then he wants
     4714    11387                 to position by ID only.
     4715    11388
     4716    11389                      If a key was specified, then, if it was an irel file, check
     4717    11390                 out the key first for illegal fields.  Then try to find the key.
     4718    11391                 If the key was found, and an ID or RECNUM was specified, then
     4719    11392                 position again.
     4720    11393
     4721    11394                      Regardless of the other options specified, call MOVEN to
     4722    11395                 move the number of records specified by the N option.
     4723    11396
     4724    11397                      Next, return any information the user wants back, key
     4725    11398                 and/or ID.  If the user hit break while we were positioning
     4726    11399                 by N, the key and/or ID returned will reflect the record
     4727    11400                 positioned to when we stopped.
     4728    11401
     4729    11402                      Leaving this routine, RPOS will be set.  This means that we
     4730    11403                 are actually positioned to the "next" record.  This
     4731    11404                 is done because when the user does an M$PRECORD to a location,
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:811  
     4732    11405                 he actually wants to be positioned such that the next M$READ will
     4733    11406                 read from that location.
     4734    11407
     4735    11408                      If the key didn't exist, and an N was specified, then try
     4736    11409                 to move the number of records specified.  Otherwise, position
     4737    11410                 to the next non-deleted record.
     4738    11411        */
     4739    11412                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:812  
     4740    11413    1   PREC:  PROC ALTRET;

  11413  1 015511   200076 741300       PREC         STX1  ! DELALL_FAST+2,,AUTO

     4741    11414    2          DCL KLB SBIN;
     4742    11415    2          DCL I SBIN;
     4743    11416    2          DCL SAVE_ERR BIT(36) ALIGNED;
     4744    11417        /* */
     4745    11418    2          F$DCB.ARS=0;

  11418  1 015512   200007 470500                    LDP0    JDCB$,,AUTO
         1 015513   000000 450100                    STZ     0,,PR0

     4746    11419
     4747    11420    2          IF FPT$PRECORD_V.BOF OR FPT$PRECORD_V.EOF THEN

  11420  1 015514   000000 471400 xsym               LDP1    B$PS0$
         1 015515   100000 236100                    LDQ     0,,PR1
         1 015516   020000 316007                    CANQ    8192,DL
         1 015517   015522 601000 1                  TNZ     s:11422
         1 015520   010000 316007                    CANQ    4096,DL
         1 015521   015534 600000 1                  TZE     s:11429

     4748    11421    3             DO;  /* PFIL accordingly */

     4749    11422    3             IF FPT$PRECORD_V.BOF THEN

  11422  1 015522   020000 316007                    CANQ    8192,DL
         1 015523   015527 600000 1                  TZE     s:11424

     4750    11423    3                CALL PTOBOF ALTRET(ERR1);

  11423  1 015524   016372 701000 1                  TSX1    PTOBOF
         1 015525   016101 702000 1                  TSX2    ERR1
         1 015526   015531 710000 1                  TRA     s:11425

     4751    11424    3             ELSE CALL PTOEOF ALTRET(ERR1);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:813  

  11424  1 015527   016454 701000 1                  TSX1    PTOEOF
         1 015530   016101 702000 1                  TSX2    ERR1

     4752    11425    3             CALL RESTOREPOS ALTRET(ERR1);

  11425  1 015531   021403 701000 1                  TSX1    RESTOREPOS
         1 015532   016101 702000 1                  TSX2    ERR1

     4753    11426    3             END; /* PFIL accordingly */

  11426  1 015533   015704 710000 1                  TRA     PRECN

     4754    11427    2          ELSE
     4755    11428    3             DO;  /* Check for KEYS/IDS/RECNUM */

     4756    11429    3             IF FPT$PRECORD_V.IDS THEN

  11429  1 015534   040000 316007                    CANQ    16384,DL
         1 015535   015556 600000 1                  TZE     s:11439

     4757    11430    4                DO;   /* CHECK SIZE OF ID */

     4758    11431    4                CALL HFF$DSIZ(B$PS2$, I);

  11431  1 015536   200100 633500                    EPPR3   I,,AUTO
         1 015537   200167 453500                    STP3    STEMP_FIELDIN+3,,AUTO
         1 015540   000011 236000 2                  LDQ     9
         1 015541   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 015542   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 015543   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 015544   000000 701000 xent               TSX1    HFF$DSIZ
         1 015545   000000 011000                    NOP     0

     4759    11432    4                IF I < 8 THEN

  11432  1 015546   200100 235100                    LDA     I,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:814  
         1 015547   000010 115007                    CMPA    8,DL
         1 015550   015556 605000 1                  TPL     s:11439

     4760    11433    5                   DO;   /* TOO SMALL */

     4761    11434    5                   B$JIT.ERR=ERRIDSMALL;

  11434  1 015551   000032 236000 0                  LDQ     ERRIDSMALL
         1 015552   000000 470400 xsym               LDP0    B$JIT$
         1 015553   000012 756100                    STQ     10,,PR0

     4762    11435    5                   ALTRETURN;

  11435  1 015554   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 015555   000000 702211                    TSX2  ! 0,X1

     4763    11436    5                   END;  /* TOO SMALL */
     4764    11437    4                END;  /* CHECK SIZE OF ID */
     4765    11438
     4766    11439    3             IF FPT$PRECORD_V.IDS AND (NOT FPT$PRECORD_V.KEYS) THEN

  11439  1 015556   000000 470400 xsym               LDP0    B$PS0$
         1 015557   000000 236100                    LDQ     0,,PR0
         1 015560   040000 316007                    CANQ    16384,DL
         1 015561   015614 600000 1                  TZE     s:11459
         1 015562   400000 316007                    CANQ    -131072,DL
         1 015563   015614 601000 1                  TNZ     s:11459

     4767    11440    4                DO;   /* Position by ID only */

     4768    11441    4                IF ORG ~= %INDEXED# AND ORG ~= %IREL# THEN

  11441  1 015564   200022 235100                    LDA     ORG,,AUTO
         1 015565   000006 115007                    CMPA    6,DL
         1 015566   015576 600000 1                  TZE     s:11450
         1 015567   000015 115007                    CMPA    13,DL
         1 015570   015576 600000 1                  TZE     s:11450
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:815  

     4769    11442    5                   DO;  /* Can't position with ID only */

     4770    11443    5                   B$JIT.ERR=ERRIDONLY;

  11443  1 015571   000034 236000 0                  LDQ     ERRIDONLY
         1 015572   000000 471400 xsym               LDP1    B$JIT$
         1 015573   100012 756100                    STQ     10,,PR1

     4771    11444    5                   ALTRETURN;

  11444  1 015574   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 015575   000000 702211                    TSX2  ! 0,X1

     4772    11445    5                   END; /* Can't position with ID only */
     4773    11446        /*E*   ERROR:    FMG-E$IDONLY-2
     4774    11447               MESSAGE:  Cannot read or position in file% %FN% with ID but no
     4775    11448                         key since ORG is not INDEXED or IREL
     4776    11449        */
     4777    11450    4                IDPTR$=B$PS2$;

  11450  1 015576   000000 236000 xsym               LDQ     B$PS2$
         1 015577   200034 756100                    STQ     IDPTR$,,AUTO

     4778    11451    5                CALL FINDIDO WHENALTRETURN DO;

  11451  1 015600   007256 701000 1                  TSX1    FINDIDO
         1 015601   015603 702000 1                  TSX2    s:11452
         1 015602   015611 710000 1                  TRA     s:11456

     4779    11452    5                   IF B$JIT.ERR.CODE = %E$BADID THEN

  11452  1 015603   000000 470400 xsym               LDP0    B$JIT$
         1 015604   000012 236100                    LDQ     10,,PR0
         1 015605   377770 376007                    ANQ     131064,DL
         1 015606   001420 116007                    CMPQ    784,DL
         1 015607   016101 600000 1                  TZE     ERR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:816  

     4780    11453    5                      GOTO ERR1;
     4781    11454    5                   GOTO NOKEY;

  11454  1 015610   015760 710000 1                  TRA     NOKEY

     4782    11455    5                   END;
     4783    11456    4                F$DCB.RPOS='1'B;

  11456  1 015611   200007 470500                    LDP0    JDCB$,,AUTO
         1 015612   010000 236007                    LDQ     4096,DL
         1 015613   000064 256100                    ORSQ    52,,PR0

     4784    11457    4                END;  /* Position by ID only */

     4785    11458
     4786    11459    3             IF FPT$PRECORD_V.KEYS THEN

  11459  1 015614   000000 470400 xsym               LDP0    B$PS0$
         1 015615   000000 236100                    LDQ     0,,PR0
         1 015616   400000 316007                    CANQ    -131072,DL
         1 015617   015704 600000 1                  TZE     PRECN

     4787    11460    4                DO;   /* POSITION TO KEY */

     4788    11461    4                IF ORG = %IREL# THEN

  11461  1 015620   200022 235100                    LDA     ORG,,AUTO
         1 015621   000015 115007                    CMPA    13,DL
         1 015622   015627 601000 1                  TNZ     s:11463

     4789    11462    4                   CALL FMD$CHKFIELD(B$PS1$, %FMD_CHKTYP_KEY) ALTRET(ERR);

  11462  1 015623   000054 630400 2                  EPPR0   44
         1 015624   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 015625   000000 701000 xent               TSX1    FMD$CHKFIELD
         1 015626   016040 702000 1                  TSX2    ERR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:817  

     4790    11463    4                CALL SETKEY(B$PS1$) ALTRET(ERR);

  11463  1 015627   000052 236000 2                  LDQ     42
         1 015630   200113 756100                    STQ     @INDX,,AUTO
         1 015631   021704 701000 1                  TSX1    SETKEY
         1 015632   016040 702000 1                  TSX2    ERR

     4791    11464    4                COMFLG=%KEY;

  11464  1 015633   200060 450100                    STZ     COMFLG,,AUTO

     4792    11465    5                CALL FINDKEY WHENALTRETURN DO;

  11465  1 015634   007536 701000 1                  TSX1    FINDKEY
         1 015635   015637 702000 1                  TSX2    s:11466
         1 015636   015650 710000 1                  TRA     s:11469

     4793    11466    5                   IF NOT FPT$PRECORD_V.NEXTKEY OR B$JIT.ERR.CODE ~= %E$NOKEY THEN

  11466  1 015637   000000 470400 xsym               LDP0    B$PS0$
         1 015640   000002 236100                    LDQ     2,,PR0
         1 015641   400000 316007                    CANQ    -131072,DL
         1 015642   015760 600000 1                  TZE     NOKEY
         1 015643   000000 471400 xsym               LDP1    B$JIT$
         1 015644   100012 236100                    LDQ     10,,PR1
         1 015645   377770 376007                    ANQ     131064,DL
         1 015646   001020 116007                    CMPQ    528,DL
         1 015647   015760 601000 1                  TNZ     NOKEY

     4794    11467    5                      GOTO NOKEY;
     4795    11468    5                   END;

     4796    11469    4                IF FPT$PRECORD_V.NEXTKEY THEN

  11469  1 015650   000000 470400 xsym               LDP0    B$PS0$
         1 015651   000002 236100                    LDQ     2,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:818  
         1 015652   400000 316007                    CANQ    -131072,DL
         1 015653   015656 600000 1                  TZE     s:11471

     4797    11470    4                   CALL NXTRECND ALTRET(NOKEY);

  11470  1 015654   015332 701000 1                  TSX1    NXTRECND
         1 015655   015760 702000 1                  TSX2    NOKEY

     4798    11471    4                IF FM$KEYENT.D THEN

  11471  1 015656   200020 470500                    LDP0    KEY$,,AUTO
         1 015657   000000 234100                    SZN     0,,PR0
         1 015660   015765 604000 1                  TMI     NOKEY1

     4799    11472    4                   GOTO NOKEY1;
     4800    11473
     4801    11474
     4802    11475    4                IF FPT$PRECORD_V.IDS THEN

  11475  1 015661   000000 471400 xsym               LDP1    B$PS0$
         1 015662   100000 236100                    LDQ     0,,PR1
         1 015663   040000 316007                    CANQ    16384,DL
         1 015664   015672 600000 1                  TZE     s:11481

     4803    11476    5                   DO;   /* FIND ID */

     4804    11477    5                   IDPTR$=B$PS2$;

  11477  1 015665   000000 236000 xsym               LDQ     B$PS2$
         1 015666   200034 756100                    STQ     IDPTR$,,AUTO

     4805    11478    5                   CALL FINDID ALTRET(NOKEY);

  11478  1 015667   007220 701000 1                  TSX1    FINDID
         1 015670   015760 702000 1                  TSX2    NOKEY

     4806    11479    5                   END;  /* FIND ID */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:819  

  11479  1 015671   015701 710000 1                  TRA     s:11486

     4807    11480    4                ELSE
     4808    11481    4                   IF FPT$PRECORD_V.RECNUM > 0 THEN

  11481  1 015672   100002 220100                    LDX0    2,,PR1
         1 015673   015701 600000 1                  TZE     s:11486

     4809    11482    5                      DO;

     4810    11483    5                      RECNUM=FPT$PRECORD_V.RECNUM;

  11483  1 015674   100002 236100                    LDQ     2,,PR1
         1 015675   000022 772000                    QRL     18
         1 015676   200033 756100                    STQ     RECNUM,,AUTO

     4811    11484    5                      CALL MOVERECN ALTRET(ERR);

  11484  1 015677   013632 701000 1                  TSX1    MOVERECN
         1 015700   016040 702000 1                  TSX2    ERR

     4812    11485    5                      END;

     4813    11486    4                F$DCB.RPOS='1'B;

  11486  1 015701   200007 470500                    LDP0    JDCB$,,AUTO
         1 015702   010000 236007                    LDQ     4096,DL
         1 015703   000064 256100                    ORSQ    52,,PR0

     4814    11487    4                END;

     4815    11488    3             END; /* Check for KEYS/IDS/RECNUM */

     4816    11489
     4817    11490
     4818    11491    2   PRECN: CALL MOVEN WHENALTRETURN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:820  

  11491  1 015704   013405 701000 1     PRECN        TSX1    MOVEN
         1 015705   015707 702000 1                  TSX2    s:11493
         1 015706   015715 710000 1                  TRA     s:11499

     4819    11492    3             DO;   /* CHECK FOR INTERRUPT */

     4820    11493    3             IF B$JIT.ERR.CODE = %E$PMMEINT THEN

  11493  1 015707   000000 470400 xsym               LDP0    B$JIT$
         1 015710   000012 236100                    LDQ     10,,PR0
         1 015711   377770 376007                    ANQ     131064,DL
         1 015712   001230 116007                    CMPQ    664,DL
         1 015713   015776 600000 1                  TZE     PMMEINT

     4821    11494    3                GOTO PMMEINT;
     4822    11495    3             ELSE
     4823    11496    3                GOTO ERR1;

  11496  1 015714   016101 710000 1                  TRA     ERR1

     4824    11497    3             END;  /* CHECK FOR INTERRUPT */
     4825    11498
     4826    11499    2          B$JIT.ERR='0'B;

  11499  1 015715   000000 470400 xsym               LDP0    B$JIT$
         1 015716   000012 450100                    STZ     10,,PR0

     4827    11500
     4828    11501    2          IF FPT$PRECORD_V.KEYR THEN

  11501  1 015717   000000 471400 xsym               LDP1    B$PS0$
         1 015720   100000 236100                    LDQ     0,,PR1
         1 015721   200000 316007                    CANQ    65536,DL
         1 015722   015740 600000 1                  TZE     s:11508

     4829    11502    2             IF KEY$ ~= ADDR(NIL) OR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:821  

  11502  1 015723   200020 236100                    LDQ     KEY$,,AUTO
         1 015724   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 015725   015733 601000 1                  TNZ     s:11504
         1 015726   200011 235100                    LDA     INDEX#,,AUTO
         1 015727   015736 600000 1                  TZE     s:11506
         1 015730   200014 236100                    LDQ     SEG$,,AUTO
         1 015731   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 015732   015736 600000 1                  TZE     s:11506

     4830    11503    2                (INDEX# > 0 AND SEG$ ~= ADDR(NIL)) THEN
     4831    11504    2                CALL GETKEY ALTRET(ERR);

  11504  1 015733   010641 701000 1                  TSX1    GETKEY
         1 015734   016040 702000 1                  TSX2    ERR
         1 015735   015740 710000 1                  TRA     s:11508

     4832    11505    2             ELSE
     4833    11506    2                CALL ZAPKEY;

  11506  1 015736   026416 701000 1                  TSX1    ZAPKEY
         1 015737   000000 011000                    NOP     0

     4834    11507
     4835    11508    2          IF FPT$PRECORD_V.ID OR FPT$PRECORD_V.IDALL THEN

  11508  1 015740   000000 470400 xsym               LDP0    B$PS0$
         1 015741   000000 236100                    LDQ     0,,PR0
         1 015742   100000 316007                    CANQ    32768,DL
         1 015743   015746 601000 1                  TNZ     s:11509
         1 015744   001000 316007                    CANQ    512,DL
         1 015745   015750 600000 1                  TZE     s:11511

     4836    11509    2             CALL GETIDP ALTRET(ERR1);

  11509  1 015746   010312 701000 1                  TSX1    GETIDP
         1 015747   016101 702000 1                  TSX2    ERR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:822  

     4837    11510
     4838    11511    2          IF F$DCB.SHARED THEN

  11511  1 015750   200007 470500                    LDP0    JDCB$,,AUTO
         1 015751   000064 236100                    LDQ     52,,PR0
         1 015752   100000 316003                    CANQ    32768,DU
         1 015753   015756 600000 1                  TZE     s:11514

     4839    11512    2             CALL SETID;

  11512  1 015754   021643 701000 1                  TSX1    SETID
         1 015755   000000 011000                    NOP     0

     4840    11513
     4841    11514    2          RETURN;

  11514  1 015756   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 015757   000001 702211                    TSX2  ! 1,X1

     4842    11515
     4843    11516    2   NOKEY: IF B$JIT.ERR.CODE = %E$NOKEY THEN

  11516  1 015760   000000 470400 xsym  NOKEY        LDP0    B$JIT$
         1 015761   000012 236100                    LDQ     10,,PR0
         1 015762   377770 376007                    ANQ     131064,DL
         1 015763   001020 116007                    CMPQ    528,DL
         1 015764   016040 601000 1                  TNZ     ERR

     4844    11517    3             DO;   /* NO KEY */

     4845    11518    3   NOKEY1:   B$JIT.ERR=ERRNOKEY;

  11518  1 015765   000007 236000 0     NOKEY1       LDQ     ERRNOKEY
         1 015766   000000 470400 xsym               LDP0    B$JIT$
         1 015767   000012 756100                    STQ     10,,PR0

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:823  
     4846    11519    3             F$DCB.RPOS='1'B;

  11519  1 015770   200007 471500                    LDP1    JDCB$,,AUTO
         1 015771   010000 236007                    LDQ     4096,DL
         1 015772   100064 256100                    ORSQ    52,,PR1

     4847    11520    3             IF FPT$PRECORD_V.N ~= 0 THEN

  11520  1 015773   000000 473400 xsym               LDP3    B$PS0$
         1 015774   300001 235100                    LDA     1,,PR3
         1 015775   015704 601000 1                  TNZ     PRECN

     4848    11521    3                GOTO PRECN;
     4849    11522
     4850    11523    3   PMMEINT:  CALL NXTRECND ALTRET(NONXTKEY);

  11523  1 015776   015332 701000 1     PMMEINT      TSX1    NXTRECND
         1 015777   016050 702000 1                  TSX2    NONXTKEY

     4851    11524    3             F$DCB.RPOS='1'B;

  11524  1 016000   200007 470500                    LDP0    JDCB$,,AUTO
         1 016001   010000 236007                    LDQ     4096,DL
         1 016002   000064 256100                    ORSQ    52,,PR0

     4852    11525
     4853    11526    3             IF FPT$PRECORD_V.KEYR THEN

  11526  1 016003   000000 471400 xsym               LDP1    B$PS0$
         1 016004   100000 236100                    LDQ     0,,PR1
         1 016005   200000 316007                    CANQ    65536,DL
         1 016006   016011 600000 1                  TZE     s:11529

     4854    11527    3                CALL GETKEY ALTRET(ERR);

  11527  1 016007   010641 701000 1                  TSX1    GETKEY
         1 016010   016040 702000 1                  TSX2    ERR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:824  

     4855    11528
     4856    11529    3             IF FPT$PRECORD_V.ID OR FPT$PRECORD_V.IDALL THEN

  11529  1 016011   000000 470400 xsym               LDP0    B$PS0$
         1 016012   000000 236100                    LDQ     0,,PR0
         1 016013   100000 316007                    CANQ    32768,DL
         1 016014   016017 601000 1                  TNZ     s:11531
         1 016015   001000 316007                    CANQ    512,DL
         1 016016   016030 600000 1                  TZE     s:11537

     4857    11530    4                DO;

     4858    11531    4                SAVE_ERR=B$JIT.ERR;

  11531  1 016017   000000 471400 xsym               LDP1    B$JIT$
         1 016020   100012 236100                    LDQ     10,,PR1
         1 016021   200101 756100                    STQ     SAVE_ERR,,AUTO

     4859    11532    4                B$JIT.ERR='0'B;

  11532  1 016022   100012 450100                    STZ     10,,PR1

     4860    11533    4                CALL GETIDP ALTRET(ERR1);

  11533  1 016023   010312 701000 1                  TSX1    GETIDP
         1 016024   016101 702000 1                  TSX2    ERR1

     4861    11534    4                B$JIT.ERR=SAVE_ERR;

  11534  1 016025   200101 236100                    LDQ     SAVE_ERR,,AUTO
         1 016026   000000 470400 xsym               LDP0    B$JIT$
         1 016027   000012 756100                    STQ     10,,PR0

     4862    11535    4                END;

     4863    11536
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:825  
     4864    11537    3             IF F$DCB.SHARED THEN

  11537  1 016030   200007 470500                    LDP0    JDCB$,,AUTO
         1 016031   000064 236100                    LDQ     52,,PR0
         1 016032   100000 316003                    CANQ    32768,DU
         1 016033   016036 600000 1                  TZE     s:11540

     4865    11538    3                CALL SETID;

  11538  1 016034   021643 701000 1                  TSX1    SETID
         1 016035   000000 011000                    NOP     0

     4866    11539
     4867    11540    3             ALTRETURN;

  11540  1 016036   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 016037   000000 702211                    TSX2  ! 0,X1

     4868    11541    3             END;  /* NO KEY */
     4869    11542
     4870    11543    2   ERR:   IF FPT$PRECORD_V.KEYR THEN

  11543  1 016040   000000 470400 xsym  ERR          LDP0    B$PS0$
         1 016041   000000 236100                    LDQ     0,,PR0
         1 016042   200000 316007                    CANQ    65536,DL
         1 016043   016050 600000 1                  TZE     NONXTKEY

     4871    11544    3             DO;

     4872    11545    3             CALL ZAPKEY;

  11545  1 016044   026416 701000 1                  TSX1    ZAPKEY
         1 016045   000000 011000                    NOP     0

     4873    11546    3             ALTRETURN;

  11546  1 016046   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:826  
         1 016047   000000 702211                    TSX2  ! 0,X1

  11543  1 016050                       NONXTKEY     null
     4874    11547    3             END;
     4875    11548    2   NONXTKEY: ;
     4876    11549    2          IF FPT$PRECORD_V.KEYR THEN

  11549  1 016050   000000 470400 xsym               LDP0    B$PS0$
         1 016051   000000 236100                    LDQ     0,,PR0
         1 016052   200000 316007                    CANQ    65536,DL
         1 016053   016056 600000 1                  TZE     s:11551

     4877    11550    2             CALL ZAPKEY;

  11550  1 016054   026416 701000 1                  TSX1    ZAPKEY
         1 016055   000000 011000                    NOP     0

     4878    11551    2          IF FPT$PRECORD_V.ID OR FPT$PRECORD_V.IDALL THEN

  11551  1 016056   000000 470400 xsym               LDP0    B$PS0$
         1 016057   000000 236100                    LDQ     0,,PR0
         1 016060   100000 316007                    CANQ    32768,DL
         1 016061   016064 601000 1                  TNZ     s:11552
         1 016062   001000 316007                    CANQ    512,DL
         1 016063   016070 600000 1                  TZE     s:11553

     4879    11552    2             CALL ZAPID(B$PS2$);

  11552  1 016064   000011 236000 2                  LDQ     9
         1 016065   200103 756100                    STQ     DONE,,AUTO
         1 016066   026373 701000 1                  TSX1    ZAPID
         1 016067   000000 011000                    NOP     0

     4880    11553    2          IF B$JIT.ERR.CODE ~= %E$EOF THEN

  11553  1 016070   000000 470400 xsym               LDP0    B$JIT$
         1 016071   000012 236100                    LDQ     10,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:827  
         1 016072   377770 376007                    ANQ     131064,DL
         1 016073   000060 116007                    CMPQ    48,DL
         1 016074   016077 600000 1                  TZE     s:11555

     4881    11554    2             ALTRETURN;

  11554  1 016075   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 016076   000000 702211                    TSX2  ! 0,X1

     4882    11555    2          B$JIT.ERR=ERRNOKEY;

  11555  1 016077   000007 236000 0                  LDQ     ERRNOKEY
         1 016100   000012 756100                    STQ     10,,PR0

     4883    11556    2   ERR1:  ALTRETURN;

  11556  1 016101   200076 221300       ERR1         LDX1  ! DELALL_FAST+2,,AUTO
         1 016102   000000 702211                    TSX2  ! 0,X1

     4884    11557    2          END PREC;
     4885    11558               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:828  
     4886    11559        /*I*     NAME:     PREVREC
     4887    11560                 PURPOSE:  To position to the previous record
     4888    11561                 DESCRIPTION:
     4889    11562                      If this is the primary index, then this is easy, just set
     4890    11563                 RPOS, and say we want the "current" key.  This effectively
     4891    11564                 positions us back one record.
     4892    11565
     4893    11566                      Otherwise, things get a little more complicated.  If the
     4894    11567                 segment counter is 0, then we're positioned past the last
     4895    11568                 segment on a key.  In that case, we need to set SEGX to the
     4896    11569                 start of the next key or NAVX, whichever CRECX dictates.
     4897    11570                 Otherwise, the segment counter is OK the way it is.
     4898    11571                 Then decrement the segment counter and make pointers to the
     4899    11572                 the beginning of the granule and the beginning of the key.
     4900    11573                 Loop backwards until we find the beginning of a duplicate
     4901    11574                 record, beginning of the key, or beginning of the granule.
     4902    11575                 If we hit the beginning of the granule, then blink.  If we
     4903    11576                 hit the beginning of the key, then go back to the last segment
     4904    11577                 of the previous key.
     4905    11578
     4906    11579                      Set the segment pointers.
     4907    11580        */
     4908    11581                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:829  
     4909    11582    1   PREVREC: PROC ALTRET;

  11582  1 016103   200112 741300       PREVREC      STX1  ! SIZE+1,,AUTO

     4910    11583    2          DCL BEGGRAN SBIN;
     4911    11584    2          DCL FIRSTSEG UBIN;
     4912    11585    2          DCL KLB SBIN;
     4913    11586        /* */
     4914    11587    2          IF INDEX# = 0 THEN

  11587  1 016104   200011 235100                    LDA     INDEX#,,AUTO
         1 016105   016115 601000 1                  TNZ     s:11594

     4915    11588    3             DO;   /* PRIMARY KEY */

     4916    11589    3             F$DCB.RPOS='1'B;

  11589  1 016106   200007 470500                    LDP0    JDCB$,,AUTO
         1 016107   010000 236007                    LDQ     4096,DL
         1 016110   000064 256100                    ORSQ    52,,PR0

     4917    11590    3             CALL CURKEY ALTRET(ERR);

  11590  1 016111   005060 701000 1                  TSX1    CURKEY
         1 016112   016336 702000 1                  TSX2    ERR

     4918    11591    3             RETURN;

  11591  1 016113   200112 221300                    LDX1  ! SIZE+1,,AUTO
         1 016114   000001 702211                    TSX2  ! 1,X1

     4919    11592    3             END;  /* PRIMARY KEY */
     4920    11593
     4921    11594    2          IF SEGX = 0 THEN

  11594  1 016115   200013 236100                    LDQ     SEGX,,AUTO
         1 016116   016142 601000 1                  TNZ     s:11605
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:830  

     4922    11595    3             DO;   /* At end of key segs */

     4923    11596    3             IF CRECX < KEYCNT THEN

  11596  1 016117   200015 236100                    LDQ     CRECX,,AUTO
         1 016120   016136 604000 1                  TMI     s:11602
         1 016121   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 016122   016136 605000 1                  TPL     s:11602

     4924    11597    4                DO;

     4925    11598    4                SEGX=FM$KEYTBL(CRECX+1);

  11598  1 016123   200025 470500                    LDP0    KTPTR$,,AUTO
         1 016124   000100 101506                    MRL     fill='000'O
         1 016125   000000 200001                    ADSC9   0,Q,PR0                  cn=1,n=1
         1 016126   200013 000004                    ADSC9   SEGX,,AUTO               cn=0,n=4

     4926    11599    4                IF CRECX+1 >= BOUND THEN

  11599  1 016127   000001 036007                    ADLQ    1,DL
         1 016130   016133 604000 1                  TMI     s:11600
         1 016131   200016 116100                    CMPQ    BOUND,,AUTO
         1 016132   016142 604000 1                  TMI     s:11605

     4927    11600    4                   SEGX=SEGX+512;

  11600  1 016133   001000 236007                    LDQ     512,DL
         1 016134   200013 056100                    ASQ     SEGX,,AUTO

     4928    11601    4                END;

  11601  1 016135   016142 710000 1                  TRA     s:11605

     4929    11602    3             ELSE SEGX=FM$GRAN.NAVX;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:831  
  11602  1 016136   200024 470500                    LDP0    BUF$,,AUTO
         1 016137   000001 236100                    LDQ     1,,PR0
         1 016140   000022 772000                    QRL     18
         1 016141   200013 756100                    STQ     SEGX,,AUTO

     4930    11603    3             END;  /* At end of key segs */

     4931    11604
     4932    11605    2          SEGX=SEGX-2;

  11605  1 016142   000002 336007                    LCQ     2,DL
         1 016143   200013 056100                    ASQ     SEGX,,AUTO

     4933    11606    3   LOOP:  DO WHILE ('1'B);

  11606  1 016144                       LOOP         null
     4934    11607    3             SEG$=PINCRW(BUF$, SEGX);

  11607  1 016144   200013 236100                    LDQ     SEGX,,AUTO
         1 016145   000022 736000                    QLS     18
         1 016146   200024 036100                    ADLQ    BUF$,,AUTO
         1 016147   200014 756100                    STQ     SEG$,,AUTO

     4935    11608    3             BEGGRAN=FM$GRAN.FCEX+SIZEW(FM$KEYTBL);

  11608  1 016150   200024 470500                    LDP0    BUF$,,AUTO
         1 016151   000002 236100                    LDQ     2,,PR0
         1 016152   000022 772000                    QRL     18
         1 016153   000106 036007                    ADLQ    70,DL
         1 016154   200113 756100                    STQ     BEGGRAN,,AUTO

     4936    11609    3             IF CRECX >= BOUND THEN

  11609  1 016155   200015 236100                    LDQ     CRECX,,AUTO
         1 016156   016161 604000 1                  TMI     s:11610
         1 016157   200016 116100                    CMPQ    BOUND,,AUTO
         1 016160   016172 604000 1                  TMI     s:11612
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:832  

     4937    11610    3                KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);

  11610  1 016161   200025 471500                    LDP1    KTPTR$,,AUTO
         1 016162   000100 101506                    MRL     fill='000'O
         1 016163   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1
         1 016164   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 016165   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 016166   001000 636010                    EAQ     512,X0
         1 016167   200024 036100                    ADLQ    BUF$,,AUTO
         1 016170   200020 756100                    STQ     KEY$,,AUTO
         1 016171   016202 710000 1                  TRA     s:11613

     4938    11611    3             ELSE
     4939    11612    3                KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));

  11612  1 016172   200025 471500                    LDP1    KTPTR$,,AUTO
         1 016173   000100 101506                    MRL     fill='000'O
         1 016174   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1
         1 016175   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 016176   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 016177   000000 636010                    EAQ     0,X0
         1 016200   200024 036100                    ADLQ    BUF$,,AUTO
         1 016201   200020 756100                    STQ     KEY$,,AUTO

     4940    11613    3             IF ORG = %IREL# THEN

  11613  1 016202   200022 235100                    LDA     ORG,,AUTO
         1 016203   000015 115007                    CMPA    13,DL
         1 016204   016214 601000 1                  TNZ     s:11616

     4941    11614    3                KLB=FM$IRENT.KLB+1;

  11614  1 016205   200020 473500                    LDP3    KEY$,,AUTO
         1 016206   300000 236100                    LDQ     0,,PR3
         1 016207   000022 772000                    QRL     18
         1 016210   377777 376007                    ANQ     131071,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:833  
         1 016211   000001 036007                    ADLQ    1,DL
         1 016212   200115 756100                    STQ     KLB,,AUTO
         1 016213   016221 710000 1                  TRA     s:11617

     4942    11615    3             ELSE
     4943    11616    3                KLB=FM$KEYENT.KLB;

  11616  1 016214   200020 473500                    LDP3    KEY$,,AUTO
         1 016215   300000 236100                    LDQ     0,,PR3
         1 016216   000033 772000                    QRL     27
         1 016217   000377 376007                    ANQ     255,DL
         1 016220   200115 756100                    STQ     KLB,,AUTO

     4944    11617    3             IF CRECX > 0 THEN

  11617  1 016221   200015 235100                    LDA     CRECX,,AUTO
         1 016222   016240 600000 1                  TZE     s:11620

     4945    11618    3                FIRSTSEG=POFFW(KEY$, BUF$)+(KLB+4)/4;

  11618  1 016223   200024 235100                    LDA     BUF$,,AUTO
         1 016224   000022 771000                    ARL     18
         1 016225   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 016226   200020 236100                    LDQ     KEY$,,AUTO
         1 016227   000022 772000                    QRL     18
         1 016230   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 016231   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 016232   200115 236100                    LDQ     KLB,,AUTO
         1 016233   000004 036007                    ADLQ    4,DL
         1 016234   000004 506007                    DIV     4,DL
         1 016235   200167 036100                    ADLQ    STEMP_FIELDIN+3,,AUTO
         1 016236   200114 756100                    STQ     FIRSTSEG,,AUTO
         1 016237   016242 710000 1                  TRA     s:11622

     4946    11619    3             ELSE
     4947    11620    3                FIRSTSEG=BEGGRAN;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:834  
  11620  1 016240   200113 235100                    LDA     BEGGRAN,,AUTO
         1 016241   200114 755100                    STA     FIRSTSEG,,AUTO

     4948    11621
     4949    11622    4             DO WHILE (NOT FM$MISEG.FAK AND

  11622  1 016242   016251 710000 1                  TRA     s:11627

     4950    11623    4                       SEGX >= FIRSTSEG AND
     4951    11624    4                       SEGX >= BEGGRAN);
     4952    11625    4                SEGX=SEGX-2;

  11625  1 016243   000002 336007                    LCQ     2,DL
         1 016244   200013 056100                    ASQ     SEGX,,AUTO

     4953    11626    4                SEG$=PINCRW(BUF$, SEGX);

  11626  1 016245   200013 236100                    LDQ     SEGX,,AUTO
         1 016246   000022 736000                    QLS     18
         1 016247   200024 036100                    ADLQ    BUF$,,AUTO
         1 016250   200014 756100                    STQ     SEG$,,AUTO

     4954    11627    4             END;  /* WHILE */

  11627  1 016251   200014 470500                    LDP0    SEG$,,AUTO
         1 016252   000000 234100                    SZN     0,,PR0
         1 016253   016262 604000 1                  TMI     s:11629
         1 016254   200013 236100                    LDQ     SEGX,,AUTO
         1 016255   016262 604000 1                  TMI     s:11629
         1 016256   200114 116100                    CMPQ    FIRSTSEG,,AUTO
         1 016257   016262 602000 1                  TNC     s:11629
         1 016260   200113 116100                    CMPQ    BEGGRAN,,AUTO
         1 016261   016243 605000 1                  TPL     s:11625

     4955    11628
     4956    11629    3             IF SEGX < BEGGRAN THEN

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:835  
  11629  1 016262   200013 236100                    LDQ     SEGX,,AUTO
         1 016263   200113 116100                    CMPQ    BEGGRAN,,AUTO
         1 016264   016302 605000 1                  TPL     s:11637

     4957    11630    4                DO;   /* PREVIOUS GRANULE */

     4958    11631    4                CALL BLINK ALTRET(BOF);

  11631  1 016265   002314 701000 1                  TSX1    BLINK
         1 016266   016340 702000 1                  TSX2    BOF

     4959    11632    4                SEGX=FM$GRAN.NAVX-2;

  11632  1 016267   200024 470500                    LDP0    BUF$,,AUTO
         1 016270   000001 236100                    LDQ     1,,PR0
         1 016271   000022 772000                    QRL     18
         1 016272   000002 136007                    SBLQ    2,DL
         1 016273   200013 756100                    STQ     SEGX,,AUTO

     4960    11633    4                CRECX=KEYCNT;

  11633  1 016274   200017 235100                    LDA     KEYCNT,,AUTO
         1 016275   200015 755100                    STA     CRECX,,AUTO

     4961    11634    4                F$DCB.CRECX=CRECX;

  11634  1 016276   000000 620005                    EAX0    0,AL
         1 016277   200007 471500                    LDP1    JDCB$,,AUTO
         1 016300   100067 440100                    SXL0    55,,PR1

     4962    11635    4                END;  /* PREVIOUS GRANULE */

  11635  1 016301   016144 710000 1                  TRA     LOOP

     4963    11636    3             ELSE
     4964    11637    3                IF SEGX < FIRSTSEG THEN

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:836  
  11637  1 016302   000000 116003                    CMPQ    0,DU
         1 016303   016306 604000 1                  TMI     s:11639
         1 016304   200114 116100                    CMPQ    FIRSTSEG,,AUTO
         1 016305   016325 603000 1                  TRC     DONE

     4965    11638    4                   DO;   /* BACK UP 1 KEY */

     4966    11639    4                   CRECX=CRECX-1;

  11639  1 016306   200015 235100                    LDA     CRECX,,AUTO
         1 016307   000001 135007                    SBLA    1,DL
         1 016310   200015 755100                    STA     CRECX,,AUTO

     4967    11640    4                   F$DCB.CRECX=CRECX;

  11640  1 016311   000000 620005                    EAX0    0,AL
         1 016312   200007 471500                    LDP1    JDCB$,,AUTO
         1 016313   100067 440100                    SXL0    55,,PR1

     4968    11641    4                   SEGX=POFFW(KEY$, BUF$)-2;

  11641  1 016314   200024 235100                    LDA     BUF$,,AUTO
         1 016315   000022 771000                    ARL     18
         1 016316   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 016317   200020 236100                    LDQ     KEY$,,AUTO
         1 016320   000022 772000                    QRL     18
         1 016321   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 016322   000002 136007                    SBLQ    2,DL
         1 016323   200013 756100                    STQ     SEGX,,AUTO

     4969    11642    4                   END;  /* BACK UP 1 KEY */

  11642  1 016324   016144 710000 1                  TRA     LOOP

     4970    11643    3                ELSE
     4971    11644    3                   EXIT LOOP;
     4972    11645
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:837  
     4973    11646    3          END;  /* WHILE */

     4974    11647
     4975    11648    2   DONE:  F$DCB.SEGX=SEGX;

  11648  1 016325   000000 620006       DONE         EAX0    0,QL
         1 016326   200007 471500                    LDP1    JDCB$,,AUTO
         1 016327   100100 440100                    SXL0    64,,PR1

     4976    11649    2          SEG$=PINCRW(BUF$, SEGX);

  11649  1 016330   200013 236100                    LDQ     SEGX,,AUTO
         1 016331   000022 736000                    QLS     18
         1 016332   200024 036100                    ADLQ    BUF$,,AUTO
         1 016333   200014 756100                    STQ     SEG$,,AUTO

     4977    11650
     4978    11651    2          RETURN;

  11651  1 016334   200112 221300                    LDX1  ! SIZE+1,,AUTO
         1 016335   000001 702211                    TSX2  ! 1,X1

     4979    11652    2   ERR:   ALTRETURN;

  11652  1 016336   200112 221300       ERR          LDX1  ! SIZE+1,,AUTO
         1 016337   000000 702211                    TSX2  ! 0,X1

     4980    11653    2   BOF:   SEGX=0;

  11653  1 016340   200013 450100       BOF          STZ     SEGX,,AUTO

     4981    11654    2          F$DCB.SEGX=0;

  11654  1 016341   000000 220003                    LDX0    0,DU
         1 016342   200007 470500                    LDP0    JDCB$,,AUTO
         1 016343   000100 440100                    SXL0    64,,PR0

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:838  
     4982    11655    2          SEG$=ADDR(NIL);

  11655  1 016344   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 016345   200014 756100                    STQ     SEG$,,AUTO

     4983    11656    2          ALTRETURN;

  11656  1 016346   200112 221300                    LDX1  ! SIZE+1,,AUTO
         1 016347   000000 702211                    TSX2  ! 0,X1

     4984    11657    2          END PREVREC;
     4985    11658               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:839  
     4986    11659        /*I*     NAME:     PREVRECND
     4987    11660                 PURPOSE:  To position to the previous non-deleted record
     4988    11661                 DESCRIPTION:
     4989    11662                      If this is the primary index, then loop backwards through
     4990    11663                 the file until we find a non-deleted record, or until we hit
     4991    11664                 BOF.  If this is a secondary index, then just get the previous
     4992    11665                 record.  When records are deleted from a secondary index, they
     4993    11666                 are removed, so there are no records marked as deleted.
     4994    11667        */
     4995    11668    1   PREVRECND: PROC ALTRET;

  11668  1 016350   200106 741300       PREVRECND    STX1  ! ICHNG,,AUTO

     4996    11669        /* */
     4997    11670    2          IF INDEX# = 0 THEN

  11670  1 016351   200011 235100                    LDA     INDEX#,,AUTO
         1 016352   016364 601000 1                  TNZ     s:11678

     4998    11671    3             DO;   /* PRIMARY KEY */

     4999    11672    4             DO UNTIL (NOT FM$KEYENT.D);

     5000    11673    4                F$DCB.RPOS='1'B;

  11673  1 016353   200007 470500                    LDP0    JDCB$,,AUTO
         1 016354   010000 236007                    LDQ     4096,DL
         1 016355   000064 256100                    ORSQ    52,,PR0

     5001    11674    4                CALL CURKEY ALTRET(ERR);

  11674  1 016356   005060 701000 1                  TSX1    CURKEY
         1 016357   016370 702000 1                  TSX2    ERR

     5002    11675    4             END;

  11675  1 016360   200020 470500                    LDP0    KEY$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:840  
         1 016361   000000 234100                    SZN     0,,PR0
         1 016362   016353 604000 1                  TMI     s:11673

     5003    11676    3             END;  /* PRIMARY KEY */

  11676  1 016363   016366 710000 1                  TRA     s:11680

     5004    11677    2          ELSE
     5005    11678    2             CALL PREVREC ALTRET(ERR);

  11678  1 016364   016103 701000 1                  TSX1    PREVREC
         1 016365   016370 702000 1                  TSX2    ERR

     5006    11679
     5007    11680    2          RETURN;

  11680  1 016366   200106 221300                    LDX1  ! ICHNG,,AUTO
         1 016367   000001 702211                    TSX2  ! 1,X1

     5008    11681    2   ERR:   ALTRETURN;

  11681  1 016370   200106 221300       ERR          LDX1  ! ICHNG,,AUTO
         1 016371   000000 702211                    TSX2  ! 0,X1

     5009    11682    2          END PREVRECND;
     5010    11683               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:841  
     5011    11684        /*I*     NAME:     PTOBOF
     5012    11685                 PURPOSE:  To position to the beginning of the file
     5013    11686                 DESCRIPTION:
     5014    11687                      If the file doesn't have secondary indexes, then BOF is the
     5015    11688                 same as file relative 0.  Otherwise, get the FDA from the right
     5016    11689                 structure.
     5017    11690
     5018    11691                      Read the granule, and reset some values.
     5019    11692        */
     5020    11693    1   PTOBOF: PROC ALTRET;

  11693  1 016372   200102 741300       PTOBOF       STX1  ! P$,,AUTO

     5021    11694        /* */
     5022    11695    2          IF ALTKEY$ = ADDR(NIL) THEN

  11695  1 016373   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 016374   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 016375   016401 601000 1                  TNZ     s:11698

     5023    11696    2             DA=FM_FRZERO;

  11696  1 016376   000000 235000 xsym               LDA     FM_FRZERO
         1 016377   200021 755100                    STA     DA,,AUTO
         1 016400   016421 710000 1                  TRA     s:11703

     5024    11697    2          ELSE
     5025    11698    2             IF ORG = %INDEXED# THEN

  11698  1 016401   200022 235100                    LDA     ORG,,AUTO
         1 016402   000006 115007                    CMPA    6,DL
         1 016403   016413 601000 1                  TNZ     s:11701

     5026    11699    2                DA=ALTKEYS.K.FDA(INDEX#);

  11699  1 016404   200011 236100                    LDQ     INDEX#,,AUTO
         1 016405   000006 402007                    MPY     6,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:842  
         1 016406   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 016407   000001 236106                    LDQ     1,QL,PR0
         1 016410   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 016411   200021 756100                    STQ     DA,,AUTO
         1 016412   016421 710000 1                  TRA     s:11703

     5027    11700    2             ELSE
     5028    11701    2                DA=IRKEYS.K.FDA(INDEX#);

  11701  1 016413   200011 236100                    LDQ     INDEX#,,AUTO
         1 016414   000007 402007                    MPY     7,DL
         1 016415   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 016416   000007 236106                    LDQ     7,QL,PR0
         1 016417   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 016420   200021 756100                    STQ     DA,,AUTO

     5029    11702
     5030    11703    2          F$DCB.LVL=0;

  11703  1 016421   200007 470500                    LDP0    JDCB$,,AUTO
         1 016422   000035 236000 2                  LDQ     29
         1 016423   000067 356100                    ANSQ    55,,PR0

     5031    11704    2          CALL FMD$REDBUF(BUF$, 1, DA, 0, 0) ALTRET(ERR);

  11704  1 016424   000000 236000 2                  LDQ     0
         1 016425   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 016426   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 016427   200021 631500                    EPPR1   DA,,AUTO
         1 016430   200170 451500                    STP1    STEMP_FIELDIN+4,,AUTO
         1 016431   000001 236000 2                  LDQ     1
         1 016432   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 016433   200024 633500                    EPPR3   BUF$,,AUTO
         1 016434   200166 453500                    STP3    STEMP_FIELDIN+2,,AUTO
         1 016435   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 016436   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 016437   000000 701000 xent               TSX1    FMD$REDBUF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:843  
         1 016440   016452 702000 1                  TSX2    ERR

     5032    11705    2          F$DCB.CRECX=0;

  11705  1 016441   000000 220003                    LDX0    0,DU
         1 016442   200007 470500                    LDP0    JDCB$,,AUTO
         1 016443   000067 440100                    SXL0    55,,PR0

     5033    11706    2          F$DCB.SEGX=0;

  11706  1 016444   000100 440100                    SXL0    64,,PR0

     5034    11707    2          F$DCB.RPOS='0'B;

  11707  1 016445   000005 236000 2                  LDQ     5
         1 016446   000064 356100                    ANSQ    52,,PR0

     5035    11708    2          F$DCB.ID='0'B;

  11708  1 016447   000107 450100                    STZ     71,,PR0

     5036    11709
     5037    11710    2          RETURN;

  11710  1 016450   200102 221300                    LDX1  ! P$,,AUTO
         1 016451   000001 702211                    TSX2  ! 1,X1

     5038    11711    2   ERR:   ALTRETURN;

  11711  1 016452   200102 221300       ERR          LDX1  ! P$,,AUTO
         1 016453   000000 702211                    TSX2  ! 0,X1

     5039    11712    2          END PTOBOF;
     5040    11713               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:844  
     5041    11714        /*I*     NAME:     PTOEOF
     5042    11715                 PURPOSE:  To position to the end of the file
     5043    11716                 DESCRIPTION:
     5044    11717                      If this file doesn't have any secondary indexes, then get the
     5045    11718                 last disk address from the CFU.  Otherwise, get it from the right
     5046    11719                 table.
     5047    11720
     5048    11721                      If the granule isn't in memory, read it in.  If the granule
     5049    11722                 has a flink, then this isn't the real LDA, flink until we find the
     5050    11723                 real one.
     5051    11724        */
     5052    11725                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:845  
     5053    11726    1   PTOEOF: PROC ALTRET;

  11726  1 016454   200126 741300       PTOEOF       STX1  ! LAST_RESULT,,AUTO

     5054    11727    2          DCL LCDA SBIN;
     5055    11728        /* */
     5056    11729    2          IF ALTKEY$ = ADDR(NIL) THEN

  11729  1 016455   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 016456   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 016457   016467 601000 1                  TNZ     s:11732

     5057    11730    2             DA=FM$CFU.LDA;

  11730  1 016460   200010 470500                    LDP0    CFU$,,AUTO
         1 016461   000006 235100                    LDA     6,,PR0
         1 016462   000007 236100                    LDQ     7,,PR0
         1 016463   000033 773000                    LRL     27
         1 016464   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 016465   200021 756100                    STQ     DA,,AUTO
         1 016466   016507 710000 1                  TRA     s:11737

     5058    11731    2          ELSE
     5059    11732    2             IF ORG = %INDEXED# THEN

  11732  1 016467   200022 235100                    LDA     ORG,,AUTO
         1 016470   000006 115007                    CMPA    6,DL
         1 016471   016501 601000 1                  TNZ     s:11735

     5060    11733    2                DA=ALTKEYS.K.LDA(INDEX#);

  11733  1 016472   200011 236100                    LDQ     INDEX#,,AUTO
         1 016473   000006 402007                    MPY     6,DL
         1 016474   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 016475   000002 236106                    LDQ     2,QL,PR0
         1 016476   000011 772000                    QRL     9
         1 016477   200021 756100                    STQ     DA,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:846  
         1 016500   016507 710000 1                  TRA     s:11737

     5061    11734    2             ELSE
     5062    11735    2                DA=IRKEYS.K.LDA(INDEX#);

  11735  1 016501   200011 236100                    LDQ     INDEX#,,AUTO
         1 016502   000007 402007                    MPY     7,DL
         1 016503   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 016504   000011 236106                    LDQ     9,QL,PR0
         1 016505   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 016506   200021 756100                    STQ     DA,,AUTO

     5063    11736
     5064    11737    2          LCDA=-1;

  11737  1 016507   000001 335007                    LCA     1,DL
         1 016510   200127 755100                    STA     LCDA,,AUTO

     5065    11738    3          DO UNTIL (DA = 0);

     5066    11739    3             F$DCB.LVL=0;

  11739  1 016511   200007 470500                    LDP0    JDCB$,,AUTO
         1 016512   000035 236000 2                  LDQ     29
         1 016513   000067 356100                    ANSQ    55,,PR0

     5067    11740    3             BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));

  11740  1 016514   000116 236100                    LDQ     78,,PR0
         1 016515   000033 772000                    QRL     27
         1 016516   000037 376007                    ANQ     31,DL
         1 016517   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 016520   200024 756100                    STQ     BUF$,,AUTO

     5068    11741    3             IF BUF$ = ADDR(NIL) OR DA ~= F$DCB.BFR.DA(1) THEN

  11741  1 016521   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:847  
         1 016522   016527 600000 1                  TZE     s:11742
         1 016523   000116 236100                    LDQ     78,,PR0
         1 016524   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 016525   200021 116100                    CMPQ    DA,,AUTO
         1 016526   016545 600000 1                  TZE     s:11743

     5069    11742    3                CALL FMD$REDBUF(BUF$, 1, DA, 0, LCDA) ALTRET(ERR);

  11742  1 016527   200127 631500                    EPPR1   LCDA,,AUTO
         1 016530   200172 451500                    STP1    STEMP_FIELDIN+6,,AUTO
         1 016531   000000 236000 2                  LDQ     0
         1 016532   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 016533   200021 633500                    EPPR3   DA,,AUTO
         1 016534   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 016535   000001 236000 2                  LDQ     1
         1 016536   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 016537   200024 634500                    EPPR4   BUF$,,AUTO
         1 016540   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 016541   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 016542   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 016543   000000 701000 xent               TSX1    FMD$REDBUF
         1 016544   016626 702000 1                  TSX2    ERR

     5070    11743    3             F$DCB.CRECX=FM$GRAN.KEYCNT;

  11743  1 016545   200024 470500                    LDP0    BUF$,,AUTO
         1 016546   000002 720100                    LXL0    2,,PR0
         1 016547   000777 360003                    ANX0    511,DU
         1 016550   200007 471500                    LDP1    JDCB$,,AUTO
         1 016551   100067 440100                    SXL0    55,,PR1

     5071    11744    3             F$DCB.SEGX=0;

  11744  1 016552   000000 221003                    LDX1    0,DU
         1 016553   100100 441100                    SXL1    64,,PR1

     5072    11745    3             F$DCB.RPOS='0'B;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:848  

  11745  1 016554   000005 236000 2                  LDQ     5
         1 016555   100064 356100                    ANSQ    52,,PR1

     5073    11746    3             LCDA=F$DCB.BFR.DA(1);

  11746  1 016556   100116 236100                    LDQ     78,,PR1
         1 016557   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 016560   200127 756100                    STQ     LCDA,,AUTO

     5074    11747    3             DA=FM$GRAN.FLINK;

  11747  1 016561   000004 235100                    LDA     4,,PR0
         1 016562   200021 755100                    STA     DA,,AUTO

     5075    11748
     5076    11749    3             IF DA ~= 0 THEN

  11749  1 016563   016622 600000 1                  TZE     s:11761

     5077    11750    4                DO;   /* ANOTHER LINK */

     5078    11751    4                IF ALTKEY$ ~= ADDR(NIL) THEN

  11751  1 016564   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 016565   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 016566   016614 600000 1                  TZE     s:11757

     5079    11752    4                   IF ORG = %INDEXED# THEN

  11752  1 016567   200022 235100                    LDA     ORG,,AUTO
         1 016570   000006 115007                    CMPA    6,DL
         1 016571   016604 601000 1                  TNZ     s:11755

     5080    11753    4                      ALTKEYS.K.LDA(INDEX#)=DA;

  11753  1 016572   200011 236100                    LDQ     INDEX#,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:849  
         1 016573   000006 402007                    MPY     6,DL
         1 016574   200023 473500                    LDP3    ALTKEY$,,AUTO
         1 016575   000000 620006                    EAX0    0,QL
         1 016576   200021 236100                    LDQ     DA,,AUTO
         1 016577   000011 736000                    QLS     9
         1 016600   300002 676110                    ERQ     2,X0,PR3
         1 016601   000013 376000 2                  ANQ     11
         1 016602   300002 656110                    ERSQ    2,X0,PR3
         1 016603   016614 710000 1                  TRA     s:11757

     5081    11754    4                   ELSE
     5082    11755    4                      IRKEYS.K.LDA(INDEX#)=DA;

  11755  1 016604   200011 236100                    LDQ     INDEX#,,AUTO
         1 016605   000007 402007                    MPY     7,DL
         1 016606   200023 473500                    LDP3    ALTKEY$,,AUTO
         1 016607   000000 620006                    EAX0    0,QL
         1 016610   200021 236100                    LDQ     DA,,AUTO
         1 016611   300011 676110                    ERQ     9,X0,PR3
         1 016612   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 016613   300011 656110                    ERSQ    9,X0,PR3

     5083    11756
     5084    11757    4                IF INDEX# = 0 THEN

  11757  1 016614   200011 235100                    LDA     INDEX#,,AUTO
         1 016615   016622 601000 1                  TNZ     s:11761

     5085    11758    4                   FM$CFU.LDA=DA;

  11758  1 016616   200010 470500                    LDP0    CFU$,,AUTO
         1 016617   000100 101500                    MRL     fill='000'O
         1 016620   200021 000004                    ADSC9   DA,,AUTO                 cn=0,n=4
         1 016621   000006 400003                    ADSC9   6,,PR0                   cn=2,n=3

     5086    11759
     5087    11760    4                END;  /* ANOTHER LINK */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:850  

     5088    11761    3          END;  /* UNTIL */

  11761  1 016622   200021 235100                    LDA     DA,,AUTO
         1 016623   016511 601000 1                  TNZ     s:11739

     5089    11762
     5090    11763    2          RETURN;

  11763  1 016624   200126 221300                    LDX1  ! LAST_RESULT,,AUTO
         1 016625   000001 702211                    TSX2  ! 1,X1

     5091    11764    2   ERR:   ALTRETURN;

  11764  1 016626   200126 221300       ERR          LDX1  ! LAST_RESULT,,AUTO
         1 016627   000000 702211                    TSX2  ! 0,X1

     5092    11765    2          END PTOEOF;
     5093    11766               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:851  
     5094    11767        /*I*     NAME:     RDCONT
     5095    11768                 PURPOSE:  To handle continued reads
     5096    11769                 DESCRIPTION:
     5097    11770                      If this is a shared file, then contiued reads are not allowed
     5098    11771                 without specifying a key.  If this is an irel file, then check out
     5099    11772                 the key for illegal fields.  Then find the key.
     5100    11773
     5101    11774                      If this file isn't shared, then the previous operation must
     5102    11775                 have been a read.
     5103    11776
     5104    11777                      Loop until we fill up the user's buffer, or we run out of
     5105    11778                 information to transfer.  F$DCB.GDISP will be a count of how many
     5106    11779                 bytes we've given to the user so far.  First we have to find the
     5107    11780                 right MISEG to continue the read from.  If the DA from the MISEG
     5108    11781                 is FRZERO, then this is probably a one granule keyed file.  INDX
     5109    11782                 will be the offset from the start of this segment where we left
     5110    11783                 off last time.  Transfer the data to the user's buffer, and
     5111    11784                 increment out counters and pointers.
     5112    11785
     5113    11786                      Get another segment, if there is one.  If FAK is set, then
     5114    11787                 this is a duplicate record, we're done.
     5115    11788        */
     5116    11789                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:852  
     5117    11790    1   RDCONT: PROC ALTRET;

  11790  1 016630   200100 741300       RDCONT       STX1  ! I,,AUTO

     5118    11791    2          DCL I SBIN;
     5119    11792    2          DCL GX SBIN;
     5120    11793    2          DCL SIZE SBIN;
     5121    11794    2          DCL LCDA UBIN;
     5122    11795    2          DCL INDX SBIN;
     5123    11796    2          DCL CHARS CHAR(SIZE) BASED;
     5124    11797    2          DCL GACTB SBIN;
     5125    11798        /* */
     5126    11799    2          IF F$DCB.SHARED THEN

  11799  1 016631   200007 470500                    LDP0    JDCB$,,AUTO
         1 016632   000064 236100                    LDQ     52,,PR0
         1 016633   100000 316003                    CANQ    32768,DU
         1 016634   016676 600000 1                  TZE     s:11830

     5127    11800    3             DO;   /* SHARED */

     5128    11801    3             IF NOT FPT$READ_V.KEYS THEN

  11801  1 016635   000000 471400 xsym               LDP1    B$PS0$
         1 016636   100000 236100                    LDQ     0,,PR1
         1 016637   200000 316007                    CANQ    65536,DL
         1 016640   016646 601000 1                  TNZ     s:11817

     5129    11802    4                DO;   /* NO CONTINUE */

     5130    11803    4                B$JIT.ERR=ERRNOCONT;

  11803  1 016641   000015 236000 0                  LDQ     ERRNOCONT
         1 016642   000000 473400 xsym               LDP3    B$JIT$
         1 016643   300012 756100                    STQ     10,,PR3

     5131    11804        /*E*   ERROR:   FMG-E$NOCONT-2
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:853  
     5132    11805               MESSAGE: Illegal use of CONT option
     5133    11806               MESSAGE1: An attempt was made to use the CONT option in one
     5134    11807                         of the following illegal situations:
     5135    11808                         1) Previous operation was not the same as this
     5136    11809                            operation
     5137    11810                         2) File is compressed or encryption was specified
     5138    11811                         3) File is opened in shared mode and KEYS was not
     5139    11812                            specified
     5140    11813        */
     5141    11814    4                ALTRETURN;

  11814  1 016644   200100 221300                    LDX1  ! I,,AUTO
         1 016645   000000 702211                    TSX2  ! 0,X1

     5142    11815    4                END;  /* NO CONTINUE */
     5143    11816
     5144    11817    3             CALL SETKEY(B$PS1$) ALTRET(ERR);

  11817  1 016646   000052 236000 2                  LDQ     42
         1 016647   200113 756100                    STQ     BEGGRAN,,AUTO
         1 016650   021704 701000 1                  TSX1    SETKEY
         1 016651   017105 702000 1                  TSX2    ERR

     5145    11818    3             IF ORG = %IREL# THEN

  11818  1 016652   200022 235100                    LDA     ORG,,AUTO
         1 016653   000015 115007                    CMPA    13,DL
         1 016654   016661 601000 1                  TNZ     s:11820

     5146    11819    3                CALL FMD$CHKFIELD(B$PS1$, %FMD_CHKTYP_KEY) ALTRET(ERR);

  11819  1 016655   000054 630400 2                  EPPR0   44
         1 016656   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 016657   000000 701000 xent               TSX1    FMD$CHKFIELD
         1 016660   017105 702000 1                  TSX2    ERR

     5147    11820    3             COMFLG=%KEY;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:854  

  11820  1 016661   200060 450100                    STZ     COMFLG,,AUTO

     5148    11821    3             CALL FINDKEY ALTRET(NOKEY);

  11821  1 016662   007536 701000 1                  TSX1    FINDKEY
         1 016663   017127 702000 1                  TSX2    NOKEY

     5149    11822    3             IF F$DCB.SHARED THEN

  11822  1 016664   200007 470500                    LDP0    JDCB$,,AUTO
         1 016665   000064 236100                    LDQ     52,,PR0
         1 016666   100000 316003                    CANQ    32768,DU
         1 016667   016672 600000 1                  TZE     s:11825

     5150    11823    3                CALL SETID;

  11823  1 016670   021643 701000 1                  TSX1    SETID
         1 016671   000000 011000                    NOP     0

     5151    11824
     5152    11825    3             IF FM$KEYENT.D THEN

  11825  1 016672   200020 470500                    LDP0    KEY$,,AUTO
         1 016673   000000 234100                    SZN     0,,PR0
         1 016674   017127 604000 1                  TMI     NOKEY

     5153    11826    3                GOTO NOKEY;
     5154    11827    3             END;  /* SHARED */

  11827  1 016675   016722 710000 1                  TRA     s:11840

     5155    11828    2          ELSE
     5156    11829    3             DO;   /* NOT SHARED */

     5157    11830    3             IF EOP ~= 1 OR F$DCB.COMP OR FPT$READ_V.SEED OR F$DCB.SEED THEN

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:855  
  11830  1 016676   200036 235100                    LDA     EOP,,AUTO
         1 016677   000001 115007                    CMPA    1,DL
         1 016700   016711 601000 1                  TNZ     s:11832
         1 016701   000031 236100                    LDQ     25,,PR0
         1 016702   000100 316007                    CANQ    64,DL
         1 016703   016711 601000 1                  TNZ     s:11832
         1 016704   000000 471400 xsym               LDP1    B$PS0$
         1 016705   100002 235100                    LDA     2,,PR1
         1 016706   016711 601000 1                  TNZ     s:11832
         1 016707   000062 235100                    LDA     50,,PR0
         1 016710   016716 600000 1                  TZE     s:11836

     5158    11831    4                DO;   /* NO CONTINUE */

     5159    11832    4                B$JIT.ERR=ERRNOCONT;

  11832  1 016711   000015 236000 0                  LDQ     ERRNOCONT
         1 016712   000000 471400 xsym               LDP1    B$JIT$
         1 016713   100012 756100                    STQ     10,,PR1

     5160    11833    4                ALTRETURN;

  11833  1 016714   200100 221300                    LDX1  ! I,,AUTO
         1 016715   000000 702211                    TSX2  ! 0,X1

     5161    11834    4                END;  /* NO CONTINUE */
     5162    11835
     5163    11836    3             CALL RESTOREPOS ALTRET(ERR);

  11836  1 016716   021403 701000 1                  TSX1    RESTOREPOS
         1 016717   017105 702000 1                  TSX2    ERR

     5164    11837    3             CALL CURREC ALTRET(ERR);

  11837  1 016720   005131 701000 1                  TSX1    CURREC
         1 016721   017105 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:856  
     5165    11838    3             END;  /* NOT SHARED */

     5166    11839
     5167    11840    2          I=0;

  11840  1 016722   200101 450100                    STZ     I,,AUTO

     5168    11841    3   LOOP:  DO WHILE ('1'B);

  11841  1 016723                       LOOP         null
     5169    11842    3             DA=FM$MISEG.GDA;

  11842  1 016723   200014 470500                    LDP0    SEG$,,AUTO
         1 016724   000001 236100                    LDQ     1,,PR0
         1 016725   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 016726   200021 756100                    STQ     DA,,AUTO

     5170    11843    3             IF FM$MISEG.GACTB = 0 THEN

  11843  1 016727   000000 236100                    LDQ     0,,PR0
         1 016730   007777 316007                    CANQ    4095,DL
         1 016731   017103 600000 1                  TZE     s:11896

     5171    11844    3                EXIT;
     5172    11845
     5173    11846    3             IF FM$MISEG.GACTB+I >= F$DCB.GDISP THEN

  11846  1 016732   000000 236100                    LDQ     0,,PR0
         1 016733   007777 376007                    ANQ     4095,DL
         1 016734   200101 036100                    ADLQ    I,,AUTO
         1 016735   200007 471500                    LDP1    JDCB$,,AUTO
         1 016736   017063 604000 1                  TMI     s:11882
         1 016737   100101 116100                    CMPQ    65,,PR1
         1 016740   017063 602000 1                  TNC     s:11882

     5174    11847    4                DO;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:857  
     5175    11848    4                IF DA = FM_FRZERO THEN

  11848  1 016741   200021 236100                    LDQ     DA,,AUTO
         1 016742   000000 116000 xsym               CMPQ    FM_FRZERO
         1 016743   016747 601000 1                  TNZ     s:11851

     5176    11849    4                   BUFNUM=1;

  11849  1 016744   000001 235007                    LDA     1,DL
         1 016745   200044 755100                    STA     BUFNUM,,AUTO
         1 016746   016750 710000 1                  TRA     s:11853

     5177    11850    4                ELSE
     5178    11851    4                   BUFNUM=0;

  11851  1 016747   200044 450100                    STZ     BUFNUM,,AUTO

     5179    11852
     5180    11853    4                DBUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM));

  11853  1 016750   200044 720100                    LXL0    BUFNUM,,AUTO
         1 016751   100115 236110                    LDQ     77,X0,PR1
         1 016752   000033 772000                    QRL     27
         1 016753   000037 376007                    ANQ     31,DL
         1 016754   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 016755   200040 756100                    STQ     DBUF$,,AUTO

     5181    11854    4                IF DBUF$ = ADDR(NIL) OR

  11854  1 016756   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 016757   016764 600000 1                  TZE     s:11857
         1 016760   100115 236110                    LDQ     77,X0,PR1
         1 016761   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 016762   200021 116100                    CMPQ    DA,,AUTO
         1 016763   017000 600000 1                  TZE     s:11861

     5182    11855    4                   F$DCB.BFR.DA(BUFNUM) ~= DA THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:858  
     5183    11856    5                   DO;   /* READ GRANULE */

     5184    11857    5                   F$DCB.LVL=7;

  11857  1 016764   070000 236003                    LDQ     28672,DU
         1 016765   100067 256100                    ORSQ    55,,PR1

     5185    11858    5                   CALL FMD$REDBUF(DBUF$, BUFNUM, DA,,) ALTRET(DATAERR);

  11858  1 016766   200021 633500                    EPPR3   DA,,AUTO
         1 016767   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 016770   200044 634500                    EPPR4   BUFNUM,,AUTO
         1 016771   200167 454500                    STP4    STEMP_FIELDIN+3,,AUTO
         1 016772   200040 635500                    EPPR5   DBUF$,,AUTO
         1 016773   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 016774   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 016775   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 016776   000000 701000 xent               TSX1    FMD$REDBUF
         1 016777   017107 702000 1                  TSX2    DATAERR

     5186    11859    5                   END;  /* READ GRANULE */

     5187    11860
     5188    11861    4                GX=FM$MISEG.GX;

  11861  1 017000   200014 470500                    LDP0    SEG$,,AUTO
         1 017001   000000 236100                    LDQ     0,,PR0
         1 017002   000014 772000                    QRL     12
         1 017003   001777 376007                    ANQ     1023,DL
         1 017004   200102 756100                    STQ     GX,,AUTO

     5189    11862
     5190    11863    4                G$=PINCRW(DBUF$, GX);

  11863  1 017005   000022 736000                    QLS     18
         1 017006   200040 036100                    ADLQ    DBUF$,,AUTO
         1 017007   200026 756100                    STQ     G$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:859  

     5191    11864    4                INDX=F$DCB.GDISP-I;

  11864  1 017010   200007 471500                    LDP1    JDCB$,,AUTO
         1 017011   100101 236100                    LDQ     65,,PR1
         1 017012   200101 136100                    SBLQ    I,,AUTO
         1 017013   200105 756100                    STQ     INDX,,AUTO

     5192    11865
     5193    11866    4                GACTB=FM$MISEG.GACTB-INDX;

  11866  1 017014   000000 236100                    LDQ     0,,PR0
         1 017015   007777 376007                    ANQ     4095,DL
         1 017016   200105 136100                    SBLQ    INDX,,AUTO
         1 017017   200106 756100                    STQ     GACTB,,AUTO

     5194    11867    4                IF GACTB > F$DCB.UBYTES THEN

  11867  1 017020   017027 604000 1                  TMI     s:11870
         1 017021   100076 116100                    CMPQ    62,,PR1
         1 017022   017027 602000 1                  TNC     s:11870
         1 017023   017027 600000 1                  TZE     s:11870

     5195    11868    4                   SIZE=F$DCB.UBYTES;

  11868  1 017024   100076 235100                    LDA     62,,PR1
         1 017025   200103 755100                    STA     SIZE,,AUTO
         1 017026   017030 710000 1                  TRA     s:11871

     5196    11869    4                ELSE
     5197    11870    4                   SIZE=GACTB;

  11870  1 017027   200103 756100                    STQ     SIZE,,AUTO

     5198    11871    4                F$DCB.UB$->CHARS=SUBSTR(G$->CHAR1, INDX, SIZE);

  11871  1 017030   100075 473500                    LDP3    61,,PR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:860  
         1 017031   200026 474500                    LDP4    G$,,AUTO
         1 017032   200103 720100                    LXL0    SIZE,,AUTO
         1 017033   200105 235100                    LDA     INDX,,AUTO
         1 017034   040140 100545                    MLR     fill='040'O
         1 017035   400000 000010                    ADSC9   0,A,PR4                  cn=0,n=*X0
         1 017036   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

     5199    11872    4                F$DCB.ARS=F$DCB.ARS+SIZE;

  11872  1 017037   100000 236100                    LDQ     0,,PR1
         1 017040   200103 036100                    ADLQ    SIZE,,AUTO
         1 017041   100000 756100                    STQ     0,,PR1

     5200    11873
     5201    11874    4                F$DCB.GDISP=F$DCB.GDISP+SIZE;

  11874  1 017042   100101 236100                    LDQ     65,,PR1
         1 017043   200103 036100                    ADLQ    SIZE,,AUTO
         1 017044   100101 756100                    STQ     65,,PR1

     5202    11875    4                F$DCB.UBYTES=F$DCB.UBYTES-SIZE;

  11875  1 017045   100076 236100                    LDQ     62,,PR1
         1 017046   200103 136100                    SBLQ    SIZE,,AUTO
         1 017047   100076 756100                    STQ     62,,PR1

     5203    11876    4                F$DCB.UB$=PINCRC(F$DCB.UB$, SIZE);

  11876  1 017050   100075 470500                    LDP0    61,,PR1
         1 017051   200103 236100                    LDQ     SIZE,,AUTO
         1 017052   000011 402007                    MPY     9,DL
         1 017053   000000 116003                    CMPQ    0,DU
         1 017054   017056 605000 1                  TPL     s:11876+6
         1 017055   000044 036003                    ADLQ    36,DU
         1 017056   000000 503506                    ABD     0,QL,PR0
         1 017057   100075 450500                    STP0    61,,PR1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:861  
     5204    11877    4                IF SIZE < GACTB THEN

  11877  1 017060   200103 236100                    LDQ     SIZE,,AUTO
         1 017061   200106 116100                    CMPQ    GACTB,,AUTO
         1 017062   017113 604000 1                  TMI     LOSTDATA

     5205    11878    4                   GOTO LOSTDATA;
     5206    11879
     5207    11880    4                END;

     5208    11881
     5209    11882    3             I=I+FM$MISEG.GACTB;

  11882  1 017063   200014 470500                    LDP0    SEG$,,AUTO
         1 017064   000000 236100                    LDQ     0,,PR0
         1 017065   007777 376007                    ANQ     4095,DL
         1 017066   200101 036100                    ADLQ    I,,AUTO
         1 017067   200101 756100                    STQ     I,,AUTO

     5210    11883    3             CALL NXTSEG ALTRET(ERR);

  11883  1 017070   015351 701000 1                  TSX1    NXTSEG
         1 017071   017105 702000 1                  TSX2    ERR

     5211    11884    3             IF SEGX > 0 THEN

  11884  1 017072   200013 235100                    LDA     SEGX,,AUTO
         1 017073   017103 604400 1                  TMOZ    s:11896

     5212    11885    3                IF FM$MISEG.FAK THEN

  11885  1 017074   200014 470500                    LDP0    SEG$,,AUTO
         1 017075   000000 234100                    SZN     0,,PR0
         1 017076   016723 605000 1                  TPL     LOOP

     5213    11886    4                   DO;   /* DUP ALT */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:862  
     5214    11887    4                   F$DCB.RPOS='1'B;

  11887  1 017077   200007 471500                    LDP1    JDCB$,,AUTO
         1 017100   010000 236007                    LDQ     4096,DL
         1 017101   100064 256100                    ORSQ    52,,PR1

     5215    11888    4                   EXIT LOOP;

  11888  1 017102   017103 710000 1                  TRA     s:11896

     5216    11889    4                   END;  /* DUP ALT */
     5217    11890    3                ELSE;
     5218    11891    3             ELSE
     5219    11892    3                EXIT LOOP;
     5220    11893
     5221    11894    3             END;

     5222    11895
     5223    11896    2          RETURN;

  11896  1 017103   200100 221300                    LDX1  ! I,,AUTO
         1 017104   000001 702211                    TSX2  ! 1,X1

     5224    11897    2   ERR:   ALTRETURN;

  11897  1 017105   200100 221300       ERR          LDX1  ! I,,AUTO
         1 017106   000000 702211                    TSX2  ! 0,X1

     5225    11898    2   DATAERR: CALL DATAERROR;

  11898  1 017107   005205 701000 1     DATAERR      TSX1    DATAERROR
         1 017110   000000 011000                    NOP     0

     5226    11899    2          ALTRETURN;

  11899  1 017111   200100 221300                    LDX1  ! I,,AUTO
         1 017112   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:863  

  11886  1 017113                       LOSTDATA     null
     5227    11900    2   LOSTDATA: ;
     5228    11901    2          B$JIT.ERR=ERRLD;

  11901  1 017113   000006 236000 0                  LDQ     ERRLD
         1 017114   000000 473400 xsym               LDP3    B$JIT$
         1 017115   300012 756100                    STQ     10,,PR3

     5229    11902    2          F$DCB.EOP=FM_EOP(FPTCODE);

  11902  1 017116   200003 470500                    LDP0    @PSEG$,,AUTO
         1 017117   000000 721100                    LXL1    0,,PR0
         1 017120   000000 236011 xsym               LDQ     FM_EOP,X1
         1 017121   000033 736000                    QLS     27
         1 017122   100064 676100                    ERQ     52,,PR1
         1 017123   003000 376003                    ANQ     1536,DU
         1 017124   100064 656100                    ERSQ    52,,PR1

     5230    11903    2          ALTRETURN;

  11903  1 017125   200100 221300                    LDX1  ! I,,AUTO
         1 017126   000000 702211                    TSX2  ! 0,X1

  11902  1 017127                       NOKEY        null
     5231    11904    2   NOKEY: ;
     5232    11905    2          IF FPT$READ_V.KEYR THEN

  11905  1 017127   000000 470400 xsym               LDP0    B$PS0$
         1 017130   000000 236100                    LDQ     0,,PR0
         1 017131   100000 316007                    CANQ    32768,DL
         1 017132   017142 600000 1                  TZE     s:11911

     5233    11906    3             DO;   /* RETURN NEXT KEY */

     5234    11907    3             CALL NXTRECND ALTRET(NONXTKEY);

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:864  
  11907  1 017133   015332 701000 1                  TSX1    NXTRECND
         1 017134   017147 702000 1                  TSX2    NONXTKEY

     5235    11908    3             F$DCB.RPOS='1'B;

  11908  1 017135   200007 470500                    LDP0    JDCB$,,AUTO
         1 017136   010000 236007                    LDQ     4096,DL
         1 017137   000064 256100                    ORSQ    52,,PR0

     5236    11909    3             CALL GETKEY ALTRET(ERR);

  11909  1 017140   010641 701000 1                  TSX1    GETKEY
         1 017141   017105 702000 1                  TSX2    ERR

     5237    11910    3             END;

     5238    11911    2          B$JIT.ERR=ERRNOKEY;

  11911  1 017142   000007 236000 0                  LDQ     ERRNOKEY
         1 017143   000000 470400 xsym               LDP0    B$JIT$
         1 017144   000012 756100                    STQ     10,,PR0

     5239    11912    2          ALTRETURN;

  11912  1 017145   200100 221300                    LDX1  ! I,,AUTO
         1 017146   000000 702211                    TSX2  ! 0,X1

  11911  1 017147                       NONXTKEY     null
     5240    11913    2   NONXTKEY: ;
     5241    11914    2          IF B$JIT.ERR.CODE ~= %E$EOF THEN

  11914  1 017147   000000 470400 xsym               LDP0    B$JIT$
         1 017150   000012 236100                    LDQ     10,,PR0
         1 017151   377770 376007                    ANQ     131064,DL
         1 017152   000060 116007                    CMPQ    48,DL
         1 017153   017156 600000 1                  TZE     s:11916

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:865  
     5242    11915    2             ALTRETURN;

  11915  1 017154   200100 221300                    LDX1  ! I,,AUTO
         1 017155   000000 702211                    TSX2  ! 0,X1

     5243    11916    2          CALL ZAPKEY;

  11916  1 017156   026416 701000 1                  TSX1    ZAPKEY
         1 017157   000000 011000                    NOP     0

     5244    11917    2          B$JIT.ERR=ERRNOKEY;

  11917  1 017160   000007 236000 0                  LDQ     ERRNOKEY
         1 017161   000000 470400 xsym               LDP0    B$JIT$
         1 017162   000012 756100                    STQ     10,,PR0

     5245    11918    2          ALTRETURN;

  11918  1 017163   200100 221300                    LDX1  ! I,,AUTO
         1 017164   000000 702211                    TSX2  ! 0,X1

     5246    11919    2          END RDCONT;
     5247    11920               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:866  
     5248    11921        /*I*     NAME:     RDGRAN
     5249    11922                 PURPOSE:  To read an index granule
     5250    11923                 DESCRIPTION:
     5251    11924                      LCDA is the "link check disk address".  Increment the number
     5252    11925                 of reads on level 0 we've had to do.
     5253    11926        */
     5254    11927    1   RDGRAN: PROC ALTRET;

  11927  1 017165   200142 741300       RDGRAN       STX1  ! I,,AUTO

     5255    11928    2          DCL LCDA SBIN;
     5256    11929        /* */
     5257    11930    2          F$DCB.LVL=0;

  11930  1 017166   200007 470500                    LDP0    JDCB$,,AUTO
         1 017167   000035 236000 2                  LDQ     29
         1 017170   000067 356100                    ANSQ    55,,PR0

     5258    11931    2          LCDA=F$DCB.BFR.DA(1);

  11931  1 017171   000116 236100                    LDQ     78,,PR0
         1 017172   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 017173   200143 756100                    STQ     LCDA,,AUTO

     5259    11932
     5260    11933    2          CALL FMD$REDBUF(BUF$, 1, DA,, LCDA) ALTRET(ERR);

  11933  1 017174   200143 631500                    EPPR1   LCDA,,AUTO
         1 017175   200172 451500                    STP1    STEMP_FIELDIN+6,,AUTO
         1 017176   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 017177   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 017200   200021 633500                    EPPR3   DA,,AUTO
         1 017201   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 017202   000001 236000 2                  LDQ     1
         1 017203   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 017204   200024 634500                    EPPR4   BUF$,,AUTO
         1 017205   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:867  
         1 017206   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 017207   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 017210   000000 701000 xent               TSX1    FMD$REDBUF
         1 017211   017234 702000 1                  TSX2    ERR

     5261    11934    2          F$DCB.RDL0=F$DCB.RDL0+1;

  11934  1 017212   200007 470500                    LDP0    JDCB$,,AUTO
         1 017213   000003 236100                    LDQ     3,,PR0
         1 017214   000001 036003                    ADLQ    1,DU
         1 017215   000003 552120                    STBQ    3,'20'O,PR0

     5262    11935    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

  11935  1 017216   200024 471500                    LDP1    BUF$,,AUTO
         1 017217   100002 220100                    LDX0    2,,PR1
         1 017220   000000 636010                    EAQ     0,X0
         1 017221   200024 036100                    ADLQ    BUF$,,AUTO
         1 017222   200025 756100                    STQ     KTPTR$,,AUTO

     5263    11936    2          KEYCNT=FM$GRAN.KEYCNT;

  11936  1 017223   100002 236100                    LDQ     2,,PR1
         1 017224   000777 376007                    ANQ     511,DL
         1 017225   200017 756100                    STQ     KEYCNT,,AUTO

     5264    11937    2          BOUND=FM$KEYTBL(0);

  11937  1 017226   200025 473500                    LDP3    KTPTR$,,AUTO
         1 017227   300000 236100                    LDQ     0,,PR3
         1 017230   000033 772000                    QRL     27
         1 017231   200016 756100                    STQ     BOUND,,AUTO

     5265    11938
     5266    11939    2          RETURN;

  11939  1 017232   200142 221300                    LDX1  ! I,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:868  
         1 017233   000001 702211                    TSX2  ! 1,X1

     5267    11940    2   ERR:   ALTRETURN;

  11940  1 017234   200142 221300       ERR          LDX1  ! I,,AUTO
         1 017235   000000 702211                    TSX2  ! 0,X1

     5268    11941    2          END RDGRAN;
     5269    11942               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:869  
     5270    11943        /*I*     NAME:     READ
     5271    11944                 PURPOSE:  To handle the M$READ pmme
     5272    11945                 DESCRIPTION:
     5273    11946                      If an ID was specified, pre-check it for proper size.
     5274    11947
     5275    11948                      If this is a continued read, then call RDCONT.  Otherwise,
     5276    11949                 this is a normal read.  Encryption is illegal for indexed or IREL files,
     5277    11950                 there wouldn't be any way to find keys and associate them with
     5278    11951                 records.
     5279    11952
     5280    11953                      If the user specified a key, then use the key to do the read.
     5281    11954                 Otherwise, just call READNOKEY to probably read the next record.
     5282    11955        */
     5283    11956                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:870  
     5284    11957    1   READ:  PROC ALTRET;

  11957  1 017236   200076 741300       READ         STX1  ! DELALL_FAST+2,,AUTO

     5285    11958    2          DCL I SBIN;
     5286    11959        /* */
     5287    11960    2          IF FPT$READ_V.IDS THEN

  11960  1 017237   000000 470400 xsym               LDP0    B$PS0$
         1 017240   000000 236100                    LDQ     0,,PR0
         1 017241   004000 316007                    CANQ    2048,DL
         1 017242   017263 600000 1                  TZE     s:11975

     5288    11961    3             DO;   /* CHECK SIZE OF ID */

     5289    11962    3             CALL HFF$DSIZ(B$PS3$, I);

  11962  1 017243   200077 631500                    EPPR1   I,,AUTO
         1 017244   200167 451500                    STP1    STEMP_FIELDIN+3,,AUTO
         1 017245   000053 236000 2                  LDQ     43
         1 017246   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 017247   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 017250   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 017251   000000 701000 xent               TSX1    HFF$DSIZ
         1 017252   000000 011000                    NOP     0

     5290    11963    3             IF I < 8 THEN

  11963  1 017253   200077 235100                    LDA     I,,AUTO
         1 017254   000010 115007                    CMPA    8,DL
         1 017255   017263 605000 1                  TPL     s:11975

     5291    11964    4                DO;   /* TOO SMALL */

     5292    11965    4                B$JIT.ERR=ERRIDSMALL;

  11965  1 017256   000032 236000 0                  LDQ     ERRIDSMALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:871  
         1 017257   000000 470400 xsym               LDP0    B$JIT$
         1 017260   000012 756100                    STQ     10,,PR0

     5293    11966    4                ALTRETURN;

  11966  1 017261   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 017262   000000 702211                    TSX2  ! 0,X1

     5294    11967    4                END;  /* TOO SMALL */
     5295    11968        /*E*   ERROR:      FMG-E$IDSMALL-2
     5296    11969               MESSAGE: ID buffer is too small
     5297    11970               MESSAGE1: The ID buffer passed to file management is too
     5298    11971                         small to hold an entire ID.
     5299    11972        */
     5300    11973    3             END;  /* CHECK SIZE OF ID */
     5301    11974
     5302    11975    2          IF FPT$READ_V.DVBYTE.CONT THEN

  11975  1 017263   000000 470400 xsym               LDP0    B$PS0$
         1 017264   000003 430100                    FSZN    3,,PR0
         1 017265   017271 605000 1                  TPL     s:11979

     5303    11976    2             CALL RDCONT ALTRET(ERR);

  11976  1 017266   016630 701000 1                  TSX1    RDCONT
         1 017267   017344 702000 1                  TSX2    ERR
         1 017270   017342 710000 1                  TRA     s:12013

     5304    11977    2          ELSE
     5305    11978    3             DO;   /* SANE READ */

     5306    11979    3             F$DCB.GDISP=0;

  11979  1 017271   200007 471500                    LDP1    JDCB$,,AUTO
         1 017272   100101 450100                    STZ     65,,PR1

     5307    11980    3             IF (FPT$READ_V.SEED OR F$DCB.SEED) AND ORG ~= %KEYED# THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:872  

  11980  1 017273   000002 235100                    LDA     2,,PR0
         1 017274   017277 601000 1                  TNZ     s:11980+4
         1 017275   100062 235100                    LDA     50,,PR1
         1 017276   017307 600000 1                  TZE     s:11993
         1 017277   200022 235100                    LDA     ORG,,AUTO
         1 017300   000002 115007                    CMPA    2,DL
         1 017301   017307 600000 1                  TZE     s:11993

     5308    11981    4                DO;   /* CANT DO THAT */

     5309    11982    4                B$JIT.ERR=ERRINDSEED;

  11982  1 017302   000016 236000 0                  LDQ     ERRINDSEED
         1 017303   000000 473400 xsym               LDP3    B$JIT$
         1 017304   300012 756100                    STQ     10,,PR3

     5310    11983        /*E*   ERROR:      FMG-E$INDSEED-2
     5311    11984               MESSAGE: Encryption is illegal for indexed and IREL files%, file %FN%
     5312    11985               DESCRIPTION:
     5313    11986                  An encryption seed may not be specified for reads and
     5314    11987                  writes to indexed or IREL files.
     5315    11988        */
     5316    11989    4                ALTRETURN;

  11989  1 017305   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 017306   000000 702211                    TSX2  ! 0,X1

     5317    11990    4                END;  /* CANT DO THAT */
     5318    11991
     5319    11992
     5320    11993    3             IF FPT$READ_V.KEYS THEN

  11993  1 017307   000000 236100                    LDQ     0,,PR0
         1 017310   200000 316007                    CANQ    65536,DL
         1 017311   017315 600000 1                  TZE     s:11997

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:873  
     5321    11994    3                CALL READKEY ALTRET(ERR);

  11994  1 017312   017346 701000 1                  TSX1    READKEY
         1 017313   017344 702000 1                  TSX2    ERR
         1 017314   017342 710000 1                  TRA     s:12013

     5322    11995    3             ELSE
     5323    11996    4                DO;   /* NO KEY */

     5324    11997    4                IF FPT$READ_V.IDS THEN

  11997  1 017315   004000 316007                    CANQ    2048,DL
         1 017316   017340 600000 1                  TZE     s:12008

     5325    11998    5                   DO;   /* Position by ID only */

     5326    11999    5                   IF ORG ~= %INDEXED# AND ORG ~= %IREL# THEN

  11999  1 017317   200022 235100                    LDA     ORG,,AUTO
         1 017320   000006 115007                    CMPA    6,DL
         1 017321   017331 600000 1                  TZE     s:12004
         1 017322   000015 115007                    CMPA    13,DL
         1 017323   017331 600000 1                  TZE     s:12004

     5327    12000    6                      DO;  /* Can't position with ID only */

     5328    12001    6                      B$JIT.ERR=ERRIDONLY;

  12001  1 017324   000034 236000 0                  LDQ     ERRIDONLY
         1 017325   000000 473400 xsym               LDP3    B$JIT$
         1 017326   300012 756100                    STQ     10,,PR3

     5329    12002    6                      ALTRETURN;

  12002  1 017327   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 017330   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:874  
     5330    12003    6                      END; /* Can't position with ID only */
     5331    12004    5                   IDPTR$=B$PS3$;

  12004  1 017331   000000 236000 xsym               LDQ     B$PS3$
         1 017332   200034 756100                    STQ     IDPTR$,,AUTO

     5332    12005    5                   CALL FINDIDO ALTRET(ERR);

  12005  1 017333   007256 701000 1                  TSX1    FINDIDO
         1 017334   017344 702000 1                  TSX2    ERR

     5333    12006    5                   F$DCB.RPOS='1'B;

  12006  1 017335   200007 470500                    LDP0    JDCB$,,AUTO
         1 017336   010000 236007                    LDQ     4096,DL
         1 017337   000064 256100                    ORSQ    52,,PR0

     5334    12007    5                   END;  /* Position by ID only */

     5335    12008    4                CALL READNOKEY ALTRET(ERR);

  12008  1 017340   017541 701000 1                  TSX1    READNOKEY
         1 017341   017344 702000 1                  TSX2    ERR

     5336    12009    4                END;  /* NO KEY */

     5337    12010
     5338    12011    3             END;  /* SANE READ */

     5339    12012
     5340    12013    2          RETURN;

  12013  1 017342   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 017343   000001 702211                    TSX2  ! 1,X1

     5341    12014    2   ERR:   ALTRETURN;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:875  
  12014  1 017344   200076 221300       ERR          LDX1  ! DELALL_FAST+2,,AUTO
         1 017345   000000 702211                    TSX2  ! 0,X1

     5342    12015    2          END READ;
     5343    12016               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:876  
     5344    12017        /*I*     NAME:     READKEY
     5345    12018                 PURPOSE:  To handle keyed reads
     5346    12019                 DESCRIPTION:
     5347    12020                      If this is an irel file, then check out the key for illegal
     5348    12021                 fields.
     5349    12022
     5350    12023                      Find the key that the user specified.  If an ID or RECNUM was
     5351    12024                 specified, then use those to find the correct duplicate key.
     5352    12025
     5353    12026                      If the user asked for anything back (key or ID), return
     5354    12027                 return them now.  IDs especially need to be returned now
     5355    12028                 because we have to use the first segment in a possible list
     5356    12029                 of segments to return the information.  The read process may
     5357    12030                 position us beyond the first segment.
     5358    12031
     5359    12032                      Now, call GETREC to actually read the record.
     5360    12033
     5361    12034                      If the key the user asked for didn't exist, then position to
     5362    12035                 the next non-deleted record, and return the key or ID.
     5363    12036        */
     5364    12037                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:877  
     5365    12038    1   READKEY: PROC ALTRET;

  12038  1 017346   200100 741300       READKEY      STX1  ! I,,AUTO

     5366    12039        /* */
     5367    12040    2          CALL SETKEY(B$PS1$) ALTRET(ERR);

  12040  1 017347   000052 236000 2                  LDQ     42
         1 017350   200113 756100                    STQ     BEGGRAN,,AUTO
         1 017351   021704 701000 1                  TSX1    SETKEY
         1 017352   017440 702000 1                  TSX2    ERR

     5368    12041    2          IF ORG = %IREL# THEN

  12041  1 017353   200022 235100                    LDA     ORG,,AUTO
         1 017354   000015 115007                    CMPA    13,DL
         1 017355   017362 601000 1                  TNZ     s:12044

     5369    12042    2             CALL FMD$CHKFIELD(B$PS1$, %FMD_CHKTYP_KEY) ALTRET(ERR);

  12042  1 017356   000054 630400 2                  EPPR0   44
         1 017357   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 017360   000000 701000 xent               TSX1    FMD$CHKFIELD
         1 017361   017440 702000 1                  TSX2    ERR

     5370    12043
     5371    12044    2          COMFLG=%KEY;

  12044  1 017362   200060 450100                    STZ     COMFLG,,AUTO

     5372    12045    2          CALL FINDKEY ALTRET(NOKEY);

  12045  1 017363   007536 701000 1                  TSX1    FINDKEY
         1 017364   017442 702000 1                  TSX2    NOKEY

     5373    12046
     5374    12047    2          IF FPT$READ_V.IDS THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:878  

  12047  1 017365   000000 470400 xsym               LDP0    B$PS0$
         1 017366   000000 236100                    LDQ     0,,PR0
         1 017367   004000 316007                    CANQ    2048,DL
         1 017370   017376 600000 1                  TZE     s:12054

     5375    12048    3             DO;   /* POSITION TO ID */

     5376    12049    3             IDPTR$=B$PS3$;

  12049  1 017371   000000 236000 xsym               LDQ     B$PS3$
         1 017372   200034 756100                    STQ     IDPTR$,,AUTO

     5377    12050    3             CALL FINDID ALTRET(NOKEY1);

  12050  1 017373   007220 701000 1                  TSX1    FINDID
         1 017374   017451 702000 1                  TSX2    NOKEY1

     5378    12051    3             END;  /* POSITION TO ID */

  12051  1 017375   017405 710000 1                  TRA     s:12061

     5379    12052    2          ELSE
     5380    12053    3             DO;   /* TRY RECNUM */

     5381    12054    3             IF FPT$READ_V.RECNUM > 0 THEN

  12054  1 017376   000003 720100                    LXL0    3,,PR0
         1 017377   017405 600000 1                  TZE     s:12061

     5382    12055    4                DO;

     5383    12056    4                RECNUM=FPT$READ_V.RECNUM;

  12056  1 017400   000003 236100                    LDQ     3,,PR0
         1 017401   777777 376007                    ANQ     -1,DL
         1 017402   200033 756100                    STQ     RECNUM,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:879  

     5384    12057    4                CALL MOVERECN ALTRET(NOREC);

  12057  1 017403   013632 701000 1                  TSX1    MOVERECN
         1 017404   017521 702000 1                  TSX2    NOREC

     5385    12058    4                END;

     5386    12059    3             END;  /* TRY RECNUM */

     5387    12060
     5388    12061    2          IF INDEX# = 0 THEN

  12061  1 017405   200011 235100                    LDA     INDEX#,,AUTO
         1 017406   017412 601000 1                  TNZ     s:12065

     5389    12062    2             IF FM$KEYENT.D THEN

  12062  1 017407   200020 470500                    LDP0    KEY$,,AUTO
         1 017410   000000 234100                    SZN     0,,PR0
         1 017411   017451 604000 1                  TMI     NOKEY1

     5390    12063    2                GOTO NOKEY1;
     5391    12064
     5392    12065    2          IF FPT$READ_V.KEYR THEN

  12065  1 017412   000000 470400 xsym               LDP0    B$PS0$
         1 017413   000000 236100                    LDQ     0,,PR0
         1 017414   100000 316007                    CANQ    32768,DL
         1 017415   017420 600000 1                  TZE     s:12068

     5393    12066    2             CALL GETKEY ALTRET(ERR);

  12066  1 017416   010641 701000 1                  TSX1    GETKEY
         1 017417   017440 702000 1                  TSX2    ERR

     5394    12067
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:880  
     5395    12068    2          IF FPT$READ_V.ID THEN

  12068  1 017420   000000 470400 xsym               LDP0    B$PS0$
         1 017421   000000 236100                    LDQ     0,,PR0
         1 017422   040000 316007                    CANQ    16384,DL
         1 017423   017426 600000 1                  TZE     s:12071

     5396    12069    2             CALL GETIDRW ALTRET(ERR);

  12069  1 017424   010551 701000 1                  TSX1    GETIDRW
         1 017425   017440 702000 1                  TSX2    ERR

     5397    12070
     5398    12071    2          IF F$DCB.SHARED THEN

  12071  1 017426   200007 470500                    LDP0    JDCB$,,AUTO
         1 017427   000064 236100                    LDQ     52,,PR0
         1 017430   100000 316003                    CANQ    32768,DU
         1 017431   017434 600000 1                  TZE     s:12074

     5399    12072    2             CALL SETID;

  12072  1 017432   021643 701000 1                  TSX1    SETID
         1 017433   000000 011000                    NOP     0

     5400    12073
     5401    12074    2          CALL GETREC ALTRET(ERR);

  12074  1 017434   011026 701000 1                  TSX1    GETREC
         1 017435   017440 702000 1                  TSX2    ERR

     5402    12075
     5403    12076    2          RETURN;

  12076  1 017436   200100 221300                    LDX1  ! I,,AUTO
         1 017437   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:881  
     5404    12077    2   ERR:   ALTRETURN;

  12077  1 017440   200100 221300       ERR          LDX1  ! I,,AUTO
         1 017441   000000 702211                    TSX2  ! 0,X1

     5405    12078    2   NOKEY: IF B$JIT.ERR.CODE ~= %E$NOKEY THEN

  12078  1 017442   000000 470400 xsym  NOKEY        LDP0    B$JIT$
         1 017443   000012 236100                    LDQ     10,,PR0
         1 017444   377770 376007                    ANQ     131064,DL
         1 017445   001020 116007                    CMPQ    528,DL
         1 017446   017451 600000 1                  TZE     NOKEY1

     5406    12079    2             ALTRETURN;

  12079  1 017447   200100 221300                    LDX1  ! I,,AUTO
         1 017450   000000 702211                    TSX2  ! 0,X1

  12078  1 017451                       NOKEY1       null
     5407    12080    2   NOKEY1: ;
     5408    12081    2          F$DCB.RPOS='1'B;

  12081  1 017451   200007 470500                    LDP0    JDCB$,,AUTO
         1 017452   010000 236007                    LDQ     4096,DL
         1 017453   000064 256100                    ORSQ    52,,PR0

     5409    12082    2          CALL NXTRECND ALTRET(NONXTKEY);

  12082  1 017454   015332 701000 1                  TSX1    NXTRECND
         1 017455   017510 702000 1                  TSX2    NONXTKEY

     5410    12083    2          F$DCB.RPOS='1'B;

  12083  1 017456   200007 470500                    LDP0    JDCB$,,AUTO
         1 017457   010000 236007                    LDQ     4096,DL
         1 017460   000064 256100                    ORSQ    52,,PR0

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:882  
     5411    12084    2          IF FPT$READ_V.KEYR THEN

  12084  1 017461   000000 471400 xsym               LDP1    B$PS0$
         1 017462   100000 236100                    LDQ     0,,PR1
         1 017463   100000 316007                    CANQ    32768,DL
         1 017464   017467 600000 1                  TZE     s:12089

     5412    12085    3             DO;   /* RETURN NEXT KEY */

     5413    12086    3             CALL GETKEY ALTRET(ERR);

  12086  1 017465   010641 701000 1                  TSX1    GETKEY
         1 017466   017440 702000 1                  TSX2    ERR

     5414    12087    3             END;

     5415    12088
     5416    12089    2          IF FPT$READ_V.ID THEN

  12089  1 017467   000000 470400 xsym               LDP0    B$PS0$
         1 017470   000000 236100                    LDQ     0,,PR0
         1 017471   040000 316007                    CANQ    16384,DL
         1 017472   017475 600000 1                  TZE     s:12092

     5417    12090    2             CALL GETIDRW ALTRET(ERR);

  12090  1 017473   010551 701000 1                  TSX1    GETIDRW
         1 017474   017440 702000 1                  TSX2    ERR

     5418    12091
     5419    12092    2          IF F$DCB.SHARED THEN

  12092  1 017475   200007 470500                    LDP0    JDCB$,,AUTO
         1 017476   000064 236100                    LDQ     52,,PR0
         1 017477   100000 316003                    CANQ    32768,DU
         1 017500   017503 600000 1                  TZE     s:12095

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:883  
     5420    12093    2             CALL SETID;

  12093  1 017501   021643 701000 1                  TSX1    SETID
         1 017502   000000 011000                    NOP     0

     5421    12094
     5422    12095    2          B$JIT.ERR=ERRNOKEY;

  12095  1 017503   000007 236000 0                  LDQ     ERRNOKEY
         1 017504   000000 470400 xsym               LDP0    B$JIT$
         1 017505   000012 756100                    STQ     10,,PR0

     5423    12096    2          ALTRETURN;

  12096  1 017506   200100 221300                    LDX1  ! I,,AUTO
         1 017507   000000 702211                    TSX2  ! 0,X1

  12095  1 017510                       NONXTKEY     null
     5424    12097    2   NONXTKEY: ;
     5425    12098    2          IF B$JIT.ERR.CODE ~= %E$EOF THEN

  12098  1 017510   000000 470400 xsym               LDP0    B$JIT$
         1 017511   000012 236100                    LDQ     10,,PR0
         1 017512   377770 376007                    ANQ     131064,DL
         1 017513   000060 116007                    CMPQ    48,DL
         1 017514   017517 600000 1                  TZE     s:12100

     5426    12099    2             ALTRETURN;

  12099  1 017515   200100 221300                    LDX1  ! I,,AUTO
         1 017516   000000 702211                    TSX2  ! 0,X1

     5427    12100    2          B$JIT.ERR=ERRNOKEY;

  12100  1 017517   000007 236000 0                  LDQ     ERRNOKEY
         1 017520   000012 756100                    STQ     10,,PR0

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:884  
     5428    12101    2   NOREC: IF FPT$READ_V.KEYR THEN

  12101  1 017521   000000 470400 xsym  NOREC        LDP0    B$PS0$
         1 017522   000000 236100                    LDQ     0,,PR0
         1 017523   100000 316007                    CANQ    32768,DL
         1 017524   017527 600000 1                  TZE     s:12103

     5429    12102    2             CALL ZAPKEY;

  12102  1 017525   026416 701000 1                  TSX1    ZAPKEY
         1 017526   000000 011000                    NOP     0

     5430    12103    2          IF FPT$READ_V.ID THEN

  12103  1 017527   000000 470400 xsym               LDP0    B$PS0$
         1 017530   000000 236100                    LDQ     0,,PR0
         1 017531   040000 316007                    CANQ    16384,DL
         1 017532   017537 600000 1                  TZE     s:12105

     5431    12104    2             CALL ZAPID(B$PS3$);

  12104  1 017533   000053 236000 2                  LDQ     43
         1 017534   200103 756100                    STQ     SIZE,,AUTO
         1 017535   026373 701000 1                  TSX1    ZAPID
         1 017536   000000 011000                    NOP     0

     5432    12105    2          ALTRETURN;

  12105  1 017537   200100 221300                    LDX1  ! I,,AUTO
         1 017540   000000 702211                    TSX2  ! 0,X1

     5433    12106    2          END READKEY;
     5434    12107               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:885  
     5435    12108        /*I*     NAME:     READNOKEY
     5436    12109                 PURPOSE:  To handle reads without a key
     5437    12110                 DESCRIPTION:
     5438    12111                      If this is the primary index, then get the next non-deleted
     5439    12112                 record.  If this is a secondary index, then we don't have to worry
     5440    12113                 about non-deleted records.  But we do have to worry about the
     5441    12114                 KEYCHNG option.
     5442    12115
     5443    12116                      Return any information, especially about the ID, before
     5444    12117                 we actually do the information transfer.
     5445    12118        */
     5446    12119                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:886  
     5447    12120    1   READNOKEY: PROC ALTRET;

  12120  1 017541   200100 741300       READNOKEY    STX1  ! I,,AUTO

     5448    12121        /* */
     5449    12122    2          IF NOT FPT$READ_V.IDS THEN

  12122  1 017542   000000 470400 xsym               LDP0    B$PS0$
         1 017543   000000 236100                    LDQ     0,,PR0
         1 017544   004000 316007                    CANQ    2048,DL
         1 017545   017550 601000 1                  TNZ     s:12125

     5450    12123    2             CALL SHAREPOS ALTRET(ERR);

  12123  1 017546   023077 701000 1                  TSX1    SHAREPOS
         1 017547   017614 702000 1                  TSX2    ERR

     5451    12124
     5452    12125    2          IF INDEX# = 0 THEN

  12125  1 017550   200011 235100                    LDA     INDEX#,,AUTO
         1 017551   017555 601000 1                  TNZ     s:12129

     5453    12126    2             CALL NXTRECND ALTRET(ERR);

  12126  1 017552   015332 701000 1                  TSX1    NXTRECND
         1 017553   017614 702000 1                  TSX2    ERR
         1 017554   017566 710000 1                  TRA     s:12134

     5454    12127    2          ELSE
     5455    12128    3             DO;   /* ALTERNATE INDEX */

     5456    12129    3             IF FPT$READ_V.KEYCHNG THEN

  12129  1 017555   000000 470400 xsym               LDP0    B$PS0$
         1 017556   000000 236100                    LDQ     0,,PR0
         1 017557   020000 316007                    CANQ    8192,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:887  
         1 017560   017564 600000 1                  TZE     s:12132

     5457    12130    3                CALL NXTRECNM ALTRET(ERR);

  12130  1 017561   015200 701000 1                  TSX1    NXTRECNM
         1 017562   017614 702000 1                  TSX2    ERR
         1 017563   017566 710000 1                  TRA     s:12134

     5458    12131    3             ELSE
     5459    12132    3                CALL NXTREC ALTRET(ERR);

  12132  1 017564   015175 701000 1                  TSX1    NXTREC
         1 017565   017614 702000 1                  TSX2    ERR

     5460    12133    3             END;  /* ALTERNATE INDEX */

     5461    12134    2          IF FPT$READ_V.KEYR THEN

  12134  1 017566   000000 470400 xsym               LDP0    B$PS0$
         1 017567   000000 236100                    LDQ     0,,PR0
         1 017570   100000 316007                    CANQ    32768,DL
         1 017571   017574 600000 1                  TZE     s:12137

     5462    12135    2             CALL GETKEY ALTRET(ERR);

  12135  1 017572   010641 701000 1                  TSX1    GETKEY
         1 017573   017614 702000 1                  TSX2    ERR

     5463    12136
     5464    12137    2          IF FPT$READ_V.ID THEN

  12137  1 017574   000000 470400 xsym               LDP0    B$PS0$
         1 017575   000000 236100                    LDQ     0,,PR0
         1 017576   040000 316007                    CANQ    16384,DL
         1 017577   017602 600000 1                  TZE     s:12140

     5465    12138    2             CALL GETIDRW ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:888  

  12138  1 017600   010551 701000 1                  TSX1    GETIDRW
         1 017601   017614 702000 1                  TSX2    ERR

     5466    12139
     5467    12140    2          IF F$DCB.SHARED THEN

  12140  1 017602   200007 470500                    LDP0    JDCB$,,AUTO
         1 017603   000064 236100                    LDQ     52,,PR0
         1 017604   100000 316003                    CANQ    32768,DU
         1 017605   017610 600000 1                  TZE     s:12143

     5468    12141    2             CALL SETID;

  12141  1 017606   021643 701000 1                  TSX1    SETID
         1 017607   000000 011000                    NOP     0

     5469    12142
     5470    12143    2          CALL GETREC ALTRET(ERR);

  12143  1 017610   011026 701000 1                  TSX1    GETREC
         1 017611   017614 702000 1                  TSX2    ERR

     5471    12144
     5472    12145    2          RETURN;

  12145  1 017612   200100 221300                    LDX1  ! I,,AUTO
         1 017613   000001 702211                    TSX2  ! 1,X1

     5473    12146    2   ERR:   ALTRETURN;

  12146  1 017614   200100 221300       ERR          LDX1  ! I,,AUTO
         1 017615   000000 702211                    TSX2  ! 0,X1

     5474    12147    2          END READNOKEY;
     5475    12148               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:889  
     5476    12149        /*I*     NAME:     REBLD_ALT
     5477    12150                 PURPOSE:  To rebuild alternate indexes
     5478    12151                 DESCRIPTION:
     5479    12152                      After rewriting a record, or reusing a deleted record, the
     5480    12153                 alternate indexes for the record have to be rebuilt.  Position
     5481    12154                 to the beginning of the record for the primary index.  We will
     5482    12155                 try to move 2 segments at a time from the primary index to the
     5483    12156                 alternate indexes.
     5484    12157
     5485    12158                      Loop through the set of alternate indexes, building record
     5486    12159                 entries for the indexes that changed.  If this is the first time
     5487    12160                 through, then we will need to add segments, or possibly a whole
     5488    12161                 new key.  If this is not the first time through, then we should
     5489    12162                 have all the segment space we need, so just position to the next
     5490    12163                 segment.
     5491    12164        */
     5492    12165                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:890  
     5493    12166    1   REBLD_ALT: PROC ALTRET;

  12166  1 017616   200112 741300       REBLD_ALT    STX1  ! SIZE+1,,AUTO

     5494    12167    2          DCL MISEG(0:1) BIT(72);
     5495    12168    2          DCL I SBIN;
     5496    12169    2          DCL NUMENTS UBIN;
     5497    12170    2          DCL INDXCHNG BIT(1);
     5498    12171        /* */
     5499    12172    2          FAK=1;

  12172  1 017617   000001 235007                    LDA     1,DL
         1 017620   200043 755100                    STA     FAK,,AUTO

     5500    12173    2          INDEX#=1;

  12173  1 017621   200011 755100                    STA     INDEX#,,AUTO

     5501    12174    2          CALL SETINDEX ALTRET(ERR);

  12174  1 017622   021667 701000 1                  TSX1    SETINDEX
         1 017623   020033 702000 1                  TSX2    ERR

     5502    12175    2          CALL RESTOREPOS ALTRET(ERR);

  12175  1 017624   021403 701000 1                  TSX1    RESTOREPOS
         1 017625   020033 702000 1                  TSX2    ERR

     5503    12176    2          SEG$=PINCRW(BUF$, SEGX);

  12176  1 017626   200013 236100                    LDQ     SEGX,,AUTO
         1 017627   000022 736000                    QLS     18
         1 017630   200024 036100                    ADLQ    BUF$,,AUTO
         1 017631   200014 756100                    STQ     SEG$,,AUTO

     5504    12177
     5505    12178    3          DO UNTIL (SEGX = 0);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:891  

     5506    12179    3             MISEG(0)=FM$MISEG;

  12179  1 017632   200014 470500                    LDP0    SEG$,,AUTO
         1 017633   000100 100500                    MLR     fill='000'O
         1 017634   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 017635   200113 000010                    ADSC9   MISEG,,AUTO              cn=0,n=8

     5507    12180    3             SEGCNT=2;

  12180  1 017636   000002 235007                    LDA     2,DL
         1 017637   200035 755100                    STA     SEGCNT,,AUTO

     5508    12181    3             IF FAK ~= 0 THEN

  12181  1 017640   200043 236100                    LDQ     FAK,,AUTO
         1 017641   017644 600000 1                  TZE     s:12183

     5509    12182    3                ADDR(MISEG(0))->FM$MISEG.FAK='1'B;

  12182  1 017642   400000 236003                    LDQ     -131072,DU
         1 017643   200113 256100                    ORSQ    MISEG,,AUTO

     5510    12183    3             CALL NXTSEG ALTRET(ERR);

  12183  1 017644   015351 701000 1                  TSX1    NXTSEG
         1 017645   020033 702000 1                  TSX2    ERR

     5511    12184    3             IF SEG$ ~= ADDR(NIL) THEN

  12184  1 017646   200014 236100                    LDQ     SEG$,,AUTO
         1 017647   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 017650   017661 600000 1                  TZE     s:12191

     5512    12185    4                DO;   /* 'NOTHER SEG */

     5513    12186    4                MISEG(1)=FM$MISEG;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:892  

  12186  1 017651   200014 470500                    LDP0    SEG$,,AUTO
         1 017652   000100 100500                    MLR     fill='000'O
         1 017653   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 017654   200115 000010                    ADSC9   KLB,,AUTO                cn=0,n=8

     5514    12187    4                SEGCNT=4;

  12187  1 017655   000004 235007                    LDA     4,DL
         1 017656   200035 755100                    STA     SEGCNT,,AUTO

     5515    12188    4                CALL NXTSEG ALTRET(ERR);

  12188  1 017657   015351 701000 1                  TSX1    NXTSEG
         1 017660   020033 702000 1                  TSX2    ERR

     5516    12189    4                END;  /* 'NOTHER SEG */

     5517    12190
     5518    12191    3             IF ORG = %INDEXED# THEN

  12191  1 017661   200022 235100                    LDA     ORG,,AUTO
         1 017662   000006 115007                    CMPA    6,DL
         1 017663   017672 601000 1                  TNZ     s:12194

     5519    12192    3                NUMENTS=ALTKEYS.NUMENTS;

  12192  1 017664   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 017665   000000 236100                    LDQ     0,,PR0
         1 017666   000022 772000                    QRL     18
         1 017667   000377 376007                    ANQ     255,DL
         1 017670   200120 756100                    STQ     NUMENTS,,AUTO
         1 017671   017676 710000 1                  TRA     s:12196

     5520    12193    3             ELSE
     5521    12194    3                NUMENTS=IRKEYS.NKEYS;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:893  
  12194  1 017672   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 017673   000000 236100                    LDQ     0,,PR0
         1 017674   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 017675   200120 756100                    STQ     NUMENTS,,AUTO

     5522    12195
     5523    12196    4             DO I=2 TO NUMENTS;

  12196  1 017676   000002 235007                    LDA     2,DL
         1 017677   200117 755100                    STA     I,,AUTO
         1 017700   020010 710000 1                  TRA     s:12234+1

     5524    12197    4                IF ORG = %INDEXED# THEN

  12197  1 017701   200022 235100                    LDA     ORG,,AUTO
         1 017702   000006 115007                    CMPA    6,DL
         1 017703   017714 601000 1                  TNZ     s:12200

     5525    12198    4                   INDXCHNG=ALTKEYS.K.INDXCHNG(I-1);

  12198  1 017704   200117 236100                    LDQ     I,,AUTO
         1 017705   000006 402007                    MPY     6,DL
         1 017706   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 017707   077776 236106                    LDQ     -2,QL,PR0
         1 017710   000014 736000                    QLS     12
         1 017711   400000 376003                    ANQ     -131072,DU
         1 017712   200121 756100                    STQ     INDXCHNG,,AUTO
         1 017713   017723 710000 1                  TRA     s:12202

     5526    12199    4                ELSE
     5527    12200    4                   INDXCHNG=IRKEYS.K.INDXCHNG(I-1);

  12200  1 017714   200117 236100                    LDQ     I,,AUTO
         1 017715   000007 402007                    MPY     7,DL
         1 017716   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 017717   077777 236106                    LDQ     -1,QL,PR0
         1 017720   000024 736000                    QLS     20
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:894  
         1 017721   400000 376003                    ANQ     -131072,DU
         1 017722   200121 756100                    STQ     INDXCHNG,,AUTO

     5528    12201
     5529    12202    4                IF INDXCHNG THEN

  12202  1 017723   200121 234100                    SZN     INDXCHNG,,AUTO
         1 017724   020007 605000 1                  TPL     s:12234

     5530    12203    5                   DO;   /* ADD SEGS */

     5531    12204    5                   INDEX#=I;

  12204  1 017725   200117 235100                    LDA     I,,AUTO
         1 017726   200011 755100                    STA     INDEX#,,AUTO

     5532    12205    5                   CALL SETINDEX ALTRET(ERR);

  12205  1 017727   021667 701000 1                  TSX1    SETINDEX
         1 017730   020033 702000 1                  TSX2    ERR

     5533    12206    5                   IF FAK ~= 0 THEN

  12206  1 017731   200043 235100                    LDA     FAK,,AUTO
         1 017732   017746 600000 1                  TZE     s:12214

     5534    12207    6                      DO;   /* TRY TO FIND KEY */

     5535    12208    6                      KEYIN$=PINCRC(B$PS2$, F$DCB.KEYX);

  12208  1 017733   200007 470500                    LDP0    JDCB$,,AUTO
         1 017734   000036 236100                    LDQ     30,,PR0
         1 017735   000022 772000                    QRL     18
         1 017736   000020 736000                    QLS     16
         1 017737   000000 036000 xsym               ADLQ    B$PS2$
         1 017740   200037 756100                    STQ     KEYIN$,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:895  
     5536    12209    6                      COMFLG=%USEREC;

  12209  1 017741   000001 235007                    LDA     1,DL
         1 017742   200060 755100                    STA     COMFLG,,AUTO

     5537    12210    6                      CALL FINDKEY ALTRET(NEW);

  12210  1 017743   007536 701000 1                  TSX1    FINDKEY
         1 017744   017757 702000 1                  TSX2    NEW

     5538    12211    6                      END;  /* TRY TO FIND KEY */

  12211  1 017745   017754 710000 1                  TRA     s:12217

     5539    12212    5                   ELSE
     5540    12213    6                      DO;   /* ALREADY KNOW POSITION */

     5541    12214    6                      DA=F$DCB.BFR.DA(1);

  12214  1 017746   200007 470500                    LDP0    JDCB$,,AUTO
         1 017747   000116 236100                    LDQ     78,,PR0
         1 017750   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 017751   200021 756100                    STQ     DA,,AUTO

     5542    12215    6                      CALL RESTOREPOS ALTRET(ERR);

  12215  1 017752   021403 701000 1                  TSX1    RESTOREPOS
         1 017753   020033 702000 1                  TSX2    ERR

     5543    12216    6                      END;  /* ALREADY KNOW POSITION */

     5544    12217    5                   CALL ADDSEG ALTRET(ERR);

  12217  1 017754   000327 701000 1                  TSX1    ADDSEG
         1 017755   020033 702000 1                  TSX2    ERR

     5545    12218
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:896  
     5546    12219    6                   DO WHILE ('0'B);

  12219  1 017756   017772 710000 1                  TRA     s:12227

     5547    12220    6   NEW:               IF B$JIT.ERR.CODE ~= %E$NOKEY THEN

  12220  1 017757   000000 470400 xsym  NEW          LDP0    B$JIT$
         1 017760   000012 236100                    LDQ     10,,PR0
         1 017761   377770 376007                    ANQ     131064,DL
         1 017762   001020 116007                    CMPQ    528,DL
         1 017763   020033 601000 1                  TNZ     ERR

     5548    12221    6                         GOTO ERR;
     5549    12222    6                      B$JIT.ERR='0'B;

  12222  1 017764   000012 450100                    STZ     10,,PR0

     5550    12223    6                      CALL ADDKEY ALTRET(ERR);

  12223  1 017765   000301 701000 1                  TSX1    ADDKEY
         1 017766   020033 702000 1                  TSX2    ERR

     5551    12224    6                      F$DCB.RPOS='0'B;

  12224  1 017767   200007 470500                    LDP0    JDCB$,,AUTO
         1 017770   000005 236000 2                  LDQ     5
         1 017771   000064 356100                    ANSQ    52,,PR0

     5552    12225    6                   END;

     5553    12226
     5554    12227    5                   FM$MISEG=MISEG(0);

  12227  1 017772   200014 470500                    LDP0    SEG$,,AUTO
         1 017773   000100 100500                    MLR     fill='000'O
         1 017774   200113 000010                    ADSC9   MISEG,,AUTO              cn=0,n=8
         1 017775   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:897  

     5555    12228    5                   IF SEGCNT = 4 THEN

  12228  1 017776   200035 235100                    LDA     SEGCNT,,AUTO
         1 017777   000004 115007                    CMPA    4,DL
         1 020000   020007 601000 1                  TNZ     s:12234

     5556    12229    6                      DO;   /* STILL 'NOTHER SEG */

     5557    12230    6                      CALL NXTSEG ALTRET(ERR);

  12230  1 020001   015351 701000 1                  TSX1    NXTSEG
         1 020002   020033 702000 1                  TSX2    ERR

     5558    12231    6                      FM$MISEG=MISEG(1);

  12231  1 020003   200014 470500                    LDP0    SEG$,,AUTO
         1 020004   000100 100500                    MLR     fill='000'O
         1 020005   200115 000010                    ADSC9   KLB,,AUTO                cn=0,n=8
         1 020006   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8

     5559    12232    6                      END;  /* STILL 'NOTHER SEG */

     5560    12233    5                   END;  /* ADD SEGS */

     5561    12234    4             END;  /* DO I */

  12234  1 020007   200117 054100                    AOS     I,,AUTO
         1 020010   200120 236100                    LDQ     NUMENTS,,AUTO
         1 020011   017701 604000 1                  TMI     s:12197
         1 020012   200117 116100                    CMPQ    I,,AUTO
         1 020013   017701 605000 1                  TPL     s:12197

     5562    12235
     5563    12236    3             FAK=0;

  12236  1 020014   200043 450100                    STZ     FAK,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:898  

     5564    12237    3             INDEX#=1;

  12237  1 020015   000001 235007                    LDA     1,DL
         1 020016   200011 755100                    STA     INDEX#,,AUTO

     5565    12238    3             CALL SETINDEX ALTRET(ERR);

  12238  1 020017   021667 701000 1                  TSX1    SETINDEX
         1 020020   020033 702000 1                  TSX2    ERR

     5566    12239    3             CALL RESTOREPOS ALTRET(ERR);

  12239  1 020021   021403 701000 1                  TSX1    RESTOREPOS
         1 020022   020033 702000 1                  TSX2    ERR

     5567    12240    3             SEG$=PINCRW(BUF$, SEGX);

  12240  1 020023   200013 236100                    LDQ     SEGX,,AUTO
         1 020024   000022 736000                    QLS     18
         1 020025   200024 036100                    ADLQ    BUF$,,AUTO
         1 020026   200014 756100                    STQ     SEG$,,AUTO

     5568    12241    3          END;  /* WHILE */

  12241  1 020027   200013 235100                    LDA     SEGX,,AUTO
         1 020030   017632 601000 1                  TNZ     s:12179

     5569    12242
     5570    12243    2          RETURN;

  12243  1 020031   200112 221300                    LDX1  ! SIZE+1,,AUTO
         1 020032   000001 702211                    TSX2  ! 1,X1

     5571    12244    2   ERR:   ALTRETURN;

  12244  1 020033   200112 221300       ERR          LDX1  ! SIZE+1,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:899  
         1 020034   000000 702211                    TSX2  ! 0,X1

     5572    12245    2          END REBLD_ALT;
     5573    12246               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:900  
     5574    12247        /*I*     NAME:     REMKEY
     5575    12248                 PURPOSE:  To remove a key from an index granule
     5576    12249                 DESCRIPION:
     5577    12250                      KEY$ will point to the beginning of the key.  DISP is the
     5578    12251                 space between the two keys that has to be removed.  SIZE is the
     5579    12252                 amount of space that has to be slid back.
     5580    12253
     5581    12254                      Now, we have to update the key table.  Loop from the place
     5582    12255                 we slid back to the end of the key table.  Subtract the amount
     5583    12256                 that we slid back from each key table entry.  If TSIZE went
     5584    12257                 negative, then that means it really went from being greater
     5585    12258                 than 511 to being less than 511.  This means the the bound
     5586    12259                 probably changed.  If TSIZE didn't do anything funny, and
     5587    12260                 the bound is the next key, then the bound is now the current
     5588    12261                 key, because everything is slid back one key.
     5589    12262        */
     5590    12263                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:901  
     5591    12264    1   REMKEY: PROC ALTRET;

  12264  1 020035   200122 741300       REMKEY       STX1  ! MINSIZE,,AUTO

     5592    12265    2          DCL SIZE SBIN;
     5593    12266    2          DCL J SBIN;
     5594    12267    2          DCL TSIZE SBIN;
     5595    12268    2          DCL DISP SBIN;
     5596    12269    2          DCL LCDA SBIN;
     5597    12270    2          DCL BUF3$ PTR;
     5598    12271    2          DCL BUF4$ PTR;
     5599    12272    2          DCL I SBIN;
     5600    12273    2          DCL 1 EXTNT,
     5601    12274    2               2 SIZE UBIN(9) CALIGNED,
     5602    12275    2               2 DA UBIN(27) CALIGNED;
     5603    12276        /* */
     5604    12277    2          IF CRECX < BOUND THEN

  12277  1 020036   200015 236100                    LDQ     CRECX,,AUTO
         1 020037   020053 604000 1                  TMI     s:12280
         1 020040   200016 116100                    CMPQ    BOUND,,AUTO
         1 020041   020053 605000 1                  TPL     s:12280

     5605    12278    2             KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));

  12278  1 020042   200025 470500                    LDP0    KTPTR$,,AUTO
         1 020043   000100 101506                    MRL     fill='000'O
         1 020044   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 020045   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 020046   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 020047   000000 636010                    EAQ     0,X0
         1 020050   200024 036100                    ADLQ    BUF$,,AUTO
         1 020051   200020 756100                    STQ     KEY$,,AUTO
         1 020052   020063 710000 1                  TRA     s:12282

     5606    12279    2          ELSE
     5607    12280    2             KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:902  

  12280  1 020053   200025 470500                    LDP0    KTPTR$,,AUTO
         1 020054   000100 101506                    MRL     fill='000'O
         1 020055   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 020056   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 020057   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 020060   001000 636010                    EAQ     512,X0
         1 020061   200024 036100                    ADLQ    BUF$,,AUTO
         1 020062   200020 756100                    STQ     KEY$,,AUTO

     5608    12281
     5609    12282    2          IF CRECX < KEYCNT THEN

  12282  1 020063   200015 236100                    LDQ     CRECX,,AUTO
         1 020064   020163 604000 1                  TMI     s:12294
         1 020065   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 020066   020163 605000 1                  TPL     s:12294

     5610    12283    3             DO;   /* SLIDE STUFF BACK */

     5611    12284    3             IF CRECX+1 < BOUND THEN

  12284  1 020067   000001 036007                    ADLQ    1,DL
         1 020070   020112 604000 1                  TMI     s:12287
         1 020071   200016 116100                    CMPQ    BOUND,,AUTO
         1 020072   020112 605000 1                  TPL     s:12287

     5612    12285    3                DISP=FM$KEYTBL(CRECX+1)-POFFW(KEY$, BUF$);

  12285  1 020073   200024 235100                    LDA     BUF$,,AUTO
         1 020074   000022 771000                    ARL     18
         1 020075   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 020076   200020 236100                    LDQ     KEY$,,AUTO
         1 020077   000022 772000                    QRL     18
         1 020100   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 020101   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 020102   200015 235100                    LDA     CRECX,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:903  
         1 020103   000100 101505                    MRL     fill='000'O
         1 020104   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         1 020105   200170 000004                    ADSC9   STEMP_FIELDIN+4,,AUTO    cn=0,n=4
         1 020106   200170 236100                    LDQ     STEMP_FIELDIN+4,,AUTO
         1 020107   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 020110   200126 756100                    STQ     DISP,,AUTO
         1 020111   020131 710000 1                  TRA     s:12289

     5613    12286    3             ELSE
     5614    12287    3                DISP=FM$KEYTBL(CRECX+1)+512-POFFW(KEY$, BUF$);

  12287  1 020112   200024 235100                    LDA     BUF$,,AUTO
         1 020113   000022 771000                    ARL     18
         1 020114   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 020115   200020 236100                    LDQ     KEY$,,AUTO
         1 020116   000022 772000                    QRL     18
         1 020117   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 020120   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 020121   200015 235100                    LDA     CRECX,,AUTO
         1 020122   000100 101505                    MRL     fill='000'O
         1 020123   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         1 020124   200170 000004                    ADSC9   STEMP_FIELDIN+4,,AUTO    cn=0,n=4
         1 020125   200170 236100                    LDQ     STEMP_FIELDIN+4,,AUTO
         1 020126   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 020127   001000 036007                    ADLQ    512,DL
         1 020130   200126 756100                    STQ     DISP,,AUTO

     5615    12288
     5616    12289    3             SIZE=FM$GRAN.NAVX-POFFW(KEY$, BUF$)-DISP;

  12289  1 020131   200024 235100                    LDA     BUF$,,AUTO
         1 020132   000022 771000                    ARL     18
         1 020133   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 020134   200020 236100                    LDQ     KEY$,,AUTO
         1 020135   000022 772000                    QRL     18
         1 020136   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 020137   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:904  
         1 020140   200024 471500                    LDP1    BUF$,,AUTO
         1 020141   100001 236100                    LDQ     1,,PR1
         1 020142   000022 772000                    QRL     18
         1 020143   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 020144   200126 136100                    SBLQ    DISP,,AUTO
         1 020145   200123 756100                    STQ     SIZE,,AUTO

     5617    12290
     5618    12291    3             CALL FMR$SLIDE(KEY$, -DISP, SIZE);

  12291  1 020146   200126 335100                    LCA     DISP,,AUTO
         1 020147   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 020150   200123 633500                    EPPR3   SIZE,,AUTO
         1 020151   200171 453500                    STP3    STEMP_FIELDIN+5,,AUTO
         1 020152   200166 634500                    EPPR4   STEMP_FIELDIN+2,,AUTO
         1 020153   200170 454500                    STP4    STEMP_FIELDIN+4,,AUTO
         1 020154   200020 635500                    EPPR5   KEY$,,AUTO
         1 020155   200167 455500                    STP5    STEMP_FIELDIN+3,,AUTO
         1 020156   200167 630500                    EPPR0   STEMP_FIELDIN+3,,AUTO
         1 020157   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 020160   000000 701000 xent               TSX1    FMR$SLIDE
         1 020161   000000 011000                    NOP     0

     5619    12292    3             END;  /* SLIDE STUFF BACK */

  12292  1 020162   020177 710000 1                  TRA     s:12296

     5620    12293    2          ELSE
     5621    12294    2             DISP=FM$GRAN.NAVX-POFFW(KEY$, BUF$);

  12294  1 020163   200024 235100                    LDA     BUF$,,AUTO
         1 020164   000022 771000                    ARL     18
         1 020165   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 020166   200020 236100                    LDQ     KEY$,,AUTO
         1 020167   000022 772000                    QRL     18
         1 020170   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 020171   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:905  
         1 020172   200024 471500                    LDP1    BUF$,,AUTO
         1 020173   100001 236100                    LDQ     1,,PR1
         1 020174   000022 772000                    QRL     18
         1 020175   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 020176   200126 756100                    STQ     DISP,,AUTO

     5622    12295
     5623    12296    2          FAK=0;

  12296  1 020177   200043 450100                    STZ     FAK,,AUTO

     5624    12297    3          DO I=CRECX TO KEYCNT-1;

  12297  1 020200   200015 235100                    LDA     CRECX,,AUTO
         1 020201   200132 755100                    STA     I,,AUTO
         1 020202   020235 710000 1                  TRA     s:12310+1

     5625    12298    3             J=I+1;

  12298  1 020203   200132 235100                    LDA     I,,AUTO
         1 020204   000001 035007                    ADLA    1,DL
         1 020205   200124 755100                    STA     J,,AUTO

     5626    12299    3             TSIZE=FM$KEYTBL(J)-DISP;

  12299  1 020206   200025 470500                    LDP0    KTPTR$,,AUTO
         1 020207   000100 101505                    MRL     fill='000'O
         1 020210   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 020211   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 020212   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 020213   200126 136100                    SBLQ    DISP,,AUTO
         1 020214   200125 756100                    STQ     TSIZE,,AUTO

     5627    12300    3             IF TSIZE < 0 THEN

  12300  1 020215   020223 605000 1                  TPL     s:12306

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:906  
     5628    12301    4                DO;   /* CROSSED BOUNDRY */

     5629    12302    4                IF BOUND < J THEN

  12302  1 020216   200016 236100                    LDQ     BOUND,,AUTO
         1 020217   200124 116100                    CMPQ    J,,AUTO
         1 020220   020230 605000 1                  TPL     s:12309

     5630    12303    4                   BOUND=J;

  12303  1 020221   200016 755100                    STA     BOUND,,AUTO

     5631    12304    4                END;  /* CROSSED BOUNDRY */

  12304  1 020222   020230 710000 1                  TRA     s:12309

     5632    12305    3             ELSE
     5633    12306    3                IF BOUND = J THEN

  12306  1 020223   200016 236100                    LDQ     BOUND,,AUTO
         1 020224   200124 116100                    CMPQ    J,,AUTO
         1 020225   020230 601000 1                  TNZ     s:12309

     5634    12307    3                   BOUND=I;

  12307  1 020226   200132 235100                    LDA     I,,AUTO
         1 020227   200016 755100                    STA     BOUND,,AUTO

     5635    12308
     5636    12309    3             FM$KEYTBL(I)=TSIZE;

  12309  1 020230   200132 235100                    LDA     I,,AUTO
         1 020231   000105 101500                    MRL     fill='000'O
         1 020232   200125 000004                    ADSC9   TSIZE,,AUTO              cn=0,n=4
         1 020233   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

     5637    12310    3          END;  /* DO I */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:907  

  12310  1 020234   200132 054100                    AOS     I,,AUTO
         1 020235   200132 236100                    LDQ     I,,AUTO
         1 020236   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 020237   020203 604000 1                  TMI     s:12298

     5638    12311
     5639    12312    2          FM$KEYTBL(KEYCNT)=0;

  12312  1 020240   200025 470500                    LDP0    KTPTR$,,AUTO
         1 020241   200017 235100                    LDA     KEYCNT,,AUTO
         1 020242   000105 101400                    MRL     fill='000'O
         1 020243   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         1 020244   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

     5640    12313    2          KEYCNT=KEYCNT-1;

  12313  1 020245   000001 336007                    LCQ     1,DL
         1 020246   200017 056100                    ASQ     KEYCNT,,AUTO

     5641    12314
     5642    12315    2          IF BOUND > KEYCNT THEN

  12315  1 020247   200016 236100                    LDQ     BOUND,,AUTO
         1 020250   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 020251   020254 604400 1                  TMOZ    s:12318

     5643    12316    2             BOUND=SIZEC(FM$KEYTBL);

  12316  1 020252   000430 235007                    LDA     280,DL
         1 020253   200016 755100                    STA     BOUND,,AUTO

     5644    12317
     5645    12318    2          FM$KEYTBL(0)=BOUND;

  12318  1 020254   200016 236100                    LDQ     BOUND,,AUTO
         1 020255   000033 736000                    QLS     27
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:908  
         1 020256   000000 552140                    STBQ    0,'40'O,PR0

     5646    12319
     5647    12320    2          FM$GRAN.KEYCNT=KEYCNT;

  12320  1 020257   200024 471500                    LDP1    BUF$,,AUTO
         1 020260   200017 236100                    LDQ     KEYCNT,,AUTO
         1 020261   100002 552104                    STBQ    2,'04'O,PR1

     5648    12321    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL+DISP;

  12321  1 020262   200024 471500                    LDP1    BUF$,,AUTO
         1 020263   100001 236100                    LDQ     1,,PR1
         1 020264   001777 376007                    ANQ     1023,DL
         1 020265   200126 036100                    ADLQ    DISP,,AUTO
         1 020266   100001 676100                    ERQ     1,,PR1
         1 020267   001777 376007                    ANQ     1023,DL
         1 020270   100001 656100                    ERSQ    1,,PR1

     5649    12322    2          FM$GRAN.NAVX=FM$GRAN.NAVX-DISP;

  12322  1 020271   200024 471500                    LDP1    BUF$,,AUTO
         1 020272   100001 236100                    LDQ     1,,PR1
         1 020273   000022 772000                    QRL     18
         1 020274   200126 136100                    SBLQ    DISP,,AUTO
         1 020275   000000 620006                    EAX0    0,QL
         1 020276   100001 740100                    STX0    1,,PR1

     5650    12323
     5651    12324    2          F$DCB.BFR.BUFUP(1)='1'B;

  12324  1 020277   200007 471500                    LDP1    JDCB$,,AUTO
         1 020300   400000 236003                    LDQ     -131072,DU
         1 020301   100116 256100                    ORSQ    78,,PR1

     5652    12325    2          F$DCB.BFR.SCRUB(1)='1'B;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:909  
  12325  1 020302   200000 236003                    LDQ     65536,DU
         1 020303   100116 256100                    ORSQ    78,,PR1

     5653    12326
     5654    12327    2          IF KEYCNT = 0 AND               /* If the granule is empty, it's a     */

  12327  1 020304   200017 235100                    LDA     KEYCNT,,AUTO
         1 020305   020526 601000 1                  TNZ     s:12371
         1 020306   200024 473500                    LDP3    BUF$,,AUTO
         1 020307   300001 236100                    LDQ     1,,PR3
         1 020310   036000 316007                    CANQ    15360,DL
         1 020311   020526 601000 1                  TNZ     s:12371
         1 020312   300001 236100                    LDQ     1,,PR3
         1 020313   340000 376007                    ANQ     114688,DL
         1 020314   200000 116007                    CMPQ    65536,DL
         1 020315   020526 601000 1                  TNZ     s:12371
         1 020316   300003 235100                    LDA     3,,PR3
         1 020317   020526 600000 1                  TZE     s:12371
         1 020320   100066 474500                    LDP4    54,,PR1
         1 020321   400002 236100                    LDQ     2,,PR4
         1 020322   400000 316003                    CANQ    -131072,DU
         1 020323   020526 601000 1                  TNZ     s:12371

     5655    12328    2              FM$GRAN.ORG = 0 AND         /* file directory granule, it's not    */
     5656    12329    2              FM$GRAN.LVL = FMGTFD AND    /* the FIT, and it's not part of a     */
     5657    12330    2              FM$GRAN.BLINK ~= 0 AND      /* star-file directory, release it.    */
     5658    12331    3              F$DCB.CFU$->FM$CFU.STARX.F = 0 THEN DO;

     5659    12332    3             EXTNT.SIZE = 1;              /* One-granule extent.                 */

  12332  1 020324   001000 236003                    LDQ     512,DU
         1 020325   200133 552140                    STBQ    EXTNT,'40'O,AUTO

     5660    12333    3             EXTNT.DA = F$DCB.BFR.DA(1);  /* SRDA of that extent.                */

  12333  1 020326   100116 236100                    LDQ     78,,PR1
         1 020327   200133 552134                    STBQ    EXTNT,'34'O,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:910  

     5661    12334    3             CALL FMD$FLSHBUF(3);         /* Flush buffer 3.                     */

  12334  1 020330   000014 630400 2                  EPPR0   12
         1 020331   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 020332   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 020333   000000 011000                    NOP     0

     5662    12335    3             DA = FM$GRAN.BLINK;          /* Read the blink.                     */

  12335  1 020334   200024 470500                    LDP0    BUF$,,AUTO
         1 020335   000003 235100                    LDA     3,,PR0
         1 020336   200021 755100                    STA     DA,,AUTO

     5663    12336    3             LCDA = F$DCB.BFR.DA(1);

  12336  1 020337   200007 471500                    LDP1    JDCB$,,AUTO
         1 020340   100116 236100                    LDQ     78,,PR1
         1 020341   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 020342   200127 756100                    STQ     LCDA,,AUTO

     5664    12337    3             CALL FMD$REDBUF(BUF3$,3,DA,,LCDA) ALTRET(ERR); /* Get the granule.  */

  12337  1 020343   200127 633500                    EPPR3   LCDA,,AUTO
         1 020344   200172 453500                    STP3    STEMP_FIELDIN+6,,AUTO
         1 020345   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 020346   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 020347   200021 634500                    EPPR4   DA,,AUTO
         1 020350   200170 454500                    STP4    STEMP_FIELDIN+4,,AUTO
         1 020351   000014 236000 2                  LDQ     12
         1 020352   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 020353   200130 635500                    EPPR5   BUF3$,,AUTO
         1 020354   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 020355   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 020356   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 020357   000000 701000 xent               TSX1    FMD$REDBUF
         1 020360   020530 702000 1                  TSX2    ERR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:911  

     5665    12338    3             BUF4$ = ADDR(NIL);

  12338  1 020361   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 020362   200131 756100                    STQ     BUF4$,,AUTO

     5666    12339    4             IF FM$GRAN.FLINK ~= 0 THEN DO; /* If there's a FLINK get it.        */

  12339  1 020363   200024 470500                    LDP0    BUF$,,AUTO
         1 020364   000004 235100                    LDA     4,,PR0
         1 020365   020417 600000 1                  TZE     s:12345

     5667    12340    4                CALL FMD$FLSHBUF(4);      /* Flush buffer 4.                     */

  12340  1 020366   000012 630400 2                  EPPR0   10
         1 020367   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 020370   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 020371   000000 011000                    NOP     0

     5668    12341    4                DA = FM$GRAN.FLINK;       /* Read the flink.                     */

  12341  1 020372   200024 470500                    LDP0    BUF$,,AUTO
         1 020373   000004 235100                    LDA     4,,PR0
         1 020374   200021 755100                    STA     DA,,AUTO

     5669    12342    4                LCDA = F$DCB.BFR.DA(1);

  12342  1 020375   200007 471500                    LDP1    JDCB$,,AUTO
         1 020376   100116 236100                    LDQ     78,,PR1
         1 020377   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 020400   200127 756100                    STQ     LCDA,,AUTO

     5670    12343    4                CALL FMD$REDBUF(BUF4$,4,DA,,LCDA) ALTRET(ERR); /* Get the gran.  */

  12343  1 020401   200127 633500                    EPPR3   LCDA,,AUTO
         1 020402   200172 453500                    STP3    STEMP_FIELDIN+6,,AUTO
         1 020403   000001 236000 xsym               LDQ     B_VECTNIL+1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:912  
         1 020404   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 020405   200021 634500                    EPPR4   DA,,AUTO
         1 020406   200170 454500                    STP4    STEMP_FIELDIN+4,,AUTO
         1 020407   000012 236000 2                  LDQ     10
         1 020410   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 020411   200131 635500                    EPPR5   BUF4$,,AUTO
         1 020412   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 020413   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 020414   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 020415   000000 701000 xent               TSX1    FMD$REDBUF
         1 020416   020530 702000 1                  TSX2    ERR

     5671    12344    4                END;

     5672    12345    3             BUF3$->FM$GRAN.FLINK = FM$GRAN.FLINK; /* Link out current granule.  */

  12345  1 020417   200024 470500                    LDP0    BUF$,,AUTO
         1 020420   200130 471500                    LDP1    BUF3$,,AUTO
         1 020421   000004 235100                    LDA     4,,PR0
         1 020422   100004 755100                    STA     4,,PR1

     5673    12346    3             F$DCB.BFR.BUFUP(3) = '1'B;   /* Buffer changed.                     */

  12346  1 020423   200007 470500                    LDP0    JDCB$,,AUTO
         1 020424   400000 236003                    LDQ     -131072,DU
         1 020425   000120 256100                    ORSQ    80,,PR0

     5674    12347    4             IF BUF4$ ~= ADDR(NIL) THEN DO;

  12347  1 020426   200131 236100                    LDQ     BUF4$,,AUTO
         1 020427   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 020430   020437 600000 1                  TZE     s:12351

     5675    12348    4                BUF4$->FM$GRAN.BLINK = FM$GRAN.BLINK;

  12348  1 020431   200024 471500                    LDP1    BUF$,,AUTO
         1 020432   200131 473500                    LDP3    BUF4$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:913  
         1 020433   100003 235100                    LDA     3,,PR1
         1 020434   300003 755100                    STA     3,,PR3

     5676    12349    4                F$DCB.BFR.BUFUP(4) = '1'B;

  12349  1 020435   400000 236003                    LDQ     -131072,DU
         1 020436   000121 256100                    ORSQ    81,,PR0

     5677    12350    4                END;

     5678    12351    3             FM$GRAN.BLINK = 0;           /* Zero blink and flink of curr gran.  */

  12351  1 020437   200024 471500                    LDP1    BUF$,,AUTO
         1 020440   100003 450100                    STZ     3,,PR1

     5679    12352    3             FM$GRAN.FLINK = 0;

  12352  1 020441   200024 471500                    LDP1    BUF$,,AUTO
         1 020442   100004 450100                    STZ     4,,PR1

     5680    12353    3             CALL FMD$FLSHBUF(1);         /* Flush it.                           */

  12353  1 020443   000001 630400 2                  EPPR0   1
         1 020444   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 020445   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 020446   000000 011000                    NOP     0

     5681    12354    3             CALL FMD$WRTSVNW(3);         /* Write the blink, don't release it.  */

  12354  1 020447   000014 630400 2                  EPPR0   12
         1 020450   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 020451   000000 701000 xent               TSX1    FMD$WRTSVNW
         1 020452   000000 011000                    NOP     0

     5682    12355    3             CALL FMD$FLSHBUF(4);         /* Flush the flink, if any.            */

  12355  1 020453   000012 630400 2                  EPPR0   10
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:914  
         1 020454   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 020455   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 020456   000000 011000                    NOP     0

     5683    12356    3             CALL FMB$IOSPIN;             /* Spin.                               */

  12356  1 020457   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 020460   000000 701000 xent               TSX1    FMB$IOSPIN
         1 020461   000000 011000                    NOP     0

     5684    12357    3             F$DCB.BFR(1) = F$DCB.BFR(3); /* Make the blink the current granule. */

  12357  1 020462   200007 470500                    LDP0    JDCB$,,AUTO
         1 020463   000120 236100                    LDQ     80,,PR0
         1 020464   000116 756100                    STQ     78,,PR0

     5685    12358    3             F$DCB.BFR1(1) = F$DCB.BFR1(3);

  12358  1 020465   000125 236100                    LDQ     85,,PR0
         1 020466   000123 756100                    STQ     83,,PR0

     5686    12359    3             F$DCB.BFR(3) = '0'B;         /* Clear buffer 3.                     */

  12359  1 020467   000120 450100                    STZ     80,,PR0

     5687    12360    3             F$DCB.BFR1(3) = '0'B;

  12360  1 020470   000125 450100                    STZ     85,,PR0

     5688    12361    3             CFU$ = PINCRW(F$CFU$,F$DCB.CFU$->FM$CFU.ACCTX);

  12361  1 020471   000066 471500                    LDP1    54,,PR0
         1 020472   100002 220100                    LDX0    2,,PR1
         1 020473   000000 636010                    EAQ     0,X0
         1 020474   000000 036000 xsym               ADLQ    F$CFU$
         1 020475   200010 756100                    STQ     CFU$,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:915  
     5689    12362    3             CFU$->FM$CFUA.FDCSDA = F$DCB.BFR.DA(1); /* Set new DA in CFU.       */

  12362  1 020476   200010 473500                    LDP3    CFU$,,AUTO
         1 020477   000116 236100                    LDQ     78,,PR0
         1 020500   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 020501   300003 756100                    STQ     3,,PR3

     5690    12363    3             BUF$ = BUF3$;

  12363  1 020502   200130 236100                    LDQ     BUF3$,,AUTO
         1 020503   200024 756100                    STQ     BUF$,,AUTO

     5691    12364    3             F$DCB.CRECX = 0;

  12364  1 020504   000000 220003                    LDX0    0,DU
         1 020505   000067 440100                    SXL0    55,,PR0

     5692    12365    3             IF FM$GRAN.KEYCNT > 0 THEN   /* Keys in this gran?                  */

  12365  1 020506   200024 471500                    LDP1    BUF$,,AUTO
         1 020507   100002 236100                    LDQ     2,,PR1
         1 020510   000777 316007                    CANQ    511,DL
         1 020511   020516 600000 1                  TZE     s:12367

     5693    12366    3                F$DCB.CRECX = FM$GRAN.KEYCNT - 1; /* Yes, set CRECX.             */

  12366  1 020512   100002 721100                    LXL1    2,,PR1
         1 020513   000777 361003                    ANX1    511,DU
         1 020514   777777 622011                    EAX2    -1,X1
         1 020515   000067 442100                    SXL2    55,,PR0

     5694    12367    3             F$DCB.RPOS = '0'B;           /* Make sure RPOS is off.              */

  12367  1 020516   000005 236000 2                  LDQ     5
         1 020517   000064 356100                    ANSQ    52,,PR0

     5695    12368    3             CALL FAG$REXT(EXTNT) ALTRET(ERR);  /* Release that one-gran extent. */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:916  

  12368  1 020520   200133 634500                    EPPR4   EXTNT,,AUTO
         1 020521   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 020522   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 020523   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 020524   000000 701000 xent               TSX1    FAG$REXT
         1 020525   020530 702000 1                  TSX2    ERR

     5696    12369    3             END;

     5697    12370
     5698    12371    2          RETURN;

  12371  1 020526   200122 221300                    LDX1  ! MINSIZE,,AUTO
         1 020527   000001 702211                    TSX2  ! 1,X1

     5699    12372
     5700    12373    2   ERR:   ALTRETURN;

  12373  1 020530   200122 221300       ERR          LDX1  ! MINSIZE,,AUTO
         1 020531   000000 702211                    TSX2  ! 0,X1

     5701    12374
     5702    12375    2          END REMKEY;
     5703    12376               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:917  
     5704    12377        /*I*     NAME:     REMOVESEG
     5705    12378                 PURPOSE:  To remove a segment from an index granule
     5706    12379                 DESCRIPTION:
     5707    12380                      SIZE is the amount of space we have to slide back.  Slide
     5708    12381                 everything back from the deletion point by two words, the size
     5709    12382                 of a segment.  Now loop through the key table, subtracting 2 from
     5710    12383                 every key table entry.  If one of them went negative, then the
     5711    12384                 bound changed, point it to the next key.
     5712    12385        */
     5713    12386                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:918  
     5714    12387    1   REMOVESEG: PROC ALTRET;

  12387  1 020532   200122 741300       REMOVESEG    STX1  ! MINSIZE,,AUTO

     5715    12388    2          DCL SIZE SBIN;
     5716    12389    2          DCL TSIZE SBIN;
     5717    12390    2          DCL I SBIN;
     5718    12391        /* */
     5719    12392    2          SIZE=FM$GRAN.NAVX-POFFW(SEG$, BUF$)-2;

  12392  1 020533   200024 235100                    LDA     BUF$,,AUTO
         1 020534   000022 771000                    ARL     18
         1 020535   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 020536   200014 236100                    LDQ     SEG$,,AUTO
         1 020537   000022 772000                    QRL     18
         1 020540   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 020541   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 020542   200024 470500                    LDP0    BUF$,,AUTO
         1 020543   000001 236100                    LDQ     1,,PR0
         1 020544   000022 772000                    QRL     18
         1 020545   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 020546   000002 136007                    SBLQ    2,DL
         1 020547   200123 756100                    STQ     SIZE,,AUTO

     5720    12393
     5721    12394    2          IF SIZE ~= 0 THEN

  12394  1 020550   020623 600000 1                  TZE     s:12410

     5722    12395    3             DO;   /* SLIDE STUFF BACK */

     5723    12396    3             CALL FMR$SLIDE(SEG$, -2, SIZE);

  12396  1 020551   200123 631500                    EPPR1   SIZE,,AUTO
         1 020552   200170 451500                    STP1    STEMP_FIELDIN+4,,AUTO
         1 020553   000074 236000 2                  LDQ     60
         1 020554   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:919  
         1 020555   200014 633500                    EPPR3   SEG$,,AUTO
         1 020556   200166 453500                    STP3    STEMP_FIELDIN+2,,AUTO
         1 020557   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 020560   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 020561   000000 701000 xent               TSX1    FMR$SLIDE
         1 020562   000000 011000                    NOP     0

     5724    12397
     5725    12398    4             DO I=CRECX+1 TO KEYCNT;

  12398  1 020563   200015 235100                    LDA     CRECX,,AUTO
         1 020564   000001 035007                    ADLA    1,DL
         1 020565   200125 755100                    STA     I,,AUTO
         1 020566   020607 710000 1                  TRA     s:12403+1

     5726    12399    4                TSIZE=FM$KEYTBL(I)-2;

  12399  1 020567   200025 470500                    LDP0    KTPTR$,,AUTO
         1 020570   200125 235100                    LDA     I,,AUTO
         1 020571   000100 101505                    MRL     fill='000'O
         1 020572   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 020573   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 020574   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 020575   000002 136007                    SBLQ    2,DL
         1 020576   200124 756100                    STQ     TSIZE,,AUTO

     5727    12400    4                IF TSIZE < 0 THEN

  12400  1 020577   020602 605000 1                  TPL     s:12402

     5728    12401    4                   BOUND=I+1;

  12401  1 020600   000001 035007                    ADLA    1,DL
         1 020601   200016 755100                    STA     BOUND,,AUTO

     5729    12402    4                FM$KEYTBL(I)=TSIZE;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:920  
  12402  1 020602   200125 235100                    LDA     I,,AUTO
         1 020603   000105 101500                    MRL     fill='000'O
         1 020604   200124 000004                    ADSC9   TSIZE,,AUTO              cn=0,n=4
         1 020605   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

     5730    12403    4             END;  /* DO I */

  12403  1 020606   200125 054100                    AOS     I,,AUTO
         1 020607   200125 236100                    LDQ     I,,AUTO
         1 020610   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 020611   020567 604400 1                  TMOZ    s:12399

     5731    12404
     5732    12405    3             IF BOUND > KEYCNT THEN

  12405  1 020612   200016 236100                    LDQ     BOUND,,AUTO
         1 020613   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 020614   020617 604400 1                  TMOZ    s:12407

     5733    12406    3                BOUND=SIZEC(FM$KEYTBL);

  12406  1 020615   000430 235007                    LDA     280,DL
         1 020616   200016 755100                    STA     BOUND,,AUTO

     5734    12407    3             FM$KEYTBL(0)=BOUND;

  12407  1 020617   200025 470500                    LDP0    KTPTR$,,AUTO
         1 020620   200016 236100                    LDQ     BOUND,,AUTO
         1 020621   000033 736000                    QLS     27
         1 020622   000000 552140                    STBQ    0,'40'O,PR0

     5735    12408    3             END;  /* SLIDE STUFF BACK */

     5736    12409
     5737    12410    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL+2;

  12410  1 020623   200024 470500                    LDP0    BUF$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:921  
         1 020624   000001 236100                    LDQ     1,,PR0
         1 020625   001777 376007                    ANQ     1023,DL
         1 020626   000002 036007                    ADLQ    2,DL
         1 020627   000001 676100                    ERQ     1,,PR0
         1 020630   001777 376007                    ANQ     1023,DL
         1 020631   000001 656100                    ERSQ    1,,PR0

     5738    12411    2          FM$GRAN.NAVX=FM$GRAN.NAVX-2;

  12411  1 020632   200024 470500                    LDP0    BUF$,,AUTO
         1 020633   000001 220100                    LDX0    1,,PR0
         1 020634   777776 621010                    EAX1    -2,X0
         1 020635   000001 741100                    STX1    1,,PR0

     5739    12412    2          F$DCB.BFR.BUFUP(1)='1'B;

  12412  1 020636   200007 470500                    LDP0    JDCB$,,AUTO
         1 020637   400000 236003                    LDQ     -131072,DU
         1 020640   000116 256100                    ORSQ    78,,PR0

     5740    12413    2          F$DCB.BFR.SCRUB(1)='1'B;

  12413  1 020641   200000 236003                    LDQ     65536,DU
         1 020642   000116 256100                    ORSQ    78,,PR0

     5741    12414    2          SEGCNT=SEGCNT-2;

  12414  1 020643   000002 336007                    LCQ     2,DL
         1 020644   200035 056100                    ASQ     SEGCNT,,AUTO

     5742    12415
     5743    12416    2          RETURN;

  12416  1 020645   200122 221300                    LDX1  ! MINSIZE,,AUTO
         1 020646   000001 702211                    TSX2  ! 1,X1

     5744    12417    2          END REMOVESEG;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:922  
     5745    12418               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:923  
     5746    12419        /*I*     NAME:     REMSEG
     5747    12420                 PURPOSE:  To remove a duplicate key
     5748    12421                 DESCRIPTION:
     5749    12422                      SEGCNT is going to be the number of words from the segment
     5750    12423                 to be deleted to either the next key, or the end of the granule.
     5751    12424
     5752    12425                      We will loop until we delete all of the segments associated
     5753    12426                 with the record.  If SEGCNT went to 0, and this is the last key
     5754    12427                 in the granule, then we don't want to leave a key with no segments
     5755    12428                 in the granule.  Get the first segment of the next granule, delete
     5756    12429                 it from that granule, and paste at the end of the previous granule.
     5757    12430                 If FAK is set, or we ran out of segments, then we're done.
     5758    12431
     5759    12432                      If SEG$ is nil, or SEGCNT is 0, then we may have deleted
     5760    12433                 all of the segments from a key.  Check the amount of space
     5761    12434                 between the beginning of the key and the next key, or end of
     5762    12435                 the granule.  If there isn't any room for segments, then remove
     5763    12436                 the whole key, and position to the beginning of the next key.
     5764    12437        */
     5765    12438                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:924  
     5766    12439    1   REMSEG: PROC ALTRET;

  12439  1 020647   200114 741300       REMSEG       STX1  ! FIRSTSEG,,AUTO

     5767    12440    2          DCL I SBIN;
     5768    12441    2          DCL SAVE_MISEG BIT(72);
     5769    12442    2          DCL KLB SBIN;
     5770    12443        /* */
     5771    12444    2          IF CRECX = KEYCNT THEN

  12444  1 020650   200015 236100                    LDQ     CRECX,,AUTO
         1 020651   020671 604000 1                  TMI     s:12447
         1 020652   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 020653   020671 601000 1                  TNZ     s:12447

     5772    12445    2             SEGCNT=FM$GRAN.NAVX-POFFW(SEG$, BUF$);

  12445  1 020654   200024 235100                    LDA     BUF$,,AUTO
         1 020655   000022 771000                    ARL     18
         1 020656   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 020657   200014 236100                    LDQ     SEG$,,AUTO
         1 020660   000022 772000                    QRL     18
         1 020661   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 020662   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 020663   200024 470500                    LDP0    BUF$,,AUTO
         1 020664   000001 236100                    LDQ     1,,PR0
         1 020665   000022 772000                    QRL     18
         1 020666   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 020667   200035 756100                    STQ     SEGCNT,,AUTO
         1 020670   020735 710000 1                  TRA     LOOP

     5773    12446    2          ELSE
     5774    12447    2             IF CRECX+1 < BOUND THEN

  12447  1 020671   000001 036007                    ADLQ    1,DL
         1 020672   020715 604000 1                  TMI     s:12450
         1 020673   200016 116100                    CMPQ    BOUND,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:925  
         1 020674   020715 605000 1                  TPL     s:12450

     5775    12448    2                SEGCNT=FM$KEYTBL(CRECX+1)-POFFW(SEG$, BUF$);

  12448  1 020675   200024 235100                    LDA     BUF$,,AUTO
         1 020676   000022 771000                    ARL     18
         1 020677   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 020700   200014 236100                    LDQ     SEG$,,AUTO
         1 020701   000022 772000                    QRL     18
         1 020702   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 020703   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 020704   200025 470500                    LDP0    KTPTR$,,AUTO
         1 020705   200015 235100                    LDA     CRECX,,AUTO
         1 020706   000100 101505                    MRL     fill='000'O
         1 020707   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         1 020710   200170 000004                    ADSC9   STEMP_FIELDIN+4,,AUTO    cn=0,n=4
         1 020711   200170 236100                    LDQ     STEMP_FIELDIN+4,,AUTO
         1 020712   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 020713   200035 756100                    STQ     SEGCNT,,AUTO
         1 020714   020735 710000 1                  TRA     LOOP

     5776    12449    2             ELSE
     5777    12450    2                SEGCNT=FM$KEYTBL(CRECX+1)+512-POFFW(SEG$, BUF$);

  12450  1 020715   200024 235100                    LDA     BUF$,,AUTO
         1 020716   000022 771000                    ARL     18
         1 020717   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 020720   200014 236100                    LDQ     SEG$,,AUTO
         1 020721   000022 772000                    QRL     18
         1 020722   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 020723   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 020724   200025 470500                    LDP0    KTPTR$,,AUTO
         1 020725   200015 235100                    LDA     CRECX,,AUTO
         1 020726   000100 101505                    MRL     fill='000'O
         1 020727   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         1 020730   200170 000004                    ADSC9   STEMP_FIELDIN+4,,AUTO    cn=0,n=4
         1 020731   200170 236100                    LDQ     STEMP_FIELDIN+4,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:926  
         1 020732   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 020733   001000 036007                    ADLQ    512,DL
         1 020734   200035 756100                    STQ     SEGCNT,,AUTO

     5778    12451
     5779    12452    3   LOOP:  DO WHILE (SEGCNT > 0);

  12452  1 020735   021211 604400 1     LOOP         TMOZ    s:12499

     5780    12453    3             CALL REMOVESEG ALTRET(ERR);

  12453  1 020736   020532 701000 1                  TSX1    REMOVESEG
         1 020737   021401 702000 1                  TSX2    ERR

     5781    12454    3             IF SEGCNT = 0 AND CRECX = KEYCNT AND KEYCNT > 0 THEN

  12454  1 020740   200035 235100                    LDA     SEGCNT,,AUTO
         1 020741   021076 601000 1                  TNZ     s:12480
         1 020742   200015 236100                    LDQ     CRECX,,AUTO
         1 020743   021076 604000 1                  TMI     s:12480
         1 020744   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 020745   021076 601000 1                  TNZ     s:12480
         1 020746   200017 235100                    LDA     KEYCNT,,AUTO
         1 020747   021076 604400 1                  TMOZ    s:12480

     5782    12455    4                DO;   /* MAYBE GET NEXT SEG */

     5783    12456    4                IF CRECX >= BOUND THEN

  12456  1 020750   000000 116003                    CMPQ    0,DU
         1 020751   020754 604000 1                  TMI     s:12457
         1 020752   200016 116100                    CMPQ    BOUND,,AUTO
         1 020753   020765 604000 1                  TMI     s:12459

     5784    12457    4                   KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);

  12457  1 020754   200025 470500                    LDP0    KTPTR$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:927  
         1 020755   000100 101506                    MRL     fill='000'O
         1 020756   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 020757   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 020760   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 020761   001000 636010                    EAQ     512,X0
         1 020762   200024 036100                    ADLQ    BUF$,,AUTO
         1 020763   200020 756100                    STQ     KEY$,,AUTO
         1 020764   020775 710000 1                  TRA     s:12460

     5785    12458    4                ELSE
     5786    12459    4                   KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));

  12459  1 020765   200025 470500                    LDP0    KTPTR$,,AUTO
         1 020766   000100 101506                    MRL     fill='000'O
         1 020767   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 020770   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 020771   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 020772   000000 636010                    EAQ     0,X0
         1 020773   200024 036100                    ADLQ    BUF$,,AUTO
         1 020774   200020 756100                    STQ     KEY$,,AUTO

     5787    12460    4                IF ORG = %INDEXED# THEN

  12460  1 020775   200022 235100                    LDA     ORG,,AUTO
         1 020776   000006 115007                    CMPA    6,DL
         1 020777   021006 601000 1                  TNZ     s:12463

     5788    12461    4                   KLB=FM$KEYENT.KLB;

  12461  1 021000   200020 471500                    LDP1    KEY$,,AUTO
         1 021001   100000 236100                    LDQ     0,,PR1
         1 021002   000033 772000                    QRL     27
         1 021003   000377 376007                    ANQ     255,DL
         1 021004   200120 756100                    STQ     KLB,,AUTO
         1 021005   021014 710000 1                  TRA     s:12464

     5789    12462    4                ELSE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:928  
     5790    12463    4                   KLB=FM$IRENT.KLB+1;

  12463  1 021006   200020 471500                    LDP1    KEY$,,AUTO
         1 021007   100000 236100                    LDQ     0,,PR1
         1 021010   000022 772000                    QRL     18
         1 021011   377777 376007                    ANQ     131071,DL
         1 021012   000001 036007                    ADLQ    1,DL
         1 021013   200120 756100                    STQ     KLB,,AUTO

     5791    12464    4                IF FM$GRAN.NAVX = POFFW(KEY$, BUF$)+(KLB+4)/4 THEN

  12464  1 021014   200024 235100                    LDA     BUF$,,AUTO
         1 021015   000022 771000                    ARL     18
         1 021016   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 021017   200020 236100                    LDQ     KEY$,,AUTO
         1 021020   000022 772000                    QRL     18
         1 021021   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 021022   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 021023   200120 236100                    LDQ     KLB,,AUTO
         1 021024   000004 036007                    ADLQ    4,DL
         1 021025   000004 506007                    DIV     4,DL
         1 021026   200167 036100                    ADLQ    STEMP_FIELDIN+3,,AUTO
         1 021027   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 021030   200024 473500                    LDP3    BUF$,,AUTO
         1 021031   300001 236100                    LDQ     1,,PR3
         1 021032   000022 772000                    QRL     18
         1 021033   200170 116100                    CMPQ    STEMP_FIELDIN+4,,AUTO
         1 021034   021076 601000 1                  TNZ     s:12480

     5792    12465    5                   DO;   /* TRY TO GET NEXT SEG */

     5793    12466    5                   CALL NXTSEG ALTRET(ERR);

  12466  1 021035   015351 701000 1                  TSX1    NXTSEG
         1 021036   021401 702000 1                  TSX2    ERR

     5794    12467    5                   IF SEG$ ~= ADDR(NIL) THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:929  

  12467  1 021037   200014 236100                    LDQ     SEG$,,AUTO
         1 021040   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 021041   021076 600000 1                  TZE     s:12480

     5795    12468    6                      DO;   /* PULL IN SEG */

     5796    12469    6                      SAVE_MISEG=FM$MISEG;

  12469  1 021042   200014 470500                    LDP0    SEG$,,AUTO
         1 021043   000100 100500                    MLR     fill='000'O
         1 021044   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 021045   200116 000010                    ADSC9   SAVE_MISEG,,AUTO         cn=0,n=8

     5797    12470    6                      CALL REMOVESEG ALTRET(ERR);

  12470  1 021046   020532 701000 1                  TSX1    REMOVESEG
         1 021047   021401 702000 1                  TSX2    ERR

     5798    12471    6                      CALL CURKEY ALTRET(ERR);

  12471  1 021050   005060 701000 1                  TSX1    CURKEY
         1 021051   021401 702000 1                  TSX2    ERR

     5799    12472    6                      FM$MISEG=SAVE_MISEG;

  12472  1 021052   200014 470500                    LDP0    SEG$,,AUTO
         1 021053   200116 237100                    LDAQ    SAVE_MISEG,,AUTO
         1 021054   000000 755100                    STA     0,,PR0
         1 021055   000001 756100                    STQ     1,,PR0

     5800    12473    6                      FM$GRAN.NAVX=FM$GRAN.NAVX+2;

  12473  1 021056   200024 470500                    LDP0    BUF$,,AUTO
         1 021057   000001 220100                    LDX0    1,,PR0
         1 021060   000002 621010                    EAX1    2,X0
         1 021061   000001 741100                    STX1    1,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:930  

     5801    12474    6                      FM$GRAN.AVAIL=FM$GRAN.AVAIL-2;

  12474  1 021062   200024 470500                    LDP0    BUF$,,AUTO
         1 021063   000001 236100                    LDQ     1,,PR0
         1 021064   001777 376007                    ANQ     1023,DL
         1 021065   000002 136007                    SBLQ    2,DL
         1 021066   000001 676100                    ERQ     1,,PR0
         1 021067   001777 376007                    ANQ     1023,DL
         1 021070   000001 656100                    ERSQ    1,,PR0

     5802    12475    6                      F$DCB.BFR.BUFUP(1)='1'B;

  12475  1 021071   200007 470500                    LDP0    JDCB$,,AUTO
         1 021072   400000 236003                    LDQ     -131072,DU
         1 021073   000116 256100                    ORSQ    78,,PR0

     5803    12476    6                      SEGCNT=2;

  12476  1 021074   000002 235007                    LDA     2,DL
         1 021075   200035 755100                    STA     SEGCNT,,AUTO

     5804    12477    6                      END;  /* PULL IN SEG */

     5805    12478    5                   END;  /* TRY TO GET NEXT SEG */

     5806    12479    4                END;  /* MAYBE GET NEXT SEG */

     5807    12480    3             IF SEGCNT=0 AND CRECX=KEYCNT AND SEG$~=ADDR(NIL) THEN

  12480  1 021076   200035 235100                    LDA     SEGCNT,,AUTO
         1 021077   021201 601000 1                  TNZ     s:12492
         1 021100   200015 236100                    LDQ     CRECX,,AUTO
         1 021101   021201 604000 1                  TMI     s:12492
         1 021102   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 021103   021201 601000 1                  TNZ     s:12492
         1 021104   200014 236100                    LDQ     SEG$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:931  
         1 021105   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 021106   021201 600000 1                  TZE     s:12492

     5808    12481    4                DO;  /* See if there are more on next index gran */

     5809    12482    4                CALL NXTSEG ALTRET(ERR);

  12482  1 021107   015351 701000 1                  TSX1    NXTSEG
         1 021110   021401 702000 1                  TSX2    ERR

     5810    12483    4                IF SEG$~=ADDR(NIL) THEN

  12483  1 021111   200014 236100                    LDQ     SEG$,,AUTO
         1 021112   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 021113   021201 600000 1                  TZE     s:12492

     5811    12484    4                   IF CRECX=KEYCNT THEN

  12484  1 021114   200015 236100                    LDQ     CRECX,,AUTO
         1 021115   021135 604000 1                  TMI     s:12487
         1 021116   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 021117   021135 601000 1                  TNZ     s:12487

     5812    12485    4                      SEGCNT=FM$GRAN.NAVX-POFFW(SEG$,BUF$);

  12485  1 021120   200024 235100                    LDA     BUF$,,AUTO
         1 021121   000022 771000                    ARL     18
         1 021122   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 021123   200014 236100                    LDQ     SEG$,,AUTO
         1 021124   000022 772000                    QRL     18
         1 021125   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 021126   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 021127   200024 470500                    LDP0    BUF$,,AUTO
         1 021130   000001 236100                    LDQ     1,,PR0
         1 021131   000022 772000                    QRL     18
         1 021132   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 021133   200035 756100                    STQ     SEGCNT,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:932  
         1 021134   021201 710000 1                  TRA     s:12492

     5813    12486    4                   ELSE
     5814    12487    4                      IF CRECX+1 < BOUND THEN

  12487  1 021135   000001 036007                    ADLQ    1,DL
         1 021136   021161 604000 1                  TMI     s:12490
         1 021137   200016 116100                    CMPQ    BOUND,,AUTO
         1 021140   021161 605000 1                  TPL     s:12490

     5815    12488    4                         SEGCNT=FM$KEYTBL(CRECX+1)-POFFW(SEG$,BUF$);

  12488  1 021141   200024 235100                    LDA     BUF$,,AUTO
         1 021142   000022 771000                    ARL     18
         1 021143   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 021144   200014 236100                    LDQ     SEG$,,AUTO
         1 021145   000022 772000                    QRL     18
         1 021146   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 021147   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 021150   200025 470500                    LDP0    KTPTR$,,AUTO
         1 021151   200015 235100                    LDA     CRECX,,AUTO
         1 021152   000100 101505                    MRL     fill='000'O
         1 021153   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         1 021154   200170 000004                    ADSC9   STEMP_FIELDIN+4,,AUTO    cn=0,n=4
         1 021155   200170 236100                    LDQ     STEMP_FIELDIN+4,,AUTO
         1 021156   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 021157   200035 756100                    STQ     SEGCNT,,AUTO
         1 021160   021201 710000 1                  TRA     s:12492

     5816    12489    4                      ELSE
     5817    12490    4                         SEGCNT=FM$KEYTBL(CRECX+1)+512-POFFW(SEG$,BUF$);

  12490  1 021161   200024 235100                    LDA     BUF$,,AUTO
         1 021162   000022 771000                    ARL     18
         1 021163   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 021164   200014 236100                    LDQ     SEG$,,AUTO
         1 021165   000022 772000                    QRL     18
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:933  
         1 021166   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 021167   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 021170   200025 470500                    LDP0    KTPTR$,,AUTO
         1 021171   200015 235100                    LDA     CRECX,,AUTO
         1 021172   000100 101505                    MRL     fill='000'O
         1 021173   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         1 021174   200170 000004                    ADSC9   STEMP_FIELDIN+4,,AUTO    cn=0,n=4
         1 021175   200170 236100                    LDQ     STEMP_FIELDIN+4,,AUTO
         1 021176   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 021177   001000 036007                    ADLQ    512,DL
         1 021200   200035 756100                    STQ     SEGCNT,,AUTO

     5818    12491    4                END; /* See if there are more on next index gran */

     5819    12492    3             IF SEG$ = ADDR(NIL) THEN

  12492  1 021201   200014 236100                    LDQ     SEG$,,AUTO
         1 021202   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 021203   021211 600000 1                  TZE     s:12499

     5820    12493    3                EXIT LOOP;
     5821    12494    3             ELSE
     5822    12495    3                IF FM$MISEG.FAK THEN

  12495  1 021204   200014 470500                    LDP0    SEG$,,AUTO
         1 021205   000000 234100                    SZN     0,,PR0
         1 021206   021211 604000 1                  TMI     s:12499

     5823    12496    3                   EXIT LOOP;
     5824    12497    3          END;  /* WHILE */

  12497  1 021207   200035 235100                    LDA     SEGCNT,,AUTO
         1 021210   020736 605400 1                  TPNZ    s:12453

     5825    12498
     5826    12499    2          IF SEG$ = ADDR(NIL) OR SEGCNT = 0 THEN

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:934  
  12499  1 021211   200014 236100                    LDQ     SEG$,,AUTO
         1 021212   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 021213   021216 600000 1                  TZE     s:12501
         1 021214   200035 235100                    LDA     SEGCNT,,AUTO
         1 021215   021356 601000 1                  TNZ     s:12539

     5827    12500    3             DO;   /* POSSIBLE LAST SEG */

     5828    12501    3             CALL CURKEY ALTRET(ERR);

  12501  1 021216   005060 701000 1                  TSX1    CURKEY
         1 021217   021401 702000 1                  TSX2    ERR

     5829    12502
     5830    12503    3             IF ORG = %INDEXED# THEN

  12503  1 021220   200022 235100                    LDA     ORG,,AUTO
         1 021221   000006 115007                    CMPA    6,DL
         1 021222   021231 601000 1                  TNZ     s:12506

     5831    12504    3                KLB=FM$KEYENT.KLB;

  12504  1 021223   200020 470500                    LDP0    KEY$,,AUTO
         1 021224   000000 236100                    LDQ     0,,PR0
         1 021225   000033 772000                    QRL     27
         1 021226   000377 376007                    ANQ     255,DL
         1 021227   200120 756100                    STQ     KLB,,AUTO
         1 021230   021237 710000 1                  TRA     s:12508

     5832    12505    3             ELSE
     5833    12506    3                KLB=FM$IRENT.KLB+1;

  12506  1 021231   200020 470500                    LDP0    KEY$,,AUTO
         1 021232   000000 236100                    LDQ     0,,PR0
         1 021233   000022 772000                    QRL     18
         1 021234   377777 376007                    ANQ     131071,DL
         1 021235   000001 036007                    ADLQ    1,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:935  
         1 021236   200120 756100                    STQ     KLB,,AUTO

     5834    12507
     5835    12508    3             IF CRECX < KEYCNT THEN

  12508  1 021237   200015 236100                    LDQ     CRECX,,AUTO
         1 021240   021315 604000 1                  TMI     s:12525
         1 021241   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 021242   021315 605000 1                  TPL     s:12525

     5836    12509    4                DO;   /* MIDDLE KEY */

     5837    12510    4                IF CRECX+1 < BOUND THEN

  12510  1 021243   000001 036007                    ADLQ    1,DL
         1 021244   021255 604000 1                  TMI     s:12513
         1 021245   200016 116100                    CMPQ    BOUND,,AUTO
         1 021246   021255 605000 1                  TPL     s:12513

     5838    12511    4                   I=FM$KEYTBL(CRECX+1);

  12511  1 021247   200025 471500                    LDP1    KTPTR$,,AUTO
         1 021250   200015 235100                    LDA     CRECX,,AUTO
         1 021251   000100 101505                    MRL     fill='000'O
         1 021252   100000 200001                    ADSC9   0,A,PR1                  cn=1,n=1
         1 021253   200115 000004                    ADSC9   I,,AUTO                  cn=0,n=4
         1 021254   021265 710000 1                  TRA     s:12514

     5839    12512    4                ELSE
     5840    12513    4                   I=FM$KEYTBL(CRECX+1)+512;

  12513  1 021255   200025 471500                    LDP1    KTPTR$,,AUTO
         1 021256   200015 235100                    LDA     CRECX,,AUTO
         1 021257   000100 101505                    MRL     fill='000'O
         1 021260   100000 200001                    ADSC9   0,A,PR1                  cn=1,n=1
         1 021261   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 021262   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:936  
         1 021263   001000 036007                    ADLQ    512,DL
         1 021264   200115 756100                    STQ     I,,AUTO

     5841    12514    4                IF I = POFFW(KEY$, BUF$)+(KLB+4)/4 THEN

  12514  1 021265   200024 236100                    LDQ     BUF$,,AUTO
         1 021266   000022 772000                    QRL     18
         1 021267   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 021270   200020 236100                    LDQ     KEY$,,AUTO
         1 021271   000022 772000                    QRL     18
         1 021272   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 021273   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 021274   200120 236100                    LDQ     KLB,,AUTO
         1 021275   000004 036007                    ADLQ    4,DL
         1 021276   000004 506007                    DIV     4,DL
         1 021277   200167 036100                    ADLQ    STEMP_FIELDIN+3,,AUTO
         1 021300   200115 116100                    CMPQ    I,,AUTO
         1 021301   021346 601000 1                  TNZ     s:12533

     5842    12515    5                   DO;   /* NO MORE SEGS */

     5843    12516    5                   CALL REMKEY ALTRET(ERR);

  12516  1 021302   020035 701000 1                  TSX1    REMKEY
         1 021303   021401 702000 1                  TSX2    ERR

     5844    12517    5                   F$DCB.RPOS='1'B;

  12517  1 021304   200007 470500                    LDP0    JDCB$,,AUTO
         1 021305   010000 236007                    LDQ     4096,DL
         1 021306   000064 256100                    ORSQ    52,,PR0

     5845    12518    5                   SEG$=ADDR(NIL);

  12518  1 021307   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 021310   200014 756100                    STQ     SEG$,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:937  
     5846    12519    5                   SEGX=0;

  12519  1 021311   200013 450100                    STZ     SEGX,,AUTO

     5847    12520    5                   F$DCB.SEGX=0;

  12520  1 021312   000000 220003                    LDX0    0,DU
         1 021313   000100 440100                    SXL0    64,,PR0

     5848    12521    5                   END;  /* NO MORE SEGS */

     5849    12522    4                END;  /* MIDDLE KEY */

  12522  1 021314   021346 710000 1                  TRA     s:12533

     5850    12523    3             ELSE
     5851    12524    4                DO;   /* LAST KEY */

     5852    12525    4                IF FM$GRAN.NAVX = POFFW(KEY$, BUF$)+(KLB+4)/4 THEN

  12525  1 021315   200024 235100                    LDA     BUF$,,AUTO
         1 021316   000022 771000                    ARL     18
         1 021317   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 021320   200020 236100                    LDQ     KEY$,,AUTO
         1 021321   000022 772000                    QRL     18
         1 021322   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 021323   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 021324   200120 236100                    LDQ     KLB,,AUTO
         1 021325   000004 036007                    ADLQ    4,DL
         1 021326   000004 506007                    DIV     4,DL
         1 021327   200167 036100                    ADLQ    STEMP_FIELDIN+3,,AUTO
         1 021330   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 021331   200024 471500                    LDP1    BUF$,,AUTO
         1 021332   100001 236100                    LDQ     1,,PR1
         1 021333   000022 772000                    QRL     18
         1 021334   200170 116100                    CMPQ    STEMP_FIELDIN+4,,AUTO
         1 021335   021346 601000 1                  TNZ     s:12533
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:938  

     5853    12526    5                   DO;   /* REMOVE KEY */

     5854    12527    5                   CALL REMKEY ALTRET(ERR);

  12527  1 021336   020035 701000 1                  TSX1    REMKEY
         1 021337   021401 702000 1                  TSX2    ERR

     5855    12528    5                   SEGX=0;

  12528  1 021340   200013 450100                    STZ     SEGX,,AUTO

     5856    12529    5                   SEG$=ADDR(NIL);

  12529  1 021341   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 021342   200014 756100                    STQ     SEG$,,AUTO

     5857    12530    5                   F$DCB.SEGX=0;

  12530  1 021343   000000 220003                    LDX0    0,DU
         1 021344   200007 470500                    LDP0    JDCB$,,AUTO
         1 021345   000100 440100                    SXL0    64,,PR0

     5858    12531    5                   END;  /* REMOVE KEY */

     5859    12532    4                END;  /* LAST KEY */

     5860    12533    3             CALL NXTKEY ALTRET(NXTEOF);

  12533  1 021346   015105 701000 1                  TSX1    NXTKEY
         1 021347   021363 702000 1                  TSX2    NXTEOF

     5861    12534    3             SEG$=ADDR(NIL);

  12534  1 021350   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 021351   200014 756100                    STQ     SEG$,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:939  
     5862    12535    3             SEGX=0;

  12535  1 021352   200013 450100                    STZ     SEGX,,AUTO

     5863    12536    3             F$DCB.SEGX=0;

  12536  1 021353   000000 220003                    LDX0    0,DU
         1 021354   200007 470500                    LDP0    JDCB$,,AUTO
         1 021355   000100 440100                    SXL0    64,,PR0

     5864    12537    3             END;  /* POSSIBLE LAST SEG */

     5865    12538
     5866    12539    2          F$DCB.RPOS='1'B;

  12539  1 021356   200007 470500                    LDP0    JDCB$,,AUTO
         1 021357   010000 236007                    LDQ     4096,DL
         1 021360   000064 256100                    ORSQ    52,,PR0

     5867    12540
     5868    12541    2          RETURN;

  12541  1 021361   200114 221300                    LDX1  ! FIRSTSEG,,AUTO
         1 021362   000001 702211                    TSX2  ! 1,X1

     5869    12542    2   NXTEOF: IF B$JIT.ERR.CODE = %E$EOF THEN

  12542  1 021363   000000 470400 xsym  NXTEOF       LDP0    B$JIT$
         1 021364   000012 236100                    LDQ     10,,PR0
         1 021365   377770 376007                    ANQ     131064,DL
         1 021366   000060 116007                    CMPQ    48,DL
         1 021367   021401 601000 1                  TNZ     ERR

     5870    12543    3             DO;   /* EOF */

     5871    12544    3             SEG$=ADDR(NIL);

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:940  
  12544  1 021370   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 021371   200014 756100                    STQ     SEG$,,AUTO

     5872    12545    3             SEGX=0;

  12545  1 021372   200013 450100                    STZ     SEGX,,AUTO

     5873    12546    3             F$DCB.SEGX=0;

  12546  1 021373   000000 220003                    LDX0    0,DU
         1 021374   200007 471500                    LDP1    JDCB$,,AUTO
         1 021375   100100 440100                    SXL0    64,,PR1

     5874    12547    3             B$JIT.ERR='0'B;

  12547  1 021376   000012 450100                    STZ     10,,PR0

     5875    12548    3             RETURN;

  12548  1 021377   200114 221300                    LDX1  ! FIRSTSEG,,AUTO
         1 021400   000001 702211                    TSX2  ! 1,X1

     5876    12549    3             END;  /* EOF */
     5877    12550    2   ERR:   ALTRETURN;

  12550  1 021401   200114 221300       ERR          LDX1  ! FIRSTSEG,,AUTO
         1 021402   000000 702211                    TSX2  ! 0,X1

     5878    12551    2          END REMSEG;
     5879    12552               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:941  
     5880    12553        /*I*     NAME:     RESTOREPOS
     5881    12554                 PURPOSE:  To restore position
     5882    12555                 DESCRIPTION:
     5883    12556                      First, make sure that we have the current index
     5884    12557                 granule in memory.  Then set some local variables for
     5885    12558                 quicker access.
     5886    12559        */
     5887    12560    1   RESTOREPOS: PROC ALTRET;

  12560  1 021403   200124 741300       RESTOREPOS   STX1  ! TSIZE,,AUTO

     5888    12561        /* */
     5889    12562    2          DA=F$DCB.BFR.DA(1);

  12562  1 021404   200007 470500                    LDP0    JDCB$,,AUTO
         1 021405   000116 236100                    LDQ     78,,PR0
         1 021406   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 021407   200021 756100                    STQ     DA,,AUTO

     5890    12563    2          F$DCB.LVL=0;

  12563  1 021410   000035 236000 2                  LDQ     29
         1 021411   000067 356100                    ANSQ    55,,PR0

     5891    12564    2          BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));

  12564  1 021412   000116 236100                    LDQ     78,,PR0
         1 021413   000033 772000                    QRL     27
         1 021414   000037 376007                    ANQ     31,DL
         1 021415   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 021416   200024 756100                    STQ     BUF$,,AUTO

     5892    12565    2          IF BUF$ = ADDR(NIL) THEN

  12565  1 021417   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 021420   021437 601000 1                  TNZ     s:12568

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:942  
     5893    12566    2             CALL FMD$REDBUF(BUF$, 1, DA, 0, -1) ALTRET(ERR);

  12566  1 021421   000056 236000 2                  LDQ     46
         1 021422   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 021423   000000 236000 2                  LDQ     0
         1 021424   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 021425   200021 631500                    EPPR1   DA,,AUTO
         1 021426   200170 451500                    STP1    STEMP_FIELDIN+4,,AUTO
         1 021427   000001 236000 2                  LDQ     1
         1 021430   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 021431   200024 633500                    EPPR3   BUF$,,AUTO
         1 021432   200166 453500                    STP3    STEMP_FIELDIN+2,,AUTO
         1 021433   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 021434   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 021435   000000 701000 xent               TSX1    FMD$REDBUF
         1 021436   021467 702000 1                  TSX2    ERR

     5894    12567
     5895    12568    2          KEYCNT=FM$GRAN.KEYCNT;

  12568  1 021437   200024 470500                    LDP0    BUF$,,AUTO
         1 021440   000002 236100                    LDQ     2,,PR0
         1 021441   000777 376007                    ANQ     511,DL
         1 021442   200017 756100                    STQ     KEYCNT,,AUTO

     5896    12569    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

  12569  1 021443   000002 220100                    LDX0    2,,PR0
         1 021444   000000 636010                    EAQ     0,X0
         1 021445   200024 036100                    ADLQ    BUF$,,AUTO
         1 021446   200025 756100                    STQ     KTPTR$,,AUTO

     5897    12570    2          BOUND=FM$KEYTBL(0);

  12570  1 021447   200025 471500                    LDP1    KTPTR$,,AUTO
         1 021450   100000 236100                    LDQ     0,,PR1
         1 021451   000033 772000                    QRL     27
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:943  
         1 021452   200016 756100                    STQ     BOUND,,AUTO

     5898    12571    2          CRECX=F$DCB.CRECX;

  12571  1 021453   200007 473500                    LDP3    JDCB$,,AUTO
         1 021454   300067 236100                    LDQ     55,,PR3
         1 021455   777777 376007                    ANQ     -1,DL
         1 021456   200015 756100                    STQ     CRECX,,AUTO

     5899    12572    2          SEGX=F$DCB.SEGX;

  12572  1 021457   300100 236100                    LDQ     64,,PR3
         1 021460   777777 376007                    ANQ     -1,DL
         1 021461   200013 756100                    STQ     SEGX,,AUTO

     5900    12573    2          KEY$=ADDR(NIL);

  12573  1 021462   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 021463   200020 756100                    STQ     KEY$,,AUTO

     5901    12574    2          SEG$=ADDR(NIL);

  12574  1 021464   200014 756100                    STQ     SEG$,,AUTO

     5902    12575
     5903    12576    2          RETURN;

  12576  1 021465   200124 221300                    LDX1  ! TSIZE,,AUTO
         1 021466   000001 702211                    TSX2  ! 1,X1

     5904    12577    2   ERR:   ALTRETURN;

  12577  1 021467   200124 221300       ERR          LDX1  ! TSIZE,,AUTO
         1 021470   000000 702211                    TSX2  ! 0,X1

     5905    12578    2          END RESTOREPOS;
     5906    12579               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:944  
     5907    12580        /*I*     NAME:     REUSE_ALT
     5908    12581                 PURPOSE:  To reuse a deleted record
     5909    12582                 DESCRIPTION:
     5910    12583                      When we reuse a key that has been marked as deleted, then
     5911    12584                 we have to rebuild the alternate indexes associated with the
     5912    12585                 record.  Loop through the table of alternate indexes, setting
     5913    12586                 the INDXCHNG bit.  This indicates whether or not this index
     5914    12587                 needs to be rebuilt.  This bit is set if the index is unique
     5915    12588                 or this is not load mode.  In either case, the index must be
     5916    12589                 continually up to date.
     5917    12590
     5918    12591                      Call REBLD_ALT to actually rebuild the indexes.
     5919    12592        */
     5920    12593                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:945  
     5921    12594    1   REUSE_ALT: PROC ALTRET;

  12594  1 021471   200106 741300       REUSE_ALT    STX1  ! GACTB,,AUTO

     5922    12595    2          DCL I SBIN;
     5923    12596        /* */
     5924    12597    2          IF ORG = %INDEXED# THEN

  12597  1 021472   200022 235100                    LDA     ORG,,AUTO
         1 021473   000006 115007                    CMPA    6,DL
         1 021474   021544 601000 1                  TNZ     s:12609

     5925    12598    3             DO I=1 TO ALTKEYS.NUMENTS-1;

  12598  1 021475   000001 236007                    LDQ     1,DL
         1 021476   200107 756100                    STQ     I,,AUTO
         1 021477   021535 710000 1                  TRA     s:12607+1

     5926    12599    3                IF (NOT F$DCB.LDFLG) OR

  12599  1 021500   200007 470500                    LDP0    JDCB$,,AUTO
         1 021501   000064 236100                    LDQ     52,,PR0
         1 021502   200000 316007                    CANQ    65536,DL
         1 021503   021515 600000 1                  TZE     s:12601
         1 021504   200107 236100                    LDQ     I,,AUTO
         1 021505   000006 402007                    MPY     6,DL
         1 021506   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 021507   100004 236106                    LDQ     4,QL,PR1
         1 021510   000400 316003                    CANQ    256,DU
         1 021511   021524 600000 1                  TZE     s:12604
         1 021512   000103 236100                    LDQ     67,,PR0
         1 021513   002000 316007                    CANQ    1024,DL
         1 021514   021524 601000 1                  TNZ     s:12604

     5927    12600    3                   (ALTKEYS.K.UNIQUE(I) AND NOT F$DCB.UNIQUEBLD) THEN
     5928    12601    3                   ALTKEYS.K.INDXCHNG(I)='1'B;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:946  
  12601  1 021515   200107 236100                    LDQ     I,,AUTO
         1 021516   000006 402007                    MPY     6,DL
         1 021517   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 021520   000000 620006                    EAX0    0,QL
         1 021521   000040 236003                    LDQ     32,DU
         1 021522   100004 256110                    ORSQ    4,X0,PR1
         1 021523   021534 710000 1                  TRA     s:12607

     5929    12602    3                ELSE
     5930    12603    4                   DO;   /* LOAD MODE */

     5931    12604    4                   FM$CFU.ALTBLD='1'B;

  12604  1 021524   200010 473500                    LDP3    CFU$,,AUTO
         1 021525   000004 236003                    LDQ     4,DU
         1 021526   300006 256100                    ORSQ    6,,PR3

     5932    12605    4                   ALTKEYS.K.INDXCHNG(I)='0'B;

  12605  1 021527   200107 236100                    LDQ     I,,AUTO
         1 021530   000006 402007                    MPY     6,DL
         1 021531   000000 620006                    EAX0    0,QL
         1 021532   000007 236000 2                  LDQ     7
         1 021533   100004 356110                    ANSQ    4,X0,PR1

     5933    12606    4                   END;  /* LOAD MODE */

     5934    12607    3             END;  /* DO I */

  12607  1 021534   200107 054100                    AOS     I,,AUTO
         1 021535   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 021536   000000 236100                    LDQ     0,,PR0
         1 021537   000022 772000                    QRL     18
         1 021540   000377 376007                    ANQ     255,DL
         1 021541   200107 116100                    CMPQ    I,,AUTO
         1 021542   021500 605400 1                  TPNZ    s:12599
         1 021543   021611 710000 1                  TRA     s:12620
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:947  

     5935    12608    2          ELSE
     5936    12609    3             DO I=1 TO IRKEYS.NKEYS-1;

  12609  1 021544   000001 236007                    LDQ     1,DL
         1 021545   200107 756100                    STQ     I,,AUTO
         1 021546   021604 710000 1                  TRA     s:12618+1

     5937    12610    3                IF (NOT F$DCB.LDFLG) OR

  12610  1 021547   200007 470500                    LDP0    JDCB$,,AUTO
         1 021550   000064 236100                    LDQ     52,,PR0
         1 021551   200000 316007                    CANQ    65536,DL
         1 021552   021564 600000 1                  TZE     s:12612
         1 021553   200107 236100                    LDQ     I,,AUTO
         1 021554   000007 402007                    MPY     7,DL
         1 021555   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 021556   100006 236106                    LDQ     6,QL,PR1
         1 021557   400000 316007                    CANQ    -131072,DL
         1 021560   021573 600000 1                  TZE     s:12615
         1 021561   000103 236100                    LDQ     67,,PR0
         1 021562   002000 316007                    CANQ    1024,DL
         1 021563   021573 601000 1                  TNZ     s:12615

     5938    12611    3                   (IRKEYS.K.UNIQUE(I) AND NOT F$DCB.UNIQUEBLD) THEN
     5939    12612    3                   IRKEYS.K.INDXCHNG(I)='1'B;

  12612  1 021564   200107 236100                    LDQ     I,,AUTO
         1 021565   000007 402007                    MPY     7,DL
         1 021566   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 021567   000000 620006                    EAX0    0,QL
         1 021570   100000 236007                    LDQ     32768,DL
         1 021571   100006 256110                    ORSQ    6,X0,PR1
         1 021572   021603 710000 1                  TRA     s:12618

     5940    12613    3                ELSE
     5941    12614    4                   DO;   /* LOAD MODE */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:948  

     5942    12615    4                   FM$CFU.ALTBLD='1'B;

  12615  1 021573   200010 473500                    LDP3    CFU$,,AUTO
         1 021574   000004 236003                    LDQ     4,DU
         1 021575   300006 256100                    ORSQ    6,,PR3

     5943    12616    4                   IRKEYS.K.INDXCHNG(I)='0'B;

  12616  1 021576   200107 236100                    LDQ     I,,AUTO
         1 021577   000007 402007                    MPY     7,DL
         1 021600   000000 620006                    EAX0    0,QL
         1 021601   000010 236000 2                  LDQ     8
         1 021602   100006 356110                    ANSQ    6,X0,PR1

     5944    12617    4                   END;  /* LOAD MODE */

     5945    12618    3             END;  /* DO I */

  12618  1 021603   200107 054100                    AOS     I,,AUTO
         1 021604   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 021605   000000 236100                    LDQ     0,,PR0
         1 021606   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 021607   200107 116100                    CMPQ    I,,AUTO
         1 021610   021547 605400 1                  TPNZ    s:12610

     5946    12619
     5947    12620    2          CALL REBLD_ALT ALTRET(ERR);

  12620  1 021611   017616 701000 1                  TSX1    REBLD_ALT
         1 021612   021625 702000 1                  TSX2    ERR

     5948    12621    2          INDEX#=1;

  12621  1 021613   000001 235007                    LDA     1,DL
         1 021614   200011 755100                    STA     INDEX#,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:949  
     5949    12622    2          CALL SETINDEX ALTRET(ERR);

  12622  1 021615   021667 701000 1                  TSX1    SETINDEX
         1 021616   021625 702000 1                  TSX2    ERR

     5950    12623    2          CALL RESTOREPOS ALTRET(ERR);

  12623  1 021617   021403 701000 1                  TSX1    RESTOREPOS
         1 021620   021625 702000 1                  TSX2    ERR

     5951    12624    2          CALL CURKEY ALTRET(ERR);

  12624  1 021621   005060 701000 1                  TSX1    CURKEY
         1 021622   021625 702000 1                  TSX2    ERR

     5952    12625
     5953    12626    2          RETURN;

  12626  1 021623   200106 221300                    LDX1  ! GACTB,,AUTO
         1 021624   000001 702211                    TSX2  ! 1,X1

     5954    12627    2   ERR:   ALTRETURN;

  12627  1 021625   200106 221300       ERR          LDX1  ! GACTB,,AUTO
         1 021626   000000 702211                    TSX2  ! 0,X1

     5955    12628    2          END REUSE_ALT;
     5956    12629               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:950  
     5957    12630        /*I*     NAME:     SETARG
     5958    12631                 PURPOSE:  To set some pointers
     5959    12632                 DESCRIPTION:
     5960    12633                      This routine is used from the various entry points to set
     5961    12634                 some pointers that are passed as arguments.
     5962    12635        */
     5963    12636    1   SETARG: PROC;

  12636  1 021627   200076 741300       SETARG       STX1  ! DELALL_FAST+2,,AUTO

     5964    12637        /* */
     5965    12638    2          PSEG$=SEG$;

  12638  1 021630   200014 236100                    LDQ     SEG$,,AUTO
         1 021631   200003 470500                    LDP0    @PSEG$,,AUTO
         1 021632   000000 756100                    STQ     0,,PR0

     5966    12639    2          IF ADDR(PKEY$) ~= ADDR(NIL) THEN

  12639  1 021633   200005 236100                    LDQ     @PKEY$,,AUTO
         1 021634   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 021635   021641 600000 1                  TZE     s:12641

     5967    12640    2             PKEY$=KEY$;

  12640  1 021636   200020 236100                    LDQ     KEY$,,AUTO
         1 021637   200005 471500                    LDP1    @PKEY$,,AUTO
         1 021640   100000 756100                    STQ     0,,PR1

     5968    12641    2          RETURN;

  12641  1 021641   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 021642   000001 702211                    TSX2  ! 1,X1

     5969    12642    2          END SETARG;
     5970    12643               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:951  
     5971    12644        /*I*     NAME:     SETID
     5972    12645                 PURPOSE:  To remember current position in shared files.
     5973    12646                 DESCRIPTION:
     5974    12647                      For shared files, the only accurate way to remember
     5975    12648                 current position is by key or record ID.  Keys are faster,
     5976    12649                 but take up lots of space.  So, we just store the
     5977    12650                 record ID in the DCB.
     5978    12651        */
     5979    12652    1   SETID: PROC;

  12652  1 021643   200114 741300       SETID        STX1  ! FIRSTSEG,,AUTO

     5980    12653        /* */
     5981    12654    2          IF SEG$ ~= ADDR(NIL) THEN

  12654  1 021644   200014 236100                    LDQ     SEG$,,AUTO
         1 021645   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 021646   021663 600000 1                  TZE     s:12661

     5982    12655    3             DO;   /* SET ID */

     5983    12656    3             F$DCB.ID.DA=FM$MISEG.GDA;

  12656  1 021647   200014 470500                    LDP0    SEG$,,AUTO
         1 021650   200007 471500                    LDP1    JDCB$,,AUTO
         1 021651   000001 236100                    LDQ     1,,PR0
         1 021652   100107 676100                    ERQ     71,,PR1
         1 021653   000020 376000 2                  ANQ     16
         1 021654   100107 656100                    ERSQ    71,,PR1

     5984    12657    3             F$DCB.ID.GX=FM$MISEG.GX;

  12657  1 021655   000000 236100                    LDQ     0,,PR0
         1 021656   000016 736000                    QLS     14
         1 021657   100107 676100                    ERQ     71,,PR1
         1 021660   777400 376003                    ANQ     -256,DU
         1 021661   100107 656100                    ERSQ    71,,PR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:952  

     5985    12658    3             END;  /* SET ID */

  12658  1 021662   021665 710000 1                  TRA     s:12663

     5986    12659    2          ELSE
     5987    12660    3             DO;   /* NO ID */

     5988    12661    3             F$DCB.ID='0'B;

  12661  1 021663   200007 470500                    LDP0    JDCB$,,AUTO
         1 021664   000107 450100                    STZ     71,,PR0

     5989    12662    3             END;  /* NO ID */

     5990    12663    2          RETURN;

  12663  1 021665   200114 221300                    LDX1  ! FIRSTSEG,,AUTO
         1 021666   000001 702211                    TSX2  ! 1,X1

     5991    12664    2          END SETID;
     5992    12665               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:953  
     5993    12666        /*I*     NAME:     SETINDEX
     5994    12667                 PURPOSE:  To position to a specified index
     5995    12668                 DESCRIPTION:
     5996    12669                      Call the correct subroutine depending on whether this is
     5997    12670                 an indexed, or irel file.
     5998    12671        */
     5999    12672    1   SETINDEX: PROC ALTRET;

  12672  1 021667   200124 741300       SETINDEX     STX1  ! TSIZE,,AUTO

     6000    12673        /* */
     6001    12674    2          IF ORG = %INDEXED# THEN

  12674  1 021670   200022 235100                    LDA     ORG,,AUTO
         1 021671   000006 115007                    CMPA    6,DL
         1 021672   021676 601000 1                  TNZ     s:12677

     6002    12675    2             CALL SETUP_ALTKEY ALTRET(ERR);

  12675  1 021673   022135 701000 1                  TSX1    SETUP_ALTKEY
         1 021674   021702 702000 1                  TSX2    ERR
         1 021675   021700 710000 1                  TRA     s:12679

     6003    12676    2          ELSE
     6004    12677    2             CALL SETUP_IRKEY ALTRET(ERR);

  12677  1 021676   022370 701000 1                  TSX1    SETUP_IRKEY
         1 021677   021702 702000 1                  TSX2    ERR

     6005    12678
     6006    12679    2          RETURN;

  12679  1 021700   200124 221300                    LDX1  ! TSIZE,,AUTO
         1 021701   000001 702211                    TSX2  ! 1,X1

     6007    12680    2   ERR:   ALTRETURN;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:954  
  12680  1 021702   200124 221300       ERR          LDX1  ! TSIZE,,AUTO
         1 021703   000000 702211                    TSX2  ! 0,X1

     6008    12681    2          END SETINDEX;
     6009    12682               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:955  
     6010    12683        /*I*     NAME:     SETKEY
     6011    12684                 PURPOSE:  To set up the KEYIN$ pointer
     6012    12685                 DESCRIPTION:
     6013    12686                      KEYIN$ is used to point to a user specified key.  If this
     6014    12687                 is a keyed file, then just set KEYIN$ to whatever the user specified.
     6015    12688                 KEYIN_SIZE is the size of the user specified key.
     6016    12689
     6017    12690                      If this is an indexed or IREL file, then first get the
     6018    12691                 size.  If this is a write, then the key is actually imbedded
     6019    12692                 in the record that the user specified.
     6020    12693        */
     6021    12694                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:956  
     6022    12695    1   SETKEY: PROC(K$) ALTRET;

  12695  1 021704   200112 741300       SETKEY       STX1  ! SIZE+1,,AUTO

     6023    12696    2          DCL K$ PTR;
     6024    12697        /* */
     6025    12698    2          IF ORG = %KEYED# THEN

  12698  1 021705   200022 235100                    LDA     ORG,,AUTO
         1 021706   000002 115007                    CMPA    2,DL
         1 021707   021732 601000 1                  TNZ     s:12715

     6026    12699    3             DO;   /* KEYED FILE */

     6027    12700    3             KEYIN$=K$;

  12700  1 021710   200113 470500                    LDP0    @K$,,AUTO
         1 021711   000000 236100                    LDQ     0,,PR0
         1 021712   200037 756100                    STQ     KEYIN$,,AUTO

     6028    12701    3             TEMP_CHAR=KEYIN.SIZE;

  12701  1 021713   200037 471500                    LDP1    KEYIN$,,AUTO
         1 021714   040100 100500                    MLR     fill='040'O
         1 021715   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 021716   200072 000001                    ADSC9   TEMP_CHAR,,AUTO          cn=0,n=1

     6029    12702    3             KEYIN_SIZE=ASCBIN(TEMP_CHAR);

  12702  1 021717   200072 236100                    LDQ     TEMP_CHAR,,AUTO
         1 021720   000033 772000                    QRL     27
         1 021721   200056 756100                    STQ     KEYIN_SIZE,,AUTO

     6030    12703    3             IF KEYIN_SIZE = 0 OR KEYIN_SIZE > 255 THEN

  12703  1 021722   021725 600000 1                  TZE     s:12705
         1 021723   000400 116007                    CMPQ    256,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:957  
         1 021724   021777 602000 1                  TNC     s:12728

     6031    12704    4                DO;   /* BAD KEY LENGTH */

     6032    12705    4                B$JIT.ERR = ERRBADKEY;

  12705  1 021725   000011 236000 0                  LDQ     ERRBADKEY
         1 021726   000000 473400 xsym               LDP3    B$JIT$
         1 021727   300012 756100                    STQ     10,,PR3

     6033    12706        /*E*   ERROR:   FMG-E$BADKEY-2
     6034    12707               MESSAGE: Illegal key length% for %UF%
     6035    12708               MESSAGE1: Key length is 0 or > 255
     6036    12709        */
     6037    12710    4                ALTRETURN;

  12710  1 021730   200112 221300                    LDX1  ! SIZE+1,,AUTO
         1 021731   000000 702211                    TSX2  ! 0,X1

     6038    12711    4                END;  /* BAD KEY LENGTH */
     6039    12712    3             END;  /* KEYED FILE */
     6040    12713    2          ELSE
     6041    12714    3             DO;   /* INDEXED FILE */

     6042    12715    3             IF ORG = %INDEXED# THEN

  12715  1 021732   000006 115007                    CMPA    6,DL
         1 021733   021742 601000 1                  TNZ     s:12719

     6043    12716    3                KEYIN_SIZE=F$DCB.KEYL;

  12716  1 021734   200007 470500                    LDP0    JDCB$,,AUTO
         1 021735   000036 236100                    LDQ     30,,PR0
         1 021736   000011 772000                    QRL     9
         1 021737   000777 376007                    ANQ     511,DL
         1 021740   200056 756100                    STQ     KEYIN_SIZE,,AUTO
         1 021741   021760 710000 1                  TRA     s:12722
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:958  

     6044    12717    3             ELSE
     6045    12718    4                DO;   /* SET UP KEY SIZES */

     6046    12719    4                KEYIN_SIZE=IRKEYS.K.KEYL(INDEX#);

  12719  1 021742   200011 236100                    LDQ     INDEX#,,AUTO
         1 021743   000007 402007                    MPY     7,DL
         1 021744   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 021745   000005 236106                    LDQ     5,QL,PR0
         1 021746   000022 772000                    QRL     18
         1 021747   200056 756100                    STQ     KEYIN_SIZE,,AUTO

     6047    12720    4                CALL HFF$DSIZ(K$, USERKEY_SIZE);

  12720  1 021750   200073 631500                    EPPR1   USERKEY_SIZE,,AUTO
         1 021751   200167 451500                    STP1    STEMP_FIELDIN+3,,AUTO
         1 021752   200113 236100                    LDQ     @K$,,AUTO
         1 021753   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 021754   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 021755   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 021756   000000 701000 xent               TSX1    HFF$DSIZ
         1 021757   000000 011000                    NOP     0

     6048    12721    4                END;  /* SET UP KEY SIZES */

     6049    12722    3             IF FPTCODE = FPTWRITE THEN

  12722  1 021760   200003 470500                    LDP0    @PSEG$,,AUTO
         1 021761   000000 235100                    LDA     0,,PR0
         1 021762   000001 115007                    CMPA    1,DL
         1 021763   021774 601000 1                  TNZ     s:12725

     6050    12723    3                KEYIN$=PINCRC(F$DCB.UB$, F$DCB.KEYX);

  12723  1 021764   200007 471500                    LDP1    JDCB$,,AUTO
         1 021765   100036 236100                    LDQ     30,,PR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:959  
         1 021766   000022 772000                    QRL     18
         1 021767   100075 473500                    LDP3    61,,PR1
         1 021770   000011 402007                    MPY     9,DL
         1 021771   300000 503506                    ABD     0,QL,PR3
         1 021772   200037 453500                    STP3    KEYIN$,,AUTO
         1 021773   021777 710000 1                  TRA     s:12728

     6051    12724    3             ELSE
     6052    12725    3                KEYIN$=K$;

  12725  1 021774   200113 471500                    LDP1    @K$,,AUTO
         1 021775   100000 236100                    LDQ     0,,PR1
         1 021776   200037 756100                    STQ     KEYIN$,,AUTO

     6053    12726    3             END;  /* INDEXED FILE */

     6054    12727
     6055    12728    2          RETURN;

  12728  1 021777   200112 221300                    LDX1  ! SIZE+1,,AUTO
         1 022000   000001 702211                    TSX2  ! 1,X1

     6056    12729    2          END SETKEY;
     6057    12730               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:960  
     6058    12731        /*I*     NAME:     SETPTRS
     6059    12732                 PURPOSE:  To set up some pointers
     6060    12733                 DESCRIPTION:
     6061    12734                      After positioning in a file, then initialize the KEY$ and SEG$
     6062    12735                 pointers.  Also, set SEGX.
     6063    12736        */
     6064    12737    1   SETPTRS:  PROC;

  12737  1 022001   200136 741300       SETPTRS      STX1  ! LASTSEG,,AUTO

     6065    12738        /* */
     6066    12739    2          IF CRECX < BOUND THEN

  12739  1 022002   200015 236100                    LDQ     CRECX,,AUTO
         1 022003   022017 604000 1                  TMI     s:12742
         1 022004   200016 116100                    CMPQ    BOUND,,AUTO
         1 022005   022017 605000 1                  TPL     s:12742

     6067    12740    2             KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));

  12740  1 022006   200025 470500                    LDP0    KTPTR$,,AUTO
         1 022007   000100 101506                    MRL     fill='000'O
         1 022010   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 022011   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 022012   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 022013   000000 636010                    EAQ     0,X0
         1 022014   200024 036100                    ADLQ    BUF$,,AUTO
         1 022015   200020 756100                    STQ     KEY$,,AUTO
         1 022016   022027 710000 1                  TRA     s:12744

     6068    12741    2          ELSE
     6069    12742    2             KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);

  12742  1 022017   200025 470500                    LDP0    KTPTR$,,AUTO
         1 022020   000100 101506                    MRL     fill='000'O
         1 022021   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 022022   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:961  
         1 022023   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 022024   001000 636010                    EAQ     512,X0
         1 022025   200024 036100                    ADLQ    BUF$,,AUTO
         1 022026   200020 756100                    STQ     KEY$,,AUTO

     6070    12743
     6071    12744    2          IF ORG = %IREL# THEN

  12744  1 022027   200022 235100                    LDA     ORG,,AUTO
         1 022030   000015 115007                    CMPA    13,DL
         1 022031   022044 601000 1                  TNZ     s:12747

     6072    12745    2             SEG$=PINCRW(KEY$, (FM$IRENT.KLB+5)/4);

  12745  1 022032   200020 471500                    LDP1    KEY$,,AUTO
         1 022033   100000 236100                    LDQ     0,,PR1
         1 022034   000022 772000                    QRL     18
         1 022035   377777 376007                    ANQ     131071,DL
         1 022036   000005 036007                    ADLQ    5,DL
         1 022037   000002 772000                    QRL     2
         1 022040   000022 736000                    QLS     18
         1 022041   200020 036100                    ADLQ    KEY$,,AUTO
         1 022042   200014 756100                    STQ     SEG$,,AUTO
         1 022043   022055 710000 1                  TRA     s:12748

     6073    12746    2          ELSE
     6074    12747    2             SEG$=PINCRW(KEY$, (FM$KEYENT.KLB+4)/4);

  12747  1 022044   200020 471500                    LDP1    KEY$,,AUTO
         1 022045   100000 236100                    LDQ     0,,PR1
         1 022046   000033 772000                    QRL     27
         1 022047   000377 376007                    ANQ     255,DL
         1 022050   000004 036007                    ADLQ    4,DL
         1 022051   000002 772000                    QRL     2
         1 022052   000022 736000                    QLS     18
         1 022053   200020 036100                    ADLQ    KEY$,,AUTO
         1 022054   200014 756100                    STQ     SEG$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:962  

     6075    12748    2          SEGX=POFFW(SEG$, BUF$);

  12748  1 022055   200024 235100                    LDA     BUF$,,AUTO
         1 022056   000022 771000                    ARL     18
         1 022057   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 022060   200014 236100                    LDQ     SEG$,,AUTO
         1 022061   000022 772000                    QRL     18
         1 022062   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 022063   200013 756100                    STQ     SEGX,,AUTO

     6076    12749    2          F$DCB.SEGX=SEGX;

  12749  1 022064   000000 620006                    EAX0    0,QL
         1 022065   200007 473500                    LDP3    JDCB$,,AUTO
         1 022066   300100 440100                    SXL0    64,,PR3

     6077    12750
     6078    12751    2          RETURN;

  12751  1 022067   200136 221300                    LDX1  ! LASTSEG,,AUTO
         1 022070   000001 702211                    TSX2  ! 1,X1

     6079    12752    2          END SETPTRS;
     6080    12753               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:963  
     6081    12754        /*I*     NAME:     SETUP
     6082    12755                 PURPOSE:  To do basic initialization for entry points
     6083    12756                 DESCRIPTION:
     6084    12757                      When we enter from one of the odd entry points, then some
     6085    12758                 basic initialization needs to be done.  We don't have to worry
     6086    12759                 about alternate indexes or irel files here, yet.
     6087    12760        */
     6088    12761    1   SETUP: PROC;

  12761  1 022071   200104 741300       SETUP        STX1  ! ERRTMP,,AUTO

     6089    12762        /* */
     6090    12763    2          JDCB$=B$JIT.DCB$;

  12763  1 022072   000000 470400 xsym               LDP0    B$JIT$
         1 022073   000232 236100                    LDQ     154,,PR0
         1 022074   200007 756100                    STQ     JDCB$,,AUTO

     6091    12764    2          CFU$=F$DCB.CFU$;

  12764  1 022075   200007 471500                    LDP1    JDCB$,,AUTO
         1 022076   100066 236100                    LDQ     54,,PR1
         1 022077   200010 756100                    STQ     CFU$,,AUTO

     6092    12765    2          BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));

  12765  1 022100   100116 236100                    LDQ     78,,PR1
         1 022101   000033 772000                    QRL     27
         1 022102   000037 376007                    ANQ     31,DL
         1 022103   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 022104   200024 756100                    STQ     BUF$,,AUTO

     6093    12766    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

  12766  1 022105   200024 473500                    LDP3    BUF$,,AUTO
         1 022106   300002 220100                    LDX0    2,,PR3
         1 022107   000000 636010                    EAQ     0,X0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:964  
         1 022110   200024 036100                    ADLQ    BUF$,,AUTO
         1 022111   200025 756100                    STQ     KTPTR$,,AUTO

     6094    12767    2          BOUND=FM$KEYTBL(0);

  12767  1 022112   200025 474500                    LDP4    KTPTR$,,AUTO
         1 022113   400000 236100                    LDQ     0,,PR4
         1 022114   000033 772000                    QRL     27
         1 022115   200016 756100                    STQ     BOUND,,AUTO

     6095    12768    2          KEYCNT=FM$GRAN.KEYCNT;

  12768  1 022116   300002 236100                    LDQ     2,,PR3
         1 022117   000777 376007                    ANQ     511,DL
         1 022120   200017 756100                    STQ     KEYCNT,,AUTO

     6096    12769    2          CRECX=F$DCB.CRECX;

  12769  1 022121   100067 236100                    LDQ     55,,PR1
         1 022122   777777 376007                    ANQ     -1,DL
         1 022123   200015 756100                    STQ     CRECX,,AUTO

     6097    12770    2          ORG=0;

  12770  1 022124   200022 450100                    STZ     ORG,,AUTO

     6098    12771    2          SEGX=F$DCB.SEGX;

  12771  1 022125   100100 236100                    LDQ     64,,PR1
         1 022126   777777 376007                    ANQ     -1,DL
         1 022127   200013 756100                    STQ     SEGX,,AUTO

     6099    12772    2          INDEX#=0;

  12772  1 022130   200011 450100                    STZ     INDEX#,,AUTO

     6100    12773    2          ALTKEY$=ADDR(NIL);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:965  

  12773  1 022131   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 022132   200023 756100                    STQ     ALTKEY$,,AUTO

     6101    12774    2          ANEWSEG=%NOO;

  12774  1 022133   200057 450100                    STZ     ANEWSEG,,AUTO

     6102    12775    2          RETURN;

  12775  1 022134   000001 702211                    TSX2  ! 1,X1

     6103    12776    2          END SETUP;
     6104    12777               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:966  
     6105    12778        /*I*     NAME:     SETUP_ALTKEY
     6106    12779                 PURPOSE:  To change indexes on indexed files
     6107    12780                 DESCRIPTION:
     6108    12781                      If the index specified was 0, then that means to use the same
     6109    12782                 index that was used last time.
     6110    12783
     6111    12784                      Otherwise, if the index changed, then there is a lot that has
     6112    12785                 to be reinitialized.  First of all, check for the index being legal.
     6113    12786                 If the ALTBLD flag is set and this isn't a primary, or UNIQUE index,
     6114    12787                 then the index is not complete.
     6115    12788
     6116    12789                      Next, we stash away our current position in the ALTKEYS
     6117    12790                 structure.  Then, we reset the index, and restore the position
     6118    12791                 from the last time this index was used.
     6119    12792        */
     6120    12793                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:967  
     6121    12794    1   SETUP_ALTKEY: PROC ALTRET;

  12794  1 022135   200126 741300       SETUP_ALTKEY STX1  ! DISP,,AUTO

     6122    12795    2          DCL I SBIN;
     6123    12796        /* */
     6124    12797    2          ALTKEY$=PINCRW(B$ROSEG$, F$DCB.ALTKEYX);

  12797  1 022136   200007 470500                    LDP0    JDCB$,,AUTO
         1 022137   000052 720100                    LXL0    42,,PR0
         1 022140   000000 636010                    EAQ     0,X0
         1 022141   000000 036000 xsym               ADLQ    B$ROSEG$
         1 022142   200023 756100                    STQ     ALTKEY$,,AUTO

     6125    12798
     6126    12799    2          IF INDEX# = 0 THEN

  12799  1 022143   200011 235100                    LDA     INDEX#,,AUTO
         1 022144   022152 601000 1                  TNZ     s:12802

     6127    12800    2             INDEX#=F$DCB.INDX-1;

  12800  1 022145   000077 236100                    LDQ     63,,PR0
         1 022146   000022 772000                    QRL     18
         1 022147   000001 136007                    SBLQ    1,DL
         1 022150   200011 756100                    STQ     INDEX#,,AUTO
         1 022151   022366 710000 1                  TRA     s:12859

     6128    12801    2          ELSE
     6129    12802    2             IF INDEX# ~= F$DCB.INDX THEN

  12802  1 022152   000077 236100                    LDQ     63,,PR0
         1 022153   000022 772000                    QRL     18
         1 022154   200011 116100                    CMPQ    INDEX#,,AUTO
         1 022155   022364 600000 1                  TZE     s:12857

     6130    12803    3                DO;   /* CHANGE INDEX */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:968  

     6131    12804    3                IF ALTKEYS.NUMENTS < INDEX# OR

  12804  1 022156   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 022157   100000 236100                    LDQ     0,,PR1
         1 022160   000022 772000                    QRL     18
         1 022161   000377 376007                    ANQ     255,DL
         1 022162   200011 116100                    CMPQ    INDEX#,,AUTO
         1 022163   022171 602000 1                  TNC     s:12807
         1 022164   200011 236100                    LDQ     INDEX#,,AUTO
         1 022165   000006 402007                    MPY     6,DL
         1 022166   177773 236106                    LDQ     -5,QL,PR1
         1 022167   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 022170   022176 601000 1                  TNZ     s:12814

     6132    12805    3                   ALTKEYS.K.FDA(INDEX#-1) = 0 THEN
     6133    12806    4                   DO;   /* ERROR */

     6134    12807    4                   B$JIT.ERR=ERRNOSUCHINDX;

  12807  1 022171   000022 236000 0                  LDQ     ERRNOSUCHINDX
         1 022172   000000 473400 xsym               LDP3    B$JIT$
         1 022173   300012 756100                    STQ     10,,PR3

     6135    12808        /*E*   ERROR:      FMG-E$NOSUCHINDX-2
     6136    12809               MESSAGE: Indexed or IREL file %%UF %does not have the specified index.
     6137    12810        */
     6138    12811    4                   ALTRETURN;

  12811  1 022174   200126 221300                    LDX1  ! DISP,,AUTO
         1 022175   000000 702211                    TSX2  ! 0,X1

     6139    12812    4                   END;  /* ERROR */
     6140    12813
     6141    12814    3                IF F$DCB.UNIQUEBLD OR

  12814  1 022176   000103 236100                    LDQ     67,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:969  
         1 022177   002000 316007                    CANQ    1024,DL
         1 022200   022215 601000 1                  TNZ     s:12818
         1 022201   200010 473500                    LDP3    CFU$,,AUTO
         1 022202   300006 236100                    LDQ     6,,PR3
         1 022203   000004 316003                    CANQ    4,DU
         1 022204   022222 600000 1                  TZE     s:12827
         1 022205   200011 235100                    LDA     INDEX#,,AUTO
         1 022206   000001 115007                    CMPA    1,DL
         1 022207   022222 600000 1                  TZE     s:12827
         1 022210   200011 236100                    LDQ     INDEX#,,AUTO
         1 022211   000006 402007                    MPY     6,DL
         1 022212   177776 236106                    LDQ     -2,QL,PR1
         1 022213   000400 316003                    CANQ    256,DU
         1 022214   022222 601000 1                  TNZ     s:12827

     6142    12815    3                   (FM$CFU.ALTBLD AND
     6143    12816    3                   (INDEX# ~= 1 AND (NOT ALTKEYS.K.UNIQUE(INDEX#-1)))) THEN
     6144    12817    4                   DO;   /* ANOTHER ERROR */

     6145    12818    4                   B$JIT.ERR=ERRNOALT;

  12818  1 022215   000026 236000 0                  LDQ     ERRNOALT
         1 022216   000000 473400 xsym               LDP3    B$JIT$
         1 022217   300012 756100                    STQ     10,,PR3

     6146    12819        /*E*   ERROR:      FMG-E$NOALT-2
     6147    12820               MESSAGE: Specified alternate index is incomplete.
     6148    12821               MESSAGE1: The alternate indexes must be rebuilt before
     6149    12822                         they can be accessed.
     6150    12823        */
     6151    12824    4                   ALTRETURN;

  12824  1 022220   200126 221300                    LDX1  ! DISP,,AUTO
         1 022221   000000 702211                    TSX2  ! 0,X1

     6152    12825    4                   END;  /* ANOTHER ERROR */
     6153    12826
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:970  
     6154    12827    3                CALL FMD$FLSHBUF(1);

  12827  1 022222   000001 630400 2                  EPPR0   1
         1 022223   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 022224   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 022225   000000 011000                    NOP     0

     6155    12828    3                I=F$DCB.INDX-1;

  12828  1 022226   200007 470500                    LDP0    JDCB$,,AUTO
         1 022227   000077 236100                    LDQ     63,,PR0
         1 022230   000022 772000                    QRL     18
         1 022231   000001 136007                    SBLQ    1,DL
         1 022232   200127 756100                    STQ     I,,AUTO

     6156    12829    3                ALTKEYS.K.RPOS(I)=F$DCB.RPOS;

  12829  1 022233   000006 402007                    MPY     6,DL
         1 022234   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 022235   000000 620006                    EAX0    0,QL
         1 022236   000064 236100                    LDQ     52,,PR0
         1 022237   000015 736000                    QLS     13
         1 022240   100004 676110                    ERQ     4,X0,PR1
         1 022241   000200 376003                    ANQ     128,DU
         1 022242   100004 656110                    ERSQ    4,X0,PR1

     6157    12830    3                ALTKEYS.K.CRECX(I)=F$DCB.CRECX;

  12830  1 022243   000067 721100                    LXL1    55,,PR0
         1 022244   100005 741110                    STX1    5,X0,PR1

     6158    12831    3                ALTKEYS.K.SEGX(I)=F$DCB.SEGX;

  12831  1 022245   000100 722100                    LXL2    64,,PR0
         1 022246   100005 442110                    SXL2    5,X0,PR1

     6159    12832    3                ALTKEYS.K.CDA(I)=F$DCB.BFR.DA(1);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:971  

  12832  1 022247   000116 236100                    LDQ     78,,PR0
         1 022250   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 022251   100006 756110                    STQ     6,X0,PR1

     6160    12833    3                F$DCB.INDX=INDEX#;

  12833  1 022252   200011 721100                    LXL1    INDEX#,,AUTO
         1 022253   000077 741100                    STX1    63,,PR0

     6161    12834
     6162    12835    3                INDEX#=INDEX#-1;

  12835  1 022254   200011 235100                    LDA     INDEX#,,AUTO
         1 022255   000001 135007                    SBLA    1,DL
         1 022256   200011 755100                    STA     INDEX#,,AUTO

     6163    12836    3                EOP=0;

  12836  1 022257   200036 450100                    STZ     EOP,,AUTO

     6164    12837    3                F$DCB.RPOS=ALTKEYS.K.RPOS(INDEX#);

  12837  1 022260   200011 236100                    LDQ     INDEX#,,AUTO
         1 022261   000006 402007                    MPY     6,DL
         1 022262   100004 236106                    LDQ     4,QL,PR1
         1 022263   000015 772000                    QRL     13
         1 022264   000064 676100                    ERQ     52,,PR0
         1 022265   010000 376007                    ANQ     4096,DL
         1 022266   000064 656100                    ERSQ    52,,PR0

     6165    12838    3                F$DCB.CRECX=ALTKEYS.K.CRECX(INDEX#);

  12838  1 022267   200011 236100                    LDQ     INDEX#,,AUTO
         1 022270   000006 402007                    MPY     6,DL
         1 022271   100005 222106                    LDX2    5,QL,PR1
         1 022272   000067 442100                    SXL2    55,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:972  

     6166    12839    3                F$DCB.KEYL=ALTKEYS.K.KEYL(INDEX#);

  12839  1 022273   100001 236106                    LDQ     1,QL,PR1
         1 022274   000022 772000                    QRL     18
         1 022275   000036 552110                    STBQ    30,'10'O,PR0

     6167    12840    3                F$DCB.KEYX=ALTKEYS.K.KEYX(INDEX#);

  12840  1 022276   200011 236100                    LDQ     INDEX#,,AUTO
         1 022277   000006 402007                    MPY     6,DL
         1 022300   100003 723106                    LXL3    3,QL,PR1
         1 022301   000036 743100                    STX3    30,,PR0

     6168    12841    3                KEYIN_SIZE=F$DCB.KEYL;

  12841  1 022302   000036 236100                    LDQ     30,,PR0
         1 022303   000011 772000                    QRL     9
         1 022304   000777 376007                    ANQ     511,DL
         1 022305   200056 756100                    STQ     KEYIN_SIZE,,AUTO

     6169    12842    3                CRECX=F$DCB.CRECX;

  12842  1 022306   000067 236100                    LDQ     55,,PR0
         1 022307   777777 376007                    ANQ     -1,DL
         1 022310   200015 756100                    STQ     CRECX,,AUTO

     6170    12843    3                F$DCB.SEGX=ALTKEYS.K.SEGX(INDEX#);

  12843  1 022311   200011 236100                    LDQ     INDEX#,,AUTO
         1 022312   000006 402007                    MPY     6,DL
         1 022313   100005 724106                    LXL4    5,QL,PR1
         1 022314   000100 444100                    SXL4    64,,PR0

     6171    12844    3                SEGX=F$DCB.SEGX;

  12844  1 022315   000100 236100                    LDQ     64,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:973  
         1 022316   777777 376007                    ANQ     -1,DL
         1 022317   200013 756100                    STQ     SEGX,,AUTO

     6172    12845    3                F$DCB.BFR.DA(1)=ALTKEYS.K.CDA(INDEX#);

  12845  1 022320   200011 236100                    LDQ     INDEX#,,AUTO
         1 022321   000006 402007                    MPY     6,DL
         1 022322   100006 236106                    LDQ     6,QL,PR1
         1 022323   000116 552134                    STBQ    78,'34'O,PR0

     6173    12846    3                F$DCB.TDA=0;

  12846  1 022324   000000 236003                    LDQ     0,DU
         1 022325   000070 552134                    STBQ    56,'34'O,PR0

     6174    12847    3                IF ALTKEYS.K.TDA(INDEX#) ~= 0 THEN

  12847  1 022326   200011 236100                    LDQ     INDEX#,,AUTO
         1 022327   000006 402007                    MPY     6,DL
         1 022330   100002 235106                    LDA     2,QL,PR1
         1 022331   100003 236106                    LDQ     3,QL,PR1
         1 022332   000022 773000                    LRL     18
         1 022333   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 022334   000000 116003                    CMPQ    0,DU
         1 022335   022366 600000 1                  TZE     s:12859

     6175    12848    4                   DO;   /* SET UP TDA */

     6176    12849    4                   F$DCB.TDA=ALTKEYS.K.TDA(INDEX#);

  12849  1 022336   200011 236100                    LDQ     INDEX#,,AUTO
         1 022337   000006 402007                    MPY     6,DL
         1 022340   100002 235106                    LDA     2,QL,PR1
         1 022341   100003 236106                    LDQ     3,QL,PR1
         1 022342   000022 773000                    LRL     18
         1 022343   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 022344   000070 552134                    STBQ    56,'34'O,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:974  

     6177    12850    4                   F$DCB.TDALVL=ALTKEYS.K.TDALVL(INDEX#);

  12850  1 022345   200011 236100                    LDQ     INDEX#,,AUTO
         1 022346   000006 402007                    MPY     6,DL
         1 022347   100004 236106                    LDQ     4,QL,PR1
         1 022350   000006 736000                    QLS     6
         1 022351   000067 676100                    ERQ     55,,PR0
         1 022352   700000 376003                    ANQ     -32768,DU
         1 022353   000067 656100                    ERSQ    55,,PR0

     6178    12851    4                   CALL FMD$FLSHBUF(2);

  12851  1 022354   000046 630400 2                  EPPR0   38
         1 022355   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 022356   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 022357   000000 011000                    NOP     0

     6179    12852    4                   F$DCB.BFR.DA(2)=F$DCB.TDA;

  12852  1 022360   200007 470500                    LDP0    JDCB$,,AUTO
         1 022361   000070 236100                    LDQ     56,,PR0
         1 022362   000117 552134                    STBQ    79,'34'O,PR0

     6180    12853    4                   END;  /* SET UP TDA */

     6181    12854
     6182    12855    3                END;  /* CHANGE INDEX */

  12855  1 022363   022366 710000 1                  TRA     s:12859

     6183    12856    2             ELSE
     6184    12857    2                INDEX#=INDEX#-1;

  12857  1 022364   000001 135007                    SBLA    1,DL
         1 022365   200011 755100                    STA     INDEX#,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:975  
     6185    12858
     6186    12859    2          RETURN;

  12859  1 022366   200126 221300                    LDX1  ! DISP,,AUTO
         1 022367   000001 702211                    TSX2  ! 1,X1

     6187    12860    2          END SETUP_ALTKEY;
     6188    12861               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:976  
     6189    12862        /*I*     NAME:     SETUP_IRKEY
     6190    12863                 PURPOSE:  To change indexes for an irel file
     6191    12864                 DESCRIPTION:
     6192    12865                      If the index specified was 0, then that means to use the
     6193    12866                 same index that was used last time.  Otherwise, if the index
     6194    12867                 changed, then reinitialize some stuff.  Make sure that this index
     6195    12868                 is legal.  Also, if ALTBLD is set, and this isn't the primary index,
     6196    12869                 or a unique index, then that means that the index needs to be
     6197    12870                 rebuilt.
     6198    12871
     6199    12872                      Stash away our current position.  Then reset the index, and
     6200    12873                 restore our old position.  F$DCB.KEYX is always 0 since the
     6201    12874                 key is spread across the record in random places.
     6202    12875        */
     6203    12876                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:977  
     6204    12877    1   SETUP_IRKEY: PROC ALTRET;

  12877  1 022370   200126 741300       SETUP_IRKEY  STX1  ! DISP,,AUTO

     6205    12878    2          DCL I SBIN;
     6206    12879        /* */
     6207    12880    2          ALTKEY$=PINCRW(B$ROSEG$, F$DCB.ALTKEYX);

  12880  1 022371   200007 470500                    LDP0    JDCB$,,AUTO
         1 022372   000052 720100                    LXL0    42,,PR0
         1 022373   000000 636010                    EAQ     0,X0
         1 022374   000000 036000 xsym               ADLQ    B$ROSEG$
         1 022375   200023 756100                    STQ     ALTKEY$,,AUTO

     6208    12881
     6209    12882    2          IF INDEX# = 0 THEN

  12882  1 022376   200011 235100                    LDA     INDEX#,,AUTO
         1 022377   022405 601000 1                  TNZ     s:12885

     6210    12883    2             INDEX#=F$DCB.INDX-1;

  12883  1 022400   000077 236100                    LDQ     63,,PR0
         1 022401   000022 772000                    QRL     18
         1 022402   000001 136007                    SBLQ    1,DL
         1 022403   200011 756100                    STQ     INDEX#,,AUTO
         1 022404   022610 710000 1                  TRA     s:12934

     6211    12884    2          ELSE
     6212    12885    2             IF INDEX# ~= F$DCB.INDX THEN

  12885  1 022405   000077 236100                    LDQ     63,,PR0
         1 022406   000022 772000                    QRL     18
         1 022407   200011 116100                    CMPQ    INDEX#,,AUTO
         1 022410   022606 600000 1                  TZE     s:12932

     6213    12886    3                DO;   /* CHANGE INDEX */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:978  

     6214    12887    3                IF IRKEYS.NKEYS < INDEX# OR

  12887  1 022411   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 022412   100000 236100                    LDQ     0,,PR1
         1 022413   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 022414   200011 116100                    CMPQ    INDEX#,,AUTO
         1 022415   022423 602000 1                  TNC     s:12890
         1 022416   200011 236100                    LDQ     INDEX#,,AUTO
         1 022417   000007 402007                    MPY     7,DL
         1 022420   100000 236106                    LDQ     0,QL,PR1
         1 022421   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 022422   022430 601000 1                  TNZ     s:12894

     6215    12888    3                   IRKEYS.K.FDA(INDEX#-1) = 0 THEN
     6216    12889    4                   DO;   /* NO SUCH INDEX */

     6217    12890    4                   B$JIT.ERR=ERRNOSUCHINDX;

  12890  1 022423   000022 236000 0                  LDQ     ERRNOSUCHINDX
         1 022424   000000 473400 xsym               LDP3    B$JIT$
         1 022425   300012 756100                    STQ     10,,PR3

     6218    12891    4                   ALTRETURN;

  12891  1 022426   200126 221300                    LDX1  ! DISP,,AUTO
         1 022427   000000 702211                    TSX2  ! 0,X1

     6219    12892    4                   END;  /* NO SUCH INDEX */
     6220    12893
     6221    12894    3                IF F$DCB.UNIQUEBLD OR

  12894  1 022430   000103 236100                    LDQ     67,,PR0
         1 022431   002000 316007                    CANQ    1024,DL
         1 022432   022447 601000 1                  TNZ     s:12898
         1 022433   200010 473500                    LDP3    CFU$,,AUTO
         1 022434   300006 236100                    LDQ     6,,PR3
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:979  
         1 022435   000004 316003                    CANQ    4,DU
         1 022436   022454 600000 1                  TZE     s:12902
         1 022437   200011 235100                    LDA     INDEX#,,AUTO
         1 022440   000001 115007                    CMPA    1,DL
         1 022441   022454 600000 1                  TZE     s:12902
         1 022442   200011 236100                    LDQ     INDEX#,,AUTO
         1 022443   000007 402007                    MPY     7,DL
         1 022444   177777 236106                    LDQ     -1,QL,PR1
         1 022445   400000 316007                    CANQ    -131072,DL
         1 022446   022454 601000 1                  TNZ     s:12902

     6222    12895    3                   (FM$CFU.ALTBLD AND
     6223    12896    3                   (INDEX# ~= 1 AND (NOT IRKEYS.K.UNIQUE(INDEX#-1)))) THEN
     6224    12897    4                   DO;   /* NEEDS REBUILDING */

     6225    12898    4                   B$JIT.ERR=ERRNOALT;

  12898  1 022447   000026 236000 0                  LDQ     ERRNOALT
         1 022450   000000 473400 xsym               LDP3    B$JIT$
         1 022451   300012 756100                    STQ     10,,PR3

     6226    12899    4                   ALTRETURN;

  12899  1 022452   200126 221300                    LDX1  ! DISP,,AUTO
         1 022453   000000 702211                    TSX2  ! 0,X1

     6227    12900    4                   END;  /* NEEDS REBUILDING */
     6228    12901
     6229    12902    3                CALL FMD$FLSHBUF(1);

  12902  1 022454   000001 630400 2                  EPPR0   1
         1 022455   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 022456   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 022457   000000 011000                    NOP     0

     6230    12903    3                I=F$DCB.INDX-1;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:980  
  12903  1 022460   200007 470500                    LDP0    JDCB$,,AUTO
         1 022461   000077 236100                    LDQ     63,,PR0
         1 022462   000022 772000                    QRL     18
         1 022463   000001 136007                    SBLQ    1,DL
         1 022464   200127 756100                    STQ     I,,AUTO

     6231    12904    3                IRKEYS.K.RPOS(I)=F$DCB.RPOS;

  12904  1 022465   000007 402007                    MPY     7,DL
         1 022466   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 022467   000000 620006                    EAX0    0,QL
         1 022470   000064 236100                    LDQ     52,,PR0
         1 022471   000004 736000                    QLS     4
         1 022472   100006 676110                    ERQ     6,X0,PR1
         1 022473   200000 376007                    ANQ     65536,DL
         1 022474   100006 656110                    ERSQ    6,X0,PR1

     6232    12905    3                IRKEYS.K.CRECX(I)=F$DCB.CRECX;

  12905  1 022475   000067 721100                    LXL1    55,,PR0
         1 022476   100006 741110                    STX1    6,X0,PR1

     6233    12906    3                IRKEYS.K.SEGX(I)=F$DCB.SEGX;

  12906  1 022477   000100 722100                    LXL2    64,,PR0
         1 022500   100005 442110                    SXL2    5,X0,PR1

     6234    12907    3                IRKEYS.K.CDA(I)=F$DCB.BFR.DA(1);

  12907  1 022501   000116 236100                    LDQ     78,,PR0
         1 022502   100010 676110                    ERQ     8,X0,PR1
         1 022503   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 022504   100010 656110                    ERSQ    8,X0,PR1

     6235    12908    3                F$DCB.INDX=INDEX#;

  12908  1 022505   200011 721100                    LXL1    INDEX#,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:981  
         1 022506   000077 741100                    STX1    63,,PR0

     6236    12909
     6237    12910    3                INDEX#=INDEX#-1;

  12910  1 022507   200011 235100                    LDA     INDEX#,,AUTO
         1 022510   000001 135007                    SBLA    1,DL
         1 022511   200011 755100                    STA     INDEX#,,AUTO

     6238    12911    3                EOP=0;

  12911  1 022512   200036 450100                    STZ     EOP,,AUTO

     6239    12912    3                F$DCB.RPOS=IRKEYS.K.RPOS(INDEX#);

  12912  1 022513   200011 236100                    LDQ     INDEX#,,AUTO
         1 022514   000007 402007                    MPY     7,DL
         1 022515   100006 236106                    LDQ     6,QL,PR1
         1 022516   000004 772000                    QRL     4
         1 022517   000064 676100                    ERQ     52,,PR0
         1 022520   010000 376007                    ANQ     4096,DL
         1 022521   000064 656100                    ERSQ    52,,PR0

     6240    12913    3                F$DCB.CRECX=IRKEYS.K.CRECX(INDEX#);

  12913  1 022522   200011 236100                    LDQ     INDEX#,,AUTO
         1 022523   000007 402007                    MPY     7,DL
         1 022524   100006 222106                    LDX2    6,QL,PR1
         1 022525   000067 442100                    SXL2    55,,PR0

     6241    12914    3                F$DCB.KEYL=IRKEYS.K.KEYL(INDEX#);

  12914  1 022526   100005 236106                    LDQ     5,QL,PR1
         1 022527   000011 772000                    QRL     9
         1 022530   000036 552110                    STBQ    30,'10'O,PR0

     6242    12915    3                KEYIN_SIZE=IRKEYS.K.KEYL(INDEX#);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:982  

  12915  1 022531   200011 236100                    LDQ     INDEX#,,AUTO
         1 022532   000007 402007                    MPY     7,DL
         1 022533   100005 236106                    LDQ     5,QL,PR1
         1 022534   000022 772000                    QRL     18
         1 022535   200056 756100                    STQ     KEYIN_SIZE,,AUTO

     6243    12916    3                F$DCB.KEYX=0;

  12916  1 022536   000000 223003                    LDX3    0,DU
         1 022537   000036 743100                    STX3    30,,PR0

     6244    12917    3                F$DCB.SEGX=IRKEYS.K.SEGX(INDEX#);

  12917  1 022540   200011 236100                    LDQ     INDEX#,,AUTO
         1 022541   000007 402007                    MPY     7,DL
         1 022542   100005 724106                    LXL4    5,QL,PR1
         1 022543   000100 444100                    SXL4    64,,PR0

     6245    12918    3                SEGX=F$DCB.SEGX;

  12918  1 022544   000100 236100                    LDQ     64,,PR0
         1 022545   777777 376007                    ANQ     -1,DL
         1 022546   200013 756100                    STQ     SEGX,,AUTO

     6246    12919    3                F$DCB.BFR.DA(1)=IRKEYS.K.CDA(INDEX#);

  12919  1 022547   200011 236100                    LDQ     INDEX#,,AUTO
         1 022550   000007 402007                    MPY     7,DL
         1 022551   100010 236106                    LDQ     8,QL,PR1
         1 022552   000116 552134                    STBQ    78,'34'O,PR0

     6247    12920    3                IF IRKEYS.K.TDA(INDEX#) ~= 0 THEN

  12920  1 022553   200011 236100                    LDQ     INDEX#,,AUTO
         1 022554   000007 402007                    MPY     7,DL
         1 022555   100003 236106                    LDQ     3,QL,PR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:983  
         1 022556   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 022557   022603 600000 1                  TZE     s:12928

     6248    12921    4                   DO;   /* SET UP TDA */

     6249    12922    4                   F$DCB.TDA=IRKEYS.K.TDA(INDEX#);

  12922  1 022560   200011 236100                    LDQ     INDEX#,,AUTO
         1 022561   000007 402007                    MPY     7,DL
         1 022562   100003 236106                    LDQ     3,QL,PR1
         1 022563   000070 552134                    STBQ    56,'34'O,PR0

     6250    12923    4                   F$DCB.TDALVL=IRKEYS.K.TDALVL(INDEX#);

  12923  1 022564   200011 236100                    LDQ     INDEX#,,AUTO
         1 022565   000007 402007                    MPY     7,DL
         1 022566   100003 236106                    LDQ     3,QL,PR1
         1 022567   000006 736000                    QLS     6
         1 022570   000067 676100                    ERQ     55,,PR0
         1 022571   700000 376003                    ANQ     -32768,DU
         1 022572   000067 656100                    ERSQ    55,,PR0

     6251    12924    4                   CALL FMD$FLSHBUF(2);

  12924  1 022573   000046 630400 2                  EPPR0   38
         1 022574   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 022575   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 022576   000000 011000                    NOP     0

     6252    12925    4                   F$DCB.BFR.DA(2)=F$DCB.TDA;

  12925  1 022577   200007 470500                    LDP0    JDCB$,,AUTO
         1 022600   000070 236100                    LDQ     56,,PR0
         1 022601   000117 552134                    STBQ    79,'34'O,PR0

     6253    12926    4                   END;  /* SET UP TDA */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:984  
  12926  1 022602   022610 710000 1                  TRA     s:12934

     6254    12927    3                ELSE
     6255    12928    3                   F$DCB.TDA=0;

  12928  1 022603   000000 236003                    LDQ     0,DU
         1 022604   000070 552134                    STBQ    56,'34'O,PR0

     6256    12929
     6257    12930    3                END;  /* CHANGE INDEX */

  12930  1 022605   022610 710000 1                  TRA     s:12934

     6258    12931    2             ELSE
     6259    12932    2                INDEX#=INDEX#-1;

  12932  1 022606   000001 135007                    SBLA    1,DL
         1 022607   200011 755100                    STA     INDEX#,,AUTO

     6260    12933
     6261    12934    2          RETURN;

  12934  1 022610   200126 221300                    LDX1  ! DISP,,AUTO
         1 022611   000001 702211                    TSX2  ! 1,X1

     6262    12935    2          END SETUP_IRKEY;
     6263    12936               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:985  
     6264    12937        /*I*     NAME:     SET_LEN
     6265    12938                 PURPOSE:  To set LEN
     6266    12939                 DESCRIPTION:
     6267    12940                      We have to pull the length of decimal fields from
     6268    12941                 RECFIELD.DECFIELD since they can have a scale factor. Packed
     6269    12942                 decimal fields will give length in nibbles. Unpacked fields
     6270    12943                 will give length in bytes. Otherwise, use RECFIELD.FIELD.
     6271    12944                 UBIN, SBIN, and UTS data types have lengths in bits, but
     6272    12945                 they must be byte aligned on both sides to qualify as keys,
     6273    12946                 so we can just figure their lengths in bytes. The others
     6274    12947                 (CHAR, SFLT, and DFLT) already have their lengths in bytes.
     6275    12948        */
     6276    12949    1   SET_LEN: PROC;

  12949  1 022612   200162 741300       SET_LEN      STX1  ! FIELDIN_TEMP+2,,AUTO

     6277    12950        /* */
     6278    12951    3          DO CASE(RECFIELD.FIELD.TYPE(FN));

  12951  1 022613   200064 236100                    LDQ     FN,,AUTO
         1 022614   000003 402007                    MPY     3,DL
         1 022615   200065 470500                    LDP0    RECFIELD$,,AUTO
         1 022616   000100 101506                    MRL     fill='000'O
         1 022617   000001 020001                    ADSC6   1,Q,PR0                  cn=0,n=1
         1 022620   200166 020003                    ADSC6   STEMP_FIELDIN+2,,AUTO    cn=0,n=3
         1 022621   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 022622   000072 100003                    CMPX0   58,DU
         1 022623   022625 602010 1                  TNC     s:12951+10,X0
         1 022624   022732 710000 1                  TRA     s:12963
         1 022625   022732 710000 1                  TRA     s:12963
         1 022626   022723 710000 1                  TRA     s:12960
         1 022627   022732 710000 1                  TRA     s:12963
         1 022630   022732 710000 1                  TRA     s:12963
         1 022631   022732 710000 1                  TRA     s:12963
         1 022632   022732 710000 1                  TRA     s:12963
         1 022633   022732 710000 1                  TRA     s:12963
         1 022634   022732 710000 1                  TRA     s:12963
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:986  
         1 022635   022732 710000 1                  TRA     s:12963
         1 022636   022717 710000 1                  TRA     s:12957
         1 022637   022717 710000 1                  TRA     s:12957
         1 022640   022732 710000 1                  TRA     s:12963
         1 022641   022732 710000 1                  TRA     s:12963
         1 022642   022732 710000 1                  TRA     s:12963
         1 022643   022732 710000 1                  TRA     s:12963
         1 022644   022732 710000 1                  TRA     s:12963
         1 022645   022732 710000 1                  TRA     s:12963
         1 022646   022732 710000 1                  TRA     s:12963
         1 022647   022732 710000 1                  TRA     s:12963
         1 022650   022732 710000 1                  TRA     s:12963
         1 022651   022732 710000 1                  TRA     s:12963
         1 022652   022732 710000 1                  TRA     s:12963
         1 022653   022732 710000 1                  TRA     s:12963
         1 022654   022732 710000 1                  TRA     s:12963
         1 022655   022723 710000 1                  TRA     s:12960
         1 022656   022717 710000 1                  TRA     s:12957
         1 022657   022732 710000 1                  TRA     s:12963
         1 022660   022732 710000 1                  TRA     s:12963
         1 022661   022732 710000 1                  TRA     s:12963
         1 022662   022732 710000 1                  TRA     s:12963
         1 022663   022732 710000 1                  TRA     s:12963
         1 022664   022717 710000 1                  TRA     s:12957
         1 022665   022732 710000 1                  TRA     s:12963
         1 022666   022732 710000 1                  TRA     s:12963
         1 022667   022732 710000 1                  TRA     s:12963
         1 022670   022732 710000 1                  TRA     s:12963
         1 022671   022732 710000 1                  TRA     s:12963
         1 022672   022732 710000 1                  TRA     s:12963
         1 022673   022732 710000 1                  TRA     s:12963
         1 022674   022732 710000 1                  TRA     s:12963
         1 022675   022717 710000 1                  TRA     s:12957
         1 022676   022717 710000 1                  TRA     s:12957
         1 022677   022717 710000 1                  TRA     s:12957
         1 022700   022717 710000 1                  TRA     s:12957
         1 022701   022717 710000 1                  TRA     s:12957
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:987  
         1 022702   022717 710000 1                  TRA     s:12957
         1 022703   022732 710000 1                  TRA     s:12963
         1 022704   022732 710000 1                  TRA     s:12963
         1 022705   022732 710000 1                  TRA     s:12963
         1 022706   022732 710000 1                  TRA     s:12963
         1 022707   022717 710000 1                  TRA     s:12957
         1 022710   022717 710000 1                  TRA     s:12957
         1 022711   022732 710000 1                  TRA     s:12963
         1 022712   022732 710000 1                  TRA     s:12963
         1 022713   022717 710000 1                  TRA     s:12957
         1 022714   022723 710000 1                  TRA     s:12960
         1 022715   022732 710000 1                  TRA     s:12963
         1 022716   022717 710000 1                  TRA     s:12957

     6279    12952    3             CASE(%UDLS_DATATYPE, %UDTS_DATATYPE, %UDNS_DATATYPE,

     6280    12953    3                  %PDLA_DATATYPE, %PDTA_DATATYPE, %PDNS_DATATYPE,
     6281    12954    3                  %UDLO_DATATYPE, %UDTO_DATATYPE, %PDLE_DATATYPE,
     6282    12955    3                  %PDTE_DATATYPE, %PDFLT_DATATYPE, %UDFLT_DATATYPE,
     6283    12956    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     6284    12957    3                LEN=RECFIELD.DECFIELD.LEN(FN);

  12957  1 022717   000100 101506                    MRL     fill='000'O
         1 022720   000001 120001                    ADSC6   1,Q,PR0                  cn=1,n=1
         1 022721   200061 020006                    ADSC6   LEN,,AUTO                cn=0,n=6
         1 022722   022735 710000 1                  TRA     s:12966

     6285    12958
     6286    12959    3             CASE(%SBIN_DATATYPE, %UBIN_DATATYPE, %UTS_DATATYPE);

     6287    12960    3                LEN=RECFIELD.FIELD.LEN(FN)/9;

  12960  1 022723   000100 101506                    MRL     fill='000'O
         1 022724   000001 120002                    ADSC6   1,Q,PR0                  cn=1,n=2
         1 022725   200166 020006                    ADSC6   STEMP_FIELDIN+2,,AUTO    cn=0,n=6
         1 022726   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 022727   000011 506007                    DIV     9,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:988  
         1 022730   200061 756100                    STQ     LEN,,AUTO
         1 022731   022735 710000 1                  TRA     s:12966

     6288    12961
     6289    12962    3             CASE(ELSE);

     6290    12963    3                LEN=RECFIELD.FIELD.LEN(FN);

  12963  1 022732   000100 101506                    MRL     fill='000'O
         1 022733   000001 120002                    ADSC6   1,Q,PR0                  cn=1,n=2
         1 022734   200061 020006                    ADSC6   LEN,,AUTO                cn=0,n=6

     6291    12964
     6292    12965    3          END;  /* CASE */

     6293    12966    2          RETURN;

  12966  1 022735   000001 702211                    TSX2  ! 1,X1

     6294    12967    2          END SET_LEN;
     6295    12968               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:989  
     6296    12969        /*I*     NAME:     SET_SIZE
     6297    12970                 PURPOSE:  To get the size in bytes of a key field.
     6298    12971                 DESCRIPTION:
     6299    12972                 Packed decimal fields have lengths specified in nibbles.
     6300    12973                 Turn this into bytes, rounding up for odd lengths.  SBIN,
     6301    12974                 UBIN, and UTS fields have lengths in bits, but they must
     6302    12975                 have been an even number of bytes long to qualify as key
     6303    12976                 fields, so just divide by 9.  All other key fields have
     6304    12977                 lengths already in bytes.
     6305    12978        */
     6306    12979    1   SET_SIZE: PROC(SIZE);

  12979  1 022736   200154 741300       SET_SIZE     STX1  ! SIZE+1,,AUTO

     6307    12980        /* */
     6308    12981    2   DCL SIZE UBIN;
     6309    12982        /* */
     6310    12983    3          DO CASE(RECFIELD.FIELD.TYPE(FN));

  12983  1 022737   200064 236100                    LDQ     FN,,AUTO
         1 022740   000003 402007                    MPY     3,DL
         1 022741   200065 470500                    LDP0    RECFIELD$,,AUTO
         1 022742   000100 101506                    MRL     fill='000'O
         1 022743   000001 020001                    ADSC6   1,Q,PR0                  cn=0,n=1
         1 022744   200166 020003                    ADSC6   STEMP_FIELDIN+2,,AUTO    cn=0,n=3
         1 022745   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 022746   000072 100003                    CMPX0   58,DU
         1 022747   022751 602010 1                  TNC     s:12983+10,X0
         1 022750   023071 710000 1                  TRA     s:12997
         1 022751   023071 710000 1                  TRA     s:12997
         1 022752   023061 710000 1                  TRA     s:12994
         1 022753   023071 710000 1                  TRA     s:12997
         1 022754   023071 710000 1                  TRA     s:12997
         1 022755   023071 710000 1                  TRA     s:12997
         1 022756   023071 710000 1                  TRA     s:12997
         1 022757   023071 710000 1                  TRA     s:12997
         1 022760   023071 710000 1                  TRA     s:12997
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:990  
         1 022761   023071 710000 1                  TRA     s:12997
         1 022762   023043 710000 1                  TRA     s:12987
         1 022763   023043 710000 1                  TRA     s:12987
         1 022764   023071 710000 1                  TRA     s:12997
         1 022765   023071 710000 1                  TRA     s:12997
         1 022766   023071 710000 1                  TRA     s:12997
         1 022767   023071 710000 1                  TRA     s:12997
         1 022770   023071 710000 1                  TRA     s:12997
         1 022771   023071 710000 1                  TRA     s:12997
         1 022772   023071 710000 1                  TRA     s:12997
         1 022773   023071 710000 1                  TRA     s:12997
         1 022774   023071 710000 1                  TRA     s:12997
         1 022775   023071 710000 1                  TRA     s:12997
         1 022776   023071 710000 1                  TRA     s:12997
         1 022777   023071 710000 1                  TRA     s:12997
         1 023000   023071 710000 1                  TRA     s:12997
         1 023001   023061 710000 1                  TRA     s:12994
         1 023002   023043 710000 1                  TRA     s:12987
         1 023003   023071 710000 1                  TRA     s:12997
         1 023004   023071 710000 1                  TRA     s:12997
         1 023005   023071 710000 1                  TRA     s:12997
         1 023006   023071 710000 1                  TRA     s:12997
         1 023007   023071 710000 1                  TRA     s:12997
         1 023010   023043 710000 1                  TRA     s:12987
         1 023011   023071 710000 1                  TRA     s:12997
         1 023012   023071 710000 1                  TRA     s:12997
         1 023013   023071 710000 1                  TRA     s:12997
         1 023014   023071 710000 1                  TRA     s:12997
         1 023015   023071 710000 1                  TRA     s:12997
         1 023016   023071 710000 1                  TRA     s:12997
         1 023017   023071 710000 1                  TRA     s:12997
         1 023020   023071 710000 1                  TRA     s:12997
         1 023021   023043 710000 1                  TRA     s:12987
         1 023022   023054 710000 1                  TRA     s:12991
         1 023023   023054 710000 1                  TRA     s:12991
         1 023024   023054 710000 1                  TRA     s:12991
         1 023025   023054 710000 1                  TRA     s:12991
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:991  
         1 023026   023054 710000 1                  TRA     s:12991
         1 023027   023071 710000 1                  TRA     s:12997
         1 023030   023071 710000 1                  TRA     s:12997
         1 023031   023071 710000 1                  TRA     s:12997
         1 023032   023071 710000 1                  TRA     s:12997
         1 023033   023054 710000 1                  TRA     s:12991
         1 023034   023043 710000 1                  TRA     s:12987
         1 023035   023071 710000 1                  TRA     s:12997
         1 023036   023071 710000 1                  TRA     s:12997
         1 023037   023043 710000 1                  TRA     s:12987
         1 023040   023061 710000 1                  TRA     s:12994
         1 023041   023071 710000 1                  TRA     s:12997
         1 023042   023043 710000 1                  TRA     s:12987

     6311    12984    3             CASE(%PDLA_DATATYPE, %PDTA_DATATYPE, %PDLE_DATATYPE,

     6312    12985    3                  %PDTE_DATATYPE, %PDNS_DATATYPE, %PDFLT_DATATYPE,
     6313    12986    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     6314    12987    3                SIZE=(RECFIELD.DECFIELD.LEN(FN)+1)/2;

  12987  1 023043   000100 101506                    MRL     fill='000'O
         1 023044   000001 120001                    ADSC6   1,Q,PR0                  cn=1,n=1
         1 023045   200166 020006                    ADSC6   STEMP_FIELDIN+2,,AUTO    cn=0,n=6
         1 023046   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 023047   000001 036007                    ADLQ    1,DL
         1 023050   000001 772000                    QRL     1
         1 023051   200155 471500                    LDP1    @SIZE,,AUTO
         1 023052   100000 756100                    STQ     0,,PR1
         1 023053   023075 710000 1                  TRA     s:13001

     6315    12988
     6316    12989    3             CASE(%UDLS_DATATYPE, %UDTS_DATATYPE, %UDNS_DATATYPE,

     6317    12990    3                  %UDLO_DATATYPE, %UDTO_DATATYPE, %UDFLT_DATATYPE);
     6318    12991    3                SIZE=RECFIELD.DECFIELD.LEN(FN);

  12991  1 023054   200155 471500                    LDP1    @SIZE,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:992  
         1 023055   000100 101506                    MRL     fill='000'O
         1 023056   000001 120001                    ADSC6   1,Q,PR0                  cn=1,n=1
         1 023057   100000 020006                    ADSC6   0,,PR1                   cn=0,n=6
         1 023060   023075 710000 1                  TRA     s:13001

     6319    12992
     6320    12993    3             CASE(%UBIN_DATATYPE, %SBIN_DATATYPE, %UTS_DATATYPE);

     6321    12994    3                SIZE=RECFIELD.FIELD.LEN(FN)/9;

  12994  1 023061   000100 101506                    MRL     fill='000'O
         1 023062   000001 120002                    ADSC6   1,Q,PR0                  cn=1,n=2
         1 023063   200166 020006                    ADSC6   STEMP_FIELDIN+2,,AUTO    cn=0,n=6
         1 023064   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 023065   000011 506007                    DIV     9,DL
         1 023066   200155 471500                    LDP1    @SIZE,,AUTO
         1 023067   100000 756100                    STQ     0,,PR1
         1 023070   023075 710000 1                  TRA     s:13001

     6322    12995
     6323    12996    3             CASE(ELSE); /* CHAR, SFLT, DFLT */

     6324    12997    3                SIZE=RECFIELD.FIELD.LEN(FN);

  12997  1 023071   200155 471500                    LDP1    @SIZE,,AUTO
         1 023072   000100 101506                    MRL     fill='000'O
         1 023073   000001 120002                    ADSC6   1,Q,PR0                  cn=1,n=2
         1 023074   100000 020006                    ADSC6   0,,PR1                   cn=0,n=6

     6325    12998
     6326    12999    3             END; /* Case */

     6327    13000
     6328    13001    2          RETURN;

  13001  1 023075   200154 221300                    LDX1  ! SIZE+1,,AUTO
         1 023076   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:993  

     6329    13002    2          END SET_SIZE;
     6330    13003               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:994  
     6331    13004        /*I*     NAME:     SHAREPOS
     6332    13005                 PURPOSE:  To set up some local variables
     6333    13006                 DESCRIPTION:
     6334    13007                      First, make sure that we have the current index granule in
     6335    13008                 memory.  Then, set some local variables for quicker access.
     6336    13009
     6337    13010                      If the file is shared, then there is a chance that the
     6338    13011                 keys moved around.  If this is an alternate index, then
     6339    13012                 there is no way to restore the previous position with an
     6340    13013                 ID alone.  If a record was rewritten, then trying to find
     6341    13014                 the record by using an ID would position to where the
     6342    13015                 record was rewritten, not where we left off.  Otherwise,
     6343    13016                 first make sure that we point to a key in the granule.
     6344    13017                 Then, begin searching forward for the key that we used
     6345    13018                 to be at.                                                            */
     6346    13019                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:995  
     6347    13020    1   SHAREPOS: PROC ALTRET;

  13020  1 023077   200124 741300       SHAREPOS     STX1  ! TSIZE,,AUTO

     6348    13021    2            DCL RPOS BIT(1);
     6349    13022        /* */
     6350    13023    2          DA=F$DCB.BFR.DA(1);

  13023  1 023100   200007 470500                    LDP0    JDCB$,,AUTO
         1 023101   000116 236100                    LDQ     78,,PR0
         1 023102   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 023103   200021 756100                    STQ     DA,,AUTO

     6351    13024    2          F$DCB.LVL=0;

  13024  1 023104   000035 236000 2                  LDQ     29
         1 023105   000067 356100                    ANSQ    55,,PR0

     6352    13025    2          BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));

  13025  1 023106   000116 236100                    LDQ     78,,PR0
         1 023107   000033 772000                    QRL     27
         1 023110   000037 376007                    ANQ     31,DL
         1 023111   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 023112   200024 756100                    STQ     BUF$,,AUTO

     6353    13026    2          IF BUF$ = ADDR(NIL) THEN

  13026  1 023113   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 023114   023133 601000 1                  TNZ     s:13029

     6354    13027    2             CALL FMD$REDBUF(BUF$, 1, DA, 0, -1) ALTRET(ERR);

  13027  1 023115   000056 236000 2                  LDQ     46
         1 023116   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 023117   000000 236000 2                  LDQ     0
         1 023120   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:996  
         1 023121   200021 631500                    EPPR1   DA,,AUTO
         1 023122   200170 451500                    STP1    STEMP_FIELDIN+4,,AUTO
         1 023123   000001 236000 2                  LDQ     1
         1 023124   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 023125   200024 633500                    EPPR3   BUF$,,AUTO
         1 023126   200166 453500                    STP3    STEMP_FIELDIN+2,,AUTO
         1 023127   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 023130   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 023131   000000 701000 xent               TSX1    FMD$REDBUF
         1 023132   023306 702000 1                  TSX2    ERR

     6355    13028
     6356    13029    2          KEYCNT=FM$GRAN.KEYCNT;

  13029  1 023133   200024 470500                    LDP0    BUF$,,AUTO
         1 023134   000002 236100                    LDQ     2,,PR0
         1 023135   000777 376007                    ANQ     511,DL
         1 023136   200017 756100                    STQ     KEYCNT,,AUTO

     6357    13030    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

  13030  1 023137   000002 220100                    LDX0    2,,PR0
         1 023140   000000 636010                    EAQ     0,X0
         1 023141   200024 036100                    ADLQ    BUF$,,AUTO
         1 023142   200025 756100                    STQ     KTPTR$,,AUTO

     6358    13031    2          BOUND=FM$KEYTBL(0);

  13031  1 023143   200025 471500                    LDP1    KTPTR$,,AUTO
         1 023144   100000 236100                    LDQ     0,,PR1
         1 023145   000033 772000                    QRL     27
         1 023146   200016 756100                    STQ     BOUND,,AUTO

     6359    13032    2          CRECX=F$DCB.CRECX;

  13032  1 023147   200007 473500                    LDP3    JDCB$,,AUTO
         1 023150   300067 236100                    LDQ     55,,PR3
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:997  
         1 023151   777777 376007                    ANQ     -1,DL
         1 023152   200015 756100                    STQ     CRECX,,AUTO

     6360    13033    2          SEGX=F$DCB.SEGX;

  13033  1 023153   300100 236100                    LDQ     64,,PR3
         1 023154   777777 376007                    ANQ     -1,DL
         1 023155   200013 756100                    STQ     SEGX,,AUTO

     6361    13034    2          KEY$=ADDR(NIL);

  13034  1 023156   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 023157   200020 756100                    STQ     KEY$,,AUTO

     6362    13035    2          SEG$=ADDR(NIL);

  13035  1 023160   200014 756100                    STQ     SEG$,,AUTO

     6363    13036
     6364    13037    2          IF FM$CFU.SHARE = %ALL# THEN

  13037  1 023161   200010 474500                    LDP4    CFU$,,AUTO
         1 023162   400000 236100                    LDQ     0,,PR4
         1 023163   060000 376003                    ANQ     24576,DU
         1 023164   020000 116003                    CMPQ    8192,DU
         1 023165   023304 601000 1                  TNZ     s:13085

     6365    13038    3             DO;   /* RESTORE POSITION */

     6366    13039                  /* WRNOKEY does call SHAREPOS, but it's only used when
     6367    13040                     ORG=KEYED, so INDEX# is always 0. Any other type of write
     6368    13041                     always specifies a key, either directly or from the
     6369    13042                     user's record buffer, so we don't want to error our
     6370    13043                     internal alt key operations for those.                */
     6371    13044    3             IF INDEX# > 0 AND FPTCODE ~= FPTWRITE THEN

  13044  1 023166   200011 235100                    LDA     INDEX#,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:998  
         1 023167   023201 600000 1                  TZE     s:13055
         1 023170   200003 475500                    LDP5    @PSEG$,,AUTO
         1 023171   500000 235100                    LDA     0,,PR5
         1 023172   000001 115007                    CMPA    1,DL
         1 023173   023201 600000 1                  TZE     s:13055

     6372    13045    4                DO;   /* CANT RESTORE ON ALTERNATE INDEXES */

     6373    13046    4                B$JIT.ERR=ERRNOALTKEY;

  13046  1 023174   000033 236000 0                  LDQ     ERRNOALTKEY
         1 023175   000000 476400 xsym               LDP6    B$JIT$
         1 023176   600012 756100                    STQ     10,,PR6

     6374    13047    4                ALTRETURN;

  13047  1 023177   200124 221300                    LDX1  ! TSIZE,,AUTO
         1 023200   000000 702211                    TSX2  ! 0,X1

     6375    13048    4                END;  /* CANT RESTORE ON ALTERNATE INDEXES */
     6376    13049        /*E*   ERROR:   FMG-E$NOALTKEY-2
     6377    13050               MESSAGE: A key must be specified
     6378    13051               MESSAGE1: Operations on alternate indexes to a shared
     6379    13052                         file must specify a key.
     6380    13053        */
     6381    13054
     6382    13055    3             IF FM$CFU.MODCNT ~= F$DCB.MODCNT THEN

  13055  1 023201   300100 236100                    LDQ     64,,PR3
         1 023202   000022 772000                    QRL     18
         1 023203   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 023204   400006 236100                    LDQ     6,,PR4
         1 023205   000025 772000                    QRL     21
         1 023206   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 023207   023304 600000 1                  TZE     s:13085

     6383    13056    4                DO;   /* FIND POSITION */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:999  

     6384    13057    4                RPOS=F$DCB.RPOS;

  13057  1 023210   300064 236100                    LDQ     52,,PR3
         1 023211   000027 736000                    QLS     23
         1 023212   400000 376003                    ANQ     -131072,DU
         1 023213   200125 756100                    STQ     RPOS,,AUTO

     6385    13058    4                IF CRECX > KEYCNT THEN

  13058  1 023214   200015 236100                    LDQ     CRECX,,AUTO
         1 023215   023220 604000 1                  TMI     s:13060
         1 023216   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 023217   023227 604400 1                  TMOZ    s:13065

     6386    13059    5                   DO;   /* POSITION TO LAST KEY */

     6387    13060    5                   F$DCB.RPOS='1'B;

  13060  1 023220   010000 236007                    LDQ     4096,DL
         1 023221   300064 256100                    ORSQ    52,,PR3

     6388    13061    5                   CRECX=KEYCNT+1;

  13061  1 023222   200017 235100                    LDA     KEYCNT,,AUTO
         1 023223   000001 035007                    ADLA    1,DL
         1 023224   200015 755100                    STA     CRECX,,AUTO

     6389    13062    5                   F$DCB.CRECX=CRECX;

  13062  1 023225   000000 620005                    EAX0    0,AL
         1 023226   300067 440100                    SXL0    55,,PR3

     6390    13063    5                   END;  /* POSITION TO LAST KEY */

     6391    13064
     6392    13065    4                IF F$DCB.ID ~= '0'B THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1000 

  13065  1 023227   300107 235100                    LDA     71,,PR3
         1 023230   023276 600000 1                  TZE     s:13081

     6393    13066    5                   DO;   /* RESTORE POSITION */

     6394    13067    5                   IF F$DCB.ID.DA = 1 THEN

  13067  1 023231   300107 236100                    LDQ     71,,PR3
         1 023232   000020 376000 2                  ANQ     16
         1 023233   000001 116007                    CMPQ    1,DL
         1 023234   023240 601000 1                  TNZ     s:13071

     6395    13068    5                      CALL PTOEOF ALTRET(ERR);

  13068  1 023235   016454 701000 1                  TSX1    PTOEOF
         1 023236   023306 702000 1                  TSX2    ERR
         1 023237   023276 710000 1                  TRA     s:13081

     6396    13069    5                   ELSE
     6397    13070    6                      DO;   /* POSITION TO KEY */

     6398    13071    6                      IF CRECX = 1 AND FM$GRAN.BLINK = 0 THEN

  13071  1 023240   200015 235100                    LDA     CRECX,,AUTO
         1 023241   000001 115007                    CMPA    1,DL
         1 023242   023250 601000 1                  TNZ     s:13074
         1 023243   000003 235100                    LDA     3,,PR0
         1 023244   023250 601000 1                  TNZ     s:13074

     6399    13072    6                         CALL SETPTRS;

  13072  1 023245   022001 701000 1                  TSX1    SETPTRS
         1 023246   000000 011000                    NOP     0
         1 023247   023252 710000 1                  TRA     s:13075

     6400    13073    6                      ELSE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1001 
     6401    13074    6                         CALL CURKEY ALTRET(ERR);

  13074  1 023250   005060 701000 1                  TSX1    CURKEY
         1 023251   023306 702000 1                  TSX2    ERR

     6402    13075    7                      DO WHILE (F$DCB.ID.DA ~= FM$MISEG.GDA OR

  13075  1 023252   023255 710000 1                  TRA     s:13078

     6403    13076    7                                F$DCB.ID.GX ~= FM$MISEG.GX);
     6404    13077    7                         CALL NXTKEY ALTRET(ERR);

  13077  1 023253   015105 701000 1                  TSX1    NXTKEY
         1 023254   023306 702000 1                  TSX2    ERR

     6405    13078    7                      END;  /* WHILE */

  13078  1 023255   200014 470500                    LDP0    SEG$,,AUTO
         1 023256   000001 236100                    LDQ     1,,PR0
         1 023257   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 023260   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 023261   200007 471500                    LDP1    JDCB$,,AUTO
         1 023262   100107 236100                    LDQ     71,,PR1
         1 023263   000020 376000 2                  ANQ     16
         1 023264   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 023265   023253 601000 1                  TNZ     s:13077
         1 023266   000000 236100                    LDQ     0,,PR0
         1 023267   000014 772000                    QRL     12
         1 023270   001777 376007                    ANQ     1023,DL
         1 023271   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 023272   100107 236100                    LDQ     71,,PR1
         1 023273   000032 772000                    QRL     26
         1 023274   200167 116100                    CMPQ    STEMP_FIELDIN+3,,AUTO
         1 023275   023253 601000 1                  TNZ     s:13077

     6406    13079    6                      END;  /* POSITION TO KEY */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1002 
     6407    13080    5                   END;  /* RESTORE POSITION */

     6408    13081    4                F$DCB.RPOS=RPOS;

  13081  1 023276   200007 470500                    LDP0    JDCB$,,AUTO
         1 023277   200125 236100                    LDQ     RPOS,,AUTO
         1 023300   000027 772000                    QRL     23
         1 023301   000064 676100                    ERQ     52,,PR0
         1 023302   010000 376007                    ANQ     4096,DL
         1 023303   000064 656100                    ERSQ    52,,PR0

     6409    13082    4                END;  /* FIND POSITION */

     6410    13083    3             END;  /* RESTORE POSITION */

     6411    13084
     6412    13085    2          RETURN;

  13085  1 023304   200124 221300                    LDX1  ! TSIZE,,AUTO
         1 023305   000001 702211                    TSX2  ! 1,X1

     6413    13086    2   ERR:   ALTRETURN;

  13086  1 023306   200124 221300       ERR          LDX1  ! TSIZE,,AUTO
         1 023307   000000 702211                    TSX2  ! 0,X1

     6414    13087    2          END SHAREPOS;
     6415    13088               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1003 
     6416    13089        /*I*     NAME:     SLIDE
     6417    13090                 PURPOSE:  To make room in the current granule for a key
     6418    13091                           or segments
     6419    13092                 DESCRIPTION:
     6420    13093                      If this is a key, then the insertion point is the current
     6421    13094                 position.  If this is a segment, then the insertion point is at
     6422    13095                 the end of the key.  If we are adding a segment to a duplicate
     6423    13096                 record, then the insertion point will probably be in the middle
     6424    13097                 of a list of segments somewhere.
     6425    13098
     6426    13099                      TSIZE is the amount of space that needs to be moved. TOTSIZE
     6427    13100                 was set by the calling routine to be the number of words we need.
     6428    13101                 If this isn't at the end of the granule, then slide the stuff
     6429    13102                 back.  Now the key table has to be rebuilt.  First, adjust the
     6430    13103                 bound, if necessary, for the added key.  Then loop through
     6431    13104                 the key table, from the insertion point (INDX) to the end of
     6432    13105                 the key table.
     6433    13106
     6434    13107                      Now, set the space to all zeros.  If we are adding a key,
     6435    13108                 then we have to build the key.  If this is an irel file, then
     6436    13109                 we need to do a lot of work to build the key.  Otherwise,
     6437    13110                 set the key size and text.
     6438    13111
     6439    13112                      If this isn't a file (ie. file directory), then we have
     6440    13113                 to flush buffers 3 and 4, otherwise, they won't be flushed later
     6441    13114                 since they don't go through the normal file close.
     6442    13115        */
     6443    13116                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1004 
     6444    13117    1   SLIDE: PROC ALTRET;

  13117  1 023310   200130 741300       SLIDE        STX1  ! BUF3$,,AUTO

     6445    13118    2          DCL I$ PTR;
     6446    13119    2          DCL TSIZE SBIN;
     6447    13120    2          DCL I SBIN;
     6448    13121    2          DCL J SBIN;
     6449    13122    2          DCL SIZE SBIN;
     6450    13123    2          DCL CHARS CHAR(KEYIN_SIZE) BASED;
     6451    13124    2          DCL 1 ZAP BASED,
     6452    13125    2               2 * CHAR(SIZE);
     6453    13126    2          DCL 1 KEY BASED ALIGNED,
     6454    13127    2               2 SIZE UBIN(9) CALIGNED,
     6455    13128    2               2 TEXT CHAR(KEYIN_SIZE) CALIGNED;
     6456    13129        /* */
     6457    13130    2          IF ADDFLG = %KEY THEN

  13130  1 023311   200047 235100                    LDA     ADDFLG,,AUTO
         1 023312   023316 601000 1                  TNZ     s:13133

     6458    13131    2             INDX=CRECX;

  13131  1 023313   200015 236100                    LDQ     CRECX,,AUTO
         1 023314   200054 756100                    STQ     INDX,,AUTO
         1 023315   023321 710000 1                  TRA     s:13135

     6459    13132    2          ELSE
     6460    13133    2             INDX=CRECX+1;

  13133  1 023316   200015 236100                    LDQ     CRECX,,AUTO
         1 023317   000001 036007                    ADLQ    1,DL
         1 023320   200054 756100                    STQ     INDX,,AUTO

     6461    13134
     6462    13135    2          IF ANEWSEG = %YESS THEN

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1005 
  13135  1 023321   200057 235100                    LDA     ANEWSEG,,AUTO
         1 023322   000001 115007                    CMPA    1,DL
         1 023323   023327 601000 1                  TNZ     s:13139

     6463    13136    2             I$=SEG$;

  13136  1 023324   200014 236100                    LDQ     SEG$,,AUTO
         1 023325   200131 756100                    STQ     I$,,AUTO
         1 023326   023362 710000 1                  TRA     s:13148

     6464    13137    2          ELSE
     6465    13138    3             DO;   /* NORMAL INSERT */

     6466    13139    3             IF INDX > KEYCNT THEN

  13139  1 023327   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 023330   023337 604400 1                  TMOZ    s:13142

     6467    13140    3                I$=PINCRW(BUF$, FM$GRAN.NAVX);

  13140  1 023331   200024 470500                    LDP0    BUF$,,AUTO
         1 023332   000001 220100                    LDX0    1,,PR0
         1 023333   000000 636010                    EAQ     0,X0
         1 023334   200024 036100                    ADLQ    BUF$,,AUTO
         1 023335   200131 756100                    STQ     I$,,AUTO
         1 023336   023362 710000 1                  TRA     s:13148

     6468    13141    3             ELSE
     6469    13142    3                IF INDX < BOUND THEN

  13142  1 023337   200016 116100                    CMPQ    BOUND,,AUTO
         1 023340   023352 605000 1                  TPL     s:13145

     6470    13143    3                   I$=PINCRW(BUF$, FM$KEYTBL(INDX));

  13143  1 023341   200025 470500                    LDP0    KTPTR$,,AUTO
         1 023342   000100 101506                    MRL     fill='000'O
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1006 
         1 023343   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 023344   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 023345   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 023346   000000 636010                    EAQ     0,X0
         1 023347   200024 036100                    ADLQ    BUF$,,AUTO
         1 023350   200131 756100                    STQ     I$,,AUTO
         1 023351   023362 710000 1                  TRA     s:13148

     6471    13144    3                ELSE
     6472    13145    3                   I$=PINCRW(BUF$, FM$KEYTBL(INDX)+512);

  13145  1 023352   200025 470500                    LDP0    KTPTR$,,AUTO
         1 023353   000100 101506                    MRL     fill='000'O
         1 023354   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 023355   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 023356   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 023357   001000 636010                    EAQ     512,X0
         1 023360   200024 036100                    ADLQ    BUF$,,AUTO
         1 023361   200131 756100                    STQ     I$,,AUTO

     6473    13146    3             END;  /* NORMAL INSERT */

     6474    13147
     6475    13148    2          TSIZE=FM$GRAN.NAVX-POFFW(I$, BUF$);

  13148  1 023362   200024 235100                    LDA     BUF$,,AUTO
         1 023363   000022 771000                    ARL     18
         1 023364   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 023365   200131 236100                    LDQ     I$,,AUTO
         1 023366   000022 772000                    QRL     18
         1 023367   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 023370   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 023371   200024 470500                    LDP0    BUF$,,AUTO
         1 023372   000001 236100                    LDQ     1,,PR0
         1 023373   000022 772000                    QRL     18
         1 023374   200167 136100                    SBLQ    STEMP_FIELDIN+3,,AUTO
         1 023375   200132 756100                    STQ     TSIZE,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1007 

     6476    13149
     6477    13150    2          IF TSIZE < 0 THEN

  13150  1 023376   023443 605000 1                  TPL     s:13159

     6478    13151    3             DO;   /* ERROR */

     6479    13152    3             CALL FMB$ERRTYP(I);

  13152  1 023377   200133 631500                    EPPR1   I,,AUTO
         1 023400   200166 451500                    STP1    STEMP_FIELDIN+2,,AUTO
         1 023401   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 023402   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 023403   000000 701000 xent               TSX1    FMB$ERRTYP
         1 023404   000000 011000                    NOP     0

     6480    13153    3             B$JIT.ERR=ERRDMY;

  13153  1 023405   000036 236000 0                  LDQ     ERRDMY
         1 023406   000000 470400 xsym               LDP0    B$JIT$
         1 023407   000012 756100                    STQ     10,,PR0

     6481    13154    3             B$JIT.ERR.CODE=I;

  13154  1 023410   200133 236100                    LDQ     I,,AUTO
         1 023411   000003 736000                    QLS     3
         1 023412   000012 676100                    ERQ     10,,PR0
         1 023413   377770 376007                    ANQ     131064,DL
         1 023414   000012 656100                    ERSQ    10,,PR0

     6482    13155    3             CALL FMB$LOGERR(I, 12, 8, DA, BUF$, 0, 1, 2, CRECX);

  13155  1 023415   200015 631500                    EPPR1   CRECX,,AUTO
         1 023416   200176 451500                    STP1    STEMP_FIELDIN+10,,AUTO
         1 023417   000070 237000 2                  LDAQ    56
         1 023420   200174 757100                    STAQ    STEMP_FIELDIN+8,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1008 
         1 023421   000000 236000 2                  LDQ     0
         1 023422   200173 756100                    STQ     STEMP_FIELDIN+7,,AUTO
         1 023423   200024 633500                    EPPR3   BUF$,,AUTO
         1 023424   200172 453500                    STP3    STEMP_FIELDIN+6,,AUTO
         1 023425   200021 634500                    EPPR4   DA,,AUTO
         1 023426   200171 454500                    STP4    STEMP_FIELDIN+5,,AUTO
         1 023427   000023 236000 2                  LDQ     19
         1 023430   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 023431   000073 236000 2                  LDQ     59
         1 023432   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 023433   200133 635500                    EPPR5   I,,AUTO
         1 023434   200166 455500                    STP5    STEMP_FIELDIN+2,,AUTO
         1 023435   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 023436   000021 631400 2                  EPPR1   17
         1 023437   000000 701000 xent               TSX1    FMB$LOGERR
         1 023440   000000 011000                    NOP     0

     6483    13156    3             ALTRETURN;

  13156  1 023441   200130 221300                    LDX1  ! BUF3$,,AUTO
         1 023442   000000 702211                    TSX2  ! 0,X1

     6484    13157    3             END;  /* ERROR */
     6485    13158
     6486    13159    2          IF TSIZE > 0 THEN

  13159  1 023443   023534 604400 1                  TMOZ    s:13184

     6487    13160    3             DO;   /* MOVE KEYS */

     6488    13161    3             CALL FMR$SLIDE(I$, TOTSIZE, TSIZE);

  13161  1 023444   200132 631500                    EPPR1   TSIZE,,AUTO
         1 023445   200170 451500                    STP1    STEMP_FIELDIN+4,,AUTO
         1 023446   200045 633500                    EPPR3   TOTSIZE,,AUTO
         1 023447   200167 453500                    STP3    STEMP_FIELDIN+3,,AUTO
         1 023450   200131 634500                    EPPR4   I$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1009 
         1 023451   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 023452   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 023453   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 023454   000000 701000 xent               TSX1    FMR$SLIDE
         1 023455   000000 011000                    NOP     0

     6489    13162    3             I=KEYCNT;

  13162  1 023456   200017 235100                    LDA     KEYCNT,,AUTO
         1 023457   200133 755100                    STA     I,,AUTO

     6490    13163
     6491    13164    3             IF ADDFLG = %KEY THEN

  13164  1 023460   200047 236100                    LDQ     ADDFLG,,AUTO
         1 023461   023474 601000 1                  TNZ     s:13171

     6492    13165    4                DO;   /* ADJUST BOUND */

     6493    13166    4                J=I+1;

  13166  1 023462   000001 035007                    ADLA    1,DL
         1 023463   200134 755100                    STA     J,,AUTO

     6494    13167    4                IF BOUND >= CRECX AND BOUND < SIZEC(FM$KEYTBL) THEN

  13167  1 023464   200016 236100                    LDQ     BOUND,,AUTO
         1 023465   023475 604000 1                  TMI     s:13173
         1 023466   200015 116100                    CMPQ    CRECX,,AUTO
         1 023467   023475 602000 1                  TNC     s:13173
         1 023470   000430 116007                    CMPQ    280,DL
         1 023471   023475 605000 1                  TPL     s:13173

     6495    13168    4                   BOUND=BOUND+1;

  13168  1 023472   200016 054100                    AOS     BOUND,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1010 
     6496    13169    4                END;  /* ADJUST BOUND */

  13169  1 023473   023475 710000 1                  TRA     s:13173

     6497    13170    3             ELSE
     6498    13171    3                J=I;

  13171  1 023474   200134 755100                    STA     J,,AUTO

     6499    13172
     6500    13173    4             DO WHILE (I >= INDX);

  13173  1 023475   200133 236100                    LDQ     I,,AUTO
         1 023476   200054 116100                    CMPQ    INDX,,AUTO
         1 023477   023530 604000 1                  TMI     s:13181

     6501    13174    4                TSIZE=FM$KEYTBL(I)+TOTSIZE;

  13174  1 023500   200025 470500                    LDP0    KTPTR$,,AUTO
         1 023501   200133 235100                    LDA     I,,AUTO
         1 023502   000100 101505                    MRL     fill='000'O
         1 023503   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 023504   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 023505   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 023506   200045 036100                    ADLQ    TOTSIZE,,AUTO
         1 023507   200132 756100                    STQ     TSIZE,,AUTO

     6502    13175    4                IF TSIZE > 511 AND J < BOUND THEN

  13175  1 023510   000777 116007                    CMPQ    511,DL
         1 023511   023516 604400 1                  TMOZ    s:13177
         1 023512   200134 236100                    LDQ     J,,AUTO
         1 023513   200016 116100                    CMPQ    BOUND,,AUTO
         1 023514   023516 605000 1                  TPL     s:13177

     6503    13176    4                   BOUND=J;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1011 
  13176  1 023515   200016 756100                    STQ     BOUND,,AUTO

     6504    13177    4                FM$KEYTBL(J)=TSIZE;

  13177  1 023516   200134 236100                    LDQ     J,,AUTO
         1 023517   000106 101500                    MRL     fill='000'O
         1 023520   200132 000004                    ADSC9   TSIZE,,AUTO              cn=0,n=4
         1 023521   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1

     6505    13178    4                I=I-1;

  13178  1 023522   000001 336007                    LCQ     1,DL
         1 023523   200133 056100                    ASQ     I,,AUTO

     6506    13179    4                J=J-1;

  13179  1 023524   200134 056100                    ASQ     J,,AUTO

     6507    13180    4             END;  /* WHILE */

  13180  1 023525   200133 236100                    LDQ     I,,AUTO
         1 023526   200054 116100                    CMPQ    INDX,,AUTO
         1 023527   023500 605000 1                  TPL     s:13174

     6508    13181    3             FM$KEYTBL(0)=BOUND;

  13181  1 023530   200025 470500                    LDP0    KTPTR$,,AUTO
         1 023531   200016 236100                    LDQ     BOUND,,AUTO
         1 023532   000033 736000                    QLS     27
         1 023533   000000 552140                    STBQ    0,'40'O,PR0

     6509    13182    3             END;  /* MOVE KEYS */

     6510    13183
     6511    13184    2          SIZE=TOTSIZE*4;

  13184  1 023534   200045 235100                    LDA     TOTSIZE,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1012 
         1 023535   000002 735000                    ALS     2
         1 023536   200135 755100                    STA     SIZE,,AUTO

     6512    13185    2          I$->ZAP='0'B;

  13185  1 023537   200131 470500                    LDP0    I$,,AUTO
         1 023540   000000 620005                    EAX0    0,AL
         1 023541   000140 100400                    MLR     fill='000'O
         1 023542   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 023543   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     6513    13186    2          F$DCB.BFR.BUFUP(1)='1'B;

  13186  1 023544   200007 470500                    LDP0    JDCB$,,AUTO
         1 023545   400000 236003                    LDQ     -131072,DU
         1 023546   000116 256100                    ORSQ    78,,PR0

     6514    13187
     6515    13188    2          IF ADDFLG = %KEY THEN

  13188  1 023547   200047 235100                    LDA     ADDFLG,,AUTO
         1 023550   023646 601000 1                  TNZ     s:13215

     6516    13189    3             DO;   /* PUT IN KEY TEXT */

     6517    13190    3             KEY$=I$;

  13190  1 023551   200131 236100                    LDQ     I$,,AUTO
         1 023552   200020 756100                    STQ     KEY$,,AUTO

     6518    13191    3             IF ORG = %IREL# THEN

  13191  1 023553   200022 235100                    LDA     ORG,,AUTO
         1 023554   000015 115007                    CMPA    13,DL
         1 023555   023563 601000 1                  TNZ     s:13195

     6519    13192    3                CALL BUILD_IRKEY(%FMREC);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1013 

  13192  1 023556   000046 236000 2                  LDQ     38
         1 023557   200137 756100                    STQ     MKEYCNT,,AUTO
         1 023560   002465 701000 1                  TSX1    BUILD_IRKEY
         1 023561   000000 011000                    NOP     0
         1 023562   023606 710000 1                  TRA     s:13202

     6520    13193    3             ELSE
     6521    13194    4                DO;   /* NORMAL KEYS */

     6522    13195    4                I$->KEY.SIZE=KEYIN_SIZE;

  13195  1 023563   200131 471500                    LDP1    I$,,AUTO
         1 023564   200056 236100                    LDQ     KEYIN_SIZE,,AUTO
         1 023565   000033 736000                    QLS     27
         1 023566   100000 552140                    STBQ    0,'40'O,PR1

     6523    13196    4                IF ORG = %INDEXED# THEN

  13196  1 023567   000006 115007                    CMPA    6,DL
         1 023570   023600 601000 1                  TNZ     s:13199

     6524    13197    4                   I$->KEY.TEXT=KEYIN$->CHARS;

  13197  1 023571   200037 471500                    LDP1    KEYIN$,,AUTO
         1 023572   200056 720100                    LXL0    KEYIN_SIZE,,AUTO
         1 023573   200131 473500                    LDP3    I$,,AUTO
         1 023574   040140 100540                    MLR     fill='040'O
         1 023575   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 023576   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         1 023577   023606 710000 1                  TRA     s:13202

     6525    13198    4                ELSE
     6526    13199    4                   I$->KEY.TEXT=KEYIN$->KEY.TEXT;

  13199  1 023600   200037 471500                    LDP1    KEYIN$,,AUTO
         1 023601   200056 720100                    LXL0    KEYIN_SIZE,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1014 
         1 023602   200131 473500                    LDP3    I$,,AUTO
         1 023603   040140 100540                    MLR     fill='040'O
         1 023604   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 023605   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0

     6527    13200    4                END;  /* NORMAL KEYS */

     6528    13201
     6529    13202    3             TSIZE=POFFW(I$, BUF$);

  13202  1 023606   200024 235100                    LDA     BUF$,,AUTO
         1 023607   000022 771000                    ARL     18
         1 023610   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 023611   200131 236100                    LDQ     I$,,AUTO
         1 023612   000022 772000                    QRL     18
         1 023613   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 023614   200132 756100                    STQ     TSIZE,,AUTO

     6530    13203    3             FM$KEYTBL(CRECX)=TSIZE;

  13203  1 023615   200025 470500                    LDP0    KTPTR$,,AUTO
         1 023616   200015 235100                    LDA     CRECX,,AUTO
         1 023617   000105 101500                    MRL     fill='000'O
         1 023620   200132 000004                    ADSC9   TSIZE,,AUTO              cn=0,n=4
         1 023621   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

     6531    13204    3             IF TSIZE > 511 AND CRECX < BOUND THEN

  13204  1 023622   200132 235100                    LDA     TSIZE,,AUTO
         1 023623   000777 115007                    CMPA    511,DL
         1 023624   023635 604400 1                  TMOZ    s:13210
         1 023625   200015 236100                    LDQ     CRECX,,AUTO
         1 023626   023635 604000 1                  TMI     s:13210
         1 023627   200016 116100                    CMPQ    BOUND,,AUTO
         1 023630   023635 605000 1                  TPL     s:13210

     6532    13205    4                DO;   /* ADJUST BOUND */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1015 

     6533    13206    4                FM$KEYTBL(0)=CRECX;

  13206  1 023631   000033 736000                    QLS     27
         1 023632   000000 552140                    STBQ    0,'40'O,PR0

     6534    13207    4                BOUND=CRECX;

  13207  1 023633   200015 235100                    LDA     CRECX,,AUTO
         1 023634   200016 755100                    STA     BOUND,,AUTO

     6535    13208    4                END;  /* ADJUST BOUND */

     6536    13209
     6537    13210    3             KEYCNT=KEYCNT+1;

  13210  1 023635   200017 054100                    AOS     KEYCNT,,AUTO

     6538    13211    3             FM$GRAN.KEYCNT=KEYCNT;

  13211  1 023636   200024 471500                    LDP1    BUF$,,AUTO
         1 023637   200017 236100                    LDQ     KEYCNT,,AUTO
         1 023640   100002 552104                    STBQ    2,'04'O,PR1

     6539    13212    3             SEG$=PINCRW(KEY$, KEYWORDS);

  13212  1 023641   200046 236100                    LDQ     KEYWORDS,,AUTO
         1 023642   000022 736000                    QLS     18
         1 023643   200020 036100                    ADLQ    KEY$,,AUTO
         1 023644   200014 756100                    STQ     SEG$,,AUTO

     6540    13213    3             END;  /* PUT IN KEY TEXT */

  13213  1 023645   023650 710000 1                  TRA     s:13217

     6541    13214    2          ELSE
     6542    13215    2             SEG$=I$;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1016 

  13215  1 023646   200131 236100                    LDQ     I$,,AUTO
         1 023647   200014 756100                    STQ     SEG$,,AUTO

     6543    13216
     6544    13217    2          SEGX=POFFW(SEG$, BUF$);

  13217  1 023650   200024 235100                    LDA     BUF$,,AUTO
         1 023651   000022 771000                    ARL     18
         1 023652   200166 755100                    STA     STEMP_FIELDIN+2,,AUTO
         1 023653   200014 236100                    LDQ     SEG$,,AUTO
         1 023654   000022 772000                    QRL     18
         1 023655   200166 136100                    SBLQ    STEMP_FIELDIN+2,,AUTO
         1 023656   200013 756100                    STQ     SEGX,,AUTO

     6545    13218    2          F$DCB.SEGX=SEGX;

  13218  1 023657   000000 620006                    EAX0    0,QL
         1 023660   200007 470500                    LDP0    JDCB$,,AUTO
         1 023661   000100 440100                    SXL0    64,,PR0

     6546    13219    2          FM$GRAN.AVAIL=FM$GRAN.AVAIL-TOTSIZE;

  13219  1 023662   200024 471500                    LDP1    BUF$,,AUTO
         1 023663   100001 236100                    LDQ     1,,PR1
         1 023664   001777 376007                    ANQ     1023,DL
         1 023665   200045 136100                    SBLQ    TOTSIZE,,AUTO
         1 023666   100001 676100                    ERQ     1,,PR1
         1 023667   001777 376007                    ANQ     1023,DL
         1 023670   100001 656100                    ERSQ    1,,PR1

     6547    13220    2          FM$GRAN.NAVX=FM$GRAN.NAVX+TOTSIZE;

  13220  1 023671   200024 471500                    LDP1    BUF$,,AUTO
         1 023672   100001 236100                    LDQ     1,,PR1
         1 023673   000022 772000                    QRL     18
         1 023674   200045 036100                    ADLQ    TOTSIZE,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1017 
         1 023675   000000 620006                    EAX0    0,QL
         1 023676   100001 740100                    STX0    1,,PR1

     6548    13221
     6549    13222    2          IF ORG = 0 THEN

  13222  1 023677   200022 235100                    LDA     ORG,,AUTO
         1 023700   023720 601000 1                  TNZ     s:13230

     6550    13223    3             DO;   /* FLUSH EXTRANEOUS BUFFERS */

     6551    13224    3             IF F$DCB.BFR.BUFX(3) > 0 THEN

  13224  1 023701   000120 236100                    LDQ     80,,PR0
         1 023702   037000 316003                    CANQ    15872,DU
         1 023703   023710 600000 1                  TZE     s:13226

     6552    13225    3                CALL FMD$FLSHBUF(3);

  13225  1 023704   000014 630400 2                  EPPR0   12
         1 023705   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 023706   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 023707   000000 011000                    NOP     0

     6553    13226    3             IF F$DCB.BFR.BUFX(4) > 0 THEN

  13226  1 023710   200007 470500                    LDP0    JDCB$,,AUTO
         1 023711   000121 236100                    LDQ     81,,PR0
         1 023712   037000 316003                    CANQ    15872,DU
         1 023713   023720 600000 1                  TZE     s:13230

     6554    13227    3                CALL FMD$FLSHBUF(4);

  13227  1 023714   000012 630400 2                  EPPR0   10
         1 023715   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 023716   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 023717   000000 011000                    NOP     0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1018 

     6555    13228    3             END;  /* FLUSH EXTRANEOUS BUFFERS */

     6556    13229
     6557    13230    2          RETURN;

  13230  1 023720   200130 221300                    LDX1  ! BUF3$,,AUTO
         1 023721   000001 702211                    TSX2  ! 1,X1

     6558    13231    2          END SLIDE;
     6559    13232               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1019 
     6560    13233        /*I*     NAME:     SRCHGRAN
     6561    13234                 PURPOSE:  To search an upper level granule for a key
     6562    13235                 DESCRIPTION:
     6563    13236                      This is a lot like BINSEARCH, except that we want to position
     6564    13237                 to the key that is less than or equal to the specified key.  This is
     6565    13238                 because the key will point to the first key of the next lower level.
     6566    13239
     6567    13240                      Set DA to the disk address of the next lower level.
     6568    13241        */
     6569    13242                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1020 
     6570    13243    1   SRCHGRAN: PROC ALTRET;

  13243  1 023722   200136 741300       SRCHGRAN     STX1  ! LASTSEG,,AUTO

     6571    13244    2          DCL HIGH UBIN;
     6572    13245    2          DCL LOW UBIN;
     6573    13246    2          DCL TEMP SBIN;
     6574    13247    2          DCL KLB SBIN;
     6575    13248        /* */
     6576    13249    2          LOW=1;

  13249  1 023723   000001 235007                    LDA     1,DL
         1 023724   200140 755100                    STA     LOW,,AUTO

     6577    13250    2          HIGH=KEYCNT+1;

  13250  1 023725   200017 236100                    LDQ     KEYCNT,,AUTO
         1 023726   000001 036007                    ADLQ    1,DL
         1 023727   200137 756100                    STQ     HIGH,,AUTO

     6578    13251    2          TEMP=(LOW+HIGH)/2;

  13251  1 023730   200140 036100                    ADLQ    LOW,,AUTO
         1 023731   000001 772000                    QRL     1
         1 023732   200141 756100                    STQ     TEMP,,AUTO

     6579    13252
     6580    13253    3   LOOP:  DO WHILE ('1'B);

  13253  1 023733                       LOOP         null
     6581    13254    3             CRECX=TEMP;

  13254  1 023733   200141 235100                    LDA     TEMP,,AUTO
         1 023734   200015 755100                    STA     CRECX,,AUTO

     6582    13255    3             IF CRECX < BOUND THEN

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1021 
  13255  1 023735   200015 236100                    LDQ     CRECX,,AUTO
         1 023736   023752 604000 1                  TMI     s:13258
         1 023737   200016 116100                    CMPQ    BOUND,,AUTO
         1 023740   023752 605000 1                  TPL     s:13258

     6583    13256    3                KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));

  13256  1 023741   200025 470500                    LDP0    KTPTR$,,AUTO
         1 023742   000100 101506                    MRL     fill='000'O
         1 023743   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 023744   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 023745   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 023746   000000 636010                    EAQ     0,X0
         1 023747   200024 036100                    ADLQ    BUF$,,AUTO
         1 023750   200020 756100                    STQ     KEY$,,AUTO
         1 023751   023762 710000 1                  TRA     s:13260

     6584    13257    3             ELSE
     6585    13258    3                KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);

  13258  1 023752   200025 470500                    LDP0    KTPTR$,,AUTO
         1 023753   000100 101506                    MRL     fill='000'O
         1 023754   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 023755   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 023756   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 023757   001000 636010                    EAQ     512,X0
         1 023760   200024 036100                    ADLQ    BUF$,,AUTO
         1 023761   200020 756100                    STQ     KEY$,,AUTO

     6586    13259
     6587    13260    3             CALL COMKEY ALTRET(ERR);

  13260  1 023762   003743 701000 1                  TSX1    COMKEY
         1 023763   024072 702000 1                  TSX2    ERR

     6588    13261
     6589    13262    4             DO CASE(RESULT);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1022 

  13262  1 023764   200031 235100                    LDA     RESULT,,AUTO
         1 023765   000003 115007                    CMPA    3,DL
         1 023766   023770 602005 1                  TNC     s:13262+4,AL
         1 023767   024003 710000 1                  TRA     s:13274
         1 023770   023773 710000 1                  TRA     s:13264
         1 023771   024001 710000 1                  TRA     s:13271
         1 023772   023776 710000 1                  TRA     s:13268

     6590    13263    4                CASE(%EQUAL);

     6591    13264    4                   LOW=CRECX;

  13264  1 023773   200015 236100                    LDQ     CRECX,,AUTO
         1 023774   200140 756100                    STQ     LOW,,AUTO

     6592    13265    4                   EXIT LOOP;

  13265  1 023775   024013 710000 1                  TRA     s:13279

     6593    13266
     6594    13267    4                CASE(%GREATER);

     6595    13268    4                   LOW=CRECX;

  13268  1 023776   200015 236100                    LDQ     CRECX,,AUTO
         1 023777   200140 756100                    STQ     LOW,,AUTO
         1 024000   024003 710000 1                  TRA     s:13274

     6596    13269
     6597    13270    4                CASE(%LESS);

     6598    13271    4                   HIGH=CRECX;

  13271  1 024001   200015 236100                    LDQ     CRECX,,AUTO
         1 024002   200137 756100                    STQ     HIGH,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1023 
     6599    13272
     6600    13273    4             END;  /* CASE */

     6601    13274    3             TEMP=(LOW+HIGH)/2;

  13274  1 024003   200140 236100                    LDQ     LOW,,AUTO
         1 024004   200137 036100                    ADLQ    HIGH,,AUTO
         1 024005   000001 772000                    QRL     1
         1 024006   200141 756100                    STQ     TEMP,,AUTO

     6602    13275    3             IF TEMP = CRECX THEN

  13275  1 024007   024012 604000 1                  TMI     s:13277
         1 024010   200015 116100                    CMPQ    CRECX,,AUTO
         1 024011   024013 600000 1                  TZE     s:13279

     6603    13276    3                EXIT LOOP;
     6604    13277    3          END;  /* WHILE */

  13277  1 024012   023733 710000 1                  TRA     LOOP

     6605    13278
     6606    13279    2          CRECX=LOW;

  13279  1 024013   200140 236100                    LDQ     LOW,,AUTO
         1 024014   200015 756100                    STQ     CRECX,,AUTO

     6607    13280    2          IF CRECX < BOUND THEN

  13280  1 024015   024031 604000 1                  TMI     s:13283
         1 024016   200016 116100                    CMPQ    BOUND,,AUTO
         1 024017   024031 605000 1                  TPL     s:13283

     6608    13281    2             KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX));

  13281  1 024020   200025 470500                    LDP0    KTPTR$,,AUTO
         1 024021   000100 101506                    MRL     fill='000'O
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1024 
         1 024022   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 024023   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 024024   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 024025   000000 636010                    EAQ     0,X0
         1 024026   200024 036100                    ADLQ    BUF$,,AUTO
         1 024027   200020 756100                    STQ     KEY$,,AUTO
         1 024030   024041 710000 1                  TRA     s:13285

     6609    13282    2          ELSE
     6610    13283    2             KEY$=PINCRW(BUF$, FM$KEYTBL(CRECX)+512);

  13283  1 024031   200025 470500                    LDP0    KTPTR$,,AUTO
         1 024032   000100 101506                    MRL     fill='000'O
         1 024033   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 024034   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 024035   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 024036   001000 636010                    EAQ     512,X0
         1 024037   200024 036100                    ADLQ    BUF$,,AUTO
         1 024040   200020 756100                    STQ     KEY$,,AUTO

     6611    13284
     6612    13285    2          IF ORG = %IREL# THEN

  13285  1 024041   200022 235100                    LDA     ORG,,AUTO
         1 024042   000015 115007                    CMPA    13,DL
         1 024043   024053 601000 1                  TNZ     s:13288

     6613    13286    2             KLB=FM$IRENT.KLB+1;

  13286  1 024044   200020 471500                    LDP1    KEY$,,AUTO
         1 024045   100000 236100                    LDQ     0,,PR1
         1 024046   000022 772000                    QRL     18
         1 024047   377777 376007                    ANQ     131071,DL
         1 024050   000001 036007                    ADLQ    1,DL
         1 024051   200142 756100                    STQ     KLB,,AUTO
         1 024052   024060 710000 1                  TRA     s:13289

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1025 
     6614    13287    2          ELSE
     6615    13288    2             KLB=FM$KEYENT.KLB;

  13288  1 024053   200020 471500                    LDP1    KEY$,,AUTO
         1 024054   100000 236100                    LDQ     0,,PR1
         1 024055   000033 772000                    QRL     27
         1 024056   000377 376007                    ANQ     255,DL
         1 024057   200142 756100                    STQ     KLB,,AUTO

     6616    13289    2          KEY$=PINCRW(KEY$, (KLB+4)/4);

  13289  1 024060   000004 036007                    ADLQ    4,DL
         1 024061   000004 506007                    DIV     4,DL
         1 024062   000022 736000                    QLS     18
         1 024063   200020 036100                    ADLQ    KEY$,,AUTO
         1 024064   200020 756100                    STQ     KEY$,,AUTO

     6617    13290    2          DA=FM$ULSEG.DA;

  13290  1 024065   200020 471500                    LDP1    KEY$,,AUTO
         1 024066   100000 235100                    LDA     0,,PR1
         1 024067   200021 755100                    STA     DA,,AUTO

     6618    13291    2          RETURN;

  13291  1 024070   200136 221300                    LDX1  ! LASTSEG,,AUTO
         1 024071   000001 702211                    TSX2  ! 1,X1

     6619    13292    2   ERR:   ALTRETURN;

  13292  1 024072   200136 221300       ERR          LDX1  ! LASTSEG,,AUTO
         1 024073   000000 702211                    TSX2  ! 0,X1

     6620    13293    2          END SRCHGRAN;
     6621    13294               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1026 
     6622    13295        /*I*     NAME:     SRCHLVL
     6623    13296                 PURPOSE:  To search an upper level
     6624    13297                 DESCRIPTION:
     6625    13298                      The upper level has to be searched to find the correct granule
     6626    13299                 for locating a specified key.  We will loop until we find a granule
     6627    13300                 that will locate the key we are interested in.  First, check the
     6628    13301                 current granule.
     6629    13302
     6630    13303                      If the key is equal to the current granule, then search the
     6631    13304                 granule for the right key.
     6632    13305
     6633    13306                      If the key is less than the current granule, and there is
     6634    13307                 a blink, then get it.  If there isn't a blink, and this is the
     6635    13308                 last of the upper level, use the FDA of level 0.  There is no
     6636    13309                 entry in the upper level for the FDA.  If this isn't level 1, then
     6637    13310                 use the lowest key to continue the search to the next lower level.
     6638    13311
     6639    13312                      If the key is greater than the current granule, and the last
     6640    13313                 result was less, then we are in between two granules.  Use the
     6641    13314                 current granule for the search.  If there is a flink, then use
     6642    13315                 that.  If there isn't a flink, then use the highest key in the
     6643    13316                 granule to continue the search to the next level.
     6644    13317        */
     6645    13318                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1027 
     6646    13319    1   SRCHLVL: PROC ALTRET;

  13319  1 024074   200132 741300       SRCHLVL      STX1  ! TSIZE,,AUTO

     6647    13320    2          DCL LAST_RESULT UBIN;
     6648    13321    2          DCL KLB SBIN;
     6649    13322        /* */
     6650    13323    2          RESULT=%NONE;

  13323  1 024075   000003 235007                    LDA     3,DL
         1 024076   200031 755100                    STA     RESULT,,AUTO

     6651    13324    3          DO UNTIL (RESULT = %EQUAL);

     6652    13325    3             LAST_RESULT=RESULT;

  13325  1 024077   200031 235100                    LDA     RESULT,,AUTO
         1 024100   200133 755100                    STA     LAST_RESULT,,AUTO

     6653    13326    3             KEYCNT=FM$GRAN.KEYCNT;

  13326  1 024101   200024 470500                    LDP0    BUF$,,AUTO
         1 024102   000002 236100                    LDQ     2,,PR0
         1 024103   000777 376007                    ANQ     511,DL
         1 024104   200017 756100                    STQ     KEYCNT,,AUTO

     6654    13327    3             KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

  13327  1 024105   000002 220100                    LDX0    2,,PR0
         1 024106   000000 636010                    EAQ     0,X0
         1 024107   200024 036100                    ADLQ    BUF$,,AUTO
         1 024110   200025 756100                    STQ     KTPTR$,,AUTO

     6655    13328    3             BOUND=FM$KEYTBL(0);

  13328  1 024111   200025 471500                    LDP1    KTPTR$,,AUTO
         1 024112   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1028 
         1 024113   000033 772000                    QRL     27
         1 024114   200016 756100                    STQ     BOUND,,AUTO

     6656    13329    3             CALL CHECKGRAN ALTRET(ERR);

  13329  1 024115   003476 701000 1                  TSX1    CHECKGRAN
         1 024116   024333 702000 1                  TSX2    ERR

     6657    13330
     6658    13331    4             DO CASE(RESULT);

  13331  1 024117   200031 235100                    LDA     RESULT,,AUTO
         1 024120   000003 115007                    CMPA    3,DL
         1 024121   024123 602005 1                  TNC     s:13331+4,AL
         1 024122   024327 710000 1                  TRA     s:13389
         1 024123   024126 710000 1                  TRA     s:13333
         1 024124   024132 710000 1                  TRA     s:13337
         1 024125   024233 710000 1                  TRA     s:13364

     6659    13332    4                CASE(%EQUAL);

     6660    13333    4                   CALL SRCHGRAN;

  13333  1 024126   023722 701000 1                  TSX1    SRCHGRAN
         1 024127   000000 011000                    NOP     0

     6661    13334    4                   RESULT=%EQUAL;

  13334  1 024130   200031 450100                    STZ     RESULT,,AUTO
         1 024131   024327 710000 1                  TRA     s:13389

     6662    13335
     6663    13336    4                CASE(%LESS);

     6664    13337    4                   IF FM$GRAN.BLINK ~= 0 THEN

  13337  1 024132   200024 470500                    LDP0    BUF$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1029 
         1 024133   000003 235100                    LDA     3,,PR0
         1 024134   024140 600000 1                  TZE     s:13340

     6665    13338    4                      CALL ULBLINK ALTRET(ERR);

  13338  1 024135   024405 701000 1                  TSX1    ULBLINK
         1 024136   024333 702000 1                  TSX2    ERR
         1 024137   024327 710000 1                  TRA     s:13389

     6666    13339    4                   ELSE
     6667    13340    4                      IF FM$GRAN.LVL = 1 THEN

  13340  1 024140   000001 236100                    LDQ     1,,PR0
         1 024141   340000 376007                    ANQ     114688,DL
         1 024142   040000 116007                    CMPQ    16384,DL
         1 024143   024174 601000 1                  TNZ     s:13353

     6668    13341    5                         DO;   /* USE FDA */

     6669    13342    5                         IF ALTKEY$ = ADDR(NIL) THEN

  13342  1 024144   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 024145   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 024146   024152 601000 1                  TNZ     s:13345

     6670    13343    5                            DA=FM_FRZERO;

  13343  1 024147   000000 235000 xsym               LDA     FM_FRZERO
         1 024150   200021 755100                    STA     DA,,AUTO
         1 024151   024172 710000 1                  TRA     s:13349

     6671    13344    5                         ELSE
     6672    13345    5                            IF ORG = %INDEXED# THEN

  13345  1 024152   200022 235100                    LDA     ORG,,AUTO
         1 024153   000006 115007                    CMPA    6,DL
         1 024154   024164 601000 1                  TNZ     s:13348
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1030 

     6673    13346    5                               DA=ALTKEYS.K.FDA(INDEX#);

  13346  1 024155   200011 236100                    LDQ     INDEX#,,AUTO
         1 024156   000006 402007                    MPY     6,DL
         1 024157   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 024160   100001 236106                    LDQ     1,QL,PR1
         1 024161   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 024162   200021 756100                    STQ     DA,,AUTO
         1 024163   024172 710000 1                  TRA     s:13349

     6674    13347    5                            ELSE
     6675    13348    5                               DA=IRKEYS.K.FDA(INDEX#);

  13348  1 024164   200011 236100                    LDQ     INDEX#,,AUTO
         1 024165   000007 402007                    MPY     7,DL
         1 024166   200023 471500                    LDP1    ALTKEY$,,AUTO
         1 024167   100007 236106                    LDQ     7,QL,PR1
         1 024170   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 024171   200021 756100                    STQ     DA,,AUTO

     6676    13349    5                         RESULT=%EQUAL;

  13349  1 024172   200031 450100                    STZ     RESULT,,AUTO

     6677    13350    5                         END;  /* USE FDA */

  13350  1 024173   024327 710000 1                  TRA     s:13389

     6678    13351    4                      ELSE
     6679    13352    5                         DO;   /* USE LOWEST */

     6680    13353    5                         KEY$=PINCRW(BUF$, FM$KEYTBL(1));

  13353  1 024174   200025 471500                    LDP1    KTPTR$,,AUTO
         1 024175   100000 220100                    LDX0    0,,PR1
         1 024176   000777 360003                    ANX0    511,DU
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1031 
         1 024177   000000 636010                    EAQ     0,X0
         1 024200   200024 036100                    ADLQ    BUF$,,AUTO
         1 024201   200020 756100                    STQ     KEY$,,AUTO

     6681    13354    5                         IF ORG = %IREL# THEN

  13354  1 024202   200022 235100                    LDA     ORG,,AUTO
         1 024203   000015 115007                    CMPA    13,DL
         1 024204   024214 601000 1                  TNZ     s:13357

     6682    13355    5                            KLB=FM$IRENT.KLB+1;

  13355  1 024205   200020 473500                    LDP3    KEY$,,AUTO
         1 024206   300000 236100                    LDQ     0,,PR3
         1 024207   000022 772000                    QRL     18
         1 024210   377777 376007                    ANQ     131071,DL
         1 024211   000001 036007                    ADLQ    1,DL
         1 024212   200134 756100                    STQ     KLB,,AUTO
         1 024213   024221 710000 1                  TRA     s:13358

     6683    13356    5                         ELSE
     6684    13357    5                            KLB=FM$KEYENT.KLB;

  13357  1 024214   200020 473500                    LDP3    KEY$,,AUTO
         1 024215   300000 236100                    LDQ     0,,PR3
         1 024216   000033 772000                    QRL     27
         1 024217   000377 376007                    ANQ     255,DL
         1 024220   200134 756100                    STQ     KLB,,AUTO

     6685    13358    5                         KEY$=PINCRW(KEY$, (KLB+4)/4);

  13358  1 024221   000004 036007                    ADLQ    4,DL
         1 024222   000004 506007                    DIV     4,DL
         1 024223   000022 736000                    QLS     18
         1 024224   200020 036100                    ADLQ    KEY$,,AUTO
         1 024225   200020 756100                    STQ     KEY$,,AUTO

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1032 
     6686    13359    5                         DA=FM$ULSEG.DA;

  13359  1 024226   200020 473500                    LDP3    KEY$,,AUTO
         1 024227   300000 235100                    LDA     0,,PR3
         1 024230   200021 755100                    STA     DA,,AUTO

     6687    13360    5                         RESULT=%EQUAL;

  13360  1 024231   200031 450100                    STZ     RESULT,,AUTO

     6688    13361    5                         END;  /* USE LOWEST */

  13361  1 024232   024327 710000 1                  TRA     s:13389

     6689    13362
     6690    13363    4                CASE(%GREATER);

     6691    13364    4                   IF LAST_RESULT = %LESS THEN

  13364  1 024233   200133 236100                    LDQ     LAST_RESULT,,AUTO
         1 024234   000001 116007                    CMPQ    1,DL
         1 024235   024242 601000 1                  TNZ     s:13371

     6692    13365    5                      DO;   /* IN BETWEEN GRANULES */

     6693    13366    5                      CALL SRCHGRAN;

  13366  1 024236   023722 701000 1                  TSX1    SRCHGRAN
         1 024237   000000 011000                    NOP     0

     6694    13367    5                      RESULT=%EQUAL;

  13367  1 024240   200031 450100                    STZ     RESULT,,AUTO

     6695    13368    5                      END;  /* IN BETWEEN GRANULES */

  13368  1 024241   024327 710000 1                  TRA     s:13389
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1033 

     6696    13369    4                   ELSE
     6697    13370    5                      DO;   /* TRY TO FLINK */

     6698    13371    5                      IF FM$GRAN.FLINK ~= 0 AND NOT FM$GRAN.ENDLVL THEN

  13371  1 024242   200024 470500                    LDP0    BUF$,,AUTO
         1 024243   000004 235100                    LDA     4,,PR0
         1 024244   024253 600000 1                  TZE     s:13375
         1 024245   000002 236100                    LDQ     2,,PR0
         1 024246   400000 316007                    CANQ    -131072,DL
         1 024247   024253 601000 1                  TNZ     s:13375

     6699    13372    5                         CALL ULFLINK ALTRET(ERR);

  13372  1 024250   024440 701000 1                  TSX1    ULFLINK
         1 024251   024333 702000 1                  TSX2    ERR
         1 024252   024327 710000 1                  TRA     s:13389

     6700    13373    5                      ELSE
     6701    13374    6                         DO;   /* USE HIGHEST */

     6702    13375    6                         IF KEYCNT >= BOUND THEN

  13375  1 024253   200017 236100                    LDQ     KEYCNT,,AUTO
         1 024254   200016 116100                    CMPQ    BOUND,,AUTO
         1 024255   024267 604000 1                  TMI     s:13378

     6703    13376    6                            KEY$=PINCRW(BUF$, FM$KEYTBL(KEYCNT)+512);

  13376  1 024256   200025 471500                    LDP1    KTPTR$,,AUTO
         1 024257   000100 101506                    MRL     fill='000'O
         1 024260   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1
         1 024261   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 024262   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 024263   001000 636010                    EAQ     512,X0
         1 024264   200024 036100                    ADLQ    BUF$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1034 
         1 024265   200020 756100                    STQ     KEY$,,AUTO
         1 024266   024277 710000 1                  TRA     s:13379

     6704    13377    6                         ELSE
     6705    13378    6                            KEY$=PINCRW(BUF$, FM$KEYTBL(KEYCNT));

  13378  1 024267   200025 471500                    LDP1    KTPTR$,,AUTO
         1 024270   000100 101506                    MRL     fill='000'O
         1 024271   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1
         1 024272   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 024273   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 024274   000000 636010                    EAQ     0,X0
         1 024275   200024 036100                    ADLQ    BUF$,,AUTO
         1 024276   200020 756100                    STQ     KEY$,,AUTO

     6706    13379    6                         IF ORG = %IREL# THEN

  13379  1 024277   200022 235100                    LDA     ORG,,AUTO
         1 024300   000015 115007                    CMPA    13,DL
         1 024301   024311 601000 1                  TNZ     s:13382

     6707    13380    6                            KLB=FM$IRENT.KLB+1;

  13380  1 024302   200020 473500                    LDP3    KEY$,,AUTO
         1 024303   300000 236100                    LDQ     0,,PR3
         1 024304   000022 772000                    QRL     18
         1 024305   377777 376007                    ANQ     131071,DL
         1 024306   000001 036007                    ADLQ    1,DL
         1 024307   200134 756100                    STQ     KLB,,AUTO
         1 024310   024316 710000 1                  TRA     s:13383

     6708    13381    6                         ELSE
     6709    13382    6                            KLB=FM$KEYENT.KLB;

  13382  1 024311   200020 473500                    LDP3    KEY$,,AUTO
         1 024312   300000 236100                    LDQ     0,,PR3
         1 024313   000033 772000                    QRL     27
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1035 
         1 024314   000377 376007                    ANQ     255,DL
         1 024315   200134 756100                    STQ     KLB,,AUTO

     6710    13383    6                         KEY$=PINCRW(KEY$, (KLB+4)/4);

  13383  1 024316   000004 036007                    ADLQ    4,DL
         1 024317   000004 506007                    DIV     4,DL
         1 024320   000022 736000                    QLS     18
         1 024321   200020 036100                    ADLQ    KEY$,,AUTO
         1 024322   200020 756100                    STQ     KEY$,,AUTO

     6711    13384    6                         DA=FM$ULSEG.DA;

  13384  1 024323   200020 473500                    LDP3    KEY$,,AUTO
         1 024324   300000 235100                    LDA     0,,PR3
         1 024325   200021 755100                    STA     DA,,AUTO

     6712    13385    6                         RESULT=%EQUAL;

  13385  1 024326   200031 450100                    STZ     RESULT,,AUTO

     6713    13386    6                         END;  /* USE HIGHEST */

     6714    13387    5                      END;  /* TRY TO FLINK */

     6715    13388    4             END;  /* CASE */

     6716    13389    3          END;  /* WHILE */

  13389  1 024327   200031 235100                    LDA     RESULT,,AUTO
         1 024330   024077 601000 1                  TNZ     s:13325

     6717    13390
     6718    13391    2          RETURN;

  13391  1 024331   200132 221300                    LDX1  ! TSIZE,,AUTO
         1 024332   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1036 

     6719    13392
     6720    13393    2   ERR:   ALTRETURN;

  13393  1 024333   200132 221300       ERR          LDX1  ! TSIZE,,AUTO
         1 024334   000000 702211                    TSX2  ! 0,X1

     6721    13394    2          END SRCHLVL;
     6722    13395               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1037 
     6723    13396        /*I*     NAME:     SWITCH1_3
     6724    13397                 PURPOSE:  To switch buffers 1 and 3
     6725    13398                 DESCRIPTION:
     6726    13399                      Switch the values in buffers 1 and 3, and any local variables
     6727    13400                 that are associated with the buffers.  If we are adding a key, then
     6728    13401                 we are now pointing to the first key of the next granule.  Otherwise,
     6729    13402                 we will point in front of the first key if we are adding a segment.
     6730    13403        */
     6731    13404                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1038 
     6732    13405    1   SWITCH1_3: PROC;

  13405  1 024335   200132 741300       SWITCH1_3    STX1  ! TSIZE,,AUTO

     6733    13406    2          DCL BFR BIT(36);
     6734    13407    2          DCL BFR1 BIT(36);
     6735    13408        /* */
     6736    13409    2          BFR=F$DCB.BFR(1);

  13409  1 024336   200007 470500                    LDP0    JDCB$,,AUTO
         1 024337   000116 236100                    LDQ     78,,PR0
         1 024340   200133 756100                    STQ     BFR,,AUTO

     6737    13410    2          BFR1=F$DCB.BFR1(1);

  13410  1 024341   000123 236100                    LDQ     83,,PR0
         1 024342   200134 756100                    STQ     BFR1,,AUTO

     6738    13411    2          F$DCB.BFR(1)=F$DCB.BFR(3);

  13411  1 024343   000120 236100                    LDQ     80,,PR0
         1 024344   000116 756100                    STQ     78,,PR0

     6739    13412    2          F$DCB.BFR1(1)=F$DCB.BFR1(3);

  13412  1 024345   000125 236100                    LDQ     85,,PR0
         1 024346   000123 756100                    STQ     83,,PR0

     6740    13413    2          F$DCB.BFR(3)=BFR;

  13413  1 024347   200133 236100                    LDQ     BFR,,AUTO
         1 024350   000120 756100                    STQ     80,,PR0

     6741    13414    2          F$DCB.BFR1(3)=BFR1;

  13414  1 024351   200134 236100                    LDQ     BFR1,,AUTO
         1 024352   000125 756100                    STQ     85,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1039 

     6742    13415    2          BUF$=BUF3$;

  13415  1 024353   200050 236100                    LDQ     BUF3$,,AUTO
         1 024354   200024 756100                    STQ     BUF$,,AUTO

     6743    13416    2          KEYCNT=FM$GRAN.KEYCNT;

  13416  1 024355   200024 471500                    LDP1    BUF$,,AUTO
         1 024356   100002 236100                    LDQ     2,,PR1
         1 024357   000777 376007                    ANQ     511,DL
         1 024360   200017 756100                    STQ     KEYCNT,,AUTO

     6744    13417    2          KTPTR$=PINCRW(BUF$, FM$GRAN.FCEX);

  13417  1 024361   100002 220100                    LDX0    2,,PR1
         1 024362   000000 636010                    EAQ     0,X0
         1 024363   200024 036100                    ADLQ    BUF$,,AUTO
         1 024364   200025 756100                    STQ     KTPTR$,,AUTO

     6745    13418    2          BOUND=FM$KEYTBL(0);

  13418  1 024365   200025 473500                    LDP3    KTPTR$,,AUTO
         1 024366   300000 236100                    LDQ     0,,PR3
         1 024367   000033 772000                    QRL     27
         1 024370   200016 756100                    STQ     BOUND,,AUTO

     6746    13419    2          BUF3$=ADDR(NIL);

  13419  1 024371   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 024372   200050 756100                    STQ     BUF3$,,AUTO

     6747    13420    2          IF ADDFLG = %KEY THEN

  13420  1 024373   200047 235100                    LDA     ADDFLG,,AUTO
         1 024374   024400 601000 1                  TNZ     s:13423

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1040 
     6748    13421    2             CRECX=1;

  13421  1 024375   000001 235007                    LDA     1,DL
         1 024376   200015 755100                    STA     CRECX,,AUTO
         1 024377   024401 710000 1                  TRA     s:13424

     6749    13422    2          ELSE
     6750    13423    2             CRECX=0;

  13423  1 024400   200015 450100                    STZ     CRECX,,AUTO

     6751    13424    2          F$DCB.CRECX=CRECX;

  13424  1 024401   200015 720100                    LXL0    CRECX,,AUTO
         1 024402   000067 440100                    SXL0    55,,PR0

     6752    13425
     6753    13426    2          RETURN;

  13426  1 024403   200132 221300                    LDX1  ! TSIZE,,AUTO
         1 024404   000001 702211                    TSX2  ! 1,X1

     6754    13427    2          END SWITCH1_3;
     6755    13428               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1041 
     6756    13429        /*I*     NAME:     ULBLINK
     6757    13430                 PURPOSE:  To blink on an upper level
     6758    13431                 DESCRIPTION:
     6759    13432                      Read the blink granule.
     6760    13433        */
     6761    13434    1   ULBLINK: PROC ALTRET;

  13434  1 024405   200136 741300       ULBLINK      STX1  ! LASTSEG,,AUTO

     6762    13435    2          DCL LCDA UBIN;
     6763    13436        /* */
     6764    13437    2          LCDA=F$DCB.BFR.DA(BUFNUM);

  13437  1 024406   200007 470500                    LDP0    JDCB$,,AUTO
         1 024407   200044 720100                    LXL0    BUFNUM,,AUTO
         1 024410   000115 236110                    LDQ     77,X0,PR0
         1 024411   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 024412   200137 756100                    STQ     LCDA,,AUTO

     6765    13438    2          DA=BUF$->FM$GRAN.BLINK;

  13438  1 024413   200024 471500                    LDP1    BUF$,,AUTO
         1 024414   100003 235100                    LDA     3,,PR1
         1 024415   200021 755100                    STA     DA,,AUTO

     6766    13439    2          CALL FMD$REDBUF(BUF$, BUFNUM, DA, 0, LCDA) ALTRET(ERR);

  13439  1 024416   200137 633500                    EPPR3   LCDA,,AUTO
         1 024417   200172 453500                    STP3    STEMP_FIELDIN+6,,AUTO
         1 024420   000000 236000 2                  LDQ     0
         1 024421   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 024422   200021 634500                    EPPR4   DA,,AUTO
         1 024423   200170 454500                    STP4    STEMP_FIELDIN+4,,AUTO
         1 024424   200044 635500                    EPPR5   BUFNUM,,AUTO
         1 024425   200167 455500                    STP5    STEMP_FIELDIN+3,,AUTO
         1 024426   200024 636500                    EPPR6   BUF$,,AUTO
         1 024427   200166 456500                    STP6    STEMP_FIELDIN+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1042 
         1 024430   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 024431   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 024432   000000 701000 xent               TSX1    FMD$REDBUF
         1 024433   024436 702000 1                  TSX2    ERR

     6767    13440    2          RETURN;

  13440  1 024434   200136 221300                    LDX1  ! LASTSEG,,AUTO
         1 024435   000001 702211                    TSX2  ! 1,X1

     6768    13441
     6769    13442    2   ERR:   ALTRETURN;

  13442  1 024436   200136 221300       ERR          LDX1  ! LASTSEG,,AUTO
         1 024437   000000 702211                    TSX2  ! 0,X1

     6770    13443    2          END ULBLINK;
     6771    13444               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1043 
     6772    13445        /*I*     NAME:     ULFLINK
     6773    13446                 PURPOSE:  To flink on an upper level
     6774    13447                 DESCRIPTION:
     6775    13448                      Read the flink granule.
     6776    13449        */
     6777    13450    1   ULFLINK:  PROC ALTRET;

  13450  1 024440   200136 741300       ULFLINK      STX1  ! LASTSEG,,AUTO

     6778    13451    2          DCL LCDA UBIN;
     6779    13452        /* */
     6780    13453    2          LCDA=F$DCB.BFR.DA(BUFNUM);

  13453  1 024441   200007 470500                    LDP0    JDCB$,,AUTO
         1 024442   200044 720100                    LXL0    BUFNUM,,AUTO
         1 024443   000115 236110                    LDQ     77,X0,PR0
         1 024444   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 024445   200137 756100                    STQ     LCDA,,AUTO

     6781    13454    2          DA=BUF$->FM$GRAN.FLINK;

  13454  1 024446   200024 471500                    LDP1    BUF$,,AUTO
         1 024447   100004 235100                    LDA     4,,PR1
         1 024450   200021 755100                    STA     DA,,AUTO

     6782    13455    2          CALL FMD$REDBUF(BUF$, BUFNUM, DA, 0, LCDA) ALTRET(ERR);

  13455  1 024451   200137 633500                    EPPR3   LCDA,,AUTO
         1 024452   200172 453500                    STP3    STEMP_FIELDIN+6,,AUTO
         1 024453   000000 236000 2                  LDQ     0
         1 024454   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 024455   200021 634500                    EPPR4   DA,,AUTO
         1 024456   200170 454500                    STP4    STEMP_FIELDIN+4,,AUTO
         1 024457   200044 635500                    EPPR5   BUFNUM,,AUTO
         1 024460   200167 455500                    STP5    STEMP_FIELDIN+3,,AUTO
         1 024461   200024 636500                    EPPR6   BUF$,,AUTO
         1 024462   200166 456500                    STP6    STEMP_FIELDIN+2,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1044 
         1 024463   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 024464   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 024465   000000 701000 xent               TSX1    FMD$REDBUF
         1 024466   024471 702000 1                  TSX2    ERR

     6783    13456    2          RETURN;

  13456  1 024467   200136 221300                    LDX1  ! LASTSEG,,AUTO
         1 024470   000001 702211                    TSX2  ! 1,X1

     6784    13457    2   ERR:   ALTRETURN;

  13457  1 024471   200136 221300       ERR          LDX1  ! LASTSEG,,AUTO
         1 024472   000000 702211                    TSX2  ! 0,X1

     6785    13458    2          END ULFLINK;
     6786    13459               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1045 
     6787    13460        /*I*     NAME:     ULSEARCH
     6788    13461                 PURPOSE:  To search the upper level for a key
     6789    13462                 DESCRIPTION:
     6790    13463                      Read the top disk address into buffer 2, if it isn't already
     6791    13464                 there.
     6792    13465
     6793    13466                      Now loop until we hit level 0.  Call SRCHLVL to search the
     6794    13467                 current level.  When we find the granule on the next lower level
     6795    13468                 to read, decrement the level, and read the next granule.
     6796    13469
     6797    13470                      If we ran into any errors searching the upper level, try
     6798    13471                 flushing all the granules, reset the TDA to 0, so it doesn't get
     6799    13472                 used again, and use the old sequential search from the beginning
     6800    13473                 to find the granule.
     6801    13474        */
     6802    13475                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1046 
     6803    13476    1   ULSEARCH: PROC ALTRET;

  13476  1 024473   200130 741300       ULSEARCH     STX1  ! BUF3$,,AUTO

     6804    13477    2          DCL LEVEL SBIN;
     6805    13478        /* */
     6806    13479    2          LEVEL=F$DCB.TDALVL;

  13479  1 024474   200007 470500                    LDP0    JDCB$,,AUTO
         1 024475   000067 236100                    LDQ     55,,PR0
         1 024476   000041 772000                    QRL     33
         1 024477   200131 756100                    STQ     LEVEL,,AUTO

     6807    13480    2          F$DCB.LVL=LEVEL;

  13480  1 024500   000036 736000                    QLS     30
         1 024501   000067 676100                    ERQ     55,,PR0
         1 024502   070000 376003                    ANQ     28672,DU
         1 024503   000067 656100                    ERSQ    55,,PR0

     6808    13481    2          DA=F$DCB.TDA;

  13481  1 024504   000070 236100                    LDQ     56,,PR0
         1 024505   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 024506   200021 756100                    STQ     DA,,AUTO

     6809    13482    2          F$DCB.GTYP=FMGTFILE;

  13482  1 024507   000064 236100                    LDQ     52,,PR0
         1 024510   000045 376000 2                  ANQ     37
         1 024511   030000 276003                    ORQ     12288,DU
         1 024512   000064 756100                    STQ     52,,PR0

     6810    13483
     6811    13484    2          BUF$=FM$BUF$(F$DCB.BFR.BUFX(2));

  13484  1 024513   000117 236100                    LDQ     79,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1047 
         1 024514   000033 772000                    QRL     27
         1 024515   000037 376007                    ANQ     31,DL
         1 024516   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 024517   200024 756100                    STQ     BUF$,,AUTO

     6812    13485    2          IF BUF$ = ADDR(NIL) THEN

  13485  1 024520   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 024521   024540 601000 1                  TNZ     s:13488

     6813    13486    2             CALL FMD$REDBUF(BUF$, 2, DA, 0, -1) ALTRET(ERR);

  13486  1 024522   000056 236000 2                  LDQ     46
         1 024523   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 024524   000000 236000 2                  LDQ     0
         1 024525   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 024526   200021 631500                    EPPR1   DA,,AUTO
         1 024527   200170 451500                    STP1    STEMP_FIELDIN+4,,AUTO
         1 024530   000046 236000 2                  LDQ     38
         1 024531   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 024532   200024 633500                    EPPR3   BUF$,,AUTO
         1 024533   200166 453500                    STP3    STEMP_FIELDIN+2,,AUTO
         1 024534   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 024535   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 024536   000000 701000 xent               TSX1    FMD$REDBUF
         1 024537   024600 702000 1                  TSX2    ERR

     6814    13487
     6815    13488    2          BUFNUM=2;

  13488  1 024540   000002 235007                    LDA     2,DL
         1 024541   200044 755100                    STA     BUFNUM,,AUTO

     6816    13489    3          DO UNTIL (LEVEL = 0);

     6817    13490    3             CALL SRCHLVL ALTRET(ERR);

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1048 
  13490  1 024542   024074 701000 1                  TSX1    SRCHLVL
         1 024543   024600 702000 1                  TSX2    ERR

     6818    13491    3             BUFNUM=1;

  13491  1 024544   000001 235007                    LDA     1,DL
         1 024545   200044 755100                    STA     BUFNUM,,AUTO

     6819    13492    3             LEVEL=LEVEL-1;

  13492  1 024546   000001 336007                    LCQ     1,DL
         1 024547   200131 056100                    ASQ     LEVEL,,AUTO

     6820    13493    3             F$DCB.LVL=LEVEL;

  13493  1 024550   200007 470500                    LDP0    JDCB$,,AUTO
         1 024551   200131 236100                    LDQ     LEVEL,,AUTO
         1 024552   000036 736000                    QLS     30
         1 024553   000067 676100                    ERQ     55,,PR0
         1 024554   070000 376003                    ANQ     28672,DU
         1 024555   000067 656100                    ERSQ    55,,PR0

     6821    13494    3             CALL FMD$REDBUF(BUF$, 1, DA, 0, -1) ALTRET(ERR);

  13494  1 024556   000056 236000 2                  LDQ     46
         1 024557   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 024560   000000 236000 2                  LDQ     0
         1 024561   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 024562   200021 631500                    EPPR1   DA,,AUTO
         1 024563   200170 451500                    STP1    STEMP_FIELDIN+4,,AUTO
         1 024564   000001 236000 2                  LDQ     1
         1 024565   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 024566   200024 633500                    EPPR3   BUF$,,AUTO
         1 024567   200166 453500                    STP3    STEMP_FIELDIN+2,,AUTO
         1 024570   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 024571   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 024572   000000 701000 xent               TSX1    FMD$REDBUF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1049 
         1 024573   024600 702000 1                  TSX2    ERR

     6822    13495    3          END;

  13495  1 024574   200131 235100                    LDA     LEVEL,,AUTO
         1 024575   024542 601000 1                  TNZ     s:13490

     6823    13496
     6824    13497    2          RETURN;

  13497  1 024576   200130 221300                    LDX1  ! BUF3$,,AUTO
         1 024577   000001 702211                    TSX2  ! 1,X1

     6825    13498    2   ERR:   FM$CFU.ULBLD=1;

  13498  1 024600   200010 470500       ERR          LDP0    CFU$,,AUTO
         1 024601   000001 236003                    LDQ     1,DU
         1 024602   000006 256100                    ORSQ    6,,PR0

     6826    13499    2          CALL FMD$FLSHBUF(4);

  13499  1 024603   000012 630400 2                  EPPR0   10
         1 024604   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 024605   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 024606   000000 011000                    NOP     0

     6827    13500    2          CALL FMD$FLSHBUF(2);

  13500  1 024607   000046 630400 2                  EPPR0   38
         1 024610   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 024611   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 024612   000000 011000                    NOP     0

     6828    13501    2          CALL FMD$FLSHBUF(3);

  13501  1 024613   000014 630400 2                  EPPR0   12
         1 024614   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1050 
         1 024615   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 024616   000000 011000                    NOP     0

     6829    13502    2          CALL FMD$FLSHBUF(1);

  13502  1 024617   000001 630400 2                  EPPR0   1
         1 024620   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 024621   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 024622   000000 011000                    NOP     0

     6830    13503    2          B$JIT.ERR='0'B;

  13503  1 024623   000000 470400 xsym               LDP0    B$JIT$
         1 024624   000012 450100                    STZ     10,,PR0

     6831    13504    2          F$DCB.TDA=0;

  13504  1 024625   200007 471500                    LDP1    JDCB$,,AUTO
         1 024626   000000 236003                    LDQ     0,DU
         1 024627   100070 552134                    STBQ    56,'34'O,PR1

     6832    13505    2          IF ALTKEY$ = ADDR(NIL) THEN

  13505  1 024630   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 024631   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 024632   024636 601000 1                  TNZ     s:13509

     6833    13506    2             DA=FM_FRZERO;

  13506  1 024633   000000 235000 xsym               LDA     FM_FRZERO
         1 024634   200021 755100                    STA     DA,,AUTO
         1 024635   024671 710000 1                  TRA     s:13518

     6834    13507    2          ELSE
     6835    13508    3             DO;

     6836    13509    4             IF ORG=%INDEXED# THEN DO;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1051 

  13509  1 024636   200022 235100                    LDA     ORG,,AUTO
         1 024637   000006 115007                    CMPA    6,DL
         1 024640   024656 601000 1                  TNZ     s:13514

     6837    13510    4                DA=ALTKEYS.K.FDA(INDEX#);

  13510  1 024641   200011 236100                    LDQ     INDEX#,,AUTO
         1 024642   000006 402007                    MPY     6,DL
         1 024643   200023 473500                    LDP3    ALTKEY$,,AUTO
         1 024644   300001 236106                    LDQ     1,QL,PR3
         1 024645   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 024646   200021 756100                    STQ     DA,,AUTO

     6838    13511    4                ALTKEYS.K.TDA(INDEX#)=0;

  13511  1 024647   200011 236100                    LDQ     INDEX#,,AUTO
         1 024650   000006 402007                    MPY     6,DL
         1 024651   000002 736000                    QLS     2
         1 024652   000106 101400                    MRL     fill='000'O
         1 024653   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         1 024654   300002 600003                    ADSC9   2,Q,PR3                  cn=3,n=3

     6839    13512    4                END;

  13512  1 024655   024671 710000 1                  TRA     s:13518

     6840    13513    4             ELSE DO; /* IREL */

     6841    13514    4                DA=IRKEYS.K.FDA(INDEX#);

  13514  1 024656   200011 236100                    LDQ     INDEX#,,AUTO
         1 024657   000007 402007                    MPY     7,DL
         1 024660   200023 473500                    LDP3    ALTKEY$,,AUTO
         1 024661   300007 236106                    LDQ     7,QL,PR3
         1 024662   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 024663   200021 756100                    STQ     DA,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1052 

     6842    13515    4                IRKEYS.K.TDA(INDEX#)=0;

  13515  1 024664   200011 236100                    LDQ     INDEX#,,AUTO
         1 024665   000007 402007                    MPY     7,DL
         1 024666   000000 620006                    EAX0    0,QL
         1 024667   777000 236003                    LDQ     -512,DU
         1 024670   300003 356110                    ANSQ    3,X0,PR3

     6843    13516    4                END;

     6844    13517    3             END;

     6845    13518    2          F$DCB.BFR.DA(1)=DA;

  13518  1 024671   200021 236100                    LDQ     DA,,AUTO
         1 024672   100116 552134                    STBQ    78,'34'O,PR1

     6846    13519    2          F$DCB.LVL=0;

  13519  1 024673   000035 236000 2                  LDQ     29
         1 024674   100067 356100                    ANSQ    55,,PR1

     6847    13520    2          CALL FMD$REDBUF(BUF$, 1, DA, 0, -1) ALTRET(ERR1);

  13520  1 024675   000056 236000 2                  LDQ     46
         1 024676   200172 756100                    STQ     STEMP_FIELDIN+6,,AUTO
         1 024677   000000 236000 2                  LDQ     0
         1 024700   200171 756100                    STQ     STEMP_FIELDIN+5,,AUTO
         1 024701   200021 633500                    EPPR3   DA,,AUTO
         1 024702   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 024703   000001 236000 2                  LDQ     1
         1 024704   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 024705   200024 634500                    EPPR4   BUF$,,AUTO
         1 024706   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 024707   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 024710   000023 631400 xsym               EPPR1   B_VECTNIL+19
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1053 
         1 024711   000000 701000 xent               TSX1    FMD$REDBUF
         1 024712   024715 702000 1                  TSX2    ERR1

     6848    13521    2          RETURN;

  13521  1 024713   200130 221300                    LDX1  ! BUF3$,,AUTO
         1 024714   000001 702211                    TSX2  ! 1,X1

     6849    13522    2   ERR1:  ALTRETURN;

  13522  1 024715   200130 221300       ERR1         LDX1  ! BUF3$,,AUTO
         1 024716   000000 702211                    TSX2  ! 0,X1

     6850    13523    2          END ULSEARCH;
     6851    13524               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1054 
     6852    13525        /*I*     NAME:     UPALTSEGS
     6853    13526                 PURPOSE:  To update alternate indexes
     6854    13527                 DESCRIPTION:
     6855    13528                      When rewriting a record with alternate indexes, the MISEGs
     6856    13529                 on the alternate indexes need to be updated.
     6857    13530
     6858    13531                      Loop through the alternate indexes.  If the index is unique,
     6859    13532                 or this isn't load mode, then this index needs to be updated.
     6860    13533                 First, find the key in the alternate index, then the segment that
     6861    13534                 needs to be updated.  Store the new value into the segment.
     6862    13535        */
     6863    13536                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1055 
     6864    13537    1   UPALTSEGS: PROC ALTRET;

  13537  1 024717   200114 741300       UPALTSEGS    STX1  ! FIRSTSEG,,AUTO

     6865    13538    2          DCL I SBIN;
     6866    13539    2          DCL NUMENTS UBIN;
     6867    13540    2          DCL UNIQUE BIT(1);
     6868    13541        /* */
     6869    13542    2          IF ORG = %INDEXED# THEN

  13542  1 024720   200022 235100                    LDA     ORG,,AUTO
         1 024721   000006 115007                    CMPA    6,DL
         1 024722   024731 601000 1                  TNZ     s:13545

     6870    13543    2             NUMENTS=ALTKEYS.NUMENTS;

  13543  1 024723   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 024724   000000 236100                    LDQ     0,,PR0
         1 024725   000022 772000                    QRL     18
         1 024726   000377 376007                    ANQ     255,DL
         1 024727   200116 756100                    STQ     NUMENTS,,AUTO
         1 024730   024735 710000 1                  TRA     s:13547

     6871    13544    2          ELSE
     6872    13545    2             NUMENTS=IRKEYS.NKEYS;

  13545  1 024731   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 024732   000000 236100                    LDQ     0,,PR0
         1 024733   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 024734   200116 756100                    STQ     NUMENTS,,AUTO

     6873    13546
     6874    13547    3          DO I=2 TO NUMENTS;

  13547  1 024735   000002 235007                    LDA     2,DL
         1 024736   200115 755100                    STA     I,,AUTO
         1 024737   025030 710000 1                  TRA     s:13569+1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1056 

     6875    13548    3             IF ORG = %INDEXED# THEN

  13548  1 024740   200022 235100                    LDA     ORG,,AUTO
         1 024741   000006 115007                    CMPA    6,DL
         1 024742   024753 601000 1                  TNZ     s:13551

     6876    13549    3                UNIQUE=ALTKEYS.K.UNIQUE(I-1);

  13549  1 024743   200115 236100                    LDQ     I,,AUTO
         1 024744   000006 402007                    MPY     6,DL
         1 024745   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 024746   077776 236106                    LDQ     -2,QL,PR0
         1 024747   000011 736000                    QLS     9
         1 024750   400000 376003                    ANQ     -131072,DU
         1 024751   200117 756100                    STQ     UNIQUE,,AUTO
         1 024752   024762 710000 1                  TRA     s:13553

     6877    13550    3             ELSE
     6878    13551    3                UNIQUE=IRKEYS.K.UNIQUE(I-1);

  13551  1 024753   200115 236100                    LDQ     I,,AUTO
         1 024754   000007 402007                    MPY     7,DL
         1 024755   200023 470500                    LDP0    ALTKEY$,,AUTO
         1 024756   077777 236106                    LDQ     -1,QL,PR0
         1 024757   000022 736000                    QLS     18
         1 024760   400000 376003                    ANQ     -131072,DU
         1 024761   200117 756100                    STQ     UNIQUE,,AUTO

     6879    13552
     6880    13553    3             IF (NOT F$DCB.LDFLG) OR

  13553  1 024762   200007 471500                    LDP1    JDCB$,,AUTO
         1 024763   100064 236100                    LDQ     52,,PR1
         1 024764   200000 316007                    CANQ    65536,DL
         1 024765   024773 600000 1                  TZE     s:13556
         1 024766   200117 234100                    SZN     UNIQUE,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1057 
         1 024767   025024 605000 1                  TPL     s:13568
         1 024770   100103 236100                    LDQ     67,,PR1
         1 024771   002000 316007                    CANQ    1024,DL
         1 024772   025024 601000 1                  TNZ     s:13568

     6881    13554    3                (UNIQUE AND NOT F$DCB.UNIQUEBLD) THEN
     6882    13555    4                DO;   /* UPDATE ALT SEG */

     6883    13556    4                INDEX#=I;

  13556  1 024773   200115 235100                    LDA     I,,AUTO
         1 024774   200011 755100                    STA     INDEX#,,AUTO

     6884    13557    4                CALL SETINDEX ALTRET(ERR);

  13557  1 024775   021667 701000 1                  TSX1    SETINDEX
         1 024776   025050 702000 1                  TSX2    ERR

     6885    13558    4                CALL FINDIDO ALTRET(ERR);

  13558  1 024777   007256 701000 1                  TSX1    FINDIDO
         1 025000   025050 702000 1                  TSX2    ERR

     6886    13559
     6887    13560    5                DO WHILE (OLD_MISEG ~= FM$MISEG);

  13560  1 025001   200014 470500                    LDP0    SEG$,,AUTO
         1 025002   000100 106500                    CMPC    fill='000'O
         1 025003   200041 000010                    ADSC9   OLD_MISEG,,AUTO          cn=0,n=8
         1 025004   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 025005   025015 600000 1                  TZE     s:13564

     6888    13561    5                   CALL NXTSEG ALTRET(ERR);

  13561  1 025006   015351 701000 1                  TSX1    NXTSEG
         1 025007   025050 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1058 
     6889    13562    5                END;

  13562  1 025010   200014 470500                    LDP0    SEG$,,AUTO
         1 025011   000100 106500                    CMPC    fill='000'O
         1 025012   200041 000010                    ADSC9   OLD_MISEG,,AUTO          cn=0,n=8
         1 025013   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 025014   025006 601000 1                  TNZ     s:13561

     6890    13563
     6891    13564    4                FM$MISEG=FM_MISEG;

  13564  1 025015   000100 100500                    MLR     fill='000'O
         1 025016   200027 000010                    ADSC9   FM_MISEG,,AUTO           cn=0,n=8
         1 025017   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8

     6892    13565    4                F$DCB.BFR.BUFUP(1)='1'B;

  13565  1 025020   200007 470500                    LDP0    JDCB$,,AUTO
         1 025021   400000 236003                    LDQ     -131072,DU
         1 025022   000116 256100                    ORSQ    78,,PR0

     6893    13566    4                END;  /* UPDATE ALT SEG */

  13566  1 025023   025027 710000 1                  TRA     s:13569

     6894    13567    3             ELSE
     6895    13568    3                FM$CFU.ALTBLD='1'B;

  13568  1 025024   200010 473500                    LDP3    CFU$,,AUTO
         1 025025   000004 236003                    LDQ     4,DU
         1 025026   300006 256100                    ORSQ    6,,PR3

     6896    13569    3          END;  /* DO I */

  13569  1 025027   200115 054100                    AOS     I,,AUTO
         1 025030   200116 236100                    LDQ     NUMENTS,,AUTO
         1 025031   024740 604000 1                  TMI     s:13548
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1059 
         1 025032   200115 116100                    CMPQ    I,,AUTO
         1 025033   024740 605000 1                  TPL     s:13548

     6897    13570
     6898    13571    2          INDEX#=1;

  13571  1 025034   000001 235007                    LDA     1,DL
         1 025035   200011 755100                    STA     INDEX#,,AUTO

     6899    13572    2          CALL SETINDEX ALTRET(ERR);

  13572  1 025036   021667 701000 1                  TSX1    SETINDEX
         1 025037   025050 702000 1                  TSX2    ERR

     6900    13573    2          CALL RESTOREPOS ALTRET(ERR);

  13573  1 025040   021403 701000 1                  TSX1    RESTOREPOS
         1 025041   025050 702000 1                  TSX2    ERR

     6901    13574    2          SEG$=PINCRW(BUF$, SEGX);

  13574  1 025042   200013 236100                    LDQ     SEGX,,AUTO
         1 025043   000022 736000                    QLS     18
         1 025044   200024 036100                    ADLQ    BUF$,,AUTO
         1 025045   200014 756100                    STQ     SEG$,,AUTO

     6902    13575
     6903    13576    2          RETURN;

  13576  1 025046   200114 221300                    LDX1  ! FIRSTSEG,,AUTO
         1 025047   000001 702211                    TSX2  ! 1,X1

     6904    13577    2   ERR:   ALTRETURN;

  13577  1 025050   200114 221300       ERR          LDX1  ! FIRSTSEG,,AUTO
         1 025051   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1060 
     6905    13578    2          END UPALTSEGS;
     6906    13579               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1061 
     6907    13580        /*I*     NAME:     WRCONT
     6908    13581                 PURPOSE:  To handle continued writes
     6909    13582                 DESCRIPTION:
     6910    13583                      In order to do continued writes, the last operation must have
     6911    13584                 been a write, the file can't be compressed, and it can't be
     6912    13585                 encrypted.
     6913    13586
     6914    13587                      Position to the current key.
     6915    13588
     6916    13589                      Next, loop until we find where we left off last time.
     6917    13590                 F$DCB.GDISP will be the total number of bytes written so far.
     6918    13591
     6919    13592                      Now loop until we have gotten to all of the segments and
     6920    13593                 we have transferred all of the bytes from the user's buffer.
     6921    13594                 If we ran out of segments first, then add some new segs.  If the
     6922    13595                 segment is empty, then call ADDDATA to allocate some more data
     6923    13596                 space.  Otherwise, read in the current data granule.  Save the
     6924    13597                 old value of the MISEG, we may need it later to update alternate
     6925    13598                 indexes.  INDX will be the index into the current segment of where
     6926    13599                 we left off.  If the number of bytes to write
     6927    13600                 is greater than the amount of extra space, and the record is
     6928    13601                 at the end of the data granule, then try expanding the data
     6929    13602                 granule space.  T is the amount of space we need.  If it is
     6930    13603                 more than is available, then use what is available.
     6931    13604
     6932    13605                      Transfer the less of either the number of bytes in the
     6933    13606                 user record, or the number of bytes in this segment.  If
     6934    13607                 this file has alternate indexes, then update those now.
     6935    13608
     6936    13609                      Update some counts, then get the next segment.
     6937    13610        */
     6938    13611                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1062 
     6939    13612    1   WRCONT: PROC ALTRET;

  13612  1 025052   200100 741300       WRCONT       STX1  ! I,,AUTO

     6940    13613    2          DCL TOT SBIN;
     6941    13614    2          DCL GX SBIN;
     6942    13615    2          DCL INDX UBIN;
     6943    13616    2          DCL T SBIN;
     6944    13617    2          DCL GACTB SBIN;
     6945    13618    2          DCL SIZE SBIN;
     6946    13619    2          DCL CHARS CHAR(SIZE) BASED;
     6947    13620        /* */
     6948    13621    2          IF EOP ~= 3 OR F$DCB.COMP OR FPT$WRITE_V.SEED OR F$DCB.SEED OR

  13621  1 025053   200036 235100                    LDA     EOP,,AUTO
         1 025054   000003 115007                    CMPA    3,DL
         1 025055   025074 601000 1                  TNZ     s:13624
         1 025056   200007 470500                    LDP0    JDCB$,,AUTO
         1 025057   000031 236100                    LDQ     25,,PR0
         1 025060   000100 316007                    CANQ    64,DL
         1 025061   025074 601000 1                  TNZ     s:13624
         1 025062   000000 471400 xsym               LDP1    B$PS0$
         1 025063   100002 235100                    LDA     2,,PR1
         1 025064   025074 601000 1                  TNZ     s:13624
         1 025065   000062 235100                    LDA     50,,PR0
         1 025066   025074 601000 1                  TNZ     s:13624
         1 025067   200010 473500                    LDP3    CFU$,,AUTO
         1 025070   300000 236100                    LDQ     0,,PR3
         1 025071   060000 376003                    ANQ     24576,DU
         1 025072   020000 116003                    CMPQ    8192,DU
         1 025073   025101 601000 1                  TNZ     s:13628

     6949    13622    2             FM$CFU.SHARE = %ALL# THEN
     6950    13623    3             DO;   /* NO SHARING */

     6951    13624    3             B$JIT.ERR=ERRNOCONT;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1063 
  13624  1 025074   000015 236000 0                  LDQ     ERRNOCONT
         1 025075   000000 470400 xsym               LDP0    B$JIT$
         1 025076   000012 756100                    STQ     10,,PR0

     6952    13625    3             ALTRETURN;

  13625  1 025077   200100 221300                    LDX1  ! I,,AUTO
         1 025100   000000 702211                    TSX2  ! 0,X1

     6953    13626    3             END;  /* NO SHARING */
     6954    13627
     6955    13628    2          CALL RESTOREPOS ALTRET(ERR);

  13628  1 025101   021403 701000 1                  TSX1    RESTOREPOS
         1 025102   025474 702000 1                  TSX2    ERR

     6956    13629    2          CALL CURKEY ALTRET(ERR);

  13629  1 025103   005060 701000 1                  TSX1    CURKEY
         1 025104   025474 702000 1                  TSX2    ERR

     6957    13630
     6958    13631    2          IDPTR$=PINCRW(ADDR(F$DCB.ID), -1);

  13631  1 025105   200007 236100                    LDQ     JDCB$,,AUTO
         1 025106   000106 036003                    ADLQ    70,DU
         1 025107   200034 756100                    STQ     IDPTR$,,AUTO

     6959    13632    2          ID.DA=FM$MISEG.GDA;

  13632  1 025110   200014 470500                    LDP0    SEG$,,AUTO
         1 025111   200034 471500                    LDP1    IDPTR$,,AUTO
         1 025112   000001 236100                    LDQ     1,,PR0
         1 025113   100001 676100                    ERQ     1,,PR1
         1 025114   000020 376000 2                  ANQ     16
         1 025115   100001 656100                    ERSQ    1,,PR1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1064 
     6960    13633    2          ID.GX=FM$MISEG.GX;

  13633  1 025116   200014 470500                    LDP0    SEG$,,AUTO
         1 025117   000000 236100                    LDQ     0,,PR0
         1 025120   000016 736000                    QLS     14
         1 025121   100001 676100                    ERQ     1,,PR1
         1 025122   777400 376003                    ANQ     -256,DU
         1 025123   100001 656100                    ERSQ    1,,PR1

     6961    13634
     6962    13635    2          IF FM$KEYENT.D THEN

  13635  1 025124   200020 470500                    LDP0    KEY$,,AUTO
         1 025125   000000 234100                    SZN     0,,PR0
         1 025126   025134 605000 1                  TPL     s:13641

     6963    13636    3             DO;   /* NO KEY */

     6964    13637    3             B$JIT.ERR=ERRNOKEY;

  13637  1 025127   000007 236000 0                  LDQ     ERRNOKEY
         1 025130   000000 473400 xsym               LDP3    B$JIT$
         1 025131   300012 756100                    STQ     10,,PR3

     6965    13638    3             ALTRETURN;

  13638  1 025132   200100 221300                    LDX1  ! I,,AUTO
         1 025133   000000 702211                    TSX2  ! 0,X1

     6966    13639    3             END;  /* NO KEY */
     6967    13640
     6968    13641    2          FAK=1;

  13641  1 025134   000001 235007                    LDA     1,DL
         1 025135   200043 755100                    STA     FAK,,AUTO

     6969    13642    2          TOT=0;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1065 

  13642  1 025136   200101 450100                    STZ     TOT,,AUTO

     6970    13643    3   LOOP:  DO WHILE ('1'B);

  13643  1 025137                       LOOP         null
     6971    13644    3             IF SEG$ ~= ADDR(NIL) THEN

  13644  1 025137   200014 236100                    LDQ     SEG$,,AUTO
         1 025140   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 025141   025162 600000 1                  TZE     s:13658

     6972    13645    3                IF FM$MISEG.GACTB+TOT >= F$DCB.GDISP THEN

  13645  1 025142   200014 470500                    LDP0    SEG$,,AUTO
         1 025143   000000 236100                    LDQ     0,,PR0
         1 025144   007777 376007                    ANQ     4095,DL
         1 025145   200101 036100                    ADLQ    TOT,,AUTO
         1 025146   200007 471500                    LDP1    JDCB$,,AUTO
         1 025147   025152 604000 1                  TMI     s:13649
         1 025150   100101 116100                    CMPQ    65,,PR1
         1 025151   025162 603000 1                  TRC     s:13658

     6973    13646    3                   EXIT LOOP;
     6974    13647    3                ELSE
     6975    13648    4                   DO;   /* GET NEXT SEG */

     6976    13649    4                   TOT=FM$MISEG.GACTB+TOT;

  13649  1 025152   000000 236100                    LDQ     0,,PR0
         1 025153   007777 376007                    ANQ     4095,DL
         1 025154   200101 036100                    ADLQ    TOT,,AUTO
         1 025155   200101 756100                    STQ     TOT,,AUTO

     6977    13650    4                   CALL NXTSEG ALTRET(ERR);

  13650  1 025156   015351 701000 1                  TSX1    NXTSEG
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1066 
         1 025157   025474 702000 1                  TSX2    ERR

     6978    13651    4                   FAK=0;

  13651  1 025160   200043 450100                    STZ     FAK,,AUTO

     6979    13652    4                   END;  /* GET NEXT SEG */

  13652  1 025161   025137 710000 1                  TRA     LOOP

     6980    13653    3             ELSE
     6981    13654    3                EXIT LOOP;
     6982    13655    3          END;

     6983    13656
     6984    13657    3          DO UNTIL (SEG$ = ADDR(NIL) AND F$DCB.UBYTES = 0);

     6985    13658    3             IF SEG$ = ADDR(NIL) THEN

  13658  1 025162   200014 236100                    LDQ     SEG$,,AUTO
         1 025163   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 025164   025167 601000 1                  TNZ     s:13661

     6986    13659    3                CALL NEWSEG ALTRET(ERR);

  13659  1 025165   014722 701000 1                  TSX1    NEWSEG
         1 025166   025474 702000 1                  TSX2    ERR

     6987    13660
     6988    13661    3             DA=FM$MISEG.GDA;

  13661  1 025167   200014 470500                    LDP0    SEG$,,AUTO
         1 025170   000001 236100                    LDQ     1,,PR0
         1 025171   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 025172   200021 756100                    STQ     DA,,AUTO

     6989    13662    3             IF FM$MISEG.GACTB = 0 AND DA = 0 THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1067 

  13662  1 025173   000000 236100                    LDQ     0,,PR0
         1 025174   007777 316007                    CANQ    4095,DL
         1 025175   025203 601000 1                  TNZ     s:13666
         1 025176   200021 235100                    LDA     DA,,AUTO
         1 025177   025203 601000 1                  TNZ     s:13666

     6990    13663    3                CALL ADDDATA ALTRET(ERR);

  13663  1 025200   000105 701000 1                  TSX1    ADDDATA
         1 025201   025474 702000 1                  TSX2    ERR
         1 025202   025450 710000 1                  TRA     s:13711

     6991    13664    3             ELSE
     6992    13665    4                DO;   /* ADD TO CURRENT SEG */

     6993    13666    4                F$DCB.LVL=7;

  13666  1 025203   200007 471500                    LDP1    JDCB$,,AUTO
         1 025204   070000 236003                    LDQ     28672,DU
         1 025205   100067 256100                    ORSQ    55,,PR1

     6994    13667    4                DBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));

  13667  1 025206   100115 236100                    LDQ     77,,PR1
         1 025207   000033 772000                    QRL     27
         1 025210   000037 376007                    ANQ     31,DL
         1 025211   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 025212   200040 756100                    STQ     DBUF$,,AUTO

     6995    13668    4                IF DBUF$ = ADDR(NIL) OR F$DCB.BFR.DA(0) ~= DA THEN

  13668  1 025213   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 025214   025221 600000 1                  TZE     s:13669
         1 025215   100115 236100                    LDQ     77,,PR1
         1 025216   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 025217   200021 116100                    CMPQ    DA,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1068 
         1 025220   025233 600000 1                  TZE     s:13671

     6996    13669    4                   CALL FMD$REDBUF(DBUF$, 0, DA) ALTRET(DATAERR);

  13669  1 025221   200021 633500                    EPPR3   DA,,AUTO
         1 025222   200170 453500                    STP3    STEMP_FIELDIN+4,,AUTO
         1 025223   000000 236000 2                  LDQ     0
         1 025224   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 025225   200040 634500                    EPPR4   DBUF$,,AUTO
         1 025226   200166 454500                    STP4    STEMP_FIELDIN+2,,AUTO
         1 025227   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 025230   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 025231   000000 701000 xent               TSX1    FMD$REDBUF
         1 025232   025470 702000 1                  TSX2    DATAERR

     6997    13670
     6998    13671    4                OLD_MISEG=FM$MISEG;

  13671  1 025233   200014 470500                    LDP0    SEG$,,AUTO
         1 025234   000100 100500                    MLR     fill='000'O
         1 025235   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 025236   200041 000010                    ADSC9   OLD_MISEG,,AUTO          cn=0,n=8

     6999    13672    4                IF FAK = 1 THEN

  13672  1 025237   200043 235100                    LDA     FAK,,AUTO
         1 025240   000001 115007                    CMPA    1,DL
         1 025241   025244 601000 1                  TNZ     s:13674

     7000    13673    4                   ADDR(OLD_MISEG)->FM$MISEG.FAK='1'B;

  13673  1 025242   400000 236003                    LDQ     -131072,DU
         1 025243   200041 256100                    ORSQ    OLD_MISEG,,AUTO

     7001    13674    4                GX=FM$MISEG.GX;

  13674  1 025244   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1069 
         1 025245   000014 772000                    QRL     12
         1 025246   001777 376007                    ANQ     1023,DL
         1 025247   200102 756100                    STQ     GX,,AUTO

     7002    13675
     7003    13676    4                G$=PINCRW(DBUF$, GX);

  13676  1 025250   000022 736000                    QLS     18
         1 025251   200040 036100                    ADLQ    DBUF$,,AUTO
         1 025252   200026 756100                    STQ     G$,,AUTO

     7004    13677    4                INDX=F$DCB.GDISP-TOT;

  13677  1 025253   200007 471500                    LDP1    JDCB$,,AUTO
         1 025254   100101 236100                    LDQ     65,,PR1
         1 025255   200101 136100                    SBLQ    TOT,,AUTO
         1 025256   200103 756100                    STQ     INDX,,AUTO

     7005    13678    4                IF F$DCB.UBYTES > FM$MISEG.GSIZ*4-INDX THEN

  13678  1 025257   000000 236100                    LDQ     0,,PR0
         1 025260   000026 772000                    QRL     22
         1 025261   007774 376007                    ANQ     4092,DL
         1 025262   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 025263   000001 036007                    ADLQ    1,DL
         1 025264   200103 036100                    ADLQ    INDX,,AUTO
         1 025265   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 025266   000001 036007                    ADLQ    1,DL
         1 025267   025272 604000 1                  TMI     s:13679
         1 025270   100076 116100                    CMPQ    62,,PR1
         1 025271   025360 603000 1                  TRC     s:13689

     7006    13679    4                   IF FM$MISEG.GX+FM$MISEG.GSIZ = DBUF$->FM$GRAN.NAVX THEN

  13679  1 025272   000000 236100                    LDQ     0,,PR0
         1 025273   000030 772000                    QRL     24
         1 025274   001777 376007                    ANQ     1023,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1070 
         1 025275   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 025276   000000 236100                    LDQ     0,,PR0
         1 025277   000014 772000                    QRL     12
         1 025300   001777 376007                    ANQ     1023,DL
         1 025301   200166 036100                    ADLQ    STEMP_FIELDIN+2,,AUTO
         1 025302   200040 473500                    LDP3    DBUF$,,AUTO
         1 025303   200167 756100                    STQ     STEMP_FIELDIN+3,,AUTO
         1 025304   300001 236100                    LDQ     1,,PR3
         1 025305   000022 772000                    QRL     18
         1 025306   200170 756100                    STQ     STEMP_FIELDIN+4,,AUTO
         1 025307   200167 236100                    LDQ     STEMP_FIELDIN+3,,AUTO
         1 025310   200170 116100                    CMPQ    STEMP_FIELDIN+4,,AUTO
         1 025311   025360 601000 1                  TNZ     s:13689

     7007    13680    5                      DO;   /* AT END OF GRAN */

     7008    13681    5                      T=(F$DCB.UBYTES+INDX-(FM$MISEG.GSIZ*4)+3)/4;

  13681  1 025312   100076 236100                    LDQ     62,,PR1
         1 025313   200103 036100                    ADLQ    INDX,,AUTO
         1 025314   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 025315   000000 236100                    LDQ     0,,PR0
         1 025316   000026 772000                    QRL     22
         1 025317   007774 376007                    ANQ     4092,DL
         1 025320   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 025321   000001 036007                    ADLQ    1,DL
         1 025322   200166 036100                    ADLQ    STEMP_FIELDIN+2,,AUTO
         1 025323   000003 036007                    ADLQ    3,DL
         1 025324   000004 506007                    DIV     4,DL
         1 025325   200104 756100                    STQ     T,,AUTO

     7009    13682    5                      IF T > DBUF$->FM$GRAN.AVAIL THEN

  13682  1 025326   300001 236100                    LDQ     1,,PR3
         1 025327   001777 376007                    ANQ     1023,DL
         1 025330   200104 116100                    CMPQ    T,,AUTO
         1 025331   025333 605000 1                  TPL     s:13684
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1071 

     7010    13683    5                         T=DBUF$->FM$GRAN.AVAIL;

  13683  1 025332   200104 756100                    STQ     T,,AUTO

     7011    13684    5                      FM$MISEG.GSIZ=FM$MISEG.GSIZ+T;

  13684  1 025333   000000 236100                    LDQ     0,,PR0
         1 025334   000030 772000                    QRL     24
         1 025335   001777 376007                    ANQ     1023,DL
         1 025336   200104 036100                    ADLQ    T,,AUTO
         1 025337   000030 736000                    QLS     24
         1 025340   000000 676100                    ERQ     0,,PR0
         1 025341   177700 376003                    ANQ     65472,DU
         1 025342   000000 656100                    ERSQ    0,,PR0

     7012    13685    5                      DBUF$->FM$GRAN.NAVX=DBUF$->FM$GRAN.NAVX+T;

  13685  1 025343   200040 470500                    LDP0    DBUF$,,AUTO
         1 025344   000001 236100                    LDQ     1,,PR0
         1 025345   000022 772000                    QRL     18
         1 025346   200104 036100                    ADLQ    T,,AUTO
         1 025347   000000 620006                    EAX0    0,QL
         1 025350   000001 740100                    STX0    1,,PR0

     7013    13686    5                      DBUF$->FM$GRAN.AVAIL=DBUF$->FM$GRAN.AVAIL-T;

  13686  1 025351   200040 470500                    LDP0    DBUF$,,AUTO
         1 025352   000001 236100                    LDQ     1,,PR0
         1 025353   001777 376007                    ANQ     1023,DL
         1 025354   200104 136100                    SBLQ    T,,AUTO
         1 025355   000001 676100                    ERQ     1,,PR0
         1 025356   001777 376007                    ANQ     1023,DL
         1 025357   000001 656100                    ERSQ    1,,PR0

     7014    13687    5                      END;  /* AT END OF GRAN */

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1072 
     7015    13688
     7016    13689    4                GACTB=FM$MISEG.GSIZ*4-INDX;

  13689  1 025360   200014 470500                    LDP0    SEG$,,AUTO
         1 025361   000000 236100                    LDQ     0,,PR0
         1 025362   000026 772000                    QRL     22
         1 025363   007774 376007                    ANQ     4092,DL
         1 025364   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 025365   000001 036007                    ADLQ    1,DL
         1 025366   200103 036100                    ADLQ    INDX,,AUTO
         1 025367   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 025370   000001 036007                    ADLQ    1,DL
         1 025371   200105 756100                    STQ     GACTB,,AUTO

     7017    13690
     7018    13691    4                IF GACTB > F$DCB.UBYTES THEN

  13691  1 025372   025401 604000 1                  TMI     s:13694
         1 025373   100076 116100                    CMPQ    62,,PR1
         1 025374   025401 602000 1                  TNC     s:13694
         1 025375   025401 600000 1                  TZE     s:13694

     7019    13692    4                   SIZE=F$DCB.UBYTES;

  13692  1 025376   100076 235100                    LDA     62,,PR1
         1 025377   200106 755100                    STA     SIZE,,AUTO
         1 025400   025402 710000 1                  TRA     s:13695

     7020    13693    4                ELSE
     7021    13694    4                   SIZE=GACTB;

  13694  1 025401   200106 756100                    STQ     SIZE,,AUTO

     7022    13695    4                CALL INSERT(G$->CHAR1, INDX, SIZE, F$DCB.UB$->CHARS);

  13695  1 025402   100075 473500                    LDP3    61,,PR1
         1 025403   200106 720100                    LXL0    SIZE,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1073 
         1 025404   200026 474500                    LDP4    G$,,AUTO
         1 025405   200103 235100                    LDA     INDX,,AUTO
         1 025406   040145 100540                    MLR     fill='040'O
         1 025407   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 025410   400000 000010                    ADSC9   0,A,PR4                  cn=0,n=*X0

     7023    13696    4                FM$MISEG.GACTB=SIZE+INDX;

  13696  1 025411   200106 236100                    LDQ     SIZE,,AUTO
         1 025412   200103 036100                    ADLQ    INDX,,AUTO
         1 025413   200014 470500                    LDP0    SEG$,,AUTO
         1 025414   000000 752103                    STCQ    0,'03'O,PR0

     7024    13697    4                IF ALTKEY$ ~= ADDR(NIL) THEN

  13697  1 025415   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 025416   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 025417   025426 600000 1                  TZE     s:13703

     7025    13698    5                   DO;   /* UPDATE ALT SEGS */

     7026    13699    5                   FM_MISEG=FM$MISEG;

  13699  1 025420   200014 470500                    LDP0    SEG$,,AUTO
         1 025421   000100 100500                    MLR     fill='000'O
         1 025422   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 025423   200027 000010                    ADSC9   FM_MISEG,,AUTO           cn=0,n=8

     7027    13700    5                   CALL UPALTSEGS ALTRET(ERR);

  13700  1 025424   024717 701000 1                  TSX1    UPALTSEGS
         1 025425   025474 702000 1                  TSX2    ERR

     7028    13701    5                   END;  /* UPDAT ALT SEGS */

     7029    13702
     7030    13703    4                F$DCB.BFR.BUFUP(1)='1'B;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1074 

  13703  1 025426   200007 470500                    LDP0    JDCB$,,AUTO
         1 025427   400000 236003                    LDQ     -131072,DU
         1 025430   000116 256100                    ORSQ    78,,PR0

     7031    13704    4                F$DCB.BFR.BUFUP(0)='1'B;

  13704  1 025431   000115 256100                    ORSQ    77,,PR0

     7032    13705
     7033    13706    4                F$DCB.GDISP=F$DCB.GDISP+SIZE;

  13706  1 025432   000101 236100                    LDQ     65,,PR0
         1 025433   200106 036100                    ADLQ    SIZE,,AUTO
         1 025434   000101 756100                    STQ     65,,PR0

     7034    13707    4                F$DCB.UBYTES=F$DCB.UBYTES-SIZE;

  13707  1 025435   000076 236100                    LDQ     62,,PR0
         1 025436   200106 136100                    SBLQ    SIZE,,AUTO
         1 025437   000076 756100                    STQ     62,,PR0

     7035    13708    4                F$DCB.UB$=PINCRC(F$DCB.UB$, SIZE);

  13708  1 025440   000075 471500                    LDP1    61,,PR0
         1 025441   200106 236100                    LDQ     SIZE,,AUTO
         1 025442   000011 402007                    MPY     9,DL
         1 025443   000000 116003                    CMPQ    0,DU
         1 025444   025446 605000 1                  TPL     s:13708+6
         1 025445   000044 036003                    ADLQ    36,DU
         1 025446   100000 503506                    ABD     0,QL,PR1
         1 025447   000075 451500                    STP1    61,,PR0

     7036    13709    4                END;  /* ADD TO CURRENT SEG */

     7037    13710
     7038    13711    3             TOT=TOT+FM$MISEG.GACTB;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1075 

  13711  1 025450   200014 470500                    LDP0    SEG$,,AUTO
         1 025451   000000 236100                    LDQ     0,,PR0
         1 025452   007777 376007                    ANQ     4095,DL
         1 025453   200101 036100                    ADLQ    TOT,,AUTO
         1 025454   200101 756100                    STQ     TOT,,AUTO

     7039    13712    3             CALL NXTSEG ALTRET(ERR);

  13712  1 025455   015351 701000 1                  TSX1    NXTSEG
         1 025456   025474 702000 1                  TSX2    ERR

     7040    13713    3             FAK=0;

  13713  1 025457   200043 450100                    STZ     FAK,,AUTO

     7041    13714    3          END;  /* WHILE */

  13714  1 025460   200014 236100                    LDQ     SEG$,,AUTO
         1 025461   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 025462   025162 601000 1                  TNZ     s:13658
         1 025463   200007 470500                    LDP0    JDCB$,,AUTO
         1 025464   000076 235100                    LDA     62,,PR0
         1 025465   025162 601000 1                  TNZ     s:13658

     7042    13715
     7043    13716    2          RETURN;

  13716  1 025466   200100 221300                    LDX1  ! I,,AUTO
         1 025467   000001 702211                    TSX2  ! 1,X1

     7044    13717    2   DATAERR: CALL DATAERROR;

  13717  1 025470   005205 701000 1     DATAERR      TSX1    DATAERROR
         1 025471   000000 011000                    NOP     0

     7045    13718    2          ALTRETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1076 

  13718  1 025472   200100 221300                    LDX1  ! I,,AUTO
         1 025473   000000 702211                    TSX2  ! 0,X1

     7046    13719    2   ERR:   ALTRETURN;

  13719  1 025474   200100 221300       ERR          LDX1  ! I,,AUTO
         1 025475   000000 702211                    TSX2  ! 0,X1

     7047    13720    2          END WRCONT;
     7048    13721               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1077 
     7049    13722        /*I*     NAME:     WRITE
     7050    13723                 PURPOSE:  To handle the M$WRITE pmme
     7051    13724                 DESCRIPTION:
     7052    13725                      If the file has defined fields, then check out the
     7053    13726                 record for illegal key fields.
     7054    13727
     7055    13728                      If this is a one granule keyed file, then expand it to a two
     7056    13729                 granule keyed file.
     7057    13730
     7058    13731                      If this is a continued write, then call the continued write
     7059    13732                 subroutine.  Otherwise, if the user specified CONT now, and
     7060    13733                 F$DCB.CONT wasn't set, that means that this is the first write
     7061    13734                 in a set of continued writes.  We handle the first part here.
     7062    13735
     7063    13736                      Next, set FM$CFU.RCSZ if this is a large write.  FM$CFU.RCSZ
     7064    13737                 is just supposed to be a rough estimate (within 4k bytes) of the
     7065    13738                 largest record in the file.  If this isn't a keyed file, then there
     7066    13739                 will be some restrictions.  First of all, the record must be large
     7067    13740                 enough to hold all of the specified keys.  Also, we can't handle
     7068    13741                 encrypted records.  There would be no way to find keys.  If this
     7069    13742                 is a keyed file, then check out the user specified key.  Make sure
     7070    13743                 that all of the key is there so we don't trap later.  If the
     7071    13744                 user didn't specify a key, then call WRNOKEY.
     7072    13745        */
     7073    13746                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1078 
     7074    13747    1   WRITE: PROC ALTRET;

  13747  1 025476   200076 741300       WRITE        STX1  ! DELALL_FAST+2,,AUTO

     7075    13748    2          DCL I SBIN;
     7076    13749    2          DCL 1 ZAP BASED,
     7077    13750    2               2 * CHAR(I);
     7078    13751        /* */
     7079    13752    2          FM$CFU.FMOD='1'B;

  13752  1 025477   200010 470500                    LDP0    CFU$,,AUTO
         1 025500   004000 236003                    LDQ     2048,DU
         1 025501   000000 256100                    ORSQ    0,,PR0

     7080    13753    2          DBUF$=ADDR(NIL);

  13753  1 025502   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 025503   200040 756100                    STQ     DBUF$,,AUTO

     7081    13754
     7082    13755    2          IF F$DCB.CONT THEN

  13755  1 025504   200007 471500                    LDP1    JDCB$,,AUTO
         1 025505   100064 236100                    LDQ     52,,PR1
         1 025506   000040 316007                    CANQ    32,DL
         1 025507   025513 600000 1                  TZE     s:13759

     7083    13756    2             CALL WRCONT ALTRET(ERR);

  13756  1 025510   025052 701000 1                  TSX1    WRCONT
         1 025511   025676 702000 1                  TSX2    ERR
         1 025512   025674 710000 1                  TRA     s:13817

     7084    13757    2          ELSE
     7085    13758    3             DO;   /* NORMAL WRITE */

     7086    13759    3             F$DCB.GDISP=0;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1079 

  13759  1 025513   100101 450100                    STZ     65,,PR1

     7087    13760
     7088    13761    3             IF FPT$WRITE_V.DVBYTE.CONT THEN

  13761  1 025514   000000 473400 xsym               LDP3    B$PS0$
         1 025515   300003 430100                    FSZN    3,,PR3
         1 025516   025536 605000 1                  TPL     s:13767

     7089    13762    3                IF F$DCB.COMP OR FPT$WRITE_V.SEED OR F$DCB.SEED OR F$DCB.SHARED THEN

  13762  1 025517   100031 236100                    LDQ     25,,PR1
         1 025520   000100 316007                    CANQ    64,DL
         1 025521   025531 601000 1                  TNZ     s:13764
         1 025522   300002 235100                    LDA     2,,PR3
         1 025523   025531 601000 1                  TNZ     s:13764
         1 025524   100062 235100                    LDA     50,,PR1
         1 025525   025531 601000 1                  TNZ     s:13764
         1 025526   100064 236100                    LDQ     52,,PR1
         1 025527   100000 316003                    CANQ    32768,DU
         1 025530   025536 600000 1                  TZE     s:13767

     7090    13763    4                   DO;   /* NO CONTINUATION ALLOWED */

     7091    13764    4                   B$JIT.ERR=ERRNOCONT;

  13764  1 025531   000015 236000 0                  LDQ     ERRNOCONT
         1 025532   000000 474400 xsym               LDP4    B$JIT$
         1 025533   400012 756100                    STQ     10,,PR4

     7092    13765    4                   ALTRETURN;

  13765  1 025534   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 025535   000000 702211                    TSX2  ! 0,X1

     7093    13766    4                   END;  /* NO CONTINUATION ALLOWED */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1080 
     7094    13767    3             IF F$DCB.UBYTES >= 4096 THEN

  13767  1 025536   100076 235100                    LDA     62,,PR1
         1 025537   010000 115007                    CMPA    4096,DL
         1 025540   025554 602000 1                  TNC     s:13771

     7095    13768    3                IF F$DCB.UBYTES/4096 > FM$CFU.RCSZ THEN

  13768  1 025541   100076 236100                    LDQ     62,,PR1
         1 025542   000014 772000                    QRL     12
         1 025543   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 025544   000004 236100                    LDQ     4,,PR0
         1 025545   000033 772000                    QRL     27
         1 025546   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 025547   025554 603000 1                  TRC     s:13771

     7096    13769    3                   FM$CFU.RCSZ=F$DCB.UBYTES/4096;

  13769  1 025550   100076 236100                    LDQ     62,,PR1
         1 025551   000014 772000                    QRL     12
         1 025552   000033 736000                    QLS     27
         1 025553   000004 552140                    STBQ    4,'40'O,PR0

     7097    13770
     7098    13771    3             IF ORG ~= %KEYED# THEN

  13771  1 025554   200022 235100                    LDA     ORG,,AUTO
         1 025555   000002 115007                    CMPA    2,DL
         1 025556   025641 600000 1                  TZE     s:13802

     7099    13772    4                DO;   /* CHECK INDEXED RESTRICTIONS */

     7100    13773    4                IF ALTKEY$ = ADDR(NIL) THEN

  13773  1 025557   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 025560   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 025561   025573 601000 1                  TNZ     s:13776
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1081 

     7101    13774    4                   I=F$DCB.KEYX+F$DCB.KEYL;

  13774  1 025562   100036 236100                    LDQ     30,,PR1
         1 025563   000011 772000                    QRL     9
         1 025564   000777 376007                    ANQ     511,DL
         1 025565   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 025566   100036 236100                    LDQ     30,,PR1
         1 025567   000022 772000                    QRL     18
         1 025570   200166 036100                    ADLQ    STEMP_FIELDIN+2,,AUTO
         1 025571   200077 756100                    STQ     I,,AUTO
         1 025572   025605 710000 1                  TRA     s:13780

     7102    13775    4                ELSE
     7103    13776    4                   IF ORG = %INDEXED# THEN

  13776  1 025573   000006 115007                    CMPA    6,DL
         1 025574   025602 601000 1                  TNZ     s:13779

     7104    13777    4                      I=ALTKEYS.MINWRSIZ;

  13777  1 025575   200023 474500                    LDP4    ALTKEY$,,AUTO
         1 025576   400000 236100                    LDQ     0,,PR4
         1 025577   007777 376007                    ANQ     4095,DL
         1 025600   200077 756100                    STQ     I,,AUTO
         1 025601   025605 710000 1                  TRA     s:13780

     7105    13778    4                   ELSE
     7106    13779    4                      I=IRKEYS.MINSIZE;

  13779  1 025602   200023 474500                    LDP4    ALTKEY$,,AUTO
         1 025603   400001 235100                    LDA     1,,PR4
         1 025604   200077 755100                    STA     I,,AUTO

     7107    13780    4                IF I > F$DCB.UBYTES THEN

  13780  1 025605   100076 236100                    LDQ     62,,PR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1082 
         1 025606   025616 604000 1                  TMI     s:13789
         1 025607   200077 116100                    CMPQ    I,,AUTO
         1 025610   025616 605000 1                  TPL     s:13789

     7108    13781    5                   DO;   /* RECORD TOO SMALL */

     7109    13782    5                   B$JIT.ERR=ERRINDBC;

  13782  1 025611   000012 236000 0                  LDQ     ERRINDBC
         1 025612   000000 474400 xsym               LDP4    B$JIT$
         1 025613   400012 756100                    STQ     10,,PR4

     7110    13783    5                   ALTRETURN;

  13783  1 025614   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 025615   000000 702211                    TSX2  ! 0,X1

     7111    13784    5                   END;  /* RECORD TOO SMALL */
     7112    13785        /*E*   ERROR:      FMG-E$INDBC-2
     7113    13786               MESSAGE: On an M$WRITE to an indexed or IREL file, the byte
     7114    13787                        count is too small to include all the key(s).
     7115    13788        */
     7116    13789    4                IF FPT$WRITE_V.SEED OR F$DCB.SEED THEN

  13789  1 025616   300002 235100                    LDA     2,,PR3
         1 025617   025622 601000 1                  TNZ     s:13791
         1 025620   100062 235100                    LDA     50,,PR1
         1 025621   025627 600000 1                  TZE     s:13795

     7117    13790    5                   DO;   /* NO SEEDS ALLOWED */

     7118    13791    5                   B$JIT.ERR=ERRINDSEED;

  13791  1 025622   000016 236000 0                  LDQ     ERRINDSEED
         1 025623   000000 474400 xsym               LDP4    B$JIT$
         1 025624   400012 756100                    STQ     10,,PR4

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1083 
     7119    13792    5                   ALTRETURN;

  13792  1 025625   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 025626   000000 702211                    TSX2  ! 0,X1

     7120    13793    5                   END;  /* NO SEEDS ALLOWED */
     7121    13794
     7122    13795    4                IF ORG=%IREL# THEN

  13795  1 025627   200022 235100                    LDA     ORG,,AUTO
         1 025630   000015 115007                    CMPA    13,DL
         1 025631   025636 601000 1                  TNZ     s:13798

     7123    13796    4                   CALL FMD$CHKFIELD(B$PS2$, %FMD_CHKTYP_REC) ALTRET(ERR);

  13796  1 025632   000075 630400 2                  EPPR0   61
         1 025633   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 025634   000000 701000 xent               TSX1    FMD$CHKFIELD
         1 025635   025676 702000 1                  TSX2    ERR

     7124    13797
     7125    13798    4                CALL WRKEY ALTRET(ERR);

  13798  1 025636   025700 701000 1                  TSX1    WRKEY
         1 025637   025676 702000 1                  TSX2    ERR

     7126    13799    4                END;  /* CHECK INDEX RESTRICTIONS */

  13799  1 025640   025674 710000 1                  TRA     s:13817

     7127    13800    3             ELSE
     7128    13801    4                DO;   /* CHECK KEY RESTRICTIONS */

     7129    13802    4                CALL HFF$DSIZ(B$PS1$, I) ALTRET(NOKEY);

  13802  1 025641   200077 634500                    EPPR4   I,,AUTO
         1 025642   200167 454500                    STP4    STEMP_FIELDIN+3,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1084 
         1 025643   000052 236000 2                  LDQ     42
         1 025644   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 025645   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 025646   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 025647   000000 701000 xent               TSX1    HFF$DSIZ
         1 025650   025672 702000 1                  TSX2    NOKEY

     7130    13803    4                TEMP_CHAR=B$PS1$->CHAR1;

  13803  1 025651   000000 470400 xsym               LDP0    B$PS1$
         1 025652   040100 100500                    MLR     fill='040'O
         1 025653   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 025654   200072 000001                    ADSC9   TEMP_CHAR,,AUTO          cn=0,n=1

     7131    13804    4                IF ASCBIN(TEMP_CHAR)+1 > I THEN

  13804  1 025655   200072 236100                    LDQ     TEMP_CHAR,,AUTO
         1 025656   000033 772000                    QRL     27
         1 025657   025662 604000 1                  TMI     s:13806
         1 025660   200077 116100                    CMPQ    I,,AUTO
         1 025661   025667 604000 1                  TMI     s:13809

     7132    13805    5                   DO;   /* KEY TRAP */

     7133    13806    5                   B$JIT.ERR=ERRKEYTRAP;

  13806  1 025662   000027 236000 0                  LDQ     ERRKEYTRAP
         1 025663   000000 471400 xsym               LDP1    B$JIT$
         1 025664   100012 756100                    STQ     10,,PR1

     7134    13807    5                   ALTRETURN;

  13807  1 025665   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 025666   000000 702211                    TSX2  ! 0,X1

     7135    13808    5                   END;  /* KEY TRAP */
     7136    13809    4                CALL WRKEY ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1085 

  13809  1 025667   025700 701000 1                  TSX1    WRKEY
         1 025670   025676 702000 1                  TSX2    ERR

     7137    13810
     7138    13811    5                DO WHILE ('0'B);

  13811  1 025671   025674 710000 1                  TRA     s:13817

     7139    13812    5   NOKEY:          CALL WRNOKEY ALTRET(ERR);

  13812  1 025672   026304 701000 1     NOKEY        TSX1    WRNOKEY
         1 025673   025676 702000 1                  TSX2    ERR

     7140    13813    5                END;

     7141    13814    4                END;  /* CHECK KEY RESTRICTIONS */

     7142    13815    3             END;  /* NORMAL WRITE */

     7143    13816
     7144    13817    2          RETURN;

  13817  1 025674   200076 221300                    LDX1  ! DELALL_FAST+2,,AUTO
         1 025675   000001 702211                    TSX2  ! 1,X1

     7145    13818    2   ERR:   ALTRETURN;

  13818  1 025676   200076 221300       ERR          LDX1  ! DELALL_FAST+2,,AUTO
         1 025677   000000 702211                    TSX2  ! 0,X1

     7146    13819    2          END WRITE;
     7147    13820               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1086 
     7148    13821        /*I*     NAME:     WRKEY
     7149    13822                 PURPOSE:  To handle keyed writes
     7150    13823                 DESCRIPTION:
     7151    13824                      If this is a sequential write, then try a short cut.
     7152    13825                 check the current key against the last key in the file, if it
     7153    13826                 is greater, then allow the write.
     7154    13827
     7155    13828                      Try to find the key that the user specified.  If it is
     7156    13829                 deleted, that doesn't count.  If the key did exist, and the
     7157    13830                 user doesn't have update privilege, then that is a no no.
     7158    13831                 If the user said that we are only to allow new keys, then
     7159    13832                 altreturn.  If the file has alternate indexes, then check
     7160    13833                 them out for any changes that might have occurred.
     7161    13834
     7162    13835                      If we didn't find the key, then check to see if the user
     7163    13836                 is allowed to write new keys.  Make sure that the user said
     7164    13837                 that writing new keys was okay.  Now write the new key.
     7165    13838        */
     7166    13839                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1087 
     7167    13840    1   WRKEY: PROC ALTRET;

  13840  1 025700   200100 741300       WRKEY        STX1  ! I,,AUTO

     7168    13841        /* */
     7169    13842    2          CALL SETKEY(B$PS1$) ALTRET(ERR);

  13842  1 025701   000052 236000 2                  LDQ     42
         1 025702   200113 756100                    STQ     @K$,,AUTO
         1 025703   021704 701000 1                  TSX1    SETKEY
         1 025704   026074 702000 1                  TSX2    ERR

     7170    13843    2          COMFLG=%USEREC;

  13843  1 025705   000001 235007                    LDA     1,DL
         1 025706   200060 755100                    STA     COMFLG,,AUTO

     7171    13844
     7172    13845    2          IF F$DCB.FUN = %CREATE# AND F$DCB.ACS ~= %DIRECT# THEN

  13845  1 025707   200007 470500                    LDP0    JDCB$,,AUTO
         1 025710   000032 236100                    LDQ     26,,PR0
         1 025711   000777 376003                    ANQ     511,DU
         1 025712   000003 116003                    CMPQ    3,DU
         1 025713   025736 601000 1                  TNZ     s:13856
         1 025714   000036 236100                    LDQ     30,,PR0
         1 025715   000777 376007                    ANQ     511,DL
         1 025716   000002 116007                    CMPQ    2,DL
         1 025717   025736 600000 1                  TZE     s:13856

     7173    13846    3             DO;   /* CHECK LAST KEY */

     7174    13847    3             CALL CHECK_LAST ALTRET(ERR);

  13847  1 025720   003421 701000 1                  TSX1    CHECK_LAST
         1 025721   026074 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1088 
     7175    13848    3             IF RESULT = %GREATER THEN

  13848  1 025722   200031 235100                    LDA     RESULT,,AUTO
         1 025723   000002 115007                    CMPA    2,DL
         1 025724   025736 601000 1                  TNZ     s:13856

     7176    13849    4                DO;   /* LAST KEY */

     7177    13850    4                CRECX=KEYCNT+1;

  13850  1 025725   200017 236100                    LDQ     KEYCNT,,AUTO
         1 025726   000001 036007                    ADLQ    1,DL
         1 025727   200015 756100                    STQ     CRECX,,AUTO

     7178    13851    4                F$DCB.CRECX=CRECX;

  13851  1 025730   000000 620006                    EAX0    0,QL
         1 025731   200007 470500                    LDP0    JDCB$,,AUTO
         1 025732   000067 440100                    SXL0    55,,PR0

     7179    13852    4                KEY$=ADDR(NIL);

  13852  1 025733   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 025734   200020 756100                    STQ     KEY$,,AUTO

     7180    13853    4                GOTO NOTFIND1;

  13853  1 025735   026024 710000 1                  TRA     NOTFIND1

     7181    13854    4                END;  /* LAST KEY */
     7182    13855    3             END;  /* CHECK LAST KEY */
     7183    13856    2          CALL FINDKEY ALTRET(NOTFIND);

  13856  1 025736   007536 701000 1                  TSX1    FINDKEY
         1 025737   026015 702000 1                  TSX2    NOTFIND

     7184    13857    2          IF FM$KEYENT.D THEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1089 

  13857  1 025740   200020 470500                    LDP0    KEY$,,AUTO
         1 025741   000000 234100                    SZN     0,,PR0
         1 025742   026024 604000 1                  TMI     NOTFIND1

     7185    13858    2             GOTO NOTFIND1;
     7186    13859
     7187    13860    2         IF F$DCB.FUN = %CREATE# AND F$DCB.ACS ~= %DIRECT# THEN

  13860  1 025743   200007 471500                    LDP1    JDCB$,,AUTO
         1 025744   100032 236100                    LDQ     26,,PR1
         1 025745   000777 376003                    ANQ     511,DU
         1 025746   000003 116003                    CMPQ    3,DU
         1 025747   025761 601000 1                  TNZ     s:13866
         1 025750   100036 236100                    LDQ     30,,PR1
         1 025751   000777 376007                    ANQ     511,DL
         1 025752   000002 116007                    CMPQ    2,DL
         1 025753   025761 600000 1                  TZE     s:13866

     7188    13861    3            DO;   /* KEY OUT OF ORDER */

     7189    13862    3            B$JIT.ERR=ERRKEYORDER;

  13862  1 025754   000014 236000 0                  LDQ     ERRKEYORDER
         1 025755   000000 473400 xsym               LDP3    B$JIT$
         1 025756   300012 756100                    STQ     10,,PR3

     7190    13863    3            ALTRETURN;

  13863  1 025757   200100 221300                    LDX1  ! I,,AUTO
         1 025760   000000 702211                    TSX2  ! 0,X1

     7191    13864    3            END;  /* KEY OUT OF ORDER */
     7192    13865
     7193    13866    2          IF NOT F$DCB.FFLG.UPD THEN

  13866  1 025761   100004 236100                    LDQ     4,,PR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1090 
         1 025762   040000 316003                    CANQ    16384,DU
         1 025763   025771 601000 1                  TNZ     s:13876

     7194    13867    3             DO;   /* CANT REWRITE */

     7195    13868    3             B$JIT.ERR=ERRREWRITE;

  13868  1 025764   000001 236000 0                  LDQ     ERRREWRITE
         1 025765   000000 473400 xsym               LDP3    B$JIT$
         1 025766   300012 756100                    STQ     10,,PR3

     7196    13869    3             ALTRETURN;

  13869  1 025767   200100 221300                    LDX1  ! I,,AUTO
         1 025770   000000 702211                    TSX2  ! 0,X1

     7197    13870    3             END;  /* CANT REWRITE */
     7198    13871        /*E*   ERROR:      FMG-E$REWRITE-2
     7199    13872               MESSAGE: You are not allowed to rewrite records% in file %FN%
     7200    13873               DESCRIPTION:  The user does not have permission to rewrite
     7201    13874                             existing records in this file.
     7202    13875        */
     7203    13876    2          IF (NOT FPT$WRITE_V.ONEWKEY) AND FPT$WRITE_V.NEWKEY THEN

  13876  1 025771   000000 473400 xsym               LDP3    B$PS0$
         1 025772   300000 236100                    LDQ     0,,PR3
         1 025773   000400 316007                    CANQ    256,DL
         1 025774   026004 601000 1                  TNZ     s:13886
         1 025775   000200 316007                    CANQ    128,DL
         1 025776   026004 600000 1                  TZE     s:13886

     7204    13877    3             DO;   /* CANT REWRITE */

     7205    13878    3             B$JIT.ERR=ERROLDREC;

  13878  1 025777   000002 236000 0                  LDQ     ERROLDREC
         1 026000   000000 474400 xsym               LDP4    B$JIT$
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1091 
         1 026001   400012 756100                    STQ     10,,PR4

     7206    13879    3             ALTRETURN;

  13879  1 026002   200100 221300                    LDX1  ! I,,AUTO
         1 026003   000000 702211                    TSX2  ! 0,X1

     7207    13880    3             END;  /* CANT REWRITE */
     7208    13881        /*E*   ERROR:      FMG-E$OLDREC-2
     7209    13882               MESSAGE:    Key already exists and NEWKEY was specified% for %FN%
     7210    13883               DESCRIPTION:  The key already exists in the file and NEWKEY
     7211    13884                             was specified and ONEWKEY was not.
     7212    13885        */
     7213    13886    2          IF ALTKEY$ ~= ADDR(NIL) THEN

  13886  1 026004   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 026005   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 026006   026011 600000 1                  TZE     s:13889

     7214    13887    2             CALL ALTCHK ALTRET(ERR);

  13887  1 026007   000553 701000 1                  TSX1    ALTCHK
         1 026010   026074 702000 1                  TSX2    ERR

     7215    13888
     7216    13889    2          CALL BLDREC ALTRET(ERR);

  13889  1 026011   001772 701000 1                  TSX1    BLDREC
         1 026012   026074 702000 1                  TSX2    ERR

     7217    13890    2          RETURN;

  13890  1 026013   200100 221300                    LDX1  ! I,,AUTO
         1 026014   000001 702211                    TSX2  ! 1,X1

  13886  1 026015                       NOTFIND      null
     7218    13891    2   NOTFIND: ;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1092 
     7219    13892    2          IF B$JIT.ERR.CODE ~= %E$NOKEY THEN

  13892  1 026015   000000 470400 xsym               LDP0    B$JIT$
         1 026016   000012 236100                    LDQ     10,,PR0
         1 026017   377770 376007                    ANQ     131064,DL
         1 026020   001020 116007                    CMPQ    528,DL
         1 026021   026024 600000 1                  TZE     NOTFIND1

     7220    13893    2             ALTRETURN;

  13893  1 026022   200100 221300                    LDX1  ! I,,AUTO
         1 026023   000000 702211                    TSX2  ! 0,X1

  13892  1 026024                       NOTFIND1     null
     7221    13894    2   NOTFIND1: ;
     7222    13895    2          IF NOT F$DCB.FFLG.WNEW THEN

  13895  1 026024   200007 470500                    LDP0    JDCB$,,AUTO
         1 026025   000004 236100                    LDQ     4,,PR0
         1 026026   100000 316003                    CANQ    32768,DU
         1 026027   026035 601000 1                  TNZ     s:13905

     7223    13896    3             DO;   /* CANT WRITE NEW RECS */

     7224    13897    3             B$JIT.ERR=ERRWRITNEW;

  13897  1 026030   000003 236000 0                  LDQ     ERRWRITNEW
         1 026031   000000 471400 xsym               LDP1    B$JIT$
         1 026032   100012 756100                    STQ     10,,PR1

     7225    13898    3             ALTRETURN;

  13898  1 026033   200100 221300                    LDX1  ! I,,AUTO
         1 026034   000000 702211                    TSX2  ! 0,X1

     7226    13899    3             END;  /* CANT WRITE NEW RECS */
     7227    13900        /*E*   ERROR:      FMG-E$WRITNEW-2
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1093 
     7228    13901               MESSAGE: You are not allowed to write new records% in file %FN%
     7229    13902               DESCRIPTION:  This user does not have permission to write new
     7230    13903                             records into this file.
     7231    13904        */
     7232    13905    2          IF (NOT FPT$WRITE_V.ONEWKEY) AND (NOT FPT$WRITE_V.NEWKEY) THEN

  13905  1 026035   000000 471400 xsym               LDP1    B$PS0$
         1 026036   100000 236100                    LDQ     0,,PR1
         1 026037   000400 316007                    CANQ    256,DL
         1 026040   026050 601000 1                  TNZ     s:13915
         1 026041   000200 316007                    CANQ    128,DL
         1 026042   026050 601000 1                  TNZ     s:13915

     7233    13906    3             DO;   /* CANT WRITE NEW RECS */

     7234    13907    3             B$JIT.ERR=ERRNEWREC;

  13907  1 026043   000005 236000 0                  LDQ     ERRNEWREC
         1 026044   000000 473400 xsym               LDP3    B$JIT$
         1 026045   300012 756100                    STQ     10,,PR3

     7235    13908    3             ALTRETURN;

  13908  1 026046   200100 221300                    LDX1  ! I,,AUTO
         1 026047   000000 702211                    TSX2  ! 0,X1

     7236    13909    3             END;  /* CANT WRITE NEW RECS */
     7237    13910        /*E*   ERROR:      FMG-E$NEWREC-2
     7238    13911               MESSAGE: NEWKEY or ONEWKEY required to write new records% in  %FN%
     7239    13912               DESCRIPTION:  The key does not already exist in the file and
     7240    13913                             NEWKEY or ONEWKEY was not specified
     7241    13914        */
     7242    13915    2          IF F$DCB.FUN = %CREATE# AND F$DCB.ACS ~= %DIRECT# THEN

  13915  1 026050   000032 236100                    LDQ     26,,PR0
         1 026051   000777 376003                    ANQ     511,DU
         1 026052   000003 116003                    CMPQ    3,DU
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1094 
         1 026053   026070 601000 1                  TNZ     s:13922
         1 026054   000036 236100                    LDQ     30,,PR0
         1 026055   000777 376007                    ANQ     511,DL
         1 026056   000002 116007                    CMPQ    2,DL
         1 026057   026070 600000 1                  TZE     s:13922

     7243    13916    2             IF KEY$ ~= ADDR(NIL) THEN

  13916  1 026060   200020 236100                    LDQ     KEY$,,AUTO
         1 026061   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 026062   026070 600000 1                  TZE     s:13922

     7244    13917    3             DO;   /* KEY ORDER */

     7245    13918    3             B$JIT.ERR=ERRKEYORDER;

  13918  1 026063   000014 236000 0                  LDQ     ERRKEYORDER
         1 026064   000000 473400 xsym               LDP3    B$JIT$
         1 026065   300012 756100                    STQ     10,,PR3

     7246    13919    3             ALTRETURN;

  13919  1 026066   200100 221300                    LDX1  ! I,,AUTO
         1 026067   000000 702211                    TSX2  ! 0,X1

     7247    13920    3             END;  /* KEY ORDER */
     7248    13921
     7249    13922    2          CALL WRNEWKEY ALTRET(ERR);

  13922  1 026070   026076 701000 1                  TSX1    WRNEWKEY
         1 026071   026074 702000 1                  TSX2    ERR

     7250    13923    2          RETURN;

  13923  1 026072   200100 221300                    LDX1  ! I,,AUTO
         1 026073   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1095 
     7251    13924    2   ERR:   ALTRETURN;

  13924  1 026074   200100 221300       ERR          LDX1  ! I,,AUTO
         1 026075   000000 702211                    TSX2  ! 0,X1

     7252    13925    2          END WRKEY;
     7253    13926               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1096 
     7254    13927        /*I*     NAME:     WRNEWKEY
     7255    13928                 PURPOSE:  To write new records
     7256    13929                 DESCRIPTION:
     7257    13930                      B$JIT.ERR is set to 0 because we probably got here as a
     7258    13931                 result of not finding a key.  If the key is at the beginning,
     7259    13932                 or end of the granule, or there isn't a deleted key to reuse,
     7260    13933                 then set the flag to indicate we need a new key.
     7261    13934
     7262    13935                      If it appears that we can reuse a key, then, if it is an
     7263    13936                 indexed file, store the new text.  If it is a keyed file, then
     7264    13937                 check the size of the key.  The key sizes must be the same number
     7265    13938                 of words.  If they aren't, it's too much trouble to change the
     7266    13939                 key size.  If this is an irel file, then call a subroutine to
     7267    13940                 build the key.
     7268    13941
     7269    13942                      If we were able to reuse the key, then we may have had to
     7270    13943                 back up to reuse a deleted key.  If the file has alternate
     7271    13944                 indexes, then make sure that they are rebuilt.
     7272    13945
     7273    13946                      Call BLDREC to transfer the record to the file.
     7274    13947        */
     7275    13948                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1097 
     7276    13949    1   WRNEWKEY: PROC ALTRET;

  13949  1 026076   200102 741300       WRNEWKEY     STX1  ! GX,,AUTO

     7277    13950    2          DCL TCRECX UBIN;
     7278    13951    2          DCL I SBIN;
     7279    13952    2          DCL NEWKEYF SBIN;
     7280    13953    2          DCL CHARS CHAR(KEYIN_SIZE) BASED;
     7281    13954    2          DCL ARRAY(0:0) SBIN BASED;
     7282    13955    2          DCL 1 KEY BASED ALIGNED,
     7283    13956    2               2 * BIT(1) UNAL,
     7284    13957    2               2 SIZE UBIN(8) UNAL,
     7285    13958    2               2 TEXT CHAR(KEYIN_SIZE) CALIGNED;
     7286    13959        /* */
     7287    13960    2          B$JIT.ERR='0'B;

  13960  1 026077   000000 470400 xsym               LDP0    B$JIT$
         1 026100   000012 450100                    STZ     10,,PR0

     7288    13961    2          F$DCB.RPOS='0'B;

  13961  1 026101   200007 471500                    LDP1    JDCB$,,AUTO
         1 026102   000005 236000 2                  LDQ     5
         1 026103   100064 356100                    ANSQ    52,,PR1

     7289    13962    2          NEWKEYF=0;

  13962  1 026104   200105 450100                    STZ     NEWKEYF,,AUTO

     7290    13963    2          IF KEY$ = ADDR(NIL) THEN

  13963  1 026105   200020 236100                    LDQ     KEY$,,AUTO
         1 026106   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 026107   026113 601000 1                  TNZ     s:13966

     7291    13964    2             NEWKEYF=1;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1098 
  13964  1 026110   000001 235007                    LDA     1,DL
         1 026111   200105 755100                    STA     NEWKEYF,,AUTO
         1 026112   026163 710000 1                  TRA     s:13982

     7292    13965    2          ELSE
     7293    13966    2             IF NOT FM$KEYENT.D THEN

  13966  1 026113   200020 473500                    LDP3    KEY$,,AUTO
         1 026114   300000 234100                    SZN     0,,PR3
         1 026115   026161 604000 1                  TMI     s:13980

     7294    13967    2                IF CRECX > 1 THEN

  13967  1 026116   200015 235100                    LDA     CRECX,,AUTO
         1 026117   000002 115007                    CMPA    2,DL
         1 026120   026156 602000 1                  TNC     s:13978

     7295    13968    3                   DO;   /* CHECK PREV KEY */

     7296    13969    3                   TCRECX=CRECX-1;

  13969  1 026121   000001 135007                    SBLA    1,DL
         1 026122   200103 755100                    STA     TCRECX,,AUTO

     7297    13970    3                   IF TCRECX < BOUND THEN

  13970  1 026123   200103 236100                    LDQ     TCRECX,,AUTO
         1 026124   026140 604000 1                  TMI     s:13973
         1 026125   200016 116100                    CMPQ    BOUND,,AUTO
         1 026126   026140 605000 1                  TPL     s:13973

     7298    13971    3                      KEY$=PINCRW(BUF$, FM$KEYTBL(TCRECX));

  13971  1 026127   200025 474500                    LDP4    KTPTR$,,AUTO
         1 026130   000100 101506                    MRL     fill='000'O
         1 026131   400000 000001                    ADSC9   0,Q,PR4                  cn=0,n=1
         1 026132   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1099 
         1 026133   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 026134   000000 636010                    EAQ     0,X0
         1 026135   200024 036100                    ADLQ    BUF$,,AUTO
         1 026136   200020 756100                    STQ     KEY$,,AUTO
         1 026137   026150 710000 1                  TRA     s:13974

     7299    13972    3                   ELSE
     7300    13973    3                      KEY$=PINCRW(BUF$, FM$KEYTBL(TCRECX)+512);

  13973  1 026140   200025 474500                    LDP4    KTPTR$,,AUTO
         1 026141   000100 101506                    MRL     fill='000'O
         1 026142   400000 000001                    ADSC9   0,Q,PR4                  cn=0,n=1
         1 026143   200166 000002                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=2
         1 026144   200166 220100                    LDX0    STEMP_FIELDIN+2,,AUTO
         1 026145   001000 636010                    EAQ     512,X0
         1 026146   200024 036100                    ADLQ    BUF$,,AUTO
         1 026147   200020 756100                    STQ     KEY$,,AUTO

     7301    13974    3                   IF NOT FM$KEYENT.D THEN

  13974  1 026150   200020 473500                    LDP3    KEY$,,AUTO
         1 026151   300000 234100                    SZN     0,,PR3
         1 026152   026163 604000 1                  TMI     s:13982

     7302    13975    3                      NEWKEYF=1;

  13975  1 026153   000001 235007                    LDA     1,DL
         1 026154   200105 755100                    STA     NEWKEYF,,AUTO

     7303    13976    3                   END;

  13976  1 026155   026163 710000 1                  TRA     s:13982

     7304    13977    2                ELSE
     7305    13978    2                   NEWKEYF=1;

  13978  1 026156   000001 235007                    LDA     1,DL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1100 
         1 026157   200105 755100                    STA     NEWKEYF,,AUTO
         1 026160   026163 710000 1                  TRA     s:13982

     7306    13979    2             ELSE
     7307    13980    2                TCRECX=CRECX;

  13980  1 026161   200015 235100                    LDA     CRECX,,AUTO
         1 026162   200103 755100                    STA     TCRECX,,AUTO

     7308    13981
     7309    13982    2          IF NEWKEYF = 0 THEN

  13982  1 026163   200105 235100                    LDA     NEWKEYF,,AUTO
         1 026164   026242 601000 1                  TNZ     s:14006

     7310    13983    3             DO;   /* TRY TO REUSE KEY */

     7311    13984    3             IF ORG = %INDEXED# THEN

  13984  1 026165   200022 235100                    LDA     ORG,,AUTO
         1 026166   000006 115007                    CMPA    6,DL
         1 026167   026177 601000 1                  TNZ     s:13989

     7312    13985    4                DO;   /* INDEXED */

     7313    13986    4                KEY$->KEY.TEXT=KEYIN$->CHARS;

  13986  1 026170   200037 473500                    LDP3    KEYIN$,,AUTO
         1 026171   200056 720100                    LXL0    KEYIN_SIZE,,AUTO
         1 026172   200020 474500                    LDP4    KEY$,,AUTO
         1 026173   040140 100540                    MLR     fill='040'O
         1 026174   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 026175   400000 200010                    ADSC9   0,,PR4                   cn=1,n=*X0

     7314    13987    4                END;  /* INDEXED */

  13987  1 026176   026242 710000 1                  TRA     s:14006
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1101 

     7315    13988    3             ELSE
     7316    13989    3                IF ORG = %KEYED# THEN

  13989  1 026177   000002 115007                    CMPA    2,DL
         1 026200   026236 601000 1                  TNZ     s:14002

     7317    13990    4                   DO;   /* KEYED */

     7318    13991    4                   IF KEYIN_SIZE/4 ~= FM$KEYENT.KLB/4 THEN

  13991  1 026201   200056 236100                    LDQ     KEYIN_SIZE,,AUTO
         1 026202   000002 772000                    QRL     2
         1 026203   200020 473500                    LDP3    KEY$,,AUTO
         1 026204   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 026205   300000 236100                    LDQ     0,,PR3
         1 026206   000033 772000                    QRL     27
         1 026207   000377 376007                    ANQ     255,DL
         1 026210   000002 772000                    QRL     2
         1 026211   200166 116100                    CMPQ    STEMP_FIELDIN+2,,AUTO
         1 026212   026216 600000 1                  TZE     s:13995

     7319    13992    4                      NEWKEYF=1;

  13992  1 026213   000001 236007                    LDQ     1,DL
         1 026214   200105 756100                    STQ     NEWKEYF,,AUTO
         1 026215   026242 710000 1                  TRA     s:14006

     7320    13993    4                   ELSE
     7321    13994    5                      DO;   /* REUSE KEY */

     7322    13995    5                      KEY$->ARRAY(KEYIN_SIZE/4)=0;

  13995  1 026216   200056 236100                    LDQ     KEYIN_SIZE,,AUTO
         1 026217   000002 772000                    QRL     2
         1 026220   300000 450106                    STZ     0,QL,PR3

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1102 
     7323    13996    5                      FM$KEYENT.KLB=KEYIN_SIZE;

  13996  1 026221   200020 473500                    LDP3    KEY$,,AUTO
         1 026222   200056 236100                    LDQ     KEYIN_SIZE,,AUTO
         1 026223   000033 736000                    QLS     27
         1 026224   300000 676100                    ERQ     0,,PR3
         1 026225   377000 376003                    ANQ     130560,DU
         1 026226   300000 656100                    ERSQ    0,,PR3

     7324    13997    5                      KEY$->KEY.TEXT=KEYIN$->KEY.TEXT;

  13997  1 026227   200037 473500                    LDP3    KEYIN$,,AUTO
         1 026230   200056 720100                    LXL0    KEYIN_SIZE,,AUTO
         1 026231   200020 474500                    LDP4    KEY$,,AUTO
         1 026232   040140 100540                    MLR     fill='040'O
         1 026233   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         1 026234   400000 200010                    ADSC9   0,,PR4                   cn=1,n=*X0

     7325    13998    5                      END;  /* REUSE KEY */

     7326    13999    4                   END;  /* KEYED */

  13999  1 026235   026242 710000 1                  TRA     s:14006

     7327    14000    3                ELSE
     7328    14001    4                   DO;   /* IREL */

     7329    14002    4                   CALL BUILD_IRKEY(%FMREC);

  14002  1 026236   000046 236000 2                  LDQ     38
         1 026237   200137 756100                    STQ     LCDA,,AUTO
         1 026240   002465 701000 1                  TSX1    BUILD_IRKEY
         1 026241   000000 011000                    NOP     0

     7330    14003    4                   END;  /* IREL */

     7331    14004    3             END;  /* TRY TO REUSE KEY */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1103 

     7332    14005
     7333    14006    2          IF NEWKEYF = 0 THEN

  14006  1 026242   200105 235100                    LDA     NEWKEYF,,AUTO
         1 026243   026267 601000 1                  TNZ     s:14017

     7334    14007    3             DO;   /* REUSE KEY */

     7335    14008    3             IF CRECX ~= TCRECX THEN

  14008  1 026244   200015 236100                    LDQ     CRECX,,AUTO
         1 026245   200103 116100                    CMPQ    TCRECX,,AUTO
         1 026246   026251 600000 1                  TZE     s:14010

     7336    14009    3                CALL PREVREC ALTRET(ERR);

  14009  1 026247   016103 701000 1                  TSX1    PREVREC
         1 026250   026302 702000 1                  TSX2    ERR

     7337    14010    3             F$DCB.RPOS='0'B;

  14010  1 026251   200007 470500                    LDP0    JDCB$,,AUTO
         1 026252   000005 236000 2                  LDQ     5
         1 026253   000064 356100                    ANSQ    52,,PR0

     7338    14011    3             FM$KEYENT.D='0'B;

  14011  1 026254   200020 471500                    LDP1    KEY$,,AUTO
         1 026255   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 026256   100000 356100                    ANSQ    0,,PR1

     7339    14012    3             F$DCB.BFR.BUFUP(1)='1'B;

  14012  1 026257   400000 236003                    LDQ     -131072,DU
         1 026260   000116 256100                    ORSQ    78,,PR0

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1104 
     7340    14013    3             IF ALTKEY$ ~= ADDR(NIL) THEN

  14013  1 026261   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 026262   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 026263   026271 600000 1                  TZE     s:14019

     7341    14014    3                CALL REUSE_ALT ALTRET(ERR);

  14014  1 026264   021471 701000 1                  TSX1    REUSE_ALT
         1 026265   026302 702000 1                  TSX2    ERR

     7342    14015    3             END;  /* REUSE KEY */

  14015  1 026266   026271 710000 1                  TRA     s:14019

     7343    14016    2          ELSE
     7344    14017    2             CALL NEWKEY ALTRET(ERR);

  14017  1 026267   014554 701000 1                  TSX1    NEWKEY
         1 026270   026302 702000 1                  TSX2    ERR

     7345    14018
     7346    14019    2          FM$CFU.NRECS=FM$CFU.NRECS+1;

  14019  1 026271   200010 470500                    LDP0    CFU$,,AUTO
         1 026272   000001 054100                    AOS     1,,PR0

     7347    14020    2          F$DCB.NRECS=FM$CFU.NRECS;

  14020  1 026273   200007 471500                    LDP1    JDCB$,,AUTO
         1 026274   000001 235100                    LDA     1,,PR0
         1 026275   100042 755100                    STA     34,,PR1

     7348    14021
     7349    14022    2          CALL BLDREC ALTRET(ERR);

  14022  1 026276   001772 701000 1                  TSX1    BLDREC
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1105 
         1 026277   026302 702000 1                  TSX2    ERR

     7350    14023    2          RETURN;

  14023  1 026300   200102 221300                    LDX1  ! GX,,AUTO
         1 026301   000001 702211                    TSX2  ! 1,X1

     7351    14024    2   ERR:   ALTRETURN;

  14024  1 026302   200102 221300       ERR          LDX1  ! GX,,AUTO
         1 026303   000000 702211                    TSX2  ! 0,X1

     7352    14025    2          END WRNEWKEY;
     7353    14026               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1106 
     7354    14027        /*I*     NAME:     WRNOKEY
     7355    14028                 PURPOSE:  To handle writes without a key
     7356    14029                 DESCRIPTION:
     7357    14030                      Make sure that the user is allowed to rewrite records, and
     7358    14031                 that he wants to.  Make sure that we are positioned to something
     7359    14032                 sensible.
     7360    14033
     7361    14034                      Writes without keys are only allowed if the previous operation
     7362    14035                 was an M$READ or M$PRECORD.
     7363    14036
     7364    14037                      If the record had alternate indexes, then check them out for
     7365    14038                 any possible changes.
     7366    14039        */
     7367    14040                 %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1107 
     7368    14041    1   WRNOKEY: PROC ALTRET;

  14041  1 026304   200100 741300       WRNOKEY      STX1  ! I,,AUTO

     7369    14042        /* */
     7370    14043    2          IF NOT F$DCB.FFLG.UPD THEN

  14043  1 026305   200007 470500                    LDP0    JDCB$,,AUTO
         1 026306   000004 236100                    LDQ     4,,PR0
         1 026307   040000 316003                    CANQ    16384,DU
         1 026310   026316 601000 1                  TNZ     s:14049

     7371    14044    3             DO;   /* CANT REWRITE */

     7372    14045    3             B$JIT.ERR=ERRREWRITE;

  14045  1 026311   000001 236000 0                  LDQ     ERRREWRITE
         1 026312   000000 471400 xsym               LDP1    B$JIT$
         1 026313   100012 756100                    STQ     10,,PR1

     7373    14046    3             ALTRETURN;

  14046  1 026314   200100 221300                    LDX1  ! I,,AUTO
         1 026315   000000 702211                    TSX2  ! 0,X1

     7374    14047    3             END;  /* CANT REWRITE */
     7375    14048
     7376    14049    2          IF (NOT FPT$WRITE_V.ONEWKEY) AND FPT$WRITE_V.NEWKEY THEN

  14049  1 026316   000000 471400 xsym               LDP1    B$PS0$
         1 026317   100000 236100                    LDQ     0,,PR1
         1 026320   000400 316007                    CANQ    256,DL
         1 026321   026331 601000 1                  TNZ     s:14055
         1 026322   000200 316007                    CANQ    128,DL
         1 026323   026331 600000 1                  TZE     s:14055

     7377    14050    3             DO;   /* CANT REWRITE */
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1108 

     7378    14051    3             B$JIT.ERR=ERROLDREC;

  14051  1 026324   000002 236000 0                  LDQ     ERROLDREC
         1 026325   000000 473400 xsym               LDP3    B$JIT$
         1 026326   300012 756100                    STQ     10,,PR3

     7379    14052    3             ALTRETURN;

  14052  1 026327   200100 221300                    LDX1  ! I,,AUTO
         1 026330   000000 702211                    TSX2  ! 0,X1

     7380    14053    3             END;  /* CANT REWRITE */
     7381    14054
     7382    14055    2          CALL SHAREPOS ALTRET(ERR);

  14055  1 026331   023077 701000 1                  TSX1    SHAREPOS
         1 026332   026371 702000 1                  TSX2    ERR

     7383    14056
     7384    14057    3          DO CASE(F$DCB.EOP);

  14057  1 026333   200007 470500                    LDP0    JDCB$,,AUTO
         1 026334   000064 236100                    LDQ     52,,PR0
         1 026335   000033 772000                    QRL     27
         1 026336   000003 376007                    ANQ     3,DL
         1 026337   000003 116007                    CMPQ    3,DL
         1 026340   026342 602006 1                  TNC     s:14057+7,QL
         1 026341   026353 710000 1                  TRA     s:14065
         1 026342   026353 710000 1                  TRA     s:14065
         1 026343   026345 710000 1                  TRA     s:14059
         1 026344   026350 710000 1                  TRA     s:14062

     7385    14058    3             CASE(1);  /* PREV OP WAS READ */

     7386    14059    3                CALL CURREC ALTRET(ERR);

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1109 
  14059  1 026345   005131 701000 1                  TSX1    CURREC
         1 026346   026371 702000 1                  TSX2    ERR
         1 026347   026360 710000 1                  TRA     s:14069

     7387    14060
     7388    14061    3             CASE(2);  /* PREV OP WAS PRECORD */

     7389    14062    3                CALL NXTRECND ALTRET(ERR);

  14062  1 026350   015332 701000 1                  TSX1    NXTRECND
         1 026351   026371 702000 1                  TSX2    ERR
         1 026352   026360 710000 1                  TRA     s:14069

     7390    14063
     7391    14064    3             CASE(ELSE);

     7392    14065    3                B$JIT.ERR=ERRWRWOKEY;

  14065  1 026353   000000 236000 0                  LDQ     ERRWRWOKEY
         1 026354   000000 471400 xsym               LDP1    B$JIT$
         1 026355   100012 756100                    STQ     10,,PR1

     7393    14066    3                ALTRETURN;

  14066  1 026356   200100 221300                    LDX1  ! I,,AUTO
         1 026357   000000 702211                    TSX2  ! 0,X1

     7394    14067    3          END;  /* CASE */

     7395    14068
     7396    14069    2          IF ALTKEY$ ~= ADDR(NIL) THEN

  14069  1 026360   200023 236100                    LDQ     ALTKEY$,,AUTO
         1 026361   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 026362   026365 600000 1                  TZE     s:14072

     7397    14070    2             CALL ALTCHK ALTRET(ERR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1110 

  14070  1 026363   000553 701000 1                  TSX1    ALTCHK
         1 026364   026371 702000 1                  TSX2    ERR

     7398    14071
     7399    14072    2          CALL BLDREC ALTRET(ERR);

  14072  1 026365   001772 701000 1                  TSX1    BLDREC
         1 026366   026371 702000 1                  TSX2    ERR

     7400    14073    2          RETURN;

  14073  1 026367   200100 221300                    LDX1  ! I,,AUTO
         1 026370   000001 702211                    TSX2  ! 1,X1

     7401    14074    2   ERR:   ALTRETURN;

  14074  1 026371   200100 221300       ERR          LDX1  ! I,,AUTO
         1 026372   000000 702211                    TSX2  ! 0,X1

     7402    14075    2          END WRNOKEY;
     7403    14076               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1111 
     7404    14077        /*I*     NAME:     ZAPID
     7405    14078                 PURPOSE:  To set the ID count to zero
     7406    14079                 DESCRIPTION:
     7407    14080
     7408    14081                      This routine is called when someone asks for an ID
     7409    14082                 back, and an EOF was hit.  Set the ID count to zero.
     7410    14083        */
     7411    14084    1   ZAPID: PROC(ID$);

  14084  1 026373   200102 741300       ZAPID        STX1  ! GX,,AUTO

     7412    14085    2          DCL ID$ PTR;
     7413    14086    2          DCL I SBIN;
     7414    14087        /* */
     7415    14088    2          CALL HFF$DSIZ(ID$,I);

  14088  1 026374   200104 630500                    EPPR0   I,,AUTO
         1 026375   200167 450500                    STP0    STEMP_FIELDIN+3,,AUTO
         1 026376   200103 236100                    LDQ     @ID$,,AUTO
         1 026377   200166 756100                    STQ     STEMP_FIELDIN+2,,AUTO
         1 026400   200166 630500                    EPPR0   STEMP_FIELDIN+2,,AUTO
         1 026401   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 026402   000000 701000 xent               TSX1    HFF$DSIZ
         1 026403   000000 011000                    NOP     0

     7416    14089    2          IF I < 4 THEN

  14089  1 026404   200104 235100                    LDA     I,,AUTO
         1 026405   000004 115007                    CMPA    4,DL
         1 026406   026411 605000 1                  TPL     s:14091

     7417    14090    2             RETURN;

  14090  1 026407   200102 221300                    LDX1  ! GX,,AUTO
         1 026410   000001 702211                    TSX2  ! 1,X1

     7418    14091    2          ID$->ID.COUNT=0;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1112 

  14091  1 026411   200103 470500                    LDP0    @ID$,,AUTO
         1 026412   000000 471500                    LDP1    0,,PR0
         1 026413   100000 450100                    STZ     0,,PR1

     7419    14092
     7420    14093    2          RETURN;

  14093  1 026414   200102 221300                    LDX1  ! GX,,AUTO
         1 026415   000001 702211                    TSX2  ! 1,X1

     7421    14094    2          END ZAPID;
     7422    14095               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1113 
     7423    14096        /*I*     NAME:     ZAPKEY
     7424    14097                 PURPOSE:  To set a user's key to zeros
     7425    14098                 DESCRIPTION:
     7426    14099                      If the user asked for a key back, and we couldn't return
     7427    14100                 one (probably because we hit EOF), then for keyed files, set the
     7428    14101                 size field to 0.  For other files, set the whole key to 0.
     7429    14102        */
     7430    14103    1   ZAPKEY: PROC;

  14103  1 026416   200110 741300       ZAPKEY       STX1  ! NUMENTS,,AUTO

     7431    14104    2          DCL SIZE SBIN;
     7432    14105    2          DCL 1 ZAP BASED,
     7433    14106    2               2 * CHAR(SIZE);
     7434    14107    2          DCL 1 UKEY BASED,
     7435    14108    2               2 SIZE CHAR(1) CALIGNED,
     7436    14109    2               2 TEXT CHAR(LEN) CALIGNED;
     7437    14110        /* */
     7438    14111    2          IF ORG = %KEYED# THEN

  14111  1 026417   200022 235100                    LDA     ORG,,AUTO
         1 026420   000002 115007                    CMPA    2,DL
         1 026421   026427 601000 1                  TNZ     s:14115

     7439    14112    2             B$PS1$->UKEY.SIZE=BINASC(0);

  14112  1 026422   000000 470400 xsym               LDP0    B$PS1$
         1 026423   040100 100400                    MLR     fill='040'O
         1 026424   000057 000001 2                  ADSC9   47                       cn=0,n=1
         1 026425   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 026426   026441 710000 1                  TRA     s:14119

     7440    14113    2          ELSE
     7441    14114    3             DO;   /* INDEXED OR IREL */

     7442    14115    3             SIZE=F$DCB.KEYL;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1114 
  14115  1 026427   200007 470500                    LDP0    JDCB$,,AUTO
         1 026430   000036 236100                    LDQ     30,,PR0
         1 026431   000011 772000                    QRL     9
         1 026432   000777 376007                    ANQ     511,DL
         1 026433   200111 756100                    STQ     SIZE,,AUTO

     7443    14116    3             B$PS1$->ZAP='0'B;

  14116  1 026434   000000 471400 xsym               LDP1    B$PS1$
         1 026435   000000 620006                    EAX0    0,QL
         1 026436   000140 100400                    MLR     fill='000'O
         1 026437   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 026440   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     7444    14117    3             END;  /* INDEXED OR IREL */

     7445    14118
     7446    14119    2          IF F$DCB.SHARED THEN

  14119  1 026441   200007 470500                    LDP0    JDCB$,,AUTO
         1 026442   000064 236100                    LDQ     52,,PR0
         1 026443   100000 316003                    CANQ    32768,DU
         1 026444   026457 600000 1                  TZE     s:14126

     7447    14120    3             DO;   /* SET ID */

     7448    14121    3             F$DCB.ID='0'B;

  14121  1 026445   000107 450100                    STZ     71,,PR0

     7449    14122    3             IF B$JIT.ERR.CODE = %E$EOF THEN

  14122  1 026446   000000 471400 xsym               LDP1    B$JIT$
         1 026447   100012 236100                    LDQ     10,,PR1
         1 026450   377770 376007                    ANQ     131064,DL
         1 026451   000060 116007                    CMPQ    48,DL
         1 026452   026457 601000 1                  TNZ     s:14126
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1115 

     7450    14123    3                F$DCB.ID.DA=1;

  14123  1 026453   000107 236100                    LDQ     71,,PR0
         1 026454   777400 376003                    ANQ     -256,DU
         1 026455   000001 276007                    ORQ     1,DL
         1 026456   000107 756100                    STQ     71,,PR0

     7451    14124    3             END;  /* SET ID */

     7452    14125
     7453    14126    2          RETURN;

  14126  1 026457   200110 221300                    LDX1  ! NUMENTS,,AUTO
         1 026460   000001 702211                    TSX2  ! 1,X1

     7454    14127    2          END ZAPKEY;
     7455    14128               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1116 
     7456    14129        /*F*     NAME:     FMG$ADDKEY
     7457    14130                 PURPOSE:  To add a key
     7458    14131                 CALL:     CALL FMG$ADDKEY(SEG$, SEGCNT, KEY$, KEYIN$) [ALTRET(label)]
     7459    14132                 INPUT:    KEYIN$ - Pointer to the key to be added
     7460    14133                           SEGCNT - Number of segment words to add
     7461    14134                 OUTPUT:   SEG$ - Pointer to the first segment for the new key
     7462    14135                           KEY$ - Pointer to the key added
     7463    14136                 DESCRIPTION:
     7464    14137                      Call SETUP to do some basic initialization.  Set up some
     7465    14138                 local variables.  Then, add one key, stir well. . . call
     7466    14139                 SETARG to set the return values.
     7467    14140        */
     7468    14141    1   FMG$ADDKEY: ENTRY(PSEG$, PSEGCNT, PKEY$, PKEYIN$) ALTRET;

  14141  1 026461   000000 700200 xent  FMG$ADDKEY   TSX0  ! X66_AUTO_4
         1 026462   000200 000004                    ZERO    128,4

     7469    14142        /* */
     7470    14143    1          CALL SETUP;

  14143  1 026463   022071 701000 1                  TSX1    SETUP
         1 026464   000000 011000                    NOP     0

     7471    14144    1          KEYIN$=PKEYIN$;

  14144  1 026465   200006 470500                    LDP0    @PKEYIN$,,AUTO
         1 026466   000000 236100                    LDQ     0,,PR0
         1 026467   200037 756100                    STQ     KEYIN$,,AUTO

     7472    14145    1          TEMP_CHAR=KEYIN.SIZE;

  14145  1 026470   200037 471500                    LDP1    KEYIN$,,AUTO
         1 026471   040100 100500                    MLR     fill='040'O
         1 026472   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 026473   200072 000001                    ADSC9   TEMP_CHAR,,AUTO          cn=0,n=1

     7473    14146    1          KEYIN_SIZE=ASCBIN(TEMP_CHAR);
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1117 

  14146  1 026474   200072 236100                    LDQ     TEMP_CHAR,,AUTO
         1 026475   000033 772000                    QRL     27
         1 026476   200056 756100                    STQ     KEYIN_SIZE,,AUTO

     7474    14147    1          SEGCNT=PSEGCNT;

  14147  1 026477   200004 473500                    LDP3    @PSEGCNT,,AUTO
         1 026500   300000 235100                    LDA     0,,PR3
         1 026501   200035 755100                    STA     SEGCNT,,AUTO

     7475    14148    1          CALL ADDKEY ALTRET(ERRAK);

  14148  1 026502   000301 701000 1                  TSX1    ADDKEY
         1 026503   026507 702000 1                  TSX2    ERRAK

     7476    14149    1          CALL SETARG;

  14149  1 026504   021627 701000 1                  TSX1    SETARG
         1 026505   000000 011000                    NOP     0

     7477    14150    1          RETURN;

  14150  1 026506   000000 702200 xent               TSX2  ! X66_ARET

     7478    14151    1   ERRAK: CALL SETARG;

  14151  1 026507   021627 701000 1     ERRAK        TSX1    SETARG
         1 026510   000000 011000                    NOP     0

     7479    14152    1          ALTRETURN;

  14152  1 026511   000000 702200 xent               TSX2  ! X66_AALT

     7480    14153               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1118 
     7481    14154        /*F*     NAME:     FMG$ADDSEG
     7482    14155                 PURPOSE:  To add segments
     7483    14156                 CALL:     CALL FMG$ADDSEG(SEG$, SEGCNT) [ALTRET(label)]
     7484    14157                 INPUT:    SEGCNT - The number of segment words to add
     7485    14158                 OUTPUT:   SEG$ - Pointer to the segment space added
     7486    14159                 DESCRIPTION:
     7487    14160                      Do the usual initialization, call ADDSEG to add the segment
     7488    14161                 space.  Then return the segment pointer.
     7489    14162        */
     7490    14163    1   FMG$ADDSEG: ENTRY(PSEG$, PSEGCNT) ALTRET;

  14163  1 026512   000000 700200 xent  FMG$ADDSEG   TSX0  ! X66_AUTO_4
         1 026513   000200 000004                    ZERO    128,4

     7491    14164        /* */
     7492    14165    1          CALL SETUP;

  14165  1 026514   022071 701000 1                  TSX1    SETUP
         1 026515   000000 011000                    NOP     0

     7493    14166    1          SEGCNT=PSEGCNT;

  14166  1 026516   200004 470500                    LDP0    @PSEGCNT,,AUTO
         1 026517   000000 235100                    LDA     0,,PR0
         1 026520   200035 755100                    STA     SEGCNT,,AUTO

     7494    14167    1          CALL ADDSEG ALTRET(ERRAS);

  14167  1 026521   000327 701000 1                  TSX1    ADDSEG
         1 026522   026527 702000 1                  TSX2    ERRAS

     7495    14168    1          PSEG$=SEG$;

  14168  1 026523   200014 236100                    LDQ     SEG$,,AUTO
         1 026524   200003 470500                    LDP0    @PSEG$,,AUTO
         1 026525   000000 756100                    STQ     0,,PR0

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1119 
     7496    14169    1          RETURN;

  14169  1 026526   000000 702200 xent               TSX2  ! X66_ARET

     7497    14170    1   ERRAS: PSEG$=SEG$;

  14170  1 026527   200014 236100       ERRAS        LDQ     SEG$,,AUTO
         1 026530   200003 470500                    LDP0    @PSEG$,,AUTO
         1 026531   000000 756100                    STQ     0,,PR0

     7498    14171    1          ALTRETURN;

  14171  1 026532   000000 702200 xent               TSX2  ! X66_AALT

     7499    14172               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1120 
     7500    14173        /*F*     NAME:     FMG$CURKEY
     7501    14174                 PURPOSE:  To position to the current key
     7502    14175                 CALL:     CALL FMG$CURKEY(SEG$, SEGCNT, KEY$) [ALTRET(label)]
     7503    14176                 INPUT:    None
     7504    14177                 OUTPUT:   SEG$ - Pointer to the first segment for the current key
     7505    14178                           SEGCNT - Number of segment words for this key
     7506    14179                           KEY$ - Pointer to the current key; this argument optional
     7507    14180                 DESCRIPTION:
     7508    14181                      Initialize, then position to the current key.  SEGX will
     7509    14182                 point to the start of the new segment.  The number of words will
     7510    14183                 be the offset from that to the end of the granule, or next key
     7511    14184                 whichever comes first.
     7512    14185        */
     7513    14186    1   FMG$CURKEY: ENTRY(PSEG$, PSEGCNT, PKEY$) ALTRET;

  14186  1 026533   000000 700200 xent  FMG$CURKEY   TSX0  ! X66_AUTO_4
         1 026534   000200 000004                    ZERO    128,4

     7514    14187        /* */
     7515    14188    1          CALL SETUP;

  14188  1 026535   022071 701000 1                  TSX1    SETUP
         1 026536   000000 011000                    NOP     0

     7516    14189    1          CALL CURKEY ALTRET(ERRC);

  14189  1 026537   005060 701000 1                  TSX1    CURKEY
         1 026540   026607 702000 1                  TSX2    ERRC

     7517    14190    1          IF CRECX = KEYCNT THEN

  14190  1 026541   200015 236100                    LDQ     CRECX,,AUTO
         1 026542   026554 604000 1                  TMI     s:14193
         1 026543   200017 116100                    CMPQ    KEYCNT,,AUTO
         1 026544   026554 601000 1                  TNZ     s:14193

     7518    14191    1             PSEGCNT=FM$GRAN.NAVX-SEGX;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1121 

  14191  1 026545   200024 470500                    LDP0    BUF$,,AUTO
         1 026546   000001 236100                    LDQ     1,,PR0
         1 026547   000022 772000                    QRL     18
         1 026550   200013 136100                    SBLQ    SEGX,,AUTO
         1 026551   200004 471500                    LDP1    @PSEGCNT,,AUTO
         1 026552   100000 756100                    STQ     0,,PR1
         1 026553   026604 710000 1                  TRA     s:14197

     7519    14192    1          ELSE
     7520    14193    1             IF CRECX+1 < BOUND THEN

  14193  1 026554   000001 036007                    ADLQ    1,DL
         1 026555   026572 604000 1                  TMI     s:14196
         1 026556   200016 116100                    CMPQ    BOUND,,AUTO
         1 026557   026572 605000 1                  TPL     s:14196

     7521    14194    1                PSEGCNT=FM$KEYTBL(CRECX+1)-SEGX;

  14194  1 026560   200025 470500                    LDP0    KTPTR$,,AUTO
         1 026561   200015 235100                    LDA     CRECX,,AUTO
         1 026562   000100 101505                    MRL     fill='000'O
         1 026563   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         1 026564   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 026565   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 026566   200013 136100                    SBLQ    SEGX,,AUTO
         1 026567   200004 471500                    LDP1    @PSEGCNT,,AUTO
         1 026570   100000 756100                    STQ     0,,PR1
         1 026571   026604 710000 1                  TRA     s:14197

     7522    14195    1             ELSE
     7523    14196    1                PSEGCNT=FM$KEYTBL(CRECX+1)+512-SEGX;

  14196  1 026572   200025 470500                    LDP0    KTPTR$,,AUTO
         1 026573   200015 235100                    LDA     CRECX,,AUTO
         1 026574   000100 101505                    MRL     fill='000'O
         1 026575   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1122 
         1 026576   200166 000004                    ADSC9   STEMP_FIELDIN+2,,AUTO    cn=0,n=4
         1 026577   200166 236100                    LDQ     STEMP_FIELDIN+2,,AUTO
         1 026600   200013 136100                    SBLQ    SEGX,,AUTO
         1 026601   001000 036007                    ADLQ    512,DL
         1 026602   200004 471500                    LDP1    @PSEGCNT,,AUTO
         1 026603   100000 756100                    STQ     0,,PR1

     7524    14197    1          CALL SETARG;

  14197  1 026604   021627 701000 1                  TSX1    SETARG
         1 026605   000000 011000                    NOP     0

     7525    14198    1          RETURN;

  14198  1 026606   000000 702200 xent               TSX2  ! X66_ARET

     7526    14199    1   ERRC:  CALL SETARG;

  14199  1 026607   021627 701000 1     ERRC         TSX1    SETARG
         1 026610   000000 011000                    NOP     0

     7527    14200    1          ALTRETURN;

  14200  1 026611   000000 702200 xent               TSX2  ! X66_AALT

     7528    14201               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1123 
     7529    14202        /*F*     NAME:     FMG$FINDKEY
     7530    14203                 PURPOSE:  To find a key
     7531    14204                 CALL:     CALL FMG$FINDKEY(SEG$, , KEY$, KEYIN$) [ALTRET(label)]
     7532    14205                 INPUT:    KEYIN$ - Pointer to the key to find
     7533    14206                 OUTPUT:   SEG$ - Pointer to the first segment for the key found
     7534    14207                           KEY$ - Pointer to the key found
     7535    14208                 DESCRIPTION:
     7536    14209                      Initialize, find the key, then return the pointers.
     7537    14210        */
     7538    14211    1   FMG$FINDKEY: ENTRY(PSEG$, PSEGCNT, PKEY$, PKEYIN$) ALTRET;

  14211  1 026612   000000 700200 xent  FMG$FINDKEY  TSX0  ! X66_AUTO_4
         1 026613   000200 000004                    ZERO    128,4

     7539    14212        /* */
     7540    14213    1          CALL SETUP;

  14213  1 026614   022071 701000 1                  TSX1    SETUP
         1 026615   000000 011000                    NOP     0

     7541    14214    1          KEYIN$=PKEYIN$;

  14214  1 026616   200006 470500                    LDP0    @PKEYIN$,,AUTO
         1 026617   000000 236100                    LDQ     0,,PR0
         1 026620   200037 756100                    STQ     KEYIN$,,AUTO

     7542    14215    1          TEMP_CHAR=KEYIN.SIZE;

  14215  1 026621   200037 471500                    LDP1    KEYIN$,,AUTO
         1 026622   040100 100500                    MLR     fill='040'O
         1 026623   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 026624   200072 000001                    ADSC9   TEMP_CHAR,,AUTO          cn=0,n=1

     7543    14216    1          KEYIN_SIZE=ASCBIN(TEMP_CHAR);

  14216  1 026625   200072 236100                    LDQ     TEMP_CHAR,,AUTO
         1 026626   000033 772000                    QRL     27
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1124 
         1 026627   200056 756100                    STQ     KEYIN_SIZE,,AUTO

     7544    14217    1          CALL FINDKEY ALTRET(ERRF);

  14217  1 026630   007536 701000 1                  TSX1    FINDKEY
         1 026631   026635 702000 1                  TSX2    ERRF

     7545    14218    1          CALL SETARG;

  14218  1 026632   021627 701000 1                  TSX1    SETARG
         1 026633   000000 011000                    NOP     0

     7546    14219    1          RETURN;

  14219  1 026634   000000 702200 xent               TSX2  ! X66_ARET

     7547    14220    1   ERRF:  CALL SETARG;

  14220  1 026635   021627 701000 1     ERRF         TSX1    SETARG
         1 026636   000000 011000                    NOP     0

     7548    14221    1          IF KEY$ ~= ADDR(NIL) THEN

  14221  1 026637   200020 236100                    LDQ     KEY$,,AUTO
         1 026640   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 026641   026645 600000 1                  TZE     s:14223

     7549    14222    1             F$DCB.RPOS='1'B;

  14222  1 026642   200007 470500                    LDP0    JDCB$,,AUTO
         1 026643   010000 236007                    LDQ     4096,DL
         1 026644   000064 256100                    ORSQ    52,,PR0

     7550    14223    1          ALTRETURN;

  14223  1 026645   000000 702200 xent               TSX2  ! X66_AALT

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1125 
     7551    14224               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1126 
     7552    14225        /*F*     NAME:     FMG$KEYEXP
     7553    14226                 PURPOSE:  To expand a one granule keyed file to 2 grans
     7554    14227                 CALL:     CALL FMG$KEYEXP
     7555    14228                 DESCRIPTION:
     7556    14229
     7557    14230                      Initialize, then call KEYEXP to expand the file
     7558    14231                 to two granules.
     7559    14232        */
     7560    14233    1   FMG$KEYEXP: ENTRY ALTRET;

  14233  1 026646   000000 700200 xent  FMG$KEYEXP   TSX0  ! X66_AUTO_4
         1 026647   000200 000004                    ZERO    128,4

     7561    14234        /* */
     7562    14235    1          JDCB$=B$JIT.DCB$;

  14235  1 026650   000000 470400 xsym               LDP0    B$JIT$
         1 026651   000232 236100                    LDQ     154,,PR0
         1 026652   200007 756100                    STQ     JDCB$,,AUTO

     7563    14236    1          CFU$=F$DCB.CFU$;

  14236  1 026653   200007 471500                    LDP1    JDCB$,,AUTO
         1 026654   100066 236100                    LDQ     54,,PR1
         1 026655   200010 756100                    STQ     CFU$,,AUTO

     7564    14237    1          CALL KEYEXP ALTRET(ERRK);

  14237  1 026656   012046 701000 1                  TSX1    KEYEXP
         1 026657   026661 702000 1                  TSX2    ERRK

     7565    14238
     7566    14239    1          RETURN;

  14239  1 026660   000000 702200 xent               TSX2  ! X66_ARET

     7567    14240    1   ERRK:  ALTRETURN;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1127 

  14240  1 026661   000000 702200 xent  ERRK         TSX2  ! X66_AALT

     7568    14241               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1128 
     7569    14242        /*F*     NAME:     FMG$KEYSQZ
     7570    14243                 PURPOSE:  To squeeze a 2 gran file to 1 gran
     7571    14244                 CALL:     CALL FMG$KEYSQZ [ALTRET(label)]
     7572    14245                 DESCRIPTION:
     7573    14246                      Call KEYSQZ to try to squeeze the file to 1 granule.
     7574    14247        */
     7575    14248    1   FMG$KEYSQZ: ENTRY(PSEG$) ALTRET;

  14248  1 026662   000000 700200 xent  FMG$KEYSQZ   TSX0  ! X66_AUTO_4
         1 026663   000200 000004                    ZERO    128,4

     7576    14249        /* */
     7577    14250    1          CALL KEYSQZ;

  14250  1 026664   012535 701000 1                  TSX1    KEYSQZ
         1 026665   000000 011000                    NOP     0

     7578    14251    1          RETURN;

  14251  1 026666   000000 702200 xent               TSX2  ! X66_ARET

     7579    14252               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1129 
     7580    14253        /*F*     NAME:     FMG$MOVKEYS
     7581    14254                 PURPOSE:  To make space in the FIT
     7582    14255                 CALL:     CALL FMG$MOVKEYS(NUMWORDS) [ALTRET(label)]
     7583    14256                 INPUT:    NUMWORDS - The amount of space to leave
     7584    14257                 DESCRIPTION:
     7585    14258                      Do the usual initialization, then call MOVKEYS for the
     7586    14259                 tough stuff.
     7587    14260        */
     7588    14261    1   FMG$MOVKEYS: ENTRY(PSEG$) ALTRET;

  14261  1 026667   000000 700200 xent  FMG$MOVKEYS  TSX0  ! X66_AUTO_4
         1 026670   000200 000004                    ZERO    128,4

     7589    14262        /* */
     7590    14263    1          CALL SETUP;

  14263  1 026671   022071 701000 1                  TSX1    SETUP
         1 026672   000000 011000                    NOP     0

     7591    14264    1          CALL MOVKEYS ALTRET(ERRM);

  14264  1 026673   014227 701000 1                  TSX1    MOVKEYS
         1 026674   026676 702000 1                  TSX2    ERRM

     7592    14265    1          RETURN;

  14265  1 026675   000000 702200 xent               TSX2  ! X66_ARET

     7593    14266    1   ERRM:  ALTRETURN;

  14266  1 026676   000000 702200 xent  ERRM         TSX2  ! X66_AALT

     7594    14267               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1130 
     7595    14268        /*F*     NAME:     FMG$NXTKEY
     7596    14269                 PURPOSE:  To position to the next key
     7597    14270                 CALL:     CALL FMG$NXTKEY(SEG$, , KEY$) [ALTRET(label)]
     7598    14271                 OUTPUT:   SEG$ - Pointer to the segment for the next key
     7599    14272                           KEY$ - Pointer to the next key
     7600    14273                 DESCRIPTION:
     7601    14274                      Initialize, position to the next key, then return the pointers.
     7602    14275        */
     7603    14276    1   FMG$NXTKEY: ENTRY(PSEG$, PSEGCNT, PKEY$) ALTRET;

  14276  1 026677   000000 700200 xent  FMG$NXTKEY   TSX0  ! X66_AUTO_4
         1 026700   000200 000004                    ZERO    128,4

     7604    14277        /* */
     7605    14278    1          CALL SETUP;

  14278  1 026701   022071 701000 1                  TSX1    SETUP
         1 026702   000000 011000                    NOP     0

     7606    14279    1          CALL NXTKEY ALTRET(ERRN);

  14279  1 026703   015105 701000 1                  TSX1    NXTKEY
         1 026704   026710 702000 1                  TSX2    ERRN

     7607    14280    1          CALL SETARG;

  14280  1 026705   021627 701000 1                  TSX1    SETARG
         1 026706   000000 011000                    NOP     0

     7608    14281    1          RETURN;

  14281  1 026707   000000 702200 xent               TSX2  ! X66_ARET

     7609    14282    1   ERRN:  CALL SETARG;

  14282  1 026710   021627 701000 1     ERRN         TSX1    SETARG
         1 026711   000000 011000                    NOP     0
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1131 

     7610    14283    1          ALTRETURN;

  14283  1 026712   000000 702200 xent               TSX2  ! X66_AALT

     7611    14284               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1132 
     7612    14285        /*F*     NAME:     FMG$NXTKEY_ORG
     7613    14286                 PURPOSE:  To position to the next key using F$DCB.ORG
     7614    14287                 CALL:     CALL FMG$NXTKEY(SEG$, , KEY$) [ALTRET(label)]
     7615    14288                 OUTPUT:   SEG$ - Pointer to the segment for the next key
     7616    14289                           KEY$ - Pointer to the next key
     7617    14290                 DESCRIPTION:
     7618    14291
     7619    14292                      Initialize, set the INDEX# to the primary index,
     7620    14293                 set the ORG from F$DCB.ORG.  Get the next key, and
     7621    14294                 return some pointers.
     7622    14295        */
     7623    14296    1   FMG$NXTKEY_ORG: ENTRY(PSEG$, PSEGCNT, PKEY$) ALTRET;

  14296  1 026713   000000 700200 xent  FMG$NXTKEY_* TSX0  ! X66_AUTO_4
         1 026714   000200 000004                    ZERO    128,4

     7624    14297        /* */
     7625    14298    1          CALL SETUP;

  14298  1 026715   022071 701000 1                  TSX1    SETUP
         1 026716   000000 011000                    NOP     0

     7626    14299    1          INDEX#=0;

  14299  1 026717   200011 450100                    STZ     INDEX#,,AUTO

     7627    14300    1          ORG=F$DCB.ORG;

  14300  1 026720   200007 470500                    LDP0    JDCB$,,AUTO
         1 026721   000032 236100                    LDQ     26,,PR0
         1 026722   000033 772000                    QRL     27
         1 026723   200022 756100                    STQ     ORG,,AUTO

     7628    14301    1          CALL NXTKEY ALTRET(ERRNO);

  14301  1 026724   015105 701000 1                  TSX1    NXTKEY
         1 026725   026731 702000 1                  TSX2    ERRNO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1133 

     7629    14302    1          CALL SETARG;

  14302  1 026726   021627 701000 1                  TSX1    SETARG
         1 026727   000000 011000                    NOP     0

     7630    14303    1          RETURN;

  14303  1 026730   000000 702200 xent               TSX2  ! X66_ARET

     7631    14304    1   ERRNO: CALL SETARG;

  14304  1 026731   021627 701000 1     ERRNO        TSX1    SETARG
         1 026732   000000 011000                    NOP     0

     7632    14305    1          ALTRETURN;

  14305  1 026733   000000 702200 xent               TSX2  ! X66_AALT

     7633    14306               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1134 
     7634    14307        /*F*     NAME:     FMG$NXTKEYNM
     7635    14308                 PURPOSE:  To position to the next key within the current granule
     7636    14309                 CALL:     CALL FMG$NXTKEYNM(SEG$, , KEY$) [ALTRET(label)]
     7637    14310                 OUTPUT:   SEG$ - Pointer to the segment for the next key
     7638    14311                           KEY$ - Pointer to the next key
     7639    14312                 DESCRIPTION:
     7640    14313                      This routine will only position to the next key if it is
     7641    14314                 within the current granule, otherwise, it will altreturn.
     7642    14315        */
     7643    14316    1   FMG$NXTKEYNM: ENTRY(PSEG$, PSEGCNT, PKEY$) ALTRET;

  14316  1 026734   000000 700200 xent  FMG$NXTKEYNM TSX0  ! X66_AUTO_4
         1 026735   000200 000004                    ZERO    128,4

     7644    14317        /* */
     7645    14318    1          CALL SETUP;

  14318  1 026736   022071 701000 1                  TSX1    SETUP
         1 026737   000000 011000                    NOP     0

     7646    14319    1          CALL NXTKEYNM ALTRET(ERRNM);

  14319  1 026740   015110 701000 1                  TSX1    NXTKEYNM
         1 026741   026745 702000 1                  TSX2    ERRNM

     7647    14320    1          CALL SETARG;

  14320  1 026742   021627 701000 1                  TSX1    SETARG
         1 026743   000000 011000                    NOP     0

     7648    14321    1          RETURN;

  14321  1 026744   000000 702200 xent               TSX2  ! X66_ARET

     7649    14322    1   ERRNM: CALL SETARG;

  14322  1 026745   021627 701000 1     ERRNM        TSX1    SETARG
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1135 
         1 026746   000000 011000                    NOP     0

     7650    14323    1          ALTRETURN;

  14323  1 026747   000000 702200 xent               TSX2  ! X66_AALT

     7651    14324               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1136 
     7652    14325        /*F*     NAME:     FMG$NXTREC
     7653    14326                 PURPOSE:  To position to the next record
     7654    14327                 CALL:     CALL FMG$NXTREC [ALTRET(label)]
     7655    14328                 DESCRIPTION:
     7656    14329                      This routine is used primarily to count the number of
     7657    14330                 records along an alternate index to check for inconsistancies.
     7658    14331                 Set the index to the current index, and position to the next
     7659    14332                 record.
     7660    14333        */
     7661    14334    1   FMG$NXTREC: ENTRY ALTRET;

  14334  1 026750   000000 700200 xent  FMG$NXTREC   TSX0  ! X66_AUTO_4
         1 026751   000200 000004                    ZERO    128,4

     7662    14335        /* */
     7663    14336    1          CALL SETUP;

  14336  1 026752   022071 701000 1                  TSX1    SETUP
         1 026753   000000 011000                    NOP     0

     7664    14337    1          INDEX#=F$DCB.INDX-1;

  14337  1 026754   200007 470500                    LDP0    JDCB$,,AUTO
         1 026755   000077 236100                    LDQ     63,,PR0
         1 026756   000022 772000                    QRL     18
         1 026757   000001 136007                    SBLQ    1,DL
         1 026760   200011 756100                    STQ     INDEX#,,AUTO

     7665    14338    1          ORG=F$DCB.ORG;

  14338  1 026761   000032 236100                    LDQ     26,,PR0
         1 026762   000033 772000                    QRL     27
         1 026763   200022 756100                    STQ     ORG,,AUTO

     7666    14339    1          CALL NXTREC ALTRET(ERRNR);

  14339  1 026764   015175 701000 1                  TSX1    NXTREC
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1137 
         1 026765   026767 702000 1                  TSX2    ERRNR

     7667    14340    1          RETURN;

  14340  1 026766   000000 702200 xent               TSX2  ! X66_ARET

     7668    14341    1   ERRNR: ALTRETURN;

  14341  1 026767   000000 702200 xent  ERRNR        TSX2  ! X66_AALT

     7669    14342               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1138 
     7670    14343        /*F*     NAME:     FMG$NXTSEG
     7671    14344                 PURPOSE:  To position to the next segment
     7672    14345                 CALL:     CALL FMG$NXTSEG [ALTRET(label)]
     7673    14346                 OUTPUT:   SEG$ - Pointer to the next segment
     7674    14347                 DESCRIPTION:
     7675    14348                      Position to the next segment, and return the pointer.
     7676    14349        */
     7677    14350    1   FMG$NXTSEG: ENTRY(PSEG$) ALTRET;

  14350  1 026770   000000 700200 xent  FMG$NXTSEG   TSX0  ! X66_AUTO_4
         1 026771   000200 000004                    ZERO    128,4

     7678    14351        /* */
     7679    14352    1          CALL SETUP;

  14352  1 026772   022071 701000 1                  TSX1    SETUP
         1 026773   000000 011000                    NOP     0

     7680    14353    1          CALL NXTSEG ALTRET(ERRNS);

  14353  1 026774   015351 701000 1                  TSX1    NXTSEG
         1 026775   027002 702000 1                  TSX2    ERRNS

     7681    14354    1          PSEG$=SEG$;

  14354  1 026776   200014 236100                    LDQ     SEG$,,AUTO
         1 026777   200003 470500                    LDP0    @PSEG$,,AUTO
         1 027000   000000 756100                    STQ     0,,PR0

     7682    14355    1          RETURN;

  14355  1 027001   000000 702200 xent               TSX2  ! X66_ARET

     7683    14356    1   ERRNS: PSEG$=SEG$;

  14356  1 027002   200014 236100       ERRNS        LDQ     SEG$,,AUTO
         1 027003   200003 470500                    LDP0    @PSEG$,,AUTO
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1139 
         1 027004   000000 756100                    STQ     0,,PR0

     7684    14357    1          ALTRETURN;

  14357  1 027005   000000 702200 xent               TSX2  ! X66_AALT

     7685    14358               %EJECT;
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1140 
     7686    14359        /*F*     NAME:     FMG$REMKEY
     7687    14360                 PURPOSE:  To remove a key
     7688    14361                 CALL:     CALL FMG$REMKEY [ALTRET(label)]
     7689    14362                 DESCRIPTION:
     7690    14363                      Remove the key currently pointed to (by F$DCB.CRECX).
     7691    14364        */
     7692    14365    1   FMG$REMKEY: ENTRY ALTRET;

  14365  1 027006   000000 700200 xent  FMG$REMKEY   TSX0  ! X66_AUTO_4
         1 027007   000200 000004                    ZERO    128,4

     7693    14366        /* */
     7694    14367    1          CALL SETUP;

  14367  1 027010   022071 701000 1                  TSX1    SETUP
         1 027011   000000 011000                    NOP     0

     7695    14368    1          CALL REMKEY ALTRET(ERRR);

  14368  1 027012   020035 701000 1                  TSX1    REMKEY
         1 027013   027015 702000 1                  TSX2    ERRR

     7696    14369    1          RETURN;

  14369  1 027014   000000 702200 xent               TSX2  ! X66_ARET

     7697    14370    1   ERRR:  ALTRETURN;

  14370  1 027015   000000 702200 xent  ERRR         TSX2  ! X66_AALT

ERRWRWOKEY
 Sect OctLoc
   0     000   061507 001012                                                    1...

ERRREWRITE
 Sect OctLoc
   0     001   061507 000652                                                    1...
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1141 

ERROLDREC
 Sect OctLoc
   0     002   061507 000752                                                    1...

ERRWRITNEW
 Sect OctLoc
   0     003   061507 000662                                                    1...

ERRFREC
 Sect OctLoc
   0     004   061507 000462                                                    1...

ERRNEWREC
 Sect OctLoc
   0     005   061507 000762                                                    1...

ERRLD
 Sect OctLoc
   0     006   061507 000072                                                    1..:

ERRNOKEY
 Sect OctLoc
   0     007   061507 001022                                                    1...

ERRBADKEY2
 Sect OctLoc
   0     010   061507 001002                                                    1...

ERRBADKEY
 Sect OctLoc
   0     011   061507 000772                                                    1...

ERRINDBC
 Sect OctLoc
   0     012   061507 001102                                                    1..B

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1142 
ERRFIT
 Sect OctLoc
   0     013   061507 000512                                                    1...

ERRKEYORDER
 Sect OctLoc
   0     014   061507 001112                                                    1..J

ERRNOCONT
 Sect OctLoc
   0     015   061507 001132                                                    1..Z

ERRINDSEED
 Sect OctLoc
   0     016   061507 001172                                                    1..z

ERRBOF
 Sect OctLoc
   0     017   061507 000042                                                    1.."

ERREOF
 Sect OctLoc
   0     020   061507 000062                                                    1..2

ERRPMMEINT
 Sect OctLoc
   0     021   061507 001232                                                    1...

ERRNOSUCHINDX
 Sect OctLoc
   0     022   061507 001242                                                    1...

ERRNOREC
 Sect OctLoc
   0     023   061507 001262                                                    1...

ERRKEYCHNG
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1143 
 Sect OctLoc
   0     024   061507 001302                                                    1...

ERRDUPKEY
 Sect OctLoc
   0     025   061507 001312                                                    1...

ERRNOALT
 Sect OctLoc
   0     026   061507 001332                                                    1...

ERRKEYTRAP
 Sect OctLoc
   0     027   061507 006452                                                    1...

ERRIDTRAP
 Sect OctLoc
   0     030   061507 006472                                                    1...

ERRALLIDS
 Sect OctLoc
   0     031   061507 001272                                                    1...

ERRIDSMALL
 Sect OctLoc
   0     032   061507 001362                                                    1...

ERRNOALTKEY
 Sect OctLoc
   0     033   061507 001372                                                    1...

ERRIDONLY
 Sect OctLoc
   0     034   061507 000742                                                    1...

ERRBADID
 Sect OctLoc
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1144 
   0     035   061507 001422                                                    1...

ERRDMY
 Sect OctLoc
   0     036   061507 000002                                                    1...

INITKEYTBL
 Sect OctLoc
   0     037   430*** ******                                                    ....

(unnamed)
 Sect OctLoc
   2     000   000002 006000   000003 006000   000002 006000   000003 006000    ................
   2     004   000017 770000   777777 767777   777777 776000   777737 777777    ................
   2     010   777777 677777   000000 006000   000006 006000   777777 777000    ................
   2     014   000005 006000   000000 000000   000005 006000   000003 006000    ................
   2     020   000377 777777   000011 000000   000000 000030   000012 006000    ................
   2     024   000003 006000   000002 006000   000022 006000   000000 000046    ...............&
   2     030   000000 000027   000027 006000   000030 006000   000012 006000    ................
   2     034   000000 000113   707777 777777   000027 006000   000034 006000    ...K............
   2     040   000000 006000   000002 006000   077777 777777   777776 777777    ........?.......
   2     044   777775 777777   743777 777777   000004 006000   777773 777777    ................
   2     050   000000 006000   000003 006000   000000 006000   000000 006000    ................
   2     054   000000 006000   000003 006000   000027 006000   000040 040040    .............
   2     060   777577 777777   777777 577777   000004 006000   000003 006000    ................
   2     064   777777 377777   002000 000001   000000 000014   777777 777776    ................
   2     070   000003 006000   000004 006000   000027 006000   000066 006000    .............6..
   2     074   000067 006000   000000 006000   000002 006000                    .7..........
     7698    14371    1          END FMG$KEYED;

PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1145 
--  Include file information  --

   UD_ERRORS_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FM_FIELD_C.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM$MACROS.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMG$KEYED.
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1146 

 **** Variables and constants ****

  ****  Section 000 RoData FMG$KEYED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    31-0-0/b STRC        r     1 ERRALLIDS                 35-0-0/b STRC        r     1 ERRBADID
    11-0-0/b STRC        r     1 ERRBADKEY                 10-0-0/b STRC        r     1 ERRBADKEY2
    17-0-0/b STRC        r     1 ERRBOF                    36-0-0/b STRC        r     1 ERRDMY
    25-0-0/b STRC        r     1 ERRDUPKEY                 20-0-0/b STRC        r     1 ERREOF
    13-0-0/b STRC        r     1 ERRFIT                     4-0-0/b STRC        r     1 ERRFREC
    34-0-0/b STRC        r     1 ERRIDONLY                 32-0-0/b STRC        r     1 ERRIDSMALL
    30-0-0/b STRC        r     1 ERRIDTRAP                 12-0-0/b STRC        r     1 ERRINDBC
    16-0-0/b STRC        r     1 ERRINDSEED                24-0-0/b STRC        r     1 ERRKEYCHNG
    14-0-0/b STRC        r     1 ERRKEYORDER               27-0-0/b STRC        r     1 ERRKEYTRAP
     6-0-0/b STRC        r     1 ERRLD                      5-0-0/b STRC        r     1 ERRNEWREC
    26-0-0/b STRC        r     1 ERRNOALT                  33-0-0/b STRC        r     1 ERRNOALTKEY
    15-0-0/b STRC        r     1 ERRNOCONT                  7-0-0/b STRC        r     1 ERRNOKEY
    23-0-0/b STRC        r     1 ERRNOREC                  22-0-0/b STRC        r     1 ERRNOSUCHINDX
     2-0-0/b STRC        r     1 ERROLDREC                 21-0-0/b STRC        r     1 ERRPMMEINT
     1-0-0/b STRC        r     1 ERRREWRITE                 3-0-0/b STRC        r     1 ERRWRITNEW
     0-0-0/b STRC        r     1 ERRWRWOKEY                37-0-0/b STRC(9)     r     1 INITKEYTBL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   103-0-0/w PTR         r     1 @ID$                     113-0-0/w PTR         r     1 @INDX
   113-0-0/w PTR         r     1 @K$                        5-0-0/w PTR         r     1 @PKEY$
     6-0-0/w PTR         r     1 @PKEYIN$                   3-0-0/w PTR         r     1 @PSEG$
     4-0-0/w PTR         r     1 @PSEGCNT                 155-0-0/w PTR         r     1 @SIZE
   137-0-0/w PTR         r     1 @TYPE                     47-0-0/w SBIN        r     1 ADDFLG
    23-0-0/w PTR         r     1 ALTKEY$                   57-0-0/w SBIN        r     1 ANEWSEG
   121-0-0/w UBIN        r     1 AVAIL                    113-0-0/w SBIN        r     1 BEGGRAN
   133-0-0/b BIT         r     1 BFR                      134-0-0/b BIT         r     1 BFR1
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1147 
    16-0-0/w SBIN        r     1 BOUND                    135-0-0/w SBIN        r     1 BOUND3
   150-0-0/c UBIN(9)     r     1 BTEMP                    150-0-0/c STRC(9)     r     1 BTEMPS
    24-0-0/w PTR         r     1 BUF$                      50-0-0/w PTR         r     1 BUF3$
   130-0-0/w PTR         r     1 BUF3$                    147-0-0/w PTR         r     1 BUF4$
   132-0-0/w PTR         r     1 BUF4$                    131-0-0/w PTR         r     1 BUF4$
    44-0-0/w UBIN        r     1 BUFNUM                    10-0-0/w PTR         r     1 CFU$
    60-0-0/w UBIN        r     1 COMFLG                    15-0-0/w UBIN        r     1 CRECX
   163-0-0/w CHAR(4)     r     1 CTEMP_FIELD              164-0-0/w CHAR(4)     r     1 CTEMP_FIELDIN
   126-0-0/w UBIN        r     1 CURDA                     21-0-0/w UBIN        r     1 DA
   103-0-0/w UBIN        r     1 DA                        40-0-0/w PTR         r     1 DBUF$
    74-0-0/w BIT         r     1 DELALL_FAST              126-0-0/w SBIN        r     1 DISP
   103-0-0/w SBIN        r     1 DONE                     135-0-0/w SBIN        r     1 ENDGRAN
    51-0-0/w SBIN        r     1 ENUF                      36-0-0/w UBIN        r     1 EOP
   104-0-0/w UBIN        r     1 ERRTMP                   133-0-0/c STRC        r     1 EXTNT
   143-0-0/w PTR         r     1 F$                       146-0-0/w PTR         r     1 F$
    43-0-0/w SBIN        r     1 FAK                       70-0-0/w PTR         r     1 FIELD$
    71-0-0/w PTR         r     1 FIELDIN$                 160-0-0/d CHAR(8)     r     1 FIELDIN_TEMP
   156-0-0/d CHAR(8)     r     1 FIELD_TEMP               114-0-0/w UBIN        r     1 FIRSTSEG
   102-0-0/w PTR         r     1 FIT$                     150-0-0/w UBIN        r     1 FLINKDA
    27-0-0/b BIT (72)    r     1 FM_MISEG                  64-0-0/w UBIN        r     1 FN
   125-0-0/w UBIN        r     1 FORWARD                   32-0-0/w UBIN        r     1 FOUND
    *0-0-0/w SBIN        r     1 FPTCODE                   26-0-0/w PTR         r     1 G$
   115-0-0/w UBIN        r     1 GACTB                    107-0-0/w UBIN        r     1 GACTB
   105-0-0/w SBIN        r     1 GACTB                    106-0-0/w SBIN        r     1 GACTB
   105-0-0/w SBIN        r     1 GACTB                    116-0-0/w UBIN        r     1 GSIZ
   110-0-0/w UBIN        r     1 GX                       103-0-0/w SBIN        r     1 GX
   102-0-0/w SBIN        r     1 GX                       102-0-0/w SBIN        r     1 GX
   132-0-0/w UBIN        r     1 HIGH                     137-0-0/w UBIN        r     1 HIGH
   105-0-0/w UBIN        r     1 I                        121-0-0/w UBIN        r     1 I
   141-0-0/w UBIN        r     1 I                        151-0-0/w UBIN        r     1 I
   114-0-0/w UBIN        r     1 I                        151-0-0/w UBIN        r     1 I
   151-0-0/w UBIN        r     1 I                        125-0-0/w SBIN        r     1 I
   101-0-0/w SBIN        r     1 I                        107-0-0/w SBIN        r     1 I
   104-0-0/w SBIN        r     1 I                        115-0-0/w SBIN        r     1 I
   105-0-0/w SBIN        r     1 I                        105-0-0/w SBIN        r     1 I
   142-0-0/w SBIN        r     1 I                        100-0-0/w SBIN        r     1 I
   107-0-0/w UBIN        r     1 I                        115-0-0/w SBIN        r     1 I
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1148 
   100-0-0/w SBIN        r     1 I                        101-0-0/w SBIN        r     1 I
    77-0-0/w SBIN        r     1 I                        117-0-0/w SBIN        r     1 I
   132-0-0/w SBIN        r     1 I                        125-0-0/w SBIN        r     1 I
   115-0-0/w SBIN        r     1 I                        107-0-0/w SBIN        r     1 I
   127-0-0/w SBIN        r     1 I                        127-0-0/w SBIN        r     1 I
   133-0-0/w SBIN        r     1 I                        115-0-0/w SBIN        r     1 I
    77-0-0/w SBIN        r     1 I                        104-0-0/w SBIN        r     1 I
   131-0-0/w PTR         r     1 I$                       106-0-0/b BIT         r     1 ICHNG
    *0-0-0/w PTR         r     1 ID$                       34-0-0/w PTR         r     1 IDPTR$
   102-0-0/b BIT         r     1 IGNORE_LKEY               11-0-0/w UBIN        r     1 INDEX#
    54-0-0/w SBIN        r     1 INDX                      *0-0-0/w UBIN        r     1 INDX
   105-0-0/w SBIN        r     1 INDX                     103-0-0/w UBIN        r     1 INDX
   121-0-0/b BIT         r     1 INDXCHNG                  52-0-0/w SBIN        r     1 INSRT
    63-0-0/w PTR         r     1 IRKEY$                   102-0-0/w SBIN        r     1 J
   100-0-0/w SBIN        r     1 J                        143-0-0/w SBIN        r     1 J
   124-0-0/w SBIN        r     1 J                        134-0-0/w SBIN        r     1 J
     7-0-0/w PTR         r     1 JDCB$                     *0-0-0/w PTR         r     1 K$
   152-0-0/w SBIN        r     1 KCHRS                     20-0-0/w PTR         r     1 KEY$
   133-0-0/w SBIN        r     1 KEYCHNG                   17-0-0/w SBIN        r     1 KEYCNT
   133-0-0/w SBIN        r     1 KEYCNT3                   37-0-0/w PTR         r     1 KEYIN$
    56-0-0/w UBIN        r     1 KEYIN_SIZE                46-0-0/w UBIN        r     1 KEYWORDS
    67-0-0/w PTR         r     1 KFIELD$                  115-0-0/w SBIN        r     1 KLB
   120-0-0/w SBIN        r     1 KLB                      142-0-0/w SBIN        r     1 KLB
   134-0-0/w SBIN        r     1 KLB                       25-0-0/w PTR         r     1 KTPTR$
   151-0-0/w PTR         r     1 KTPTR3$                  134-0-0/w PTR         r     1 KTPTR3$
   136-0-0/w SBIN        r     1 LASTSEG                  126-0-0/w UBIN        r     1 LAST_RESULT
   133-0-0/w UBIN        r     1 LAST_RESULT              131-0-0/w SBIN        r     1 LCDA
   131-0-0/w SBIN        r     1 LCDA                      77-0-0/w UBIN        r     1 LCDA
   127-0-0/w SBIN        r     1 LCDA                     143-0-0/w SBIN        r     1 LCDA
   127-0-0/w SBIN        r     1 LCDA                     137-0-0/w UBIN        r     1 LCDA
   137-0-0/w UBIN        r     1 LCDA                      61-0-0/w UBIN        r     1 LEN
   145-0-0/w UBIN        r     1 LEN                      146-0-0/w UBIN        r     1 LEN1
   147-0-0/w UBIN        r     1 LEN2                     131-0-0/w SBIN        r     1 LEVEL
   101-0-0/w SBIN        r     1 LKEY                     131-0-0/w UBIN        r     1 LOW
   140-0-0/w UBIN        r     1 LOW                      122-0-0/w UBIN        r     1 MINSIZE
   122-0-0/w UBIN        r     1 MIN_SIZE                 113-0-0/b BIT (72)    r     1 MISEG(0:1)
   137-0-0/w SBIN        r     1 MKEYCNT                   77-0-0/w SBIN        r     1 MOVCNT
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1149 
    77-0-0/w SBIN        r     1 MOVCNT                    55-0-0/w SBIN        r     1 MOVECNT
   103-0-0/w SBIN        r     1 N                        105-0-0/w SBIN        r     1 N
   101-0-0/w SBIN        r     1 N                        105-0-0/w SBIN        r     1 NEWKEYF
   135-0-0/w SBIN        r     1 NOMORE                   104-0-0/w UBIN        r     1 NUMENTS
   122-0-0/w UBIN        r     1 NUMENTS                  110-0-0/w UBIN        r     1 NUMENTS
   110-0-0/w UBIN        r     1 NUMENTS                  116-0-0/w UBIN        r     1 NUMENTS
   120-0-0/w UBIN        r     1 NUMENTS                  116-0-0/w UBIN        r     1 NUMENTS
    *0-0-0/w SBIN        r     1 NUMWRDS                  145-0-0/w UBIN        r     1 ODD
    41-0-0/b BIT (72)    r     1 OLD_MISEG                 22-0-0/w UBIN        r     1 ORG
   102-0-0/w PTR         r     1 P$                       100-0-0/w PTR         r     1 P1$
   101-0-0/w PTR         r     1 P1$                      140-0-0/w PTR         r     1 P1$
   101-0-0/w PTR         r     1 P2$                      102-0-0/w PTR         r     1 P2$
   136-0-0/w PTR         r     1 P3$                       *0-0-0/w PTR         r     1 PKEY$
    *0-0-0/w PTR         r     1 PKEYIN$                   *0-0-0/w PTR         r     1 PSEG$
    *0-0-0/w UBIN        r     1 PSEGCNT                  103-0-0/w PTR         r     1 PTR$
    62-0-0/w PTR         r     1 REC$                      65-0-0/w PTR         r     1 RECFIELD$
    33-0-0/w UBIN        r     1 RECNUM                   121-0-0/w UBIN        r     1 REPOS
    31-0-0/w UBIN        r     1 RESULT                   125-0-0/b BIT         r     1 RPOS
   105-0-0/c STRC(72)    r     1 SAVE                     101-0-0/w BIT         r     1 SAVE_ERR
   113-0-0/b BIT         r     1 SAVE_ERROR                12-0-0/w UBIN        r     1 SAVE_INDEX#
   116-0-0/b BIT (72)    r     1 SAVE_MISEG                14-0-0/w PTR         r     1 SEG$
    35-0-0/w SBIN        r     1 SEGCNT                    13-0-0/w SBIN        r     1 SEGX
   125-0-0/w SBIN        r     1 SIZE                     110-0-0/w UBIN        r     1 SIZE
   140-0-0/w UBIN        r     1 SIZE                     131-0-0/w SBIN        r     1 SIZE
   153-0-0/w UBIN        r     1 SIZE                     152-0-0/w UBIN        r     1 SIZE
   111-0-0/w UBIN(18)    r     1 SIZE                     103-0-0/w SBIN        r     1 SIZE
   103-0-0/w SBIN        r     1 SIZE                     141-0-0/w SBIN        r     1 SIZE
   103-0-0/w SBIN        r     1 SIZE                     123-0-0/w SBIN        r     1 SIZE
   123-0-0/w SBIN        r     1 SIZE                      *0-0-0/w UBIN        r     1 SIZE
   135-0-0/w SBIN        r     1 SIZE                     106-0-0/w SBIN        r     1 SIZE
   111-0-0/w SBIN        r     1 SIZE                      53-0-0/w UBIN        r     1 SPARE
    66-0-0/w PTR         r     1 START$                   163-0-0/w SBIN        r     1 STEMP_FIELD
   164-0-0/w SBIN        r     1 STEMP_FIELDIN            104-0-0/w SBIN        r     1 T
   103-0-0/w PTR         r     1 T$                       127-0-0/w PTR         r     1 TBUF$
   133-0-0/w UBIN        r     1 TCRECX                   131-0-0/w UBIN        r     1 TCRECX
   103-0-0/w UBIN        r     1 TCRECX                   147-0-0/w UBIN(4)     r     1 TEMP
   141-0-0/w SBIN        r     1 TEMP                      72-0-0/c CHAR        r     1 TEMP_CHAR
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1150 
   101-0-0/w SBIN        r     1 TOT                       45-0-0/w UBIN        r     1 TOTSIZE
   131-0-0/w SBIN        r     1 TSIZE                    144-0-0/w SBIN        r     1 TSIZE
   125-0-0/w SBIN        r     1 TSIZE                    124-0-0/w SBIN        r     1 TSIZE
   132-0-0/w SBIN        r     1 TSIZE                     *0-0-0/w UBIN        r     1 TYPE
   107-0-0/b BIT         r     1 UNIQUE                   123-0-0/b BIT         r     1 UNIQUE
   111-0-0/b BIT         r     1 UNIQUE                   111-0-0/w BIT         r     1 UNIQUE
   117-0-0/b BIT         r     1 UNIQUE                   117-0-0/b BIT         r     1 UNIQUE
    73-0-0/w UBIN        r     1 USERKEY_SIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS0$
     0-0-0/w PTR         r     1 B$PS1$                     0-0-0/w PTR         r     1 B$PS2$
     0-0-0/w PTR         r     1 B$PS3$                     0-0-0/w PTR         r     1 B$ROSEG$
     0-0-0/d STRC(432)   r     1 B_MPT                      0-0-0/w PTR         r     1 F$CFU$
     0-0-0/w PTR         r     1 FM$BUF$(0:0)
     0-0-0/w PTR         r     1 FMC_CACHEPGCNT$            0-0-0/w UBIN        r     1 FM_EOP(0:8)
     0-0-0/w UBIN        r     1 FM_FRMAX                   0-0-0/w UBIN        r     1 FM_FRZERO
     0-0-0/w UBIN        r     1 FM_SRZERO                  0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(4572)  r     1 ALTKEYS                    0-0-0/w SBIN        r     1 ARRAY(0:0)
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(2304)  r     1 B$SS
     0-0-0/d STRC(576)   r     1 B$U                        0-0-0/c UBIN(9)     r     1 BYT(0:0)
     0-0-0/c CHAR        r     1 CHAR1                      0-0-0/c CHAR(4)     r     1 CHAR4
     0-0-0/c CHAR(8)     r     1 CHAR8                      0-0-0/c ACHR        r     1 CHARS
     0-0-0/c ACHR        r     1 CHARS                      0-0-0/c ACHR        r     1 CHARS
     0-0-0/c ACHR        r     1 CHARS                      0-0-0/c ACHR        r     1 CHARS
     0-0-0/c ACHR        r     1 CHARS                      0-0-0/c ACHR        r     1 CHARS
     0-0-0/c ACHR        r     1 CHARS                      0-0-0/c ACHR        r     1 CHARS
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1151 
     0-0-0/c ACHR        r     1 CHARS                      0-0-0/c ACHR        r     1 CHR
     0-0-0/c ACHR        r     1 CHRS                       0-0-0/c ACHR        r     1 CHRS
     0-0-0/c ACHR        r     1 CHRS                       0-0-0/w STRC(135)   r     1 CODE02
     0-0-0/w STRC(324)   r     1 CODE03                     0-0-0/c ACHR        r     1 CTEMP
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w UBIN        r     1 FIELDIN_PTR
     0-0-0/w UBIN        r     1 FIELD_PTR                  0-0-0/w STRC(72)    r     1 FIELD_START
     0-0-0/w STRC(288)   r     1 FM$CFU                     0-0-0/w STRC(288)   r     1 FM$CFUA
     0-0-0/w STRC(180)   r     1 FM$GRAN                    0-0-0/w STRC(180)   r     1 FM$GRAN3
     0-0-0/w ASTR(18)    r     1 FM$IRENT                   0-0-0/w ASTR(9)     r     1 FM$KEYENT
     0-0-0/w UBIN(9)     r     1 FM$KEYTBL(0:279)
     0-0-0/w UBIN(9)     r     1 FM$KEYTBL3(0:279)
     0-0-0/w UBIN        r     1 FM$KT(0:69)                0-0-0/w UBIN        r     1 FM$KT3(0:69)
     0-0-0/w STRC(72)    r     1 FM$MISEG                   0-0-0/w STRC        r     1 FM$ULSEG
     0-0-0/d STRC(72)    r     1 FPT$DELREC_V               0-0-0/d STRC(72)    r     1 FPT$PFIL_V
     0-0-0/d STRC(108)   r     1 FPT$PRECORD_V              0-0-0/d STRC(216)   r     1 FPT$READ_V
     0-0-0/d STRC(144)   r     1 FPT$WRITE_V                0-0-0/w UBIN        r     1 HDR(0:1)
     0-0-0/w STRC(72)    r     1 ID                         0-0-0/w STRC(360)   r     1 IRKEYS
     0-0-0/c ACHR        r     1 KCHR                       0-0-0/w ASTR(9)     r     1 KEY
     0-0-0/c ASTR(9)     r     1 KEY                        0-0-0/w ASTR(9)     r     1 KEY
     0-0-0/w ASTR(9)     r     1 KEY                        0-0-0/c ASTR(9)     r     1 KEYIN
     0-0-0/w STRC(81)    r     1 KFIELD                     0-0-0/d STRC(54)    r     1 RECFIELD
     0-0-0/c ASTR(9)     r     1 UKEY                       0-0-0/c ASTR(0)     r     1 ZAP
     0-0-0/c ASTR(0)     r     1 ZAP                        0-0-0/c ASTR(0)     r     1 ZAP


   Procedure FMG$KEYED requires 11790 words for executable code.
   Procedure FMG$KEYED requires 128 words of local(AUTO) storage.

    No errors detected in file FMG$KEYED.:E05TSI    .
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1152 
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1153 
          MINI XREF LISTING

ADDDATA
      7036**PROC     7644--CALL    13663--CALL
ADDFLG
      6928**DCL      7095<<ASSIGN   7112<<ASSIGN   7967>>IF       8066>>IF       9623>>IF      10025>>IF
     10534>>IF      13130>>IF      13164>>IF      13188>>IF      13420>>IF
ADDKEY
      7087**PROC     7390--CALL    11039--CALL    12223--CALL    14148--CALL
ADDSEG
      7107**PROC     7384--CALL    11068--CALL    11094--CALL    12217--CALL    14167--CALL
AGAIN IN PROCEDURE GETSPACE
      9988**LABEL    9997--GOTO
ALLOC IN PROCEDURE ADDDATA
      7051**LABEL    7048--CALLALT
ALLOCATE
      7130**PROC     7042--CALL     7051--CALL     7897--CALL
ALLOC_ERR IN PROCEDURE ALLOCATE
      7154**LABEL    7133--CALLALT
ALTCHK
      7197**PROC    13887--CALL    14070--CALL
ALTKEY$
      6910**DCL      6438--IMP-PTR  6444--IMP-PTR  7068>>IF       7207>>ASSIGN   7209>>ASSIGN   7213>>ASSIGN
      7215>>ASSIGN   7231>>ASSIGN   7232>>IF       7232>>IF       7243>>ASSIGN   7245>>ASSIGN   7252>>ASSIGN
      7254>>ASSIGN   7362>>ASSIGN   7364>>ASSIGN   7368>>ASSIGN   7370>>ASSIGN   7452>>IF       7456>>IF
      7457>>ASSIGN   7457>>ASSIGN   7460>>IF       7461>>ASSIGN   7461>>ASSIGN   7484>>IF       7486>>ASSIGN
      7488>>ASSIGN   7589>>IF       7593>>IF       7620>>IF       7629>>IF       7769>>DOINDEX  7770>>ASSIGN
      7889>>IF       7892>>ASSIGN   7894>>ASSIGN   8164>>IF       8164>>IF       8165>>ASSIGN   8166>>ASSIGN
      8176>>DOINDEX  8176>>DOINDEX  8176>>DOINDEX  8422>>IF       8433>>ASSIGN   8470>>IF       8470>>IF
      8471>>ASSIGN   8472>>ASSIGN   8483>>DOINDEX  8483>>DOINDEX  8483>>DOINDEX  8812>>IF       8898>>IF
      8966>>IF       8978>>ASSIGN   8980>>ASSIGN   8984>>ASSIGN   8986>>ASSIGN   9341>>IF       9343>>ASSIGN
      9349>>IF       9806>>ASSIGN  10072>>ASSIGN  10073>>ASSIGN  10074>>ASSIGN  10075>>ASSIGN  10076>>ASSIGN
     10078>>DOINDEX 10079>>ASSIGN  10080>>ASSIGN  10081>>ASSIGN  10082>>ASSIGN  10083>>ASSIGN  10084>>ASSIGN
     10085>>ASSIGN  10086>>ASSIGN  10089>>DOINDEX 10091>>ASSIGN  10092>>ASSIGN  10093>>ASSIGN  10147>>ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1154 
     10148>>ASSIGN  10149>>ASSIGN  10150>>ASSIGN  10151>>ASSIGN  10153>>DOINDEX 10154>>ASSIGN  10155>>ASSIGN
     10156>>ASSIGN  10157>>ASSIGN  10158>>ASSIGN  10159>>ASSIGN  10160>>ASSIGN  10161>>ASSIGN  10164>>DOINDEX
     10166>>ASSIGN  10167>>ASSIGN  10168>>ASSIGN  10469<<ASSIGN  10993>>IF      10997>>ASSIGN  10998>>ASSIGN
     11003>>ASSIGN  11004>>ASSIGN  11070>>IF      11073>>ASSIGN  11075>>ASSIGN  11079>>ASSIGN  11081>>ASSIGN
     11695>>IF      11699>>ASSIGN  11701>>ASSIGN  11729>>IF      11733>>ASSIGN  11735>>ASSIGN  11751>>IF
     11753>>ASSIGN  11755>>ASSIGN  12192>>ASSIGN  12194>>ASSIGN  12198>>ASSIGN  12200>>ASSIGN  12598>>DOINDEX
     12599>>IF      12601>>ASSIGN  12605>>ASSIGN  12609>>DOINDEX 12610>>IF      12612>>ASSIGN  12616>>ASSIGN
     12719>>ASSIGN  12773<<ASSIGN  12797<<ASSIGN  12804>>IF      12804>>IF      12814>>IF      12829>>ASSIGN
     12830>>ASSIGN  12831>>ASSIGN  12832>>ASSIGN  12837>>ASSIGN  12838>>ASSIGN  12839>>ASSIGN  12840>>ASSIGN
     12843>>ASSIGN  12845>>ASSIGN  12847>>IF      12849>>ASSIGN  12850>>ASSIGN  12880<<ASSIGN  12887>>IF
     12887>>IF      12894>>IF      12904>>ASSIGN  12905>>ASSIGN  12906>>ASSIGN  12907>>ASSIGN  12912>>ASSIGN
     12913>>ASSIGN  12914>>ASSIGN  12915>>ASSIGN  12917>>ASSIGN  12919>>ASSIGN  12920>>IF      12922>>ASSIGN
     12923>>ASSIGN  13342>>IF      13346>>ASSIGN  13348>>ASSIGN  13505>>IF      13510>>ASSIGN  13511>>ASSIGN
     13514>>ASSIGN  13515>>ASSIGN  13543>>ASSIGN  13545>>ASSIGN  13549>>ASSIGN  13551>>ASSIGN  13697>>IF
     13773>>IF      13777>>ASSIGN  13779>>ASSIGN  13886>>IF      14013>>IF      14069>>IF
ALTKEYS.K.CDA
      6440**DCL      7456>>IF      10076<<ASSIGN  10086<<ASSIGN  10093<<ASSIGN  12832<<ASSIGN  12845>>ASSIGN
ALTKEYS.K.CRECX
      6440**DCL     10080<<ASSIGN  12830<<ASSIGN  12838>>ASSIGN
ALTKEYS.K.FDA
      6439**DCL     10072<<ASSIGN  10082<<ASSIGN  10091<<ASSIGN  11699>>ASSIGN  12804>>IF      13346>>ASSIGN
     13510>>ASSIGN
ALTKEYS.K.INDXCHNG
      6440**DCL      7213<<ASSIGN   7252<<ASSIGN  12198>>ASSIGN  12601<<ASSIGN  12605<<ASSIGN
ALTKEYS.K.KEYL
      6439**DCL      7231>>ASSIGN   9806>>ASSIGN  12839>>ASSIGN
ALTKEYS.K.KEYX
      6439**DCL      7232>>IF       7232>>IF      12840>>ASSIGN
ALTKEYS.K.LDA
      6439**DCL      7486<<ASSIGN  10073<<ASSIGN  10083<<ASSIGN  10092<<ASSIGN  11733>>ASSIGN  11753<<ASSIGN
ALTKEYS.K.RPOS
      6440**DCL     10079<<ASSIGN  12829<<ASSIGN  12837>>ASSIGN
ALTKEYS.K.SEGX
      6440**DCL      7457<<ASSIGN   7457>>ASSIGN  10081<<ASSIGN  12831<<ASSIGN  12843>>ASSIGN
ALTKEYS.K.TDA
      6439**DCL     10074<<ASSIGN  10084<<ASSIGN  12847>>IF      12849>>ASSIGN  13511<<ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1155 
ALTKEYS.K.TDALVL
      6439**DCL     10075<<ASSIGN  10085<<ASSIGN  12850>>ASSIGN
ALTKEYS.K.UNIQUE
      6440**DCL      7243>>ASSIGN   7368>>ASSIGN   8984>>ASSIGN  11004>>ASSIGN  11079>>ASSIGN  12599>>IF
     12814>>IF      13549>>ASSIGN
ALTKEYS.MINWRSIZ
      6438**DCL      7894>>ASSIGN   9343>>ASSIGN  13777>>ASSIGN
ALTKEYS.NUMENTS
      6438**DCL      7207>>ASSIGN   7362>>ASSIGN   8978>>ASSIGN  10078>>DOINDEX 10089>>DOINDEX 10998>>ASSIGN
     11073>>ASSIGN  12192>>ASSIGN  12598>>DOINDEX 12804>>IF      13543>>ASSIGN
ANEWSEG
      6936**DCL      7979>>IF       8023>>IF      10443<<ASSIGN  10558>>IF      11093<<ASSIGN  11095<<ASSIGN
     12774<<ASSIGN  13135>>IF
ARRAY IN PROCEDURE WRNEWKEY
     13954**DCL     13995<<ASSIGN
AT_EOF IN PROCEDURE FINDKEY
      9555**LABEL    9430--GOTO
AVAIL IN PROCEDURE CALCSEG
      7871**DCL      7876<<ASSIGN   7884<<ASSIGN   7887<<ASSIGN   7895>>IF       7898<<ASSIGN   7902>>IF
      7906>>ASSIGN   7907>>IF
B$DO.ECCINFO
      2563**DCL      2564--REDEF
B$JIT.CPFLAGS1.SLEAZE
       516**DCL       516--REDEF
B$JIT.DCB$
       590**DCL     10439>>ASSIGN  12763>>ASSIGN  14235>>ASSIGN
B$JIT.ERR
       422**DCL      7262<<ASSIGN   7389<<ASSIGN   7580<<ASSIGN   7653>>ASSIGN   7665<<ASSIGN   7686<<ASSIGN
      7995<<ASSIGN   8017<<ASSIGN   8306<<ASSIGN   8673<<ASSIGN   8685<<ASSIGN   8740<<ASSIGN   8751<<ASSIGN
      8832<<ASSIGN   8907<<ASSIGN   9059<<ASSIGN   9065<<ASSIGN   9075<<ASSIGN   9095>>IF       9114<<ASSIGN
      9161<<ASSIGN   9176<<ASSIGN   9179<<ASSIGN   9234<<ASSIGN   9277<<ASSIGN   9359<<ASSIGN   9368<<ASSIGN
      9488<<ASSIGN   9519<<ASSIGN   9541<<ASSIGN   9557<<ASSIGN   9582<<ASSIGN   9668<<ASSIGN   9721<<ASSIGN
      9733>>IF       9737<<ASSIGN   9773<<ASSIGN   9775<<ASSIGN   9928<<ASSIGN  10101<<ASSIGN  10176<<ASSIGN
     10560<<ASSIGN  10684<<ASSIGN  10697>>ASSIGN  10701<<ASSIGN  10710<<ASSIGN  10739<<ASSIGN  10941<<ASSIGN
     11012<<ASSIGN  11018<<ASSIGN  11199<<ASSIGN  11252<<ASSIGN  11345<<ASSIGN  11434<<ASSIGN  11443<<ASSIGN
     11499<<ASSIGN  11518<<ASSIGN  11531>>ASSIGN  11532<<ASSIGN  11534<<ASSIGN  11555<<ASSIGN  11803<<ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1156 
     11832<<ASSIGN  11901<<ASSIGN  11911<<ASSIGN  11917<<ASSIGN  11965<<ASSIGN  11982<<ASSIGN  12001<<ASSIGN
     12095<<ASSIGN  12100<<ASSIGN  12222<<ASSIGN  12547<<ASSIGN  12705<<ASSIGN  12807<<ASSIGN  12818<<ASSIGN
     12890<<ASSIGN  12898<<ASSIGN  13046<<ASSIGN  13153<<ASSIGN  13503<<ASSIGN  13624<<ASSIGN  13637<<ASSIGN
     13764<<ASSIGN  13782<<ASSIGN  13791<<ASSIGN  13806<<ASSIGN  13862<<ASSIGN  13868<<ASSIGN  13878<<ASSIGN
     13897<<ASSIGN  13907<<ASSIGN  13918<<ASSIGN  13960<<ASSIGN  14045<<ASSIGN  14051<<ASSIGN  14065<<ASSIGN
B$JIT.ERR.CODE
       423**DCL      7162>>IF       7162>>IF       7162>>IF       7162>>IF       7387>>IF       7993>>IF
      8015>>IF       8307<<ASSIGN   8683>>IF       8747>>IF       8747>>IF       8830>>IF       9174>>IF
      9485>>IF       9525>>IF       9553>>IF       9735>>IF      10097>>IF      10097>>IF      10097>>IF
     10172>>IF      10172>>IF      10172>>IF      10679>>IF      10692>>IF      10738>>IF      11016>>IF
     11340>>IF      11452>>IF      11466>>IF      11493>>IF      11516>>IF      11553>>IF      11914>>IF
     12078>>IF      12098>>IF      12220>>IF      12542>>IF      13154<<ASSIGN  13892>>IF      14122>>IF
B$JIT.ERR.MID
       423**DCL       423--REDEF
B$JIT.JRESPEAK
       584**DCL       585--REDEF
B$JIT.JUNK
       622**DCL      8674<<ASSIGN   8674>>ASSIGN   8741<<ASSIGN   8741>>ASSIGN   9164<<ASSIGN   9164>>ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
       693**DCL       693--REDEF     694--REDEF
B$JIT.PNR
       597**DCL       597--REDEF
B$JIT.TSLINE
       691**DCL       692--REDEF
B$JIT$
      6849**DCL       417--IMP-PTR  7162>>IF       7162>>IF       7162>>IF       7162>>IF       7262>>ASSIGN
      7387>>IF       7389>>ASSIGN   7580>>ASSIGN   7653>>ASSIGN   7665>>ASSIGN   7686>>ASSIGN   7993>>IF
      7995>>ASSIGN   8015>>IF       8017>>ASSIGN   8306>>ASSIGN   8307>>ASSIGN   8673>>ASSIGN   8674>>ASSIGN
      8674>>ASSIGN   8683>>IF       8685>>ASSIGN   8740>>ASSIGN   8741>>ASSIGN   8741>>ASSIGN   8747>>IF
      8747>>IF       8751>>ASSIGN   8830>>IF       8832>>ASSIGN   8907>>ASSIGN   9059>>ASSIGN   9065>>ASSIGN
      9075>>ASSIGN   9095>>IF       9114>>ASSIGN   9161>>ASSIGN   9164>>ASSIGN   9164>>ASSIGN   9174>>IF
      9176>>ASSIGN   9179>>ASSIGN   9234>>ASSIGN   9277>>ASSIGN   9359>>ASSIGN   9368>>ASSIGN   9485>>IF
      9488>>ASSIGN   9519>>ASSIGN   9525>>IF       9541>>ASSIGN   9553>>IF       9557>>ASSIGN   9582>>ASSIGN
      9668>>ASSIGN   9721>>ASSIGN   9733>>IF       9735>>IF       9737>>ASSIGN   9773>>ASSIGN   9775>>ASSIGN
      9928>>ASSIGN  10097>>IF      10097>>IF      10097>>IF      10101>>ASSIGN  10172>>IF      10172>>IF
     10172>>IF      10176>>ASSIGN  10439>>ASSIGN  10560>>ASSIGN  10679>>IF      10684>>ASSIGN  10692>>IF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1157 
     10697>>ASSIGN  10701>>ASSIGN  10710>>ASSIGN  10738>>IF      10739>>ASSIGN  10941>>ASSIGN  11012>>ASSIGN
     11016>>IF      11018>>ASSIGN  11199>>ASSIGN  11252>>ASSIGN  11340>>IF      11345>>ASSIGN  11434>>ASSIGN
     11443>>ASSIGN  11452>>IF      11466>>IF      11493>>IF      11499>>ASSIGN  11516>>IF      11518>>ASSIGN
     11531>>ASSIGN  11532>>ASSIGN  11534>>ASSIGN  11553>>IF      11555>>ASSIGN  11803>>ASSIGN  11832>>ASSIGN
     11901>>ASSIGN  11911>>ASSIGN  11914>>IF      11917>>ASSIGN  11965>>ASSIGN  11982>>ASSIGN  12001>>ASSIGN
     12078>>IF      12095>>ASSIGN  12098>>IF      12100>>ASSIGN  12220>>IF      12222>>ASSIGN  12542>>IF
     12547>>ASSIGN  12705>>ASSIGN  12763>>ASSIGN  12807>>ASSIGN  12818>>ASSIGN  12890>>ASSIGN  12898>>ASSIGN
     13046>>ASSIGN  13153>>ASSIGN  13154>>ASSIGN  13503>>ASSIGN  13624>>ASSIGN  13637>>ASSIGN  13764>>ASSIGN
     13782>>ASSIGN  13791>>ASSIGN  13806>>ASSIGN  13862>>ASSIGN  13868>>ASSIGN  13878>>ASSIGN  13892>>IF
     13897>>ASSIGN  13907>>ASSIGN  13918>>ASSIGN  13960>>ASSIGN  14045>>ASSIGN  14051>>ASSIGN  14065>>ASSIGN
     14122>>IF      14235>>ASSIGN
B$PS0$
      6850**DCL      6697--IMP-PTR  6704--IMP-PTR  6710--IMP-PTR  6714--IMP-PTR  6717--IMP-PTR  7008>>ASSIGN
      7056>>CALL     7625>>CALL     7650>>IF       7657>>ASSIGN   8669>>IF       8736>>IF       9097>>ASSIGN
      9104>>IF       9157>>IF       9211>>IF       9245>>IF       9676>>IF       9909>>CALL    10450>>ASSIGN
     10453>>ASSIGN  10456>>ASSIGN  10459>>ASSIGN  10624>>IF      10624>>IF      10624>>IF      10624>>IF
     10628>>ASSIGN  10638>>IF      10668>>IF      10695>>IF      11359>>IF      11420>>IF      11420>>IF
     11422>>IF      11429>>IF      11439>>IF      11439>>IF      11459>>IF      11466>>IF      11469>>IF
     11475>>IF      11481>>IF      11483>>ASSIGN  11501>>IF      11508>>IF      11508>>IF      11520>>IF
     11526>>IF      11529>>IF      11529>>IF      11543>>IF      11549>>IF      11551>>IF      11551>>IF
     11801>>IF      11830>>IF      11905>>IF      11960>>IF      11975>>IF      11980>>IF      11993>>IF
     11997>>IF      12047>>IF      12054>>IF      12056>>ASSIGN  12065>>IF      12068>>IF      12084>>IF
     12089>>IF      12101>>IF      12103>>IF      12122>>IF      12129>>IF      12134>>IF      12137>>IF
     13621>>IF      13761>>IF      13762>>IF      13789>>IF      13876>>IF      13876>>IF      13905>>IF
     13905>>IF      14049>>IF      14049>>IF
B$PS1$
      6851**DCL      7764>>ASSIGN   8258>>IF       9048<>CALL     9214<>CALL     9216<>CALL     9813>>ASSIGN
      9815>>ASSIGN   9817>>ASSIGN   9818>>ASSIGN  11462<>CALL    11463<>CALL    11817<>CALL    11819<>CALL
     12040<>CALL    12042<>CALL    13802<>CALL    13803>>ASSIGN  13842<>CALL    14112>>ASSIGN  14116>>ASSIGN
B$PS2$
      6852**DCL      7232>>IF       7259>>ASSIGN   7272<>CALL     7380>>ASSIGN   8258>>IF       9044<>CALL
      9046<>CALL     9066<>CALL     9082<>CALL     9133<>CALL     9663>>ASSIGN   9664<>CALL     9666<>CALL
      9695>>ASSIGN  11010>>ASSIGN  11031>>ASSIGN  11089>>ASSIGN  11431<>CALL    11450>>ASSIGN  11477>>ASSIGN
     11552<>CALL    12208>>ASSIGN  13796<>CALL
B$PS3$
      6853**DCL      9090<>CALL     9091>>ASSIGN   9756>>ASSIGN   9757<>CALL     9758<>CALL    11962<>CALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1158 
     12004>>ASSIGN  12049>>ASSIGN  12104<>CALL
B$ROSEG$
      6854**DCL     10474>>ASSIGN  10479>>ASSIGN  10480>>ASSIGN  12797>>ASSIGN  12880>>ASSIGN
B$SS.ISR.WSR
      2290**DCL      8669>>IF       8736>>IF       9157>>IF      10638>>IF      10668>>IF
B$SS.RVA
      2285**DCL      2286--REDEF
B$U.ASYNCH
      2500**DCL      8669>>IF       8736>>IF       9157>>IF      10638>>IF      10668>>IF
B$U.MISC
      2542**DCL      2543--REDEF
B$USER.MISC
      2618**DCL      2619--REDEF
BADID IN PROCEDURE FINDIDO
      9359**LABEL    9332--GOTO     9333--CALLALT  9336--GOTO     9345--GOTO     9350--GOTO
BEGGRAN IN PROCEDURE PREVREC
     11583**DCL     11608<<ASSIGN  11620>>ASSIGN  11622>>DOWHILE 11629>>IF
BFR IN PROCEDURE SWITCH1_3
     13406**DCL     13409<<ASSIGN  13413>>ASSIGN
BFR1 IN PROCEDURE SWITCH1_3
     13407**DCL     13410<<ASSIGN  13414>>ASSIGN
BINSEARCH
      7300**PROC     9508--CALL
BLDALTSEG
      7356**PROC     7073--CALL
BLDFLINK
      7440**PROC     9842--CALL    10010--CALL    10029--CALL    10582--CALL    10805--CALL    10912--CALL
     10921--CALL
BLDREC
      7572**PROC    13889--CALL    14022--CALL    14072--CALL
BLINK
      7681**PROC     8006--CALL     8540--CALL     8552--CALL     9473--CALL     9478--CALL     9495--CALL
     11631--CALL
BOF IN PROCEDURE FINDKEY
      9525**LABEL    9473--CALLALT  9478--CALLALT
BOF IN PROCEDURE MOVEN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1159 
     10692**LABEL   10648--CALLALT 10664--CALLALT
BOF IN PROCEDURE PREVREC
     11653**LABEL   11631--CALLALT
BOUND
      6905**DCL      7157<<ASSIGN   7312>>IF       7502<<ASSIGN   7962>>IF       8088<<ASSIGN   8090>>IF
      8120>>IF       8130>>IF       8658<<ASSIGN   8822<<ASSIGN   9427<<ASSIGN   9440<<ASSIGN   9452<<ASSIGN
      9622<<ASSIGN  10021>>IF      10543>>IF      10843>>IF      10849>>IF      10863>>IF      10865<<ASSIGN
     10866>>ASSIGN  10929>>IF      10962>>IF      10963<<ASSIGN  10967>>ASSIGN  11321>>IF      11599>>IF
     11609>>IF      11937<<ASSIGN  12277>>IF      12284>>IF      12302>>IF      12303<<ASSIGN  12306>>IF
     12307<<ASSIGN  12315>>IF      12316<<ASSIGN  12318>>ASSIGN  12401<<ASSIGN  12405>>IF      12406<<ASSIGN
     12407>>ASSIGN  12447>>IF      12456>>IF      12487>>IF      12510>>IF      12570<<ASSIGN  12739>>IF
     12767<<ASSIGN  13031<<ASSIGN  13142>>IF      13167>>IF      13167>>IF      13168<<ASSIGN  13168>>ASSIGN
     13175>>IF      13176<<ASSIGN  13181>>ASSIGN  13204>>IF      13207<<ASSIGN  13255>>IF      13280>>IF
     13328<<ASSIGN  13375>>IF      13418<<ASSIGN  13970>>IF      14193>>IF
BOUND3 IN PROCEDURE MOVETOB3
     10784**DCL     10797<<ASSIGN  10806<<ASSIGN  10827>>IF      10828<<ASSIGN  10828>>ASSIGN  10832>>IF
     10833<<ASSIGN  10852>>IF      10853<<ASSIGN  10859>>ASSIGN
BTEMP IN PROCEDURE BUILD_NIBFIELD
      7805**DCL      7806--REDEF    7819<<ASSIGN   7825<<ASSIGN   7830>>ASSIGN
BTEMPS.LOWER IN PROCEDURE BUILD_NIBFIELD
      7809**DCL      7821>>ASSIGN   7827<<ASSIGN
BTEMPS.UPPER IN PROCEDURE BUILD_NIBFIELD
      7808**DCL      7823>>ASSIGN   7829<<ASSIGN
BUF$
      6911**DCL      6411--IMP-PTR  7149>>IF       7149>>IF       7151>>ASSIGN   7151>>ASSIGN   7152>>ASSIGN
      7152>>ASSIGN   7313>>ASSIGN   7315>>ASSIGN   7396>>ASSIGN   7412>>ASSIGN   7447>>IF       7482>>IF
      7494>>IF       7501>>ASSIGN   7501>>ASSIGN   7510>>ASSIGN   7526>>ASSIGN   7529>>IF       7683>>ASSIGN
      7960>>ASSIGN   7960>>ASSIGN   7963>>ASSIGN   7965>>ASSIGN   8004>>IF       8004>>IF       8026>>ASSIGN
      8027>>ASSIGN   8029>>ASSIGN   8052>>ASSIGN   8054>>IF       8059>>IF       8086>>ASSIGN   8087>>ASSIGN
      8087>>ASSIGN   8091>>ASSIGN   8093>>ASSIGN   8121>>ASSIGN   8123>>ASSIGN   8131>>ASSIGN   8133>>ASSIGN
      8587>>ASSIGN   8626>>ASSIGN   8628<>CALL     8657>>ASSIGN   8657>>ASSIGN   8659>>ASSIGN   8817<>CALL
      8821>>ASSIGN   8821>>ASSIGN   8823>>ASSIGN   8843<>CALL     8845>>ASSIGN   8846>>ASSIGN   8846>>ASSIGN
      8847>>ASSIGN   8847>>ASSIGN   8848>>ASSIGN   8850>>ASSIGN   8850>>ASSIGN   8877<>CALL     8878>>ASSIGN
      8881>>ASSIGN   8886>>ASSIGN   9306>>ASSIGN   9424<<ASSIGN   9425>>ASSIGN   9426>>ASSIGN   9426>>ASSIGN
      9429>>IF       9438>>ASSIGN   9439>>ASSIGN   9439>>ASSIGN   9444<<ASSIGN   9445>>IF       9449<>CALL
      9450>>ASSIGN   9451>>ASSIGN   9451>>ASSIGN   9579>>ASSIGN   9605>>ASSIGN   9617>>ASSIGN   9618<<ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1160 
      9620>>ASSIGN   9621>>ASSIGN   9621>>ASSIGN   9835>>ASSIGN   9992>>IF       9996>>ASSIGN   9996>>ASSIGN
     10002>>ASSIGN  10003<<ASSIGN  10004>>ASSIGN  10006<<ASSIGN  10007>>ASSIGN  10022>>ASSIGN  10024>>ASSIGN
     10042>>ASSIGN  10118<>CALL    10123>>ASSIGN  10124>>ASSIGN  10125>>ASSIGN  10126>>ASSIGN  10127>>ASSIGN
     10128>>ASSIGN  10129>>ASSIGN  10129>>ASSIGN  10130>>ASSIGN  10131>>ASSIGN  10221<>CALL    10224>>ASSIGN
     10228>>ASSIGN  10228>>ASSIGN  10229>>ASSIGN  10241>>ASSIGN  10241>>ASSIGN  10248>>ASSIGN  10310<<ASSIGN
     10311>>ASSIGN  10311>>ASSIGN  10313>>ASSIGN  10315>>ASSIGN  10370>>IF      10388>>IF      10391>>ASSIGN
     10395>>ASSIGN  10395>>ASSIGN  10397>>ASSIGN  10544>>ASSIGN  10546>>ASSIGN  10548>>IF      10549>>IF
     10566<>CALL    10571>>ASSIGN  10571>>ASSIGN  10577>>IF      10819>>ASSIGN  10819>>ASSIGN  10822>>ASSIGN
     10822>>ASSIGN  10823>>ASSIGN  10823>>ASSIGN  10861>>ASSIGN  10907>>IF      10911>>IF      10915>>ASSIGN
     10920>>IF      10930>>ASSIGN  10932>>ASSIGN  10933>>IF      10952>>ASSIGN  10952>>ASSIGN  10953>>CALL
     10953>>CALL    10954>>ASSIGN  10954>>ASSIGN  10955>>ASSIGN  10955>>ASSIGN  10956>>ASSIGN  10956>>ASSIGN
     11029>>ASSIGN  11104>>ASSIGN  11219>>ASSIGN  11235>>ASSIGN  11308>>ASSIGN  11315>>ASSIGN  11316>>ASSIGN
     11335>>ASSIGN  11602>>ASSIGN  11607>>ASSIGN  11608>>ASSIGN  11610>>ASSIGN  11612>>ASSIGN  11618>>ASSIGN
     11626>>ASSIGN  11632>>ASSIGN  11641>>ASSIGN  11649>>ASSIGN  11704<>CALL    11740<<ASSIGN  11741>>IF
     11742<>CALL    11743>>ASSIGN  11747>>ASSIGN  11933<>CALL    11935>>ASSIGN  11935>>ASSIGN  11936>>ASSIGN
     12176>>ASSIGN  12240>>ASSIGN  12278>>ASSIGN  12280>>ASSIGN  12285>>ASSIGN  12287>>ASSIGN  12289>>ASSIGN
     12289>>ASSIGN  12294>>ASSIGN  12294>>ASSIGN  12320>>ASSIGN  12321>>ASSIGN  12321>>ASSIGN  12322>>ASSIGN
     12322>>ASSIGN  12327>>IF      12327>>IF      12327>>IF      12335>>ASSIGN  12339>>IF      12341>>ASSIGN
     12345>>ASSIGN  12348>>ASSIGN  12351>>ASSIGN  12352>>ASSIGN  12363<<ASSIGN  12365>>IF      12366>>ASSIGN
     12392>>ASSIGN  12392>>ASSIGN  12410>>ASSIGN  12410>>ASSIGN  12411>>ASSIGN  12411>>ASSIGN  12445>>ASSIGN
     12445>>ASSIGN  12448>>ASSIGN  12450>>ASSIGN  12457>>ASSIGN  12459>>ASSIGN  12464>>IF      12464>>IF
     12473>>ASSIGN  12473>>ASSIGN  12474>>ASSIGN  12474>>ASSIGN  12485>>ASSIGN  12485>>ASSIGN  12488>>ASSIGN
     12490>>ASSIGN  12514>>IF      12525>>IF      12525>>IF      12564<<ASSIGN  12565>>IF      12566<>CALL
     12568>>ASSIGN  12569>>ASSIGN  12569>>ASSIGN  12740>>ASSIGN  12742>>ASSIGN  12748>>ASSIGN  12765<<ASSIGN
     12766>>ASSIGN  12766>>ASSIGN  12768>>ASSIGN  13025<<ASSIGN  13026>>IF      13027<>CALL    13029>>ASSIGN
     13030>>ASSIGN  13030>>ASSIGN  13071>>IF      13140>>ASSIGN  13140>>ASSIGN  13143>>ASSIGN  13145>>ASSIGN
     13148>>ASSIGN  13148>>ASSIGN  13155<>CALL    13202>>ASSIGN  13211>>ASSIGN  13217>>ASSIGN  13219>>ASSIGN
     13219>>ASSIGN  13220>>ASSIGN  13220>>ASSIGN  13256>>ASSIGN  13258>>ASSIGN  13281>>ASSIGN  13283>>ASSIGN
     13326>>ASSIGN  13327>>ASSIGN  13327>>ASSIGN  13337>>IF      13340>>IF      13353>>ASSIGN  13371>>IF
     13371>>IF      13376>>ASSIGN  13378>>ASSIGN  13415<<ASSIGN  13416>>ASSIGN  13417>>ASSIGN  13417>>ASSIGN
     13438>>ASSIGN  13439<>CALL    13454>>ASSIGN  13455<>CALL    13484<<ASSIGN  13485>>IF      13486<>CALL
     13494<>CALL    13520<>CALL    13574>>ASSIGN  13971>>ASSIGN  13973>>ASSIGN  14191>>ASSIGN
BUF3$
      6929**DCL      6415--IMP-PTR  7467>>IF       7474>>ASSIGN   7506<>CALL     7508>>ASSIGN   7510>>ASSIGN
      7512>>ASSIGN   7513>>ASSIGN   7514>>ASSIGN   7515>>ASSIGN   7516>>ASSIGN   7517>>ASSIGN   7519>>ASSIGN
      9617<<ASSIGN   9839<>CALL     9984<<ASSIGN  10003>>ASSIGN  10028>>IF      10549>>IF      10553>>IF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1161 
     10581>>IF      10795>>ASSIGN  10796>>ASSIGN  10796>>ASSIGN  10802>>IF      10808>>ASSIGN  10808>>ASSIGN
     10813>>ASSIGN  10813>>ASSIGN  10841>>ASSIGN  10869>>ASSIGN  10869>>ASSIGN  10870>>ASSIGN  10870>>ASSIGN
     10872>>ASSIGN  10909<<ASSIGN  10918<>CALL    10920>>IF      13415>>ASSIGN  13419<<ASSIGN
BUF3$ IN PROCEDURE REMKEY
     12270**DCL     12337<>CALL    12345>>ASSIGN  12363>>ASSIGN
BUF4$ IN PROCEDURE BLDFLINK
      7441**DCL      7466<<ASSIGN   7474<<ASSIGN   7475>>ASSIGN   7529>>IF
BUF4$ IN PROCEDURE GETBLINK
      9603**DCL      9608<>CALL     9618>>ASSIGN   9619<<ASSIGN
BUF4$ IN PROCEDURE REMKEY
     12271**DCL     12338<<ASSIGN  12343<>CALL    12347>>IF      12348>>ASSIGN
BUFNUM
      6925**DCL      8876<<ASSIGN   8877<>CALL     8893>>IF       8894<>CALL     9322<<ASSIGN   9327<<ASSIGN
      9333<>CALL     9889<<ASSIGN   9894<<ASSIGN   9897>>ASSIGN   9898>>IF       9900<>CALL     9909<>CALL
     11849<<ASSIGN  11851<<ASSIGN  11853>>ASSIGN  11854>>IF      11858<>CALL    13437>>ASSIGN  13439<>CALL
     13453>>ASSIGN  13455<>CALL    13488<<ASSIGN  13491<<ASSIGN
BUILD_FIELD
      7703**PROC     7772--CALL
BUILD_IRKEY
      7748**PROC     9803--CALL    13192--CALL    14002--CALL
BUILD_NIBFIELD
      7801**PROC     7712--CALL
BYT IN PROCEDURE BUILD_NIBFIELD
      7811**DCL      7819>>ASSIGN   7825>>ASSIGN   7830<<ASSIGN
B_MPT.AS
      6559**DCL      6562--REDEF
B_MPT.ASDESC
      6591**DCL      6595--REDEF
B_MPT.ECCB
      6574**DCL      6577--REDEF
B_MPT.ECCBDESC
      6609**DCL      6613--REDEF
B_MPT.LS
      6554**DCL      6557--REDEF
B_MPT.LSDESC
      6585**DCL      6589--REDEF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1162 
B_MPT.PS
      6564**DCL      6567--REDEF
B_MPT.PSDESC
      6597**DCL      6601--REDEF
B_MPT.SS
      6549**DCL      6552--REDEF
B_MPT.SS$
      6552**DCL      8669>>IF       8736>>IF       9157>>IF      10638>>IF      10668>>IF
B_MPT.SSDESC
      6579**DCL      6583--REDEF
B_MPT.TCB
      6569**DCL      6572--REDEF
B_MPT.TCBDESC
      6603**DCL      6607--REDEF
CALCSEG
      7870**PROC    11038--CALL    11067--CALL
CALC_INSRT
      7955**PROC     9986--CALL    10017--CALL    10036--CALL
CALC_SPACE
      8049**PROC     9988--CALL    10005--CALL
CFU$
      6899**DCL      6399--IMP-PTR  7040>>ASSIGN   7148>>ASSIGN   7171>>ASSIGN   7171>>ASSIGN   7275>>ASSIGN
      7404>>ASSIGN   7490>>ASSIGN   7496>>IF       7497>>ASSIGN   7497>>ASSIGN   7498>>ASSIGN   7500>>ASSIGN
      7874>>IF       7875>>IF       7879>>ASSIGN   8653>>IF       8801>>IF       8801>>IF       8827>>ASSIGN
      8827>>ASSIGN   8833>>ASSIGN   8857>>ASSIGN   8858>>ASSIGN   8867>>ASSIGN   8868>>ASSIGN   8869>>ASSIGN
      8870>>ASSIGN   8871>>ASSIGN   8872>>ASSIGN   8873>>ASSIGN   8873>>ASSIGN   8873>>ASSIGN   8874>>ASSIGN
      8896>>IF       8903>>ASSIGN   8959>>ASSIGN   8962>>ASSIGN   8962>>ASSIGN   8963>>ASSIGN   8995>>ASSIGN
      9300>>IF       9516>>ASSIGN   9549>>ASSIGN   9567>>ASSIGN  10073>>ASSIGN  10148>>ASSIGN  10215>>IF
     10239>>ASSIGN  10370>>IF      10370>>IF      10370>>IF      10370>>IF      10378>>IF      10379>>IF
     10379>>IF      10414>>ASSIGN  10415>>ASSIGN  10415>>ASSIGN  10418>>ASSIGN  10440<<ASSIGN  11098>>ASSIGN
     11730>>ASSIGN  11758>>ASSIGN  12361<<ASSIGN  12362>>ASSIGN  12604>>ASSIGN  12615>>ASSIGN  12764<<ASSIGN
     12814>>IF      12894>>IF      13037>>IF      13055>>IF      13498>>ASSIGN  13568>>ASSIGN  13621>>IF
     13752>>ASSIGN  13768>>IF      13769>>ASSIGN  14019>>ASSIGN  14019>>ASSIGN  14020>>ASSIGN  14236<<ASSIGN
CHAR1
      6958**DCL     11871>>ASSIGN  13695<<CALLBLT 13803>>ASSIGN
CHAR4 IN PROCEDURE COMPFIELD
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1163 
      8336**DCL      8371>>ASSIGN   8372>>ASSIGN
CHAR8 IN PROCEDURE COMPFIELD
      8337**DCL      8376>>ASSIGN   8377>>ASSIGN
CHARS IN PROCEDURE ALTCHK
      7204**DCL      7232>>IF       7232>>IF
CHARS IN PROCEDURE COMKEY
      8219**DCL      8270>>IF       8275>>IF
CHARS IN PROCEDURE GETKEY
      9795**DCL      9813<<ASSIGN   9815<<ASSIGN
CHARS IN PROCEDURE KEYEXP
     10213**DCL     10233<<ASSIGN  10233>>ASSIGN
CHARS IN PROCEDURE KEYSQZ
     10365**DCL     10394<<ASSIGN  10394>>ASSIGN
CHARS IN PROCEDURE MOVETOB3
     10792**DCL     10820<<ASSIGN  10820>>ASSIGN
CHARS IN PROCEDURE RDCONT
     11796**DCL     11871<<ASSIGN
CHARS IN PROCEDURE SLIDE
     13123**DCL     13197>>ASSIGN
CHARS IN PROCEDURE WRCONT
     13619**DCL     13695>>CALLBLT
CHARS IN PROCEDURE WRNEWKEY
     13953**DCL     13986>>ASSIGN
CHECKGRAN
      8112**PROC     9428--CALL     9441--CALL     9453--CALL     9504--CALL    13329--CALL
CHECK_LAST
      8083**PROC    13847--CALL
CHKEY
      8158**PROC     7239--CALL
CHR IN PROCEDURE COMPFIELD
      8332**DCL      8364>>IF       8364>>IF       8365>>IF       8365>>IF
CHRS IN PROCEDURE BUILD_FIELD
      7706**DCL      7717<<ASSIGN   7717>>ASSIGN
CHRS IN PROCEDURE CHKEY
      8161**DCL      8169>>IF       8169>>IF       8170>>IF       8170>>IF
CHRS IN PROCEDURE COMPREC
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1164 
      8466**DCL      8474>>IF       8474>>IF       8475>>IF       8475>>IF
CODE02.GDA
      6514**DCL      8884<<ASSIGN
CODE02.SLIDE
      6513**DCL      8885<<ASSIGN
CODE02.TDA
      6513**DCL      8883<<ASSIGN
CODE03.LDA
      6520**DCL      8891<<ASSIGN
CODE03.NRECS
      6519**DCL      8890<<ASSIGN
CODE03.RCSZ
      6519**DCL      8889<<ASSIGN
COMFLG
      6937**DCL      7260<<ASSIGN   7271<<ASSIGN   7381<<ASSIGN   8283>>DOCASE   8707<<ASSIGN   8955<<ASSIGN
      9049<<ASSIGN   9135<<ASSIGN   9353<<ASSIGN  11090<<ASSIGN  11464<<ASSIGN  11820<<ASSIGN  12044<<ASSIGN
     12209<<ASSIGN  13843<<ASSIGN
COMKEY
      8215**PROC     7317--CALL     8098--CALL     8125--CALL     8135--CALL     9067--CALL     9083--CALL
      9141--CALL    13260--CALL
COMMON IN PROCEDURE NXTKEY
     11132**LABEL   11129--GOTO
COMPFIELD
      8331**PROC     8183--CALL     8434--CALL     8488--CALL
COMPKEY
      8410**PROC     8285--CALL
COMPREC
      8464**PROC     8287--CALL
COMPSBIN
      8507**PROC     8381--CALL
CRECX
      6904**DCL      7146>>ASSIGN   7310>>DOUNTIL  7311<<ASSIGN   7312>>IF       7313>>ASSIGN   7315>>ASSIGN
      7324>>ASSIGN   7327>>ASSIGN   7333<<ASSIGN   7969>>IF       7972>>IF       8002<<ASSIGN   8002>>ASSIGN
      8003>>ASSIGN   8008<<ASSIGN   8009>>ASSIGN   8019<<ASSIGN   8020>>ASSIGN   8539>>DOWHILE  8541<<ASSIGN
      8542>>ASSIGN   8548>>IF       8550<<ASSIGN   8554<<ASSIGN   8557<<ASSIGN   8557>>ASSIGN   8558>>ASSIGN
      8564>>ASSIGN   8592>>IF       8594<<ASSIGN   8595>>ASSIGN   8628<>CALL     8660<<ASSIGN   9511>>ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1165 
      9530<<ASSIGN   9536<<ASSIGN   9537>>ASSIGN   9555<<ASSIGN   9556>>ASSIGN   9624<<ASSIGN   9626<<ASSIGN
      9627>>ASSIGN   9692>>ASSIGN   9714<<ASSIGN   9716>>ASSIGN  10021>>IF      10022>>ASSIGN  10024>>ASSIGN
     10025>>IF      10034<<ASSIGN  10252<<ASSIGN  10309<<ASSIGN  10312>>IF      10313>>ASSIGN  10315>>ASSIGN
     10399<<ASSIGN  10535>>ASSIGN  10537>>ASSIGN  11030<<ASSIGN  11138>>IF      11145<<ASSIGN  11151>>IF
     11158<<ASSIGN  11161<<ASSIGN  11161>>ASSIGN  11164>>ASSIGN  11217>>IF      11313<<ASSIGN  11319>>IF
     11321>>IF      11322>>ASSIGN  11324>>ASSIGN  11596>>IF      11598>>ASSIGN  11599>>IF      11609>>IF
     11610>>ASSIGN  11612>>ASSIGN  11617>>IF      11633<<ASSIGN  11634>>ASSIGN  11639<<ASSIGN  11639>>ASSIGN
     11640>>ASSIGN  12277>>IF      12278>>ASSIGN  12280>>ASSIGN  12282>>IF      12284>>IF      12285>>ASSIGN
     12287>>ASSIGN  12297>>DOINDEX 12398>>DOINDEX 12444>>IF      12447>>IF      12448>>ASSIGN  12450>>ASSIGN
     12454>>IF      12456>>IF      12457>>ASSIGN  12459>>ASSIGN  12480>>IF      12484>>IF      12487>>IF
     12488>>ASSIGN  12490>>ASSIGN  12508>>IF      12510>>IF      12511>>ASSIGN  12513>>ASSIGN  12571<<ASSIGN
     12739>>IF      12740>>ASSIGN  12742>>ASSIGN  12769<<ASSIGN  12842<<ASSIGN  13032<<ASSIGN  13058>>IF
     13061<<ASSIGN  13062>>ASSIGN  13071>>IF      13131>>ASSIGN  13133>>ASSIGN  13155<>CALL    13167>>IF
     13203>>ASSIGN  13204>>IF      13206>>ASSIGN  13207>>ASSIGN  13254<<ASSIGN  13255>>IF      13256>>ASSIGN
     13258>>ASSIGN  13264>>ASSIGN  13268>>ASSIGN  13271>>ASSIGN  13275>>IF      13279<<ASSIGN  13280>>IF
     13281>>ASSIGN  13283>>ASSIGN  13421<<ASSIGN  13423<<ASSIGN  13424>>ASSIGN  13850<<ASSIGN  13851>>ASSIGN
     13967>>IF      13969>>ASSIGN  13980>>ASSIGN  14008>>IF      14190>>IF      14193>>IF      14194>>ASSIGN
     14196>>ASSIGN
CTEMP IN PROCEDURE COMPSBIN
      8508**DCL      8514>>ASSIGN   8515>>ASSIGN
CTEMP_FIELD IN PROCEDURE COMPSBIN
      8510**DCL      8514<<ASSIGN
CTEMP_FIELDIN IN PROCEDURE COMPSBIN
      8512**DCL      8515<<ASSIGN
CURDA IN PROCEDURE DATAERROR
      8621**DCL      8627<<ASSIGN   8628<>CALL
CURKEY
      8537**PROC     7169--CALL     7285--CALL     7981--CALL     8583--CALL     9276--CALL    11590--CALL
     11674--CALL    12471--CALL    12501--CALL    12624--CALL    13074--CALL    13629--CALL    14189--CALL
CURREC
      8579**PROC     9228--CALL    10648--CALL    11837--CALL    14059--CALL
CUR_REC IN PROCEDURE CURREC
      8591**LABEL    8597--EXIT
DA
      6908**DCL      7040<<ASSIGN   7041>>IF       7046>>IF       7048<>CALL     7065>>ASSIGN   7133<>CALL
      7138>>ASSIGN   7143>>ASSIGN   7148>>ASSIGN   7448<>CALL     7450<>CALL     7475>>ASSIGN   7486>>ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1166 
      7488>>ASSIGN   7490>>ASSIGN   7507>>ASSIGN   7512>>ASSIGN   7526>>ASSIGN   7611<<ASSIGN   7614>>IF
      7615<>CALL     7683<<ASSIGN   7684>>IF       7879<<ASSIGN   7882>>IF       7883<>CALL     8623<>CALL
      8690<<ASSIGN   8691<>CALL     8717<<ASSIGN   8718<>CALL     8944<<ASSIGN   8947>>IF       8948<>CALL
      8970<<ASSIGN   8973>>IF       8974<>CALL     9007<<ASSIGN   9008<>CALL     9318<<ASSIGN   9319>>IF
      9330>>IF       9330>>IF       9330>>IF       9333<>CALL     9448<<ASSIGN   9449<>CALL     9579<<ASSIGN
      9580>>IF       9605<<ASSIGN   9608<>CALL     9835<<ASSIGN   9836>>IF       9839<>CALL     9882<<ASSIGN
      9886>>IF       9898>>IF       9900<>CALL    10091>>ASSIGN  10092>>ASSIGN  10093>>ASSIGN  10117<>CALL
     10119>>ASSIGN  10125>>ASSIGN  10166>>ASSIGN  10167>>ASSIGN  10168>>ASSIGN  10238<>CALL    10239>>ASSIGN
     10242>>ASSIGN  10243>>ASSIGN  10261>>ASSIGN  10265>>ASSIGN  10299<<ASSIGN  10302>>IF      10303<>CALL
     10566<>CALL    10915<<ASSIGN  10918<>CALL    11108<<ASSIGN  11109<>CALL    11696<<ASSIGN  11699<<ASSIGN
     11701<<ASSIGN  11704<>CALL    11730<<ASSIGN  11733<<ASSIGN  11735<<ASSIGN  11738>>DOUNTIL 11741>>IF
     11742<>CALL    11747<<ASSIGN  11749>>IF      11753>>ASSIGN  11755>>ASSIGN  11758>>ASSIGN  11842<<ASSIGN
     11848>>IF      11854>>IF      11858<>CALL    11933<>CALL    12214<<ASSIGN  12335<<ASSIGN  12337<>CALL
     12341<<ASSIGN  12343<>CALL    12562<<ASSIGN  12566<>CALL    13023<<ASSIGN  13027<>CALL    13155<>CALL
     13290<<ASSIGN  13343<<ASSIGN  13346<<ASSIGN  13348<<ASSIGN  13359<<ASSIGN  13384<<ASSIGN  13438<<ASSIGN
     13439<>CALL    13454<<ASSIGN  13455<>CALL    13481<<ASSIGN  13486<>CALL    13494<>CALL    13506<<ASSIGN
     13510<<ASSIGN  13514<<ASSIGN  13518>>ASSIGN  13520<>CALL    13661<<ASSIGN  13662>>IF      13668>>IF
     13669<>CALL
DA IN PROCEDURE ALTCHK
      7198**DCL      7220<<ASSIGN   7224>>IF       7225<>CALL
DATAERR IN PROCEDURE ALTCHK
      7288**LABEL    7225--CALLALT
DATAERR IN PROCEDURE BLDREC
      7670**LABEL    7615--CALLALT
DATAERR IN PROCEDURE CALCSEG
      7908**LABEL    7883--CALLALT
DATAERR IN PROCEDURE DELETE
      9008**LABEL    8948--CALLALT  8974--CALLALT
DATAERR IN PROCEDURE GETREC
      9931**LABEL    9900--CALLALT
DATAERR IN PROCEDURE RDCONT
     11898**LABEL   11858--CALLALT
DATAERR IN PROCEDURE WRCONT
     13717**LABEL   13669--CALLALT
DATAERR1 IN PROCEDURE DATAERROR
      8623**LABEL    8623--CALLALT
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1167 
DATAERROR
      8619**PROC     7288--CALL     7670--CALL     7913--CALL     9011--CALL     9931--CALL    10320--CALL
     11898--CALL    13717--CALL
DBUF$
      6922**DCL      7045<<ASSIGN   7046>>IF       7048<>CALL     7050>>IF       7053>>ASSIGN   7053>>ASSIGN
      7054>>ASSIGN   7059>>ASSIGN   7060>>ASSIGN   7060>>ASSIGN   7061>>ASSIGN   7061>>ASSIGN   7135<>CALL
      7136>>ASSIGN   7137>>ASSIGN   7138>>ASSIGN   7139>>ASSIGN   7140>>ASSIGN   7141>>ASSIGN   7142>>ASSIGN
      7223<<ASSIGN   7224>>IF       7225<>CALL     7226>>ASSIGN   7613<<ASSIGN   7614>>IF       7615<>CALL
      7617>>ASSIGN   7874>>IF       7881<<ASSIGN   7882>>IF       7883<>CALL     7884>>ASSIGN   7887>>ASSIGN
      7898>>ASSIGN   8946<<ASSIGN   8947>>IF       8948<>CALL     8949>>ASSIGN   8972<<ASSIGN   8973>>IF
      8974<>CALL     8975>>ASSIGN   9333<>CALL     9335>>IF       9352>>ASSIGN   9897<<ASSIGN   9898>>IF
      9900<>CALL     9904>>ASSIGN  10223<>CALL    10224>>ASSIGN  10225>>ASSIGN  10226>>ASSIGN  10230>>ASSIGN
     10235>>ASSIGN  10236>>ASSIGN  10243>>ASSIGN  10301<<ASSIGN  10302>>IF      10303<>CALL    10304>>ASSIGN
     10385<>CALL    10387>>ASSIGN  10392>>ASSIGN  11036<<ASSIGN  11853<<ASSIGN  11854>>IF      11858<>CALL
     11863>>ASSIGN  13667<<ASSIGN  13668>>IF      13669<>CALL    13676>>ASSIGN  13679>>IF      13682>>IF
     13683>>ASSIGN  13685>>ASSIGN  13685>>ASSIGN  13686>>ASSIGN  13686>>ASSIGN  13753<<ASSIGN
DELALL
      8645**PROC     9212--CALL
DELALL_FAST
      6949**DCL      8680<<ASSIGN   8801>>IF       8810>>IF       8836>>IF       8855>>IF       9210<<ASSIGN
DELALT
      8703**PROC     7270--CALL     8992--CALL
DELDUPS
      8731**PROC     9105--CALL     9246--CALL
DELEND
      8793**PROC     9220--CALL     9249--CALL     9252--CALL
DELEOF IN PROCEDURE DELRANGE
      9166**LABEL    9134--CALLALT
DELETE
      8937**PROC     8668--CALL     8734--CALL     9107--CALL     9153--CALL     9156--CALL     9248--CALL
DELKEY
      9039**PROC     9217--CALL
DELRANGE
      9129**PROC     9070--CALL     9110--CALL
DELREC
      9207**PROC     7000--CALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1168 
DISP IN PROCEDURE REMKEY
     12268**DCL     12285<<ASSIGN  12287<<ASSIGN  12289>>ASSIGN  12291<>CALL    12294<<ASSIGN  12299>>ASSIGN
     12321>>ASSIGN  12322>>ASSIGN
DONE IN PROCEDURE DELDUPS
      8747**LABEL    8735--CALLALT
DONE IN PROCEDURE KEYEXP
     10272**LABEL   10254--CALLALT
DONE IN PROCEDURE KEYSQZ
     10413**LABEL   10402--CALLALT
DONE IN PROCEDURE MOVKEYS
     10905**DCL     10927<<ASSIGN  10928>>DOWHILE 10934<<ASSIGN  10939>>IF
ENDERR IN PROCEDURE DELREC
      9253**LABEL    9212--CALLALT  9220--CALLALT  9224--CALLALT  9249--CALLALT
ENDGRAN IN PROCEDURE NXTSEG
     11305**DCL     11308<<ASSIGN  11311>>DOWHILE 11316<<ASSIGN  11327>>ASSIGN
ENUF
      6930**DCL      8067<<ASSIGN   8069<<ASSIGN   9989>>IF      10008>>IF      10539<<ASSIGN  10541>>DOWHILE
     10551<<ASSIGN  10554<<ASSIGN  10574>>IF
EOF IN PROCEDURE CALC_INSRT
      8015**LABEL    8001--CALLALT
EOF IN PROCEDURE DELALL
      8683**LABEL    8666--CALLALT
EOF IN PROCEDURE DELEND
      8830**LABEL    8826--CALLALT
EOF IN PROCEDURE FINDKEY
      9553**LABEL    9464--CALLALT  9481--CALLALT  9497--CALLALT  9532--CALLALT
EOF IN PROCEDURE MOVEN
     10679**LABEL   10632--CALLALT 10636--CALLALT
EOP
      6920**DCL      9226>>DOCASE  10442<<ASSIGN  11830>>IF      12836<<ASSIGN  12911<<ASSIGN  13621>>IF
ERR
      7019**LABEL    6981--CALLALT  6985--CALLALT  6988--CALLALT  6991--CALLALT  6994--CALLALT  6997--CALLALT
      7000--CALLALT  7003--CALLALT  7014--CALLALT
ERR IN PROCEDURE ADDDATA
      7077**LABEL    7042--CALLALT  7051--CALLALT  7056--CALLALT  7073--CALLALT
ERR IN PROCEDURE ADDKEY
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1169 
      7098**LABEL    7096--CALLALT
ERR IN PROCEDURE ADDSEG
      7115**LABEL    7113--CALLALT
ERR IN PROCEDURE ALLOCATE
      7173**LABEL    7169--CALLALT
ERR IN PROCEDURE ALTCHK
      7289**LABEL    7258--CALLALT  7270--CALLALT  7280--CALLALT  7283--CALLALT  7284--CALLALT  7285--CALLALT
ERR IN PROCEDURE BINSEARCH
      7338**LABEL    7317--CALLALT
ERR IN PROCEDURE BLDALTSEG
      7416**LABEL    7376--CALLALT  7384--CALLALT  7390--CALLALT  7395--CALLALT  7401--CALLALT  7410--CALLALT
      7411--CALLALT
ERR IN PROCEDURE BLDFLINK
      7538**LABEL    7448--CALLALT  7450--CALLALT
ERR IN PROCEDURE BLDREC
      7672**LABEL    7601--CALLALT  7607--CALLALT  7625--CALLALT  7638--CALLALT  7644--CALLALT  7659--CALLALT
ERR IN PROCEDURE BLINK
      7693**LABEL    7690--CALLALT
ERR IN PROCEDURE CALCSEG
      7914**LABEL    7897--CALLALT
ERR IN PROCEDURE CALC_INSRT
      8035**LABEL    7981--CALLALT  7983--CALLALT  7994--GOTO     8006--CALLALT
ERR IN PROCEDURE CHECKGRAN
      8142**LABEL    8125--CALLALT  8135--CALLALT
ERR IN PROCEDURE CHECK_LAST
      8101**LABEL    8085--CALLALT  8098--CALLALT
ERR IN PROCEDURE CURKEY
      8565**LABEL    8540--CALLALT
ERR IN PROCEDURE CURREC
      8610**LABEL    8583--CALLALT  8600--CALLALT  8606--CALLALT
ERR IN PROCEDURE DELALL
      8692**LABEL    8656--CALLALT  8668--CALLALT  8676--GOTO
ERR IN PROCEDURE DELALT
      8716**LABEL    8705--CALLALT  8714--CALLALT
ERR IN PROCEDURE DELDUPS
      8754**LABEL    8734--CALLALT
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1170 
ERR IN PROCEDURE DELEND
      8917**LABEL    8815--CALLALT  8817--CALLALT  8843--CALLALT  8900--CALLALT  8902--CALLALT
ERR IN PROCEDURE DELETE
      9012**LABEL    8954--CALLALT  9002--CALLALT  9003--CALLALT  9009--GOTO
ERR IN PROCEDURE DELKEY
      9115**LABEL    9046--CALLALT  9048--CALLALT  9067--CALLALT  9070--CALLALT  9083--CALLALT  9092--CALLALT
      9098--CALLALT  9105--CALLALT  9107--CALLALT  9110--CALLALT
ERR IN PROCEDURE DELRANGE
      9172**LABEL    9141--CALLALT  9153--CALLALT  9156--CALLALT  9166--GOTO
ERR IN PROCEDURE DELREC
      9252**LABEL    9216--CALLALT  9217--CALLALT  9228--CALLALT  9231--CALLALT  9246--CALLALT  9248--CALLALT
ERR IN PROCEDURE FINDID
      9278**LABEL    9276--CALLALT
ERR IN PROCEDURE FINDIDO
      9369**LABEL    9303--CALLALT  9313--CALLALT
ERR IN PROCEDURE FINDKEY
      9560**LABEL    9428--CALLALT  9437--CALLALT  9441--CALLALT  9449--CALLALT  9453--CALLALT  9504--CALLALT
      9508--CALLALT
ERR IN PROCEDURE FLINK
      9589**LABEL    9586--CALLALT
ERR IN PROCEDURE GETBLINK
      9630**LABEL    9608--CALLALT
ERR IN PROCEDURE GETFLINK
      9845**LABEL    9839--CALLALT  9842--CALLALT
ERR IN PROCEDURE GETIDRW
      9773**LABEL    9757--CALLALT  9763--GOTO
ERR IN PROCEDURE GETKEY
      9823**LABEL    9800--CALLALT
ERR IN PROCEDURE GETREC
      9932**LABEL    9909--CALLALT  9914--CALLALT
ERR IN PROCEDURE GETSPACE
     10049**LABEL    9986--CALLALT  9994--CALLALT 10000--CALLALT 10010--CALLALT 10016--CALLALT 10017--CALLALT
     10029--CALLALT 10032--CALLALT 10036--CALLALT 10047--CALLALT
ERR IN PROCEDURE INIT_AKEY
     10097**LABEL   10090--CALLALT
ERR IN PROCEDURE INIT_GRAN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1171 
     10133**LABEL   10117--CALLALT
ERR IN PROCEDURE INIT_IRKEY
     10172**LABEL   10165--CALLALT
ERR IN PROCEDURE KEYEXP
     10279**LABEL   10221--CALLALT 10268--CALLALT
ERR IN PROCEDURE KEYPTR
     10320**LABEL   10303--CALLALT
ERR IN PROCEDURE KINIT
     10489**LABEL   10465--CALLALT
ERR IN PROCEDURE MAKE_SPACE
     10593**LABEL   10578--CALLALT 10582--CALLALT 10583--CALLALT 10589--CALLALT
ERR IN PROCEDURE MOVEN
     10709**LABEL   10626--CALLALT 10706--CALLALT
ERR IN PROCEDURE MOVETOB3
     10877**LABEL   10805--CALLALT
ERR IN PROCEDURE MOVKEYS
     10970**LABEL   10912--CALLALT 10918--CALLALT 10921--CALLALT 10948--CALLALT
ERR IN PROCEDURE NEWKEY
     11042**LABEL   11009--CALLALT 11017--GOTO    11027--CALLALT 11028--CALLALT 11038--CALLALT 11039--CALLALT
ERR IN PROCEDURE NEWSEG
     11110**LABEL   11067--CALLALT 11068--CALLALT 11087--CALLALT 11094--CALLALT 11102--CALLALT 11103--CALLALT
ERR IN PROCEDURE NXTKEY
     11167**LABEL   11143--CALLALT 11156--CALLALT
ERR IN PROCEDURE NXTREC
     11264**LABEL   11212--CALLALT 11221--CALLALT 11240--CALLALT 11259--CALLALT
ERR IN PROCEDURE NXTRECND
     11289**LABEL   11280--CALLALT 11285--CALLALT
ERR IN PROCEDURE NXTSEG
     11340**LABEL   11312--CALLALT
ERR IN PROCEDURE PFIL
     11365**LABEL   11360--CALLALT 11362--CALLALT
ERR IN PROCEDURE PREC
     11543**LABEL   11462--CALLALT 11463--CALLALT 11484--CALLALT 11504--CALLALT 11527--CALLALT
ERR IN PROCEDURE PREVREC
     11652**LABEL   11590--CALLALT
ERR IN PROCEDURE PREVRECND
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1172 
     11681**LABEL   11674--CALLALT 11678--CALLALT
ERR IN PROCEDURE PTOBOF
     11711**LABEL   11704--CALLALT
ERR IN PROCEDURE PTOEOF
     11764**LABEL   11742--CALLALT
ERR IN PROCEDURE RDCONT
     11897**LABEL   11817--CALLALT 11819--CALLALT 11836--CALLALT 11837--CALLALT 11883--CALLALT 11909--CALLALT
ERR IN PROCEDURE RDGRAN
     11940**LABEL   11933--CALLALT
ERR IN PROCEDURE READ
     12014**LABEL   11976--CALLALT 11994--CALLALT 12005--CALLALT 12008--CALLALT
ERR IN PROCEDURE READKEY
     12077**LABEL   12040--CALLALT 12042--CALLALT 12066--CALLALT 12069--CALLALT 12074--CALLALT 12086--CALLALT
     12090--CALLALT
ERR IN PROCEDURE READNOKEY
     12146**LABEL   12123--CALLALT 12126--CALLALT 12130--CALLALT 12132--CALLALT 12135--CALLALT 12138--CALLALT
     12143--CALLALT
ERR IN PROCEDURE REBLD_ALT
     12244**LABEL   12174--CALLALT 12175--CALLALT 12183--CALLALT 12188--CALLALT 12205--CALLALT 12215--CALLALT
     12217--CALLALT 12221--GOTO    12223--CALLALT 12230--CALLALT 12238--CALLALT 12239--CALLALT
ERR IN PROCEDURE REMKEY
     12373**LABEL   12337--CALLALT 12343--CALLALT 12368--CALLALT
ERR IN PROCEDURE REMSEG
     12550**LABEL   12453--CALLALT 12466--CALLALT 12470--CALLALT 12471--CALLALT 12482--CALLALT 12501--CALLALT
     12516--CALLALT 12527--CALLALT
ERR IN PROCEDURE RESTOREPOS
     12577**LABEL   12566--CALLALT
ERR IN PROCEDURE REUSE_ALT
     12627**LABEL   12620--CALLALT 12622--CALLALT 12623--CALLALT 12624--CALLALT
ERR IN PROCEDURE SETINDEX
     12680**LABEL   12675--CALLALT 12677--CALLALT
ERR IN PROCEDURE SHAREPOS
     13086**LABEL   13027--CALLALT 13068--CALLALT 13074--CALLALT 13077--CALLALT
ERR IN PROCEDURE SRCHGRAN
     13292**LABEL   13260--CALLALT
ERR IN PROCEDURE SRCHLVL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1173 
     13393**LABEL   13329--CALLALT 13338--CALLALT 13372--CALLALT
ERR IN PROCEDURE ULBLINK
     13442**LABEL   13439--CALLALT
ERR IN PROCEDURE ULFLINK
     13457**LABEL   13455--CALLALT
ERR IN PROCEDURE ULSEARCH
     13498**LABEL   13486--CALLALT 13490--CALLALT 13494--CALLALT
ERR IN PROCEDURE UPALTSEGS
     13577**LABEL   13557--CALLALT 13558--CALLALT 13561--CALLALT 13572--CALLALT 13573--CALLALT
ERR IN PROCEDURE WRCONT
     13719**LABEL   13628--CALLALT 13629--CALLALT 13650--CALLALT 13659--CALLALT 13663--CALLALT 13700--CALLALT
     13712--CALLALT
ERR IN PROCEDURE WRITE
     13818**LABEL   13756--CALLALT 13796--CALLALT 13798--CALLALT 13809--CALLALT 13812--CALLALT
ERR IN PROCEDURE WRKEY
     13924**LABEL   13842--CALLALT 13847--CALLALT 13887--CALLALT 13889--CALLALT 13922--CALLALT
ERR IN PROCEDURE WRNEWKEY
     14024**LABEL   14009--CALLALT 14014--CALLALT 14017--CALLALT 14022--CALLALT
ERR IN PROCEDURE WRNOKEY
     14074**LABEL   14055--CALLALT 14059--CALLALT 14062--CALLALT 14070--CALLALT 14072--CALLALT
ERR1 IN PROCEDURE CURKEY
      8564**LABEL    8552--CALLALT
ERR1 IN PROCEDURE PREC
     11556**LABEL   11423--CALLALT 11424--CALLALT 11425--CALLALT 11453--GOTO    11496--GOTO    11509--CALLALT
     11533--CALLALT
ERR1 IN PROCEDURE ULSEARCH
     13522**LABEL   13520--CALLALT
ERR2 IN PROCEDURE GETIDRW
      9775**LABEL    9758--CALLALT
ERRAK
     14151**LABEL   14148--CALLALT
ERRALLIDS
      6825**DCL      9721>>ASSIGN   9773>>ASSIGN
ERRAS
     14170**LABEL   14167--CALLALT
ERRBADID
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1174 
      6841**DCL      9359>>ASSIGN
ERRBADKEY
      6761**DCL     12705>>ASSIGN
ERRBADKEY2
      6757**DCL      9114>>ASSIGN   9179>>ASSIGN
ERRBOF
      6785**DCL      7686>>ASSIGN
ERRC
     14199**LABEL   14189--CALLALT
ERRDMY
      6845**DCL      8306>>ASSIGN  13153>>ASSIGN
ERRDUPKEY
      6809**DCL      7262>>ASSIGN  11012>>ASSIGN
ERREOF
      6789**DCL      9582>>ASSIGN
ERRF
     14220**LABEL   14217--CALLALT
ERRFIT
      6769**DCL      8907>>ASSIGN
ERRFREC
      6741**DCL     10560>>ASSIGN
ERRIDONLY
      6837**DCL     11443>>ASSIGN  12001>>ASSIGN
ERRIDSMALL
      6829**DCL     11434>>ASSIGN  11965>>ASSIGN
ERRIDTRAP
      6821**DCL      9668>>ASSIGN   9775>>ASSIGN
ERRINDBC
      6765**DCL     13782>>ASSIGN
ERRINDSEED
      6781**DCL     11982>>ASSIGN  13791>>ASSIGN
ERRK
     14240**LABEL   14237--CALLALT
ERRKEYCHNG
      6805**DCL     11199>>ASSIGN  11252>>ASSIGN
ERRKEYORDER
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1175 
      6773**DCL     13862>>ASSIGN  13918>>ASSIGN
ERRKEYTRAP
      6817**DCL     13806>>ASSIGN
ERRLD
      6749**DCL      9928>>ASSIGN  11901>>ASSIGN
ERRM
     14266**LABEL   14264--CALLALT
ERRN
     14282**LABEL   14279--CALLALT
ERRNEWREC
      6745**DCL     13907>>ASSIGN
ERRNM
     14322**LABEL   14319--CALLALT
ERRNO
     14304**LABEL   14301--CALLALT
ERRNOALT
      6813**DCL     12818>>ASSIGN  12898>>ASSIGN
ERRNOALTKEY
      6833**DCL     13046>>ASSIGN
ERRNOCONT
      6777**DCL     11803>>ASSIGN  11832>>ASSIGN  13624>>ASSIGN  13764>>ASSIGN
ERRNOKEY
      6753**DCL      9075>>ASSIGN   9277>>ASSIGN   9368>>ASSIGN   9519>>ASSIGN   9541>>ASSIGN   9557>>ASSIGN
     11518>>ASSIGN  11555>>ASSIGN  11911>>ASSIGN  11917>>ASSIGN  12095>>ASSIGN  12100>>ASSIGN  13637>>ASSIGN
ERRNOREC
      6801**DCL     10739>>ASSIGN
ERRNOSUCHINDX
      6797**DCL     12807>>ASSIGN  12890>>ASSIGN
ERRNR
     14341**LABEL   14339--CALLALT
ERRNS
     14356**LABEL   14353--CALLALT
ERROLDREC
      6733**DCL     13878>>ASSIGN  14051>>ASSIGN
ERRPMMEINT
      6793**DCL      8673>>ASSIGN   8740>>ASSIGN   9161>>ASSIGN  10710>>ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1176 
ERRR
     14370**LABEL   14368--CALLALT
ERRREWRITE
      6729**DCL     13868>>ASSIGN  14045>>ASSIGN
ERRTMP IN PROCEDURE MOVEN
     10622**DCL     10697<<ASSIGN  10701>>ASSIGN
ERRWRITNEW
      6737**DCL     13897>>ASSIGN
ERRWRWOKEY
      6725**DCL      9234>>ASSIGN  14065>>ASSIGN
ERR_INT IN PROCEDURE MOVEN
     10710**LABEL   10642--GOTO    10672--GOTO
EXTNT IN PROCEDURE REMKEY
     12273**DCL     12368<>CALL
EXTNT.DA IN PROCEDURE REMKEY
     12275**DCL     12333<<ASSIGN
EXTNT.SIZE IN PROCEDURE REMKEY
     12274**DCL     12332<<ASSIGN
F$ IN PROCEDURE BUILD_FIELD
      7705**DCL      7716<<ASSIGN   7717>>ASSIGN
F$ IN PROCEDURE BUILD_NIBFIELD
      7803**DCL      7813<<ASSIGN   7819>>ASSIGN
F$CFU$
      1147**DCL     12361>>ASSIGN
F$DCB.ACS
      6366**DCL     10370>>IF      13845>>IF      13860>>IF      13915>>IF
F$DCB.ACTPOS
      6374**DCL      6374--REDEF
F$DCB.ALTKEYX
      6372**DCL     10370>>IF      10446>>IF      12797>>ASSIGN  12880>>ASSIGN
F$DCB.ARS
      6349**DCL      6349--REDEF    8801>>IF       8857<<ASSIGN   8964<<ASSIGN   8964>>ASSIGN   9209<<ASSIGN
     10634<<ASSIGN  10634>>ASSIGN  10654<<ASSIGN  10654>>ASSIGN  10660<<ASSIGN  10660>>ASSIGN  10666<<ASSIGN
     10666>>ASSIGN  11418<<ASSIGN  11872<<ASSIGN  11872>>ASSIGN
F$DCB.ATTR
      6367**DCL      6368--REDEF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1177 
F$DCB.BFR
      6393**DCL      7470<<ASSIGN   7470>>ASSIGN   7472<<ASSIGN   9611<<ASSIGN   9611>>ASSIGN   9613<<ASSIGN
      9613>>ASSIGN   9615<<ASSIGN  12357<<ASSIGN  12357>>ASSIGN  12359<<ASSIGN  13409>>ASSIGN  13411<<ASSIGN
     13411>>ASSIGN  13413<<ASSIGN
F$DCB.BFR.BUFUP
      6393**DCL      7067<<ASSIGN   7144<<ASSIGN   7399<<ASSIGN   7477<<ASSIGN   7523<<ASSIGN   7527<<ASSIGN
      7592<<ASSIGN   7628<<ASSIGN   8853<<ASSIGN   8961<<ASSIGN  10120<<ASSIGN  10245<<ASSIGN  10272<<ASSIGN
     10413<<ASSIGN  10873<<ASSIGN  10874<<ASSIGN  10968<<ASSIGN  12324<<ASSIGN  12346<<ASSIGN  12349<<ASSIGN
     12412<<ASSIGN  12475<<ASSIGN  13186<<ASSIGN  13565<<ASSIGN  13703<<ASSIGN  13704<<ASSIGN  14012<<ASSIGN
F$DCB.BFR.BUFX
      6394**DCL      7045>>ASSIGN   7223>>ASSIGN   7613>>ASSIGN   7881>>ASSIGN   8946>>ASSIGN   8972>>ASSIGN
      9422>>IF       9424>>ASSIGN   9444>>ASSIGN   9897>>ASSIGN  10301>>ASSIGN  10310>>ASSIGN  11740>>ASSIGN
     11853>>ASSIGN  12564>>ASSIGN  12765>>ASSIGN  13025>>ASSIGN  13224>>IF      13226>>IF      13484>>ASSIGN
     13667>>ASSIGN
F$DCB.BFR.DA
      6394**DCL      7046>>IF       7143<<ASSIGN   7224>>IF       7476>>ASSIGN   7507<<ASSIGN   7515>>ASSIGN
      7614>>IF       7874>>IF       7882>>IF       8304>>ASSIGN   8627>>ASSIGN   8690>>ASSIGN   8717>>ASSIGN
      8839>>IF       8947>>IF       8973>>IF       9007>>ASSIGN   9448>>ASSIGN   9606>>ASSIGN   9691>>ASSIGN
      9709>>IF       9712<<ASSIGN   9838>>ASSIGN   9898>>IF      10119<<ASSIGN  10242<<ASSIGN  10302>>IF
     10916>>ASSIGN  11108>>ASSIGN  11741>>IF      11746>>ASSIGN  11854>>IF      11931>>ASSIGN  12214>>ASSIGN
     12333>>ASSIGN  12336>>ASSIGN  12342>>ASSIGN  12362>>ASSIGN  12562>>ASSIGN  12832>>ASSIGN  12845<<ASSIGN
     12852<<ASSIGN  12907>>ASSIGN  12919<<ASSIGN  12925<<ASSIGN  13023>>ASSIGN  13437>>ASSIGN  13453>>ASSIGN
     13518<<ASSIGN  13668>>IF
F$DCB.BFR.SCRUB
      6393**DCL      7145<<ASSIGN   7524<<ASSIGN   8854<<ASSIGN  10121<<ASSIGN  10246<<ASSIGN  12325<<ASSIGN
     12413<<ASSIGN
F$DCB.BFR1
      6394**DCL      7471<<ASSIGN   7471>>ASSIGN   7473<<ASSIGN   9612<<ASSIGN   9612>>ASSIGN   9614<<ASSIGN
      9614>>ASSIGN   9616<<ASSIGN  12358<<ASSIGN  12358>>ASSIGN  12360<<ASSIGN  13410>>ASSIGN  13412<<ASSIGN
     13412>>ASSIGN  13414<<ASSIGN
F$DCB.BORROW
      6382**DCL      6382--REDEF    6382--REDEF    6382--REDEF
F$DCB.CFU$
      6383**DCL      9330>>IF      10440>>ASSIGN  12327>>IF      12361>>ASSIGN  12764>>ASSIGN  14236>>ASSIGN
F$DCB.COMP
      6362**DCL      7902>>IF      11830>>IF      13621>>IF      13762>>IF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1178 
F$DCB.CONT
      6381**DCL      7008<<ASSIGN  13755>>IF
F$DCB.CRECX
      6385**DCL      7146<<ASSIGN   8003<<ASSIGN   8009<<ASSIGN   8020<<ASSIGN   8542<<ASSIGN   8558<<ASSIGN
      8564<<ASSIGN   8595<<ASSIGN   8818<<ASSIGN   8864<<ASSIGN   9511<<ASSIGN   9537<<ASSIGN   9556<<ASSIGN
      9627<<ASSIGN   9716<<ASSIGN   9802>>IF       9805>>IF      10035<<ASSIGN  10298>>IF      10309>>ASSIGN
     11030>>ASSIGN  11164<<ASSIGN  11314<<ASSIGN  11634<<ASSIGN  11640<<ASSIGN  11705<<ASSIGN  11743<<ASSIGN
     12364<<ASSIGN  12366<<ASSIGN  12571>>ASSIGN  12769>>ASSIGN  12830>>ASSIGN  12838<<ASSIGN  12842>>ASSIGN
     12905>>ASSIGN  12913<<ASSIGN  13032>>ASSIGN  13062<<ASSIGN  13424<<ASSIGN  13851<<ASSIGN
F$DCB.DCBNAME.L
      6396**DCL      6396--IMP-SIZ
F$DCB.DVBYTE
      6352**DCL      9907<<ASSIGN
F$DCB.EOMCHAR
      6353**DCL      6353--REDEF
F$DCB.EOP
      6378**DCL      7010<<ASSIGN   9929<<ASSIGN  10442>>ASSIGN  11902<<ASSIGN  14057>>DOCASE
F$DCB.FFLG.UPD
      6354**DCL     13866>>IF      14043>>IF
F$DCB.FFLG.WNEW
      6354**DCL     13895>>IF
F$DCB.FIELDX
      6373**DCL     10479>>ASSIGN
F$DCB.FLDID
      6377**DCL      6377--REDEF
F$DCB.FORM$
      6371**DCL      6371--REDEF
F$DCB.FSECT
      6387**DCL      6387--REDEF
F$DCB.FSN
      6364**DCL      6364--REDEF    6364--REDEF    6365--REDEF
F$DCB.FUN
      6363**DCL     13845>>IF      13860>>IF      13915>>IF
F$DCB.GDISP
      6388**DCL     11846>>IF      11864>>ASSIGN  11874<<ASSIGN  11874>>ASSIGN  11979<<ASSIGN  13645>>IF
     13677>>ASSIGN  13706<<ASSIGN  13706>>ASSIGN  13759<<ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1179 
F$DCB.GTYP
      6378**DCL      8880<<ASSIGN   8909<<ASSIGN   9435>>IF       9978>>IF      10219<<ASSIGN  10384<<ASSIGN
     13482<<ASSIGN
F$DCB.HASH
      6386**DCL      7137>>ASSIGN  10124>>ASSIGN
F$DCB.HEADER$
      6370**DCL      6370--REDEF
F$DCB.ID
      6392**DCL      7581--ASSIGN  11708<<ASSIGN  12661<<ASSIGN  13065>>IF      13631--ASSIGN  14121<<ASSIGN
F$DCB.ID.DA
      6392**DCL     10258>>IF      10261<<ASSIGN  12656<<ASSIGN  13067>>IF      13075>>DOWHILE 14123<<ASSIGN
F$DCB.ID.GX
      6392**DCL     10258>>IF      10262<<ASSIGN  10262>>ASSIGN  12657<<ASSIGN  13075>>DOWHILE
F$DCB.INDX
      6387**DCL      8820<<ASSIGN  12800>>ASSIGN  12802>>IF      12828>>ASSIGN  12833<<ASSIGN  12883>>ASSIGN
     12885>>IF      12903>>ASSIGN  12908<<ASSIGN  14337>>ASSIGN
F$DCB.IORG
      6385**DCL     10370>>IF
F$DCB.IXTNSIZE
      6368**DCL      6368--REDEF
F$DCB.KEYL
      6366**DCL      7763>>ASSIGN   8255>>IF       8444>>IF       9342>>ASSIGN  12716>>ASSIGN  12839<<ASSIGN
     12841>>ASSIGN  12914<<ASSIGN  13774>>ASSIGN  14115>>ASSIGN
F$DCB.KEYX
      6365**DCL      7259>>ASSIGN   7380>>ASSIGN   8706>>ASSIGN   8953>>ASSIGN   9342>>ASSIGN   9352>>ASSIGN
     10306>>ASSIGN  11010>>ASSIGN  11031>>ASSIGN  11089>>ASSIGN  12208>>ASSIGN  12723>>ASSIGN  12840<<ASSIGN
     12916<<ASSIGN  13774>>ASSIGN
F$DCB.KFIELDX
      6374**DCL     10473>>IF      10474>>ASSIGN
F$DCB.LASTSTA$
      6358**DCL      6358--REDEF
F$DCB.LDFLG
      6380**DCL      7247>>IF       7372>>IF       8988>>IF      11083>>IF      12599>>IF      12610>>IF
     13553>>IF
F$DCB.LRDL0
      6366**DCL      9515>>IF       9548>>IF       9566>>IF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1180 
F$DCB.LSLIDE
      6366**DCL      7499>>IF
F$DCB.LVL
      6383**DCL      6383--REDEF    7044<<ASSIGN   7222<<ASSIGN   7612<<ASSIGN   7880<<ASSIGN   8808<<ASSIGN
      8945<<ASSIGN   8971<<ASSIGN   9321<<ASSIGN   9326<<ASSIGN   9447<<ASSIGN   9607<<ASSIGN   9888<<ASSIGN
      9893<<ASSIGN   9983<<ASSIGN  10220<<ASSIGN  10300<<ASSIGN  10383<<ASSIGN  10917<<ASSIGN  11703<<ASSIGN
     11739<<ASSIGN  11857<<ASSIGN  11930<<ASSIGN  12563<<ASSIGN  13024<<ASSIGN  13480<<ASSIGN  13493<<ASSIGN
     13519<<ASSIGN  13666<<ASSIGN
F$DCB.MODCNT
      6388**DCL      9300>>IF      13055>>IF
F$DCB.MOVED
      6391**DCL      7446<<ASSIGN   7452>>IF       7457>>ASSIGN   7461>>ASSIGN   7463<<ASSIGN  10957<<ASSIGN
F$DCB.NAME.C
      6358**DCL      6358--REDEF
F$DCB.NOEOF
      6379**DCL      6379--REDEF
F$DCB.NRECS
      6369**DCL      6369--REDEF    8833<<ASSIGN   8836>>IF       8859<<ASSIGN   8963<<ASSIGN  14020<<ASSIGN
F$DCB.NRECX
      6388**DCL      6388--REDEF
F$DCB.OHDR
      6380**DCL      6380--REDEF
F$DCB.ORG
      6363**DCL      6363--REDEF    7139>>ASSIGN   9979>>ASSIGN  10128>>ASSIGN  10251>>ASSIGN  10370>>IF
     10441>>ASSIGN  10446>>IF      14300>>ASSIGN  14338>>ASSIGN
F$DCB.PRECNO
      6386**DCL      6386--REDEF
F$DCB.RCSZ
      6391**DCL      6391--REDEF
F$DCB.RDL0
      6353**DCL      9421<<ASSIGN   9515>>IF       9548>>IF       9566>>IF      11934<<ASSIGN  11934>>ASSIGN
F$DCB.RES
      6359**DCL      6359--REDEF
F$DCB.RPOS
      6380**DCL      7063<<ASSIGN   7334<<ASSIGN   8545>>IF       8547<<ASSIGN   8596>>IF       8603>>IF
      8605<<ASSIGN   8675<<ASSIGN   8742<<ASSIGN   8819<<ASSIGN   8865<<ASSIGN   9060<<ASSIGN   9131<<ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1181 
      9146<<ASSIGN   9165<<ASSIGN   9510<<ASSIGN   9529<<ASSIGN   9546<<ASSIGN   9564<<ASSIGN   9694>>ASSIGN
      9708<<ASSIGN   9718<<ASSIGN   9918<<ASSIGN  10249<<ASSIGN  10398<<ASSIGN  10676<<ASSIGN  10699<<ASSIGN
     10711<<ASSIGN  11136>>IF      11147<<ASSIGN  11216>>IF      11229<<ASSIGN  11233<<ASSIGN  11456<<ASSIGN
     11486<<ASSIGN  11519<<ASSIGN  11524<<ASSIGN  11589<<ASSIGN  11673<<ASSIGN  11707<<ASSIGN  11745<<ASSIGN
     11887<<ASSIGN  11908<<ASSIGN  12006<<ASSIGN  12081<<ASSIGN  12083<<ASSIGN  12224<<ASSIGN  12367<<ASSIGN
     12517<<ASSIGN  12539<<ASSIGN  12829>>ASSIGN  12837<<ASSIGN  12904>>ASSIGN  12912<<ASSIGN  13057>>ASSIGN
     13060<<ASSIGN  13081<<ASSIGN  13961<<ASSIGN  14010<<ASSIGN  14222<<ASSIGN
F$DCB.SEED
      6377**DCL     11830>>IF      11980>>IF      13621>>IF      13762>>IF      13789>>IF
F$DCB.SEGX
      6388**DCL      7147<<ASSIGN   7156<<ASSIGN   8028<<ASSIGN   9563<<ASSIGN   9717<<ASSIGN  11206<<ASSIGN
     11234>>ASSIGN  11254<<ASSIGN  11337<<ASSIGN  11343<<ASSIGN  11648<<ASSIGN  11654<<ASSIGN  11706<<ASSIGN
     11744<<ASSIGN  12520<<ASSIGN  12530<<ASSIGN  12536<<ASSIGN  12546<<ASSIGN  12572>>ASSIGN  12749<<ASSIGN
     12771>>ASSIGN  12831>>ASSIGN  12843<<ASSIGN  12844>>ASSIGN  12906>>ASSIGN  12917<<ASSIGN  12918>>ASSIGN
     13033>>ASSIGN  13218<<ASSIGN
F$DCB.SETX
      6371**DCL      6371--REDEF
F$DCB.SEZ_OK
      6379**DCL      9328<<ASSIGN   9334>>IF       9337<<ASSIGN
F$DCB.SHARED
      6378**DCL      7655>>IF       8653>>IF       8798>>IF       8801>>IF       9300>>IF       9300>>IF
     11511>>IF      11537>>IF      11799>>IF      11822>>IF      12071>>IF      12092>>IF      12140>>IF
     13762>>IF      14119>>IF
F$DCB.SLIDE
      6353**DCL      7498<<ASSIGN   7499>>IF       8863<<ASSIGN
F$DCB.SPAN
      6380**DCL     10273<<ASSIGN
F$DCB.SPARE
      6366**DCL      8057>>ASSIGN
F$DCB.STARF
      6378**DCL     10370>>IF
F$DCB.STARTX
      6374**DCL     10480>>ASSIGN
F$DCB.TAB$
      6370**DCL      6371--REDEF
F$DCB.TDA
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1182 
      6385**DCL      6385--REDEF    8653>>IF       8801>>IF       8861<<ASSIGN   9435>>IF      10074>>ASSIGN
     10149>>ASSIGN  12846<<ASSIGN  12849<<ASSIGN  12852>>ASSIGN  12922<<ASSIGN  12925>>ASSIGN  12928<<ASSIGN
     13481>>ASSIGN  13504<<ASSIGN
F$DCB.TDALVL
      6383**DCL      8862<<ASSIGN  10075>>ASSIGN  10150>>ASSIGN  12850<<ASSIGN  12923<<ASSIGN  13479>>ASSIGN
F$DCB.UB$
      6387**DCL     11871>>ASSIGN  11876<<ASSIGN  11876>>ASSIGN  12723>>ASSIGN  13695>>CALLBLT 13708<<ASSIGN
     13708>>ASSIGN
F$DCB.UBYTES
      6387**DCL      7586>>DOUNTIL  7587>>IF       7902>>IF       7906>>ASSIGN  11867>>IF      11868>>ASSIGN
     11875<<ASSIGN  11875>>ASSIGN  13657>>DOUNTIL 13678>>IF      13681>>ASSIGN  13691>>IF      13692>>ASSIGN
     13707<<ASSIGN  13707>>ASSIGN  13767>>IF      13768>>IF      13769>>ASSIGN  13780>>IF
F$DCB.UNIQUEBLD
      6390**DCL      7247>>IF       7372>>IF       8988>>IF      11083>>IF      12599>>IF      12610>>IF
     12814>>IF      12894>>IF      13553>>IF
F$DCB.WSN
      6360**DCL      6360--REDEF
FAF$CHKDAFR
      6857**DCL-ENT  8623--CALL
FAF$GETGRAN
      6858**DCL-ENT  7133--CALL     7448--CALL    10117--CALL    10238--CALL
FAG$G1DIR
      6859**DCL-ENT  7450--CALL
FAG$REXT
      6860**DCL-ENT 12368--CALL
FAK
      6924**DCL      7056<>CALL     7071>>IF       7378>>IF       7579<<ASSIGN   7596>>IF       7625<>CALL
      7632>>IF       7636>>IF       7648>>IF       7660<<ASSIGN   7889>>IF       9880<<ASSIGN   9906>>IF
      9909<>CALL     9913<<ASSIGN  11037<<ASSIGN  12172<<ASSIGN  12181>>IF      12206>>IF      12236<<ASSIGN
     12296<<ASSIGN  13641<<ASSIGN  13651<<ASSIGN  13672>>IF      13713<<ASSIGN
FI IN PROCEDURE NEWSEG
     11108**LABEL   11091--CALLALT
FIELD$
      6945**DCL      6962--IMP-PTR  8167<<ASSIGN   8169>>IF       8170>>IF       8180<<ASSIGN   8342>>CALL
      8345>>CALL     8348>>CALL     8351>>CALL     8355>>CALL     8358>>CALL     8361>>CALL     8364>>IF
      8365>>IF       8371>>ASSIGN   8376>>ASSIGN   8384>>CALL     8387>>CALL     8416<<ASSIGN   8423>>IF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1183 
      8424>>IF       8441<<ASSIGN   8441>>ASSIGN   8469<<ASSIGN   8474>>IF       8475>>IF       8492<<ASSIGN
      8492>>ASSIGN   8514>>ASSIGN
FIELDIN$
      6946**DCL      6963--IMP-PTR  8168<<ASSIGN   8169>>IF       8170>>IF       8181<<ASSIGN   8342>>CALL
      8345>>CALL     8348>>CALL     8351>>CALL     8355>>CALL     8358>>CALL     8361>>CALL     8364>>IF
      8365>>IF       8372>>ASSIGN   8377>>ASSIGN   8384>>CALL     8387>>CALL     8417<<ASSIGN   8423>>IF
      8424>>IF       8440<<ASSIGN   8440>>ASSIGN   8473<<ASSIGN   8474>>IF       8475>>IF       8487<<ASSIGN
      8515>>ASSIGN
FIELDIN_PTR
      6963**DCL      8342<>CALL     8345<>CALL     8348<>CALL     8351<>CALL     8355<>CALL     8358<>CALL
      8361<>CALL     8384<>CALL     8387<>CALL
FIELDIN_TEMP IN PROCEDURE COMPFIELD
      8335**DCL      8372<<ASSIGN   8373<>CALL     8377<<ASSIGN   8378<>CALL
FIELD_PTR
      6962**DCL      8342<>CALL     8345<>CALL     8348<>CALL     8351<>CALL     8355<>CALL     8358<>CALL
      8361<>CALL     8384<>CALL     8387<>CALL
FIELD_START.OFFSET
      6506**DCL      7716>>ASSIGN   7813>>ASSIGN   7814>>ASSIGN   8167>>ASSIGN   8168>>ASSIGN   8180>>ASSIGN
      8181>>ASSIGN   8473>>ASSIGN   8487>>ASSIGN
FIELD_TEMP IN PROCEDURE COMPFIELD
      8334**DCL      8371<<ASSIGN   8373<>CALL     8376<<ASSIGN   8378<>CALL
FIERR IN PROCEDURE DELALL
      8690**LABEL    8650--CALLALT
FIERR IN PROCEDURE DELALT
      8717**LABEL    8708--CALLALT  8711--CALLALT
FIERR IN PROCEDURE DELETE
      9007**LABEL    8952--CALLALT  8956--CALLALT
FINDID
      9268**PROC     9092--CALL     9355--CALL    11478--CALL    12050--CALL
FINDIDO
      9295**PROC    11451--CALL    12005--CALL    13558--CALL
FINDKEY
      9415**PROC     7261--CALL     7382--CALL     8708--CALL     8956--CALL     9050--CALL     9354--CALL
     11011--CALL    11091--CALL    11465--CALL    11821--CALL    12045--CALL    12210--CALL    13856--CALL
     14217--CALL
FIRSTSEG IN PROCEDURE PREVREC
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1184 
     11584**DCL     11618<<ASSIGN  11620<<ASSIGN  11622>>DOWHILE 11637>>IF
FIT$ IN PROCEDURE DELEND
      8795**DCL      8878<<ASSIGN   8879<>CALL
FITERR IN PROCEDURE DELEND
      8907**LABEL    8882--CALLALT  8888--CALLALT
FITERR1 IN PROCEDURE DELEND
      8898**LABEL    8877--CALLALT
FLINK
      9577**PROC     9464--CALL     9481--CALL     9497--CALL    11143--CALL    11156--CALL    11312--CALL
FLINKDA IN PROCEDURE BLDFLINK
      7442**DCL      7476<<ASSIGN   7481<<ASSIGN   7514>>ASSIGN
FM$BUF$
      6855**DCL      7045>>ASSIGN   7223>>ASSIGN   7613>>ASSIGN   7881>>ASSIGN   8946>>ASSIGN   8972>>ASSIGN
      9424>>ASSIGN   9444>>ASSIGN   9897>>ASSIGN  10301>>ASSIGN  10310>>ASSIGN  11740>>ASSIGN  11853>>ASSIGN
     12564>>ASSIGN  12765>>ASSIGN  13025>>ASSIGN  13484>>ASSIGN  13667>>ASSIGN
FM$CFU.ACCTX
      6400**DCL      6400--REDEF   12361>>ASSIGN
FM$CFU.AFIT
      6399**DCL      8896>>IF      10370>>IF
FM$CFU.ALTBLD
      6402**DCL      7275<<ASSIGN   7404<<ASSIGN   8903<<ASSIGN   8995<<ASSIGN  11098<<ASSIGN  12604<<ASSIGN
     12615<<ASSIGN  12814>>IF      12894>>IF      13568<<ASSIGN
FM$CFU.B
      6402**DCL      8869<<ASSIGN
FM$CFU.FMOD
      6399**DCL      8959<<ASSIGN  13752<<ASSIGN
FM$CFU.GDA
      6401**DCL      7040>>ASSIGN   7148<<ASSIGN   7874>>IF       7875>>IF       7879>>ASSIGN   8867<<ASSIGN
     10215>>IF      10239<<ASSIGN  10370>>IF      10379>>IF      10418<<ASSIGN
FM$CFU.LDA
      6402**DCL      7490<<ASSIGN   8872<<ASSIGN  10073>>ASSIGN  10148>>ASSIGN  11730>>ASSIGN  11758<<ASSIGN
FM$CFU.MODCNT
      6401**DCL      9300>>IF      13055>>IF
FM$CFU.NGAVAL
      6402**DCL      8873<<ASSIGN   8873>>ASSIGN  10415<<ASSIGN  10415>>ASSIGN
FM$CFU.NRECS
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1185 
      6400**DCL      7171<<ASSIGN   7171>>ASSIGN   8801>>IF       8827<<ASSIGN   8827>>ASSIGN   8833>>ASSIGN
      8857>>ASSIGN   8858<<ASSIGN   8962<<ASSIGN   8962>>ASSIGN   8963>>ASSIGN  14019<<ASSIGN  14019>>ASSIGN
     14020>>ASSIGN
FM$CFU.RCSZ
      6401**DCL      8870<<ASSIGN  13768>>IF      13769<<ASSIGN
FM$CFU.SHARE
      6399**DCL     13037>>IF      13621>>IF
FM$CFU.SLIDE
      6401**DCL      7496>>IF       7497<<ASSIGN   7497>>ASSIGN   7498>>ASSIGN   8871<<ASSIGN  10370>>IF
FM$CFU.STARX.F
      6400**DCL     12327>>IF
FM$CFU.UGRANS
      6401**DCL      8873>>ASSIGN   8874<<ASSIGN   9330>>IF      10378>>IF      10379>>IF      10414<<ASSIGN
FM$CFU.ULBLD
      6402**DCL      7500<<ASSIGN   8868<<ASSIGN   9516<<ASSIGN   9549<<ASSIGN   9567<<ASSIGN  13498<<ASSIGN
FM$CFU.USECNT
      6401**DCL      8653>>IF       8801>>IF      10370>>IF
FM$CFUA.FDCSDA
      6405**DCL     12362<<ASSIGN
FM$GRAN
      6411**DCL      7136<<ASSIGN   7987--IF       8878--ASSIGN   8881--ASSIGN   8886--ASSIGN   9971--IF
      9973--ASSIGN  10025--IF      10042--ASSIGN  10123<<ASSIGN  10126--ASSIGN  10130--ASSIGN  10131--ASSIGN
     10224<<ASSIGN  10224>>ASSIGN
FM$GRAN.AVAIL
      6412**DCL      7050>>IF       7054>>ASSIGN   7060<<ASSIGN   7060>>ASSIGN   7142<<ASSIGN   7884>>ASSIGN
      7887>>ASSIGN   7898>>ASSIGN   8052>>ASSIGN   8847<<ASSIGN  10028>>IF      10129<<ASSIGN  10228>>ASSIGN
     10235<<ASSIGN  10241<<ASSIGN  10241>>ASSIGN  10388>>IF      10395<<ASSIGN  10395>>ASSIGN  10548>>IF
     10549>>IF      10577>>IF      10822<<ASSIGN  10822>>ASSIGN  10907>>IF      10920>>IF      10933>>IF
     10956<<ASSIGN  10956>>ASSIGN  12321<<ASSIGN  12321>>ASSIGN  12410<<ASSIGN  12410>>ASSIGN  12474<<ASSIGN
     12474>>ASSIGN  13219<<ASSIGN  13219>>ASSIGN  13682>>IF      13683>>ASSIGN  13686<<ASSIGN  13686>>ASSIGN
FM$GRAN.BLINK
      6412**DCL      7475<<ASSIGN   7683>>ASSIGN   9605>>ASSIGN   9992>>IF      12327>>IF      12335>>ASSIGN
     12348<<ASSIGN  12348>>ASSIGN  12351<<ASSIGN  13071>>IF      13337>>IF      13438>>ASSIGN
FM$GRAN.ENDLVL
      6412**DCL     13371>>IF
FM$GRAN.FCEX
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1186 
      6412**DCL      7149>>IF       7151>>ASSIGN   7152>>ASSIGN   7501>>ASSIGN   7960>>ASSIGN   7963>>ASSIGN
      7965>>ASSIGN   8004>>IF       8087>>ASSIGN   8657>>ASSIGN   8821>>ASSIGN   8846>>ASSIGN   8850>>ASSIGN
      9426>>ASSIGN   9439>>ASSIGN   9451>>ASSIGN   9621>>ASSIGN  10130<<ASSIGN  10311>>ASSIGN  10808>>ASSIGN
     10952>>ASSIGN  10953>>CALL    10954<<ASSIGN  10954>>ASSIGN  11315>>ASSIGN  11608>>ASSIGN  11935>>ASSIGN
     12569>>ASSIGN  12766>>ASSIGN  13030>>ASSIGN  13327>>ASSIGN  13417>>ASSIGN
FM$GRAN.FLINK
      6412**DCL      7526<<ASSIGN   8054>>IF       8845<<ASSIGN   9429>>IF       9579>>ASSIGN   9835>>ASSIGN
     10370>>IF      10911>>IF      10915>>ASSIGN  11747>>ASSIGN  12339>>IF      12341>>ASSIGN  12345<<ASSIGN
     12345>>ASSIGN  12352<<ASSIGN  13371>>IF      13454>>ASSIGN
FM$GRAN.HDR
      6411**DCL     10127<<ASSIGN  10225<<ASSIGN
FM$GRAN.KEYCNT
      6412**DCL      8086>>ASSIGN   8659>>ASSIGN   8823>>ASSIGN   8848<<ASSIGN   9425>>ASSIGN   9438>>ASSIGN
      9450>>ASSIGN   9620>>ASSIGN  10004>>ASSIGN  10007>>ASSIGN  10861<<ASSIGN  11743>>ASSIGN  11936>>ASSIGN
     12320<<ASSIGN  12365>>IF      12366>>ASSIGN  12568>>ASSIGN  12768>>ASSIGN  13029>>ASSIGN  13211<<ASSIGN
     13326>>ASSIGN  13416>>ASSIGN
FM$GRAN.LVL
      6411**DCL      7140<<ASSIGN   8059>>IF       9335>>IF      10226<<ASSIGN  12327>>IF      13340>>IF
FM$GRAN.NAVX
      6411**DCL      7053>>ASSIGN   7059>>ASSIGN   7061<<ASSIGN   7061>>ASSIGN   7141<<ASSIGN   7960>>ASSIGN
      8026>>ASSIGN   8846<<ASSIGN   8847>>ASSIGN   9996>>ASSIGN  10022>>ASSIGN  10024>>ASSIGN  10126<<ASSIGN
     10129>>ASSIGN  10228>>ASSIGN  10236<<ASSIGN  10387>>ASSIGN  10544>>ASSIGN  10546>>ASSIGN  10571>>ASSIGN
     10819>>ASSIGN  10823<<ASSIGN  10823>>ASSIGN  10930>>ASSIGN  10932>>ASSIGN  10953>>CALL    10955<<ASSIGN
     10955>>ASSIGN  11219>>ASSIGN  11308>>ASSIGN  11316>>ASSIGN  11602>>ASSIGN  11632>>ASSIGN  12289>>ASSIGN
     12294>>ASSIGN  12322<<ASSIGN  12322>>ASSIGN  12392>>ASSIGN  12411<<ASSIGN  12411>>ASSIGN  12445>>ASSIGN
     12464>>IF      12473<<ASSIGN  12473>>ASSIGN  12485>>ASSIGN  12525>>IF      13140>>ASSIGN  13148>>ASSIGN
     13220<<ASSIGN  13220>>ASSIGN  13679>>IF      13685<<ASSIGN  13685>>ASSIGN  14191>>ASSIGN
FM$GRAN.ORG
      6411**DCL      7139<<ASSIGN   7447>>IF       7482>>IF       7494>>IF       7529>>IF      10128<<ASSIGN
     12327>>IF
FM$GRAN.STAMP.GMOD
      6411**DCL      7138<<ASSIGN  10125<<ASSIGN  10243<<ASSIGN
FM$GRAN.STAMP.HASH
      6411**DCL      7137<<ASSIGN  10124<<ASSIGN
FM$GRAN3
      6415**DCL      7508<<ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1187 
FM$GRAN3.AVAIL
      6416**DCL      7516<<ASSIGN  10549>>IF      10553>>IF      10581>>IF      10802>>IF      10869<<ASSIGN
     10869>>ASSIGN  10920>>IF
FM$GRAN3.BLINK
      6416**DCL      7515<<ASSIGN
FM$GRAN3.FCEX
      6416**DCL      7513<<ASSIGN  10796>>ASSIGN  10813>>ASSIGN  10841>>ASSIGN
FM$GRAN3.FLINK
      6416**DCL      7514<<ASSIGN
FM$GRAN3.KEYCNT
      6416**DCL     10795>>ASSIGN  10872<<ASSIGN
FM$GRAN3.NAVX
      6415**DCL      7517<<ASSIGN  10813>>ASSIGN  10870<<ASSIGN  10870>>ASSIGN
FM$GRAN3.STAMP.GMOD
      6415**DCL      7512<<ASSIGN
FM$IRENT.KLB
      6422**DCL      6422--IMP-SIZ  7759<<ASSIGN   9808>>ASSIGN   9815>>ASSIGN  11614>>ASSIGN  12463>>ASSIGN
     12506>>ASSIGN  12745>>ASSIGN  13286>>ASSIGN  13355>>ASSIGN  13380>>ASSIGN
FM$IRENT.TXT
      6422**DCL      9815>>ASSIGN
FM$KEYENT.D
      6419**DCL      7170<<ASSIGN   8667>>IF       8960<<ASSIGN   9051>>IF       9152>>IF      10651>>IF
     11279>>DOUNTIL 11471>>IF      11672>>DOUNTIL 11825>>IF      12062>>IF      13635>>IF      13857>>IF
     13966>>IF      13974>>IF      14011<<ASSIGN
FM$KEYENT.KLB
      6419**DCL      6419--IMP-SIZ  8229>>ASSIGN   9810>>ASSIGN  11616>>ASSIGN  12461>>ASSIGN  12504>>ASSIGN
     12747>>ASSIGN  13288>>ASSIGN  13357>>ASSIGN  13382>>ASSIGN  13991>>IF      13996<<ASSIGN
FM$KEYTBL
      6432**DCL      6896--DCLINIT  7157>>ASSIGN   7313>>ASSIGN   7315>>ASSIGN   7502>>ASSIGN   7516--ASSIGN
      7517--ASSIGN   7521--ASSIGN   7960--ASSIGN   7963>>ASSIGN   7963--ASSIGN   7965>>ASSIGN   7965--ASSIGN
      7987--IF       8004--IF       8088>>ASSIGN   8091>>ASSIGN   8093>>ASSIGN   8121>>ASSIGN   8123>>ASSIGN
      8131>>ASSIGN   8133>>ASSIGN   8658>>ASSIGN   8822>>ASSIGN   8846--ASSIGN   8851<<ASSIGN   9427>>ASSIGN
      9440>>ASSIGN   9452>>ASSIGN   9622>>ASSIGN   9971--IF       9973--ASSIGN  10022>>ASSIGN  10024>>ASSIGN
     10025--IF      10042--ASSIGN  10126--ASSIGN  10131<<ASSIGN  10312>>IF      10313>>ASSIGN  10315>>ASSIGN
     10544>>ASSIGN  10546>>ASSIGN  10799--ASSIGN  10806--ASSIGN  10809--ASSIGN  10813--ASSIGN  10827--IF
     10841--ASSIGN  10841>>ASSIGN  10847>>ASSIGN  10848<<ASSIGN  10865--ASSIGN  10866<<ASSIGN  10930>>ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1188 
     10932>>ASSIGN  10961>>ASSIGN  10964<<ASSIGN  10967<<ASSIGN  11315--ASSIGN  11322>>ASSIGN  11324>>ASSIGN
     11598>>ASSIGN  11608--ASSIGN  11610>>ASSIGN  11612>>ASSIGN  11937>>ASSIGN  12278>>ASSIGN  12280>>ASSIGN
     12285>>ASSIGN  12287>>ASSIGN  12299>>ASSIGN  12309<<ASSIGN  12312<<ASSIGN  12316--ASSIGN  12318<<ASSIGN
     12399>>ASSIGN  12402<<ASSIGN  12406--ASSIGN  12407<<ASSIGN  12448>>ASSIGN  12450>>ASSIGN  12457>>ASSIGN
     12459>>ASSIGN  12488>>ASSIGN  12490>>ASSIGN  12511>>ASSIGN  12513>>ASSIGN  12570>>ASSIGN  12740>>ASSIGN
     12742>>ASSIGN  12767>>ASSIGN  13031>>ASSIGN  13143>>ASSIGN  13145>>ASSIGN  13167--IF      13174>>ASSIGN
     13177<<ASSIGN  13181<<ASSIGN  13203<<ASSIGN  13206<<ASSIGN  13256>>ASSIGN  13258>>ASSIGN  13281>>ASSIGN
     13283>>ASSIGN  13328>>ASSIGN  13353>>ASSIGN  13376>>ASSIGN  13378>>ASSIGN  13418>>ASSIGN  13971>>ASSIGN
     13973>>ASSIGN  14194>>ASSIGN  14196>>ASSIGN
FM$KEYTBL3
      6435**DCL      7520<<ASSIGN   7521<<ASSIGN  10797>>ASSIGN  10831>>ASSIGN  10834<<ASSIGN  10854<<ASSIGN
     10859<<ASSIGN
FM$KT
      6432**DCL      6432--REDEF
FM$KT3
      6435**DCL      6435--REDEF
FM$MISEG
      6425**DCL      7070>>ASSIGN   7218>>ASSIGN   7400<<ASSIGN   7590>>ASSIGN   7593>>IF       7595>>ASSIGN
      7622>>ASSIGN   7631>>ASSIGN   7634>>IF       7982>>DOWHILE  8710>>DOWHILE  8968>>ASSIGN  12179>>ASSIGN
     12186>>ASSIGN  12227<<ASSIGN  12231<<ASSIGN  12469>>ASSIGN  12472<<ASSIGN  13560>>DOWHILE 13564<<ASSIGN
     13671>>ASSIGN  13699>>ASSIGN
FM$MISEG.CTL
      6426**DCL      7657<<ASSIGN   9907>>ASSIGN
FM$MISEG.FAK
      6425**DCL      7072<<ASSIGN   7219<<ASSIGN   7598<<ASSIGN   7599<<ASSIGN   7633<<ASSIGN   7637<<ASSIGN
      8589>>IF       8969<<ASSIGN   9916>>IF      11223>>IF      11242>>IF      11622>>DOWHILE 11885>>IF
     12182<<ASSIGN  12495>>IF      13673<<ASSIGN
FM$MISEG.GACTB
      6425**DCL      7066<<ASSIGN   7167>>IF       7591<<ASSIGN   7626<<ASSIGN   9883>>IF       9905>>ASSIGN
     11843>>IF      11846>>IF      11866>>ASSIGN  11882>>ASSIGN  13645>>IF      13649>>ASSIGN  13662>>IF
     13696<<ASSIGN  13711>>ASSIGN
FM$MISEG.GDA
      6426**DCL      7065<<ASSIGN   7220>>ASSIGN   7582>>ASSIGN   7611>>ASSIGN   8944>>ASSIGN   8970>>ASSIGN
      9270>>DOWHILE  9307>>IF       9684>>ASSIGN   9701>>ASSIGN   9769>>ASSIGN   9882>>ASSIGN  10256>>IF
     10258>>IF      10265<<ASSIGN  10299>>ASSIGN  10404>>IF      10406<<ASSIGN  11842>>ASSIGN  12656>>ASSIGN
     13075>>DOWHILE 13632>>ASSIGN  13661>>ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1189 
FM$MISEG.GSIZ
      6425**DCL      7064<<ASSIGN   7609>>IF       7619>>ASSIGN  13678>>IF      13679>>IF      13681>>ASSIGN
     13684<<ASSIGN  13684>>ASSIGN  13689>>ASSIGN
FM$MISEG.GX
      6425**DCL      7059<<ASSIGN   7226>>ASSIGN   7583>>ASSIGN   7616>>ASSIGN   8949>>ASSIGN   8975>>ASSIGN
      9270>>DOWHILE  9307>>IF       9683>>ASSIGN   9700>>ASSIGN   9768>>ASSIGN   9902>>ASSIGN  10258>>IF
     10266<<ASSIGN  10266>>ASSIGN  10304>>ASSIGN  10407<<ASSIGN  10407>>ASSIGN  11861>>ASSIGN  12657>>ASSIGN
     13075>>DOWHILE 13633>>ASSIGN  13674>>ASSIGN  13679>>IF
FM$ULSEG.DA
      6429**DCL     13290>>ASSIGN  13359>>ASSIGN  13384>>ASSIGN
FMB$ERRTYP
      6861**DCL-ENT  8303--CALL    13152--CALL
FMB$IOSPIN
      6862**DCL-ENT  7534--CALL    12356--CALL
FMB$LOGERR
      6863**DCL-ENT  8305--CALL     8628--CALL     8691--CALL     8718--CALL     9008--CALL    10566--CALL
     11109--CALL    13155--CALL
FMC$CLRFILE
      6865**DCL-ENT  8879--CALL
FMC_CACHEPGCNT$
       758**DCL       758--IMP-PTR   758--REDEF
FMD$CHKFIELD
      6866**DCL-ENT  9046--CALL     9216--CALL    11462--CALL    11819--CALL    12042--CALL    13796--CALL
FMD$FLSHBUF
      6867**DCL-ENT  7469--CALL     7505--CALL     7533--CALL     8807--CALL     8840--CALL     8897--CALL
      9609--CALL     9711--CALL    10049--CALL    10050--CALL    10051--CALL    10116--CALL    10422--CALL
     10942--CALL    10943--CALL    10944--CALL    10949--CALL    10970--CALL    10971--CALL    10972--CALL
     12334--CALL    12340--CALL    12353--CALL    12355--CALL    12827--CALL    12851--CALL    12902--CALL
     12924--CALL    13225--CALL    13227--CALL    13499--CALL    13500--CALL    13501--CALL    13502--CALL
FMD$FLSHBUFNR
      6868**DCL-ENT  7134--CALL
FMD$GETBUF
      6869**DCL-ENT  7135--CALL     7506--CALL    10118--CALL    10223--CALL
FMD$RECTRAN
      6870**DCL-ENT  7056--CALL     7625--CALL     9909--CALL
FMD$REDBUF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1190 
      6871**DCL-ENT  7048--CALL     7225--CALL     7615--CALL     7883--CALL     8817--CALL     8843--CALL
      8948--CALL     8974--CALL     9333--CALL     9449--CALL     9608--CALL     9839--CALL     9900--CALL
     10221--CALL    10303--CALL    10385--CALL    10918--CALL    11704--CALL    11742--CALL    11858--CALL
     11933--CALL    12337--CALL    12343--CALL    12566--CALL    13027--CALL    13439--CALL    13455--CALL
     13486--CALL    13494--CALL    13520--CALL    13669--CALL
FMD$RELBUF
      6872**DCL-ENT 10278--CALL    10416--CALL
FMD$WRTBUF
      6873**DCL-ENT  8894--CALL    10274--CALL
FMD$WRTSV
      6874**DCL-ENT  8895--CALL    10275--CALL
FMD$WRTSVNW
      6875**DCL-ENT  7531--CALL     7532--CALL    12354--CALL
FMG$COMPDFLT
      6884**DCL-ENT  8378--CALL
FMG$COMPPDFLT
      6885**DCL-ENT  8384--CALL
FMG$COMPPDLS
      6880**DCL-ENT  8355--CALL
FMG$COMPPDNS
      6881**DCL-ENT  8358--CALL
FMG$COMPPDTS
      6882**DCL-ENT  8361--CALL
FMG$COMPSFLT
      6883**DCL-ENT  8373--CALL
FMG$COMPUDFLT
      6886**DCL-ENT  8387--CALL
FMG$COMPUDLO
      6878**DCL-ENT  8348--CALL
FMG$COMPUDLS
      6877**DCL-ENT  8345--CALL
FMG$COMPUDTO
      6879**DCL-ENT  8351--CALL
FMG$COMPUDTS
      6876**DCL-ENT  8342--CALL
FMG$INIT
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1191 
      6887**DCL-ENT 10217--CALL    10276--CALL
FMN$GETFIT
      6888**DCL-ENT  8877--CALL
FMO$LOCCODP
      6889**DCL-ENT  8882--CALL     8888--CALL
FMR$SLIDE
      6890**DCL-ENT 10815--CALL    10953--CALL    12291--CALL    12396--CALL    13161--CALL
FM_EOP
      1145**DCL      7010>>ASSIGN   9929>>ASSIGN  11902>>ASSIGN
FM_FRMAX
      1144**DCL      9330>>IF
FM_FRZERO
      1144**DCL      7456>>IF       7460>>IF       8817<>CALL     8843<>CALL     8872>>ASSIGN   8891>>ASSIGN
      9319>>IF       9330>>IF       9330>>IF       9886>>IF      10072>>ASSIGN  10076>>ASSIGN  10147>>ASSIGN
     10151>>ASSIGN  10221<>CALL    10256>>IF      10385>>CALL    10404>>IF      10406>>ASSIGN  11696>>ASSIGN
     11848>>IF      13343>>ASSIGN  13506>>ASSIGN
FM_MISEG
      6914**DCL      7070<<ASSIGN   7072--ASSIGN   7218<<ASSIGN   7219--ASSIGN   7400>>ASSIGN   7595<<ASSIGN
      7598--ASSIGN   7631<<ASSIGN   7633--ASSIGN   7982>>DOWHILE  8710>>DOWHILE  8968<<ASSIGN   8969--ASSIGN
     13564>>ASSIGN  13699<<ASSIGN
FM_SRZERO
      1144**DCL      8839>>IF
FN
      6941**DCL      7708>>DOCASE   7716>>ASSIGN   7770<<ASSIGN   7813>>ASSIGN   7814>>ASSIGN   8166<<ASSIGN
      8167>>ASSIGN   8168>>ASSIGN   8178<<ASSIGN   8180>>ASSIGN   8181>>ASSIGN   8340>>DOCASE   8433<<ASSIGN
      8472<<ASSIGN   8473>>ASSIGN   8486<<ASSIGN   8487>>ASSIGN  12951>>DOCASE  12957>>ASSIGN  12960>>ASSIGN
     12963>>ASSIGN  12983>>DOCASE  12987>>ASSIGN  12991>>ASSIGN  12994>>ASSIGN  12997>>ASSIGN
FORWARD IN PROCEDURE FINDKEY
      9416**DCL      9420<<ASSIGN   9487<<ASSIGN   9494>>IF
FOUND
      6916**DCL      7305<<ASSIGN   7335<<ASSIGN   9517>>IF
FPT$DELREC_V.ALLDUPS
      6710**DCL      9104>>IF       9245>>IF
FPT$DELREC_V.BRK
      6710**DCL      8669>>IF       8736>>IF       9157>>IF
FPT$DELREC_V.DELALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1192 
      6710**DCL      9211>>IF
FPT$DELREC_V.INDX
      6710**DCL     10459>>ASSIGN
FPT$DELREC_V.RECNUM
      6710**DCL      9097>>ASSIGN
FPT$PFIL_V.BOF
      6714**DCL     11359>>IF
FPT$PFIL_V.INDX
      6714**DCL     10453>>ASSIGN
FPT$PRECORD_V.BOF
      6717**DCL     10624>>IF      11420>>IF      11422>>IF
FPT$PRECORD_V.BRK
      6717**DCL     10638>>IF      10668>>IF
FPT$PRECORD_V.EOF
      6717**DCL     10624>>IF      11420>>IF
FPT$PRECORD_V.ID
      6717**DCL     11508>>IF      11529>>IF      11551>>IF
FPT$PRECORD_V.IDALL
      6718**DCL      9676>>IF      11508>>IF      11529>>IF      11551>>IF
FPT$PRECORD_V.IDS
      6717**DCL     10624>>IF      11429>>IF      11439>>IF      11475>>IF
FPT$PRECORD_V.INDX
      6718**DCL     10456>>ASSIGN
FPT$PRECORD_V.KEYR
      6717**DCL     10695>>IF      11501>>IF      11526>>IF      11543>>IF      11549>>IF
FPT$PRECORD_V.KEYS
      6717**DCL     10624>>IF      11439>>IF      11459>>IF
FPT$PRECORD_V.N
      6718**DCL     10628>>ASSIGN  11520>>IF
FPT$PRECORD_V.NEXTKEY
      6718**DCL     11466>>IF      11469>>IF
FPT$PRECORD_V.RECNUM
      6718**DCL     11481>>IF      11483>>ASSIGN
FPT$READ_V.DVBYTE.CONT
      6700**DCL     11975>>IF
FPT$READ_V.DVBYTE.REREAD
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1193 
      6699**DCL      6700--REDEF
FPT$READ_V.ID
      6697**DCL     12068>>IF      12089>>IF      12103>>IF      12137>>IF
FPT$READ_V.IDS
      6697**DCL     11960>>IF      11997>>IF      12047>>IF      12122>>IF
FPT$READ_V.INDX
      6699**DCL      6699--REDEF   10450>>ASSIGN
FPT$READ_V.KEYCHNG
      6697**DCL     12129>>IF
FPT$READ_V.KEYR
      6697**DCL     11905>>IF      12065>>IF      12084>>IF      12101>>IF      12134>>IF
FPT$READ_V.KEYS
      6697**DCL     11801>>IF      11993>>IF
FPT$READ_V.RECNUM
      6701**DCL     12054>>IF      12056>>ASSIGN
FPT$READ_V.SEED
      6699**DCL      9909<>CALL    11830>>IF      11980>>IF
FPT$WRITE_V.DVBYTE
      6705**DCL      7657>>ASSIGN
FPT$WRITE_V.DVBYTE.CONT
      6706**DCL      7008>>ASSIGN  13761>>IF
FPT$WRITE_V.DVBYTE.VFC
      6706**DCL      6706--REDEF
FPT$WRITE_V.ID
      6704**DCL      7650>>IF
FPT$WRITE_V.NEWKEY
      6705**DCL     13876>>IF      13905>>IF      14049>>IF
FPT$WRITE_V.ONEWKEY
      6704**DCL     13876>>IF      13905>>IF      14049>>IF
FPT$WRITE_V.SEED
      6705**DCL      7056<>CALL     7625<>CALL    13621>>IF      13762>>IF      13789>>IF
FPTCODE
        89**DCL      6983>>DOCASE   7007>>IF       7010>>ASSIGN   8258>>IF       9312>>IF       9929>>ASSIGN
     10367<<ASSIGN  10419<<ASSIGN  10448>>DOCASE  11902>>ASSIGN  12722>>IF      13044>>IF
G$
      6913**DCL      7053<<ASSIGN   7056<>CALL     7226<<ASSIGN   7232>>IF       7617<<ASSIGN   7625<>CALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1194 
      8163>>ASSIGN   8706>>ASSIGN   8949<<ASSIGN   8953>>ASSIGN   8975<<ASSIGN   9904<<ASSIGN   9909<>CALL
     11863<<ASSIGN  11871>>ASSIGN  13676<<ASSIGN  13695>>CALLBLT
GACTB IN PROCEDURE ADDDATA
      7037**DCL      7054<<ASSIGN   7056<>CALL     7057>>ASSIGN   7066>>ASSIGN
GACTB IN PROCEDURE BLDREC
      7573**DCL      7619<<ASSIGN   7625<>CALL     7626>>ASSIGN
GACTB IN PROCEDURE GETREC
      9878**DCL      9905<<ASSIGN   9909<>CALL     9910>>IF
GACTB IN PROCEDURE RDCONT
     11797**DCL     11866<<ASSIGN  11867>>IF      11870>>ASSIGN  11877>>IF
GACTB IN PROCEDURE WRCONT
     13617**DCL     13689<<ASSIGN  13691>>IF      13694>>ASSIGN
GETBLINK
      9601**PROC     9994--CALL
GETFLINK
      9832**PROC    10000--CALL
GETIDP
      9651**PROC    11509--CALL    11533--CALL
GETIDRW
      9750**PROC     7651--CALL    12069--CALL    12090--CALL    12138--CALL
GETKEY
      9793**PROC    10706--CALL    11504--CALL    11527--CALL    11909--CALL    12066--CALL    12086--CALL
     12135--CALL
GETREC
      9875**PROC    12074--CALL    12143--CALL
GETSPACE
      9968**PROC     7096--CALL     7113--CALL
GSIZ IN PROCEDURE ADDDATA
      7038**DCL      7057<<ASSIGN   7058>>IF       7060>>ASSIGN   7061>>ASSIGN   7064>>ASSIGN
GX IN PROCEDURE BLDREC
      7574**DCL      7616<<ASSIGN   7617>>ASSIGN
GX IN PROCEDURE GETREC
      9876**DCL      9902<<ASSIGN   9904>>ASSIGN
GX IN PROCEDURE RDCONT
     11792**DCL     11861<<ASSIGN  11863>>ASSIGN
GX IN PROCEDURE WRCONT
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1195 
     13614**DCL     13674<<ASSIGN  13676>>ASSIGN
HDR IN PROCEDURE BLDFLINK
      7444**DCL      7510<<ASSIGN   7510>>ASSIGN
HFF$DSIZ
      6891**DCL-ENT  8260--CALL     9044--CALL     9664--CALL     9757--CALL    11431--CALL    11962--CALL
     12720--CALL    13802--CALL    14088--CALL
HFF$NILERASE
      6892**DCL-ENT  9090--CALL     9214--CALL
HFF$WRITE
      6893**DCL-ENT  9666--CALL     9758--CALL
HIGH IN PROCEDURE BINSEARCH
      7302**DCL      7307<<ASSIGN   7308>>ASSIGN   7327<<ASSIGN   7330>>ASSIGN   7333>>ASSIGN
HIGH IN PROCEDURE SRCHGRAN
     13244**DCL     13250<<ASSIGN  13251>>ASSIGN  13271<<ASSIGN  13274>>ASSIGN
I IN PROCEDURE ALTCHK
      7200**DCL      7211<<DOINDEX  7213>>ASSIGN   7215>>ASSIGN   7228<<DOINDEX  7231>>ASSIGN   7232>>IF
      7232>>IF       7239<>CALL     7243>>ASSIGN   7245>>ASSIGN   7252>>ASSIGN   7254>>ASSIGN   7257>>ASSIGN
      7269>>ASSIGN
I IN PROCEDURE BLDALTSEG
      7357**DCL      7366<<DOINDEX  7368>>ASSIGN   7370>>ASSIGN   7375>>ASSIGN
I IN PROCEDURE BUILD_IRKEY
      7751**DCL      7769<<DOINDEX  7770>>ASSIGN
I IN PROCEDURE BUILD_NIBFIELD
      7810**DCL      7818<<DOINDEX  7819>>ASSIGN   7820>>IF       7825>>ASSIGN   7826>>IF       7830>>ASSIGN
I IN PROCEDURE CHKEY
      8160**DCL      8161--IMP-SIZ  8165<<ASSIGN   8169>>IF       8169>>IF       8170>>IF       8170>>IF
      8176<<DOINDEX  8178>>ASSIGN
I IN PROCEDURE COMPKEY
      8411**DCL      8420<<ASSIGN   8433>>ASSIGN   8437<<ASSIGN   8437>>ASSIGN
I IN PROCEDURE COMPREC
      8465**DCL      8466--IMP-SIZ  8471<<ASSIGN   8474>>IF       8474>>IF       8475>>IF       8475>>IF
      8483<<DOINDEX  8486>>ASSIGN
I IN PROCEDURE DATAERROR
      8620**DCL      8626<<ASSIGN   8628<>CALL     8628>>CALL
I IN PROCEDURE DELEND
      8794**DCL      8838<<DOINDEX  8839>>IF       8840<>CALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1196 
I IN PROCEDURE DELETE
      8938**DCL      8982<<DOINDEX  8984>>ASSIGN   8986>>ASSIGN   8991>>ASSIGN
I IN PROCEDURE GETIDP
      9653**DCL      9664<>CALL     9672<<ASSIGN   9672>>ASSIGN   9673>>IF       9678>>IF       9690<<ASSIGN
      9690>>ASSIGN   9698>>IF       9704<<ASSIGN   9704>>ASSIGN   9719>>IF
I IN PROCEDURE GETIDRW
      9751**DCL      9757<>CALL     9759>>IF       9760>>IF
I IN PROCEDURE INIT_AKEY
     10070**DCL     10078<<DOINDEX 10079>>ASSIGN  10080>>ASSIGN  10081>>ASSIGN  10082>>ASSIGN  10083>>ASSIGN
     10084>>ASSIGN  10085>>ASSIGN  10086>>ASSIGN  10089<<DOINDEX 10091>>ASSIGN  10092>>ASSIGN  10093>>ASSIGN
I IN PROCEDURE INIT_IRKEY
     10145**DCL     10153<<DOINDEX 10154>>ASSIGN  10155>>ASSIGN  10156>>ASSIGN  10157>>ASSIGN  10158>>ASSIGN
     10159>>ASSIGN  10160>>ASSIGN  10161>>ASSIGN  10164<<DOINDEX 10166>>ASSIGN  10167>>ASSIGN  10168>>ASSIGN
I IN PROCEDURE MOVETOB3
     10789**DCL     10825<<ASSIGN  10826>>ASSIGN  10830>>DOWHILE 10831>>ASSIGN  10835<<ASSIGN  10835>>ASSIGN
     10839<<ASSIGN  10841>>ASSIGN  10843>>IF      10846>>DOWHILE 10852>>IF      10853>>ASSIGN  10854>>ASSIGN
     10855<<ASSIGN  10855>>ASSIGN
I IN PROCEDURE MOVKEYS
     10902**DCL     10960<<DOINDEX 10961>>ASSIGN  10962>>IF      10963>>ASSIGN  10964>>ASSIGN
I IN PROCEDURE NEWKEY
     10989**DCL     11000<<DOINDEX 11003>>ASSIGN  11004>>ASSIGN  11008>>ASSIGN
I IN PROCEDURE NEWSEG
     11063**DCL     11077<<DOINDEX 11079>>ASSIGN  11081>>ASSIGN  11086>>ASSIGN
I IN PROCEDURE PREC
     11415**DCL     11431<>CALL    11432>>IF
I IN PROCEDURE RDCONT
     11791**DCL     11840<<ASSIGN  11846>>IF      11864>>ASSIGN  11882<<ASSIGN  11882>>ASSIGN
I IN PROCEDURE READ
     11958**DCL     11962<>CALL    11963>>IF
I IN PROCEDURE REBLD_ALT
     12168**DCL     12196<<DOINDEX 12198>>ASSIGN  12200>>ASSIGN  12204>>ASSIGN
I IN PROCEDURE REMKEY
     12272**DCL     12297<<DOINDEX 12298>>ASSIGN  12307>>ASSIGN  12309>>ASSIGN
I IN PROCEDURE REMOVESEG
     12390**DCL     12398<<DOINDEX 12399>>ASSIGN  12401>>ASSIGN  12402>>ASSIGN
I IN PROCEDURE REMSEG
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1197 
     12440**DCL     12511<<ASSIGN  12513<<ASSIGN  12514>>IF
I IN PROCEDURE REUSE_ALT
     12595**DCL     12598<<DOINDEX 12599>>IF      12601>>ASSIGN  12605>>ASSIGN  12609<<DOINDEX 12610>>IF
     12612>>ASSIGN  12616>>ASSIGN
I IN PROCEDURE SETUP_ALTKEY
     12795**DCL     12828<<ASSIGN  12829>>ASSIGN  12830>>ASSIGN  12831>>ASSIGN  12832>>ASSIGN
I IN PROCEDURE SETUP_IRKEY
     12878**DCL     12903<<ASSIGN  12904>>ASSIGN  12905>>ASSIGN  12906>>ASSIGN  12907>>ASSIGN
I IN PROCEDURE SLIDE
     13120**DCL     13152<>CALL    13154>>ASSIGN  13155<>CALL    13162<<ASSIGN  13166>>ASSIGN  13171>>ASSIGN
     13173>>DOWHILE 13174>>ASSIGN  13178<<ASSIGN  13178>>ASSIGN
I IN PROCEDURE UPALTSEGS
     13538**DCL     13547<<DOINDEX 13549>>ASSIGN  13551>>ASSIGN  13556>>ASSIGN
I IN PROCEDURE WRITE
     13748**DCL     13750--IMP-SIZ 13774<<ASSIGN  13777<<ASSIGN  13779<<ASSIGN  13780>>IF      13802<>CALL
     13804>>IF
I IN PROCEDURE ZAPID
     14086**DCL     14088<>CALL    14089>>IF
I$ IN PROCEDURE SLIDE
     13118**DCL     13136<<ASSIGN  13140<<ASSIGN  13143<<ASSIGN  13145<<ASSIGN  13148>>ASSIGN  13161<>CALL
     13185>>ASSIGN  13190>>ASSIGN  13195>>ASSIGN  13197>>ASSIGN  13199>>ASSIGN  13202>>ASSIGN  13215>>ASSIGN
ICHNG IN PROCEDURE ALTCHK
      7201**DCL      7221<<ASSIGN   7250<<ASSIGN   7279>>IF
ID.COUNT
      6952**DCL      9679<<ASSIGN   9682<<ASSIGN   9689<<ASSIGN   9705<<ASSIGN   9705>>ASSIGN   9762<<ASSIGN
      9767<<ASSIGN  14091<<ASSIGN
ID.DA
      6954**DCL      7582<<ASSIGN   9270>>DOWHILE  9307>>IF       9318>>ASSIGN   9684<<ASSIGN   9701<<ASSIGN
      9769<<ASSIGN  13632<<ASSIGN
ID.GX
      6953**DCL      7583<<ASSIGN   9270>>DOWHILE  9307>>IF       9344>>IF       9349>>IF       9352>>ASSIGN
      9683<<ASSIGN   9700<<ASSIGN   9768<<ASSIGN  13633<<ASSIGN
ID$ IN PROCEDURE ZAPID
     14085**DCL     14084--PROC    14088<>CALL    14091>>ASSIGN
IDPTR$
      6918**DCL      6951--IMP-PTR  7581<<ASSIGN   7582>>ASSIGN   7583>>ASSIGN   9091<<ASSIGN   9270>>DOWHILE
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1198 
      9270>>DOWHILE  9307>>IF       9307>>IF       9318>>ASSIGN   9344>>IF       9349>>IF       9352>>ASSIGN
      9663<<ASSIGN   9679>>ASSIGN   9682>>ASSIGN   9683>>ASSIGN   9684>>ASSIGN   9689>>ASSIGN   9705>>ASSIGN
      9705>>ASSIGN   9756<<ASSIGN   9762>>ASSIGN   9767>>ASSIGN   9768>>ASSIGN   9769>>ASSIGN  11450<<ASSIGN
     11477<<ASSIGN  12004<<ASSIGN  12049<<ASSIGN  13631<<ASSIGN  13632>>ASSIGN  13633>>ASSIGN
IGNORE IN PROCEDURE MOVEN
     10699**LABEL   10698--CALLALT
IGNORE_LKEY IN PROCEDURE DELKEY
      9041**DCL      9043<<ASSIGN   9085<<ASSIGN   9102>>IF       9104>>IF
INDEX#
      6900**DCL      7011>>IF       7013<<ASSIGN   7257<<ASSIGN   7269<<ASSIGN   7282<<ASSIGN   7375<<ASSIGN
      7407>>IF       7409<<ASSIGN   7486>>ASSIGN   7488>>ASSIGN   7489>>IF       7769>>DOINDEX  7770>>ASSIGN
      7979>>IF       8023>>IF       8422>>IF       8433>>ASSIGN   8470>>IF       8470>>IF       8471>>ASSIGN
      8472>>ASSIGN   8483>>DOINDEX  8483>>DOINDEX  8483>>DOINDEX  8581>>IF       8647>>IF       8649<<ASSIGN
      8718<>CALL     8814<<ASSIGN   8942>>IF       8951<<ASSIGN   8991<<ASSIGN   8999>>IF       9001<<ASSIGN
      9088>>IF       9104>>IF       9151>>IF       9245>>IF       9676>>IF       9806>>ASSIGN  10294>>IF
     10450<<ASSIGN  10453<<ASSIGN  10456<<ASSIGN  10459<<ASSIGN  10462<<ASSIGN  10470<<ASSIGN  10487>>ASSIGN
     10649>>IF      10702>>IF      10702>>IF      10727>>IF      11008<<ASSIGN  11024>>IF      11026<<ASSIGN
     11086<<ASSIGN  11101<<ASSIGN  11109<>CALL    11196>>IF      11203>>IF      11277>>IF      11502>>IF
     11587>>IF      11670>>IF      11699>>ASSIGN  11701>>ASSIGN  11733>>ASSIGN  11735>>ASSIGN  11753>>ASSIGN
     11755>>ASSIGN  11757>>IF      12061>>IF      12125>>IF      12173<<ASSIGN  12204<<ASSIGN  12237<<ASSIGN
     12621<<ASSIGN  12719>>ASSIGN  12772<<ASSIGN  12799>>IF      12800<<ASSIGN  12802>>IF      12804>>IF
     12804>>IF      12814>>IF      12814>>IF      12833>>ASSIGN  12835<<ASSIGN  12835>>ASSIGN  12837>>ASSIGN
     12838>>ASSIGN  12839>>ASSIGN  12840>>ASSIGN  12843>>ASSIGN  12845>>ASSIGN  12847>>IF      12849>>ASSIGN
     12850>>ASSIGN  12857<<ASSIGN  12857>>ASSIGN  12882>>IF      12883<<ASSIGN  12885>>IF      12887>>IF
     12887>>IF      12894>>IF      12894>>IF      12908>>ASSIGN  12910<<ASSIGN  12910>>ASSIGN  12912>>ASSIGN
     12913>>ASSIGN  12914>>ASSIGN  12915>>ASSIGN  12917>>ASSIGN  12919>>ASSIGN  12920>>IF      12922>>ASSIGN
     12923>>ASSIGN  12932<<ASSIGN  12932>>ASSIGN  13044>>IF      13346>>ASSIGN  13348>>ASSIGN  13510>>ASSIGN
     13511>>ASSIGN  13514>>ASSIGN  13515>>ASSIGN  13556<<ASSIGN  13571<<ASSIGN  14299<<ASSIGN  14337<<ASSIGN
INDX
      6933**DCL     10031<<ASSIGN  10540<<ASSIGN  10541>>DOWHILE 10542<<ASSIGN  10542>>ASSIGN  10543>>IF
     10544>>ASSIGN  10546>>ASSIGN  10566<>CALL    10576<<ASSIGN  10800>>ASSIGN  10925<<ASSIGN  10928>>DOWHILE
     10929>>IF      10930>>ASSIGN  10932>>ASSIGN  10936<<ASSIGN  10936>>ASSIGN  13131<<ASSIGN  13133<<ASSIGN
     13139>>IF      13142>>IF      13143>>ASSIGN  13145>>ASSIGN  13173>>DOWHILE
INDX IN PROCEDURE CHKEY
      8159**DCL      8158--PROC     8164>>IF       8164>>IF       8165>>ASSIGN   8166>>ASSIGN   8176>>DOINDEX
      8176>>DOINDEX  8176>>DOINDEX
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1199 
INDX IN PROCEDURE RDCONT
     11795**DCL     11864<<ASSIGN  11866>>ASSIGN  11871>>ASSIGN
INDX IN PROCEDURE WRCONT
     13615**DCL     13677<<ASSIGN  13678>>IF      13681>>ASSIGN  13689>>ASSIGN  13695>>CALLBLT 13696>>ASSIGN
INDXCHNG IN PROCEDURE REBLD_ALT
     12170**DCL     12198<<ASSIGN  12200<<ASSIGN  12202>>IF
INITKEYTBL
      6895**DCL      8851>>ASSIGN  10131>>ASSIGN
INIT_AKEY
     10069**PROC     8900--CALL
INIT_GRAN
     10114**PROC    10090--CALL    10165--CALL
INIT_IRKEY
     10144**PROC     8902--CALL
INSRT
      6931**DCL      7970<<ASSIGN   7973<<ASSIGN   7975<<ASSIGN   7988<<ASSIGN   7990<<ASSIGN   8007<<ASSIGN
      8012<<ASSIGN   8018<<ASSIGN   8025>>IF       8054>>IF       9992>>IF       9995<<ASSIGN  10014>>IF
     10041<<ASSIGN
IRKEY$
      6940**DCL      7713<<ASSIGN   7713>>ASSIGN   7717>>ASSIGN   7718<<ASSIGN   7718>>ASSIGN   7760<<ASSIGN
      7764<<ASSIGN   7765>>ASSIGN   7825>>ASSIGN   7830>>ASSIGN
IRKEYS.K.CDA
      6447**DCL      7460>>IF      10151<<ASSIGN  10161<<ASSIGN  10168<<ASSIGN  12907<<ASSIGN  12919>>ASSIGN
IRKEYS.K.CONTIGUOUS
      6447**DCL      8164>>IF       8470>>IF
IRKEYS.K.CRECX
      6446**DCL     10155<<ASSIGN  12905<<ASSIGN  12913>>ASSIGN
IRKEYS.K.DEGENERATE
      6446**DCL      8164>>IF       8422>>IF       8470>>IF
IRKEYS.K.FDA
      6447**DCL     10147<<ASSIGN  10157<<ASSIGN  10166<<ASSIGN  11701>>ASSIGN  12887>>IF      13348>>ASSIGN
     13514>>ASSIGN
IRKEYS.K.FIRSTFIELD
      6445**DCL      7770>>ASSIGN   8166>>ASSIGN   8176>>DOINDEX  8176>>DOINDEX  8433>>ASSIGN   8472>>ASSIGN
      8483>>DOINDEX  8483>>DOINDEX
IRKEYS.K.INDXCHNG
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1200 
      6446**DCL      7215<<ASSIGN   7254<<ASSIGN  12200>>ASSIGN  12612<<ASSIGN  12616<<ASSIGN
IRKEYS.K.KEYL
      6445**DCL      8165>>ASSIGN   8471>>ASSIGN  12719>>ASSIGN  12914>>ASSIGN  12915>>ASSIGN
IRKEYS.K.LDA
      6448**DCL      7488<<ASSIGN  10148<<ASSIGN  10158<<ASSIGN  10167<<ASSIGN  11735>>ASSIGN  11755<<ASSIGN
IRKEYS.K.NFIELDS
      6445**DCL      7769>>DOINDEX  8176>>DOINDEX  8483>>DOINDEX
IRKEYS.K.RPOS
      6446**DCL     10154<<ASSIGN  12904<<ASSIGN  12912>>ASSIGN
IRKEYS.K.SEGX
      6446**DCL      7461<<ASSIGN   7461>>ASSIGN  10156<<ASSIGN  12906<<ASSIGN  12917>>ASSIGN
IRKEYS.K.TDA
      6445**DCL     10149<<ASSIGN  10159<<ASSIGN  12920>>IF      12922>>ASSIGN  13515<<ASSIGN
IRKEYS.K.TDALVL
      6445**DCL     10150<<ASSIGN  10160<<ASSIGN  12923>>ASSIGN
IRKEYS.K.UNIQUE
      6446**DCL      7245>>ASSIGN   7370>>ASSIGN   8986>>ASSIGN  11003>>ASSIGN  11081>>ASSIGN  12610>>IF
     12894>>IF      13551>>ASSIGN
IRKEYS.MINSIZE
      6444**DCL      7892>>ASSIGN   9349>>IF      13779>>ASSIGN
IRKEYS.NKEYS
      6444**DCL      7209>>ASSIGN   7364>>ASSIGN   8980>>ASSIGN  10153>>DOINDEX 10164>>DOINDEX 10997>>ASSIGN
     11075>>ASSIGN  12194>>ASSIGN  12609>>DOINDEX 12887>>IF      13545>>ASSIGN
J IN PROCEDURE KEYEXP
     10211**DCL     10248<<ASSIGN  10262>>ASSIGN  10266>>ASSIGN
J IN PROCEDURE KEYSQZ
     10361**DCL     10397<<ASSIGN  10407>>ASSIGN
J IN PROCEDURE MOVETOB3
     10790**DCL     10826<<ASSIGN  10832>>IF      10833>>ASSIGN  10834>>ASSIGN  10836<<ASSIGN  10836>>ASSIGN
     10840<<ASSIGN  10841>>ASSIGN  10843>>IF      10847>>ASSIGN  10848>>ASSIGN  10849>>IF      10856<<ASSIGN
     10856>>ASSIGN
J IN PROCEDURE REMKEY
     12266**DCL     12298<<ASSIGN  12299>>ASSIGN  12302>>IF      12303>>ASSIGN  12306>>IF
J IN PROCEDURE SLIDE
     13121**DCL     13166<<ASSIGN  13171<<ASSIGN  13175>>IF      13176>>ASSIGN  13177>>ASSIGN  13179<<ASSIGN
     13179>>ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1201 
JDCB$
      6898**DCL      6349--IMP-PTR  7008>>ASSIGN   7010>>ASSIGN   7044>>ASSIGN   7045>>ASSIGN   7046>>IF
      7063>>ASSIGN   7067>>ASSIGN   7137>>ASSIGN   7139>>ASSIGN   7143>>ASSIGN   7144>>ASSIGN   7145>>ASSIGN
      7146>>ASSIGN   7147>>ASSIGN   7156>>ASSIGN   7222>>ASSIGN   7223>>ASSIGN   7224>>IF       7247>>IF
      7247>>IF       7259>>ASSIGN   7334>>ASSIGN   7372>>IF       7372>>IF       7380>>ASSIGN   7399>>ASSIGN
      7446>>ASSIGN   7452>>IF       7457>>ASSIGN   7461>>ASSIGN   7463>>ASSIGN   7470>>ASSIGN   7470>>ASSIGN
      7471>>ASSIGN   7471>>ASSIGN   7472>>ASSIGN   7473>>ASSIGN   7476>>ASSIGN   7477>>ASSIGN   7498>>ASSIGN
      7499>>IF       7499>>IF       7507>>ASSIGN   7515>>ASSIGN   7523>>ASSIGN   7524>>ASSIGN   7527>>ASSIGN
      7581>>ASSIGN   7586>>DOUNTIL  7587>>IF       7592>>ASSIGN   7612>>ASSIGN   7613>>ASSIGN   7614>>IF
      7628>>ASSIGN   7655>>IF       7763>>ASSIGN   7874>>IF       7880>>ASSIGN   7881>>ASSIGN   7882>>IF
      7902>>IF       7902>>IF       7906>>ASSIGN   8003>>ASSIGN   8009>>ASSIGN   8020>>ASSIGN   8028>>ASSIGN
      8057>>ASSIGN   8255>>IF       8304>>ASSIGN   8444>>IF       8542>>ASSIGN   8545>>IF       8547>>ASSIGN
      8558>>ASSIGN   8564>>ASSIGN   8595>>ASSIGN   8596>>IF       8603>>IF       8605>>ASSIGN   8627>>ASSIGN
      8653>>IF       8653>>IF       8675>>ASSIGN   8690>>ASSIGN   8706>>ASSIGN   8717>>ASSIGN   8742>>ASSIGN
      8798>>IF       8801>>IF       8801>>IF       8801>>IF       8808>>ASSIGN   8818>>ASSIGN   8819>>ASSIGN
      8820>>ASSIGN   8833>>ASSIGN   8836>>IF       8839>>IF       8853>>ASSIGN   8854>>ASSIGN   8857>>ASSIGN
      8859>>ASSIGN   8861>>ASSIGN   8862>>ASSIGN   8863>>ASSIGN   8864>>ASSIGN   8865>>ASSIGN   8880>>ASSIGN
      8909>>ASSIGN   8945>>ASSIGN   8946>>ASSIGN   8947>>IF       8953>>ASSIGN   8961>>ASSIGN   8963>>ASSIGN
      8964>>ASSIGN   8964>>ASSIGN   8971>>ASSIGN   8972>>ASSIGN   8973>>IF       8988>>IF       8988>>IF
      9007>>ASSIGN   9060>>ASSIGN   9131>>ASSIGN   9146>>ASSIGN   9165>>ASSIGN   9209>>ASSIGN   9300>>IF
      9300>>IF       9300>>IF       9321>>ASSIGN   9326>>ASSIGN   9328>>ASSIGN   9330>>IF       9334>>IF
      9337>>ASSIGN   9342>>ASSIGN   9342>>ASSIGN   9352>>ASSIGN   9421>>ASSIGN   9422>>IF       9424>>ASSIGN
      9435>>IF       9435>>IF       9444>>ASSIGN   9447>>ASSIGN   9448>>ASSIGN   9510>>ASSIGN   9511>>ASSIGN
      9515>>IF       9515>>IF       9529>>ASSIGN   9537>>ASSIGN   9546>>ASSIGN   9548>>IF       9548>>IF
      9556>>ASSIGN   9563>>ASSIGN   9564>>ASSIGN   9566>>IF       9566>>IF       9606>>ASSIGN   9607>>ASSIGN
      9611>>ASSIGN   9611>>ASSIGN   9612>>ASSIGN   9612>>ASSIGN   9613>>ASSIGN   9613>>ASSIGN   9614>>ASSIGN
      9614>>ASSIGN   9615>>ASSIGN   9616>>ASSIGN   9627>>ASSIGN   9691>>ASSIGN   9694>>ASSIGN   9708>>ASSIGN
      9709>>IF       9712>>ASSIGN   9716>>ASSIGN   9717>>ASSIGN   9718>>ASSIGN   9802>>IF       9805>>IF
      9838>>ASSIGN   9888>>ASSIGN   9893>>ASSIGN   9897>>ASSIGN   9898>>IF       9907>>ASSIGN   9918>>ASSIGN
      9929>>ASSIGN   9978>>IF       9979>>ASSIGN   9983>>ASSIGN  10035>>ASSIGN  10074>>ASSIGN  10075>>ASSIGN
     10119>>ASSIGN  10120>>ASSIGN  10121>>ASSIGN  10124>>ASSIGN  10128>>ASSIGN  10149>>ASSIGN  10150>>ASSIGN
     10219>>ASSIGN  10220>>ASSIGN  10242>>ASSIGN  10245>>ASSIGN  10246>>ASSIGN  10249>>ASSIGN  10251>>ASSIGN
     10258>>IF      10258>>IF      10261>>ASSIGN  10262>>ASSIGN  10262>>ASSIGN  10272>>ASSIGN  10273>>ASSIGN
     10298>>IF      10300>>ASSIGN  10301>>ASSIGN  10302>>IF      10306>>ASSIGN  10309>>ASSIGN  10310>>ASSIGN
     10370>>IF      10370>>IF      10370>>IF      10370>>IF      10370>>IF      10383>>ASSIGN  10384>>ASSIGN
     10398>>ASSIGN  10413>>ASSIGN  10439<<ASSIGN  10440>>ASSIGN  10441>>ASSIGN  10442>>ASSIGN  10446>>IF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1202 
     10446>>IF      10473>>IF      10474>>ASSIGN  10479>>ASSIGN  10480>>ASSIGN  10634>>ASSIGN  10634>>ASSIGN
     10654>>ASSIGN  10654>>ASSIGN  10660>>ASSIGN  10660>>ASSIGN  10666>>ASSIGN  10666>>ASSIGN  10676>>ASSIGN
     10699>>ASSIGN  10711>>ASSIGN  10873>>ASSIGN  10874>>ASSIGN  10916>>ASSIGN  10917>>ASSIGN  10957>>ASSIGN
     10968>>ASSIGN  11010>>ASSIGN  11030>>ASSIGN  11031>>ASSIGN  11083>>IF      11083>>IF      11089>>ASSIGN
     11108>>ASSIGN  11136>>IF      11147>>ASSIGN  11164>>ASSIGN  11206>>ASSIGN  11216>>IF      11229>>ASSIGN
     11233>>ASSIGN  11234>>ASSIGN  11254>>ASSIGN  11314>>ASSIGN  11337>>ASSIGN  11343>>ASSIGN  11418>>ASSIGN
     11456>>ASSIGN  11486>>ASSIGN  11511>>IF      11519>>ASSIGN  11524>>ASSIGN  11537>>IF      11589>>ASSIGN
     11634>>ASSIGN  11640>>ASSIGN  11648>>ASSIGN  11654>>ASSIGN  11673>>ASSIGN  11703>>ASSIGN  11705>>ASSIGN
     11706>>ASSIGN  11707>>ASSIGN  11708>>ASSIGN  11739>>ASSIGN  11740>>ASSIGN  11741>>IF      11743>>ASSIGN
     11744>>ASSIGN  11745>>ASSIGN  11746>>ASSIGN  11799>>IF      11822>>IF      11830>>IF      11830>>IF
     11846>>IF      11853>>ASSIGN  11854>>IF      11857>>ASSIGN  11864>>ASSIGN  11867>>IF      11868>>ASSIGN
     11871>>ASSIGN  11872>>ASSIGN  11872>>ASSIGN  11874>>ASSIGN  11874>>ASSIGN  11875>>ASSIGN  11875>>ASSIGN
     11876>>ASSIGN  11876>>ASSIGN  11887>>ASSIGN  11902>>ASSIGN  11908>>ASSIGN  11930>>ASSIGN  11931>>ASSIGN
     11934>>ASSIGN  11934>>ASSIGN  11979>>ASSIGN  11980>>IF      12006>>ASSIGN  12071>>IF      12081>>ASSIGN
     12083>>ASSIGN  12092>>IF      12140>>IF      12208>>ASSIGN  12214>>ASSIGN  12224>>ASSIGN  12324>>ASSIGN
     12325>>ASSIGN  12327>>IF      12333>>ASSIGN  12336>>ASSIGN  12342>>ASSIGN  12346>>ASSIGN  12349>>ASSIGN
     12357>>ASSIGN  12357>>ASSIGN  12358>>ASSIGN  12358>>ASSIGN  12359>>ASSIGN  12360>>ASSIGN  12361>>ASSIGN
     12362>>ASSIGN  12364>>ASSIGN  12366>>ASSIGN  12367>>ASSIGN  12412>>ASSIGN  12413>>ASSIGN  12475>>ASSIGN
     12517>>ASSIGN  12520>>ASSIGN  12530>>ASSIGN  12536>>ASSIGN  12539>>ASSIGN  12546>>ASSIGN  12562>>ASSIGN
     12563>>ASSIGN  12564>>ASSIGN  12571>>ASSIGN  12572>>ASSIGN  12599>>IF      12599>>IF      12610>>IF
     12610>>IF      12656>>ASSIGN  12657>>ASSIGN  12661>>ASSIGN  12716>>ASSIGN  12723>>ASSIGN  12723>>ASSIGN
     12749>>ASSIGN  12763<<ASSIGN  12764>>ASSIGN  12765>>ASSIGN  12769>>ASSIGN  12771>>ASSIGN  12797>>ASSIGN
     12800>>ASSIGN  12802>>IF      12814>>IF      12828>>ASSIGN  12829>>ASSIGN  12830>>ASSIGN  12831>>ASSIGN
     12832>>ASSIGN  12833>>ASSIGN  12837>>ASSIGN  12838>>ASSIGN  12839>>ASSIGN  12840>>ASSIGN  12841>>ASSIGN
     12842>>ASSIGN  12843>>ASSIGN  12844>>ASSIGN  12845>>ASSIGN  12846>>ASSIGN  12849>>ASSIGN  12850>>ASSIGN
     12852>>ASSIGN  12852>>ASSIGN  12880>>ASSIGN  12883>>ASSIGN  12885>>IF      12894>>IF      12903>>ASSIGN
     12904>>ASSIGN  12905>>ASSIGN  12906>>ASSIGN  12907>>ASSIGN  12908>>ASSIGN  12912>>ASSIGN  12913>>ASSIGN
     12914>>ASSIGN  12916>>ASSIGN  12917>>ASSIGN  12918>>ASSIGN  12919>>ASSIGN  12922>>ASSIGN  12923>>ASSIGN
     12925>>ASSIGN  12925>>ASSIGN  12928>>ASSIGN  13023>>ASSIGN  13024>>ASSIGN  13025>>ASSIGN  13032>>ASSIGN
     13033>>ASSIGN  13055>>IF      13057>>ASSIGN  13060>>ASSIGN  13062>>ASSIGN  13065>>IF      13067>>IF
     13075>>DOWHILE 13075>>DOWHILE 13081>>ASSIGN  13186>>ASSIGN  13218>>ASSIGN  13224>>IF      13226>>IF
     13409>>ASSIGN  13410>>ASSIGN  13411>>ASSIGN  13411>>ASSIGN  13412>>ASSIGN  13412>>ASSIGN  13413>>ASSIGN
     13414>>ASSIGN  13424>>ASSIGN  13437>>ASSIGN  13453>>ASSIGN  13479>>ASSIGN  13480>>ASSIGN  13481>>ASSIGN
     13482>>ASSIGN  13484>>ASSIGN  13493>>ASSIGN  13504>>ASSIGN  13518>>ASSIGN  13519>>ASSIGN  13553>>IF
     13553>>IF      13565>>ASSIGN  13621>>IF      13621>>IF      13631>>ASSIGN  13645>>IF      13657>>DOUNTIL
     13666>>ASSIGN  13667>>ASSIGN  13668>>IF      13677>>ASSIGN  13678>>IF      13681>>ASSIGN  13691>>IF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1203 
     13692>>ASSIGN  13695>>CALLBLT 13703>>ASSIGN  13704>>ASSIGN  13706>>ASSIGN  13706>>ASSIGN  13707>>ASSIGN
     13707>>ASSIGN  13708>>ASSIGN  13708>>ASSIGN  13755>>IF      13759>>ASSIGN  13762>>IF      13762>>IF
     13762>>IF      13767>>IF      13768>>IF      13769>>ASSIGN  13774>>ASSIGN  13774>>ASSIGN  13780>>IF
     13789>>IF      13845>>IF      13845>>IF      13851>>ASSIGN  13860>>IF      13860>>IF      13866>>IF
     13895>>IF      13915>>IF      13915>>IF      13961>>ASSIGN  14010>>ASSIGN  14012>>ASSIGN  14020>>ASSIGN
     14043>>IF      14057>>DOCASE  14115>>ASSIGN  14119>>IF      14121>>ASSIGN  14123>>ASSIGN  14222>>ASSIGN
     14235<<ASSIGN  14236>>ASSIGN  14300>>ASSIGN  14337>>ASSIGN  14338>>ASSIGN
K$ IN PROCEDURE SETKEY
     12696**DCL     12695--PROC    12700>>ASSIGN  12720<>CALL    12725>>ASSIGN
KCHR IN PROCEDURE COMPKEY
      8413**DCL      8423>>IF       8423>>IF       8424>>IF       8424>>IF
KCHRS IN PROCEDURE COMPKEY
      8412**DCL      8413--IMP-SIZ  8419<<ASSIGN   8423>>IF       8423>>IF       8424>>IF       8424>>IF
      8432>>DOWHILE  8439<<ASSIGN   8439>>ASSIGN
KEY.SIZE IN PROCEDURE COMKEY
      8222**DCL      8254>>ASSIGN
KEY.TEXT IN PROCEDURE COMKEY
      8223**DCL      8238>>IF       8238>>IF       8244>>IF       8244>>IF       8270>>IF       8275>>IF
KEY.SIZE IN PROCEDURE GETKEY
      9797**DCL      9817<<ASSIGN
KEY.TEXT IN PROCEDURE GETKEY
      9798**DCL      9813>>ASSIGN   9818<<ASSIGN   9818>>ASSIGN
KEY.SIZE IN PROCEDURE SLIDE
     13127**DCL     13195<<ASSIGN
KEY.TEXT IN PROCEDURE SLIDE
     13128**DCL     13197<<ASSIGN  13199<<ASSIGN  13199>>ASSIGN
KEY.TEXT IN PROCEDURE WRNEWKEY
     13958**DCL     13986<<ASSIGN  13997<<ASSIGN  13997>>ASSIGN
KEY$
      6907**DCL      6419--IMP-PTR  6422--IMP-PTR  6429--IMP-PTR  7153<<ASSIGN   7153>>ASSIGN   7170>>ASSIGN
      7313<<ASSIGN   7315<<ASSIGN   7757>>ASSIGN   7759>>ASSIGN   7760>>ASSIGN   7766>>ASSIGN   8004>>IF
      8027>>ASSIGN   8091<<ASSIGN   8093<<ASSIGN   8121<<ASSIGN   8123<<ASSIGN   8131<<ASSIGN   8133<<ASSIGN
      8163<<ASSIGN   8167>>ASSIGN   8180>>ASSIGN   8229>>ASSIGN   8238>>IF       8244>>IF       8254>>ASSIGN
      8270>>IF       8275>>IF       8305<>CALL     8305<>CALL     8416>>ASSIGN   8469>>ASSIGN   8662<<ASSIGN
      8667>>IF       8960>>ASSIGN   9051>>IF       9054>>IF       9140>>IF       9152>>IF       9560<<ASSIGN
      9808>>ASSIGN   9810>>ASSIGN   9813>>ASSIGN   9815>>ASSIGN   9815>>ASSIGN   9818>>ASSIGN  10296<<ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1204 
     10304<<ASSIGN  10306<<ASSIGN  10306>>ASSIGN  10313<<ASSIGN  10315<<ASSIGN  10651>>IF      10686<<ASSIGN
     10702>>IF      11195<<ASSIGN  11279>>DOUNTIL 11471>>IF      11502>>IF      11610<<ASSIGN  11612<<ASSIGN
     11614>>ASSIGN  11616>>ASSIGN  11618>>ASSIGN  11641>>ASSIGN  11672>>DOUNTIL 11825>>IF      12062>>IF
     12278<<ASSIGN  12280<<ASSIGN  12285>>ASSIGN  12287>>ASSIGN  12289>>ASSIGN  12291<>CALL    12294>>ASSIGN
     12457<<ASSIGN  12459<<ASSIGN  12461>>ASSIGN  12463>>ASSIGN  12464>>IF      12504>>ASSIGN  12506>>ASSIGN
     12514>>IF      12525>>IF      12573<<ASSIGN  12640>>ASSIGN  12740<<ASSIGN  12742<<ASSIGN  12745>>ASSIGN
     12745>>ASSIGN  12747>>ASSIGN  12747>>ASSIGN  13034<<ASSIGN  13190<<ASSIGN  13212>>ASSIGN  13256<<ASSIGN
     13258<<ASSIGN  13281<<ASSIGN  13283<<ASSIGN  13286>>ASSIGN  13288>>ASSIGN  13289<<ASSIGN  13289>>ASSIGN
     13290>>ASSIGN  13353<<ASSIGN  13355>>ASSIGN  13357>>ASSIGN  13358<<ASSIGN  13358>>ASSIGN  13359>>ASSIGN
     13376<<ASSIGN  13378<<ASSIGN  13380>>ASSIGN  13382>>ASSIGN  13383<<ASSIGN  13383>>ASSIGN  13384>>ASSIGN
     13635>>IF      13852<<ASSIGN  13857>>IF      13916>>IF      13963>>IF      13966>>IF      13971<<ASSIGN
     13973<<ASSIGN  13974>>IF      13986>>ASSIGN  13991>>IF      13995>>ASSIGN  13996>>ASSIGN  13997>>ASSIGN
     14011>>ASSIGN  14221>>IF
KEYCHNG IN PROCEDURE NXTREC
     11187**DCL     11189<<ASSIGN  11193<<ASSIGN  11197>>IF      11250>>IF
KEYCNT
      6906**DCL      7307>>ASSIGN   7959>>IF       7972>>IF       8008>>ASSIGN   8019>>ASSIGN   8066>>IF
      8086<<ASSIGN   8090>>IF       8091>>ASSIGN   8093>>ASSIGN   8095>>IF       8114>>IF       8120>>IF
      8121>>ASSIGN   8123>>ASSIGN   8541>>ASSIGN   8551>>DOUNTIL  8554>>ASSIGN   8592>>IF       8594>>ASSIGN
      8659<<ASSIGN   8823<<ASSIGN   9425<<ASSIGN   9438<<ASSIGN   9450<<ASSIGN   9527>>IF       9555>>ASSIGN
      9620<<ASSIGN   9624>>ASSIGN   9626>>ASSIGN  10004<<ASSIGN  10007<<ASSIGN  10031>>ASSIGN  10540>>ASSIGN
     10800>>ASSIGN  10840>>ASSIGN  10860<<ASSIGN  10860>>ASSIGN  10861>>ASSIGN  10863>>IF      10925>>ASSIGN
     10960>>DOINDEX 11138>>IF      11140>>DOUNTIL 11151>>IF      11153>>DOUNTIL 11217>>IF      11319>>IF
     11596>>IF      11633>>ASSIGN  11936<<ASSIGN  12282>>IF      12297>>DOINDEX 12312>>ASSIGN  12313<<ASSIGN
     12313>>ASSIGN  12315>>IF      12320>>ASSIGN  12327>>IF      12398>>DOINDEX 12405>>IF      12444>>IF
     12454>>IF      12454>>IF      12480>>IF      12484>>IF      12508>>IF      12568<<ASSIGN  12768<<ASSIGN
     13029<<ASSIGN  13058>>IF      13061>>ASSIGN  13139>>IF      13162>>ASSIGN  13210<<ASSIGN  13210>>ASSIGN
     13211>>ASSIGN  13250>>ASSIGN  13326<<ASSIGN  13375>>IF      13376>>ASSIGN  13378>>ASSIGN  13416<<ASSIGN
     13850>>ASSIGN  14190>>IF
KEYCNT3 IN PROCEDURE MOVETOB3
     10782**DCL     10795<<ASSIGN  10802>>IF      10807<<ASSIGN  10825>>ASSIGN  10871<<ASSIGN  10871>>ASSIGN
     10872>>ASSIGN
KEYERR IN PROCEDURE COMKEY
      8292**LABEL    8231--GOTO     8256--GOTO
KEYEXP
     10207**PROC    14237--CALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1205 
KEYIN.SIZE
      6956**DCL     12701>>ASSIGN  14145>>ASSIGN  14215>>ASSIGN
KEYIN$
      6921**DCL      6955--IMP-PTR  7259<<ASSIGN   7380<<ASSIGN   7758>>ASSIGN   8168>>ASSIGN   8181>>ASSIGN
      8238>>IF       8244>>IF       8258>>IF       8258>>IF       8260<>CALL     8270>>IF       8275>>IF
      8417>>ASSIGN   8473>>ASSIGN   8487>>ASSIGN   8706<<ASSIGN   8953<<ASSIGN   9352<<ASSIGN  11010<<ASSIGN
     11031<<ASSIGN  11089<<ASSIGN  12208<<ASSIGN  12700<<ASSIGN  12701>>ASSIGN  12723<<ASSIGN  12725<<ASSIGN
     13197>>ASSIGN  13199>>ASSIGN  13986>>ASSIGN  13997>>ASSIGN  14144<<ASSIGN  14145>>ASSIGN  14214<<ASSIGN
     14215>>ASSIGN
KEYIN_SIZE
      6935**DCL      6957--IMP-SIZ  7090>>ASSIGN   7092>>ASSIGN   7756>>ASSIGN   7759>>ASSIGN   8228>>ASSIGN
     12702<<ASSIGN  12703>>IF      12703>>IF      12716<<ASSIGN  12719<<ASSIGN  12841<<ASSIGN  12915<<ASSIGN
     13123--IMP-SIZ 13128--IMP-SIZ 13195>>ASSIGN  13197>>ASSIGN  13197>>ASSIGN  13199>>ASSIGN  13199>>ASSIGN
     13953--IMP-SIZ 13958--IMP-SIZ 13986>>ASSIGN  13986>>ASSIGN  13991>>IF      13995>>ASSIGN  13996>>ASSIGN
     13997>>ASSIGN  13997>>ASSIGN  14146<<ASSIGN  14216<<ASSIGN
KEYPTR
     10292**PROC     9800--CALL
KEYSQZ
     10359**PROC    14250--CALL
KEYWORDS
      6927**DCL      7090<<ASSIGN   7092<<ASSIGN   7093>>ASSIGN   7109<<ASSIGN   9973>>ASSIGN   9975>>ASSIGN
     13212>>ASSIGN
KFIELD.FIELD
      6451**DCL      7770>>ASSIGN   8166>>ASSIGN   8178>>ASSIGN   8433>>ASSIGN   8472>>ASSIGN   8486>>ASSIGN
KFIELD$
      6944**DCL      6451--IMP-PTR  7770>>ASSIGN   8166>>ASSIGN   8178>>ASSIGN   8433>>ASSIGN   8472>>ASSIGN
      8486>>ASSIGN  10474<<ASSIGN  10476<<ASSIGN
KINIT
     10437**PROC     6981--CALL
KLB IN PROCEDURE PREVREC
     11585**DCL     11614<<ASSIGN  11616<<ASSIGN  11618>>ASSIGN
KLB IN PROCEDURE REMSEG
     12442**DCL     12461<<ASSIGN  12463<<ASSIGN  12464>>IF      12504<<ASSIGN  12506<<ASSIGN  12514>>IF
     12525>>IF
KLB IN PROCEDURE SRCHGRAN
     13247**DCL     13286<<ASSIGN  13288<<ASSIGN  13289>>ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1206 
KLB IN PROCEDURE SRCHLVL
     13321**DCL     13355<<ASSIGN  13357<<ASSIGN  13358>>ASSIGN  13380<<ASSIGN  13382<<ASSIGN  13383>>ASSIGN
KTPTR$
      6912**DCL      6432--IMP-PTR  6432--IMP-PTR  7149>>IF       7151>>ASSIGN   7152<<ASSIGN   7157>>ASSIGN
      7313>>ASSIGN   7315>>ASSIGN   7501<<ASSIGN   7502>>ASSIGN   7963>>ASSIGN   7965>>ASSIGN   8087<<ASSIGN
      8088>>ASSIGN   8091>>ASSIGN   8093>>ASSIGN   8121>>ASSIGN   8123>>ASSIGN   8131>>ASSIGN   8133>>ASSIGN
      8657<<ASSIGN   8658>>ASSIGN   8821<<ASSIGN   8822>>ASSIGN   8850<<ASSIGN   8851>>ASSIGN   9426<<ASSIGN
      9427>>ASSIGN   9439<<ASSIGN   9440>>ASSIGN   9451<<ASSIGN   9452>>ASSIGN   9621<<ASSIGN   9622>>ASSIGN
     10022>>ASSIGN  10024>>ASSIGN  10311<<ASSIGN  10312>>IF      10313>>ASSIGN  10315>>ASSIGN  10544>>ASSIGN
     10546>>ASSIGN  10841>>ASSIGN  10847>>ASSIGN  10848>>ASSIGN  10866>>ASSIGN  10930>>ASSIGN  10932>>ASSIGN
     10958<<ASSIGN  10958>>ASSIGN  10961>>ASSIGN  10964>>ASSIGN  10967>>ASSIGN  11322>>ASSIGN  11324>>ASSIGN
     11598>>ASSIGN  11610>>ASSIGN  11612>>ASSIGN  11935<<ASSIGN  11937>>ASSIGN  12278>>ASSIGN  12280>>ASSIGN
     12285>>ASSIGN  12287>>ASSIGN  12299>>ASSIGN  12309>>ASSIGN  12312>>ASSIGN  12318>>ASSIGN  12399>>ASSIGN
     12402>>ASSIGN  12407>>ASSIGN  12448>>ASSIGN  12450>>ASSIGN  12457>>ASSIGN  12459>>ASSIGN  12488>>ASSIGN
     12490>>ASSIGN  12511>>ASSIGN  12513>>ASSIGN  12569<<ASSIGN  12570>>ASSIGN  12740>>ASSIGN  12742>>ASSIGN
     12766<<ASSIGN  12767>>ASSIGN  13030<<ASSIGN  13031>>ASSIGN  13143>>ASSIGN  13145>>ASSIGN  13174>>ASSIGN
     13177>>ASSIGN  13181>>ASSIGN  13203>>ASSIGN  13206>>ASSIGN  13256>>ASSIGN  13258>>ASSIGN  13281>>ASSIGN
     13283>>ASSIGN  13327<<ASSIGN  13328>>ASSIGN  13353>>ASSIGN  13376>>ASSIGN  13378>>ASSIGN  13417<<ASSIGN
     13418>>ASSIGN  13971>>ASSIGN  13973>>ASSIGN  14194>>ASSIGN  14196>>ASSIGN
KTPTR3$ IN PROCEDURE BLDFLINK
      7443**DCL      7519<<ASSIGN   7520>>ASSIGN   7521>>ASSIGN
KTPTR3$ IN PROCEDURE MOVETOB3
     10783**DCL     10796<<ASSIGN  10797>>ASSIGN  10799>>ASSIGN  10808<<ASSIGN  10809>>ASSIGN  10831>>ASSIGN
     10834>>ASSIGN  10854>>ASSIGN  10859>>ASSIGN
LASTSEG IN PROCEDURE NXTSEG
     11306**DCL     11322<<ASSIGN  11324<<ASSIGN  11327<<ASSIGN  11329>>IF
LAST_RESULT IN PROCEDURE FINDKEY
      9417**DCL      9456<<ASSIGN   9467>>IF       9476>>DOCASE   9500>>ASSIGN   9503<<ASSIGN
LAST_RESULT IN PROCEDURE SRCHLVL
     13320**DCL     13325<<ASSIGN  13364>>IF
LCDA IN PROCEDURE GETBLINK
      9602**DCL      9606<<ASSIGN   9608<>CALL
LCDA IN PROCEDURE GETFLINK
      9833**DCL      9838<<ASSIGN   9839<>CALL
LCDA IN PROCEDURE MOVKEYS
     10901**DCL     10916<<ASSIGN  10918<>CALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1207 
LCDA IN PROCEDURE PTOEOF
     11727**DCL     11737<<ASSIGN  11742<>CALL    11746<<ASSIGN
LCDA IN PROCEDURE RDGRAN
     11928**DCL     11931<<ASSIGN  11933<>CALL
LCDA IN PROCEDURE REMKEY
     12269**DCL     12336<<ASSIGN  12337<>CALL    12342<<ASSIGN  12343<>CALL
LCDA IN PROCEDURE ULBLINK
     13435**DCL     13437<<ASSIGN  13439<>CALL
LCDA IN PROCEDURE ULFLINK
     13451**DCL     13453<<ASSIGN  13455<>CALL
LEN
      6938**DCL      7706--IMP-SIZ  7713>>ASSIGN   7717>>ASSIGN   7717>>ASSIGN   7718>>ASSIGN   7818>>DOINDEX
      8332--IMP-SIZ  8342<>CALL     8345<>CALL     8348<>CALL     8351<>CALL     8355<>CALL     8358<>CALL
      8361<>CALL     8364>>IF       8364>>IF       8365>>IF       8365>>IF       8384<>CALL     8387<>CALL
      8508--IMP-SIZ  8514>>ASSIGN   8515>>ASSIGN  12957<<ASSIGN  12960<<ASSIGN  12963<<ASSIGN  14109--IMP-SIZ
LEN IN PROCEDURE COMKEY
      8216**DCL      8219--IMP-SIZ  8223--IMP-SIZ  8234<<ASSIGN   8236<<ASSIGN   8238>>IF       8238>>IF
      8244>>IF       8244>>IF       8266<<ASSIGN   8268<<ASSIGN   8270>>IF       8270>>IF       8275>>IF
      8275>>IF       8303<>CALL     8305<>CALL     8307>>ASSIGN
LEN1 IN PROCEDURE COMKEY
      8217**DCL      8228<<ASSIGN   8233>>IF       8234>>ASSIGN   8260<>CALL     8263<<ASSIGN   8265>>IF
      8268>>ASSIGN   8292>>IF       8294>>IF       8304<<ASSIGN   8305<>CALL
LEN2 IN PROCEDURE COMKEY
      8218**DCL      8229<<ASSIGN   8230>>IF       8233>>IF       8236>>ASSIGN   8254<<ASSIGN   8255>>IF
      8263>>ASSIGN   8265>>IF       8266>>ASSIGN   8292>>IF       8294>>IF
LEVEL IN PROCEDURE ULSEARCH
     13477**DCL     13479<<ASSIGN  13480>>ASSIGN  13489>>DOUNTIL 13492<<ASSIGN  13492>>ASSIGN  13493>>ASSIGN
LKEY IN PROCEDURE DELKEY
      9040**DCL      9044<>CALL     9045>>IF       9055>>IF       9063>>IF       9080>>IF       9102>>IF
LKEYERR IN PROCEDURE DELKEY
      9102**LABEL    9066--CALLALT  9082--CALLALT
LKEYERR IN PROCEDURE DELRANGE
      9176**LABEL    9133--CALLALT
LOOP IN PROCEDURE CHKEY
      8176**LABEL    8186--EXIT
LOOP IN PROCEDURE COMPKEY
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1208 
      8432**LABEL    8436--EXIT
LOOP IN PROCEDURE COMPREC
      8483**LABEL    8490--EXIT
LOOP IN PROCEDURE DELRANGE
      9132**LABEL    9147--EXIT
LOOP IN PROCEDURE GETREC
      9881**LABEL    9884--EXIT     9919--EXIT     9923--EXIT
LOOP IN PROCEDURE GETSPACE
      9987**LABEL    9990--EXIT
LOOP IN PROCEDURE NXTREC
     11239**LABEL   11243--EXIT    11246--EXIT
LOOP IN PROCEDURE PREVREC
     11606**LABEL   11644--EXIT
LOOP IN PROCEDURE RDCONT
     11841**LABEL   11888--EXIT    11892--EXIT
LOOP IN PROCEDURE REMSEG
     12452**LABEL   12493--EXIT    12496--EXIT
LOOP IN PROCEDURE SRCHGRAN
     13253**LABEL   13265--EXIT    13276--EXIT
LOOP IN PROCEDURE WRCONT
     13643**LABEL   13646--EXIT    13654--EXIT
LOOP1 IN PROCEDURE NXTREC
     11220**LABEL   11224--EXIT    11227--EXIT
LOSTDATA IN PROCEDURE GETREC
      9919**LABEL    9911--GOTO
LOSTDATA IN PROCEDURE RDCONT
     11886**LABEL   11878--GOTO
LOW IN PROCEDURE BINSEARCH
      7301**DCL      7306<<ASSIGN   7308>>ASSIGN   7324<<ASSIGN   7330>>ASSIGN
LOW IN PROCEDURE SRCHGRAN
     13245**DCL     13249<<ASSIGN  13251>>ASSIGN  13264<<ASSIGN  13268<<ASSIGN  13274>>ASSIGN  13279>>ASSIGN
MAKE_SPACE
     10530**PROC    10016--CALL
MINSIZE IN PROCEDURE FINDIDO
      9297**DCL      9342<<ASSIGN   9343<<ASSIGN   9344>>IF
MIN_SIZE IN PROCEDURE CALCSEG
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1209 
      7872**DCL      7892<<ASSIGN   7894<<ASSIGN   7895>>IF
MISEG IN PROCEDURE REBLD_ALT
     12167**DCL     12179<<ASSIGN  12182--ASSIGN  12186<<ASSIGN  12227>>ASSIGN  12231>>ASSIGN
MKEYCNT IN PROCEDURE MOVETOB3
     10786**DCL     10800<<ASSIGN  10802>>IF      10826>>ASSIGN  10828>>ASSIGN  10839>>ASSIGN  10860>>ASSIGN
     10871>>ASSIGN
MOVCNT IN PROCEDURE KEYEXP
     10208**DCL     10228<<ASSIGN  10229>>ASSIGN  10232>>ASSIGN  10235>>ASSIGN  10236>>ASSIGN  10241>>ASSIGN
MOVCNT IN PROCEDURE KEYSQZ
     10360**DCL     10387<<ASSIGN  10388>>IF      10391>>ASSIGN  10393>>ASSIGN  10395>>ASSIGN
MOVECNT
      6934**DCL     10022<<ASSIGN  10024<<ASSIGN  10025>>IF      10028>>IF      10533<<ASSIGN  10544<<ASSIGN
     10546<<ASSIGN  10548>>IF      10549>>IF      10557>>IF      10571<<ASSIGN  10577>>IF      10581>>IF
     10802>>IF      10815<>CALL    10818>>ASSIGN  10819>>ASSIGN  10822>>ASSIGN  10823>>ASSIGN  10831>>ASSIGN
     10869>>ASSIGN  10870>>ASSIGN  10924<<ASSIGN  10930<<ASSIGN  10932<<ASSIGN  10933>>IF
MOVEN
     10620**PROC    11491--CALL
MOVERECN
     10724**PROC     9098--CALL    11484--CALL    12057--CALL
MOVETOB3
     10781**PROC    10032--CALL    10578--CALL    10583--CALL    10589--CALL    10948--CALL
MOVKEYS
     10900**PROC    14264--CALL
N IN PROCEDURE MOVEN
     10621**DCL     10628<<ASSIGN  10630>>IF      10633>>DOWHILE 10635<<ASSIGN  10635>>ASSIGN  10653<<ASSIGN
     10653>>ASSIGN  10659<<ASSIGN  10659>>ASSIGN  10663>>DOWHILE 10665<<ASSIGN  10665>>ASSIGN  10682>>IF
N IN PROCEDURE MOVERECN
     10725**DCL     10730<<ASSIGN  10732>>DOWHILE 10734<<ASSIGN  10734>>ASSIGN
N IN PROCEDURE MOVKEYS
     10903**DCL     10961<<ASSIGN  10962>>IF      10964>>ASSIGN
NEW IN PROCEDURE BLDALTSEG
      7387**LABEL    7382--CALLALT
NEW IN PROCEDURE REBLD_ALT
     12220**LABEL   12210--CALLALT
NEWKEY
     10988**PROC    14017--CALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1210 
NEWKEYF IN PROCEDURE WRNEWKEY
     13952**DCL     13962<<ASSIGN  13964<<ASSIGN  13975<<ASSIGN  13978<<ASSIGN  13982>>IF      13992<<ASSIGN
     14006>>IF
NEWSEG
     11062**PROC     7607--CALL    13659--CALL
NODUPS IN PROCEDURE ALTCHK
      7269**LABEL    7261--CALLALT
NOKEY IN PROCEDURE DELKEY
      9054**LABEL    9050--CALLALT
NOKEY IN PROCEDURE DELREC
      9220**LABEL    9214--CALLALT
NOKEY IN PROCEDURE FINDIDO
      9368**LABEL    9354--CALLALT  9355--CALLALT
NOKEY IN PROCEDURE PREC
     11516**LABEL   11454--GOTO    11467--GOTO    11470--CALLALT 11478--CALLALT
NOKEY IN PROCEDURE RDCONT
     11902**LABEL   11821--CALLALT 11826--GOTO
NOKEY IN PROCEDURE READKEY
     12078**LABEL   12045--CALLALT
NOKEY IN PROCEDURE WRITE
     13812**LABEL   13802--CALLALT
NOKEY1 IN PROCEDURE PREC
     11518**LABEL   11472--GOTO
NOKEY1 IN PROCEDURE READKEY
     12078**LABEL   12050--CALLALT 12063--GOTO
NOMORE IN PROCEDURE GETIDP
      9708**LABEL    9697--CALLALT
NOMORE IN PROCEDURE NXTKEY
     11126**DCL     11128<<ASSIGN  11132<<ASSIGN  11141>>IF      11154>>IF
NONE IN PROCEDURE DELKEY
      9095**LABEL    9090--CALLALT
NONE IN PROCEDURE FINDID
      9276**LABEL    9272--CALLALT
NONXTKEY IN PROCEDURE PREC
     11543**LABEL   11523--CALLALT
NONXTKEY IN PROCEDURE RDCONT
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1211 
     11911**LABEL   11907--CALLALT
NONXTKEY IN PROCEDURE READKEY
     12095**LABEL   12082--CALLALT
NOREC IN PROCEDURE MOVERECN
     10738**LABEL   10733--CALLALT
NOREC IN PROCEDURE READKEY
     12101**LABEL   12057--CALLALT
NORM_SEG IN PROCEDURE CALC_INSRT
      8001**LABEL    7996--GOTO
NOSQZ IN PROCEDURE KEYSQZ
     10422**LABEL   10385--CALLALT 10389--GOTO    10409--CALLALT
NOTFIND IN PROCEDURE WRKEY
     13886**LABEL   13856--CALLALT
NOTFIND1 IN PROCEDURE WRKEY
     13892**LABEL   13853--GOTO    13858--GOTO
NUMENTS IN PROCEDURE ALTCHK
      7199**DCL      7207<<ASSIGN   7209<<ASSIGN   7211>>DOINDEX  7228>>DOINDEX
NUMENTS IN PROCEDURE BLDALTSEG
      7358**DCL      7362<<ASSIGN   7364<<ASSIGN   7366>>DOINDEX
NUMENTS IN PROCEDURE DELETE
      8939**DCL      8978<<ASSIGN   8980<<ASSIGN   8982>>DOINDEX
NUMENTS IN PROCEDURE NEWKEY
     10990**DCL     10997<<ASSIGN  10998<<ASSIGN  11000>>DOINDEX
NUMENTS IN PROCEDURE NEWSEG
     11064**DCL     11073<<ASSIGN  11075<<ASSIGN  11077>>DOINDEX
NUMENTS IN PROCEDURE REBLD_ALT
     12169**DCL     12192<<ASSIGN  12194<<ASSIGN  12196>>DOINDEX
NUMENTS IN PROCEDURE UPALTSEGS
     13539**DCL     13543<<ASSIGN  13545<<ASSIGN  13547>>DOINDEX
NUMWRDS
        90**DCL     10907>>IF      10920>>IF      10933>>IF      10953<>CALL    10954>>ASSIGN  10955>>ASSIGN
     10956>>ASSIGN  10957>>ASSIGN  10958>>ASSIGN  10961>>ASSIGN
NXTEOF IN PROCEDURE REMSEG
     12542**LABEL   12533--CALLALT
NXTKEY
     11125**PROC     8001--CALL     8666--CALL    11212--CALL    11259--CALL    11280--CALL    12533--CALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1212 
     13077--CALL    14279--CALL    14301--CALL
NXTKEYNM IN PROCEDURE NXTKEY
     11131**ENTRY   10254--CALL    10402--CALL    14319--CALL
NXTR IN PROCEDURE NXTREC
     11195**LABEL   11190--GOTO
NXTREC
     11186**PROC     9134--CALL     9532--CALL    11285--CALL    12132--CALL    14339--CALL
NXTRECND
     11275**PROC     8826--CALL     9231--CALL    10632--CALL    10636--CALL    10698--CALL    11470--CALL
     11523--CALL    11907--CALL    12082--CALL    12126--CALL    14062--CALL
NXTRECNM IN PROCEDURE NXTREC
     11192**ENTRY    7985--CALL     8711--CALL     8735--CALL     9272--CALL     9697--CALL    10733--CALL
     12130--CALL
NXTSEG
     11304**PROC     7401--CALL     7659--CALL     7983--CALL     9914--CALL    10268--CALL    10409--CALL
     11221--CALL    11240--CALL    11883--CALL    12183--CALL    12188--CALL    12230--CALL    12466--CALL
     12482--CALL    13561--CALL    13650--CALL    13712--CALL    14353--CALL
ODD IN PROCEDURE BUILD_NIBFIELD
      7802**DCL      7814<<ASSIGN   7815>>IF       7816<<ASSIGN   7819>>ASSIGN   7820>>IF
OLD_MISEG
      6923**DCL      7590<<ASSIGN   7593>>IF       7599--ASSIGN   7622<<ASSIGN   7634>>IF       7637--ASSIGN
     13560>>DOWHILE 13671<<ASSIGN  13673--ASSIGN
ONE_GRAN IN PROCEDURE KEYSQZ
     10415**LABEL   10380--GOTO
ORG
      6909**DCL      7089>>IF       7206>>IF       7212>>IF       7229>>IF       7242>>IF       7251>>IF
      7361>>IF       7367>>IF       7454>>IF       7485>>IF       7891>>IF       8056>>IF       8226>>IF
      8226>>IF       8252>>IF       8899>>IF       8977>>IF       8983>>IF       9045>>IF       9215>>IF
      9339>>IF       9514>>IF       9547>>IF       9565>>IF       9660>>IF       9752>>IF       9802>>IF
      9805>>IF       9807>>IF       9811>>DOCASE   9979<<ASSIGN   9981<<ASSIGN  10251<<ASSIGN  10294>>IF
     10305>>IF      10441<<ASSIGN  10478>>IF      10549>>IF      10996>>IF      11002>>IF      11072>>IF
     11078>>IF      11441>>IF      11441>>IF      11461>>IF      11613>>IF      11698>>IF      11732>>IF
     11752>>IF      11818>>IF      11980>>IF      11999>>IF      11999>>IF      12041>>IF      12191>>IF
     12197>>IF      12460>>IF      12503>>IF      12597>>IF      12674>>IF      12698>>IF      12715>>IF
     12744>>IF      12770<<ASSIGN  13191>>IF      13196>>IF      13222>>IF      13285>>IF      13345>>IF
     13354>>IF      13379>>IF      13509>>IF      13542>>IF      13548>>IF      13771>>IF      13776>>IF
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1213 
     13795>>IF      13984>>IF      13989>>IF      14111>>IF      14300<<ASSIGN  14338<<ASSIGN
P$ IN PROCEDURE MOVKEYS
     10904**DCL     10952<<ASSIGN  10953<>CALL
P1$ IN PROCEDURE KEYEXP
     10209**DCL     10229<<ASSIGN  10233>>ASSIGN  10248>>ASSIGN
P1$ IN PROCEDURE KEYSQZ
     10362**DCL     10391<<ASSIGN  10394>>ASSIGN  10397>>ASSIGN
P1$ IN PROCEDURE MOVETOB3
     10787**DCL     10819<<ASSIGN  10820>>ASSIGN
P2$ IN PROCEDURE KEYEXP
     10210**DCL     10230<<ASSIGN  10233>>ASSIGN
P2$ IN PROCEDURE KEYSQZ
     10363**DCL     10392<<ASSIGN  10394>>ASSIGN
P3$ IN PROCEDURE MOVETOB3
     10785**DCL     10799<<ASSIGN  10809<<ASSIGN  10815<>CALL    10820>>ASSIGN
PFIL
     11357**PROC     6988--CALL
PKEY$
        92**DCL        87--PROC    12639--IF      12640<<ASSIGN  14141--ENTRY   14186--ENTRY   14211--ENTRY
     14276--ENTRY   14296--ENTRY   14316--ENTRY
PKEYIN$
        93**DCL        87--PROC    14141--ENTRY   14144>>ASSIGN  14211--ENTRY   14214>>ASSIGN
PMMEINT IN PROCEDURE PREC
     11523**LABEL   11494--GOTO
PREC
     11413**PROC     6997--CALL
PRECN IN PROCEDURE PREC
     11491**LABEL   11521--GOTO
PREVREC
     11582**PROC     8600--CALL     8606--CALL    11678--CALL    14009--CALL
PREVRECND
     11668**PROC    10664--CALL
PSEG$
        88**DCL        87--PROC       89--REDEF      90--REDEF    6979--ENTRY   12638<<ASSIGN  14141--ENTRY
     14163--ENTRY   14168<<ASSIGN  14170<<ASSIGN  14186--ENTRY   14211--ENTRY   14248--ENTRY   14261--ENTRY
     14276--ENTRY   14296--ENTRY   14316--ENTRY   14350--ENTRY   14354<<ASSIGN  14356<<ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1214 
PSEGCNT
        91**DCL        87--PROC    14141--ENTRY   14147>>ASSIGN  14163--ENTRY   14166>>ASSIGN  14186--ENTRY
     14191<<ASSIGN  14194<<ASSIGN  14196<<ASSIGN  14211--ENTRY   14276--ENTRY   14296--ENTRY   14316--ENTRY
PTOBOF
     11693**PROC     6994--CALL     8656--CALL    11360--CALL    11423--CALL
PTOEOF
     11726**PROC     6991--CALL     8085--CALL    11362--CALL    11424--CALL    13068--CALL
PTR$ IN PROCEDURE GETIDP
      9652**DCL      9695<<ASSIGN   9700>>ASSIGN   9701>>ASSIGN   9702<<ASSIGN   9702>>ASSIGN
RDCONT
     11790**PROC    11976--CALL
RDGRAN
     11927**PROC     7690--CALL     9586--CALL
READ
     11957**PROC     6985--CALL
READKEY
     12038**PROC    11994--CALL
READNOKEY
     12120**PROC    12008--CALL
REBLD_ALT
     12166**PROC     7280--CALL    12620--CALL
REC$
      6939**DCL      7716>>ASSIGN   7758<<ASSIGN   7766<<ASSIGN   7813>>ASSIGN
RECFIELD.DECFIELD.LEN
      6466**DCL     12957>>ASSIGN  12987>>ASSIGN  12991>>ASSIGN
RECFIELD.FIELD
      6466**DCL      6466--REDEF
RECFIELD.FIELD.LEN
      6466**DCL     12960>>ASSIGN  12963>>ASSIGN  12994>>ASSIGN  12997>>ASSIGN
RECFIELD.FIELD.TYPE
      6466**DCL      7708>>DOCASE   8340>>DOCASE  12951>>DOCASE  12983>>DOCASE
RECFIELD$
      6942**DCL      6459--IMP-PTR  7708>>DOCASE   8340>>DOCASE  10479<<ASSIGN  10483<<ASSIGN  12951>>DOCASE
     12957>>ASSIGN  12960>>ASSIGN  12963>>ASSIGN  12983>>DOCASE  12987>>ASSIGN  12991>>ASSIGN  12994>>ASSIGN
     12997>>ASSIGN
RECNUM
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1215 
      6917**DCL      9097<<ASSIGN  10730>>ASSIGN  11483<<ASSIGN  12056<<ASSIGN
REMKEY
     12264**PROC    12516--CALL    12527--CALL    14368--CALL
REMOVESEG
     12387**PROC    12453--CALL    12470--CALL
REMSEG
     12439**PROC     8714--CALL
REPOS IN PROCEDURE FINDIDO
      9296**DCL      9299<<ASSIGN   9309<<ASSIGN   9316>>IF
RERR IN PROCEDURE KEYEXP
     10278**LABEL   10238--CALLALT
RESTOREPOS
     12560**PROC     7284--CALL     7395--CALL     7411--CALL     8954--CALL     9003--CALL    11028--CALL
     11103--CALL    11425--CALL    11836--CALL    12175--CALL    12215--CALL    12239--CALL    12623--CALL
     13573--CALL    13628--CALL
RESULT
      6915**DCL      7234<<ASSIGN   7236<<ASSIGN   7240>>IF       7319>>DOCASE   8096<<ASSIGN   8116<<ASSIGN
      8127>>IF       8127>>IF       8137>>IF       8137>>IF       8140<<ASSIGN   8171<<ASSIGN   8173<<ASSIGN
      8185>>IF       8225<<ASSIGN   8240<<ASSIGN   8246<<ASSIGN   8272<<ASSIGN   8277<<ASSIGN   8295<<ASSIGN
      8297<<ASSIGN   8342<>CALL     8345<>CALL     8348<>CALL     8351<>CALL     8355<>CALL     8358<>CALL
      8361<>CALL     8366<<ASSIGN   8368<<ASSIGN   8373<>CALL     8378<>CALL     8384<>CALL     8387<>CALL
      8418<<ASSIGN   8425<<ASSIGN   8427<<ASSIGN   8435>>IF       8444>>IF       8445<<ASSIGN   8476<<ASSIGN
      8478<<ASSIGN   8489>>IF       8520<<ASSIGN   8522<<ASSIGN   9068>>IF       9084>>IF       9142<<ASSIGN
      9144>>IF       9419<<ASSIGN   9429>>IF       9433>>IF       9456>>ASSIGN   9457>>DOWHILE  9459>>DOCASE
      9469<<ASSIGN   9500<<ASSIGN   9503>>ASSIGN  13262>>DOCASE  13323<<ASSIGN  13324>>DOUNTIL 13325>>ASSIGN
     13331>>DOCASE  13334<<ASSIGN  13349<<ASSIGN  13360<<ASSIGN  13367<<ASSIGN  13385<<ASSIGN  13848>>IF
REUSE_ALT
     12594**PROC    14014--CALL
RPOS IN PROCEDURE SHAREPOS
     13021**DCL     13057<<ASSIGN  13081>>ASSIGN
S$CU$
      6617**DCL      8669>>IF       8736>>IF       9157>>IF      10638>>IF      10668>>IF
SAVE.CRECX IN PROCEDURE GETIDP
      9655**DCL      9692<<ASSIGN   9714>>ASSIGN
SAVE.DA IN PROCEDURE GETIDP
      9656**DCL      9691<<ASSIGN   9709>>IF       9712>>ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1216 
SAVE.RPOS IN PROCEDURE GETIDP
      9657**DCL      9694<<ASSIGN   9718>>ASSIGN
SAVE.SEGX IN PROCEDURE GETIDP
      9658**DCL      9693<<ASSIGN   9715>>ASSIGN
SAVE_ERR IN PROCEDURE PREC
     11416**DCL     11531<<ASSIGN  11534>>ASSIGN
SAVE_ERROR IN PROCEDURE BLDREC
      7577**DCL      7584<<ASSIGN   7653<<ASSIGN   7663>>IF       7665>>ASSIGN
SAVE_INDEX#
      6901**DCL      7011>>IF       7013>>ASSIGN   8999>>IF       9001>>ASSIGN  10487<<ASSIGN
SAVE_MISEG IN PROCEDURE REMSEG
     12441**DCL     12469<<ASSIGN  12472>>ASSIGN
SEG$
      6903**DCL      6425--IMP-PTR  7059>>ASSIGN   7064>>ASSIGN   7065>>ASSIGN   7066>>ASSIGN   7070>>ASSIGN
      7154<<ASSIGN   7154>>ASSIGN   7162>>IF       7167>>IF       7218>>ASSIGN   7220>>ASSIGN   7226>>ASSIGN
      7396<<ASSIGN   7400>>ASSIGN   7412<<ASSIGN   7582>>ASSIGN   7583>>ASSIGN   7586>>DOUNTIL  7590>>ASSIGN
      7591>>ASSIGN   7593>>IF       7595>>ASSIGN   7606>>IF       7609>>IF       7611>>ASSIGN   7616>>ASSIGN
      7619>>ASSIGN   7622>>ASSIGN   7626>>ASSIGN   7631>>ASSIGN   7634>>IF       7657>>ASSIGN   7982>>DOWHILE
      8029<<ASSIGN   8587<<ASSIGN   8589>>IF       8626>>ASSIGN   8663<<ASSIGN   8710>>DOWHILE  8944>>ASSIGN
      8949>>ASSIGN   8968>>ASSIGN   8970>>ASSIGN   8975>>ASSIGN   9270>>DOWHILE  9270>>DOWHILE  9306<<ASSIGN
      9307>>IF       9307>>IF       9561<<ASSIGN   9678>>IF       9683>>ASSIGN   9684>>ASSIGN   9700>>ASSIGN
      9701>>ASSIGN   9760>>IF       9768>>ASSIGN   9769>>ASSIGN   9882>>ASSIGN   9883>>IF       9902>>ASSIGN
      9905>>ASSIGN   9907>>ASSIGN   9916>>IF       9996<<ASSIGN  10042<<ASSIGN  10255>>DOWHILE 10256>>IF
     10258>>IF      10258>>IF      10265>>ASSIGN  10266>>ASSIGN  10266>>ASSIGN  10295>>IF      10299>>ASSIGN
     10304>>ASSIGN  10403>>DOWHILE 10404>>IF      10406>>ASSIGN  10407>>ASSIGN  10407>>ASSIGN  10444<<ASSIGN
     10571>>ASSIGN  10685<<ASSIGN  10702>>IF      11029<<ASSIGN  11104<<ASSIGN  11222>>IF      11223>>IF
     11235<<ASSIGN  11241>>IF      11242>>IF      11249>>IF      11332<<ASSIGN  11335<<ASSIGN  11344<<ASSIGN
     11502>>IF      11607<<ASSIGN  11622>>DOWHILE 11626<<ASSIGN  11649<<ASSIGN  11655<<ASSIGN  11842>>ASSIGN
     11843>>IF      11846>>IF      11861>>ASSIGN  11866>>ASSIGN  11882>>ASSIGN  11885>>IF      12176<<ASSIGN
     12179>>ASSIGN  12184>>IF      12186>>ASSIGN  12227>>ASSIGN  12231>>ASSIGN  12240<<ASSIGN  12392>>ASSIGN
     12396<>CALL    12445>>ASSIGN  12448>>ASSIGN  12450>>ASSIGN  12467>>IF      12469>>ASSIGN  12472>>ASSIGN
     12480>>IF      12483>>IF      12485>>ASSIGN  12488>>ASSIGN  12490>>ASSIGN  12492>>IF      12495>>IF
     12499>>IF      12518<<ASSIGN  12529<<ASSIGN  12534<<ASSIGN  12544<<ASSIGN  12574<<ASSIGN  12638>>ASSIGN
     12654>>IF      12656>>ASSIGN  12657>>ASSIGN  12745<<ASSIGN  12747<<ASSIGN  12748>>ASSIGN  13035<<ASSIGN
     13075>>DOWHILE 13075>>DOWHILE 13136>>ASSIGN  13212<<ASSIGN  13215<<ASSIGN  13217>>ASSIGN  13560>>DOWHILE
     13564>>ASSIGN  13574<<ASSIGN  13632>>ASSIGN  13633>>ASSIGN  13644>>IF      13645>>IF      13649>>ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1217 
     13657>>DOUNTIL 13658>>IF      13661>>ASSIGN  13662>>IF      13671>>ASSIGN  13674>>ASSIGN  13678>>IF
     13679>>IF      13679>>IF      13681>>ASSIGN  13684>>ASSIGN  13684>>ASSIGN  13689>>ASSIGN  13696>>ASSIGN
     13699>>ASSIGN  13711>>ASSIGN  14168>>ASSIGN  14170>>ASSIGN  14354>>ASSIGN  14356>>ASSIGN
SEGCNT
      6919**DCL      7093>>ASSIGN   7110>>ASSIGN   7162>>IF       7903<<ASSIGN   7906<<ASSIGN   7908<<ASSIGN
      7908>>ASSIGN   9973<<ASSIGN   9974<<ASSIGN   9974>>ASSIGN   9975>>ASSIGN  12180<<ASSIGN  12187<<ASSIGN
     12228>>IF      12414<<ASSIGN  12414>>ASSIGN  12445<<ASSIGN  12448<<ASSIGN  12450<<ASSIGN  12452>>DOWHILE
     12454>>IF      12476<<ASSIGN  12480>>IF      12485<<ASSIGN  12488<<ASSIGN  12490<<ASSIGN  12499>>IF
     14147<<ASSIGN  14166<<ASSIGN
SEGX
      6902**DCL      7147>>ASSIGN   7155<<ASSIGN   7155>>ASSIGN   7156>>ASSIGN   7396>>ASSIGN   7412>>ASSIGN
      7987>>IF       8026<<ASSIGN   8027<<ASSIGN   8028>>ASSIGN   8029>>ASSIGN   8587>>ASSIGN   8589>>IF
      8592>>IF       8661<<ASSIGN   9304>>IF       9306>>ASSIGN   9531<<ASSIGN   9562<<ASSIGN   9693>>ASSIGN
      9715<<ASSIGN   9717>>ASSIGN   9915>>IF      11029>>ASSIGN  11104>>ASSIGN  11196>>IF      11205<<ASSIGN
     11219<<ASSIGN  11234<<ASSIGN  11235>>ASSIGN  11253<<ASSIGN  11310<<ASSIGN  11310>>ASSIGN  11311>>DOWHILE
     11315<<ASSIGN  11329>>IF      11331<<ASSIGN  11335>>ASSIGN  11337>>ASSIGN  11342<<ASSIGN  11594>>IF
     11598<<ASSIGN  11600<<ASSIGN  11600>>ASSIGN  11602<<ASSIGN  11605<<ASSIGN  11605>>ASSIGN  11607>>ASSIGN
     11622>>DOWHILE 11622>>DOWHILE 11625<<ASSIGN  11625>>ASSIGN  11626>>ASSIGN  11629>>IF      11632<<ASSIGN
     11637>>IF      11641<<ASSIGN  11648>>ASSIGN  11649>>ASSIGN  11653<<ASSIGN  11884>>IF      12176>>ASSIGN
     12178>>DOUNTIL 12240>>ASSIGN  12519<<ASSIGN  12528<<ASSIGN  12535<<ASSIGN  12545<<ASSIGN  12572<<ASSIGN
     12748<<ASSIGN  12749>>ASSIGN  12771<<ASSIGN  12844<<ASSIGN  12918<<ASSIGN  13033<<ASSIGN  13217<<ASSIGN
     13218>>ASSIGN  13574>>ASSIGN  14191>>ASSIGN  14194>>ASSIGN  14196>>ASSIGN
SETARG
     12636**PROC    14149--CALL    14151--CALL    14197--CALL    14199--CALL    14218--CALL    14220--CALL
     14280--CALL    14282--CALL    14302--CALL    14304--CALL    14320--CALL    14322--CALL
SETID
     12652**PROC     7656--CALL     8799--CALL    11512--CALL    11538--CALL    11823--CALL    12072--CALL
     12093--CALL    12141--CALL
SETINDEX
     12672**PROC     7014--CALL     7258--CALL     7283--CALL     7376--CALL     7410--CALL     8650--CALL
      8705--CALL     8815--CALL     8952--CALL     9002--CALL    10465--CALL    11009--CALL    11027--CALL
     11087--CALL    11102--CALL    12174--CALL    12205--CALL    12238--CALL    12622--CALL    13557--CALL
     13572--CALL
SETKEY
     12695**PROC     7272--CALL     9048--CALL     9066--CALL     9082--CALL     9133--CALL    11463--CALL
     11817--CALL    12040--CALL    13842--CALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1218 
SETPTRS
     12737**PROC     8561--CALL     9512--CALL     9538--CALL    11165--CALL    13072--CALL
SETUP
     12761**PROC    10250--CALL    10368--CALL    14143--CALL    14165--CALL    14188--CALL    14213--CALL
     14263--CALL    14278--CALL    14298--CALL    14318--CALL    14336--CALL    14352--CALL    14367--CALL
SETUP_ALTKEY
     12794**PROC    12675--CALL
SETUP_IRKEY
     12877**PROC    12677--CALL
SET_LEN
     12949**PROC     7771--CALL     8339--CALL
SET_SIZE
     12979**PROC     8438--CALL     8491--CALL
SHAREPOS
     13020**PROC     9224--CALL     9303--CALL     9313--CALL    10626--CALL    12123--CALL    14055--CALL
SIZE IN PROCEDURE ALLOCATE
      7131**DCL      7151<<ASSIGN   7153>>ASSIGN   7154>>ASSIGN   7155>>ASSIGN
SIZE IN PROCEDURE ALTCHK
      7203**DCL      7204--IMP-SIZ  7231<<ASSIGN   7232>>IF       7232>>IF
SIZE IN PROCEDURE BUILD_IRKEY
      7750**DCL      7753--IMP-SIZ  7756<<ASSIGN   7757>>ASSIGN   7763<<ASSIGN   7765>>ASSIGN
SIZE IN PROCEDURE CALC_SPACE
      8050**DCL      8052<<ASSIGN   8063<<ASSIGN   8063>>ASSIGN   8066>>IF
SIZE IN PROCEDURE COMPKEY
      8414**DCL      8438<>CALL     8439>>ASSIGN   8440>>ASSIGN   8441>>ASSIGN
SIZE IN PROCEDURE COMPREC
      8467**DCL      8491<>CALL     8492>>ASSIGN
SIZE IN PROCEDURE GETKEY
      9794**DCL      9795--IMP-SIZ  9798--IMP-SIZ  9806<<ASSIGN   9808<<ASSIGN   9810<<ASSIGN   9813>>ASSIGN
      9813>>ASSIGN   9815>>ASSIGN   9817>>ASSIGN   9818>>ASSIGN   9818>>ASSIGN
SIZE IN PROCEDURE KEYEXP
     10212**DCL     10213--IMP-SIZ 10232<<ASSIGN  10233>>ASSIGN  10233>>ASSIGN
SIZE IN PROCEDURE KEYSQZ
     10364**DCL     10365--IMP-SIZ 10393<<ASSIGN  10394>>ASSIGN  10394>>ASSIGN
SIZE IN PROCEDURE MOVETOB3
     10788**DCL     10792--IMP-SIZ 10818<<ASSIGN  10820>>ASSIGN  10820>>ASSIGN  10847<<ASSIGN  10850<<ASSIGN
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1219 
     10850>>ASSIGN  10852>>IF      10854>>ASSIGN
SIZE IN PROCEDURE RDCONT
     11793**DCL     11796--IMP-SIZ 11868<<ASSIGN  11870<<ASSIGN  11871>>ASSIGN  11871>>ASSIGN  11872>>ASSIGN
     11874>>ASSIGN  11875>>ASSIGN  11876>>ASSIGN  11877>>IF
SIZE IN PROCEDURE REMKEY
     12265**DCL     12289<<ASSIGN  12291<>CALL
SIZE IN PROCEDURE REMOVESEG
     12388**DCL     12392<<ASSIGN  12394>>IF      12396<>CALL
SIZE IN PROCEDURE SET_SIZE
     12981**DCL     12979--PROC    12987<<ASSIGN  12991<<ASSIGN  12994<<ASSIGN  12997<<ASSIGN
SIZE IN PROCEDURE SLIDE
     13122**DCL     13125--IMP-SIZ 13184<<ASSIGN  13185>>ASSIGN
SIZE IN PROCEDURE WRCONT
     13618**DCL     13619--IMP-SIZ 13692<<ASSIGN  13694<<ASSIGN  13695>>CALLBLT 13695>>CALLBLT 13696>>ASSIGN
     13706>>ASSIGN  13707>>ASSIGN  13708>>ASSIGN
SIZE IN PROCEDURE ZAPKEY
     14104**DCL     14106--IMP-SIZ 14115<<ASSIGN  14116>>ASSIGN
SLIDE
     13117**PROC    10047--CALL
SPARE
      6932**DCL      8053<<ASSIGN   8057<<ASSIGN   8060<<ASSIGN   8062<<ASSIGN   8063>>ASSIGN  10011<<ASSIGN
     10025>>IF
SRCH IN PROCEDURE FINDKEY
      9457**LABEL    9461--EXIT     9470--EXIT
SRCHGRAN
     13243**PROC    13333--CALL    13366--CALL
SRCHLVL
     13319**PROC    13490--CALL
START$
      6943**DCL      6503--IMP-PTR  7716>>ASSIGN   7813>>ASSIGN   7814>>ASSIGN   8167>>ASSIGN   8168>>ASSIGN
      8180>>ASSIGN   8181>>ASSIGN   8473>>ASSIGN   8487>>ASSIGN  10480<<ASSIGN  10484<<ASSIGN
STEMP_FIELD IN PROCEDURE COMPSBIN
      8509**DCL      8510--REDEF    8517>>IF       8519>>IF
STEMP_FIELDIN IN PROCEDURE COMPSBIN
      8511**DCL      8512--REDEF    8517>>IF       8519>>IF
SWITCH1_3
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1220 
     13405**PROC    10033--CALL    10040--CALL    10584--CALL
T IN PROCEDURE WRCONT
     13616**DCL     13681<<ASSIGN  13682>>IF      13683<<ASSIGN  13684>>ASSIGN  13685>>ASSIGN  13686>>ASSIGN
T$ IN PROCEDURE DELEND
      8796**DCL      8881<<ASSIGN   8882<>CALL     8883>>ASSIGN   8884>>ASSIGN   8885>>ASSIGN   8886<<ASSIGN
      8888<>CALL     8889>>ASSIGN   8890>>ASSIGN   8891>>ASSIGN
TBUF$ IN PROCEDURE GETSPACE
      9969**DCL     10002<<ASSIGN  10006>>ASSIGN
TCRECX IN PROCEDURE BINSEARCH
      7303**DCL      7308<<ASSIGN   7310>>DOUNTIL  7311>>ASSIGN   7330<<ASSIGN
TCRECX IN PROCEDURE MAKE_SPACE
     10531**DCL     10535<<ASSIGN  10537<<ASSIGN  10541>>DOWHILE 10576>>ASSIGN
TCRECX IN PROCEDURE WRNEWKEY
     13950**DCL     13969<<ASSIGN  13970>>IF      13971>>ASSIGN  13973>>ASSIGN  13980<<ASSIGN  14008>>IF
TEMP IN PROCEDURE BUILD_NIBFIELD
      7804**DCL      7821<<ASSIGN   7823<<ASSIGN   7827>>ASSIGN   7829>>ASSIGN
TEMP IN PROCEDURE SRCHGRAN
     13246**DCL     13251<<ASSIGN  13254>>ASSIGN  13274<<ASSIGN  13275>>IF
TEMP_CHAR
      6947**DCL     12701<<ASSIGN  12702>>ASSIGN  13803<<ASSIGN  13804>>IF      14145<<ASSIGN  14146>>ASSIGN
     14215<<ASSIGN  14216>>ASSIGN
TOT IN PROCEDURE WRCONT
     13613**DCL     13642<<ASSIGN  13645>>IF      13649<<ASSIGN  13649>>ASSIGN  13677>>ASSIGN  13711<<ASSIGN
     13711>>ASSIGN
TOTSIZE
      6926**DCL      7093<<ASSIGN   7110<<ASSIGN   8066>>IF       9971>>IF       9975<<ASSIGN  10025>>IF
     10028>>IF      10548>>IF      10549>>IF      10553>>IF      10577>>IF      10581>>IF      13161<>CALL
     13174>>ASSIGN  13184>>ASSIGN  13219>>ASSIGN  13220>>ASSIGN
TRY_FORWARD IN PROCEDURE FINDKEY
      9485**LABEL    9495--CALLALT
TSIZE IN PROCEDURE CALC_INSRT
      7956**DCL      7960<<ASSIGN   7963<<ASSIGN   7965<<ASSIGN   7969>>IF
TSIZE IN PROCEDURE MOVETOB3
     10791**DCL     10813<<ASSIGN  10814>>IF      10815<>CALL    10831<<ASSIGN  10832>>IF      10834>>ASSIGN
     10841<<ASSIGN  10844<<ASSIGN  10844>>ASSIGN  10847>>ASSIGN
TSIZE IN PROCEDURE REMKEY
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1221 
     12267**DCL     12299<<ASSIGN  12300>>IF      12309>>ASSIGN
TSIZE IN PROCEDURE REMOVESEG
     12389**DCL     12399<<ASSIGN  12400>>IF      12402>>ASSIGN
TSIZE IN PROCEDURE SLIDE
     13119**DCL     13148<<ASSIGN  13150>>IF      13159>>IF      13161<>CALL    13174<<ASSIGN  13175>>IF
     13177>>ASSIGN  13202<<ASSIGN  13203>>ASSIGN  13204>>IF
TYPE IN PROCEDURE BUILD_IRKEY
      7749**DCL      7748--PROC     7755>>IF
UKEY.SIZE IN PROCEDURE ZAPKEY
     14108**DCL     14112<<ASSIGN
ULBLINK
     13434**PROC    13338--CALL
ULFLINK
     13450**PROC    13372--CALL
ULSEARCH
     13476**PROC     9437--CALL
UNIQUE IN PROCEDURE ALTCHK
      7202**DCL      7243<<ASSIGN   7245<<ASSIGN   7247>>IF       7255>>IF
UNIQUE IN PROCEDURE BLDALTSEG
      7359**DCL      7368<<ASSIGN   7370<<ASSIGN   7372>>IF
UNIQUE IN PROCEDURE DELETE
      8940**DCL      8984<<ASSIGN   8986<<ASSIGN   8988>>IF
UNIQUE IN PROCEDURE NEWKEY
     10991**DCL     11003<<ASSIGN  11004<<ASSIGN  11006>>IF
UNIQUE IN PROCEDURE NEWSEG
     11065**DCL     11079<<ASSIGN  11081<<ASSIGN  11083>>IF
UNIQUE IN PROCEDURE UPALTSEGS
     13540**DCL     13549<<ASSIGN  13551<<ASSIGN  13553>>IF
UPALTSEGS
     13537**PROC     7601--CALL     7638--CALL    13700--CALL
USERKEY_SIZE
      6948**DCL      8419>>ASSIGN   8444>>IF      12720<>CALL
WRCONT
     13612**PROC    13756--CALL
WRITE
     13747**PROC     7003--CALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1222 
WRKEY
     13840**PROC    13798--CALL    13809--CALL
WRNEWKEY
     13949**PROC    13922--CALL
WRNOKEY
     14041**PROC    13812--CALL
ZAP IN PROCEDURE BUILD_IRKEY
      7752**DCL      7757<<ASSIGN   7765<<ASSIGN
ZAP IN PROCEDURE SLIDE
     13124**DCL     13185<<ASSIGN
ZAP IN PROCEDURE ZAPKEY
     14105**DCL     14116<<ASSIGN
ZAPID
     14084**PROC    11552--CALL    12104--CALL
ZAPKEY
     14103**PROC    10704--CALL    11506--CALL    11545--CALL    11550--CALL    11916--CALL    12102--CALL
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1223 
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1224 
              MINI UREF LISTING

B$DOCONT    2576**DCL
B$USRT$    6618**DCL
BUFNUM IN PROCEDURE BLDREC   7576**DCL
DONE IN PROCEDURE PREVREC  11648**LABEL
ERR IN PROCEDURE MOVERECN  10744**LABEL
FIELD    6959**DCL
FM$SET$    1148**DCL
FMC$CACHEPGCNT     758**DCL
FMC$CLR1    6864**DCL-ENT
FMC_CACHE$     757**DCL
FMC_CACHEPGCNT     758**DCL
FMC_CACHEPGCNT$R     758**DCL
FMC_CACHESIZ     757**DCL
FMC_CACHESIZN     757**DCL
FMC_LOCK     759**DCL
FMC_MASK     759**DCL
FMC_MASKTBL     759**DCL
FMC_STATS$     757**DCL
FMC_TYPTBL$     757**DCL
FMG$ADDKEY   14141**ENTRY
FMG$ADDSEG   14163**ENTRY
FMG$CURKEY   14186**ENTRY
FMG$FINDKEY   14211**ENTRY
FMG$KEYED      87**PROC
FMG$KEYEXP   14233**ENTRY
FMG$KEYSQZ   14248**ENTRY
FMG$KPMME    6979**ENTRY
FMG$MOVKEYS   14261**ENTRY
FMG$NXTKEY   14276**ENTRY
FMG$NXTKEYNM   14316**ENTRY
FMG$NXTKEY_ORG   14296**ENTRY
FMG$NXTREC   14334**ENTRY
PL6.E3A0      #001=FMG$KEYED File=FMG$KEYED.:E05TSI                              TUE 07/29/97 16:43 Page:1225 
FMG$NXTSEG   14350**ENTRY
FMG$REMKEY   14365**ENTRY
FM_CFUWAIT    1147**DCL
FM_CFUWGRB    1147**DCL
FM_GCT    1148**DCL
FM_GIP    1148**DCL
FM_GPSDA    1145**DCL
FM_HASH    1146**DCL
FM_MADSDA    1145**DCL
FM_PADSDA    1145**DCL
FM_SRMAX    1144**DCL
FM_SYSACCTX    1148**DCL
FM_SYSSETX    1148**DCL
FM_TRUNC    1146**DCL
FM_WSQ    1146**DCL
F_CWLK    1147**DCL
F_CWUSER    1147**DCL
F_DCBLOCK    1146**DCL
GSIZ IN PROCEDURE BLDREC   7575**DCL
I IN PROCEDURE GETREC   9877**DCL
I IN PROCEDURE WRNEWKEY  13951**DCL
KLB IN PROCEDURE PREC  11414**DCL
LCDA IN PROCEDURE RDCONT  11794**DCL
TEMP_SIZE IN PROCEDURE COMPFIELD   8333**DCL
ZAP IN PROCEDURE WRITE  13749**DCL
