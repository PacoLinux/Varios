VERSION E05

PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:1    
        1        1        /*M* LEVEL 1 MM ROUTINES FOR ALLOCATION OF STOLEN AND I/O CACHE PAGES */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND,CCC,MCL=20,CRT=5,CRM=80,CLM
                 7        =40 */
        8        8        MMD$STLPP: PROC(PPNO,WSQ) ALTRET;
        9        9
       10       10    1   DCL PPNO SBIN;                          /* Physical page # of stolen page     */
       11       11    1   DCL WSQ SBIN;                           /* Wsq of process stealing the page   */
       12       12    1   DCL TEMP SBIN;
       13       13
       14       14    1   DCL MMB$GPP ENTRY(2) ALTRET;            /* Get physical page routine          */
       15       15    1   DCL MMB$FPP ENTRY(1) ALTRET;            /* Free physical page routine         */
       16       16    1   DCL MM0$CHKPCNT ENTRY(3);               /* Page chain checker                 */
       17       17    1   DCL MM0$FINDPG ENTRY(5);
       18       18    1   DCL MMA$UNLOCKBP ENTRY;
       19       19    1   DCL MMA$LOCKBP ENTRY;
       20       20    1   DCL SC_MM13 ENTRY CONV(2,0);
       21       21    1   DCL SC_MM14 ENTRY CONV(2,0);
       22       22        /**/
       23       23    1   DCL B$PPUT$ PTR SYMREF;
       24       24        /**/
       25       25
       26       26        %INCLUDE MM_DATA_R;                     /* Include mm data references         */
       27      546        /**/
       28      547        %SUB   MM$PPUT=B$PPUT$->MM$PPUT;
       29      548        /**/
       30      549        /*F*   NAME:   MMD$STLPP                                           */
       31      550        /*F*   PURPOSE: To steal a physical page from the monitor without  */
       32      551        /*,*           assigning it to a particular user.                  */
       33      552    1           IF MM$BYP.SPPC >= MM_STLM
       34      553    2             THEN DO;
       35      554    2                 ALTRETURN;
       36      555    2               END;
PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:2    
       37      556    2             ELSE DO;
       38      557    2                 CALL MMB$GPP(PPNO,WSQ);   /* Get a physical page                */
       39      558    2                 IF PPNO = 0
       40      559    2                   THEN ALTRETURN;         /* No more physical pages             */
       41      560    3                   ELSE DO INHIBIT;
       42      561    3                       CALL MMA$LOCKBP;
       43      562    3                       MM$PPUT.PPNO(PPNO) = 0; /* Mark new tail                  */
       44      563    3                       MM$PPUT.STOLEN(PPNO) = '1'B; /* set stolen flag           */
       45      564    3                       IF MM_SPPT = 0
       46      565    3                         THEN MM_SPPH = PPNO; /* Set head if empty               */
       47      566    3                         ELSE MM$PPUT.PPNO(MM_SPPT) = PPNO;
       48      567    3                       MM_SPPT = PPNO;
       49      568    3                       MM_SPPC = MM_SPPC + 1;
       50      569    3                       CALL MMA$UNLOCKBP;
       51      570    3                     END;                  /* End of inhibited code              */
       52      571    2               END;
       53      572
       54      573    1   CHK:
       55      574        /* If MM_CHKFLG is true, then verify stolen page chain */
       56      575    1           IF MM_CHKFLG THEN CALL MM0$CHKPCNT(MM_SPPH,MM_SPPT,MM_SPPC);
       57      576    1           RETURN;
       58      577
       59      578
       60      579        /*F*   NAME:   MMD$RSPP                                            */
       61      580        /*F*   PURPOSE: To return a previously stolen page.                */
       62      581    1   MMD$RSPP: ENTRY(PPNO,WSQ) ALTRET;
       63      582    1           IF PPNO = 0                     /* Cannot be a stolen page            */
       64      583    1             THEN
       65      584    1             IF WSQ = %MONWSQ
       66      585    1               THEN
       67      586    1               CALL SC_MM13;
       68      587    1               ELSE
       69      588    1               ALTRETURN;
       70      589
       71      590    1           CALL MMA$LOCKBP;
       72      591    1           IF PPNO = MM_SPPH               /* If its the HEAD...                 */
       73      592    1             THEN MM_SPPH = MM$PPUT.PPNO(PPNO); /* Then set new head             */
PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:3    
       74      593    2             ELSE DO;
       75      594                       /* MM0$FINDPG returns the page number preceding */
       76      595                       /* The passed 'PPNO' in the page chain.         */
       77      596    2                 CALL MM0$FINDPG(PPNO,MM_SPPH,MM_SPPT,MM_SPPC,TEMP);
       78      597    2                 IF TEMP = -1 THEN         /* If ppno not a stolen PAGE...       */
       79      598    2                   IF WSQ = 1
       80      599        /**/
       81      600        /*S*    SCREECH_CODE: MMD-S$MM13                                   */
       82      601        /*S*   TYPE:   SCREECH                                             */
       83      602        /*S*   MESSAGE: Monitor called RSPP with a non-stolen page.        */
       84      603        /*S*   REMARKS: The monitor has returned a page which was never stolen */
       85      604    2                     THEN CALL SC_MM13;
       86      605    3                     ELSE DO;              /* Not the monitor                    */
       87      606    3                         CALL MMA$UNLOCKBP;
       88      607    3                         ALTRETURN;
       89      608    3                       END;
       90      609    2                 MM$PPUT.PPNO(TEMP) = MM$PPUT.PPNO(PPNO);
       91      610    2                 IF MM_SPPT = PPNO THEN MM_SPPT = TEMP;
       92      611    2               END;
       93      612    1           MM_SPPC = MM_SPPC -1;           /* Decr stolen page chain count       */
       94      613    1           IF MM_SPPC = 0 THEN MM_SPPT = 0;
       95      614    1           CALL MMA$UNLOCKBP;
       96      615    1           CALL MMB$FPP(PPNO);
       97      616
       98      617        /* Perform page chain validation if required */
       99      618    1           GOTO CHK;
      100      619
      101      620
      102      621
      103      622    1   END MMD$STLPP;

PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:4    
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMD$STLPP.

   Procedure MMD$STLPP requires 121 words for executable code.
   Procedure MMD$STLPP requires 12 words of local(AUTO) storage.

    No errors detected in file MMD$STEAL.:E05TSI    .

PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:5    

 Object Unit name= MMD$STLPP                                  File name= MMD$STEAL.:E05TOU
 UTS= JUL 30 '97 03:20:13.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   121    171  MMD$STLPP
    1  RoData even  none     6      6  MMD$STLPP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  MMD$STLPP
     0     60          yes     yes      Std        2  MMD$RSPP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 MMB$GPP
         yes           Std       0 MMA$UNLOCKBP
         yes           Std       5 MM0$FINDPG
         yes           Std       0 MMA$LOCKBP
         yes           Std       3 MM0$CHKPCNT
 yes     yes           Std       1 MMB$FPP
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:6    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_MM13                               B$PPUT$                               MM_SPPH
     MM_SPPT                               MM_SPPC                          r    MM_BYP$
     MM_STLM                               MM_CHKFLG                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:7    


        1        1        /*M* LEVEL 1 MM ROUTINES FOR ALLOCATION OF STOLEN AND I/O CACHE PAGES */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND,CCC,MCL=20,CRT=5,CRM=80,CLM
                 7        =40 */
        8        8        MMD$STLPP: PROC(PPNO,WSQ) ALTRET;

      8  0 000000   000000 700200 xent  MMD$STLPP    TSX0  ! X66_AUTO_2
         0 000001   000014 000002                    ZERO    12,2

        9        9
       10       10    1   DCL PPNO SBIN;                          /* Physical page # of stolen page     */
       11       11    1   DCL WSQ SBIN;                           /* Wsq of process stealing the page   */
       12       12    1   DCL TEMP SBIN;
       13       13
       14       14    1   DCL MMB$GPP ENTRY(2) ALTRET;            /* Get physical page routine          */
       15       15    1   DCL MMB$FPP ENTRY(1) ALTRET;            /* Free physical page routine         */
       16       16    1   DCL MM0$CHKPCNT ENTRY(3);               /* Page chain checker                 */
       17       17    1   DCL MM0$FINDPG ENTRY(5);
       18       18    1   DCL MMA$UNLOCKBP ENTRY;
       19       19    1   DCL MMA$LOCKBP ENTRY;
       20       20    1   DCL SC_MM13 ENTRY CONV(2,0);
       21       21    1   DCL SC_MM14 ENTRY CONV(2,0);
       22       22        /**/
       23       23    1   DCL B$PPUT$ PTR SYMREF;
       24       24        /**/
       25       25
       26       26        %INCLUDE MM_DATA_R;                     /* Include mm data references         */
       27      546        /**/
       28      547        %SUB   MM$PPUT=B$PPUT$->MM$PPUT;
       29      548        /**/
       30      549        /*F*   NAME:   MMD$STLPP                                           */
       31      550        /*F*   PURPOSE: To steal a physical page from the monitor without  */
PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:8    
       32      551        /*,*           assigning it to a particular user.                  */
       33      552    1           IF MM$BYP.SPPC >= MM_STLM

    552  0 000002   000000 470400 xsym               LDP0    MM_BYP$
         0 000003   000005 236100                    LDQ     5,,PR0
         0 000004   000000 116000 xsym               CMPQ    MM_STLM
         0 000005   000007 604000 0                  TMI     s:557

       34      553    2             THEN DO;

       35      554    2                 ALTRETURN;

    554  0 000006   000000 702200 xent               TSX2  ! X66_AALT

       36      555    2               END;
       37      556    2             ELSE DO;

       38      557    2                 CALL MMB$GPP(PPNO,WSQ);   /* Get a physical page                */

    557  0 000007   200003 630500                    EPPR0   @PPNO,,AUTO
         0 000010   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000011   000000 701000 xent               TSX1    MMB$GPP
         0 000012   000000 011000                    NOP     0

       39      558    2                 IF PPNO = 0

    558  0 000013   200003 470500                    LDP0    @PPNO,,AUTO
         0 000014   000000 235100                    LDA     0,,PR0
         0 000015   000017 601000 0                  TNZ     s:561

       40      559    2                   THEN ALTRETURN;         /* No more physical pages             */

    559  0 000016   000000 702200 xent               TSX2  ! X66_AALT

       41      560    3                   ELSE DO INHIBIT;

       42      561    3                       CALL MMA$LOCKBP;
PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:9    

    561  0 000017   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         0 000020   000000 701200 xent               TSX1  ! MMA$LOCKBP
         0 000021   000000 011200                    NOP   ! 0

       43      562    3                       MM$PPUT.PPNO(PPNO) = 0; /* Mark new tail                  */

    562  0 000022   200003 470700                    LDP0  ! @PPNO,,AUTO
         0 000023   000000 235300                    LDA   ! 0,,PR0
         0 000024   000000 220203                    LDX0  ! 0,DU
         0 000025   000000 471600 xsym               LDP1  ! B$PPUT$
         0 000026   100000 440305                    SXL0  ! 0,AL,PR1

       44      563    3                       MM$PPUT.STOLEN(PPNO) = '1'B; /* set stolen flag           */

    563  0 000027   000000 235300                    LDA   ! 0,,PR0
         0 000030   000000 471600 xsym               LDP1  ! B$PPUT$
         0 000031   002000 236203                    LDQ   ! 1024,DU
         0 000032   100000 256305                    ORSQ  ! 0,AL,PR1

       45      564    3                       IF MM_SPPT = 0

    564  0 000033   000000 235200 xsym               LDA   ! MM_SPPT
         0 000034   000040 601200 0                  TNZ   ! s:566

       46      565    3                         THEN MM_SPPH = PPNO; /* Set head if empty               */

    565  0 000035   000000 235300                    LDA   ! 0,,PR0
         0 000036   000000 755200 xsym               STA   ! MM_SPPH
         0 000037   000043 710200 0                  TRA   ! s:567

       47      566    3                         ELSE MM$PPUT.PPNO(MM_SPPT) = PPNO;

    566  0 000040   000000 721300                    LXL1  ! 0,,PR0
         0 000041   000000 471600 xsym               LDP1  ! B$PPUT$
         0 000042   100000 441305                    SXL1  ! 0,AL,PR1

PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:10   
       48      567    3                       MM_SPPT = PPNO;

    567  0 000043   000000 235300                    LDA   ! 0,,PR0
         0 000044   000000 755200 xsym               STA   ! MM_SPPT

       49      568    3                       MM_SPPC = MM_SPPC + 1;

    568  0 000045   000000 054200 xsym               AOS   ! MM_SPPC

       50      569    3                       CALL MMA$UNLOCKBP;

    569  0 000046   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         0 000047   000000 701200 xent               TSX1  ! MMA$UNLOCKBP
         0 000050   000000 011200                    NOP   ! 0

       51      570    3                     END;                  /* End of inhibited code              */

       52      571    2               END;

       53      572
       54      573    1   CHK:
       55      574        /* If MM_CHKFLG is true, then verify stolen page chain */
       56      575    1           IF MM_CHKFLG THEN CALL MM0$CHKPCNT(MM_SPPH,MM_SPPT,MM_SPPC);

    575  0 000051   000000 234000 xsym  CHK          SZN     MM_CHKFLG
         0 000052   000057 605000 0                  TPL     s:576

    575  0 000053   000000 630400 1                  EPPR0   0
         0 000054   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000055   000000 701000 xent               TSX1    MM0$CHKPCNT
         0 000056   000000 011000                    NOP     0

       57      576    1           RETURN;

    576  0 000057   000000 702200 xent               TSX2  ! X66_ARET

       58      577
PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:11   
       59      578
       60      579        /*F*   NAME:   MMD$RSPP                                            */
       61      580        /*F*   PURPOSE: To return a previously stolen page.                */
       62      581    1   MMD$RSPP: ENTRY(PPNO,WSQ) ALTRET;

    581  0 000060   000000 700200 xent  MMD$RSPP     TSX0  ! X66_AUTO_2
         0 000061   000014 000002                    ZERO    12,2

       63      582    1           IF PPNO = 0                     /* Cannot be a stolen page            */

    582  0 000062   200003 470500                    LDP0    @PPNO,,AUTO
         0 000063   000000 235100                    LDA     0,,PR0
         0 000064   000075 601000 0                  TNZ     s:590

       64      583    1             THEN
       65      584    1             IF WSQ = %MONWSQ

    584  0 000065   200004 471500                    LDP1    @WSQ,,AUTO
         0 000066   100000 235100                    LDA     0,,PR1
         0 000067   000001 115007                    CMPA    1,DL
         0 000070   000074 601000 0                  TNZ     s:588

       66      585    1               THEN
       67      586    1               CALL SC_MM13;

    586  0 000071   000000 713400 xsym               CLIMB   SC_MM13
         0 000072   000000 600000 xsid               climb   nvectors=         0
         0 000073   000075 710000 0                  TRA     s:590

       68      587    1               ELSE
       69      588    1               ALTRETURN;

    588  0 000074   000000 702200 xent               TSX2  ! X66_AALT

       70      589
       71      590    1           CALL MMA$LOCKBP;

PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:12   
    590  0 000075   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000076   000000 701000 xent               TSX1    MMA$LOCKBP
         0 000077   000000 011000                    NOP     0

       72      591    1           IF PPNO = MM_SPPH               /* If its the HEAD...                 */

    591  0 000100   200003 470500                    LDP0    @PPNO,,AUTO
         0 000101   000000 236100                    LDQ     0,,PR0
         0 000102   000000 116000 xsym               CMPQ    MM_SPPH
         0 000103   000111 601000 0                  TNZ     s:596

       73      592    1             THEN MM_SPPH = MM$PPUT.PPNO(PPNO); /* Then set new head             */

    592  0 000104   000000 471400 xsym               LDP1    B$PPUT$
         0 000105   100000 236106                    LDQ     0,QL,PR1
         0 000106   777777 376007                    ANQ     -1,DL
         0 000107   000000 756000 xsym               STQ     MM_SPPH
         0 000110   000155 710000 0                  TRA     s:612

       74      593    2             ELSE DO;

       75      594                       /* MM0$FINDPG returns the page number preceding */
       76      595                       /* The passed 'PPNO' in the page chain.         */
       77      596    2                 CALL MM0$FINDPG(PPNO,MM_SPPH,MM_SPPT,MM_SPPC,TEMP);

    596  0 000111   200005 631500                    EPPR1   TEMP,,AUTO
         0 000112   200012 451500                    STP1    TEMP+5,,AUTO
         0 000113   000004 237000 1                  LDAQ    4
         0 000114   200010 757100                    STAQ    TEMP+3,,AUTO
         0 000115   000000 236000 1                  LDQ     0
         0 000116   200003 235100                    LDA     @PPNO,,AUTO
         0 000117   200006 757100                    STAQ    TEMP+1,,AUTO
         0 000120   200006 630500                    EPPR0   TEMP+1,,AUTO
         0 000121   000023 631400 xsym               EPPR1   B_VECTNIL+19
         0 000122   000000 701000 xent               TSX1    MM0$FINDPG
         0 000123   000000 011000                    NOP     0

PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:13   
       78      597    2                 IF TEMP = -1 THEN         /* If ppno not a stolen PAGE...       */

    597  0 000124   200005 235100                    LDA     TEMP,,AUTO
         0 000125   000027 115000 xsym               CMPA    B_VECTNIL+23
         0 000126   000142 601000 0                  TNZ     s:609

       79      598    2                   IF WSQ = 1

    598  0 000127   200004 470500                    LDP0    @WSQ,,AUTO
         0 000130   000000 235100                    LDA     0,,PR0
         0 000131   000001 115007                    CMPA    1,DL
         0 000132   000136 601000 0                  TNZ     s:606

       80      599        /**/
       81      600        /*S*    SCREECH_CODE: MMD-S$MM13                                   */
       82      601        /*S*   TYPE:   SCREECH                                             */
       83      602        /*S*   MESSAGE: Monitor called RSPP with a non-stolen page.        */
       84      603        /*S*   REMARKS: The monitor has returned a page which was never stolen */
       85      604    2                     THEN CALL SC_MM13;

    604  0 000133   000000 713400 xsym               CLIMB   SC_MM13
         0 000134   000000 600000 xsid               climb   nvectors=         0
         0 000135   000142 710000 0                  TRA     s:609

       86      605    3                     ELSE DO;              /* Not the monitor                    */

       87      606    3                         CALL MMA$UNLOCKBP;

    606  0 000136   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000137   000000 701000 xent               TSX1    MMA$UNLOCKBP
         0 000140   000000 011000                    NOP     0

       88      607    3                         ALTRETURN;

    607  0 000141   000000 702200 xent               TSX2  ! X66_AALT

       89      608    3                       END;
PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:14   
       90      609    2                 MM$PPUT.PPNO(TEMP) = MM$PPUT.PPNO(PPNO);

    609  0 000142   200003 470500                    LDP0    @PPNO,,AUTO
         0 000143   000000 235100                    LDA     0,,PR0
         0 000144   000000 471400 xsym               LDP1    B$PPUT$
         0 000145   100000 720105                    LXL0    0,AL,PR1
         0 000146   200005 721100                    LXL1    TEMP,,AUTO
         0 000147   100000 440111                    SXL0    0,X1,PR1

       91      610    2                 IF MM_SPPT = PPNO THEN MM_SPPT = TEMP;

    610  0 000150   000000 236000 xsym               LDQ     MM_SPPT
         0 000151   000000 116100                    CMPQ    0,,PR0
         0 000152   000155 601000 0                  TNZ     s:612

    610  0 000153   200005 235100                    LDA     TEMP,,AUTO
         0 000154   000000 755000 xsym               STA     MM_SPPT

       92      611    2               END;

       93      612    1           MM_SPPC = MM_SPPC -1;           /* Decr stolen page chain count       */

    612  0 000155   000001 336007                    LCQ     1,DL
         0 000156   000000 056000 xsym               ASQ     MM_SPPC

       94      613    1           IF MM_SPPC = 0 THEN MM_SPPT = 0;

    613  0 000157   000161 601000 0                  TNZ     s:614

    613  0 000160   000000 450000 xsym               STZ     MM_SPPT

       95      614    1           CALL MMA$UNLOCKBP;

    614  0 000161   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000162   000000 701000 xent               TSX1    MMA$UNLOCKBP
         0 000163   000000 011000                    NOP     0

PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:15   
       96      615    1           CALL MMB$FPP(PPNO);

    615  0 000164   200003 630500                    EPPR0   @PPNO,,AUTO
         0 000165   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000166   000000 701000 xent               TSX1    MMB$FPP
         0 000167   000000 011000                    NOP     0

       97      616
       98      617        /* Perform page chain validation if required */
       99      618    1           GOTO CHK;

    618  0 000170   000051 710000 0                  TRA     CHK

(unnamed)
 Sect OctLoc
   1     000   000000 006000   000000 006000   000000 006000   000000 000000    ................
   1     004   000000 006000   000000 006000                                    ........
      100      619
      101      620
      102      621
      103      622    1   END MMD$STLPP;

PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:16   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMD$STLPP.
PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:17   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PPNO                      4-0-0/w PTR         r     1 @WSQ
    *0-0-0/w SBIN        r     1 PPNO                       5-0-0/w SBIN        r     1 TEMP
    *0-0-0/w SBIN        r     1 WSQ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/w PTR         r     1 MM_BYP$
     0-0-0/b BIT         r     1 MM_CHKFLG                  0-0-0/w SBIN        r     1 MM_SPPC
     0-0-0/w SBIN        r     1 MM_SPPH                    0-0-0/w SBIN        r     1 MM_SPPT
     0-0-0/w SBIN        r     1 MM_STLM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(576)   r     1 MM$BYP
     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure MMD$STLPP requires 121 words for executable code.
   Procedure MMD$STLPP requires 12 words of local(AUTO) storage.

    No errors detected in file MMD$STEAL.:E05TSI    .
PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:18   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:19   
          MINI XREF LISTING

B$PPUT$
        23**DCL       562>>ASSIGN    563>>ASSIGN    566>>ASSIGN    592>>ASSIGN    609>>ASSIGN    609>>ASSIGN
CHK
       575**LABEL     618--GOTO
MM$BYP.SPPC
       418**DCL       552>>IF
MM$DESC.BOUND
       497**DCL       498--REDEF
MM$DESC.FLGS
       498**DCL       498--REDEF
MM$PPUT.PPNO
       486**DCL       562<<ASSIGN    566<<ASSIGN    592>>ASSIGN    609<<ASSIGN    609>>ASSIGN
MM$PPUT.STOLEN
       485**DCL       563<<ASSIGN
MM$PPUT.USER#
       486**DCL       486--REDEF
MM0$CHKPCNT
        16**DCL-ENT   575--CALL
MM0$FINDPG
        17**DCL-ENT   596--CALL
MMA$LOCKBP
        19**DCL-ENT   561--CALL      590--CALL
MMA$UNLOCKBP
        18**DCL-ENT   569--CALL      606--CALL      614--CALL
MMB$FPP
        15**DCL-ENT   615--CALL
MMB$GPP
        14**DCL-ENT   557--CALL
MM_BYP$
       417**DCL       417--IMP-PTR   552>>IF
MM_CHKFLG
       421**DCL       575>>IF
PL6.E3A0      #001=MMD$STLPP File=MMD$STEAL.:E05TSI                              WED 07/30/97 03:20 Page:20   
MM_SPPC
       415**DCL       568<<ASSIGN    568>>ASSIGN    575<>CALL      596<>CALL      612<<ASSIGN    612>>ASSIGN
       613>>IF
MM_SPPH
       415**DCL       565<<ASSIGN    575<>CALL      591>>IF        592<<ASSIGN    596<>CALL
MM_SPPT
       415**DCL       564>>IF        566>>ASSIGN    567<<ASSIGN    575<>CALL      596<>CALL      610>>IF
       610<<ASSIGN    613<<ASSIGN
MM_STLM
       420**DCL       552>>IF
PPNO
        10**DCL         8--PROC      557<>CALL      558>>IF        562>>ASSIGN    563>>ASSIGN    565>>ASSIGN
       566>>ASSIGN    567>>ASSIGN    581--ENTRY     582>>IF        591>>IF        592>>ASSIGN    596<>CALL
       609>>ASSIGN    610>>IF        615<>CALL
SC_MM13
        20**DCL-ENT   586--CALL      604--CALL
TEMP
        12**DCL       596<>CALL      597>>IF        609>>ASSIGN    610>>ASSIGN
WSQ
        11**DCL         8--PROC      557<>CALL      581--ENTRY     584>>IF        598>>IF
