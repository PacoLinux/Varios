/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1990    */
/*T*                                                         */
/*T***********************************************************/
CHECK_FILE: PROC (FILNAM, CREATE_F);
 
%INCLUDE    CP_6;
%INCLUDE    CP_6_SUBS;
%INCLUDE    XUW_MACRO_C;
%INCLUDE    XU_PERR_C;
 
DCL   M$LO     DCB;
DCL   M$STDFID DCB;
 
%VLP_NAME (FPTN=FILNAM,STCLASS="");
DCL CREATE_F BIT(1) ALIGNED;
 
DCL 1 OPTIONS EXTROOT,
       2 LIST     BIT(1),
       2 ND       BIT(1),
       2 AUTORENAME BIT(1),
       2 NONL     BIT(1),
       2 KEEPNL   BIT(1),
       2 STD      BIT(1),
       2 NLVALUE  CHAR(1),
       2 D        UBIN,
       2 NUMBER   UBIN,
       2 STDNAME  CHAR(100);
 
%FPT_FID    (FPTN = FPT_STD_FID,
             STCLASS = STATIC,
             NAME = FPT_STD_NAME,
             ACCT = FPT_STD_ACCT,
             PASS = FPT_STD_PASS,
             WSN  = FPT_STD_WSN,
             SN   = FPT_STD_SN,
             SNAME = YES,
             SACCT = YES,
             SPASS = YES,
             SWSN  = YES,
             SSN   = YES);
 
%FPT_OPEN   (FPTN = FPT_STD_OPEN_CONST,
             DCB = M$STDFID,
             STCLASS = CONSTANT,
             ASN = FILE,
             NAME = FPT_STD_NAME,
             ACCT = FPT_STD_ACCT,
             PASS = FPT_STD_PASS,
             WSN  = FPT_STD_WSN,
             SN   = FPT_STD_SN);
 
%FPT_OPEN   (FPTN = FPT_STD_OPEN,
             STCLASS = "");
%FPT_READ   (FPTN = FPT_STD_READ,
             BUF = STD_BUF,
             DCB = M$STDFID);
 
%FPT_REW    (FPTN = FPT_STD_REW,
             DCB  = M$STDFID);
 
%XUW_WILDCARD;
%XUW_ENTRIES;
%F$DCB;
 
%VLP_NAME   (FPTN = FPT_STD_NAME, LEN=31);
 
%VLP_ACCT   (FPTN = FPT_STD_ACCT);
 
%VLP_PASS   (FPTN = FPT_STD_PASS);
 
%VLP_WSN    (FPTN = FPT_STD_WSN);
 
%VLP_SN     (FPTN = FPT_STD_SN);
 
DCL   POS   SBIN;
DCL   STD_BUF  CHAR(128) STATIC;
DCL   STDFID_OPENED    BIT(1) STATIC INIT('0'B);
 
   CREATE_F = '0'B;
   POS = 100;
   IF NOT STDFID_OPENED THEN DO;
      SUBSTR (STD_BUF,0,128) = BINASC (0);
      CALL INDEX (POS,%BINASC(0),OPTIONS.STDNAME);
      FPT_STD_OPEN = FPT_STD_OPEN_CONST;
      FPT_STD_OPEN.V_ = VECTOR (FPT_STD_OPEN.V);
      FPT_STD_OPEN.V.FUN# = %IN#;
      FPT_STD_FID.TEXTFID_ = VECTOR (SUBSTR (OPTIONS.STDNAME,,POS));
      FPT_STD_FID.ASN_ = VECTOR (FPT_STD_OPEN.V.ASN#);
      FPT_STD_FID.RES_ = VECTOR (FPT_STD_OPEN.V.RES#);
      CALL M$FID (FPT_STD_FID);
      CALL M$OPEN (FPT_STD_OPEN);
      STDFID_OPENED = '1'B;
      END;
   ELSE CALL M$REW(FPT_STD_REW);
   XUW_WILDCARD.INPUT_ = VECTOR (SUBSTR(FILNAM.NAME#,0,FILNAM.L#));
 
   DO WHILE ('1'B);
      CALL M$READ (FPT_STD_READ) ALTRET (EOF);
      XUW_WILDCARD.PATTERN_ = VECTOR (SUBSTR (STD_BUF,0,DCBADDR(DCBNUM(M$STDFID))->F$DCB.ARS#));
      CALL X$WILDCMP (XUW_WILDCARD);
      IF (XUW_WILDCARD.ERROR.ERR# = %E$XUW#WILD_OK) THEN DO;
         CREATE_F = '1'B;
         GOTO EOF;
         END;
      END;
 
EOF:
END CHECK_FILE;
