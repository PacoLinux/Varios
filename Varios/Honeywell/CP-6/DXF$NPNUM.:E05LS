VERSION E05

PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:1    
        1        1        /*M* DXF$NPNUM Schema access routines for Xdelta */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DXF$NPNUM
        9        9             PURPOSE: To house routines that get Next, Previous, and Entry # entrys
       10       10                      in the in memory schema for executable statements, internal
       11       11                      entrys, variables, and debug names records.
       12       12             DESCRIPTION: This is all throw away code, to be replaced when the
       13       13                          Monitor's debug schema resides on an unmamaged disk file */
       14       14        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:2    
       15       15        /*D* NAME: DDF$N_EXST
       16       16             CALL: CALL DDF$N_EXST( PTR$ ) ALTRET( can't do );
       17       17             INPUT: PTR$ - Pointer to current entry.
       18       18             OUTPUT: PTR$ - Pointer to next entry. */
       19       19                                                /**/
       20       20        DDF$N_EXST: PROC( PTR$ ) ALTRET;
       21       21                                                /**/
       22       22    1   DCL PTR$ PTR;
       23       23        %INCLUDE B$OBJECT_C;
       24     3453        %B$EXST;
       25     3560        %B$INTNTRY;
       26     3618        %B$VREBL;
       27     3782        %INCLUDE XUH_MACRO_C;
       28     3866        %INCLUDE DD_SD_M;
       29     5202        %S_D;
       30     6520                                                /**/
       31     6521    1        IF PTR$ < S_D.EXST_END$
       32     6522    2        THEN DO;
       33     6523    2             PTR$ = PINCRW( PTR$, SIZEW( B$EXST ) );
       34     6524    2             RETURN;
       35     6525    2           END;
       36     6526    1        ELSE ALTRETURN;
       37     6527        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:3    
       38     6528        /*D* NAME: DDF$P_EXST
       39     6529             CALL: CALL DDF$P_EXST( PTR$ ) ALTRET( can't do );
       40     6530             INPUT: PTR$ - Pointer to current entry.
       41     6531             OUTPUT: PTR$ - Pointer to previous entry. */
       42     6532                                                /**/
       43     6533    1   DDF$P_EXST: ENTRY( PTR$ ) ALTRET;
       44     6534                                                /**/
       45     6535    1        IF PTR$ > S_D.EXST$
       46     6536    2        THEN DO;
       47     6537    2             PTR$ = PINCRW( PTR$, -SIZEW( B$EXST ) );
       48     6538    2             RETURN;
       49     6539    2           END;
       50     6540    1        ELSE ALTRETURN;
       51     6541        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:4    
       52     6542        /*D* NAME: DDF$N_IE
       53     6543             CALL: CALL DDF$N_IE( PTR$ ) ALTRET( can't do );
       54     6544             INPUT: PTR$ - Pointer to current entry.
       55     6545             OUTPUT: PTR$ - Pointer to next entry. */
       56     6546                                                /**/
       57     6547    1   DDF$N_IE: ENTRY( PTR$ ) ALTRET;
       58     6548                                                /**/
       59     6549    1        IF PTR$ < S_D.IE_END$
       60     6550    2        THEN DO;
       61     6551    2             PTR$ = PINCRW( PTR$, SIZEW( B$INTNTRY ) );
       62     6552    2             RETURN;
       63     6553    2           END;
       64     6554    1        ELSE ALTRETURN;
       65     6555        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:5    
       66     6556        /*D* NAME: DDF$P_IE
       67     6557             CALL: CALL DDF$P_IE( PTR$ ) ALTRET( can't do );
       68     6558             INPUT: PTR$ - Pointer to current entry.
       69     6559             OUTPUT: PTR$ - Pointer to previous entry. */
       70     6560                                                /**/
       71     6561    1   DDF$P_IE: ENTRY( PTR$ ) ALTRET;
       72     6562                                                /**/
       73     6563    1        IF PTR$ > S_D.IE$
       74     6564    2        THEN DO;
       75     6565    2             PTR$ = PINCRW( PTR$, -SIZEW( B$INTNTRY ) );
       76     6566    2             RETURN;
       77     6567    2           END;
       78     6568    1        ELSE ALTRETURN;
       79     6569        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:6    
       80     6570        /*D* NAME: DDF$N_VREBL
       81     6571             CALL: CALL DDF$N_VREBL( PTR$ ) ALTRET( can't do );
       82     6572             INPUT: PTR$ - Pointer to current entry.
       83     6573             OUTPUT: PTR$ - Pointer to next entry. */
       84     6574                                                /**/
       85     6575    1   DDF$N_VREBL: ENTRY( PTR$ ) ALTRET;
       86     6576                                                /**/
       87     6577    1        IF PTR$ < S_D.VREBL_END$
       88     6578    2        THEN DO;
       89     6579    2             PTR$ = PINCRW( PTR$, SIZEW( B$VREBL ) );
       90     6580    2             RETURN;
       91     6581    2           END;
       92     6582    1        ELSE ALTRETURN;
       93     6583        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:7    
       94     6584        /*D* NAME: DDF$P_VREBL
       95     6585             CALL: CALL DDF$P_VREBL( PTR$ ) ALTRET( can't do );
       96     6586             INPUT: PTR$ - Pointer to current entry.
       97     6587             OUTPUT: PTR$ - Pointer to previous entry. */
       98     6588                                                /**/
       99     6589    1   DDF$P_VREBL: ENTRY( PTR$ ) ALTRET;
      100     6590                                                /**/
      101     6591    1        IF PTR$ > S_D.VREBL$
      102     6592    2        THEN DO;
      103     6593    2             PTR$ = PINCRW( PTR$, -SIZEW( B$VREBL ) );
      104     6594    2             RETURN;
      105     6595    2           END;
      106     6596    1        ELSE ALTRETURN;
      107     6597                                                /**/
      108     6598    1   END DDF$N_EXST;
      109     6599        %EOD;

PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:8    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDF$N_EXST.

   Procedure DDF$N_EXST requires 69 words for executable code.
   Procedure DDF$N_EXST requires 4 words of local(AUTO) storage.

PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:9    

 Object Unit name= DDF$N_EXST                                 File name= DXF$NPNUM.:E05TOU
 UTS= JUL 29 '97 15:11:04.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    69    105  DDF$N_EXST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  DDF$N_EXST
     0     13          yes     yes      Std        1  DDF$P_EXST
     0     27          yes     yes      Std        1  DDF$N_IE
     0     42          yes     yes      Std        1  DDF$P_IE
     0     56          yes     yes      Std        1  DDF$N_VREBL
     0     71          yes     yes      Std        1  DDF$P_VREBL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:10   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B_VECTNIL
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:11   


        1        1        /*M* DXF$NPNUM Schema access routines for Xdelta */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DXF$NPNUM
        9        9             PURPOSE: To house routines that get Next, Previous, and Entry # entrys
       10       10                      in the in memory schema for executable statements, internal
       11       11                      entrys, variables, and debug names records.
       12       12             DESCRIPTION: This is all throw away code, to be replaced when the
       13       13                          Monitor's debug schema resides on an unmamaged disk file */
       14       14        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:12   
       15       15        /*D* NAME: DDF$N_EXST
       16       16             CALL: CALL DDF$N_EXST( PTR$ ) ALTRET( can't do );
       17       17             INPUT: PTR$ - Pointer to current entry.
       18       18             OUTPUT: PTR$ - Pointer to next entry. */
       19       19                                                /**/
       20       20        DDF$N_EXST: PROC( PTR$ ) ALTRET;

     20  0 000000   000000 700200 xent  DDF$N_EXST   TSX0  ! X66_AUTO_1
         0 000001   000004 000001                    ZERO    4,1

       21       21                                                /**/
       22       22    1   DCL PTR$ PTR;
       23       23        %INCLUDE B$OBJECT_C;
       24     3453        %B$EXST;
       25     3560        %B$INTNTRY;
       26     3618        %B$VREBL;
       27     3782        %INCLUDE XUH_MACRO_C;
       28     3866        %INCLUDE DD_SD_M;
       29     5202        %S_D;
       30     6520                                                /**/
       31     6521    1        IF PTR$ < S_D.EXST_END$

   6521  0 000002   200003 470500                    LDP0    @PTR$,,AUTO
         0 000003   000000 471400 xsym               LDP1    S_D$
         0 000004   000000 236100                    LDQ     0,,PR0
         0 000005   101011 116100                    CMPQ    521,,PR1
         0 000006   000012 603000 0                  TRC     s:6526

       32     6522    2        THEN DO;

       33     6523    2             PTR$ = PINCRW( PTR$, SIZEW( B$EXST ) );

   6523  0 000007   000003 036003                    ADLQ    3,DU
         0 000010   000000 756100                    STQ     0,,PR0

       34     6524    2             RETURN;

PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:13   
   6524  0 000011   000000 702200 xent               TSX2  ! X66_ARET

       35     6525    2           END;
       36     6526    1        ELSE ALTRETURN;

   6526  0 000012   000000 702200 xent               TSX2  ! X66_AALT

       37     6527        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:14   
       38     6528        /*D* NAME: DDF$P_EXST
       39     6529             CALL: CALL DDF$P_EXST( PTR$ ) ALTRET( can't do );
       40     6530             INPUT: PTR$ - Pointer to current entry.
       41     6531             OUTPUT: PTR$ - Pointer to previous entry. */
       42     6532                                                /**/
       43     6533    1   DDF$P_EXST: ENTRY( PTR$ ) ALTRET;

   6533  0 000013   000000 700200 xent  DDF$P_EXST   TSX0  ! X66_AUTO_1
         0 000014   000004 000001                    ZERO    4,1

       44     6534                                                /**/
       45     6535    1        IF PTR$ > S_D.EXST$

   6535  0 000015   000000 470400 xsym               LDP0    S_D$
         0 000016   200003 471500                    LDP1    @PTR$,,AUTO
         0 000017   001010 236100                    LDQ     520,,PR0
         0 000020   100000 116100                    CMPQ    0,,PR1
         0 000021   000026 603000 0                  TRC     s:6540

       46     6536    2        THEN DO;

       47     6537    2             PTR$ = PINCRW( PTR$, -SIZEW( B$EXST ) );

   6537  0 000022   100000 236100                    LDQ     0,,PR1
         0 000023   777775 036003                    ADLQ    -3,DU
         0 000024   100000 756100                    STQ     0,,PR1

       48     6538    2             RETURN;

   6538  0 000025   000000 702200 xent               TSX2  ! X66_ARET

       49     6539    2           END;
       50     6540    1        ELSE ALTRETURN;

   6540  0 000026   000000 702200 xent               TSX2  ! X66_AALT

       51     6541        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:15   
       52     6542        /*D* NAME: DDF$N_IE
       53     6543             CALL: CALL DDF$N_IE( PTR$ ) ALTRET( can't do );
       54     6544             INPUT: PTR$ - Pointer to current entry.
       55     6545             OUTPUT: PTR$ - Pointer to next entry. */
       56     6546                                                /**/
       57     6547    1   DDF$N_IE: ENTRY( PTR$ ) ALTRET;

   6547  0 000027   000000 700200 xent  DDF$N_IE     TSX0  ! X66_AUTO_1
         0 000030   000004 000001                    ZERO    4,1

       58     6548                                                /**/
       59     6549    1        IF PTR$ < S_D.IE_END$

   6549  0 000031   200003 470500                    LDP0    @PTR$,,AUTO
         0 000032   000000 471400 xsym               LDP1    S_D$
         0 000033   000000 236100                    LDQ     0,,PR0
         0 000034   101014 116100                    CMPQ    524,,PR1
         0 000035   000041 603000 0                  TRC     s:6554

       60     6550    2        THEN DO;

       61     6551    2             PTR$ = PINCRW( PTR$, SIZEW( B$INTNTRY ) );

   6551  0 000036   000002 036003                    ADLQ    2,DU
         0 000037   000000 756100                    STQ     0,,PR0

       62     6552    2             RETURN;

   6552  0 000040   000000 702200 xent               TSX2  ! X66_ARET

       63     6553    2           END;
       64     6554    1        ELSE ALTRETURN;

   6554  0 000041   000000 702200 xent               TSX2  ! X66_AALT

       65     6555        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:16   
       66     6556        /*D* NAME: DDF$P_IE
       67     6557             CALL: CALL DDF$P_IE( PTR$ ) ALTRET( can't do );
       68     6558             INPUT: PTR$ - Pointer to current entry.
       69     6559             OUTPUT: PTR$ - Pointer to previous entry. */
       70     6560                                                /**/
       71     6561    1   DDF$P_IE: ENTRY( PTR$ ) ALTRET;

   6561  0 000042   000000 700200 xent  DDF$P_IE     TSX0  ! X66_AUTO_1
         0 000043   000004 000001                    ZERO    4,1

       72     6562                                                /**/
       73     6563    1        IF PTR$ > S_D.IE$

   6563  0 000044   000000 470400 xsym               LDP0    S_D$
         0 000045   200003 471500                    LDP1    @PTR$,,AUTO
         0 000046   001013 236100                    LDQ     523,,PR0
         0 000047   100000 116100                    CMPQ    0,,PR1
         0 000050   000055 603000 0                  TRC     s:6568

       74     6564    2        THEN DO;

       75     6565    2             PTR$ = PINCRW( PTR$, -SIZEW( B$INTNTRY ) );

   6565  0 000051   100000 236100                    LDQ     0,,PR1
         0 000052   777776 036003                    ADLQ    -2,DU
         0 000053   100000 756100                    STQ     0,,PR1

       76     6566    2             RETURN;

   6566  0 000054   000000 702200 xent               TSX2  ! X66_ARET

       77     6567    2           END;
       78     6568    1        ELSE ALTRETURN;

   6568  0 000055   000000 702200 xent               TSX2  ! X66_AALT

       79     6569        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:17   
       80     6570        /*D* NAME: DDF$N_VREBL
       81     6571             CALL: CALL DDF$N_VREBL( PTR$ ) ALTRET( can't do );
       82     6572             INPUT: PTR$ - Pointer to current entry.
       83     6573             OUTPUT: PTR$ - Pointer to next entry. */
       84     6574                                                /**/
       85     6575    1   DDF$N_VREBL: ENTRY( PTR$ ) ALTRET;

   6575  0 000056   000000 700200 xent  DDF$N_VREBL  TSX0  ! X66_AUTO_1
         0 000057   000004 000001                    ZERO    4,1

       86     6576                                                /**/
       87     6577    1        IF PTR$ < S_D.VREBL_END$

   6577  0 000060   200003 470500                    LDP0    @PTR$,,AUTO
         0 000061   000000 471400 xsym               LDP1    S_D$
         0 000062   000000 236100                    LDQ     0,,PR0
         0 000063   101017 116100                    CMPQ    527,,PR1
         0 000064   000070 603000 0                  TRC     s:6582

       88     6578    2        THEN DO;

       89     6579    2             PTR$ = PINCRW( PTR$, SIZEW( B$VREBL ) );

   6579  0 000065   000005 036003                    ADLQ    5,DU
         0 000066   000000 756100                    STQ     0,,PR0

       90     6580    2             RETURN;

   6580  0 000067   000000 702200 xent               TSX2  ! X66_ARET

       91     6581    2           END;
       92     6582    1        ELSE ALTRETURN;

   6582  0 000070   000000 702200 xent               TSX2  ! X66_AALT

       93     6583        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:18   
       94     6584        /*D* NAME: DDF$P_VREBL
       95     6585             CALL: CALL DDF$P_VREBL( PTR$ ) ALTRET( can't do );
       96     6586             INPUT: PTR$ - Pointer to current entry.
       97     6587             OUTPUT: PTR$ - Pointer to previous entry. */
       98     6588                                                /**/
       99     6589    1   DDF$P_VREBL: ENTRY( PTR$ ) ALTRET;

   6589  0 000071   000000 700200 xent  DDF$P_VREBL  TSX0  ! X66_AUTO_1
         0 000072   000004 000001                    ZERO    4,1

      100     6590                                                /**/
      101     6591    1        IF PTR$ > S_D.VREBL$

   6591  0 000073   000000 470400 xsym               LDP0    S_D$
         0 000074   200003 471500                    LDP1    @PTR$,,AUTO
         0 000075   001016 236100                    LDQ     526,,PR0
         0 000076   100000 116100                    CMPQ    0,,PR1
         0 000077   000104 603000 0                  TRC     s:6596

      102     6592    2        THEN DO;

      103     6593    2             PTR$ = PINCRW( PTR$, -SIZEW( B$VREBL ) );

   6593  0 000100   100000 236100                    LDQ     0,,PR1
         0 000101   777773 036003                    ADLQ    -5,DU
         0 000102   100000 756100                    STQ     0,,PR1

      104     6594    2             RETURN;

   6594  0 000103   000000 702200 xent               TSX2  ! X66_ARET

      105     6595    2           END;
      106     6596    1        ELSE ALTRETURN;

   6596  0 000104   000000 702200 xent               TSX2  ! X66_AALT
      107     6597                                                /**/
      108     6598    1   END DDF$N_EXST;
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:19   
      109     6599        %EOD;

PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:20   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDF$N_EXST.

   Procedure DDF$N_EXST requires 69 words for executable code.
   Procedure DDF$N_EXST requires 4 words of local(AUTO) storage.
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:21   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:22   
          MINI XREF LISTING

B$EXST
      3454**DCL      6523--ASSIGN   6537--ASSIGN
B$EXST.OU
      3463**DCL      3469--REDEF
B$INTNTRY
      3561**DCL      6551--ASSIGN   6565--ASSIGN
B$INTNTRY.OU
      3565**DCL      3572--REDEF
B$VREBL
      3619**DCL      6579--ASSIGN   6593--ASSIGN
B$VREBL.ADR
      3620**DCL      3632--REDEF
PTR$
        22**DCL        20--PROC     6521>>IF       6523<<ASSIGN   6523>>ASSIGN   6533--ENTRY    6535>>IF
      6537<<ASSIGN   6537>>ASSIGN   6547--ENTRY    6549>>IF       6551<<ASSIGN   6551>>ASSIGN   6561--ENTRY
      6563>>IF       6565<<ASSIGN   6565>>ASSIGN   6575--ENTRY    6577>>IF       6579<<ASSIGN   6579>>ASSIGN
      6589--ENTRY    6591>>IF       6593<<ASSIGN   6593>>ASSIGN
S_D.CURRENT_CHANNEL
      6154**DCL      6156--REDEF
S_D.DEBUGA
      5306**DCL      5308--REDEF
S_D.EIS
      6264**DCL      6293--REDEF
S_D.EXST$
      5610**DCL      6535>>IF
S_D.EXST_END$
      5612**DCL      6521>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
      6197**DCL      6198--REDEF    6212--REDEF
S_D.IE$
      5616**DCL      6563>>IF
S_D.IE_END$
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:23   
      5618**DCL      6549>>IF
S_D.JDE
      5811**DCL      5812--REDEF
S_D.L$.VALUE
      5364**DCL      5370--REDEF    5378--REDEF    5381--REDEF    5384--REDEF    5387--REDEF
S_D.L$.VALUE.L
      5365**DCL      5366--REDEF    5367--REDEF
S_D.L6_MESSAGE_BUF
      6218**DCL      6220--REDEF
S_D.OUTPUT
      6184**DCL      6186--REDEF
S_D.REMOTE_MSG.FNCC
      6203**DCL      6204--REDEF
S_D.REMOTE_MSG.STXC
      6199**DCL      6200--REDEF
S_D.REMOTE_MSG.SUBFNCC
      6207**DCL      6208--REDEF
S_D.SV
      5263**DCL      5284--REDEF
S_D.VREBL$
      5622**DCL      6591>>IF
S_D.VREBL_END$
      5624**DCL      6577>>IF
S_D$
      6515**DCL      5211--IMP-PTR  6521>>IF       6535>>IF       6549>>IF       6563>>IF       6577>>IF
      6591>>IF
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:24   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDF$N_EXST File=DXF$NPNUM.:E05TSI                             TUE 07/29/97 15:11 Page:25   
              MINI UREF LISTING

DDF$N_EXST      20**PROC
DDF$N_IE    6547**ENTRY
DDF$N_VREBL    6575**ENTRY
DDF$P_EXST    6533**ENTRY
DDF$P_IE    6561**ENTRY
DDF$P_VREBL    6589**ENTRY

PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:26   
      110        1        /*T***********************************************************/
      111        2        /*T*                                                         */
      112        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      113        4        /*T*                                                         */
      114        5        /*T***********************************************************/
      115        6        /*D* NAME: DDF$DBG_#
      116        7             CALL: CALL DDF$DBG_#( NTRY#, PTR$ ) ALTRET( can't do );
      117        8             INPUT: NTRY# - Entry number of desired entry in record.
      118        9             OUTPUT: PTR$ - Pointer to desired entry in record. */
      119       10                                                /**/
      120       11        DDF$DBG_#: PROC( NTRY#, PTR$ ) ALTRET;
      121       12                                                /**/
      122       13    1   DCL NTRY# UBIN;
      123       14    1   DCL PTR$ PTR;
      124       15        %INCLUDE B$OBJECT_C;
      125     3445        %B$LBNTRY1;
      126     3472        %B$EXST;
      127     3579        %B$INTNTRY;
      128     3637        %B$VREBL;
      129     3801        %INCLUDE XUH_MACRO_C;
      130     3885        %INCLUDE DD_SD_M;
      131     5221        %S_D;
      132     6539                                                /**/
      133     6540    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.NAMESIZ
      134     6541    1        THEN ALTRETURN;
      135     6542    1        PTR$ = PINCRW( S_D.DBG$, NTRY# );
      136     6543    1        RETURN;
      137     6544        %EJECT;
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:27   
      138     6545        /*D* NAME: DDF$EXST_#
      139     6546             CALL: CALL DDF$EXST_#( NTRY#, PTR$ ) ALTRET( can't do );
      140     6547             INPUT: NTRY# - Entry number of desired entry in record.
      141     6548             OUTPUT: PTR$ - Pointer to desired entry in record. */
      142     6549                                                /**/
      143     6550    1   DDF$EXST_#: ENTRY( NTRY#, PTR$ ) ALTRET;
      144     6551                                                /**/
      145     6552    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.STMNTSIZ
      146     6553    1        THEN ALTRETURN;
      147     6554    1        PTR$ = PINCRW( S_D.EXST$, NTRY# * SIZEW( B$EXST ) );
      148     6555    1        RETURN;
      149     6556        %EJECT;
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:28   
      150     6557        /*D* NAME: DDF$IE_#
      151     6558             CALL: CALL DDF$IE_#( NTRY#, PTR$ ) ALTRET( can't do );
      152     6559             INPUT: NTRY# - Entry number of desired entry in record.
      153     6560             OUTPUT: PTR$ - Pointer to desired entry in record. */
      154     6561                                                /**/
      155     6562    1   DDF$IE_#: ENTRY( NTRY#, PTR$ ) ALTRET;
      156     6563                                                /**/
      157     6564    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.INTRYSIZ
      158     6565    1        THEN ALTRETURN;
      159     6566    1        PTR$ = PINCRW( S_D.IE$, NTRY# * SIZEW( B$INTNTRY ) );
      160     6567    1        RETURN;
      161     6568        %EJECT;
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:29   
      162     6569        /*D* NAME: DDF$VREBL_#
      163     6570             CALL: CALL DDF$VREBL_#( NTRY#, PTR$ ) ALTRET( can't do );
      164     6571             INPUT: NTRY# - Entry number of desired entry in record.
      165     6572             OUTPUT: PTR$ - Pointer to desired entry in record. */
      166     6573                                                /**/
      167     6574    1   DDF$VREBL_#: ENTRY( NTRY#, PTR$ ) ALTRET;
      168     6575                                                /**/
      169     6576    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.VREBLSIZ
      170     6577    1        THEN ALTRETURN;
      171     6578    1        PTR$ = PINCRW( S_D.VREBL$, NTRY# * SIZEW( B$VREBL ) );
      172     6579    1        RETURN;
      173     6580                                                /**/
      174     6581    1   END DDF$DBG_#;

PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:30   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDF$DBG_#.

   Procedure DDF$DBG_# requires 76 words for executable code.
   Procedure DDF$DBG_# requires 6 words of local(AUTO) storage.

    No errors detected in file DXF$NPNUM.:E05TSI    .

PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:31   

 Object Unit name= DDF$DBG_#                                  File name= DXF$NPNUM.:E05TOU
 UTS= JUL 29 '97 15:11:14.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    76    114  DDF$DBG_#

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DDF$DBG_#
     0     21          yes     yes      Std        2  DDF$EXST_#
     0     45          yes     yes      Std        2  DDF$IE_#
     0     70          yes     yes      Std        2  DDF$VREBL_#

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B_VECTNIL
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:32   


      110        1        /*T***********************************************************/
      111        2        /*T*                                                         */
      112        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      113        4        /*T*                                                         */
      114        5        /*T***********************************************************/
      115        6        /*D* NAME: DDF$DBG_#
      116        7             CALL: CALL DDF$DBG_#( NTRY#, PTR$ ) ALTRET( can't do );
      117        8             INPUT: NTRY# - Entry number of desired entry in record.
      118        9             OUTPUT: PTR$ - Pointer to desired entry in record. */
      119       10                                                /**/
      120       11        DDF$DBG_#: PROC( NTRY#, PTR$ ) ALTRET;

     11  0 000000   000000 700200 xent  DDF$DBG_#    TSX0  ! X66_AUTO_2
         0 000001   000006 000002                    ZERO    6,2

      121       12                                                /**/
      122       13    1   DCL NTRY# UBIN;
      123       14    1   DCL PTR$ PTR;
      124       15        %INCLUDE B$OBJECT_C;
      125     3445        %B$LBNTRY1;
      126     3472        %B$EXST;
      127     3579        %B$INTNTRY;
      128     3637        %B$VREBL;
      129     3801        %INCLUDE XUH_MACRO_C;
      130     3885        %INCLUDE DD_SD_M;
      131     5221        %S_D;
      132     6539                                                /**/
      133     6540    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.NAMESIZ

   6540  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   001036 471500                    LDP1    542,,PR0
         0 000004   200003 473500                    LDP3    @NTRY#,,AUTO
         0 000005   100000 236100                    LDQ     0,,PR1
         0 000006   000022 772000                    QRL     18
         0 000007   300000 116100                    CMPQ    0,,PR3
         0 000010   000012 600000 0                  TZE     s:6541
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:33   
         0 000011   000013 603000 0                  TRC     s:6542

      134     6541    1        THEN ALTRETURN;

   6541  0 000012   000000 702200 xent               TSX2  ! X66_AALT

      135     6542    1        PTR$ = PINCRW( S_D.DBG$, NTRY# );

   6542  0 000013   300000 720100                    LXL0    0,,PR3
         0 000014   001005 474500                    LDP4    517,,PR0
         0 000015   400000 635510                    EPPR5   0,X0,PR4
         0 000016   200004 476500                    LDP6    @PTR$,,AUTO
         0 000017   600000 455500                    STP5    0,,PR6

      136     6543    1        RETURN;

   6543  0 000020   000000 702200 xent               TSX2  ! X66_ARET

      137     6544        %EJECT;
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:34   
      138     6545        /*D* NAME: DDF$EXST_#
      139     6546             CALL: CALL DDF$EXST_#( NTRY#, PTR$ ) ALTRET( can't do );
      140     6547             INPUT: NTRY# - Entry number of desired entry in record.
      141     6548             OUTPUT: PTR$ - Pointer to desired entry in record. */
      142     6549                                                /**/
      143     6550    1   DDF$EXST_#: ENTRY( NTRY#, PTR$ ) ALTRET;

   6550  0 000021   000000 700200 xent  DDF$EXST_#   TSX0  ! X66_AUTO_2
         0 000022   000006 000002                    ZERO    6,2

      144     6551                                                /**/
      145     6552    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.STMNTSIZ

   6552  0 000023   000000 470400 xsym               LDP0    S_D$
         0 000024   001036 471500                    LDP1    542,,PR0
         0 000025   200003 473500                    LDP3    @NTRY#,,AUTO
         0 000026   100001 236100                    LDQ     1,,PR1
         0 000027   000022 772000                    QRL     18
         0 000030   300000 116100                    CMPQ    0,,PR3
         0 000031   000033 600000 0                  TZE     s:6553
         0 000032   000034 603000 0                  TRC     s:6554

      146     6553    1        THEN ALTRETURN;

   6553  0 000033   000000 702200 xent               TSX2  ! X66_AALT

      147     6554    1        PTR$ = PINCRW( S_D.EXST$, NTRY# * SIZEW( B$EXST ) );

   6554  0 000034   300000 720100                    LXL0    0,,PR3
         0 000035   001010 474500                    LDP4    520,,PR0
         0 000036   000000 636010                    EAQ     0,X0
         0 000037   000022 772000                    QRL     18
         0 000040   000003 402007                    MPY     3,DL
         0 000041   400000 635506                    EPPR5   0,QL,PR4
         0 000042   200004 476500                    LDP6    @PTR$,,AUTO
         0 000043   600000 455500                    STP5    0,,PR6

PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:35   
      148     6555    1        RETURN;

   6555  0 000044   000000 702200 xent               TSX2  ! X66_ARET

      149     6556        %EJECT;
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:36   
      150     6557        /*D* NAME: DDF$IE_#
      151     6558             CALL: CALL DDF$IE_#( NTRY#, PTR$ ) ALTRET( can't do );
      152     6559             INPUT: NTRY# - Entry number of desired entry in record.
      153     6560             OUTPUT: PTR$ - Pointer to desired entry in record. */
      154     6561                                                /**/
      155     6562    1   DDF$IE_#: ENTRY( NTRY#, PTR$ ) ALTRET;

   6562  0 000045   000000 700200 xent  DDF$IE_#     TSX0  ! X66_AUTO_2
         0 000046   000006 000002                    ZERO    6,2

      156     6563                                                /**/
      157     6564    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.INTRYSIZ

   6564  0 000047   000000 470400 xsym               LDP0    S_D$
         0 000050   001036 471500                    LDP1    542,,PR0
         0 000051   200003 473500                    LDP3    @NTRY#,,AUTO
         0 000052   100003 236100                    LDQ     3,,PR1
         0 000053   000022 772000                    QRL     18
         0 000054   300000 116100                    CMPQ    0,,PR3
         0 000055   000057 600000 0                  TZE     s:6565
         0 000056   000060 603000 0                  TRC     s:6566

      158     6565    1        THEN ALTRETURN;

   6565  0 000057   000000 702200 xent               TSX2  ! X66_AALT

      159     6566    1        PTR$ = PINCRW( S_D.IE$, NTRY# * SIZEW( B$INTNTRY ) );

   6566  0 000060   300000 720100                    LXL0    0,,PR3
         0 000061   001013 474500                    LDP4    523,,PR0
         0 000062   000000 635010                    EAA     0,X0
         0 000063   000021 771000                    ARL     17
         0 000064   400000 635505                    EPPR5   0,AL,PR4
         0 000065   200004 476500                    LDP6    @PTR$,,AUTO
         0 000066   600000 455500                    STP5    0,,PR6

      160     6567    1        RETURN;
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:37   

   6567  0 000067   000000 702200 xent               TSX2  ! X66_ARET

      161     6568        %EJECT;
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:38   
      162     6569        /*D* NAME: DDF$VREBL_#
      163     6570             CALL: CALL DDF$VREBL_#( NTRY#, PTR$ ) ALTRET( can't do );
      164     6571             INPUT: NTRY# - Entry number of desired entry in record.
      165     6572             OUTPUT: PTR$ - Pointer to desired entry in record. */
      166     6573                                                /**/
      167     6574    1   DDF$VREBL_#: ENTRY( NTRY#, PTR$ ) ALTRET;

   6574  0 000070   000000 700200 xent  DDF$VREBL_#  TSX0  ! X66_AUTO_2
         0 000071   000006 000002                    ZERO    6,2

      168     6575                                                /**/
      169     6576    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.VREBLSIZ

   6576  0 000072   000000 470400 xsym               LDP0    S_D$
         0 000073   001036 471500                    LDP1    542,,PR0
         0 000074   200003 473500                    LDP3    @NTRY#,,AUTO
         0 000075   100002 236100                    LDQ     2,,PR1
         0 000076   000022 772000                    QRL     18
         0 000077   300000 116100                    CMPQ    0,,PR3
         0 000100   000102 600000 0                  TZE     s:6577
         0 000101   000103 603000 0                  TRC     s:6578

      170     6577    1        THEN ALTRETURN;

   6577  0 000102   000000 702200 xent               TSX2  ! X66_AALT

      171     6578    1        PTR$ = PINCRW( S_D.VREBL$, NTRY# * SIZEW( B$VREBL ) );

   6578  0 000103   300000 720100                    LXL0    0,,PR3
         0 000104   001016 474500                    LDP4    526,,PR0
         0 000105   000000 636010                    EAQ     0,X0
         0 000106   000022 772000                    QRL     18
         0 000107   000005 402007                    MPY     5,DL
         0 000110   400000 635506                    EPPR5   0,QL,PR4
         0 000111   200004 476500                    LDP6    @PTR$,,AUTO
         0 000112   600000 455500                    STP5    0,,PR6

PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:39   
      172     6579    1        RETURN;

   6579  0 000113   000000 702200 xent               TSX2  ! X66_ARET
      173     6580                                                /**/
      174     6581    1   END DDF$DBG_#;

PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:40   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDF$DBG_#.

   Procedure DDF$DBG_# requires 76 words for executable code.
   Procedure DDF$DBG_# requires 6 words of local(AUTO) storage.

    No errors detected in file DXF$NPNUM.:E05TSI    .
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:41   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:42   
          MINI XREF LISTING

B$EXST
      3473**DCL      6554--ASSIGN
B$EXST.OU
      3482**DCL      3488--REDEF
B$INTNTRY
      3580**DCL      6566--ASSIGN
B$INTNTRY.OU
      3584**DCL      3591--REDEF
B$LBNTRY1.INTRYSIZ
      3465**DCL      6564>>IF
B$LBNTRY1.NAMESIZ
      3447**DCL      6540>>IF
B$LBNTRY1.STMNTSIZ
      3453**DCL      6552>>IF
B$LBNTRY1.VREBLSIZ
      3459**DCL      6576>>IF
B$VREBL
      3638**DCL      6578--ASSIGN
B$VREBL.ADR
      3639**DCL      3651--REDEF
NTRY#
        13**DCL        11--PROC     6540>>IF       6542>>ASSIGN   6550--ENTRY    6552>>IF       6554>>ASSIGN
      6562--ENTRY    6564>>IF       6566>>ASSIGN   6574--ENTRY    6576>>IF       6578>>ASSIGN
PTR$
        14**DCL        11--PROC     6542<<ASSIGN   6550--ENTRY    6554<<ASSIGN   6562--ENTRY    6566<<ASSIGN
      6574--ENTRY    6578<<ASSIGN
S_D.CURRENT_CHANNEL
      6173**DCL      6175--REDEF
S_D.DBG$
      5623**DCL      6542>>ASSIGN
S_D.DEBUGA
      5325**DCL      5327--REDEF
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:43   
S_D.EIS
      6283**DCL      6312--REDEF
S_D.EXST$
      5629**DCL      6554>>ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      6216**DCL      6217--REDEF    6231--REDEF
S_D.IE$
      5635**DCL      6566>>ASSIGN
S_D.JDE
      5830**DCL      5831--REDEF
S_D.L$.VALUE
      5383**DCL      5389--REDEF    5397--REDEF    5400--REDEF    5403--REDEF    5406--REDEF
S_D.L$.VALUE.L
      5384**DCL      5385--REDEF    5386--REDEF
S_D.L6_MESSAGE_BUF
      6237**DCL      6239--REDEF
S_D.LB1$
      5661**DCL      6540>>IF       6552>>IF       6564>>IF       6576>>IF
S_D.OUTPUT
      6203**DCL      6205--REDEF
S_D.REMOTE_MSG.FNCC
      6222**DCL      6223--REDEF
S_D.REMOTE_MSG.STXC
      6218**DCL      6219--REDEF
S_D.REMOTE_MSG.SUBFNCC
      6226**DCL      6227--REDEF
S_D.SV
      5282**DCL      5303--REDEF
S_D.VREBL$
      5641**DCL      6578>>ASSIGN
S_D$
      6534**DCL      5230--IMP-PTR  6540>>IF       6542>>ASSIGN   6552>>IF       6554>>ASSIGN   6564>>IF
      6566>>ASSIGN   6576>>IF       6578>>ASSIGN
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:44   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDF$DBG_# File=DXF$NPNUM.:E05TSI                              TUE 07/29/97 15:11 Page:45   
              MINI UREF LISTING

DDF$DBG_#      11**PROC
DDF$EXST_#    6550**ENTRY
DDF$IE_#    6562**ENTRY
DDF$VREBL_#    6574**ENTRY
