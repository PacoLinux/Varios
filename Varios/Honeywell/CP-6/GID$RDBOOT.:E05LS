VERSION E05

PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:1    
        1        1        /*M* GID$RDBOOT Read boot image for BIGFOOT.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*     NAME:          GID$RDBOOT
        8        8                 PURPOSE:       Read boot image for BIGFOOT.
        9        9                 DESCRIPTION:
       10       10        GID$RDBOOT
       11       11          GID$RDBOOT is called by BIGFOOT during the boot process to read
       12       12          in the rest of the boot image from the diskette.
       13       13          Since this routine has a very special purpose, its interface
       14       14          closely resembles that of GIB$READCPLR, the routine used for local
       15       15          FEPS.
       16       16          Parameters:
       17       17            L66ADDR - host address of data to be read.  A zero-based host-word
       18       18                      address that we convert into a virtual sector number.
       19       19                      If L66ADDR resolves to a non-sector boundary then the
       20       20                      last 128 words of the recovery buffer area are used as
       21       21                      a temporary disk buffer.
       22       22            BUF$ - address of the buffer to receive the boot image.
       23       23            NUM_WORDS - the number of L6 words to be read in.
       24       24        */
       25       25        GID$RDBOOT: PROC(L66ADDR,BUF$,NUM_WORDS);
       26       26        /**/
       27       27        /*  INCLUDE FILES  */
       28       28        /**/
       29       29        %INCLUDE KP_SUBS;
       30      213        %INCLUDE IR_DATA_M;
       31      377        %GI_RCVR_EQU;
       32      389        %INCLUDE GM_VIRTUAL_E;
       33      599        %INCLUDE LCP_6;
       34     4878        /**/
       35     4879        /*  Parameters  */
       36     4880        /**/
       37     4881    1   DCL L66ADDR UBIN(32);
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:2    
       38     4882    1   DCL BUF$ PTR;
       39     4883    1   DCL NUM_WORDS UBIN(32);
       40     4884        /**/
       41     4885        /*  ENTRY DCLS  */
       42     4886        /**/
       43     4887    1   DCL GID$DISKIO ENTRY(4);
       44     4888    1   DCL GHH$ASD ENTRY(2);
       45     4889        /**/
       46     4890        /*  AUTO  */
       47     4891        /**/
       48     4892    1   DCL VSECTOR SBIN;
       49     4893    1   DCL OFFSET UBIN;
       50     4894    1   DCL NUM_BYTES UBIN(32);
       51     4895    1   DCL REM_BYTES UBIN(32);
       52     4896    1   DCL I UBIN(32);
       53     4897    1   DCL DBUF$ PTR;
       54     4898    1   DCL VBUF$ PTR;
       55     4899    1   DCL TBUF$ PTR;
       56     4900        /**/
       57     4901        /* CONSTANT */
       58     4902        /**/
       59     4903    1   DCL SBUFPTR UBIN(32) CONSTANT INIT(%(GI_RVBUF_LOC+256+128));
       60     4904    1   DCL SBUF$ REDEF SBUFPTR PTR;
       61     4905        /**/
       62     4906        /* BASED */
       63     4907        /**/
       64     4908    1   DCL CHARBASE CHAR(NUM_BYTES) BASED;
       65     4909        %G$ASDT (FPTN=G$ASDT,STCLASS="BASED(GID_MHJIT$)");
       66     4938        /**/
       67     4939        /* STATIC */
       68     4940        /**/
       69     4941    1   DCL GID_MHJIT$ PTR STATIC SYMDEF INIT(ADDR(NIL));
       70     4942        /**/
       71     4943        %EJECT;
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:3    
       72     4944        /**/
       73     4945        /*  Convert L66 address to virtual sector number.  Remembering that BIGFOOT   */
       74     4946        /*  expects his entire image to be contigous.  So all the addresses he        */
       75     4947        /*  passes us consider 0 as the beginning of his first 8K segment.            */
       76     4948        /**/
       77     4949    1           VSECTOR = (L66ADDR*4/256) + %KP_VSEC_BIG2# - %KP_NSEC_BIG1#;
       78     4950        /**/
       79     4951    1           OFFSET = MOD(L66ADDR*4,256);
       80     4952    1           REM_BYTES = NUM_WORDS*2;
       81     4953    1           DBUF$ = BUF$;
       82     4954        /**/
       83     4955    2           IF OFFSET ~= 0 THEN DO;
       84     4956    2              NUM_BYTES = 256;
       85     4957    2              I = 128;
       86     4958    2              IF GID_MHJIT$ = ADDR(NIL)
       87     4959    2              THEN
       88     4960    2                  TBUF$ = SBUF$;
       89     4961    2              ELSE
       90     4962    2                  TBUF$ = PINCRW(SBUF$,%GM_LOW_MEM_BASE);
       91     4963    2              CALL MAPPER(DBUF$,I,VBUF$);
       92     4964    2              CALL GID$DISKIO (VSECTOR,NUM_BYTES,TBUF$,0);
       93     4965    2              NUM_BYTES=256-OFFSET;
       94     4966    2              IF NUM_BYTES > REM_BYTES THEN /*N* MINIMUM function bombs PL6 here */
       95     4967    2                 NUM_BYTES = REM_BYTES;
       96     4968    2              VBUF$->CHARBASE = PINCRC(TBUF$,OFFSET)->CHARBASE;
       97     4969    2              VSECTOR = VSECTOR+1;
       98     4970    2              DBUF$ = PINCRC(DBUF$,NUM_BYTES);
       99     4971    2              REM_BYTES = REM_BYTES-NUM_BYTES;
      100     4972    2              END;
      101     4973    2           DO WHILE(REM_BYTES > 0);
      102     4974    2              NUM_BYTES = MINIMUM(32768,REM_BYTES);
      103     4975    2              I = NUM_BYTES/2;
      104     4976    2              CALL MAPPER(DBUF$,I,VBUF$);
      105     4977    2              CALL GID$DISKIO (VSECTOR,NUM_BYTES,VBUF$,0);
      106     4978    2              REM_BYTES = REM_BYTES-NUM_BYTES;
      107     4979    2              DBUF$ = PINCRC(DBUF$,NUM_BYTES);
      108     4980    2              VSECTOR = VSECTOR+(NUM_BYTES/256);
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:4    
      109     4981    2              END;
      110     4982    1           IF GID_MHJIT$ ~= ADDR(NIL) THEN
      111     4983    1              G$ASDT.DESC(29) = '0'B;
      112     4984    1      RETURN;
      113     4985        %EJECT;
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:5    
      114     4986    1   MAPPER: PROC(RBUF$,SIZE,VBUF$);
      115     4987    2   DCL RBUF$ PTR;
      116     4988    2   DCL RBUF REDEF RBUF$ UBIN(32);
      117     4989    2   DCL SIZE UBIN(32);
      118     4990    2   DCL VBUF$ PTR;
      119     4991    2   DCL W UBIN(32) CONSTANT INIT(%GM_SEG1400_BASE);
      120     4992    2   DCL W$ REDEF W PTR;
      121     4993        %G$SEGDESC (FPTN=SEGDESC,STCLASS=STATIC,
      122     4994                    RP=G_R_MON#,WP=G_R_MON#);
      123     5016    2           SEGDESC.BASE=RBUF/256;
      124     5017    2           SEGDESC.SIZE=((SIZE+255+MOD(RBUF,256))/256)-1;
      125     5018    2           CALL GHH$ASD(W$,SEGDESC);
      126     5019    2           VBUF$=PINCRW(W$,MOD(RBUF,256));
      127     5020    2           IF GID_MHJIT$~=ADDR(NIL) THEN
      128     5021    2              G$ASDT.DESC(29)=SEGDESC;
      129     5022    2           RETURN;
      130     5023    2   END MAPPER;
      131     5024        /**/
      132     5025    1      END GID$RDBOOT;

PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:6    
--  Include file information  --

   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure GID$RDBOOT.

   Procedure GID$RDBOOT requires 393 words for executable code.
   Procedure GID$RDBOOT requires 41 words of local(AUTO) storage.

    No errors detected in file GID$RDBOOT.:E05TSI    .

PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:7    

 Object Unit name= GID$RDBOOT                                 File name= GID$RDBOOT.:E05TOU
 UTS= JUL 29 '97 21:44:41.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      4      4  GID$RDBOOT
    1   Data  even  none     4      4  GID$RDBOOT
    2   Proc  even  none   393    189  GID$RDBOOT
    3  RoData even  none     4      4  GID$RDBOOT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        3  GID$RDBOOT

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    1      0  GID_MHJIT$

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 GID$DISKIO
         yes           Std       2 GHH$ASD
                       nStd      0 X6A_AUTO_3
                       nStd      0 X6C_ALR
                       nStd      0 X6A_ARET
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:8    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:9    


        1        1        /*M* GID$RDBOOT Read boot image for BIGFOOT.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*     NAME:          GID$RDBOOT
        8        8                 PURPOSE:       Read boot image for BIGFOOT.
        9        9                 DESCRIPTION:
       10       10        GID$RDBOOT
       11       11          GID$RDBOOT is called by BIGFOOT during the boot process to read
       12       12          in the rest of the boot image from the diskette.
       13       13          Since this routine has a very special purpose, its interface
       14       14          closely resembles that of GIB$READCPLR, the routine used for local
       15       15          FEPS.
       16       16          Parameters:
       17       17            L66ADDR - host address of data to be read.  A zero-based host-word
       18       18                      address that we convert into a virtual sector number.
       19       19                      If L66ADDR resolves to a non-sector boundary then the
       20       20                      last 128 words of the recovery buffer area are used as
       21       21                      a temporary disk buffer.
       22       22            BUF$ - address of the buffer to receive the boot image.
       23       23            NUM_WORDS - the number of L6 words to be read in.
       24       24        */
       25       25        GID$RDBOOT: PROC(L66ADDR,BUF$,NUM_WORDS);

     25   2 000000  D380 0000 0000  xent GID$RDBOOT      LNJ,B5   X6A_AUTO_3
          2 000003       0029 0003                       DC       41,3

       26       26        /**/
       27       27        /*  INCLUDE FILES  */
       28       28        /**/
       29       29        %INCLUDE KP_SUBS;
       30      213        %INCLUDE IR_DATA_M;
       31      377        %GI_RCVR_EQU;
       32      389        %INCLUDE GM_VIRTUAL_E;
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:10   
       33      599        %INCLUDE LCP_6;
       34     4878        /**/
       35     4879        /*  Parameters  */
       36     4880        /**/
       37     4881    1   DCL L66ADDR UBIN(32);
       38     4882    1   DCL BUF$ PTR;
       39     4883    1   DCL NUM_WORDS UBIN(32);
       40     4884        /**/
       41     4885        /*  ENTRY DCLS  */
       42     4886        /**/
       43     4887    1   DCL GID$DISKIO ENTRY(4);
       44     4888    1   DCL GHH$ASD ENTRY(2);
       45     4889        /**/
       46     4890        /*  AUTO  */
       47     4891        /**/
       48     4892    1   DCL VSECTOR SBIN;
       49     4893    1   DCL OFFSET UBIN;
       50     4894    1   DCL NUM_BYTES UBIN(32);
       51     4895    1   DCL REM_BYTES UBIN(32);
       52     4896    1   DCL I UBIN(32);
       53     4897    1   DCL DBUF$ PTR;
       54     4898    1   DCL VBUF$ PTR;
       55     4899    1   DCL TBUF$ PTR;
       56     4900        /**/
       57     4901        /* CONSTANT */
       58     4902        /**/
       59     4903    1   DCL SBUFPTR UBIN(32) CONSTANT INIT(%(GI_RVBUF_LOC+256+128));
       60     4904    1   DCL SBUF$ REDEF SBUFPTR PTR;
       61     4905        /**/
       62     4906        /* BASED */
       63     4907        /**/
       64     4908    1   DCL CHARBASE CHAR(NUM_BYTES) BASED;
       65     4909        %G$ASDT (FPTN=G$ASDT,STCLASS="BASED(GID_MHJIT$)");
       66     4938        /**/
       67     4939        /* STATIC */
       68     4940        /**/
       69     4941    1   DCL GID_MHJIT$ PTR STATIC SYMDEF INIT(ADDR(NIL));
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:11   
       70     4942        /**/
       71     4943        %EJECT;
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:12   
       72     4944        /**/
       73     4945        /*  Convert L66 address to virtual sector number.  Remembering that BIGFOOT   */
       74     4946        /*  expects his entire image to be contigous.  So all the addresses he        */
       75     4947        /*  passes us consider 0 as the beginning of his first 8K segment.            */
       76     4948        /**/
       77     4949    1           VSECTOR = (L66ADDR*4/256) + %KP_VSEC_BIG2# - %KP_NSEC_BIG1#;

   4949   2 000005  ECC7 0004                            LDB,B6   @L66ADDR,AUTO
          2 000007  8C86                                 LDI      ,B6
          2 000008  7082                                 DOL,R7   2
          2 000009  70C8                                 DOR,R7   8
          2 00000A  8470 0000 000B                       AID      11,IMO
          2 00000D  E857                                 LDR,R6   R7
          2 00000E  EF47 000A                            STR,R6   VSECTOR,AUTO

       78     4950        /**/
       79     4951    1           OFFSET = MOD(L66ADDR*4,256);

   4951   2 000010  8C86                                 LDI      ,B6
          2 000011  7082                                 DOL,R7   2
          2 000012  E857                                 LDR,R6   R7
          2 000013  E570 00FF                            AND,R6   255,IMO
          2 000015  EF47 000B                            STR,R6   OFFSET,AUTO

       80     4952    1           REM_BYTES = NUM_WORDS*2;

   4952   2 000017  DCC7 0008                            LDB,B5   @NUM_WORDS,AUTO
          2 000019  8C85                                 LDI      ,B5
          2 00001A  7081                                 DOL,R7   1
          2 00001B  8D47 000E                            SDI      REM_BYTES,AUTO

       81     4953    1           DBUF$ = BUF$;

   4953   2 00001D  CCC7 0006                            LDB,B4   @BUF$,AUTO
          2 00001F  BC84                                 LDB,B3   ,B4
          2 000020  BFC7 0012                            STB,B3   DBUF$,AUTO

PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:13   
       82     4954        /**/
       83     4955    2           IF OFFSET ~= 0 THEN DO;

   4955   2 000022  D847 000B                            LDR,R5   OFFSET,AUTO
          2 000024  5901 0096                            BEZ,R5   s:4973,PREL

       84     4956    2              NUM_BYTES = 256;

   4956   2 000026  8CF0 0000 0100                       LDI      256,IMO
          2 000029  8D47 000C                            SDI      NUM_BYTES,AUTO

       85     4957    2              I = 128;

   4957   2 00002B  8CF0 0000 0080                       LDI      128,IMO
          2 00002E  8D47 0010                            SDI      I,AUTO

       86     4958    2              IF GID_MHJIT$ = ADDR(NIL)

   4958   2 000030  8D80 0000 0000  01                   CMN      GID_MHJIT$
          2 000033  0981 0008                            BNE      s:4962,PREL

       87     4959    2              THEN
       88     4960    2                  TBUF$ = SBUF$;

   4960   2 000035  AC80 0000 0000  00                   LDB,B2   SBUFPTR
          2 000038  AFC7 0016                            STB,B2   TBUF$,AUTO
          2 00003A  0F81 0008                            B        s:4963,PREL

       89     4961    2              ELSE
       90     4962    2                  TBUF$ = PINCRW(SBUF$,%GM_LOW_MEM_BASE);

   4962   2 00003C  AC80 0000 0000  00                   LDB,B2   SBUFPTR
          2 00003F  9BC2 3000                            LAB,B1   12288,B2
          2 000041  9FC7 0016                            STB,B1   TBUF$,AUTO

       91     4963    2              CALL MAPPER(DBUF$,I,VBUF$);

PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:14   
   4963   2 000043  9BC7 0014                            LAB,B1   VBUF$,AUTO
          2 000045  9FC7 001E                            STB,B1   @SIZE+2,AUTO
          2 000047  EBC7 0010                            LAB,B6   I,AUTO
          2 000049  EFC7 001C                            STB,B6   @RBUF$+2,AUTO
          2 00004B  EBC7 0012                            LAB,B6   DBUF$,AUTO
          2 00004D  EFC7 001A                            STB,B6   TBUF$+4,AUTO
          2 00004F  E3C0 00E9                            LNJ,B6   s:0,PREL
          2 000051       0001                            DC       s:4964,PREL

       92     4964    2              CALL GID$DISKIO (VSECTOR,NUM_BYTES,TBUF$,0);

   4964   2 000052  EBF0 0000                            LAB,B6   0,IMO
          2 000054  EFC7 0026                            STB,B6   @VBUF$+8,AUTO
          2 000056  DBC7 0016                            LAB,B5   TBUF$,AUTO
          2 000058  DFC7 0024                            STB,B5   @VBUF$+6,AUTO
          2 00005A  CBC7 000C                            LAB,B4   NUM_BYTES,AUTO
          2 00005C  CFC7 0022                            STB,B4   @VBUF$+4,AUTO
          2 00005E  BBC7 000A                            LAB,B3   VSECTOR,AUTO
          2 000060  BFC7 0020                            STB,B3   @VBUF$+2,AUTO
          2 000062  BBC7 0020                            LAB,B3   @VBUF$+2,AUTO
          2 000064  CBF0 0400                            LAB,B4   1024,IMO
          2 000066  E380 0000 0000  xent                 LNJ,B6   GID$DISKIO
          2 000069       0001                            DC       s:4965,PREL

       93     4965    2              NUM_BYTES=256-OFFSET;

   4965   2 00006A  F847 000B                            LDR,R7   OFFSET,AUTO
          2 00006C  6C00                                 LDV,R6   0
          2 00006D  8656                                 CPL      R6
          2 00006E  8657                                 CPL      R7
          2 00006F  8470 0000 0101                       AID      257,IMO
          2 000072  8D47 000C                            SDI      NUM_BYTES,AUTO

       94     4966    2              IF NUM_BYTES > REM_BYTES THEN /*N* MINIMUM function bombs PL6 here */

   4966   2 000074  84C7 000E                            SID      REM_BYTES,AUTO
          2 000076  0681 0009                            BCF      s:4968,PREL
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:15   
          2 000078  6981 0003                            BNEZ,R6  s:4967,PREL
          2 00007A  7901 0005                            BEZ,R7   s:4968,PREL

       95     4967    2                 NUM_BYTES = REM_BYTES;

   4967   2 00007C  8CC7 000E                            LDI      REM_BYTES,AUTO
          2 00007E  8D47 000C                            SDI      NUM_BYTES,AUTO

       96     4968    2              VBUF$->CHARBASE = PINCRC(TBUF$,OFFSET)->CHARBASE;

   4968   2 000080  8CC7 000C                            LDI      NUM_BYTES,AUTO
          2 000082  E857                                 LDR,R6   R7
          2 000083  EF47 0020                            STR,R6   @VBUF$+2,AUTO
          2 000085  8CC7 0016                            LDI      TBUF$,AUTO
          2 000087  7031                                 DCL,R7   1
          2 000088  8D47 0021                            SDI      @VBUF$+3,AUTO
          2 00008A  F847 000B                            LDR,R7   OFFSET,AUTO
          2 00008C  6C00                                 LDV,R6   0
          2 00008D  8447 0021                            AID      @VBUF$+3,AUTO
          2 00008F  7071                                 DCR,R7   1
          2 000090  B856                                 LDR,R3   R6
          2 000091  E570 7FFF                            AND,R6   32767,IMO
          2 000093  8D47 0023                            SDI      @VBUF$+5,AUTO
          2 000095  ECC7 0023                            LDB,B6   @VBUF$+5,AUTO
          2 000097  304F                                 SOR,R3   15
          2 000098  8CC7 000C                            LDI      NUM_BYTES,AUTO
          2 00009A  E857                                 LDR,R6   R7
          2 00009B  BF47 0025                            STR,R3   @VBUF$+7,AUTO
          2 00009D  EF47 0026                            STR,R6   @VBUF$+8,AUTO
          2 00009F  EFC7 0027                            STB,B6   @VBUF$+9,AUTO
          2 0000A1  AB86                                 LAB,B2   ,B6
          2 0000A2  A853                                 LDR,R2   R3
          2 0000A3  BCC7 0014                            LDB,B3   VBUF$,AUTO
          2 0000A5  3C00                                 LDV,R3   0
          2 0000A6  F847 0020                            LDR,R7   @VBUF$+2,AUTO
          2 0000A8  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:16   
       97     4969    2              VSECTOR = VSECTOR+1;

   4969   2 0000AB  8AC7 000A                            INC      VSECTOR,AUTO

       98     4970    2              DBUF$ = PINCRC(DBUF$,NUM_BYTES);

   4970   2 0000AD  8CC7 0012                            LDI      DBUF$,AUTO
          2 0000AF  7031                                 DCL,R7   1
          2 0000B0  8447 000C                            AID      NUM_BYTES,AUTO
          2 0000B2  7071                                 DCR,R7   1
          2 0000B3  8D47 0012                            SDI      DBUF$,AUTO

       99     4971    2              REM_BYTES = REM_BYTES-NUM_BYTES;

   4971   2 0000B5  8CC7 000E                            LDI      REM_BYTES,AUTO
          2 0000B7  84C7 000C                            SID      NUM_BYTES,AUTO
          2 0000B9  8D47 000E                            SDI      REM_BYTES,AUTO

      100     4972    2              END;

      101     4973    2           DO WHILE(REM_BYTES > 0);

   4973   2 0000BB  84F0 0000 0000                       SID      0,IMO
          2 0000BE  0681 006B                            BCF      s:4982,PREL
          2 0000C0  6981 0003                            BNEZ,R6  s:4974,PREL
          2 0000C2  7901 0067                            BEZ,R7   s:4982,PREL

      102     4974    2              NUM_BYTES = MINIMUM(32768,REM_BYTES);

   4974   2 0000C4  8CC7 000E                            LDI      REM_BYTES,AUTO
          2 0000C6  8D47 0020                            SDI      @VBUF$+2,AUTO
          2 0000C8  84F0 0000 8000                       SID      32768,IMO
          2 0000CB  0681 000A                            BCF      s:4974+18,PREL
          2 0000CD  6981 0003                            BNEZ,R6  s:4974+13,PREL
          2 0000CF  7901 0006                            BEZ,R7   s:4974+18,PREL
          2 0000D1  8CF0 0000 8000                       LDI      32768,IMO
          2 0000D4  8D47 0020                            SDI      @VBUF$+2,AUTO
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:17   
          2 0000D6  8CC7 0020                            LDI      @VBUF$+2,AUTO
          2 0000D8  8D47 000C                            SDI      NUM_BYTES,AUTO

      103     4975    2              I = NUM_BYTES/2;

   4975   2 0000DA  70C1                                 DOR,R7   1
          2 0000DB  8D47 0010                            SDI      I,AUTO

      104     4976    2              CALL MAPPER(DBUF$,I,VBUF$);

   4976   2 0000DD  EBC7 0014                            LAB,B6   VBUF$,AUTO
          2 0000DF  EFC7 001E                            STB,B6   @SIZE+2,AUTO
          2 0000E1  DBC7 0010                            LAB,B5   I,AUTO
          2 0000E3  DFC7 001C                            STB,B5   @RBUF$+2,AUTO
          2 0000E5  CBC7 0012                            LAB,B4   DBUF$,AUTO
          2 0000E7  CFC7 001A                            STB,B4   TBUF$+4,AUTO
          2 0000E9  E3C0 004F                            LNJ,B6   s:0,PREL
          2 0000EB       0001                            DC       s:4977,PREL

      105     4977    2              CALL GID$DISKIO (VSECTOR,NUM_BYTES,VBUF$,0);

   4977   2 0000EC  EBF0 0000                            LAB,B6   0,IMO
          2 0000EE  EFC7 0026                            STB,B6   @VBUF$+8,AUTO
          2 0000F0  DBC7 0014                            LAB,B5   VBUF$,AUTO
          2 0000F2  DFC7 0024                            STB,B5   @VBUF$+6,AUTO
          2 0000F4  CBC7 000C                            LAB,B4   NUM_BYTES,AUTO
          2 0000F6  CFC7 0022                            STB,B4   @VBUF$+4,AUTO
          2 0000F8  BBC7 000A                            LAB,B3   VSECTOR,AUTO
          2 0000FA  BFC7 0020                            STB,B3   @VBUF$+2,AUTO
          2 0000FC  BBC7 0020                            LAB,B3   @VBUF$+2,AUTO
          2 0000FE  CBF0 0400                            LAB,B4   1024,IMO
          2 000100  E380 0000 0000  xent                 LNJ,B6   GID$DISKIO
          2 000103       0001                            DC       s:4978,PREL

      106     4978    2              REM_BYTES = REM_BYTES-NUM_BYTES;

   4978   2 000104  8CC7 000E                            LDI      REM_BYTES,AUTO
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:18   
          2 000106  84C7 000C                            SID      NUM_BYTES,AUTO
          2 000108  8D47 000E                            SDI      REM_BYTES,AUTO

      107     4979    2              DBUF$ = PINCRC(DBUF$,NUM_BYTES);

   4979   2 00010A  8CC7 0012                            LDI      DBUF$,AUTO
          2 00010C  7031                                 DCL,R7   1
          2 00010D  8447 000C                            AID      NUM_BYTES,AUTO
          2 00010F  7071                                 DCR,R7   1
          2 000110  8D47 0012                            SDI      DBUF$,AUTO

      108     4980    2              VSECTOR = VSECTOR+(NUM_BYTES/256);

   4980   2 000112  8CC7 000C                            LDI      NUM_BYTES,AUTO
          2 000114  70C8                                 DOR,R7   8
          2 000115  8D47 0020                            SDI      @VBUF$+2,AUTO
          2 000117  E847 000A                            LDR,R6   VSECTOR,AUTO
          2 000119  70F0                                 DAR,R7   16
          2 00011A  8447 0020                            AID      @VBUF$+2,AUTO
          2 00011C  E857                                 LDR,R6   R7
          2 00011D  EF47 000A                            STR,R6   VSECTOR,AUTO

      109     4981    2              END;

   4981   2 00011F  8CC7 000E                            LDI      REM_BYTES,AUTO
          2 000121  84F0 0000 0000                       SID      0,IMO
          2 000124  6981 0003                            BNEZ,R6  s:4981+9,PREL
          2 000126  7901 0003                            BEZ,R7   s:4982,PREL
          2 000128  0601 FF9B                            BCT      s:4974,PREL

      110     4982    1           IF GID_MHJIT$ ~= ADDR(NIL) THEN

   4982   2 00012A  8D80 0000 0000  01                   CMN      GID_MHJIT$
          2 00012D  0901 0008                            BE       s:4984,PREL

      111     4983    1              G$ASDT.DESC(29) = '0'B;

PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:19   
   4983   2 00012F  EC80 0000 0000  01                   LDB,B6   GID_MHJIT$
          2 000132  8746 003A                            CL       58,B6
          2 000134  8746 003B                            CL       59,B6

      112     4984    1      RETURN;

   4984   2 000136  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      113     4985        %EJECT;
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:20   
      114     4986    1   MAPPER: PROC(RBUF$,SIZE,VBUF$);

   4986   2 000139  EFC7 0018            MAPPER          STB,B6   TBUF$+2,AUTO

      115     4987    2   DCL RBUF$ PTR;
      116     4988    2   DCL RBUF REDEF RBUF$ UBIN(32);
      117     4989    2   DCL SIZE UBIN(32);
      118     4990    2   DCL VBUF$ PTR;
      119     4991    2   DCL W UBIN(32) CONSTANT INIT(%GM_SEG1400_BASE);
      120     4992    2   DCL W$ REDEF W PTR;
      121     4993        %G$SEGDESC (FPTN=SEGDESC,STCLASS=STATIC,
      122     4994                    RP=G_R_MON#,WP=G_R_MON#);
      123     5016    2           SEGDESC.BASE=RBUF/256;

   5016   2 00013B  DCC7 001A                            LDB,B5   @RBUF$,AUTO
          2 00013D  8C85                                 LDI      ,B5
          2 00013E  70C8                                 DOR,R7   8
          2 00013F  E857                                 LDR,R6   R7
          2 000140  EA80 0000 0002  01                   SRM,R6,'7FFF'X    SEGDESC
          2 000143       7FFF

      124     5017    2           SEGDESC.SIZE=((SIZE+255+MOD(RBUF,256))/256)-1;

   5017   2 000144  8C85                                 LDI      ,B5
          2 000145  E857                                 LDR,R6   R7
          2 000146  E570 00FF                            AND,R6   255,IMO
          2 000148  CCC7 001C                            LDB,B4   @SIZE,AUTO
          2 00014A  70F0                                 DAR,R7   16
          2 00014B  8404                                 AID      ,B4
          2 00014C  8470 0000 00FF                       AID      255,IMO
          2 00014F  82D7                                 LB,'00FF'X        R7
          2 000150       00FF
          2 000151  70E8                                 DAR,R7   8
          2 000152  6881 0006                            BGEZ,R6  s:5017+21,PREL
          2 000154  0581 0004                            BBF      s:5017+21,PREL
          2 000156  8470 0000 0001                       AID      1,IMO
          2 000159  8470 FFFF FFFF                       AID      -1,IMO
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:21   
          2 00015C  E857                                 LDR,R6   R7
          2 00015D  EA80 0000 0003  01                   SRM,R6,'01FF'X    SEGDESC+1
          2 000160       01FF

      125     5018    2           CALL GHH$ASD(W$,SEGDESC);

   5018   2 000161  BB80 0000 0000  03                   LAB,B3   0
          2 000164  CBF0 0200                            LAB,B4   512,IMO
          2 000166  E380 0000 0000  xent                 LNJ,B6   GHH$ASD
          2 000169       0001                            DC       s:5019,PREL

      126     5019    2           VBUF$=PINCRW(W$,MOD(RBUF,256));

   5019   2 00016A  ECC7 001A                            LDB,B6   @RBUF$,AUTO
          2 00016C  8C86                                 LDI      ,B6
          2 00016D  E857                                 LDR,R6   R7
          2 00016E  E570 00FF                            AND,R6   255,IMO
          2 000170  DC80 0000 0002  00                   LDB,B5   W
          2 000173  B856                                 LDR,R3   R6
          2 000174  CBB5                                 LAB,B4   ,B5,R3
          2 000175  BCC7 001E                            LDB,B3   @VBUF$,AUTO
          2 000177  CF83                                 STB,B4   ,B3

      127     5020    2           IF GID_MHJIT$~=ADDR(NIL) THEN

   5020   2 000178  8D80 0000 0000  01                   CMN      GID_MHJIT$
          2 00017B  0901 0009                            BE       s:5022,PREL

      128     5021    2              G$ASDT.DESC(29)=SEGDESC;

   5021   2 00017D  8C80 0000 0002  01                   LDI      SEGDESC
          2 000180  AC80 0000 0000  01                   LDB,B2   GID_MHJIT$
          2 000183  8D42 003A                            SDI      58,B2

      129     5022    2           RETURN;

   5022   2 000185  ECC7 0018                            LDB,B6   TBUF$+2,AUTO
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:22   
          2 000187  C3C6 0001                            LNJ,B4   1,B6
      130     5023    2   END MAPPER;
      131     5024        /**/
      132     5025    1      END GID$RDBOOT;

PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:23   
--  Include file information  --

   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure GID$RDBOOT.
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:24   

 **** Variables and constants ****

  ****  Section 000 RoData GID$RDBOOT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SBUF$                      0-0-0/w UBIN(32)    r     1 SBUFPTR
     2-0-0/w UBIN(32)    r     1 W                          2-0-0/w PTR         r     1 W$

  ****  Section 001  Data  GID$RDBOOT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GID_MHJIT$                 2-0-0/w STRC(32)    r     1 SEGDESC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @BUF$                      4-0-0/w PTR         r     1 @L66ADDR
     8-0-0/w PTR         r     1 @NUM_WORDS                1A-0-0/w PTR         r     1 @RBUF$
    1C-0-0/w PTR         r     1 @SIZE                     1E-0-0/w PTR         r     1 @VBUF$
    *0-0-0/w PTR         r     1 BUF$                      12-0-0/w PTR         r     1 DBUF$
    10-0-0/w UBIN(32)    r     1 I                         *0-0-0/w UBIN(32)    r     1 L66ADDR
     C-0-0/w UBIN(32)    r     1 NUM_BYTES                 *0-0-0/w UBIN(32)    r     1 NUM_WORDS
     B-0-0/w UBIN(16)    r     1 OFFSET                    *0-0-0/w UBIN(32)    r     1 RBUF
    *0-0-0/w PTR         r     1 RBUF$                      E-0-0/w UBIN(32)    r     1 REM_BYTES
    *0-0-0/w UBIN(32)    r     1 SIZE                      16-0-0/w PTR         r     1 TBUF$
    14-0-0/w PTR         r     1 VBUF$                     *0-0-0/w PTR         r     1 VBUF$
     A-0-0/w SBIN(16)    r     1 VSECTOR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:25   
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR        r     1 CHARBASE                   0-0-0/w STRC(32)    r     1 G$ASDT(0:30)


   Procedure GID$RDBOOT requires 393 words for executable code.
   Procedure GID$RDBOOT requires 41 words of local(AUTO) storage.

    No errors detected in file GID$RDBOOT.:E05TSI    .
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:26   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:27   
          MINI XREF LISTING

BUF$
      4882**DCL        25--PROC     4953>>ASSIGN
CHARBASE
      4908**DCL      4968<<ASSIGN   4968>>ASSIGN
DBUF$
      4897**DCL      4953<<ASSIGN   4963<>CALL     4970<<ASSIGN   4970>>ASSIGN   4976<>CALL     4979<<ASSIGN
      4979>>ASSIGN
G$ASDT.DESC
      4931**DCL      4983<<ASSIGN   5021<<ASSIGN
GHH$ASD
      4888**DCL-ENT  5018--CALL
GID$DISKIO
      4887**DCL-ENT  4964--CALL     4977--CALL
GID_MHJIT$
      4941**DCL      4914--IMP-PTR  4958>>IF       4982>>IF       4983>>ASSIGN   5020>>IF       5021>>ASSIGN
I
      4896**DCL      4957<<ASSIGN   4963<>CALL     4975<<ASSIGN   4976<>CALL
L66ADDR
      4881**DCL        25--PROC     4949>>ASSIGN   4951>>ASSIGN
MAPPER
      4986**PROC     4963--CALL     4976--CALL
NUM_BYTES
      4894**DCL      4908--IMP-SIZ  4956<<ASSIGN   4964<>CALL     4965<<ASSIGN   4966>>IF       4967<<ASSIGN
      4968>>ASSIGN   4968>>ASSIGN   4970>>ASSIGN   4971>>ASSIGN   4974<<ASSIGN   4975>>ASSIGN   4977<>CALL
      4978>>ASSIGN   4979>>ASSIGN   4980>>ASSIGN
NUM_WORDS
      4883**DCL        25--PROC     4952>>ASSIGN
OFFSET
      4893**DCL      4951<<ASSIGN   4955>>IF       4965>>ASSIGN   4968>>ASSIGN
RBUF IN PROCEDURE MAPPER
      4988**DCL      5016>>ASSIGN   5017>>ASSIGN   5019>>ASSIGN
RBUF$ IN PROCEDURE MAPPER
PL6.E3A0      #001=GID$RDBOOT File=GID$RDBOOT.:E05TSI                            TUE 07/29/97 21:44 Page:28   
      4987**DCL      4986--PROC     4988--REDEF
REM_BYTES
      4895**DCL      4952<<ASSIGN   4966>>IF       4967>>ASSIGN   4971<<ASSIGN   4971>>ASSIGN   4973>>DOWHILE
      4974>>ASSIGN   4978<<ASSIGN   4978>>ASSIGN
SBUF$
      4904**DCL      4960>>ASSIGN   4962>>ASSIGN
SBUFPTR
      4903**DCL      4904--REDEF
SEGDESC IN PROCEDURE MAPPER
      5008**DCL      5018<>CALL     5021>>ASSIGN
SEGDESC.BASE IN PROCEDURE MAPPER
      5012**DCL      5016<<ASSIGN
SEGDESC.SIZE IN PROCEDURE MAPPER
      5014**DCL      5017<<ASSIGN
SIZE IN PROCEDURE MAPPER
      4989**DCL      4986--PROC     5017>>ASSIGN
TBUF$
      4899**DCL      4960<<ASSIGN   4962<<ASSIGN   4964<>CALL     4968>>ASSIGN
VBUF$
      4898**DCL      4963<>CALL     4968>>ASSIGN   4976<>CALL     4977<>CALL
VBUF$ IN PROCEDURE MAPPER
      4990**DCL      4986--PROC     5019<<ASSIGN
VSECTOR
      4892**DCL      4949<<ASSIGN   4964<>CALL     4969<<ASSIGN   4969>>ASSIGN   4977<>CALL     4980<<ASSIGN
      4980>>ASSIGN
W IN PROCEDURE MAPPER
      4991**DCL      4992--REDEF
W$ IN PROCEDURE MAPPER
      4992**DCL      5018<>CALL     5019>>ASSIGN
