VERSION E05

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:1    
        1        1        /*M* FPO$OPNOD Contains Optical Disc open routines          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC    */
        8        8
        9        9        FPO$OPNOD: PROC   (PN$) ALTRET;
       10       10
       11       11        /*F*    NAME: FPO$OPNOD
       12       12                PURPOSE: Contains optical disc opening routines.
       13       13        */
       14       14        /*P*    NAME: FPO$OPNOD
       15       15                PURPOSE: Opens Optical Disc DCB.
       16       16                INPUT: PN$ - pointers from FPT_OPEN
       17       17        */
       18       18
       19       19         /*
       20       20              INCLUDE files:
       21       21        */
       22       22
       23       23        %INCLUDE B$JIT_C;
       24      337           %B$JIT0;
       25      426           %U$JIT1X;
       26      429           %M$JIT2;
       27      439           %F$JIT3;
       28      444           %S$JIT4X;
       29      447           %J$JIT5X;
       30      450           %A$JIT6X;
       31      453        %INCLUDE CP_6;
       32     6012        %INCLUDE CP_6_SUBS;
       33     6552        %INCLUDE F$CP6P_C;
       34     6563        %INCLUDE F$CP6V_C;
       35     6789           %FPT$OPEN_V;
       36     6804           %VLP$SN_V;
       37     6807        %MACRO F$DCBBJ(BASED=BASED);
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:2    
       38     6808        %INCLUDE F$DCB;
       39     6857        %MEND;
       40     6858           %F$DCBBJ(BASED="BASED(JDCB$)");
       41     6908        %INCLUDE F_ERRORS_C;
       42     7148        %INCLUDE F_FMTCODE_C;
       43     7182        %INCLUDE F_FPTCODE_C;
       44     7218        %INCLUDE FM_BUF_R;
       45     7227        %INCLUDE FM$CFU;
       46     7272            %FT$CFUSN;
       47     7275           %FM$CFUJ;
       48     7280        %INCLUDE FM$GRAN;
       49     7349            %FM$GRAN;
       50     7353        %INCLUDE FM$FIT;
       51     7574            %FM$FIT;
       52     7577           %CODE02;
       53     7581           %CODE03;
       54     7588           %CODE04;
       55     7596        %CODE16;
       56     7604        %INCLUDE FR_SUBS;
       57     7672        %INCLUDE FR$RAT;
       58     7725        %FR$RAT;
       59     7765        %MACRO FT$DDTBD(BASED=BASED);
       60     7766        %INCLUDE FT$DDT;
       61     7827        %MEND;
       62     7828           %FT$DDTBD(BASED="BASED(DDDT$)");
       63     7890        %INCLUDE FT$LBLS;
       64     8158        %INCLUDE FT$RECS;
       65     8226        %INCLUDE FT_SUBS;
       66     8306        %INCLUDE NI_DATA_R;
       67     8743        %INCLUDE NK$LDCT;
       68     8845            %NK$LDCT;
       69     8891        /*    %INCLUDE NK_LDCT_R;   */
       70     8892        %INCLUDE KI_MACROS_C;
       71     9500        %INCLUDE P_ERRORS_C;
       72     9512
       73     9513         /***
       74     9514          *** External routines:
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:3    
       75     9515          ***/
       76     9516
       77     9517    1   DCL FMD$GETBUF ENTRY(3);                /* Get label buffers    */
       78     9518    1   DCL FMN$CHKFLACN ENTRY(1) ALTRET;       /* Verify file name and account       */
       79     9519    1   DCL FMO$BLDFIT ENTRY(1) ALTRET;         /* Build a FIT in FPOOL buffer        */
       80     9520    1   DCL FMO$LOCCODE ENTRY(2) ALTRET;        /* Find FIT information               */
       81     9521    1   DCL FMO$SECCHK ENTRY(2);                /* Security checks                    */
       82     9522    1   DCL FMO$TRNINFO ENTRY(2) ALTRET;        /* Transfer FIT info                  */
       83     9523    1   DCL FRA$OPR ENTRY ALTRET;               /* Get OD   mounted                   */
       84     9524    1   DCL FRB$CLS ENTRY;                      /* Close OD and release resource    */
       85     9525    1   DCL FSA$GSP ENTRY(2) ALTRET;            /* Get RO space                       */
       86     9526    1   DCL FSF$TAPEFORM ENTRY ALTRET;          /* Set up FORM info for UR/SYMB       */
       87     9527    1   DCL FPC$DFLTCLOSE ENTRY;                /* Default close after test open      */
       88     9528    1   DCL FTO$SNLIST ENTRY(1);                /* Get SN list            */
       89     9529    1   DCL FPO$PEOV ENTRY(1) ALTRET;           /* Position to end of vol */
       90     9530    1   DCL FPO$WRODBLK ENTRY(1) ALTRET;        /* Write OD block         */
       91     9531    1   DCL FPO$RDODBLK ENTRY(1) ALTRET;        /* Read OD block          */
       92     9532    1   DCL FPO$FINDFSN ENTRY(1) ALTRET;        /* Position to file by FSN */
       93     9533    1   DCL FPO$FINDFILE ENTRY(1) ALTRET;       /* Position to file by name */
       94     9534    1   DCL FPO$OPENIN ENTRY ALTRET;            /* Open positioned-to file. */
       95     9535    1   DCL FPO$COPYDEV ENTRY ALTRET;           /* Copy discs         */
       96     9536    1   DCL FTL$CVOL ENTRY(5) ALTRET;           /* Volume changing                    */
       97     9537    1   DCL FTL$LBLS ENTRY(2) ALTRET;           /* Write header labels    */
       98     9538    1   DCL FTR$CHNGVOLNR ENTRY(1) ALTRET;      /* Mount next volume of set */
       99     9539    1   DCL FTR$RELCFUS ENTRY ALTRET;           /* Release CFUs                       */
      100     9540    1   DCL FTR$RELFPOOLS ENTRY ALTRET;         /* Release all FPOOL buffers          */
      101     9541    1   DCL FTR$SETSN ENTRY(2) ALTRET;          /* Set actual serial number           */
      102     9542    1   DCL HFF$DSIZ ENTRY(2) ALTRET;           /* Determine segment size             */
      103     9543    1   DCL SSS$SYSTIME ENTRY(1);               /* Get UTS                            */
      104     9544    1   DCL UMT$UTSJ ENTRY(2) ALTRET;           /* Converts Julian date to UTS        */
      105     9545    1   DCL KIN$CONV_NODENAME ENTRY(3) ALTRET;
      106     9546
      107     9547         /***
      108     9548          *** SYMREF data:
      109     9549          ***/
      110     9550
      111     9551    1   DCL B$JIT$ PTR SYMREF;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:4    
      112     9552    1   DCL FR$HD$(0:0) PTR SYMREF;
      113     9553    1   DCL KI_ROUTE$$ PTR SYMREF;
      114     9554    1   DCL NK$LDCT$(0:0) PTR BASED(N$DCT$$);
      115     9555
      116     9556         /***
      117     9557          *** Parameter:
      118     9558          ***/
      119     9559
      120     9560           %FPT$OPEN_P(FPTN=PN$,PFMT=PTR,STCLASS=" ");
      121     9566
      122     9567         /***
      123     9568          *** BASED:
      124     9569          ***/
      125     9570
      126     9571    1   DCL 1 LASTKEY UNAL BASED,
      127     9572    1         2 * CHAR(256) UNAL;
      128     9573    1   DCL 1 FOUR_SNS UNAL BASED,
      129     9574    1         2 * UBIN WORD UNAL,
      130     9575    1         2 SNS CHAR(24) UNAL;
      131     9576        %NI$DQH;
      132     9599        %KI$ROUTE (STCLASS = BASED);
      133     9653    1   DCL KI$ROUTE$(0:0) PTR BASED(KI_ROUTE$$);
      134     9654    1   DCL SER CHAR(6) BASED;
      135     9655
      136     9656         /***
      137     9657          *** AUTO data:
      138     9658          ***/
      139     9659
      140     9660    1   DCL AFPOOL$ PTR AUTO;                   /* Pointer to FPOOL buffer            */
      141     9661    1   DCL BACKUP_FM_CNT SBIN AUTO;            /* Number of file marks to back up    */
      142     9662    1   DCL CREATE_DATE_UTS SBIN AUTO;          /* Creation date UTS                  */
      143     9663    1   DCL DDDT$ PTR AUTO;                /* Pointer to DDT entry for DCB's device   */
      144     9664        %VLP_ERRCODE(FPTN=ERRSAV,STCLASS=AUTO); /* To save B$JIT.ERR                  */
      145     9709    1   DCL I SBIN AUTO;                        /* Used as temp and index             */
      146     9710    1   DCL J SBIN AUTO;                        /* Used as temp and index             */
      147     9711    1   DCL JDCB$ PTR AUTO;                     /* Pointer to DCB                     */
      148     9712    1   DCL DCT$ PTR;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:5    
      149     9713    1   DCL O$ PTR;
      150     9714    1   DCL LBL1$ PTR;
      151     9715    1   DCL LBL2$ PTR;
      152     9716    1   DCL SKIPS SBIN;
      153     9717    1   DCL SECTFIND BIT(1);
      154     9718    1   DCL THISFSN SBIN AUTO;
      155     9719    1   DCL THISFSECT SBIN AUTO;
      156     9720    1   DCL NO_IFPARAM_RESTRICT BIT(1) AUTO;    /* Indicates FITless RESTRICT file    */
      157     9721    1   DCL FILE_NAME CHAR(31) ALIGNED AUTO;    /* Name of current file on OD         */
      158     9722    1   DCL FILE_SEQ SBIN ALIGNED AUTO;    /* Sequence number of current file on OD */
      159     9723    1   DCL TEMP$ PTR AUTO;                     /* A useful item                      */
      160     9724    1   DCL MAXBLKL SBIN WORD AUTO;             /* Max possible BLKL                  */
      161     9725
      162     9726         /***
      163     9727          *** CONSTANT data:
      164     9728          ***/
      165     9729
      166     9730        %EQU FT_MAXFMTS=4;
      167     9731    1   DCL FT_FORMAT(0:%FT_MAXFMTS) UBIN BYTE UNAL CONSTANT INIT(
      168     9732    1      ASCBIN('D'),
      169     9733    1      ASCBIN('S'),
      170     9734    1      ASCBIN('V'),
      171     9735    1      ASCBIN('F'),
      172     9736    1      ASCBIN('U') );
      173     9737                                      /* Known basic tape formats...U must be last    */
      174     9738        %EQU FT_MAXCP6FMT=10;
      175     9739    1   DCL FT_CP6FMT(0:%FT_MAXCP6FMT) UBIN BYTE UNAL CONSTANT INIT(
      176     9740    1      ASCBIN('C'),
      177     9741    1      ASCBIN('K'),
      178     9742    1      ASCBIN('R'),
      179     9743    1      ASCBIN('X'),
      180     9744    1      ASCBIN('x'),
      181     9745    1      ASCBIN('F'),
      182     9746    1      ASCBIN('I'),
      183     9747    1      ASCBIN('D'),
      184     9748    1      ASCBIN('U'),
      185     9749    1      ASCBIN('S'),
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:6    
      186     9750    1      ASCBIN('i') );
      187     9751    1   DCL FT_CP6FMTORG(0:%FT_MAXCP6FMT) UBIN BYTE UNAL CONSTANT INIT(
      188     9752    1      %CONSEC#,
      189     9753    1      %KEYED#,
      190     9754    1      %RANDOM#,
      191     9755    1      %RESTRICT#,
      192     9756    1      %RESTRICT#,
      193     9757    1      %RELATIVE#,
      194     9758    1      %INDEXED#,
      195     9759    1      %IDS#,
      196     9760    1      %UR#,
      197     9761    1      %SYMB#,
      198     9762    1      %IREL# );
      199     9763
      200     9764        %FPT_PFIL(FPTN=FPT_PFIL_EOF,BOF=NO,STCLASS=CONSTANT);
      201     9779
      202     9780        %FT$ERR (ERRNAME=E_BADFEP,FCG='0620'O,MID='17'O,CODE=%E$BAD_FEP,SEV=2);
      203     9788        /*E*  ERROR: FPO-E$BAD_FEP-2
      204     9789              MESSAGE: There is no OD Controller with that node name.
      205     9790              MESSAGE1: A device open with no SN must have a valid Optical
      206     9791                 disc Controller type FEP Node Designator.
      207     9792        */
      208     9793
      209     9794        %FT$ERR( ERRNAME=E_BADFSN, FCG='0620'O, MID='17'O, CODE=%E$BADFSN, SEV=2 );
      210     9802        /*E*     ERROR: FPO-E$BADFSN-2
      211     9803                 MESSAGE: FSN > 262143% for %TA%
      212     9804                 MESSAGE1: You can't create an OD file with file sequence
      213     9805                           number greater than 262143.
      214     9806                 DESCRIPTION: Because the UBIN(18) FSN would wrap.
      215     9807         ***/
      216     9808
      217     9809        %FT$ERR( ERRNAME=E_BADODFORMAT, FCG='0620'O, MID='17'O, CODE=%E$BADODFORMAT, SEV=2 )
              9809            ;
      218     9817        /*E*     ERROR: FPO-E$BADODFORMAT-2
      219     9818                 MESSAGE:  Invalid Optical Disk format% for OD#%SN%
      220     9819                 MESSAGE1: A non-CP6 "tape" format was found on your Optical Disk
      221     9820                           volume% (OD#%SN)%.  This should never happen.
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:7    
      222     9821                 DESCRIPTION: Since CP6 creates all optical disk volumes, this should
      223     9822                              never happen.  But just in case it does, tell the user.
      224     9823         ***/
      225     9824
      226     9825        %FT$ERR( ERRNAME=E_BRDUPSN, FCG='0620'O, MID='17'O, CODE=%E$BRDUPSN, SEV=2 );
      227     9833        /*E*     ERROR: FPO-E$BRDUPSN-2
      228     9834                 MESSAGE: Blank or duplicate serial number% on DCB %DC%
      229     9835                 MESSAGE1: The serial number list contains either a blank
      230     9836                    serial number between non-blank serial numbers or a
      231     9837                    serial number that is duplicated% on DCB %DC%.
      232     9838         ***/
      233     9839
      234     9840        %FT$ERR( ERRNAME=E_EOSET, FCG='0620'O, MID='17'O, CODE=%E$EOSET, SEV=2 );
      235     9848        /*E*     ERROR: FPO-E$EOSET-2
      236     9849                 MESSAGE: Beginning/end of volume set% looking for %TA%
      237     9850                 MESSAGE1: On an open NXTF the beginning or end of set
      238     9851                    was detected% on OD#%SN% looking for %TA%
      239     9852         ***/
      240     9853
      241     9854        %FT$ERR( ERRNAME=E_FSNERR, FCG='0620'O, MID='17'O, CODE=%E$FSNERR, SEV=2 );
      242     9862        /*E*     ERROR: FPO-E$FSNERR-2
      243     9863                 MESSAGE: File sequence number error% on %TA%
      244     9864                 MESSAGE1: File specified by sequence number was not found
      245     9865                    because file sequence numbers in volume set were out of order.
      246     9866         ***/
      247     9867
      248     9868        %FT$ERR( ERRNAME=E_INVLDFUN, FCG='0620'O, MID='17'O, CODE=%E$INVLDFUN, SEV=2);
      249     9876        /*E*     ERROR: FPO-E$INVLDFUN-2
      250     9877                 MESSAGE: Invalid FUN specified for Optical Disc file open% of %TA%.
      251     9878                 MESSAGE1: Optical Disc files may only be opened CREATE or IN.
      252     9879        */
      253     9880
      254     9881        %FT$ERR( ERRNAME=E_INVLDORG, FCG='0620'O, MID='17'O, CODE=%E$INVLDORG, SEV=2);
      255     9889        /*E*     ERROR: FPO-E$INVLDORG-2
      256     9890                 MESSAGE: Invalid ORG specified for Optical Disc file open% of %TA%.
      257     9891                 MESSAGE1: Optical Disc files may only have organizations of CONSEC,
      258     9892                    FIXED, INDEXED, IREL, KEYED, RESTRICT, UR, VARIABLE, and SYMB.
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:8    
      259     9893        */
      260     9894
      261     9895        %FT$ERR( ERRNAME=E_IOERR, FCG='0620'O, MID='17'O, CODE=%E$IOERR, SEV=2 );
      262     9903        /*E*     ERROR: FPO-E$IOERR-2
      263     9904                 MESSAGE: Unable to read or write optical disk sector% on %TA%
      264     9905         ***/
      265     9906
      266     9907        %FT$ERR( ERRNAME=E_NOACCESS, FCG='0620'O, MID='17'O, CODE=%E$NOACCESS, SEV=2 );
      267     9915        /*E*     ERROR: FPO-E$NOACCESS-2
      268     9916                 MESSAGE: Access denied% to %TA%% through DCB %DC%
      269     9917                 DESCRIPTION: Attempt to open a file to which access is denied.
      270     9918         ***/
      271     9919
      272     9920        %FT$ERR( ERRNAME=E_NOCFUS, FCG='0620'O, MID='17'O, CODE=%E$NOCFUS, SEV=2 );
      273     9928        /*E*     ERROR: FPO-E$NOCFUS
      274     9929                 MESSAGE: No system table space for SN list% for %TA%
      275     9930                 MESSAGE1: There is no CFU space for a serial number table.
      276     9931                 DESCRIPTION: There is not enough CFU space to hold the user's
      277     9932                    serial number list.
      278     9933         ***/
      279     9934
      280     9935        %FT$ERR( ERRNAME=E_NOFIDTHIS, FCG='0620'O, MID='17'O, CODE=%E$NOFIDTHIS, SEV=2 );
      281     9943        /*E*     ERROR: FPO-E$NOFIDTHIS-2
      282     9944                 MESSAGE: No file specified% on DCB %DC%
      283     9945                 MESSAGE1: No file name or file sequence number is specified.
      284     9946                 DESCRIPTION: An attempt to open an input or update tape file
      285     9947                    with no name was specified.
      286     9948         ***/
      287     9949
      288     9950        %FT$ERR( ERRNAME=E_NOFILE, FCG='0620'O, MID='17'O, CODE=%E$NOFILE , SEV=2 );
      289     9958        /*E*     ERROR: FPO-E$NOFILE-2
      290     9959                 MESSAGE: File% %TA% specified in DCB% %DC% was not found
      291     9960         ***/
      292     9961
      293     9962        %FT$ERR( ERRNAME=E_NOFPOOL, FCG='0620'O, MID='17'O, CODE=%E$NOFPOOL, SEV=2 );
      294     9970        /*E*     ERROR: FPO-E$NOFPOOL-2
      295     9971                 MESSAGE: Not enough FPOOLs% for %TA%
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:9    
      296     9972                 MESSAGE1: FPOOL limit does not permit label processing and
      297     9973                    file blocking/deblocking.
      298     9974         ***/
      299     9975
      300     9976        %FT$ERR( ERRNAME=E_NOIFPARAM, FCG='0620'O, MID='17'O, CODE=%E$NOIFPARAM, SEV=2 );
      301     9984        /*E*     ERROR: FPO-E$NOIFPARAM
      302     9985                 MESSAGE: No IFPARAM specified% for %TA%
      303     9986                 MESSAGE1: Restrict tape files must have IFPARAM specified
      304     9987                           for creation.
      305     9988                 DESCRIPTION: An attempt to open a RESTRICT tape file in
      306     9989                    CREATE mode without having an IFPARAM buffer was made.
      307     9990         ***/
      308     9991
      309     9992        %FT$ERR( ERRNAME=E_NORESTRICT, FCG='0620'O, MID='17'O, CODE=%E$NORESTRICT, SEV=2 );
      310    10000        /*E*     ERROR: FPO-E$NORESTRICT-2
      311    10001                 MESSAGE: No access to RESTRICT format files allowed% on DCB %DC%
      312    10002                 MESSAGE1: FMBLK privilege is needed to access RESTRICT
      313    10003                    format tape files.
      314    10004         ***/
      315    10005
      316    10006        %FT$ERR( ERRNAME=E_NOSN, FCG='0620'O, MID='17'O, CODE=%E$NOSN, SEV=2 );
      317    10014        /*E*     ERROR: FPO-E$NOSN-2
      318    10015                 MESSAGE: No SN specified% on DCB %DC%
      319    10016                 MESSAGE1: An attempt was made to open an input or update volume, or to
      320    10017                    mount a volume, with no serial number.
      321    10018         ***/
      322    10019
      323    10020        %FT$ERR( ERRNAME=E_NOTOWNR, FCG='0620'O, MID='17'O, CODE=%E$NOTOWNR, SEV=2 );
      324    10028        /*E*     ERROR: FPO-E$NOTOWNR-2
      325    10029                 MESSAGE: Only owner access allowed% to OD#%SN%
      326    10030                 MESSAGE1: The owner of this volume set protected this volume
      327    10031                    against all public access.
      328    10032         ***/
      329    10033
      330    10034        %FT$ERR( ERRNAME=E_NOTOWNRW, FCG='0620'O, MID='17'O, CODE=%E$NOTOWNRW, SEV=2 );
      331    10042        /*E*     ERROR: FPO-E$NOTOWNRW-2
      332    10043                 MESSAGE: Only owner write access allowed% to OD#%SN%
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:10   
      333    10044                 MESSAGE1: The owner of this volume set protected this volume
      334    10045                    against all public write access.
      335    10046         ***/
      336    10047
      337    10048        %FT$ERR( ERRNAME=E_ODEMPTYENT, FCG='0620'O, MID='17'O, CODE=%E$ODEMPTYENT, SEV=2 );
      338    10056        /*E*     ERROR: FPO-E$ODEMPTYENT-2
      339    10057                 MESSAGE: Empty optical disk file entry% on OD#%SN%
      340    10058                 MESSAGE1: The file entry of the optical disk file you tried to open
      341    10059                    was empty, because the file is inaccessible due to errors while
      342    10060                    building the file directory for this platter% (OD#%SN)%.
      343    10061         ***/
      344    10062
      345    10063        %FT$ERR( ERRNAME=E_SCRORDER, FCG='0620'O, MID='17'O, CODE=%E$SCRORDER, SEV=2 );
      346    10071        /*E*     ERROR: FPO-E$SCRORDER-2
      347    10072                 MESSAGE: Out of order ANSscratch volume% on DCB %DC%
      348    10073                 MESSAGE1: ANSscratch tapes can not be CVOLed to unless
      349    10074                           at beginning of volume set.
      350    10075                 DESCRIPTION: Attempt to open a scratch tape not at set beginning.
      351    10076                    This error helps to enforce ANS FSN field in HDR1 by ensuring
      352    10077                    that the correct FSN is always known.
      353    10078         ***/
      354    10079
      355    10080        %FT$ERR( ERRNAME=E_SECTERR, FCG='0620'O, MID='17'O, CODE=%E$SECTERR, SEV=2 );
      356    10088        /*E*     ERROR: FPO-E$SECTERR-2
      357    10089                 MESSAGE: File section missing% for %TA%
      358    10090                 MESSAGE1: A file section which should be present can not
      359    10091                           be found in the volume set as described in the
      360    10092                           serial number list.
      361    10093                 DESCRIPTION: The previous or next file section couldn't
      362    10094                    be found.
      363    10095         ***/
      364    10096
      365    10097        %FT$ERR( ERRNAME=E_VOLERR, FCG='0620'O, MID='17'O, CODE=%E$VOLERR, SEV=2 );
      366    10105        /*E*    ERROR: FPO-E$VOLERR-2
      367    10106                 MESSAGE: Too many serial numbers% on DCB %DC%.
      368    10107                 MESSAGE1: A DEVICE open of an optical disk platter may specify
      369    10108                           at most one serial number.
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:11   
      370    10109                DESCRIPTION: The user specified more than one SN.
      371    10110         ***/
      372    10111
      373    10112        %FT$ERR( ERRNAME=E_VOLORDER, FCG='0620'O, MID='17'O, CODE=%E$VOLORDER, SEV=2 );
      374    10120        /*E*     ERROR: FPO-E$VOLORDER-2
      375    10121                 MESSAGE: Volume missing or out of order% for %TA%
      376    10122                 MESSAGE1: The volume with expected file sequence numbers or file
      377    10123                           section cannot be found in the volume set as described
      378    10124                           in the serial number list.
      379    10125                 DESCRIPTION: Either an attempt to find a file by its sequence number
      380    10126                    failed even though files with higher and lower sequence numbers
      381    10127                    were found, or an attempt to file a file section failed although
      382    10128                    lower and higher file sections were found.
      383    10129         ***/
      384    10130
      385    10131        %FT$ERR( ERRNAME=E_VOLOUT, FCG='0620'O, MID='17'O, CODE=%E$VOLOUT, SEV=2 );
      386    10139        /*E*     ERROR: FPO-E$VOLOUT-2
      387    10140                 MESSAGE: No more volumes% for %TA%
      388    10141                 DESCRIPTION: DCB.MAXVOL = 0 and no more serial
      389    10142                    numbers exist.
      390    10143         ***/
      391    10144
      392    10145        %FT$ERR( ERRNAME=E_WRONGSN, FCG='0620'O, MID='17'O, CODE=%E$WRONGSN, SEV=2 );
      393    10153        /*E*    ERROR: FPO-E$WRONGSN-2
      394    10154                MESSAGE: End of volume set% on %TA%. Tape is empty.
      395    10155                MESSAGE1: The operator mounted a tape with a serial number
      396    10156                          different from the one in VOL1. This tape will be
      397    10157                          treated as an empty tape.
      398    10158         ***/
      399    10159
      400    10160        %FT$ERR( ERRNAME=E_WRITEPROT, FCG='0620'O, MID='17'O, CODE=%E$WRITEPROT, SEV=2 );
      401    10168        /*E*    ERROR: FPO-E$WRITEPROT-2
      402    10169                MESSAGE: Optical disk volume% OD#%SN% is write protected.
      403    10170                MESSAGE1: Optical disk volume% OD#%SN% is write protected, either via
      404    10171                          the write protect tab on the platter, or via the write
      405    10172                          protect switch on the optical disk drive.  Create opens
      406    10173                          to write protected optical disks are self defeating.
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:12   
      407    10174         ***/
      408    10175
      409    10176
      410    10177        /****************************/
      411    10178
      412    10179    1         JDCB$ = B$JIT.DCB$;               /* Get pointer to DCB                 */
      413    10180    1         F$DCB.CFU$ = ADDR(NIL);           /* Assume only one vol in set         */
      414    10181
      415    10182    1         F$DCB.IFMT = FMTOD#;
      416    10183    1         F$DCB.IASN = %OD#;
      417    10184    1         IF F$DCB.ORG = %RESTRICT# AND F$DCB.FUN = %CREATE# THEN
      418    10185    1            F$DCB.ACS = %BLOCK#;
      419    10186    1         ELSE
      420    10187    1            F$DCB.ACS = %SEQUEN#;     /* No DIRECT use of OPTICAL DISC      */
      421    10188    1         IF F$DCB.ASN = %DEVICE# OR PN$.V_->FPT$OPEN_V.OPER.MNTONLY THEN
      422    10189    1            CALL FPO_OPNDEV ALTRET(FREEPOOLS);
      423    10190    2         ELSE DO;
      424    10191    3            DO CASE(F$DCB.FUN);
      425    10192    3             CASE(%CREATE#);               /* Create                             */
      426    10193    3               IF  F$DCB.ORG ~= %CONSEC# AND F$DCB.ORG ~= %FIXED# AND
      427    10194    3                  F$DCB.ORG ~= %INDEXED# AND F$DCB.ORG ~= %IREL# AND
      428    10195    3                  F$DCB.ORG ~= %KEYED# AND F$DCB.ORG ~= %RESTRICT# AND
      429    10196    3                  F$DCB.ORG ~= %UR# AND F$DCB.ORG ~= %VARIABLE# AND
      430    10197    4                  F$DCB.ORG ~= %SYMB# THEN DO;
      431    10198    4                  B$JIT.ERR = E_INVLDORG;  /* Invalid ORG for optical disk.      */
      432    10199    4                  GOTO FREEPOOLS;
      433    10200    4                  END;
      434    10201    3               CALL FPO_OPNCREATE ALTRET(FREEPOOLS);
      435    10202    3               IF F$DCB.ORG = %KEYED# OR F$DCB.ORG = %INDEXED# THEN
      436    10203    4                  IF F$DCB.ACS = %SEQUEN# THEN DO;  /* Get RO space for key      */
      437    10204    4                     CALL FSA$GSP(64,F$DCB.LASTKEY$) ALTRET(FREEPOOLS);
      438    10205    4                     F$DCB.TAPTYP.HAVLASTKEY = %NO#;
      439    10206    4                     END;
      440    10207    3                  ELSE ;
      441    10208    3               ELSE
      442    10209    3                  F$DCB.LASTKEY = -1;
      443    10210    3             CASE(%IN#);                  /* Input and update                   */
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:13   
      444    10211    3               CALL FPO_OPNEXISTING ALTRET(FREEPOOLS);
      445    10212    3               F$DCB.LASTKEY = 0;
      446    10213    3             CASE(ELSE);
      447    10214    3               B$JIT.ERR = E_INVLDFUN;
      448    10215    3               GOTO FREEPOOLS;
      449    10216    3             END;
      450    10217    2            END;
      451    10218
      452    10219         /***
      453    10220          *** Initialize to read/write first record of file.
      454    10221          ***/
      455    10222
      456    10223    1         F$DCB.AFTRBLK = %NO#;             /* Positioned before                  */
      457    10224    1         F$DCB.PRECNO = 1;                 /* First block                        */
      458    10225    1         F$DCB.RPOS = %YES#;               /* Positioned to                      */
      459    10226    1         F$DCB.CRECNO = 1;                 /* First record                       */
      460    10227    1         F$DCB.CRECX = F$DCB.BOL;          /* First record is just after BOL     */
      461    10228    1         F$DCB.SPAN = %NO#;                /* Expect next record to begin span   */
      462    10229    1         F$DCB.NRECX = 1;                  /* First of block                     */
      463    10230    1         F$DCB.CONT = %NO#;                /* No previous continuation           */
      464    10231    1         F$DCB.GDISP = 0;                  /* Nothing read/written yet           */
      465    10232    1         F$DCB.BLKLEN = F$DCB.BOL;         /* Block length includes header       */
      466    10233    1         F$DCB.CBUFNUM = 0;                /* No current buffer                  */
      467    10234    1         F$DCB.NEW_FSECT = %YES#;
      468    10235    1         F$DCB.TRNC = FT_EBTRUNC#;    /* Fake empty buffer trunc to get buffer   */
      469    10236    1         F$DCB.TAPTYP.PASTFM = %NO#;       /* Not after file mark                */
      470    10237    1         FT$DDT.POS = FTP_BOD#;            /* In data                            */
      471    10238    1         F$DCB.MEDIA = FMTTAPE#;           /* Tape, of course                    */
      472    10239
      473    10240         /***
      474    10241          *** For test open, just close file.
      475    10242          ***/
      476    10243
      477    10244    1         IF PN$.V_->FPT$OPEN_V.OPER.TEST AND F$DCB.ASN ~= %DEVICE# THEN
      478    10245    1            CALL FPC$DFLTCLOSE;
      479    10246    1         ELSE
      480    10247    1            F$DCB.FCD = %YES#;           /* File is open                       */
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:14   
      481    10248
      482    10249         /***
      483    10250          *** Open is done.
      484    10251          ***/
      485    10252
      486    10253    1   FREEPOOLS:
      487    10254    1         CALL FTR$RELFPOOLS;               /* Release all FPOOL buffers          */
      488    10255    1         IF NOT F$DCB.FCD THEN
      489    10256    1            CALL FTR$RELCFUS;         /* Not open...release CFUs            */
      490    10257    1         RETURN;
      491    10258        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:15   
      492    10259    1   FPO$COPYOD: ENTRY ALTRET;
      493    10260    1         JDCB$ = B$JIT.DCB$;
      494    10261                 /* Search the RAT tables for a mounted volume with the same
      495    10262                    SETX to make sure we have both volumes.                */
      496    10263    1         O$ = FR$HD$(FR_NPOOL);
      497    10264    2         DO WHILE (O$ ~= ADDR(NIL));
      498    10265    2            IF O$->FR$RAT.TYP = 'OD' AND
      499    10266    2               O$->FR$RAT.REEL.SER = F$DCB.UB$->SER AND
      500    10267    2               O$->FR$RAT.FLG.MBIT.MTD AND
      501    10268    3               O$->FR$RAT.REEL.ASID = B$JIT.SYSID THEN DO;
      502    10269    3               CALL FPO$COPYDEV ALTRET(JUSTALT);
      503    10270    3               RETURN;
      504    10271    3               END;
      505    10272    2            O$ = O$->FR$RAT.LNK$;
      506    10273    2            END;
      507    10274    1         B$JIT.ERR = E_NOSN;
      508    10275    1         ALTRETURN;
      509    10276        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:16   
      510    10277    1   FPO_OPNDEV: PROC ALTRET;
      511    10278        /*F*  NAME: FPO_OPNDEV
      512    10279              PURPOSE: Open OD Controller for device type functions
      513    10280        */
      514    10281    2   DCL FEI UBIN WORD;
      515    10282    2   DCL HOST BIT(1);
      516    10283    2   DCL O$ PTR;
      517    10284    2   DCL MNTDCT$ PTR;
      518    10285        %NI$DCT (NAME=DCT,STCLASS=BASED);
      519    10333
      520    10334    3         IF F$DCB.PSN = ' ' THEN DO;
      521    10335    4            IF PN$.V_->FPT$OPEN_V.OPER.MNTONLY THEN DO;
      522    10336    4               B$JIT.ERR = E_NOSN;
      523    10337    4               ALTRETURN;
      524    10338    4               END;
      525    10339    3            CALL KIN$CONV_NODENAME(F$DCB.WSN,FEI,HOST) ALTRET(BADFEP);
      526    10340    3            IF HOST THEN
      527    10341    3               GOTO BADFEP;
      528    10342    3            O$ = FR$HD$(FR_NPOOL);
      529    10343    4            DO WHILE (O$ ~= ADDR(NIL));
      530    10344    4               MNTDCT$ = N$DCT$(O$->FR$RAT.DCTX);
      531    10345    4               IF O$->FR$RAT.TYP = 'OD' AND
      532    10346    5                  MNTDCT$->DCT.DQH$->NI$DQH.FEX = KI$ROUTE$(FEI)->KI$ROUTE.FEI# THEN DO
             10346                           ;
      533    10347    5                  F$DCB.FCD = '1'B;
      534    10348    5                  F$DCB.SETX = O$->FR$RAT.DCTX;
      535    10349    5                  F$DCB.TAPTYP.USRBUF = %YES#;
      536    10350    5                  F$DCB.FFLG.READ = %YES#;
      537    10351    5                  ALTRETURN;
      538    10352    5                  END;
      539    10353    4               O$ = O$->FR$RAT.LNK$;
      540    10354    4               END;
      541    10355    3   BADFEP:  B$JIT.ERR = E_BADFEP;
      542    10356    3            ALTRETURN;
      543    10357    3            END;
      544    10358              /* Open device with sn for label process                */
      545    10359    2         CALL FRA$OPR ALTRET(JUSTALT);
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:17   
      546    10360    2         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
      547    10361    3         IF PN$.V_->FPT$OPEN_V.OPER.MNTONLY THEN DO; /* Just close platter. */
      548    10362    4            IF FT$DDT.ANST THEN DO;       /* Had a label? */
      549    10363    4               F$DCB.ASN = %FILE#;        /* Set up DCB accordingly. */
      550    10364    4               F$DCB.FSN = FT$DDT.FRSTFSN + 1;
      551    10365    4               F$DCB.FSECT = FT$DDT.FRSTFSECT;
      552    10366    4               END;
      553    10367    3            ELSE
      554    10368    3               F$DCB.ASN = %DEVICE#;
      555    10369    3            FT$DDT.FSN = FT$DDT.FRSTFSN;  /* Back to BOT. */
      556    10370    3   CLSOD:   CALL FRB$CLS;
      557    10371    3   JUSTALT: ALTRETURN;
      558    10372    3            END;
      559    10373    2         F$DCB.FFLG = '0'B;
      560    10374    2         F$DCB.FFLG.READ = %YES#;
      561    10375    3         IF NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$->FT$DDT.RINGIN THEN DO;
      562    10376    3            F$DCB.FFLG.WNEW = %YES#;
      563    10377    3            F$DCB.FFLG.UPD = %YES#;
      564    10378    3            END;
      565    10379    2         F$DCB.ORG = %UNDEF#;
      566    10380    2         F$DCB.TAPTYP.USRBUF = %YES#;
      567    10381    2         F$DCB.TAPTYP.RWASC = %YES#;
      568    10382    2         F$DCB.TAPTYP.CP6F = %NO#;
      569    10383    2         F$DCB.TYPE = '  ';
      570    10384    2         F$DCB.IORG = %UNDEF#;
      571    10385    2         RETURN;
      572    10386    2   END FPO_OPNDEV;
      573    10387        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:18   
      574    10388        /*********************************************************************/
      575    10389    1   FPO_OPNCREATE: PROC ALTRET;
      576    10390        /*F*    NAME: FPO_OPNCREATE
      577    10391                PURPOSE: Open OD file for create.
      578    10392         ***/
      579    10393
      580    10394    2         CALL FMN$CHKFLACN(JDCB$) ALTRET(JUSTALT); /* Check file name and account   */
      581    10395    2         CALL FPO_CHK_BLKL_RECL ALTRET(JUSTALT);
      582    10396    2         CALL FPO_SETTAPTYP;               /* Determine type                */
      583    10397    3         IF F$DCB.TAPTYP.CP6F THEN DO;
      584    10398    3            F$DCB.EBCDIC = %NO#;
      585    10399    3            F$DCB.CNVRT = %NO#;
      586    10400    3            END;
      587    10401    2         F$DCB.SEZ_OK = %NO#;         /* No scratch allowed    */
      588    10402    2         F$DCB.NOEOF = %YES#;      /* output file                 */
      589    10403    2         CALL FTO$SNLIST(PN$);        /* Make serial number list.           */
      590    10404    2         IF B$JIT.ERR ~= '0'B THEN
      591    10405    2            GOTO JUSTALT;
      592    10406    2         F$DCB.MAXVOL = 0;
      593    10407    3         IF F$DCB.PSN = ' ' THEN DO;       /* No scratches allowed               */
      594    10408    3            B$JIT.ERR = E_NOSN;            /*E* ERROR: FPO-E$NOSN */
      595    10409    3            GOTO JUSTALT;
      596    10410    3            END;
      597    10411    2         CALL FRA$OPR ALTRET(RELCFUS);     /* Get the cartridge mounted         */
      598    10412    3         DO CASE(F$DCB.ORG);
      599    10413    3          CASE(%UR#,%SYMB#);
      600    10414    3            F$DCB.ATTR=F$DCB.ATTR|F$DCB.FORM$->CODE16.ATTR;
      601    10415    3          END;
      602    10416    2         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
      603    10417    3         IF DDDT$->FT$DDT.POSLOST THEN DO;
      604    10418    3            B$JIT.ERR = E_IOERR;
      605    10419    3            GOTO CLSTAP;
      606    10420    3            END;
      607    10421    2         FT$DDT.SN = F$DCB.PSN;
      608    10422    2         I = F$DCB.VOL;
      609    10423    2         CALL FTR$SETSN(I,ADDR(F$DCB.PSN)) ALTRET(NEVER1);
      610    10424    2   NEVER1: ;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:19   
      611    10425           /* Position to end of volume set     */
      612    10426    2         IF NOT FT$DDT.SCRTCH THEN
      613    10427    3         DO WHILE('1'B);
      614    10428    3            DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
      615    10429                                     /* Get EOV data from currently mounted volume. */
      616    10430    3            CALL FPO$PEOV(+1) ALTRET(JUSTALT);
      617    10431    3            IF FT$DDT.POS ~= FTP_EOV# THEN
      618    10432    3               EXIT;               /* At end of volume set   */
      619    10433    3            FT$DDT.DENSITY = 0;
      620    10434                                               /*  Switch to next volume of set.    */
      621    10435    3            CALL FTR$CHNGVOLNR (F$DCB.VOL + 1) ALTRET(JUSTALT);
      622    10436    3            END;
      623    10437    3         IF NOT FT$DDT.RINGIN THEN DO;
      624    10438    3            B$JIT.ERR = E_WRITEPROT;      /* Platter is write protected.         */
      625    10439    3            GOTO CLSTAP;
      626    10440    3            END;
      627    10441    2         IF FT$DDT.POS = FTP_BOV# AND F$DCB.VOL = 1 THEN
      628    10442    2            F$DCB.FSN = 1;                 /* At beginning of set               */
      629    10443    3         ELSE DO;
      630    10444    3            F$DCB.FSN = FT$DDT.FSN + 1;    /* Next file in sequence              */
      631    10445    4            IF FT$DDT.FSN = 262143 THEN DO; /* Don't let FSNs wrap.              */
      632    10446    4               B$JIT.ERR = E_BADFSN;
      633    10447    4               GOTO CLSTAP;
      634    10448    4               END;
      635    10449    3            END;
      636    10450    2         F$DCB.FSECT = 1;    /* First file section. */
      637    10451    2         FT$DDT.WRITE = %YES#;       /* set write ok for DPT tests */
      638    10452    2         CALL FPO_DPT ALTRET(CLSTAP);      /* Do access checking     */
      639    10453    2         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
      640    10454    2         IF F$DCB.TAPTYP.CP6F THEN
      641    10455    2            CALL FMO$BLDFIT(PN$) ALTRET(CLSTAP); /* Build the FIT */
      642    10456              /*    Write HDR1 and HDR2                               */
      643    10457    2         IF F$DCB.ORG = %RESTRICT# AND NO_IFPARAM_RESTRICT THEN
      644    10458    2            CALL FTL$LBLS( 'HDR' ) ALTRET( CLSTAP );
      645    10459    2         ELSE
      646    10460    2            CALL FTL$LBLS( 'HDR', ADDR(NIL) ) ALTRET( CLSTAP );
      647    10461    2         FT$DDT.SCRTCH = %NO#;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:20   
      648    10462              /*    Determine protection                              */
      649    10463    3         IF F$DCB.TAPTYP.CP6F THEN DO;
      650    10464    3            TEMP$ = FM$BUF$(F$DCB.BFR.BUFX(1)); /* Get pointer        */
      651    10465    3            TEMP$->FT$HDR.L1 = 16 * F$DCB.BFR1.SIZ(1); /* 4096 * #pages / 256       */
      652    10466    3            TEMP$->FT$HDR.L2 = 0;          /* 4096 - (4096 / 256) * 256          */
      653    10467    3            TEMP$->FT$HDR.S1 = 0;
      654    10468    3            TEMP$->FT$HDR.S2 = 128;        /* Set FPARAM bit                     */
      655    10469    3            F$DCB.ARS = 4096 * F$DCB.BFR1.SIZ(1);
      656    10470                 /* Write entire FIT as first block in the file           */
      657    10471    3            CALL FPO$WRODBLK (TEMP$) ALTRET(CLSTAP);
      658    10472    3            F$DCB.OWNER = %YES#;           /* Only protect by account            */
      659    10473                                                /* Pass V area and FIT TO SET FFLG    */
      660    10474    3            CALL FMO$SECCHK( PN$.V_->FPT$OPEN_V, TEMP$->FPT$OPEN_V );
      661    10475    3            END;
      662    10476    3         ELSE DO;
      663    10477    3            F$DCB.FFLG = '0'B;
      664    10478    3            F$DCB.FFLG.READ = %YES#;
      665    10479    3            F$DCB.FFLG.WNEW = %YES#;
      666    10480    3            F$DCB.FFLG.UPD = %YES#;
      667    10481    3            END;
      668    10482    2         F$DCB.EOP = WRITEEOP#;            /* Always for create   */
      669    10483    2         F$DCB.FMOD = %YES#;
      670    10484    2         F$DCB.LSTBLK = %YES#;
      671    10485              /*    A volume change is needed if end was hit        */
      672    10486    2         IF F$DCB.TYC.EOF(1) THEN
      673    10487    2            CALL FTL$CVOL(TEMP$,ADDR(NIL),0) ALTRET(CLSTAPERR);
      674    10488    2         RETURN;
      675    10489
      676    10490    2   CLSTAP: ;
      677    10491    2   CLSTAPERR: ;
      678    10492    2         ERRSAV = B$JIT.ERR;
      679    10493    2         CALL FRB$CLS;
      680    10494    2         B$JIT.ERR = ERRSAV;
      681    10495    2   RELCFUS:
      682    10496    2         CALL FTR$RELCFUS;
      683    10497    2   JUSTALT:
      684    10498    2         ALTRETURN;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:21   
      685    10499
      686    10500    2   END FPO_OPNCREATE;
      687    10501        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:22   
      688    10502        /*********************************************************************/
      689    10503    1   FPO_OPNEXISTING: PROC ALTRET;
      690    10504        /*F*     NAME: FPO_OPNEXISTING
      691    10505                 PURPOSE: Open existing file on OD.
      692    10506         ***/
      693    10507
      694    10508        /********************/
      695    10509
      696    10510           /*    Get serial number of volume to open.                    */
      697    10511    2         F$DCB.NOEOF = %NO#;          /* Input file                 */
      698    10512    2         CALL FTO$SNLIST (PN$);       /* Make serial number list.   */
      699    10513    2         IF B$JIT.ERR ~= '0'B THEN
      700    10514    2            ALTRETURN;
      701    10515    2         F$DCB.MAXVOL = 0;
      702    10516    3         IF F$DCB.PSN = ' ' THEN DO;
      703    10517    3            B$JIT.ERR = E_NOSN; /*E* ERROR: FPO-E$NOSN */
      704    10518    3            ALTRETURN;
      705    10519    3            END;
      706    10520           /*    If file name and sequence number are not specified,
      707    10521                 NXTF must be specified.                                */
      708    10522    3         IF F$DCB.NAME.L <= 0 AND F$DCB.FSN <= 0 THEN DO;
      709    10523              /* No file name or sequence number specified    */
      710    10524    4            IF PN$.V_ ~= ADDR(NIL) THEN DO;
      711    10525    4               IF (PN$.V_->FPT$OPEN_V.OPER.NXTF AND PN$.V_->FPT$OPEN_V.OPER.THISF)
      712    10526    5                  OR NOT PN$.V_->FPT$OPEN_V.OPER.NXTF THEN DO;
      713    10527                    /* File name should be specified and it isn't   */
      714    10528    5                  B$JIT.ERR = E_NOFIDTHIS; /*E* ERROR: FPO-E$NOFIDTHIS */
      715    10529    5                  ALTRETURN;
      716    10530    5                  END;
      717    10531    4               END;
      718    10532    4            ELSE DO;                 /* Default open and no file specification  */
      719    10533    4               B$JIT.ERR = E_NOFIDTHIS; /*E* ERROR: FPO-E$NOFIDTHIS */
      720    10534    4               ALTRETURN;
      721    10535    4               END;
      722    10536    3            END;
      723    10537           /*    Set up requested attributes and get volume.                */
      724    10538    2         F$DCB.ATTR = '0'B;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:23   
      725    10539    2   ATTEMPT_OPEN_EXISTING: ;
      726    10540    2         CALL FRA$OPR ALTRET(JUSTALT);
      727    10541    2         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$; /* Get DDT entry pointer       */
      728    10542    3         IF DDDT$->FT$DDT.POSLOST THEN DO;
      729    10543    3            B$JIT.ERR = E_IOERR;
      730    10544    3            GOTO CLSTAP;
      731    10545    3            END;
      732    10546    2         CALL FTR$SETSN(F$DCB.VOL+0,ADDR(F$DCB.PSN)) ALTRET(NEVER2);
      733    10547    2   NEVER2: ;
      734    10548    2         CALL FPO_DPT ALTRET(CLSTAP);      /* Do access checking     */
      735    10549    2         CALL FPO_LBLINIT ALTRET(CLSTAP);  /* Get label buffer        */
      736    10550    2         F$DCB.FSECT = 1;                  /* Open first section of file         */
      737    10551    3         IF PN$.V_ = ADDR(NIL) THEN DO;    /* Default open                       */
      738    10552    3            IF F$DCB.NAME.L <= 0 THEN
      739    10553    3               CALL FPO$FINDSEQ ALTRET(RETFSN); /* Open next                     */
      740    10554    3            ELSE
      741    10555    3               CALL FPO_FINDFILE ALTRET(RETFSN); /* Open named file              */
      742    10556    3            END;
      743    10557    3         ELSE DO;
      744    10558    3            IF (PN$.V_->FPT$OPEN_V.OPER.NXTF AND PN$.V_->FPT$OPEN_V.OPER.THISF)
      745    10559    4               OR NOT PN$.V_->FPT$OPEN_V.OPER.NXTF THEN DO;
      746    10560                 /* Open file specified in DCB                                        */
      747    10561    4               IF F$DCB.NAME.L <= 0 THEN
      748    10562    4                  CALL FPO$FINDSEQ ALTRET(RETFSN); /* Find by sequence number       */
      749    10563    5               ELSE DO;                    /* Find file by name                  */
      750    10564    5                  IF F$DCB.FSN > 0 THEN    /* First position to FSN if specified */
      751    10565    5                     CALL FPO$FINDSEQ ALTRET(RETFSN);
      752    10566    5                  CALL FPO_FINDFILE ALTRET(RETFSN);
      753    10567    5                  END;
      754    10568    4               END;
      755    10569    4            ELSE DO;                      /* NXTF, not THISF                    */
      756    10570    5               IF PN$.V_->FPT$OPEN_V.SRCHCOND.REV THEN DO;
      757    10571                    /* Reverse NXTF                       */
      758    10572    6                  IF FT$DDT.FSN = 0 THEN DO; /* Beginning of set               */
      759    10573    6                     B$JIT.ERR = E_EOSET; /*E* ERROR: FPO-E$EOSET */
      760    10574    6                     GOTO CLSTAP;
      761    10575    6                     END;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:24   
      762    10576    5                  F$DCB.FSN = FT$DDT.FSN;
      763    10577    5                  CALL FPO$FINDSEQ ALTRET(RETFSN);
      764    10578    5                  END;
      765    10579    5               ELSE DO;                   /* Open next file                     */
      766    10580    5                  F$DCB.FSN = FT$DDT.FSN + 2;
      767    10581    5                  CALL FPO$FINDSEQ ALTRET(RETFSN); /* Find specific next file */
      768    10582    5                  END;
      769    10583    4               END;
      770    10584    3            END;
      771    10585           /*    Specified file has been found. Merge information into the DCB.   */
      772    10586    2         CALL FPO$OPENIN ALTRET(CLSTAP); /* Tell controller to open file. */
      773    10587    2         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$; /* Get DDT pointer             */
      774    10588    2         AFPOOL$ = FM$BUF$(F$DCB.BFR.BUFX(F$DCB.LPOOL-1)); /* Get label buffer ptr  */
      775    10589    2         CALL CHARBIN( I, AFPOOL$->FT$LBL1.FSECT ); /* Set file section #           */
      776    10590    2         F$DCB.FSECT = I;
      777    10591    2         CALL CHARBIN( I, AFPOOL$->FT$LBL1.ODFSEQU_NUM );
      778    10592    2         FILE_SEQ = I;
      779    10593    2         FT$DDT.FSN = I - 1;               /* Set correct DDT info               */
      780    10594    2         FILE_NAME = AFPOOL$->FT$LBL1.FILE_ID; /* Set file id                       */
      781    10595           /*    Merge HDR2 information into the DCB.                */
      782    10596    2         TEMP$ = PINCRC( AFPOOL$, 80 );    /* Point to HDR2                      */
      783    10597    2         F$DCB.SPANNED = %NO#;             /* Assume not spanned                 */
      784    10598    2         CALL CHARBIN( I, TEMP$->FT$LBL2.BLKL ); /* HDR2 exists                 */
      785    10599    2         F$DCB.BLKL = I;
      786    10600    2         CALL CHARBIN( I, TEMP$->FT$LBL2.RECL );
      787    10601    2         F$DCB.RECL = I;
      788    10602    2         CALL CHARBIN( I, TEMP$->FT$LBL2.BUF_OFFSET );
      789    10603    2         F$DCB.BOL = I;
      790    10604    2         F$DCB.BLOCKED = %YES#;         /* Assume blocking                    */
      791    10605    2         I = ASCBIN( TEMP$->FT$LBL2.FORMAT ); /* Identify file format            */
      792    10606    2         J = 0;
      793    10607    3         DO WHILE(FT_FORMAT(J) ~= I AND J < %FT_MAXFMTS);
      794    10608    3            J = J + 1;
      795    10609    3            END;
      796    10610    3         IF J = 4 THEN DO;             /* CP-6 format                 */
      797    10611    3            I = ASCBIN( TEMP$->FT$LBL2.CP6.FILE_FORMAT ); /* Get sub-format   */
      798    10612    3            FILE_NAME = TEMP$->FT$LBL2.CP6.FILE_ID;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:25   
      799    10613    3            J = 0;
      800    10614    4            DO WHILE(FT_CP6FMT(J) ~= I AND J < %FT_MAXCP6FMT);
      801    10615    4               J = J + 1;
      802    10616    4               END;
      803    10617    3            F$DCB.ORG = FT_CP6FMTORG(J); /* Determine ORG                  */
      804    10618    4            DO CASE(F$DCB.ORG);
      805    10619    4             CASE(%CONSEC#,%KEYED#,%UR#,%INDEXED#,%SYMB#,%IREL#);
      806    10620    4               J = ASCBIN(TEMP$->FT$LBL2.CP6.BLOCK_ATTR);
      807    10621    4               IF J = ASCBIN(' ') THEN
      808    10622    4                  F$DCB.BLOCKED = %NO#; /*   - not blocked, not spanned */
      809    10623    4               ELSE
      810    10624    5                  IF J = ASCBIN('S') THEN DO;
      811    10625    5                     F$DCB.BLOCKED = %NO#; /* S - not blocked, spanned  */
      812    10626    5                     F$DCB.SPANNED = %YES#;
      813    10627    5                     END;
      814    10628    4                  ELSE
      815    10629    4                     IF J = ASCBIN('R') THEN
      816    10630    4                        F$DCB.SPANNED = %YES#; /* R - blocked, spanned  */
      817    10631    4                     ELSE ;         /* B - blocked, not spanned           */
      818    10632    4             CASE(%RESTRICT#);
      819    10633    4               F$DCB.BLOCKED = %NO#;
      820    10634    4               F$DCB.ACS = %BLOCK#;
      821    10635    4               IF I = ASCBIN('x') THEN
      822    10636    4                  NO_IFPARAM_RESTRICT = %YES#;
      823    10637    4               ELSE
      824    10638    4                  NO_IFPARAM_RESTRICT = %NO#;
      825    10639    4             END;
      826    10640    3            F$DCB.BLKL = (F$DCB.BLKL * 8 + 7) / 9;
      827    10641    3            F$DCB.RECL = (F$DCB.RECL * 8 + 7) / 9;
      828    10642    3            END;
      829    10643    3         ELSE DO;        /* Not CP6 format--what gives? */
      830    10644    3            B$JIT.ERR = E_BADODFORMAT;
      831    10645    3            GOTO CLSTAP;
      832    10646    3            END;
      833    10647    2         F$DCB.FSN = FILE_SEQ;             /* Return file sequence number    */
      834    10648           /*    Remember creation date.                                          */
      835    10649    2         IF AFPOOL$->FT$LBL1.CREATE_DATE ~= ' ' THEN
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:26   
      836    10650    2            CALL UMT$UTSJ( CREATE_DATE_UTS, AFPOOL$->FT$LBL1.CREATE_DATE );
      837    10651    2         ELSE
      838    10652    2            CALL SSS$SYSTIME( CREATE_DATE_UTS );
      839    10653           /*    Do FIT checks.                                                   */
      840    10654    2         CALL FPO_SETTAPTYP;               /* Determine type                */
      841    10655    3         IF F$DCB.TAPTYP.CP6F THEN DO;
      842    10656    3            F$DCB.CNVRT = %NO#;
      843    10657    3            F$DCB.ARS = 4096;              /* FIT size                           */
      844    10658    3            CALL FPO$RDODBLK (AFPOOL$) ALTRET(CLSTAP);
      845    10659    3            IF F$DCB.ARS > 24 THEN
      846    10660    3               TEMP$ = PINCRW( AFPOOL$, SIZEW(AFPOOL$->FM$GRAN) );
      847    10661    3            ELSE
      848    10662    3               TEMP$ = AFPOOL$;
      849    10663    3            END;
      850    10664    3         ELSE DO; /* No FIT. */
      851    10665    3            J = 0;
      852    10666    3            TEMP$ = ADDR(J);
      853    10667    3            END;
      854    10668
      855    10669    2         F$DCB.OWNER = %YES#;              /* Only protect by account            */
      856    10670    2         IF F$DCB.ORG = %RESTRICT# AND NOT B$JIT.PRIV.ACTIVE & %PR_FMBLK# THEN
      857    10671    2            B$JIT.ERR = E_NORESTRICT; /*E* ERROR: FPO-E$NORESTRICT */
      858    10672    2         ELSE
      859    10673    2            CALL FMO$SECCHK(PN$.V_->FPT$OPEN_V,TEMP$->FM$FIT);
      860    10674    2         IF (F$DCB.BLKL > 4096 * (B$JIT.FBUL-2)) AND NOT F$DCB.TAPTYP.USRBUF THEN
      861    10675    2            B$JIT.ERR = E_NOFPOOL; /*E* FTO-E$NOFPOOL */
      862    10676    3         IF B$JIT.ERR THEN DO;
      863    10677    3            ERRSAV = B$JIT.ERR;
      864    10678    3            B$JIT.ERR = '0'B;
      865    10679    3            CALL FPC$DFLTCLOSE;            /* Close this file                    */
      866    10680    3            B$JIT.ERR = '0'B;
      867    10681    3            IF PN$.V_->FPT$OPEN_V.OPER.NXTF AND NOT PN$.V_->FPT$OPEN_V.OPER.THISF
      868    10682    3               AND ERRSAV.ERR# = %E$NOFILE THEN
      869    10683    3               GOTO ATTEMPT_OPEN_EXISTING;
             10683                        /* Access not allowed...try to open next file */
      870    10684    4            ELSE DO;
      871    10685    5               IF ERRSAV.ERR# = %E$NOFILE THEN DO;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:27   
      872    10686                    /* Can't hide file so don't permit access  */
      873    10687    5                  F$DCB.NAME.C = ' ';
      874    10688    5                  F$DCB.NAME.L = 0;
      875    10689    5                  ERRSAV = E_NOACCESS; /*E* ERROR: FPO-E$NOACCESS */
      876    10690    5                  END;
      877    10691    5               ELSE DO;                   /* Return name of inaccessible file   */
      878    10692    5                  CALL INDEX( J, ' ', FILE_NAME )
      879    10693    6                  WHENALTRETURN DO;
      880    10694    6                     J = 31;
      881    10695    6                     END;
      882    10696    5                  F$DCB.NAME.C = FILE_NAME;
      883    10697    5                  F$DCB.NAME.L = J;
      884    10698    5                  END;
      885    10699    4               GOTO CLSTAPERR;
      886    10700    4               END;
      887    10701    3            END;
      888    10702           /*    Get indexed file information if needed.                           */
      889    10703    3         IF F$DCB.ORG = %INDEXED# THEN DO;
      890    10704    3            AFPOOL$ = TEMP$;
      891    10705    3            J = 2;
      892    10706    3            CALL FMO$LOCCODE(AFPOOL$,J);
      893    10707    3            F$DCB.KEYX = AFPOOL$->CODE02.KEYX;
      894    10708    3            F$DCB.KEYL = AFPOOL$->CODE02.KEYL;
      895    10709    3            END;
      896    10710           /*    Set file name.                                                   */
      897    10711    2         CALL INDEX( J, ' ', FILE_NAME )
      898    10712    3         WHENALTRETURN DO;
      899    10713    3            J = 31;
      900    10714    3            END;
      901    10715    2         F$DCB.NAME.C = FILE_NAME;
      902    10716    2         F$DCB.NAME.L = J;
      903    10717    2         AFPOOL$ = TEMP$;
      904    10718    2         J = 3;
      905    10719    2         CALL FMO$LOCCODE( AFPOOL$, J );
      906    10720    2         F$DCB.TYPE = AFPOOL$->CODE03.TYPE;
      907    10721           /*    Return FIT if requested.                                       */
      908    10722    2         IF PN$.FPARAM_ ~= ADDR(NIL) THEN
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:28   
      909    10723    2            CALL FMO$TRNINFO( PN$.FPARAM_, TEMP$ ) ALTRET(CLSTAP);
      910    10724    2         RETURN;
      911    10725
      912    10726
      913    10727    2   RETFSN: ;
      914    10728    3         IF F$DCB.SETX ~= 0 AND B$JIT.ERR.CODE = %E$EOSET THEN DO;
      915    10729              /* Return end of set sequence         */
      916    10730    3            DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
      917    10731    3            F$DCB.FSN = FT$DDT.FSN; /* FSN of last (or before first) file of set    */
      918    10732    3            END;
      919    10733    2   CLSTAP: ;
      920    10734    2         ERRSAV = B$JIT.ERR;
      921    10735    2   CLSTAPERR: ;
      922    10736    2         CALL FRB$CLS;
      923    10737    2         B$JIT.ERR = ERRSAV;
      924    10738
      925    10739    2   JUSTALT: ;
      926    10740    2         ALTRETURN;
      927    10741
      928    10742    2   END FPO_OPNEXISTING;
      929    10743        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:29   
      930    10744        /********************************************************************/
      931    10745    1   FPO$FINDSEQ: ENTRY ALTRET;
      932    10746
      933    10747
      934    10748        /*F*  NAME: FPO_FINDSEQ
      935    10749              PURPOSE: To position to the OD file specified by F$DCB.FSN.
      936    10750        */
      937    10751
      938    10752    1         JDCB$ = B$JIT.DCB$;
      939    10753    1         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
      940    10754    1         CALL FPO_LBLINIT ALTRET(JUSTALT);
      941    10755
      942    10756    2         DO WHILE('1'B);
      943    10757    2            CALL FPO$FINDFSN (LBL1$) ALTRET(JUSTALT);
      944    10758    3            IF NOT F$DCB.TYC(1) THEN DO; /* Found the file. */
      945    10759    3               THISFSN = F$DCB.FSN;
      946    10760    3               FT$DDT.FSN = THISFSN - 1; /* Set FSN of previous file */
      947    10761    3               CALL CHARBIN( THISFSECT, LBL1$->FT$LBL1.FSECT );
      948    10762    3               IF F$DCB.FSECT = 0 OR
      949    10763    3                  F$DCB.FSECT = THISFSECT OR
      950    10764    3                  F$DCB.ORG = %RESTRICT# THEN
      951    10765    3                  RETURN;
      952    10766    3               SKIPS = F$DCB.FSECT - THISFSECT;
      953    10767    3               SECTFIND = '1'B;
      954    10768    3               END;
      955    10769    3            ELSE DO;
      956    10770    4               IF F$DCB.TYC.EOT(1) THEN DO; /* File past EOT, have next volume. */
      957    10771    4                  IF SKIPS < 0 THEN
      958    10772    4                     GOTO VOLORDER;   /* Volume with req'd fsn missing */
      959    10773    4                  SKIPS = 1;          /* End of volume, file continued */
      960    10774    4                  END;
      961    10775    3               ELSE
      962    10776    4                  IF F$DCB.TYC.BOT(1) THEN DO; /* File before BOT. */
      963    10777    4                     IF SKIPS > 0 THEN
      964    10778    4                        GOTO VOLORDER;  /* missing volume            */
      965    10779    4                     SKIPS = -1;        /* Section on previous volume */
      966    10780    4                     END;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:30   
      967    10781    4                  ELSE DO;
      968    10782    4                     IF F$DCB.TYC.EOF(1) THEN /* File after EOT, no next volume. */
      969    10783    4                        B$JIT.ERR = E_EOSET; /*E* ERROR: FPO-E$EOSET */
      970    10784    4                     IF F$DCB.TYC.IOERR(1) THEN /* Couldn't read header sector. */
      971    10785    4                        B$JIT.ERR = E_IOERR; /*E* ERROR: FPO-E$IOERR */
      972    10786    4                     IF F$DCB.TYC.EOD(1) THEN /* File entry was empty. */
      973    10787    4                        B$JIT.ERR = E_ODEMPTYENT; /*E* ERROR: FPO-E$ODEMPTYENT */
      974    10788    4                     ALTRETURN;
      975    10789    4                     END;
      976    10790    3               END;
      977    10791
      978    10792                 /* At this point we are positioned at a section of the proper
      979    10793                    file, or ready to CVOL or PVOL depending on SKIPS.      */
      980    10794
      981    10795    2            F$DCB.SEZ_OK = %NO#;        /* No scratches                  */
      982    10796    2            CALL FTR$CHNGVOLNR(F$DCB.VOL + SKIPS) ALTRET(NOSCRATCHES);
      983    10797    2            DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
      984    10798    2            END;                      /* end do while                   */
      985    10799
      986    10800    1   VOLORDER: ;
      987    10801    1         FT$DDT.POS = FTP_HDR#;       /* Should be before HDR1              */
      988    10802    1         B$JIT.ERR = E_VOLORDER;      /*E* ERROR: FPO-E$VOLORDER */
      989    10803    1         ALTRETURN;
      990    10804
      991    10805    1   NOSCRATCHES: ;
      992    10806    1         I = B$JIT.ERR.CODE;          /* What went wrong      */
      993    10807    1         IF I = %E$VOLORDER THEN
      994    10808    1            IF SECTFIND THEN
      995    10809    1               B$JIT.ERR = E_SECTERR; /*E* ERROR: FPO-E$SECTERR */
      996    10810    1            ELSE ;           /* Tried to get another volume but couldn't     */
      997    10811    1         ELSE
      998    10812    1            IF I = %E$VOLOUT THEN
      999    10813    1               IF SECTFIND THEN
     1000    10814    1                  B$JIT.ERR = E_SECTERR; /*E* ERROR: FPO-E$SECTERR */
     1001    10815    1               ELSE
     1002    10816    1                  B$JIT.ERR = E_EOSET; /*E* ERROR: FPO-E$EOSET */
     1003    10817                                                /* File must be missing               */
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:31   
     1004    10818    1   JUSTALT:
     1005    10819    1         ALTRETURN;
     1006    10820
     1007    10821        /********************************************************************/
     1008    10822        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:32   
     1009    10823        /********************************************************************/
     1010    10824    1   FPO_FINDFILE: PROC ALTRET;
     1011    10825
     1012    10826        /*F*     NAME: FPO_FINDFILE
     1013    10827                 PURPOSE: Find file by name specified by DCB.NAME and DCB.FSECT.
     1014    10828                 DESCRIPTION: File name is specified by DCB.NAME.  Section number
     1015    10829                    is specified by DCB.FSECT.  If DCB.FSECT is 0 then any file
     1016    10830                    section of specified file will do.  The entire volume set is
     1017    10831                    searched for a file with specified name.  If such file is not
     1018    10832                    found, position is left before the first section of the file
     1019    10833                    on which the search started.  If no such file is found, the
     1020    10834                    procedure altreturns with a E$NOFILE error.  If the wrong file
     1021    10835                    section is found, FPO$FINDSEQ is called after DCB.FSN is set
     1022    10836                    with the sequence number of the file.  Other possible errors
     1023    10837                    altreturned are standard I/O and position lost or volume missing
     1024    10838                    errors.
     1025    10839         ***/
     1026    10840    2   DCL SAVFSN SBIN;
     1027    10841    2   DCL SAVVOL UBIN;
     1028    10842
     1029    10843
     1030    10844    2         SAVVOL = 0;
     1031    10845    3         DO WHILE('1'B);
     1032    10846    3            CALL FPO$FINDFILE(LBL1$) ALTRET(JUSTALT);
     1033    10847    4            IF NOT F$DCB.TYC(1) THEN DO;
     1034    10848                    /* No error, must have found the file              */
     1035    10849    4               CALL CHARBIN( THISFSN, LBL1$->FT$LBL1.ODFSEQU_NUM );
     1036    10850    4               CALL CHARBIN( THISFSECT, LBL1$->FT$LBL1.FSECT );
     1037    10851    4               F$DCB.FSN = THISFSN;        /* Set sequence number                */
     1038    10852    4               IF F$DCB.FSECT = 0 OR F$DCB.FSECT = THISFSECT THEN
     1039    10853    4                  FT$DDT.POS = FTP_HDR#;   /* Got it                           */
     1040    10854    4               ELSE
     1041    10855    4                  CALL FPO$FINDSEQ ALTRET(JUSTALT); /* At FSN but not proper FSECT */
     1042    10856    4               RETURN;
     1043    10857    4               END;
     1044    10858    4            ELSE DO;                  /* At end of volume, no file found        */
     1045    10859    5               IF F$DCB.TYC.IOERR(1) THEN DO;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:33   
     1046    10860    5                  B$JIT.ERR = E_IOERR; /* Must be IOERR. */
     1047    10861    5   JUSTALT:       ALTRETURN;
     1048    10862    5                  END;
     1049    10863    5               IF F$DCB.TYC.EOD(1) AND F$DCB.VOL = 1 THEN DO; /* No files. */
     1050    10864    5                  B$JIT.ERR = E_NOFILE;
     1051    10865    5                  ALTRETURN;
     1052    10866    5                  END;
     1053    10867    4               IF SAVVOL = 0 THEN
     1054    10868    4                  SAVVOL = F$DCB.VOL;
     1055    10869    5               ELSE IF SAVVOL = F$DCB.VOL THEN DO;
     1056    10870    5                     B$JIT.ERR = E_NOFILE;
     1057    10871    5                     FT$DDT.POS = FTP_HDR#;
     1058    10872    5                     ALTRETURN;
     1059    10873    5                     END;
     1060    10874    4               THISFSN = -1;
     1061    10875    4               FT$DDT.POS = FTP_HDR#;
     1062    10876    4               IF F$DCB.TYC.EOF(1) THEN
     1063    10877                       /* End of set                             */
     1064    10878                       /* This error will be changed to E$EOSET below unless
     1065    10879                          search is to continue (F$DCB.FSN = 0) */
     1066    10880    4                  B$JIT.ERR = E_VOLOUT; /*E* ERROR: FPO-E$VOLOUT */
     1067    10881    5               ELSE DO;                /* Another volume must exist          */
     1068    10882    5                  F$DCB.SEZ_OK = %NO#;  /* Say scratch not ok                 */
     1069    10883    5                  CALL FTR$CHNGVOLNR(F$DCB.VOL + 1) ALTRET(CHKSCRATCH);
     1070    10884    5                  DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
     1071    10885    5                  END;
     1072    10886    5               IF B$JIT.ERR.CODE ~= 0 THEN DO;
     1073    10887                       /* Ran out of "next" volumes          */
     1074    10888    5   CHKSCRATCH:    ;
     1075    10889    5                  I = B$JIT.ERR.CODE;      /* Get error code                     */
     1076    10890                       /* If unexpected error, altreturn now */
     1077    10891    5                  IF I ~= %E$VOLOUT AND I ~= %E$VOLORDER THEN
     1078    10892    5                     ALTRETURN;
     1079    10893    6                  IF F$DCB.FSN > 0 THEN DO;
     1080    10894                       /* Start search at FSN means end at EOS    */
     1081    10895    6                     IF I = %E$VOLOUT THEN
     1082    10896    6                        B$JIT.ERR = E_EOSET; /*E* ERROR: FPO-E$EOSET */
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:34   
     1083    10897    6                     ALTRETURN;
     1084    10898    6                     END;
     1085    10899    5                  B$JIT.ERR = '0'B;        /* Clear error                        */
     1086    10900    6                  IF F$DCB.VOL = 1 THEN DO;
     1087    10901                       /* A one volume set                   */
     1088    10902    7                     IF SAVFSN = THISFSN AND SAVVOL = F$DCB.VOL THEN DO;
     1089    10903    7                        B$JIT.ERR = E_NOFILE;
     1090    10904    7                        ALTRETURN;
     1091    10905    7                        END;
     1092    10906    7                     IF SAVFSN = 0 THEN DO;
     1093    10907    7                        SAVFSN = -1;
     1094    10908    7                        SAVVOL = F$DCB.VOL;
     1095    10909    7                        END;
     1096    10910    6                     CALL FPO$PEOV(-1) ALTRET(JUSTALT); /* Get to BOV   */
     1097    10911    6                     END;
     1098    10912    6                  ELSE DO;                /* Resume search at first vol of set  */
     1099    10913    6                     F$DCB.SEZ_OK = %NO#;
     1100    10914    6                     CALL FTR$CHNGVOLNR(1) ALTRET(JUSTALT);
             10914                              /* Get first volume       */
     1101    10915    6                     END;
     1102    10916    5                  END;
     1103    10917    4               DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
     1104    10918    4               END;
     1105    10919    3            END;
     1106    10920    2   END FPO_FINDFILE;
     1107    10921        /*********************************************************************/
     1108    10922        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:35   
     1109    10923        /*********************************************************************/
     1110    10924    1   FPO_SETTAPTYP: PROC;
     1111    10925        /*F*    NAME: FPO_SETTAPTYP
     1112    10926                PURPOSE: Sets up DCB.TAPTYP from DCB info, for optical disk.
     1113    10927         ***/
     1114    10928
     1115    10929        /********************/
     1116    10930
     1117    10931    2         F$DCB.DVBYTE = '0'B;              /* Not generally used for tapes       */
     1118    10932    3         DO CASE(F$DCB.ORG);               /* Depends on ORG                     */
     1119    10933    3          CASE( %RESTRICT# );
     1120    10934    3            F$DCB.TAPTYP.RWASC = %NO#;
     1121    10935    3            F$DCB.TAPTYP.CP6F = ~ NO_IFPARAM_RESTRICT;
     1122    10936    3            F$DCB.EBCDIC = %NO#;
     1123    10937    3            F$DCB.CNVRT = %NO#;
     1124    10938    3          CASE(ELSE);
     1125    10939    3            F$DCB.TAPTYP.RWASC = %NO#;     /* Read/write binary                  */
     1126    10940    3            F$DCB.TAPTYP.CP6F = %YES#;     /* CP-6 format                        */
     1127    10941    3          END;
     1128    10942    2         IF F$DCB.ORG = %RESTRICT# THEN
     1129    10943    2            F$DCB.TAPTYP.USRBUF = %YES#;   /* Read/write user buffer             */
     1130    10944    2         ELSE
     1131    10945    2            F$DCB.TAPTYP.USRBUF = %NO#;    /* Read/write FPOOL buffer            */
     1132    10946    3         DO CASE(F$DCB.ORG);
     1133    10947    3          CASE(%RESTRICT#);
     1134    10948    3            F$DCB.IORG = %RANDOM#;
     1135    10949    3          CASE(%KEYED#,%INDEXED#);
     1136    10950    3            F$DCB.IORG = %KEYED#;
     1137    10951    3          CASE(%CONSEC#,%IREL#);
     1138    10952    3            F$DCB.IORG = %CONSEC#;
     1139    10953    3          CASE(%SYMB#);
     1140    10954    3            F$DCB.IORG = %SYMB#;
     1141    10955    3          CASE(%UR#);
     1142    10956    3            F$DCB.IORG = %UR#;
     1143    10957    3            F$DCB.IFMT = FMTURFILE#;
     1144    10958    3          CASE(ELSE);
     1145    10959    3            F$DCB.IORG = %UNDEF#;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:36   
     1146    10960    3          END;
     1147    10961    2         F$DCB.DVBYTE.BIN = ~ F$DCB.TAPTYP.RWASC;
     1148    10962
     1149    10963    2         RETURN;
     1150    10964
     1151    10965    2   END FPO_SETTAPTYP;
     1152    10966        /*********************************************************************/
     1153    10967        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:37   
     1154    10968        /*********************************************************************/
     1155    10969    1   FPO_CHK_BLKL_RECL: PROC ALTRET;
     1156    10970        /*F*     NAME: FPO_CHK_BLKL_RECL
     1157    10971                 PURPOSE: Check (and possibly adjust) BLKL and RECL options.
     1158    10972         ***/
     1159    10973
     1160    10974        /********************/
     1161    10975
     1162    10976
     1163    10977    2         MAXBLKL = 4096 * (B$JIT.FBUL - 2); /* Minus 2 for label, a/m buffers     */
     1164    10978    3         IF MAXBLKL <= 0 THEN DO;          /* Not enough FPOOLs                  */
     1165    10979    3            B$JIT.ERR = E_NOFPOOL;         /*E* ERROR: FPO-E$NOFPOOL */
     1166    10980    3            ALTRETURN;
     1167    10981    3            END;
     1168    10982    2         IF MAXBLKL > 99996 THEN
     1169    10983    2            MAXBLKL = 99996;            /* Limit size to word bound < 99999   */
     1170    10984
     1171    10985         /***
     1172    10986
     1173    10987          *** Process create open depending on file org.
     1174    10988          ***/
     1175    10989
     1176    10990    3         DO CASE(F$DCB.ORG);
     1177    10991
     1178    10992    3          CASE(ELSE);
     1179    10993    3            F$DCB.ORG = %CONSEC#;
     1180    10994    3            GOTO CONSECORG;
     1181    10995
     1182    10996    3          CASE(%RESTRICT#);
     1183    10997    4            IF NOT B$JIT.PRIV.ACTIVE & %PR_FMBLK# THEN DO;
     1184    10998                                                /* Not allowed to access RESTRICT     */
     1185    10999    4               B$JIT.ERR = E_NORESTRICT; /*E* ERROR: FPO-E$NORESTRICT */
     1186    11000    4               ALTRETURN;
     1187    11001    4               END;
     1188    11002    3            NO_IFPARAM_RESTRICT = %NO#; /* Assume FIT specified               */
     1189    11003    3            CALL HFF$DSIZ(POFFW(ADDR(PN$.IFPARAM_),ADDR(PN$.V_)),I) ALTRET(NOIFPARAM);
     1190    11004    3            TEMP$ = PN$.IFPARAM_;       /* Get pointer to IFPARAM             */
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:38   
     1191    11005    3            IF TEMP$ = ADDR(NIL) THEN I = 0; /* Might be default open            */
     1192    11006    4            IF I < 4096 THEN DO;
     1193    11007    4   NOIFPARAM:  ;
     1194    11008    4               NO_IFPARAM_RESTRICT = %YES#;
     1195    11009    4               END;
     1196    11010    3            IF F$DCB.BLKL < 4096 THEN
     1197    11011    3               F$DCB.BLKL = 4096;
     1198    11012    3            ELSE F$DCB.BLKL = ((F$DCB.BLKL + 4095) / 4096) * 4096;
     1199    11013    3            F$DCB.BOL = 0;                 /* No BOL                             */
     1200    11014    3            F$DCB.BLOCKED = %NO#;          /* Not blocked                        */
     1201    11015    3            F$DCB.SPANNED = %NO#;          /* Not spanned                        */
     1202    11016    3            F$DCB.RECL = 4096;             /* One granule per record             */
     1203    11017
     1204    11018    3          CASE(%CONSEC#,%KEYED#,%UR#,%INDEXED#,%SYMB#,%IREL#);
     1205    11019    3   CONSECORG: ;
     1206    11020    3            F$DCB.BOL = 4;
     1207    11021    3            F$DCB.SPANNED = %YES#;         /* Always spanned                     */
     1208    11022    3            F$DCB.BLOCKED = %YES#;         /* Always blocked                     */
     1209    11023    4            DO CASE(F$DCB.ORG);
     1210    11024    4             CASE(%INDEXED#);
     1211    11025    4               IF F$DCB.KEYL < 1 THEN F$DCB.KEYL = 1;
     1212    11026    4             CASE(%UR#,%SYMB#);
     1213    11027    4               CALL FSF$TAPEFORM ALTRET(JUSTALT); /*Establish FORM info             */
     1214    11028    4             END;
     1215    11029    3            F$DCB.RECL = 0;                /* Undetermined maximum record length */
     1216    11030    3            IF F$DCB.BLKL < 4096 THEN
     1217    11031    3               F$DCB.BLKL = 4096;       /* Minimum                            */
     1218    11032    3            ELSE IF F$DCB.BLKL > MAXBLKL
     1219    11033    3               THEN F$DCB.BLKL = MAXBLKL;  /* Maximum                            */
     1220    11034    3               ELSE F$DCB.BLKL = ( (F$DCB.BLKL + 4095) / 4096 ) * 4096;
     1221    11035                                                /* To nearest page size               */
     1222    11036
     1223    11037    3          END /* DO CASE(F$DCB.ORG); */ ;
     1224    11038    2         RETURN;
     1225    11039
     1226    11040    2   JUSTALT: ;
     1227    11041    2         ALTRETURN;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:39   
     1228    11042
     1229    11043    2   END FPO_CHK_BLKL_RECL;
     1230    11044        /*********************************************************************/
     1231    11045        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:40   
     1232    11046        /*********************************************************************/
     1233    11047        /*F*
     1234    11048              NAME: FPO_DPT
     1235    11049              PURPOSE: To perform access checking on OD volume.
     1236    11050        */
     1237    11051
     1238    11052    1   FPO_DPT: PROC ALTRET;
     1239    11053
     1240    11054
     1241    11055
     1242    11056    2         IF NOT (B$JIT.PRIV.ACTIVE & %PR_FMSEC#) AND
     1243    11057    3            B$JIT.ACCN ~= FT$DDT.ACCT THEN DO;
     1244    11058    4            DO CASE(FT$DDT.VOLACCESS);
     1245    11059    4             CASE(%NONE#);      /* Owner doesn't want anyone else to use it     */
     1246    11060    5               IF NOT (B$JIT.PRIV.ACTIVE & %PR_FMBLK# AND F$DCB.FUN = %IN#) THEN DO;
     1247    11061    5                  B$JIT.ERR = E_NOTOWNR; /*E* ERROR: FPO-E$NOTOWNR */
     1248    11062    5                  ALTRETURN;
     1249    11063    5                  END;
     1250    11064    4             CASE(%IN#);                  /* Owner only permits readers         */
     1251    11065    5               IF F$DCB.NOEOF THEN DO;
     1252    11066    5                  B$JIT.ERR = E_NOTOWNRW; /*E* ERROR: FPO-E$NOTOWNRW */
     1253    11067    5                  ALTRETURN;
     1254    11068    5                  END;
     1255    11069    4             CASE(0,%ALL#);               /* Owner doesn't care or permits all  */
     1256    11070    4             CASE(ELSE);                  /* Permit all...owner strange         */
     1257    11071    4             END;
     1258    11072    3            END;
     1259    11073    2         RETURN;
     1260    11074    2   END FPO_DPT;
     1261    11075        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:41   
     1262    11076    1   FPO_LBLINIT: PROC ALTRET;
     1263    11077
     1264    11078        /*F*    NAME: FPO_LBLINIT
     1265    11079                PURPOSE: Find label FPOOL buffer for label write.
     1266    11080         ***/
     1267    11081
     1268    11082
     1269    11083         /*    An FPOOL buffer must be available to create the label in.  */
     1270    11084    2         I = F$DCB.LPOOL - 1;              /* Calc ix of label FPOOL buffer      */
     1271    11085    3         IF I >= 0 THEN DO;
     1272    11086              /* FPOOL buffer for label processing already obtained     */
     1273    11087    3            LBL1$ = FM$BUF$(F$DCB.BFR.BUFX(I)); /* Get pointer                      */
     1274    11088    3            LBL2$ = PINCRC( LBL1$, 80 );   /* Get pointer to second label        */
     1275    11089    3            RETURN;
     1276    11090    3            END;
     1277    11091    3         DO I=0 TO 4;
     1278    11092    4            IF F$DCB.BFR.BUFX(I) = 0 THEN DO;
     1279    11093                 /* Found an FPOOL buffer              */
     1280    11094    4               CALL FMD$GETBUF( I, 1, LBL1$ ); /* Get FPOOL buffer                  */
     1281    11095    4               LBL2$ = PINCRC( LBL1$, 80 ); /* Get pointer to second label        */
     1282    11096    4               F$DCB.LPOOL = I + 1;        /* Remember label FPOOL buffer        */
     1283    11097    4               RETURN;
     1284    11098    4               END;
     1285    11099    3            END;
     1286    11100
     1287    11101    2         B$JIT.ERR = E_NOFPOOL; /*E* ERROR: FPO-E$NOFPOOL */
     1288    11102    2         ALTRETURN;
     1289    11103    2   END FPO_LBLINIT;
     1290    11104        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:42   
     1291    11105        /********************************************************************/
     1292    11106    1   END FPO$OPNOD;
     1293    11107        %EOD;

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:43   
--  Include file information  --

   P_ERRORS_C.:E05TOU  is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   NK$LDCT.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FT_SUBS.:E05TOU  is referenced.
   FT$RECS.:E05TOU  cannot be made into a system file and is referenced.
   FT$LBLS.:E05TOU  cannot be made into a system file and is referenced.
   FT$DDT.:E05TOU  is referenced.
   FR$RAT.:E05TOU  is referenced.
   FR_SUBS.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   FM_BUF_R.:E05TOU  cannot be made into a system file and is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F_FMTCODE_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F$CP6P_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FPO$OPNOD.

   Procedure FPO$OPNOD requires 1884 words for executable code.
   Procedure FPO$OPNOD requires 42 words of local(AUTO) storage.

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:44   

 Object Unit name= FPO$OPNOD                                  File name= FPO$OPNOD.:E05TOU
 UTS= JUL 29 '97 17:18:59.56 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     44     54  FPO$OPNOD
    2   Proc  even  none  1884   3534  FPO$OPNOD
    3  RoData even  none    29     35  FPO$OPNOD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  FPO$OPNOD
     2    250          yes     yes      Std        0  FPO$COPYOD
     2   2307          yes     yes      Std        0  FPO$FINDSEQ
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:45   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 FPO$COPYDEV
 yes     yes           Std       1 FPO$FINDFSN
 yes     yes           Std       2 FSA$GSP
         yes           Std       0 FPC$DFLTCLOSE
 yes     yes           Std       0 FTR$RELFPOOLS
 yes     yes           Std       1 FTR$CHNGVOLNR
 yes     yes           Std       0 FTR$RELCFUS
 yes     yes           Std       3 KIN$CONV_NODENAME
         yes           Std       0 FRB$CLS
 yes     yes           Std       0 FRA$OPR
 yes     yes           Std       1 FMN$CHKFLACN
         yes           Std       2 FMO$SECCHK
 yes     yes           Std       2 FTL$LBLS
 yes     yes           Std       5 FTL$CVOL
         yes           Std       1 FTO$SNLIST
 yes     yes           Std       1 FMO$BLDFIT
 yes     yes           Std       2 FTR$SETSN
 yes     yes           Std       1 FPO$PEOV
 yes     yes           Std       1 FPO$WRODBLK
         yes           Std       1 SSS$SYSTIME
 yes     yes           Std       2 FMO$TRNINFO
 yes     yes           Std       0 FPO$OPENIN
 yes     yes           Std       1 FPO$RDODBLK
 yes     yes           Std       2 UMT$UTSJ
 yes     yes           Std       2 FMO$LOCCODE
 yes     yes           Std       1 FPO$FINDFILE
 yes     yes           Std       2 HFF$DSIZ
 yes     yes           Std       0 FSF$TAPEFORM
         yes           Std       3 FMD$GETBUF
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:46   
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  FM$BUF$                               N$DCT$$
     N$FQ$                                 NI$FQ$                                NI$IBUF$
     NI$RP$                                B$JIT$                                FR$HD$
     KI_ROUTE$$                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:47   


        1        1        /*M* FPO$OPNOD Contains Optical Disc open routines          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC    */
        8        8
        9        9        FPO$OPNOD: PROC   (PN$) ALTRET;

      9  2 000000   000000 700200 xent  FPO$OPNOD    TSX0  ! X66_AUTO_1
         2 000001   000052 000001                    ZERO    42,1

       10       10
       11       11        /*F*    NAME: FPO$OPNOD
       12       12                PURPOSE: Contains optical disc opening routines.
       13       13        */
       14       14        /*P*    NAME: FPO$OPNOD
       15       15                PURPOSE: Opens Optical Disc DCB.
       16       16                INPUT: PN$ - pointers from FPT_OPEN
       17       17        */
       18       18
       19       19         /*
       20       20              INCLUDE files:
       21       21        */
       22       22
       23       23        %INCLUDE B$JIT_C;
       24      337           %B$JIT0;
       25      426           %U$JIT1X;
       26      429           %M$JIT2;
       27      439           %F$JIT3;
       28      444           %S$JIT4X;
       29      447           %J$JIT5X;
       30      450           %A$JIT6X;
       31      453        %INCLUDE CP_6;
       32     6012        %INCLUDE CP_6_SUBS;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:48   
       33     6552        %INCLUDE F$CP6P_C;
       34     6563        %INCLUDE F$CP6V_C;
       35     6789           %FPT$OPEN_V;
       36     6804           %VLP$SN_V;
       37     6807        %MACRO F$DCBBJ(BASED=BASED);
       38     6808        %INCLUDE F$DCB;
       39     6857        %MEND;
       40     6858           %F$DCBBJ(BASED="BASED(JDCB$)");
       41     6908        %INCLUDE F_ERRORS_C;
       42     7148        %INCLUDE F_FMTCODE_C;
       43     7182        %INCLUDE F_FPTCODE_C;
       44     7218        %INCLUDE FM_BUF_R;
       45     7227        %INCLUDE FM$CFU;
       46     7272            %FT$CFUSN;
       47     7275           %FM$CFUJ;
       48     7280        %INCLUDE FM$GRAN;
       49     7349            %FM$GRAN;
       50     7353        %INCLUDE FM$FIT;
       51     7574            %FM$FIT;
       52     7577           %CODE02;
       53     7581           %CODE03;
       54     7588           %CODE04;
       55     7596        %CODE16;
       56     7604        %INCLUDE FR_SUBS;
       57     7672        %INCLUDE FR$RAT;
       58     7725        %FR$RAT;
       59     7765        %MACRO FT$DDTBD(BASED=BASED);
       60     7766        %INCLUDE FT$DDT;
       61     7827        %MEND;
       62     7828           %FT$DDTBD(BASED="BASED(DDDT$)");
       63     7890        %INCLUDE FT$LBLS;
       64     8158        %INCLUDE FT$RECS;
       65     8226        %INCLUDE FT_SUBS;
       66     8306        %INCLUDE NI_DATA_R;
       67     8743        %INCLUDE NK$LDCT;
       68     8845            %NK$LDCT;
       69     8891        /*    %INCLUDE NK_LDCT_R;   */
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:49   
       70     8892        %INCLUDE KI_MACROS_C;
       71     9500        %INCLUDE P_ERRORS_C;
       72     9512
       73     9513         /***
       74     9514          *** External routines:
       75     9515          ***/
       76     9516
       77     9517    1   DCL FMD$GETBUF ENTRY(3);                /* Get label buffers    */
       78     9518    1   DCL FMN$CHKFLACN ENTRY(1) ALTRET;       /* Verify file name and account       */
       79     9519    1   DCL FMO$BLDFIT ENTRY(1) ALTRET;         /* Build a FIT in FPOOL buffer        */
       80     9520    1   DCL FMO$LOCCODE ENTRY(2) ALTRET;        /* Find FIT information               */
       81     9521    1   DCL FMO$SECCHK ENTRY(2);                /* Security checks                    */
       82     9522    1   DCL FMO$TRNINFO ENTRY(2) ALTRET;        /* Transfer FIT info                  */
       83     9523    1   DCL FRA$OPR ENTRY ALTRET;               /* Get OD   mounted                   */
       84     9524    1   DCL FRB$CLS ENTRY;                      /* Close OD and release resource    */
       85     9525    1   DCL FSA$GSP ENTRY(2) ALTRET;            /* Get RO space                       */
       86     9526    1   DCL FSF$TAPEFORM ENTRY ALTRET;          /* Set up FORM info for UR/SYMB       */
       87     9527    1   DCL FPC$DFLTCLOSE ENTRY;                /* Default close after test open      */
       88     9528    1   DCL FTO$SNLIST ENTRY(1);                /* Get SN list            */
       89     9529    1   DCL FPO$PEOV ENTRY(1) ALTRET;           /* Position to end of vol */
       90     9530    1   DCL FPO$WRODBLK ENTRY(1) ALTRET;        /* Write OD block         */
       91     9531    1   DCL FPO$RDODBLK ENTRY(1) ALTRET;        /* Read OD block          */
       92     9532    1   DCL FPO$FINDFSN ENTRY(1) ALTRET;        /* Position to file by FSN */
       93     9533    1   DCL FPO$FINDFILE ENTRY(1) ALTRET;       /* Position to file by name */
       94     9534    1   DCL FPO$OPENIN ENTRY ALTRET;            /* Open positioned-to file. */
       95     9535    1   DCL FPO$COPYDEV ENTRY ALTRET;           /* Copy discs         */
       96     9536    1   DCL FTL$CVOL ENTRY(5) ALTRET;           /* Volume changing                    */
       97     9537    1   DCL FTL$LBLS ENTRY(2) ALTRET;           /* Write header labels    */
       98     9538    1   DCL FTR$CHNGVOLNR ENTRY(1) ALTRET;      /* Mount next volume of set */
       99     9539    1   DCL FTR$RELCFUS ENTRY ALTRET;           /* Release CFUs                       */
      100     9540    1   DCL FTR$RELFPOOLS ENTRY ALTRET;         /* Release all FPOOL buffers          */
      101     9541    1   DCL FTR$SETSN ENTRY(2) ALTRET;          /* Set actual serial number           */
      102     9542    1   DCL HFF$DSIZ ENTRY(2) ALTRET;           /* Determine segment size             */
      103     9543    1   DCL SSS$SYSTIME ENTRY(1);               /* Get UTS                            */
      104     9544    1   DCL UMT$UTSJ ENTRY(2) ALTRET;           /* Converts Julian date to UTS        */
      105     9545    1   DCL KIN$CONV_NODENAME ENTRY(3) ALTRET;
      106     9546
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:50   
      107     9547         /***
      108     9548          *** SYMREF data:
      109     9549          ***/
      110     9550
      111     9551    1   DCL B$JIT$ PTR SYMREF;
      112     9552    1   DCL FR$HD$(0:0) PTR SYMREF;
      113     9553    1   DCL KI_ROUTE$$ PTR SYMREF;
      114     9554    1   DCL NK$LDCT$(0:0) PTR BASED(N$DCT$$);
      115     9555
      116     9556         /***
      117     9557          *** Parameter:
      118     9558          ***/
      119     9559
      120     9560           %FPT$OPEN_P(FPTN=PN$,PFMT=PTR,STCLASS=" ");
      121     9566
      122     9567         /***
      123     9568          *** BASED:
      124     9569          ***/
      125     9570
      126     9571    1   DCL 1 LASTKEY UNAL BASED,
      127     9572    1         2 * CHAR(256) UNAL;
      128     9573    1   DCL 1 FOUR_SNS UNAL BASED,
      129     9574    1         2 * UBIN WORD UNAL,
      130     9575    1         2 SNS CHAR(24) UNAL;
      131     9576        %NI$DQH;
      132     9599        %KI$ROUTE (STCLASS = BASED);
      133     9653    1   DCL KI$ROUTE$(0:0) PTR BASED(KI_ROUTE$$);
      134     9654    1   DCL SER CHAR(6) BASED;
      135     9655
      136     9656         /***
      137     9657          *** AUTO data:
      138     9658          ***/
      139     9659
      140     9660    1   DCL AFPOOL$ PTR AUTO;                   /* Pointer to FPOOL buffer            */
      141     9661    1   DCL BACKUP_FM_CNT SBIN AUTO;            /* Number of file marks to back up    */
      142     9662    1   DCL CREATE_DATE_UTS SBIN AUTO;          /* Creation date UTS                  */
      143     9663    1   DCL DDDT$ PTR AUTO;                /* Pointer to DDT entry for DCB's device   */
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:51   
      144     9664        %VLP_ERRCODE(FPTN=ERRSAV,STCLASS=AUTO); /* To save B$JIT.ERR                  */
      145     9709    1   DCL I SBIN AUTO;                        /* Used as temp and index             */
      146     9710    1   DCL J SBIN AUTO;                        /* Used as temp and index             */
      147     9711    1   DCL JDCB$ PTR AUTO;                     /* Pointer to DCB                     */
      148     9712    1   DCL DCT$ PTR;
      149     9713    1   DCL O$ PTR;
      150     9714    1   DCL LBL1$ PTR;
      151     9715    1   DCL LBL2$ PTR;
      152     9716    1   DCL SKIPS SBIN;
      153     9717    1   DCL SECTFIND BIT(1);
      154     9718    1   DCL THISFSN SBIN AUTO;
      155     9719    1   DCL THISFSECT SBIN AUTO;
      156     9720    1   DCL NO_IFPARAM_RESTRICT BIT(1) AUTO;    /* Indicates FITless RESTRICT file    */
      157     9721    1   DCL FILE_NAME CHAR(31) ALIGNED AUTO;    /* Name of current file on OD         */
      158     9722    1   DCL FILE_SEQ SBIN ALIGNED AUTO;    /* Sequence number of current file on OD */
      159     9723    1   DCL TEMP$ PTR AUTO;                     /* A useful item                      */
      160     9724    1   DCL MAXBLKL SBIN WORD AUTO;             /* Max possible BLKL                  */
      161     9725
      162     9726         /***
      163     9727          *** CONSTANT data:
      164     9728          ***/
      165     9729
      166     9730        %EQU FT_MAXFMTS=4;
      167     9731    1   DCL FT_FORMAT(0:%FT_MAXFMTS) UBIN BYTE UNAL CONSTANT INIT(
      168     9732    1      ASCBIN('D'),
      169     9733    1      ASCBIN('S'),
      170     9734    1      ASCBIN('V'),
      171     9735    1      ASCBIN('F'),
      172     9736    1      ASCBIN('U') );
      173     9737                                      /* Known basic tape formats...U must be last    */
      174     9738        %EQU FT_MAXCP6FMT=10;
      175     9739    1   DCL FT_CP6FMT(0:%FT_MAXCP6FMT) UBIN BYTE UNAL CONSTANT INIT(
      176     9740    1      ASCBIN('C'),
      177     9741    1      ASCBIN('K'),
      178     9742    1      ASCBIN('R'),
      179     9743    1      ASCBIN('X'),
      180     9744    1      ASCBIN('x'),
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:52   
      181     9745    1      ASCBIN('F'),
      182     9746    1      ASCBIN('I'),
      183     9747    1      ASCBIN('D'),
      184     9748    1      ASCBIN('U'),
      185     9749    1      ASCBIN('S'),
      186     9750    1      ASCBIN('i') );
      187     9751    1   DCL FT_CP6FMTORG(0:%FT_MAXCP6FMT) UBIN BYTE UNAL CONSTANT INIT(
      188     9752    1      %CONSEC#,
      189     9753    1      %KEYED#,
      190     9754    1      %RANDOM#,
      191     9755    1      %RESTRICT#,
      192     9756    1      %RESTRICT#,
      193     9757    1      %RELATIVE#,
      194     9758    1      %INDEXED#,
      195     9759    1      %IDS#,
      196     9760    1      %UR#,
      197     9761    1      %SYMB#,
      198     9762    1      %IREL# );
      199     9763
      200     9764        %FPT_PFIL(FPTN=FPT_PFIL_EOF,BOF=NO,STCLASS=CONSTANT);
      201     9779
      202     9780        %FT$ERR (ERRNAME=E_BADFEP,FCG='0620'O,MID='17'O,CODE=%E$BAD_FEP,SEV=2);
      203     9788        /*E*  ERROR: FPO-E$BAD_FEP-2
      204     9789              MESSAGE: There is no OD Controller with that node name.
      205     9790              MESSAGE1: A device open with no SN must have a valid Optical
      206     9791                 disc Controller type FEP Node Designator.
      207     9792        */
      208     9793
      209     9794        %FT$ERR( ERRNAME=E_BADFSN, FCG='0620'O, MID='17'O, CODE=%E$BADFSN, SEV=2 );
      210     9802        /*E*     ERROR: FPO-E$BADFSN-2
      211     9803                 MESSAGE: FSN > 262143% for %TA%
      212     9804                 MESSAGE1: You can't create an OD file with file sequence
      213     9805                           number greater than 262143.
      214     9806                 DESCRIPTION: Because the UBIN(18) FSN would wrap.
      215     9807         ***/
      216     9808
      217     9809       %FT$ERR( ERRNAME=E_BADODFORMAT, FCG='0620'O, MID='17'O, CODE=%E$BADODFORMAT, SEV=2 )
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:53   
              9809            ;
      218     9817        /*E*     ERROR: FPO-E$BADODFORMAT-2
      219     9818                 MESSAGE:  Invalid Optical Disk format% for OD#%SN%
      220     9819                 MESSAGE1: A non-CP6 "tape" format was found on your Optical Disk
      221     9820                           volume% (OD#%SN)%.  This should never happen.
      222     9821                 DESCRIPTION: Since CP6 creates all optical disk volumes, this should
      223     9822                              never happen.  But just in case it does, tell the user.
      224     9823         ***/
      225     9824
      226     9825        %FT$ERR( ERRNAME=E_BRDUPSN, FCG='0620'O, MID='17'O, CODE=%E$BRDUPSN, SEV=2 );
      227     9833        /*E*     ERROR: FPO-E$BRDUPSN-2
      228     9834                 MESSAGE: Blank or duplicate serial number% on DCB %DC%
      229     9835                 MESSAGE1: The serial number list contains either a blank
      230     9836                    serial number between non-blank serial numbers or a
      231     9837                    serial number that is duplicated% on DCB %DC%.
      232     9838         ***/
      233     9839
      234     9840        %FT$ERR( ERRNAME=E_EOSET, FCG='0620'O, MID='17'O, CODE=%E$EOSET, SEV=2 );
      235     9848        /*E*     ERROR: FPO-E$EOSET-2
      236     9849                 MESSAGE: Beginning/end of volume set% looking for %TA%
      237     9850                 MESSAGE1: On an open NXTF the beginning or end of set
      238     9851                    was detected% on OD#%SN% looking for %TA%
      239     9852         ***/
      240     9853
      241     9854        %FT$ERR( ERRNAME=E_FSNERR, FCG='0620'O, MID='17'O, CODE=%E$FSNERR, SEV=2 );
      242     9862        /*E*     ERROR: FPO-E$FSNERR-2
      243     9863                 MESSAGE: File sequence number error% on %TA%
      244     9864                 MESSAGE1: File specified by sequence number was not found
      245     9865                    because file sequence numbers in volume set were out of order.
      246     9866         ***/
      247     9867
      248     9868        %FT$ERR( ERRNAME=E_INVLDFUN, FCG='0620'O, MID='17'O, CODE=%E$INVLDFUN, SEV=2);
      249     9876        /*E*     ERROR: FPO-E$INVLDFUN-2
      250     9877                 MESSAGE: Invalid FUN specified for Optical Disc file open% of %TA%.
      251     9878                 MESSAGE1: Optical Disc files may only be opened CREATE or IN.
      252     9879        */
      253     9880
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:54   
      254     9881        %FT$ERR( ERRNAME=E_INVLDORG, FCG='0620'O, MID='17'O, CODE=%E$INVLDORG, SEV=2);
      255     9889        /*E*     ERROR: FPO-E$INVLDORG-2
      256     9890                 MESSAGE: Invalid ORG specified for Optical Disc file open% of %TA%.
      257     9891                 MESSAGE1: Optical Disc files may only have organizations of CONSEC,
      258     9892                    FIXED, INDEXED, IREL, KEYED, RESTRICT, UR, VARIABLE, and SYMB.
      259     9893        */
      260     9894
      261     9895        %FT$ERR( ERRNAME=E_IOERR, FCG='0620'O, MID='17'O, CODE=%E$IOERR, SEV=2 );
      262     9903        /*E*     ERROR: FPO-E$IOERR-2
      263     9904                 MESSAGE: Unable to read or write optical disk sector% on %TA%
      264     9905         ***/
      265     9906
      266     9907        %FT$ERR( ERRNAME=E_NOACCESS, FCG='0620'O, MID='17'O, CODE=%E$NOACCESS, SEV=2 );
      267     9915        /*E*     ERROR: FPO-E$NOACCESS-2
      268     9916                 MESSAGE: Access denied% to %TA%% through DCB %DC%
      269     9917                 DESCRIPTION: Attempt to open a file to which access is denied.
      270     9918         ***/
      271     9919
      272     9920        %FT$ERR( ERRNAME=E_NOCFUS, FCG='0620'O, MID='17'O, CODE=%E$NOCFUS, SEV=2 );
      273     9928        /*E*     ERROR: FPO-E$NOCFUS
      274     9929                 MESSAGE: No system table space for SN list% for %TA%
      275     9930                 MESSAGE1: There is no CFU space for a serial number table.
      276     9931                 DESCRIPTION: There is not enough CFU space to hold the user's
      277     9932                    serial number list.
      278     9933         ***/
      279     9934
      280     9935        %FT$ERR( ERRNAME=E_NOFIDTHIS, FCG='0620'O, MID='17'O, CODE=%E$NOFIDTHIS, SEV=2 );
      281     9943        /*E*     ERROR: FPO-E$NOFIDTHIS-2
      282     9944                 MESSAGE: No file specified% on DCB %DC%
      283     9945                 MESSAGE1: No file name or file sequence number is specified.
      284     9946                 DESCRIPTION: An attempt to open an input or update tape file
      285     9947                    with no name was specified.
      286     9948         ***/
      287     9949
      288     9950        %FT$ERR( ERRNAME=E_NOFILE, FCG='0620'O, MID='17'O, CODE=%E$NOFILE , SEV=2 );
      289     9958        /*E*     ERROR: FPO-E$NOFILE-2
      290     9959                 MESSAGE: File% %TA% specified in DCB% %DC% was not found
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:55   
      291     9960         ***/
      292     9961
      293     9962        %FT$ERR( ERRNAME=E_NOFPOOL, FCG='0620'O, MID='17'O, CODE=%E$NOFPOOL, SEV=2 );
      294     9970        /*E*     ERROR: FPO-E$NOFPOOL-2
      295     9971                 MESSAGE: Not enough FPOOLs% for %TA%
      296     9972                 MESSAGE1: FPOOL limit does not permit label processing and
      297     9973                    file blocking/deblocking.
      298     9974         ***/
      299     9975
      300     9976        %FT$ERR( ERRNAME=E_NOIFPARAM, FCG='0620'O, MID='17'O, CODE=%E$NOIFPARAM, SEV=2 );
      301     9984        /*E*     ERROR: FPO-E$NOIFPARAM
      302     9985                 MESSAGE: No IFPARAM specified% for %TA%
      303     9986                 MESSAGE1: Restrict tape files must have IFPARAM specified
      304     9987                           for creation.
      305     9988                 DESCRIPTION: An attempt to open a RESTRICT tape file in
      306     9989                    CREATE mode without having an IFPARAM buffer was made.
      307     9990         ***/
      308     9991
      309     9992        %FT$ERR( ERRNAME=E_NORESTRICT, FCG='0620'O, MID='17'O, CODE=%E$NORESTRICT, SEV=2 );
      310    10000        /*E*     ERROR: FPO-E$NORESTRICT-2
      311    10001                 MESSAGE: No access to RESTRICT format files allowed% on DCB %DC%
      312    10002                 MESSAGE1: FMBLK privilege is needed to access RESTRICT
      313    10003                    format tape files.
      314    10004         ***/
      315    10005
      316    10006        %FT$ERR( ERRNAME=E_NOSN, FCG='0620'O, MID='17'O, CODE=%E$NOSN, SEV=2 );
      317    10014        /*E*     ERROR: FPO-E$NOSN-2
      318    10015                 MESSAGE: No SN specified% on DCB %DC%
      319    10016                 MESSAGE1: An attempt was made to open an input or update volume, or to
      320    10017                    mount a volume, with no serial number.
      321    10018         ***/
      322    10019
      323    10020        %FT$ERR( ERRNAME=E_NOTOWNR, FCG='0620'O, MID='17'O, CODE=%E$NOTOWNR, SEV=2 );
      324    10028        /*E*     ERROR: FPO-E$NOTOWNR-2
      325    10029                 MESSAGE: Only owner access allowed% to OD#%SN%
      326    10030                 MESSAGE1: The owner of this volume set protected this volume
      327    10031                    against all public access.
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:56   
      328    10032         ***/
      329    10033
      330    10034        %FT$ERR( ERRNAME=E_NOTOWNRW, FCG='0620'O, MID='17'O, CODE=%E$NOTOWNRW, SEV=2 );
      331    10042        /*E*     ERROR: FPO-E$NOTOWNRW-2
      332    10043                 MESSAGE: Only owner write access allowed% to OD#%SN%
      333    10044                 MESSAGE1: The owner of this volume set protected this volume
      334    10045                    against all public write access.
      335    10046         ***/
      336    10047
      337    10048        %FT$ERR( ERRNAME=E_ODEMPTYENT, FCG='0620'O, MID='17'O, CODE=%E$ODEMPTYENT, SEV=2 );
      338    10056        /*E*     ERROR: FPO-E$ODEMPTYENT-2
      339    10057                 MESSAGE: Empty optical disk file entry% on OD#%SN%
      340    10058                 MESSAGE1: The file entry of the optical disk file you tried to open
      341    10059                    was empty, because the file is inaccessible due to errors while
      342    10060                    building the file directory for this platter% (OD#%SN)%.
      343    10061         ***/
      344    10062
      345    10063        %FT$ERR( ERRNAME=E_SCRORDER, FCG='0620'O, MID='17'O, CODE=%E$SCRORDER, SEV=2 );
      346    10071        /*E*     ERROR: FPO-E$SCRORDER-2
      347    10072                 MESSAGE: Out of order ANSscratch volume% on DCB %DC%
      348    10073                 MESSAGE1: ANSscratch tapes can not be CVOLed to unless
      349    10074                           at beginning of volume set.
      350    10075                 DESCRIPTION: Attempt to open a scratch tape not at set beginning.
      351    10076                    This error helps to enforce ANS FSN field in HDR1 by ensuring
      352    10077                    that the correct FSN is always known.
      353    10078         ***/
      354    10079
      355    10080        %FT$ERR( ERRNAME=E_SECTERR, FCG='0620'O, MID='17'O, CODE=%E$SECTERR, SEV=2 );
      356    10088        /*E*     ERROR: FPO-E$SECTERR-2
      357    10089                 MESSAGE: File section missing% for %TA%
      358    10090                 MESSAGE1: A file section which should be present can not
      359    10091                           be found in the volume set as described in the
      360    10092                           serial number list.
      361    10093                 DESCRIPTION: The previous or next file section couldn't
      362    10094                    be found.
      363    10095         ***/
      364    10096
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:57   
      365    10097        %FT$ERR( ERRNAME=E_VOLERR, FCG='0620'O, MID='17'O, CODE=%E$VOLERR, SEV=2 );
      366    10105        /*E*    ERROR: FPO-E$VOLERR-2
      367    10106                 MESSAGE: Too many serial numbers% on DCB %DC%.
      368    10107                 MESSAGE1: A DEVICE open of an optical disk platter may specify
      369    10108                           at most one serial number.
      370    10109                DESCRIPTION: The user specified more than one SN.
      371    10110         ***/
      372    10111
      373    10112        %FT$ERR( ERRNAME=E_VOLORDER, FCG='0620'O, MID='17'O, CODE=%E$VOLORDER, SEV=2 );
      374    10120        /*E*     ERROR: FPO-E$VOLORDER-2
      375    10121                 MESSAGE: Volume missing or out of order% for %TA%
      376    10122                 MESSAGE1: The volume with expected file sequence numbers or file
      377    10123                           section cannot be found in the volume set as described
      378    10124                           in the serial number list.
      379    10125                 DESCRIPTION: Either an attempt to find a file by its sequence number
      380    10126                    failed even though files with higher and lower sequence numbers
      381    10127                    were found, or an attempt to file a file section failed although
      382    10128                    lower and higher file sections were found.
      383    10129         ***/
      384    10130
      385    10131        %FT$ERR( ERRNAME=E_VOLOUT, FCG='0620'O, MID='17'O, CODE=%E$VOLOUT, SEV=2 );
      386    10139        /*E*     ERROR: FPO-E$VOLOUT-2
      387    10140                 MESSAGE: No more volumes% for %TA%
      388    10141                 DESCRIPTION: DCB.MAXVOL = 0 and no more serial
      389    10142                    numbers exist.
      390    10143         ***/
      391    10144
      392    10145        %FT$ERR( ERRNAME=E_WRONGSN, FCG='0620'O, MID='17'O, CODE=%E$WRONGSN, SEV=2 );
      393    10153        /*E*    ERROR: FPO-E$WRONGSN-2
      394    10154                MESSAGE: End of volume set% on %TA%. Tape is empty.
      395    10155                MESSAGE1: The operator mounted a tape with a serial number
      396    10156                          different from the one in VOL1. This tape will be
      397    10157                          treated as an empty tape.
      398    10158         ***/
      399    10159
      400    10160        %FT$ERR( ERRNAME=E_WRITEPROT, FCG='0620'O, MID='17'O, CODE=%E$WRITEPROT, SEV=2 );
      401    10168        /*E*    ERROR: FPO-E$WRITEPROT-2
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:58   
      402    10169                MESSAGE: Optical disk volume% OD#%SN% is write protected.
      403    10170                MESSAGE1: Optical disk volume% OD#%SN% is write protected, either via
      404    10171                          the write protect tab on the platter, or via the write
      405    10172                          protect switch on the optical disk drive.  Create opens
      406    10173                          to write protected optical disks are self defeating.
      407    10174         ***/
      408    10175
      409    10176
      410    10177        /****************************/
      411    10178
      412    10179    1         JDCB$ = B$JIT.DCB$;               /* Get pointer to DCB                 */

  10179  2 000002   000000 470400 xsym               LDP0    B$JIT$
         2 000003   000232 236100                    LDQ     154,,PR0
         2 000004   200013 756100                    STQ     JDCB$,,AUTO

      413    10180    1         F$DCB.CFU$ = ADDR(NIL);           /* Assume only one vol in set         */

  10180  2 000005   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000006   200013 471500                    LDP1    JDCB$,,AUTO
         2 000007   100066 756100                    STQ     54,,PR1

      414    10181
      415    10182    1         F$DCB.IFMT = FMTOD#;

  10182  2 000010   032000 236003                    LDQ     13312,DU
         2 000011   100103 552140                    STBQ    67,'40'O,PR1

      416    10183    1         F$DCB.IASN = %OD#;

  10183  2 000012   000012 236007                    LDQ     10,DL
         2 000013   100103 552104                    STBQ    67,'04'O,PR1

      417    10184    1         IF F$DCB.ORG = %RESTRICT# AND F$DCB.FUN = %CREATE# THEN

  10184  2 000014   100032 236100                    LDQ     26,,PR1
         2 000015   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:59   
         2 000016   022000 116003                    CMPQ    9216,DU
         2 000017   000027 601000 2                  TNZ     s:10187
         2 000020   100032 236100                    LDQ     26,,PR1
         2 000021   000777 376003                    ANQ     511,DU
         2 000022   000003 116003                    CMPQ    3,DU
         2 000023   000027 601000 2                  TNZ     s:10187

      418    10185    1            F$DCB.ACS = %BLOCK#;

  10185  2 000024   000003 236007                    LDQ     3,DL
         2 000025   100036 552104                    STBQ    30,'04'O,PR1
         2 000026   000031 710000 2                  TRA     s:10188

      419    10186    1         ELSE
      420    10187    1            F$DCB.ACS = %SEQUEN#;     /* No DIRECT use of OPTICAL DISC      */

  10187  2 000027   000001 236007                    LDQ     1,DL
         2 000030   100036 552104                    STBQ    30,'04'O,PR1

      421    10188    1         IF F$DCB.ASN = %DEVICE# OR PN$.V_->FPT$OPEN_V.OPER.MNTONLY THEN

  10188  2 000031   100032 236100                    LDQ     26,,PR1
         2 000032   777000 376007                    ANQ     -512,DL
         2 000033   003000 116007                    CMPQ    1536,DL
         2 000034   000042 600000 2                  TZE     s:10189
         2 000035   200003 473500                    LDP3    @PN$,,AUTO
         2 000036   300000 474500                    LDP4    0,,PR3
         2 000037   400000 236100                    LDQ     0,,PR4
         2 000040   001000 316007                    CANQ    512,DL
         2 000041   000045 600000 2                  TZE     s:10191

      422    10189    1            CALL FPO_OPNDEV ALTRET(FREEPOOLS);

  10189  2 000042   000321 701000 2                  TSX1    FPO_OPNDEV
         2 000043   000235 702000 2                  TSX2    FREEPOOLS
         2 000044   000151 710000 2                  TRA     s:10223

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:60   
      423    10190    2         ELSE DO;

      424    10191    3            DO CASE(F$DCB.FUN);

  10191  2 000045   100032 220100                    LDX0    26,,PR1
         2 000046   000777 360003                    ANX0    511,DU
         2 000047   000004 100003                    CMPX0   4,DU
         2 000050   000052 602010 2                  TNC     s:10191+5,X0
         2 000051   000146 710000 2                  TRA     s:10214
         2 000052   000146 710000 2                  TRA     s:10214
         2 000053   000146 710000 2                  TRA     s:10214
         2 000054   000141 710000 2                  TRA     s:10211
         2 000055   000056 710000 2                  TRA     s:10193

      425    10192    3             CASE(%CREATE#);               /* Create                             */

      426    10193    3               IF  F$DCB.ORG ~= %CONSEC# AND F$DCB.ORG ~= %FIXED# AND

  10193  2 000056   100032 236100                    LDQ     26,,PR1
         2 000057   777000 376003                    ANQ     -512,DU
         2 000060   001000 116003                    CMPQ    512,DU
         2 000061   000105 600000 2                  TZE     s:10201
         2 000062   017000 116003                    CMPQ    7680,DU
         2 000063   000105 600000 2                  TZE     s:10201
         2 000064   006000 116003                    CMPQ    3072,DU
         2 000065   000105 600000 2                  TZE     s:10201
         2 000066   015000 116003                    CMPQ    6656,DU
         2 000067   000105 600000 2                  TZE     s:10201
         2 000070   002000 116003                    CMPQ    1024,DU
         2 000071   000105 600000 2                  TZE     s:10201
         2 000072   022000 116003                    CMPQ    9216,DU
         2 000073   000105 600000 2                  TZE     s:10201
         2 000074   004000 116003                    CMPQ    2048,DU
         2 000075   000105 600000 2                  TZE     s:10201
         2 000076   020000 116003                    CMPQ    8192,DU
         2 000077   000105 600000 2                  TZE     s:10201
         2 000100   011000 116003                    CMPQ    4608,DU
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:61   
         2 000101   000105 600000 2                  TZE     s:10201

      427    10194    3                  F$DCB.ORG ~= %INDEXED# AND F$DCB.ORG ~= %IREL# AND
      428    10195    3                  F$DCB.ORG ~= %KEYED# AND F$DCB.ORG ~= %RESTRICT# AND
      429    10196    3                  F$DCB.ORG ~= %UR# AND F$DCB.ORG ~= %VARIABLE# AND
      430    10197    4                  F$DCB.ORG ~= %SYMB# THEN DO;

      431    10198    4                  B$JIT.ERR = E_INVLDORG;  /* Invalid ORG for optical disk.      */

  10198  2 000102   000023 236000 1                  LDQ     E_INVLDORG
         2 000103   000012 756100                    STQ     10,,PR0

      432    10199    4                  GOTO FREEPOOLS;

  10199  2 000104   000235 710000 2                  TRA     FREEPOOLS

      433    10200    4                  END;
      434    10201    3               CALL FPO_OPNCREATE ALTRET(FREEPOOLS);

  10201  2 000105   000537 701000 2                  TSX1    FPO_OPNCREATE
         2 000106   000235 702000 2                  TSX2    FREEPOOLS

      435    10202    3               IF F$DCB.ORG = %KEYED# OR F$DCB.ORG = %INDEXED# THEN

  10202  2 000107   200013 470500                    LDP0    JDCB$,,AUTO
         2 000110   000032 236100                    LDQ     26,,PR0
         2 000111   777000 376003                    ANQ     -512,DU
         2 000112   002000 116003                    CMPQ    1024,DU
         2 000113   000116 600000 2                  TZE     s:10203
         2 000114   006000 116003                    CMPQ    3072,DU
         2 000115   000136 601000 2                  TNZ     s:10209

      436    10203    4                  IF F$DCB.ACS = %SEQUEN# THEN DO;  /* Get RO space for key      */

  10203  2 000116   000036 236100                    LDQ     30,,PR0
         2 000117   000777 376007                    ANQ     511,DL
         2 000120   000001 116007                    CMPQ    1,DL
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:62   
         2 000121   000151 601000 2                  TNZ     s:10223

      437    10204    4                     CALL FSA$GSP(64,F$DCB.LASTKEY$) ALTRET(FREEPOOLS);

  10204  2 000122   200013 236100                    LDQ     JDCB$,,AUTO
         2 000123   000065 036003                    ADLQ    53,DU
         2 000124   000001 235000 3                  LDA     1
         2 000125   200046 757100                    STAQ    SAVVOL+2,,AUTO
         2 000126   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 000127   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000130   000000 701000 xent               TSX1    FSA$GSP
         2 000131   000235 702000 2                  TSX2    FREEPOOLS

      438    10205    4                     F$DCB.TAPTYP.HAVLASTKEY = %NO#;

  10205  2 000132   200013 470500                    LDP0    JDCB$,,AUTO
         2 000133   000002 236000 3                  LDQ     2
         2 000134   000067 356100                    ANSQ    55,,PR0

      439    10206    4                     END;

  10206  2 000135   000151 710000 2                  TRA     s:10223

      440    10207    3                  ELSE ;
      441    10208    3               ELSE
      442    10209    3                  F$DCB.LASTKEY = -1;

  10209  2 000136   000001 335007                    LCA     1,DL
         2 000137   000065 755100                    STA     53,,PR0
         2 000140   000151 710000 2                  TRA     s:10223

      443    10210    3             CASE(%IN#);                  /* Input and update                   */

      444    10211    3               CALL FPO_OPNEXISTING ALTRET(FREEPOOLS);

  10211  2 000141   001221 701000 2                  TSX1    FPO_OPNEXISTING
         2 000142   000235 702000 2                  TSX2    FREEPOOLS
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:63   

      445    10212    3               F$DCB.LASTKEY = 0;

  10212  2 000143   200013 470500                    LDP0    JDCB$,,AUTO
         2 000144   000065 450100                    STZ     53,,PR0
         2 000145   000151 710000 2                  TRA     s:10223

      446    10213    3             CASE(ELSE);

      447    10214    3               B$JIT.ERR = E_INVLDFUN;

  10214  2 000146   000022 236000 1                  LDQ     E_INVLDFUN
         2 000147   000012 756100                    STQ     10,,PR0

      448    10215    3               GOTO FREEPOOLS;

  10215  2 000150   000235 710000 2                  TRA     FREEPOOLS

      449    10216    3             END;

      450    10217    2            END;
      451    10218
      452    10219         /***
      453    10220          *** Initialize to read/write first record of file.
      454    10221          ***/
      455    10222
      456    10223    1         F$DCB.AFTRBLK = %NO#;             /* Positioned before                  */

  10223  2 000151   200013 470500                    LDP0    JDCB$,,AUTO
         2 000152   000003 236000 3                  LDQ     3
         2 000153   000064 356100                    ANSQ    52,,PR0

      457    10224    1         F$DCB.PRECNO = 1;                 /* First block                        */

  10224  2 000154   000001 235007                    LDA     1,DL
         2 000155   000072 755100                    STA     58,,PR0

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:64   
      458    10225    1         F$DCB.RPOS = %YES#;               /* Positioned to                      */

  10225  2 000156   010000 236007                    LDQ     4096,DL
         2 000157   000064 256100                    ORSQ    52,,PR0

      459    10226    1         F$DCB.CRECNO = 1;                 /* First record                       */

  10226  2 000160   000071 755100                    STA     57,,PR0

      460    10227    1         F$DCB.CRECX = F$DCB.BOL;          /* First record is just after BOL     */

  10227  2 000161   000034 720100                    LXL0    28,,PR0
         2 000162   000777 360003                    ANX0    511,DU
         2 000163   000067 440100                    SXL0    55,,PR0

      461    10228    1         F$DCB.SPAN = %NO#;                /* Expect next record to begin span   */

  10228  2 000164   000004 236000 3                  LDQ     4
         2 000165   000064 356100                    ANSQ    52,,PR0

      462    10229    1         F$DCB.NRECX = 1;                  /* First of block                     */

  10229  2 000166   000001 221003                    LDX1    1,DU
         2 000167   000100 741100                    STX1    64,,PR0

      463    10230    1         F$DCB.CONT = %NO#;                /* No previous continuation           */

  10230  2 000170   000005 236000 3                  LDQ     5
         2 000171   000064 356100                    ANSQ    52,,PR0

      464    10231    1         F$DCB.GDISP = 0;                  /* Nothing read/written yet           */

  10231  2 000172   000101 450100                    STZ     65,,PR0

      465    10232    1         F$DCB.BLKLEN = F$DCB.BOL;         /* Block length includes header       */

  10232  2 000173   000074 440100                    SXL0    60,,PR0
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:65   

      466    10233    1         F$DCB.CBUFNUM = 0;                /* No current buffer                  */

  10233  2 000174   000006 236000 3                  LDQ     6
         2 000175   000070 356100                    ANSQ    56,,PR0

      467    10234    1         F$DCB.NEW_FSECT = %YES#;

  10234  2 000176   000001 236003                    LDQ     1,DU
         2 000177   000064 256100                    ORSQ    52,,PR0

      468    10235    1         F$DCB.TRNC = FT_EBTRUNC#;    /* Fake empty buffer trunc to get buffer   */

  10235  2 000200   000064 236100                    LDQ     52,,PR0
         2 000201   000007 376000 3                  ANQ     7
         2 000202   000004 276007                    ORQ     4,DL
         2 000203   000064 756100                    STQ     52,,PR0

      469    10236    1         F$DCB.TAPTYP.PASTFM = %NO#;       /* Not after file mark                */

  10236  2 000204   000010 236000 3                  LDQ     8
         2 000205   000067 356100                    ANSQ    55,,PR0

      470    10237    1         FT$DDT.POS = FTP_BOD#;            /* In data                            */

  10237  2 000206   200007 471500                    LDP1    DDDT$,,AUTO
         2 000207   100006 236100                    LDQ     6,,PR1
         2 000210   000011 376000 3                  ANQ     9
         2 000211   000060 276007                    ORQ     48,DL
         2 000212   100006 756100                    STQ     6,,PR1

      471    10238    1         F$DCB.MEDIA = FMTTAPE#;           /* Tape, of course                    */

  10238  2 000213   200013 470500                    LDP0    JDCB$,,AUTO
         2 000214   000005 236003                    LDQ     5,DU
         2 000215   000103 552120                    STBQ    67,'20'O,PR0

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:66   
      472    10239
      473    10240         /***
      474    10241          *** For test open, just close file.
      475    10242          ***/
      476    10243
      477    10244    1         IF PN$.V_->FPT$OPEN_V.OPER.TEST AND F$DCB.ASN ~= %DEVICE# THEN

  10244  2 000216   200003 473500                    LDP3    @PN$,,AUTO
         2 000217   300000 474500                    LDP4    0,,PR3
         2 000220   400000 236100                    LDQ     0,,PR4
         2 000221   020000 316007                    CANQ    8192,DL
         2 000222   000233 600000 2                  TZE     s:10247
         2 000223   000032 236100                    LDQ     26,,PR0
         2 000224   777000 376007                    ANQ     -512,DL
         2 000225   003000 116007                    CMPQ    1536,DL
         2 000226   000233 600000 2                  TZE     s:10247

      478    10245    1            CALL FPC$DFLTCLOSE;

  10245  2 000227   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000230   000000 701000 xent               TSX1    FPC$DFLTCLOSE
         2 000231   000000 011000                    NOP     0
         2 000232   000235 710000 2                  TRA     FREEPOOLS

      479    10246    1         ELSE
      480    10247    1            F$DCB.FCD = %YES#;           /* File is open                       */

  10247  2 000233   020000 236007                    LDQ     8192,DL
         2 000234   000031 256100                    ORSQ    25,,PR0

      481    10248
      482    10249         /***
      483    10250          *** Open is done.
      484    10251          ***/
      485    10252
      486    10253    1   FREEPOOLS:
      487    10254    1         CALL FTR$RELFPOOLS;               /* Release all FPOOL buffers          */
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:67   

  10254  2 000235   000002 631400 xsym  FREEPOOLS    EPPR1   B_VECTNIL+2
         2 000236   000000 701000 xent               TSX1    FTR$RELFPOOLS
         2 000237   000000 011000                    NOP     0

      488    10255    1         IF NOT F$DCB.FCD THEN

  10255  2 000240   200013 470500                    LDP0    JDCB$,,AUTO
         2 000241   000031 236100                    LDQ     25,,PR0
         2 000242   020000 316007                    CANQ    8192,DL
         2 000243   000247 601000 2                  TNZ     s:10257

      489    10256    1            CALL FTR$RELCFUS;         /* Not open...release CFUs            */

  10256  2 000244   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000245   000000 701000 xent               TSX1    FTR$RELCFUS
         2 000246   000000 011000                    NOP     0

      490    10257    1         RETURN;

  10257  2 000247   000000 702200 xent               TSX2  ! X66_ARET

      491    10258        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:68   
      492    10259    1   FPO$COPYOD: ENTRY ALTRET;

  10259  2 000250   000000 700200 xent  FPO$COPYOD   TSX0  ! X66_AUTO_1
         2 000251   000052 000001                    ZERO    42,1

      493    10260    1         JDCB$ = B$JIT.DCB$;

  10260  2 000252   000000 470400 xsym               LDP0    B$JIT$
         2 000253   000232 236100                    LDQ     154,,PR0
         2 000254   200013 756100                    STQ     JDCB$,,AUTO

      494    10261                 /* Search the RAT tables for a mounted volume with the same
      495    10262                    SETX to make sure we have both volumes.                */
      496    10263    1         O$ = FR$HD$(FR_NPOOL);

  10263  2 000255   000002 236000 xsym               LDQ     FR$HD$+2
         2 000256   200015 756100                    STQ     O$,,AUTO

      497    10264    2         DO WHILE (O$ ~= ADDR(NIL));

  10264  2 000257   000313 710000 2                  TRA     s:10273

      498    10265    2            IF O$->FR$RAT.TYP = 'OD' AND

  10265  2 000260   200015 470500                    LDP0    O$,,AUTO
         2 000261   000010 220100                    LDX0    8,,PR0
         2 000262   000047 100000 1                  CMPX0   E_WRITEPROT+1
         2 000263   000311 601000 2                  TNZ     s:10272
         2 000264   200013 471500                    LDP1    JDCB$,,AUTO
         2 000265   100075 473500                    LDP3    61,,PR1
         2 000266   040100 106500                    CMPC    fill='040'O
         2 000267   000004 400006                    ADSC9   4,,PR0                   cn=2,n=6
         2 000270   300000 000006                    ADSC9   0,,PR3                   cn=0,n=6
         2 000271   000311 601000 2                  TNZ     s:10272
         2 000272   000010 236100                    LDQ     8,,PR0
         2 000273   000400 316007                    CANQ    256,DL
         2 000274   000311 600000 2                  TZE     s:10272
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:69   
         2 000275   000000 474400 xsym               LDP4    B$JIT$
         2 000276   400000 236100                    LDQ     0,,PR4
         2 000277   777777 376007                    ANQ     -1,DL
         2 000300   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 000301   000004 236100                    LDQ     4,,PR0
         2 000302   000022 732000                    QRS     18
         2 000303   200046 116100                    CMPQ    SAVVOL+2,,AUTO
         2 000304   000311 601000 2                  TNZ     s:10272

      499    10266    2               O$->FR$RAT.REEL.SER = F$DCB.UB$->SER AND
      500    10267    2               O$->FR$RAT.FLG.MBIT.MTD AND
      501    10268    3               O$->FR$RAT.REEL.ASID = B$JIT.SYSID THEN DO;

      502    10269    3               CALL FPO$COPYDEV ALTRET(JUSTALT);

  10269  2 000305   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000306   000000 701000 xent               TSX1    FPO$COPYDEV
         2 000307   002516 702000 2                  TSX2    JUSTALT

      503    10270    3               RETURN;

  10270  2 000310   000000 702200 xent               TSX2  ! X66_ARET

      504    10271    3               END;
      505    10272    2            O$ = O$->FR$RAT.LNK$;

  10272  2 000311   000000 236100                    LDQ     0,,PR0
         2 000312   200015 756100                    STQ     O$,,AUTO

      506    10273    2            END;

  10273  2 000313   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000314   000260 601000 2                  TNZ     s:10265

      507    10274    1         B$JIT.ERR = E_NOSN;

  10274  2 000315   000034 236000 1                  LDQ     E_NOSN
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:70   
         2 000316   000000 470400 xsym               LDP0    B$JIT$
         2 000317   000012 756100                    STQ     10,,PR0

      508    10275    1         ALTRETURN;

  10275  2 000320   000000 702200 xent               TSX2  ! X66_AALT

      509    10276        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:71   
      510    10277    1   FPO_OPNDEV: PROC ALTRET;

  10277  2 000321   200040 741300       FPO_OPNDEV   STX1  ! MAXBLKL+1,,AUTO

      511    10278        /*F*  NAME: FPO_OPNDEV
      512    10279              PURPOSE: Open OD Controller for device type functions
      513    10280        */
      514    10281    2   DCL FEI UBIN WORD;
      515    10282    2   DCL HOST BIT(1);
      516    10283    2   DCL O$ PTR;
      517    10284    2   DCL MNTDCT$ PTR;
      518    10285        %NI$DCT (NAME=DCT,STCLASS=BASED);
      519    10333
      520    10334    3         IF F$DCB.PSN = ' ' THEN DO;

  10334  2 000322   200013 470500                    LDP0    JDCB$,,AUTO
         2 000323   040000 106500                    CMPC    fill='040'O
         2 000324   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         2 000325   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000326   000432 601000 2                  TNZ     s:10359

      521    10335    4            IF PN$.V_->FPT$OPEN_V.OPER.MNTONLY THEN DO;

  10335  2 000327   200003 471500                    LDP1    @PN$,,AUTO
         2 000330   100000 473500                    LDP3    0,,PR1
         2 000331   300000 236100                    LDQ     0,,PR3
         2 000332   001000 316007                    CANQ    512,DL
         2 000333   000341 600000 2                  TZE     s:10339

      522    10336    4               B$JIT.ERR = E_NOSN;

  10336  2 000334   000034 236000 1                  LDQ     E_NOSN
         2 000335   000000 474400 xsym               LDP4    B$JIT$
         2 000336   400012 756100                    STQ     10,,PR4

      523    10337    4               ALTRETURN;

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:72   
  10337  2 000337   200040 221300                    LDX1  ! MAXBLKL+1,,AUTO
         2 000340   000000 702211                    TSX2  ! 0,X1

      524    10338    4               END;
      525    10339    3            CALL KIN$CONV_NODENAME(F$DCB.WSN,FEI,HOST) ALTRET(BADFEP);

  10339  2 000341   200042 634500                    EPPR4   HOST,,AUTO
         2 000342   200050 454500                    STP4    SAVVOL+4,,AUTO
         2 000343   200041 633500                    EPPR3   FEI,,AUTO
         2 000344   200047 453500                    STP3    SAVVOL+3,,AUTO
         2 000345   200013 236100                    LDQ     JDCB$,,AUTO
         2 000346   000027 036003                    ADLQ    23,DU
         2 000347   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 000350   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 000351   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000352   000000 701000 xent               TSX1    KIN$CONV_NODENAME
         2 000353   000425 702000 2                  TSX2    BADFEP

      526    10340    3            IF HOST THEN

  10340  2 000354   200042 234100                    SZN     HOST,,AUTO
         2 000355   000425 604000 2                  TMI     BADFEP

      527    10341    3               GOTO BADFEP;
      528    10342    3            O$ = FR$HD$(FR_NPOOL);

  10342  2 000356   000002 236000 xsym               LDQ     FR$HD$+2
         2 000357   200043 756100                    STQ     O$,,AUTO

      529    10343    4            DO WHILE (O$ ~= ADDR(NIL));

  10343  2 000360   000423 710000 2                  TRA     s:10354

      530    10344    4               MNTDCT$ = N$DCT$(O$->FR$RAT.DCTX);

  10344  2 000361   200043 470500                    LDP0    O$,,AUTO
         2 000362   000003 720100                    LXL0    3,,PR0
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:73   
         2 000363   000000 471400 xsym               LDP1    N$DCT$$
         2 000364   100000 236110                    LDQ     0,X0,PR1
         2 000365   200044 756100                    STQ     MNTDCT$,,AUTO

      531    10345    4               IF O$->FR$RAT.TYP = 'OD' AND

  10345  2 000366   000010 221100                    LDX1    8,,PR0
         2 000367   000047 101000 1                  CMPX1   E_WRITEPROT+1
         2 000370   000421 601000 2                  TNZ     s:10353
         2 000371   200044 473500                    LDP3    MNTDCT$,,AUTO
         2 000372   300023 474500                    LDP4    19,,PR3
         2 000373   000000 475400 xsym               LDP5    KI_ROUTE$$
         2 000374   200041 722100                    LXL2    FEI,,AUTO
         2 000375   500000 476512                    LDP6    0,X2,PR5
         2 000376   600002 236100                    LDQ     2,,PR6
         2 000377   000033 772000                    QRL     27
         2 000400   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 000401   400001 236100                    LDQ     1,,PR4
         2 000402   000006 772000                    QRL     6
         2 000403   000077 376007                    ANQ     63,DL
         2 000404   200046 116100                    CMPQ    SAVVOL+2,,AUTO
         2 000405   000421 601000 2                  TNZ     s:10353

      532    10346    5                 MNTDCT$->DCT.DQH$->NI$DQH.FEX = KI$ROUTE$(FEI)->KI$ROUTE.FEI# THEN DO
             10346                           ;

      533    10347    5                  F$DCB.FCD = '1'B;

  10347  2 000406   200013 474500                    LDP4    JDCB$,,AUTO
         2 000407   020000 236007                    LDQ     8192,DL
         2 000410   400031 256100                    ORSQ    25,,PR4

      534    10348    5                  F$DCB.SETX = O$->FR$RAT.DCTX;

  10348  2 000411   000003 720100                    LXL0    3,,PR0
         2 000412   400051 440100                    SXL0    41,,PR4

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:74   
      535    10349    5                  F$DCB.TAPTYP.USRBUF = %YES#;

  10349  2 000413   000100 236003                    LDQ     64,DU
         2 000414   400067 256100                    ORSQ    55,,PR4

      536    10350    5                  F$DCB.FFLG.READ = %YES#;

  10350  2 000415   400000 236003                    LDQ     -131072,DU
         2 000416   400004 256100                    ORSQ    4,,PR4

      537    10351    5                  ALTRETURN;

  10351  2 000417   200040 221300                    LDX1  ! MAXBLKL+1,,AUTO
         2 000420   000000 702211                    TSX2  ! 0,X1

      538    10352    5                  END;
      539    10353    4               O$ = O$->FR$RAT.LNK$;

  10353  2 000421   000000 236100                    LDQ     0,,PR0
         2 000422   200043 756100                    STQ     O$,,AUTO

      540    10354    4               END;

  10354  2 000423   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000424   000361 601000 2                  TNZ     s:10344

      541    10355    3   BADFEP:  B$JIT.ERR = E_BADFEP;

  10355  2 000425   000014 236000 1     BADFEP       LDQ     E_BADFEP
         2 000426   000000 470400 xsym               LDP0    B$JIT$
         2 000427   000012 756100                    STQ     10,,PR0

      542    10356    3            ALTRETURN;

  10356  2 000430   200040 221300                    LDX1  ! MAXBLKL+1,,AUTO
         2 000431   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:75   
      543    10357    3            END;
      544    10358              /* Open device with sn for label process                */
      545    10359    2         CALL FRA$OPR ALTRET(JUSTALT);

  10359  2 000432   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000433   000000 701000 xent               TSX1    FRA$OPR
         2 000434   000473 702000 2                  TSX2    JUSTALT

      546    10360    2         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;

  10360  2 000435   200013 470500                    LDP0    JDCB$,,AUTO
         2 000436   000051 720100                    LXL0    41,,PR0
         2 000437   000000 471400 xsym               LDP1    N$DCT$$
         2 000440   100000 473510                    LDP3    0,X0,PR1
         2 000441   300004 236100                    LDQ     4,,PR3
         2 000442   200007 756100                    STQ     DDDT$,,AUTO

      547    10361    3         IF PN$.V_->FPT$OPEN_V.OPER.MNTONLY THEN DO; /* Just close platter. */

  10361  2 000443   200003 474500                    LDP4    @PN$,,AUTO
         2 000444   400000 475500                    LDP5    0,,PR4
         2 000445   500000 236100                    LDQ     0,,PR5
         2 000446   001000 316007                    CANQ    512,DL
         2 000447   000475 600000 2                  TZE     s:10373

      548    10362    4            IF FT$DDT.ANST THEN DO;       /* Had a label? */

  10362  2 000450   200007 476500                    LDP6    DDDT$,,AUTO
         2 000451   600006 236100                    LDQ     6,,PR6
         2 000452   400000 316007                    CANQ    -131072,DL
         2 000453   000464 600000 2                  TZE     s:10368

      549    10363    4               F$DCB.ASN = %FILE#;        /* Set up DCB accordingly. */

  10363  2 000454   001000 236007                    LDQ     512,DL
         2 000455   000032 552110                    STBQ    26,'10'O,PR0

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:76   
      550    10364    4               F$DCB.FSN = FT$DDT.FRSTFSN + 1;

  10364  2 000456   600005 721100                    LXL1    5,,PR6
         2 000457   000001 622011                    EAX2    1,X1
         2 000460   000034 742100                    STX2    28,,PR0

      551    10365    4               F$DCB.FSECT = FT$DDT.FRSTFSECT;

  10365  2 000461   600007 221100                    LDX1    7,,PR6
         2 000462   000077 741100                    STX1    63,,PR0

      552    10366    4               END;

  10366  2 000463   000466 710000 2                  TRA     s:10369

      553    10367    3            ELSE
      554    10368    3               F$DCB.ASN = %DEVICE#;

  10368  2 000464   003000 236007                    LDQ     1536,DL
         2 000465   000032 552110                    STBQ    26,'10'O,PR0

      555    10369    3            FT$DDT.FSN = FT$DDT.FRSTFSN;  /* Back to BOT. */

  10369  2 000466   600005 721100                    LXL1    5,,PR6
         2 000467   600005 741100                    STX1    5,,PR6

      556    10370    3   CLSOD:   CALL FRB$CLS;

  10370  2 000470   000002 631400 xsym  CLSOD        EPPR1   B_VECTNIL+2
         2 000471   000000 701000 xent               TSX1    FRB$CLS
         2 000472   000000 011000                    NOP     0

      557    10371    3   JUSTALT: ALTRETURN;

  10371  2 000473   200040 221300       JUSTALT      LDX1  ! MAXBLKL+1,,AUTO
         2 000474   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:77   
      558    10372    3            END;
      559    10373    2         F$DCB.FFLG = '0'B;

  10373  2 000475   000000 221003                    LDX1    0,DU
         2 000476   000004 741100                    STX1    4,,PR0

      560    10374    2         F$DCB.FFLG.READ = %YES#;

  10374  2 000477   200013 470500                    LDP0    JDCB$,,AUTO
         2 000500   400000 236003                    LDQ     -131072,DU
         2 000501   000004 256100                    ORSQ    4,,PR0

      561    10375    3         IF NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$->FT$DDT.RINGIN THEN DO;

  10375  2 000502   200013 470500                    LDP0    JDCB$,,AUTO
         2 000503   000051 720100                    LXL0    41,,PR0
         2 000504   100000 473510                    LDP3    0,X0,PR1
         2 000505   300004 475500                    LDP5    4,,PR3
         2 000506   500006 236100                    LDQ     6,,PR5
         2 000507   040000 316007                    CANQ    16384,DL
         2 000510   000516 600000 2                  TZE     s:10379

      562    10376    3            F$DCB.FFLG.WNEW = %YES#;

  10376  2 000511   100000 236003                    LDQ     32768,DU
         2 000512   000004 256100                    ORSQ    4,,PR0

      563    10377    3            F$DCB.FFLG.UPD = %YES#;

  10377  2 000513   200013 470500                    LDP0    JDCB$,,AUTO
         2 000514   040000 236003                    LDQ     16384,DU
         2 000515   000004 256100                    ORSQ    4,,PR0

      564    10378    3            END;

      565    10379    2         F$DCB.ORG = %UNDEF#;

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:78   
  10379  2 000516   200013 470500                    LDP0    JDCB$,,AUTO
         2 000517   021000 236003                    LDQ     8704,DU
         2 000520   000032 552140                    STBQ    26,'40'O,PR0

      566    10380    2         F$DCB.TAPTYP.USRBUF = %YES#;

  10380  2 000521   000100 236003                    LDQ     64,DU
         2 000522   000067 256100                    ORSQ    55,,PR0

      567    10381    2         F$DCB.TAPTYP.RWASC = %YES#;

  10381  2 000523   000400 236003                    LDQ     256,DU
         2 000524   000067 256100                    ORSQ    55,,PR0

      568    10382    2         F$DCB.TAPTYP.CP6F = %NO#;

  10382  2 000525   000012 236000 3                  LDQ     10
         2 000526   000067 356100                    ANSQ    55,,PR0

      569    10383    2         F$DCB.TYPE = '  ';

  10383  2 000527   000050 220000 1                  LDX0    E_WRITEPROT+2
         2 000530   000025 440100                    SXL0    21,,PR0

      570    10384    2         F$DCB.IORG = %UNDEF#;

  10384  2 000531   000070 236100                    LDQ     56,,PR0
         2 000532   000013 376000 3                  ANQ     11
         2 000533   021000 276003                    ORQ     8704,DU
         2 000534   000070 756100                    STQ     56,,PR0

      571    10385    2         RETURN;

  10385  2 000535   200040 221300                    LDX1  ! MAXBLKL+1,,AUTO
         2 000536   000001 702211                    TSX2  ! 1,X1

      572    10386    2   END FPO_OPNDEV;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:79   
      573    10387        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:80   
      574    10388        /*********************************************************************/
      575    10389    1   FPO_OPNCREATE: PROC ALTRET;

  10389  2 000537   200040 741300       FPO_OPNCREA* STX1  ! MAXBLKL+1,,AUTO

      576    10390        /*F*    NAME: FPO_OPNCREATE
      577    10391                PURPOSE: Open OD file for create.
      578    10392         ***/
      579    10393
      580    10394    2         CALL FMN$CHKFLACN(JDCB$) ALTRET(JUSTALT); /* Check file name and account   */

  10394  2 000540   200013 630500                    EPPR0   JDCB$,,AUTO
         2 000541   200046 450500                    STP0    SAVVOL+2,,AUTO
         2 000542   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 000543   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000544   000000 701000 xent               TSX1    FMN$CHKFLACN
         2 000545   001217 702000 2                  TSX2    JUSTALT

      581    10395    2         CALL FPO_CHK_BLKL_RECL ALTRET(JUSTALT);

  10395  2 000546   003146 701000 2                  TSX1    FPO_CHK_BLKL_RECL
         2 000547   001217 702000 2                  TSX2    JUSTALT

      582    10396    2         CALL FPO_SETTAPTYP;               /* Determine type                */

  10396  2 000550   002776 701000 2                  TSX1    FPO_SETTAPTYP
         2 000551   000000 011000                    NOP     0

      583    10397    3         IF F$DCB.TAPTYP.CP6F THEN DO;

  10397  2 000552   200013 470500                    LDP0    JDCB$,,AUTO
         2 000553   000067 236100                    LDQ     55,,PR0
         2 000554   000200 316003                    CANQ    128,DU
         2 000555   000562 600000 2                  TZE     s:10401

      584    10398    3            F$DCB.EBCDIC = %NO#;

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:81   
  10398  2 000556   000004 236000 3                  LDQ     4
         2 000557   000031 356100                    ANSQ    25,,PR0

      585    10399    3            F$DCB.CNVRT = %NO#;

  10399  2 000560   000014 236000 3                  LDQ     12
         2 000561   000031 356100                    ANSQ    25,,PR0

      586    10400    3            END;

      587    10401    2         F$DCB.SEZ_OK = %NO#;         /* No scratch allowed    */

  10401  2 000562   000010 236000 3                  LDQ     8
         2 000563   000064 356100                    ANSQ    52,,PR0

      588    10402    2         F$DCB.NOEOF = %YES#;      /* output file                 */

  10402  2 000564   400000 236007                    LDQ     -131072,DL
         2 000565   000064 256100                    ORSQ    52,,PR0

      589    10403    2         CALL FTO$SNLIST(PN$);        /* Make serial number list.           */

  10403  2 000566   200003 630500                    EPPR0   @PN$,,AUTO
         2 000567   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000570   000000 701000 xent               TSX1    FTO$SNLIST
         2 000571   000000 011000                    NOP     0

      590    10404    2         IF B$JIT.ERR ~= '0'B THEN

  10404  2 000572   000000 470400 xsym               LDP0    B$JIT$
         2 000573   000012 235100                    LDA     10,,PR0
         2 000574   001217 601000 2                  TNZ     JUSTALT

      591    10405    2            GOTO JUSTALT;
      592    10406    2         F$DCB.MAXVOL = 0;

  10406  2 000575   200013 471500                    LDP1    JDCB$,,AUTO
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:82   
         2 000576   000000 236003                    LDQ     0,DU
         2 000577   100043 552120                    STBQ    35,'20'O,PR1

      593    10407    3         IF F$DCB.PSN = ' ' THEN DO;       /* No scratches allowed               */

  10407  2 000600   040000 106500                    CMPC    fill='040'O
         2 000601   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
         2 000602   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000603   000607 601000 2                  TNZ     s:10411

      594    10408    3            B$JIT.ERR = E_NOSN;            /*E* ERROR: FPO-E$NOSN */

  10408  2 000604   000034 236000 1                  LDQ     E_NOSN
         2 000605   000012 756100                    STQ     10,,PR0

      595    10409    3            GOTO JUSTALT;

  10409  2 000606   001217 710000 2                  TRA     JUSTALT

      596    10410    3            END;
      597    10411    2         CALL FRA$OPR ALTRET(RELCFUS);     /* Get the cartridge mounted         */

  10411  2 000607   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000610   000000 701000 xent               TSX1    FRA$OPR
         2 000611   001214 702000 2                  TSX2    RELCFUS

      598    10412    3         DO CASE(F$DCB.ORG);

  10412  2 000612   200013 470500                    LDP0    JDCB$,,AUTO
         2 000613   000032 236100                    LDQ     26,,PR0
         2 000614   000033 772000                    QRL     27
         2 000615   000004 136007                    SBLQ    4,DL
         2 000616   000006 116007                    CMPQ    6,DL
         2 000617   000621 602006 2                  TNC     s:10412+7,QL
         2 000620   000641 710000 2                  TRA     s:10416
         2 000621   000627 710000 2                  TRA     s:10414
         2 000622   000641 710000 2                  TRA     s:10416
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:83   
         2 000623   000641 710000 2                  TRA     s:10416
         2 000624   000641 710000 2                  TRA     s:10416
         2 000625   000641 710000 2                  TRA     s:10416
         2 000626   000627 710000 2                  TRA     s:10414

      599    10413    3          CASE(%UR#,%SYMB#);

      600    10414    3            F$DCB.ATTR=F$DCB.ATTR|F$DCB.FORM$->CODE16.ATTR;

  10414  2 000627   000050 471500                    LDP1    40,,PR0
         2 000630   100003 236100                    LDQ     3,,PR1
         2 000631   000022 736000                    QLS     18
         2 000632   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 000633   000040 236100                    LDQ     32,,PR0
         2 000634   000022 736000                    QLS     18
         2 000635   200046 276100                    ORQ     SAVVOL+2,,AUTO
         2 000636   000022 772000                    QRL     18
         2 000637   000000 620006                    EAX0    0,QL
         2 000640   000040 440100                    SXL0    32,,PR0

      601    10415    3          END;

      602    10416    2         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;

  10416  2 000641   000051 720100                    LXL0    41,,PR0
         2 000642   000000 471400 xsym               LDP1    N$DCT$$
         2 000643   100000 473510                    LDP3    0,X0,PR1
         2 000644   300004 236100                    LDQ     4,,PR3
         2 000645   200007 756100                    STQ     DDDT$,,AUTO

      603    10417    3         IF DDDT$->FT$DDT.POSLOST THEN DO;

  10417  2 000646   200007 474500                    LDP4    DDDT$,,AUTO
         2 000647   400006 236100                    LDQ     6,,PR4
         2 000650   004000 316007                    CANQ    2048,DL
         2 000651   000656 600000 2                  TZE     s:10421

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:84   
      604    10418    3            B$JIT.ERR = E_IOERR;

  10418  2 000652   000024 236000 1                  LDQ     E_IOERR
         2 000653   000000 475400 xsym               LDP5    B$JIT$
         2 000654   500012 756100                    STQ     10,,PR5

      605    10419    3            GOTO CLSTAP;

  10419  2 000655   001203 710000 2                  TRA     CLSTAP

      606    10420    3            END;
      607    10421    2         FT$DDT.SN = F$DCB.PSN;

  10421  2 000656   040100 100500                    MLR     fill='040'O
         2 000657   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         2 000660   400002 000006                    ADSC9   2,,PR4                   cn=0,n=6

      608    10422    2         I = F$DCB.VOL;

  10422  2 000661   200013 470500                    LDP0    JDCB$,,AUTO
         2 000662   000043 236100                    LDQ     35,,PR0
         2 000663   000033 772000                    QRL     27
         2 000664   200011 756100                    STQ     I,,AUTO

      609    10423    2         CALL FTR$SETSN(I,ADDR(F$DCB.PSN)) ALTRET(NEVER1);

  10423  2 000665   200013 236100                    LDQ     JDCB$,,AUTO
         2 000666   000024 036003                    ADLQ    20,DU
         2 000667   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 000670   200046 633500                    EPPR3   SAVVOL+2,,AUTO
         2 000671   200051 453500                    STP3    SAVVOL+5,,AUTO
         2 000672   200011 635500                    EPPR5   I,,AUTO
         2 000673   200050 455500                    STP5    SAVVOL+4,,AUTO
         2 000674   200050 630500                    EPPR0   SAVVOL+4,,AUTO
         2 000675   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000676   000000 701000 xent               TSX1    FTR$SETSN
         2 000677   000700 702000 2                  TSX2    NEVER1
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:85   

  10422  2 000700                       NEVER1       null
      610    10424    2   NEVER1: ;
      611    10425           /* Position to end of volume set     */
      612    10426    2         IF NOT FT$DDT.SCRTCH THEN

  10426  2 000700   200007 470500                    LDP0    DDDT$,,AUTO
         2 000701   000006 236100                    LDQ     6,,PR0
         2 000702   200000 316007                    CANQ    65536,DL
         2 000703   000741 601000 2                  TNZ     s:10437

      613    10427    3         DO WHILE('1'B);

      614    10428    3            DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;

  10428  2 000704   200013 470500                    LDP0    JDCB$,,AUTO
         2 000705   000051 720100                    LXL0    41,,PR0
         2 000706   000000 471400 xsym               LDP1    N$DCT$$
         2 000707   100000 473510                    LDP3    0,X0,PR1
         2 000710   300004 236100                    LDQ     4,,PR3
         2 000711   200007 756100                    STQ     DDDT$,,AUTO

      615    10429                                     /* Get EOV data from currently mounted volume. */
      616    10430    3            CALL FPO$PEOV(+1) ALTRET(JUSTALT);

  10430  2 000712   000015 630400 3                  EPPR0   13
         2 000713   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000714   000000 701000 xent               TSX1    FPO$PEOV
         2 000715   001217 702000 2                  TSX2    JUSTALT

      617    10431    3            IF FT$DDT.POS ~= FTP_EOV# THEN

  10431  2 000716   200007 470500                    LDP0    DDDT$,,AUTO
         2 000717   000006 236100                    LDQ     6,,PR0
         2 000720   000160 376007                    ANQ     112,DL
         2 000721   000100 116007                    CMPQ    64,DL
         2 000722   000741 601000 2                  TNZ     s:10437
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:86   

      618    10432    3               EXIT;               /* At end of volume set   */
      619    10433    3            FT$DDT.DENSITY = 0;

  10433  2 000723   000016 236000 3                  LDQ     14
         2 000724   000006 356100                    ANSQ    6,,PR0

      620    10434                                               /*  Switch to next volume of set.    */
      621    10435    3            CALL FTR$CHNGVOLNR (F$DCB.VOL + 1) ALTRET(JUSTALT);

  10435  2 000725   200013 471500                    LDP1    JDCB$,,AUTO
         2 000726   100043 236100                    LDQ     35,,PR1
         2 000727   000033 772000                    QRL     27
         2 000730   000001 036007                    ADLQ    1,DL
         2 000731   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 000732   200046 633500                    EPPR3   SAVVOL+2,,AUTO
         2 000733   200047 453500                    STP3    SAVVOL+3,,AUTO
         2 000734   200047 630500                    EPPR0   SAVVOL+3,,AUTO
         2 000735   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000736   000000 701000 xent               TSX1    FTR$CHNGVOLNR
         2 000737   001217 702000 2                  TSX2    JUSTALT

      622    10436    3            END;

  10436  2 000740   000704 710000 2                  TRA     s:10428

      623    10437    3         IF NOT FT$DDT.RINGIN THEN DO;

  10437  2 000741   000006 236100                    LDQ     6,,PR0
         2 000742   040000 316007                    CANQ    16384,DL
         2 000743   000750 601000 2                  TNZ     s:10441

      624    10438    3            B$JIT.ERR = E_WRITEPROT;      /* Platter is write protected.         */

  10438  2 000744   000046 236000 1                  LDQ     E_WRITEPROT
         2 000745   000000 471400 xsym               LDP1    B$JIT$
         2 000746   100012 756100                    STQ     10,,PR1
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:87   

      625    10439    3            GOTO CLSTAP;

  10439  2 000747   001203 710000 2                  TRA     CLSTAP

      626    10440    3            END;
      627    10441    2         IF FT$DDT.POS = FTP_BOV# AND F$DCB.VOL = 1 THEN

  10441  2 000750   000006 236100                    LDQ     6,,PR0
         2 000751   000160 376007                    ANQ     112,DL
         2 000752   000020 116007                    CMPQ    16,DL
         2 000753   000764 601000 2                  TNZ     s:10444
         2 000754   200013 471500                    LDP1    JDCB$,,AUTO
         2 000755   100043 236100                    LDQ     35,,PR1
         2 000756   777000 376003                    ANQ     -512,DU
         2 000757   001000 116003                    CMPQ    512,DU
         2 000760   000764 601000 2                  TNZ     s:10444

      628    10442    2            F$DCB.FSN = 1;                 /* At beginning of set               */

  10442  2 000761   000001 220003                    LDX0    1,DU
         2 000762   100034 740100                    STX0    28,,PR1
         2 000763   000777 710000 2                  TRA     s:10450

      629    10443    3         ELSE DO;

      630    10444    3            F$DCB.FSN = FT$DDT.FSN + 1;    /* Next file in sequence              */

  10444  2 000764   000005 220100                    LDX0    5,,PR0
         2 000765   000001 621010                    EAX1    1,X0
         2 000766   200013 471500                    LDP1    JDCB$,,AUTO
         2 000767   100034 741100                    STX1    28,,PR1

      631    10445    4            IF FT$DDT.FSN = 262143 THEN DO; /* Don't let FSNs wrap.              */

  10445  2 000770   000005 220100                    LDX0    5,,PR0
         2 000771   777777 100003                    CMPX0   -1,DU
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:88   
         2 000772   000777 601000 2                  TNZ     s:10450

      632    10446    4               B$JIT.ERR = E_BADFSN;

  10446  2 000773   000015 236000 1                  LDQ     E_BADFSN
         2 000774   000000 473400 xsym               LDP3    B$JIT$
         2 000775   300012 756100                    STQ     10,,PR3

      633    10447    4               GOTO CLSTAP;

  10447  2 000776   001203 710000 2                  TRA     CLSTAP

      634    10448    4               END;
      635    10449    3            END;
      636    10450    2         F$DCB.FSECT = 1;    /* First file section. */

  10450  2 000777   000001 220003                    LDX0    1,DU
         2 001000   100077 740100                    STX0    63,,PR1

      637    10451    2         FT$DDT.WRITE = %YES#;       /* set write ok for DPT tests */

  10451  2 001001   020000 236007                    LDQ     8192,DL
         2 001002   000006 256100                    ORSQ    6,,PR0

      638    10452    2         CALL FPO_DPT ALTRET(CLSTAP);      /* Do access checking     */

  10452  2 001003   003377 701000 2                  TSX1    FPO_DPT
         2 001004   001203 702000 2                  TSX2    CLSTAP

      639    10453    2         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;

  10453  2 001005   200013 470500                    LDP0    JDCB$,,AUTO
         2 001006   000051 720100                    LXL0    41,,PR0
         2 001007   000000 471400 xsym               LDP1    N$DCT$$
         2 001010   100000 473510                    LDP3    0,X0,PR1
         2 001011   300004 236100                    LDQ     4,,PR3
         2 001012   200007 756100                    STQ     DDDT$,,AUTO
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:89   

      640    10454    2         IF F$DCB.TAPTYP.CP6F THEN

  10454  2 001013   000067 236100                    LDQ     55,,PR0
         2 001014   000200 316003                    CANQ    128,DU
         2 001015   001022 600000 2                  TZE     s:10457

      641    10455    2            CALL FMO$BLDFIT(PN$) ALTRET(CLSTAP); /* Build the FIT */

  10455  2 001016   200003 630500                    EPPR0   @PN$,,AUTO
         2 001017   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001020   000000 701000 xent               TSX1    FMO$BLDFIT
         2 001021   001203 702000 2                  TSX2    CLSTAP

      642    10456              /*    Write HDR1 and HDR2                               */
      643    10457    2         IF F$DCB.ORG = %RESTRICT# AND NO_IFPARAM_RESTRICT THEN

  10457  2 001022   200013 470500                    LDP0    JDCB$,,AUTO
         2 001023   000032 236100                    LDQ     26,,PR0
         2 001024   777000 376003                    ANQ     -512,DU
         2 001025   022000 116003                    CMPQ    9216,DU
         2 001026   001036 601000 2                  TNZ     s:10460
         2 001027   200024 234100                    SZN     NO_IFPARAM_RESTRICT,,AUTO
         2 001030   001036 605000 2                  TPL     s:10460

      644    10458    2            CALL FTL$LBLS( 'HDR' ) ALTRET( CLSTAP );

  10458  2 001031   000017 630400 3                  EPPR0   15
         2 001032   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001033   000000 701000 xent               TSX1    FTL$LBLS
         2 001034   001203 702000 2                  TSX2    CLSTAP
         2 001035   001050 710000 2                  TRA     s:10461

      645    10459    2         ELSE
      646    10460    2            CALL FTL$LBLS( 'HDR', ADDR(NIL) ) ALTRET( CLSTAP );

  10460  2 001036   000001 236000 xsym               LDQ     B_VECTNIL+1
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:90   
         2 001037   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 001040   200046 631500                    EPPR1   SAVVOL+2,,AUTO
         2 001041   200051 451500                    STP1    SAVVOL+5,,AUTO
         2 001042   000017 236000 3                  LDQ     15
         2 001043   200050 756100                    STQ     SAVVOL+4,,AUTO
         2 001044   200050 630500                    EPPR0   SAVVOL+4,,AUTO
         2 001045   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001046   000000 701000 xent               TSX1    FTL$LBLS
         2 001047   001203 702000 2                  TSX2    CLSTAP

      647    10461    2         FT$DDT.SCRTCH = %NO#;

  10461  2 001050   200007 470500                    LDP0    DDDT$,,AUTO
         2 001051   000014 236000 3                  LDQ     12
         2 001052   000006 356100                    ANSQ    6,,PR0

      648    10462              /*    Determine protection                              */
      649    10463    3         IF F$DCB.TAPTYP.CP6F THEN DO;

  10463  2 001053   200013 471500                    LDP1    JDCB$,,AUTO
         2 001054   100067 236100                    LDQ     55,,PR1
         2 001055   000200 316003                    CANQ    128,DU
         2 001056   001140 600000 2                  TZE     s:10477

      650    10464    3            TEMP$ = FM$BUF$(F$DCB.BFR.BUFX(1)); /* Get pointer        */

  10464  2 001057   100116 236100                    LDQ     78,,PR1
         2 001060   000033 772000                    QRL     27
         2 001061   000037 376007                    ANQ     31,DL
         2 001062   000000 236006 xsym               LDQ     FM$BUF$,QL
         2 001063   200036 756100                    STQ     TEMP$,,AUTO

      651    10465    3            TEMP$->FT$HDR.L1 = 16 * F$DCB.BFR1.SIZ(1); /* 4096 * #pages / 256       */

  10465  2 001064   100123 236100                    LDQ     83,,PR1
         2 001065   000016 772000                    QRL     14
         2 001066   017760 376007                    ANQ     8176,DL
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:91   
         2 001067   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 001070   200036 473500                    LDP3    TEMP$,,AUTO
         2 001071   000100 101500                    MRL     fill='000'O
         2 001072   200046 000004                    ADSC9   SAVVOL+2,,AUTO           cn=0,n=4
         2 001073   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

      652    10466    3            TEMP$->FT$HDR.L2 = 0;          /* 4096 - (4096 / 256) * 256          */

  10466  2 001074   200036 471500                    LDP1    TEMP$,,AUTO
         2 001075   000100 101400                    MRL     fill='000'O
         2 001076   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         2 001077   100000 200001                    ADSC9   0,,PR1                   cn=1,n=1

      653    10467    3            TEMP$->FT$HDR.S1 = 0;

  10467  2 001100   200036 471500                    LDP1    TEMP$,,AUTO
         2 001101   000100 101400                    MRL     fill='000'O
         2 001102   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         2 001103   100000 400001                    ADSC9   0,,PR1                   cn=2,n=1

      654    10468    3            TEMP$->FT$HDR.S2 = 128;        /* Set FPARAM bit                     */

  10468  2 001104   200036 471500                    LDP1    TEMP$,,AUTO
         2 001105   000100 101400                    MRL     fill='000'O
         2 001106   000020 000004 3                  ADSC9   16                       cn=0,n=4
         2 001107   100000 600001                    ADSC9   0,,PR1                   cn=3,n=1

      655    10469    3            F$DCB.ARS = 4096 * F$DCB.BFR1.SIZ(1);

  10469  2 001110   200013 471500                    LDP1    JDCB$,,AUTO
         2 001111   100123 236100                    LDQ     83,,PR1
         2 001112   000006 772000                    QRL     6
         2 001113   000021 376000 3                  ANQ     17
         2 001114   100000 756100                    STQ     0,,PR1

      656    10470                 /* Write entire FIT as first block in the file           */
      657    10471    3            CALL FPO$WRODBLK (TEMP$) ALTRET(CLSTAP);
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:92   

  10471  2 001115   200036 631500                    EPPR1   TEMP$,,AUTO
         2 001116   200046 451500                    STP1    SAVVOL+2,,AUTO
         2 001117   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 001120   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001121   000000 701000 xent               TSX1    FPO$WRODBLK
         2 001122   001203 702000 2                  TSX2    CLSTAP

      658    10472    3            F$DCB.OWNER = %YES#;           /* Only protect by account            */

  10472  2 001123   200013 470500                    LDP0    JDCB$,,AUTO
         2 001124   040000 236007                    LDQ     16384,DL
         2 001125   000064 256100                    ORSQ    52,,PR0

      659    10473                                                /* Pass V area and FIT TO SET FFLG    */
      660    10474    3            CALL FMO$SECCHK( PN$.V_->FPT$OPEN_V, TEMP$->FPT$OPEN_V );

  10474  2 001126   200003 471500                    LDP1    @PN$,,AUTO
         2 001127   100000 473500                    LDP3    0,,PR1
         2 001130   200036 236100                    LDQ     TEMP$,,AUTO
         2 001131   200047 756100                    STQ     SAVVOL+3,,AUTO
         2 001132   200046 453500                    STP3    SAVVOL+2,,AUTO
         2 001133   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 001134   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001135   000000 701000 xent               TSX1    FMO$SECCHK
         2 001136   000000 011000                    NOP     0

      661    10475    3            END;

  10475  2 001137   001153 710000 2                  TRA     s:10482

      662    10476    3         ELSE DO;

      663    10477    3            F$DCB.FFLG = '0'B;

  10477  2 001140   000000 220003                    LDX0    0,DU
         2 001141   100004 740100                    STX0    4,,PR1
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:93   

      664    10478    3            F$DCB.FFLG.READ = %YES#;

  10478  2 001142   200013 471500                    LDP1    JDCB$,,AUTO
         2 001143   400000 236003                    LDQ     -131072,DU
         2 001144   100004 256100                    ORSQ    4,,PR1

      665    10479    3            F$DCB.FFLG.WNEW = %YES#;

  10479  2 001145   200013 471500                    LDP1    JDCB$,,AUTO
         2 001146   100000 236003                    LDQ     32768,DU
         2 001147   100004 256100                    ORSQ    4,,PR1

      666    10480    3            F$DCB.FFLG.UPD = %YES#;

  10480  2 001150   200013 471500                    LDP1    JDCB$,,AUTO
         2 001151   040000 236003                    LDQ     16384,DU
         2 001152   100004 256100                    ORSQ    4,,PR1

      667    10481    3            END;

      668    10482    2         F$DCB.EOP = WRITEEOP#;            /* Always for create   */

  10482  2 001153   200013 470500                    LDP0    JDCB$,,AUTO
         2 001154   003000 236003                    LDQ     1536,DU
         2 001155   000064 256100                    ORSQ    52,,PR0

      669    10483    2         F$DCB.FMOD = %YES#;

  10483  2 001156   040000 236003                    LDQ     16384,DU
         2 001157   000064 256100                    ORSQ    52,,PR0

      670    10484    2         F$DCB.LSTBLK = %YES#;

  10484  2 001160   000001 236007                    LDQ     1,DL
         2 001161   000064 256100                    ORSQ    52,,PR0

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:94   
      671    10485              /*    A volume change is needed if end was hit        */
      672    10486    2         IF F$DCB.TYC.EOF(1) THEN

  10486  2 001162   000002 236100                    LDQ     2,,PR0
         2 001163   004000 316003                    CANQ    2048,DU
         2 001164   001201 600000 2                  TZE     s:10488

      673    10487    2            CALL FTL$CVOL(TEMP$,ADDR(NIL),0) ALTRET(CLSTAPERR);

  10487  2 001165   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001166   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 001167   000022 236000 3                  LDQ     18
         2 001170   200051 756100                    STQ     SAVVOL+5,,AUTO
         2 001171   200046 631500                    EPPR1   SAVVOL+2,,AUTO
         2 001172   200050 451500                    STP1    SAVVOL+4,,AUTO
         2 001173   200036 633500                    EPPR3   TEMP$,,AUTO
         2 001174   200047 453500                    STP3    SAVVOL+3,,AUTO
         2 001175   200047 630500                    EPPR0   SAVVOL+3,,AUTO
         2 001176   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001177   000000 701000 xent               TSX1    FTL$CVOL
         2 001200   001203 702000 2                  TSX2    CLSTAP

      674    10488    2         RETURN;

  10488  2 001201   200040 221300                    LDX1  ! MAXBLKL+1,,AUTO
         2 001202   000001 702211                    TSX2  ! 1,X1

  10486  2 001203                       CLSTAP       null
  10486  2 001203                       CLSTAPERR    null
      675    10489
      676    10490    2   CLSTAP: ;
      677    10491    2   CLSTAPERR: ;
      678    10492    2         ERRSAV = B$JIT.ERR;

  10492  2 001203   000000 470400 xsym               LDP0    B$JIT$
         2 001204   000012 236100                    LDQ     10,,PR0
         2 001205   200010 756100                    STQ     ERRSAV,,AUTO
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:95   

      679    10493    2         CALL FRB$CLS;

  10493  2 001206   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001207   000000 701000 xent               TSX1    FRB$CLS
         2 001210   000000 011000                    NOP     0

      680    10494    2         B$JIT.ERR = ERRSAV;

  10494  2 001211   200010 236100                    LDQ     ERRSAV,,AUTO
         2 001212   000000 470400 xsym               LDP0    B$JIT$
         2 001213   000012 756100                    STQ     10,,PR0

      681    10495    2   RELCFUS:
      682    10496    2         CALL FTR$RELCFUS;

  10496  2 001214   000002 631400 xsym  RELCFUS      EPPR1   B_VECTNIL+2
         2 001215   000000 701000 xent               TSX1    FTR$RELCFUS
         2 001216   000000 011000                    NOP     0

      683    10497    2   JUSTALT:
      684    10498    2         ALTRETURN;

  10498  2 001217   200040 221300       JUSTALT      LDX1  ! MAXBLKL+1,,AUTO
         2 001220   000000 702211                    TSX2  ! 0,X1

      685    10499
      686    10500    2   END FPO_OPNCREATE;
      687    10501        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:96   
      688    10502        /*********************************************************************/
      689    10503    1   FPO_OPNEXISTING: PROC ALTRET;

  10503  2 001221   200040 741300       FPO_OPNEXIS* STX1  ! MAXBLKL+1,,AUTO

      690    10504        /*F*     NAME: FPO_OPNEXISTING
      691    10505                 PURPOSE: Open existing file on OD.
      692    10506         ***/
      693    10507
      694    10508        /********************/
      695    10509
      696    10510           /*    Get serial number of volume to open.                    */
      697    10511    2         F$DCB.NOEOF = %NO#;          /* Input file                 */

  10511  2 001222   200013 470500                    LDP0    JDCB$,,AUTO
         2 001223   000023 236000 3                  LDQ     19
         2 001224   000064 356100                    ANSQ    52,,PR0

      698    10512    2         CALL FTO$SNLIST (PN$);       /* Make serial number list.   */

  10512  2 001225   200003 630500                    EPPR0   @PN$,,AUTO
         2 001226   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001227   000000 701000 xent               TSX1    FTO$SNLIST
         2 001230   000000 011000                    NOP     0

      699    10513    2         IF B$JIT.ERR ~= '0'B THEN

  10513  2 001231   000000 470400 xsym               LDP0    B$JIT$
         2 001232   000012 235100                    LDA     10,,PR0
         2 001233   001236 600000 2                  TZE     s:10515

      700    10514    2            ALTRETURN;

  10514  2 001234   200040 221300                    LDX1  ! MAXBLKL+1,,AUTO
         2 001235   000000 702211                    TSX2  ! 0,X1

      701    10515    2         F$DCB.MAXVOL = 0;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:97   

  10515  2 001236   200013 471500                    LDP1    JDCB$,,AUTO
         2 001237   000000 236003                    LDQ     0,DU
         2 001240   100043 552120                    STBQ    35,'20'O,PR1

      702    10516    3         IF F$DCB.PSN = ' ' THEN DO;

  10516  2 001241   040000 106500                    CMPC    fill='040'O
         2 001242   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
         2 001243   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001244   001251 601000 2                  TNZ     s:10522

      703    10517    3            B$JIT.ERR = E_NOSN; /*E* ERROR: FPO-E$NOSN */

  10517  2 001245   000034 236000 1                  LDQ     E_NOSN
         2 001246   000012 756100                    STQ     10,,PR0

      704    10518    3            ALTRETURN;

  10518  2 001247   200040 221300                    LDX1  ! MAXBLKL+1,,AUTO
         2 001250   000000 702211                    TSX2  ! 0,X1

      705    10519    3            END;
      706    10520           /*    If file name and sequence number are not specified,
      707    10521                 NXTF must be specified.                                */
      708    10522    3         IF F$DCB.NAME.L <= 0 AND F$DCB.FSN <= 0 THEN DO;

  10522  2 001251   100010 236100                    LDQ     8,,PR1
         2 001252   777000 316003                    CANQ    -512,DU
         2 001253   001302 601000 2                  TNZ     s:10538
         2 001254   100034 220100                    LDX0    28,,PR1
         2 001255   001302 601000 2                  TNZ     s:10538

      709    10523              /* No file name or sequence number specified    */
      710    10524    4            IF PN$.V_ ~= ADDR(NIL) THEN DO;

  10524  2 001256   200003 473500                    LDP3    @PN$,,AUTO
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:98   
         2 001257   300000 236100                    LDQ     0,,PR3
         2 001260   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001261   001276 600000 2                  TZE     s:10533

      711    10525    4               IF (PN$.V_->FPT$OPEN_V.OPER.NXTF AND PN$.V_->FPT$OPEN_V.OPER.THISF)

  10525  2 001262   300000 474500                    LDP4    0,,PR3
         2 001263   400000 236100                    LDQ     0,,PR4
         2 001264   004000 316007                    CANQ    2048,DL
         2 001265   001270 600000 2                  TZE     s:10525+6
         2 001266   002000 316007                    CANQ    1024,DL
         2 001267   001272 601000 2                  TNZ     s:10528
         2 001270   004000 316007                    CANQ    2048,DL
         2 001271   001302 601000 2                  TNZ     s:10538

      712    10526    5                  OR NOT PN$.V_->FPT$OPEN_V.OPER.NXTF THEN DO;

      713    10527                    /* File name should be specified and it isn't   */
      714    10528    5                  B$JIT.ERR = E_NOFIDTHIS; /*E* ERROR: FPO-E$NOFIDTHIS */

  10528  2 001272   000027 236000 1                  LDQ     E_NOFIDTHIS
         2 001273   000012 756100                    STQ     10,,PR0

      715    10529    5                  ALTRETURN;

  10529  2 001274   200040 221300                    LDX1  ! MAXBLKL+1,,AUTO
         2 001275   000000 702211                    TSX2  ! 0,X1

      716    10530    5                  END;
      717    10531    4               END;
      718    10532    4            ELSE DO;                 /* Default open and no file specification  */

      719    10533    4               B$JIT.ERR = E_NOFIDTHIS; /*E* ERROR: FPO-E$NOFIDTHIS */

  10533  2 001276   000027 236000 1                  LDQ     E_NOFIDTHIS
         2 001277   000012 756100                    STQ     10,,PR0

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:99   
      720    10534    4               ALTRETURN;

  10534  2 001300   200040 221300                    LDX1  ! MAXBLKL+1,,AUTO
         2 001301   000000 702211                    TSX2  ! 0,X1

      721    10535    4               END;
      722    10536    3            END;
      723    10537           /*    Set up requested attributes and get volume.                */
      724    10538    2         F$DCB.ATTR = '0'B;

  10538  2 001302   000000 220003                    LDX0    0,DU
         2 001303   100040 440100                    SXL0    32,,PR1

  10538  2 001304                       ATTEMPT_OPE* null
      725    10539    2   ATTEMPT_OPEN_EXISTING: ;
      726    10540    2         CALL FRA$OPR ALTRET(JUSTALT);

  10540  2 001304   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001305   000000 701000 xent               TSX1    FRA$OPR
         2 001306   002305 702000 2                  TSX2    JUSTALT

      727    10541    2         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$; /* Get DDT entry pointer       */

  10541  2 001307   200013 470500                    LDP0    JDCB$,,AUTO
         2 001310   000051 720100                    LXL0    41,,PR0
         2 001311   000000 471400 xsym               LDP1    N$DCT$$
         2 001312   100000 473510                    LDP3    0,X0,PR1
         2 001313   300004 236100                    LDQ     4,,PR3
         2 001314   200007 756100                    STQ     DDDT$,,AUTO

      728    10542    3         IF DDDT$->FT$DDT.POSLOST THEN DO;

  10542  2 001315   200007 474500                    LDP4    DDDT$,,AUTO
         2 001316   400006 236100                    LDQ     6,,PR4
         2 001317   004000 316007                    CANQ    2048,DL
         2 001320   001325 600000 2                  TZE     s:10546

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:100  
      729    10543    3            B$JIT.ERR = E_IOERR;

  10543  2 001321   000024 236000 1                  LDQ     E_IOERR
         2 001322   000000 475400 xsym               LDP5    B$JIT$
         2 001323   500012 756100                    STQ     10,,PR5

      730    10544    3            GOTO CLSTAP;

  10544  2 001324   002274 710000 2                  TRA     CLSTAP

      731    10545    3            END;
      732    10546    2         CALL FTR$SETSN(F$DCB.VOL+0,ADDR(F$DCB.PSN)) ALTRET(NEVER2);

  10546  2 001325   200013 236100                    LDQ     JDCB$,,AUTO
         2 001326   000024 036003                    ADLQ    20,DU
         2 001327   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 001330   200046 633500                    EPPR3   SAVVOL+2,,AUTO
         2 001331   200051 453500                    STP3    SAVVOL+5,,AUTO
         2 001332   200013 236100                    LDQ     JDCB$,,AUTO
         2 001333   000043 036003                    ADLQ    35,DU
         2 001334   200050 756100                    STQ     SAVVOL+4,,AUTO
         2 001335   200050 630500                    EPPR0   SAVVOL+4,,AUTO
         2 001336   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001337   000000 701000 xent               TSX1    FTR$SETSN
         2 001340   001341 702000 2                  TSX2    NEVER2

  10542  2 001341                       NEVER2       null
      733    10547    2   NEVER2: ;
      734    10548    2         CALL FPO_DPT ALTRET(CLSTAP);      /* Do access checking     */

  10548  2 001341   003377 701000 2                  TSX1    FPO_DPT
         2 001342   002274 702000 2                  TSX2    CLSTAP

      735    10549    2         CALL FPO_LBLINIT ALTRET(CLSTAP);  /* Get label buffer        */

  10549  2 001343   003447 701000 2                  TSX1    FPO_LBLINIT
         2 001344   002274 702000 2                  TSX2    CLSTAP
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:101  

      736    10550    2         F$DCB.FSECT = 1;                  /* Open first section of file         */

  10550  2 001345   000001 220003                    LDX0    1,DU
         2 001346   200013 470500                    LDP0    JDCB$,,AUTO
         2 001347   000077 740100                    STX0    63,,PR0

      737    10551    3         IF PN$.V_ = ADDR(NIL) THEN DO;    /* Default open                       */

  10551  2 001350   200003 471500                    LDP1    @PN$,,AUTO
         2 001351   100000 236100                    LDQ     0,,PR1
         2 001352   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001353   001366 601000 2                  TNZ     s:10558

      738    10552    3            IF F$DCB.NAME.L <= 0 THEN

  10552  2 001354   000010 236100                    LDQ     8,,PR0
         2 001355   777000 316003                    CANQ    -512,DU
         2 001356   001363 601000 2                  TNZ     s:10555

      739    10553    3               CALL FPO$FINDSEQ ALTRET(RETFSN); /* Open next                     */

  10553  2 001357   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001360   002307 701000 2                  TSX1    s:10745
         2 001361   002255 702000 2                  TSX2    RETFSN
         2 001362   001443 710000 2                  TRA     s:10586

      740    10554    3            ELSE
      741    10555    3               CALL FPO_FINDFILE ALTRET(RETFSN); /* Open named file              */

  10555  2 001363   002517 701000 2                  TSX1    FPO_FINDFILE
         2 001364   002255 702000 2                  TSX2    RETFSN

      742    10556    3            END;

  10556  2 001365   001443 710000 2                  TRA     s:10586

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:102  
      743    10557    3         ELSE DO;

      744    10558    3            IF (PN$.V_->FPT$OPEN_V.OPER.NXTF AND PN$.V_->FPT$OPEN_V.OPER.THISF)

  10558  2 001366   100000 473500                    LDP3    0,,PR1
         2 001367   300000 236100                    LDQ     0,,PR3
         2 001370   004000 316007                    CANQ    2048,DL
         2 001371   001374 600000 2                  TZE     s:10558+6
         2 001372   002000 316007                    CANQ    1024,DL
         2 001373   001376 601000 2                  TNZ     s:10561
         2 001374   004000 316007                    CANQ    2048,DL
         2 001375   001415 601000 2                  TNZ     s:10570

      745    10559    4               OR NOT PN$.V_->FPT$OPEN_V.OPER.NXTF THEN DO;

      746    10560                 /* Open file specified in DCB                                        */
      747    10561    4               IF F$DCB.NAME.L <= 0 THEN

  10561  2 001376   000010 236100                    LDQ     8,,PR0
         2 001377   777000 316003                    CANQ    -512,DU
         2 001400   001405 601000 2                  TNZ     s:10564

      748    10562    4                  CALL FPO$FINDSEQ ALTRET(RETFSN); /* Find by sequence number       */

  10562  2 001401   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001402   002307 701000 2                  TSX1    s:10745
         2 001403   002255 702000 2                  TSX2    RETFSN
         2 001404   001443 710000 2                  TRA     s:10586

      749    10563    5               ELSE DO;                    /* Find file by name                  */

      750    10564    5                  IF F$DCB.FSN > 0 THEN    /* First position to FSN if specified */

  10564  2 001405   000034 221100                    LDX1    28,,PR0
         2 001406   001412 600000 2                  TZE     s:10566

      751    10565    5                     CALL FPO$FINDSEQ ALTRET(RETFSN);
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:103  

  10565  2 001407   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001410   002307 701000 2                  TSX1    s:10745
         2 001411   002255 702000 2                  TSX2    RETFSN

      752    10566    5                  CALL FPO_FINDFILE ALTRET(RETFSN);

  10566  2 001412   002517 701000 2                  TSX1    FPO_FINDFILE
         2 001413   002255 702000 2                  TSX2    RETFSN

      753    10567    5                  END;

      754    10568    4               END;

  10568  2 001414   001443 710000 2                  TRA     s:10586

      755    10569    4            ELSE DO;                      /* NXTF, not THISF                    */

      756    10570    5               IF PN$.V_->FPT$OPEN_V.SRCHCOND.REV THEN DO;

  10570  2 001415   300001 236100                    LDQ     1,,PR3
         2 001416   000001 316003                    CANQ    1,DU
         2 001417   001434 600000 2                  TZE     s:10580

      757    10571                    /* Reverse NXTF                       */
      758    10572    6                  IF FT$DDT.FSN = 0 THEN DO; /* Beginning of set               */

  10572  2 001420   200007 474500                    LDP4    DDDT$,,AUTO
         2 001421   400005 221100                    LDX1    5,,PR4
         2 001422   001427 601000 2                  TNZ     s:10576

      759    10573    6                     B$JIT.ERR = E_EOSET; /*E* ERROR: FPO-E$EOSET */

  10573  2 001423   000020 236000 1                  LDQ     E_EOSET
         2 001424   000000 475400 xsym               LDP5    B$JIT$
         2 001425   500012 756100                    STQ     10,,PR5

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:104  
      760    10574    6                     GOTO CLSTAP;

  10574  2 001426   002274 710000 2                  TRA     CLSTAP

      761    10575    6                     END;
      762    10576    5                  F$DCB.FSN = FT$DDT.FSN;

  10576  2 001427   000034 741100                    STX1    28,,PR0

      763    10577    5                  CALL FPO$FINDSEQ ALTRET(RETFSN);

  10577  2 001430   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001431   002307 701000 2                  TSX1    s:10745
         2 001432   002255 702000 2                  TSX2    RETFSN

      764    10578    5                  END;

  10578  2 001433   001443 710000 2                  TRA     s:10586

      765    10579    5               ELSE DO;                   /* Open next file                     */

      766    10580    5                  F$DCB.FSN = FT$DDT.FSN + 2;

  10580  2 001434   200007 474500                    LDP4    DDDT$,,AUTO
         2 001435   400005 221100                    LDX1    5,,PR4
         2 001436   000002 622011                    EAX2    2,X1
         2 001437   000034 742100                    STX2    28,,PR0

      767    10581    5                  CALL FPO$FINDSEQ ALTRET(RETFSN); /* Find specific next file */

  10581  2 001440   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001441   002307 701000 2                  TSX1    s:10745
         2 001442   002255 702000 2                  TSX2    RETFSN

      768    10582    5                  END;

      769    10583    4               END;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:105  

      770    10584    3            END;

      771    10585           /*    Specified file has been found. Merge information into the DCB.   */
      772    10586    2         CALL FPO$OPENIN ALTRET(CLSTAP); /* Tell controller to open file. */

  10586  2 001443   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001444   000000 701000 xent               TSX1    FPO$OPENIN
         2 001445   002274 702000 2                  TSX2    CLSTAP

      773    10587    2         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$; /* Get DDT pointer             */

  10587  2 001446   200013 470500                    LDP0    JDCB$,,AUTO
         2 001447   000051 720100                    LXL0    41,,PR0
         2 001450   000000 471400 xsym               LDP1    N$DCT$$
         2 001451   100000 473510                    LDP3    0,X0,PR1
         2 001452   300004 236100                    LDQ     4,,PR3
         2 001453   200007 756100                    STQ     DDDT$,,AUTO

      774    10588    2         AFPOOL$ = FM$BUF$(F$DCB.BFR.BUFX(F$DCB.LPOOL-1)); /* Get label buffer ptr  */

  10588  2 001454   000067 236100                    LDQ     55,,PR0
         2 001455   000036 772000                    QRL     30
         2 001456   000007 376007                    ANQ     7,DL
         2 001457   000114 236106                    LDQ     76,QL,PR0
         2 001460   000033 772000                    QRL     27
         2 001461   000037 376007                    ANQ     31,DL
         2 001462   000000 236006 xsym               LDQ     FM$BUF$,QL
         2 001463   200004 756100                    STQ     AFPOOL$,,AUTO

      775    10589    2         CALL CHARBIN( I, AFPOOL$->FT$LBL1.FSECT ); /* Set file section #           */

  10589  2 001464   200004 473500                    LDP3    AFPOOL$,,AUTO
         2 001465   000100 305500                    DTB
         2 001466   300006 630004                    NDSC9   6,,PR3                   cn=3,s=nosgn,sf=0,n=4
         2 001467   200011 000004                    NDSC9   I,,AUTO                  cn=0,s=lsgnf,sf=0,n=4

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:106  
      776    10590    2         F$DCB.FSECT = I;

  10590  2 001470   200011 721100                    LXL1    I,,AUTO
         2 001471   000077 741100                    STX1    63,,PR0

      777    10591    2         CALL CHARBIN( I, AFPOOL$->FT$LBL1.ODFSEQU_NUM );

  10591  2 001472   000100 305500                    DTB
         2 001473   300022 230006                    NDSC9   18,,PR3                  cn=1,s=nosgn,sf=0,n=6
         2 001474   200011 000004                    NDSC9   I,,AUTO                  cn=0,s=lsgnf,sf=0,n=4

      778    10592    2         FILE_SEQ = I;

  10592  2 001475   200011 235100                    LDA     I,,AUTO
         2 001476   200035 755100                    STA     FILE_SEQ,,AUTO

      779    10593    2         FT$DDT.FSN = I - 1;               /* Set correct DDT info               */

  10593  2 001477   777777 622005                    EAX2    -1,AL
         2 001500   200007 474500                    LDP4    DDDT$,,AUTO
         2 001501   400005 742100                    STX2    5,,PR4

      780    10594    2         FILE_NAME = AFPOOL$->FT$LBL1.FILE_ID; /* Set file id                       */

  10594  2 001502   040100 100500                    MLR     fill='040'O
         2 001503   300001 000021                    ADSC9   1,,PR3                   cn=0,n=17
         2 001504   200025 000037                    ADSC9   FILE_NAME,,AUTO          cn=0,n=31

      781    10595           /*    Merge HDR2 information into the DCB.                */
      782    10596    2         TEMP$ = PINCRC( AFPOOL$, 80 );    /* Point to HDR2                      */

  10596  2 001505   000024 036003                    ADLQ    20,DU
         2 001506   200036 756100                    STQ     TEMP$,,AUTO

      783    10597    2         F$DCB.SPANNED = %NO#;             /* Assume not spanned                 */

  10597  2 001507   200013 470500                    LDP0    JDCB$,,AUTO
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:107  
         2 001510   000024 236000 3                  LDQ     20
         2 001511   000031 356100                    ANSQ    25,,PR0

      784    10598    2         CALL CHARBIN( I, TEMP$->FT$LBL2.BLKL ); /* HDR2 exists                 */

  10598  2 001512   200036 475500                    LDP5    TEMP$,,AUTO
         2 001513   000100 305500                    DTB
         2 001514   500001 230005                    NDSC9   1,,PR5                   cn=1,s=nosgn,sf=0,n=5
         2 001515   200011 000004                    NDSC9   I,,AUTO                  cn=0,s=lsgnf,sf=0,n=4

      785    10599    2         F$DCB.BLKL = I;

  10599  2 001516   200011 720100                    LXL0    I,,AUTO
         2 001517   000033 740100                    STX0    27,,PR0

      786    10600    2         CALL CHARBIN( I, TEMP$->FT$LBL2.RECL );

  10600  2 001520   200036 475500                    LDP5    TEMP$,,AUTO
         2 001521   000100 305500                    DTB
         2 001522   500002 430005                    NDSC9   2,,PR5                   cn=2,s=nosgn,sf=0,n=5
         2 001523   200011 000004                    NDSC9   I,,AUTO                  cn=0,s=lsgnf,sf=0,n=4

      787    10601    2         F$DCB.RECL = I;

  10601  2 001524   200011 721100                    LXL1    I,,AUTO
         2 001525   000033 441100                    SXL1    27,,PR0

      788    10602    2         CALL CHARBIN( I, TEMP$->FT$LBL2.BUF_OFFSET );

  10602  2 001526   200036 475500                    LDP5    TEMP$,,AUTO
         2 001527   000100 305500                    DTB
         2 001530   500014 430002                    NDSC9   12,,PR5                  cn=2,s=nosgn,sf=0,n=2
         2 001531   200011 000004                    NDSC9   I,,AUTO                  cn=0,s=lsgnf,sf=0,n=4

      789    10603    2         F$DCB.BOL = I;

  10603  2 001532   200011 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:108  
         2 001533   000034 552104                    STBQ    28,'04'O,PR0

      790    10604    2         F$DCB.BLOCKED = %YES#;         /* Assume blocking                    */

  10604  2 001534   000010 236007                    LDQ     8,DL
         2 001535   000031 256100                    ORSQ    25,,PR0

      791    10605    2         I = ASCBIN( TEMP$->FT$LBL2.FORMAT ); /* Identify file format            */

  10605  2 001536   200036 475500                    LDP5    TEMP$,,AUTO
         2 001537   000100 101500                    MRL     fill='000'O
         2 001540   500001 000001                    ADSC9   1,,PR5                   cn=0,n=1
         2 001541   200046 000004                    ADSC9   SAVVOL+2,,AUTO           cn=0,n=4
         2 001542   200046 236100                    LDQ     SAVVOL+2,,AUTO
         2 001543   200011 756100                    STQ     I,,AUTO

      792    10606    2         J = 0;

  10606  2 001544   200012 450100                    STZ     J,,AUTO

      793    10607    3         DO WHILE(FT_FORMAT(J) ~= I AND J < %FT_MAXFMTS);

  10607  2 001545   001547 710000 2                  TRA     s:10609

      794    10608    3            J = J + 1;

  10608  2 001546   200012 054100                    AOS     J,,AUTO

      795    10609    3            END;

  10609  2 001547   200012 235100                    LDA     J,,AUTO
         2 001550   000100 101405                    MRL     fill='000'O
         2 001551   000000 000001 1                  ADSC9   FT_FORMAT,A              cn=0,n=1
         2 001552   200046 000004                    ADSC9   SAVVOL+2,,AUTO           cn=0,n=4
         2 001553   200046 236100                    LDQ     SAVVOL+2,,AUTO
         2 001554   200011 116100                    CMPQ    I,,AUTO
         2 001555   001560 600000 2                  TZE     s:10610
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:109  
         2 001556   000004 115007                    CMPA    4,DL
         2 001557   001546 604000 2                  TMI     s:10608

      796    10610    3         IF J = 4 THEN DO;             /* CP-6 format                 */

  10610  2 001560   000004 115007                    CMPA    4,DL
         2 001561   001724 601000 2                  TNZ     s:10644

      797    10611    3            I = ASCBIN( TEMP$->FT$LBL2.CP6.FILE_FORMAT ); /* Get sub-format   */

  10611  2 001562   200036 470500                    LDP0    TEMP$,,AUTO
         2 001563   000100 101500                    MRL     fill='000'O
         2 001564   000014 000001                    ADSC9   12,,PR0                  cn=0,n=1
         2 001565   200046 000004                    ADSC9   SAVVOL+2,,AUTO           cn=0,n=4
         2 001566   200046 236100                    LDQ     SAVVOL+2,,AUTO
         2 001567   200011 756100                    STQ     I,,AUTO

      798    10612    3            FILE_NAME = TEMP$->FT$LBL2.CP6.FILE_ID;

  10612  2 001570   040100 100500                    MLR     fill='040'O
         2 001571   000004 200037                    ADSC9   4,,PR0                   cn=1,n=31
         2 001572   200025 000037                    ADSC9   FILE_NAME,,AUTO          cn=0,n=31

      799    10613    3            J = 0;

  10613  2 001573   200012 450100                    STZ     J,,AUTO

      800    10614    4            DO WHILE(FT_CP6FMT(J) ~= I AND J < %FT_MAXCP6FMT);

  10614  2 001574   001576 710000 2                  TRA     s:10616

      801    10615    4               J = J + 1;

  10615  2 001575   200012 054100                    AOS     J,,AUTO

      802    10616    4               END;

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:110  
  10616  2 001576   200012 235100                    LDA     J,,AUTO
         2 001577   000100 101405                    MRL     fill='000'O
         2 001600   000002 000001 1                  ADSC9   FT_CP6FMT,A              cn=0,n=1
         2 001601   200046 000004                    ADSC9   SAVVOL+2,,AUTO           cn=0,n=4
         2 001602   200046 236100                    LDQ     SAVVOL+2,,AUTO
         2 001603   200011 116100                    CMPQ    I,,AUTO
         2 001604   001607 600000 2                  TZE     s:10617
         2 001605   000012 115007                    CMPA    10,DL
         2 001606   001575 604000 2                  TMI     s:10615

      803    10617    3            F$DCB.ORG = FT_CP6FMTORG(J); /* Determine ORG                  */

  10617  2 001607   200013 470500                    LDP0    JDCB$,,AUTO
         2 001610   000100 100405                    MLR     fill='000'O
         2 001611   000005 000001 1                  ADSC9   FT_CP6FMTORG,A           cn=0,n=1
         2 001612   000032 000001                    ADSC9   26,,PR0                  cn=0,n=1

      804    10618    4            DO CASE(F$DCB.ORG);

  10618  2 001613   000032 236100                    LDQ     26,,PR0
         2 001614   000033 772000                    QRL     27
         2 001615   000023 116007                    CMPQ    19,DL
         2 001616   001620 602006 2                  TNC     s:10618+5,QL
         2 001617   001705 710000 2                  TRA     s:10640
         2 001620   001705 710000 2                  TRA     s:10640
         2 001621   001643 710000 2                  TRA     s:10620
         2 001622   001643 710000 2                  TRA     s:10620
         2 001623   001705 710000 2                  TRA     s:10640
         2 001624   001643 710000 2                  TRA     s:10620
         2 001625   001705 710000 2                  TRA     s:10640
         2 001626   001643 710000 2                  TRA     s:10620
         2 001627   001705 710000 2                  TRA     s:10640
         2 001630   001705 710000 2                  TRA     s:10640
         2 001631   001643 710000 2                  TRA     s:10620
         2 001632   001705 710000 2                  TRA     s:10640
         2 001633   001705 710000 2                  TRA     s:10640
         2 001634   001705 710000 2                  TRA     s:10640
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:111  
         2 001635   001643 710000 2                  TRA     s:10620
         2 001636   001705 710000 2                  TRA     s:10640
         2 001637   001705 710000 2                  TRA     s:10640
         2 001640   001705 710000 2                  TRA     s:10640
         2 001641   001705 710000 2                  TRA     s:10640
         2 001642   001672 710000 2                  TRA     s:10633

      805    10619    4             CASE(%CONSEC#,%KEYED#,%UR#,%INDEXED#,%SYMB#,%IREL#);

      806    10620    4               J = ASCBIN(TEMP$->FT$LBL2.CP6.BLOCK_ATTR);

  10620  2 001643   200036 471500                    LDP1    TEMP$,,AUTO
         2 001644   000100 101500                    MRL     fill='000'O
         2 001645   100014 200001                    ADSC9   12,,PR1                  cn=1,n=1
         2 001646   200046 000004                    ADSC9   SAVVOL+2,,AUTO           cn=0,n=4
         2 001647   200046 236100                    LDQ     SAVVOL+2,,AUTO
         2 001650   200012 756100                    STQ     J,,AUTO

      807    10621    4               IF J = ASCBIN(' ') THEN

  10621  2 001651   000040 116007                    CMPQ    32,DL
         2 001652   001656 601000 2                  TNZ     s:10624

      808    10622    4                  F$DCB.BLOCKED = %NO#; /*   - not blocked, not spanned */

  10622  2 001653   000025 236000 3                  LDQ     21
         2 001654   000031 356100                    ANSQ    25,,PR0
         2 001655   001705 710000 2                  TRA     s:10640

      809    10623    4               ELSE
      810    10624    5                  IF J = ASCBIN('S') THEN DO;

  10624  2 001656   000123 116007                    CMPQ    83,DL
         2 001657   001665 601000 2                  TNZ     s:10629

      811    10625    5                     F$DCB.BLOCKED = %NO#; /* S - not blocked, spanned  */

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:112  
  10625  2 001660   000025 236000 3                  LDQ     21
         2 001661   000031 356100                    ANSQ    25,,PR0

      812    10626    5                     F$DCB.SPANNED = %YES#;

  10626  2 001662   000004 236007                    LDQ     4,DL
         2 001663   000031 256100                    ORSQ    25,,PR0

      813    10627    5                     END;

  10627  2 001664   001705 710000 2                  TRA     s:10640

      814    10628    4                  ELSE
      815    10629    4                     IF J = ASCBIN('R') THEN

  10629  2 001665   000122 116007                    CMPQ    82,DL
         2 001666   001705 601000 2                  TNZ     s:10640

      816    10630    4                        F$DCB.SPANNED = %YES#; /* R - blocked, spanned  */

  10630  2 001667   000004 236007                    LDQ     4,DL
         2 001670   000031 256100                    ORSQ    25,,PR0
         2 001671   001705 710000 2                  TRA     s:10640

      817    10631    4                     ELSE ;         /* B - blocked, not spanned           */
      818    10632    4             CASE(%RESTRICT#);

      819    10633    4               F$DCB.BLOCKED = %NO#;

  10633  2 001672   000025 236000 3                  LDQ     21
         2 001673   000031 356100                    ANSQ    25,,PR0

      820    10634    4               F$DCB.ACS = %BLOCK#;

  10634  2 001674   000003 236007                    LDQ     3,DL
         2 001675   000036 552104                    STBQ    30,'04'O,PR0

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:113  
      821    10635    4               IF I = ASCBIN('x') THEN

  10635  2 001676   200011 235100                    LDA     I,,AUTO
         2 001677   000170 115007                    CMPA    120,DL
         2 001700   001704 601000 2                  TNZ     s:10638

      822    10636    4                  NO_IFPARAM_RESTRICT = %YES#;

  10636  2 001701   400000 236003                    LDQ     -131072,DU
         2 001702   200024 756100                    STQ     NO_IFPARAM_RESTRICT,,AUTO
         2 001703   001705 710000 2                  TRA     s:10640

      823    10637    4               ELSE
      824    10638    4                  NO_IFPARAM_RESTRICT = %NO#;

  10638  2 001704   200024 450100                    STZ     NO_IFPARAM_RESTRICT,,AUTO

      825    10639    4             END;

      826    10640    3            F$DCB.BLKL = (F$DCB.BLKL * 8 + 7) / 9;

  10640  2 001705   000033 236100                    LDQ     27,,PR0
         2 001706   000017 772000                    QRL     15
         2 001707   000026 376000 3                  ANQ     22
         2 001710   000007 036007                    ADLQ    7,DL
         2 001711   000011 506007                    DIV     9,DL
         2 001712   000000 620006                    EAX0    0,QL
         2 001713   000033 740100                    STX0    27,,PR0

      827    10641    3            F$DCB.RECL = (F$DCB.RECL * 8 + 7) / 9;

  10641  2 001714   000033 236100                    LDQ     27,,PR0
         2 001715   000003 736000                    QLS     3
         2 001716   000026 376000 3                  ANQ     22
         2 001717   000007 036007                    ADLQ    7,DL
         2 001720   000011 506007                    DIV     9,DL
         2 001721   000000 621006                    EAX1    0,QL
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:114  
         2 001722   000033 441100                    SXL1    27,,PR0

      828    10642    3            END;

  10642  2 001723   001730 710000 2                  TRA     s:10647

      829    10643    3         ELSE DO;        /* Not CP6 format--what gives? */

      830    10644    3            B$JIT.ERR = E_BADODFORMAT;

  10644  2 001724   000016 236000 1                  LDQ     E_BADODFORMAT
         2 001725   000000 470400 xsym               LDP0    B$JIT$
         2 001726   000012 756100                    STQ     10,,PR0

      831    10645    3            GOTO CLSTAP;

  10645  2 001727   002274 710000 2                  TRA     CLSTAP

      832    10646    3            END;
      833    10647    2         F$DCB.FSN = FILE_SEQ;             /* Return file sequence number    */

  10647  2 001730   200035 722100                    LXL2    FILE_SEQ,,AUTO
         2 001731   000034 742100                    STX2    28,,PR0

      834    10648           /*    Remember creation date.                                          */
      835    10649    2         IF AFPOOL$->FT$LBL1.CREATE_DATE ~= ' ' THEN

  10649  2 001732   200004 471500                    LDP1    AFPOOL$,,AUTO
         2 001733   040000 106500                    CMPC    fill='040'O
         2 001734   100012 400005                    ADSC9   10,,PR1                  cn=2,n=5
         2 001735   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001736   001751 600000 2                  TZE     s:10652

      836    10650    2            CALL UMT$UTSJ( CREATE_DATE_UTS, AFPOOL$->FT$LBL1.CREATE_DATE );

  10650  2 001737   200004 236100                    LDQ     AFPOOL$,,AUTO
         2 001740   000027 036000 3                  ADLQ    23
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:115  
         2 001741   200047 756100                    STQ     SAVVOL+3,,AUTO
         2 001742   200006 633500                    EPPR3   CREATE_DATE_UTS,,AUTO
         2 001743   200046 453500                    STP3    SAVVOL+2,,AUTO
         2 001744   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 001745   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001746   000000 701000 xent               TSX1    UMT$UTSJ
         2 001747   000000 011000                    NOP     0
         2 001750   001757 710000 2                  TRA     s:10654

      837    10651    2         ELSE
      838    10652    2            CALL SSS$SYSTIME( CREATE_DATE_UTS );

  10652  2 001751   200006 633500                    EPPR3   CREATE_DATE_UTS,,AUTO
         2 001752   200046 453500                    STP3    SAVVOL+2,,AUTO
         2 001753   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 001754   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001755   000000 701000 xent               TSX1    SSS$SYSTIME
         2 001756   000000 011000                    NOP     0

      839    10653           /*    Do FIT checks.                                                   */
      840    10654    2         CALL FPO_SETTAPTYP;               /* Determine type                */

  10654  2 001757   002776 701000 2                  TSX1    FPO_SETTAPTYP
         2 001760   000000 011000                    NOP     0

      841    10655    3         IF F$DCB.TAPTYP.CP6F THEN DO;

  10655  2 001761   200013 470500                    LDP0    JDCB$,,AUTO
         2 001762   000067 236100                    LDQ     55,,PR0
         2 001763   000200 316003                    CANQ    128,DU
         2 001764   002012 600000 2                  TZE     s:10665

      842    10656    3            F$DCB.CNVRT = %NO#;

  10656  2 001765   000014 236000 3                  LDQ     12
         2 001766   000031 356100                    ANSQ    25,,PR0

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:116  
      843    10657    3            F$DCB.ARS = 4096;              /* FIT size                           */

  10657  2 001767   010000 235007                    LDA     4096,DL
         2 001770   000000 755100                    STA     0,,PR0

      844    10658    3            CALL FPO$RDODBLK (AFPOOL$) ALTRET(CLSTAP);

  10658  2 001771   200004 630500                    EPPR0   AFPOOL$,,AUTO
         2 001772   200046 450500                    STP0    SAVVOL+2,,AUTO
         2 001773   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 001774   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001775   000000 701000 xent               TSX1    FPO$RDODBLK
         2 001776   002274 702000 2                  TSX2    CLSTAP

      845    10659    3            IF F$DCB.ARS > 24 THEN

  10659  2 001777   200013 470500                    LDP0    JDCB$,,AUTO
         2 002000   000000 235100                    LDA     0,,PR0
         2 002001   000030 115007                    CMPA    24,DL
         2 002002   002007 604400 2                  TMOZ    s:10662

      846    10660    3               TEMP$ = PINCRW( AFPOOL$, SIZEW(AFPOOL$->FM$GRAN) );

  10660  2 002003   200004 236100                    LDQ     AFPOOL$,,AUTO
         2 002004   000005 036003                    ADLQ    5,DU
         2 002005   200036 756100                    STQ     TEMP$,,AUTO
         2 002006   002015 710000 2                  TRA     s:10669

      847    10661    3            ELSE
      848    10662    3               TEMP$ = AFPOOL$;

  10662  2 002007   200004 236100                    LDQ     AFPOOL$,,AUTO
         2 002010   200036 756100                    STQ     TEMP$,,AUTO

      849    10663    3            END;

  10663  2 002011   002015 710000 2                  TRA     s:10669
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:117  

      850    10664    3         ELSE DO; /* No FIT. */

      851    10665    3            J = 0;

  10665  2 002012   200012 450100                    STZ     J,,AUTO

      852    10666    3            TEMP$ = ADDR(J);

  10666  2 002013   200012 631500                    EPPR1   J,,AUTO
         2 002014   200036 451500                    STP1    TEMP$,,AUTO

      853    10667    3            END;

      854    10668
      855    10669    2         F$DCB.OWNER = %YES#;              /* Only protect by account            */

  10669  2 002015   040000 236007                    LDQ     16384,DL
         2 002016   000064 256100                    ORSQ    52,,PR0

      856    10670    2         IF F$DCB.ORG = %RESTRICT# AND NOT B$JIT.PRIV.ACTIVE & %PR_FMBLK# THEN

  10670  2 002017   000032 236100                    LDQ     26,,PR0
         2 002020   777000 376003                    ANQ     -512,DU
         2 002021   022000 116003                    CMPQ    9216,DU
         2 002022   002032 601000 2                  TNZ     s:10673
         2 002023   000000 471400 xsym               LDP1    B$JIT$
         2 002024   100013 236100                    LDQ     11,,PR1
         2 002025   000052 376000 1                  ANQ     E_WRITEPROT+4
         2 002026   002032 601000 2                  TNZ     s:10673

      857    10671    2            B$JIT.ERR = E_NORESTRICT; /*E* ERROR: FPO-E$NORESTRICT */

  10671  2 002027   000033 236000 1                  LDQ     E_NORESTRICT
         2 002030   100012 756100                    STQ     10,,PR1
         2 002031   002043 710000 2                  TRA     s:10674

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:118  
      858    10672    2         ELSE
      859    10673    2            CALL FMO$SECCHK(PN$.V_->FPT$OPEN_V,TEMP$->FM$FIT);

  10673  2 002032   200003 471500                    LDP1    @PN$,,AUTO
         2 002033   100000 473500                    LDP3    0,,PR1
         2 002034   200036 236100                    LDQ     TEMP$,,AUTO
         2 002035   200047 756100                    STQ     SAVVOL+3,,AUTO
         2 002036   200046 453500                    STP3    SAVVOL+2,,AUTO
         2 002037   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 002040   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002041   000000 701000 xent               TSX1    FMO$SECCHK
         2 002042   000000 011000                    NOP     0

      860    10674    2         IF (F$DCB.BLKL > 4096 * (B$JIT.FBUL-2)) AND NOT F$DCB.TAPTYP.USRBUF THEN

  10674  2 002043   200013 470500                    LDP0    JDCB$,,AUTO
         2 002044   000033 236100                    LDQ     27,,PR0
         2 002045   000022 772000                    QRL     18
         2 002046   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 002047   000000 471400 xsym               LDP1    B$JIT$
         2 002050   100205 236100                    LDQ     133,,PR1
         2 002051   000014 736000                    QLS     12
         2 002052   000030 376000 3                  ANQ     24
         2 002053   020000 136007                    SBLQ    8192,DL
         2 002054   200046 116100                    CMPQ    SAVVOL+2,,AUTO
         2 002055   002063 605000 2                  TPL     s:10676
         2 002056   000067 236100                    LDQ     55,,PR0
         2 002057   000100 316003                    CANQ    64,DU
         2 002060   002063 601000 2                  TNZ     s:10676

      861    10675    2            B$JIT.ERR = E_NOFPOOL; /*E* FTO-E$NOFPOOL */

  10675  2 002061   000031 236000 1                  LDQ     E_NOFPOOL
         2 002062   100012 756100                    STQ     10,,PR1

      862    10676    3         IF B$JIT.ERR THEN DO;

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:119  
  10676  2 002063   100012 235100                    LDA     10,,PR1
         2 002064   002147 600000 2                  TZE     s:10703

      863    10677    3            ERRSAV = B$JIT.ERR;

  10677  2 002065   100012 236100                    LDQ     10,,PR1
         2 002066   200010 756100                    STQ     ERRSAV,,AUTO

      864    10678    3            B$JIT.ERR = '0'B;

  10678  2 002067   100012 450100                    STZ     10,,PR1

      865    10679    3            CALL FPC$DFLTCLOSE;            /* Close this file                    */

  10679  2 002070   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002071   000000 701000 xent               TSX1    FPC$DFLTCLOSE
         2 002072   000000 011000                    NOP     0

      866    10680    3            B$JIT.ERR = '0'B;

  10680  2 002073   000000 470400 xsym               LDP0    B$JIT$
         2 002074   000012 450100                    STZ     10,,PR0

      867    10681    3            IF PN$.V_->FPT$OPEN_V.OPER.NXTF AND NOT PN$.V_->FPT$OPEN_V.OPER.THISF

  10681  2 002075   200003 471500                    LDP1    @PN$,,AUTO
         2 002076   100000 473500                    LDP3    0,,PR1
         2 002077   300000 236100                    LDQ     0,,PR3
         2 002100   004000 316007                    CANQ    2048,DL
         2 002101   002110 600000 2                  TZE     s:10685
         2 002102   002000 316007                    CANQ    1024,DL
         2 002103   002110 601000 2                  TNZ     s:10685
         2 002104   200010 236100                    LDQ     ERRSAV,,AUTO
         2 002105   377770 376007                    ANQ     131064,DL
         2 002106   001610 116007                    CMPQ    904,DL
         2 002107   001304 600000 2                  TZE     ATTEMPT_OPEN_EXISTING

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:120  
      868    10682    3               AND ERRSAV.ERR# = %E$NOFILE THEN
      869    10683    3               GOTO ATTEMPT_OPEN_EXISTING;
             10683                        /* Access not allowed...try to open next file */
      870    10684    4            ELSE DO;

      871    10685    5               IF ERRSAV.ERR# = %E$NOFILE THEN DO;

  10685  2 002110   200010 236100                    LDQ     ERRSAV,,AUTO
         2 002111   377770 376007                    ANQ     131064,DL
         2 002112   001610 116007                    CMPQ    904,DL
         2 002113   002126 601000 2                  TNZ     s:10692

      872    10686                    /* Can't hide file so don't permit access  */
      873    10687    5                  F$DCB.NAME.C = ' ';

  10687  2 002114   200013 474500                    LDP4    JDCB$,,AUTO
         2 002115   040100 100400                    MLR     fill='040'O
         2 002116   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 002117   400010 200037                    ADSC9   8,,PR4                   cn=1,n=31

      874    10688    5                  F$DCB.NAME.L = 0;

  10688  2 002120   200013 473500                    LDP3    JDCB$,,AUTO
         2 002121   000000 236003                    LDQ     0,DU
         2 002122   300010 552140                    STBQ    8,'40'O,PR3

      875    10689    5                  ERRSAV = E_NOACCESS; /*E* ERROR: FPO-E$NOACCESS */

  10689  2 002123   000025 236000 1                  LDQ     E_NOACCESS
         2 002124   200010 756100                    STQ     ERRSAV,,AUTO

      876    10690    5                  END;

  10690  2 002125   002146 710000 2                  TRA     s:10699

      877    10691    5               ELSE DO;                   /* Return name of inaccessible file   */

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:121  
      878    10692    5                  CALL INDEX( J, ' ', FILE_NAME )

  10692  2 002126   000000 124500                    SCM     mask='000'O
         2 002127   200025 000037                    ADSC9   FILE_NAME,,AUTO          cn=0,n=31
         2 002130   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 002131   200012 000100                    ARG     J,,AUTO
         2 002132   002134 606400 2                  TTN     s:10694
         2 002133   002136 710000 2                  TRA     s:10696

      879    10693    6                  WHENALTRETURN DO;

      880    10694    6                     J = 31;

  10694  2 002134   000037 235007                    LDA     31,DL
         2 002135   200012 755100                    STA     J,,AUTO

      881    10695    6                     END;

      882    10696    5                  F$DCB.NAME.C = FILE_NAME;

  10696  2 002136   200013 470500                    LDP0    JDCB$,,AUTO
         2 002137   040100 100500                    MLR     fill='040'O
         2 002140   200025 000037                    ADSC9   FILE_NAME,,AUTO          cn=0,n=31
         2 002141   000010 200037                    ADSC9   8,,PR0                   cn=1,n=31

      883    10697    5                  F$DCB.NAME.L = J;

  10697  2 002142   200013 470500                    LDP0    JDCB$,,AUTO
         2 002143   200012 236100                    LDQ     J,,AUTO
         2 002144   000033 736000                    QLS     27
         2 002145   000010 552140                    STBQ    8,'40'O,PR0

      884    10698    5                  END;

      885    10699    4               GOTO CLSTAPERR;

  10699  2 002146   002277 710000 2                  TRA     CLSTAPERR
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:122  

      886    10700    4               END;
      887    10701    3            END;
      888    10702           /*    Get indexed file information if needed.                           */
      889    10703    3         IF F$DCB.ORG = %INDEXED# THEN DO;

  10703  2 002147   200013 470500                    LDP0    JDCB$,,AUTO
         2 002150   000032 236100                    LDQ     26,,PR0
         2 002151   777000 376003                    ANQ     -512,DU
         2 002152   006000 116003                    CMPQ    3072,DU
         2 002153   002176 601000 2                  TNZ     s:10711

      890    10704    3            AFPOOL$ = TEMP$;

  10704  2 002154   200036 236100                    LDQ     TEMP$,,AUTO
         2 002155   200004 756100                    STQ     AFPOOL$,,AUTO

      891    10705    3            J = 2;

  10705  2 002156   000002 235007                    LDA     2,DL
         2 002157   200012 755100                    STA     J,,AUTO

      892    10706    3            CALL FMO$LOCCODE(AFPOOL$,J);

  10706  2 002160   200012 633500                    EPPR3   J,,AUTO
         2 002161   200047 453500                    STP3    SAVVOL+3,,AUTO
         2 002162   200004 634500                    EPPR4   AFPOOL$,,AUTO
         2 002163   200046 454500                    STP4    SAVVOL+2,,AUTO
         2 002164   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 002165   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002166   000000 701000 xent               TSX1    FMO$LOCCODE
         2 002167   000000 011000                    NOP     0

      893    10707    3            F$DCB.KEYX = AFPOOL$->CODE02.KEYX;

  10707  2 002170   200004 470500                    LDP0    AFPOOL$,,AUTO
         2 002171   000003 220100                    LDX0    3,,PR0
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:123  
         2 002172   200013 471500                    LDP1    JDCB$,,AUTO
         2 002173   100036 740100                    STX0    30,,PR1

      894    10708    3            F$DCB.KEYL = AFPOOL$->CODE02.KEYL;

  10708  2 002174   000003 236100                    LDQ     3,,PR0
         2 002175   100036 552110                    STBQ    30,'10'O,PR1

      895    10709    3            END;

      896    10710           /*    Set file name.                                                   */
      897    10711    2         CALL INDEX( J, ' ', FILE_NAME )

  10711  2 002176   000000 124500                    SCM     mask='000'O
         2 002177   200025 000037                    ADSC9   FILE_NAME,,AUTO          cn=0,n=31
         2 002200   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 002201   200012 000100                    ARG     J,,AUTO
         2 002202   002204 606400 2                  TTN     s:10713
         2 002203   002206 710000 2                  TRA     s:10715

      898    10712    3         WHENALTRETURN DO;

      899    10713    3            J = 31;

  10713  2 002204   000037 235007                    LDA     31,DL
         2 002205   200012 755100                    STA     J,,AUTO

      900    10714    3            END;

      901    10715    2         F$DCB.NAME.C = FILE_NAME;

  10715  2 002206   200013 470500                    LDP0    JDCB$,,AUTO
         2 002207   040100 100500                    MLR     fill='040'O
         2 002210   200025 000037                    ADSC9   FILE_NAME,,AUTO          cn=0,n=31
         2 002211   000010 200037                    ADSC9   8,,PR0                   cn=1,n=31

      902    10716    2         F$DCB.NAME.L = J;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:124  

  10716  2 002212   200013 470500                    LDP0    JDCB$,,AUTO
         2 002213   200012 236100                    LDQ     J,,AUTO
         2 002214   000033 736000                    QLS     27
         2 002215   000010 552140                    STBQ    8,'40'O,PR0

      903    10717    2         AFPOOL$ = TEMP$;

  10717  2 002216   200036 236100                    LDQ     TEMP$,,AUTO
         2 002217   200004 756100                    STQ     AFPOOL$,,AUTO

      904    10718    2         J = 3;

  10718  2 002220   000003 235007                    LDA     3,DL
         2 002221   200012 755100                    STA     J,,AUTO

      905    10719    2         CALL FMO$LOCCODE( AFPOOL$, J );

  10719  2 002222   200012 630500                    EPPR0   J,,AUTO
         2 002223   200047 450500                    STP0    SAVVOL+3,,AUTO
         2 002224   200004 631500                    EPPR1   AFPOOL$,,AUTO
         2 002225   200046 451500                    STP1    SAVVOL+2,,AUTO
         2 002226   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 002227   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002230   000000 701000 xent               TSX1    FMO$LOCCODE
         2 002231   000000 011000                    NOP     0

      906    10720    2         F$DCB.TYPE = AFPOOL$->CODE03.TYPE;

  10720  2 002232   200004 470500                    LDP0    AFPOOL$,,AUTO
         2 002233   000001 720100                    LXL0    1,,PR0
         2 002234   200013 471500                    LDP1    JDCB$,,AUTO
         2 002235   100025 440100                    SXL0    21,,PR1

      907    10721           /*    Return FIT if requested.                                       */
      908    10722    2         IF PN$.FPARAM_ ~= ADDR(NIL) THEN

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:125  
  10722  2 002236   200003 473500                    LDP3    @PN$,,AUTO
         2 002237   300014 236100                    LDQ     12,,PR3
         2 002240   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002241   002253 600000 2                  TZE     s:10724

      909    10723    2            CALL FMO$TRNINFO( PN$.FPARAM_, TEMP$ ) ALTRET(CLSTAP);

  10723  2 002242   200036 634500                    EPPR4   TEMP$,,AUTO
         2 002243   200047 454500                    STP4    SAVVOL+3,,AUTO
         2 002244   200003 236100                    LDQ     @PN$,,AUTO
         2 002245   000014 036003                    ADLQ    12,DU
         2 002246   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 002247   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 002250   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002251   000000 701000 xent               TSX1    FMO$TRNINFO
         2 002252   002274 702000 2                  TSX2    CLSTAP

      910    10724    2         RETURN;

  10724  2 002253   200040 221300                    LDX1  ! MAXBLKL+1,,AUTO
         2 002254   000001 702211                    TSX2  ! 1,X1

  10722  2 002255                       RETFSN       null
      911    10725
      912    10726
      913    10727    2   RETFSN: ;
      914    10728    3         IF F$DCB.SETX ~= 0 AND B$JIT.ERR.CODE = %E$EOSET THEN DO;

  10728  2 002255   200013 470500                    LDP0    JDCB$,,AUTO
         2 002256   000051 720100                    LXL0    41,,PR0
         2 002257   002274 600000 2                  TZE     CLSTAP
         2 002260   000000 471400 xsym               LDP1    B$JIT$
         2 002261   100012 236100                    LDQ     10,,PR1
         2 002262   377770 376007                    ANQ     131064,DL
         2 002263   013140 116007                    CMPQ    5728,DL
         2 002264   002274 601000 2                  TNZ     CLSTAP

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:126  
      915    10729              /* Return end of set sequence         */
      916    10730    3            DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;

  10730  2 002265   000000 473400 xsym               LDP3    N$DCT$$
         2 002266   300000 474510                    LDP4    0,X0,PR3
         2 002267   400004 236100                    LDQ     4,,PR4
         2 002270   200007 756100                    STQ     DDDT$,,AUTO

      917    10731    3            F$DCB.FSN = FT$DDT.FSN; /* FSN of last (or before first) file of set    */

  10731  2 002271   200007 475500                    LDP5    DDDT$,,AUTO
         2 002272   500005 221100                    LDX1    5,,PR5
         2 002273   000034 741100                    STX1    28,,PR0

      918    10732    3            END;

  10728  2 002274                       CLSTAP       null
      919    10733    2   CLSTAP: ;
      920    10734    2         ERRSAV = B$JIT.ERR;

  10734  2 002274   000000 470400 xsym               LDP0    B$JIT$
         2 002275   000012 236100                    LDQ     10,,PR0
         2 002276   200010 756100                    STQ     ERRSAV,,AUTO

  10734  2 002277                       CLSTAPERR    null
      921    10735    2   CLSTAPERR: ;
      922    10736    2         CALL FRB$CLS;

  10736  2 002277   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002300   000000 701000 xent               TSX1    FRB$CLS
         2 002301   000000 011000                    NOP     0

      923    10737    2         B$JIT.ERR = ERRSAV;

  10737  2 002302   200010 236100                    LDQ     ERRSAV,,AUTO
         2 002303   000000 470400 xsym               LDP0    B$JIT$
         2 002304   000012 756100                    STQ     10,,PR0
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:127  

  10737  2 002305                       JUSTALT      null
      924    10738
      925    10739    2   JUSTALT: ;
      926    10740    2         ALTRETURN;

  10740  2 002305   200040 221300                    LDX1  ! MAXBLKL+1,,AUTO
         2 002306   000000 702211                    TSX2  ! 0,X1

      927    10741
      928    10742    2   END FPO_OPNEXISTING;
      929    10743        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:128  
      930    10744        /********************************************************************/
      931    10745    1   FPO$FINDSEQ: ENTRY ALTRET;

  10745  2 002307   000000 700200 xent  FPO$FINDSEQ  TSX0  ! X66_AUTO_1
         2 002310   000052 000001                    ZERO    42,1

      932    10746
      933    10747
      934    10748        /*F*  NAME: FPO_FINDSEQ
      935    10749              PURPOSE: To position to the OD file specified by F$DCB.FSN.
      936    10750        */
      937    10751
      938    10752    1         JDCB$ = B$JIT.DCB$;

  10752  2 002311   000000 470400 xsym               LDP0    B$JIT$
         2 002312   000232 236100                    LDQ     154,,PR0
         2 002313   200013 756100                    STQ     JDCB$,,AUTO

      939    10753    1         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;

  10753  2 002314   200013 471500                    LDP1    JDCB$,,AUTO
         2 002315   100051 720100                    LXL0    41,,PR1
         2 002316   000000 473400 xsym               LDP3    N$DCT$$
         2 002317   300000 474510                    LDP4    0,X0,PR3
         2 002320   400004 236100                    LDQ     4,,PR4
         2 002321   200007 756100                    STQ     DDDT$,,AUTO

      940    10754    1         CALL FPO_LBLINIT ALTRET(JUSTALT);

  10754  2 002322   003447 701000 2                  TSX1    FPO_LBLINIT
         2 002323   002516 702000 2                  TSX2    JUSTALT

      941    10755
      942    10756    2         DO WHILE('1'B);

      943    10757    2            CALL FPO$FINDFSN (LBL1$) ALTRET(JUSTALT);

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:129  
  10757  2 002324   200016 630500                    EPPR0   LBL1$,,AUTO
         2 002325   200046 450500                    STP0    SAVVOL+2,,AUTO
         2 002326   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 002327   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002330   000000 701000 xent               TSX1    FPO$FINDFSN
         2 002331   002516 702000 2                  TSX2    JUSTALT

      944    10758    3            IF NOT F$DCB.TYC(1) THEN DO; /* Found the file. */

  10758  2 002332   200013 470500                    LDP0    JDCB$,,AUTO
         2 002333   000002 235100                    LDA     2,,PR0
         2 002334   002372 601000 2                  TNZ     s:10770

      945    10759    3               THISFSN = F$DCB.FSN;

  10759  2 002335   000034 236100                    LDQ     28,,PR0
         2 002336   000022 772000                    QRL     18
         2 002337   200022 756100                    STQ     THISFSN,,AUTO

      946    10760    3               FT$DDT.FSN = THISFSN - 1; /* Set FSN of previous file */

  10760  2 002340   777777 620006                    EAX0    -1,QL
         2 002341   200007 471500                    LDP1    DDDT$,,AUTO
         2 002342   100005 740100                    STX0    5,,PR1

      947    10761    3               CALL CHARBIN( THISFSECT, LBL1$->FT$LBL1.FSECT );

  10761  2 002343   200016 470500                    LDP0    LBL1$,,AUTO
         2 002344   000100 305500                    DTB
         2 002345   000006 630004                    NDSC9   6,,PR0                   cn=3,s=nosgn,sf=0,n=4
         2 002346   200023 000004                    NDSC9   THISFSECT,,AUTO          cn=0,s=lsgnf,sf=0,n=4

      948    10762    3               IF F$DCB.FSECT = 0 OR

  10762  2 002347   200013 473500                    LDP3    JDCB$,,AUTO
         2 002350   300077 221100                    LDX1    63,,PR3
         2 002351   002362 600000 2                  TZE     s:10765
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:130  
         2 002352   300077 236100                    LDQ     63,,PR3
         2 002353   000022 772000                    QRL     18
         2 002354   200023 116100                    CMPQ    THISFSECT,,AUTO
         2 002355   002362 600000 2                  TZE     s:10765
         2 002356   300032 236100                    LDQ     26,,PR3
         2 002357   777000 376003                    ANQ     -512,DU
         2 002360   022000 116003                    CMPQ    9216,DU
         2 002361   002363 601000 2                  TNZ     s:10766

      949    10763    3                  F$DCB.FSECT = THISFSECT OR
      950    10764    3                  F$DCB.ORG = %RESTRICT# THEN
      951    10765    3                  RETURN;

  10765  2 002362   000000 702200 xent               TSX2  ! X66_ARET

      952    10766    3               SKIPS = F$DCB.FSECT - THISFSECT;

  10766  2 002363   300077 236100                    LDQ     63,,PR3
         2 002364   000022 772000                    QRL     18
         2 002365   200023 136100                    SBLQ    THISFSECT,,AUTO
         2 002366   200020 756100                    STQ     SKIPS,,AUTO

      953    10767    3               SECTFIND = '1'B;

  10767  2 002367   400000 236003                    LDQ     -131072,DU
         2 002370   200021 756100                    STQ     SECTFIND,,AUTO

      954    10768    3               END;

  10768  2 002371   002434 710000 2                  TRA     s:10795

      955    10769    3            ELSE DO;

      956    10770    4               IF F$DCB.TYC.EOT(1) THEN DO; /* File past EOT, have next volume. */

  10770  2 002372   000002 236100                    LDQ     2,,PR0
         2 002373   100000 316003                    CANQ    32768,DU
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:131  
         2 002374   002402 600000 2                  TZE     s:10776

      957    10771    4                  IF SKIPS < 0 THEN

  10771  2 002375   200020 235100                    LDA     SKIPS,,AUTO
         2 002376   002460 604000 2                  TMI     VOLORDER

      958    10772    4                     GOTO VOLORDER;   /* Volume with req'd fsn missing */
      959    10773    4                  SKIPS = 1;          /* End of volume, file continued */

  10773  2 002377   000001 235007                    LDA     1,DL
         2 002400   200020 755100                    STA     SKIPS,,AUTO

      960    10774    4                  END;

  10774  2 002401   002434 710000 2                  TRA     s:10795

      961    10775    3               ELSE
      962    10776    4                  IF F$DCB.TYC.BOT(1) THEN DO; /* File before BOT. */

  10776  2 002402   040000 316003                    CANQ    16384,DU
         2 002403   002411 600000 2                  TZE     s:10782

      963    10777    4                     IF SKIPS > 0 THEN

  10777  2 002404   200020 235100                    LDA     SKIPS,,AUTO
         2 002405   002460 605400 2                  TPNZ    VOLORDER

      964    10778    4                        GOTO VOLORDER;  /* missing volume            */
      965    10779    4                     SKIPS = -1;        /* Section on previous volume */

  10779  2 002406   000001 335007                    LCA     1,DL
         2 002407   200020 755100                    STA     SKIPS,,AUTO

      966    10780    4                     END;

  10780  2 002410   002434 710000 2                  TRA     s:10795
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:132  

      967    10781    4                  ELSE DO;

      968    10782    4                     IF F$DCB.TYC.EOF(1) THEN /* File after EOT, no next volume. */

  10782  2 002411   004000 316003                    CANQ    2048,DU
         2 002412   002416 600000 2                  TZE     s:10784

      969    10783    4                        B$JIT.ERR = E_EOSET; /*E* ERROR: FPO-E$EOSET */

  10783  2 002413   000020 236000 1                  LDQ     E_EOSET
         2 002414   000000 471400 xsym               LDP1    B$JIT$
         2 002415   100012 756100                    STQ     10,,PR1

      970    10784    4                     IF F$DCB.TYC.IOERR(1) THEN /* Couldn't read header sector. */

  10784  2 002416   200013 470500                    LDP0    JDCB$,,AUTO
         2 002417   000002 430100                    FSZN    2,,PR0
         2 002420   002424 605000 2                  TPL     s:10786

      971    10785    4                        B$JIT.ERR = E_IOERR; /*E* ERROR: FPO-E$IOERR */

  10785  2 002421   000024 236000 1                  LDQ     E_IOERR
         2 002422   000000 471400 xsym               LDP1    B$JIT$
         2 002423   100012 756100                    STQ     10,,PR1

      972    10786    4                     IF F$DCB.TYC.EOD(1) THEN /* File entry was empty. */

  10786  2 002424   200013 470500                    LDP0    JDCB$,,AUTO
         2 002425   000002 236100                    LDQ     2,,PR0
         2 002426   000200 316003                    CANQ    128,DU
         2 002427   002433 600000 2                  TZE     s:10788

      973    10787    4                        B$JIT.ERR = E_ODEMPTYENT; /*E* ERROR: FPO-E$ODEMPTYENT */

  10787  2 002430   000037 236000 1                  LDQ     E_ODEMPTYENT
         2 002431   000000 471400 xsym               LDP1    B$JIT$
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:133  
         2 002432   100012 756100                    STQ     10,,PR1

      974    10788    4                     ALTRETURN;

  10788  2 002433   000000 702200 xent               TSX2  ! X66_AALT

      975    10789    4                     END;
      976    10790    3               END;
      977    10791
      978    10792                 /* At this point we are positioned at a section of the proper
      979    10793                    file, or ready to CVOL or PVOL depending on SKIPS.      */
      980    10794
      981    10795    2            F$DCB.SEZ_OK = %NO#;        /* No scratches                  */

  10795  2 002434   200013 470500                    LDP0    JDCB$,,AUTO
         2 002435   000010 236000 3                  LDQ     8
         2 002436   000064 356100                    ANSQ    52,,PR0

      982    10796    2            CALL FTR$CHNGVOLNR(F$DCB.VOL + SKIPS) ALTRET(NOSCRATCHES);

  10796  2 002437   000043 236100                    LDQ     35,,PR0
         2 002440   000033 772000                    QRL     27
         2 002441   200020 036100                    ADLQ    SKIPS,,AUTO
         2 002442   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 002443   200046 631500                    EPPR1   SAVVOL+2,,AUTO
         2 002444   200047 451500                    STP1    SAVVOL+3,,AUTO
         2 002445   200047 630500                    EPPR0   SAVVOL+3,,AUTO
         2 002446   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002447   000000 701000 xent               TSX1    FTR$CHNGVOLNR
         2 002450   002471 702000 2                  TSX2    NOSCRATCHES

      983    10797    2            DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;

  10797  2 002451   200013 470500                    LDP0    JDCB$,,AUTO
         2 002452   000051 720100                    LXL0    41,,PR0
         2 002453   000000 471400 xsym               LDP1    N$DCT$$
         2 002454   100000 473510                    LDP3    0,X0,PR1
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:134  
         2 002455   300004 236100                    LDQ     4,,PR3
         2 002456   200007 756100                    STQ     DDDT$,,AUTO

      984    10798    2            END;                      /* end do while                   */

  10798  2 002457   002324 710000 2                  TRA     s:10757

  10796  2 002460                       VOLORDER     null
      985    10799
      986    10800    1   VOLORDER: ;
      987    10801    1         FT$DDT.POS = FTP_HDR#;       /* Should be before HDR1              */

  10801  2 002460   200007 471500                    LDP1    DDDT$,,AUTO
         2 002461   100006 236100                    LDQ     6,,PR1
         2 002462   000011 376000 3                  ANQ     9
         2 002463   000040 276007                    ORQ     32,DL
         2 002464   100006 756100                    STQ     6,,PR1

      988    10802    1         B$JIT.ERR = E_VOLORDER;      /*E* ERROR: FPO-E$VOLORDER */

  10802  2 002465   000043 236000 1                  LDQ     E_VOLORDER
         2 002466   000000 470400 xsym               LDP0    B$JIT$
         2 002467   000012 756100                    STQ     10,,PR0

      989    10803    1         ALTRETURN;

  10803  2 002470   000000 702200 xent               TSX2  ! X66_AALT

  10802  2 002471                       NOSCRATCHES  null
      990    10804
      991    10805    1   NOSCRATCHES: ;
      992    10806    1         I = B$JIT.ERR.CODE;          /* What went wrong      */

  10806  2 002471   000000 470400 xsym               LDP0    B$JIT$
         2 002472   000012 236100                    LDQ     10,,PR0
         2 002473   000003 772000                    QRL     3
         2 002474   037777 376007                    ANQ     16383,DL
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:135  
         2 002475   200011 756100                    STQ     I,,AUTO

      993    10807    1         IF I = %E$VOLORDER THEN

  10807  2 002476   001330 116007                    CMPQ    728,DL
         2 002477   002505 601000 2                  TNZ     s:10812

      994    10808    1            IF SECTFIND THEN

  10808  2 002500   200021 234100                    SZN     SECTFIND,,AUTO
         2 002501   002516 605000 2                  TPL     JUSTALT

      995    10809    1               B$JIT.ERR = E_SECTERR; /*E* ERROR: FPO-E$SECTERR */

  10809  2 002502   000041 236000 1                  LDQ     E_SECTERR
         2 002503   000012 756100                    STQ     10,,PR0
         2 002504   002516 710000 2                  TRA     JUSTALT

      996    10810    1            ELSE ;           /* Tried to get another volume but couldn't     */
      997    10811    1         ELSE
      998    10812    1            IF I = %E$VOLOUT THEN

  10812  2 002505   001327 116007                    CMPQ    727,DL
         2 002506   002516 601000 2                  TNZ     JUSTALT

      999    10813    1               IF SECTFIND THEN

  10813  2 002507   200021 234100                    SZN     SECTFIND,,AUTO
         2 002510   002514 605000 2                  TPL     s:10816

     1000    10814    1                  B$JIT.ERR = E_SECTERR; /*E* ERROR: FPO-E$SECTERR */

  10814  2 002511   000041 236000 1                  LDQ     E_SECTERR
         2 002512   000012 756100                    STQ     10,,PR0
         2 002513   002516 710000 2                  TRA     JUSTALT

     1001    10815    1               ELSE
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:136  
     1002    10816    1                  B$JIT.ERR = E_EOSET; /*E* ERROR: FPO-E$EOSET */

  10816  2 002514   000020 236000 1                  LDQ     E_EOSET
         2 002515   000012 756100                    STQ     10,,PR0

     1003    10817                                                /* File must be missing               */
     1004    10818    1   JUSTALT:
     1005    10819    1         ALTRETURN;

  10819  2 002516   000000 702200 xent  JUSTALT      TSX2  ! X66_AALT

     1006    10820
     1007    10821        /********************************************************************/
     1008    10822        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:137  
     1009    10823        /********************************************************************/
     1010    10824    1   FPO_FINDFILE: PROC ALTRET;

  10824  2 002517   200042 741300       FPO_FINDFILE STX1  ! HOST,,AUTO

     1011    10825
     1012    10826        /*F*     NAME: FPO_FINDFILE
     1013    10827                 PURPOSE: Find file by name specified by DCB.NAME and DCB.FSECT.
     1014    10828                 DESCRIPTION: File name is specified by DCB.NAME.  Section number
     1015    10829                    is specified by DCB.FSECT.  If DCB.FSECT is 0 then any file
     1016    10830                    section of specified file will do.  The entire volume set is
     1017    10831                    searched for a file with specified name.  If such file is not
     1018    10832                    found, position is left before the first section of the file
     1019    10833                    on which the search started.  If no such file is found, the
     1020    10834                    procedure altreturns with a E$NOFILE error.  If the wrong file
     1021    10835                    section is found, FPO$FINDSEQ is called after DCB.FSN is set
     1022    10836                    with the sequence number of the file.  Other possible errors
     1023    10837                    altreturned are standard I/O and position lost or volume missing
     1024    10838                    errors.
     1025    10839         ***/
     1026    10840    2   DCL SAVFSN SBIN;
     1027    10841    2   DCL SAVVOL UBIN;
     1028    10842
     1029    10843
     1030    10844    2         SAVVOL = 0;

  10844  2 002520   200044 450100                    STZ     SAVVOL,,AUTO

     1031    10845    3         DO WHILE('1'B);

     1032    10846    3            CALL FPO$FINDFILE(LBL1$) ALTRET(JUSTALT);

  10846  2 002521   200016 630500                    EPPR0   LBL1$,,AUTO
         2 002522   200046 450500                    STP0    SAVVOL+2,,AUTO
         2 002523   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 002524   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002525   000000 701000 xent               TSX1    FPO$FINDFILE
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:138  
         2 002526   002571 702000 2                  TSX2    JUSTALT

     1033    10847    4            IF NOT F$DCB.TYC(1) THEN DO;

  10847  2 002527   200013 470500                    LDP0    JDCB$,,AUTO
         2 002530   000002 235100                    LDA     2,,PR0
         2 002531   002564 601000 2                  TNZ     s:10859

     1034    10848                    /* No error, must have found the file              */
     1035    10849    4               CALL CHARBIN( THISFSN, LBL1$->FT$LBL1.ODFSEQU_NUM );

  10849  2 002532   200016 471500                    LDP1    LBL1$,,AUTO
         2 002533   000100 305500                    DTB
         2 002534   100022 230006                    NDSC9   18,,PR1                  cn=1,s=nosgn,sf=0,n=6
         2 002535   200022 000004                    NDSC9   THISFSN,,AUTO            cn=0,s=lsgnf,sf=0,n=4

     1036    10850    4               CALL CHARBIN( THISFSECT, LBL1$->FT$LBL1.FSECT );

  10850  2 002536   000100 305500                    DTB
         2 002537   100006 630004                    NDSC9   6,,PR1                   cn=3,s=nosgn,sf=0,n=4
         2 002540   200023 000004                    NDSC9   THISFSECT,,AUTO          cn=0,s=lsgnf,sf=0,n=4

     1037    10851    4               F$DCB.FSN = THISFSN;        /* Set sequence number                */

  10851  2 002541   200022 720100                    LXL0    THISFSN,,AUTO
         2 002542   000034 740100                    STX0    28,,PR0

     1038    10852    4               IF F$DCB.FSECT = 0 OR F$DCB.FSECT = THISFSECT THEN

  10852  2 002543   000077 221100                    LDX1    63,,PR0
         2 002544   002551 600000 2                  TZE     s:10853
         2 002545   000077 236100                    LDQ     63,,PR0
         2 002546   000022 772000                    QRL     18
         2 002547   200023 116100                    CMPQ    THISFSECT,,AUTO
         2 002550   002557 601000 2                  TNZ     s:10855

     1039    10853    4                  FT$DDT.POS = FTP_HDR#;   /* Got it                           */
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:139  

  10853  2 002551   200007 473500                    LDP3    DDDT$,,AUTO
         2 002552   300006 236100                    LDQ     6,,PR3
         2 002553   000011 376000 3                  ANQ     9
         2 002554   000040 276007                    ORQ     32,DL
         2 002555   300006 756100                    STQ     6,,PR3
         2 002556   002562 710000 2                  TRA     s:10856

     1040    10854    4               ELSE
     1041    10855    4                  CALL FPO$FINDSEQ ALTRET(JUSTALT); /* At FSN but not proper FSECT */

  10855  2 002557   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002560   002307 701000 2                  TSX1    s:10745
         2 002561   002571 702000 2                  TSX2    JUSTALT

     1042    10856    4               RETURN;

  10856  2 002562   200042 221300                    LDX1  ! HOST,,AUTO
         2 002563   000001 702211                    TSX2  ! 1,X1

     1043    10857    4               END;
     1044    10858    4            ELSE DO;                  /* At end of volume, no file found        */

     1045    10859    5               IF F$DCB.TYC.IOERR(1) THEN DO;

  10859  2 002564   000002 430100                    FSZN    2,,PR0
         2 002565   002573 605000 2                  TPL     s:10863

     1046    10860    5                  B$JIT.ERR = E_IOERR; /* Must be IOERR. */

  10860  2 002566   000024 236000 1                  LDQ     E_IOERR
         2 002567   000000 471400 xsym               LDP1    B$JIT$
         2 002570   100012 756100                    STQ     10,,PR1

     1047    10861    5   JUSTALT:       ALTRETURN;

  10861  2 002571   200042 221300       JUSTALT      LDX1  ! HOST,,AUTO
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:140  
         2 002572   000000 702211                    TSX2  ! 0,X1

     1048    10862    5                  END;
     1049    10863    5               IF F$DCB.TYC.EOD(1) AND F$DCB.VOL = 1 THEN DO; /* No files. */

  10863  2 002573   000002 236100                    LDQ     2,,PR0
         2 002574   000200 316003                    CANQ    128,DU
         2 002575   002607 600000 2                  TZE     s:10867
         2 002576   000043 236100                    LDQ     35,,PR0
         2 002577   777000 376003                    ANQ     -512,DU
         2 002600   001000 116003                    CMPQ    512,DU
         2 002601   002607 601000 2                  TNZ     s:10867

     1050    10864    5                  B$JIT.ERR = E_NOFILE;

  10864  2 002602   000030 236000 1                  LDQ     E_NOFILE
         2 002603   000000 471400 xsym               LDP1    B$JIT$
         2 002604   100012 756100                    STQ     10,,PR1

     1051    10865    5                  ALTRETURN;

  10865  2 002605   200042 221300                    LDX1  ! HOST,,AUTO
         2 002606   000000 702211                    TSX2  ! 0,X1

     1052    10866    5                  END;
     1053    10867    4               IF SAVVOL = 0 THEN

  10867  2 002607   200044 236100                    LDQ     SAVVOL,,AUTO
         2 002610   002615 601000 2                  TNZ     s:10869

     1054    10868    4                  SAVVOL = F$DCB.VOL;

  10868  2 002611   000043 236100                    LDQ     35,,PR0
         2 002612   000033 772000                    QRL     27
         2 002613   200044 756100                    STQ     SAVVOL,,AUTO
         2 002614   002633 710000 2                  TRA     s:10874

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:141  
     1055    10869    5               ELSE IF SAVVOL = F$DCB.VOL THEN DO;

  10869  2 002615   000043 236100                    LDQ     35,,PR0
         2 002616   000033 772000                    QRL     27
         2 002617   200044 116100                    CMPQ    SAVVOL,,AUTO
         2 002620   002633 601000 2                  TNZ     s:10874

     1056    10870    5                     B$JIT.ERR = E_NOFILE;

  10870  2 002621   000030 236000 1                  LDQ     E_NOFILE
         2 002622   000000 471400 xsym               LDP1    B$JIT$
         2 002623   100012 756100                    STQ     10,,PR1

     1057    10871    5                     FT$DDT.POS = FTP_HDR#;

  10871  2 002624   200007 470500                    LDP0    DDDT$,,AUTO
         2 002625   000006 236100                    LDQ     6,,PR0
         2 002626   000011 376000 3                  ANQ     9
         2 002627   000040 276007                    ORQ     32,DL
         2 002630   000006 756100                    STQ     6,,PR0

     1058    10872    5                     ALTRETURN;

  10872  2 002631   200042 221300                    LDX1  ! HOST,,AUTO
         2 002632   000000 702211                    TSX2  ! 0,X1

     1059    10873    5                     END;
     1060    10874    4               THISFSN = -1;

  10874  2 002633   000001 335007                    LCA     1,DL
         2 002634   200022 755100                    STA     THISFSN,,AUTO

     1061    10875    4               FT$DDT.POS = FTP_HDR#;

  10875  2 002635   200007 471500                    LDP1    DDDT$,,AUTO
         2 002636   100006 236100                    LDQ     6,,PR1
         2 002637   000011 376000 3                  ANQ     9
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:142  
         2 002640   000040 276007                    ORQ     32,DL
         2 002641   100006 756100                    STQ     6,,PR1

     1062    10876    4               IF F$DCB.TYC.EOF(1) THEN

  10876  2 002642   200013 470500                    LDP0    JDCB$,,AUTO
         2 002643   000002 236100                    LDQ     2,,PR0
         2 002644   004000 316003                    CANQ    2048,DU
         2 002645   002652 600000 2                  TZE     s:10882

     1063    10877                       /* End of set                             */
     1064    10878                       /* This error will be changed to E$EOSET below unless
     1065    10879                          search is to continue (F$DCB.FSN = 0) */
     1066    10880    4                  B$JIT.ERR = E_VOLOUT; /*E* ERROR: FPO-E$VOLOUT */

  10880  2 002646   000044 236000 1                  LDQ     E_VOLOUT
         2 002647   000000 473400 xsym               LDP3    B$JIT$
         2 002650   300012 756100                    STQ     10,,PR3
         2 002651   002674 710000 2                  TRA     s:10886

     1067    10881    5               ELSE DO;                /* Another volume must exist          */

     1068    10882    5                  F$DCB.SEZ_OK = %NO#;  /* Say scratch not ok                 */

  10882  2 002652   000010 236000 3                  LDQ     8
         2 002653   000064 356100                    ANSQ    52,,PR0

     1069    10883    5                  CALL FTR$CHNGVOLNR(F$DCB.VOL + 1) ALTRET(CHKSCRATCH);

  10883  2 002654   000043 236100                    LDQ     35,,PR0
         2 002655   000033 772000                    QRL     27
         2 002656   000001 036007                    ADLQ    1,DL
         2 002657   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 002660   200046 633500                    EPPR3   SAVVOL+2,,AUTO
         2 002661   200047 453500                    STP3    SAVVOL+3,,AUTO
         2 002662   200047 630500                    EPPR0   SAVVOL+3,,AUTO
         2 002663   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:143  
         2 002664   000000 701000 xent               TSX1    FTR$CHNGVOLNR
         2 002665   002700 702000 2                  TSX2    CHKSCRATCH

     1070    10884    5                  DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;

  10884  2 002666   200013 470500                    LDP0    JDCB$,,AUTO
         2 002667   000051 720100                    LXL0    41,,PR0
         2 002670   000000 471400 xsym               LDP1    N$DCT$$
         2 002671   100000 473510                    LDP3    0,X0,PR1
         2 002672   300004 236100                    LDQ     4,,PR3
         2 002673   200007 756100                    STQ     DDDT$,,AUTO

     1071    10885    5                  END;

     1072    10886    5               IF B$JIT.ERR.CODE ~= 0 THEN DO;

  10886  2 002674   000000 470400 xsym               LDP0    B$JIT$
         2 002675   000012 236100                    LDQ     10,,PR0
         2 002676   377770 316007                    CANQ    131064,DL
         2 002677   002767 600000 2                  TZE     s:10917

  10882  2 002700                       CHKSCRATCH   null
     1073    10887                       /* Ran out of "next" volumes          */
     1074    10888    5   CHKSCRATCH:    ;
     1075    10889    5                  I = B$JIT.ERR.CODE;      /* Get error code                     */

  10889  2 002700   000000 470400 xsym               LDP0    B$JIT$
         2 002701   000012 236100                    LDQ     10,,PR0
         2 002702   000003 772000                    QRL     3
         2 002703   037777 376007                    ANQ     16383,DL
         2 002704   200011 756100                    STQ     I,,AUTO

     1076    10890                       /* If unexpected error, altreturn now */
     1077    10891    5                  IF I ~= %E$VOLOUT AND I ~= %E$VOLORDER THEN

  10891  2 002705   001327 116007                    CMPQ    727,DL
         2 002706   002713 600000 2                  TZE     s:10893
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:144  
         2 002707   001330 116007                    CMPQ    728,DL
         2 002710   002713 600000 2                  TZE     s:10893

     1078    10892    5                     ALTRETURN;

  10892  2 002711   200042 221300                    LDX1  ! HOST,,AUTO
         2 002712   000000 702211                    TSX2  ! 0,X1

     1079    10893    6                  IF F$DCB.FSN > 0 THEN DO;

  10893  2 002713   200013 471500                    LDP1    JDCB$,,AUTO
         2 002714   100034 220100                    LDX0    28,,PR1
         2 002715   002724 600000 2                  TZE     s:10899

     1080    10894                       /* Start search at FSN means end at EOS    */
     1081    10895    6                     IF I = %E$VOLOUT THEN

  10895  2 002716   001327 116007                    CMPQ    727,DL
         2 002717   002722 601000 2                  TNZ     s:10897

     1082    10896    6                        B$JIT.ERR = E_EOSET; /*E* ERROR: FPO-E$EOSET */

  10896  2 002720   000020 236000 1                  LDQ     E_EOSET
         2 002721   000012 756100                    STQ     10,,PR0

     1083    10897    6                     ALTRETURN;

  10897  2 002722   200042 221300                    LDX1  ! HOST,,AUTO
         2 002723   000000 702211                    TSX2  ! 0,X1

     1084    10898    6                     END;
     1085    10899    5                  B$JIT.ERR = '0'B;        /* Clear error                        */

  10899  2 002724   000012 450100                    STZ     10,,PR0

     1086    10900    6                  IF F$DCB.VOL = 1 THEN DO;

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:145  
  10900  2 002725   200013 471500                    LDP1    JDCB$,,AUTO
         2 002726   100043 236100                    LDQ     35,,PR1
         2 002727   777000 376003                    ANQ     -512,DU
         2 002730   001000 116003                    CMPQ    512,DU
         2 002731   002761 601000 2                  TNZ     s:10913

     1087    10901                       /* A one volume set                   */
     1088    10902    7                     IF SAVFSN = THISFSN AND SAVVOL = F$DCB.VOL THEN DO;

  10902  2 002732   200043 236100                    LDQ     SAVFSN,,AUTO
         2 002733   200022 116100                    CMPQ    THISFSN,,AUTO
         2 002734   002745 601000 2                  TNZ     s:10906
         2 002735   100043 236100                    LDQ     35,,PR1
         2 002736   000033 772000                    QRL     27
         2 002737   200044 116100                    CMPQ    SAVVOL,,AUTO
         2 002740   002745 601000 2                  TNZ     s:10906

     1089    10903    7                        B$JIT.ERR = E_NOFILE;

  10903  2 002741   000030 236000 1                  LDQ     E_NOFILE
         2 002742   000012 756100                    STQ     10,,PR0

     1090    10904    7                        ALTRETURN;

  10904  2 002743   200042 221300                    LDX1  ! HOST,,AUTO
         2 002744   000000 702211                    TSX2  ! 0,X1

     1091    10905    7                        END;
     1092    10906    7                     IF SAVFSN = 0 THEN DO;

  10906  2 002745   200043 235100                    LDA     SAVFSN,,AUTO
         2 002746   002754 601000 2                  TNZ     s:10910

     1093    10907    7                        SAVFSN = -1;

  10907  2 002747   000001 336007                    LCQ     1,DL
         2 002750   200043 756100                    STQ     SAVFSN,,AUTO
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:146  

     1094    10908    7                        SAVVOL = F$DCB.VOL;

  10908  2 002751   100043 236100                    LDQ     35,,PR1
         2 002752   000033 772000                    QRL     27
         2 002753   200044 756100                    STQ     SAVVOL,,AUTO

     1095    10909    7                        END;

     1096    10910    6                     CALL FPO$PEOV(-1) ALTRET(JUSTALT); /* Get to BOV   */

  10910  2 002754   000031 630400 3                  EPPR0   25
         2 002755   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002756   000000 701000 xent               TSX1    FPO$PEOV
         2 002757   002571 702000 2                  TSX2    JUSTALT

     1097    10911    6                     END;

  10911  2 002760   002767 710000 2                  TRA     s:10917

     1098    10912    6                  ELSE DO;                /* Resume search at first vol of set  */

     1099    10913    6                     F$DCB.SEZ_OK = %NO#;

  10913  2 002761   000010 236000 3                  LDQ     8
         2 002762   100064 356100                    ANSQ    52,,PR1

     1100    10914    6                     CALL FTR$CHNGVOLNR(1) ALTRET(JUSTALT);
             10914                              /* Get first volume       */

  10914  2 002763   000015 630400 3                  EPPR0   13
         2 002764   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002765   000000 701000 xent               TSX1    FTR$CHNGVOLNR
         2 002766   002571 702000 2                  TSX2    JUSTALT

     1101    10915    6                     END;

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:147  
     1102    10916    5                  END;

     1103    10917    4               DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;

  10917  2 002767   200013 470500                    LDP0    JDCB$,,AUTO
         2 002770   000051 720100                    LXL0    41,,PR0
         2 002771   000000 471400 xsym               LDP1    N$DCT$$
         2 002772   100000 473510                    LDP3    0,X0,PR1
         2 002773   300004 236100                    LDQ     4,,PR3
         2 002774   200007 756100                    STQ     DDDT$,,AUTO

     1104    10918    4               END;

     1105    10919    3            END;

  10919  2 002775   002521 710000 2                  TRA     s:10846

     1106    10920    2   END FPO_FINDFILE;
     1107    10921        /*********************************************************************/
     1108    10922        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:148  
     1109    10923        /*********************************************************************/
     1110    10924    1   FPO_SETTAPTYP: PROC;

  10924  2 002776   200042 741300       FPO_SETTAPT* STX1  ! HOST,,AUTO

     1111    10925        /*F*    NAME: FPO_SETTAPTYP
     1112    10926                PURPOSE: Sets up DCB.TAPTYP from DCB info, for optical disk.
     1113    10927         ***/
     1114    10928
     1115    10929        /********************/
     1116    10930
     1117    10931    2         F$DCB.DVBYTE = '0'B;              /* Not generally used for tapes       */

  10931  2 002777   200013 470500                    LDP0    JDCB$,,AUTO
         2 003000   000032 236000 3                  LDQ     26
         2 003001   000003 356100                    ANSQ    3,,PR0

     1118    10932    3         DO CASE(F$DCB.ORG);               /* Depends on ORG                     */

  10932  2 003002   200013 470500                    LDP0    JDCB$,,AUTO
         2 003003   000032 236100                    LDQ     26,,PR0
         2 003004   000033 772000                    QRL     27
         2 003005   000022 136007                    SBLQ    18,DL
         2 003006   000001 116007                    CMPQ    1,DL
         2 003007   003011 602006 2                  TNC     s:10932+7,QL
         2 003010   003030 710000 2                  TRA     s:10939
         2 003011   003012 710000 2                  TRA     s:10934

     1119    10933    3          CASE( %RESTRICT# );

     1120    10934    3            F$DCB.TAPTYP.RWASC = %NO#;

  10934  2 003012   000033 236000 3                  LDQ     27
         2 003013   000067 356100                    ANSQ    55,,PR0

     1121    10935    3            F$DCB.TAPTYP.CP6F = ~ NO_IFPARAM_RESTRICT;

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:149  
  10935  2 003014   200024 236100                    LDQ     NO_IFPARAM_RESTRICT,,AUTO
         2 003015   400000 376003                    ANQ     -131072,DU
         2 003016   400000 676003                    ERQ     -131072,DU
         2 003017   000012 772000                    QRL     10
         2 003020   000067 676100                    ERQ     55,,PR0
         2 003021   000200 376003                    ANQ     128,DU
         2 003022   000067 656100                    ERSQ    55,,PR0

     1122    10936    3            F$DCB.EBCDIC = %NO#;

  10936  2 003023   000004 236000 3                  LDQ     4
         2 003024   000031 356100                    ANSQ    25,,PR0

     1123    10937    3            F$DCB.CNVRT = %NO#;

  10937  2 003025   000014 236000 3                  LDQ     12
         2 003026   000031 356100                    ANSQ    25,,PR0
         2 003027   003034 710000 2                  TRA     s:10942

     1124    10938    3          CASE(ELSE);

     1125    10939    3            F$DCB.TAPTYP.RWASC = %NO#;     /* Read/write binary                  */

  10939  2 003030   000033 236000 3                  LDQ     27
         2 003031   000067 356100                    ANSQ    55,,PR0

     1126    10940    3            F$DCB.TAPTYP.CP6F = %YES#;     /* CP-6 format                        */

  10940  2 003032   000200 236003                    LDQ     128,DU
         2 003033   000067 256100                    ORSQ    55,,PR0

     1127    10941    3          END;

     1128    10942    2         IF F$DCB.ORG = %RESTRICT# THEN

  10942  2 003034   000032 236100                    LDQ     26,,PR0
         2 003035   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:150  
         2 003036   022000 116003                    CMPQ    9216,DU
         2 003037   003043 601000 2                  TNZ     s:10945

     1129    10943    2            F$DCB.TAPTYP.USRBUF = %YES#;   /* Read/write user buffer             */

  10943  2 003040   000100 236003                    LDQ     64,DU
         2 003041   000067 256100                    ORSQ    55,,PR0
         2 003042   003045 710000 2                  TRA     s:10946

     1130    10944    2         ELSE
     1131    10945    2            F$DCB.TAPTYP.USRBUF = %NO#;    /* Read/write FPOOL buffer            */

  10945  2 003043   000034 236000 3                  LDQ     28
         2 003044   000067 356100                    ANSQ    55,,PR0

     1132    10946    3         DO CASE(F$DCB.ORG);

  10946  2 003045   000032 236100                    LDQ     26,,PR0
         2 003046   000033 772000                    QRL     27
         2 003047   000023 116007                    CMPQ    19,DL
         2 003050   003052 602006 2                  TNC     s:10946+5,QL
         2 003051   003130 710000 2                  TRA     s:10959
         2 003052   003130 710000 2                  TRA     s:10959
         2 003053   003107 710000 2                  TRA     s:10952
         2 003054   003102 710000 2                  TRA     s:10950
         2 003055   003130 710000 2                  TRA     s:10959
         2 003056   003121 710000 2                  TRA     s:10956
         2 003057   003130 710000 2                  TRA     s:10959
         2 003060   003102 710000 2                  TRA     s:10950
         2 003061   003130 710000 2                  TRA     s:10959
         2 003062   003130 710000 2                  TRA     s:10959
         2 003063   003114 710000 2                  TRA     s:10954
         2 003064   003130 710000 2                  TRA     s:10959
         2 003065   003130 710000 2                  TRA     s:10959
         2 003066   003130 710000 2                  TRA     s:10959
         2 003067   003107 710000 2                  TRA     s:10952
         2 003070   003130 710000 2                  TRA     s:10959
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:151  
         2 003071   003130 710000 2                  TRA     s:10959
         2 003072   003130 710000 2                  TRA     s:10959
         2 003073   003130 710000 2                  TRA     s:10959
         2 003074   003075 710000 2                  TRA     s:10948

     1133    10947    3          CASE(%RESTRICT#);

     1134    10948    3            F$DCB.IORG = %RANDOM#;

  10948  2 003075   000070 236100                    LDQ     56,,PR0
         2 003076   000013 376000 3                  ANQ     11
         2 003077   003000 276003                    ORQ     1536,DU
         2 003100   000070 756100                    STQ     56,,PR0
         2 003101   003134 710000 2                  TRA     s:10961

     1135    10949    3          CASE(%KEYED#,%INDEXED#);

     1136    10950    3            F$DCB.IORG = %KEYED#;

  10950  2 003102   000070 236100                    LDQ     56,,PR0
         2 003103   000013 376000 3                  ANQ     11
         2 003104   002000 276003                    ORQ     1024,DU
         2 003105   000070 756100                    STQ     56,,PR0
         2 003106   003134 710000 2                  TRA     s:10961

     1137    10951    3          CASE(%CONSEC#,%IREL#);

     1138    10952    3            F$DCB.IORG = %CONSEC#;

  10952  2 003107   000070 236100                    LDQ     56,,PR0
         2 003110   000013 376000 3                  ANQ     11
         2 003111   001000 276003                    ORQ     512,DU
         2 003112   000070 756100                    STQ     56,,PR0
         2 003113   003134 710000 2                  TRA     s:10961

     1139    10953    3          CASE(%SYMB#);

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:152  
     1140    10954    3            F$DCB.IORG = %SYMB#;

  10954  2 003114   000070 236100                    LDQ     56,,PR0
         2 003115   000013 376000 3                  ANQ     11
         2 003116   011000 276003                    ORQ     4608,DU
         2 003117   000070 756100                    STQ     56,,PR0
         2 003120   003134 710000 2                  TRA     s:10961

     1141    10955    3          CASE(%UR#);

     1142    10956    3            F$DCB.IORG = %UR#;

  10956  2 003121   000070 236100                    LDQ     56,,PR0
         2 003122   000013 376000 3                  ANQ     11
         2 003123   004000 276003                    ORQ     2048,DU
         2 003124   000070 756100                    STQ     56,,PR0

     1143    10957    3            F$DCB.IFMT = FMTURFILE#;

  10957  2 003125   013000 236003                    LDQ     5632,DU
         2 003126   000103 552140                    STBQ    67,'40'O,PR0
         2 003127   003134 710000 2                  TRA     s:10961

     1144    10958    3          CASE(ELSE);

     1145    10959    3            F$DCB.IORG = %UNDEF#;

  10959  2 003130   000070 236100                    LDQ     56,,PR0
         2 003131   000013 376000 3                  ANQ     11
         2 003132   021000 276003                    ORQ     8704,DU
         2 003133   000070 756100                    STQ     56,,PR0

     1146    10960    3          END;

     1147    10961    2         F$DCB.DVBYTE.BIN = ~ F$DCB.TAPTYP.RWASC;

  10961  2 003134   000067 236100                    LDQ     55,,PR0
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:153  
         2 003135   000011 736000                    QLS     9
         2 003136   400000 376003                    ANQ     -131072,DU
         2 003137   400000 676003                    ERQ     -131072,DU
         2 003140   000003 772000                    QRL     3
         2 003141   000003 676100                    ERQ     3,,PR0
         2 003142   040000 376003                    ANQ     16384,DU
         2 003143   000003 656100                    ERSQ    3,,PR0

     1148    10962
     1149    10963    2         RETURN;

  10963  2 003144   200042 221300                    LDX1  ! HOST,,AUTO
         2 003145   000001 702211                    TSX2  ! 1,X1

     1150    10964
     1151    10965    2   END FPO_SETTAPTYP;
     1152    10966        /*********************************************************************/
     1153    10967        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:154  
     1154    10968        /*********************************************************************/
     1155    10969    1   FPO_CHK_BLKL_RECL: PROC ALTRET;

  10969  2 003146   200042 741300       FPO_CHK_BLK* STX1  ! HOST,,AUTO

     1156    10970        /*F*     NAME: FPO_CHK_BLKL_RECL
     1157    10971                 PURPOSE: Check (and possibly adjust) BLKL and RECL options.
     1158    10972         ***/
     1159    10973
     1160    10974        /********************/
     1161    10975
     1162    10976
     1163    10977    2         MAXBLKL = 4096 * (B$JIT.FBUL - 2); /* Minus 2 for label, a/m buffers     */

  10977  2 003147   000000 470400 xsym               LDP0    B$JIT$
         2 003150   000205 236100                    LDQ     133,,PR0
         2 003151   000014 736000                    QLS     12
         2 003152   000030 376000 3                  ANQ     24
         2 003153   020000 136007                    SBLQ    8192,DL
         2 003154   200037 756100                    STQ     MAXBLKL,,AUTO

     1164    10978    3         IF MAXBLKL <= 0 THEN DO;          /* Not enough FPOOLs                  */

  10978  2 003155   003162 605400 2                  TPNZ    s:10982

     1165    10979    3            B$JIT.ERR = E_NOFPOOL;         /*E* ERROR: FPO-E$NOFPOOL */

  10979  2 003156   000031 236000 1                  LDQ     E_NOFPOOL
         2 003157   000012 756100                    STQ     10,,PR0

     1166    10980    3            ALTRETURN;

  10980  2 003160   200042 221300                    LDX1  ! HOST,,AUTO
         2 003161   000000 702211                    TSX2  ! 0,X1

     1167    10981    3            END;
     1168    10982    2         IF MAXBLKL > 99996 THEN
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:155  

  10982  2 003162   303234 116007                    CMPQ    99996,DL
         2 003163   003166 604400 2                  TMOZ    s:10990

     1169    10983    2            MAXBLKL = 99996;            /* Limit size to word bound < 99999   */

  10983  2 003164   303234 235007                    LDA     99996,DL
         2 003165   200037 755100                    STA     MAXBLKL,,AUTO

     1170    10984
     1171    10985         /***
     1172    10986
     1173    10987          *** Process create open depending on file org.
     1174    10988          ***/
     1175    10989
     1176    10990    3         DO CASE(F$DCB.ORG);

  10990  2 003166   200013 471500                    LDP1    JDCB$,,AUTO
         2 003167   100032 236100                    LDQ     26,,PR1
         2 003170   000033 772000                    QRL     27
         2 003171   000023 116007                    CMPQ    19,DL
         2 003172   003174 602006 2                  TNC     s:10990+6,QL
         2 003173   003217 710000 2                  TRA     s:10993
         2 003174   003217 710000 2                  TRA     s:10993
         2 003175   003314 710000 2                  TRA     CONSECORG
         2 003176   003314 710000 2                  TRA     CONSECORG
         2 003177   003217 710000 2                  TRA     s:10993
         2 003200   003314 710000 2                  TRA     CONSECORG
         2 003201   003217 710000 2                  TRA     s:10993
         2 003202   003314 710000 2                  TRA     CONSECORG
         2 003203   003217 710000 2                  TRA     s:10993
         2 003204   003217 710000 2                  TRA     s:10993
         2 003205   003314 710000 2                  TRA     CONSECORG
         2 003206   003217 710000 2                  TRA     s:10993
         2 003207   003217 710000 2                  TRA     s:10993
         2 003210   003217 710000 2                  TRA     s:10993
         2 003211   003314 710000 2                  TRA     CONSECORG
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:156  
         2 003212   003217 710000 2                  TRA     s:10993
         2 003213   003217 710000 2                  TRA     s:10993
         2 003214   003217 710000 2                  TRA     s:10993
         2 003215   003217 710000 2                  TRA     s:10993
         2 003216   003222 710000 2                  TRA     s:10997

     1177    10991
     1178    10992    3          CASE(ELSE);

     1179    10993    3            F$DCB.ORG = %CONSEC#;

  10993  2 003217   001000 236003                    LDQ     512,DU
         2 003220   100032 552140                    STBQ    26,'40'O,PR1

     1180    10994    3            GOTO CONSECORG;

  10994  2 003221   003314 710000 2                  TRA     CONSECORG

     1181    10995
     1182    10996    3          CASE(%RESTRICT#);

     1183    10997    4            IF NOT B$JIT.PRIV.ACTIVE & %PR_FMBLK# THEN DO;

  10997  2 003222   000013 236100                    LDQ     11,,PR0
         2 003223   000052 376000 1                  ANQ     E_WRITEPROT+4
         2 003224   003231 601000 2                  TNZ     s:11002

     1184    10998                                                /* Not allowed to access RESTRICT     */
     1185    10999    4               B$JIT.ERR = E_NORESTRICT; /*E* ERROR: FPO-E$NORESTRICT */

  10999  2 003225   000033 236000 1                  LDQ     E_NORESTRICT
         2 003226   000012 756100                    STQ     10,,PR0

     1186    11000    4               ALTRETURN;

  11000  2 003227   200042 221300                    LDX1  ! HOST,,AUTO
         2 003230   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:157  

     1187    11001    4               END;
     1188    11002    3            NO_IFPARAM_RESTRICT = %NO#; /* Assume FIT specified               */

  11002  2 003231   200024 450100                    STZ     NO_IFPARAM_RESTRICT,,AUTO

     1189    11003    3            CALL HFF$DSIZ(POFFW(ADDR(PN$.IFPARAM_),ADDR(PN$.V_)),I) ALTRET(NOIFPARAM);

  11003  2 003232   200003 236100                    LDQ     @PN$,,AUTO
         2 003233   000022 772000                    QRL     18
         2 003234   200046 756100                    STQ     SAVVOL+2,,AUTO
         2 003235   200003 236100                    LDQ     @PN$,,AUTO
         2 003236   000013 036003                    ADLQ    11,DU
         2 003237   000022 772000                    QRL     18
         2 003240   200046 136100                    SBLQ    SAVVOL+2,,AUTO
         2 003241   200047 756100                    STQ     SAVVOL+3,,AUTO
         2 003242   200011 633500                    EPPR3   I,,AUTO
         2 003243   200051 453500                    STP3    SAVVOL+5,,AUTO
         2 003244   200047 634500                    EPPR4   SAVVOL+3,,AUTO
         2 003245   200050 454500                    STP4    SAVVOL+4,,AUTO
         2 003246   200050 630500                    EPPR0   SAVVOL+4,,AUTO
         2 003247   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 003250   000000 701000 xent               TSX1    HFF$DSIZ
         2 003251   003263 702000 2                  TSX2    NOIFPARAM

     1190    11004    3            TEMP$ = PN$.IFPARAM_;       /* Get pointer to IFPARAM             */

  11004  2 003252   200003 470500                    LDP0    @PN$,,AUTO
         2 003253   000013 236100                    LDQ     11,,PR0
         2 003254   200036 756100                    STQ     TEMP$,,AUTO

     1191    11005    3            IF TEMP$ = ADDR(NIL) THEN I = 0; /* Might be default open            */

  11005  2 003255   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 003256   003260 601000 2                  TNZ     s:11006

  11005  2 003257   200011 450100                    STZ     I,,AUTO
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:158  

     1192    11006    4            IF I < 4096 THEN DO;

  11006  2 003260   200011 235100                    LDA     I,,AUTO
         2 003261   010000 115007                    CMPA    4096,DL
         2 003262   003265 605000 2                  TPL     s:11010

  11003  2 003263                       NOIFPARAM    null
     1193    11007    4   NOIFPARAM:  ;
     1194    11008    4               NO_IFPARAM_RESTRICT = %YES#;

  11008  2 003263   400000 236003                    LDQ     -131072,DU
         2 003264   200024 756100                    STQ     NO_IFPARAM_RESTRICT,,AUTO

     1195    11009    4               END;

     1196    11010    3            IF F$DCB.BLKL < 4096 THEN

  11010  2 003265   200013 470500                    LDP0    JDCB$,,AUTO
         2 003266   000033 220100                    LDX0    27,,PR0
         2 003267   010000 100003                    CMPX0   4096,DU
         2 003270   003274 603000 2                  TRC     s:11012

     1197    11011    3               F$DCB.BLKL = 4096;

  11011  2 003271   010000 221003                    LDX1    4096,DU
         2 003272   000033 741100                    STX1    27,,PR0
         2 003273   003303 710000 2                  TRA     s:11013

     1198    11012    3            ELSE F$DCB.BLKL = ((F$DCB.BLKL + 4095) / 4096) * 4096;

  11012  2 003274   000033 236100                    LDQ     27,,PR0
         2 003275   000022 772000                    QRL     18
         2 003276   007777 036007                    ADLQ    4095,DL
         2 003277   000014 772000                    QRL     12
         2 003300   000014 736000                    QLS     12
         2 003301   000000 621006                    EAX1    0,QL
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:159  
         2 003302   000033 741100                    STX1    27,,PR0

     1199    11013    3            F$DCB.BOL = 0;                 /* No BOL                             */

  11013  2 003303   000000 236003                    LDQ     0,DU
         2 003304   000034 552104                    STBQ    28,'04'O,PR0

     1200    11014    3            F$DCB.BLOCKED = %NO#;          /* Not blocked                        */

  11014  2 003305   000025 236000 3                  LDQ     21
         2 003306   000031 356100                    ANSQ    25,,PR0

     1201    11015    3            F$DCB.SPANNED = %NO#;          /* Not spanned                        */

  11015  2 003307   000024 236000 3                  LDQ     20
         2 003310   000031 356100                    ANSQ    25,,PR0

     1202    11016    3            F$DCB.RECL = 4096;             /* One granule per record             */

  11016  2 003311   010000 220003                    LDX0    4096,DU
         2 003312   000033 440100                    SXL0    27,,PR0
         2 003313   003373 710000 2                  TRA     s:11038

     1203    11017
     1204    11018    3          CASE(%CONSEC#,%KEYED#,%UR#,%INDEXED#,%SYMB#,%IREL#);

  11016  2 003314                       CONSECORG    null
     1205    11019    3   CONSECORG: ;
     1206    11020    3            F$DCB.BOL = 4;

  11020  2 003314   000004 236007                    LDQ     4,DL
         2 003315   100034 552104                    STBQ    28,'04'O,PR1

     1207    11021    3            F$DCB.SPANNED = %YES#;         /* Always spanned                     */

  11021  2 003316   100031 256100                    ORSQ    25,,PR1

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:160  
     1208    11022    3            F$DCB.BLOCKED = %YES#;         /* Always blocked                     */

  11022  2 003317   000010 236007                    LDQ     8,DL
         2 003320   100031 256100                    ORSQ    25,,PR1

     1209    11023    4            DO CASE(F$DCB.ORG);

  11023  2 003321   100032 236100                    LDQ     26,,PR1
         2 003322   000033 772000                    QRL     27
         2 003323   000004 136007                    SBLQ    4,DL
         2 003324   000006 116007                    CMPQ    6,DL
         2 003325   003327 602006 2                  TNC     s:11023+6,QL
         2 003326   003346 710000 2                  TRA     s:11029
         2 003327   003343 710000 2                  TRA     s:11027
         2 003330   003346 710000 2                  TRA     s:11029
         2 003331   003335 710000 2                  TRA     s:11025
         2 003332   003346 710000 2                  TRA     s:11029
         2 003333   003346 710000 2                  TRA     s:11029
         2 003334   003343 710000 2                  TRA     s:11027

     1210    11024    4             CASE(%INDEXED#);

     1211    11025    4               IF F$DCB.KEYL < 1 THEN F$DCB.KEYL = 1;

  11025  2 003335   100036 236100                    LDQ     30,,PR1
         2 003336   777000 316007                    CANQ    -512,DL
         2 003337   003346 601000 2                  TNZ     s:11029

  11025  2 003340   001000 236007                    LDQ     512,DL
         2 003341   100036 552110                    STBQ    30,'10'O,PR1
         2 003342   003346 710000 2                  TRA     s:11029

     1212    11026    4             CASE(%UR#,%SYMB#);

     1213    11027    4               CALL FSF$TAPEFORM ALTRET(JUSTALT); /*Establish FORM info             */

  11027  2 003343   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:161  
         2 003344   000000 701000 xent               TSX1    FSF$TAPEFORM
         2 003345   003375 702000 2                  TSX2    JUSTALT

     1214    11028    4             END;

     1215    11029    3            F$DCB.RECL = 0;                /* Undetermined maximum record length */

  11029  2 003346   000000 220003                    LDX0    0,DU
         2 003347   200013 470500                    LDP0    JDCB$,,AUTO
         2 003350   000033 440100                    SXL0    27,,PR0

     1216    11030    3            IF F$DCB.BLKL < 4096 THEN

  11030  2 003351   000033 221100                    LDX1    27,,PR0
         2 003352   010000 101003                    CMPX1   4096,DU
         2 003353   003357 603000 2                  TRC     s:11032

     1217    11031    3               F$DCB.BLKL = 4096;       /* Minimum                            */

  11031  2 003354   010000 222003                    LDX2    4096,DU
         2 003355   000033 742100                    STX2    27,,PR0
         2 003356   003373 710000 2                  TRA     s:11038

     1218    11032    3            ELSE IF F$DCB.BLKL > MAXBLKL

  11032  2 003357   000033 236100                    LDQ     27,,PR0
         2 003360   000022 772000                    QRL     18
         2 003361   200037 116100                    CMPQ    MAXBLKL,,AUTO
         2 003362   003366 604400 2                  TMOZ    s:11034

     1219    11033    3               THEN F$DCB.BLKL = MAXBLKL;  /* Maximum                            */

  11033  2 003363   200037 722100                    LXL2    MAXBLKL,,AUTO
         2 003364   000033 742100                    STX2    27,,PR0
         2 003365   003373 710000 2                  TRA     s:11038

     1220    11034    3               ELSE F$DCB.BLKL = ( (F$DCB.BLKL + 4095) / 4096 ) * 4096;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:162  

  11034  2 003366   007777 036007                    ADLQ    4095,DL
         2 003367   000014 772000                    QRL     12
         2 003370   000014 736000                    QLS     12
         2 003371   000000 622006                    EAX2    0,QL
         2 003372   000033 742100                    STX2    27,,PR0

     1221    11035                                                /* To nearest page size               */
     1222    11036
     1223    11037    3          END /* DO CASE(F$DCB.ORG); */ ;

     1224    11038    2         RETURN;

  11038  2 003373   200042 221300                    LDX1  ! HOST,,AUTO
         2 003374   000001 702211                    TSX2  ! 1,X1

  11030  2 003375                       JUSTALT      null
     1225    11039
     1226    11040    2   JUSTALT: ;
     1227    11041    2         ALTRETURN;

  11041  2 003375   200042 221300                    LDX1  ! HOST,,AUTO
         2 003376   000000 702211                    TSX2  ! 0,X1

     1228    11042
     1229    11043    2   END FPO_CHK_BLKL_RECL;
     1230    11044        /*********************************************************************/
     1231    11045        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:163  
     1232    11046        /*********************************************************************/
     1233    11047        /*F*
     1234    11048              NAME: FPO_DPT
     1235    11049              PURPOSE: To perform access checking on OD volume.
     1236    11050        */
     1237    11051
     1238    11052    1   FPO_DPT: PROC ALTRET;

  11052  2 003377   200042 741300       FPO_DPT      STX1  ! HOST,,AUTO

     1239    11053
     1240    11054
     1241    11055
     1242    11056    2         IF NOT (B$JIT.PRIV.ACTIVE & %PR_FMSEC#) AND

  11056  2 003400   000000 470400 xsym               LDP0    B$JIT$
         2 003401   000013 236100                    LDQ     11,,PR0
         2 003402   000053 376000 1                  ANQ     E_WRITEPROT+5
         2 003403   003446 601000 2                  TNZ     s:11073
         2 003404   200007 471500                    LDP1    DDDT$,,AUTO
         2 003405   040100 106500                    CMPC    fill='040'O
         2 003406   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         2 003407   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         2 003410   003446 600000 2                  TZE     s:11073

     1243    11057    3            B$JIT.ACCN ~= FT$DDT.ACCT THEN DO;

     1244    11058    4            DO CASE(FT$DDT.VOLACCESS);

  11058  2 003411   100007 720100                    LXL0    7,,PR1
         2 003412   000003 360003                    ANX0    3,DU
         2 003413   000004 100003                    CMPX0   4,DU
         2 003414   003416 602010 2                  TNC     s:11058+5,X0
         2 003415   003446 710000 2                  TRA     s:11073
         2 003416   003446 710000 2                  TRA     s:11073
         2 003417   003446 710000 2                  TRA     s:11073
         2 003420   003436 710000 2                  TRA     s:11065
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:164  
         2 003421   003422 710000 2                  TRA     s:11060

     1245    11059    4             CASE(%NONE#);      /* Owner doesn't want anyone else to use it     */

     1246    11060    5               IF NOT (B$JIT.PRIV.ACTIVE & %PR_FMBLK# AND F$DCB.FUN = %IN#) THEN DO;

  11060  2 003422   000013 236100                    LDQ     11,,PR0
         2 003423   000052 376000 1                  ANQ     E_WRITEPROT+4
         2 003424   003432 600000 2                  TZE     s:11061
         2 003425   200013 473500                    LDP3    JDCB$,,AUTO
         2 003426   300032 236100                    LDQ     26,,PR3
         2 003427   000777 376003                    ANQ     511,DU
         2 003430   000002 116003                    CMPQ    2,DU
         2 003431   003446 600000 2                  TZE     s:11073

     1247    11061    5                  B$JIT.ERR = E_NOTOWNR; /*E* ERROR: FPO-E$NOTOWNR */

  11061  2 003432   000035 236000 1                  LDQ     E_NOTOWNR
         2 003433   000012 756100                    STQ     10,,PR0

     1248    11062    5                  ALTRETURN;

  11062  2 003434   200042 221300                    LDX1  ! HOST,,AUTO
         2 003435   000000 702211                    TSX2  ! 0,X1

     1249    11063    5                  END;
     1250    11064    4             CASE(%IN#);                  /* Owner only permits readers         */

     1251    11065    5               IF F$DCB.NOEOF THEN DO;

  11065  2 003436   200013 473500                    LDP3    JDCB$,,AUTO
         2 003437   300064 236100                    LDQ     52,,PR3
         2 003440   400000 316007                    CANQ    -131072,DL
         2 003441   003446 600000 2                  TZE     s:11073

     1252    11066    5                  B$JIT.ERR = E_NOTOWNRW; /*E* ERROR: FPO-E$NOTOWNRW */

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:165  
  11066  2 003442   000036 236000 1                  LDQ     E_NOTOWNRW
         2 003443   000012 756100                    STQ     10,,PR0

     1253    11067    5                  ALTRETURN;

  11067  2 003444   200042 221300                    LDX1  ! HOST,,AUTO
         2 003445   000000 702211                    TSX2  ! 0,X1

     1254    11068    5                  END;
     1255    11069    4             CASE(0,%ALL#);               /* Owner doesn't care or permits all  */

     1256    11070    4             CASE(ELSE);                  /* Permit all...owner strange         */

     1257    11071    4             END;

     1258    11072    3            END;

     1259    11073    2         RETURN;

  11073  2 003446   000001 702211                    TSX2  ! 1,X1

     1260    11074    2   END FPO_DPT;
     1261    11075        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:166  
     1262    11076    1   FPO_LBLINIT: PROC ALTRET;

  11076  2 003447   200042 741300       FPO_LBLINIT  STX1  ! HOST,,AUTO

     1263    11077
     1264    11078        /*F*    NAME: FPO_LBLINIT
     1265    11079                PURPOSE: Find label FPOOL buffer for label write.
     1266    11080         ***/
     1267    11081
     1268    11082
     1269    11083         /*    An FPOOL buffer must be available to create the label in.  */
     1270    11084    2         I = F$DCB.LPOOL - 1;              /* Calc ix of label FPOOL buffer      */

  11084  2 003450   200013 470500                    LDP0    JDCB$,,AUTO
         2 003451   000067 236100                    LDQ     55,,PR0
         2 003452   000036 772000                    QRL     30
         2 003453   000007 376007                    ANQ     7,DL
         2 003454   000001 136007                    SBLQ    1,DL
         2 003455   200011 756100                    STQ     I,,AUTO

     1271    11085    3         IF I >= 0 THEN DO;

  11085  2 003456   003467 604000 2                  TMI     s:11091

     1272    11086              /* FPOOL buffer for label processing already obtained     */
     1273    11087    3            LBL1$ = FM$BUF$(F$DCB.BFR.BUFX(I)); /* Get pointer                      */

  11087  2 003457   000115 236106                    LDQ     77,QL,PR0
         2 003460   000033 772000                    QRL     27
         2 003461   000037 376007                    ANQ     31,DL
         2 003462   000000 236006 xsym               LDQ     FM$BUF$,QL
         2 003463   200016 756100                    STQ     LBL1$,,AUTO

     1274    11088    3            LBL2$ = PINCRC( LBL1$, 80 );   /* Get pointer to second label        */

  11088  2 003464   000024 036003                    ADLQ    20,DU
         2 003465   200017 756100                    STQ     LBL2$,,AUTO
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:167  

     1275    11089    3            RETURN;

  11089  2 003466   000001 702211                    TSX2  ! 1,X1

     1276    11090    3            END;
     1277    11091    3         DO I=0 TO 4;

  11091  2 003467   200011 450100                    STZ     I,,AUTO

     1278    11092    4            IF F$DCB.BFR.BUFX(I) = 0 THEN DO;

  11092  2 003470   200013 470500                    LDP0    JDCB$,,AUTO
         2 003471   200011 720100                    LXL0    I,,AUTO
         2 003472   000115 236110                    LDQ     77,X0,PR0
         2 003473   037000 316003                    CANQ    15872,DU
         2 003474   003523 601000 2                  TNZ     s:11099

     1279    11093                 /* Found an FPOOL buffer              */
     1280    11094    4               CALL FMD$GETBUF( I, 1, LBL1$ ); /* Get FPOOL buffer                  */

  11094  2 003475   200016 631500                    EPPR1   LBL1$,,AUTO
         2 003476   200050 451500                    STP1    SAVVOL+4,,AUTO
         2 003477   000015 236000 3                  LDQ     13
         2 003500   200047 756100                    STQ     SAVVOL+3,,AUTO
         2 003501   200011 633500                    EPPR3   I,,AUTO
         2 003502   200046 453500                    STP3    SAVVOL+2,,AUTO
         2 003503   200046 630500                    EPPR0   SAVVOL+2,,AUTO
         2 003504   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 003505   000000 701000 xent               TSX1    FMD$GETBUF
         2 003506   000000 011000                    NOP     0

     1281    11095    4               LBL2$ = PINCRC( LBL1$, 80 ); /* Get pointer to second label        */

  11095  2 003507   200016 236100                    LDQ     LBL1$,,AUTO
         2 003510   000024 036003                    ADLQ    20,DU
         2 003511   200017 756100                    STQ     LBL2$,,AUTO
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:168  

     1282    11096    4               F$DCB.LPOOL = I + 1;        /* Remember label FPOOL buffer        */

  11096  2 003512   200013 470500                    LDP0    JDCB$,,AUTO
         2 003513   200011 236100                    LDQ     I,,AUTO
         2 003514   000001 036007                    ADLQ    1,DL
         2 003515   000036 736000                    QLS     30
         2 003516   000067 676100                    ERQ     55,,PR0
         2 003517   070000 376003                    ANQ     28672,DU
         2 003520   000067 656100                    ERSQ    55,,PR0

     1283    11097    4               RETURN;

  11097  2 003521   200042 221300                    LDX1  ! HOST,,AUTO
         2 003522   000001 702211                    TSX2  ! 1,X1

     1284    11098    4               END;
     1285    11099    3            END;

  11099  2 003523   200011 054100                    AOS     I,,AUTO
         2 003524   200011 235100                    LDA     I,,AUTO
         2 003525   000004 115007                    CMPA    4,DL
         2 003526   003470 604400 2                  TMOZ    s:11092

     1286    11100
     1287    11101    2         B$JIT.ERR = E_NOFPOOL; /*E* ERROR: FPO-E$NOFPOOL */

  11101  2 003527   000031 236000 1                  LDQ     E_NOFPOOL
         2 003530   000000 471400 xsym               LDP1    B$JIT$
         2 003531   100012 756100                    STQ     10,,PR1

     1288    11102    2         ALTRETURN;

  11102  2 003532   200042 221300                    LDX1  ! HOST,,AUTO
         2 003533   000000 702211                    TSX2  ! 0,X1

FT_FORMAT
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:169  
 Sect OctLoc
   1     000   104123 126106   125*** ******                                    DSVFU...

FT_CP6FMT
 Sect OctLoc
   1     002   103113 122130   170106 111104   125123 151***                    CKRXxFIDUSi.

FT_CP6FMTORG
 Sect OctLoc
   1     005   001002 003022   022005 006007   004011 015***                    ............

FPT_PFIL_EOF
 Sect OctLoc
   1     010   000001 777640   000012 006000   000000 000000   000000 000000    ................

E_BADFEP
 Sect OctLoc
   1     014   062017 416722                                                    2...

E_BADFSN
 Sect OctLoc
   1     015   062017 413122                                                    2..R

E_BADODFORMAT
 Sect OctLoc
   1     016   062017 432162                                                    2..r

(unnamed)
 Sect OctLoc
   1     017   062017 412772                                                    2...

E_EOSET
 Sect OctLoc
   1     020   062017 413142                                                    2..b

(unnamed)
 Sect OctLoc
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:170  
   1     021   062017 413372                                                    2...

E_INVLDFUN
 Sect OctLoc
   1     022   062017 402632                                                    2...

E_INVLDORG
 Sect OctLoc
   1     023   062017 402642                                                    2...

E_IOERR
 Sect OctLoc
   1     024   062017 400102                                                    2..B

E_NOACCESS
 Sect OctLoc
   1     025   062017 401642                                                    2...

(unnamed)
 Sect OctLoc
   1     026   062017 401572                                                    2...

E_NOFIDTHIS
 Sect OctLoc
   1     027   062017 413112                                                    2..J

E_NOFILE
 Sect OctLoc
   1     030   062017 401612                                                    2...

E_NOFPOOL
 Sect OctLoc
   1     031   062017 413202                                                    2...

(unnamed)
 Sect OctLoc
   1     032   062017 413362                                                    2...
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:171  

E_NORESTRICT
 Sect OctLoc
   1     033   062017 413012                                                    2...

E_NOSN
 Sect OctLoc
   1     034   062017 413062                                                    2..2

E_NOTOWNR
 Sect OctLoc
   1     035   062017 413502                                                    2...

E_NOTOWNRW
 Sect OctLoc
   1     036   062017 413512                                                    2...

E_ODEMPTYENT
 Sect OctLoc
   1     037   062017 432152                                                    2..j

(unnamed)
 Sect OctLoc
   1     040   062017 413422                                                    2...

E_SECTERR
 Sect OctLoc
   1     041   062017 413412                                                    2...

(unnamed)
 Sect OctLoc
   1     042   062017 413262                                                    2...

E_VOLORDER
 Sect OctLoc
   1     043   062017 413302                                                    2...

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:172  
E_VOLOUT
 Sect OctLoc
   1     044   062017 413272                                                    2...

(unnamed)
 Sect OctLoc
   1     045   062017 413172                                                    2..z

E_WRITEPROT
 Sect OctLoc
   1     046   062017 432172                                                    2..z

(unnamed)
 Sect OctLoc
   1     047   117104 040040   040040 040040   110104 122040   200000 000000    OD      HDR ....
   1     053   100000 000000                                                    @...

(unnamed)
 Sect OctLoc
   3     000   000000 000100   000000 006000   777737 777777   777777 777775    ...@............
   3     004   777777 677777   777777 777737   077777 777777   777777 777763    ........?.......
   3     010   777773 777777   777777 777617   777577 777777   700777 777777    ................
   3     014   777777 577777   000003 006000   777777 774377   000051 006000    .............)..
   3     020   000000 000200   000007 770000   000002 006000   777777 377777    ................
   3     024   777777 777773   777777 777767   000007 777770   000012 400000    ................
   3     030   007777 770000   000027 006000   001777 777777   777377 777777    ................
   3     034   777677 777777                                                    ....
     1289    11103    2   END FPO_LBLINIT;
     1290    11104        %EJECT;
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:173  
     1291    11105        /********************************************************************/
     1292    11106    1   END FPO$OPNOD;
     1293    11107        %EOD;

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:174  
--  Include file information  --

   P_ERRORS_C.:E05TOU  is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   NK$LDCT.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FT_SUBS.:E05TOU  is referenced.
   FT$RECS.:E05TOU  cannot be made into a system file and is referenced.
   FT$LBLS.:E05TOU  cannot be made into a system file and is referenced.
   FT$DDT.:E05TOU  is referenced.
   FR$RAT.:E05TOU  is referenced.
   FR_SUBS.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   FM_BUF_R.:E05TOU  cannot be made into a system file and is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F_FMTCODE_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F$CP6P_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FPO$OPNOD.
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:175  

 **** Variables and constants ****

  ****  Section 001 RoData FPO$OPNOD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    14-0-0/b STRC        r     1 E_BADFEP                  15-0-0/b STRC        r     1 E_BADFSN
    16-0-0/b STRC        r     1 E_BADODFORMAT             20-0-0/b STRC        r     1 E_EOSET
    22-0-0/b STRC        r     1 E_INVLDFUN                23-0-0/b STRC        r     1 E_INVLDORG
    24-0-0/b STRC        r     1 E_IOERR                   25-0-0/b STRC        r     1 E_NOACCESS
    27-0-0/b STRC        r     1 E_NOFIDTHIS               30-0-0/b STRC        r     1 E_NOFILE
    31-0-0/b STRC        r     1 E_NOFPOOL                 33-0-0/b STRC        r     1 E_NORESTRICT
    34-0-0/b STRC        r     1 E_NOSN                    35-0-0/b STRC        r     1 E_NOTOWNR
    36-0-0/b STRC        r     1 E_NOTOWNRW                37-0-0/b STRC        r     1 E_ODEMPTYENT
    41-0-0/b STRC        r     1 E_SECTERR                 43-0-0/b STRC        r     1 E_VOLORDER
    44-0-0/b STRC        r     1 E_VOLOUT                  46-0-0/b STRC        r     1 E_WRITEPROT
    10-0-0/d STRC(144)   r     1 FPT_PFIL_EOF
     2-0-0/b UBIN(9)     r     1 FT_CP6FMT(0:10)
     5-0-0/b UBIN(9)     r     1 FT_CP6FMTORG(0:10)
     0-0-0/b UBIN(9)     r     1 FT_FORMAT(0:4)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PN$                       4-0-0/w PTR         r     1 AFPOOL$
     6-0-0/w SBIN        r     1 CREATE_DATE_UTS            7-0-0/w PTR         r     1 DDDT$
    10-0-0/w STRC        r     1 ERRSAV                    41-0-0/w UBIN        r     1 FEI
    25-0-0/w CHAR(31)    r     1 FILE_NAME                 35-0-0/w SBIN        r     1 FILE_SEQ
    42-0-0/b BIT         r     1 HOST                      11-0-0/w SBIN        r     1 I
    12-0-0/w SBIN        r     1 J                         13-0-0/w PTR         r     1 JDCB$
    16-0-0/w PTR         r     1 LBL1$                     17-0-0/w PTR         r     1 LBL2$
    37-0-0/w SBIN        r     1 MAXBLKL                   44-0-0/w PTR         r     1 MNTDCT$
    24-0-0/b BIT         r     1 NO_IFPARAM_RESTRICT       15-0-0/w PTR         r     1 O$
    43-0-0/w PTR         r     1 O$                        *0-0-0/w STRC(684)   r     1 PN$
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:176  
    43-0-0/w SBIN        r     1 SAVFSN                    44-0-0/w UBIN        r     1 SAVVOL
    21-0-0/b BIT         r     1 SECTFIND                  20-0-0/w SBIN        r     1 SKIPS
    36-0-0/w PTR         r     1 TEMP$                     23-0-0/w SBIN        r     1 THISFSECT
    22-0-0/w SBIN        r     1 THISFSN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FM$BUF$(0:31)
     0-0-0/w PTR         r     1 FR$HD$(0:0)                0-0-0/w PTR         r     1 KI_ROUTE$$
     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w PTR         r     1 N$FQ$
     0-0-0/w PTR         r     1 NI$FQ$                     0-0-0/w PTR         r     1 NI$IBUF$
     0-0-0/w PTR         r     1 NI$RP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(135)   r     1 CODE02
     0-0-0/w STRC(324)   r     1 CODE03                     0-0-0/w STRC(1404)  r     1 CODE16
     0-0-0/w STRC(1332)  r     1 DCT                        0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(1116)  r     1 FM$FIT                     0-0-0/w STRC(180)   r     1 FM$GRAN
     0-0-0/d STRC(756)   r     1 FPT$OPEN_V                 0-0-0/w STRC(324)   r     1 FR$RAT
     0-0-0/w STRC(288)   r     1 FT$DDT                     0-0-0/c STRC        r     1 FT$HDR
     0-0-0/c ASTR(9)     r     1 FT$KEY                     0-0-0/c STRC(720)   r     1 FT$LBL1
     0-0-0/c STRC(720)   r     1 FT$LBL2                    0-0-0/w STRC(216)   r     1 KI$ROUTE
     0-0-0/w PTR         r     1 KI$ROUTE$(0:0)
     0-0-0/w PTR         r     1 N$DCT$(0:0)                0-0-0/w STRC(648)   r     1 NI$DQH
     0-0-0/d STRC(864)   r     1 NK$LDCT
     0-0-0/w PTR         r     1 NK$LDCT$(0:0)
     0-0-0/c CHAR(6)     r     1 SER

PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:177  

   Procedure FPO$OPNOD requires 1884 words for executable code.
   Procedure FPO$OPNOD requires 42 words of local(AUTO) storage.
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:178  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:179  
          MINI XREF LISTING

AFPOOL$
      9660**DCL     10588<<ASSIGN  10589>>CALLBLT 10591>>CALLBLT 10594>>ASSIGN  10596>>ASSIGN  10649>>IF
     10650>>CALL    10658<>CALL    10660>>ASSIGN  10660>>ASSIGN  10662>>ASSIGN  10704<<ASSIGN  10706<>CALL
     10707>>ASSIGN  10708>>ASSIGN  10717<<ASSIGN  10719<>CALL    10720>>ASSIGN
ATTEMPT_OPEN_EXISTING IN PROCEDURE FPO_OPNEXISTING
     10538**LABEL   10683--GOTO
B$JIT.ACCN
       343**DCL     11056>>IF
B$JIT.DCB$
       440**DCL     10179>>ASSIGN  10260>>ASSIGN  10752>>ASSIGN
B$JIT.ERR
       343**DCL     10198<<ASSIGN  10214<<ASSIGN  10274<<ASSIGN  10336<<ASSIGN  10355<<ASSIGN  10404>>IF
     10408<<ASSIGN  10418<<ASSIGN  10438<<ASSIGN  10446<<ASSIGN  10492>>ASSIGN  10494<<ASSIGN  10513>>IF
     10517<<ASSIGN  10528<<ASSIGN  10533<<ASSIGN  10543<<ASSIGN  10573<<ASSIGN  10644<<ASSIGN  10671<<ASSIGN
     10675<<ASSIGN  10676>>IF      10677>>ASSIGN  10678<<ASSIGN  10680<<ASSIGN  10734>>ASSIGN  10737<<ASSIGN
     10783<<ASSIGN  10785<<ASSIGN  10787<<ASSIGN  10802<<ASSIGN  10809<<ASSIGN  10814<<ASSIGN  10816<<ASSIGN
     10860<<ASSIGN  10864<<ASSIGN  10870<<ASSIGN  10880<<ASSIGN  10896<<ASSIGN  10899<<ASSIGN  10903<<ASSIGN
     10979<<ASSIGN  10999<<ASSIGN  11061<<ASSIGN  11066<<ASSIGN  11101<<ASSIGN
B$JIT.ERR.CODE
       344**DCL     10728>>IF      10806>>ASSIGN  10886>>IF      10889>>ASSIGN
B$JIT.ERR.MID
       344**DCL       344--REDEF
B$JIT.FBUL
       432**DCL     10674>>IF      10977>>ASSIGN
B$JIT.JRESPEAK
       434**DCL       435--REDEF
B$JIT.PRIV.ACTIVE
       344**DCL     10670>>IF      10997>>IF      11056>>IF      11060>>IF
B$JIT.SYSID
       343**DCL     10265>>IF
B$JIT$
      9551**DCL       338--IMP-PTR 10179>>ASSIGN  10198>>ASSIGN  10214>>ASSIGN  10260>>ASSIGN  10265>>IF
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:180  
     10274>>ASSIGN  10336>>ASSIGN  10355>>ASSIGN  10404>>IF      10408>>ASSIGN  10418>>ASSIGN  10438>>ASSIGN
     10446>>ASSIGN  10492>>ASSIGN  10494>>ASSIGN  10513>>IF      10517>>ASSIGN  10528>>ASSIGN  10533>>ASSIGN
     10543>>ASSIGN  10573>>ASSIGN  10644>>ASSIGN  10670>>IF      10671>>ASSIGN  10674>>IF      10675>>ASSIGN
     10676>>IF      10677>>ASSIGN  10678>>ASSIGN  10680>>ASSIGN  10728>>IF      10734>>ASSIGN  10737>>ASSIGN
     10752>>ASSIGN  10783>>ASSIGN  10785>>ASSIGN  10787>>ASSIGN  10802>>ASSIGN  10806>>ASSIGN  10809>>ASSIGN
     10814>>ASSIGN  10816>>ASSIGN  10860>>ASSIGN  10864>>ASSIGN  10870>>ASSIGN  10880>>ASSIGN  10886>>IF
     10889>>ASSIGN  10896>>ASSIGN  10899>>ASSIGN  10903>>ASSIGN  10977>>ASSIGN  10979>>ASSIGN  10997>>IF
     10999>>ASSIGN  11056>>IF      11056>>IF      11060>>IF      11061>>ASSIGN  11066>>ASSIGN  11101>>ASSIGN
BADFEP IN PROCEDURE FPO_OPNDEV
     10355**LABEL   10339--CALLALT 10341--GOTO
CHKSCRATCH IN PROCEDURE FPO_FINDFILE
     10882**LABEL   10883--CALLALT
CLSTAP IN PROCEDURE FPO_OPNCREATE
     10486**LABEL   10419--GOTO    10439--GOTO    10447--GOTO    10452--CALLALT 10455--CALLALT 10458--CALLALT
     10460--CALLALT 10471--CALLALT
CLSTAP IN PROCEDURE FPO_OPNEXISTING
     10728**LABEL   10544--GOTO    10548--CALLALT 10549--CALLALT 10574--GOTO    10586--CALLALT 10645--GOTO
     10658--CALLALT 10723--CALLALT
CLSTAPERR IN PROCEDURE FPO_OPNCREATE
     10486**LABEL   10487--CALLALT
CLSTAPERR IN PROCEDURE FPO_OPNEXISTING
     10734**LABEL   10699--GOTO
CODE02.KEYL
      7579**DCL     10708>>ASSIGN
CODE02.KEYX
      7579**DCL     10707>>ASSIGN
CODE03.TYPE
      7584**DCL     10720>>ASSIGN
CODE16.ATTR
      7597**DCL     10414>>ASSIGN
CONSECORG IN PROCEDURE FPO_CHK_BLKL_RECL
     11016**LABEL   10994--GOTO
CREATE_DATE_UTS
      9662**DCL     10650<>CALL    10652<>CALL
DCT.DP IN PROCEDURE FPO_OPNDEV
     10314**DCL     10321--REDEF   10324--REDEF   10325--REDEF   10327--REDEF   10327--REDEF   10328--REDEF
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:181  
     10329--REDEF   10329--REDEF
DCT.DQH$ IN PROCEDURE FPO_OPNDEV
     10310**DCL     10345>>IF
DCT.MPC.IOCHANX IN PROCEDURE FPO_OPNDEV
     10322**DCL     10322--REDEF
DDDT$
      9663**DCL      7836--IMP-PTR 10237>>ASSIGN  10360<<ASSIGN  10362>>IF      10364>>ASSIGN  10365>>ASSIGN
     10369>>ASSIGN  10369>>ASSIGN  10416<<ASSIGN  10417>>IF      10421>>ASSIGN  10426>>IF      10428<<ASSIGN
     10431>>IF      10433>>ASSIGN  10437>>IF      10441>>IF      10444>>ASSIGN  10445>>IF      10451>>ASSIGN
     10453<<ASSIGN  10461>>ASSIGN  10541<<ASSIGN  10542>>IF      10572>>IF      10576>>ASSIGN  10580>>ASSIGN
     10587<<ASSIGN  10593>>ASSIGN  10730<<ASSIGN  10731>>ASSIGN  10753<<ASSIGN  10760>>ASSIGN  10797<<ASSIGN
     10801>>ASSIGN  10853>>ASSIGN  10871>>ASSIGN  10875>>ASSIGN  10884<<ASSIGN  10917<<ASSIGN  11056>>IF
     11058>>DOCASE
ERRSAV
      9676**DCL     10492<<ASSIGN  10494>>ASSIGN  10677<<ASSIGN  10689<<ASSIGN  10734<<ASSIGN  10737>>ASSIGN
ERRSAV.ERR#
      9706**DCL     10681>>IF      10685>>IF
E_BADFEP
      9781**DCL     10355>>ASSIGN
E_BADFSN
      9795**DCL     10446>>ASSIGN
E_BADODFORMAT
      9810**DCL     10644>>ASSIGN
E_EOSET
      9841**DCL     10573>>ASSIGN  10783>>ASSIGN  10816>>ASSIGN  10896>>ASSIGN
E_INVLDFUN
      9869**DCL     10214>>ASSIGN
E_INVLDORG
      9882**DCL     10198>>ASSIGN
E_IOERR
      9896**DCL     10418>>ASSIGN  10543>>ASSIGN  10785>>ASSIGN  10860>>ASSIGN
E_NOACCESS
      9908**DCL     10689>>ASSIGN
E_NOFIDTHIS
      9936**DCL     10528>>ASSIGN  10533>>ASSIGN
E_NOFILE
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:182  
      9951**DCL     10864>>ASSIGN  10870>>ASSIGN  10903>>ASSIGN
E_NOFPOOL
      9963**DCL     10675>>ASSIGN  10979>>ASSIGN  11101>>ASSIGN
E_NORESTRICT
      9993**DCL     10671>>ASSIGN  10999>>ASSIGN
E_NOSN
     10007**DCL     10274>>ASSIGN  10336>>ASSIGN  10408>>ASSIGN  10517>>ASSIGN
E_NOTOWNR
     10021**DCL     11061>>ASSIGN
E_NOTOWNRW
     10035**DCL     11066>>ASSIGN
E_ODEMPTYENT
     10049**DCL     10787>>ASSIGN
E_SECTERR
     10081**DCL     10809>>ASSIGN  10814>>ASSIGN
E_VOLORDER
     10113**DCL     10802>>ASSIGN
E_VOLOUT
     10132**DCL     10880>>ASSIGN
E_WRITEPROT
     10161**DCL     10438>>ASSIGN
F$DCB.ACS
      6876**DCL     10185<<ASSIGN  10187<<ASSIGN  10203>>IF      10634<<ASSIGN
F$DCB.ACTPOS
      6884**DCL      6884--REDEF
F$DCB.AFTRBLK
      6891**DCL     10223<<ASSIGN
F$DCB.ARS
      6859**DCL      6859--REDEF   10469<<ASSIGN  10657<<ASSIGN  10659>>IF
F$DCB.ASN
      6874**DCL     10188>>IF      10244>>IF      10363<<ASSIGN  10368<<ASSIGN
F$DCB.ATTR
      6877**DCL      6878--REDEF   10414<<ASSIGN  10414>>ASSIGN  10538<<ASSIGN
F$DCB.BFR.BUFX
      6904**DCL     10464>>ASSIGN  10588>>ASSIGN  11087>>ASSIGN  11092>>IF
F$DCB.BFR1.SIZ
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:183  
      6904**DCL     10465>>ASSIGN  10469>>ASSIGN
F$DCB.BLKL
      6874**DCL     10599<<ASSIGN  10640<<ASSIGN  10640>>ASSIGN  10674>>IF      11010>>IF      11011<<ASSIGN
     11012<<ASSIGN  11012>>ASSIGN  11030>>IF      11031<<ASSIGN  11032>>IF      11033<<ASSIGN  11034<<ASSIGN
     11034>>ASSIGN
F$DCB.BLKLEN
      6897**DCL     10232<<ASSIGN
F$DCB.BLOCKED
      6873**DCL     10604<<ASSIGN  10622<<ASSIGN  10625<<ASSIGN  10633<<ASSIGN  11014<<ASSIGN  11022<<ASSIGN
F$DCB.BOL
      6875**DCL     10227>>ASSIGN  10232>>ASSIGN  10603<<ASSIGN  11013<<ASSIGN  11020<<ASSIGN
F$DCB.BORROW
      6892**DCL      6892--REDEF    6892--REDEF    6892--REDEF
F$DCB.CBUFNUM
      6895**DCL     10233<<ASSIGN
F$DCB.CFU$
      6893**DCL     10180<<ASSIGN
F$DCB.CNVRT
      6871**DCL     10399<<ASSIGN  10656<<ASSIGN  10937<<ASSIGN
F$DCB.CONT
      6891**DCL     10230<<ASSIGN
F$DCB.CRECNO
      6896**DCL     10226<<ASSIGN
F$DCB.CRECX
      6895**DCL     10227<<ASSIGN
F$DCB.DCBNAME.L
      6906**DCL      6906--IMP-SIZ
F$DCB.DVBYTE
      6862**DCL     10931<<ASSIGN
F$DCB.DVBYTE.BIN
      6862**DCL     10961<<ASSIGN
F$DCB.EBCDIC
      6871**DCL     10398<<ASSIGN  10936<<ASSIGN
F$DCB.EOMCHAR
      6863**DCL      6863--REDEF
F$DCB.EOP
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:184  
      6888**DCL     10482<<ASSIGN
F$DCB.FCD
      6872**DCL     10247<<ASSIGN  10255>>IF      10347<<ASSIGN
F$DCB.FFLG
      6863**DCL     10373<<ASSIGN  10477<<ASSIGN
F$DCB.FFLG.READ
      6864**DCL     10350<<ASSIGN  10374<<ASSIGN  10478<<ASSIGN
F$DCB.FFLG.UPD
      6864**DCL     10377<<ASSIGN  10480<<ASSIGN
F$DCB.FFLG.WNEW
      6864**DCL     10376<<ASSIGN  10479<<ASSIGN
F$DCB.FLDID
      6887**DCL      6887--REDEF
F$DCB.FMOD
      6888**DCL     10483<<ASSIGN
F$DCB.FORM$
      6881**DCL      6881--REDEF   10414>>ASSIGN
F$DCB.FSECT
      6897**DCL      6897--REDEF   10365<<ASSIGN  10450<<ASSIGN  10550<<ASSIGN  10590<<ASSIGN  10762>>IF
     10762>>IF      10766>>ASSIGN  10852>>IF      10852>>IF
F$DCB.FSN
      6874**DCL      6874--REDEF    6874--REDEF    6875--REDEF   10364<<ASSIGN  10442<<ASSIGN  10444<<ASSIGN
     10522>>IF      10564>>IF      10576<<ASSIGN  10580<<ASSIGN  10647<<ASSIGN  10731<<ASSIGN  10759>>ASSIGN
     10851<<ASSIGN  10893>>IF
F$DCB.FUN
      6873**DCL     10184>>IF      10191>>DOCASE  11060>>IF
F$DCB.GDISP
      6898**DCL     10231<<ASSIGN
F$DCB.HEADER$
      6880**DCL      6880--REDEF
F$DCB.IASN
      6900**DCL     10183<<ASSIGN
F$DCB.IFMT
      6899**DCL     10182<<ASSIGN  10957<<ASSIGN
F$DCB.IORG
      6895**DCL     10384<<ASSIGN  10948<<ASSIGN  10950<<ASSIGN  10952<<ASSIGN  10954<<ASSIGN  10956<<ASSIGN
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:185  
     10959<<ASSIGN
F$DCB.IXTNSIZE
      6878**DCL      6878--REDEF
F$DCB.KEYL
      6876**DCL     10708<<ASSIGN  11025>>IF      11025<<ASSIGN
F$DCB.KEYX
      6875**DCL     10707<<ASSIGN
F$DCB.LASTKEY
      6892**DCL     10209<<ASSIGN  10212<<ASSIGN
F$DCB.LASTKEY$
      6892**DCL     10204<>CALL
F$DCB.LASTSTA$
      6868**DCL      6868--REDEF
F$DCB.LPOOL
      6893**DCL     10588>>ASSIGN  11084>>ASSIGN  11096<<ASSIGN
F$DCB.LSTBLK
      6891**DCL     10484<<ASSIGN
F$DCB.LVL
      6893**DCL      6893--REDEF
F$DCB.MAXVOL
      6879**DCL     10406<<ASSIGN  10515<<ASSIGN
F$DCB.MEDIA
      6899**DCL     10238<<ASSIGN
F$DCB.NAME.C
      6868**DCL      6868--REDEF   10687<<ASSIGN  10696<<ASSIGN  10715<<ASSIGN
F$DCB.NAME.L
      6868**DCL     10522>>IF      10552>>IF      10561>>IF      10688<<ASSIGN  10697<<ASSIGN  10716<<ASSIGN
F$DCB.NEW_FSECT
      6889**DCL     10234<<ASSIGN
F$DCB.NOEOF
      6889**DCL      6889--REDEF   10402<<ASSIGN  10511<<ASSIGN  11065>>IF
F$DCB.NRECS
      6879**DCL      6879--REDEF
F$DCB.NRECX
      6898**DCL      6898--REDEF   10229<<ASSIGN
F$DCB.OHDR
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:186  
      6890**DCL      6890--REDEF
F$DCB.ORG
      6873**DCL      6873--REDEF   10184>>IF      10193>>IF      10193>>IF      10193>>IF      10193>>IF
     10193>>IF      10193>>IF      10193>>IF      10193>>IF      10193>>IF      10202>>IF      10202>>IF
     10379<<ASSIGN  10412>>DOCASE  10457>>IF      10617<<ASSIGN  10618>>DOCASE  10670>>IF      10703>>IF
     10762>>IF      10932>>DOCASE  10942>>IF      10946>>DOCASE  10990>>DOCASE  10993<<ASSIGN  11023>>DOCASE
F$DCB.OWNER
      6890**DCL     10472<<ASSIGN  10669<<ASSIGN
F$DCB.PRECNO
      6896**DCL      6896--REDEF   10224<<ASSIGN
F$DCB.PSN
      6869**DCL     10334>>IF      10407>>IF      10421>>ASSIGN  10423--CALL    10516>>IF      10546--CALL
F$DCB.RCSZ
      6901**DCL      6901--REDEF
F$DCB.RECL
      6874**DCL     10601<<ASSIGN  10641<<ASSIGN  10641>>ASSIGN  11016<<ASSIGN  11029<<ASSIGN
F$DCB.RES
      6869**DCL      6869--REDEF
F$DCB.RPOS
      6890**DCL     10225<<ASSIGN
F$DCB.SETX
      6881**DCL      6881--REDEF   10348<<ASSIGN  10360>>ASSIGN  10375>>IF      10416>>ASSIGN  10428>>ASSIGN
     10453>>ASSIGN  10541>>ASSIGN  10587>>ASSIGN  10728>>IF      10730>>ASSIGN  10753>>ASSIGN  10797>>ASSIGN
     10884>>ASSIGN  10917>>ASSIGN
F$DCB.SEZ_OK
      6889**DCL     10401<<ASSIGN  10795<<ASSIGN  10882<<ASSIGN  10913<<ASSIGN
F$DCB.SPAN
      6890**DCL     10228<<ASSIGN
F$DCB.SPANNED
      6873**DCL     10597<<ASSIGN  10626<<ASSIGN  10630<<ASSIGN  11015<<ASSIGN  11021<<ASSIGN
F$DCB.TAB$
      6880**DCL      6881--REDEF
F$DCB.TAPTYP.CP6F
      6894**DCL     10382<<ASSIGN  10397>>IF      10454>>IF      10463>>IF      10655>>IF      10935<<ASSIGN
     10940<<ASSIGN
F$DCB.TAPTYP.HAVLASTKEY
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:187  
      6894**DCL     10205<<ASSIGN
F$DCB.TAPTYP.PASTFM
      6894**DCL     10236<<ASSIGN
F$DCB.TAPTYP.RWASC
      6894**DCL     10381<<ASSIGN  10934<<ASSIGN  10939<<ASSIGN  10961>>ASSIGN
F$DCB.TAPTYP.USRBUF
      6894**DCL     10349<<ASSIGN  10380<<ASSIGN  10674>>IF      10943<<ASSIGN  10945<<ASSIGN
F$DCB.TDA
      6895**DCL      6895--REDEF
F$DCB.TRNC
      6891**DCL     10235<<ASSIGN
F$DCB.TYC
      6859**DCL     10758>>IF      10847>>IF
F$DCB.TYC.BOT
      6859**DCL     10776>>IF
F$DCB.TYC.EOD
      6860**DCL     10786>>IF      10863>>IF
F$DCB.TYC.EOF
      6860**DCL     10486>>IF      10782>>IF      10876>>IF
F$DCB.TYC.EOT
      6859**DCL     10770>>IF
F$DCB.TYC.IOERR
      6860**DCL     10784>>IF      10859>>IF
F$DCB.TYPE
      6869**DCL     10383<<ASSIGN  10720<<ASSIGN
F$DCB.UB$
      6897**DCL     10265>>IF
F$DCB.VOL
      6879**DCL     10422>>ASSIGN  10435>>CALL    10441>>IF      10546>>CALL    10796>>CALL    10863>>IF
     10868>>ASSIGN  10869>>IF      10883>>CALL    10900>>IF      10902>>IF      10908>>ASSIGN
F$DCB.WSN
      6870**DCL      6870--REDEF   10339<>CALL
FEI IN PROCEDURE FPO_OPNDEV
     10281**DCL     10339<>CALL    10345>>IF
FILE_NAME
      9721**DCL     10594<<ASSIGN  10612<<ASSIGN  10692>>CALLBLT 10696>>ASSIGN  10711>>CALLBLT 10715>>ASSIGN
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:188  
FILE_SEQ
      9722**DCL     10592<<ASSIGN  10647>>ASSIGN
FM$BUF$
      7226**DCL     10464>>ASSIGN  10588>>ASSIGN  11087>>ASSIGN
FM$FIT
      7575**DCL     10673<>CALL
FM$GRAN
      7350**DCL     10660--ASSIGN
FMD$GETBUF
      9517**DCL-ENT 11094--CALL
FMN$CHKFLACN
      9518**DCL-ENT 10394--CALL
FMO$BLDFIT
      9519**DCL-ENT 10455--CALL
FMO$LOCCODE
      9520**DCL-ENT 10706--CALL    10719--CALL
FMO$SECCHK
      9521**DCL-ENT 10474--CALL    10673--CALL
FMO$TRNINFO
      9522**DCL-ENT 10723--CALL
FPC$DFLTCLOSE
      9527**DCL-ENT 10245--CALL    10679--CALL
FPO$COPYDEV
      9535**DCL-ENT 10269--CALL
FPO$FINDFILE
      9533**DCL-ENT 10846--CALL
FPO$FINDFSN
      9532**DCL-ENT 10757--CALL
FPO$FINDSEQ
     10745**ENTRY   10553--CALL    10562--CALL    10565--CALL    10577--CALL    10581--CALL    10855--CALL
FPO$OPENIN
      9534**DCL-ENT 10586--CALL
FPO$PEOV
      9529**DCL-ENT 10430--CALL    10910--CALL
FPO$RDODBLK
      9531**DCL-ENT 10658--CALL
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:189  
FPO$WRODBLK
      9530**DCL-ENT 10471--CALL
FPO_CHK_BLKL_RECL
     10969**PROC    10395--CALL
FPO_DPT
     11052**PROC    10452--CALL    10548--CALL
FPO_FINDFILE
     10824**PROC    10555--CALL    10566--CALL
FPO_LBLINIT
     11076**PROC    10549--CALL    10754--CALL
FPO_OPNCREATE
     10389**PROC    10201--CALL
FPO_OPNDEV
     10277**PROC    10189--CALL
FPO_OPNEXISTING
     10503**PROC    10211--CALL
FPO_SETTAPTYP
     10924**PROC    10396--CALL    10654--CALL
FPT$OPEN_V
      6790**DCL     10474<>CALL    10474<>CALL    10673<>CALL
FPT$OPEN_V.FSN
      6800**DCL      6800--REDEF    6801--REDEF
FPT$OPEN_V.OPER.MNTONLY
      6791**DCL     10188>>IF      10335>>IF      10361>>IF
FPT$OPEN_V.OPER.NXTF
      6791**DCL     10525>>IF      10525>>IF      10558>>IF      10558>>IF      10681>>IF
FPT$OPEN_V.OPER.TEST
      6790**DCL     10244>>IF
FPT$OPEN_V.OPER.THISF
      6791**DCL     10525>>IF      10558>>IF      10681>>IF
FPT$OPEN_V.SRCHCOND.REV
      6793**DCL     10570>>IF
FPT_PFIL_EOF.V
      9775**DCL      9775--DCLINIT
FR$HD$
      9552**DCL     10263>>ASSIGN  10342>>ASSIGN
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:190  
FR$RAT.DCTX
      7745**DCL     10344>>ASSIGN  10348>>ASSIGN
FR$RAT.FLG.MBIT.MTD
      7755**DCL     10265>>IF
FR$RAT.LNK$
      7728**DCL     10272>>ASSIGN  10353>>ASSIGN
FR$RAT.REEL.ASID
      7747**DCL     10265>>IF
FR$RAT.REEL.SER
      7748**DCL     10265>>IF
FR$RAT.TYP
      7751**DCL     10265>>IF      10345>>IF
FRA$OPR
      9523**DCL-ENT 10359--CALL    10411--CALL    10540--CALL
FRB$CLS
      9524**DCL-ENT 10370--CALL    10493--CALL    10736--CALL
FREEPOOLS
     10254**LABEL   10189--CALLALT 10199--GOTO    10201--CALLALT 10204--CALLALT 10211--CALLALT 10215--GOTO
FSA$GSP
      9525**DCL-ENT 10204--CALL
FSF$TAPEFORM
      9526**DCL-ENT 11027--CALL
FT$DDT.ACCT
      7837**DCL     11056>>IF
FT$DDT.ANST
      7852**DCL     10362>>IF
FT$DDT.DENSITY
      7867**DCL     10433<<ASSIGN
FT$DDT.FRSTFSECT
      7873**DCL     10365>>ASSIGN
FT$DDT.FRSTFSN
      7848**DCL     10364>>ASSIGN  10369>>ASSIGN
FT$DDT.FSN
      7846**DCL     10369<<ASSIGN  10444>>ASSIGN  10445>>IF      10572>>IF      10576>>ASSIGN  10580>>ASSIGN
     10593<<ASSIGN  10731>>ASSIGN  10760<<ASSIGN
FT$DDT.POS
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:191  
      7870**DCL     10237<<ASSIGN  10431>>IF      10441>>IF      10801<<ASSIGN  10853<<ASSIGN  10871<<ASSIGN
     10875<<ASSIGN
FT$DDT.POSLOST
      7863**DCL     10417>>IF      10542>>IF
FT$DDT.RINGIN
      7856**DCL     10375>>IF      10437>>IF
FT$DDT.SCRTCH
      7854**DCL     10426>>IF      10461<<ASSIGN
FT$DDT.SN
      7841**DCL     10421<<ASSIGN
FT$DDT.VOLACCESS
      7888**DCL     11058>>DOCASE
FT$DDT.WRITE
      7857**DCL     10451<<ASSIGN
FT$HDR.L1
      8182**DCL     10465<<ASSIGN
FT$HDR.L2
      8183**DCL     10466<<ASSIGN
FT$HDR.S1
      8184**DCL     10467<<ASSIGN
FT$HDR.S2
      8185**DCL     10468<<ASSIGN
FT$KEY.KL
      8224**DCL      8225--IMP-SIZ
FT$LBL1.CREATE_DATE
      7974**DCL     10649>>IF      10650<>CALL
FT$LBL1.FILE_ID
      7964**DCL     10594>>ASSIGN
FT$LBL1.FSECT
      7967**DCL     10589>>CALLBLT 10761>>CALLBLT 10850>>CALLBLT
FT$LBL1.ODFSEQU_NUM
      7984**DCL     10591>>CALLBLT 10849>>CALLBLT
FT$LBL1.SYSTEM_ID
      7980**DCL      7981--REDEF
FT$LBL2.BLKL
      8051**DCL     10598>>CALLBLT
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:192  
FT$LBL2.BUF_OFFSET
      8082**DCL     10602>>CALLBLT
FT$LBL2.CP6
      8053**DCL      8071--REDEF
FT$LBL2.CP6.BLOCK_ATTR
      8068**DCL     10620>>ASSIGN
FT$LBL2.CP6.FILE_FORMAT
      8057**DCL     10611>>ASSIGN
FT$LBL2.CP6.FILE_ID
      8055**DCL     10612>>ASSIGN
FT$LBL2.FORMAT
      8046**DCL     10605>>ASSIGN
FT$LBL2.RECL
      8052**DCL     10600>>CALLBLT
FT$ULBL.LABEL_NBIN
      8147**DCL      8148--REDEF
FTL$CVOL
      9536**DCL-ENT 10487--CALL
FTL$LBLS
      9537**DCL-ENT 10458--CALL    10460--CALL
FTO$SNLIST
      9528**DCL-ENT 10403--CALL    10512--CALL
FTR$CHNGVOLNR
      9538**DCL-ENT 10435--CALL    10796--CALL    10883--CALL    10914--CALL
FTR$RELCFUS
      9539**DCL-ENT 10256--CALL    10496--CALL
FTR$RELFPOOLS
      9540**DCL-ENT 10254--CALL
FTR$SETSN
      9541**DCL-ENT 10423--CALL    10546--CALL
FT_CP6FMT
      9739**DCL     10614>>DOWHILE
FT_CP6FMTORG
      9751**DCL     10617>>ASSIGN
FT_FORMAT
      9731**DCL     10607>>DOWHILE
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:193  
HFF$DSIZ
      9542**DCL-ENT 11003--CALL
HOST IN PROCEDURE FPO_OPNDEV
     10282**DCL     10339<>CALL    10340>>IF
I
      9709**DCL     10422<<ASSIGN  10423<>CALL    10589<<CALLBLT 10590>>ASSIGN  10591<<CALLBLT 10592>>ASSIGN
     10593>>ASSIGN  10598<<CALLBLT 10599>>ASSIGN  10600<<CALLBLT 10601>>ASSIGN  10602<<CALLBLT 10603>>ASSIGN
     10605<<ASSIGN  10607>>DOWHILE 10611<<ASSIGN  10614>>DOWHILE 10635>>IF      10806<<ASSIGN  10807>>IF
     10812>>IF      10889<<ASSIGN  10891>>IF      10891>>IF      10895>>IF      11003<>CALL    11005<<ASSIGN
     11006>>IF      11084<<ASSIGN  11085>>IF      11087>>ASSIGN  11091<<DOINDEX 11092>>IF      11094<>CALL
     11096>>ASSIGN
J
      9710**DCL     10606<<ASSIGN  10607>>DOWHILE 10607>>DOWHILE 10608<<ASSIGN  10608>>ASSIGN  10610>>IF
     10613<<ASSIGN  10614>>DOWHILE 10614>>DOWHILE 10615<<ASSIGN  10615>>ASSIGN  10617>>ASSIGN  10620<<ASSIGN
     10621>>IF      10624>>IF      10629>>IF      10665<<ASSIGN  10666--ASSIGN  10692<<CALLBLT 10694<<ASSIGN
     10697>>ASSIGN  10705<<ASSIGN  10706<>CALL    10711<<CALLBLT 10713<<ASSIGN  10716>>ASSIGN  10718<<ASSIGN
     10719<>CALL
JDCB$
      9711**DCL      6859--IMP-PTR 10179<<ASSIGN  10180>>ASSIGN  10182>>ASSIGN  10183>>ASSIGN  10184>>IF
     10184>>IF      10185>>ASSIGN  10187>>ASSIGN  10188>>IF      10191>>DOCASE  10193>>IF      10193>>IF
     10193>>IF      10193>>IF      10193>>IF      10193>>IF      10193>>IF      10193>>IF      10193>>IF
     10202>>IF      10202>>IF      10203>>IF      10204>>CALL    10205>>ASSIGN  10209>>ASSIGN  10212>>ASSIGN
     10223>>ASSIGN  10224>>ASSIGN  10225>>ASSIGN  10226>>ASSIGN  10227>>ASSIGN  10227>>ASSIGN  10228>>ASSIGN
     10229>>ASSIGN  10230>>ASSIGN  10231>>ASSIGN  10232>>ASSIGN  10232>>ASSIGN  10233>>ASSIGN  10234>>ASSIGN
     10235>>ASSIGN  10236>>ASSIGN  10238>>ASSIGN  10244>>IF      10247>>ASSIGN  10255>>IF      10260<<ASSIGN
     10265>>IF      10334>>IF      10339>>CALL    10347>>ASSIGN  10348>>ASSIGN  10349>>ASSIGN  10350>>ASSIGN
     10360>>ASSIGN  10363>>ASSIGN  10364>>ASSIGN  10365>>ASSIGN  10368>>ASSIGN  10373>>ASSIGN  10374>>ASSIGN
     10375>>IF      10376>>ASSIGN  10377>>ASSIGN  10379>>ASSIGN  10380>>ASSIGN  10381>>ASSIGN  10382>>ASSIGN
     10383>>ASSIGN  10384>>ASSIGN  10394<>CALL    10397>>IF      10398>>ASSIGN  10399>>ASSIGN  10401>>ASSIGN
     10402>>ASSIGN  10406>>ASSIGN  10407>>IF      10412>>DOCASE  10414>>ASSIGN  10414>>ASSIGN  10414>>ASSIGN
     10416>>ASSIGN  10421>>ASSIGN  10422>>ASSIGN  10423>>CALL    10428>>ASSIGN  10435>>CALL    10441>>IF
     10442>>ASSIGN  10444>>ASSIGN  10450>>ASSIGN  10453>>ASSIGN  10454>>IF      10457>>IF      10463>>IF
     10464>>ASSIGN  10465>>ASSIGN  10469>>ASSIGN  10469>>ASSIGN  10472>>ASSIGN  10477>>ASSIGN  10478>>ASSIGN
     10479>>ASSIGN  10480>>ASSIGN  10482>>ASSIGN  10483>>ASSIGN  10484>>ASSIGN  10486>>IF      10511>>ASSIGN
     10515>>ASSIGN  10516>>IF      10522>>IF      10522>>IF      10538>>ASSIGN  10541>>ASSIGN  10546>>CALL
     10546>>CALL    10550>>ASSIGN  10552>>IF      10561>>IF      10564>>IF      10576>>ASSIGN  10580>>ASSIGN
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:194  
     10587>>ASSIGN  10588>>ASSIGN  10588>>ASSIGN  10590>>ASSIGN  10597>>ASSIGN  10599>>ASSIGN  10601>>ASSIGN
     10603>>ASSIGN  10604>>ASSIGN  10617>>ASSIGN  10618>>DOCASE  10622>>ASSIGN  10625>>ASSIGN  10626>>ASSIGN
     10630>>ASSIGN  10633>>ASSIGN  10634>>ASSIGN  10640>>ASSIGN  10640>>ASSIGN  10641>>ASSIGN  10641>>ASSIGN
     10647>>ASSIGN  10655>>IF      10656>>ASSIGN  10657>>ASSIGN  10659>>IF      10669>>ASSIGN  10670>>IF
     10674>>IF      10674>>IF      10687>>ASSIGN  10688>>ASSIGN  10696>>ASSIGN  10697>>ASSIGN  10703>>IF
     10707>>ASSIGN  10708>>ASSIGN  10715>>ASSIGN  10716>>ASSIGN  10720>>ASSIGN  10728>>IF      10730>>ASSIGN
     10731>>ASSIGN  10752<<ASSIGN  10753>>ASSIGN  10758>>IF      10759>>ASSIGN  10762>>IF      10762>>IF
     10762>>IF      10766>>ASSIGN  10770>>IF      10776>>IF      10782>>IF      10784>>IF      10786>>IF
     10795>>ASSIGN  10796>>CALL    10797>>ASSIGN  10847>>IF      10851>>ASSIGN  10852>>IF      10852>>IF
     10859>>IF      10863>>IF      10863>>IF      10868>>ASSIGN  10869>>IF      10876>>IF      10882>>ASSIGN
     10883>>CALL    10884>>ASSIGN  10893>>IF      10900>>IF      10902>>IF      10908>>ASSIGN  10913>>ASSIGN
     10917>>ASSIGN  10931>>ASSIGN  10932>>DOCASE  10934>>ASSIGN  10935>>ASSIGN  10936>>ASSIGN  10937>>ASSIGN
     10939>>ASSIGN  10940>>ASSIGN  10942>>IF      10943>>ASSIGN  10945>>ASSIGN  10946>>DOCASE  10948>>ASSIGN
     10950>>ASSIGN  10952>>ASSIGN  10954>>ASSIGN  10956>>ASSIGN  10957>>ASSIGN  10959>>ASSIGN  10961>>ASSIGN
     10961>>ASSIGN  10990>>DOCASE  10993>>ASSIGN  11010>>IF      11011>>ASSIGN  11012>>ASSIGN  11012>>ASSIGN
     11013>>ASSIGN  11014>>ASSIGN  11015>>ASSIGN  11016>>ASSIGN  11020>>ASSIGN  11021>>ASSIGN  11022>>ASSIGN
     11023>>DOCASE  11025>>IF      11025>>ASSIGN  11029>>ASSIGN  11030>>IF      11031>>ASSIGN  11032>>IF
     11033>>ASSIGN  11034>>ASSIGN  11034>>ASSIGN  11060>>IF      11065>>IF      11084>>ASSIGN  11087>>ASSIGN
     11092>>IF      11096>>ASSIGN
JUSTALT
     10819**LABEL   10269--CALLALT 10754--CALLALT 10757--CALLALT
JUSTALT IN PROCEDURE FPO_CHK_BLKL_RECL
     11030**LABEL   11027--CALLALT
JUSTALT IN PROCEDURE FPO_FINDFILE
     10861**LABEL   10846--CALLALT 10855--CALLALT 10910--CALLALT 10914--CALLALT
JUSTALT IN PROCEDURE FPO_OPNCREATE
     10498**LABEL   10394--CALLALT 10395--CALLALT 10405--GOTO    10409--GOTO    10430--CALLALT 10435--CALLALT
JUSTALT IN PROCEDURE FPO_OPNDEV
     10371**LABEL   10359--CALLALT
JUSTALT IN PROCEDURE FPO_OPNEXISTING
     10737**LABEL   10540--CALLALT
KI$ROUTE.FEI#
      9611**DCL     10345>>IF
KI$ROUTE$
      9653**DCL     10345>>IF
KIN$CONV_NODENAME
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:195  
      9545**DCL-ENT 10339--CALL
KI_ROUTE$$
      9553**DCL      9653--IMP-PTR 10345>>IF
LBL1$
      9714**DCL     10757<>CALL    10761>>CALLBLT 10846<>CALL    10849>>CALLBLT 10850>>CALLBLT 11087<<ASSIGN
     11088>>ASSIGN  11094<>CALL    11095>>ASSIGN
LBL2$
      9715**DCL     11088<<ASSIGN  11095<<ASSIGN
MAXBLKL
      9724**DCL     10977<<ASSIGN  10978>>IF      10982>>IF      10983<<ASSIGN  11032>>IF      11033>>ASSIGN
MNTDCT$ IN PROCEDURE FPO_OPNDEV
     10284**DCL     10344<<ASSIGN  10345>>IF
N$DCT$
      8738**DCL     10344>>ASSIGN
N$DCT$$
      8604**DCL      8738--IMP-PTR  9554--IMP-PTR 10344>>ASSIGN  10360>>ASSIGN  10375>>IF      10416>>ASSIGN
     10428>>ASSIGN  10453>>ASSIGN  10541>>ASSIGN  10587>>ASSIGN  10730>>ASSIGN  10753>>ASSIGN  10797>>ASSIGN
     10884>>ASSIGN  10917>>ASSIGN
N$FQ$
      8604**DCL      8739--IMP-PTR
N$REQ_INIT.BUFADDR
      8623**DCL      8624--REDEF    8624--REDEF
N$REQ_INIT.DLA.DRELADDR
      8615**DCL      8615--REDEF
N$REQ_INIT.DVE.EOMCHAR
      8652**DCL      8653--REDEF
N$REQ_INIT.EAINFO
      8646**DCL      8646--REDEF
N$REQ_INIT.EAINFOX
      8646**DCL      8647--REDEF
N$REQ_INIT.EVNTINFO
      8647**DCL      8647--REDEF
N$REQ_INIT.STATUS
      8628**DCL      8634--REDEF
NEVER1 IN PROCEDURE FPO_OPNCREATE
     10422**LABEL   10423--CALLALT
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:196  
NEVER2 IN PROCEDURE FPO_OPNEXISTING
     10542**LABEL   10546--CALLALT
NI$DQH.FEX
      9588**DCL     10345>>IF
NI$DQH.IOCHANX
      9587**DCL      9588--REDEF
NI$DQH.MBX$
      9596**DCL      9597--REDEF
NI$FQ$
      8664**DCL      8740--IMP-PTR
NI$IBUF$
      8664**DCL      8740--IMP-PTR
NI$IMXMBX_INIT.PAGED_BASE
      8674**DCL      8675--REDEF    8675--REDEF
NI$IMXMBX_INIT.SIZE
      8676**DCL      8676--REDEF
NI$REQ_INIT.DCW
      8698**DCL      8701--REDEF
NI$REQ_INIT.DCW.TALLY
      8699**DCL      8699--REDEF
NI$REQ_INIT.IDCW.EXTA
      8701**DCL      8701--REDEF
NI$REQ_INIT.PCW
      8703**DCL      8707--REDEF
NI$REQ_INIT.SEEK
      8708**DCL      8709--REDEF    8710--REDEF
NI$RP$
      8712**DCL      8742--IMP-PTR
NI_MBX_INIT.DCW.CONTROL.AE
      8734**DCL      8734--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
      8730**DCL      8730--REDEF
NK$LDCT.DDT$
      8860**DCL      8860--REDEF   10360>>ASSIGN  10375>>IF      10416>>ASSIGN  10428>>ASSIGN  10453>>ASSIGN
     10541>>ASSIGN  10587>>ASSIGN  10730>>ASSIGN  10753>>ASSIGN  10797>>ASSIGN  10884>>ASSIGN  10917>>ASSIGN
NK$LDCT.IOQ$
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:197  
      8859**DCL      8860--REDEF
NK$LDCT.LDCTX
      8861**DCL      8861--REDEF
NK$LDCT.LKFLG.ABORTED
      8873**DCL      8874--REDEF
NK$LDCT.RLCID.LDCTX
      8883**DCL      8883--REDEF
NK$LDCT.STA$
      8879**DCL      8880--REDEF
NK$LDCT.SYMB$
      8858**DCL      8858--REDEF    8858--REDEF    8859--REDEF
NK$LDCT$
      9554**DCL     10360>>ASSIGN  10375>>IF      10416>>ASSIGN  10428>>ASSIGN  10453>>ASSIGN  10541>>ASSIGN
     10587>>ASSIGN  10730>>ASSIGN  10753>>ASSIGN  10797>>ASSIGN  10884>>ASSIGN  10917>>ASSIGN
NOIFPARAM IN PROCEDURE FPO_CHK_BLKL_RECL
     11003**LABEL   11003--CALLALT
NOSCRATCHES
     10802**LABEL   10796--CALLALT
NO_IFPARAM_RESTRICT
      9720**DCL     10457>>IF      10636<<ASSIGN  10638<<ASSIGN  10935>>ASSIGN  11002<<ASSIGN  11008<<ASSIGN
O$
      9713**DCL     10263<<ASSIGN  10264>>DOWHILE 10265>>IF      10265>>IF      10265>>IF      10265>>IF
     10272<<ASSIGN  10272>>ASSIGN
O$ IN PROCEDURE FPO_OPNDEV
     10283**DCL     10342<<ASSIGN  10343>>DOWHILE 10344>>ASSIGN  10345>>IF      10348>>ASSIGN  10353<<ASSIGN
     10353>>ASSIGN
PN$
      9561**DCL         9--PROC    10403<>CALL    10455<>CALL    10512<>CALL
PN$.ACSVEH_
      9562**DCL      9562--REDEF
PN$.ALTKEYS_
      9564**DCL      9564--REDEF    9564--REDEF
PN$.FPARAM_
      9563**DCL     10722>>IF      10723<>CALL
PN$.HDR_
      9563**DCL      9563--REDEF
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:198  
PN$.IFPARAM_
      9562**DCL     11003--CALL    11004>>ASSIGN
PN$.TAB_
      9563**DCL      9563--REDEF
PN$.UHL_
      9561**DCL      9561--REDEF    9561--REDEF
PN$.V_
      9561**DCL     10188>>IF      10244>>IF      10335>>IF      10361>>IF      10474>>CALL    10524>>IF
     10525>>IF      10525>>IF      10525>>IF      10551>>IF      10558>>IF      10558>>IF      10558>>IF
     10570>>IF      10673>>CALL    10681>>IF      10681>>IF      11003--CALL
PN$.WSN_
      9563**DCL      9563--REDEF
RELCFUS IN PROCEDURE FPO_OPNCREATE
     10496**LABEL   10411--CALLALT
RETFSN IN PROCEDURE FPO_OPNEXISTING
     10722**LABEL   10553--CALLALT 10555--CALLALT 10562--CALLALT 10565--CALLALT 10566--CALLALT 10577--CALLALT
     10581--CALLALT
SAVFSN IN PROCEDURE FPO_FINDFILE
     10840**DCL     10902>>IF      10906>>IF      10907<<ASSIGN
SAVVOL IN PROCEDURE FPO_FINDFILE
     10841**DCL     10844<<ASSIGN  10867>>IF      10868<<ASSIGN  10869>>IF      10902>>IF      10908<<ASSIGN
SECTFIND
      9717**DCL     10767<<ASSIGN  10808>>IF      10813>>IF
SER
      9654**DCL     10265>>IF
SKIPS
      9716**DCL     10766<<ASSIGN  10771>>IF      10773<<ASSIGN  10777>>IF      10779<<ASSIGN  10796>>CALL
SSS$SYSTIME
      9543**DCL-ENT 10652--CALL
TEMP$
      9723**DCL     10464<<ASSIGN  10465>>ASSIGN  10466>>ASSIGN  10467>>ASSIGN  10468>>ASSIGN  10471<>CALL
     10474>>CALL    10487<>CALL    10596<<ASSIGN  10598>>CALLBLT 10600>>CALLBLT 10602>>CALLBLT 10605>>ASSIGN
     10611>>ASSIGN  10612>>ASSIGN  10620>>ASSIGN  10660<<ASSIGN  10662<<ASSIGN  10666<<ASSIGN  10673>>CALL
     10704>>ASSIGN  10717>>ASSIGN  10723<>CALL    11004<<ASSIGN  11005>>IF
THISFSECT
      9719**DCL     10761<<CALLBLT 10762>>IF      10766>>ASSIGN  10850<<CALLBLT 10852>>IF
PL6.E3A0      #001=FPO$OPNOD File=FPO$OPNOD.:E05TSI                              TUE 07/29/97 17:18 Page:199  
THISFSN
      9718**DCL     10759<<ASSIGN  10760>>ASSIGN  10849<<CALLBLT 10851>>ASSIGN  10874<<ASSIGN  10902>>IF
UMT$UTSJ
      9544**DCL-ENT 10650--CALL
VOLORDER
     10796**LABEL   10772--GOTO    10778--GOTO

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:200  
     1294        1        /*T***********************************************************/
     1295        2        /*T*                                                         */
     1296        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1297        4        /*T*                                                         */
     1298        5        /*T***********************************************************/
     1299        6        /*F*  NAME: FPO$WRITELBL
     1300        7              PURPOSE: Write labels to optical disk volumes.
     1301        8              DESCRIPTION:  Send a write-label message containing the label
     1302        9              data to the optical disc device handler.
     1303       10
     1304       11              CALLING SEQUENCE:
     1305       12                 CALL FPO$WRITELBL (LBL1$,LBL2$) ALTRET(cvol_proc);
     1306       13
     1307       14        */
     1308       15
     1309       16        FPO$WRITELBL: PROC  (DCTX,SER$) ALTRET;
     1310       17
     1311       18        %INCLUDE CP_6;
     1312     5577        %INCLUDE CP_6_SUBS;
     1313     6117        %INCLUDE F_SCODE_C;
     1314     6153        %INCLUDE B$JIT_C;
     1315     6467           %B$JIT0;
     1316     6556           %U$JIT1X;
     1317     6559           %M$JIT2X;
     1318     6562           %F$JIT3;
     1319     6567           %S$JIT4X;
     1320     6570           %J$JIT5X;
     1321     6573           %A$JIT6;
     1322     6583        %MACRO F$DCBBJ(BASED=BASED);
     1323     6584        %INCLUDE F$DCB;
     1324     6633        %MEND;
     1325     6634           %F$DCBBJ(BASED="BASED(JDCB$)");
     1326     6684        %INCLUDE K_SUBS_C;
     1327     6717        %INCLUDE K$RWPARM;
     1328     7103        %INCLUDE KI_MACROS_C;
     1329     7711        %INCLUDE KI$MHDR;
     1330     7852        %INCLUDE NI$TABLES;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:201  
     1331     8068        %INCLUDE NK$LDCT;
     1332     8170        %INCLUDE NK_LDCT_R;
     1333     8179        %INCLUDE B$USER;
     1334     8395        %B$USERREFS;
     1335     8399        %INCLUDE SS_SCHED_C;
     1336     8632        %INCLUDE FR$RAT;
     1337     8685        %INCLUDE FT$DDT;
     1338     8746        %INCLUDE F_ERRORS_C;
     1339     8986        %INCLUDE FT_SUBS;
     1340     9066        %INCLUDE FP_MACRO_C;
     1341     9338        %INCLUDE HF_LOCK_C;
     1342     9352
     1343     9353
     1344     9354        /*    Parameters    */
     1345     9355    1   DCL DCTX UBIN;                     /* Soliciting device DCT index */
     1346     9356    1   DCL LBL1$ REDEF DCTX PTR;          /* HDR1 label record ptr       */
     1347     9357    1   DCL BFR$ REDEF DCTX PTR;           /* I/O buffer pointer             */
     1348     9358    1   DCL DIR REDEF DCTX SBIN;           /* search direction           */
     1349     9359    1   DCL SER$ PTR;                      /* Serial number ptr          */
     1350     9360    1   DCL LBL2$ REDEF SER$ PTR;          /* HDR2 label record ptr       */
     1351     9361    1   DCL FSN REDEF SER$ UBIN;           /* file sequence number        */
     1352     9362    1   DCL CONFNC REDEF SER$ UBIN;        /*  1 = partition, 0 = return  */
     1353     9363
     1354     9364        /*    Auto           */
     1355     9365
     1356     9366        %K$RWPARM (NAME=K$RWPARM, STCLASS="");
     1357     9682
     1358     9683    1   DCL O$ PTR;
     1359     9684    1   DCL D$ PTR;
     1360     9685    1   DCL M$ PTR;
     1361     9686    1   DCL LDCT$ PTR;
     1362     9687    1   DCL RAT$ PTR;
     1363     9688    1   DCL JDCB$ PTR;
     1364     9689    1   DCL ERRSAV BIT(36);
     1365     9690    1   DCL I UBIN;
     1366     9691    1   DCL F UBIN;
     1367     9692    1   DCL WSQ UBIN;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:202  
     1368     9693    1   DCL STT UBIN;                      /* message write status         */
     1369     9694    1   DCL DEV UBIN;
     1370     9695    1   DCL DCTN UBIN;
     1371     9696    1   DCL 1 CDCT REDEF DCTN,
     1372     9697    1         2 * BIT(20),
     1373     9698    1         2 HI UBIN(8) UNAL,
     1374     9699    1         2 LO UBIN(8) UNAL;
     1375     9700    1   DCL MSG CHAR(180);
     1376     9701    1   DCL QSZ UBIN WORD;
     1377     9702    1   DCL 1 SZ REDEF QSZ,
     1378     9703    1         2 * UBIN(12) UNAL,
     1379     9704    1         2 B2 UBIN(8) UNAL,
     1380     9705    1         2 B3 UBIN(8) UNAL,
     1381     9706    1         2 B4 UBIN(8) UNAL;
     1382     9707    1   DCL QMP$ PTR;                      /* CWSQ buffer pointer, converts to */
     1383     9708    1   DCL 1 MP REDEF QMP$,               /* word offset for DIB xfer      */
     1384     9709    1         2 B2 UBIN(2) UNAL,
     1385     9710    1         2 B3 UBIN(8) UNAL,
     1386     9711    1         2 B4 UBIN(8) UNAL,
     1387     9712    1         2 * UBIN(18) UNAL;
     1388     9713    1   DCL CNVTLNGWD UBIN WORD;
     1389     9714    1   DCL 1 CNVTLNG REDEF CNVTLNGWD,
     1390     9715    1         2 * UBIN(4) UNAL,
     1391     9716    1         2 B1 UBIN(8) UNAL,
     1392     9717    1         2 B2 UBIN(8) UNAL,
     1393     9718    1         2 B3 UBIN(8) UNAL,
     1394     9719    1         2 B4 UBIN(8) UNAL;
     1395     9720
     1396     9721        /*    Based          */
     1397     9722
     1398     9723        %NI$DCT;
     1399     9771        %NI$DQH;
     1400     9794        %FR$RAT;
     1401     9834        %K$RWPARM (NAME=KI$RWPARM,STCLASS=BASED);
     1402    10150        %NK$LDCT;
     1403    10196        %KI$QMHDR;
     1404    10245        %KI$FEI;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:203  
     1405    10329        %FPP$WRITELBLREQ (NAME=WRITELBLREQ,STCLASS="BASED(M$)");
     1406    10347        %FPP$PEOVREQ (NAME=PEOVREQ,STCLASS="BASED(M$)");
     1407    10364        %FPP$RDEOFREQ (NAME=RDEOFREQ,STCLASS="BASED(M$)");
     1408    10380        %FPP$FNDSQREQ (NAME=FNDSQREQ,STCLASS="BASED(M$)");
     1409    10397        %FPP$FNDFLREQ (NAME=FNDFLREQ,STCLASS="BASED(M$)");
     1410    10416        %FPP$XFERREQ (NAME=XFERREQ,STCLASS="BASED(M$)");
     1411    10445        %FPP$COPYREQ (NAME=COPYREQ,STCLASS="BASED(M$)");
     1412    10462        %FPP$LABELREQ (NAME=LABELREQ,STCLASS="BASED(M$)");
     1413    10479        %FPP$WRITELBLACK (NAME=WRITELBLACK,STCLASS="BASED(K$RWPARM.MSG$)");
     1414    10495        %FPP$PEOVACK (NAME=PEOVACK,STCLASS="BASED(K$RWPARM.MSG$)");
     1415    10513        %FPP$RDEOFACK (NAME=RDEOFACK,STCLASS="BASED(K$RWPARM.MSG$)");
     1416    10530        %FPP$FNDACK (NAME=FNDACK,STCLASS="BASED(K$RWPARM.MSG$)");
     1417    10547        %FPP$LABELACK (NAME=LABELACK,STCLASS="BASED(K$RWPARM.MSG$)");
     1418    10563        %FPP$XFERACK (NAME=XFERACK,STCLASS="BASED(K$RWPARM.MSG$)");
     1419    10593        %FP$OPCI (STCLASS=BASED);
     1420    10603    1   DCL 1 CNVT BASED,
     1421    10604    1         2 * BIT(20) UNAL,
     1422    10605    1         2 HI BIT(8) UNAL,
     1423    10606    1         2 LO BIT(8) UNAL;
     1424    10607    1   DCL SER CHAR(6) BASED(SER$);
     1425    10608    1   DCL LBL CHAR(80) BASED;
     1426    10609    1   DCL HDRS CHAR(160) BASED;
     1427    10610
     1428    10611
     1429    10612        /*    Constant                       */
     1430    10613
     1431    10614
     1432    10615        /*    External                      */
     1433    10616
     1434    10617        %K$RWPARM (NAME=K_RWPARM_CON,STCLASS=SYMREF);
     1435    10933
     1436    10934    1   DCL FP_OPCI$$ PTR SYMREF;
     1437    10935    1   DCL N$DCT$(0:0) PTR BASED(N$DCT$$);
     1438    10936    1   DCL B$JIT$ PTR SYMREF;
     1439    10937    1   DCL S_CUN UBIN SYMREF;
     1440    10938
     1441    10939    1   DCL KIA$WRITE_USER ENTRY(2) ALTRET;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:204  
     1442    10940    1   DCL KIA$MSG ENTRY(1) ALTRET;
     1443    10941    1   DCL KIA$OQFL ENTRY(1) ALTRET;
     1444    10942    1   DCL KIS$SEND ENTRY(1) ALTRET;
     1445    10943    1   DCL KIQ$MAPFEP ENTRY(1);
     1446    10944    1   DCL SSR$REG ENTRY(3) ALTRET;
     1447    10945    1   DCL MMS$VGET ENTRY(4) ALTRET;
     1448    10946    1   DCL MMS$VREL ENTRY(2) ALTRET;
     1449    10947    1   DCL SC_FPOBADSEND ENTRY CONV(2,0);
     1450    10948
     1451    10949
     1452    10950
     1453    10951        %FT$ERR( ERRNAME=E_CANTLABELOD, FCG='0620'O, MID='17'O, CODE=%E$CANTLABELOD, SEV=2 )
             10951            ;
     1454    10959        /*E*     ERROR: FPO-E$CANTLABELOD-2
     1455    10960                 MESSAGE: Can't relabel optical disk platter% %SN%.
     1456    10961                 MESSAGE1: A labeling operation was attempted on an optical disk
     1457    10962                    platter% (%SN)% that had already been labelled.
     1458    10963         ***/
     1459    10964
     1460    10965        %FT$ERR( ERRNAME=E_IOERR, FCG='0620'O, MID='17'O, CODE=%E$IOERR, SEV=2 );
     1461    10973
     1462    10974        %FT$ERR( ERRNAME=E_NOODSPACE, FCG='0620'O, MID='17'O, CODE=%E$NOODSPACE, SEV=2 );
     1463    10982        /*E*     ERROR: FPO-E$NOODSPACE-2
     1464    10983                 MESSAGE: Not enough space on optical disk volume% %SN% for file header.
     1465    10984                 MESSAGE1: There was not enough space left on an optical disk volume
     1466    10985                    for the file header information of the file being closed.  The
     1467    10986                    data in that file% (%TA)% is now inaccessible.
     1468    10987         ***/
     1469    10988
     1470    10989
     1471    10990
     1472    10991
     1473    10992    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);
     1474    10993    1         WRITELBLREQ.HDR1 = LBL1$->LBL;
     1475    10994    1         WRITELBLREQ.HDR2 = LBL2$->LBL;
     1476    10995    1         CALL WR_OSAR_MSG (%FP_FNC_WRITELBL,SIZEC(WRITELBLREQ)) ALTRET(BRKOUT);
     1477    10996    1         CALL CHKPOSLST ALTRET(BRKOUT);
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:205  
     1478    10997    1         ERRSAV = '0'B;
     1479    10998    2         DO CASE(WRITELBLACK.STT);
     1480    10999    2          CASE(0);                      /* Success. */
     1481    11000                                               /* Nothing to do. */
     1482    11001    2          CASE(1);                      /* No space to write EOV/EOF label. */
     1483    11002    2            ERRSAV = E_NOODSPACE;
     1484    11003    2            F$DCB.TYC.IOERR(1) = '1'B;
     1485    11004    2          CASE(2,3);                    /* Bad media or other error. */
     1486    11005    2            ERRSAV = E_IOERR;
     1487    11006    2            F$DCB.TYC.IOERR(1) = '1'B;
     1488    11007    2          END;
     1489    11008    1         K$RWPARM.LDCT$ = LDCT$;
     1490    11009    1         K$RWPARM.FUNCTION = %K_READDONE;
     1491    11010    1         CALL KIS$SEND (K$RWPARM);
     1492    11011              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
     1493    11014    2         IF ERRSAV THEN DO;
     1494    11015    2            B$JIT.ERR = ERRSAV;
     1495    11016    2            ALTRETURN;
     1496    11017    2            END;
     1497    11018    1         RETURN;
     1498    11019
     1499    11020        /*F*  NAME: FPO$PEOV
     1500    11021              PURPOSE: Obtain end of volume information from current
     1501    11022                  volume.
     1502    11023              DESCRIPTION:  Send an PEOV message to the controller and
     1503    11024              and put the results into the DDT entry.
     1504    11025
     1505    11026              CALLING SEQUENCE:
     1506    11027                 CALL FPO$PEOV(direction) ALTRET(err_proc);
     1507    11028
     1508    11029        */
     1509    11030
     1510    11031    1   FPO$PEOV: ENTRY(DCTX) ALTRET;
     1511    11032
     1512    11033    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET (BRKOUT);
     1513    11034    1         IF DIR < 0 THEN
     1514    11035    1            PEOVREQ.DIR = '0';           /* Position to beginning */
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:206  
     1515    11036    1         ELSE
     1516    11037    1            PEOVREQ.DIR = '1';           /* Position to end */
     1517    11038    1         CALL WR_OSAR_MSG (%FP_FNC_POSEOV,SIZEC(PEOVREQ)) ALTRET(BRKOUT);
     1518    11039    1         CALL CHKPOSLST ALTRET(BRKOUT);
     1519    11040    1         CALL CHARBIN (I,PEOVACK.FSEQU_NUM);
     1520    11041    2         IF I > 0 THEN DO;
     1521    11042    2            IF PEOVACK.TYPE = 'EOV1' THEN
     1522    11043    2               D$->FT$DDT.POS = FTP_EOV#;
     1523    11044    2            ELSE IF PEOVACK.TYPE = 'EOF1' THEN
     1524    11045    2                  D$->FT$DDT.POS = FTP_HDR#;
     1525    11046    2               ELSE
     1526    11047    2                  D$->FT$DDT.POS = FTP_BOV#;
     1527    11048    2            D$->FT$DDT.FSN = I - 1;
     1528    11049    2            END;
     1529    11050    2         ELSE DO;
     1530    11051    2            D$->FT$DDT.POS = FTP_BOV#;
     1531    11052    2            D$->FT$DDT.FSN = 0;
     1532    11053    2            END;
     1533    11054    1         K$RWPARM.LDCT$ = LDCT$;
     1534    11055    1         K$RWPARM.FUNCTION = %K_READDONE;
     1535    11056    1         CALL KIS$SEND (K$RWPARM);
     1536    11057              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
     1537    11060    1         RETURN;
     1538    11061
     1539    11062
     1540    11063        /*F*  NAME: FPO$REWIND
     1541    11064              PURPOSE: Perform DCB-less rewind for the M$REW pmme.
     1542    11065              DESCRIPTION:  Send a PEOV message to the controller and
     1543    11066                            put the results into the DDT entry.
     1544    11067
     1545    11068              CALLING SEQUENCE:
     1546    11069                 CALL FPO$REWIND(dctx) ALTRET(err_proc);
     1547    11070
     1548    11071        */
     1549    11072
     1550    11073    1   FPO$REWIND: ENTRY(DCTX) ALTRET;
     1551    11074
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:207  
     1552    11075    1         CALL SETUP (DCTX) ALTRET(BRKOUT);
     1553    11076    1         PEOVREQ.DIR = '0';           /* Position to beginning */
     1554    11077    1         CALL WR_OSAR_MSG (%FP_FNC_POSEOV,SIZEC(PEOVREQ)) ALTRET(BRKOUT);
     1555    11078    1         CALL CHKPOSLST ALTRET(BRKOUT);
     1556    11079    1         D$->FT$DDT.POS = FTP_BOV#;
     1557    11080    1         K$RWPARM.LDCT$ = LDCT$;
     1558    11081    1         K$RWPARM.FUNCTION = %K_READDONE;
     1559    11082    1         CALL KIS$SEND (K$RWPARM);
     1560    11083              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
     1561    11086    1         RETURN;
     1562    11087
     1563    11088
     1564    11089        /*F*  NAME: FPO$OPENIN
     1565    11090              PURPOSE: Inform ADSS controller that the file positioned to
     1566    11091                  with a FINDSEQ or FINDFILE is being opened.
     1567    11092              DESCRIPTION:  Send a OPENIN message to the controller.  No
     1568    11093              results are returned.
     1569    11094
     1570    11095              CALLING SEQUENCE:
     1571    11096                 CALL FPO$OPENIN ALTRET(err_proc);
     1572    11097
     1573    11098        */
     1574    11099
     1575    11100    1   FPO$OPENIN: ENTRY ALTRET;
     1576    11101
     1577    11102    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);
     1578    11103    1         CALL WR_OSAR_MSG (%FP_FNC_OPENIN,SIZEC(RDEOFREQ)) ALTRET(BRKOUT);
     1579    11104    1         CALL CHKPOSLST ALTRET(BRKOUT);
     1580    11105    1         K$RWPARM.LDCT$ = LDCT$;
     1581    11106    1         K$RWPARM.FUNCTION = %K_READDONE;
     1582    11107    1         CALL KIS$SEND (K$RWPARM);
     1583    11108              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
     1584    11111    1         RETURN;
     1585    11112
     1586    11113
     1587    11114        /*F*  NAME: FPO$CLOSEIN
     1588    11115              PURPOSE: Inform ADSS controller that the current file is
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:208  
     1589    11116                  being closed.
     1590    11117              DESCRIPTION:  Send a CLOSEIN message to the controller.  No
     1591    11118              results are returned.
     1592    11119
     1593    11120              CALLING SEQUENCE:
     1594    11121                 CALL FPO$CLOSEIN ALTRET(err_proc);
     1595    11122
     1596    11123        */
     1597    11124
     1598    11125    1   FPO$CLOSEIN: ENTRY ALTRET;
     1599    11126
     1600    11127
     1601    11128    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET (BRKOUT);
     1602    11129    1         CALL WR_OSAR_MSG (%FP_FNC_CLOSEIN,SIZEC(RDEOFREQ)) ALTRET(BRKOUT);
     1603    11130    1         CALL CHKPOSLST ALTRET(BRKOUT);
     1604    11131    1         K$RWPARM.LDCT$ = LDCT$;
     1605    11132    1         K$RWPARM.FUNCTION = %K_READDONE;
     1606    11133    1         CALL KIS$SEND (K$RWPARM);
     1607    11134              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
     1608    11137    1         RETURN;
     1609    11138
     1610    11139        /*F*  NAME: FPO$RDEOFLBL
     1611    11140              PURPOSE: Obtain end of file information from current
     1612    11141                  file.
     1613    11142              DESCRIPTION:  Send an RDEOF message to the controller and
     1614    11143              and put the results into the caller's buffer.
     1615    11144
     1616    11145              CALLING SEQUENCE:
     1617    11146                 CALL FPO$RDEOFLBL (LBL1$) ALTRET(err_proc);
     1618    11147
     1619    11148        */
     1620    11149
     1621    11150    1   FPO$RDEOFLBL: ENTRY(DCTX) ALTRET;
     1622    11151
     1623    11152    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);
     1624    11153    1         CALL WR_OSAR_MSG (%FP_FNC_RDEOF,SIZEC(RDEOFREQ)) ALTRET(BRKOUT);
     1625    11154    1         CALL CHKPOSLST ALTRET(BRKOUT);
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:209  
     1626    11155    1         LBL1$->LBL = RDEOFACK.LBL;
     1627    11156    1         K$RWPARM.LDCT$ = LDCT$;
     1628    11157    1         K$RWPARM.FUNCTION = %K_READDONE;
     1629    11158    1         CALL KIS$SEND (K$RWPARM);
     1630    11159              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
     1631    11162    1         RETURN;
     1632    11163
     1633    11164        /*F*  NAME: FPO$COPYDEV
     1634    11165              PURPOSE: tell the controller to copy optical disc specified
     1635    11166              by DCB.UB$->VLP$SN to the unlabeled optical disc to which
     1636    11167              this DCB is open.  The labeled disc had to have been previously
     1637    11168              mounted by a FILE type open.
     1638    11169        */
     1639    11170    1   FPO$COPYDEV: ENTRY ALTRET;
     1640    11171    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);
     1641    11172    1         COPYREQ.SER = F$DCB.UB$->SER;
     1642    11173    1         CALL WR_OSAR_MSG (%FP_FNC_COPY,SIZEC(COPYREQ)) ALTRET(BRKOUT);
     1643    11174    1         GOTO LABEL1;
     1644    11175
     1645    11176
     1646    11177        /*F*  NAME: FPO$LABELOD
     1647    11178              PURPOSE: Tell the controller to label a platter.
     1648    11179
     1649    11180              CALLING SEQUENCE:
     1650    11181                 CALL FPO$LABELOD(LBL1$) ALTRET(err_proc);
     1651    11182
     1652    11183        */
     1653    11184
     1654    11185    1   FPO$LABELOD: ENTRY(DCTX) ALTRET;
     1655    11186
     1656    11187    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);
     1657    11188    1         LABELREQ.VOL1 = LBL1$->LBL;  /* Fill in VOL1 info from user's buffer. */
     1658    11189    1         CALL WR_OSAR_MSG(%FP_FNC_LABEL,SIZEC(LABELREQ)) ALTRET(BRKOUT);
     1659    11190    1   LABEL1: ;   /* completion code for COPY is same as for LABEL */
     1660    11191    1         CALL CHKPOSLST ALTRET(BRKOUT);
     1661    11192    1         ERRSAV = '0'B;
     1662    11193    2         DO CASE(LABELACK.STT);
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:210  
     1663    11194    2          CASE(0);                       /* Success. */
     1664    11195                                                /* Do nothing. */
     1665    11196    2          CASE(1);                       /* Platter already labelled. */
     1666    11197    2            ERRSAV = E_CANTLABELOD;
     1667    11198    2          CASE(2);                       /* I/O error. */
     1668    11199    2            ERRSAV = E_IOERR;
     1669    11200    2            F$DCB.TYC.IOERR(1) = '1'B;
     1670    11201    2          END;
     1671    11202    1         F$DCB.TYC(0) = F$DCB.TYC(1);
     1672    11203    1         K$RWPARM.LDCT$ = LDCT$;
     1673    11204    1         K$RWPARM.FUNCTION = %K_READDONE;
     1674    11205    1         CALL KIS$SEND (K$RWPARM);
     1675    11206              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
     1676    11209    1         IF ERRSAV THEN
     1677    11210    1            B$JIT.ERR = ERRSAV;
     1678    11211    1         RETURN;
     1679    11212
     1680    11213    1   FPO$FINDFSN: ENTRY(DCTX) ALTRET;
     1681    11214
     1682    11215    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);
     1683    11216    1         F$DCB.TYC = '0'B;
     1684    11217    1         CALL BINCHAR (FNDSQREQ.FSN,F$DCB.FSN);
     1685    11218    1         CALL WR_OSAR_MSG (%FP_FNC_FNDSEQ,SIZEC(FNDSQREQ)) ALTRET(BRKOUT);
     1686    11219    1         CALL CHKPOSLST ALTRET(BRKOUT);
     1687    11220    2         DO CASE(FNDACK.STT);             /* Check status. */
     1688    11221    2          CASE(0);                      /* Success.      */
     1689    11222    2            LBL1$->HDRS = FNDACK.HDRS; /* Return HDR1 and HDR2 labels */
     1690    11223    2          CASE(1);                      /* File was before BOV. */
     1691    11224    2            F$DCB.TYC.BOT(1) = '1'B;
     1692    11225    2          CASE(2);                      /* File was after EOV, no next vol. */
     1693    11226    2            F$DCB.TYC.EOF(1) = '1'B;
     1694    11227    2          CASE(3);                      /* File was after EOV, have next vol. */
     1695    11228    2            F$DCB.TYC.EOT(1) = '1'B;
     1696    11229    2          CASE(4);                      /* Empty entry for this FSN. */
     1697    11230    2            F$DCB.TYC.EOD(1) = '1'B;
     1698    11231    2          CASE(5);                      /* Can't read header sector. */
     1699    11232    2            F$DCB.TYC.IOERR(1) = '1'B;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:211  
     1700    11233    2          END;
     1701    11234    1         K$RWPARM.LDCT$ = LDCT$;
     1702    11235    1         K$RWPARM.FUNCTION = %K_READDONE;
     1703    11236    1         CALL KIS$SEND (K$RWPARM);
     1704    11237              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
     1705    11240    1         RETURN;
     1706    11241
     1707    11242    1   FPO$FINDFILE: ENTRY(DCTX ) ALTRET;
     1708    11243
     1709    11244    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);
     1710    11245    1         FNDFLREQ.NM = F$DCB.NAME;
     1711    11246    1         F$DCB.TYC = '0'B;
     1712    11247    1         CALL WR_OSAR_MSG (%FP_FNC_FNDFIL,SIZEC(FNDFLREQ)) ALTRET(BRKOUT);
     1713    11248    1         CALL CHKPOSLST ALTRET(BRKOUT);
     1714    11249    2         DO CASE(FNDACK.STT);             /* Check status. */
     1715    11250    2          CASE(0);                      /* Success.      */
     1716    11251    2            LBL1$->HDRS = FNDACK.HDRS; /* Return HDR1 and HDR2 labels */
     1717    11252    2          CASE(2);                      /* File not found, no next vol. */
     1718    11253    2            F$DCB.TYC.EOF(1) = '1'B;
     1719    11254    2          CASE(3);                      /* File not found, have next vol. */
     1720    11255    2            F$DCB.TYC.EOT(1) = '1'B;
     1721    11256    2          CASE(5);                      /* Can't read header sector. */
     1722    11257    2            F$DCB.TYC.IOERR(1) = '1'B;
     1723    11258    2          CASE(6);                      /* Volume was empty. */
     1724    11259    2            F$DCB.TYC.EOD(1) = '1'B;
     1725    11260    2          END;
     1726    11261    1         K$RWPARM.LDCT$ = LDCT$;
     1727    11262    1         K$RWPARM.FUNCTION  = %K_READDONE;
     1728    11263    1         CALL KIS$SEND (K$RWPARM);
     1729    11264              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
     1730    11267    1         RETURN;
     1731    11268
     1732    11269        /*    Read Library Map from OD Controller                         */
     1733    11270
     1734    11271    1   FPO$RDODMAP: ENTRY(DCTX) ALTRET;
     1735    11272    1         F = %FP_FNC_MAP;
     1736    11273    1         M$ = ADDR(MSG);
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:212  
     1737    11274    1         XFERREQ.USRNO.B1 = S_CUN / 256;
     1738    11275    1         XFERREQ.USRNO.B2 = MOD(S_CUN,256);
     1739    11276    1         GOTO RDWROD;
     1740    11277    1   FPO$RDODBLK: ENTRY(DCTX) ALTRET;
     1741    11278    1         F = %FP_FNC_RD;
     1742    11279    1         GOTO RDWROD;
     1743    11280    1   FPO$WRODBLK: ENTRY(DCTX) ALTRET;
     1744    11281    1         F = %FP_FNC_WR;
     1745    11282    1         GOTO RDWROD;
     1746    11283    1   FPO$TRUNC: ENTRY(DCTX) ALTRET;
     1747    11284    1         F = %FP_FNC_TRUNC;
     1748    11285    1         GOTO RDWROD;
     1749    11286    1   FPO$UNTRUNC: ENTRY(DCTX) ALTRET;
     1750    11287    1         F = %FP_FNC_UNTRUNC;
     1751    11288    1   RDWROD: ;
     1752    11289    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);
     1753    11290    1         F$DCB.TYC = '0'B;
     1754    11291    1         QSZ = F$DCB.ARS;
     1755    11292    1         WSQ = N$DCT$(DCTN)->NI$DCT.OD.FEI$->KI$FEI.FEWSQ;
     1756    11293    1         CALL MMS$VGET (WSQ,BFR$,SZ,QMP$) ALTRET(NOBFR);
     1757    11294    1         XFERREQ.ADR.B4 = MP.B4;
     1758    11295    1         XFERREQ.ADR.B3 = MP.B3;
     1759    11296    1         XFERREQ.ADR.B2 = MP.B2;
     1760    11297    1         XFERREQ.ADR.B1 = 0;
     1761    11298    1         XFERREQ.SIZE.B4 = SZ.B4;
     1762    11299    1         XFERREQ.SIZE.B3 = SZ.B3;
     1763    11300    1         XFERREQ.SIZE.B2 = SZ.B2;
     1764    11301    1         XFERREQ.SIZE.B1 = 0;
     1765    11302    1         CALL WR_OSAR_MSG (F,SIZEC(XFERREQ)) ALTRET(WRERR);
     1766    11303    1         CALL CHKPOSLST ALTRET(BRKOUT);
     1767    11304    2         DO CASE(XFERACK.STT);
     1768    11305    2          CASE(0);                      /* Success. */
     1769    11306                                               /* Nothing to do. */
     1770    11307    2          CASE(1);                      /* End of file hit (read). */
     1771    11308    2            F$DCB.TYC.EOF(1) = '1'B;
     1772    11309    2          CASE(2);                      /* I/O error hit. */
     1773    11310    2            F$DCB.TYC.IOERR(1) = '1'B;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:213  
     1774    11311    2          CASE(3);                      /* Lost data (on reads only). */
     1775    11312    2            F$DCB.TYC.LD(1) = '1'B;
     1776    11313    2          CASE(4);                      /* End of platter hit (write). */
     1777    11314    2            F$DCB.TYC.EOT(1) = '1'B;
     1778    11315    2          END;
     1779    11316    1         CNVTLNG.B1 = XFERACK.SIZE.B1;
     1780    11317    1         CNVTLNG.B2 = XFERACK.SIZE.B2;
     1781    11318    1         CNVTLNG.B3 = XFERACK.SIZE.B3;
     1782    11319    1         CNVTLNG.B4 = XFERACK.SIZE.B4;
     1783    11320    1         F$DCB.ARS = CNVTLNGWD;
     1784    11321    1         K$RWPARM.LDCT$ = LDCT$;
     1785    11322    1         K$RWPARM.FUNCTION  = %K_READDONE;
     1786    11323    1         CALL KIS$SEND (K$RWPARM);
     1787    11324              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
     1788    11327    1         CALL MMS$VREL (WSQ,QMP$);
     1789    11328    2         IF F$DCB.TYC.IOERR(1) THEN DO;   /* I/O error happened, need to altret. */
     1790    11329    2            B$JIT.ERR = E_IOERR;
     1791    11330    2            ALTRETURN;
     1792    11331    2            END;
     1793    11332    1         RETURN;
     1794    11333    1   WRERR: CALL MMS$VREL (WSQ,QMP$);
     1795    11334    1   BRKOUT:
     1796    11335    2         IF LDCT$->NK$LDCT.DFLG.FEDN THEN DO;
     1797    11336    2            B$JIT.DCB$->F$DCB.TYC.IOERR(1) = '1'B;
     1798    11337    2            B$JIT.ERR = E_IOERR;
     1799    11338    2            END;
     1800    11339
     1801    11340    1   NOBFR: ;
     1802    11341    1         CALL SC_FPOBADSEND;          /* No buffers - cant send */
     1803    11342
     1804    11343        /*S*  SCREECH_CODE: FPO-S$BADSEND-8
     1805    11344              TYPE: SCREECH
     1806    11345              MESSAGE: No buffer space in CWSQ for OD data transfer.
     1807    11346              DESCRIPTION:  MMS$VGET was unable to find space for the output
     1808    11347              buffer in the Comm WSQ for the current read write operation.
     1809    11348              There should always be enough space since there are only four
     1810    11349              devices at a max of 8k words each.
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:214  
     1811    11350        */
     1812    11351
     1813    11352    1   WR_OSAR_MSG: PROC (FNC,MSZ) ALTRET;
     1814    11353
     1815    11354    2   DCL FNC UBIN;                      /* function code to send */
     1816    11355    2   DCL MSZ UBIN;                      /* message size             */
     1817    11356
     1818    11357        %FPP$MHDR (NAME=MSG,STCLASS="BASED(M$)",LAST=";");
     1819    11371
     1820    11372
     1821    11373    2         MSG.FNC = FNC;
     1822    11374    2         MSG.DCTX.HI = CDCT.HI;       /* soliciting resource dct index */
     1823    11375    2         MSG.DCTX.LO = CDCT.LO;
     1824    11376    2         IF FNC = %FP_FNC_MAP THEN
     1825    11377    2            MSG.DEV# = 0;             /* send message to admin */
     1826    11378    2         ELSE
     1827    11379    2            MSG.DEV# = N$DCT$(DCTN)->NI$DCT.DVN;/* destination device */
     1828    11380    2         K$RWPARM = K_RWPARM_CON;
     1829    11381    2         K$RWPARM.MSG$ = M$;
     1830    11382    2         K$RWPARM.MSGSZ = MSZ;
     1831    11383              %LOCK (G=LDCT$->NK$LDCT.LOCK);
     1832    11386    2   WRT:  CALL KIA$WRITE_USER (LDCT$->NK$LDCT,K$RWPARM) ALTRET(QFULL);
     1833    11387    2         CALL SSR$REG (%SS_CW,LDCT$) ALTRET(BRKOUT);
     1834    11388              %LOCK (G=LDCT$->NK$LDCT.LOCK);
     1835    11391    2   RD:   ;
     1836    11392    2         K$RWPARM.IP$ = LDCT$->NK$LDCT.IP$;
     1837    11393    2         LDCT$->NK$LDCT.IP$ = ADDR(NIL);
     1838    11394    3         IF K$RWPARM.IP$ ~= ADDR(NIL) THEN DO;
     1839    11395    3            CALL KIQ$MAPFEP(LDCT$->NK$LDCT.IPFEI#);
     1840    11396    3            K$RWPARM.UHDR$ = PINCRC(K$RWPARM.IP$,K$RWPARM.IP$->KI$QMHDR.OFFSET);
     1841    11397    3            K$RWPARM.UHDRSZ = K$RWPARM.IP$->KI$QMHDR.SIZE;
     1842    11398    3            CALL KIA$MSG (K$RWPARM);
     1843    11399    3            END;
     1844    11400    2         RETURN;
     1845    11401
     1846    11402    2   QFULL: IF (S$CU$->B$U.ASYNCH & ~%U_RESET) OR LDCT$->NK$LDCT.DFLG.FEDN THEN
     1847    11403    2            GOTO BRKOUT1;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:215  
     1848    11404    3         IF K$RWPARM.ERR = %K$NO_THROT THEN DO;
     1849    11405    3            N$DCT$(DCTN)->NI$DCT.OD.THRTLD = 1;
     1850    11406    3            CALL SSR$REG (%SS_CBL,LDCT$);
     1851    11407                %LOCK (G=LDCT$->NK$LDCT.LOCK);
     1852    11410    3            GOTO WRT;
     1853    11411    3            END;
     1854    11412    3         IF K$RWPARM.ERR = %K$QFULL THEN DO;
     1855    11413    3            CALL KIA$OQFL (LDCT$->NK$LDCT) ALTRET(BRKOUT) ;
     1856    11414    3            GOTO WRT;
     1857    11415    3            END;
     1858    11416    2   BRKOUT1:
     1859    11417              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
     1860    11420    2         ALTRETURN;                   /* Error                        */
     1861    11421
     1862    11422    2   BRKOUT: ;
     1863    11423              %LOCK (G=LDCT$->NK$LDCT.LOCK);
     1864    11426    2         IF LDCT$->NK$LDCT.IP$ ~= ADDR(NIL) THEN
     1865    11427    2            GOTO RD;
     1866    11428              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
     1867    11431    2         ALTRETURN;
     1868    11432    2   END;
     1869    11433    1   SETUP: PROC(DCTX) ALTRET;
     1870    11434
     1871    11435    2   DCL DCTX UBIN;
     1872    11436
     1873    11437    2         M$ = ADDR(MSG);             /* Message pointer for write */
     1874    11438    2         DCTN = DCTX;                 /* DCT index                   */
     1875    11439    2         JDCB$ = B$JIT.DCB$;          /* DCB pointer               */
     1876    11440    2         LDCT$ = N$DCT$(DCTX)->NI$DCT.OD.LDCT$;
     1877    11441    2         D$ = N$DCT$(DCTX)->NI$DCT.DDT$; /* DDT pointer            */
     1878    11442    3         IF D$->FT$DDT.POSLOST THEN DO;
     1879    11443    3            B$JIT.ERR = E_IOERR;
     1880    11444    3            ALTRETURN;
     1881    11445    3            END;
     1882    11446    2         RETURN;
     1883    11447    2   END;
     1884    11448
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:216  
     1885    11449    1   CHKPOSLST: PROC ALTRET;
     1886    11450
     1887    11451    3         IF XFERACK.STT = 6 THEN DO;
     1888    11452    3            B$JIT.ERR = E_IOERR;
     1889    11453    3            B$JIT.DCB$->F$DCB.TYC.IOERR(1) = '1'B;
     1890    11454    3            D$->FT$DDT.POSLOST = '1'B;
     1891    11455    3            ALTRETURN;
     1892    11456    3            END;
     1893    11457    2         RETURN;
     1894    11458    2   END;
     1895    11459    1         ALTRETURN;
     1896    11460    1   END;

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:217  
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FP_MACRO_C.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FT$DDT.:E05TOU  cannot be made into a system file and is referenced.
   FR$RAT.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   KI$MHDR.:E05TOU  is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
   K_SUBS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F_SCODE_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FPO$WRITELBL.

   Procedure FPO$WRITELBL requires 992 words for executable code.
   Procedure FPO$WRITELBL requires 116 words of local(AUTO) storage.

    No errors detected in file FPO$OPNOD.:E05TSI    .

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:218  

 Object Unit name= FPO$WRITELBL                               File name= FPO$OPNOD.:E05TOU
 UTS= JUL 29 '97 17:20:03.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      5      5  FPO$WRITELBL
    2   Proc  even  none   992   1740  FPO$WRITELBL
    3  RoData even  none    33     41  FPO$WRITELBL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  FPO$WRITELBL
     2    115          yes     yes      Std        1  FPO$PEOV
     2    247          yes     yes      Std        1  FPO$REWIND
     2    320          yes     yes      Std        0  FPO$OPENIN
     2    364          yes     yes      Std        0  FPO$CLOSEIN
     2    430          yes     yes      Std        1  FPO$RDEOFLBL
     2    502          yes     yes      Std        0  FPO$COPYDEV
     2    531          yes     yes      Std        1  FPO$LABELOD
     2    637          yes     yes      Std        1  FPO$FINDFSN
     2    765          yes     yes      Std        1  FPO$FINDFILE
     2   1104          yes     yes      Std        1  FPO$RDODMAP
     2   1127          yes     yes      Std        1  FPO$RDODBLK
     2   1134          yes     yes      Std        1  FPO$WRODBLK
     2   1141          yes     yes      Std        1  FPO$TRUNC
     2   1146          yes     yes      Std        1  FPO$UNTRUNC
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:219  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KIS$SEND
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       4 MMS$VGET
 yes     yes           Std       2 MMS$VREL
         yes           Std       1 HFC$LOCK
 yes     yes           Std       2 KIA$WRITE_USER
 yes     yes           Std       3 SSR$REG
         yes           Std       1 KIQ$MAPFEP
 yes     yes           Std       1 KIA$OQFL
 yes     yes           Std       1 KIA$MSG
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_FPOBADSEND                         M$UC                                  N$DCT$$
     S$CU$                                 K_RWPARM_CON                          B$JIT$
     S_CUN                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:220  


     1294        1        /*T***********************************************************/
     1295        2        /*T*                                                         */
     1296        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1297        4        /*T*                                                         */
     1298        5        /*T***********************************************************/
     1299        6        /*F*  NAME: FPO$WRITELBL
     1300        7              PURPOSE: Write labels to optical disk volumes.
     1301        8              DESCRIPTION:  Send a write-label message containing the label
     1302        9              data to the optical disc device handler.
     1303       10
     1304       11              CALLING SEQUENCE:
     1305       12                 CALL FPO$WRITELBL (LBL1$,LBL2$) ALTRET(cvol_proc);
     1306       13
     1307       14        */
     1308       15
     1309       16        FPO$WRITELBL: PROC  (DCTX,SER$) ALTRET;

     16  2 000000   000000 700200 xent  FPO$WRITELBL TSX0  ! X66_AUTO_2
         2 000001   000164 000002                    ZERO    116,2

     1310       17
     1311       18        %INCLUDE CP_6;
     1312     5577        %INCLUDE CP_6_SUBS;
     1313     6117        %INCLUDE F_SCODE_C;
     1314     6153        %INCLUDE B$JIT_C;
     1315     6467           %B$JIT0;
     1316     6556           %U$JIT1X;
     1317     6559           %M$JIT2X;
     1318     6562           %F$JIT3;
     1319     6567           %S$JIT4X;
     1320     6570           %J$JIT5X;
     1321     6573           %A$JIT6;
     1322     6583        %MACRO F$DCBBJ(BASED=BASED);
     1323     6584        %INCLUDE F$DCB;
     1324     6633        %MEND;
     1325     6634           %F$DCBBJ(BASED="BASED(JDCB$)");
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:221  
     1326     6684        %INCLUDE K_SUBS_C;
     1327     6717        %INCLUDE K$RWPARM;
     1328     7103        %INCLUDE KI_MACROS_C;
     1329     7711        %INCLUDE KI$MHDR;
     1330     7852        %INCLUDE NI$TABLES;
     1331     8068        %INCLUDE NK$LDCT;
     1332     8170        %INCLUDE NK_LDCT_R;
     1333     8179        %INCLUDE B$USER;
     1334     8395        %B$USERREFS;
     1335     8399        %INCLUDE SS_SCHED_C;
     1336     8632        %INCLUDE FR$RAT;
     1337     8685        %INCLUDE FT$DDT;
     1338     8746        %INCLUDE F_ERRORS_C;
     1339     8986        %INCLUDE FT_SUBS;
     1340     9066        %INCLUDE FP_MACRO_C;
     1341     9338        %INCLUDE HF_LOCK_C;
     1342     9352
     1343     9353
     1344     9354        /*    Parameters    */
     1345     9355    1   DCL DCTX UBIN;                     /* Soliciting device DCT index */
     1346     9356    1   DCL LBL1$ REDEF DCTX PTR;          /* HDR1 label record ptr       */
     1347     9357    1   DCL BFR$ REDEF DCTX PTR;           /* I/O buffer pointer             */
     1348     9358    1   DCL DIR REDEF DCTX SBIN;           /* search direction           */
     1349     9359    1   DCL SER$ PTR;                      /* Serial number ptr          */
     1350     9360    1   DCL LBL2$ REDEF SER$ PTR;          /* HDR2 label record ptr       */
     1351     9361    1   DCL FSN REDEF SER$ UBIN;           /* file sequence number        */
     1352     9362    1   DCL CONFNC REDEF SER$ UBIN;        /*  1 = partition, 0 = return  */
     1353     9363
     1354     9364        /*    Auto           */
     1355     9365
     1356     9366        %K$RWPARM (NAME=K$RWPARM, STCLASS="");
     1357     9682
     1358     9683    1   DCL O$ PTR;
     1359     9684    1   DCL D$ PTR;
     1360     9685    1   DCL M$ PTR;
     1361     9686    1   DCL LDCT$ PTR;
     1362     9687    1   DCL RAT$ PTR;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:222  
     1363     9688    1   DCL JDCB$ PTR;
     1364     9689    1   DCL ERRSAV BIT(36);
     1365     9690    1   DCL I UBIN;
     1366     9691    1   DCL F UBIN;
     1367     9692    1   DCL WSQ UBIN;
     1368     9693    1   DCL STT UBIN;                      /* message write status         */
     1369     9694    1   DCL DEV UBIN;
     1370     9695    1   DCL DCTN UBIN;
     1371     9696    1   DCL 1 CDCT REDEF DCTN,
     1372     9697    1         2 * BIT(20),
     1373     9698    1         2 HI UBIN(8) UNAL,
     1374     9699    1         2 LO UBIN(8) UNAL;
     1375     9700    1   DCL MSG CHAR(180);
     1376     9701    1   DCL QSZ UBIN WORD;
     1377     9702    1   DCL 1 SZ REDEF QSZ,
     1378     9703    1         2 * UBIN(12) UNAL,
     1379     9704    1         2 B2 UBIN(8) UNAL,
     1380     9705    1         2 B3 UBIN(8) UNAL,
     1381     9706    1         2 B4 UBIN(8) UNAL;
     1382     9707    1   DCL QMP$ PTR;                      /* CWSQ buffer pointer, converts to */
     1383     9708    1   DCL 1 MP REDEF QMP$,               /* word offset for DIB xfer      */
     1384     9709    1         2 B2 UBIN(2) UNAL,
     1385     9710    1         2 B3 UBIN(8) UNAL,
     1386     9711    1         2 B4 UBIN(8) UNAL,
     1387     9712    1         2 * UBIN(18) UNAL;
     1388     9713    1   DCL CNVTLNGWD UBIN WORD;
     1389     9714    1   DCL 1 CNVTLNG REDEF CNVTLNGWD,
     1390     9715    1         2 * UBIN(4) UNAL,
     1391     9716    1         2 B1 UBIN(8) UNAL,
     1392     9717    1         2 B2 UBIN(8) UNAL,
     1393     9718    1         2 B3 UBIN(8) UNAL,
     1394     9719    1         2 B4 UBIN(8) UNAL;
     1395     9720
     1396     9721        /*    Based          */
     1397     9722
     1398     9723        %NI$DCT;
     1399     9771        %NI$DQH;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:223  
     1400     9794        %FR$RAT;
     1401     9834        %K$RWPARM (NAME=KI$RWPARM,STCLASS=BASED);
     1402    10150        %NK$LDCT;
     1403    10196        %KI$QMHDR;
     1404    10245        %KI$FEI;
     1405    10329        %FPP$WRITELBLREQ (NAME=WRITELBLREQ,STCLASS="BASED(M$)");
     1406    10347        %FPP$PEOVREQ (NAME=PEOVREQ,STCLASS="BASED(M$)");
     1407    10364        %FPP$RDEOFREQ (NAME=RDEOFREQ,STCLASS="BASED(M$)");
     1408    10380        %FPP$FNDSQREQ (NAME=FNDSQREQ,STCLASS="BASED(M$)");
     1409    10397        %FPP$FNDFLREQ (NAME=FNDFLREQ,STCLASS="BASED(M$)");
     1410    10416        %FPP$XFERREQ (NAME=XFERREQ,STCLASS="BASED(M$)");
     1411    10445        %FPP$COPYREQ (NAME=COPYREQ,STCLASS="BASED(M$)");
     1412    10462        %FPP$LABELREQ (NAME=LABELREQ,STCLASS="BASED(M$)");
     1413    10479        %FPP$WRITELBLACK (NAME=WRITELBLACK,STCLASS="BASED(K$RWPARM.MSG$)");
     1414    10495        %FPP$PEOVACK (NAME=PEOVACK,STCLASS="BASED(K$RWPARM.MSG$)");
     1415    10513        %FPP$RDEOFACK (NAME=RDEOFACK,STCLASS="BASED(K$RWPARM.MSG$)");
     1416    10530        %FPP$FNDACK (NAME=FNDACK,STCLASS="BASED(K$RWPARM.MSG$)");
     1417    10547        %FPP$LABELACK (NAME=LABELACK,STCLASS="BASED(K$RWPARM.MSG$)");
     1418    10563        %FPP$XFERACK (NAME=XFERACK,STCLASS="BASED(K$RWPARM.MSG$)");
     1419    10593        %FP$OPCI (STCLASS=BASED);
     1420    10603    1   DCL 1 CNVT BASED,
     1421    10604    1         2 * BIT(20) UNAL,
     1422    10605    1         2 HI BIT(8) UNAL,
     1423    10606    1         2 LO BIT(8) UNAL;
     1424    10607    1   DCL SER CHAR(6) BASED(SER$);
     1425    10608    1   DCL LBL CHAR(80) BASED;
     1426    10609    1   DCL HDRS CHAR(160) BASED;
     1427    10610
     1428    10611
     1429    10612        /*    Constant                       */
     1430    10613
     1431    10614
     1432    10615        /*    External                      */
     1433    10616
     1434    10617        %K$RWPARM (NAME=K_RWPARM_CON,STCLASS=SYMREF);
     1435    10933
     1436    10934    1   DCL FP_OPCI$$ PTR SYMREF;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:224  
     1437    10935    1   DCL N$DCT$(0:0) PTR BASED(N$DCT$$);
     1438    10936    1   DCL B$JIT$ PTR SYMREF;
     1439    10937    1   DCL S_CUN UBIN SYMREF;
     1440    10938
     1441    10939    1   DCL KIA$WRITE_USER ENTRY(2) ALTRET;
     1442    10940    1   DCL KIA$MSG ENTRY(1) ALTRET;
     1443    10941    1   DCL KIA$OQFL ENTRY(1) ALTRET;
     1444    10942    1   DCL KIS$SEND ENTRY(1) ALTRET;
     1445    10943    1   DCL KIQ$MAPFEP ENTRY(1);
     1446    10944    1   DCL SSR$REG ENTRY(3) ALTRET;
     1447    10945    1   DCL MMS$VGET ENTRY(4) ALTRET;
     1448    10946    1   DCL MMS$VREL ENTRY(2) ALTRET;
     1449    10947    1   DCL SC_FPOBADSEND ENTRY CONV(2,0);
     1450    10948
     1451    10949
     1452    10950
     1453    10951       %FT$ERR( ERRNAME=E_CANTLABELOD, FCG='0620'O, MID='17'O, CODE=%E$CANTLABELOD, SEV=2 )
             10951            ;
     1454    10959        /*E*     ERROR: FPO-E$CANTLABELOD-2
     1455    10960                 MESSAGE: Can't relabel optical disk platter% %SN%.
     1456    10961                 MESSAGE1: A labeling operation was attempted on an optical disk
     1457    10962                    platter% (%SN)% that had already been labelled.
     1458    10963         ***/
     1459    10964
     1460    10965        %FT$ERR( ERRNAME=E_IOERR, FCG='0620'O, MID='17'O, CODE=%E$IOERR, SEV=2 );
     1461    10973
     1462    10974        %FT$ERR( ERRNAME=E_NOODSPACE, FCG='0620'O, MID='17'O, CODE=%E$NOODSPACE, SEV=2 );
     1463    10982        /*E*     ERROR: FPO-E$NOODSPACE-2
     1464    10983                 MESSAGE: Not enough space on optical disk volume% %SN% for file header.
     1465    10984                 MESSAGE1: There was not enough space left on an optical disk volume
     1466    10985                    for the file header information of the file being closed.  The
     1467    10986                    data in that file% (%TA)% is now inaccessible.
     1468    10987         ***/
     1469    10988
     1470    10989
     1471    10990
     1472    10991
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:225  
     1473    10992    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);

  10992  2 000002   000000 470400 xsym               LDP0    B$JIT$
         2 000003   000232 471500                    LDP1    154,,PR0
         2 000004   200160 451500                    STP1    @MSZ+2,,AUTO
         2 000005   200160 236100                    LDQ     @MSZ+2,,AUTO
         2 000006   000000 036000 3                  ADLQ    0
         2 000007   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000010   001660 701000 2                  TSX1    SETUP
         2 000011   001377 702000 2                  TSX2    BRKOUT

     1474    10993    1         WRITELBLREQ.HDR1 = LBL1$->LBL;

  10993  2 000012   200003 470500                    LDP0    @DCTX,,AUTO
         2 000013   000000 471500                    LDP1    0,,PR0
         2 000014   200060 473500                    LDP3    M$,,AUTO
         2 000015   040100 100500                    MLR     fill='040'O
         2 000016   100000 000120                    ADSC9   0,,PR1                   cn=0,n=80
         2 000017   300001 400120                    ADSC9   1,,PR3                   cn=2,n=80

     1475    10994    1         WRITELBLREQ.HDR2 = LBL2$->LBL;

  10994  2 000020   200004 471500                    LDP1    @SER$,,AUTO
         2 000021   100000 474500                    LDP4    0,,PR1
         2 000022   040100 100500                    MLR     fill='040'O
         2 000023   400000 000120                    ADSC9   0,,PR4                   cn=0,n=80
         2 000024   300025 400120                    ADSC9   21,,PR3                  cn=2,n=80

     1476    10995    1         CALL WR_OSAR_MSG (%FP_FNC_WRITELBL,SIZEC(WRITELBLREQ)) ALTRET(BRKOUT);

  10995  2 000025   000002 236000 3                  LDQ     2
         2 000026   200156 756100                    STQ     @DCTX+1,,AUTO
         2 000027   000003 236000 3                  LDQ     3
         2 000030   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000031   001414 701000 2                  TSX1    WR_OSAR_MSG
         2 000032   001377 702000 2                  TSX2    BRKOUT

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:226  
     1477    10996    1         CALL CHKPOSLST ALTRET(BRKOUT);

  10996  2 000033   001713 701000 2                  TSX1    CHKPOSLST
         2 000034   001377 702000 2                  TSX2    BRKOUT

     1478    10997    1         ERRSAV = '0'B;

  10997  2 000035   200064 450100                    STZ     ERRSAV,,AUTO

     1479    10998    2         DO CASE(WRITELBLACK.STT);

  10998  2 000036   200006 470500                    LDP0    K$RWPARM,,AUTO
         2 000037   003100 061500                    CSR     bolr='003'O
         2 000040   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         2 000041   200160 000022                    BDSC    @MSZ+2,,AUTO             by=0,bit=0,n=18
         2 000042   200160 220100                    LDX0    @MSZ+2,,AUTO
         2 000043   000004 100003                    CMPX0   4,DU
         2 000044   000046 602010 2                  TNC     s:10998+8,X0
         2 000045   000065 710000 2                  TRA     s:11008
         2 000046   000065 710000 2                  TRA     s:11008
         2 000047   000052 710000 2                  TRA     s:11002
         2 000050   000060 710000 2                  TRA     s:11005
         2 000051   000060 710000 2                  TRA     s:11005

     1480    10999    2          CASE(0);                      /* Success. */

     1481    11000                                               /* Nothing to do. */
     1482    11001    2          CASE(1);                      /* No space to write EOV/EOF label. */

     1483    11002    2            ERRSAV = E_NOODSPACE;

  11002  2 000052   000002 236000 1                  LDQ     E_NOODSPACE
         2 000053   200064 756100                    STQ     ERRSAV,,AUTO

     1484    11003    2            F$DCB.TYC.IOERR(1) = '1'B;

  11003  2 000054   200063 471500                    LDP1    JDCB$,,AUTO
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:227  
         2 000055   001000 236003                    LDQ     512,DU
         2 000056   100002 256100                    ORSQ    2,,PR1
         2 000057   000065 710000 2                  TRA     s:11008

     1485    11004    2          CASE(2,3);                    /* Bad media or other error. */

     1486    11005    2            ERRSAV = E_IOERR;

  11005  2 000060   000001 236000 1                  LDQ     E_IOERR
         2 000061   200064 756100                    STQ     ERRSAV,,AUTO

     1487    11006    2            F$DCB.TYC.IOERR(1) = '1'B;

  11006  2 000062   200063 471500                    LDP1    JDCB$,,AUTO
         2 000063   001000 236003                    LDQ     512,DU
         2 000064   100002 256100                    ORSQ    2,,PR1

     1488    11007    2          END;

     1489    11008    1         K$RWPARM.LDCT$ = LDCT$;

  11008  2 000065   200061 236100                    LDQ     LDCT$,,AUTO
         2 000066   200024 756100                    STQ     K$RWPARM+14,,AUTO

     1490    11009    1         K$RWPARM.FUNCTION = %K_READDONE;

  11009  2 000067   000011 235007                    LDA     9,DL
         2 000070   200026 755100                    STA     K$RWPARM+16,,AUTO

     1491    11010    1         CALL KIS$SEND (K$RWPARM);

  11010  2 000071   200006 630500                    EPPR0   K$RWPARM,,AUTO
         2 000072   200160 450500                    STP0    @MSZ+2,,AUTO
         2 000073   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000074   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000075   000000 701000 xent               TSX1    KIS$SEND
         2 000076   000000 011000                    NOP     0
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:228  

     1492    11011              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

  11012  2 000077   200061 236100                    LDQ     LDCT$,,AUTO
         2 000100   000020 036003                    ADLQ    16,DU
         2 000101   200160 756100                    STQ     @MSZ+2,,AUTO
         2 000102   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000103   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000104   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000105   000000 011000                    NOP     0

     1493    11014    2         IF ERRSAV THEN DO;

  11014  2 000106   200064 235100                    LDA     ERRSAV,,AUTO
         2 000107   000114 600000 2                  TZE     s:11018

     1494    11015    2            B$JIT.ERR = ERRSAV;

  11015  2 000110   200064 236100                    LDQ     ERRSAV,,AUTO
         2 000111   000000 470400 xsym               LDP0    B$JIT$
         2 000112   000012 756100                    STQ     10,,PR0

     1495    11016    2            ALTRETURN;

  11016  2 000113   000000 702200 xent               TSX2  ! X66_AALT

     1496    11017    2            END;
     1497    11018    1         RETURN;

  11018  2 000114   000000 702200 xent               TSX2  ! X66_ARET

     1498    11019
     1499    11020        /*F*  NAME: FPO$PEOV
     1500    11021              PURPOSE: Obtain end of volume information from current
     1501    11022                  volume.
     1502    11023              DESCRIPTION:  Send an PEOV message to the controller and
     1503    11024              and put the results into the DDT entry.
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:229  
     1504    11025
     1505    11026              CALLING SEQUENCE:
     1506    11027                 CALL FPO$PEOV(direction) ALTRET(err_proc);
     1507    11028
     1508    11029        */
     1509    11030
     1510    11031    1   FPO$PEOV: ENTRY(DCTX) ALTRET;

  11031  2 000115   000000 700200 xent  FPO$PEOV     TSX0  ! X66_AUTO_2
         2 000116   000164 000002                    ZERO    116,2

     1511    11032
     1512    11033    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET (BRKOUT);

  11033  2 000117   000000 470400 xsym               LDP0    B$JIT$
         2 000120   000232 471500                    LDP1    154,,PR0
         2 000121   200160 451500                    STP1    @MSZ+2,,AUTO
         2 000122   200160 236100                    LDQ     @MSZ+2,,AUTO
         2 000123   000000 036000 3                  ADLQ    0
         2 000124   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000125   001660 701000 2                  TSX1    SETUP
         2 000126   001377 702000 2                  TSX2    BRKOUT

     1513    11034    1         IF DIR < 0 THEN

  11034  2 000127   200003 470500                    LDP0    @DCTX,,AUTO
         2 000130   000000 235100                    LDA     0,,PR0
         2 000131   000137 605000 2                  TPL     s:11037

     1514    11035    1            PEOVREQ.DIR = '0';           /* Position to beginning */

  11035  2 000132   200060 471500                    LDP1    M$,,AUTO
         2 000133   040100 100400                    MLR     fill='040'O
         2 000134   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000135   100001 400001                    ADSC9   1,,PR1                   cn=2,n=1
         2 000136   000143 710000 2                  TRA     s:11038

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:230  
     1515    11036    1         ELSE
     1516    11037    1            PEOVREQ.DIR = '1';           /* Position to end */

  11037  2 000137   200060 471500                    LDP1    M$,,AUTO
         2 000140   040100 100400                    MLR     fill='040'O
         2 000141   000005 000001 3                  ADSC9   5                        cn=0,n=1
         2 000142   100001 400001                    ADSC9   1,,PR1                   cn=2,n=1

     1517    11038    1         CALL WR_OSAR_MSG (%FP_FNC_POSEOV,SIZEC(PEOVREQ)) ALTRET(BRKOUT);

  11038  2 000143   000003 236000 3                  LDQ     3
         2 000144   200156 756100                    STQ     @DCTX+1,,AUTO
         2 000145   000006 236000 3                  LDQ     6
         2 000146   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000147   001414 701000 2                  TSX1    WR_OSAR_MSG
         2 000150   001377 702000 2                  TSX2    BRKOUT

     1518    11039    1         CALL CHKPOSLST ALTRET(BRKOUT);

  11039  2 000151   001713 701000 2                  TSX1    CHKPOSLST
         2 000152   001377 702000 2                  TSX2    BRKOUT

     1519    11040    1         CALL CHARBIN (I,PEOVACK.FSEQU_NUM);

  11040  2 000153   200006 470500                    LDP0    K$RWPARM,,AUTO
         2 000154   000100 305500                    DTB
         2 000155   000002 430006                    NDSC9   2,,PR0                   cn=2,s=nosgn,sf=0,n=6
         2 000156   200160 000010                    NDSC9   @MSZ+2,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000157   200161 235100                    LDA     @MSZ+3,,AUTO
         2 000160   200065 755100                    STA     I,,AUTO

     1520    11041    2         IF I > 0 THEN DO;

  11041  2 000161   000216 600000 2                  TZE     s:11051

     1521    11042    2            IF PEOVACK.TYPE = 'EOV1' THEN

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:231  
  11042  2 000162   040000 106500                    CMPC    fill='040'O
         2 000163   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         2 000164   000003 000004 1                  ADSC9   E_NOODSPACE+1            cn=0,n=4
         2 000165   000174 601000 2                  TNZ     s:11044

     1522    11043    2               D$->FT$DDT.POS = FTP_EOV#;

  11043  2 000166   200057 471500                    LDP1    D$,,AUTO
         2 000167   100006 236100                    LDQ     6,,PR1
         2 000170   000007 376000 3                  ANQ     7
         2 000171   000100 276007                    ORQ     64,DL
         2 000172   100006 756100                    STQ     6,,PR1
         2 000173   000213 710000 2                  TRA     s:11048

     1523    11044    2            ELSE IF PEOVACK.TYPE = 'EOF1' THEN

  11044  2 000174   040000 106500                    CMPC    fill='040'O
         2 000175   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         2 000176   000004 000004 1                  ADSC9   E_NOODSPACE+2            cn=0,n=4
         2 000177   000206 601000 2                  TNZ     s:11047

     1524    11045    2                  D$->FT$DDT.POS = FTP_HDR#;

  11045  2 000200   200057 471500                    LDP1    D$,,AUTO
         2 000201   100006 236100                    LDQ     6,,PR1
         2 000202   000007 376000 3                  ANQ     7
         2 000203   000040 276007                    ORQ     32,DL
         2 000204   100006 756100                    STQ     6,,PR1
         2 000205   000213 710000 2                  TRA     s:11048

     1525    11046    2               ELSE
     1526    11047    2                  D$->FT$DDT.POS = FTP_BOV#;

  11047  2 000206   200057 471500                    LDP1    D$,,AUTO
         2 000207   100006 236100                    LDQ     6,,PR1
         2 000210   000007 376000 3                  ANQ     7
         2 000211   000020 276007                    ORQ     16,DL
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:232  
         2 000212   100006 756100                    STQ     6,,PR1

     1527    11048    2            D$->FT$DDT.FSN = I - 1;

  11048  2 000213   777777 620005                    EAX0    -1,AL
         2 000214   100005 740100                    STX0    5,,PR1

     1528    11049    2            END;

  11049  2 000215   000225 710000 2                  TRA     s:11054

     1529    11050    2         ELSE DO;

     1530    11051    2            D$->FT$DDT.POS = FTP_BOV#;

  11051  2 000216   200057 471500                    LDP1    D$,,AUTO
         2 000217   100006 236100                    LDQ     6,,PR1
         2 000220   000007 376000 3                  ANQ     7
         2 000221   000020 276007                    ORQ     16,DL
         2 000222   100006 756100                    STQ     6,,PR1

     1531    11052    2            D$->FT$DDT.FSN = 0;

  11052  2 000223   000000 220003                    LDX0    0,DU
         2 000224   100005 740100                    STX0    5,,PR1

     1532    11053    2            END;

     1533    11054    1         K$RWPARM.LDCT$ = LDCT$;

  11054  2 000225   200061 236100                    LDQ     LDCT$,,AUTO
         2 000226   200024 756100                    STQ     K$RWPARM+14,,AUTO

     1534    11055    1         K$RWPARM.FUNCTION = %K_READDONE;

  11055  2 000227   000011 235007                    LDA     9,DL
         2 000230   200026 755100                    STA     K$RWPARM+16,,AUTO
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:233  

     1535    11056    1         CALL KIS$SEND (K$RWPARM);

  11056  2 000231   200006 630500                    EPPR0   K$RWPARM,,AUTO
         2 000232   200160 450500                    STP0    @MSZ+2,,AUTO
         2 000233   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000234   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000235   000000 701000 xent               TSX1    KIS$SEND
         2 000236   000000 011000                    NOP     0

     1536    11057              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

  11058  2 000237   200061 236100                    LDQ     LDCT$,,AUTO
         2 000240   000020 036003                    ADLQ    16,DU
         2 000241   200160 756100                    STQ     @MSZ+2,,AUTO
         2 000242   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000243   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000244   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000245   000000 011000                    NOP     0

     1537    11060    1         RETURN;

  11060  2 000246   000000 702200 xent               TSX2  ! X66_ARET

     1538    11061
     1539    11062
     1540    11063        /*F*  NAME: FPO$REWIND
     1541    11064              PURPOSE: Perform DCB-less rewind for the M$REW pmme.
     1542    11065              DESCRIPTION:  Send a PEOV message to the controller and
     1543    11066                            put the results into the DDT entry.
     1544    11067
     1545    11068              CALLING SEQUENCE:
     1546    11069                 CALL FPO$REWIND(dctx) ALTRET(err_proc);
     1547    11070
     1548    11071        */
     1549    11072
     1550    11073    1   FPO$REWIND: ENTRY(DCTX) ALTRET;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:234  

  11073  2 000247   000000 700200 xent  FPO$REWIND   TSX0  ! X66_AUTO_2
         2 000250   000164 000002                    ZERO    116,2

     1551    11074
     1552    11075    1         CALL SETUP (DCTX) ALTRET(BRKOUT);

  11075  2 000251   200003 236100                    LDQ     @DCTX,,AUTO
         2 000252   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000253   001660 701000 2                  TSX1    SETUP
         2 000254   001377 702000 2                  TSX2    BRKOUT

     1553    11076    1         PEOVREQ.DIR = '0';           /* Position to beginning */

  11076  2 000255   200060 470500                    LDP0    M$,,AUTO
         2 000256   040100 100400                    MLR     fill='040'O
         2 000257   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000260   000001 400001                    ADSC9   1,,PR0                   cn=2,n=1

     1554    11077    1         CALL WR_OSAR_MSG (%FP_FNC_POSEOV,SIZEC(PEOVREQ)) ALTRET(BRKOUT);

  11077  2 000261   000003 236000 3                  LDQ     3
         2 000262   200156 756100                    STQ     @DCTX+1,,AUTO
         2 000263   000006 236000 3                  LDQ     6
         2 000264   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000265   001414 701000 2                  TSX1    WR_OSAR_MSG
         2 000266   001377 702000 2                  TSX2    BRKOUT

     1555    11078    1         CALL CHKPOSLST ALTRET(BRKOUT);

  11078  2 000267   001713 701000 2                  TSX1    CHKPOSLST
         2 000270   001377 702000 2                  TSX2    BRKOUT

     1556    11079    1         D$->FT$DDT.POS = FTP_BOV#;

  11079  2 000271   200057 470500                    LDP0    D$,,AUTO
         2 000272   000006 236100                    LDQ     6,,PR0
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:235  
         2 000273   000007 376000 3                  ANQ     7
         2 000274   000020 276007                    ORQ     16,DL
         2 000275   000006 756100                    STQ     6,,PR0

     1557    11080    1         K$RWPARM.LDCT$ = LDCT$;

  11080  2 000276   200061 236100                    LDQ     LDCT$,,AUTO
         2 000277   200024 756100                    STQ     K$RWPARM+14,,AUTO

     1558    11081    1         K$RWPARM.FUNCTION = %K_READDONE;

  11081  2 000300   000011 235007                    LDA     9,DL
         2 000301   200026 755100                    STA     K$RWPARM+16,,AUTO

     1559    11082    1         CALL KIS$SEND (K$RWPARM);

  11082  2 000302   200006 631500                    EPPR1   K$RWPARM,,AUTO
         2 000303   200160 451500                    STP1    @MSZ+2,,AUTO
         2 000304   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000305   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000306   000000 701000 xent               TSX1    KIS$SEND
         2 000307   000000 011000                    NOP     0

     1560    11083              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

  11084  2 000310   200061 236100                    LDQ     LDCT$,,AUTO
         2 000311   000020 036003                    ADLQ    16,DU
         2 000312   200160 756100                    STQ     @MSZ+2,,AUTO
         2 000313   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000314   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000315   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000316   000000 011000                    NOP     0

     1561    11086    1         RETURN;

  11086  2 000317   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:236  
     1562    11087
     1563    11088
     1564    11089        /*F*  NAME: FPO$OPENIN
     1565    11090              PURPOSE: Inform ADSS controller that the file positioned to
     1566    11091                  with a FINDSEQ or FINDFILE is being opened.
     1567    11092              DESCRIPTION:  Send a OPENIN message to the controller.  No
     1568    11093              results are returned.
     1569    11094
     1570    11095              CALLING SEQUENCE:
     1571    11096                 CALL FPO$OPENIN ALTRET(err_proc);
     1572    11097
     1573    11098        */
     1574    11099
     1575    11100    1   FPO$OPENIN: ENTRY ALTRET;

  11100  2 000320   000000 700200 xent  FPO$OPENIN   TSX0  ! X66_AUTO_2
         2 000321   000164 000002                    ZERO    116,2

     1576    11101
     1577    11102    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);

  11102  2 000322   000000 470400 xsym               LDP0    B$JIT$
         2 000323   000232 471500                    LDP1    154,,PR0
         2 000324   200160 451500                    STP1    @MSZ+2,,AUTO
         2 000325   200160 236100                    LDQ     @MSZ+2,,AUTO
         2 000326   000000 036000 3                  ADLQ    0
         2 000327   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000330   001660 701000 2                  TSX1    SETUP
         2 000331   001377 702000 2                  TSX2    BRKOUT

     1578    11103    1         CALL WR_OSAR_MSG (%FP_FNC_OPENIN,SIZEC(RDEOFREQ)) ALTRET(BRKOUT);

  11103  2 000332   000011 236000 3                  LDQ     9
         2 000333   200156 756100                    STQ     @DCTX+1,,AUTO
         2 000334   000012 236000 3                  LDQ     10
         2 000335   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000336   001414 701000 2                  TSX1    WR_OSAR_MSG
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:237  
         2 000337   001377 702000 2                  TSX2    BRKOUT

     1579    11104    1         CALL CHKPOSLST ALTRET(BRKOUT);

  11104  2 000340   001713 701000 2                  TSX1    CHKPOSLST
         2 000341   001377 702000 2                  TSX2    BRKOUT

     1580    11105    1         K$RWPARM.LDCT$ = LDCT$;

  11105  2 000342   200061 236100                    LDQ     LDCT$,,AUTO
         2 000343   200024 756100                    STQ     K$RWPARM+14,,AUTO

     1581    11106    1         K$RWPARM.FUNCTION = %K_READDONE;

  11106  2 000344   000011 235007                    LDA     9,DL
         2 000345   200026 755100                    STA     K$RWPARM+16,,AUTO

     1582    11107    1         CALL KIS$SEND (K$RWPARM);

  11107  2 000346   200006 630500                    EPPR0   K$RWPARM,,AUTO
         2 000347   200160 450500                    STP0    @MSZ+2,,AUTO
         2 000350   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000351   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000352   000000 701000 xent               TSX1    KIS$SEND
         2 000353   000000 011000                    NOP     0

     1583    11108              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

  11109  2 000354   200061 236100                    LDQ     LDCT$,,AUTO
         2 000355   000020 036003                    ADLQ    16,DU
         2 000356   200160 756100                    STQ     @MSZ+2,,AUTO
         2 000357   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000360   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000361   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000362   000000 011000                    NOP     0

     1584    11111    1         RETURN;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:238  

  11111  2 000363   000000 702200 xent               TSX2  ! X66_ARET

     1585    11112
     1586    11113
     1587    11114        /*F*  NAME: FPO$CLOSEIN
     1588    11115              PURPOSE: Inform ADSS controller that the current file is
     1589    11116                  being closed.
     1590    11117              DESCRIPTION:  Send a CLOSEIN message to the controller.  No
     1591    11118              results are returned.
     1592    11119
     1593    11120              CALLING SEQUENCE:
     1594    11121                 CALL FPO$CLOSEIN ALTRET(err_proc);
     1595    11122
     1596    11123        */
     1597    11124
     1598    11125    1   FPO$CLOSEIN: ENTRY ALTRET;

  11125  2 000364   000000 700200 xent  FPO$CLOSEIN  TSX0  ! X66_AUTO_2
         2 000365   000164 000002                    ZERO    116,2

     1599    11126
     1600    11127
     1601    11128    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET (BRKOUT);

  11128  2 000366   000000 470400 xsym               LDP0    B$JIT$
         2 000367   000232 471500                    LDP1    154,,PR0
         2 000370   200160 451500                    STP1    @MSZ+2,,AUTO
         2 000371   200160 236100                    LDQ     @MSZ+2,,AUTO
         2 000372   000000 036000 3                  ADLQ    0
         2 000373   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000374   001660 701000 2                  TSX1    SETUP
         2 000375   001377 702000 2                  TSX2    BRKOUT

     1602    11129    1         CALL WR_OSAR_MSG (%FP_FNC_CLOSEIN,SIZEC(RDEOFREQ)) ALTRET(BRKOUT);

  11129  2 000376   000011 236000 3                  LDQ     9
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:239  
         2 000377   200156 756100                    STQ     @DCTX+1,,AUTO
         2 000400   000014 236000 3                  LDQ     12
         2 000401   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000402   001414 701000 2                  TSX1    WR_OSAR_MSG
         2 000403   001377 702000 2                  TSX2    BRKOUT

     1603    11130    1         CALL CHKPOSLST ALTRET(BRKOUT);

  11130  2 000404   001713 701000 2                  TSX1    CHKPOSLST
         2 000405   001377 702000 2                  TSX2    BRKOUT

     1604    11131    1         K$RWPARM.LDCT$ = LDCT$;

  11131  2 000406   200061 236100                    LDQ     LDCT$,,AUTO
         2 000407   200024 756100                    STQ     K$RWPARM+14,,AUTO

     1605    11132    1         K$RWPARM.FUNCTION = %K_READDONE;

  11132  2 000410   000011 235007                    LDA     9,DL
         2 000411   200026 755100                    STA     K$RWPARM+16,,AUTO

     1606    11133    1         CALL KIS$SEND (K$RWPARM);

  11133  2 000412   200006 630500                    EPPR0   K$RWPARM,,AUTO
         2 000413   200160 450500                    STP0    @MSZ+2,,AUTO
         2 000414   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000415   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000416   000000 701000 xent               TSX1    KIS$SEND
         2 000417   000000 011000                    NOP     0

     1607    11134              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

  11135  2 000420   200061 236100                    LDQ     LDCT$,,AUTO
         2 000421   000020 036003                    ADLQ    16,DU
         2 000422   200160 756100                    STQ     @MSZ+2,,AUTO
         2 000423   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000424   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:240  
         2 000425   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000426   000000 011000                    NOP     0

     1608    11137    1         RETURN;

  11137  2 000427   000000 702200 xent               TSX2  ! X66_ARET

     1609    11138
     1610    11139        /*F*  NAME: FPO$RDEOFLBL
     1611    11140              PURPOSE: Obtain end of file information from current
     1612    11141                  file.
     1613    11142              DESCRIPTION:  Send an RDEOF message to the controller and
     1614    11143              and put the results into the caller's buffer.
     1615    11144
     1616    11145              CALLING SEQUENCE:
     1617    11146                 CALL FPO$RDEOFLBL (LBL1$) ALTRET(err_proc);
     1618    11147
     1619    11148        */
     1620    11149
     1621    11150    1   FPO$RDEOFLBL: ENTRY(DCTX) ALTRET;

  11150  2 000430   000000 700200 xent  FPO$RDEOFLBL TSX0  ! X66_AUTO_2
         2 000431   000164 000002                    ZERO    116,2

     1622    11151
     1623    11152    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);

  11152  2 000432   000000 470400 xsym               LDP0    B$JIT$
         2 000433   000232 471500                    LDP1    154,,PR0
         2 000434   200160 451500                    STP1    @MSZ+2,,AUTO
         2 000435   200160 236100                    LDQ     @MSZ+2,,AUTO
         2 000436   000000 036000 3                  ADLQ    0
         2 000437   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000440   001660 701000 2                  TSX1    SETUP
         2 000441   001377 702000 2                  TSX2    BRKOUT

     1624    11153    1         CALL WR_OSAR_MSG (%FP_FNC_RDEOF,SIZEC(RDEOFREQ)) ALTRET(BRKOUT);
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:241  

  11153  2 000442   000011 236000 3                  LDQ     9
         2 000443   200156 756100                    STQ     @DCTX+1,,AUTO
         2 000444   000015 236000 3                  LDQ     13
         2 000445   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000446   001414 701000 2                  TSX1    WR_OSAR_MSG
         2 000447   001377 702000 2                  TSX2    BRKOUT

     1625    11154    1         CALL CHKPOSLST ALTRET(BRKOUT);

  11154  2 000450   001713 701000 2                  TSX1    CHKPOSLST
         2 000451   001377 702000 2                  TSX2    BRKOUT

     1626    11155    1         LBL1$->LBL = RDEOFACK.LBL;

  11155  2 000452   200003 470500                    LDP0    @DCTX,,AUTO
         2 000453   000000 471500                    LDP1    0,,PR0
         2 000454   200006 473500                    LDP3    K$RWPARM,,AUTO
         2 000455   040100 100500                    MLR     fill='040'O
         2 000456   300001 400120                    ADSC9   1,,PR3                   cn=2,n=80
         2 000457   100000 000120                    ADSC9   0,,PR1                   cn=0,n=80

     1627    11156    1         K$RWPARM.LDCT$ = LDCT$;

  11156  2 000460   200061 236100                    LDQ     LDCT$,,AUTO
         2 000461   200024 756100                    STQ     K$RWPARM+14,,AUTO

     1628    11157    1         K$RWPARM.FUNCTION = %K_READDONE;

  11157  2 000462   000011 235007                    LDA     9,DL
         2 000463   200026 755100                    STA     K$RWPARM+16,,AUTO

     1629    11158    1         CALL KIS$SEND (K$RWPARM);

  11158  2 000464   200006 631500                    EPPR1   K$RWPARM,,AUTO
         2 000465   200160 451500                    STP1    @MSZ+2,,AUTO
         2 000466   200160 630500                    EPPR0   @MSZ+2,,AUTO
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:242  
         2 000467   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000470   000000 701000 xent               TSX1    KIS$SEND
         2 000471   000000 011000                    NOP     0

     1630    11159              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

  11160  2 000472   200061 236100                    LDQ     LDCT$,,AUTO
         2 000473   000020 036003                    ADLQ    16,DU
         2 000474   200160 756100                    STQ     @MSZ+2,,AUTO
         2 000475   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000476   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000477   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000500   000000 011000                    NOP     0

     1631    11162    1         RETURN;

  11162  2 000501   000000 702200 xent               TSX2  ! X66_ARET

     1632    11163
     1633    11164        /*F*  NAME: FPO$COPYDEV
     1634    11165              PURPOSE: tell the controller to copy optical disc specified
     1635    11166              by DCB.UB$->VLP$SN to the unlabeled optical disc to which
     1636    11167              this DCB is open.  The labeled disc had to have been previously
     1637    11168              mounted by a FILE type open.
     1638    11169        */
     1639    11170    1   FPO$COPYDEV: ENTRY ALTRET;

  11170  2 000502   000000 700200 xent  FPO$COPYDEV  TSX0  ! X66_AUTO_2
         2 000503   000164 000002                    ZERO    116,2

     1640    11171    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);

  11171  2 000504   000000 470400 xsym               LDP0    B$JIT$
         2 000505   000232 471500                    LDP1    154,,PR0
         2 000506   200160 451500                    STP1    @MSZ+2,,AUTO
         2 000507   200160 236100                    LDQ     @MSZ+2,,AUTO
         2 000510   000000 036000 3                  ADLQ    0
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:243  
         2 000511   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000512   001660 701000 2                  TSX1    SETUP
         2 000513   001377 702000 2                  TSX2    BRKOUT

     1641    11172    1         COPYREQ.SER = F$DCB.UB$->SER;

  11172  2 000514   200063 470500                    LDP0    JDCB$,,AUTO
         2 000515   000075 471500                    LDP1    61,,PR0
         2 000516   200060 473500                    LDP3    M$,,AUTO
         2 000517   040100 100500                    MLR     fill='040'O
         2 000520   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         2 000521   300001 400006                    ADSC9   1,,PR3                   cn=2,n=6

     1642    11173    1         CALL WR_OSAR_MSG (%FP_FNC_COPY,SIZEC(COPYREQ)) ALTRET(BRKOUT);

  11173  2 000522   000020 236000 3                  LDQ     16
         2 000523   200156 756100                    STQ     @DCTX+1,,AUTO
         2 000524   000021 236000 3                  LDQ     17
         2 000525   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000526   001414 701000 2                  TSX1    WR_OSAR_MSG
         2 000527   001377 702000 2                  TSX2    BRKOUT

     1643    11174    1         GOTO LABEL1;

  11174  2 000530   000557 710000 2                  TRA     LABEL1

     1644    11175
     1645    11176
     1646    11177        /*F*  NAME: FPO$LABELOD
     1647    11178              PURPOSE: Tell the controller to label a platter.
     1648    11179
     1649    11180              CALLING SEQUENCE:
     1650    11181                 CALL FPO$LABELOD(LBL1$) ALTRET(err_proc);
     1651    11182
     1652    11183        */
     1653    11184
     1654    11185    1   FPO$LABELOD: ENTRY(DCTX) ALTRET;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:244  

  11185  2 000531   000000 700200 xent  FPO$LABELOD  TSX0  ! X66_AUTO_2
         2 000532   000164 000002                    ZERO    116,2

     1655    11186
     1656    11187    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);

  11187  2 000533   000000 470400 xsym               LDP0    B$JIT$
         2 000534   000232 471500                    LDP1    154,,PR0
         2 000535   200160 451500                    STP1    @MSZ+2,,AUTO
         2 000536   200160 236100                    LDQ     @MSZ+2,,AUTO
         2 000537   000000 036000 3                  ADLQ    0
         2 000540   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000541   001660 701000 2                  TSX1    SETUP
         2 000542   001377 702000 2                  TSX2    BRKOUT

     1657    11188    1         LABELREQ.VOL1 = LBL1$->LBL;  /* Fill in VOL1 info from user's buffer. */

  11188  2 000543   200003 470500                    LDP0    @DCTX,,AUTO
         2 000544   000000 471500                    LDP1    0,,PR0
         2 000545   200060 473500                    LDP3    M$,,AUTO
         2 000546   040100 100500                    MLR     fill='040'O
         2 000547   100000 000120                    ADSC9   0,,PR1                   cn=0,n=80
         2 000550   300001 400120                    ADSC9   1,,PR3                   cn=2,n=80

     1658    11189    1         CALL WR_OSAR_MSG(%FP_FNC_LABEL,SIZEC(LABELREQ)) ALTRET(BRKOUT);

  11189  2 000551   000024 236000 3                  LDQ     20
         2 000552   200156 756100                    STQ     @DCTX+1,,AUTO
         2 000553   000025 236000 3                  LDQ     21
         2 000554   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000555   001414 701000 2                  TSX1    WR_OSAR_MSG
         2 000556   001377 702000 2                  TSX2    BRKOUT

  11188  2 000557                       LABEL1       null
     1659    11190    1   LABEL1: ;   /* completion code for COPY is same as for LABEL */
     1660    11191    1         CALL CHKPOSLST ALTRET(BRKOUT);
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:245  

  11191  2 000557   001713 701000 2                  TSX1    CHKPOSLST
         2 000560   001377 702000 2                  TSX2    BRKOUT

     1661    11192    1         ERRSAV = '0'B;

  11192  2 000561   200064 450100                    STZ     ERRSAV,,AUTO

     1662    11193    2         DO CASE(LABELACK.STT);

  11193  2 000562   200006 470500                    LDP0    K$RWPARM,,AUTO
         2 000563   003100 061500                    CSR     bolr='003'O
         2 000564   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         2 000565   200160 000022                    BDSC    @MSZ+2,,AUTO             by=0,bit=0,n=18
         2 000566   200160 220100                    LDX0    @MSZ+2,,AUTO
         2 000567   000003 100003                    CMPX0   3,DU
         2 000570   000572 602010 2                  TNC     s:11193+8,X0
         2 000571   000605 710000 2                  TRA     s:11202
         2 000572   000605 710000 2                  TRA     s:11202
         2 000573   000575 710000 2                  TRA     s:11197
         2 000574   000600 710000 2                  TRA     s:11199

     1663    11194    2          CASE(0);                       /* Success. */

     1664    11195                                                /* Do nothing. */
     1665    11196    2          CASE(1);                       /* Platter already labelled. */

     1666    11197    2            ERRSAV = E_CANTLABELOD;

  11197  2 000575   000000 236000 1                  LDQ     E_CANTLABELOD
         2 000576   200064 756100                    STQ     ERRSAV,,AUTO
         2 000577   000605 710000 2                  TRA     s:11202

     1667    11198    2          CASE(2);                       /* I/O error. */

     1668    11199    2            ERRSAV = E_IOERR;

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:246  
  11199  2 000600   000001 236000 1                  LDQ     E_IOERR
         2 000601   200064 756100                    STQ     ERRSAV,,AUTO

     1669    11200    2            F$DCB.TYC.IOERR(1) = '1'B;

  11200  2 000602   200063 471500                    LDP1    JDCB$,,AUTO
         2 000603   001000 236003                    LDQ     512,DU
         2 000604   100002 256100                    ORSQ    2,,PR1

     1670    11201    2          END;

     1671    11202    1         F$DCB.TYC(0) = F$DCB.TYC(1);

  11202  2 000605   200063 470500                    LDP0    JDCB$,,AUTO
         2 000606   000002 236100                    LDQ     2,,PR0
         2 000607   000001 756100                    STQ     1,,PR0

     1672    11203    1         K$RWPARM.LDCT$ = LDCT$;

  11203  2 000610   200061 236100                    LDQ     LDCT$,,AUTO
         2 000611   200024 756100                    STQ     K$RWPARM+14,,AUTO

     1673    11204    1         K$RWPARM.FUNCTION = %K_READDONE;

  11204  2 000612   000011 235007                    LDA     9,DL
         2 000613   200026 755100                    STA     K$RWPARM+16,,AUTO

     1674    11205    1         CALL KIS$SEND (K$RWPARM);

  11205  2 000614   200006 631500                    EPPR1   K$RWPARM,,AUTO
         2 000615   200160 451500                    STP1    @MSZ+2,,AUTO
         2 000616   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000617   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000620   000000 701000 xent               TSX1    KIS$SEND
         2 000621   000000 011000                    NOP     0

     1675    11206              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:247  

  11207  2 000622   200061 236100                    LDQ     LDCT$,,AUTO
         2 000623   000020 036003                    ADLQ    16,DU
         2 000624   200160 756100                    STQ     @MSZ+2,,AUTO
         2 000625   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000626   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000627   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000630   000000 011000                    NOP     0

     1676    11209    1         IF ERRSAV THEN

  11209  2 000631   200064 235100                    LDA     ERRSAV,,AUTO
         2 000632   000636 600000 2                  TZE     s:11211

     1677    11210    1            B$JIT.ERR = ERRSAV;

  11210  2 000633   200064 236100                    LDQ     ERRSAV,,AUTO
         2 000634   000000 470400 xsym               LDP0    B$JIT$
         2 000635   000012 756100                    STQ     10,,PR0

     1678    11211    1         RETURN;

  11211  2 000636   000000 702200 xent               TSX2  ! X66_ARET

     1679    11212
     1680    11213    1   FPO$FINDFSN: ENTRY(DCTX) ALTRET;

  11213  2 000637   000000 700200 xent  FPO$FINDFSN  TSX0  ! X66_AUTO_2
         2 000640   000164 000002                    ZERO    116,2

     1681    11214
     1682    11215    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);

  11215  2 000641   000000 470400 xsym               LDP0    B$JIT$
         2 000642   000232 471500                    LDP1    154,,PR0
         2 000643   200160 451500                    STP1    @MSZ+2,,AUTO
         2 000644   200160 236100                    LDQ     @MSZ+2,,AUTO
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:248  
         2 000645   000000 036000 3                  ADLQ    0
         2 000646   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000647   001660 701000 2                  TSX1    SETUP
         2 000650   001377 702000 2                  TSX2    BRKOUT

     1683    11216    1         F$DCB.TYC = '0'B;

  11216  2 000651   200063 470500                    LDP0    JDCB$,,AUTO
         2 000652   000001 450100                    STZ     1,,PR0
         2 000653   000002 450100                    STZ     2,,PR0

     1684    11217    1         CALL BINCHAR (FNDSQREQ.FSN,F$DCB.FSN);

  11217  2 000654   000034 236100                    LDQ     28,,PR0
         2 000655   000022 772000                    QRL     18
         2 000656   000000 235003                    LDA     0,DU
         2 000657   200160 757100                    STAQ    @MSZ+2,,AUTO
         2 000660   200060 471500                    LDP1    M$,,AUTO
         2 000661   000100 301500                    BTD
         2 000662   200160 000010                    NDSC9   @MSZ+2,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000663   100001 430006                    NDSC9   1,,PR1                   cn=2,s=nosgn,sf=0,n=6

     1685    11218    1         CALL WR_OSAR_MSG (%FP_FNC_FNDSEQ,SIZEC(FNDSQREQ)) ALTRET(BRKOUT);

  11218  2 000664   000020 236000 3                  LDQ     16
         2 000665   200156 756100                    STQ     @DCTX+1,,AUTO
         2 000666   000027 236000 3                  LDQ     23
         2 000667   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000670   001414 701000 2                  TSX1    WR_OSAR_MSG
         2 000671   001377 702000 2                  TSX2    BRKOUT

     1686    11219    1         CALL CHKPOSLST ALTRET(BRKOUT);

  11219  2 000672   001713 701000 2                  TSX1    CHKPOSLST
         2 000673   001377 702000 2                  TSX2    BRKOUT

     1687    11220    2         DO CASE(FNDACK.STT);             /* Check status. */
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:249  

  11220  2 000674   200006 470500                    LDP0    K$RWPARM,,AUTO
         2 000675   000100 101500                    MRL     fill='000'O
         2 000676   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         2 000677   200160 000002                    ADSC9   @MSZ+2,,AUTO             cn=0,n=2
         2 000700   200160 220100                    LDX0    @MSZ+2,,AUTO
         2 000701   000006 100003                    CMPX0   6,DU
         2 000702   000704 602010 2                  TNC     s:11220+8,X0
         2 000703   000743 710000 2                  TRA     s:11234
         2 000704   000712 710000 2                  TRA     s:11222
         2 000705   000720 710000 2                  TRA     s:11224
         2 000706   000724 710000 2                  TRA     s:11226
         2 000707   000730 710000 2                  TRA     s:11228
         2 000710   000734 710000 2                  TRA     s:11230
         2 000711   000740 710000 2                  TRA     s:11232

     1688    11221    2          CASE(0);                      /* Success.      */

     1689    11222    2            LBL1$->HDRS = FNDACK.HDRS; /* Return HDR1 and HDR2 labels */

  11222  2 000712   200003 471500                    LDP1    @DCTX,,AUTO
         2 000713   100000 473500                    LDP3    0,,PR1
         2 000714   040100 100500                    MLR     fill='040'O
         2 000715   000001 400240                    ADSC9   1,,PR0                   cn=2,n=160
         2 000716   300000 000240                    ADSC9   0,,PR3                   cn=0,n=160
         2 000717   000743 710000 2                  TRA     s:11234

     1690    11223    2          CASE(1);                      /* File was before BOV. */

     1691    11224    2            F$DCB.TYC.BOT(1) = '1'B;

  11224  2 000720   200063 471500                    LDP1    JDCB$,,AUTO
         2 000721   040000 236003                    LDQ     16384,DU
         2 000722   100002 256100                    ORSQ    2,,PR1
         2 000723   000743 710000 2                  TRA     s:11234

     1692    11225    2          CASE(2);                      /* File was after EOV, no next vol. */
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:250  

     1693    11226    2            F$DCB.TYC.EOF(1) = '1'B;

  11226  2 000724   200063 471500                    LDP1    JDCB$,,AUTO
         2 000725   004000 236003                    LDQ     2048,DU
         2 000726   100002 256100                    ORSQ    2,,PR1
         2 000727   000743 710000 2                  TRA     s:11234

     1694    11227    2          CASE(3);                      /* File was after EOV, have next vol. */

     1695    11228    2            F$DCB.TYC.EOT(1) = '1'B;

  11228  2 000730   200063 471500                    LDP1    JDCB$,,AUTO
         2 000731   100000 236003                    LDQ     32768,DU
         2 000732   100002 256100                    ORSQ    2,,PR1
         2 000733   000743 710000 2                  TRA     s:11234

     1696    11229    2          CASE(4);                      /* Empty entry for this FSN. */

     1697    11230    2            F$DCB.TYC.EOD(1) = '1'B;

  11230  2 000734   200063 471500                    LDP1    JDCB$,,AUTO
         2 000735   000200 236003                    LDQ     128,DU
         2 000736   100002 256100                    ORSQ    2,,PR1
         2 000737   000743 710000 2                  TRA     s:11234

     1698    11231    2          CASE(5);                      /* Can't read header sector. */

     1699    11232    2            F$DCB.TYC.IOERR(1) = '1'B;

  11232  2 000740   200063 471500                    LDP1    JDCB$,,AUTO
         2 000741   001000 236003                    LDQ     512,DU
         2 000742   100002 256100                    ORSQ    2,,PR1

     1700    11233    2          END;

     1701    11234    1         K$RWPARM.LDCT$ = LDCT$;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:251  

  11234  2 000743   200061 236100                    LDQ     LDCT$,,AUTO
         2 000744   200024 756100                    STQ     K$RWPARM+14,,AUTO

     1702    11235    1         K$RWPARM.FUNCTION = %K_READDONE;

  11235  2 000745   000011 235007                    LDA     9,DL
         2 000746   200026 755100                    STA     K$RWPARM+16,,AUTO

     1703    11236    1         CALL KIS$SEND (K$RWPARM);

  11236  2 000747   200006 630500                    EPPR0   K$RWPARM,,AUTO
         2 000750   200160 450500                    STP0    @MSZ+2,,AUTO
         2 000751   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000752   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000753   000000 701000 xent               TSX1    KIS$SEND
         2 000754   000000 011000                    NOP     0

     1704    11237              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

  11238  2 000755   200061 236100                    LDQ     LDCT$,,AUTO
         2 000756   000020 036003                    ADLQ    16,DU
         2 000757   200160 756100                    STQ     @MSZ+2,,AUTO
         2 000760   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 000761   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000762   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000763   000000 011000                    NOP     0

     1705    11240    1         RETURN;

  11240  2 000764   000000 702200 xent               TSX2  ! X66_ARET

     1706    11241
     1707    11242    1   FPO$FINDFILE: ENTRY(DCTX ) ALTRET;

  11242  2 000765   000000 700200 xent  FPO$FINDFILE TSX0  ! X66_AUTO_2
         2 000766   000164 000002                    ZERO    116,2
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:252  

     1708    11243
     1709    11244    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);

  11244  2 000767   000000 470400 xsym               LDP0    B$JIT$
         2 000770   000232 471500                    LDP1    154,,PR0
         2 000771   200160 451500                    STP1    @MSZ+2,,AUTO
         2 000772   200160 236100                    LDQ     @MSZ+2,,AUTO
         2 000773   000000 036000 3                  ADLQ    0
         2 000774   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 000775   001660 701000 2                  TSX1    SETUP
         2 000776   001377 702000 2                  TSX2    BRKOUT

     1710    11245    1         FNDFLREQ.NM = F$DCB.NAME;

  11245  2 000777   200063 470500                    LDP0    JDCB$,,AUTO
         2 001000   200060 471500                    LDP1    M$,,AUTO
         2 001001   000100 100500                    MLR     fill='000'O
         2 001002   000010 000040                    ADSC9   8,,PR0                   cn=0,n=32
         2 001003   100001 400040                    ADSC9   1,,PR1                   cn=2,n=32

     1711    11246    1         F$DCB.TYC = '0'B;

  11246  2 001004   000001 450100                    STZ     1,,PR0
         2 001005   000002 450100                    STZ     2,,PR0

     1712    11247    1         CALL WR_OSAR_MSG (%FP_FNC_FNDFIL,SIZEC(FNDFLREQ)) ALTRET(BRKOUT);

  11247  2 001006   000032 236000 3                  LDQ     26
         2 001007   200156 756100                    STQ     @DCTX+1,,AUTO
         2 001010   000033 236000 3                  LDQ     27
         2 001011   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 001012   001414 701000 2                  TSX1    WR_OSAR_MSG
         2 001013   001377 702000 2                  TSX2    BRKOUT

     1713    11248    1         CALL CHKPOSLST ALTRET(BRKOUT);

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:253  
  11248  2 001014   001713 701000 2                  TSX1    CHKPOSLST
         2 001015   001377 702000 2                  TSX2    BRKOUT

     1714    11249    2         DO CASE(FNDACK.STT);             /* Check status. */

  11249  2 001016   200006 470500                    LDP0    K$RWPARM,,AUTO
         2 001017   000100 101500                    MRL     fill='000'O
         2 001020   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         2 001021   200160 000002                    ADSC9   @MSZ+2,,AUTO             cn=0,n=2
         2 001022   200160 220100                    LDX0    @MSZ+2,,AUTO
         2 001023   000007 100003                    CMPX0   7,DU
         2 001024   001026 602010 2                  TNC     s:11249+8,X0
         2 001025   001062 710000 2                  TRA     s:11261
         2 001026   001035 710000 2                  TRA     s:11251
         2 001027   001062 710000 2                  TRA     s:11261
         2 001030   001043 710000 2                  TRA     s:11253
         2 001031   001047 710000 2                  TRA     s:11255
         2 001032   001062 710000 2                  TRA     s:11261
         2 001033   001053 710000 2                  TRA     s:11257
         2 001034   001057 710000 2                  TRA     s:11259

     1715    11250    2          CASE(0);                      /* Success.      */

     1716    11251    2            LBL1$->HDRS = FNDACK.HDRS; /* Return HDR1 and HDR2 labels */

  11251  2 001035   200003 471500                    LDP1    @DCTX,,AUTO
         2 001036   100000 473500                    LDP3    0,,PR1
         2 001037   040100 100500                    MLR     fill='040'O
         2 001040   000001 400240                    ADSC9   1,,PR0                   cn=2,n=160
         2 001041   300000 000240                    ADSC9   0,,PR3                   cn=0,n=160
         2 001042   001062 710000 2                  TRA     s:11261

     1717    11252    2          CASE(2);                      /* File not found, no next vol. */

     1718    11253    2            F$DCB.TYC.EOF(1) = '1'B;

  11253  2 001043   200063 471500                    LDP1    JDCB$,,AUTO
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:254  
         2 001044   004000 236003                    LDQ     2048,DU
         2 001045   100002 256100                    ORSQ    2,,PR1
         2 001046   001062 710000 2                  TRA     s:11261

     1719    11254    2          CASE(3);                      /* File not found, have next vol. */

     1720    11255    2            F$DCB.TYC.EOT(1) = '1'B;

  11255  2 001047   200063 471500                    LDP1    JDCB$,,AUTO
         2 001050   100000 236003                    LDQ     32768,DU
         2 001051   100002 256100                    ORSQ    2,,PR1
         2 001052   001062 710000 2                  TRA     s:11261

     1721    11256    2          CASE(5);                      /* Can't read header sector. */

     1722    11257    2            F$DCB.TYC.IOERR(1) = '1'B;

  11257  2 001053   200063 471500                    LDP1    JDCB$,,AUTO
         2 001054   001000 236003                    LDQ     512,DU
         2 001055   100002 256100                    ORSQ    2,,PR1
         2 001056   001062 710000 2                  TRA     s:11261

     1723    11258    2          CASE(6);                      /* Volume was empty. */

     1724    11259    2            F$DCB.TYC.EOD(1) = '1'B;

  11259  2 001057   200063 471500                    LDP1    JDCB$,,AUTO
         2 001060   000200 236003                    LDQ     128,DU
         2 001061   100002 256100                    ORSQ    2,,PR1

     1725    11260    2          END;

     1726    11261    1         K$RWPARM.LDCT$ = LDCT$;

  11261  2 001062   200061 236100                    LDQ     LDCT$,,AUTO
         2 001063   200024 756100                    STQ     K$RWPARM+14,,AUTO

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:255  
     1727    11262    1         K$RWPARM.FUNCTION  = %K_READDONE;

  11262  2 001064   000011 235007                    LDA     9,DL
         2 001065   200026 755100                    STA     K$RWPARM+16,,AUTO

     1728    11263    1         CALL KIS$SEND (K$RWPARM);

  11263  2 001066   200006 630500                    EPPR0   K$RWPARM,,AUTO
         2 001067   200160 450500                    STP0    @MSZ+2,,AUTO
         2 001070   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001071   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001072   000000 701000 xent               TSX1    KIS$SEND
         2 001073   000000 011000                    NOP     0

     1729    11264              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

  11265  2 001074   200061 236100                    LDQ     LDCT$,,AUTO
         2 001075   000020 036003                    ADLQ    16,DU
         2 001076   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001077   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001100   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001101   000000 701000 xent               TSX1    HFC$UNLOCK
         2 001102   000000 011000                    NOP     0

     1730    11267    1         RETURN;

  11267  2 001103   000000 702200 xent               TSX2  ! X66_ARET

     1731    11268
     1732    11269        /*    Read Library Map from OD Controller                         */
     1733    11270
     1734    11271    1   FPO$RDODMAP: ENTRY(DCTX) ALTRET;

  11271  2 001104   000000 700200 xent  FPO$RDODMAP  TSX0  ! X66_AUTO_2
         2 001105   000164 000002                    ZERO    116,2

     1735    11272    1         F = %FP_FNC_MAP;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:256  

  11272  2 001106   000027 235007                    LDA     23,DL
         2 001107   200066 755100                    STA     F,,AUTO

     1736    11273    1         M$ = ADDR(MSG);

  11273  2 001110   200073 630500                    EPPR0   MSG,,AUTO
         2 001111   200060 450500                    STP0    M$,,AUTO

     1737    11274    1         XFERREQ.USRNO.B1 = S_CUN / 256;

  11274  2 001112   000000 236000 xsym               LDQ     S_CUN
         2 001113   000010 772000                    QRL     8
         2 001114   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001115   003100 061500                    CSR     bolr='003'O
         2 001116   200160 000044                    BDSC    @MSZ+2,,AUTO             by=0,bit=0,n=36
         2 001117   000003 400011                    BDSC    3,,PR0                   by=2,bit=0,n=9

     1738    11275    1         XFERREQ.USRNO.B2 = MOD(S_CUN,256);

  11275  2 001120   000000 236000 xsym               LDQ     S_CUN
         2 001121   000377 376007                    ANQ     255,DL
         2 001122   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001123   003100 061500                    CSR     bolr='003'O
         2 001124   200160 000044                    BDSC    @MSZ+2,,AUTO             by=0,bit=0,n=36
         2 001125   000003 600011                    BDSC    3,,PR0                   by=3,bit=0,n=9

     1739    11276    1         GOTO RDWROD;

  11276  2 001126   001152 710000 2                  TRA     RDWROD

     1740    11277    1   FPO$RDODBLK: ENTRY(DCTX) ALTRET;

  11277  2 001127   000000 700200 xent  FPO$RDODBLK  TSX0  ! X66_AUTO_2
         2 001130   000164 000002                    ZERO    116,2

     1741    11278    1         F = %FP_FNC_RD;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:257  

  11278  2 001131   000021 235007                    LDA     17,DL
         2 001132   200066 755100                    STA     F,,AUTO

     1742    11279    1         GOTO RDWROD;

  11279  2 001133   001152 710000 2                  TRA     RDWROD

     1743    11280    1   FPO$WRODBLK: ENTRY(DCTX) ALTRET;

  11280  2 001134   000000 700200 xent  FPO$WRODBLK  TSX0  ! X66_AUTO_2
         2 001135   000164 000002                    ZERO    116,2

     1744    11281    1         F = %FP_FNC_WR;

  11281  2 001136   000020 235007                    LDA     16,DL
         2 001137   200066 755100                    STA     F,,AUTO

     1745    11282    1         GOTO RDWROD;

  11282  2 001140   001152 710000 2                  TRA     RDWROD

     1746    11283    1   FPO$TRUNC: ENTRY(DCTX) ALTRET;

  11283  2 001141   000000 700200 xent  FPO$TRUNC    TSX0  ! X66_AUTO_2
         2 001142   000164 000002                    ZERO    116,2

     1747    11284    1         F = %FP_FNC_TRUNC;

  11284  2 001143   000011 235007                    LDA     9,DL
         2 001144   200066 755100                    STA     F,,AUTO

     1748    11285    1         GOTO RDWROD;

  11285  2 001145   001152 710000 2                  TRA     RDWROD

     1749    11286    1   FPO$UNTRUNC: ENTRY(DCTX) ALTRET;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:258  

  11286  2 001146   000000 700200 xent  FPO$UNTRUNC  TSX0  ! X66_AUTO_2
         2 001147   000164 000002                    ZERO    116,2

     1750    11287    1         F = %FP_FNC_UNTRUNC;

  11287  2 001150   000033 235007                    LDA     27,DL
         2 001151   200066 755100                    STA     F,,AUTO

  11287  2 001152                       RDWROD       null
     1751    11288    1   RDWROD: ;
     1752    11289    1         CALL SETUP (B$JIT.DCB$->F$DCB.SETX) ALTRET(BRKOUT);

  11289  2 001152   000000 470400 xsym               LDP0    B$JIT$
         2 001153   000232 471500                    LDP1    154,,PR0
         2 001154   200160 451500                    STP1    @MSZ+2,,AUTO
         2 001155   200160 236100                    LDQ     @MSZ+2,,AUTO
         2 001156   000000 036000 3                  ADLQ    0
         2 001157   200155 756100                    STQ     CNVTLNGWD+3,,AUTO
         2 001160   001660 701000 2                  TSX1    SETUP
         2 001161   001377 702000 2                  TSX2    BRKOUT

     1753    11290    1         F$DCB.TYC = '0'B;

  11290  2 001162   200063 470500                    LDP0    JDCB$,,AUTO
         2 001163   000001 450100                    STZ     1,,PR0
         2 001164   000002 450100                    STZ     2,,PR0

     1754    11291    1         QSZ = F$DCB.ARS;

  11291  2 001165   000000 235100                    LDA     0,,PR0
         2 001166   200150 755100                    STA     QSZ,,AUTO

     1755    11292    1         WSQ = N$DCT$(DCTN)->NI$DCT.OD.FEI$->KI$FEI.FEWSQ;

  11292  2 001167   000000 471400 xsym               LDP1    N$DCT$$
         2 001170   200072 720100                    LXL0    DCTN,,AUTO
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:259  
         2 001171   100000 473510                    LDP3    0,X0,PR1
         2 001172   300032 474500                    LDP4    26,,PR3
         2 001173   400005 235100                    LDA     5,,PR4
         2 001174   200067 755100                    STA     WSQ,,AUTO

     1756    11293    1         CALL MMS$VGET (WSQ,BFR$,SZ,QMP$) ALTRET(NOBFR);

  11293  2 001175   200151 633500                    EPPR3   QMP$,,AUTO
         2 001176   200163 453500                    STP3    @MSZ+5,,AUTO
         2 001177   200150 634500                    EPPR4   QSZ,,AUTO
         2 001200   200162 454500                    STP4    @MSZ+4,,AUTO
         2 001201   200003 236100                    LDQ     @DCTX,,AUTO
         2 001202   200161 756100                    STQ     @MSZ+3,,AUTO
         2 001203   200067 635500                    EPPR5   WSQ,,AUTO
         2 001204   200160 455500                    STP5    @MSZ+2,,AUTO
         2 001205   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001206   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 001207   000000 701000 xent               TSX1    MMS$VGET
         2 001210   001411 702000 2                  TSX2    NOBFR

     1757    11294    1         XFERREQ.ADR.B4 = MP.B4;

  11294  2 001211   200060 470500                    LDP0    M$,,AUTO
         2 001212   003100 061500                    CSR     bolr='003'O
         2 001213   200151 210010                    BDSC    QMP$,,AUTO               by=1,bit=1,n=8
         2 001214   000002 200011                    BDSC    2,,PR0                   by=1,bit=0,n=9

     1758    11295    1         XFERREQ.ADR.B3 = MP.B3;

  11295  2 001215   003100 061500                    CSR     bolr='003'O
         2 001216   200151 020010                    BDSC    QMP$,,AUTO               by=0,bit=2,n=8
         2 001217   000002 000011                    BDSC    2,,PR0                   by=0,bit=0,n=9

     1759    11296    1         XFERREQ.ADR.B2 = MP.B2;

  11296  2 001220   003100 061500                    CSR     bolr='003'O
         2 001221   200151 000002                    BDSC    QMP$,,AUTO               by=0,bit=0,n=2
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:260  
         2 001222   000001 600011                    BDSC    1,,PR0                   by=3,bit=0,n=9

     1760    11297    1         XFERREQ.ADR.B1 = 0;

  11297  2 001223   003100 061400                    CSR     bolr='003'O
         2 001224   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         2 001225   000001 400011                    BDSC    1,,PR0                   by=2,bit=0,n=9

     1761    11298    1         XFERREQ.SIZE.B4 = SZ.B4;

  11298  2 001226   003100 061500                    CSR     bolr='003'O
         2 001227   200150 610010                    BDSC    QSZ,,AUTO                by=3,bit=1,n=8
         2 001230   000003 200011                    BDSC    3,,PR0                   by=1,bit=0,n=9

     1762    11299    1         XFERREQ.SIZE.B3 = SZ.B3;

  11299  2 001231   003100 061500                    CSR     bolr='003'O
         2 001232   200150 420010                    BDSC    QSZ,,AUTO                by=2,bit=2,n=8
         2 001233   000003 000011                    BDSC    3,,PR0                   by=0,bit=0,n=9

     1763    11300    1         XFERREQ.SIZE.B2 = SZ.B2;

  11300  2 001234   003100 061500                    CSR     bolr='003'O
         2 001235   200150 230010                    BDSC    QSZ,,AUTO                by=1,bit=3,n=8
         2 001236   000002 600011                    BDSC    2,,PR0                   by=3,bit=0,n=9

     1764    11301    1         XFERREQ.SIZE.B1 = 0;

  11301  2 001237   003100 061400                    CSR     bolr='003'O
         2 001240   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         2 001241   000002 400011                    BDSC    2,,PR0                   by=2,bit=0,n=9

     1765    11302    1         CALL WR_OSAR_MSG (F,SIZEC(XFERREQ)) ALTRET(WRERR);

  11302  2 001242   000035 236000 3                  LDQ     29
         2 001243   200156 756100                    STQ     @DCTX+1,,AUTO
         2 001244   200066 631500                    EPPR1   F,,AUTO
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:261  
         2 001245   200155 451500                    STP1    CNVTLNGWD+3,,AUTO
         2 001246   001414 701000 2                  TSX1    WR_OSAR_MSG
         2 001247   001367 702000 2                  TSX2    WRERR

     1766    11303    1         CALL CHKPOSLST ALTRET(BRKOUT);

  11303  2 001250   001713 701000 2                  TSX1    CHKPOSLST
         2 001251   001377 702000 2                  TSX2    BRKOUT

     1767    11304    2         DO CASE(XFERACK.STT);

  11304  2 001252   200006 470500                    LDP0    K$RWPARM,,AUTO
         2 001253   003100 061500                    CSR     bolr='003'O
         2 001254   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         2 001255   200160 000022                    BDSC    @MSZ+2,,AUTO             by=0,bit=0,n=18
         2 001256   200160 220100                    LDX0    @MSZ+2,,AUTO
         2 001257   000005 100003                    CMPX0   5,DU
         2 001260   001262 602010 2                  TNC     s:11304+8,X0
         2 001261   001306 710000 2                  TRA     s:11316
         2 001262   001306 710000 2                  TRA     s:11316
         2 001263   001267 710000 2                  TRA     s:11308
         2 001264   001273 710000 2                  TRA     s:11310
         2 001265   001277 710000 2                  TRA     s:11312
         2 001266   001303 710000 2                  TRA     s:11314

     1768    11305    2          CASE(0);                      /* Success. */

     1769    11306                                               /* Nothing to do. */
     1770    11307    2          CASE(1);                      /* End of file hit (read). */

     1771    11308    2            F$DCB.TYC.EOF(1) = '1'B;

  11308  2 001267   200063 471500                    LDP1    JDCB$,,AUTO
         2 001270   004000 236003                    LDQ     2048,DU
         2 001271   100002 256100                    ORSQ    2,,PR1
         2 001272   001306 710000 2                  TRA     s:11316

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:262  
     1772    11309    2          CASE(2);                      /* I/O error hit. */

     1773    11310    2            F$DCB.TYC.IOERR(1) = '1'B;

  11310  2 001273   200063 471500                    LDP1    JDCB$,,AUTO
         2 001274   001000 236003                    LDQ     512,DU
         2 001275   100002 256100                    ORSQ    2,,PR1
         2 001276   001306 710000 2                  TRA     s:11316

     1774    11311    2          CASE(3);                      /* Lost data (on reads only). */

     1775    11312    2            F$DCB.TYC.LD(1) = '1'B;

  11312  2 001277   200063 471500                    LDP1    JDCB$,,AUTO
         2 001300   002000 236003                    LDQ     1024,DU
         2 001301   100002 256100                    ORSQ    2,,PR1
         2 001302   001306 710000 2                  TRA     s:11316

     1776    11313    2          CASE(4);                      /* End of platter hit (write). */

     1777    11314    2            F$DCB.TYC.EOT(1) = '1'B;

  11314  2 001303   200063 471500                    LDP1    JDCB$,,AUTO
         2 001304   100000 236003                    LDQ     32768,DU
         2 001305   100002 256100                    ORSQ    2,,PR1

     1778    11315    2          END;

     1779    11316    1         CNVTLNG.B1 = XFERACK.SIZE.B1;

  11316  2 001306   200006 470500                    LDP0    K$RWPARM,,AUTO
         2 001307   003100 060500                    CSL     bolr='003'O
         2 001310   000001 410010                    BDSC    1,,PR0                   by=2,bit=1,n=8
         2 001311   200152 040010                    BDSC    CNVTLNGWD,,AUTO          by=0,bit=4,n=8

     1780    11317    1         CNVTLNG.B2 = XFERACK.SIZE.B2;

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:263  
  11317  2 001312   003100 060500                    CSL     bolr='003'O
         2 001313   000001 610010                    BDSC    1,,PR0                   by=3,bit=1,n=8
         2 001314   200152 230010                    BDSC    CNVTLNGWD,,AUTO          by=1,bit=3,n=8

     1781    11318    1         CNVTLNG.B3 = XFERACK.SIZE.B3;

  11318  2 001315   003100 060500                    CSL     bolr='003'O
         2 001316   000002 010010                    BDSC    2,,PR0                   by=0,bit=1,n=8
         2 001317   200152 420010                    BDSC    CNVTLNGWD,,AUTO          by=2,bit=2,n=8

     1782    11319    1         CNVTLNG.B4 = XFERACK.SIZE.B4;

  11319  2 001320   003100 060500                    CSL     bolr='003'O
         2 001321   000002 210010                    BDSC    2,,PR0                   by=1,bit=1,n=8
         2 001322   200152 610010                    BDSC    CNVTLNGWD,,AUTO          by=3,bit=1,n=8

     1783    11320    1         F$DCB.ARS = CNVTLNGWD;

  11320  2 001323   200152 235100                    LDA     CNVTLNGWD,,AUTO
         2 001324   200063 471500                    LDP1    JDCB$,,AUTO
         2 001325   100000 755100                    STA     0,,PR1

     1784    11321    1         K$RWPARM.LDCT$ = LDCT$;

  11321  2 001326   200061 236100                    LDQ     LDCT$,,AUTO
         2 001327   200024 756100                    STQ     K$RWPARM+14,,AUTO

     1785    11322    1         K$RWPARM.FUNCTION  = %K_READDONE;

  11322  2 001330   000011 235007                    LDA     9,DL
         2 001331   200026 755100                    STA     K$RWPARM+16,,AUTO

     1786    11323    1         CALL KIS$SEND (K$RWPARM);

  11323  2 001332   200006 630500                    EPPR0   K$RWPARM,,AUTO
         2 001333   200160 450500                    STP0    @MSZ+2,,AUTO
         2 001334   200160 630500                    EPPR0   @MSZ+2,,AUTO
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:264  
         2 001335   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001336   000000 701000 xent               TSX1    KIS$SEND
         2 001337   000000 011000                    NOP     0

     1787    11324              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

  11325  2 001340   200061 236100                    LDQ     LDCT$,,AUTO
         2 001341   000020 036003                    ADLQ    16,DU
         2 001342   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001343   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001344   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001345   000000 701000 xent               TSX1    HFC$UNLOCK
         2 001346   000000 011000                    NOP     0

     1788    11327    1         CALL MMS$VREL (WSQ,QMP$);

  11327  2 001347   200151 630500                    EPPR0   QMP$,,AUTO
         2 001350   200161 450500                    STP0    @MSZ+3,,AUTO
         2 001351   200067 631500                    EPPR1   WSQ,,AUTO
         2 001352   200160 451500                    STP1    @MSZ+2,,AUTO
         2 001353   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001354   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001355   000000 701000 xent               TSX1    MMS$VREL
         2 001356   000000 011000                    NOP     0

     1789    11328    2         IF F$DCB.TYC.IOERR(1) THEN DO;   /* I/O error happened, need to altret. */

  11328  2 001357   200063 470500                    LDP0    JDCB$,,AUTO
         2 001360   000002 430100                    FSZN    2,,PR0
         2 001361   001366 605000 2                  TPL     s:11332

     1790    11329    2            B$JIT.ERR = E_IOERR;

  11329  2 001362   000001 236000 1                  LDQ     E_IOERR
         2 001363   000000 471400 xsym               LDP1    B$JIT$
         2 001364   100012 756100                    STQ     10,,PR1

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:265  
     1791    11330    2            ALTRETURN;

  11330  2 001365   000000 702200 xent               TSX2  ! X66_AALT

     1792    11331    2            END;
     1793    11332    1         RETURN;

  11332  2 001366   000000 702200 xent               TSX2  ! X66_ARET

     1794    11333    1   WRERR: CALL MMS$VREL (WSQ,QMP$);

  11333  2 001367   200151 630500       WRERR        EPPR0   QMP$,,AUTO
         2 001370   200161 450500                    STP0    @MSZ+3,,AUTO
         2 001371   200067 631500                    EPPR1   WSQ,,AUTO
         2 001372   200160 451500                    STP1    @MSZ+2,,AUTO
         2 001373   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001374   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001375   000000 701000 xent               TSX1    MMS$VREL
         2 001376   000000 011000                    NOP     0

     1795    11334    1   BRKOUT:
     1796    11335    2         IF LDCT$->NK$LDCT.DFLG.FEDN THEN DO;

  11335  2 001377   200061 470500       BRKOUT       LDP0    LDCT$,,AUTO
         2 001400   000006 236100                    LDQ     6,,PR0
         2 001401   000020 316007                    CANQ    16,DL
         2 001402   001411 600000 2                  TZE     NOBFR

     1797    11336    2            B$JIT.DCB$->F$DCB.TYC.IOERR(1) = '1'B;

  11336  2 001403   000000 471400 xsym               LDP1    B$JIT$
         2 001404   100232 473500                    LDP3    154,,PR1
         2 001405   001000 236003                    LDQ     512,DU
         2 001406   300002 256100                    ORSQ    2,,PR3

     1798    11337    2            B$JIT.ERR = E_IOERR;

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:266  
  11337  2 001407   000001 236000 1                  LDQ     E_IOERR
         2 001410   100012 756100                    STQ     10,,PR1

     1799    11338    2            END;

  11335  2 001411                       NOBFR        null
     1800    11339
     1801    11340    1   NOBFR: ;
     1802    11341    1         CALL SC_FPOBADSEND;          /* No buffers - cant send */

  11341  2 001411   000000 713400 xsym               CLIMB   SC_FPOBADSEND
         2 001412   000000 600000 xsid               climb   nvectors=         0
         2 001413   001737 710000 2                  TRA     s:11459

     1803    11342
     1804    11343        /*S*  SCREECH_CODE: FPO-S$BADSEND-8
     1805    11344              TYPE: SCREECH
     1806    11345              MESSAGE: No buffer space in CWSQ for OD data transfer.
     1807    11346              DESCRIPTION:  MMS$VGET was unable to find space for the output
     1808    11347              buffer in the Comm WSQ for the current read write operation.
     1809    11348              There should always be enough space since there are only four
     1810    11349              devices at a max of 8k words each.
     1811    11350        */
     1812    11351
     1813    11352    1   WR_OSAR_MSG: PROC (FNC,MSZ) ALTRET;

  11352  2 001414   200154 741300       WR_OSAR_MSG  STX1  ! CNVTLNGWD+2,,AUTO

     1814    11353
     1815    11354    2   DCL FNC UBIN;                      /* function code to send */
     1816    11355    2   DCL MSZ UBIN;                      /* message size             */
     1817    11356
     1818    11357        %FPP$MHDR (NAME=MSG,STCLASS="BASED(M$)",LAST=";");
     1819    11371
     1820    11372
     1821    11373    2         MSG.FNC = FNC;

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:267  
  11373  2 001415   200155 470500                    LDP0    @FNC,,AUTO
         2 001416   200060 471500                    LDP1    M$,,AUTO
         2 001417   003100 061500                    CSR     bolr='003'O
         2 001420   000000 000044                    BDSC    0,,PR0                   by=0,bit=0,n=36
         2 001421   100000 000011                    BDSC    0,,PR1                   by=0,bit=0,n=9

     1822    11374    2         MSG.DCTX.HI = CDCT.HI;       /* soliciting resource dct index */

  11374  2 001422   003100 061500                    CSR     bolr='003'O
         2 001423   200072 420010                    BDSC    DCTN,,AUTO               by=2,bit=2,n=8
         2 001424   100001 000011                    BDSC    1,,PR1                   by=0,bit=0,n=9

     1823    11375    2         MSG.DCTX.LO = CDCT.LO;

  11375  2 001425   003100 061500                    CSR     bolr='003'O
         2 001426   200072 610010                    BDSC    DCTN,,AUTO               by=3,bit=1,n=8
         2 001427   100001 200011                    BDSC    1,,PR1                   by=1,bit=0,n=9

     1824    11376    2         IF FNC = %FP_FNC_MAP THEN

  11376  2 001430   000000 235100                    LDA     0,,PR0
         2 001431   000027 115007                    CMPA    23,DL
         2 001432   001437 601000 2                  TNZ     s:11379

     1825    11377    2            MSG.DEV# = 0;             /* send message to admin */

  11377  2 001433   003100 061400                    CSR     bolr='003'O
         2 001434   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         2 001435   100000 400011                    BDSC    0,,PR1                   by=2,bit=0,n=9
         2 001436   001445 710000 2                  TRA     s:11380

     1826    11378    2         ELSE
     1827    11379    2            MSG.DEV# = N$DCT$(DCTN)->NI$DCT.DVN;/* destination device */

  11379  2 001437   000000 473400 xsym               LDP3    N$DCT$$
         2 001440   200072 720100                    LXL0    DCTN,,AUTO
         2 001441   300000 474510                    LDP4    0,X0,PR3
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:268  
         2 001442   003100 061500                    CSR     bolr='003'O
         2 001443   400007 060006                    BDSC    7,,PR4                   by=0,bit=6,n=6
         2 001444   100000 400011                    BDSC    0,,PR1                   by=2,bit=0,n=9

     1828    11380    2         K$RWPARM = K_RWPARM_CON;

  11380  2 001445   000100 100400                    MLR     fill='000'O
         2 001446   000000 000234 xsym               ADSC9   K_RWPARM_CON             cn=0,n=156
         2 001447   200006 000234                    ADSC9   K$RWPARM,,AUTO           cn=0,n=156

     1829    11381    2         K$RWPARM.MSG$ = M$;

  11381  2 001450   200060 236100                    LDQ     M$,,AUTO
         2 001451   200006 756100                    STQ     K$RWPARM,,AUTO

     1830    11382    2         K$RWPARM.MSGSZ = MSZ;

  11382  2 001452   200156 473500                    LDP3    @MSZ,,AUTO
         2 001453   300000 235100                    LDA     0,,PR3
         2 001454   200007 755100                    STA     K$RWPARM+1,,AUTO

     1831    11383              %LOCK (G=LDCT$->NK$LDCT.LOCK);

  11384  2 001455   200061 236100                    LDQ     LDCT$,,AUTO
         2 001456   000020 036003                    ADLQ    16,DU
         2 001457   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001460   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001461   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001462   000000 701000 xent               TSX1    HFC$LOCK
         2 001463   000000 011000                    NOP     0

     1832    11386    2   WRT:  CALL KIA$WRITE_USER (LDCT$->NK$LDCT,K$RWPARM) ALTRET(QFULL);

  11386  2 001464   200006 630500       WRT          EPPR0   K$RWPARM,,AUTO
         2 001465   200161 450500                    STP0    @MSZ+3,,AUTO
         2 001466   200061 236100                    LDQ     LDCT$,,AUTO
         2 001467   200160 756100                    STQ     @MSZ+2,,AUTO
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:269  
         2 001470   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001471   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001472   000000 701000 xent               TSX1    KIA$WRITE_USER
         2 001473   001553 702000 2                  TSX2    QFULL

     1833    11387    2         CALL SSR$REG (%SS_CW,LDCT$) ALTRET(BRKOUT);

  11387  2 001474   200061 630500                    EPPR0   LDCT$,,AUTO
         2 001475   200161 450500                    STP0    @MSZ+3,,AUTO
         2 001476   000037 236000 3                  LDQ     31
         2 001477   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001500   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001501   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001502   000000 701000 xent               TSX1    SSR$REG
         2 001503   001634 702000 2                  TSX2    BRKOUT

     1834    11388              %LOCK (G=LDCT$->NK$LDCT.LOCK);

  11389  2 001504   200061 236100                    LDQ     LDCT$,,AUTO
         2 001505   000020 036003                    ADLQ    16,DU
         2 001506   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001507   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001510   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001511   000000 701000 xent               TSX1    HFC$LOCK
         2 001512   000000 011000                    NOP     0

     1835    11391    2   RD:   ;

  11391  2 001513                       RD           null
     1836    11392    2         K$RWPARM.IP$ = LDCT$->NK$LDCT.IP$;

  11392  2 001513   200061 470500                    LDP0    LDCT$,,AUTO
         2 001514   000013 236100                    LDQ     11,,PR0
         2 001515   200020 756100                    STQ     K$RWPARM+10,,AUTO

     1837    11393    2         LDCT$->NK$LDCT.IP$ = ADDR(NIL);

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:270  
  11393  2 001516   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001517   000013 756100                    STQ     11,,PR0

     1838    11394    3         IF K$RWPARM.IP$ ~= ADDR(NIL) THEN DO;

  11394  2 001520   200020 236100                    LDQ     K$RWPARM+10,,AUTO
         2 001521   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001522   001551 600000 2                  TZE     s:11400

     1839    11395    3            CALL KIQ$MAPFEP(LDCT$->NK$LDCT.IPFEI#);

  11395  2 001523   200061 236100                    LDQ     LDCT$,,AUTO
         2 001524   000040 036000 3                  ADLQ    32
         2 001525   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001526   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001527   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001530   000000 701000 xent               TSX1    KIQ$MAPFEP
         2 001531   000000 011000                    NOP     0

     1840    11396    3            K$RWPARM.UHDR$ = PINCRC(K$RWPARM.IP$,K$RWPARM.IP$->KI$QMHDR.OFFSET);

  11396  2 001532   200020 470500                    LDP0    K$RWPARM+10,,AUTO
         2 001533   000001 236100                    LDQ     1,,PR0
         2 001534   000022 772000                    QRL     18
         2 001535   000020 736000                    QLS     16
         2 001536   200020 036100                    ADLQ    K$RWPARM+10,,AUTO
         2 001537   200022 756100                    STQ     K$RWPARM+12,,AUTO

     1841    11397    3            K$RWPARM.UHDRSZ = K$RWPARM.IP$->KI$QMHDR.SIZE;

  11397  2 001540   000001 236100                    LDQ     1,,PR0
         2 001541   777777 376007                    ANQ     -1,DL
         2 001542   200023 756100                    STQ     K$RWPARM+13,,AUTO

     1842    11398    3            CALL KIA$MSG (K$RWPARM);

  11398  2 001543   200006 631500                    EPPR1   K$RWPARM,,AUTO
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:271  
         2 001544   200160 451500                    STP1    @MSZ+2,,AUTO
         2 001545   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001546   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001547   000000 701000 xent               TSX1    KIA$MSG
         2 001550   000000 011000                    NOP     0

     1843    11399    3            END;

     1844    11400    2         RETURN;

  11400  2 001551   200154 221300                    LDX1  ! CNVTLNGWD+2,,AUTO
         2 001552   000001 702211                    TSX2  ! 1,X1

     1845    11401
     1846    11402    2   QFULL: IF (S$CU$->B$U.ASYNCH & ~%U_RESET) OR LDCT$->NK$LDCT.DFLG.FEDN THEN

  11402  2 001553   000003 236000 xsym  QFULL        LDQ     B_VECTNIL+3
         2 001554   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 001555   000000 470400 xsym               LDP0    S$CU$
         2 001556   000001 376100                    ANQ     1,,PR0
         2 001557   001623 601000 2                  TNZ     BRKOUT1
         2 001560   200061 471500                    LDP1    LDCT$,,AUTO
         2 001561   100006 236100                    LDQ     6,,PR1
         2 001562   000020 316007                    CANQ    16,DL
         2 001563   001623 601000 2                  TNZ     BRKOUT1

     1847    11403    2            GOTO BRKOUT1;
     1848    11404    3         IF K$RWPARM.ERR = %K$NO_THROT THEN DO;

  11404  2 001564   200021 235100                    LDA     K$RWPARM+11,,AUTO
         2 001565   000004 115007                    CMPA    4,DL
         2 001566   001614 601000 2                  TNZ     s:11412

     1849    11405    3            N$DCT$(DCTN)->NI$DCT.OD.THRTLD = 1;

  11405  2 001567   000000 473400 xsym               LDP3    N$DCT$$
         2 001570   200072 720100                    LXL0    DCTN,,AUTO
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:272  
         2 001571   300000 474510                    LDP4    0,X0,PR3
         2 001572   000001 236003                    LDQ     1,DU
         2 001573   400033 552120                    STBQ    27,'20'O,PR4

     1850    11406    3            CALL SSR$REG (%SS_CBL,LDCT$);

  11406  2 001574   200061 631500                    EPPR1   LDCT$,,AUTO
         2 001575   200161 451500                    STP1    @MSZ+3,,AUTO
         2 001576   000003 236000 3                  LDQ     3
         2 001577   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001600   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001601   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001602   000000 701000 xent               TSX1    SSR$REG
         2 001603   000000 011000                    NOP     0

     1851    11407                %LOCK (G=LDCT$->NK$LDCT.LOCK);

  11408  2 001604   200061 236100                    LDQ     LDCT$,,AUTO
         2 001605   000020 036003                    ADLQ    16,DU
         2 001606   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001607   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001610   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001611   000000 701000 xent               TSX1    HFC$LOCK
         2 001612   000000 011000                    NOP     0

     1852    11410    3            GOTO WRT;

  11410  2 001613   001464 710000 2                  TRA     WRT

     1853    11411    3            END;
     1854    11412    3         IF K$RWPARM.ERR = %K$QFULL THEN DO;

  11412  2 001614   000001 115007                    CMPA    1,DL
         2 001615   001623 601000 2                  TNZ     BRKOUT1

     1855    11413    3            CALL KIA$OQFL (LDCT$->NK$LDCT) ALTRET(BRKOUT) ;

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:273  
  11413  2 001616   200061 630500                    EPPR0   LDCT$,,AUTO
         2 001617   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001620   000000 701000 xent               TSX1    KIA$OQFL
         2 001621   001634 702000 2                  TSX2    BRKOUT

     1856    11414    3            GOTO WRT;

  11414  2 001622   001464 710000 2                  TRA     WRT

     1857    11415    3            END;
     1858    11416    2   BRKOUT1:
     1859    11417              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

  11418  2 001623   200061 236100       BRKOUT1      LDQ     LDCT$,,AUTO
         2 001624   000020 036003                    ADLQ    16,DU
         2 001625   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001626   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001627   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001630   000000 701000 xent               TSX1    HFC$UNLOCK
         2 001631   000000 011000                    NOP     0

     1860    11420    2         ALTRETURN;                   /* Error                        */

  11420  2 001632   200154 221300                    LDX1  ! CNVTLNGWD+2,,AUTO
         2 001633   000000 702211                    TSX2  ! 0,X1

  11412  2 001634                       BRKOUT       null
     1861    11421
     1862    11422    2   BRKOUT: ;
     1863    11423              %LOCK (G=LDCT$->NK$LDCT.LOCK);

  11424  2 001634   200061 236100                    LDQ     LDCT$,,AUTO
         2 001635   000020 036003                    ADLQ    16,DU
         2 001636   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001637   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001640   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001641   000000 701000 xent               TSX1    HFC$LOCK
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:274  
         2 001642   000000 011000                    NOP     0

     1864    11426    2         IF LDCT$->NK$LDCT.IP$ ~= ADDR(NIL) THEN

  11426  2 001643   200061 470500                    LDP0    LDCT$,,AUTO
         2 001644   000013 236100                    LDQ     11,,PR0
         2 001645   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001646   001513 601000 2                  TNZ     RD

     1865    11427    2            GOTO RD;
     1866    11428              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

  11429  2 001647   200061 236100                    LDQ     LDCT$,,AUTO
         2 001650   000020 036003                    ADLQ    16,DU
         2 001651   200160 756100                    STQ     @MSZ+2,,AUTO
         2 001652   200160 630500                    EPPR0   @MSZ+2,,AUTO
         2 001653   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001654   000000 701000 xent               TSX1    HFC$UNLOCK
         2 001655   000000 011000                    NOP     0

     1867    11431    2         ALTRETURN;

  11431  2 001656   200154 221300                    LDX1  ! CNVTLNGWD+2,,AUTO
         2 001657   000000 702211                    TSX2  ! 0,X1

     1868    11432    2   END;
     1869    11433    1   SETUP: PROC(DCTX) ALTRET;

  11433  2 001660   200154 741300       SETUP        STX1  ! CNVTLNGWD+2,,AUTO

     1870    11434
     1871    11435    2   DCL DCTX UBIN;
     1872    11436
     1873    11437    2         M$ = ADDR(MSG);             /* Message pointer for write */

  11437  2 001661   200073 630500                    EPPR0   MSG,,AUTO
         2 001662   200060 450500                    STP0    M$,,AUTO
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:275  

     1874    11438    2         DCTN = DCTX;                 /* DCT index                   */

  11438  2 001663   200155 471500                    LDP1    @DCTX,,AUTO
         2 001664   100000 235100                    LDA     0,,PR1
         2 001665   200072 755100                    STA     DCTN,,AUTO

     1875    11439    2         JDCB$ = B$JIT.DCB$;          /* DCB pointer               */

  11439  2 001666   000000 473400 xsym               LDP3    B$JIT$
         2 001667   300232 236100                    LDQ     154,,PR3
         2 001670   200063 756100                    STQ     JDCB$,,AUTO

     1876    11440    2         LDCT$ = N$DCT$(DCTX)->NI$DCT.OD.LDCT$;

  11440  2 001671   100000 720100                    LXL0    0,,PR1
         2 001672   000000 474400 xsym               LDP4    N$DCT$$
         2 001673   400000 475510                    LDP5    0,X0,PR4
         2 001674   500030 236100                    LDQ     24,,PR5
         2 001675   200061 756100                    STQ     LDCT$,,AUTO

     1877    11441    2         D$ = N$DCT$(DCTX)->NI$DCT.DDT$; /* DDT pointer            */

  11441  2 001676   100000 720100                    LXL0    0,,PR1
         2 001677   400000 475510                    LDP5    0,X0,PR4
         2 001700   500004 236100                    LDQ     4,,PR5
         2 001701   200057 756100                    STQ     D$,,AUTO

     1878    11442    3         IF D$->FT$DDT.POSLOST THEN DO;

  11442  2 001702   200057 476500                    LDP6    D$,,AUTO
         2 001703   600006 236100                    LDQ     6,,PR6
         2 001704   004000 316007                    CANQ    2048,DL
         2 001705   001712 600000 2                  TZE     s:11446

     1879    11443    3            B$JIT.ERR = E_IOERR;

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:276  
  11443  2 001706   000001 236000 1                  LDQ     E_IOERR
         2 001707   300012 756100                    STQ     10,,PR3

     1880    11444    3            ALTRETURN;

  11444  2 001710   200154 221300                    LDX1  ! CNVTLNGWD+2,,AUTO
         2 001711   000000 702211                    TSX2  ! 0,X1

     1881    11445    3            END;
     1882    11446    2         RETURN;

  11446  2 001712   000001 702211                    TSX2  ! 1,X1

     1883    11447    2   END;
     1884    11448
     1885    11449    1   CHKPOSLST: PROC ALTRET;

  11449  2 001713   200154 741300       CHKPOSLST    STX1  ! CNVTLNGWD+2,,AUTO

     1886    11450
     1887    11451    3         IF XFERACK.STT = 6 THEN DO;

  11451  2 001714   200006 470500                    LDP0    K$RWPARM,,AUTO
         2 001715   003100 061500                    CSR     bolr='003'O
         2 001716   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         2 001717   200160 000044                    BDSC    @MSZ+2,,AUTO             by=0,bit=0,n=36
         2 001720   200160 236100                    LDQ     @MSZ+2,,AUTO
         2 001721   000006 116007                    CMPQ    6,DL
         2 001722   001736 601000 2                  TNZ     s:11457

     1888    11452    3            B$JIT.ERR = E_IOERR;

  11452  2 001723   000001 236000 1                  LDQ     E_IOERR
         2 001724   000000 471400 xsym               LDP1    B$JIT$
         2 001725   100012 756100                    STQ     10,,PR1

     1889    11453    3            B$JIT.DCB$->F$DCB.TYC.IOERR(1) = '1'B;
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:277  

  11453  2 001726   100232 473500                    LDP3    154,,PR1
         2 001727   001000 236003                    LDQ     512,DU
         2 001730   300002 256100                    ORSQ    2,,PR3

     1890    11454    3            D$->FT$DDT.POSLOST = '1'B;

  11454  2 001731   200057 470500                    LDP0    D$,,AUTO
         2 001732   004000 236007                    LDQ     2048,DL
         2 001733   000006 256100                    ORSQ    6,,PR0

     1891    11455    3            ALTRETURN;

  11455  2 001734   200154 221300                    LDX1  ! CNVTLNGWD+2,,AUTO
         2 001735   000000 702211                    TSX2  ! 0,X1

     1892    11456    3            END;
     1893    11457    2         RETURN;

  11457  2 001736   000001 702211                    TSX2  ! 1,X1

     1894    11458    2   END;
     1895    11459    1         ALTRETURN;

  11459  2 001737   000000 702200 xent               TSX2  ! X66_AALT

E_CANTLABELOD
 Sect OctLoc
   1     000   062017 432132                                                    2..Z

E_IOERR
 Sect OctLoc
   1     001   062017 400102                                                    2..B

E_NOODSPACE
 Sect OctLoc
   1     002   062017 432142                                                    2..b
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:278  

(unnamed)
 Sect OctLoc
   1     003   105117 126061   105117 106061                                    EOV1EOF1

(unnamed)
 Sect OctLoc
   3     000   000051 400000   000000 000246   000001 006000   000011 006000    .)..............
   3     004   060040 040040   061040 040040   000007 006000   777777 777617    0   1   ........
   3     010   000000 000036   000010 006000   000010 006000   000000 000040    ...............
   3     014   000013 006000   000015 006000   000000 000044   000000 000014    ...........$....
   3     020   000017 006000   000016 006000   000000 000025   000000 000126    ...............V
   3     024   000023 006000   000022 006000   000000 000015   000026 006000    ................
   3     030   000000 000017   000000 000046   000031 006000   000030 006000    .......&........
   3     034   000000 000020   000034 006000   000000 000047   000036 006000    ...........'....
   3     040   000014 400000                                                    ....
     1896    11460    1   END;

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:279  
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FP_MACRO_C.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FT$DDT.:E05TOU  cannot be made into a system file and is referenced.
   FR$RAT.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   KI$MHDR.:E05TOU  is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
   K_SUBS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F_SCODE_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FPO$WRITELBL.
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:280  

 **** Variables and constants ****

  ****  Section 001 RoData FPO$WRITELBL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 E_CANTLABELOD              1-0-0/b STRC        r     1 E_IOERR
     2-0-0/b STRC        r     1 E_NOODSPACE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DCTX                    155-0-0/w PTR         r     1 @DCTX
   155-0-0/w PTR         r     1 @FNC                     156-0-0/w PTR         r     1 @MSZ
     4-0-0/w PTR         r     1 @SER$                     *0-0-0/w PTR         r     1 BFR$
    72-0-0/w STRC        r     1 CDCT                     152-0-0/w STRC        r     1 CNVTLNG
   152-0-0/w UBIN        r     1 CNVTLNGWD                 57-0-0/w PTR         r     1 D$
    72-0-0/w UBIN        r     1 DCTN                      *0-0-0/w UBIN        r     1 DCTX
    *0-0-0/w UBIN        r     1 DCTX                      *0-0-0/w SBIN        r     1 DIR
    64-0-0/b BIT         r     1 ERRSAV                    66-0-0/w UBIN        r     1 F
    *0-0-0/w UBIN        r     1 FNC                       65-0-0/w UBIN        r     1 I
    63-0-0/w PTR         r     1 JDCB$                      6-0-0/d STRC(1404)  r     1 K$RWPARM
    *0-0-0/w PTR         r     1 LBL1$                     *0-0-0/w PTR         r     1 LBL2$
    61-0-0/w PTR         r     1 LDCT$                     60-0-0/w PTR         r     1 M$
   151-0-0/w STRC        r     1 MP                        73-0-0/c CHAR(180)   r     1 MSG
    *0-0-0/w UBIN        r     1 MSZ                      151-0-0/w PTR         r     1 QMP$
   150-0-0/w UBIN        r     1 QSZ                       *0-0-0/w PTR         r     1 SER$
   150-0-0/w STRC        r     1 SZ                        67-0-0/w UBIN        r     1 WSQ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:281  
     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/d STRC(1404)  r     1 K_RWPARM_CON
     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w PTR         r     1 S$CU$
     0-0-0/w UBIN        r     1 S_CUN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(576)   r     1 B$U
     0-0-0/c STRC(108)   r     1 COPYREQ                    0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/c STRC(1494)  r     1 FNDACK                     0-0-0/c STRC(342)   r     1 FNDFLREQ
     0-0-0/c STRC(108)   r     1 FNDSQREQ                   0-0-0/w STRC(288)   r     1 FT$DDT
     0-0-0/c CHAR(160)   r     1 HDRS                       0-0-0/w STRC(612)   r     1 KI$FEI
     0-0-0/w STRC(144)   r     1 KI$QMHDR                   0-0-0/b STRC(54)    r     1 LABELACK
     0-0-0/c STRC(774)   r     1 LABELREQ                   0-0-0/c CHAR(80)    r     1 LBL
     0-0-0/b STRC(54)    r     1 MSG                        0-0-0/w PTR         r     1 N$DCT$(0:0)
     0-0-0/w STRC(1332)  r     1 NI$DCT                     0-0-0/d STRC(864)   r     1 NK$LDCT
     0-0-0/c STRC(144)   r     1 PEOVACK                    0-0-0/c STRC(63)    r     1 PEOVREQ
     0-0-0/c STRC(774)   r     1 RDEOFACK                   0-0-0/b STRC(54)    r     1 RDEOFREQ
     0-0-0/c CHAR(6)     r     1 SER                        0-0-0/b STRC(54)    r     1 WRITELBLACK
     0-0-0/c STRC(1494)  r     1 WRITELBLREQ                0-0-0/b STRC(108)   r     1 XFERACK
     0-0-0/b STRC(144)   r     1 XFERREQ


   Procedure FPO$WRITELBL requires 992 words for executable code.
   Procedure FPO$WRITELBL requires 116 words of local(AUTO) storage.

    No errors detected in file FPO$OPNOD.:E05TSI    .
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:282  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:283  
          MINI XREF LISTING

B$DO.ECCINFO
      8330**DCL      8331--REDEF
B$JIT.DCB$
      6563**DCL     10992>>CALL    11033>>CALL    11102>>CALL    11128>>CALL    11152>>CALL    11171>>CALL
     11187>>CALL    11215>>CALL    11244>>CALL    11289>>CALL    11336>>ASSIGN  11439>>ASSIGN  11453>>ASSIGN
B$JIT.ERR
      6473**DCL     11015<<ASSIGN  11210<<ASSIGN  11329<<ASSIGN  11337<<ASSIGN  11443<<ASSIGN  11452<<ASSIGN
B$JIT.ERR.MID
      6474**DCL      6474--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      6578**DCL      6578--REDEF    6579--REDEF
B$JIT.TSLINE
      6576**DCL      6577--REDEF
B$JIT$
     10936**DCL      6468--IMP-PTR 10992>>CALL    11015>>ASSIGN  11033>>CALL    11102>>CALL    11128>>CALL
     11152>>CALL    11171>>CALL    11187>>CALL    11210>>ASSIGN  11215>>CALL    11244>>CALL    11289>>CALL
     11329>>ASSIGN  11336>>ASSIGN  11337>>ASSIGN  11439>>ASSIGN  11443>>ASSIGN  11452>>ASSIGN  11453>>ASSIGN
B$U.ASYNCH
      8267**DCL     11402>>IF
B$U.MISC
      8309**DCL      8310--REDEF
B$USER.MISC
      8385**DCL      8386--REDEF
BFR$
      9357**DCL     11293<>CALL
BRKOUT
     11335**LABEL   10992--CALLALT 10995--CALLALT 10996--CALLALT 11033--CALLALT 11038--CALLALT 11039--CALLALT
     11075--CALLALT 11077--CALLALT 11078--CALLALT 11102--CALLALT 11103--CALLALT 11104--CALLALT 11128--CALLALT
     11129--CALLALT 11130--CALLALT 11152--CALLALT 11153--CALLALT 11154--CALLALT 11171--CALLALT 11173--CALLALT
     11187--CALLALT 11189--CALLALT 11191--CALLALT 11215--CALLALT 11218--CALLALT 11219--CALLALT 11244--CALLALT
     11247--CALLALT 11248--CALLALT 11289--CALLALT 11303--CALLALT
BRKOUT IN PROCEDURE WR_OSAR_MSG
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:284  
     11412**LABEL   11387--CALLALT 11413--CALLALT
BRKOUT1 IN PROCEDURE WR_OSAR_MSG
     11418**LABEL   11403--GOTO
CDCT.HI
      9698**DCL     11374>>ASSIGN
CDCT.LO
      9699**DCL     11375>>ASSIGN
CHKPOSLST
     11449**PROC    10996--CALL    11039--CALL    11078--CALL    11104--CALL    11130--CALL    11154--CALL
     11191--CALL    11219--CALL    11248--CALL    11303--CALL
CNVTLNG.B1
      9716**DCL     11316<<ASSIGN
CNVTLNG.B2
      9717**DCL     11317<<ASSIGN
CNVTLNG.B3
      9718**DCL     11318<<ASSIGN
CNVTLNG.B4
      9719**DCL     11319<<ASSIGN
CNVTLNGWD
      9713**DCL      9714--REDEF   11320>>ASSIGN
COPYREQ
     10451**DCL     11173--CALL
COPYREQ.SER
     10460**DCL     11172<<ASSIGN
D$
      9684**DCL     11043>>ASSIGN  11045>>ASSIGN  11047>>ASSIGN  11048>>ASSIGN  11051>>ASSIGN  11052>>ASSIGN
     11079>>ASSIGN  11441<<ASSIGN  11442>>IF      11454>>ASSIGN
DCTN
      9695**DCL      9696--REDEF   11292>>ASSIGN  11379>>ASSIGN  11405>>ASSIGN  11438<<ASSIGN
DCTX
      9355**DCL        16--PROC     9356--REDEF    9357--REDEF    9358--REDEF   11031--ENTRY   11073--ENTRY
     11075<>CALL    11150--ENTRY   11185--ENTRY   11213--ENTRY   11242--ENTRY   11271--ENTRY   11277--ENTRY
     11280--ENTRY   11283--ENTRY   11286--ENTRY
DCTX IN PROCEDURE SETUP
     11435**DCL     11433--PROC    11438>>ASSIGN  11440>>ASSIGN  11441>>ASSIGN
DIR
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:285  
      9358**DCL     11034>>IF
ERRSAV
      9689**DCL     10997<<ASSIGN  11002<<ASSIGN  11005<<ASSIGN  11014>>IF      11015>>ASSIGN  11192<<ASSIGN
     11197<<ASSIGN  11199<<ASSIGN  11209>>IF      11210>>ASSIGN
E_CANTLABELOD
     10952**DCL     11197>>ASSIGN
E_IOERR
     10966**DCL     11005>>ASSIGN  11199>>ASSIGN  11329>>ASSIGN  11337>>ASSIGN  11443>>ASSIGN  11452>>ASSIGN
E_NOODSPACE
     10975**DCL     11002>>ASSIGN
F
      9691**DCL     11272<<ASSIGN  11278<<ASSIGN  11281<<ASSIGN  11284<<ASSIGN  11287<<ASSIGN  11302<>CALL
F$DCB.ACTPOS
      6660**DCL      6660--REDEF
F$DCB.ARS
      6635**DCL      6635--REDEF   11291>>ASSIGN  11320<<ASSIGN
F$DCB.ATTR
      6653**DCL      6654--REDEF
F$DCB.BORROW
      6668**DCL      6668--REDEF    6668--REDEF    6668--REDEF
F$DCB.DCBNAME.L
      6682**DCL      6682--IMP-SIZ
F$DCB.EOMCHAR
      6639**DCL      6639--REDEF
F$DCB.FLDID
      6663**DCL      6663--REDEF
F$DCB.FORM$
      6657**DCL      6657--REDEF
F$DCB.FSECT
      6673**DCL      6673--REDEF
F$DCB.FSN
      6650**DCL      6650--REDEF    6650--REDEF    6651--REDEF   11217>>CALLBLT
F$DCB.HEADER$
      6656**DCL      6656--REDEF
F$DCB.IXTNSIZE
      6654**DCL      6654--REDEF
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:286  
F$DCB.LASTSTA$
      6644**DCL      6644--REDEF
F$DCB.LVL
      6669**DCL      6669--REDEF
F$DCB.NAME
      6644**DCL     11245>>ASSIGN
F$DCB.NAME.C
      6644**DCL      6644--REDEF
F$DCB.NOEOF
      6665**DCL      6665--REDEF
F$DCB.NRECS
      6655**DCL      6655--REDEF
F$DCB.NRECX
      6674**DCL      6674--REDEF
F$DCB.OHDR
      6666**DCL      6666--REDEF
F$DCB.ORG
      6649**DCL      6649--REDEF
F$DCB.PRECNO
      6672**DCL      6672--REDEF
F$DCB.RCSZ
      6677**DCL      6677--REDEF
F$DCB.RES
      6645**DCL      6645--REDEF
F$DCB.SETX
      6657**DCL      6657--REDEF   10992<>CALL    11033<>CALL    11102<>CALL    11128<>CALL    11152<>CALL
     11171<>CALL    11187<>CALL    11215<>CALL    11244<>CALL    11289<>CALL
F$DCB.TAB$
      6656**DCL      6657--REDEF
F$DCB.TDA
      6671**DCL      6671--REDEF
F$DCB.TYC
      6635**DCL     11202<<ASSIGN  11202>>ASSIGN  11216<<ASSIGN  11246<<ASSIGN  11290<<ASSIGN
F$DCB.TYC.BOT
      6635**DCL     11224<<ASSIGN
F$DCB.TYC.EOD
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:287  
      6636**DCL     11230<<ASSIGN  11259<<ASSIGN
F$DCB.TYC.EOF
      6636**DCL     11226<<ASSIGN  11253<<ASSIGN  11308<<ASSIGN
F$DCB.TYC.EOT
      6635**DCL     11228<<ASSIGN  11255<<ASSIGN  11314<<ASSIGN
F$DCB.TYC.IOERR
      6636**DCL     11003<<ASSIGN  11006<<ASSIGN  11200<<ASSIGN  11232<<ASSIGN  11257<<ASSIGN  11310<<ASSIGN
     11328>>IF      11336<<ASSIGN  11453<<ASSIGN
F$DCB.TYC.LD
      6636**DCL     11312<<ASSIGN
F$DCB.UB$
      6673**DCL     11172>>ASSIGN
F$DCB.WSN
      6646**DCL      6646--REDEF
FNC IN PROCEDURE WR_OSAR_MSG
     11354**DCL     11352--PROC    11373>>ASSIGN  11376>>IF
FNDACK.HDRS
     10545**DCL     11222>>ASSIGN  11251>>ASSIGN
FNDACK.STT
     10538**DCL     11220>>DOCASE  11249>>DOCASE
FNDFLREQ
     10403**DCL     11247--CALL
FNDFLREQ.NM
     10412**DCL     11245<<ASSIGN
FNDSQREQ
     10386**DCL     11218--CALL
FNDSQREQ.FSN
     10395**DCL     11217<<CALLBLT
FT$DDT.FSN
      8703**DCL     11048<<ASSIGN  11052<<ASSIGN
FT$DDT.POS
      8727**DCL     11043<<ASSIGN  11045<<ASSIGN  11047<<ASSIGN  11051<<ASSIGN  11079<<ASSIGN
FT$DDT.POSLOST
      8720**DCL     11442>>IF      11454<<ASSIGN
HDRS
     10609**DCL     11222<<ASSIGN  11251<<ASSIGN
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:288  
HFC$LOCK
      9351**DCL-ENT 11384--CALL    11389--CALL    11408--CALL    11424--CALL
HFC$UNLOCK
      9351**DCL-ENT 11012--CALL    11058--CALL    11084--CALL    11109--CALL    11135--CALL    11160--CALL
     11207--CALL    11238--CALL    11265--CALL    11325--CALL    11418--CALL    11429--CALL
I
      9690**DCL     11040<<CALLBLT 11041>>IF      11048>>ASSIGN
JDCB$
      9688**DCL      6635--IMP-PTR 11003>>ASSIGN  11006>>ASSIGN  11172>>ASSIGN  11200>>ASSIGN  11202>>ASSIGN
     11202>>ASSIGN  11216>>ASSIGN  11217>>CALLBLT 11224>>ASSIGN  11226>>ASSIGN  11228>>ASSIGN  11230>>ASSIGN
     11232>>ASSIGN  11245>>ASSIGN  11246>>ASSIGN  11253>>ASSIGN  11255>>ASSIGN  11257>>ASSIGN  11259>>ASSIGN
     11290>>ASSIGN  11291>>ASSIGN  11308>>ASSIGN  11310>>ASSIGN  11312>>ASSIGN  11314>>ASSIGN  11320>>ASSIGN
     11328>>IF      11439<<ASSIGN
K$RWPARM
      9387**DCL     11010<>CALL    11056<>CALL    11082<>CALL    11107<>CALL    11133<>CALL    11158<>CALL
     11205<>CALL    11236<>CALL    11263<>CALL    11323<>CALL    11380<<ASSIGN  11386<>CALL    11398<>CALL
K$RWPARM.BLKREC
      9413**DCL      9438--REDEF
K$RWPARM.BLKREC.BLKU#
      9414**DCL      9416--REDEF
K$RWPARM.BLKREC.RECU#
      9426**DCL      9428--REDEF
K$RWPARM.DVE.DVBYTE.VFC
      9453**DCL      9454--REDEF
K$RWPARM.DVE.EOMCHAR
      9461**DCL      9465--REDEF
K$RWPARM.ERR
      9525**DCL      9530--REDEF   11404>>IF      11412>>IF
K$RWPARM.FC
      9489**DCL      9490--REDEF
K$RWPARM.FLDID
      9671**DCL      9672--REDEF
K$RWPARM.FPT$
      9552**DCL      9559--REDEF
K$RWPARM.FUNCTION
      9566**DCL     11009<<ASSIGN  11055<<ASSIGN  11081<<ASSIGN  11106<<ASSIGN  11132<<ASSIGN  11157<<ASSIGN
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:289  
     11204<<ASSIGN  11235<<ASSIGN  11262<<ASSIGN  11322<<ASSIGN
K$RWPARM.IP$
      9517**DCL     11392<<ASSIGN  11394>>IF      11396>>ASSIGN  11396>>ASSIGN  11397>>ASSIGN
K$RWPARM.KEYTYPE
      9678**DCL      9679--REDEF
K$RWPARM.LDCT$
      9548**DCL     11008<<ASSIGN  11054<<ASSIGN  11080<<ASSIGN  11105<<ASSIGN  11131<<ASSIGN  11156<<ASSIGN
     11203<<ASSIGN  11234<<ASSIGN  11261<<ASSIGN  11321<<ASSIGN
K$RWPARM.MSG$
      9388**DCL      9394--REDEF   10485--IMP-PTR 10501--IMP-PTR 10519--IMP-PTR 10536--IMP-PTR 10553--IMP-PTR
     10569--IMP-PTR 10998>>DOCASE  11040>>CALLBLT 11042>>IF      11044>>IF      11155>>ASSIGN  11193>>DOCASE
     11220>>DOCASE  11222>>ASSIGN  11249>>DOCASE  11251>>ASSIGN  11304>>DOCASE  11316>>ASSIGN  11317>>ASSIGN
     11318>>ASSIGN  11319>>ASSIGN  11381<<ASSIGN  11451>>IF
K$RWPARM.MSGID
      9500**DCL      9505--REDEF
K$RWPARM.MSGIDXT
      9513**DCL      9517--REDEF
K$RWPARM.MSGSZ
      9395**DCL     11382<<ASSIGN
K$RWPARM.ORG
      9649**DCL      9650--REDEF
K$RWPARM.THDRSZ
      9593**DCL      9597--REDEF
K$RWPARM.UHDR$
      9538**DCL     11396<<ASSIGN
K$RWPARM.UHDRSZ
      9543**DCL     11397<<ASSIGN
K$RWPARM.VDOFLGS
      9651**DCL      9662--REDEF
KI$FEI.BD$
     10293**DCL     10294--REDEF
KI$FEI.BDAD.WADDR
     10295**DCL     10296--REDEF
KI$FEI.FEWSQ
     10286**DCL     11292>>ASSIGN
KI$FEI.RCVPB
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:290  
     10309**DCL     10310--REDEF
KI$QMHDR.FPTSZ
     10232**DCL     10233--REDEF
KI$QMHDR.MSGSZ
     10238**DCL     10239--REDEF
KI$QMHDR.OFFSET
     10226**DCL     11396>>ASSIGN
KI$QMHDR.SIZE
     10227**DCL     11397>>ASSIGN
KI$QMHDR.UID
     10228**DCL     10229--REDEF
KI$RWPARM.BLKREC
      9881**DCL      9906--REDEF
KI$RWPARM.BLKREC.BLKU#
      9882**DCL      9884--REDEF
KI$RWPARM.BLKREC.RECU#
      9894**DCL      9896--REDEF
KI$RWPARM.DVE.DVBYTE.VFC
      9921**DCL      9922--REDEF
KI$RWPARM.DVE.EOMCHAR
      9929**DCL      9933--REDEF
KI$RWPARM.ERR
      9993**DCL      9998--REDEF
KI$RWPARM.FC
      9957**DCL      9958--REDEF
KI$RWPARM.FLDID
     10139**DCL     10140--REDEF
KI$RWPARM.FPT$
     10020**DCL     10027--REDEF
KI$RWPARM.KEYTYPE
     10146**DCL     10147--REDEF
KI$RWPARM.MSG$
      9856**DCL      9862--REDEF
KI$RWPARM.MSGID
      9968**DCL      9973--REDEF
KI$RWPARM.MSGIDXT
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:291  
      9981**DCL      9985--REDEF
KI$RWPARM.ORG
     10117**DCL     10118--REDEF
KI$RWPARM.THDRSZ
     10061**DCL     10065--REDEF
KI$RWPARM.VDOFLGS
     10119**DCL     10130--REDEF
KIA$MSG
     10940**DCL-ENT 11398--CALL
KIA$OQFL
     10941**DCL-ENT 11413--CALL
KIA$WRITE_USER
     10939**DCL-ENT 11386--CALL
KIQ$MAPFEP
     10943**DCL-ENT 11395--CALL
KIS$SEND
     10942**DCL-ENT 11010--CALL    11056--CALL    11082--CALL    11107--CALL    11133--CALL    11158--CALL
     11205--CALL    11236--CALL    11263--CALL    11323--CALL
K_RWPARM_CON
     10638**DCL     11380>>ASSIGN
K_RWPARM_CON.BLKREC
     10664**DCL     10689--REDEF
K_RWPARM_CON.BLKREC.BLKU#
     10665**DCL     10667--REDEF
K_RWPARM_CON.BLKREC.RECU#
     10677**DCL     10679--REDEF
K_RWPARM_CON.DVE.DVBYTE.VFC
     10704**DCL     10705--REDEF
K_RWPARM_CON.DVE.EOMCHAR
     10712**DCL     10716--REDEF
K_RWPARM_CON.ERR
     10776**DCL     10781--REDEF
K_RWPARM_CON.FC
     10740**DCL     10741--REDEF
K_RWPARM_CON.FLDID
     10922**DCL     10923--REDEF
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:292  
K_RWPARM_CON.FPT$
     10803**DCL     10810--REDEF
K_RWPARM_CON.KEYTYPE
     10929**DCL     10930--REDEF
K_RWPARM_CON.MSG$
     10639**DCL     10645--REDEF
K_RWPARM_CON.MSGID
     10751**DCL     10756--REDEF
K_RWPARM_CON.MSGIDXT
     10764**DCL     10768--REDEF
K_RWPARM_CON.ORG
     10900**DCL     10901--REDEF
K_RWPARM_CON.THDRSZ
     10844**DCL     10848--REDEF
K_RWPARM_CON.VDOFLGS
     10902**DCL     10913--REDEF
LABEL1
     11188**LABEL   11174--GOTO
LABELACK.STT
     10555**DCL     11193>>DOCASE
LABELREQ
     10468**DCL     11189--CALL
LABELREQ.VOL1
     10477**DCL     11188<<ASSIGN
LBL
     10608**DCL     10993>>ASSIGN  10994>>ASSIGN  11155<<ASSIGN  11188>>ASSIGN
LBL1$
      9356**DCL     10993>>ASSIGN  11155>>ASSIGN  11188>>ASSIGN  11222>>ASSIGN  11251>>ASSIGN
LBL2$
      9360**DCL     10994>>ASSIGN
LDCT$
      9686**DCL     11008>>ASSIGN  11012>>CALL    11054>>ASSIGN  11058>>CALL    11080>>ASSIGN  11084>>CALL
     11105>>ASSIGN  11109>>CALL    11131>>ASSIGN  11135>>CALL    11156>>ASSIGN  11160>>CALL    11203>>ASSIGN
     11207>>CALL    11234>>ASSIGN  11238>>CALL    11261>>ASSIGN  11265>>CALL    11321>>ASSIGN  11325>>CALL
     11335>>IF      11384>>CALL    11386>>CALL    11387<>CALL    11389>>CALL    11392>>ASSIGN  11393>>ASSIGN
     11395>>CALL    11402>>IF      11406<>CALL    11408>>CALL    11413>>CALL    11418>>CALL    11424>>CALL
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:293  
     11426>>IF      11429>>CALL    11440<<ASSIGN
M$
      9685**DCL     10335--IMP-PTR 10353--IMP-PTR 10370--IMP-PTR 10386--IMP-PTR 10403--IMP-PTR 10422--IMP-PTR
     10451--IMP-PTR 10468--IMP-PTR 10993>>ASSIGN  10994>>ASSIGN  11035>>ASSIGN  11037>>ASSIGN  11076>>ASSIGN
     11172>>ASSIGN  11188>>ASSIGN  11217>>CALLBLT 11245>>ASSIGN  11273<<ASSIGN  11274>>ASSIGN  11275>>ASSIGN
     11294>>ASSIGN  11295>>ASSIGN  11296>>ASSIGN  11297>>ASSIGN  11298>>ASSIGN  11299>>ASSIGN  11300>>ASSIGN
     11301>>ASSIGN  11362--IMP-PTR 11373>>ASSIGN  11374>>ASSIGN  11375>>ASSIGN  11377>>ASSIGN  11379>>ASSIGN
     11381>>ASSIGN  11437<<ASSIGN
MMS$VGET
     10945**DCL-ENT 11293--CALL
MMS$VREL
     10946**DCL-ENT 11327--CALL    11333--CALL
MP.B2
      9709**DCL     11296>>ASSIGN
MP.B3
      9710**DCL     11295>>ASSIGN
MP.B4
      9711**DCL     11294>>ASSIGN
MSG
      9700**DCL     11273--ASSIGN  11437--ASSIGN
MSG.DCTX.HI IN PROCEDURE WR_OSAR_MSG
     11368**DCL     11374<<ASSIGN
MSG.DCTX.LO IN PROCEDURE WR_OSAR_MSG
     11369**DCL     11375<<ASSIGN
MSG.DEV# IN PROCEDURE WR_OSAR_MSG
     11365**DCL     11377<<ASSIGN  11379<<ASSIGN
MSG.FNC IN PROCEDURE WR_OSAR_MSG
     11363**DCL     11373<<ASSIGN
MSZ IN PROCEDURE WR_OSAR_MSG
     11355**DCL     11352--PROC    11382>>ASSIGN
N$DCT$
     10935**DCL     11292>>ASSIGN  11379>>ASSIGN  11405>>ASSIGN  11440>>ASSIGN  11441>>ASSIGN
N$DCT$$
      8177**DCL      8177--IMP-PTR 10935--IMP-PTR 11292>>ASSIGN  11379>>ASSIGN  11405>>ASSIGN  11440>>ASSIGN
     11441>>ASSIGN
NI$DCT.DDT$
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:294  
      9733**DCL     11441>>ASSIGN
NI$DCT.DP
      9752**DCL      9759--REDEF    9762--REDEF    9763--REDEF    9765--REDEF    9765--REDEF    9766--REDEF
      9767--REDEF    9767--REDEF
NI$DCT.DVN
      9741**DCL     11379>>ASSIGN
NI$DCT.MPC.IOCHANX
      9760**DCL      9760--REDEF
NI$DCT.OD.FEI$
      9768**DCL     11292>>ASSIGN
NI$DCT.OD.LDCT$
      9767**DCL     11440>>ASSIGN
NI$DCT.OD.THRTLD
      9768**DCL     11405<<ASSIGN
NI$DQH.IOCHANX
      9782**DCL      9783--REDEF
NI$DQH.MBX$
      9791**DCL      9792--REDEF
NK$LDCT
     10163**DCL     11386<>CALL    11413<>CALL
NK$LDCT.DDT$
     10165**DCL     10165--REDEF
NK$LDCT.DFLG.FEDN
     10171**DCL     11335>>IF      11402>>IF
NK$LDCT.IOQ$
     10164**DCL     10165--REDEF
NK$LDCT.IP$
     10185**DCL     11392>>ASSIGN  11393<<ASSIGN  11426>>IF
NK$LDCT.IPFEI#
     10186**DCL     11395<>CALL
NK$LDCT.LDCTX
     10166**DCL     10166--REDEF
NK$LDCT.LKFLG.ABORTED
     10178**DCL     10179--REDEF
NK$LDCT.LOCK
     10191**DCL     11012<>CALL    11058<>CALL    11084<>CALL    11109<>CALL    11135<>CALL    11160<>CALL
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:295  
     11207<>CALL    11238<>CALL    11265<>CALL    11325<>CALL    11384<>CALL    11389<>CALL    11408<>CALL
     11418<>CALL    11424<>CALL    11429<>CALL
NK$LDCT.RLCID.LDCTX
     10188**DCL     10188--REDEF
NK$LDCT.STA$
     10184**DCL     10185--REDEF
NK$LDCT.SYMB$
     10163**DCL     10163--REDEF   10163--REDEF   10164--REDEF
NOBFR
     11335**LABEL   11293--CALLALT
PEOVACK.FSEQU_NUM
     10511**DCL     11040>>CALLBLT
PEOVACK.TYPE
     10510**DCL     11042>>IF      11044>>IF
PEOVREQ
     10353**DCL     11038--CALL    11077--CALL
PEOVREQ.DIR
     10362**DCL     11035<<ASSIGN  11037<<ASSIGN  11076<<ASSIGN
QFULL IN PROCEDURE WR_OSAR_MSG
     11402**LABEL   11386--CALLALT
QMP$
      9707**DCL      9708--REDEF   11293<>CALL    11327<>CALL    11333<>CALL
QSZ
      9701**DCL      9702--REDEF   11291<<ASSIGN
RD IN PROCEDURE WR_OSAR_MSG
     11391**LABEL   11427--GOTO
RDEOFACK.LBL
     10528**DCL     11155>>ASSIGN
RDEOFREQ
     10370**DCL     11103--CALL    11129--CALL    11153--CALL
RDWROD
     11287**LABEL   11276--GOTO    11279--GOTO    11282--GOTO    11285--GOTO
S$CU$
      8396**DCL     11402>>IF
SC_FPOBADSEND
     10947**DCL-ENT 11341--CALL
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:296  
SER
     10607**DCL     11172>>ASSIGN
SER$
      9359**DCL        16--PROC     9360--REDEF    9361--REDEF    9362--REDEF   10607--IMP-PTR
SETUP
     11433**PROC    10992--CALL    11033--CALL    11075--CALL    11102--CALL    11128--CALL    11152--CALL
     11171--CALL    11187--CALL    11215--CALL    11244--CALL    11289--CALL
SSR$REG
     10944**DCL-ENT 11387--CALL    11406--CALL
SZ
      9702**DCL     11293<>CALL
SZ.B2
      9704**DCL     11300>>ASSIGN
SZ.B3
      9705**DCL     11299>>ASSIGN
SZ.B4
      9706**DCL     11298>>ASSIGN
S_CUN
     10937**DCL     11274>>ASSIGN  11275>>ASSIGN
WRERR
     11333**LABEL   11302--CALLALT
WRITELBLACK.STT
     10487**DCL     10998>>DOCASE
WRITELBLREQ
     10335**DCL     10995--CALL
WRITELBLREQ.HDR1
     10344**DCL     10993<<ASSIGN
WRITELBLREQ.HDR2
     10345**DCL     10994<<ASSIGN
WRT IN PROCEDURE WR_OSAR_MSG
     11386**LABEL   11410--GOTO    11414--GOTO
WR_OSAR_MSG
     11352**PROC    10995--CALL    11038--CALL    11077--CALL    11103--CALL    11129--CALL    11153--CALL
     11173--CALL    11189--CALL    11218--CALL    11247--CALL    11302--CALL
WSQ
      9692**DCL     11292<<ASSIGN  11293<>CALL    11327<>CALL    11333<>CALL
PL6.E3A0      #002=FPO$WRITELBL File=FPO$OPNOD.:E05TSI                           TUE 07/29/97 17:20 Page:297  
XFERACK.SIZE.B1
     10580**DCL     11316>>ASSIGN
XFERACK.SIZE.B2
     10582**DCL     11317>>ASSIGN
XFERACK.SIZE.B3
     10584**DCL     11318>>ASSIGN
XFERACK.SIZE.B4
     10586**DCL     11319>>ASSIGN
XFERACK.STT
     10571**DCL     11304>>DOCASE  11451>>IF
XFERREQ
     10422**DCL     11302--CALL
XFERREQ.ADR.B1
     10432**DCL     11297<<ASSIGN
XFERREQ.ADR.B2
     10433**DCL     11296<<ASSIGN
XFERREQ.ADR.B3
     10434**DCL     11295<<ASSIGN
XFERREQ.ADR.B4
     10435**DCL     11294<<ASSIGN
XFERREQ.SIZE.B1
     10437**DCL     11301<<ASSIGN
XFERREQ.SIZE.B2
     10438**DCL     11300<<ASSIGN
XFERREQ.SIZE.B3
     10439**DCL     11299<<ASSIGN
XFERREQ.SIZE.B4
     10440**DCL     11298<<ASSIGN
XFERREQ.USRNO.B1
     10442**DCL     11274<<ASSIGN
XFERREQ.USRNO.B2
     10443**DCL     11275<<ASSIGN
