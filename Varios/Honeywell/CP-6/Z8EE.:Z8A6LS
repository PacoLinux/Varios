VERSION A06

PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        Z8EE$CREATE_DUMMY_TOKEN :PROC (LA_INDEX, LA_SYMBOL, LA_LINE, LA_COLUMN) ;
        7        7        /*M* Z8EE$CREATE_DUMMY_TOKEN -- Create error recovery tokens */
        8        8
        9        9        /*P*
       10       10               NAME:  Z8EE$CREATE_DUMMY_TOKEN
       11       11            PURPOSE:  This procedure creates a dummy token when called by the
       12       12                      parser.  The first time it is called, it creates all the
       13       13                      dummy tokens needed and assigns the values each time it
       14       14                      is called.
       15       15        */
       16       16
       17       17        /*D*
       18       18               NAME:  Z8EE$CREATE_DUMMY_TOKEN
       19       19               CALL:  CALL Z8EE$CREATE_DUMMY_TOKEN(LA_INDEX, LA_SYMBOL, LA_LINE,
       20       20                                                   LA_COLUMN) ;
       21       21              INPUT:  LA_INDEX  - The index into the parser stack.
       22       22                      LA_SYMBOL - The type of dummy token to be created.
       23       23                      LA_LINE   - The line number of the dummy token.
       24       24                      LA_COLUMN - The column number of the dummy token.
       25       25             OUTPUT:  LA_STK.DNT$, LA_STK.ST$, etc. are all assigned their
       26       26                      appropriate values.
       27       27            SCRATCH:  DNT$ is the only scratch variable.
       28       28
       29       29        DESCRIPTION:  This procedure performs two separate functions.  The first
       30       30                      time this is called it creates all of the dummy tokens
       31       31                      that the parser might need.  This involves reserving DNT
       32       32                      and ST items for the dummy tokens.  All of the lex stack
       33       33                      values (LA_STK.DNT$, etc.) are all assigned a case
       34       34                      statement of the type of symbol needed.
       35       35
       36       36        */
       37       37        %EJECT ;
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:2    
       38       38
       39       39        %SET PHASE = 1;
       40       40        %INCLUDE Z8A_DEFC;
       41      108        %INCLUDE Z8A_SUPP_MAC ;
       42     2508        %INCLUDE Z8A_COMCOM;
       43     3158        %INCLUDE Z8A_DNT;
       44     3379        %INCLUDE Z8A_ETT ;
       45     3680        %INCLUDE Z8A_TYPES;
       46     3854        %INCLUDE Z8A_ST;
       47     7513        %INCLUDE Z8E_WINDOW;
       48     9583        %INCLUDE Z8E_STACKS;
       49    11849        %INCLUDE Z8E_O1COM;
       50    12610
       51    12611    1   DCL Z8AT$CREATE_TEMPORARY ENTRY(2);
       52    12612        %EJECT;
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:3    
       53    12613    1   DCL LA_INDEX SBIN WORD;
       54    12614    1   DCL LA_SYMBOL SBIN WORD;
       55    12615    1   DCL LA_LINE SBIN WORD;
       56    12616    1   DCL LA_COLUMN SBIN WORD;
       57    12617
       58    12618    1   DCL CONST_ST$ PTR;
       59    12619
       60    12620    1   DCL DUMMY_ALPHA_LIT_DNT$ PTR EXT INIT (ADDR(NIL));
       61    12621    1   DCL DUMMY_DATANAME_DNT$ PTR EXT INIT (ADDR(NIL));
       62    12622    1   DCL DUMMY_SCALAR_ST$ PTR EXT INIT (ADDR(NIL));
       63    12623    1   DCL FIRST_CALL      BIT(1) ALIGNED EXT INIT(TRUE) ;
       64    12624    1   DCL DNT$_FROM_RSWNO (0:0) PTR SYMREF READONLY;
       65    12625        %EJECT ;
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:4    
       66    12626
       67    12627        /*V*
       68    12628            DUMMY_TOKENS -- The first time this procedure is called, all
       69    12629                                   of the dummy tokens that might be needed are
       70    12630                                   created.
       71    12631        */
       72    12632
       73    12633    1          IF FIRST_CALL THEN
       74    12634    2            DO ;
       75    12635
       76    12636        /*V*
       77    12637            DUMMY_ALPHA_LITERAL -- The alpha literal '"X"' is created by
       78    12638                                   reserving a DNT item and assigning the values.
       79    12639        */
       80    12640
       81    12641          %NEW_DNT (@SIZE = 3,
       82    12642                    @NAME = '"X"',
       83    12643                    @ALPHA_LITERAL = YES,
       84    12644                    @ERROR_VARIABLE = YES,
       85    12645                    @POINTER = DUMMY_ALPHA_LIT_DNT$);
       86    12703
       87    12704
       88    12705    2     CALL Z8AT$CREATE_TEMPORARY ( %SCALAR, DUMMY_SCALAR_ST$);
       89    12706    2     DUMMY_SCALAR_ST$ -> SCALAR.TYPE = %TYI;
       90    12707    2     DUMMY_SCALAR_ST$ -> SCALAR.NDSC.N = 4;
       91    12708    2     DUMMY_SCALAR_ST$ -> SCALAR.B.COMPILER_CREATED = TRUE;
       92    12709
       93    12710    2     DUMMY_DATANAME_DNT$ = DUMMY_SCALAR_ST$ -> ST.DNT$;
       94    12711    2     DUMMY_DATANAME_DNT$ -> DNT.B.ERROR_VARIABLE = TRUE;
       95    12712
       96    12713
       97    12714
       98    12715    2            END ;
       99    12716        %EJECT ;
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:5    
      100    12717          %INIT_LX_TERMINAL (@POINTER = "ADDR(O1COM.LA_STK(LA_INDEX))",
      101    12718                             @TYPE = %TYT,
      102    12719                             @BERROR = TRUE,
      103    12720                             @LA_ITEM = TRUE,
      104    12721                             @SYMBOL = LA_SYMBOL,
      105    12722                             @LINE = LA_LINE,
      106    12723                             @COLUMN = LA_COLUMN);
      107    12741
      108    12742        /*V*
      109    12743            ASSIGN_STACK_VALUES -- A case statement is performed on the type of
      110    12744                                   symbol needed.  The LA_STK values are assigned
      111    12745                                   as is needed.  These are used by the parser
      112    12746                                   so it may continue parsing.
      113    12747        */
      114    12748
      115    12749    2          DO CASE(LA_SYMBOL);
      116    12750    2            CASE(%NUMERIC_LITERAL, %NUMBER);
      117    12751    2              O1COM.LA_STK.DNT$(LA_INDEX) = COMCOM.VALUE_1->ETT.LOP->ST.DNT$ ;
      118    12752    2            CASE(%ALPHA_LITERAL, %PICTURE_STRING);
      119    12753    2              O1COM.LA_STK.DNT$(LA_INDEX) = DUMMY_ALPHA_LIT_DNT$;
      120    12754    2            CASE(%PARA_DEF, %PARA_REF, %NAME_OR_PARA) ;
      121    12755    2              O1COM.LA_STK.DNT$(LA_INDEX) = DUMMY_DATANAME_DNT$;
      122    12756    2            CASE(%NAME) ;
      123    12757    2              O1COM.LA_STK.DNT$(LA_INDEX) = DUMMY_DATANAME_DNT$;
      124    12758    2              O1COM.LA_STK.ST$(LA_INDEX) = DUMMY_SCALAR_ST$;
      125    12759    2            CASE(ELSE);
      126    12760    2              O1COM.LA_STK.DNT$(LA_INDEX) = DNT$_FROM_RSWNO(LA_SYMBOL) ;
      127    12761    2          END ;
      128    12762
      129    12763    1          RETURN ;
      130    12764
      131    12765    1   END Z8EE$CREATE_DUMMY_TOKEN;

PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:6    
--  Include file information  --

   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_WINDOW.:Z8A6TOU  is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EE$CREATE_DUMMY_TOKEN.

   Procedure Z8EE$CREATE_DUMMY_TOKEN requires 186 words for executable code.
   Procedure Z8EE$CREATE_DUMMY_TOKEN requires 10 words of local(AUTO) storage.

    No errors detected in file Z8EE.:Z8A6TSI    .

PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:7    

 Object Unit name= Z8EE$CREATE_DUMMY_TOKEN                    File name= Z8EE.:Z8A6TOU
 UTS= AUG 09 '97 11:48:09.68 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  DNT$
    2  LblCom even  none     5      5  DNT_
    3  LblCom even  none     1      1  DNT_BUCKET_NUMBER
    4  LblCom even  none     1      1  DNT_OF_1$
    5  LblCom even  none     1      1  ETT$
    6  LblCom even  none     1      1  HEAD_ETT$
    7  LblCom even  none   512   1000  ETT_BUCKETS
    8  LblCom even  none     5      5  ETT_
    9  LblCom even  none     1      1  ST$
   10  LblCom even  none     5      5  ST_
   11  LblCom even  none    90    132  LEX_SYMBOL
   12  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
   13  LblCom even  none    90    132  TEMP_LEX_SYMBOL
   14  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
   15  LblCom even  none     1      1  DUMMY_ALPHA_LIT_DNT$
   16  LblCom even  none     1      1  DUMMY_DATANAME_DNT$
   17  LblCom even  none     1      1  DUMMY_SCALAR_ST$
   18  LblCom even  none     1      1  FIRST_CALL
   19  RoData even  UTS      1      1  Z8EE$CREATE_DUMMY_TOKEN
   20   Proc  even  none   186    272  Z8EE$CREATE_DUMMY_TOKEN
   21  RoData even  none     7      7  Z8EE$CREATE_DUMMY_TOKEN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    20      0   yes            yes      Std        4  Z8EE$CREATE_DUMMY_TOKEN
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:8    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 Z8AR$RESERVER
         yes           Std       2 Z8AT$CREATE_TEMPORARY
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM                                O1COM                                 HIER_STK_PTR
     HIER_STK                              PAGE_FORMAT                           REP_STK_PTR
     REP_STK                          r    DNT$_FROM_RSWNO

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:9    


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        Z8EE$CREATE_DUMMY_TOKEN :PROC (LA_INDEX, LA_SYMBOL, LA_LINE, LA_COLUMN) ;

      6 20 000000   000000 700200 xent  Z8EE$CREATE* TSX0  ! X66_AUTO_4
        20 000001   000012 000004                    ZERO    10,4

        7        7        /*M* Z8EE$CREATE_DUMMY_TOKEN -- Create error recovery tokens */
        8        8
        9        9        /*P*
       10       10               NAME:  Z8EE$CREATE_DUMMY_TOKEN
       11       11            PURPOSE:  This procedure creates a dummy token when called by the
       12       12                      parser.  The first time it is called, it creates all the
       13       13                      dummy tokens needed and assigns the values each time it
       14       14                      is called.
       15       15        */
       16       16
       17       17        /*D*
       18       18               NAME:  Z8EE$CREATE_DUMMY_TOKEN
       19       19               CALL:  CALL Z8EE$CREATE_DUMMY_TOKEN(LA_INDEX, LA_SYMBOL, LA_LINE,
       20       20                                                   LA_COLUMN) ;
       21       21              INPUT:  LA_INDEX  - The index into the parser stack.
       22       22                      LA_SYMBOL - The type of dummy token to be created.
       23       23                      LA_LINE   - The line number of the dummy token.
       24       24                      LA_COLUMN - The column number of the dummy token.
       25       25             OUTPUT:  LA_STK.DNT$, LA_STK.ST$, etc. are all assigned their
       26       26                      appropriate values.
       27       27            SCRATCH:  DNT$ is the only scratch variable.
       28       28
       29       29        DESCRIPTION:  This procedure performs two separate functions.  The first
       30       30                      time this is called it creates all of the dummy tokens
       31       31                      that the parser might need.  This involves reserving DNT
       32       32                      and ST items for the dummy tokens.  All of the lex stack
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:10   
       33       33                      values (LA_STK.DNT$, etc.) are all assigned a case
       34       34                      statement of the type of symbol needed.
       35       35
       36       36        */
       37       37        %EJECT ;
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:11   
       38       38
       39       39        %SET PHASE = 1;
       40       40        %INCLUDE Z8A_DEFC;
       41      108        %INCLUDE Z8A_SUPP_MAC ;
       42     2508        %INCLUDE Z8A_COMCOM;
       43     3158        %INCLUDE Z8A_DNT;
       44     3379        %INCLUDE Z8A_ETT ;
       45     3680        %INCLUDE Z8A_TYPES;
       46     3854        %INCLUDE Z8A_ST;
       47     7513        %INCLUDE Z8E_WINDOW;
       48     9583        %INCLUDE Z8E_STACKS;
       49    11849        %INCLUDE Z8E_O1COM;
       50    12610
       51    12611    1   DCL Z8AT$CREATE_TEMPORARY ENTRY(2);
       52    12612        %EJECT;
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:12   
       53    12613    1   DCL LA_INDEX SBIN WORD;
       54    12614    1   DCL LA_SYMBOL SBIN WORD;
       55    12615    1   DCL LA_LINE SBIN WORD;
       56    12616    1   DCL LA_COLUMN SBIN WORD;
       57    12617
       58    12618    1   DCL CONST_ST$ PTR;
       59    12619
       60    12620    1   DCL DUMMY_ALPHA_LIT_DNT$ PTR EXT INIT (ADDR(NIL));
       61    12621    1   DCL DUMMY_DATANAME_DNT$ PTR EXT INIT (ADDR(NIL));
       62    12622    1   DCL DUMMY_SCALAR_ST$ PTR EXT INIT (ADDR(NIL));
       63    12623    1   DCL FIRST_CALL      BIT(1) ALIGNED EXT INIT(TRUE) ;
       64    12624    1   DCL DNT$_FROM_RSWNO (0:0) PTR SYMREF READONLY;
       65    12625        %EJECT ;
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:13   
       66    12626
       67    12627        /*V*
       68    12628            DUMMY_TOKENS -- The first time this procedure is called, all
       69    12629                                   of the dummy tokens that might be needed are
       70    12630                                   created.
       71    12631        */
       72    12632
       73    12633    1          IF FIRST_CALL THEN

  12633 20 000002   000000 234000 18                 SZN     FIRST_CALL
        20 000003   000102 605000 20                 TPL     s:12725

       74    12634    2            DO ;

       75    12635
       76    12636        /*V*
       77    12637            DUMMY_ALPHA_LITERAL -- The alpha literal '"X"' is created by
       78    12638                                   reserving a DNT item and assigning the values.
       79    12639        */
       80    12640
       81    12641          %NEW_DNT (@SIZE = 3,
       82    12642                    @NAME = '"X"',
       83    12643                    @ALPHA_LITERAL = YES,
       84    12644                    @ERROR_VARIABLE = YES,
       85    12645                    @POINTER = DUMMY_ALPHA_LIT_DNT$);

  12648 20 000004   000006 235007                    LDA     6,DL
        20 000005   000000 755000 0                  STA     ITERATION

  12649 20 000006   000002 236000 2                  LDQ     DNT_+2
        20 000007   000000 036000 0                  ADLQ    ITERATION
        20 000010   000023 604000 20                 TMI     s:12651
        20 000011   000003 116000 2                  CMPQ    DNT_+3
        20 000012   000023 602000 20                 TNC     s:12651

  12650 20 000013   000001 236000 21                 LDQ     1
        20 000014   200010 756100                    STQ     CONST_ST$+1,,AUTO
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:14   
        20 000015   200010 630500                    EPPR0   CONST_ST$+1,,AUTO
        20 000016   200011 450500                    STP0    CONST_ST$+2,,AUTO
        20 000017   200011 630500                    EPPR0   CONST_ST$+2,,AUTO
        20 000020   000000 631400 21                 EPPR1   0
        20 000021   000000 701000 xent               TSX1    Z8AR$RESERVER
        20 000022   000000 011000                    NOP     0

  12651 20 000023   000002 236000 2                  LDQ     DNT_+2
        20 000024   000022 736000                    QLS     18
        20 000025   000001 036000 2                  ADLQ    DNT_+1
        20 000026   000000 756000 15                 STQ     DUMMY_ALPHA_LIT_DNT$

  12652 20 000027   000002 236000 2                  LDQ     DNT_+2
        20 000030   000000 036000 0                  ADLQ    ITERATION
        20 000031   000002 756000 2                  STQ     DNT_+2

  12653 20 000032   001046 220003                    LDX0    550,DU
        20 000033   000000 470400 15                 LDP0    DUMMY_ALPHA_LIT_DNT$
        20 000034   000000 740100                    STX0    0,,PR0

  12654 20 000035   000000 721000 0                  LXL1    ITERATION
        20 000036   000000 470400 15                 LDP0    DUMMY_ALPHA_LIT_DNT$
        20 000037   000000 441100                    SXL1    0,,PR0

  12655 20 000040   000003 221003                    LDX1    3,DU
        20 000041   000000 470400 15                 LDP0    DUMMY_ALPHA_LIT_DNT$
        20 000042   000004 741100                    STX1    4,,PR0

  12658 20 000043   000002 236000 21                 LDQ     2
        20 000044   000001 756100                    STQ     1,,PR0

  12659 20 000045   000002 236000 21                 LDQ     2
        20 000046   000002 756100                    STQ     2,,PR0

  12660 20 000047   000000 222003                    LDX2    0,DU
        20 000050   000003 742100                    STX2    3,,PR0

PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:15   
  12661 20 000051   000000 223003                    LDX3    0,DU
        20 000052   000003 443100                    SXL3    3,,PR0

  12662 20 000053   040140 100400                    MLR     fill='040'O
        20 000054   000000 000003 19                 ADSC9   0                        cn=0,n=3
        20 000055   000004 400011                    ADSC9   4,,PR0                   cn=2,n=*X1

  12682 20 000056   004000 236003                    LDQ     2048,DU
        20 000057   000003 256100                    ORSQ    3,,PR0

  12697 20 000060   000100 236003                    LDQ     64,DU
        20 000061   000003 256100                    ORSQ    3,,PR0

       86    12703
       87    12704
       88    12705    2     CALL Z8AT$CREATE_TEMPORARY ( %SCALAR, DUMMY_SCALAR_ST$);

  12705 20 000062   000005 630400 21                 EPPR0   5
        20 000063   000003 631400 21                 EPPR1   3
        20 000064   000000 701000 xent               TSX1    Z8AT$CREATE_TEMPORARY
        20 000065   000000 011000                    NOP     0

       89    12706    2     DUMMY_SCALAR_ST$ -> SCALAR.TYPE = %TYI;

  12706 20 000066   000001 220003                    LDX0    1,DU
        20 000067   000000 470400 17                 LDP0    DUMMY_SCALAR_ST$
        20 000070   000002 740100                    STX0    2,,PR0

       90    12707    2     DUMMY_SCALAR_ST$ -> SCALAR.NDSC.N = 4;

  12707 20 000071   000004 236007                    LDQ     4,DL
        20 000072   000001 752101                    STCQ    1,'01'O,PR0

       91    12708    2     DUMMY_SCALAR_ST$ -> SCALAR.B.COMPILER_CREATED = TRUE;

  12708 20 000073   100000 236003                    LDQ     32768,DU
        20 000074   000003 256100                    ORSQ    3,,PR0
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:16   

       92    12709
       93    12710    2     DUMMY_DATANAME_DNT$ = DUMMY_SCALAR_ST$ -> ST.DNT$;

  12710 20 000075   000006 236100                    LDQ     6,,PR0
        20 000076   000000 756000 16                 STQ     DUMMY_DATANAME_DNT$

       94    12711    2     DUMMY_DATANAME_DNT$ -> DNT.B.ERROR_VARIABLE = TRUE;

  12711 20 000077   000000 471400 16                 LDP1    DUMMY_DATANAME_DNT$
        20 000100   000100 236003                    LDQ     64,DU
        20 000101   100003 256100                    ORSQ    3,,PR1

       95    12712
       96    12713
       97    12714
       98    12715    2            END ;

       99    12716        %EJECT ;
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:17   
      100    12717          %INIT_LX_TERMINAL (@POINTER = "ADDR(O1COM.LA_STK(LA_INDEX))",
      101    12718                             @TYPE = %TYT,
      102    12719                             @BERROR = TRUE,
      103    12720                             @LA_ITEM = TRUE,
      104    12721                             @SYMBOL = LA_SYMBOL,
      105    12722                             @LINE = LA_LINE,
      106    12723                             @COLUMN = LA_COLUMN);

  12725 20 000102   200003 470500                    LDP0    @LA_INDEX,,AUTO
        20 000103   000000 235100                    LDA     0,,PR0
        20 000104   000002 735000                    ALS     2
        20 000105   000001 735000                    ALS     1
        20 000106   000000 220003                    LDX0    0,DU
        20 000107   000237 740005 xsym               STX0    O1COM+159,AL

  12726 20 000110   000000 235100                    LDA     0,,PR0
        20 000111   000002 735000                    ALS     2
        20 000112   000001 735000                    ALS     1
        20 000113   000000 221003                    LDX1    0,DU
        20 000114   000237 441005 xsym               SXL1    O1COM+159,AL

  12728 20 000115   000000 235100                    LDA     0,,PR0
        20 000116   000002 735000                    ALS     2
        20 000117   000001 735000                    ALS     1
        20 000120   400000 236007                    LDQ     -131072,DL
        20 000121   000237 256005 xsym               ORSQ    O1COM+159,AL

  12730 20 000122   000000 235100                    LDA     0,,PR0
        20 000123   000002 735000                    ALS     2
        20 000124   000001 735000                    ALS     1
        20 000125   000015 236007                    LDQ     13,DL
        20 000126   000243 756005 xsym               STQ     O1COM+163,AL

  12734 20 000127   000000 235100                    LDA     0,,PR0
        20 000130   000002 735000                    ALS     2
        20 000131   000001 735000                    ALS     1
        20 000132   000002 236000 21                 LDQ     2
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:18   
        20 000133   000240 756005 xsym               STQ     O1COM+160,AL

  12735 20 000134   000000 235100                    LDA     0,,PR0
        20 000135   000002 735000                    ALS     2
        20 000136   000001 735000                    ALS     1
        20 000137   200004 471500                    LDP1    @LA_SYMBOL,,AUTO
        20 000140   000000 622005                    EAX2    0,AL
        20 000141   100000 235100                    LDA     0,,PR1
        20 000142   000242 755012 xsym               STA     O1COM+162,X2

  12736 20 000143   000000 235100                    LDA     0,,PR0
        20 000144   000002 735000                    ALS     2
        20 000145   000001 735000                    ALS     1
        20 000146   000241 756005 xsym               STQ     O1COM+161,AL

  12737 20 000147   000000 235100                    LDA     0,,PR0
        20 000150   000002 735000                    ALS     2
        20 000151   000001 735000                    ALS     1
        20 000152   200005 473500                    LDP3    @LA_LINE,,AUTO
        20 000153   000000 622005                    EAX2    0,AL
        20 000154   300000 235100                    LDA     0,,PR3
        20 000155   000244 755012 xsym               STA     O1COM+164,X2

  12738 20 000156   000000 235100                    LDA     0,,PR0
        20 000157   000002 735000                    ALS     2
        20 000160   000001 735000                    ALS     1
        20 000161   200006 474500                    LDP4    @LA_COLUMN,,AUTO
        20 000162   000000 622005                    EAX2    0,AL
        20 000163   400000 235100                    LDA     0,,PR4
        20 000164   000245 755012 xsym               STA     O1COM+165,X2

      107    12741
      108    12742        /*V*
      109    12743            ASSIGN_STACK_VALUES -- A case statement is performed on the type of
      110    12744                                   symbol needed.  The LA_STK values are assigned
      111    12745                                   as is needed.  These are used by the parser
      112    12746                                   so it may continue parsing.
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:19   
      113    12747        */
      114    12748
      115    12749    2          DO CASE(LA_SYMBOL);

  12749 20 000165   100000 235100                    LDA     0,,PR1
        20 000166   000033 115007                    CMPA    27,DL
        20 000167   000171 602005 20                 TNC     s:12749+4,AL
        20 000170   000263 710000 20                 TRA     s:12760
        20 000171   000263 710000 20                 TRA     s:12760
        20 000172   000263 710000 20                 TRA     s:12760
        20 000173   000263 710000 20                 TRA     s:12760
        20 000174   000234 710000 20                 TRA     s:12753
        20 000175   000263 710000 20                 TRA     s:12760
        20 000176   000242 710000 20                 TRA     s:12755
        20 000177   000263 710000 20                 TRA     s:12760
        20 000200   000263 710000 20                 TRA     s:12760
        20 000201   000263 710000 20                 TRA     s:12760
        20 000202   000263 710000 20                 TRA     s:12760
        20 000203   000263 710000 20                 TRA     s:12760
        20 000204   000263 710000 20                 TRA     s:12760
        20 000205   000263 710000 20                 TRA     s:12760
        20 000206   000263 710000 20                 TRA     s:12760
        20 000207   000263 710000 20                 TRA     s:12760
        20 000210   000263 710000 20                 TRA     s:12760
        20 000211   000263 710000 20                 TRA     s:12760
        20 000212   000263 710000 20                 TRA     s:12760
        20 000213   000263 710000 20                 TRA     s:12760
        20 000214   000263 710000 20                 TRA     s:12760
        20 000215   000263 710000 20                 TRA     s:12760
        20 000216   000224 710000 20                 TRA     s:12751
        20 000217   000224 710000 20                 TRA     s:12751
        20 000220   000250 710000 20                 TRA     s:12757
        20 000221   000242 710000 20                 TRA     s:12755
        20 000222   000242 710000 20                 TRA     s:12755
        20 000223   000234 710000 20                 TRA     s:12753

      116    12750    2            CASE(%NUMERIC_LITERAL, %NUMBER);
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:20   

      117    12751    2              O1COM.LA_STK.DNT$(LA_INDEX) = COMCOM.VALUE_1->ETT.LOP->ST.DNT$ ;

  12751 20 000224   000000 235100                    LDA     0,,PR0
        20 000225   000002 735000                    ALS     2
        20 000226   000001 735000                    ALS     1
        20 000227   000125 475400 xsym               LDP5    COMCOM+85
        20 000230   500001 476500                    LDP6    1,,PR5
        20 000231   600006 236100                    LDQ     6,,PR6
        20 000232   000241 756005 xsym               STQ     O1COM+161,AL
        20 000233   000271 710000 20                 TRA     s:12763

      118    12752    2            CASE(%ALPHA_LITERAL, %PICTURE_STRING);

      119    12753    2              O1COM.LA_STK.DNT$(LA_INDEX) = DUMMY_ALPHA_LIT_DNT$;

  12753 20 000234   000000 235100                    LDA     0,,PR0
        20 000235   000002 735000                    ALS     2
        20 000236   000001 735000                    ALS     1
        20 000237   000000 236000 15                 LDQ     DUMMY_ALPHA_LIT_DNT$
        20 000240   000241 756005 xsym               STQ     O1COM+161,AL
        20 000241   000271 710000 20                 TRA     s:12763

      120    12754    2            CASE(%PARA_DEF, %PARA_REF, %NAME_OR_PARA) ;

      121    12755    2              O1COM.LA_STK.DNT$(LA_INDEX) = DUMMY_DATANAME_DNT$;

  12755 20 000242   000000 235100                    LDA     0,,PR0
        20 000243   000002 735000                    ALS     2
        20 000244   000001 735000                    ALS     1
        20 000245   000000 236000 16                 LDQ     DUMMY_DATANAME_DNT$
        20 000246   000241 756005 xsym               STQ     O1COM+161,AL
        20 000247   000271 710000 20                 TRA     s:12763

      122    12756    2            CASE(%NAME) ;

      123    12757    2              O1COM.LA_STK.DNT$(LA_INDEX) = DUMMY_DATANAME_DNT$;
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:21   

  12757 20 000250   000000 235100                    LDA     0,,PR0
        20 000251   000002 735000                    ALS     2
        20 000252   000001 735000                    ALS     1
        20 000253   000000 236000 16                 LDQ     DUMMY_DATANAME_DNT$
        20 000254   000241 756005 xsym               STQ     O1COM+161,AL

      124    12758    2              O1COM.LA_STK.ST$(LA_INDEX) = DUMMY_SCALAR_ST$;

  12758 20 000255   000000 235100                    LDA     0,,PR0
        20 000256   000002 735000                    ALS     2
        20 000257   000001 735000                    ALS     1
        20 000260   000000 236000 17                 LDQ     DUMMY_SCALAR_ST$
        20 000261   000240 756005 xsym               STQ     O1COM+160,AL
        20 000262   000271 710000 20                 TRA     s:12763

      125    12759    2            CASE(ELSE);

      126    12760    2              O1COM.LA_STK.DNT$(LA_INDEX) = DNT$_FROM_RSWNO(LA_SYMBOL) ;

  12760 20 000263   000000 235100                    LDA     0,,PR0
        20 000264   000002 735000                    ALS     2
        20 000265   000001 735000                    ALS     1
        20 000266   100000 722100                    LXL2    0,,PR1
        20 000267   000000 236012 xsym               LDQ     DNT$_FROM_RSWNO,X2
        20 000270   000241 756005 xsym               STQ     O1COM+161,AL

      127    12761    2          END ;

      128    12762
      129    12763    1          RETURN ;

  12763 20 000271   000000 702200 xent               TSX2  ! X66_ARET
      130    12764
      131    12765    1   END Z8EE$CREATE_DUMMY_TOKEN;

PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:22   
--  Include file information  --

   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_WINDOW.:Z8A6TOU  is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EE$CREATE_DUMMY_TOKEN.
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:23   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 ITERATION

  ****  Section 001 LblCom DNT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DNT$

  ****  Section 002 LblCom DNT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 DNT_

  ****  Section 003 LblCom DNT_BUCKET_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 DNT_BUCKET_NUMBER

  ****  Section 004 LblCom DNT_OF_1$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 DNT_OF_1$

PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:24   
  ****  Section 005 LblCom ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ETT$

  ****  Section 006 LblCom HEAD_ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAD_ETT$

  ****  Section 007 LblCom ETT_BUCKETS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ETT_BUCKETS(0:511)

  ****  Section 008 LblCom ETT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ETT_

  ****  Section 009 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 010 LblCom ST_

PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:25   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 011 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 012 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 013 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 014 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Section 015 LblCom DUMMY_ALPHA_LIT_DNT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:26   

     0-0-0/w PTR         r     1 DUMMY_ALPHA_LIT_DNT$

  ****  Section 016 LblCom DUMMY_DATANAME_DNT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DUMMY_DATANAME_DNT$

  ****  Section 017 LblCom DUMMY_SCALAR_ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DUMMY_SCALAR_ST$

  ****  Section 018 LblCom FIRST_CALL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 FIRST_CALL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @LA_COLUMN                 3-0-0/w PTR         r     1 @LA_INDEX
     5-0-0/w PTR         r     1 @LA_LINE                   4-0-0/w PTR         r     1 @LA_SYMBOL
     7-0-0/w PTR               1 CONST_ST$                 *0-0-0/w SBIN        r     1 LA_COLUMN
    *0-0-0/w SBIN        r     1 LA_INDEX                  *0-0-0/w SBIN        r     1 LA_LINE
    *0-0-0/w SBIN        r     1 LA_SYMBOL

  ****  SYMREF variables  ****

PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:27   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM
     0-0-0/w PTR         r     1 DNT$_FROM_RSWNO(0:0)
     0-0-0/w STRC(180)         1 HIER_STK(0:50)
     0-0-0/w SBIN              1 HIER_STK_PTR               0-0-0/d STRC(11580) r     1 O1COM
     0-0-0/w STRC(144)         1 PAGE_FORMAT                0-0-0/w STRC(153)         1 REP_STK(0:50)
     0-0-0/w SBIN              1 REP_STK_PTR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w STRC(396)         1 ALPHABET
     0-0-0/w STRC(396)         1 ARRAY                      0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BINARY_OP                  0-0-0/w STRC(396)         1 BLOCK
     0-0-0/w STRC(288)         1 CALL_STMT                  0-0-0/w STRC(396)         1 CD
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(396)         1 CLASS
     0-0-0/w STRC(288)         1 COMPUTE_STMT               0-0-0/w STRC(396)         1 CONDITION
     0-0-0/w STRC(396)         1 CONST                      0-0-0/w STRC(72)          1 CONT
     0-0-0/w STRC(396)         1 DB                         0-0-0/w STRC(396)         1 DCB_
     0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER         0-0-0/w STRC(252)         1 DEFERED_ID_TREE
     0-0-0/w STRC(288)         1 DEFERED_QUAL_ID            0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w ASTR(180)   r     1 DNT
     0-0-0/w STRC(180)   r     1 ETT                        0-0-0/w STRC(396)         1 FD
     0-0-0/w STRC(288)         1 ILS_LIST                   0-0-0/w STRC(288)         1 INSPECT_1_STMT
     0-0-0/w STRC(288)         1 INSPECT_2_STMT             0-0-0/w STRC(288)         1 INSPECT_4_STMT
     0-0-0/w STRC(396)         1 INTDEF                     0-0-0/w STRC(396)         1 LABEL
     0-0-0/w STRC(288)         1 LA_ITEM                    0-0-0/w STRC(504)         1 LX_CD_INPUT
     0-0-0/w STRC(324)         1 LX_CD_I_O                  0-0-0/w STRC(396)         1 LX_CD_OUTPUT
     0-0-0/w STRC(288)         1 LX_ETT_ITEM                0-0-0/w STRC(288)         1 LX_ITEM
     0-0-0/w STRC(288)         1 LX_LARGE                   0-0-0/w STRC(288)         1 LX_LIST
PL6.E3A0      #001=Z8EE$CREATE_DUMMY_TOKEN File=Z8EE.:Z8A6TSI                    SAT 08/09/97 11:48 Page:28   
     0-0-0/w STRC(1224)        1 LX_REC_DECL                0-0-0/w STRC(864)         1 LX_REPORT_REC
     0-0-0/w STRC(288)   r     1 LX_TERMINAL                0-0-0/w STRC(396)         1 MNEMONIC
     0-0-0/w STRC(288)         1 MULTIPLY_STMT              0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(396)         1 PARA                       0-0-0/w STRC(396)         1 PROC_
     0-0-0/w STRC(396)         1 PROC_DEF                   0-0-0/w STRC(396)         1 RD
     0-0-0/w STRC(288)         1 READ_STMT                  0-0-0/w STRC(288)         1 REWRITE_STMT
     0-0-0/w STRC(396)   r     1 SCALAR                     0-0-0/w STRC(396)         1 SD
     0-0-0/w STRC(396)         1 SECTION                    0-0-0/w STRC(396)         1 SEGMENT
     0-0-0/w STRC(396)   r     1 ST                         0-0-0/w STRC(288)         1 START_STMT
     0-0-0/w STRC(252)         1 STRING_STMT                0-0-0/w STRC(288)         1 SUBTRACT_STMT
     0-0-0/w STRC(396)         1 SWITCH                     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR
     0-0-0/w STRC(396)         1 SYMDEF_                    0-0-0/w STRC(396)         1 SYMREF_
     0-0-0/w STRC(396)         1 TEMP                       0-0-0/w STRC(288)         1 UNARY_OP
     0-0-0/w STRC(288)         1 UNSTRING_STMT              0-0-0/w STRC(396)         1 VARIABLE
     0-0-0/w STRC(288)         1 WRITE_STMT


   Procedure Z8EE$CREATE_DUMMY_TOKEN requires 186 words for executable code.
   Procedure Z8EE$CREATE_DUMMY_TOKEN requires 10 words of local(AUTO) storage.

    No errors detected in file Z8EE.:Z8A6TSI    .
