      PROGRAM SLIDETABLE
C*T***********************************************************  
C*T*                                                         *  
C*T* Copyright (c) Bull HN Information Systems Inc., 1989    *  
C*T*                                                         *  
C*T***********************************************************  
C*X* JR,IND=3,FMT=1000,STMT=100
      CHARACTER*132 INPUT,INPUTU,COLDAT(20),TEMPSTR
      LOGICAL TBLMODE/.FALSE./,INDMODE/.TRUE./,CNTMODE/.FALSE./
      INTEGER   COLBEG(20),COLEND(20),ISTEP/0/,COLSIZ(20)
      CHARACTER*1 COLSTYLE(20),SCANCHR,TRFCHR
C
C         get a line and see if it's a directive
C
  100 CONTINUE 
      IFLAG=0
      CALL GETAREC(INPUT,IFLAG)
      IF (IFLAG.NE.0) THEN
         CALL STOPIT(ISTEP)
      ENDIF 
      INPUTU=INPUT
      CALL UPPERCASE(INPUTU,132)
      IF (INPUTU(1:2) .EQ. '%*') THEN
         CALL PUTAREC (INPUT,132)
         GOTO 100 
      ENDIF 
      IF (INPUTU(1:7) .EQ. '%NTABLE') THEN
         IF (TBLMODE .AND. INDMODE) THEN
            CALL PUTAREC('%INDENT',7)
         ENDIF 
         TBLMODE=.FALSE.
         GOTO 100 
      ENDIF 
      IF (INPUTU(1:6) .EQ. '%TABLE') THEN
         SCANCHR = INPUT(8:8)
         IF (SCANCHR .EQ. ' ') SCANCHR='\'
         TRFCHR = INPUT(9:9)
         IF (TRFCHR .EQ. ' ') TRFCHR='^'
         DO 110 I=1,20
            COLBEG(I)=0
            COLEND(I)=0
            COLSTYLE(I)=' '
  110    CONTINUE 
         IFLAG=0
         CALL GETAREC(INPUT,IFLAG)
         INPUTU=INPUT
         IF (IFLAG .NE. 0) THEN
            CALL STOPIT(ISTEP)
         ENDIF 
         CALL UPPERCASE(INPUTU,132)
         I=1
  120    CONTINUE 
         IF (INPUTU(I:I).EQ.'S')GOTO 130 
         I=I+1
         IF (I.GE.132)GOTO 140 
         GOTO 120 
C
C              s-found
C
  130    CONTINUE 
         NCOL=1
         COLBEG(NCOL)=I
         GOTO 150 
  140    CONTINUE 
         NCOL=1
         COLBEG(NCOL)=1
         I=0
  150    CONTINUE 
         I=I+1
         IF (I.GE. 132)GOTO 160 
         IF (INPUTU(I:I) .NE. ' ' .AND. INPUTU(I:I) .NE. '-') THEN
            COLEND(NCOL)=I
            COLSTYLE(NCOL)=INPUTU(I:I)
            NCOL=NCOL+1
            COLBEG(NCOL)=I+1
         ENDIF 
         GOTO 150 
  160    CONTINUE 
         NCOL=NCOL-1
         DO 170 I=1,NCOL
            IF (COLSTYLE(I) .NE. 'L' .AND.COLSTYLE(I) .NE. 'R' .AND.
     1            COLSTYLE(I) .NE. 'C') THEN
               WRITE (108,1000) INPUT (1:129)
               ISTEP = 7
               CALL STOPIT(ISTEP)
            ENDIF 
  170    CONTINUE 
         TBLMODE = .TRUE.
         IF (INDMODE) THEN
            CALL PUTAREC('%NINDENT',8)
         ENDIF 
         GOTO 100 
      ENDIF 
C
C
C              if we drop this far, then we're looking for a %
C              character (any % character).  That puts us out of
C              table mode, then we reset global indicators to what
C              they should be....
C
      IF (INPUTU(1:1) .EQ. '%') THEN
         IF (TBLMODE .AND. INDMODE) THEN
            CALL PUTAREC ('%INDENT',7)
         ENDIF 
         TBLMODE=.FALSE.
         IF (INPUTU(1:8).EQ. '%NINDENT') THEN
            INDMODE=.FALSE.
         ENDIF 
         IF (INPUTU(1:7) .EQ. '%INDENT') THEN
            INDMODE=.TRUE.
         ENDIF 
         IF (INPUTU(1:5) .EQ. '%PAGE') THEN
            INDMODE=.TRUE.
         ENDIF 
         IF (INPUTU(1:7) .EQ. '%LAYOUT') THEN
            INDMODE=.TRUE.
         ENDIF 
         CALL PUTAREC(INPUT,132)
         GOTO 100 
      ENDIF 
      IF (.NOT. TBLMODE) THEN
         CALL PUTAREC(INPUT,132)
         GOTO 100 
      ENDIF 
C
C              drop into here to handle column-mode data
C
      IF (INPUT.EQ.' ') THEN
         CALL PUTAREC(INPUT,132)
         GOTO 100 
      ENDIF 
C
C              initialize data areas
C
      DO 180 I=1,20
         COLDAT(I)=' '
         COLSIZ(I)=0
  180 CONTINUE 
      I=1
      ICOL=1
C
C              break down record into parts delimited by SCANCHR
C
  190 CONTINUE 
      IF (I.GE.132)GOTO 200 
      IF (INPUT(I:I) .NE. SCANCHR) THEN
         COLSIZ(ICOL)=COLSIZ(ICOL)+1
         COLDAT(ICOL)(COLSIZ(ICOL):COLSIZ(ICOL))=INPUT(I:I)
         I=I+1
         GOTO 190 
      ENDIF 
      ICOL=ICOL+1
      I=I+1
      IF (ICOL.GE.21)GOTO 200 
      GOTO 190 
C
C              make sure each field has leading and trailing blanks
C              stripped
C
  200 CONTINUE 
      ICOL=ICOL-1
      DO 260 I=1,ICOL
         TEMPSTR=COLDAT(I)
         IF (TEMPSTR.EQ.' ') THEN
            COLSIZ(I)=1
            GOTO 260 
         ENDIF 
         J=1
  210    CONTINUE 
         IF (TEMPSTR(J:J).NE.' ')GOTO 220 
         J=J+1
         IF (J.GE.132)GOTO 270 
         GOTO 210 
  220    CONTINUE 
         K=132
  230    CONTINUE 
         IF (TEMPSTR(K:K).NE.' ')GOTO 240 
         K=K-1
         IF (K.LE.J)GOTO 240 
         GOTO 230 
  240    CONTINUE 
         ISIZE=K-J+1
         COLDAT(I)=' '
         COLSIZ(I)=ISIZE
         DO 250 L=J,K
            COLDAT(I)(L-J+1:L-J+1)=TEMPSTR(L:L)
  250    CONTINUE 
  260 CONTINUE 
  270 CONTINUE 
      DO 350 I=1,ICOL
         IF (COLSIZ(I) .EQ. 0) COLSIZ(I)=1
         INPUT=' '
         IF (COLSTYLE(I).EQ.'L') THEN
            IX=COLBEG(I)
            IY=COLEND(I)
            ISIZE=IY-IX+1
            IF (ISIZE.LT.COLSIZ(I)) THEN
               COLSIZ(I)=ISIZE
            ENDIF 
            IT=1
            DO 280 J=IX,IY
               INPUT(J:J)=COLDAT(I)(IT:IT)
               IT=IT+1
               IF (IT.GT.COLSIZ(I))GOTO 290 
  280       CONTINUE 
  290       CONTINUE 
         ENDIF 
         IF (COLSTYLE(I).EQ.'R') THEN
            IX=COLBEG(I)
            IY=COLEND(I)
            ISIZE=IY-IX+1
            IF (ISIZE.LT.COLSIZ(I)) THEN
               COLSIZ(I)=ISIZE
            ENDIF 
            IF (ISIZE.GT.COLSIZ(I)) THEN
               IX=IX+(ISIZE-COLSIZ(I))
            ENDIF 
            IT=1
            DO 300 J=IX,IY
               INPUT(J:J)=COLDAT(I)(IT:IT)
               IT=IT+1
               IF (IT.GT.COLSIZ(I))GOTO 310 
  300       CONTINUE 
  310       CONTINUE 
         ENDIF 
         IF (COLSTYLE(I).EQ.'C') THEN
            IX=COLBEG(I)
            IY=COLEND(I)
            ISIZE=IY-IX+1
            IF (ISIZE.LT.COLSIZ(I)) THEN
               COLSIZ(I)=ISIZE
            ENDIF 
            IF (ISIZE.GT.COLSIZ(I)) THEN
               IX=IX+((ISIZE-COLSIZ(I))/2)
            ENDIF 
            IT=1
            DO 320 J=IX,IY
               INPUT(J:J)=COLDAT(I)(IT:IT)
               IT=IT+1
               IF (IT.GT.COLSIZ(I))GOTO 330 
  320       CONTINUE 
  330       CONTINUE 
         ENDIF 
         DO 340 LL=1,132
            IF (INPUT(LL:LL).EQ.TRFCHR) INPUT(LL:LL)=' '
  340    CONTINUE 
         CALL PUTAREC(INPUT,132)
         IF (I.LT.ICOL) THEN
            CALL PUTAREC('%BACKUP',7)
         ENDIF 
  350 CONTINUE 
      GOTO 100 
 1000 FORMAT(' *** bad column specifier',/,1X,A)
      END 
      SUBROUTINE GETAREC(IBUF,IFLAG)
      CHARACTER*132 IBUF
      READ (10,1000,END=100) IBUF
      RETURN
  100 CONTINUE 
      IFLAG=1
      RETURN
 1000 FORMAT(A132)
      END 
      SUBROUTINE PUTAREC(IBUF,ISIZE)
      CHARACTER*132 IBUF
      CHARACTER*132 OBUF
      OBUF=' '
      DO 100 I=1,ISIZE
         OBUF(I:I)=IBUF(I:I)
  100 CONTINUE 
      WRITE (20,1000) OBUF
      RETURN
 1000 FORMAT (A132)
      END 
      SUBROUTINE STOPIT(ISTEP)
      CALL EXIT(ISTEP)
      END 
      SUBROUTINE UPPERCASE (STRING,ISIZE)
      CHARACTER*132 STRING
      DO 100 I=1,ISIZE
         IX = ICHAR(STRING(I:I))
         IF (IX.LT.97)GOTO 100 
         IF (IX.GT.122)GOTO 100 
         IX=IX-32
         STRING(I:I)=CHAR(IX)
  100 CONTINUE 
      RETURN
      END 
