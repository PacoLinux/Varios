/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
KEYLST:PROC MAIN;
%INCLUDE CP_6;
%F$DCB;
%INCLUDE B$JIT;
DCL B$JIT$ PTR SYMREF;
DCL M$EI DCB;
DCL M$EO DCB;
DCL M$LO DCB;
DCL CMD STATIC CHAR(120);
DCL 1 CMDK REDEF CMD,
 2 R CHAR(5),
 2 * CHAR(1),
 2 L CHAR(2),
 2 * CHAR(1),
 2 BC(0:36)CHAR(3),
 2 B(0:36)REDEF BC,
  3 C1 CHAR(1),
  3 U REDEF C1,
   4 U1 UBIN(3) UNAL,
   4 U2 UBIN(3) UNAL,
   4 U3 UBIN(3) UNAL,
  3 C2 CHAR(1),
  3 C3 CHAR(1);
DCL 1 CMDD REDEF CMD,
 2 L CHAR(5),
 2 D(0:7)UNAL,
  3 * CHAR(1),
  3 T CHAR(6),
 2 * CHAR(59);
DCL N STATIC SBIN;
DCL 1 NU REDEF N,
 2 * BIT(18),
 2 N0 UBIN(3) UNAL,
 2 N1 UBIN(3) UNAL,
 2 N2 UBIN(3) UNAL,
 2 N3 UBIN(3) UNAL,
 2 N4 UBIN(3) UNAL,
 2 N5 UBIN(3) UNAL;
DCL I UBIN STATIC;
DCL J UBIN STATIC INIT(0);
DCL REC# UBIN STATIC INIT(0);
DCL KEYL UBIN STATIC INIT(0);
DCL WIDTH UBIN STATIC INIT(120);
DCL FLAG BIT(36) STATIC INIT('0'O);
%FPT_OPEN(FPTN=OPNEI,DCB=M$EI,FUN=IN);
%FPT_OPEN(FPTN=OPNEO,DCB=M$EO,FUN=CREATE,ORG=KEYED);
%FPT_READ(FPTN=NXTKEY,DCB=M$EI,KEYR=YES,KEY=BKEY);
%FPT_READ(FPTN=KREAD,DCB=M$EI,KEYS=YES,KEY=BKEY);
%FPT_PRECORD(FPTN=PREC,N=0,DCB=M$EI);
%FPT_GDS(FPTN=GBUF,SEGSIZE=256,RESULTS=KREAD.BUF_);
%FPT_WRITE(FPTN=WRLO,BUF=CMD,DCB=M$LO);
%FPT_WRITE(FPTN=WREO,DCB=M$EO,KEY=BKEY);
%FPT_CLOSE(FPTN=CLSEO,DISP=SAVE,DCB=M$EO);
%FPT_CLOSE(FPTN=CLSLO,DISP=SAVE,DCB=M$LO);
DCL 1 BKEY STATIC,
 2 L UBIN(9) UNAL,
 2 T CHAR(127);
DCL REC(0:0) BASED UBIN(18) UNAL;
%EJECT;
CMD=B$JIT.CCBUF;
DO I=B$JIT.CCDISP TO 119;
DO WHILE(SUBSTR(CMD,I,1)<='9' AND SUBSTR(CMD,I,1)>='0');
   PREC.V.N#=PREC.V.N#*10+ASCBIN(SUBSTR(CMD,I,1))-48;
   I=I+1;
   END;
   IF SUBSTR(CMD,I,1)='O' THEN FLAG=FLAG|'4'O;
   IF SUBSTR(CMD,I,1)='D' THEN FLAG=FLAG|'2'O;
   IF SUBSTR(CMD,I,1)='C' THEN FLAG=FLAG|'1'O;
   IF SUBSTR(CMD,I,1)='S' THEN OPNEI.V.SHARE#=1;
   END;
CALL M$GDS(GBUF);
OPNEI.FPARAM_=KREAD.BUF_;
OPNEO.IFPARAM_=KREAD.BUF_;
WREO.BUF_=KREAD.BUF_;
CALL M$OPEN(OPNEI);
IF DCBADDR(DCBNUM(M$EI))->F$DCB.ORG#~=2 THEN RETURN;
IF FLAG&'1'O THEN CALL M$OPEN(OPNEO);
CMD='KEYLST HERE';
CALL M$WRITE(WRLO);
WIDTH=DCBADDR(DCBNUM(M$LO))->F$DCB.WIDTH#;
IF WIDTH>120 OR WIDTH=0 THEN WIDTH=120;
IF PREC.V.N#~=0 THEN PREC.V.N#=PREC.V.N#-1;
CALL M$PRECORD(PREC);
REC#=PREC.V.N#;
READ1:CALL M$READ(NXTKEY)ALTRET(HERE1);
HERE1:;
IF DCBADDR(DCBNUM(M$EI))->F$DCB.TYC.EOF# THEN GOTO DONE;
REC#=REC#+1;
IF FLAG&'3'O OR BKEY.L~=KEYL OR (KEYL+J)*3+11>=WIDTH THEN DO;
   IF KEYL~=0 THEN CALL M$WRITE(WRLO);
   J=0;
CMD=' ';
CALL BINCHAR(CMDK.L,BKEY.L);
CALL BINCHAR(CMDK.R,REC#);
CALL EDITSTR(CMDK.R,0,4,'104'O,CMDK.R);
KEYL=BKEY.L;
END;
ELSE J=J+1;
DO I=0 TO BKEY.L-1;
   CMDK.BC(J)=SUBSTR(BKEY.T,I,1);
   IF CMDK.BC(J)>=' ' AND
      NOT FLAG&'4'O AND
      CMDK.BC(J)<='~' THEN DO;
      CMDK.B.C2(J)='.';
      CMDK.B.C3(J)='.';
      END;
   ELSE DO;
      CMDK.B.C3(J)=BINASC(48+CMDK.B.U.U3(J));
      CMDK.B.C2(J)=BINASC(48+CMDK.B.U.U2(J));
      CMDK.B.C1(J)=BINASC(48+CMDK.B.U.U1(J));
      END;
   J=J+1;
   END;
IF FLAG&'3'O THEN DO;
   CALL M$WRITE(WRLO);
   KEYL=0;
   CALL M$READ(KREAD)ALTRET(LD1);
LD1: DO WHILE(DCBADDR(DCBNUM(M$EI))->F$DCB.TYC.LD#);
      CALL M$GDS(GBUF);
      CALL M$READ(KREAD)ALTRET(LD2);
LD2: END;
   CMD=' ';
   CALL BINCHAR(CMDD.L,DCBADDR(DCBNUM(M$EI))->F$DCB.ARS#);
   WREO.BUF_=KREAD.BUF_ ;
   IF DCBADDR(DCBNUM(M$EI))->F$DCB.ARS#=0 THEN WREO.BUF_=VECTOR(NIL);
   ELSE WREO.BUF_.BOUND=DCBADDR(DCBNUM(M$EI))->F$DCB.ARS#-1;
   IF FLAG&'1'O THEN CALL M$WRITE(WREO);
   DO I=0 TO MINIMUM(7,DCBADDR(DCBNUM(M$EI))->F$DCB.ARS#/2-1);
      N=KREAD.BUF_.BUF$->REC(I);
      N=100000*NU.N0+
         10000*NU.N1+
         1000*NU.N2+
         100*NU.N3+
         10*NU.N4+NU.N5;
      CALL BINCHAR(CMDD.D.T(I),N);
      END;
   IF FLAG&'2'O THEN CALL M$WRITE(WRLO);
   END;
GOTO READ1;
DONE:;
IF (FLAG&'3'O)='0'O THEN CALL M$WRITE(WRLO);
CALL M$CLOSE(CLSEO);
CALL M$CLOSE(CLSLO);
END;
