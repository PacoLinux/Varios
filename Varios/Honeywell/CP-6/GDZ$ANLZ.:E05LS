VERSION E05

PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:1    
        1        1        /*M* GDZ$ANLZ - Routines for the ANLZ-FPRG.                              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*             */
        8        8        DELTA_FPRG: PROC MAIN;
        9        9        /*P* NAME: GDZ$ANLZ
       10       10             PURPOSE: This set of routines implements the ANLZ-FPRG.  It
       11       11                      allows you to poke around inside a running FEP without
       12       12                      bringing things to a halt, XDELTA-style.
       13       13
       14       14                      This programme stub replaces GDB$FIRST_USER_TRAP in
       15       15                      running the whole show.  Various data modules (like
       16       16                      GD_DATA_D) are also replaced.
       17       17
       18       18                      Various system constants are replaced with our own
       19       19                      versions, or phoneyed up to prevent PREFs.  These
       20       20                      include:
       21       21                        WINDOW1 segment -> USER_DS3
       22       22        */
       23       23        %EJECT;
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:2    
       24       24        /**/
       25       25        /*  INCLUDES  */
       26       26        /**/
       27       27        %INCLUDE LCP_6;
       28      218        %INCLUDE GD_DATA_M;
       29      280        %INCLUDE GD_EQUS_E;
       30      441        %INCLUDE GDA_EQUS_E;
       31      468        %INCLUDE GD$MSG_M;
       32      632        %INCLUDE G_JIT_M;
       33      897        %INCLUDE GM_VIRTUAL_E;
       34     1107        %INCLUDE G$BOBCAT_M;
       35     1127        %INCLUDE G_HJIT_M;
       36     1272        %INCLUDE G_ROS_M;
       37     1354        /**/
       38     1355        /*  EQUATES  */
       39     1356        /**/
       40     1357        %G$JIT_E;                               /* JIT EQUs                           */
       41     1419        /**/
       42     1420        /*  SYMDEFS  */
       43     1421        /**/
       44     1422    1   DCL MONERR BIT(32) STATIC SYMDEF;
       45     1423    1   DCL WAIT_BEFORE_INIT SBIN WORD STATIC SYMDEF INIT(0);
       46     1424    1   DCL WAIT_AFTER_BOMB SBIN WORD STATIC SYMDEF INIT(1);
       47     1425    1   DCL WAITING SBIN WORD STATIC SYMDEF;
       48     1426    1   DCL GD$DELTA_DATA$ PTR STATIC SYMDEF;
       49     1427    1   DCL G$USRT$ PTR STATIC SYMDEF;
       50     1428    1   DCL G$ASDT_USR$ PTR STATIC SYMDEF;
       51     1429        %VLP_SEGMENT (FPTN = WINDOW_SEGMENT,
       52     1430                      BASE = 0,                 /* To be initialized later            */
       53     1431                      PAGES=0,                  /* Map to something thats there       */
       54     1432                      STCLASS = "STATIC SYMDEF");
       55     1453    1   DCL G$ASDT_MCL$ PTR STATIC SYMDEF;
       56     1454        /**/
       57     1455        /*  SYMREFS  */
       58     1456        /**/
       59     1457    1   DCL G$UHJIT$ PTR SYMREF;
       60     1458    1   DCL G$ROS$ PTR SYMREF;
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:3    
       61     1459        /**/
       62     1460        /*  STATIC DATA  */
       63     1461        /**/
       64     1462        %GD$MSG(FPTN=GD$MSG,STCLASS=STATIC);
       65     1618        %GD_DATA(STCLASS="STATIC SYMDEF",FPTN=GD_DATA);
       66     1664    1   DCL SIZE UBIN;
       67     1665        /**/
       68     1666        /*  CONSTANTS  */
       69     1667        /**/
       70     1668    1   DCL M$HANLZ DCB;
       71     1669    1   DCL G$JIT$ PTR SYMREF;
       72     1670    1   DCL G$USRDS3$ PTR SYMREF;
       73     1671    1   DCL G$BOBCAT$ PTR SYMREF;
       74     1672        %FPT_OPEN (FPTN=FPT_OPEN_HANLZ,
       75     1673                   DCB=M$HANLZ,
       76     1674                   ASN=DEVICE,
       77     1675                   ORG=CONSEC,
       78     1676                   RES='HO',
       79     1677                   STCLASS=CONSTANT);
       80     1705        %FPT_CLOSE (FPTN=FPT_CLOSE_HANLZ,
       81     1706                    DCB=M$HANLZ,
       82     1707                    STCLASS=CONSTANT);
       83     1727        %FPT_SPRIV (PRIV=PRIVS, STCLASS=CONSTANT, AUTH=YES, PRC=YES);
       84     1750    1   DCL PRIVS BIT(32) CONSTANT INIT(%(G_PR_SPCLMM#|G_PR_MSYS#));
       85     1751        %FPT_CVM (USERSEG=WINDOW_SEGMENT, FROMSEG=WINDOW_SEGMENT,
       86     1752                  STCLASS=STATIC, TYPE=MON, PAGES=256);
       87     1776        /**/
       88     1777        /*  ENTRY DCLS  */
       89     1778        /**/
       90     1779    1   DCL GDI$DECODE_MSG_WAIT_4_GO ENTRY ALTRET;
       91     1780    1   DCL GDI$SEND_RESPONSE ENTRY(2);
       92     1781        /**/
       93     1782        /*  BASED DATA  */
       94     1783        /**/
       95     1784        %G$JIT(STCLASS="BASED(G$JIT$)");
       96     2198        %G$BOBCAT (FPTN=G$BOBCAT,STCLASS="BASED (G$BOBCAT$)");
       97     2211        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:4    
       98     5185        %G$ROS;
       99     5229        %G$EXCFR;
      100     5611        /**/
      101     5612        /*  PLACEBOS  */
      102     5613        /**/
      103     5614    1   DCL G$SATYR_RCVISA$ BIT(1) CONSTANT SYMDEF;
      104     5615    1   DCL G$SATYR_TRNISA$ BIT(1) CONSTANT SYMDEF;
      105     5616    1   DCL GD_CHN BIT(1) CONSTANT SYMDEF;
      106     5617    1   DCL GD_DBG_INIT BIT(1) CONSTANT SYMDEF;
      107     5618    1   DCL GD_DBG_MONINIT BIT(1) CONSTANT SYMDEF;
      108     5619    1   DCL GD_DWNLODCCP BIT(1) CONSTANT SYMDEF;
      109     5620    1   DCL GD_DWNLODLCT BIT(1) CONSTANT SYMDEF;
      110     5621    1   DCL GD_LINSPD BIT(1) CONSTANT SYMDEF;
      111     5622    1   DCL GH_LEV_INHIBIT BIT(1) CONSTANT SYMDEF;
      112     5623    1   DCL GH_LEV_SUS BIT(1) CONSTANT SYMDEF;
      113     5624    1   DCL G_DIS BIT(1) CONSTANT SYMDEF;
      114     5625        /*
      115     5626          If we are being debugged, we might want to wait before initializing.
      116     5627        */
      117     5628    1           WAITING = WAIT_BEFORE_INIT;
      118     5629    2           DO WHILE(WAITING ~= 0);
      119     5630    2              END;
      120     5631    1           CALL M$SPRIV (FPT_SPRIV);
      121     5632    1           WINDOW_SEGMENT.BASE$ = G$BOBCAT$;
      122     5633    1           CALL M$CVM (FPT_CVM);
      123     5634        /*
      124     5635          Use M$SYS to enter master mode.  This allows the sleazy memory
      125     5636          mapping code that tweaks ASDTs directly to run without modification.
      126     5637          The use of M$SYS requires the FEP priv MSYS.  For the convenience
      127     5638          of ordinary users, FEPANLZ_F should be FEPLINK'ed with this PRIV in
      128     5639          its HEAD record.
      129     5640        */
      130     5641    2           CALL M$SYS WHENALTRETURN DO;
      131     5642    2              CALL MON_ALTRET;
      132     5643    2              END;
      133     5644        /*
      134     5645          Set up special system stuff.
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:5    
      135     5646        */
      136     5647    1           G$USRT$ = G$BOBCAT.USRT$;
      137     5648    1           G$ASDT_MCL$ = ADDR(G$UHJIT.ASDT_MCL);
      138     5649        /*
      139     5650          Open a path to the host half of ANLZ.
      140     5651        */
      141     5652    2           CALL M$OPEN (FPT_OPEN_HANLZ) WHENALTRETURN DO;
      142     5653    2              CALL MON_ALTRET;
      143     5654    2              END;
      144     5655        /*
      145     5656          Init the debuggers data segment.  Since this is in the user domain,
      146     5657          we can make it static data.  Everything else locates it via a
      147     5658          special pointer.
      148     5659                                                                                      */
      149     5660    1           GD$DELTA_DATA$ = ADDR(GD_DATA);
      150     5661    1           GD_DATA='0'B;
      151     5662    1           GD_DATA.GD.HANLZ_DCB = DCBNUM(M$HANLZ);
      152     5663    1           GD_DATA.GD.ASDT_WINDOW$ = ADDR(G$UHJIT.ASDT_USR.USR_DS3);
      153     5664    1           GD_DATA.GD.WINDOW$ = G$USRDS3$;
      154     5665    1           GD_DATA.GD.MUIS = G$BOBCAT.MUIS;
      155     5666    1           GD_DATA.GD.HIMEM = G$BOBCAT.MEM_HI;
      156     5667        /* Make DS3 a "real" CMV segment so that rundown doesn't mess with it */
      157     5668    1           FPT_CVM.V.TYPE = %G_CVM_PHYSICAL#;
      158     5669    1           WINDOW_SEGMENT.BASE$ = G$USRDS3$;
      159     5670    1           CALL M$CVM (FPT_CVM);
      160     5671    1           IF G$JIT.PRIV.AUTH&%G_PR_EXMM#
      161     5672        /* Write only if permitted. */
      162     5673    1           THEN G$UHJIT.ASDT_USR.USR_DS3.WP = %G_R_MON#;
      163     5674        /*
      164     5675          Setup mode to indicate we are in user mode
      165     5676        */
      166     5677    1           GD_DATA.GD.MODE = %GD#MODE_ANLZ;
      167     5678        /*
      168     5679          Phony up a message saying that we are stopped.
      169     5680        */
      170     5681    1           GD$MSG.FNC=%GD#RSPBRK;
      171     5682    1           GD$MSG.BRKRSP.BRK# = 0;         /* Temporary breakpoint               */
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:6    
      172     5683    1           GD$MSG.BRKRSP.TSA$=ADDR(NIL);
      173     5684    1           GD$MSG.BRKRSP.ADR$=ADDR(NIL);   /*N*/
      174     5685    1           GD$MSG.BRKRSP.USER#=G$JIT.USR#;
      175     5686    1           GD$MSG.BRKRSP.ERRCODE='0'B;     /*N*/
      176     5687        /*
      177     5688          Indicate we are stopped and send the break responce to the host
      178     5689                                                                                      */
      179     5690    1           GD_DATA.GD.STOPT=%G_YES#;
      180     5691    1           SIZE=%GD#RSPBRKSIZ;
      181     5692    1           CALL GDI$SEND_RESPONSE(SIZE,GD$MSG);
      182     5693        /*
      183     5694          Set up some stuff detailing the current user (US!), so we start up
      184     5695          mapped onto ourself.
      185     5696        */
      186     5697    1           GD_DATA.GD.USERNO = G$JIT.USR#;
      187     5698    1           GD_DATA.GD.ASDT_PPNO = G$UHJIT.ASDT_USR.UHJIT.BASE;
      188     5699    1           GD_DATA.GD.ASDT_OFFSET = 0;
      189     5700        /*
      190     5701          Stash away the calculated values just in case the guy says USE
      191     5702                                                                                      */
      192     5703    1           GD_DATA.GD.ASDT_USE_PPNO=GD_DATA.GD.ASDT_PPNO;
      193     5704    1           GD_DATA.GD.ASDT_USE_OFFSET=GD_DATA.GD.ASDT_OFFSET;
      194     5705    1           GD_DATA.GD.USE_USERNO=GD_DATA.GD.USERNO;
      195     5706        /*
      196     5707          At this point, we call the routine that handles the completed
      197     5708          messages put together by the standalone async handler.  He will
      198     5709          continue to process commands and not return to us till the user has typed
      199     5710          GO.  We will take this as a signal to quit.
      200     5711        */
      201     5712    1           CALL GDI$DECODE_MSG_WAIT_4_GO;
      202     5713        /*
      203     5714          Close the path to our host counterpart.
      204     5715        */
      205     5716    2           CALL M$CLOSE (FPT_CLOSE_HANLZ) WHENALTRETURN DO;
      206     5717    2              CALL MON_ALTRET;
      207     5718    2              END;
      208     5719        /*
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:7    
      209     5720          That's all, folks.
      210     5721        */
      211     5722    1           CALL M$EXIT;
      212     5723
      213     5724    1           RETURN;
      214     5725        /**/
      215     5726    1   MON_ALTRET: PROC;
      216     5727    2           MONERR = %G$EXCFR#.TRLR.ERR;    /* Full error code                    */
      217     5728    2           WAITING = WAIT_AFTER_BOMB;
      218     5729    3           DO WHILE (WAITING ~= 0);
      219     5730    3              END;
      220     5731    2           RETURN;
      221     5732    2   END MON_ALTRET;
      222     5733        /**/
      223     5734    1   END DELTA_FPRG;

PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:8    
--  Include file information  --

   G_ROS_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DELTA_FPRG.

   Procedure DELTA_FPRG requires 320 words for executable code.
   Procedure DELTA_FPRG requires 12 words of local(AUTO) storage.

    No errors detected in file GDZ$ANLZ.:E05TSI    .

PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:9    

 Object Unit name= DELTA_FPRG                                 File name= GDZ$ANLZ.:E05TOU
 UTS= JUL 29 '97 21:29:45.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none  1281    501  DELTA_FPRG
    1   DCB   even  none     0      0  M$HANLZ
    2  RoData even  UTS     90     5A  DELTA_FPRG
    3   Proc  even  none   320    140  DELTA_FPRG
    4  RoData even  none     3      3  DELTA_FPRG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Main       0  DELTA_FPRG
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:10   

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  MONERR                             0      2  WAIT_BEFORE_INIT
    0      3  WAIT_AFTER_BOMB                    0      4  WAITING
    0      5  GD$DELTA_DATA$                     0      7  G$USRT$
    0      9  G$ASDT_USR$                        0      B  WINDOW_SEGMENT
    0      E  G$ASDT_MCL$                        0     E1  GD_DATA
    2     4B  G$SATYR_RCVISA$                    2     4C  G$SATYR_TRNISA$
    2     4D  GD_CHN                             2     4E  GD_DBG_INIT
    2     4F  GD_DBG_MONINIT                     2     50  GD_DWNLODCCP
    2     51  GD_DWNLODLCT                       2     52  GD_LINSPD
    2     53  GH_LEV_INHIBIT                     2     54  GH_LEV_SUS
    2     55  G_DIS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 GDI$SEND_RESPONSE
 yes     yes           Std       0 GDI$DECODE_MSG_WAIT_4_GO
                       nStd      0 X6A_MAUTO
                       nStd      0 X6C_ALRZ
                       nStd      0 X6A_MARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$UHJIT$                              G$ROS$                                M$HANLZ
     G$JIT$                                G$USRDS3$                             G$BOBCAT$
r    G$ROS$
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:11   


        1        1        /*M* GDZ$ANLZ - Routines for the ANLZ-FPRG.                              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*             */
        8        8        DELTA_FPRG: PROC MAIN;

      8   3 000000  D380 0000 0000  xent DELTA_FPRG      LNJ,B5   X6A_MAUTO
          3 000003       000C 0000                       DC       12,0

        9        9        /*P* NAME: GDZ$ANLZ
       10       10             PURPOSE: This set of routines implements the ANLZ-FPRG.  It
       11       11                      allows you to poke around inside a running FEP without
       12       12                      bringing things to a halt, XDELTA-style.
       13       13
       14       14                      This programme stub replaces GDB$FIRST_USER_TRAP in
       15       15                      running the whole show.  Various data modules (like
       16       16                      GD_DATA_D) are also replaced.
       17       17
       18       18                      Various system constants are replaced with our own
       19       19                      versions, or phoneyed up to prevent PREFs.  These
       20       20                      include:
       21       21                        WINDOW1 segment -> USER_DS3
       22       22        */
       23       23        %EJECT;
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:12   
       24       24        /**/
       25       25        /*  INCLUDES  */
       26       26        /**/
       27       27        %INCLUDE LCP_6;
       28      218        %INCLUDE GD_DATA_M;
       29      280        %INCLUDE GD_EQUS_E;
       30      441        %INCLUDE GDA_EQUS_E;
       31      468        %INCLUDE GD$MSG_M;
       32      632        %INCLUDE G_JIT_M;
       33      897        %INCLUDE GM_VIRTUAL_E;
       34     1107        %INCLUDE G$BOBCAT_M;
       35     1127        %INCLUDE G_HJIT_M;
       36     1272        %INCLUDE G_ROS_M;
       37     1354        /**/
       38     1355        /*  EQUATES  */
       39     1356        /**/
       40     1357        %G$JIT_E;                               /* JIT EQUs                           */
       41     1419        /**/
       42     1420        /*  SYMDEFS  */
       43     1421        /**/
       44     1422    1   DCL MONERR BIT(32) STATIC SYMDEF;
       45     1423    1   DCL WAIT_BEFORE_INIT SBIN WORD STATIC SYMDEF INIT(0);
       46     1424    1   DCL WAIT_AFTER_BOMB SBIN WORD STATIC SYMDEF INIT(1);
       47     1425    1   DCL WAITING SBIN WORD STATIC SYMDEF;
       48     1426    1   DCL GD$DELTA_DATA$ PTR STATIC SYMDEF;
       49     1427    1   DCL G$USRT$ PTR STATIC SYMDEF;
       50     1428    1   DCL G$ASDT_USR$ PTR STATIC SYMDEF;
       51     1429        %VLP_SEGMENT (FPTN = WINDOW_SEGMENT,
       52     1430                      BASE = 0,                 /* To be initialized later            */
       53     1431                      PAGES=0,                  /* Map to something thats there       */
       54     1432                      STCLASS = "STATIC SYMDEF");
       55     1453    1   DCL G$ASDT_MCL$ PTR STATIC SYMDEF;
       56     1454        /**/
       57     1455        /*  SYMREFS  */
       58     1456        /**/
       59     1457    1   DCL G$UHJIT$ PTR SYMREF;
       60     1458    1   DCL G$ROS$ PTR SYMREF;
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:13   
       61     1459        /**/
       62     1460        /*  STATIC DATA  */
       63     1461        /**/
       64     1462        %GD$MSG(FPTN=GD$MSG,STCLASS=STATIC);
       65     1618        %GD_DATA(STCLASS="STATIC SYMDEF",FPTN=GD_DATA);
       66     1664    1   DCL SIZE UBIN;
       67     1665        /**/
       68     1666        /*  CONSTANTS  */
       69     1667        /**/
       70     1668    1   DCL M$HANLZ DCB;
       71     1669    1   DCL G$JIT$ PTR SYMREF;
       72     1670    1   DCL G$USRDS3$ PTR SYMREF;
       73     1671    1   DCL G$BOBCAT$ PTR SYMREF;
       74     1672        %FPT_OPEN (FPTN=FPT_OPEN_HANLZ,
       75     1673                   DCB=M$HANLZ,
       76     1674                   ASN=DEVICE,
       77     1675                   ORG=CONSEC,
       78     1676                   RES='HO',
       79     1677                   STCLASS=CONSTANT);
       80     1705        %FPT_CLOSE (FPTN=FPT_CLOSE_HANLZ,
       81     1706                    DCB=M$HANLZ,
       82     1707                    STCLASS=CONSTANT);
       83     1727        %FPT_SPRIV (PRIV=PRIVS, STCLASS=CONSTANT, AUTH=YES, PRC=YES);
       84     1750    1   DCL PRIVS BIT(32) CONSTANT INIT(%(G_PR_SPCLMM#|G_PR_MSYS#));
       85     1751        %FPT_CVM (USERSEG=WINDOW_SEGMENT, FROMSEG=WINDOW_SEGMENT,
       86     1752                  STCLASS=STATIC, TYPE=MON, PAGES=256);
       87     1776        /**/
       88     1777        /*  ENTRY DCLS  */
       89     1778        /**/
       90     1779    1   DCL GDI$DECODE_MSG_WAIT_4_GO ENTRY ALTRET;
       91     1780    1   DCL GDI$SEND_RESPONSE ENTRY(2);
       92     1781        /**/
       93     1782        /*  BASED DATA  */
       94     1783        /**/
       95     1784        %G$JIT(STCLASS="BASED(G$JIT$)");
       96     2198        %G$BOBCAT (FPTN=G$BOBCAT,STCLASS="BASED (G$BOBCAT$)");
       97     2211        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:14   
       98     5185        %G$ROS;
       99     5229        %G$EXCFR;
      100     5611        /**/
      101     5612        /*  PLACEBOS  */
      102     5613        /**/
      103     5614    1   DCL G$SATYR_RCVISA$ BIT(1) CONSTANT SYMDEF;
      104     5615    1   DCL G$SATYR_TRNISA$ BIT(1) CONSTANT SYMDEF;
      105     5616    1   DCL GD_CHN BIT(1) CONSTANT SYMDEF;
      106     5617    1   DCL GD_DBG_INIT BIT(1) CONSTANT SYMDEF;
      107     5618    1   DCL GD_DBG_MONINIT BIT(1) CONSTANT SYMDEF;
      108     5619    1   DCL GD_DWNLODCCP BIT(1) CONSTANT SYMDEF;
      109     5620    1   DCL GD_DWNLODLCT BIT(1) CONSTANT SYMDEF;
      110     5621    1   DCL GD_LINSPD BIT(1) CONSTANT SYMDEF;
      111     5622    1   DCL GH_LEV_INHIBIT BIT(1) CONSTANT SYMDEF;
      112     5623    1   DCL GH_LEV_SUS BIT(1) CONSTANT SYMDEF;
      113     5624    1   DCL G_DIS BIT(1) CONSTANT SYMDEF;
      114     5625        /*
      115     5626          If we are being debugged, we might want to wait before initializing.
      116     5627        */
      117     5628    1           WAITING = WAIT_BEFORE_INIT;

   5628   3 000005  E800 0000 0002  00                   LDR,R6   WAIT_BEFORE_INIT
          3 000008  EF00 0000 0004  00                   STR,R6   WAITING

      118     5629    2           DO WHILE(WAITING ~= 0);

   5629   3 00000B  6901 0005                            BEZ,R6   s:5631,PREL

      119     5630    2              END;

   5630   3 00000D  E800 0000 0004  00                   LDR,R6   WAITING
          3 000010  69FD                                 BNEZ,R6  s:5630,SPREL

      120     5631    1           CALL M$SPRIV (FPT_SPRIV);

   5631   3 000011  BB80 0000 003F  02                   LAB,B3   FPT_SPRIV
          3 000014  B870 0CD0                            LDR,R3   3280,IMO
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:15   
          3 000016  0001                                 MCL
          3 000017       0000                            DC       s:5631+6,PREL

      121     5632    1           WINDOW_SEGMENT.BASE$ = G$BOBCAT$;

   5632   3 000018  EC80 0000 0000  xsym                 LDB,B6   G$BOBCAT$
          3 00001B  EF80 0000 000B  00                   STB,B6   WINDOW_SEGMENT

      122     5633    1           CALL M$CVM (FPT_CVM);

   5633   3 00001E  BB80 0000 04F5  00                   LAB,B3   FPT_CVM
          3 000021  B870 0D08                            LDR,R3   3336,IMO
          3 000023  0001                                 MCL
          3 000024       0000                            DC       s:5633+6,PREL

      123     5634        /*
      124     5635          Use M$SYS to enter master mode.  This allows the sleazy memory
      125     5636          mapping code that tweaks ASDTs directly to run without modification.
      126     5637          The use of M$SYS requires the FEP priv MSYS.  For the convenience
      127     5638          of ordinary users, FEPANLZ_F should be FEPLINK'ed with this PRIV in
      128     5639          its HEAD record.
      129     5640        */
      130     5641    2           CALL M$SYS WHENALTRETURN DO;

   5641   3 000025  3C43                                 LDV,R3   67
          3 000026  0001                                 MCL
          3 000027       0003                            DC       s:5642,PREL
          3 000028  0F81 0004                            B        s:5647,PREL

      131     5642    2              CALL MON_ALTRET;

   5642   3 00002A  E3C0 00F9                            LNJ,B6   s:0,PREL
          3 00002C       0001                            DC       s:5647,PREL

      132     5643    2              END;

      133     5644        /*
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:16   
      134     5645          Set up special system stuff.
      135     5646        */
      136     5647    1           G$USRT$ = G$BOBCAT.USRT$;

   5647   3 00002D  EC80 0000 0000  xsym                 LDB,B6   G$BOBCAT$
          3 000030  DCC6 0018                            LDB,B5   24,B6
          3 000032  DF80 0000 0007  00                   STB,B5   G$USRT$

      137     5648    1           G$ASDT_MCL$ = ADDR(G$UHJIT.ASDT_MCL);

   5648   3 000035  CC80 0000 0000  xsym                 LDB,B4   G$UHJIT$
          3 000038  BBC4 003E                            LAB,B3   62,B4
          3 00003A  BF80 0000 000E  00                   STB,B3   G$ASDT_MCL$

      138     5649        /*
      139     5650          Open a path to the host half of ANLZ.
      140     5651        */
      141     5652    2           CALL M$OPEN (FPT_OPEN_HANLZ) WHENALTRETURN DO;

   5652   3 00003D  BB80 0000 0000  02                   LAB,B3   FPT_OPEN_HANLZ
          3 000040  B870 3540                            LDR,R3   13632,IMO
          3 000042  0001                                 MCL
          3 000043       0003                            DC       s:5653,PREL
          3 000044  0F81 0004                            B        s:5660,PREL

      142     5653    2              CALL MON_ALTRET;

   5653   3 000046  E3C0 00DD                            LNJ,B6   s:0,PREL
          3 000048       0001                            DC       s:5660,PREL

      143     5654    2              END;

      144     5655        /*
      145     5656          Init the debuggers data segment.  Since this is in the user domain,
      146     5657          we can make it static data.  Everything else locates it via a
      147     5658          special pointer.
      148     5659                                                                                      */
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:17   
      149     5660    1           GD$DELTA_DATA$ = ADDR(GD_DATA);

   5660   3 000049  EB80 0000 00E1  00                   LAB,B6   GD_DATA
          3 00004C  EF80 0000 0005  00                   STB,B6   GD$DELTA_DATA$

      150     5661    1           GD_DATA='0'B;

   5661   3 00004F  AB80 0000 0000  04                   LAB,B2   0
          3 000052  2C00                                 LDV,R2   0
          3 000053  6C01                                 LDV,R6   1
          3 000054  BB80 0000 00E1  00                   LAB,B3   GD_DATA
          3 000057  3C00                                 LDV,R3   0
          3 000058  F870 0828                            LDR,R7   2088,IMO
          3 00005A  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

      151     5662    1           GD_DATA.GD.HANLZ_DCB = DCBNUM(M$HANLZ);

   5662   3 00005D  E800 0000 0002  04                   LDR,R6   +2
          3 000060  EF00 0000 025A  00                   STR,R6   GD_DATA+377

      152     5663    1           GD_DATA.GD.ASDT_WINDOW$ = ADDR(G$UHJIT.ASDT_USR.USR_DS3);

   5663   3 000063  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          3 000066  DBC6 0034                            LAB,B5   52,B6
          3 000068  DF80 0000 025B  00                   STB,B5   GD_DATA+378

      153     5664    1           GD_DATA.GD.WINDOW$ = G$USRDS3$;

   5664   3 00006B  CC80 0000 0000  xsym                 LDB,B4   G$USRDS3$
          3 00006E  CF80 0000 025D  00                   STB,B4   GD_DATA+380

      154     5665    1           GD_DATA.GD.MUIS = G$BOBCAT.MUIS;

   5665   3 000071  BC80 0000 0000  xsym                 LDB,B3   G$BOBCAT$
          3 000074  D843 000A                            LDR,R5   10,B3
          3 000076  DF00 0000 024D  00                   STR,R5   GD_DATA+364

PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:18   
      155     5666    1           GD_DATA.GD.HIMEM = G$BOBCAT.MEM_HI;

   5666   3 000079  C843 0008                            LDR,R4   8,B3
          3 00007B  CF00 0000 024E  00                   STR,R4   GD_DATA+365

      156     5667        /* Make DS3 a "real" CMV segment so that rundown doesn't mess with it */
      157     5668    1           FPT_CVM.V.TYPE = %G_CVM_PHYSICAL#;

   5668   3 00007E  3C02                                 LDV,R3   2
          3 00007F  B780 0000 04FF  00                   STH,R3   FPT_CVM+10

      158     5669    1           WINDOW_SEGMENT.BASE$ = G$USRDS3$;

   5669   3 000082  CF80 0000 000B  00                   STB,B4   WINDOW_SEGMENT

      159     5670    1           CALL M$CVM (FPT_CVM);

   5670   3 000085  BB80 0000 04F5  00                   LAB,B3   FPT_CVM
          3 000088  B870 0D08                            LDR,R3   3336,IMO
          3 00008A  0001                                 MCL
          3 00008B       0000                            DC       s:5670+6,PREL

      160     5671    1           IF G$JIT.PRIV.AUTH&%G_PR_EXMM#

   5671   3 00008C  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          3 00008F  8CC6 0090                            LDI      144,B6
          3 000091  E500 0000 0056  02                   AND,R6   PRIVS+13
          3 000094  F500 0000 0057  02                   AND,R7   PRIVS+14
          3 000097  8D47 0008                            SDI      SIZE+4,AUTO
          3 000099  DB80 0000 0000  04                   LAB,B5   0
          3 00009C  5C01                                 LDV,R5   1
          3 00009D  0022                                 ACM      ;
          3 00009E       4407 0008                                ALPHANUM(SIZE+4,AUTO,,4,FILL),;
          3 0000A0       4005 0000                                ALPHANUM(0,B5,,R5,FILL)
          3 0000A2  5381 0009                            CBE      s:5677,PREL

      161     5672        /* Write only if permitted. */
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:19   
      162     5673    1           THEN G$UHJIT.ASDT_USR.USR_DS3.WP = %G_R_MON#;

   5673   3 0000A4  C870 2000                            LDR,R4   8192,IMO
          3 0000A6  DC80 0000 0000  xsym                 LDB,B5   G$UHJIT$
          3 0000A9  CAC5 0035                            SRM,R4,'3000'X    53,B5
          3 0000AB       3000

      163     5674        /*
      164     5675          Setup mode to indicate we are in user mode
      165     5676        */
      166     5677    1           GD_DATA.GD.MODE = %GD#MODE_ANLZ;

   5677   3 0000AC  4C03                                 LDV,R4   3
          3 0000AD  CF00 0000 0211  00                   STR,R4   GD_DATA+304

      167     5678        /*
      168     5679          Phony up a message saying that we are stopped.
      169     5680        */
      170     5681    1           GD$MSG.FNC=%GD#RSPBRK;

   5681   3 0000B0  3C2D                                 LDV,R3   45
          3 0000B1  B780 0000 0010  00                   STH,R3   GD$MSG

      171     5682    1           GD$MSG.BRKRSP.BRK# = 0;         /* Temporary breakpoint               */

   5682   3 0000B4  8700 0000 0015  00                   CL       GD$MSG+5

      172     5683    1           GD$MSG.BRKRSP.TSA$=ADDR(NIL);

   5683   3 0000B7  DB80 0000 0000                       LAB,B5   0
          3 0000BA  DF80 0000 0013  00                   STB,B5   GD$MSG+3

      173     5684    1           GD$MSG.BRKRSP.ADR$=ADDR(NIL);   /*N*/

   5684   3 0000BD  CB80 0000 0000                       LAB,B4   0
          3 0000C0  CF80 0000 0011  00                   STB,B4   GD$MSG+1

PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:20   
      174     5685    1           GD$MSG.BRKRSP.USER#=G$JIT.USR#;

   5685   3 0000C3  A846 0004                            LDR,R2   4,B6
          3 0000C5  A570 00FF                            AND,R2   255,IMO
          3 0000C7  AF00 0000 0016  00                   STR,R2   GD$MSG+6

      175     5686    1           GD$MSG.BRKRSP.ERRCODE='0'B;     /*N*/

   5686   3 0000CA  8700 0000 0017  00                   CL       GD$MSG+7
          3 0000CD  8700 0000 0018  00                   CL       GD$MSG+8

      176     5687        /*
      177     5688          Indicate we are stopped and send the break responce to the host
      178     5689                                                                                      */
      179     5690    1           GD_DATA.GD.STOPT=%G_YES#;

   5690   3 0000D0  8900 0000 022D  00                   LBT,'0004'X       GD_DATA+332
   5690   3 0000D3       0004

      180     5691    1           SIZE=%GD#RSPBRKSIZ;

   5691   3 0000D4  1C40                                 LDV,R1   64
          3 0000D5  9F47 0004                            STR,R1   SIZE,AUTO

      181     5692    1           CALL GDI$SEND_RESPONSE(SIZE,GD$MSG);

   5692   3 0000D7  BB80 0000 0010  00                   LAB,B3   GD$MSG
          3 0000DA  BFC7 000A                            STB,B3   SIZE+6,AUTO
          3 0000DC  ABC7 0004                            LAB,B2   SIZE,AUTO
          3 0000DE  AFC7 0008                            STB,B2   SIZE+4,AUTO
          3 0000E0  BBC7 0008                            LAB,B3   SIZE+4,AUTO
          3 0000E2  CBF0 0200                            LAB,B4   512,IMO
          3 0000E4  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          3 0000E7       0001                            DC       s:5697,PREL

      182     5693        /*
      183     5694          Set up some stuff detailing the current user (US!), so we start up
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:21   
      184     5695          mapped onto ourself.
      185     5696        */
      186     5697    1           GD_DATA.GD.USERNO = G$JIT.USR#;

   5697   3 0000E8  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          3 0000EB  E846 0004                            LDR,R6   4,B6
          3 0000ED  E570 00FF                            AND,R6   255,IMO
          3 0000EF  EF00 0000 024C  00                   STR,R6   GD_DATA+363

      187     5698    1           GD_DATA.GD.ASDT_PPNO = G$UHJIT.ASDT_USR.UHJIT.BASE;

   5698   3 0000F2  DC80 0000 0000  xsym                 LDB,B5   G$UHJIT$
          3 0000F5  D845 000A                            LDR,R5   10,B5
          3 0000F7  D570 7FFF                            AND,R5   32767,IMO
          3 0000F9  DF00 0000 0228  00                   STR,R5   GD_DATA+327

      188     5699    1           GD_DATA.GD.ASDT_OFFSET = 0;

   5699   3 0000FC  8700 0000 0229  00                   CL       GD_DATA+328

      189     5700        /*
      190     5701          Stash away the calculated values just in case the guy says USE
      191     5702                                                                                      */
      192     5703    1           GD_DATA.GD.ASDT_USE_PPNO=GD_DATA.GD.ASDT_PPNO;

   5703   3 0000FF  DF00 0000 022A  00                   STR,R5   GD_DATA+329

      193     5704    1           GD_DATA.GD.ASDT_USE_OFFSET=GD_DATA.GD.ASDT_OFFSET;

   5704   3 000102  C800 0000 0229  00                   LDR,R4   GD_DATA+328
          3 000105  CF00 0000 022B  00                   STR,R4   GD_DATA+330

      194     5705    1           GD_DATA.GD.USE_USERNO=GD_DATA.GD.USERNO;

   5705   3 000108  EF00 0000 022C  00                   STR,R6   GD_DATA+331

      195     5706        /*
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:22   
      196     5707          At this point, we call the routine that handles the completed
      197     5708          messages put together by the standalone async handler.  He will
      198     5709          continue to process commands and not return to us till the user has typed
      199     5710          GO.  We will take this as a signal to quit.
      200     5711        */
      201     5712    1           CALL GDI$DECODE_MSG_WAIT_4_GO;

   5712   3 00010B  CBF0 0000                            LAB,B4   0,IMO
          3 00010D  E380 0000 0000  xent                 LNJ,B6   GDI$DECODE_MSG_WAIT_4_GO
          3 000110       0001                            DC       s:5716,PREL

      202     5713        /*
      203     5714          Close the path to our host counterpart.
      204     5715        */
      205     5716    2           CALL M$CLOSE (FPT_CLOSE_HANLZ) WHENALTRETURN DO;

   5716   3 000111  BB80 0000 002F  02                   LAB,B3   FPT_CLOSE_HANLZ
          3 000114  B870 1541                            LDR,R3   5441,IMO
          3 000116  0001                                 MCL
          3 000117       0003                            DC       s:5717,PREL
          3 000118  0F81 0004                            B        s:5722,PREL

      206     5717    2              CALL MON_ALTRET;

   5717   3 00011A  E3C0 0009                            LNJ,B6   s:0,PREL
          3 00011C       0001                            DC       s:5722,PREL

      207     5718    2              END;

      208     5719        /*
      209     5720          That's all, folks.
      210     5721        */
      211     5722    1           CALL M$EXIT;

   5722   3 00011D  B870 0080                            LDR,R3   128,IMO
          3 00011F  0001                                 MCL
          3 000120       0000                            DC       s:5722+3,PREL
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:23   

      212     5723
      213     5724    1           RETURN;

   5724   3 000121  C380 0000 0000  xent                 LNJ,B4   X6A_MARET

      214     5725        /**/
      215     5726    1   MON_ALTRET: PROC;

   5726   3 000124  EFC7 0006            MON_ALTRET      STB,B6   SIZE+2,AUTO

      216     5727    2           MONERR = %G$EXCFR#.TRLR.ERR;    /* Full error code                    */

   5727   3 000126  DC80 0000 0000  xsym                 LDB,B5   G$ROS$
          3 000129  CCC5 0004                            LDB,B4   4,B5
          3 00012B  8CC4 002B                            LDI      43,B4
          3 00012D  8D00 0000 0000  00                   SDI      MONERR

      217     5728    2           WAITING = WAIT_AFTER_BOMB;

   5728   3 000130  D800 0000 0003  00                   LDR,R5   WAIT_AFTER_BOMB
          3 000133  DF00 0000 0004  00                   STR,R5   WAITING

      218     5729    3           DO WHILE (WAITING ~= 0);

   5729   3 000136  5901 0005                            BEZ,R5   s:5731,PREL

      219     5730    3              END;

   5730   3 000138  E800 0000 0004  00                   LDR,R6   WAITING
          3 00013B  69FD                                 BNEZ,R6  s:5730,SPREL

      220     5731    2           RETURN;

   5731   3 00013C  ECC7 0006                            LDB,B6   SIZE+2,AUTO
          3 00013E  C3C6 0001                            LNJ,B4   1,B6
      221     5732    2   END MON_ALTRET;
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:24   
      222     5733        /**/
      223     5734    1   END DELTA_FPRG;

PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:25   
--  Include file information  --

   G_ROS_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DELTA_FPRG.
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:26   

 **** Variables and constants ****

  ****  Section 000  Data  DELTA_FPRG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

   4F5-0-0/w STRC(192)   r     1 FPT_CVM                    E-0-0/w PTR         r     1 G$ASDT_MCL$
     7-0-0/w PTR         r     1 G$USRT$                    5-0-0/w PTR         r     1 GD$DELTA_DATA$
    10-0-0/w STRC(3344)  r     1 GD$MSG                    E1-0-0/w STRC(16704) r     1 GD_DATA
     0-0-0/b BIT (32)    r     1 MONERR                     4-0-0/w SBIN(16)    r     1 WAITING
     3-0-0/w SBIN(16)    r     1 WAIT_AFTER_BOMB            2-0-0/w SBIN(16)    r     1 WAIT_BEFORE_INIT
     B-0-0/w STRC(48)    r     1 WINDOW_SEGMENT

  ****  Section 002 RoData DELTA_FPRG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    2F-0-0/w STRC(256)   r     1 FPT_CLOSE_HANLZ            0-0-0/w STRC(752)   r     1 FPT_OPEN_HANLZ
    3F-0-0/w STRC(160)   r     1 FPT_SPRIV                 49-0-0/b BIT (32)    r     1 PRIVS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w UBIN(16)    r     1 SIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$BOBCAT$                  0-0-0/w PTR         r     1 G$JIT$
     0-0-0/w PTR         r     1 G$ROS$                     0-0-0/w PTR         r     1 G$UHJIT$
     0-0-0/w PTR         r     1 G$USRDS3$
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:27   

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1696)  r     1 G$BOBCAT                   0-0-0/w STRC(736)   r     1 G$EXCFR
     0-0-0/w STRC(5616)  r     1 G$JIT                      0-0-0/w STRC(928)   r     1 G$ROS
     0-0-0/w STRC(6480)  r     1 G$UHJIT                    0-0-0N  NULL        r     1 M$HANLZ


   Procedure DELTA_FPRG requires 320 words for executable code.
   Procedure DELTA_FPRG requires 12 words of local(AUTO) storage.

    No errors detected in file GDZ$ANLZ.:E05TSI    .
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:28   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:29   
          MINI XREF LISTING

FPT_CLOSE_HANLZ
      1720**DCL      5716<>CALL
FPT_CLOSE_HANLZ.V
      1725**DCL      1722--DCLINIT
FPT_CVM
      1765**DCL      5633<>CALL     5670<>CALL
FPT_CVM.V
      1769**DCL      1768--DCLINIT
FPT_CVM.V.TYPE
      1773**DCL      5668<<ASSIGN
FPT_OPEN_HANLZ
      1690**DCL      5652<>CALL
FPT_OPEN_HANLZ.V
      1698**DCL      1692--DCLINIT
FPT_SPRIV
      1740**DCL      5631<>CALL
FPT_SPRIV.V
      1742**DCL      1742--DCLINIT
G$ASDT_MCL$
      1453**DCL      5648<<ASSIGN
G$BOBCAT.MEM_HI
      2199**DCL      5666>>ASSIGN
G$BOBCAT.MUIS
      2200**DCL      5665>>ASSIGN
G$BOBCAT.USRT$
      2202**DCL      5647>>ASSIGN
G$BOBCAT$
      1671**DCL      2199--IMP-PTR  5632>>ASSIGN   5647>>ASSIGN   5665>>ASSIGN   5666>>ASSIGN
G$EXCFR.P$$
      5298**DCL      5298--REDEF    5298--REDEF
G$EXCFR.PREVSZ
      5248**DCL      5248--REDEF
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:30   
G$EXCFR.TRLR.ERR
      5578**DCL      5727>>ASSIGN
G$EXCFR.TRLR.EVID
      5535**DCL      5553--REDEF    5561--REDEF    5561--REDEF
G$EXCFR.TRLR.SUBC
      5512**DCL      5512--REDEF    5530--REDEF    5534--REDEF    5534--REDEF
G$JIT.ERRLOG
      2128**DCL      2131--REDEF
G$JIT.JSUNIT
      1867**DCL      1868--REDEF
G$JIT.MCLS
      1866**DCL      1866--REDEF
G$JIT.PRIV.AUTH
      2031**DCL      5671>>IF
G$JIT.TMRZ
      2135**DCL      2136--REDEF
G$JIT.USER_EXTIME
      1859**DCL      1860--REDEF
G$JIT.USER_MEMTIME
      1862**DCL      1862--REDEF
G$JIT.USER_SVTIME
      1861**DCL      1861--REDEF
G$JIT.USR#
      1856**DCL      5685>>ASSIGN   5697>>ASSIGN
G$JIT$
      1669**DCL      1798--IMP-PTR  5671>>IF       5685>>ASSIGN   5697>>ASSIGN
G$ROS.AUTO_DS$
      5208**DCL      5209--REDEF
G$ROS.AUTO_T$
      5209**DCL      5209--REDEF
G$ROS.TCB.ALT$
      5204**DCL      5727>>ASSIGN
G$ROS$
      1458**DCL      5727>>ASSIGN
G$UHJIT.ASDT_MCL
      2935**DCL      5648--ASSIGN
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:31   
G$UHJIT.ASDT_USR.UHJIT.BASE
      2372**DCL      5698>>ASSIGN
G$UHJIT.ASDT_USR.USR_DS3
      2832**DCL      5663--ASSIGN
G$UHJIT.ASDT_USR.USR_DS3.WP
      2835**DCL      5673<<ASSIGN
G$UHJIT.ISA_USR
      3651**DCL      3946--REDEF
G$UHJIT.ISA_USR.P$$
      3726**DCL      3726--REDEF
G$UHJIT.TSA_CP.ISA.P$$
      4933**DCL      4933--REDEF
G$UHJIT.TSA_CP.P$$
      4804**DCL      4804--REDEF    4805--REDEF
G$UHJIT.TSA_DB.ISA.P$$
      4545**DCL      4545--REDEF
G$UHJIT.TSA_DB.P$$
      4416**DCL      4416--REDEF    4417--REDEF
G$UHJIT.TSA_RTT.P$$
      5179**DCL      5179--REDEF    5180--REDEF
G$UHJIT.TSA_USR.ISA.P$$
      4135**DCL      4135--REDEF
G$UHJIT.TSA_USR.P$$
      4006**DCL      4006--REDEF    4007--REDEF
G$UHJIT$
      1457**DCL      2228--IMP-PTR  5648>>ASSIGN   5663>>ASSIGN   5673>>ASSIGN   5698>>ASSIGN
G$USRDS3$
      1670**DCL      5664>>ASSIGN   5669>>ASSIGN
G$USRT$
      1427**DCL      5647<<ASSIGN
GD$DELTA_DATA$
      1426**DCL      5660<<ASSIGN
GD$MSG
      1479**DCL      5692<>CALL
GD$MSG.BRKRQS.IF$CONST.SIZE
      1530**DCL      1530--REDEF
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:32   
GD$MSG.BRKRQS.IF$CONST.TEXT
      1530**DCL      1531--REDEF    1531--REDEF    1532--REDEF    1533--REDEF
GD$MSG.BRKRSP.ADR$
      1543**DCL      5684<<ASSIGN
GD$MSG.BRKRSP.BRK#
      1544**DCL      1544--REDEF    5682<<ASSIGN
GD$MSG.BRKRSP.ERRCODE
      1545**DCL      5686<<ASSIGN
GD$MSG.BRKRSP.TSA$
      1543**DCL      5683<<ASSIGN
GD$MSG.BRKRSP.USER#
      1544**DCL      1544--REDEF    5685<<ASSIGN
GD$MSG.FNC
      1479**DCL      5681<<ASSIGN
GD$MSG.LETMEM_D.VALUE.SIZE
      1502**DCL      1502--REDEF
GD$MSG.LETMEM_D.VALUE.TEXT
      1503**DCL      1503--REDEF    1503--REDEF    1504--REDEF    1505--REDEF
GD$MSG.MESSAGE
      1484**DCL      1484--REDEF    1485--REDEF    1485--REDEF    1486--REDEF    1497--REDEF    1510--REDEF
      1515--REDEF    1522--REDEF    1538--REDEF    1543--REDEF    1549--REDEF    1550--REDEF    1579--REDEF
      1581--REDEF    1592--REDEF    1599--REDEF    1611--REDEF
GD$MSG.SUBFNC
      1479**DCL      1479--REDEF    1483--REDEF
GD$MSG.TSA.I
      1551**DCL      1551--REDEF
GD$MSG.TSA.S
      1553**DCL      1553--REDEF
GD$MSG.USERQS.ASDT$
      1579**DCL      1579--REDEF    1580--REDEF
GDI$DECODE_MSG_WAIT_4_GO
      1779**DCL-ENT  5712--CALL
GDI$SEND_RESPONSE
      1780**DCL-ENT  5692--CALL
GD_DATA
      1631**DCL      5660--ASSIGN   5661<<ASSIGN
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:33   
GD_DATA.GD.ASDT_OFFSET
      1637**DCL      5699<<ASSIGN   5704>>ASSIGN
GD_DATA.GD.ASDT_PPNO
      1636**DCL      5698<<ASSIGN   5703>>ASSIGN
GD_DATA.GD.ASDT_USE_OFFSET
      1637**DCL      5704<<ASSIGN
GD_DATA.GD.ASDT_USE_PPNO
      1637**DCL      5703<<ASSIGN
GD_DATA.GD.ASDT_WINDOW$
      1653**DCL      5663<<ASSIGN
GD_DATA.GD.DYNSP$
      1644**DCL      1644--REDEF
GD_DATA.GD.HANLZ_DCB
      1652**DCL      5662<<ASSIGN
GD_DATA.GD.HIMEM
      1651**DCL      5666<<ASSIGN
GD_DATA.GD.MODE
      1634**DCL      5677<<ASSIGN
GD_DATA.GD.MUIS
      1651**DCL      5665<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.ADR$
      1645**DCL      1646--REDEF
GD_DATA.GD.STEP_BRKPNT.START$
      1646**DCL      1646--REDEF
GD_DATA.GD.STOPT
      1641**DCL      5690<<ASSIGN
GD_DATA.GD.USERNO
      1651**DCL      5697<<ASSIGN   5705>>ASSIGN
GD_DATA.GD.USE_USERNO
      1637**DCL      5705<<ASSIGN
GD_DATA.GD.WINDOW$
      1653**DCL      5664<<ASSIGN
M$CLOSE
       199**DCL-ENT  5716--CALL
M$CVM
       196**DCL-ENT  5633--CALL     5670--CALL
PL6.E3A0      #001=DELTA_FPRG File=GDZ$ANLZ.:E05TSI                              TUE 07/29/97 21:29 Page:34   
M$EXIT
       177**DCL-ENT  5722--CALL
M$HANLZ
      1668**DCL      5662>>ASSIGN
M$OPEN
       199**DCL-ENT  5652--CALL
M$SPRIV
       188**DCL-ENT  5631--CALL
M$SYS
       174**DCL-ENT  5641--CALL
MONERR
      1422**DCL      5727<<ASSIGN
MON_ALTRET
      5726**PROC     5642--CALL     5653--CALL     5717--CALL
PRIVS
      1750**DCL      1742--DCLINIT
SIZE
      1664**DCL      5691<<ASSIGN   5692<>CALL
WAITING
      1425**DCL      5628<<ASSIGN   5629>>DOWHILE  5728<<ASSIGN   5729>>DOWHILE
WAIT_AFTER_BOMB
      1424**DCL      5728>>ASSIGN
WAIT_BEFORE_INIT
      1423**DCL      5628>>ASSIGN
WINDOW_SEGMENT
      1446**DCL      1768--DCLINIT  1768--DCLINIT
WINDOW_SEGMENT.BASE
      1450**DCL      1450--REDEF
WINDOW_SEGMENT.BASE$
      1450**DCL      5632<<ASSIGN   5669<<ASSIGN
