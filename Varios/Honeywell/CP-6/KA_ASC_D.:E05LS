

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           1    
    1      /*M* ASCII Async translate tables - including APL ones. */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* NSO,DFC */
    8      KA_ASC_D: PROC;
    9      %INCLUDE KV$INT;
   10      %INCLUDE KV$GLB;
   11      %INCLUDE KV_APLCHR_E;
   12      %INCLUDE KV_ASCCHR_E;
   13      %INCLUDE KV_GLBCNS_E;
   14      %KV_INPOPRX_E;
   15      %INCLUDE KA_GLB_E;
   16      %KA_INPFNC_E;
   17      %INCLUDE KA_GLBASM_E;
   18      %EQU KA_INPCTRSTRCHR_INT=BINBIT(KA#INPCTRSTRCHR_INT,8);
   19      %EQU KA_OTPCTRSTRCHR_BGN=BINBIT(KA#OTPCTRSTRCHR_BGN,8);
   20      %EQU KA_OTPCTRSTRCHR_2=BINBIT(KA#OTPCTRSTRCHR_BGN,8);
   21      %INCLUDE KV_TRNTBL_M;
   22      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           2    
   23      /* Start with the output tables. */
   24
   25      /* Beginning with ASC95. */
   26
   27      /* Start the table translating everything to '#'        */
   28
   29      %KV_PRMOTPTRN(NAME=KA_TRNOTPASC95_1,DFLTRNCHR='#',
   30
   31      /* But making the printing characters themselves   */
   32
   33                    FRSCHR=' ',LSTCHR='}');
   34
   35      /* Except | and ~, which sometimes translate differently */
   36      /* And DEL, which doesn't position */
   37
   38      %KV_PRMOTPTRN(FRSCHR='~',LSTCHR='7F'X,TRNCHR=KA_OTPCTRSTRCHR_BGN);
   39
   40      %KV_PRMOTPTRN(FRSCHR='|',TRNCHR=KA_OTPCTRSTRCHR_BGN);
   41
   42      /* All the control characters either don't position,    */
   43      /* or perform special functions */
   44
   45      %KV_PRMOTPTRN(FRSCHR='00'X,LSTCHR='1F'X,TRNCHR=KA_OTPCTRSTRCHR_BGN,LAST=YES);
   46      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           3    
   47      /* Now the ASC64 output table. */
   48
   49      /* This one we'll do differently, just for variety,   */
   50      /* by defaulting to the output-escape-character */
   51
   52      %KV_PRMOTPTRN(NAME=KA_TRNOTPASC64_1,DFLTRNCHR=KA_OTPCTRSTRCHR_BGN,
   53
   54      /* And making only the uppercase one-to-one */
   55
   56                    FRSCHR=' ',LSTCHR='_');
   57
   58      /* The lowercase columns translate to uppercase */
   59
   60      %KV_PRMOTPTRN(FRSCHR='`',LSTCHR='~',
   61                 TRNCHR='@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^');
   62
   63      /* The rest is the same as ASC95 */
   64
   65      %KV_PRMOTPTRN(FRSCHR='80'X,LSTCHR='FF'X,TRNCHR='#',LAST=YES);
   66      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           4    
   67      /* Now the ASC8 output table. */
   68
   69      %KV_PRMOTPTRN(NAME=KA_TRNOTPASC8_1,DFLTRNCHR=KA_OTPCTRSTRCHR_BGN,
   70
   71      /* First make the ASC95 graphics one_to_one */
   72
   73                    FRSCHR=' ',LSTCHR='~');
   74
   75      /* Then the entire extension set */
   76
   77      %KV_PRMOTPTRN(FRSCHR='80'X,LSTCHR='FF'X, LAST=YES);
   78      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           5    
   79      /* Now the secondary output tables. */
   80      /* The secondary table has all the control functions, */
   81      /* and the non-positioning characters */
   82
   83      /* We'll leave | and ~ to the next table, so we can use the same */
   84      /* secondary table for all the variations */
   85
   86      %KV_SCNOTPTRN(NAME=KA_TRNOTPASC95_2);
   87      %KV_SCNOTPTRN(INPCHR='|~',TYPE=OTPFNC_NXTTBL);
   88      %KV_SCNOTPTRN(INPCHR='|~',TYPE=OTPFNC_NXTTBL);
   89      %KV_SCNOTPTRN(INPCHR='FE'X,TYPE=OTPFNC_NXTTBL);
   90
   91      /* Now all the positioning control characters. */
   92
   93      %KV_SCNOTPTRN(INPCHR='08'X,TYPE=OTPFNC_BS);
   94      %KV_SCNOTPTRN(INPCHR='09'X,TYPE=OTPFNC_HT);
   95      %KV_SCNOTPTRN(INPCHR='0A'X,TYPE=OTPFNC_LF);
   96      %KV_SCNOTPTRN(INPCHR='0D'X,TYPE=OTPFNC_CR);
   97
   98      /* Then the non-positioning ones. */
   99
  100      %KV_SCNOTPTRN(INPCHR='00010203040506070B'X,TYPE=NRMNO_PST);
  101      %KV_SCNOTPTRN(INPCHR='0C0E0F101112131415'X,TYPE=NRMNO_PST);
  102      %KV_SCNOTPTRN(INPCHR='161718191A1B1C1D1E'X,TYPE=NRMNO_PST);
  103      %KV_SCNOTPTRN(INPCHR='1F7F'X,TYPE=NRMNO_PST,LAST=YES);
  104      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           6    
  105      /* Finally the tertiary tables - for the secondary's NXTTBLs. */
  106
  107      /* First the "normal" one - unchanged "not" and "v-bar". */
  108
  109      %KV_SCNOTPTRN(NAME=KA_TRNOTPASC95_3);
  110      %KV_SCNOTPTRN(INPCHR='~|',LAST=YES);
  111
  112      /* Then for ASC64C - "not" and "v-bar" to ][. */
  113
  114      %KV_SCNOTPTRN(NAME=KA_TRNOTPASC64C_3);
  115      %KV_SCNOTPTRN(INPCHR='~|',TRNCHR='][',LAST=YES);
  116
  117      /* Finally, for ASC8, translate the FE char into itself */
  118
  119      %KV_SCNOTPTRN(NAME=KA_TRNOTPASC8_3);
  120      %KV_SCNOTPTRN(INPCHR='~|');
  121      %KV_SCNOTPTRN(INPCHR='FE'X,LAST=YES);
  122      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           7    
  123      /* Now for some input tables. */
  124
  125      /* The primary table is common and needs to be "full length". */
  126
  127      %KV_PRMINPTRN (NAME=KA_TRNINPASC95_1, FRSCHR='FF'X, TRNCHR='FF'X);
  128
  129      /* First let's flag the SPCESC chars. */
  130
  131      %KV_PRMINPTRN (FRSCHR="ASCIIACK,ASCIIACK|'80'X", SPCESC=YES);
  132      %KV_PRMINPTRN (FRSCHR="ASCIICR,ASCIICR|'80'X", SPCESC=YES);
  133      %KV_PRMINPTRN (FRSCHR="ASCIIDEL,ASCIIDEL|'80'X", SPCESC=YES);
  134      %KV_PRMINPTRN (FRSCHR="ASCIINUL,ASCIINUL|'80'X", SPCESC=YES);
  135      %KV_PRMINPTRN (FRSCHR=KA_INPCTRSTRCHR_INT, SPCESC=YES);
  136
  137      /* Now the direct input_function_table translations. */
  138
  139      %KV_PRMINPTRN (FRSCHR=ASCIIBS, INPFNC=KA#SPCCHR_BS);
  140      %KV_PRMINPTRN (FRSCHR=ASCIIHT, INPFNC=KA#SPCCHR_HT);
  141      %KV_PRMINPTRN (FRSCHR=ASCIILF, INPFNC=KA#SPCCHR_LF);
  142      %KV_PRMINPTRN (FRSCHR=ASCIIFF, INPFNC=KA#SPCCHR_FF);
  143      %KV_PRMINPTRN (FRSCHR=ASCIICR, INPFNC=KA#SPCCHR_CR, SPCESC=YES);
  144      %KV_PRMINPTRN (FRSCHR=ASCIIDC2, INPFNC=KA#SPCCHR_DC2);
  145      %KV_PRMINPTRN (FRSCHR=ASCIICAN, INPFNC=KA#SPCCHR_CAN);
  146      %KV_PRMINPTRN (FRSCHR=ASCIIEM, INPFNC=KA#SPCCHR_EM);
  147      %KV_PRMINPTRN (FRSCHR=ASCIIESC, INPFNC=KA#SPCCHR_ESC);
  148      %KV_PRMINPTRN (FRSCHR=ASCIIDEL, INPFNC=KA#SPCCHR_DEL, SPCESC=YES);
  149
  150      /* Finally, those characters for which the interpretation varies. */
  151
  152      %EQU KA#INP2_LFTBRK=NXTTBLX;
  153      %KV_PRMINPTRN (FRSCHR='[]', NXTTBL=YES);
  154      %EQU KA#INP2_GRVACT=NXTTBLX;
  155      %KV_PRMINPTRN (FRSCHR='`~', NXTTBL=YES, INCR=2, LAST=YES);
  156      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           8    
  157      /* The secondary input tables. */
  158
  159      /* First the one-to-one table. */
  160
  161      %KV_SCNINPTRN (NAME=KA_TRNINPASC95_2, TRNCHR='[]``~~', LAST=YES);
  162
  163      /* Then the CDI1203 variant, making GVRACT into ESC. */
  164
  165      %KV_SCNINPTRN (NAME=KA_TRNINPASC95M_2, TRNCHR='[]');
  166      %KV_SCNINPTRN (TEST=KA#INP2_GRVACT, TRNCHR=ASCIIESC, INPFNCTRN=KA#SPCCHR_ESC);
  167      %KV_SCNINPTRN (TRNCHR='~~', LAST=YES);
  168
  169      /* Next the TTY35 variant, making tilde into ESC. */
  170
  171      %KV_SCNINPTRN (NAME=KA_TRNINPASC64B_2, TRNCHR='[]``');
  172      %KV_SCNINPTRN (TEST=KA#INP2_GRVACT+2, TRNCHR=ASCIIESC, INPFNCTRN=KA#SPCCHR_ESC, LAST=YES);
  173
  174      /* And finally, the same, but switch [] with |~. */
  175
  176      %KV_SCNINPTRN (NAME=KA_TRNINPASC64C_2, TRNCHR='|~``');
  177      %KV_SCNINPTRN (TEST=KA#INP2_GRVACT+2, TRNCHR=ASCIIESC, INPFNCTRN=KA#SPCCHR_ESC, LAST=YES);
  178      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           9    
  179      /**/
  180      /* Now lets put some actual tables together */
  181      /**/
  182      %KV$TRNTBL(NAME=KA_ASC95,STCLASS=CONSTANT SYMDEF,
  183                 INPTRN1=KA_TRNINPASC95_1,
  184                 INPTRN2=KA_TRNINPASC95_2,
  185                 OTPTRN1=KA_TRNOTPASC95_1,
  186                 OTPTRN2=KA_TRNOTPASC95_2,
  187                 OTPTRN3=KA_TRNOTPASC95_3,
  188                 EXTINPTRN=NIL,
  189                 EXTOTPTRN=NIL,
  190                 SPCESC=KA_TRNINPASC95_1.SPCESC,
  191                 INPTKN=KA_TRNINPASC95_1.TKNTBL,
  192                 LNK=KA_ASC64,
  193                 INPCHRMSK='007F'X,
  194                 OTPESCCHR="%BITBIN(KA_OTPCTRSTRCHR_BGN)",
  195                 OTPESCCHR1="%BITASC(KA_OTPCTRSTRCHR_BGN)",
  196                 OTPESCCHR2="%BITASC(KA_OTPCTRSTRCHR_2)",
  197                 NAM='ASC95',
  198                 FNTCLS=ASC,
  199                 SP_CHR=' ',
  200                 HT_CHR="%BITASC(ASCIIHT)",
  201                 INPCTRSTRINTCHR="%BITASC(KA_INPCTRSTRCHR_INT)");
  202      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           10   
  203      %KV$TRNTBL(NAME=KA_ASC64,STCLASS=CONSTANT SYMDEF,
  204                 INPTRN1=KA_TRNINPASC95_1,
  205                 INPTRN2=KA_TRNINPASC95_2,
  206                 OTPTRN1=KA_TRNOTPASC64_1,
  207                 OTPTRN2=KA_TRNOTPASC95_2,
  208                 OTPTRN3=KA_TRNOTPASC95_3,
  209                 EXTINPTRN=NIL,
  210                 EXTOTPTRN=NIL,
  211                 SPCESC=KA_TRNINPASC95_1.SPCESC,
  212                 INPTKN=KA_TRNINPASC95_1.TKNTBL,
  213                 LNK=KA_ASC95M,
  214                 INPCHRMSK='007F'X,
  215                 OTPESCCHR="%BITBIN(KA_OTPCTRSTRCHR_BGN)",
  216                 OTPESCCHR1="%BITASC(KA_OTPCTRSTRCHR_BGN)",
  217                 OTPESCCHR2="%BITASC(KA_OTPCTRSTRCHR_2)",
  218                 NAM='ASC64',
  219                 FNTCLS=ASC,
  220                 SP_CHR=' ',
  221                 HT_CHR="%BITASC(ASCIIHT)",
  222                 INPCTRSTRINTCHR="%BITASC(KA_INPCTRSTRCHR_INT)");
  223      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           11   
  224      %KV$TRNTBL(NAME=KA_ASC95M,STCLASS=CONSTANT SYMDEF,
  225                 INPTRN1=KA_TRNINPASC95_1,
  226                 INPTRN2=KA_TRNINPASC95M_2,
  227                 OTPTRN1=KA_TRNOTPASC95_1,
  228                 OTPTRN2=KA_TRNOTPASC95_2,
  229                 OTPTRN3=KA_TRNOTPASC95_3,
  230                 EXTINPTRN=NIL,
  231                 EXTOTPTRN=NIL,
  232                 SPCESC=KA_TRNINPASC95_1.SPCESC,
  233                 INPTKN=KA_TRNINPASC95_1.TKNTBL,
  234                 LNK=KA_ASC64B,
  235                 INPCHRMSK='007F'X,
  236                 OTPESCCHR="%BITBIN(KA_OTPCTRSTRCHR_BGN)",
  237                 OTPESCCHR1="%BITASC(KA_OTPCTRSTRCHR_BGN)",
  238                 OTPESCCHR2="%BITASC(KA_OTPCTRSTRCHR_2)",
  239                 NAM='ASC95M',
  240                 FNTCLS=ASC,
  241                 SP_CHR=' ',
  242                 HT_CHR="%BITASC(ASCIIHT)",
  243                 INPCTRSTRINTCHR="%BITASC(KA_INPCTRSTRCHR_INT)");
  244      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           12   
  245      %KV$TRNTBL(NAME=KA_ASC64B,STCLASS=CONSTANT SYMDEF,
  246                 INPTRN1=KA_TRNINPASC95_1,
  247                 INPTRN2=KA_TRNINPASC64B_2,
  248                 OTPTRN1=KA_TRNOTPASC64_1,
  249                 OTPTRN2=KA_TRNOTPASC95_2,
  250                 OTPTRN3=KA_TRNOTPASC95_3,
  251                 EXTINPTRN=NIL,
  252                 EXTOTPTRN=NIL,
  253                 SPCESC=KA_TRNINPASC95_1.SPCESC,
  254                 INPTKN=KA_TRNINPASC95_1.TKNTBL,
  255                 LNK=KA_ASC64C,
  256                 INPCHRMSK='007F'X,
  257                 OTPESCCHR="%BITBIN(KA_OTPCTRSTRCHR_BGN)",
  258                 OTPESCCHR1="%BITASC(KA_OTPCTRSTRCHR_BGN)",
  259                 OTPESCCHR2="%BITASC(KA_OTPCTRSTRCHR_2)",
  260                 NAM='ASC64B',
  261                 FNTCLS=ASC,
  262                 SP_CHR=' ',
  263                 HT_CHR="%BITASC(ASCIIHT)",
  264                 INPCTRSTRINTCHR="%BITASC(KA_INPCTRSTRCHR_INT)");
  265      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           13   
  266      %KV$TRNTBL(NAME=KA_ASC64C,STCLASS=CONSTANT SYMDEF,
  267                 INPTRN1=KA_TRNINPASC95_1,
  268                 INPTRN2=KA_TRNINPASC64C_2,
  269                 OTPTRN1=KA_TRNOTPASC64_1,
  270                 OTPTRN2=KA_TRNOTPASC95_2,
  271                 OTPTRN3=KA_TRNOTPASC64C_3,
  272                 EXTINPTRN=NIL,
  273                 EXTOTPTRN=NIL,
  274                 SPCESC=KA_TRNINPASC95_1.SPCESC,
  275                 INPTKN=KA_TRNINPASC95_1.TKNTBL,
  276                 LNK=KA_ASC8,
  277                 INPCHRMSK='007F'X,
  278                 OTPESCCHR="%BITBIN(KA_OTPCTRSTRCHR_BGN)",
  279                 OTPESCCHR1="%BITASC(KA_OTPCTRSTRCHR_BGN)",
  280                 OTPESCCHR2="%BITASC(KA_OTPCTRSTRCHR_2)",
  281                 NAM='ASC64C',
  282                 FNTCLS=ASC,
  283                 SP_CHR=' ',
  284                 HT_CHR="%BITASC(ASCIIHT)",
  285                 INPCTRSTRINTCHR="%BITASC(KA_INPCTRSTRCHR_INT)");
  286      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           14   
  287      %KV$TRNTBL(NAME=KA_ASC8I,STCLASS=CONSTANT SYMDEF,
  288                 INPTRN1=KA_TRNINPASC95_1,
  289                 INPTRN2=KA_TRNINPASC95_2,
  290                 OTPTRN1=KA_TRNOTPASC95_1,
  291                 OTPTRN2=KA_TRNOTPASC95_2,
  292                 OTPTRN3=KA_TRNOTPASC95_3,
  293                 EXTINPTRN=NIL,
  294                 EXTOTPTRN=NIL,
  295                 SPCESC=KA_TRNINPASC95_1.SPCESC,
  296                 INPTKN=KA_TRNINPASC95_1.TKNTBL,
  297                 LNK=KA_APLBF,
  298                 INPCHRMSK='00FF'X,
  299                 OTPESCCHR="%BITBIN(KA_OTPCTRSTRCHR_BGN)",
  300                 OTPESCCHR1="%BITASC(KA_OTPCTRSTRCHR_BGN)",
  301                 OTPESCCHR2="%BITASC(KA_OTPCTRSTRCHR_2)",
  302                 NAM='ASC8I',
  303                 FNTCLS=ASC,
  304                 SP_CHR=' ',
  305                 HT_CHR="%BITASC(ASCIIHT)",
  306                 INPCTRSTRINTCHR="%BITASC(KA_INPCTRSTRCHR_INT)");
  307      /**/
  308      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           15   
  309      %KV$TRNTBL(NAME=KA_ASC8,STCLASS=CONSTANT SYMDEF,
  310                 INPTRN1=KA_TRNINPASC95_1,
  311                 INPTRN2=KA_TRNINPASC95_2,
  312                 OTPTRN1=KA_TRNOTPASC8_1,
  313                 OTPTRN2=KA_TRNOTPASC95_2,
  314                 OTPTRN3=KA_TRNOTPASC8_3,
  315                 EXTINPTRN=NIL,
  316                 EXTOTPTRN=NIL,
  317                 SPCESC=KA_TRNINPASC95_1.SPCESC,
  318                 INPTKN=KA_TRNINPASC95_1.TKNTBL,
  319                 LNK=KA_ASC8I,
  320                 INPCHRMSK='00FF'X,
  321                 OTPESCCHR="%BITBIN(KA_OTPCTRSTRCHR_BGN)",
  322                 OTPESCCHR1="%BITASC(KA_OTPCTRSTRCHR_BGN)",
  323                 OTPESCCHR2="%BITASC(KA_OTPCTRSTRCHR_2)",
  324                 NAM='ASC8',
  325                 FNTCLS=ASC,
  326                 SP_CHR=' ',
  327                 HT_CHR="%BITASC(ASCIIHT)",
  328                 INPCTRSTRINTCHR="%BITASC(KA_INPCTRSTRCHR_INT)");
  329      /**/
  330      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           16   
  331      /*
  332      * APLBF (APL BIT-PAIRED TRANSLATE TABLE).  LOWER-CASE ASCII CHARACTERS ARE
  333      * PRINTED AS UNDERSCORED UPPER-CASE CHARACTERS ON OUTPUT.
  334      */
  335      %KV$TRNTBL (NAME=KA_APLBF, STCLASS=CONSTANT SYMDEF,
  336          INPTRN1=KA_TRNINPAPL_1,
  337          INPTRN2=KA_TRNINPAPL_2B,
  338          OTPTRN1=KA_TRNOTPAPL_1,
  339          OTPTRN2=KA_TRNOTPAPL_2,
  340          EXTINPTRN=NIL,
  341          EXTOTPTRN=KA_EXTOTPAPL_BF,
  342          SPCESC=KA_TRNINPASC95_1.SPCESC,
  343          INPTKN=KA_TRNINPAPL_1.TKNTBL,
  344          LNK=KA_APLBP,
  345          INPCHRMSK='007F'X,
  346          OTPESCCHR="%BITBIN(KA_OTPCTRSTRCHR_BGN)",
  347          OTPESCCHR1="%BITASC(KA_OTPCTRSTRCHR_BGN)",
  348          OTPESCCHR2="%BITASC(KA_OTPCTRSTRCHR_2)",
  349          NAM='APLBF',
  350          FNTCLS=APLB,
  351          SP_CHR=' ',
  352          HT_CHR="%BITASC(ASCIIHT)",
  353          INPCTRSTRINTCHR="%BITASC(KA_INPCTRSTRCHR_INT)",
  354          PRTAPL='0'B,
  355          DRCOTPTRN='0'B,
  356          TRNINPCTRSTRID='0'B);
  357      /*
  358      * APLBP (APL BIT-PAIRED TRANSLATE TABLE).  LOWER-CASE ASCII CHARACTERS ARE
  359      * PRINTED AS UPPER-CASE CHARACTERS ON OUTPUT.
  360      */
  361      %KV$TRNTBL (NAME=KA_APLBP, STCLASS=CONSTANT SYMDEF,
  362          INPTRN1=KA_TRNINPAPL_1,
  363          INPTRN2=KA_TRNINPAPL_2B,
  364          OTPTRN1=KA_TRNOTPAPL_1,
  365          OTPTRN2=KA_TRNOTPAPL_2,
  366          EXTINPTRN=NIL,
  367          EXTOTPTRN=KA_EXTOTPAPL_BP,
14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           17   
  368          SPCESC=KA_TRNINPASC95_1.SPCESC,
  369          INPTKN=KA_TRNINPAPL_1.TKNTBL,
  370          LNK=KA_APLTF,
  371          INPCHRMSK='007F'X,
  372          OTPESCCHR="%BITBIN(KA_OTPCTRSTRCHR_BGN)",
  373          OTPESCCHR1="%BITASC(KA_OTPCTRSTRCHR_BGN)",
  374          OTPESCCHR2="%BITASC(KA_OTPCTRSTRCHR_2)",
  375          NAM='APLBP',
  376          FNTCLS=APLB,
  377          SP_CHR=' ',
  378          HT_CHR="%BITASC(ASCIIHT)",
  379          INPCTRSTRINTCHR="%BITASC(KA_INPCTRSTRCHR_INT)",
  380          PRTAPL='1'B,
  381          DRCOTPTRN='0'B,
  382          TRNINPCTRSTRID='0'B);
  383      %EJECT;                            /*  APL TYPEWRITER-PAIRED TRANSLATE TABLE  */

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           18   
  384      /*
  385      * APLTF (APL TYPEWRITER-PAIRED TRANSLATE TABLE).  LOWER-CASE ASCII CHARACTERS
  386      * ARE PRINTED AS UNDERSCORED UPPER-CASE CHARACTERS ON OUTPUT.
  387      */
  388      %KV$TRNTBL (NAME=KA_APLTF, STCLASS=CONSTANT SYMDEF,
  389          INPTRN1=KA_TRNINPAPL_1,
  390          INPTRN2=KA_TRNINPAPL_2T,
  391          OTPTRN1=KA_TRNOTPAPL_1,
  392          OTPTRN2=KA_TRNOTPAPL_2,
  393          EXTINPTRN=NIL,
  394          EXTOTPTRN=KA_EXTOTPAPL_TF,
  395          SPCESC=KA_TRNINPASC95_1.SPCESC,
  396          INPTKN=KA_TRNINPAPL_1.TKNTBL,
  397          LNK=KA_APLTP,
  398          INPCHRMSK='007F'X,
  399          OTPESCCHR="%BITBIN(KA_OTPCTRSTRCHR_BGN)",
  400          OTPESCCHR1="%BITASC(KA_OTPCTRSTRCHR_BGN)",
  401          OTPESCCHR2="%BITASC(KA_OTPCTRSTRCHR_2)",
  402          NAM='APLTF',
  403          FNTCLS=APLT,
  404          SP_CHR=' ',
  405          HT_CHR="%BITASC(ASCIIHT)",
  406          INPCTRSTRINTCHR="%BITASC(KA_INPCTRSTRCHR_INT)",
  407          PRTAPL='0'B,
  408          DRCOTPTRN='0'B,
  409          TRNINPCTRSTRID='0'B);
  410      /*
  411      * APLTP (APL TYPEWRITER-PAIRED TRANSLATE TABLE).  LOWER-CASE ASCII CHARACTERS
  412      * ARE PRINTED AS UPPER-CASE CHARACTERS ON OUTPUT.
  413      */
  414      %KV$TRNTBL (NAME=KA_APLTP, STCLASS=CONSTANT SYMDEF,
  415          INPTRN1=KA_TRNINPAPL_1,
  416          INPTRN2=KA_TRNINPAPL_2T,
  417          OTPTRN1=KA_TRNOTPAPL_1,
  418          OTPTRN2=KA_TRNOTPAPL_2,
  419          EXTINPTRN=NIL,
  420          EXTOTPTRN=KA_EXTOTPAPL_TP,
14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           19   
  421          SPCESC=KA_TRNINPASC95_1.SPCESC,
  422          INPTKN=KA_TRNINPAPL_1.TKNTBL,
  423          LNK=NIL,
  424          INPCHRMSK='007F'X,
  425          OTPESCCHR="%BITBIN(KA_OTPCTRSTRCHR_BGN)",
  426          OTPESCCHR1="%BITASC(KA_OTPCTRSTRCHR_BGN)",
  427          OTPESCCHR2="%BITASC(KA_OTPCTRSTRCHR_BGN)",
  428          NAM='APLTP',
  429          FNTCLS=APLT,
  430          SP_CHR=' ',
  431          HT_CHR="%BITASC(ASCIIHT)",
  432          INPCTRSTRINTCHR="%BITASC(KA_INPCTRSTRCHR_INT)",
  433          PRTAPL='1'B,
  434          DRCOTPTRN='0'B,
  435          TRNINPCTRSTRID='0'B);
  436      %EJECT;                            /*  APL PRIMARY INPUT TRANSLATION TABLE    */

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           20   
  437      /*
  438      * APL PRIMARY INPUT TRANSLATION TABLE
  439      */
  440      %KV_PRMINPTRN (NAME=KA_TRNINPAPL_1, FRSCHR=APLBS, INPFNC=KA#SPCCHR_BS);
  441      %KV_PRMINPTRN (FRSCHR=APLHT, INPFNC=KA#SPCCHR_HT);
  442      %KV_PRMINPTRN (FRSCHR=APLLF, INPFNC=KA#SPCCHR_LF);
  443      %KV_PRMINPTRN (FRSCHR=APLFF, INPFNC=KA#SPCCHR_FF);
  444      %KV_PRMINPTRN (FRSCHR=APLCR, INPFNC=KA#SPCCHR_CR);
  445      %KV_PRMINPTRN (FRSCHR=APLDC1, INPFNC=KA#SPCCHR_DC1);
  446      %KV_PRMINPTRN (FRSCHR=APLDC2, INPFNC=KA#SPCCHR_DC2);
  447      %KV_PRMINPTRN (FRSCHR=APLDC3, INPFNC=KA#SPCCHR_DC3);
  448      %KV_PRMINPTRN (FRSCHR=APLCAN, INPFNC=KA#SPCCHR_CAN);
  449      %KV_PRMINPTRN (FRSCHR=APLEM, INPFNC=KA#SPCCHR_EM);
  450      %KV_PRMINPTRN (FRSCHR=APLESC, INPFNC=KA#SPCCHR_ESC);
  451      %KV_PRMINPTRN (FRSCHR='21'X, TRNCHR=APL$DRS); /* DOUBLE QUOTE                 */
  452      %EQU Y#INP2_X22=NXTTBLX;                /* X'22' RIGHT_PAREN/OVERSCORE        */
  453      %KV_PRMINPTRN (FRSCHR='22'X, NXTTBL=YES);
  454      %KV_PRMINPTRN (FRSCHR='232425'X, TRNCHR="APL$LT,APL$LE,APLEQUAL");
  455      %EQU Y#INP2_X26=NXTTBLX;                /* X'26' $GT/$GE                      */
  456      %KV_PRMINPTRN (FRSCHR='26'X, NXTTBL=YES);
  457      %EQU Y#INP2_X27=NXTTBLX;                /* X'27' RIGHT_BRACKET/$GT            */
  458      %KV_PRMINPTRN (FRSCHR='27'X, NXTTBL=YES);
  459      %EQU Y#INP2_X28=NXTTBLX;                /* X'28' $OR/$NE                      */
  460      %KV_PRMINPTRN (FRSCHR='28'X, NXTTBL=YES);
  461      %EQU Y#INP2_X29=NXTTBLX;                /* X'29' $AND/$OR                     */
  462      %KV_PRMINPTRN (FRSCHR='29'X, NXTTBL=YES);
  463      %EQU Y#INP2_X2A=NXTTBLX;                /* X'2A' $NE/RIGHT_PAREN              */
  464      %KV_PRMINPTRN (FRSCHR='2A'X, NXTTBL=YES);
  465      %EQU Y#INP2_X2B=NXTTBLX;                /* X'2B' DIVIDE/LEFT_PAREN            */
  466      %KV_PRMINPTRN (FRSCHR='2B'X, NXTTBL=YES);
  467      %KV_PRMINPTRN (FRSCHR='2D'X, TRNCHR=APLPLUS); /* PLUS                         */
  468      %EQU Y#INP2_X3A=NXTTBLX;                /* X'3A' LEFT_PAREN/RIGHT_BRACKET     */
  469      %KV_PRMINPTRN (FRSCHR='3A'X, NXTTBL=YES);
  470      %KV_PRMINPTRN (FRSCHR='3B3C'X, TRNCHR="APLLEFT_BRACKET,APLSEMICOLON");
  471      %EQU Y#INP2_X3D=NXTTBLX;                /* X'3D' MULTIPLY/MINUS               */
  472      %KV_PRMINPTRN (FRSCHR='3D'X, NXTTBL=YES);
  473      %KV_PRMINPTRN (FRSCHR='3E3F'X, TRNCHR="APLCOLON,APLBACKSLASH");
14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           21   
  474      %EQU Y#INP2_X40=NXTTBLX;                /* X'40' OVERSCORE/$IS                */
  475      %KV_PRMINPTRN (FRSCHR='40'X, NXTTBL=YES);
  476      %KV_PRMINPTRN (FRSCHR='41'X,       /* ALPHA,DECODE,CAP,MIN,EPSILON,UNDERSCORE */
  477       LSTCHR='46'X, TRNCHR="APLALPHA,APL$DCD,APL$CAP,APL$MIN,APL$E,APLUNDERSCORE");
  478      %KV_PRMINPTRN (FRSCHR='47'X,  /* DOWN-DELTA,DELTA,INDEX-GEN,SML CIRC,QT,QUAD  */
  479       LSTCHR='4C'X, TRNCHR="APL$DEL,APL$DLT,APL$I,APL$SC,APLQUOTE,APL$Q");
  480      %KV_PRMINPTRN (FRSCHR='4D'X,            /* |,ENCODE,CIRC,*,?,RHO              */
  481       LSTCHR='52'X, TRNCHR="APL$ABS,APL$ECD,APL$O,APLASTERISK,APLQUESTION,APL$R");
  482      %KV_PRMINPTRN (FRSCHR='53'X,       /* MAX,NOT,DWNARO,CUP,OMEGA,RHTCUP,TAKE    */
  483       LSTCHR='59'X, TRNCHR="APL$MAX,APL$NOT,APL$DRP,APL$CUP,APL$W,APL$CPR,APL$TAK");
  484      %KV_PRMINPTRN (FRSCHR='5A'X, TRNCHR=APL$CPL); /* LEFT-CUP                     */
  485      %EQU Y#INP2_X5B=NXTTBLX;                /* X'5B' $IS/LEFT_TACK                */
  486      %KV_PRMINPTRN (FRSCHR='5B'X, NXTTBL=YES);
  487      %EQU Y#INP2_X5C=NXTTBLX;                /* X'5C' LEFT_TACK/DIAMOND            */
  488      %KV_PRMINPTRN (FRSCHR='5C'X, NXTTBL=YES);
  489      %EQU Y#INP2_X5D=NXTTBLX;                /* X'5D' $GO/LEFT_BRACE               */
  490      %KV_PRMINPTRN (FRSCHR='5D'X, NXTTBL=YES);
  491      %EQU Y#INP2_X5E=NXTTBLX;                /* X'5E' $GE/MULTIPLY                 */
  492      %KV_PRMINPTRN (FRSCHR='5E'X, NXTTBL=YES);
  493      %EQU Y#INP2_X5F=NXTTBLX;                /* X'5F' MINUS/$AND                   */
  494      %KV_PRMINPTRN (FRSCHR='5F'X, NXTTBL=YES);
  495      %EQU Y#INP2_X60=NXTTBLX;                /* X'60' DIAMOND/$GO                  */
  496      %KV_PRMINPTRN (FRSCHR='60'X, NXTTBL=YES);
  497      %KV_PRMINPTRN (FRSCHR='61'X, LSTCHR='7A'X, /* A  thru Z                       */
  498                     TRNCHR='ABCDEFGHIJKLMNOPQRSTUVWXYZ');
  499      %EQU Y#INP2_X7B=NXTTBLX;                /* X'7B' {/RIGHT_TACK                 */
  500      %KV_PRMINPTRN (FRSCHR='7B'X, NXTTBL=YES);
  501      %EQU Y#INP2_X7C=NXTTBLX;                /* X'7C' RIGHT_TACK/$                 */
  502      %KV_PRMINPTRN (FRSCHR='7C'X, NXTTBL=YES);
  503      %EQU Y#INP2_X7E=NXTTBLX;                /* X'7E' $/DIVIDE                     */
  504      %KV_PRMINPTRN (FRSCHR='7E'X, NXTTBL=YES);
  505      %KV_PRMINPTRN (FRSCHR=APLDEL, INPFNC=KA#SPCCHR_DEL, LAST=YES);
  506      %EJECT;                  /*  APL BIT-PAIRED SECONDARY INPUT TRANSLATION TABLE */

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           22   
  507      /*
  508      * APL (BIT-PAIRED) SECONDARY INPUT TRANSLATION TABLE
  509      */
  510      %KV_SCNINPTRN (NAME=KA_TRNINPAPL_2B, TEST=Y#INP2_X22, TRNCHR=APLOVERSCORE);
  511      %KV_SCNINPTRN (TEST=Y#INP2_X26, TRNCHR="APL$GE,APL$GT,APL$NE,APL$OR");
  512      %KV_SCNINPTRN (TEST=Y#INP2_X2A, TRNCHR="APLRIGHT_PAREN,APLLEFT_PAREN");
  513      %KV_SCNINPTRN (TEST=Y#INP2_X3A, TRNCHR="APLRIGHT_BRACKET,APLMINUS,APL$IS");
  514      %KV_SCNINPTRN (TEST=Y#INP2_X5B, TRNCHR="APLLEFT_TACK,APLDIAMOND,APLLEFT_BRACE");
  515      %KV_SCNINPTRN (TEST=Y#INP2_X5E, TRNCHR="APLMULTIPLY,APLAND,APL$GO");
  516      %KV_SCNINPTRN (TEST=Y#INP2_X7B, TRNCHR="APLRIGHT_TACK,APLDOLLAR,APLDIVIDE",
  517                     LAST=YES);
  518      %EJECT;        /*  APL TYPEWRITER-PAIRED SECONDARY INPUT TRANSLATION TABLE    */

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           23   
  519      /*
  520      * APL (TYPEWRITER-PAIRED) SECONDARY INPUT TRANSLATION TABLE
  521      */
  522      %KV_SCNINPTRN (NAME=KA_TRNINPAPL_2T, TEST=Y#INP2_X22, TRNCHR=APLRIGHT_PAREN);
  523      %KV_SCNINPTRN (TEST=Y#INP2_X26, TRNCHR="APL$GT,APLRIGHT_BRACKET,APL$OR,APLAND");
  524      %KV_SCNINPTRN (TEST=Y#INP2_X2A, TRNCHR="APL$NE,APLDIVIDE,APLLEFT_PAREN");
  525      %KV_SCNINPTRN (TEST=Y#INP2_X3D, TRNCHR="APLMULTIPLY,APLOVERSCORE,APL$IS");
  526      %KV_SCNINPTRN (TEST=Y#INP2_X5C, TRNCHR="APLLEFT_TACK,APL$GO,APL$GE,APLMINUS");
  527      %KV_SCNINPTRN (TEST=Y#INP2_X60, TRNCHR="APLDIAMOND,APLLEFT_BRACE");
  528      %KV_SCNINPTRN (TEST=Y#INP2_X7C, TRNCHR="APLRIGHT_TACK,APLDOLLAR", LAST=YES);
  529      %EJECT;                            /*  APL PRIMARY OUTPUT TRANSLATION TABLE   */

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           24   
  530      /*
  531      * APL PRIMARY OUTPUT TRANSLATION TABLE
  532      */
  533      %KV_PRMOTPTRN (NAME=KA_TRNOTPAPL_1, DFLTRNCHR=KA_OTPCTRSTRCHR_BGN,
  534      /*
  535         SPace is still space.
  536      */
  537                     FRSCHR=' ', TRNCHR=' ');
  538      %KV_PRMOTPTRN (FRSCHR='"', TRNCHR='!');
  539      %KV_PRMOTPTRN (FRSCHR='%', TRNCHR='RCK');
  540      %KV_PRMOTPTRN (FRSCHR='*', TRNCHR="'P-,'");
  541      %KV_PRMOTPTRN (FRSCHR='.', LSTCHR='9');
  542      %KV_PRMOTPTRN (FRSCHR=':', TRNCHR='><#%');
  543      %KV_PRMOTPTRN (FRSCHR='?', TRNCHR="'QAabcdefghijklmnopqrstuvwxyz;?'");
  544      %KV_PRMOTPTRN (FRSCHR='^', TRNCHR='YFZ');
  545      %KV_PRMOTPTRN (FRSCHR='|', TRNCHR='M}T');
  546      %KV_PRMOTPTRN (FRSCHR='80'X, TRNCHR='#', LSTCHR='A0'X);
  547      %KV_PRMOTPTRN (FRSCHR='A1'X, TRNCHR='J');
  548      %KV_PRMOTPTRN (FRSCHR='A3'X, TRNCHR='V');
  549      %KV_PRMOTPTRN (FRSCHR='BF'X, TRNCHR='#DE#HI');
  550      %KV_PRMOTPTRN (FRSCHR='C7'X, TRNCHR='SU#WX');
  551      %KV_PRMOTPTRN (FRSCHR='CD'X, TRNCHR='G');
  552      %KV_PRMOTPTRN (FRSCHR='CF'X, TRNCHR='$');
  553      %KV_PRMOTPTRN (FRSCHR='D5'X, TRNCHR='LO');
  554      %KV_PRMOTPTRN (FRSCHR='D9'X, TRNCHR='BN');
  555      %KV_PRMOTPTRN (FRSCHR='E4'X, TRNCHR='#', LSTCHR='FF'X, LAST=YES);
  556      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           25   
  557      /*
  558         Secondary output translate table for APL.
  559         Since there's so many, we'll make everything that's table-dependent
  560         go into the extended translate tables (to save searching more than once).
  561         First the "normal" APL characters that depend on the pairing algorithm.
  562      */
  563      %KV_SCNOTPTRN (NAME=KA_TRNOTPAPL_2, TYPE=EXTTRN, INPCHR=
  564         "APL$NE,APLDOLLAR,APLLEFT_PAREN,APLRIGHT_PAREN,APLMINUS,APL$GT");
  565      %KV_SCNOTPTRN (TYPE=EXTTRN, INPCHR=
  566         "APLRIGHT_BRACKET,APLLEFT_BRACE,APLMULTIPLY,APLDIVIDE,APLAND,APLOVERSCORE");
  567      %KV_SCNOTPTRN (TYPE=EXTTRN, INPCHR=
  568         "APL$GE,APL$OR,APLDIAMOND,APLLEFT_TACK,APLRIGHT_TACK,APL$GO,APL$IS");
  569      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           26   
  570      /*
  571         Then the APL overstrikes.
  572         BUT - they want to go last in the EXTTRN numerical sequence - so...
  573         we'll adjust the EXTOTPX to skip the lowercase alphabet.
  574      */
  575      %EQU KA_APL_EXTOTPX_LC = KV_EXTOTPX;
  576      %SET KV_EXTOTPX = KV_EXTOTPX+26;
  577
  578      %KV_SCNOTPTRN (TYPE=EXTTRN, INPCHR=
  579         "APL$COM,APLXEC,APLFMT,APL$FCT,APL$QQ,APL$LOG,APL$RD1,APL$XP1,APL$RV1");
  580      %KV_SCNOTPTRN (TYPE=EXTTRN, INPCHR=
  581         "APLDOLLAR,APL$Q0,APL$Q1,APL$Q2,APL$Q3,APL$Q4,APL$Q5,APL$Q6,APL$Q7");
  582      %KV_SCNOTPTRN (TYPE=EXTTRN, INPCHR=
  583         "APL$Q8,APL$Q9,APL$TPS,APL$UDL,APL$GD,APL$GU,APL$REV,APL$NND,APL$NOR");
  584      %KV_SCNOTPTRN (TYPE=EXTTRN, INPCHR=
  585         "APL$LOK,APL$MDV,APL$TBR,APL$IB,APL$EQV,APL$NQV,APL$FDI,APL$FND,APL$EIG");
  586      %KV_SCNOTPTRN (TYPE=EXTTRN, INPCHR=
  587         "APL$ZRO,APL$DUL,APL$CMT");
  588      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           27   
  589      /*
  590         Now the control chars.
  591      */
  592      %KV_SCNOTPTRN (INPCHR=APLBS, TYPE=OTPFNC_BS);
  593      %KV_SCNOTPTRN (INPCHR=APLHT, TYPE=OTPFNC_HT);
  594      %KV_SCNOTPTRN (INPCHR=APLLF, TYPE=OTPFNC_LF);
  595      %KV_SCNOTPTRN (INPCHR=APLCR, TYPE=OTPFNC_CR);
  596      %KV_SCNOTPTRN (INPCHR='00010203040506070B'X, TYPE=NRMNO_PST);
  597      %KV_SCNOTPTRN (INPCHR='0C0E0F101112131415'X, TYPE=NRMNO_PST);
  598      %KV_SCNOTPTRN (INPCHR='161718191A1B1C1D1E'X, TYPE=NRMNO_PST);
  599      %KV_SCNOTPTRN (INPCHR='1F7F'X, TYPE=NRMNO_PST);
  600      %EJECT;

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           28   
  601      /*
  602         Finally, the lowercase alphabetics.
  603         Not to forget to restore the proper EXTOTPX value.
  604      */
  605      %SET KV_EXTOTPX = KA_APL_EXTOTPX_LC;
  606      %KV_SCNOTPTRN (INPCHR='abcdefghijklm', TYPE=EXTTRN);
  607      %KV_SCNOTPTRN (INPCHR='nopqrstuvwxyz', TYPE=EXTTRN, LAST=YES);
  608      %EJECT;             /*  APL BIT-PAIRED EXTENDED OUTPUT TRANSLATION TABLES     */

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           29   
  609      /*
  610      * APL (BIT-PAIRED) EXTENDED OUTPUT TRANSLATION TABLES
  611      */
  612      %KV$EXTOTPTRN (NAME=KA_EXTOTPAPL_BF, STCLASS=CONSTANT, CNT=19, WDT=1,
  613                     LNK=KA_EXTOTPAPL_F, TXTSIZ=1, TEXT='287C2B2A3D27'X);
  614      %KV$EXTOTPTRN (TEXT='3A5D5E7E5F22'X);
  615      %KV$EXTOTPTRN (TEXT='26295C5B7B6040'X);
  616
  617      %KV$EXTOTPTRN (NAME=KA_EXTOTPAPL_BP, STCLASS=CONSTANT, CNT=19, WDT=1,
  618                     LNK=KA_EXTOTPAPL_P, TXTSIZ=1, TEXT='287C2B2A3D27'X);
  619      %KV$EXTOTPTRN (TEXT='3A5D5E7E5F22'X);
  620      %KV$EXTOTPTRN (TEXT='26295C5B7B6040'X);
  621      %EJECT;        /*  APL TYPEWRITER-PAIRED EXTENDED OUTPUT TRANSLATION TABLES   */

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           30   
  622      /*
  623      * APL (TYPEWRITER-PAIRED) EXTENDED OUTPUT TRANSLATION TABLES
  624      */
  625      %KV$EXTOTPTRN (NAME=KA_EXTOTPAPL_TF, STCLASS=CONSTANT, CNT=19, WDT=1,
  626                     LNK=KA_EXTOTPAPL_F, TXTSIZ=1, TEXT='2A7E3A225F26'X);
  627      %KV$EXTOTPTRN (TEXT='277B3D2B2940'X);
  628      %KV$EXTOTPTRN (TEXT='5E28605C7C5D5B'X);
  629
  630      %KV$EXTOTPTRN (NAME=KA_EXTOTPAPL_TP, STCLASS=CONSTANT, CNT=19, WDT=1,
  631                     LNK=KA_EXTOTPAPL_P, TXTSIZ=1, TEXT='2A7E3A225F26'X);
  632      %KV$EXTOTPTRN (TEXT='277B3D2B2940'X);
  633      %KV$EXTOTPTRN (TEXT='5E28605C7C5D5B'X);
  634      %EJECT;                  /*  APL (PARTIAL) EXTENDED OUTPUT TRANSLATION TABLE  */

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           31   
  635      /*
  636      * APL (PARTIAL) EXTENDED OUTPUT TRANSLATION TABLE
  637      */
  638      %KV$EXTOTPTRN (NAME=KA_EXTOTPAPL_P, STCLASS=CONSTANT, WDT=1, CNT=26,
  639                   LNK=KA_EXTOTPAPL_CMN, TXTSIZ=1, TEXT='abcdefghijklmnopqrstuvwxyz');
  640      %EJECT;                  /*  APL (FULL) EXTENDED OUTPUT TRANSLATION TABLE     */

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           32   
  641      /*
  642      * APL (FULL) EXTENDED OUTPUT TRANSLATION TABLE
  643      */
  644      %KV$EXTOTPTRN (NAME=KA_EXTOTPAPL_F, STCLASS=CONSTANT, WDT=1, CNT=26,
  645                     LNK=KA_EXTOTPAPL_CMN, TXTSIZ=1, TEMPLATE='4608FE'X,
  646                     TEXT='abcdefghijklmnopqrstuvwxyz');
  647      %EJECT;             /*  APL COMMON EXTENDED OUTPUT TABLE (APL OVERSTRIKES)    */

14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           33   
  648      /*
  649      * COMMON TABLE OF APL OVERSTRIKES FOR OUTPUT.
  650      */
  651      %KV$EXTOTPTRN (NAME=KA_EXTOTPAPL_CMN, STCLASS=CONSTANT, WDT=1, CNT=39,
  652                     TXTSIZ=2, TEMPLATE='FE08FE'X, TRN=NO,
  653                     TEXT="APL$SC,APL$CAP");  /* APL$COM                            */
  654      %KV$EXTOTPTRN (TEXT="APL$SC,APL$DCD");  /* APL$XEC                            */
  655      %KV$EXTOTPTRN (TEXT="APL$SC,APL$ECD");  /* APL$FMT                            */
  656      %KV$EXTOTPTRN (TEXT="APLPERIOD,APLQUOTE"); /* APL$FCT                         */
  657      %KV$EXTOTPTRN (TEXT="APLQUOTE,APL$Q");  /* APL$QQ                             */
  658      %KV$EXTOTPTRN (TEXT="APLASTERISK,APL$O"); /* APL$LOG                          */
  659      %KV$EXTOTPTRN (TEXT="APLMINUS,APLSLASH"); /* APL$RD1                          */
  660      %KV$EXTOTPTRN (TEXT="APLMINUS,APLBACKSLASH"); /* APL$XP1                      */
  661      %KV$EXTOTPTRN (TEXT="APLMINUS,APL$O");  /* APL$RV1                            */
  662      %KV$EXTOTPTRN (TEXT="APLS,APL$ABS");    /* APLDOLLARS                         */
  663      %KV$EXTOTPTRN (TEXT="APL$Q,APL0");      /* APL$Q0                             */
  664      %KV$EXTOTPTRN (TEXT="APL$Q,APL1");      /* APL$Q1                             */
  665      %KV$EXTOTPTRN (TEXT="APL$Q,APL2");      /* APL$Q2                             */
  666      %KV$EXTOTPTRN (TEXT="APL$Q,APL3");      /* APL$Q3                             */
  667      %KV$EXTOTPTRN (TEXT="APL$Q,APL4");      /* APL$Q4                             */
  668      %KV$EXTOTPTRN (TEXT="APL$Q,APL5");      /* APL$Q5                             */
  669      %KV$EXTOTPTRN (TEXT="APL$Q,APL6");      /* APL$Q6                             */
  670      %KV$EXTOTPTRN (TEXT="APL$Q,APL7");      /* APL$Q7                             */
  671      %KV$EXTOTPTRN (TEXT="APL$Q,APL8");      /* APL$Q8                             */
  672      %KV$EXTOTPTRN (TEXT="APL$Q,APL9");      /* APL$Q9                             */
  673      %KV$EXTOTPTRN (TEXT="APLBACKSLASH,APL$O"); /* APL$TPS                         */
  674      %KV$EXTOTPTRN (TEXT="APLUNDERSCORE,APL$DLT"); /* APL$UDL                      */
  675      %KV$EXTOTPTRN (TEXT="APL$ABS,APL$DEL"); /* APL$GD                             */
  676      %KV$EXTOTPTRN (TEXT="APL$ABS,APL$DLT"); /* APL$GU                             */
  677      %KV$EXTOTPTRN (TEXT="APL$ABS,APL$O");   /* APL$REV                            */
  678      %KV$EXTOTPTRN (TEXT="APL$NOT,APLAND");  /* APL$NND                            */
  679      %KV$EXTOTPTRN (TEXT="APL$NOT,APL$OR");  /* APL$NOR                            */
  680      %KV$EXTOTPTRN (TEXT="APL$NOT,APL$DEL"); /* APL$LOK                            */
  681      %KV$EXTOTPTRN (TEXT="APLDIVIDE,APL$Q"); /* APL$MDV                            */
  682      %KV$EXTOTPTRN (TEXT="APLOVERSCORE,APL$ECD"); /* APL$TBR                       */
  683      %KV$EXTOTPTRN (TEXT="APL$DCD,APL$ECD"); /* APL$IB                             */
  684      %KV$EXTOTPTRN (TEXT="APLEQUAL,APLUNDERSCORE"); /* APL$EQV                     */
14:44 JUL 28 '97 KA_ASC_D.:E05SI                                           34   
  685      %KV$EXTOTPTRN (TEXT="APL$NE,APLUNDERSCORE"); /* APL$NQV                       */
  686      %KV$EXTOTPTRN (TEXT="APL$I,APLUNDERSCORE"); /* APL$FDI                        */
  687      %KV$EXTOTPTRN (TEXT="APL$E,APLUNDERSCORE"); /* APL$FND                        */
  688      %KV$EXTOTPTRN (TEXT="APL$Q,APLBACKSLASH"); /* APL$EIG                         */
  689      %KV$EXTOTPTRN (TEXT="APL$Q,APL$SC");    /* APL$ZRO                            */
  690      %KV$EXTOTPTRN (TEXT="APL$DEL,APL$DRS"); /* APL$DUL                            */
  691      %KV$EXTOTPTRN (TEXT="APL$NOT,APL$DRS"); /* APL$CMT                            */
  692      END;

