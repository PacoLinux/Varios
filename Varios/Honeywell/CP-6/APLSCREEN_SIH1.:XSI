.*M*
HELP file for: APLSCREEN.X
.*T*
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
.*A*                                                            
APLSCREEN.X
 
.*R*
This workspace contains APL functions which use CP-6 FORMs mode.  Included in
this package are routines to generate field definition matrices, modify field
definition matrices, and use the field definition matrix for input.
.*B*
General Information
 
This workspace contains 8 functions for handling forms mode.  Some of these
functions reference other functions in this workspace.  The 8 main functions
and their uses are:
 
.*
.fif
.*R*
GENFORM       -  Generates a field definition matrix
              -  uses functions: GS, INPUT, MFS MKBFLD
 
PUTWIN        -  Creates a window and puts form into it
              -  uses function: FLDI
 
RLSWIN        -  Removes window and form
 
MODIFYFLDS    -  Modifies a field definition matrix
              -  uses functions: PUTWIN, RLSWIN, WFLD, FLDI, HELP
 
FORMINPUT     -  Inputs specified fields from form
 
TEST          -  Displays form, issues input, removes form
              -  uses functions: PUTWIN, RLSWIN
 
FORMDEF       -  Returns a character matrix display of a
                 field definition matrix
              -  uses function: FLDI
 
INPUT         -  Returns a character matrix containing the
                 contents of the file specified.
 
.*
.fin
.*R*
.*B*
For the purposes of this workspace, a field definition matrix is an N-by-7 or
N-by-11 array containing a row for each field.  The columns of the field
definition matrix have the following meanings:
 
.*
.fif
.*R*
1)   Field number
2)   Row on screen
3)   Starting column
4)   Length
5)   Field attributes
6)   Input or Input/output
7)   Initial value
--------------------------------------
8)   Field name
9)   Field type (numeric or character)
10)  Format
11)  Verify function
 
.*
.fin
.*R*
The first 7 columns of the field definition matrix are compatible with APL's
$QBFLD system function.  The use of columns 9 and 10 are currently not
supported.
.*K* GENERATE_FIELD_DEFINITION GENFORM
.*
.fif
.*R*
 
GENFORM
 
Syntax:
 
     AFORM_GENFORM  TEXTMAT
 
Parameters:
 
TEXTMAT     This is a character matrix containing the text
that is to appear on the screen.  Input or output fields are
indicated by filling the entire field with the $NE character
(or the # character if the matrix is created outside of APL).
 
AFORM        This is the resulting field definition matrix.
 
.*B* EXAMPLE
 
.*
.fif
.*R*
!BUILD *TEST
    1.000           Example of a Field Definition Matrix
    2.000
    3.000  Name:      #####################################
    4.000  Age:       ###        Department:  #################
    5.000  Hire Date: ########   Review Date: ########
    6.000
!APL APLSCREEN.X
 APL C02
 NEWSCREEN SAVED 13:10 OCT 08 '85
 
      $R MAT_GENFORM INPUT '*TEST'
11 7
 
      MAT
 1 3 13 37 0 0  $NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE
 2 4 13  3 0 0  $NE$NE$NE
 3 4 37 17 0 0  $NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE$NE
 4 5 13  8 0 0  $NE$NE$NE$NE$NE$NE$NE$NE
 5 5 37  8 0 0  $NE$NE$NE$NE$NE$NE$NE$NE
 6 1 11 36 0 2  Example of a Field Definition Matrix
 7 3  2  5 0 2  Name:
 8 4  2  4 0 2  Age:
 9 4 24 13 0 2  Department:
10 5  2 11 0 2  Hire Date:
11 5 24 13 0 2  Review Date:
      )END
 
.*
.fin
.*R*
In this example, the function INPUT was used to read the field definition from
the file *TEST and a field definition matrix was generated by the function
GENFORM.
 
.*K* PUTWIN
.*
.fif
.*R*
 
Syntax:
 
     FMAT PUTWIN S
 
Parameters:
 
FMAT      This is a field definition matrix as created by the
GENFORM or MODIFYFLDS functions.
 
S         This is the blind I/O stream to be used to display
and input from the form.
 
Description:
.*
.fin
.*R*
 
This function causes a window to be created that has as many lines as the form
needs to be displayed.  The fields are then defined using the $QBFLD system
function.  The form does not actually appear on the screen until an input
operation or the $QBPAGE system function is executed.
 
.*K* RLSWIN
.*
.fif
.*R*
 
Syntax:
 
     RLSWIN S
 
Parameters:
 
S         This is the blind I/O stream to be reset.
 
Description:
.*
.fin
.*R*
 
This function causes the blind I/O stream specified to be reset to ME.  If a
window was associated with that stream via the PUTWIN function, that window is
released.
.*
.fif
.*R*
.*K* MODIFY_FIELD_DEFINITION MODIFYFLDS
MODIFYFLDS
 
Syntax:
 
        FMAT_[N] MODIFYFLDS FMAT
 
Parameters:
 
FMAT        is a field definition matrix.
 
N           is an optional integer vector containing the field
numbers that are to be modified.  If N is an empty vector,
all fields are modified.  If N is not specified, only the
input fields are modified.
 
.*
.fin
.*R*
Description:
 
This function is used to modify a field definition matrix.  Modification to a
field is done by displaying the form to be modified on the screen, setting the
current field to inverse video, and inputting the field modifications on a
separate form.  The modification form permits the name of the fields to be
specified, the mode (I for input, O for output), the type (N for numeric and C
for character), a format (compatible with the $QFMT system function), the field
attributes (H for hidden, I for increased intensity, D for decreased intensity,
U for underlined, S for slow blinking, F for fast blinking and R for reverse
video), an initial value and the name of a function to be executed when a value
is input.
.*B*
 
The form used to input the field modifications is:
 
.*
.fif
.*R*
--------------------------------------------------------------
              Field Definition for Field
 
Name:                             Mode:       Type:
Format:                           Attributes:
Init:
Verify:                           Command:
 
 
--------------------------------------------------------------
 
.*
.fin
.*R*
The command field can be used to input a HELP command or to stop the field
modification without making any changes by entering a QUIT command.
.*
.fif
.*R*
.*K* FORMINPUT
FORMINPUT
 
Syntax:
 
       IN_FLDMAT FORMINPUT S,FN
 
Parameters:
 
S       is the scalar integer blind I/O stream number opened
with the field definition matrix left argument.
 
FN      is the field numbers in FLDMAT that are to be input.
 
FLDMAT  is the field definition matrix that was used to open
the specified stream.
 
IN      is an N-by-2 matrix containing field numbers in the
first column and the associated input value in the second column.
 
.*B* DESCRIPTION
 
Description:
 
.*
.fin
.*R*
In order to use this function, the PUTWIN function must be executed first to
define a window and create the form to be input.  This function issues an input
request for all of the specified fields in FN and optionally verifies them if a
verify function has been specified through the MODIFYFLDS function.
 
If a verification function is specified, it should be a function whose right
argument is the input value.  If the input value is legal, the result of the
function should be an empty vector and if the value input is not legal, the
result of this function should be an appropriate error message.  If the form
definition contains a field named ERROR_MESSAGE then that field is used to
display errors associated with FORMINPUT, otherwise error messages appear as
normal quad output.  The verification function may be dyadic and have its left
argument specified in the definition supplied through the MODIFYFLDS function.
 
The function MODIFYFLDS in this workspace is an example of a use of this
function.
.*
.fif
.*R*
.*K* TEST
TEST
 
Syntax:
 
       TEST FLDMAT
 
Parameters:
 
FLDMAT        This is a field definition matrix.
 
Description:
 
.*
.fin
.*R*
This function causes the specified form to appear on the screen.  An input
operation occurs (with no field validity checking) and the result of the input
operation is returned as the result of this function.  This function always
uses blind I/O channel 1.
 
.*
.fif
.*R*
.*K* FORMDEF
 
Syntax:
       M_FORMDEF FLDMAT
 
Parameters:
 
FLDMAT          This is a field definition matrix.
 
M               This is a character matrix containing the
initial display of the specified form.
 
Description:
 
.*
.fin
.*R*
This function is used to obtain a character matrix representation of the image
of a form on the screen.  The result of this function is also compatible with
the GENFORM function.
 
.*
.fif
.*R*
.*K* OWNER
Bruce Frost, LADC
.*K* CHANGES
.*R*
05/23/86
.*R*
Corrected a bug in FORMINPUT.
.*R*
03/28/86
.*R*
The names supplied via MODIFYFLDS for the verification function and the field
name are now permitted to contain embedded blanks, quotes and minus signs.
This allows the verification function to be dyadic with the left argument
specified in the field definition.
.*B*
851219
.*R*
Submitted to LADC X account.
.*K* XINDEX_ABSTRACT
TOOL=APLSCREEN
.*R*
An APL workspace providing tools for creating and using forms mode.
.*K* XINDEX
APLSCREEN.X
.*R*
AID=PROGRAMMING
.*R*
APL
.*R*
TP_AIDS
.*R*
SCREEN_UPDATING
