

15:06 JUL 28 '97 NI_MACROS_C.:E05SI                                        1    
    1      /*M* Queue-Manipulation Macros */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /**/
    8      /*D* NAME:        ENQUEUE
    9
   10           ENTRY:       REQUEUE
   11
   12           CALL:        %ENQUEUE(P#=PKT,Q#=Q$);
   13                        or
   14                        %REQUEUE(P#=PKT,Q#=Q$);
   15
   16                        where: PKT is the packet to be enqueued
   17                               Q$ is the queue header
   18
   19           ENVIRONMENT: These macros generate one statement each.
   20
   21           DESCRIPTION: ENQUEUE enqueues the packet at the tail of the queue.
   22                        REQUEUE enqueues the packet at the head of the queue.
   23                                                                             */
   24      DCL NIM$DEQUEUE ENTRY (2) ALTRET;
   25      DCL NIM$ENQUEUE ENTRY (2);
   26      DCL NIM$REQUEUE ENTRY (2);
   27      %MACRO ENQUEUE (P#=NIL,Q#=NIL);
   28             CALL NIM$ENQUEUE(P#,Q#);
   29      %MEND;
   30      /**/
   31      %MACRO REQUEUE (P#=NIL,Q#=NIL);
   32             CALL NIM$REQUEUE(P#,Q#);
   33      %MEND;
   34      /**/
   35      /*D* NAME:        DEQUEUE
   36
   37           CALL:        %DEQUEUE(P#=P$,Q#=Q$,A#=ALTRET);
15:06 JUL 28 '97 NI_MACROS_C.:E05SI                                        2    
   38
   39                        where: P$ will -> the packet dequeued
   40                               Q$ is the queue header
   41                               IF Q$ is empty, GOTO ALTRET.
   42
   43           ENVIRONMENT: This macro generates one statement.
   44
   45           DESCRIPTION: DEQUEUE dequeues the first packet from the queue.
   46                                                                         */
   47      %MACRO DEQUEUE (P#=NIL,Q#=NIL,A#="");
   48      %IF TEXTCHAR(A#)~='';
   49             CALL NIM$DEQUEUE(P#,Q#) ALTRET(A#);
   50      %ELSE;
   51             CALL NIM$DEQUEUE(P#,Q#);
   52      %ENDIF;
   53      %MEND;
   54      /**/
   55      /* DECLARE ERROR WORD */
   56      /**/
   57      %MACRO ERROR_WORD(N#=ERROR_WORD,M#=MODULE,C#=ERROR_CODE,SEV#=4,STCLASS=CONSTANT);
   58      DCL 1 N# STCLASS ALIGNED,
   59            2 * BIT(18) INIT(M#),
   60            2 * BIT(1) INIT('1'B),
   61            2 * UBIN(14) UNAL INIT(C#),
   62            2 * UBIN(3) UNAL INIT(SEV#);
   63      %MEND;
   64      /**/
   65      /* DCW FORMAT */
   66      /**/
   67      %MACRO DCW(NAME=DCW,LVL=1,STCLASS=BASED);
   68      %LSET LISTDIR='0'B;
   69      %LSET LISTEXP='1'B;
   70      %LSET LISTSUB='1'B;
   71      %IF LVL=1;
   72      DCL 1 NAME STCLASS ALIGNED,
   73      %ELSE;
   74          LVL NAME ALIGNED,
15:06 JUL 28 '97 NI_MACROS_C.:E05SI                                        3    
   75      %ENDIF;
   76            %(LVL+1) FWA UBIN(18) UNAL,       /* FIRST WORD ADDRESS                 */
   77            %(LVL+1) ICP UBIN(3) UNAL,        /* INITIAL CHARACTER POSITION         */
   78            %(LVL+1) TYPE UBIN(3) UNAL,       /* DCW TYPE                           */
   79            %(LVL+1) TALLY UBIN(12) UNAL,     /* WORD COUNT                         */
   80            %(LVL+1) T REDEF TALLY UNAL,      /* TDCW INFORMATION                   */
   81              %(LVL+2) * BIT(3) UNAL,
   82              %(LVL+2) DCWLIST UNAL,          /* IMX ADDRESS BASE FOR DCWLIST       */
   83                %(LVL+3) IBC BIT(1) UNAL,     /* INHIBIT BASE CHANGE                */
   84                %(LVL+3) BASE UBIN(2) UNAL,   /* ADDRESS BASE WORD INDEX:  0-3      */
   85              %(LVL+2) * BIT(1) UNAL,
   86              %(LVL+2) SEG BIT(1) UNAL,       /* MSB OF TRANSFER ADDR               */
   87              %(LVL+2) PDATA BIT(1) UNAL,     /* PAGED DATA                         */
   88              %(LVL+2) PDCW BIT(1) UNAL,      /* GOTO MODE 4 (PAGED DCWLIST)        */
   89              %(LVL+2) RESTRICT BIT(1) UNAL,  /* NO MORE IDCWS IN LIST              */
   90              %(LVL+2) REL BIT(1) UNAL        /* GOTO MODE 3A (PAGED DATA)          */
   91      %IF LVL=1;
   92                                        ;
   93      %ELSE;
   94                                        ,
   95      %ENDIF;
   96      %MEND;
   97      /**/
   98      /* IDCW FORMAT */
   99      /**/
  100      %MACRO IDCW(NAME=IDCW,LVL=1,STCLASS=BASED);
  101      %LSET LISTDIR='0'B;
  102      %LSET LISTEXP='1'B;
  103      %LSET LISTSUB='1'B;
  104      %IF LVL=1;
  105      DCL 1 NAME STCLASS ALIGNED,
  106      %ELSE;
  107          LVL NAME ALIGNED,
  108      %ENDIF;
  109            %(LVL+1) DC UBIN(6) UNAL,         /* DEVICE COMMAND                     */
  110            %(LVL+1) DVN UBIN(6) UNAL,        /* DEVICE NUMBER                      */
  111            %(LVL+1) EXTA UBIN(6) UNAL,       /* ADDRESS EXTENSION                  */
15:06 JUL 28 '97 NI_MACROS_C.:E05SI                                        4    
  112            %(LVL+1) DATA REDEF EXTA UNAL,    /* IMX ADDRESS BASE FOR DATA          */
  113              %(LVL+2) IBC BIT(1) UNAL,       /* INHIBIT BASE CHANGE                */
  114              %(LVL+2) BASE UBIN(2) UNAL,     /* ADDRESS BASE WORD INDEX:  0-3      */
  115              %(LVL+2) * BIT(3) UNAL,
  116            %(LVL+1) SVN UBIN(3) UNAL,        /* '7'O                               */
  117            %(LVL+1) EC BIT(1) UNAL,          /* IN NON-PAGED MODE: LOAD AEX REG    */
  118            %(LVL+1) CONT BIT(1) UNAL,        /* CONTINUE                           */
  119            %(LVL+1) MARK BIT(1) UNAL,        /* MARKER INTERRUPT                   */
  120            %(LVL+1) CC UBIN(6) UNAL,         /* CHANNEL COMMAND                    */
  121            %(LVL+1) CCB REDEF CC,
  122              %(LVL+2) * BIT(4) UNAL,
  123              %(LVL+2) NOBUF BIT(1) UNAL,     /* NO DATA BUFFER REQUIRED            */
  124              %(LVL+2) * BIT(1) UNAL,
  125            %(LVL+1) RCNT UBIN(6) UNAL        /* RECORD COUNT                       */
  126      %IF LVL=1;
  127                                      ;
  128      %ELSE;
  129                                      ,
  130      %ENDIF;
  131      %MEND;
  132      /**/
  133      /* TDCW FORMAT */
  134      /**/
  135      %MACRO TDCW(NAME=TDCW,LVL=1,STCLASS=BASED);
  136      %LSET LISTDIR='0'B;
  137      %LSET LISTEXP='1'B;
  138      %LSET LISTSUB='1'B;
  139      %IF LVL=1;
  140      DCL 1 NAME STCLASS ALIGNED,
  141      %ELSE;
  142          LVL NAME ALIGNED,
  143      %ENDIF;
  144            %(LVL+1) TRA UBIN(18) UNAL,       /* TRANSFER ADDRESS                   */
  145            %(LVL+1) * BIT(3),                /* '0'O                               */
  146            %(LVL+1) TYPE UBIN(3) UNAL,       /* TDCW TYPE=2                        */
  147            %(LVL+1) FLAGS,
  148              %(LVL+2) * BIT(7),
15:06 JUL 28 '97 NI_MACROS_C.:E05SI                                        5    
  149              %(LVL+2) SEG BIT(1),            /* MSB OF TRANSFER ADDRESS            */
  150              %(LVL+2) * BIT(1),
  151              %(LVL+2) PDCW BIT(1),           /* GOTO MODE 4 (PAGED DCW LIST)       */
  152              %(LVL+2) * BIT(1),
  153              %(LVL+2) REL BIT(1)             /* GOTO MODE 3A (PAGED DATA)          */
  154      %IF LVL=1;
  155                                 ;
  156      %ELSE;
  157                                 ,
  158      %ENDIF;
  159      %MEND;
  160      /**/
  161      /* STATUS DOUBLEWORD FORMAT */
  162      /**/
  163      %MACRO STATUS(NAME=STATUS,LVL=1,STCLASS=BASED);
  164      %LSET LISTDIR='0'B;
  165      %LSET LISTEXP='1'B;
  166      %LSET LISTSUB='1'B;
  167      %IF LVL=1;
  168      DCL 1 NAME STCLASS DALIGNED,
  169      %ELSE;
  170          LVL NAME DALIGNED,
  171      %ENDIF;
  172            %(LVL+1) PRESENCE BIT(1),         /* ALWAYS ONE                         */
  173            %(LVL+1) POWEROFF BIT(1),         /* POWER OFF STATUS                   */
  174            %(LVL+1) MAJOR UBIN(4) UNAL,      /* DEVICE MAJOR STATUS                */
  175            %(LVL+1) MINOR BIT(6),            /* DEVICE MINOR STATUS                */
  176            %(LVL+1) ODD BIT(1),              /* ODD WORD COUNT                     */
  177            %(LVL+1) MARKER BIT(1),           /* MARKER INTERRUPT                   */
  178            %(LVL+1) * BIT(2),
  179            %(LVL+1) ININT BIT(1),            /* INITIATION INTERRUPT               */
  180            %(LVL+1) * BIT(1),
  181            %(LVL+1) IOM,                     /* IOM STATUS:                        */
  182              %(LVL+2) CHANNEL UBIN(3) UNAL,  /* CHANNEL-DETECTED                   */
  183              %(LVL+2) CENTRAL UBIN(3) UNAL,  /* CENTRAL-DETECTED                   */
  184            %(LVL+1) * BIT(6),
  185            %(LVL+1) RCR UBIN(6) UNAL,        /* RECORD COUNT RESIDUE               */
15:06 JUL 28 '97 NI_MACROS_C.:E05SI                                        6    
  186            %(LVL+1) NWA UBIN(18) UNAL,       /* NEXT WORD ADDRESS                  */
  187            %(LVL+1) NCP UBIN(3) UNAL,        /* NEXT CHAR POSITION                 */
  188            %(LVL+1) READFLG BIT(1),          /* READ/WRITE FLAG                    */
  189            %(LVL+1) TYPE BIT(2),             /* DCW TYPE                           */
  190            %(LVL+1) TALLYR UBIN(12) UNAL     /* TALLY RESIDUE                      */
  191      %IF LVL=1;
  192                                         ;
  193      DCL 1
  194      %ELSE;
  195                                         ,
  196        LVL
  197      %ENDIF;
  198            %(CHARTEXT(CONCAT('FLT',SUBSTR(TEXTCHAR(NAME),0,4)))) REDEF NAME, /* FAULT STATUS */
  199            %(LVL+1) PPMAJOR BIT(6),     /* PRESENCE, POWER OFF, AND MAJOR STATUS   */
  200            %(LVL+1) * BIT(3),
  201            %(LVL+1) CHAN UBIN(9) UNAL,       /* CHANNEL NUMBER                     */
  202            %(LVL+1) SRQ UBIN(3) UNAL,        /* SERVICE REQUEST CODE               */
  203            %(LVL+1) * BIT(5),
  204            %(LVL+1) SC UBIN(4) UNAL,         /* SYSTEM CONTROLLER FAULT            */
  205            %(LVL+1) IO UBIN(6) UNAL,         /* IOM FAULT                          */
  206            %(LVL+1) DCW BIT(36) ALIGNED      /* LAST DCW                           */
  207      %IF LVL=1;
  208                                        ;
  209      DCL 1
  210      %ELSE;
  211                                        ,
  212        LVL
  213      %ENDIF;
  214            %(CHARTEXT(CONCAT('SP',SUBSTR(TEXTCHAR(NAME),0,4)))) REDEF NAME, /* SPECIAL INTERRUPT STATUS */
  215            %(LVL+1) PRESENCE BIT(1) UNAL,    /* STATUS PRESENT INDICATOR           */
  216            %(LVL+1) * BIT(2) UNAL,
  217            %(LVL+1) CHAN UBIN(6) UNAL,       /* CHAN NUM;  VALID FOR IOM/IOP ONLY  */
  218            %(LVL+1) * BIT(3),
  219            %(LVL+1) DVN UBIN(6) UNAL,        /* DEVICE NUMBER                      */
  220            %(LVL+1) CODE,                    /* STATUS CODE                        */
  221              %(LVL+2) BYTE3 UBIN(9) UNAL,
  222              %(LVL+2) BYTE4 UBIN(9) UNAL,
15:06 JUL 28 '97 NI_MACROS_C.:E05SI                                        7    
  223            %(LVL+1) SPEC BIT(36) UNAL
  224      %IF LVL=1;
  225                           ;
  226      %ELSE;
  227                           ,
  228      %ENDIF;
  229      %MEND;
  230      /**/
  231      /* EXTENDED STATUS STRUCTURE */
  232      /**/
  233      %MACRO NI$EXTST (NAME=NI$EXTST,LVL=1,STCLASS=BASED,LAST=";");
  234      %LSET LISTDIR='0'B;
  235      %LSET LISTEXP='1'B;
  236      %LSET LISTSUB='1'B;
  237      %IF LVL=1;
  238      DCL 1 NAME STCLASS ALIGNED,
  239      %ELSE;
  240            LVL NAME ALIGNED,
  241      %ENDIF;
  242            %(LVL+1) EXTST ALIGNED,
  243              %(LVL+2) BITE(0:35) UBIN(8) UNAL,
  244            %(LVL+1) EXTSTT REDEF EXTST,
  245              %(LVL+2) WRD(0:7) UBIN ALIGNED,
  246            %(LVL+1) CRPEXTST REDEF EXTST,
  247              %(LVL+2) PSR BIT(8) UNAL,
  248              %(LVL+2) PER BIT(8) UNAL,
  249              %(LVL+2) MR BIT(8) UNAL,
  250              %(LVL+2) RSR BIT(8) UNAL,
  251              %(LVL+2) DS1 BIT(8) UNAL,
  252              %(LVL+2) DS2 BIT(8) UNAL,
  253              %(LVL+2) ENR BIT(8) UNAL,
  254              %(LVL+2) IFR BIT(8) UNAL,
  255              %(LVL+2) DCR BIT(8) UNAL,
  256              %(LVL+2) CWF BIT(16) UNAL,
  257              %(LVL+2) * BIT(20) UNAL,
  258              %(LVL+2) STBUF BIT(36) ALIGNED,
  259              %(LVL+2) * (0:8) BIT(8) UNAL,
15:06 JUL 28 '97 NI_MACROS_C.:E05SI                                        8    
  260              %(LVL+2) * (0:8) BIT(8) UNAL   /*ADD 2 WORDS TO EXTST IN THIS STRUCT */
  261      %IF LVL=1;
  262              ;
  263      %ELSE;
  264              LAST
  265      %ENDIF;
  266      %MEND;

