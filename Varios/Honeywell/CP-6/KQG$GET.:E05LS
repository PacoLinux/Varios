VERSION E05

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:1    
        1        1        /*M* KQG$GET TERMINAL read from COMGROUP */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         KQG$GET
       10       10             PURPOSE:      To provide COMGROUP READ functions for TERMINALs
       11       11             DESCRIPTION:  Contains all routines to implement read of COMGROUP
       12       12                           from TERMINALs.  Is the complement of KQP$PUT, which
       13       13                           handles comgroup writes from TERMINALs.
       14       14        */
       15       15        /*F* NAME:         KQG$GET
       16       16             PURPOSE:      To receive read from terminals
       17       17             DESCRIPTION:  Called passing the terminal's LDCT, and
       18       18                           a set of GET parameters called K$RWPARM.
       19       19                           This structure is used to communicate the
       20       20                           desired params for the GET, as well as the
       21       21                           results (if any).
       22       22
       23       23                           If the station already has an RBLK, then
       24       24                           if it represents a continued message, the
       25       25                           next chunk is passed to the reader (see
       26       26                           below for how), else the associated MBLK
       27       27                           is discarded since the message has already
       28       28                           been completely read.  Else (no RBLK), an
       29       29                           RBLK is obtained (ALTRET if none available).
       30       30
       31       31                           The RBLK is initialized with the desired
       32       32                           parameters from K$RWPARM.  Then the queue of
       33       33                           messages written directly to this station is
       34       34                           examined for a message which will satisfy the
       35       35                           read request.  If none are found, then if EOFNONE
       36       36                           was specified, an EOF error is returned, else the read is
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:2    
       37       37                           left pending and we return (we will be entered
       38       38                           at KQG$GOTMSG when an appropriate message
       39       39                           arrives).  Note that the anonymous queue is never
       40       40                           searched (corresponds to a DCB reading with
       41       41                           DIRONLY).  When a message is found, it is removed
       42       42                           from the station's queue, and pointed to by the
       43       43                           RBLK, whose state is set to XFIP (xfer in prog),
       44       44                           and then we dive into the GOTMSG logic.
       45       45
       46       46                           GOTMSG fetches the DBLK (locking it in core), and
       47       47                           fills an RWPARM with the message's parameters and
       48       48                           data memory address, and then calls KCD$WRITE.
       49       49                           This causes KQG$DONE to be called sometime later
       50       50                           when the terminal has received the message.
       51       51
       52       52                           If KCD$WRITE ALTRETs, it is usually because the
       53       53                           data was too large, in which case the read is
       54       54                           set to state 'COMP', and the data block unlocked.
       55       55                           This causes the next call to GET to pick up the
       56       56                           same message, since the station has an RBLK, and
       57       57                           it points to the message just refused.
       58       58
       59       59                           KCD$WRITE can return saying that KQG$DONE has
       60       60                           already been called, and another GET is to
       61       61                           be performed with the params of the current one.
       62       62                           In this case we just go back to the top of GET.
       63       63
       64       64                           KQG$DONE unlocks the data block and sets the RBLK
       65       65                           to point to the message's next data block chunk,
       66       66                           and the RBLK state to 'COMP'.
       67       67        */
       68       68        /**/
       69       69        KQG$GET: PROC (PAR,K$RWPARM) ALTRET;
       70       70        /**/
       71       71
       72       72
       73       73
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:3    
       74       74        /**/
       75       75        /* INCLUDES */
       76       76        /**/
       77       77        %INCLUDE KQ_SUBS_C;
       78      377        %INCLUDE KQ_MAC_C;
       79     2927        %INCLUDE HF_LOCK_C;
       80     2941        %INCLUDE KQ_DATA_R;
       81     3773        %INCLUDE SS_SCHED_C;
       82     4006        %INCLUDE N$REQ;
       83     4080        %INCLUDE NK_LDCT_R;
       84     4089        %INCLUDE NK$LDCT;
       85     4191        %INCLUDE K$RWPARM;
       86     4577        %INCLUDE KC$CP6V_C;
       87     4697        %INCLUDE KC_CP6;
       88     5257        %INCLUDE N_FC_C;
       89     5294        %INCLUDE CP_6_SUBS;
       90     5834
       91     5835
       92     5836
       93     5837        /**/
       94     5838        /* PARAMETERS */
       95     5839        /**/
       96     5840    1   DCL PAR UBIN PARAM;
       97     5841        %K$RWPARM (NAME=K$RWPARM);
       98     6157
       99     6158
      100     6159
      101     6160        /**/
      102     6161        /* BASED STRUCTURES */
      103     6162        /**/
      104     6163        %KQ_CG   (FPTN=KQ$CG  ,STCLASS="BASED(CG$)");
      105     6902        %KQ_STA  (FPTN=KQ$STA ,STCLASS="BASED(STA$)");
      106     7241        %KQ_MBLK (FPTN=KQ$MBLK,STCLASS="BASED(MBLK$)");
      107     7511        %KQ_THDR (FPTN=KQ$THDR,STCLASS=BASED);
      108     7549        %KQ_DBLK (FPTN=KQ$DBLK,STCLASS="BASED(DBLK$)");
      109     7602        %KQ_RBLK (FPTN=KQ$RBLK,STCLASS="BASED(RBLK$)",TERM=1);
      110     7788        %KQ_DFRPARM (FPTN=KQ$DFRPARM,STCLASS="BASED(DFRP$)");
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:4    
      111     7817        %NK$LDCT (NAME=N$LDCT,STCLASS=BASED);
      112     7863        %NK$LDCT (NAME=NK$LDCT,STCLASS="BASED(NK$LDCTAUTO$)");
      113     7909        %KQ_DFRBLK (FPTN=KQ$DFRBLK,STCLASS="BASED(DBLK$)");
      114     7959        %N$REQ (STCLASS=BASED);
      115     8017    1   DCL B$$KEY1 CHAR(KEY1L) BASED ALIGNED;
      116     8018    1   DCL B$$KEY2 CHAR(KEY2L) BASED ALIGNED;
      117     8019    1   DCL B$$PTR PTR BASED ALIGNED;
      118     8020    1   DCL B$$WORD UBIN WORD BASED ALIGNED;
      119     8021    1   DCL B$$SBIN SBIN WORD BASED ALIGNED;
      120     8022    1   DCL B$$CHAR CHAR(1) BASED CALIGNED;
      121     8023    1   DCL B$$HALF UBIN HALF BASED HALIGNED;
      122     8024
      123     8025
      124     8026
      125     8027        /**/
      126     8028        /* AUTO */
      127     8029        /**/
      128     8030    1   DCL NK$LDCTAUTO$ PTR;
      129     8031    1   DCL STA$ PTR;
      130     8032    1   DCL MBLK$ PTR;
      131     8033    1   DCL MBLK$R REDEF MBLK$ SBIN;
      132     8034    1   DCL CG$ PTR;
      133     8035    1   DCL DBLK$ PTR;
      134     8036    1   DCL DBLK$R REDEF DBLK$ UBIN;
      135     8037    1   DCL I UBIN;
      136     8038    1   DCL DDA UBIN;
      137     8039    1   DCL MTYP$ PTR;
      138     8040        %KQ_RBLK (FPTN=RBLK,STCLASS=AUTO);
      139     8226    1   DCL USERBLK UBIN;
      140     8227    1   DCL DOGET UBIN;
      141     8228    1   DCL MBSTAMP UBIN HALF UNAL;
      142     8229    1   DCL 1 MBSTAMPR REDEF MBSTAMP UNAL,
      143     8230    1         2 TOP UBIN(2) UNAL,
      144     8231    1         2 MID UBIN(8) UNAL,
      145     8232    1         2 BOT UBIN(8) UNAL;
      146     8233    1   DCL DFRP$ PTR;
      147     8234    1   DCL GOTDFR SBIN WORD;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:5    
      148     8235    1   DCL RBLK$ PTR;
      149     8236    1   DCL KEY1L UBIN;
      150     8237        %K$RWPARM (NAME=RWPARM,STCLASS=AUTO);
      151     8553    1   DCL KEY2L UBIN;
      152     8554    1   DCL P$ PTR;
      153     8555    1   DCL IOQ$ PTR;
      154     8556    1   DCL SETLOCK UBIN;
      155     8557    1   DCL KEY CHAR(8);
      156     8558    1   DCL J SBIN;
      157     8559    1   DCL 1 AUTOGATE DALIGNED,
      158     8560    1         2 LOCK UBIN,
      159     8561    1         2 *    UBIN;
      160     8562
      161     8563
      162     8564
      163     8565        /**/
      164     8566        /* REFS */
      165     8567        /**/
      166     8568    1   DCL KCD$WRITE     ENTRY(2) ALTRET;
      167     8569    1   DCL KQB$SRCH      ENTRY(3) ALTRET;
      168     8570    1   DCL KQD$DEFERGO   ENTRY(3) ALTRET;
      169     8571    1   DCL KQD$FETCH     ENTRY(3) ALTRET;
      170     8572    1   DCL KQD$DELETE    ENTRY(2) ALTRET;
      171     8573    1   DCL KQD$UNLOCK    ENTRY(2) ALTRET;
      172     8574    1   DCL KQL$DTFIND    ENTRY(2) ALTRET;
      173     8575    1   DCL KQL$INSERT    ENTRY(3) ALTRET;
      174     8576    1   DCL KQM$GETBD     ENTRY(3) ALTRET;
      175     8577    1   DCL KQM$GETBR     ENTRY(3) ALTRET;
      176     8578    1   DCL KQM$GETRBLKT  ENTRY(3) ALTRET;
      177     8579    1   DCL KQM$RELMBLK   ENTRY(2) ALTRET;
      178     8580    1   DCL KQM$RELRBLKT  ENTRY(2) ALTRET;
      179     8581    1   DCL KQP$FDISC     ENTRY(1) ALTRET;
      180     8582    1   DCL KQP$CDISC     ENTRY(1) ALTRET;
      181     8583    1   DCL KQP$UNLOCK    ENTRY(1) ALTRET;
      182     8584    1   DCL KQR$FDELAY    ENTRY(1) ALTRET;
      183     8585    1   DCL KQR$LOGERR    ENTRY(1) ALTRET;
      184     8586    1   DCL KQU$DELMSG    ENTRY(2) ALTRET;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:6    
      185     8587    1   DCL KQU$DELREAD   ENTRY(1) ALTRET;
      186     8588    1   DCL KQX$LDASR     ENTRY(1);
      187     8589    1   DCL KQZ$LOG       ENTRY(8) ALTRET;
      188     8590    1   DCL SSR$REG       ENTRY(3) ALTRET;
      189     8591    1   DCL SSR$RUE       ENTRY(4);
      190     8592    1   DCL SC_CGNOTIMP   ENTRY    CONV(2,0);
      191     8593    1   DCL SC_BCGGET     ENTRY    CONV(2,0);
      192     8594    1   DCL S_CUN UBIN WORD SYMREF;
      193     8595        %K$RWPARM (NAME=KC_CRWP,STCLASS=SYMREF);
      194     8911
      195     8912
      196     8913
      197     8914        /**/
      198     8915        /* SUBS */
      199     8916        /**/
      200     8917        %EQU_CG;
      201     8965        %SUB KQ$TTREE="CG$->KQ$CG.TTREE";
      202     8966        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:7    
      203     8967        /**/
      204     8968    1         NK$LDCTAUTO$ = ADDR(PAR);
      205     8969    1         CALL SETUPNS ALTRET(RTN);
      206     8970    1         RWPARM=K$RWPARM;
      207     8971    1         USERBLK=0;
      208     8972    1   GET0: ;
      209     8973    1         CG$->KQ$CG.STATS.GETS=CG$->KQ$CG.STATS.GETS+1;
      210     8974    1         IF KQ_LOG.TSIO THEN
      211     8975    1          CALL KQZ$LOG (CG$->KQ$CG,%KQLOG_GET,0,0,0,
      212     8976    1          SUBSTR(STA$->KQ$STA.BTN.KEY,0,4),
      213     8977    1          SUBSTR(STA$->KQ$STA.BTN.KEY,4,4));
      214     8978            /***********************************************
      215     8979             *                                             *
      216     8980             *        Start a GET.  See if he already      *
      217     8981             *        has an RBLK, & do right thing if so  *
      218     8982             *                                             *
      219     8983             ***********************************************/
      220     8984    2           DO INHIBIT;
      221     8985                %LOCK (G=STA$->KQ$STA.GATE);
      222     8988    2           STA$->KQ$STA.READS=STA$->KQ$STA.READS+1;
      223     8989    2           RBLK$=STA$->KQ$STA.RBLK$;
      224     8990    2           IF RBLK$ ~= ADDR(NIL) THEN
      225     8991    3             DO;
      226     8992    4               DO CASE (RBLK$->KQ$RBLK.STATE);
      227     8993    4                 CASE (ELSE);
      228     8994    4                   CALL SC_BCGGET;
      229     8995        /*S* SCREECH_CODE: KQG-S$BCGGET
      230     8996             TYPE:         SCREECH
      231     8997             MESSAGE:      Event-state conflict during GET from COMGROUP
      232     8998             REMARKS:      KQG$GET has been entered to start or continue
      233     8999                           a terminal GET to COMGROUP, and the state of
      234     9000                           that terminal's GET is not consistent with
      235     9001                           the way KQG$GET was entered.  Examples are
      236     9002                           KQG$GET being called while another GET is
      237     9003                           being processed.  One must examine how KQG$GET
      238     9004                           was called, and the current GET state, to determine
      239     9005                           what the inconsistency was and how it occurred. */
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:8    
      240     9006
      241     9007    4                 CASE (KQRS_XFIW#);
      242     9008    4                   GOTO NORBLKSU;
      243     9009
      244     9010    4                 CASE (KQRS_COMP#);
      245     9011    4                   IF RBLK$->KQ$RBLK.NCDDA ~= 0 THEN
      246     9012    5                     DO;
      247     9013    5                     MBLK$=RBLK$->KQ$RBLK.MBLK$;
      248     9014    5                     IF USERBLK = 0 THEN
      249     9015    6                       DO;
      250     9016    6                       KEY1L=RBLK$->KQ$RBLK.KEY1L;
      251     9017    6                       KEY2L=RBLK$->KQ$RBLK.KEY2L;
      252     9018    6                       IF CG$->KQ$CG.QISS THEN
      253     9019    7                         DO;
      254     9020    7                         IF ADDR(RWPARM.MSGTYP)->B$$KEY2 ~= ADDR(RBLK$->KQ$RBLK.KEY2)->
              9020                                  B$$KEY2
      255     9021    7                         OR ADDR(RWPARM.STATION)->B$$KEY1 ~= ADDR(RBLK$->KQ$RBLK.KEY1)
              9021                                  ->B$$KEY1 THEN
      256     9022    8                           DO;
      257     9023    8   REQUEUE:                ;
      258     9024    8                           RBLK$->KQ$RBLK.NCDDA=0;
      259     9025    8                           CALL KQL$INSERT (CG$->KQ$CG,STA$->KQ$STA.MLH,RBLK$->KQ$RBLK.
              9025                                    MBLK$);
      260     9026    8                           GOTO NEWRBLK;
      261     9027    8                           END;
      262     9028    7                         END;
      263     9029    6                       ELSE
      264     9030    6                        IF ADDR(RWPARM.MSGTYP)->B$$KEY1 ~= ADDR(RBLK$->KQ$RBLK.KEY1)->
              9030                                 B$$KEY1
      265     9031    6                        OR ADDR(RWPARM.STATION)->B$$KEY2 ~= ADDR(RBLK$->KQ$RBLK.KEY2)->
              9031                                 B$$KEY2 THEN
      266     9032    6                         GOTO REQUEUE;
      267     9033    6                       END;
      268     9034    5                     RBLK$->KQ$RBLK.STATE=KQRS_XFIP#;
      269     9035                          %UNLOCK (G=STA$->KQ$STA.GATE);
      270     9038    5                     GOTO GOTMSG1;
      271     9039    5                     END;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:9    
      272     9040    4                   CALL DUMPRD;
      273     9041    4               END;
      274     9042    3   NEWRBLK:  ;
      275     9043    3             RBLK$->KQ$RBLK=KQ_IRBLKT;
      276     9044    3             END;
      277     9045    2           ELSE
      278     9046    3             DO;
      279     9047    3             IF STA$->KQ$STA.MREQ ~= 0 THEN
      280     9048    3              IF STA$->KQ$STA.MREQ = KQMR_RBLKT# THEN GOTO NORBLKSU;
      281     9049    3              ELSE IF STA$->KQ$STA.MREQ = -KQMR_RBLKT# THEN
      282     9050    4                 DO;
      283     9051    4                 RBLK$=STA$->KQ$STA.MREQ$;
      284     9052    4                 STA$->KQ$STA.MREQ=0;
      285     9053    4                 IF RBLK$ ~= ADDR(NIL) THEN GOTO G4;
      286     9054                      %UNLOCK (G=STA$->KQ$STA.GATE);
      287     9057    4                 K$RWPARM.ERR=KQGE_QFUL#;
      288     9058    4                 ALTRETURN;
      289     9059    4                 END;
      290     9060                  %UNLOCK (G=STA$->KQ$STA.GATE);
      291     9063    3             CALL KQM$GETRBLKT (CG$->KQ$CG,RBLK$,I) ALTRET(G2);
      292     9064    3             GOTO G3;
      293     9065    3   G2:       IF STA$->KQ$STA.MREQ ~= 0 THEN GOTO NORBLKS;
      294     9066    3             RBLK$=STA$;
      295     9067    3             I=KQMR_RBLKT#;
      296     9068    3             CALL KQM$GETBD (CG$->KQ$CG,RBLK$,I) ALTRET(NORBLKS);
      297     9069    3   G3:       ;
      298     9070                  %LOCK (G=STA$->KQ$STA.GATE);
      299     9073    3   G4:       STA$->KQ$STA.RBLK$=RBLK$;
      300     9074    3             END;
      301     9075    2           END;
      302     9076        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:10   
      303     9077        /**/
      304     9078            /*********************************************
      305     9079             *                                           *
      306     9080             *        Fill in RBLK params                *
      307     9081             *                                           *
      308     9082             *********************************************/
      309     9083    1         RBLK$->KQ$RBLK.SECURE=CG$->KQ$CG.AUCTL.SECURE;
      310     9084    1         IF USERBLK = 0 THEN
      311     9085    1          IF K$RWPARM.RBLK$ ~= ADDR(NIL) THEN
      312     9086    2            DO;
      313     9087    2            RBLK$->KQ$RBLK.KEY1L=K$RWPARM.RBLK$->KQ$RBLK.KEY1L;
      314     9088    2            RBLK$->KQ$RBLK.KEY2L=K$RWPARM.RBLK$->KQ$RBLK.KEY2L;
      315     9089    2            RBLK$->KQ$RBLK.KEY1 =K$RWPARM.RBLK$->KQ$RBLK.KEY1;
      316     9090    2            RBLK$->KQ$RBLK.KEY2 =K$RWPARM.RBLK$->KQ$RBLK.KEY2;
      317     9091    2            END;
      318     9092    1          ELSE
      319     9093    2            DO;
      320     9094    2            RBLK$->KQ$RBLK.EOFNONE=RWPARM.EOFNONE;
      321     9095    2            RBLK$->KQ$RBLK.MID.PRIMARY=K$RWPARM.MSGID;
      322     9096    2            IF RWPARM.MSGTYP = ' ' THEN KEY1L=0;
      323     9097    2            ELSE
      324     9098    3              DO;
      325     9099    3              CALL INDEX (KEY1L,'?',RWPARM.MSGTYP);
      326     9100    3              ADDR(RBLK$->KQ$RBLK.KEY1)->B$$KEY1=ADDR(RWPARM.MSGTYP)->B$$KEY1;
      327     9101    3              RBLK$->KQ$RBLK.KEY1L=KEY1L;
      328     9102    3              END;
      329     9103    2            IF RWPARM.STATION = ' ' THEN KEY2L=0;
      330     9104    2            ELSE
      331     9105    3              DO;
      332     9106    3              CALL INDEX (KEY2L,'?',RWPARM.STATION);
      333     9107    3              ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2=ADDR(RWPARM.STATION)->B$$KEY2;
      334     9108    3              RBLK$->KQ$RBLK.KEY2L=KEY2L;
      335     9109    3              END;
      336     9110    2            IF CG$->KQ$CG.QISS THEN
      337     9111    3              DO;
      338     9112    3              KEY=RBLK$->KQ$RBLK.KEY1;
      339     9113    3              RBLK$->KQ$RBLK.KEY1=RBLK$->KQ$RBLK.KEY2;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:11   
      340     9114    3              RBLK$->KQ$RBLK.KEY1L=KEY2L;
      341     9115    3              RBLK$->KQ$RBLK.KEY2=KEY;
      342     9116    3              RBLK$->KQ$RBLK.KEY2L=KEY1L;
      343     9117    3              KEY2L=KEY1L;
      344     9118    3              KEY1L=RBLK$->KQ$RBLK.KEY1L;
      345     9119    3              END;
      346     9120    2            END;
      347     9121    1         ELSE
      348     9122    2           DO;
      349     9123    2           RBLK$->KQ$RBLK.EOFNONE=RBLK.EOFNONE;
      350     9124    2           RBLK$->KQ$RBLK.KEY1=RBLK.KEY1;
      351     9125    2           RBLK$->KQ$RBLK.KEY2=RBLK.KEY2;
      352     9126    2           RBLK$->KQ$RBLK.KEY1L=RBLK.KEY1L;
      353     9127    2           RBLK$->KQ$RBLK.KEY2L=RBLK.KEY2L;
      354     9128    2           END;
      355     9129        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:12   
      356     9130            /*********************************************
      357     9131             *                                           *
      358     9132             *         Search for a message              *
      359     9133             *                                           *
      360     9134             *********************************************/
      361     9135    1         CALL KQL$DTFIND (STA$->KQ$STA,MBLK$) ALTRET(GOTMSG0);
      362     9136    1         IF MBLK$R < 0 THEN GOTO GETOUT; /* Delayed find */
      363     9137                           /* Nothing found */
      364     9138    1         IF RBLK$->KQ$RBLK.ERR ~= 0 THEN
      365     9139    2           DO;
      366     9140    2           RWPARM.ERR=RBLK$->KQ$RBLK.ERR;
      367     9141    2           IF ADDR(K$RWPARM) ~= ADDR(NIL) THEN
      368     9142    2            K$RWPARM.ERR=RBLK$->KQ$RBLK.ERR;
      369     9143    2           RBLK$->KQ$RBLK.STATE=KQRS_COMP#;
      370     9144    2           CALL XITNL;
      371     9145    2           ALTRETURN;
      372     9146    2           END;
      373     9147    1         RBLK$->KQ$RBLK.STATE=KQRS_PEND#;
      374     9148    1   GETOUTNL:;
      375     9149    1         CALL XITNL;
      376     9150    1         RETURN;
      377     9151        /**/
      378     9152        /**/
      379     9153    1   NORBLKSU:;
      380     9154              %UNLOCK (G=STA$->KQ$STA.GATE);
      381     9157    1   NORBLKS:;
      382     9158                                /* Force him to try the GET later - used
      383     9159                                   when we need to delay a bit */
      384     9160    1         RWPARM.ERR=KQGE_NORBLK#;
      385     9161    1         IF ADDR(K$RWPARM) ~= ADDR(NIL) THEN
      386     9162    1          K$RWPARM.ERR=KQGE_NORBLK#;
      387     9163    1   ALTOUT:;
      388     9164    1         CALL XIT;
      389     9165    1   ALTRT:;
      390     9166    1         ALTRETURN;
      391     9167        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:13   
      392     9168        /**/
      393     9169        /*F* NAME:         KQG$GOTMWB
      394     9170             PURPOSE:      To satisfy a GET with a message from a writer's
      395     9171                           buffer
      396     9172             DESCRIPTION:  Called from KQW$WRITE when a write message can
      397     9173                           satisfy a pending GET.
      398     9174
      399     9175                           Entered with the MBLK pointed to by the GETting
      400     9176                           RBLK, the RBLK state set to KQRS_XFIP, and the
      401     9177                           GETting station's LOCKCNT bumped but the station
      402     9178                           gate unlocked.  IOQ$ in the RBLK points to the
      403     9179                           writer's IOQ packet.
      404     9180
      405     9181                           The writer is blocked (%SS_QA) until the write
      406     9182                           completes via KQG$GET.
      407     9183                           If the writer's buffer is bad, this is commun-
      408     9184                           icated by TYC in his REQ packet being set.  If
      409     9185                           PCW is called, the writer is unblocked and told
      410     9186                           to call KCD$WRITE.  All this communication is
      411     9187                           performed thru N$REQ.STATION.LSTA$.
      412     9188
      413     9189                           KQG$GOTMWB only ALTRETs if KCD$WRITE returns a
      414     9190                           size-too-big error.  In this case the MBLK has
      415     9191                           been moved back into the writing station block,
      416     9192                           and the writer simply dumps the message into the
      417     9193                           comgroup.
      418     9194        */
      419     9195    1   KQG$GOTMWB: ENTRY (PAR) ALTRET;
      420     9196        /**/
      421     9197    1         NK$LDCTAUTO$ = ADDR(PAR);
      422     9198    1         CALL ENTER;
      423     9199    1         IOQ$=RBLK$->KQ$RBLK.IOQ$;
      424     9200    1         ADDR(IOQ$->N$REQ.STATION.LSTA$)->B$$WORD=0;
      425     9201    1         GOTO GOTMSG0;
      426     9202        /**/
      427     9203        /**/
      428     9204        /*F* NAME:         KQG$GOTMSG
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:14   
      429     9205             PURPOSE:      To satisfy a GET with a message from the comgroup
      430     9206             DESCRIPTION:  Called from SENDMSG in KQW$WRITE when a message
      431     9207                           contained in DBLKs (as opposed to a writer's buffer)
      432     9208                           satisfies a pending GET.
      433     9209
      434     9210                           Entered with the MBLK pointed to by the GETting
      435     9211                           RBLK, RBLK.NCDDA set to MBLK.DDA,
      436     9212                           the RBLK state set to KQRS_XFIP, and
      437     9213                           the GETter's station unlocked; the GETting
      438     9214                           station has had its LOCKCNT incremented.
      439     9215
      440     9216                           Also called from KQL$LIST when a delayed MLH
      441     9217                           search finishes;
      442     9218        */
      443     9219    1   KQG$GOTMSG: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */
      444     9220        /**/
      445     9221    1         NK$LDCTAUTO$ = ADDR(PAR);
      446     9222    1         CALL ENTER;
      447     9223    1         GOTO GOTMSG;
      448     9224        /**/
      449     9225        /*F* NAME:        KQG$GOTMSGSTA
      450     9226             PURPOSE:     Finish up cleaning up '*' messages
      451     9227             DESCRIPTION: Called from KQL when we're cleaning up star messages and
      452     9228                          the terminal station's LDCT does not exist.  This can occur
      453     9229                          if the comgroup is being opened after system recovery or if
      454     9230                          the messages didn't get cleaned up before the comgroup was
      455     9231                          closed.
      456     9232        */
      457     9233    1   KQG$GOTMSGSTA: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */
      458     9234        /**/
      459     9235    1         STA$=ADDR(PAR);
      460     9236    1         CALL ENTERSTA;
      461     9237    1   GOTMSG:;
      462     9238    1         IF RBLK$->KQ$RBLK.RUNDOWN THEN
      463     9239    2           DO;
      464     9240    2           CALL KQP$UNLOCK (STA$->KQ$STA);
      465     9241                           /* Cleaning up '*' msgs */
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:15   
      466     9242    2           IF NOT CG$->KQ$CG.RCVR THEN GOTO CL15;
      467     9243    2           CALL SSR$RUE (%SS_UQA,RBLK$->KQ$RBLK.RUND.USR#);
      468     9244    2           RETURN;
      469     9245    2           END;
      470     9246    1         IOQ$=ADDR(NIL);
      471     9247    1   GOTMSG0:;
      472     9248    1         IF KQ_LOG.TSIO THEN
      473     9249    2           DO;
      474     9250    2           IF MBLK$~=ADDR(NIL) THEN
      475     9251    2            CALL KQZ$LOG (CG$->KQ$CG,%KQLOG_GETC,0,
      476     9252    2            MBLK$->KQ$MBLK.MID.PRIMARY,
      477     9253    2            ADDR(MBLK$->KQ$MBLK.MID.PRIMARY)->B$$HALF,
      478     9254    2            SUBSTR(STA$->KQ$STA.BTN.KEY,0,4),
      479     9255    2            SUBSTR(STA$->KQ$STA.BTN.KEY,4,4));
      480     9256    2           ELSE
      481     9257    2            CALL KQZ$LOG (CG$->KQ$CG,%KQLOG_GETC,0,
      482     9258    2            MBLK$,0,SUBSTR(STA$->KQ$STA.BTN.KEY,0,4),
      483     9259    2            SUBSTR(STA$->KQ$STA.BTN.KEY,4,4));
      484     9260    2           END;
      485     9261            /*********************************************
      486     9262             *                                           *
      487     9263             *         FETCH the data block              *
      488     9264             *                                           *
      489     9265             *********************************************/
      490     9266    1   GOTMSG1:;
      491     9267    1         IF MBLK$ ~= ADDR(NIL) THEN
      492     9268    1          IF MBLK$->KQ$MBLK.DDA ~= 0 THEN
      493     9269    2            DO;
      494     9270    2            DBLK$R=MBLK$->KQ$MBLK.STAMP;
      495     9271    2            DDA=RBLK$->KQ$RBLK.NCDDA;
      496     9272    2            CALL KQD$FETCH (CG$->KQ$CG,DBLK$,DDA) ALTRET(NOFETCH);
      497     9273    2   GOTMSG10:;
      498     9274    2            RBLK$->KQ$RBLK.DBLK$=DBLK$;
      499     9275    2            GOTO GOTMSG2;
      500     9276    2            END;
      501     9277    1         RBLK$->KQ$RBLK.DBLK$=ADDR(NIL);
      502     9278    1   GOTMSG2:;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:16   
      503     9279            /*********************************************
      504     9280             *                                           *
      505     9281             *        Fill in RWPARM for receiver        *
      506     9282             *                                           *
      507     9283             *********************************************/
      508     9284    1         IOQ$=RBLK$->KQ$RBLK.IOQ$;
      509     9285    1         IF MBLK$ = ADDR(NIL) THEN
      510     9286    2           DO;
      511     9287    2           RWPARM.ERR=RBLK$->KQ$RBLK.ERR;
      512     9288    2           RWPARM.MSG$=ADDR(NIL);
      513     9289    2           END;
      514     9290    1         ELSE
      515     9291    2           DO;
      516     9292    2           RWPARM.ERR        =0;
      517     9293    2           RWPARM.MSGID      =MBLK$->KQ$MBLK.MID.PRIMARY;
      518     9294    2           RWPARM.MSGIDXT    =BINBIT(MBLK$->KQ$MBLK.MID.XT,36);
      519     9295    2           RWPARM.DVE        =MBLK$->KQ$MBLK.DVE;
      520     9296    2           RWPARM.FC         =MBLK$->KQ$MBLK.FC;
      521     9297    2           IF  NOT MBLK$->KQ$MBLK.STAR
      522     9298    2           AND RBLK$->KQ$RBLK.SECURE THEN
      523     9299    3             DO;
      524     9300    3             RWPARM.DVE.DVBYTE.RRR='1'B;
      525     9301    3             MBSTAMP=MBLK$->KQ$MBLK.STAMP;
      526     9302    3             RWPARM.BLKREC.BLK#.B=MBSTAMPR.TOP;
      527     9303    3             RWPARM.BLKREC.REC#.T=MBSTAMPR.MID;
      528     9304    3             RWPARM.BLKREC.REC#.B=MBSTAMPR.BOT;
      529     9305    3             END;
      530     9306    2           ELSE RWPARM.DVE.DVBYTE.RRR='0'B;
      531     9307    2           DBLK$=RBLK$->KQ$RBLK.DBLK$;
      532     9308    2           IF DBLK$ = ADDR(NIL) THEN
      533     9309    3             DO;
      534     9310    3             IF IOQ$ = ADDR(NIL) THEN
      535     9311    4               DO;
      536     9312    4               RWPARM.MSGSZ=0;
      537     9313    4               RWPARM.MSG$=ADDR(KQ_IRBLK);
      538     9314    4               END;
      539     9315    3             ELSE
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:17   
      540     9316    4               DO;
      541     9317    4               IF NOT MBLK$->KQ$MBLK.DVE.DVBYTE & %DVBYTE_VFC# THEN
      542     9318    4                RWPARM.DVE.DVBYTE.VFC = '1'B;
      543     9319    4               RWPARM.DVE.VFC='A';
      544     9320    4               RWPARM.MSG$   =IOQ$->N$REQ.BUF$;
      545     9321    4               RWPARM.MSGSZ  =IOQ$->N$REQ.BUFSIZE;
      546     9322    4               END;
      547     9323    3             END;
      548     9324    2           ELSE
      549     9325    3             DO;
      550     9326    3             IF MBLK$->KQ$MBLK.DVE.DVBYTE&%DVBYTE_VFC# THEN
      551     9327    4               DO;
      552     9328    4               RWPARM.DVE.VFC=PINCRC(DBLK$,SIZEC(KQ$DBLK))->B$$CHAR;
      553     9329    4               RWPARM.MSG$   =PINCRC(DBLK$,SIZEC(KQ$DBLK)+1);
      554     9330    4               RWPARM.MSGSZ  =DBLK$->KQ$DBLK.DSIZE-1;
      555     9331    4               END;
      556     9332    3             ELSE
      557     9333    4               DO;
      558     9334    4               RWPARM.DVE.DVBYTE.VFC = '1'B;
      559     9335    4               RWPARM.DVE.VFC='A';
      560     9336    4               RWPARM.MSG$   =PINCRC(DBLK$,SIZEC(KQ$DBLK));
      561     9337    4               RWPARM.MSGSZ  =DBLK$->KQ$DBLK.DSIZE;
      562     9338    4               END;
      563     9339    3             IF DBLK$->KQ$DBLK.FLNKDA ~= 0 THEN
      564     9340    3              RWPARM.DVE.DVBYTE.CONT='1'B;
      565     9341    3             END;
      566     9342    2           IF CG$->KQ$CG.QISS THEN
      567     9343    3             DO;
      568     9344    3             RWPARM.STATION=MBLK$->KQ$MBLK.KEY1;
      569     9345    3             RWPARM.MSGTYP =MBLK$->KQ$MBLK.KEY2;
      570     9346    3             END;
      571     9347    2           ELSE
      572     9348    3             DO;
      573     9349    3             RWPARM.STATION=MBLK$->KQ$MBLK.KEY2;
      574     9350    3             RWPARM.MSGTYP =MBLK$->KQ$MBLK.KEY1;
      575     9351    3             END;
      576     9352    2           END;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:18   
      577     9353    1   GET1: ;
      578     9354            /*********************************************
      579     9355             *                                           *
      580     9356             *         Give message to KCD$WRITE         *
      581     9357             *                                           *
      582     9358             *********************************************/
      583     9359    1         RBLK$->KQ$RBLK.STATE=KQRS_XFIW#;
      584     9360    1         RBLK=RBLK$->KQ$RBLK;
      585     9361    1         AUTOGATE.LOCK = 1;
      586     9362              %LOCK(G=AUTOGATE);
      587     9365    1         CALL KCD$WRITE (NK$LDCT,RWPARM) ALTRET(WALT);
      588     9366              %UNLOCK(G=AUTOGATE);
      589     9369    1         IF IOQ$ ~= ADDR(NIL) THEN
      590     9370    2           DO;
      591     9371    2           CALL REG ALTRET(GETOUT);
      592     9372    3             DO CASE (ADDR(IOQ$->N$REQ.STATION.LSTA$)->B$$WORD);
      593     9373    3               CASE (ELSE);
      594     9374    3                 CALL SC_BCGGET;
      595     9375    3               CASE (1);
      596     9376    3               CASE (2); /* Another GET done underneath us */
      597     9377    3                 GOTO GETOUT;
      598     9378    3             END;
      599     9379    2           END;
      600     9380    2           DO INHIBIT;
      601     9381    2           IF STA$->KQ$STA.IDSC
      602     9382    2           OR RWPARM.ERR ~= 0 THEN
      603     9383    2            GOTO GETOUT;
      604     9384    2           IF IOQ$ ~= ADDR(NIL) THEN
      605     9385    3             DO;
      606     9386    3             RWPARM=KC_CRWP;
      607     9387    3             RWPARM.RBLK$=ADDR(RBLK);
      608     9388    3             CALL KQG$GET (NK$LDCT,RWPARM);
      609     9389    3             GOTO GETOUT;
      610     9390    3             END;
      611     9391    2   GET2:   ;
      612     9392    2           USERBLK=1;
      613     9393    2           GOTO GET0;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:19   
      614     9394    2           END;
      615     9395    1   WALT: ;
      616     9396              %UNLOCK(G=AUTOGATE);
      617     9399            /*********************************************
      618     9400             *                                           *
      619     9401             *         KCD$WRITE    ALTRETs              *
      620     9402             *                                           *
      621     9403             *********************************************/
      622     9404    1         IF STA$->KQ$STA.IDSC THEN GOTO GETOUT;
      623     9405    2           DO CASE (RWPARM.ERR);
      624     9406
      625     9407    2             CASE (ELSE);
      626     9408    2               CALL SC_BCGGET;
      627     9409
      628     9410    2             CASE (KQGE_DISC#);
      629     9411
      630     9412    2             CASE (KQGE_QCONT#);
      631     9413    2               RBLK$->KQ$RBLK.NCDDA=MBLK$->KQ$MBLK.DDA;
      632     9414    2               GOTO REQ;
      633     9415
      634     9416    2             CASE (KQGE_SZ2BIG#);
      635     9417    2   REQ:        ;
      636     9418    2               IF IOQ$ ~= ADDR(NIL) THEN
      637     9419    3                 DO;
      638     9420    3                 IF RBLK$->KQ$RBLK.MBLK$~=ADDR(NIL) THEN
      639     9421    3                  RBLK$->KQ$RBLK.MBLK$->KQ$MBLK.RBLK = '0'B;
      640     9422    3                 RBLK$->KQ$RBLK.MBLK$=ADDR(NIL);
      641     9423    3                 RBLK$->KQ$RBLK.STATE=KQRS_COMP#;
      642     9424    3                 GOTO ALTOUT;
      643     9425    3                 END;
      644     9426    2               DBLK$=RBLK$->KQ$RBLK.DBLK$;
      645     9427    2               RBLK$->KQ$RBLK.DBLK$=ADDR(NIL);
      646     9428    2               IF DBLK$ ~= ADDR(NIL) THEN
      647     9429    2                CALL KQD$UNLOCK (CG$->KQ$CG,DBLK$);
      648     9430    2               RBLK$->KQ$RBLK.STATE=KQRS_COMP#;
      649     9431
      650     9432    2             CASE (KQGE_PCW#,KQGE_DLTR#);
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:20   
      651     9433    2               IF IOQ$ ~= ADDR(NIL) THEN
      652     9434    3                 DO;
      653     9435    3                 CALL REG ALTRET(GETOUT);
      654     9436    4                   DO CASE (ADDR(IOQ$->N$REQ.STATION.LSTA$)->B$$WORD);
      655     9437    4                     CASE (ELSE);
      656     9438    4                       CALL SC_BCGGET;
      657     9439    4                     CASE (1,2); /* DONE was called */
      658     9440    4                     CASE (3);
      659     9441    4                       ADDR(IOQ$->N$REQ.STATION.LSTA$)->B$$WORD=0;
      660     9442    4                       GOTO GET1; /* PCW was called */
      661     9443    4                   END;
      662     9444    3                 END;
      663     9445
      664     9446    2             CASE (KQGE_NVGT#);
      665     9447    2               IF IOQ$ ~= ADDR(NIL) THEN
      666     9448    3                 DO;
      667     9449    3                 CALL SSR$REG (%SS_SL,,1);
      668     9450    3                 IF STA$->KQ$STA.IDSC THEN
      669     9451    3                  GOTO GETOUT;
      670     9452    3                 GOTO GET1;
      671     9453    3                 END;
      672     9454    2               RBLK$->KQ$RBLK.STATE=KQRS_NVGT#;
      673     9455                    %LOCK (G=STA$->KQ$STA.GATE);
      674     9458    2               STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT+1;
      675     9459                    %UNLOCK (G=STA$->KQ$STA.GATE);
      676     9462                    %LOCK (G=CG$->KQ$CG.GATE.CG);
      677     9465    2               MBLK$->KQ$MBLK.DGVGLNK$=CG$->KQ$CG.DGVGHD$;
      678     9466    2               CG$->KQ$CG.DGVGHD$=STA$;
      679     9467                    %UNLOCK (G=CG$->KQ$CG.GATE.CG);
      680     9470
      681     9471    2           END; /*CASE RWPARM.ERR*/
      682     9472
      683     9473    1         GOTO GETOUT;
      684     9474    1   NOFETCH:;
      685     9475            /*********************************************
      686     9476             *                                           *
      687     9477             *         Cannot FETCH the DBLK             *
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:21   
      688     9478             *                                           *
      689     9479             *********************************************/
      690     9480    1         IF DBLK$ ~= ADDR(NIL) THEN
      691     9481    2           DO;      /* Got a DEFER block */
      692     9482    2           IF SETLOCK = 0 THEN
      693     9483    3             DO;
      694     9484                  %LOCK (G=STA$->KQ$STA.GATE);
      695     9487    3             STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT+1;
      696     9488                  %UNLOCK (G=STA$->KQ$STA.GATE);
      697     9491    3             END;
      698     9492    2           DBLK$->KQ$DFRBLK.INFO$=STA$;
      699     9493    2           CALL KQD$DEFERGO (CG$->KQ$CG,DBLK$,ENTADDR(KQG$FCONT));
      700     9494    2           RETURN;
      701     9495    2           END;
      702     9496        /**/
      703     9497        /**/
      704     9498    1         IF DDA = %KQDE_NDFRBLK THEN
      705     9499    2   NDFR:   DO; /* No defer blocks available right now */
      706     9500    2           IF GOTDFR = 0 THEN
      707     9501    3             DO;
      708     9502    3             RBLK$->KQ$RBLK.STATE=KQRS_COMP#;
      709     9503    3             GOTO NORBLKS;
      710     9504    3             END;
      711     9505    2           CALL KQR$FDELAY (STA$->KQ$STA);
      712     9506    2           GOTO GETOUT;
      713     9507    2           END NDFR;
      714     9508        /**/
      715     9509        /**/
      716     9510                      /* Some other error */
      717     9511    1   NOFETCH1:;
      718     9512    2           DO CASE (DDA);
      719     9513
      720     9514    2             CASE (%KQDE_STMP,%KQDE_STATE,%KQDE_BDDA,%KQDE_IOERR);
      721     9515    2               CALL KQR$LOGERR (STA$->KQ$STA);
      722     9516    2               RBLK=RBLK$->KQ$RBLK;
      723     9517    2               RBLK$->KQ$RBLK.STATE=KQRS_COMP#;
      724     9518    2               RBLK$->KQ$RBLK.NCDDA=0;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:22   
      725     9519    2               RBLK$->KQ$RBLK.SECURE='0'B;
      726     9520    2               GOTO GET2;
      727     9521
      728     9522    2             CASE (ELSE);
      729     9523    2               CALL SC_CGNOTIMP;
      730     9524
      731     9525    2           END;
      732     9526        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:23   
      733     9527        /**/
      734     9528        /*F* NAME:         KQG$FCONT
      735     9529             PURPOSE:      To continue a GET after a deferred FETCH
      736     9530             CALL:         KQG$FCONT (KQ$DFRPARM);
      737     9531             DESCRIPTION:  The defer params contain the station pointer,
      738     9532                           and the results of the FETCH.  Their pointer
      739     9533                           is stuffed into the station's RBLK, and we
      740     9534                           fall into KQG$FCONT1.
      741     9535        */
      742     9536    1   KQG$FCONT: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */
      743     9537        /**/
      744     9538    1         STA$=ADDR(PAR)->KQ$DFRPARM.INFO$;
      745     9539    1         RBLK$=STA$->KQ$STA.RBLK$;
      746     9540    1         IF RBLK$->KQ$RBLK.STATE ~= KQRS_XFIP# THEN CALL SC_BCGGET;
      747     9541    1         RBLK$->KQ$RBLK.DFRP$=ADDR(PAR);
      748     9542        /* NK$LDCTAUTO$ needs to be set up */
      749     9543    1         NK$LDCTAUTO$ = STA$->KQ$STA.LDCT$ ;
      750     9544        /**/
      751     9545        /*F* NAME:         KQG$FCONT1
      752     9546             PURPOSE:      To continue a GET after a deferred FETCH
      753     9547             DESCRIPTION:  The RBLK DFRP$ points to the KQ$DFRPARM.
      754     9548
      755     9549                           The GET continues.
      756     9550        */
      757     9551    1         CALL ENTER;
      758     9552    1         DFRP$=RBLK$->KQ$RBLK.DFRP$;
      759     9553    1         DBLK$=DFRP$->KQ$DFRPARM.DBLK$;
      760     9554    1         RBLK$->KQ$RBLK.DBLK$=DBLK$;
      761     9555    1         IF DBLK$ = ADDR(NIL) THEN
      762     9556    2           DO;
      763     9557    2           DDA=DFRP$->KQ$DFRPARM.ERR;
      764     9558    2           GOTO NOFETCH1;
      765     9559    2           END;
      766     9560    1         GOTO GOTMSG2;
      767     9561        /**/
      768     9562        /*F* NAME:         KQG$PCW
      769     9563             PURPOSE:      To call KCD$WRITE when it couldn't do its job
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:24   
      770     9564             DESCRIPTION:  If KCD$WRITE cannot complete its function, then
      771     9565                           it ALTRETs with error code KQGE_PCW#, and causes
      772     9566                           KQG$PCW to be called later.  This simply results
      773     9567                           in KCD$WRITE being called again.
      774     9568        */
      775     9569    1   KQG$PCW: ENTRY (PAR) ALTRET;
      776     9570        /**/
      777     9571    1         NK$LDCTAUTO$ = ADDR(PAR);
      778     9572    1         CALL SETUP ALTRET(RTN);
      779     9573    1         IF RBLK$->KQ$RBLK.STATE ~= KQRS_XFIW# THEN CALL SC_BCGGET;
      780     9574    1         IF RBLK$->KQ$RBLK.IOQ$ ~= ADDR(NIL) THEN
      781     9575    2           DO;
      782     9576    2           CALL UNREG(3);
      783     9577    2           GOTO GETOUT;
      784     9578    2           END;
      785     9579    1         MBLK$=RBLK$->KQ$RBLK.MBLK$;
      786     9580    1         GOTO GOTMSG2;
      787     9581        /**/
      788     9582        /*F* NAME:         KQG$DFETCH
      789     9583             PURPOSE:      To continue a GET by re-trying a FETCH which
      790     9584                           failed due to no defer blocks.
      791     9585             DESCRIPTION:  Called from KCC$CLOCK.
      792     9586        */
      793     9587    1   KQG$DFETCH: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */
      794     9588        /**/
      795     9589    1         NK$LDCTAUTO$ = ADDR(PAR);
      796     9590    1         CALL ENTER;
      797     9591    1         IF RBLK$->KQ$RBLK.STATE ~= KQRS_NFET# THEN CALL SC_BCGGET;
      798     9592    1         RBLK$->KQ$RBLK.STATE=KQRS_XFIP#;
      799     9593    1         GOTO GOTMSG1;
      800     9594        /**/
      801     9595        /*F* NAME:         KQG$DVGET
      802     9596             PURPOSE:      To continue a GET by re-trying a VGET which
      803     9597                           failed due to a full FEP WSQ.
      804     9598             DESCRIPTION:  Called from KCC$CLOCK.
      805     9599        */
      806     9600    1   KQG$DVGET: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:25   
      807     9601        /**/
      808     9602    1         NK$LDCTAUTO$ = ADDR(PAR);
      809     9603    1         CALL ENTER;
      810     9604    1         IF RBLK$->KQ$RBLK.STATE ~= KQRS_NVGT# THEN CALL SC_BCGGET;
      811     9605    1         GOTO GOTMSG2;
      812     9606        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:26   
      813     9607        /**/
      814     9608        /*F* NAME:         KQG$DONE
      815     9609             PURPOSE:      To finish a GET
      816     9610             DESCRIPTION:  Called when the msg passed to KCD$WRITE has
      817     9611                           been sent to the TERMINAL.
      818     9612        */
      819     9613    1   KQG$DONE: ENTRY (PAR,K$RWPARM) ALTRET;
      820     9614        /**/
      821     9615    1         NK$LDCTAUTO$ = ADDR(PAR);
      822     9616    1         CALL SETUP ALTRET(RTN);
      823     9617    1         DOGET=0;
      824     9618    1   DONE: ;
      825     9619    1         IF RBLK$->KQ$RBLK.STATE = KQRS_XFIW# THEN
      826     9620    2           DO;
      827     9621    2           IF RBLK$->KQ$RBLK.IOQ$ ~= ADDR(NIL) THEN
      828     9622    3             DO;
      829     9623    3             RBLK$->KQ$RBLK.IOQ$->N$REQ.TYC=K$RWPARM.TYC;
      830     9624    3             CALL UNREG (DOGET+1);
      831     9625    3             END;
      832     9626    2           ELSE
      833     9627    2            IF RBLK$->KQ$RBLK.DBLK$ ~= ADDR(NIL) THEN
      834     9628    3              DO;
      835     9629    3              DBLK$=RBLK$->KQ$RBLK.DBLK$;
      836     9630    3              RBLK$->KQ$RBLK.DBLK$=ADDR(NIL);
      837     9631    3              RBLK$->KQ$RBLK.NCDDA=DBLK$->KQ$DBLK.FLNKDA;
      838     9632    3              CALL KQD$UNLOCK (CG$->KQ$CG,DBLK$);
      839     9633    3              END;
      840     9634    2           RBLK$->KQ$RBLK.STATE=KQRS_COMP#;
      841     9635    2           END;
      842     9636    1         ELSE IF RBLK$->KQ$RBLK.STATE ~= KQRS_COMP# THEN RETURN;
      843     9637    1         IF DOGET ~= 0 THEN GOTO GET2;
      844     9638    1   GETOUT:;
      845     9639    1         CALL XIT;
      846     9640    1   RTN:  ;
      847     9641    1         RETURN;
      848     9642        /**/
      849     9643        /*F* NAME:         KQG$COMP
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:27   
      850     9644             PURPOSE:      To complete a secure GET
      851     9645             DESCRIPTION:  If the comgroup is SECURE, then a GETed message
      852     9646                           is not deleted until KQG$COMP is called.  This
      853     9647                           occurs after KQG$DONE is called, and when the
      854     9648                           data is guaranteed to have been output.
      855     9649
      856     9650                           Unless the comgroup is running forms, COMPing a
      857     9651                           msg causes all unCOMPed msgs xmitted prior to the
      858     9652                           COMPed one to be put back in the queue (assumption
      859     9653                           being they will never be COMPed).
      860     9654
      861     9655                           The message identified by K$RWPARM.BLKREC is
      862     9656                           found and deleted.
      863     9657        */
      864     9658    1   KQG$COMP: ENTRY (PAR,K$RWPARM) ALTRET; /* !!Doesn't ALTRET!! */
      865     9659        /**/
      866     9660    1         NK$LDCTAUTO$ = ADDR(PAR);
      867     9661    1         CALL SETUPNS ALTRET(RTN);
      868     9662    1         MBSTAMPR.TOP=K$RWPARM.BLKREC.BLK#.B;
      869     9663    1         MBSTAMPR.MID=K$RWPARM.BLKREC.REC#.T;
      870     9664    1         MBSTAMPR.BOT=K$RWPARM.BLKREC.REC#.B;
      871     9665              %LOCK (G=STA$->KQ$STA.GATE);
      872     9668    1         P$=ADDR(STA$->KQ$STA.SGHD$);
      873     9669    1         MBLK$=P$->B$$PTR;
      874     9670    2           DO WHILE (MBLK$ ~= ADDR(NIL));
      875     9671    2           IF MBSTAMP = MBLK$->KQ$MBLK.STAMP THEN
      876     9672    3             DO INHIBIT;
      877     9673    3             P$->B$$PTR=MBLK$->KQ$MBLK.LNK$;
      878     9674    3             CALL KQU$DELMSG (CG$->KQ$CG,MBLK$->KQ$MBLK);
      879     9675    3             GOTO GETOUTNL;
      880     9676    3             END;
      881     9677    2           P$=ADDR(MBLK$->KQ$MBLK.LNK$);
      882     9678    2           MBLK$=P$->B$$PTR;
      883     9679    2           END;
      884     9680    1         RBLK$=STA$->KQ$STA.RBLK$;
      885     9681    1         IF RBLK$ ~= ADDR(NIL) THEN
      886     9682    1          IF RBLK$->KQ$RBLK.SECURE THEN
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:28   
      887     9683    1           IF RBLK$->KQ$RBLK.MBLK$ ~= ADDR(NIL) THEN
      888     9684    1            IF MBSTAMP = RBLK$->KQ$RBLK.MBLK$->KQ$MBLK.STAMP THEN
      889     9685    1             IF RBLK$->KQ$RBLK.NCDDA = 0 THEN
      890     9686    2              IF RBLK$->KQ$RBLK.STATE = KQRS_COMP# THEN DO;
      891     9687    2                RBLK$->KQ$RBLK.NCDDA=RBLK$->KQ$RBLK.MBLK$->KQ$MBLK.DDA;
      892     9688    2                CALL KQU$DELREAD (STA$->KQ$STA);
      893     9689    2                END;
      894     9690    1              ELSE RBLK$->KQ$RBLK.COMP='1'B;
      895     9691    1         GOTO GETOUTNL;
      896     9692        /**/
      897     9693        /*F* NAME:         KQG$CANCEL
      898     9694             PURPOSE:      To cancel a pending GET
      899     9695             DESCRIPTION:  ALTRETs unless a GET is pending.  Else cancels
      900     9696                           it, decrements STA.READS, and RETURNs.
      901     9697        */
      902     9698    1   KQG$CANCEL: ENTRY (PAR) ALTRET;
      903     9699        /**/
      904     9700    1         NK$LDCTAUTO$ = ADDR(PAR);
      905     9701    1         CALL SETUP ALTRET(ALTRT);
      906     9702              %LOCK (G=STA$->KQ$STA.GATE);
      907     9705    1         IF RBLK$ = ADDR(NIL)
      908     9706    1         OR RBLK$->KQ$RBLK.STATE = KQRS_COMP#
      909     9707    2         THEN DO;
      910     9708    2           CALL XITNL;
      911     9709    2           RETURN;
      912     9710    2           END;
      913     9711    1         IF RBLK$->KQ$RBLK.STATE ~= KQRS_PEND#
      914     9712    2         THEN DO;
      915     9713    2           CALL XITNL;
      916     9714    2           ALTRETURN;
      917     9715    2           END;
      918     9716    1         RBLK$->KQ$RBLK.STATE=KQRS_COMP#;
      919     9717    1         STA$->KQ$STA.READS=STA$->KQ$STA.READS-1;
      920     9718    1         IF RBLK$->KQ$RBLK.MBLK$ ~= ADDR(NIL) THEN CALL SC_BCGGET;
      921     9719    1         RBLK$->KQ$RBLK.NCDDA=0;
      922     9720    1         GOTO GETOUTNL;
      923     9721        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:29   
      924     9722        /**/
      925     9723        /*F* NAME:         KQG$CLEANUP
      926     9724             PURPOSE:      To clean up GETs during a disconnect
      927     9725             DESCRIPTION:  Called from KQP$FDISC to run down GETs.
      928     9726                           Sets DSID to infinity.
      929     9727                           Also deletes '*' msgs if required.
      930     9728                           Station block locked when called; unlocked
      931     9729                           upon return.
      932     9730                           Station LOCKCNT counted up on entry;
      933     9731                           not counted down.
      934     9732
      935     9733                           If a delay is required, ALTRETs and calls back
      936     9734                           to KQP$CDISC when finished, with station gate
      937     9735                           unlocked.
      938     9736        */
      939     9737    1   KQG$CLEANUP: ENTRY (PAR) ALTRET;
      940     9738        /**/
      941     9739    1         NK$LDCTAUTO$ = ADDR(PAR);
      942     9740    1         STA$=NK$LDCT.STA$;
      943     9741    1         CG$=NK$LDCT.CG$;
      944     9742    1   CLEANUP:;
      945     9743    1         SETLOCK=0;
      946     9744    1         STA$->KQ$STA.DSID=BITBIN('777777777777'O);
      947     9745    1         RBLK$=STA$->KQ$STA.RBLK$;
      948     9746    1         IF RBLK$ ~= ADDR(NIL) THEN
      949     9747    2           DO CASE (RBLK$->KQ$RBLK.STATE);
      950     9748
      951     9749    2             CASE (KQRS_PEND#,KQRS_RSIP#);
      952     9750    2   RELRBLKT:   ;
      953     9751    2               STA$->KQ$STA.RBLK$=ADDR(NIL);
      954     9752    2               CALL KQM$RELRBLKT (CG$->KQ$CG,RBLK$);
      955     9753
      956     9754    2             CASE (KQRS_COMP#,KQRS_XFIP#,KQRS_NFET#);
      957     9755    2   CL1:        ;
      958     9756    2               CALL DUMPRD;
      959     9757    2               GOTO RELRBLKT;
      960     9758
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:30   
      961     9759    2             CASE (KQRS_XFIW#,KQRS_NVGT#);
      962     9760    2               IF RBLK$->KQ$RBLK.DBLK$ ~= ADDR(NIL) THEN
      963     9761    2                CALL KQD$UNLOCK (CG$->KQ$CG,RBLK$->KQ$RBLK.DBLK$);
      964     9762    2               GOTO CL1;
      965     9763
      966     9764    2             CASE (ELSE);
      967     9765    2               CALL SC_BCGGET;
      968     9766
      969     9767    2           END; /*CASE RBLK$->KQ$RBLK.STATE*/
      970     9768        /**/
      971     9769                                /* Merge secure GETs back in */
      972     9770    1         CALL MERGE (STA$->KQ$STA.SGHD$);
      973     9771              %UNLOCK (G=STA$->KQ$STA.GATE);
      974     9774    1         IF  NOT STA$->KQ$STA.STARSDUN
      975     9775    1         AND CG$->KQ$CG.AUCTL.SMD THEN
      976     9776    2           DO;
      977     9777                     /*    Get rid of '*' messages by reading for them.
      978     9778                      *    Since DSID is infinite, they will be discarded
      979     9779                      *    automatically.  If
      980     9780                      *    this is recovery, the user is blocked
      981     9781                      *    across the process.  Otherwise (disc)
      982     9782                      *    we may have to ALTRET & call KQP$CDISC
      983     9783                      *    back when we're done.
      984     9784                      *
      985     9785                      *    Note that if people try to write
      986     9786                      *    to us while we're doing this,
      987     9787                      *    then if they're writing star
      988     9788                      *    messages, DSID will cause the
      989     9789                      *    msgs to get deleted; else
      990     9790                      *    they won't satisfy our read
      991     9791                      *    (which explicitly asks for
      992     9792                      *    *), and will just insert into
      993     9793                      *    the MLH which is perfectly OK.
      994     9794                      */
      995     9795    2           CALL KQM$GETRBLKT (CG$->KQ$CG,RBLK$,I) ALTRET(CL40);
      996     9796    2   CL2:    ;
      997     9797    2           STA$->KQ$STA.RBLK$=RBLK$;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:31   
      998     9798    2           IF CG$->KQ$CG.QISS THEN
      999     9799    3             DO;
     1000     9800    3             RBLK$->KQ$RBLK.KEY1L=0;
     1001     9801    3             RBLK$->KQ$RBLK.KEY2L=1;
     1002     9802    3             RBLK$->KQ$RBLK.KEY2='*';
     1003     9803    3             END;
     1004     9804    2           ELSE
     1005     9805    3             DO;
     1006     9806    3             RBLK$->KQ$RBLK.KEY1L=1;
     1007     9807    3             RBLK$->KQ$RBLK.KEY1='*';
     1008     9808    3             RBLK$->KQ$RBLK.KEY2L=0;
     1009     9809    3             END;
     1010     9810    2           RBLK$->KQ$RBLK.RUNDOWN='1'B;
     1011     9811    2           RBLK$->KQ$RBLK.EOFNONE='1'B;
     1012     9812    2           RBLK$->KQ$RBLK.RUND.USR#=S_CUN;
     1013     9813    2   CL10:   ;
     1014     9814                %LOCK (G=STA$->KQ$STA.GATE);
     1015     9817    2           RBLK$->KQ$RBLK.STATE=KQRS_RSIP#;
     1016     9818    2           CALL KQL$DTFIND (STA$->KQ$STA,MBLK$) ALTRET(CL20);
     1017     9819    2           IF MBLK$R = 0 THEN
     1018     9820    3             DO;
     1019     9821                  %UNLOCK (G=STA$->KQ$STA.GATE);
     1020     9824    3   CL12:     STA$->KQ$STA.RBLK$=ADDR(NIL);
     1021     9825    3             STA$->KQ$STA.STARSDUN='1'B;
     1022     9826    3             CALL KQM$RELRBLKT (CG$->KQ$CG,RBLK$);
     1023     9827    3             IF SETLOCK = 0 THEN RETURN; /* No delay, or REGed */
     1024     9828    3             CALL KQP$CDISC (NK$LDCT);
     1025     9829    3             RETURN;
     1026     9830    3             END;
     1027     9831    2           IF NOT CG$->KQ$CG.RCVR THEN GOTO ALTOUT;
     1028     9832    2           CALL SSR$REG (%SS_QA);
     1029     9833    2   CL15:   IF RBLK$->KQ$RBLK.ERR = 0 THEN    /* expect it to be KQGE_EOF# */
     1030     9834    3             DO;
     1031     9835    3   CL20:     CALL SC_BCGGET;
     1032     9836    3             GOTO CL40;
     1033     9837    3             END;
     1034     9838    2           GOTO CL12;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:32   
     1035     9839    2           END;
     1036     9840                     /*    If no RBLK is available,
     1037     9841                      *    return.  This is OK since
     1038     9842                      *    the worst result of this
     1039     9843                      *    is leaving a bunch of *
     1040     9844                      *    messages around which will
     1041     9845                      *    take up space & maybe have
     1042     9846                      *    to be garbage-collected.
     1043     9847                      *
     1044     9848                      *    CAUSES PROBLEMS - KQ$STA.LDCT$ is NIL at open time
     1045     9849                      *       when CLEANUP is called - deletion of star messages
     1046     9850                      *       will cause screech if we must delay and call KQG$GOTMSG
     1047     9851                      */
     1048     9852    1   CL40: GOTO GETOUT;
     1049     9853        /**/
     1050     9854        /*F* NAME:         KQG$RECOVER
     1051     9855             PURPOSE:      To clean up GETs for a terminal station when
     1052     9856                           a comgroup is being opened after being closed
     1053     9857                           by RECOVER.
     1054     9858             CALL:         KQG$RECOVER(KQ$STA);
     1055     9859             DESCRIPTION:  The current GET is cleaned up just as in
     1056     9860                           KQG$CLEANUP
     1057     9861        */
     1058     9862    1   KQG$RECOVER: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */
     1059     9863        /**/
     1060     9864    1         STA$=ADDR(PAR);
     1061     9865    1         CG$=STA$->KQ$STA.CG$;
     1062     9866              %LOCK (G=STA$->KQ$STA.GATE);
     1063     9869    1         GOTO CLEANUP;
     1064     9870        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:33   
     1065     9871        /**/
     1066     9872        /*F* NAME:         KQG$DACT
     1067     9873             PURPOSE:      To process deactivation of a TERMINAL
     1068     9874             DESCRIPTION:  Called when a TERMINAL is being deactivated.
     1069     9875                           Cancels the outstanding GET if any.
     1070     9876        */
     1071     9877    1   KQG$DACT: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */
     1072     9878        /**/
     1073     9879    1         NK$LDCTAUTO$ = ADDR(PAR);
     1074     9880    1         CALL SETUP ALTRET(RTN);
     1075     9881              %LOCK (G=STA$->KQ$STA.GATE);
     1076     9884    1         IF RBLK$ ~= ADDR(NIL) THEN
     1077     9885    1          IF RBLK$->KQ$RBLK.STATE = KQRS_PEND# THEN
     1078     9886    2            DO INHIBIT;
     1079     9887    2            STA$->KQ$STA.RBLK$=ADDR(NIL);
     1080     9888    2            CALL KQM$RELRBLKT (CG$->KQ$CG,RBLK$);
     1081     9889    2            END;
     1082     9890    1         GOTO GETOUTNL;
     1083     9891        /**/
     1084     9892        /*F* NAME:         KQG$TRUNC
     1085     9893             PURPOSE:      To 'trunc' a TERM's RBLK & MBLK
     1086     9894             CALL:         KQG$TRUNC (KQ$STA)
     1087     9895             INPUT:        Station gate locked
     1088     9896             DESCRIPTION:  Releases any stagnant RBLK, MBLK
     1089     9897                           Does not unlock gate
     1090     9898        */
     1091     9899    1   KQG$TRUNC: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */
     1092     9900        /**/
     1093     9901    1         STA$=ADDR(PAR);
     1094     9902    1         CG$=STA$->KQ$STA.CG$;
     1095     9903    1         RBLK$=STA$->KQ$STA.RBLK$;
     1096     9904    1         IF RBLK$ ~= ADDR(NIL) THEN
     1097     9905    1          IF  RBLK$->KQ$RBLK.STATE = KQRS_COMP#
     1098     9906    1          AND RBLK$->KQ$RBLK.NCDDA = 0 THEN
     1099     9907    2            DO INHIBIT;
     1100     9908    2            CALL DUMPRD;
     1101     9909    2            STA$->KQ$STA.RBLK$=ADDR(NIL);
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:34   
     1102     9910    2            CALL KQM$RELRBLKT (CG$->KQ$CG,RBLK$);
     1103     9911    2            END;
     1104     9912    1         RETURN;
     1105     9913        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:35   
     1106     9914        /**/
     1107     9915        /*********************************************************************************
     1108     9916        *                                                                                *
     1109     9917        *   SSS   U   U  BBBB   RRRR    OOO   U   U  TTTTT   III   N   N  EEEEE   SSS    *
     1110     9918        *  S   S  U   U  B   B  R   R  O O O  U   U    T      I    N   N  E      S   S   *
     1111     9919        *  S      U   U  B   B  R   R  O O O  U   U    T      I    NN  N  E      S       *
     1112     9920        *   SSS   U   U  BBBB   RRRR   O  OO  U   U    T      I    N N N  EEEE    SSS    *
     1113     9921        *      S  U   U  B   B  R R    O   O  U   U    T      I    N  NN  E          S   *
     1114     9922        *  S   S  U   U  B   B  R  R   O   O  U   U    T      I    N   N  E      S   S   *
     1115     9923        *   SSS    UUU   BBBB   R   R   OOO    UUU     T     III   N   N  EEEEE   SSS    *
     1116     9924        *                                                                                *
     1117     9925        *********************************************************************************/
     1118     9926
     1119     9927        /****************************************************************
     1120     9928        *****************************************************************/
     1121     9929        /*D* NAME:         SETUP
     1122     9930             PURPOSE:      To provide entry to this module
     1123     9931             DESCRIPTION:  Picks up the STA$ from the LDCT and ALTRETs
     1124     9932                           if it's NIL.  Else maps onto the comgroup
     1125     9933                           data, and picks up the CG context block pointer.
     1126     9934                           If IDSC in the KQ$STA is set, ALTRETs.  Else
     1127     9935                           returns.
     1128     9936
     1129     9937                           SETUP increments the station LOCKCNT, and sets
     1130     9938                           SETLOCK; SETUPNS does neither.
     1131     9939        */
     1132     9940    1   SETUP: PROC ALTRET;
     1133     9941    2         SETLOCK=1;
     1134     9942    2         GOTO SET0;
     1135     9943    2   SETUPNS: ENTRY ALTRET;
     1136     9944    2         SETLOCK=0;
     1137     9945    2   SET0: ;
     1138     9946    2         STA$=NK$LDCT.STA$;
     1139     9947    2         IF STA$ = ADDR(NIL) THEN ALTRETURN;
     1140     9948    2         CG$=NK$LDCT.CG$;
     1141     9949    2         CALL KQX$LDASR (CG$->KQ$CG);
     1142     9950    2         IF SETLOCK = 0 THEN
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:36   
     1143     9951    3           DO;
     1144     9952    3           IF STA$->KQ$STA.IDSC THEN ALTRETURN;
     1145     9953    3           END;
     1146     9954    2         ELSE
     1147     9955    3           DO;
     1148     9956                %LOCK (G=STA$->KQ$STA.GATE);
     1149     9959    3           IF STA$->KQ$STA.IDSC THEN
     1150     9960    4             DO;
     1151     9961                  %UNLOCK (G=STA$->KQ$STA.GATE);
     1152     9964    4             ALTRETURN;
     1153     9965    4             END;
     1154     9966    3           STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT+1;
     1155     9967                %UNLOCK (G=STA$->KQ$STA.GATE);
     1156     9970    3           END;
     1157     9971    2         GOTDFR=0;
     1158     9972    2         RBLK$=STA$->KQ$STA.RBLK$;
     1159     9973    2         RWPARM=KC_CRWP;
     1160     9974    2         RETURN;
     1161     9975    2   END SETUP;
     1162     9976        /****************************************************************
     1163     9977        *****************************************************************/
     1164     9978        /*D* NAME:         ENTER
     1165     9979             PURPOSE:      To set up when entered with the station lock
     1166     9980                           incremented from before.
     1167     9981        */
     1168     9982    1   ENTER: PROC;
     1169     9983        /**/
     1170     9984    2         STA$=NK$LDCT.STA$;
     1171     9985        /**/
     1172     9986        /*D* NAME:        ENTERSTA
     1173     9987             PURPOSE:     same as ENTER, but STA$ is already set up - don't have an
     1174     9988                          LDCT.
     1175     9989        */
     1176     9990    2   ENTERSTA: ENTRY;
     1177     9991        /**/
     1178     9992    2         SETLOCK=1;
     1179     9993    2         GOTDFR=-1;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:37   
     1180     9994    2         CG$=STA$->KQ$STA.CG$;
     1181     9995    2         RBLK$=STA$->KQ$STA.RBLK$;
     1182     9996    2         MBLK$=RBLK$->KQ$RBLK.MBLK$;
     1183     9997    2         RWPARM=KC_CRWP;
     1184     9998    2         RETURN;
     1185     9999    2   END ENTER;
     1186    10000        /****************************************************************
     1187    10001        *****************************************************************/
     1188    10002        /*D* NAME:         XIT
     1189    10003             PURPOSE:      To exit from KQG$GET
     1190    10004             DESCRIPTION:  If SETLOCK = 0, returns.  Otherwise locks the
     1191    10005                           station gate and decrements LOCKCNT.  If this
     1192    10006                           hits 0 with IDSC set, calls KQP$FDISC and
     1193    10007                           ALTRETs; else returns.
     1194    10008        */
     1195    10009    1   XIT:  PROC ALTRET;
     1196    10010    2         IF SETLOCK = 0 THEN RETURN;
     1197    10011              %LOCK (G=STA$->KQ$STA.GATE);
     1198    10014    2         GOTO XIT0;
     1199    10015        /*D* NAME:         XITNL
     1200    10016             PURPOSE:      To exit from KQG$GET
     1201    10017             DESCRIPTION:  Same as XIT but entered with the station gate
     1202    10018                           locked.  Must unlock it even if SETLOCK = 0.
     1203    10019        */
     1204    10020    2   XITNL: ENTRY ALTRET;
     1205    10021    2         IF SETLOCK = 0 THEN
     1206    10022    3           DO;
     1207    10023                %UNLOCK (G=STA$->KQ$STA.GATE);
     1208    10026    3           RETURN;
     1209    10027    3           END;
     1210    10028    2   XIT0: ;
     1211    10029    2         STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT-1;
     1212    10030    2         IF STA$->KQ$STA.LOCKCNT = 0 THEN
     1213    10031    2          IF STA$->KQ$STA.IDSC THEN
     1214    10032    3            DO;
     1215    10033    3            CALL KQP$FDISC (NK$LDCT);
     1216    10034    3            ALTRETURN;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:38   
     1217    10035    3            END;
     1218    10036              %UNLOCK (G=STA$->KQ$STA.GATE);
     1219    10039    2         RETURN;
     1220    10040    2   END XIT;
     1221    10041        /****************************************************************
     1222    10042        *****************************************************************/
     1223    10043        /*D* NAME:         REG
     1224    10044             PURPOSE:      To REG for access 'till KCD$WRITE completes
     1225    10045        */
     1226    10046    1   REG:  PROC ALTRET;
     1227    10047        %LOCK (G=STA$->KQ$STA.GATE);
     1228    10050    2         IF ADDR(IOQ$->N$REQ.STATION.LSTA$)->B$$SBIN > 0 THEN
     1229    10051    3           DO; /* Already DONE */
     1230    10052                %UNLOCK (G=STA$->KQ$STA.GATE);
     1231    10055    3           RETURN;
     1232    10056    3           END;
     1233    10057    2         ELSE IF STA$->KQ$STA.IDSC THEN
     1234    10058    3            DO;
     1235    10059                 %UNLOCK (G=STA$->KQ$STA.GATE);
     1236    10062    3            ALTRETURN;
     1237    10063    3            END;
     1238    10064    2         ADDR(IOQ$->N$REQ.STATION.LSTA$)->B$$SBIN=-1;
     1239    10065              %UNLOCK (G=STA$->KQ$STA.GATE);
     1240    10068    2         CALL SSR$REG (%SS_QA);
     1241    10069    2         RETURN;
     1242    10070    2   END REG;
     1243    10071        /*D* NAME:         UNREG
     1244    10072             PURPOSE:      To un-REG the user when KCD$WRITE completes
     1245    10073        */
     1246    10074    1   UNREG: PROC (INFO);
     1247    10075        /**/
     1248    10076    2   DCL INFO UBIN;
     1249    10077    2   DCL J SBIN;
     1250    10078        /**/
     1251    10079        %LOCK (G=STA$->KQ$STA.GATE);
     1252    10082    2         P$=ADDR(RBLK$->KQ$RBLK.IOQ$->N$REQ.STATION.LSTA$);
     1253    10083    2         J=P$->B$$SBIN;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:39   
     1254    10084    2         IF J <= 0 THEN
     1255    10085    2          P$->B$$WORD=INFO;
     1256    10086              %UNLOCK (G=STA$->KQ$STA.GATE);
     1257    10089    2         IF J = -1 THEN
     1258    10090    2          CALL SSR$RUE (%SS_UQA,RBLK$->KQ$RBLK.IOQ$->N$REQ.USER#);
     1259    10091    2         RETURN;
     1260    10092    2   END;
     1261    10093        /****************************************************************
     1262    10094        *****************************************************************/
     1263    10095        /*D* NAME:         DUMPRD
     1264    10096             PURPOSE:      To get rid of the message from a GET
     1265    10097             INPUT:        Station locked
     1266    10098             DESCRIPTION:  If the message says SECURE, it is put on the
     1267    10099                           SGHD$ list, else it is deleted.
     1268    10100        */
     1269    10101    1   DUMPRD: PROC;
     1270    10102        /**/
     1271    10103    2         IF RBLK$->KQ$RBLK.MBLK$ ~= ADDR(NIL) THEN
     1272    10104    3           DO;
     1273    10105    3           MBLK$=RBLK$->KQ$RBLK.MBLK$;
     1274    10106    3           IF RBLK$->KQ$RBLK.SECURE = '0'B
     1275    10107    3           OR MBLK$->KQ$MBLK.STAR
     1276    10108    3           OR RBLK$->KQ$RBLK.COMP THEN
     1277    10109    4             DO;
     1278    10110    4             RBLK$->KQ$RBLK.NCDDA=RBLK$->KQ$RBLK.MBLK$->KQ$MBLK.DDA;
     1279    10111    4             CALL KQU$DELREAD (STA$->KQ$STA);
     1280    10112    4             END;
     1281    10113    3           ELSE
     1282    10114    4             DO;
     1283    10115    4             MBLK$->KQ$MBLK.RBLK = '0'B;
     1284    10116    4             RBLK$->KQ$RBLK.MBLK$=ADDR(NIL);
     1285    10117    4             MBLK$->KQ$MBLK.LNK$=ADDR(NIL);
     1286    10118    4             IF STA$->KQ$STA.SGHD$ = ADDR(NIL) THEN
     1287    10119    4              STA$->KQ$STA.SGHD$=MBLK$;
     1288    10120    4             ELSE
     1289    10121    5               DO;
     1290    10122    5               P$=STA$->KQ$STA.SGHD$;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:40   
     1291    10123    6                 DO WHILE (P$->KQ$MBLK.LNK$ ~= ADDR(NIL));
     1292    10124    6                 P$=P$->KQ$MBLK.LNK$;
     1293    10125    6                 END;
     1294    10126    5               P$->KQ$MBLK.LNK$=MBLK$;
     1295    10127    5               END;
     1296    10128    4             END;
     1297    10129    3           END;
     1298    10130    2         RETURN;
     1299    10131    2   END DUMPRD;
     1300    10132        /****************************************************************
     1301    10133        *****************************************************************/
     1302    10134        /*D* NAME:         MERGE
     1303    10135             PURPOSE:      To merge secure GETs back into the station's
     1304    10136                           queue.
     1305    10137             DESCRIPTION:  P$ is the pointer which heads the desired list,
     1306    10138                           which is all inserted.
     1307    10139        */
     1308    10140    1   MERGE: PROC (HEAD$);
     1309    10141        /**/
     1310    10142    2   DCL HEAD$ PTR;
     1311    10143        /**/
     1312    10144    3           DO WHILE (HEAD$ ~= ADDR(NIL));
     1313    10145    3           CALL KQL$INSERT (CG$->KQ$CG,STA$->KQ$STA.MLH,HEAD$);
     1314    10146    3           END;
     1315    10147    2         RETURN;
     1316    10148    2   END MERGE;
     1317    10149    1   END KQG$GET;

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:41   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   KC_CP6.:E05TOU  is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
   NK$LDCT.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   N$REQ.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   KQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KQ_MAC_C.:E05TOU  is referenced.
   KQ_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KQG$GET.

   Procedure KQG$GET requires 1776 words for executable code.
   Procedure KQG$GET requires 102 words of local(AUTO) storage.

    No errors detected in file KQG$GET.:E05TSI    .

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:42   

 Object Unit name= KQG$GET                                    File name= KQG$GET.:E05TOU
 UTS= JUL 30 '97 01:28:55.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none  1776   3360  KQG$GET
    1  RoData even  none    28     34  KQG$GET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  KQG$GET
     0    605          yes     yes      Std        1  KQG$GOTMWB
     0    621          yes     yes      Std        1  KQG$GOTMSG
     0    630          yes     yes      Std        1  KQG$GOTMSGSTA
     0   1647          yes     yes      Std        1  KQG$FCONT
     0   1712          yes     yes      Std        1  KQG$PCW
     0   1742          yes     yes      Std        1  KQG$DFETCH
     0   1762          yes     yes      Std        1  KQG$DVGET
     0   1777          yes     yes      Std        2  KQG$DONE
     0   2067          yes     yes      Std        2  KQG$COMP
     0   2220          yes     yes      Std        1  KQG$CANCEL
     0   2272          yes     yes      Std        1  KQG$CLEANUP
     0   2577          yes     yes      Std        1  KQG$RECOVER
     0   2616          yes     yes      Std        1  KQG$DACT
     0   2656          yes     yes      Std        1  KQG$TRUNC
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:43   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       8 KQZ$LOG
 yes     yes           Std       2 KQL$DTFIND
 yes     yes           Std       1 KQP$UNLOCK
 yes     yes           Std       3 SSR$REG
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       2 KQD$UNLOCK
         yes           Std       1 HFC$LOCK
 yes     yes           Std       3 KQM$GETBD
 yes     yes           Std       3 KQD$DEFERGO
 yes     yes           Std       1 KQR$LOGERR
 yes     yes           Std       1 KQU$DELREAD
 yes     yes           Std       3 KQL$INSERT
 yes     yes           Std       3 KQM$GETRBLKT
         yes           Std       4 SSR$RUE
 yes     yes           Std       1 KQR$FDELAY
 yes     yes           Std       3 KQD$FETCH
 yes     yes           Std       2 KQU$DELMSG
 yes     yes           Std       2 KQM$RELRBLKT
 yes     yes           Std       2 KCD$WRITE
 yes     yes           Std       1 KQP$CDISC
         yes           Std       1 KQX$LDASR
 yes     yes           Std       1 KQP$FDISC
 yes     yes           Std       1 KQG$FCONT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:44   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_CGNOTIMP                           SC_BCGGET                             KQ_LOG
     KQ_IRBLK                              KQ_IRBLKT                             N$DCT$$
     S_CUN                                 KC_CRWP                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:45   


        1        1        /*M* KQG$GET TERMINAL read from COMGROUP */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         KQG$GET
       10       10             PURPOSE:      To provide COMGROUP READ functions for TERMINALs
       11       11             DESCRIPTION:  Contains all routines to implement read of COMGROUP
       12       12                           from TERMINALs.  Is the complement of KQP$PUT, which
       13       13                           handles comgroup writes from TERMINALs.
       14       14        */
       15       15        /*F* NAME:         KQG$GET
       16       16             PURPOSE:      To receive read from terminals
       17       17             DESCRIPTION:  Called passing the terminal's LDCT, and
       18       18                           a set of GET parameters called K$RWPARM.
       19       19                           This structure is used to communicate the
       20       20                           desired params for the GET, as well as the
       21       21                           results (if any).
       22       22
       23       23                           If the station already has an RBLK, then
       24       24                           if it represents a continued message, the
       25       25                           next chunk is passed to the reader (see
       26       26                           below for how), else the associated MBLK
       27       27                           is discarded since the message has already
       28       28                           been completely read.  Else (no RBLK), an
       29       29                           RBLK is obtained (ALTRET if none available).
       30       30
       31       31                           The RBLK is initialized with the desired
       32       32                           parameters from K$RWPARM.  Then the queue of
       33       33                           messages written directly to this station is
       34       34                           examined for a message which will satisfy the
       35       35                           read request.  If none are found, then if EOFNONE
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:46   
       36       36                           was specified, an EOF error is returned, else the read is
       37       37                           left pending and we return (we will be entered
       38       38                           at KQG$GOTMSG when an appropriate message
       39       39                           arrives).  Note that the anonymous queue is never
       40       40                           searched (corresponds to a DCB reading with
       41       41                           DIRONLY).  When a message is found, it is removed
       42       42                           from the station's queue, and pointed to by the
       43       43                           RBLK, whose state is set to XFIP (xfer in prog),
       44       44                           and then we dive into the GOTMSG logic.
       45       45
       46       46                           GOTMSG fetches the DBLK (locking it in core), and
       47       47                           fills an RWPARM with the message's parameters and
       48       48                           data memory address, and then calls KCD$WRITE.
       49       49                           This causes KQG$DONE to be called sometime later
       50       50                           when the terminal has received the message.
       51       51
       52       52                           If KCD$WRITE ALTRETs, it is usually because the
       53       53                           data was too large, in which case the read is
       54       54                           set to state 'COMP', and the data block unlocked.
       55       55                           This causes the next call to GET to pick up the
       56       56                           same message, since the station has an RBLK, and
       57       57                           it points to the message just refused.
       58       58
       59       59                           KCD$WRITE can return saying that KQG$DONE has
       60       60                           already been called, and another GET is to
       61       61                           be performed with the params of the current one.
       62       62                           In this case we just go back to the top of GET.
       63       63
       64       64                           KQG$DONE unlocks the data block and sets the RBLK
       65       65                           to point to the message's next data block chunk,
       66       66                           and the RBLK state to 'COMP'.
       67       67        */
       68       68        /**/
       69       69        KQG$GET: PROC (PAR,K$RWPARM) ALTRET;

     69  0 000000   000000 700200 xent  KQG$GET      TSX0  ! X66_AUTO_2
         0 000001   000146 000002                    ZERO    102,2
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:47   

       70       70        /**/
       71       71
       72       72
       73       73
       74       74        /**/
       75       75        /* INCLUDES */
       76       76        /**/
       77       77        %INCLUDE KQ_SUBS_C;
       78      377        %INCLUDE KQ_MAC_C;
       79     2927        %INCLUDE HF_LOCK_C;
       80     2941        %INCLUDE KQ_DATA_R;
       81     3773        %INCLUDE SS_SCHED_C;
       82     4006        %INCLUDE N$REQ;
       83     4080        %INCLUDE NK_LDCT_R;
       84     4089        %INCLUDE NK$LDCT;
       85     4191        %INCLUDE K$RWPARM;
       86     4577        %INCLUDE KC$CP6V_C;
       87     4697        %INCLUDE KC_CP6;
       88     5257        %INCLUDE N_FC_C;
       89     5294        %INCLUDE CP_6_SUBS;
       90     5834
       91     5835
       92     5836
       93     5837        /**/
       94     5838        /* PARAMETERS */
       95     5839        /**/
       96     5840    1   DCL PAR UBIN PARAM;
       97     5841        %K$RWPARM (NAME=K$RWPARM);
       98     6157
       99     6158
      100     6159
      101     6160        /**/
      102     6161        /* BASED STRUCTURES */
      103     6162        /**/
      104     6163        %KQ_CG   (FPTN=KQ$CG  ,STCLASS="BASED(CG$)");
      105     6902        %KQ_STA  (FPTN=KQ$STA ,STCLASS="BASED(STA$)");
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:48   
      106     7241        %KQ_MBLK (FPTN=KQ$MBLK,STCLASS="BASED(MBLK$)");
      107     7511        %KQ_THDR (FPTN=KQ$THDR,STCLASS=BASED);
      108     7549        %KQ_DBLK (FPTN=KQ$DBLK,STCLASS="BASED(DBLK$)");
      109     7602        %KQ_RBLK (FPTN=KQ$RBLK,STCLASS="BASED(RBLK$)",TERM=1);
      110     7788        %KQ_DFRPARM (FPTN=KQ$DFRPARM,STCLASS="BASED(DFRP$)");
      111     7817        %NK$LDCT (NAME=N$LDCT,STCLASS=BASED);
      112     7863        %NK$LDCT (NAME=NK$LDCT,STCLASS="BASED(NK$LDCTAUTO$)");
      113     7909        %KQ_DFRBLK (FPTN=KQ$DFRBLK,STCLASS="BASED(DBLK$)");
      114     7959        %N$REQ (STCLASS=BASED);
      115     8017    1   DCL B$$KEY1 CHAR(KEY1L) BASED ALIGNED;
      116     8018    1   DCL B$$KEY2 CHAR(KEY2L) BASED ALIGNED;
      117     8019    1   DCL B$$PTR PTR BASED ALIGNED;
      118     8020    1   DCL B$$WORD UBIN WORD BASED ALIGNED;
      119     8021    1   DCL B$$SBIN SBIN WORD BASED ALIGNED;
      120     8022    1   DCL B$$CHAR CHAR(1) BASED CALIGNED;
      121     8023    1   DCL B$$HALF UBIN HALF BASED HALIGNED;
      122     8024
      123     8025
      124     8026
      125     8027        /**/
      126     8028        /* AUTO */
      127     8029        /**/
      128     8030    1   DCL NK$LDCTAUTO$ PTR;
      129     8031    1   DCL STA$ PTR;
      130     8032    1   DCL MBLK$ PTR;
      131     8033    1   DCL MBLK$R REDEF MBLK$ SBIN;
      132     8034    1   DCL CG$ PTR;
      133     8035    1   DCL DBLK$ PTR;
      134     8036    1   DCL DBLK$R REDEF DBLK$ UBIN;
      135     8037    1   DCL I UBIN;
      136     8038    1   DCL DDA UBIN;
      137     8039    1   DCL MTYP$ PTR;
      138     8040        %KQ_RBLK (FPTN=RBLK,STCLASS=AUTO);
      139     8226    1   DCL USERBLK UBIN;
      140     8227    1   DCL DOGET UBIN;
      141     8228    1   DCL MBSTAMP UBIN HALF UNAL;
      142     8229    1   DCL 1 MBSTAMPR REDEF MBSTAMP UNAL,
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:49   
      143     8230    1         2 TOP UBIN(2) UNAL,
      144     8231    1         2 MID UBIN(8) UNAL,
      145     8232    1         2 BOT UBIN(8) UNAL;
      146     8233    1   DCL DFRP$ PTR;
      147     8234    1   DCL GOTDFR SBIN WORD;
      148     8235    1   DCL RBLK$ PTR;
      149     8236    1   DCL KEY1L UBIN;
      150     8237        %K$RWPARM (NAME=RWPARM,STCLASS=AUTO);
      151     8553    1   DCL KEY2L UBIN;
      152     8554    1   DCL P$ PTR;
      153     8555    1   DCL IOQ$ PTR;
      154     8556    1   DCL SETLOCK UBIN;
      155     8557    1   DCL KEY CHAR(8);
      156     8558    1   DCL J SBIN;
      157     8559    1   DCL 1 AUTOGATE DALIGNED,
      158     8560    1         2 LOCK UBIN,
      159     8561    1         2 *    UBIN;
      160     8562
      161     8563
      162     8564
      163     8565        /**/
      164     8566        /* REFS */
      165     8567        /**/
      166     8568    1   DCL KCD$WRITE     ENTRY(2) ALTRET;
      167     8569    1   DCL KQB$SRCH      ENTRY(3) ALTRET;
      168     8570    1   DCL KQD$DEFERGO   ENTRY(3) ALTRET;
      169     8571    1   DCL KQD$FETCH     ENTRY(3) ALTRET;
      170     8572    1   DCL KQD$DELETE    ENTRY(2) ALTRET;
      171     8573    1   DCL KQD$UNLOCK    ENTRY(2) ALTRET;
      172     8574    1   DCL KQL$DTFIND    ENTRY(2) ALTRET;
      173     8575    1   DCL KQL$INSERT    ENTRY(3) ALTRET;
      174     8576    1   DCL KQM$GETBD     ENTRY(3) ALTRET;
      175     8577    1   DCL KQM$GETBR     ENTRY(3) ALTRET;
      176     8578    1   DCL KQM$GETRBLKT  ENTRY(3) ALTRET;
      177     8579    1   DCL KQM$RELMBLK   ENTRY(2) ALTRET;
      178     8580    1   DCL KQM$RELRBLKT  ENTRY(2) ALTRET;
      179     8581    1   DCL KQP$FDISC     ENTRY(1) ALTRET;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:50   
      180     8582    1   DCL KQP$CDISC     ENTRY(1) ALTRET;
      181     8583    1   DCL KQP$UNLOCK    ENTRY(1) ALTRET;
      182     8584    1   DCL KQR$FDELAY    ENTRY(1) ALTRET;
      183     8585    1   DCL KQR$LOGERR    ENTRY(1) ALTRET;
      184     8586    1   DCL KQU$DELMSG    ENTRY(2) ALTRET;
      185     8587    1   DCL KQU$DELREAD   ENTRY(1) ALTRET;
      186     8588    1   DCL KQX$LDASR     ENTRY(1);
      187     8589    1   DCL KQZ$LOG       ENTRY(8) ALTRET;
      188     8590    1   DCL SSR$REG       ENTRY(3) ALTRET;
      189     8591    1   DCL SSR$RUE       ENTRY(4);
      190     8592    1   DCL SC_CGNOTIMP   ENTRY    CONV(2,0);
      191     8593    1   DCL SC_BCGGET     ENTRY    CONV(2,0);
      192     8594    1   DCL S_CUN UBIN WORD SYMREF;
      193     8595        %K$RWPARM (NAME=KC_CRWP,STCLASS=SYMREF);
      194     8911
      195     8912
      196     8913
      197     8914        /**/
      198     8915        /* SUBS */
      199     8916        /**/
      200     8917        %EQU_CG;
      201     8965        %SUB KQ$TTREE="CG$->KQ$CG.TTREE";
      202     8966        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:51   
      203     8967        /**/
      204     8968    1         NK$LDCTAUTO$ = ADDR(PAR);

   8968  0 000002   200003 236100                    LDQ     @PAR,,AUTO
         0 000003   200005 756100                    STQ     NK$LDCTAUTO$,,AUTO

      205     8969    1         CALL SETUPNS ALTRET(RTN);

   8969  0 000004   002721 701000 0                  TSX1    SETUPNS
         0 000005   002066 702000 0                  TSX2    RTN

      206     8970    1         RWPARM=K$RWPARM;

   8970  0 000006   200004 470500                    LDP0    @K$RWPARM,,AUTO
         0 000007   000100 100500                    MLR     fill='000'O
         0 000010   000000 000234                    ADSC9   0,,PR0                   cn=0,n=156
         0 000011   200050 000234                    ADSC9   RWPARM,,AUTO             cn=0,n=156

      207     8971    1         USERBLK=0;

   8971  0 000012   200040 450100                    STZ     USERBLK,,AUTO

   8971  0 000013                       GET0         null
      208     8972    1   GET0: ;
      209     8973    1         CG$->KQ$CG.STATS.GETS=CG$->KQ$CG.STATS.GETS+1;

   8973  0 000013   200010 470500                    LDP0    CG$,,AUTO
         0 000014   000167 054100                    AOS     119,,PR0

      210     8974    1         IF KQ_LOG.TSIO THEN

   8974  0 000015   000000 236000 xsym               LDQ     KQ_LOG
         0 000016   004000 316003                    CANQ    2048,DU
         0 000017   000040 600000 0                  TZE     s:8986

      211     8975    1          CALL KQZ$LOG (CG$->KQ$CG,%KQLOG_GET,0,0,0,

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:52   
   8975  0 000020   200006 236100                    LDQ     STA$,,AUTO
         0 000021   000006 036003                    ADLQ    6,DU
         0 000022   200144 756100                    STQ     J+8,,AUTO
         0 000023   200006 236100                    LDQ     STA$,,AUTO
         0 000024   000005 036003                    ADLQ    5,DU
         0 000025   000001 235000 1                  LDA     1
         0 000026   200142 757100                    STAQ    J+6,,AUTO
         0 000027   000002 237000 1                  LDAQ    2
         0 000030   200140 757100                    STAQ    J+4,,AUTO
         0 000031   000004 236000 1                  LDQ     4
         0 000032   200010 235100                    LDA     CG$,,AUTO
         0 000033   200136 757100                    STAQ    J+2,,AUTO
         0 000034   200136 630500                    EPPR0   J+2,,AUTO
         0 000035   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000036   000000 701000 xent               TSX1    KQZ$LOG
         0 000037   000000 011000                    NOP     0

      212     8976    1          SUBSTR(STA$->KQ$STA.BTN.KEY,0,4),
      213     8977    1          SUBSTR(STA$->KQ$STA.BTN.KEY,4,4));
      214     8978            /***********************************************
      215     8979             *                                             *
      216     8980             *        Start a GET.  See if he already      *
      217     8981             *        has an RBLK, & do right thing if so  *
      218     8982             *                                             *
      219     8983             ***********************************************/
      220     8984    2           DO INHIBIT;

      221     8985                %LOCK (G=STA$->KQ$STA.GATE);

   8986  0 000040   200006 236300                    LDQ   ! STA$,,AUTO
         0 000041   000016 036203                    ADLQ  ! 14,DU
         0 000042   200136 756300                    STQ   ! J+2,,AUTO
         0 000043   200136 630700                    EPPR0 ! J+2,,AUTO
         0 000044   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000045   000000 701200 xent               TSX1  ! HFC$LOCK
         0 000046   000000 011200                    NOP   ! 0

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:53   
      222     8988    2           STA$->KQ$STA.READS=STA$->KQ$STA.READS+1;

   8988  0 000047   200006 470700                    LDP0  ! STA$,,AUTO
         0 000050   000026 054300                    AOS   ! 22,,PR0

      223     8989    2           RBLK$=STA$->KQ$STA.RBLK$;

   8989  0 000051   000011 236300                    LDQ   ! 9,,PR0
         0 000052   200045 756300                    STQ   ! RBLK$,,AUTO

      224     8990    2           IF RBLK$ ~= ADDR(NIL) THEN

   8990  0 000053   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000054   000201 600200 0                  TZE   ! s:9047

      225     8991    3             DO;

      226     8992    4               DO CASE (RBLK$->KQ$RBLK.STATE);

   8992  0 000055   200045 471700                    LDP1  ! RBLK$,,AUTO
         0 000056   100001 220300                    LDX0  ! 1,,PR1
         0 000057   000007 100203                    CMPX0 ! 7,DU
         0 000060   000062 602210 0                  TNC   ! s:8992+5,X0
         0 000061   000071 710200 0                  TRA   ! s:8994
         0 000062   000071 710200 0                  TRA   ! s:8994
         0 000063   000075 710200 0                  TRA   ! s:9011
         0 000064   000071 710200 0                  TRA   ! s:8994
         0 000065   000071 710200 0                  TRA   ! s:8994
         0 000066   000071 710200 0                  TRA   ! s:8994
         0 000067   000071 710200 0                  TRA   ! s:8994
         0 000070   000074 710200 0                  TRA   ! s:9008

      227     8993    4                 CASE (ELSE);

      228     8994    4                   CALL SC_BCGGET;

   8994  0 000071   000000 713600 xsym               CLIMB ! SC_BCGGET
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:54   
         0 000072   000000 600000 xsid               climb   nvectors=         0
         0 000073   000174 710200 0                  TRA   ! NEWRBLK

      229     8995        /*S* SCREECH_CODE: KQG-S$BCGGET
      230     8996             TYPE:         SCREECH
      231     8997             MESSAGE:      Event-state conflict during GET from COMGROUP
      232     8998             REMARKS:      KQG$GET has been entered to start or continue
      233     8999                           a terminal GET to COMGROUP, and the state of
      234     9000                           that terminal's GET is not consistent with
      235     9001                           the way KQG$GET was entered.  Examples are
      236     9002                           KQG$GET being called while another GET is
      237     9003                           being processed.  One must examine how KQG$GET
      238     9004                           was called, and the current GET state, to determine
      239     9005                           what the inconsistency was and how it occurred. */
      240     9006
      241     9007    4                 CASE (KQRS_XFIW#);

      242     9008    4                   GOTO NORBLKSU;

   9008  0 000074   000564 710200 0                  TRA   ! NORBLKSU

      243     9009
      244     9010    4                 CASE (KQRS_COMP#);

      245     9011    4                   IF RBLK$->KQ$RBLK.NCDDA ~= 0 THEN

   9011  0 000075   100011 235300                    LDA   ! 9,,PR1
         0 000076   000172 600200 0                  TZE   ! s:9040

      246     9012    5                     DO;

      247     9013    5                     MBLK$=RBLK$->KQ$RBLK.MBLK$;

   9013  0 000077   100000 236300                    LDQ   ! 0,,PR1
         0 000100   200007 756300                    STQ   ! MBLK$,,AUTO

      248     9014    5                     IF USERBLK = 0 THEN
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:55   

   9014  0 000101   200040 235300                    LDA   ! USERBLK,,AUTO
         0 000102   000160 601200 0                  TNZ   ! s:9034

      249     9015    6                       DO;

      250     9016    6                       KEY1L=RBLK$->KQ$RBLK.KEY1L;

   9016  0 000103   100001 236300                    LDQ   ! 1,,PR1
         0 000104   000004 772200                    QRL   ! 4
         0 000105   000017 376207                    ANQ   ! 15,DL
         0 000106   200046 756300                    STQ   ! KEY1L,,AUTO

      251     9017    6                       KEY2L=RBLK$->KQ$RBLK.KEY2L;

   9017  0 000107   100001 236300                    LDQ   ! 1,,PR1
         0 000110   000017 376207                    ANQ   ! 15,DL
         0 000111   200120 756300                    STQ   ! KEY2L,,AUTO

      252     9018    6                       IF CG$->KQ$CG.QISS THEN

   9018  0 000112   200010 473700                    LDP3  ! CG$,,AUTO
         0 000113   300106 235300                    LDA   ! 70,,PR3
         0 000114   000145 600200 0                  TZE   ! s:9030

      253     9019    7                         DO;

      254     9020    7                        IF ADDR(RWPARM.MSGTYP)->B$$KEY2 ~= ADDR(RBLK$->KQ$RBLK.KEY2)->
              9020                                  B$$KEY2

   9020  0 000115   000000 620206                    EAX0  ! 0,QL
         0 000116   200120 721300                    LXL1  ! KEY2L,,AUTO
         0 000117   040140 106740                    CMPC  ! fill='040'O
         0 000120   200054 000010                    ADSC9   RWPARM+4,,AUTO           cn=0,n=*X0
         0 000121   100004 000011                    ADSC9   4,,PR1                   cn=0,n=*X1
         0 000122   000130 601200 0                  TNZ   ! REQUEUE
         0 000123   200046 720300                    LXL0  ! KEY1L,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:56   
         0 000124   040140 106740                    CMPC  ! fill='040'O
         0 000125   200052 000010                    ADSC9   RWPARM+2,,AUTO           cn=0,n=*X0
         0 000126   100002 000010                    ADSC9   2,,PR1                   cn=0,n=*X0
         0 000127   000160 600200 0                  TZE   ! s:9034

      255     9021    7                         OR ADDR(RWPARM.STATION)->B$$KEY1 ~= ADDR(RBLK$->KQ$RBLK.KEY1)
              9021                                  ->B$$KEY1 THEN
      256     9022    8                           DO;

   9021  0 000130                       REQUEUE      null
      257     9023    8   REQUEUE:                ;
      258     9024    8                           RBLK$->KQ$RBLK.NCDDA=0;

   9024  0 000130   200045 470700                    LDP0  ! RBLK$,,AUTO
         0 000131   000011 450300                    STZ   ! 9,,PR0

      259     9025    8                          CALL KQL$INSERT (CG$->KQ$CG,STA$->KQ$STA.MLH,RBLK$->KQ$RBLK.
              9025                                    MBLK$);

   9025  0 000132   200045 236300                    LDQ   ! RBLK$,,AUTO
         0 000133   200140 756300                    STQ   ! J+4,,AUTO
         0 000134   200006 236300                    LDQ   ! STA$,,AUTO
         0 000135   000034 036203                    ADLQ  ! 28,DU
         0 000136   200010 235300                    LDA   ! CG$,,AUTO
         0 000137   200136 757300                    STAQ  ! J+2,,AUTO
         0 000140   200136 630700                    EPPR0 ! J+2,,AUTO
         0 000141   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 000142   000000 701200 xent               TSX1  ! KQL$INSERT
         0 000143   000000 011200                    NOP   ! 0

      260     9026    8                           GOTO NEWRBLK;

   9026  0 000144   000174 710200 0                  TRA   ! NEWRBLK

      261     9027    8                           END;
      262     9028    7                         END;
      263     9029    6                       ELSE
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:57   
      264     9030    6                        IF ADDR(RWPARM.MSGTYP)->B$$KEY1 ~= ADDR(RBLK$->KQ$RBLK.KEY1)->
              9030                                 B$$KEY1

   9030  0 000145   200046 720300                    LXL0  ! KEY1L,,AUTO
         0 000146   040140 106740                    CMPC  ! fill='040'O
         0 000147   200054 000010                    ADSC9   RWPARM+4,,AUTO           cn=0,n=*X0
         0 000150   100002 000010                    ADSC9   2,,PR1                   cn=0,n=*X0
         0 000151   000130 601200 0                  TNZ   ! REQUEUE
         0 000152   000000 621206                    EAX1  ! 0,QL
         0 000153   200120 722300                    LXL2  ! KEY2L,,AUTO
         0 000154   040140 106740                    CMPC  ! fill='040'O
         0 000155   200052 000011                    ADSC9   RWPARM+2,,AUTO           cn=0,n=*X1
         0 000156   100004 000012                    ADSC9   4,,PR1                   cn=0,n=*X2
         0 000157   000130 601200 0                  TNZ   ! REQUEUE

      265     9031    6                       OR ADDR(RWPARM.STATION)->B$$KEY2 ~= ADDR(RBLK$->KQ$RBLK.KEY2)->
              9031                                 B$$KEY2 THEN
      266     9032    6                         GOTO REQUEUE;
      267     9033    6                       END;

      268     9034    5                     RBLK$->KQ$RBLK.STATE=KQRS_XFIP#;

   9034  0 000160   000003 220203                    LDX0  ! 3,DU
         0 000161   100001 740300                    STX0  ! 1,,PR1

      269     9035                          %UNLOCK (G=STA$->KQ$STA.GATE);

   9036  0 000162   200006 236300                    LDQ   ! STA$,,AUTO
         0 000163   000016 036203                    ADLQ  ! 14,DU
         0 000164   200136 756300                    STQ   ! J+2,,AUTO
         0 000165   200136 630700                    EPPR0 ! J+2,,AUTO
         0 000166   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000167   000000 701200 xent               TSX1  ! HFC$UNLOCK
         0 000170   000000 011200                    NOP   ! 0

      270     9038    5                     GOTO GOTMSG1;

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:58   
   9038  0 000171   000740 710200 0                  TRA   ! GOTMSG1

      271     9039    5                     END;
      272     9040    4                   CALL DUMPRD;

   9040  0 000172   003252 701200 0                  TSX1  ! DUMPRD
         0 000173   000000 011200                    NOP   ! 0

      273     9041    4               END;

   9032  0 000174                       NEWRBLK      null
      274     9042    3   NEWRBLK:  ;
      275     9043    3             RBLK$->KQ$RBLK=KQ_IRBLKT;

   9043  0 000174   200045 470700                    LDP0  ! RBLK$,,AUTO
         0 000175   000100 100600                    MLR   ! fill='000'O
         0 000176   000000 000070 xsym               ADSC9   KQ_IRBLKT                cn=0,n=56
         0 000177   000000 000070                    ADSC9   0,,PR0                   cn=0,n=56

      276     9044    3             END;

   9044  0 000200   000313 710200 0                  TRA   ! s:9083

      277     9045    2           ELSE
      278     9046    3             DO;

      279     9047    3             IF STA$->KQ$STA.MREQ ~= 0 THEN

   9047  0 000201   000020 236300                    LDQ   ! 16,,PR0
         0 000202   000777 316203                    CANQ  ! 511,DU
         0 000203   000235 600200 0                  TZE   ! s:9061

      280     9048    3              IF STA$->KQ$STA.MREQ = KQMR_RBLKT# THEN GOTO NORBLKSU;

   9048  0 000204   000777 376203                    ANQ   ! 511,DU
         0 000205   000003 116203                    CMPQ  ! 3,DU
         0 000206   000564 600200 0                  TZE   ! NORBLKSU
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:59   

      281     9049    3              ELSE IF STA$->KQ$STA.MREQ = -KQMR_RBLKT# THEN

   9049  0 000207   000020 236300                    LDQ   ! 16,,PR0
         0 000210   000777 376203                    ANQ   ! 511,DU
         0 000211   000775 116203                    CMPQ  ! 509,DU
         0 000212   000235 601200 0                  TNZ   ! s:9061

      282     9050    4                 DO;

      283     9051    4                 RBLK$=STA$->KQ$STA.MREQ$;

   9051  0 000213   000024 236300                    LDQ   ! 20,,PR0
         0 000214   200045 756300                    STQ   ! RBLK$,,AUTO

      284     9052    4                 STA$->KQ$STA.MREQ=0;

   9052  0 000215   000000 236203                    LDQ   ! 0,DU
         0 000216   000020 552320                    STBQ  ! 16,'20'O,PR0

      285     9053    4                 IF RBLK$ ~= ADDR(NIL) THEN GOTO G4;

   9053  0 000217   200045 236300                    LDQ   ! RBLK$,,AUTO
         0 000220   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000221   000310 601200 0                  TNZ   ! G4

      286     9054                      %UNLOCK (G=STA$->KQ$STA.GATE);

   9055  0 000222   200006 236300                    LDQ   ! STA$,,AUTO
         0 000223   000016 036203                    ADLQ  ! 14,DU
         0 000224   200136 756300                    STQ   ! J+2,,AUTO
         0 000225   200136 630700                    EPPR0 ! J+2,,AUTO
         0 000226   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000227   000000 701200 xent               TSX1  ! HFC$UNLOCK
         0 000230   000000 011200                    NOP   ! 0

      287     9057    4                 K$RWPARM.ERR=KQGE_QFUL#;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:60   

   9057  0 000231   000001 235207                    LDA   ! 1,DL
         0 000232   200004 470700                    LDP0  ! @K$RWPARM,,AUTO
         0 000233   000013 755300                    STA   ! 11,,PR0

      288     9058    4                 ALTRETURN;

   9058  0 000234   000000 702200 xent               TSX2  ! X66_AALT

      289     9059    4                 END;
      290     9060                  %UNLOCK (G=STA$->KQ$STA.GATE);

   9061  0 000235   200006 236300                    LDQ   ! STA$,,AUTO
         0 000236   000016 036203                    ADLQ  ! 14,DU
         0 000237   200136 756300                    STQ   ! J+2,,AUTO
         0 000240   200136 630700                    EPPR0 ! J+2,,AUTO
         0 000241   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000242   000000 701200 xent               TSX1  ! HFC$UNLOCK
         0 000243   000000 011200                    NOP   ! 0

      291     9063    3             CALL KQM$GETRBLKT (CG$->KQ$CG,RBLK$,I) ALTRET(G2);

   9063  0 000244   200012 630700                    EPPR0 ! I,,AUTO
         0 000245   200140 450700                    STP0  ! J+4,,AUTO
         0 000246   200045 631700                    EPPR1 ! RBLK$,,AUTO
         0 000247   200137 451700                    STP1  ! J+3,,AUTO
         0 000250   200010 236300                    LDQ   ! CG$,,AUTO
         0 000251   200136 756300                    STQ   ! J+2,,AUTO
         0 000252   200136 630700                    EPPR0 ! J+2,,AUTO
         0 000253   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 000254   000000 701200 xent               TSX1  ! KQM$GETRBLKT
         0 000255   000257 702200 0                  TSX2  ! G2

      292     9064    3             GOTO G3;

   9064  0 000256   000301 710200 0                  TRA   ! G3

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:61   
      293     9065    3   G2:       IF STA$->KQ$STA.MREQ ~= 0 THEN GOTO NORBLKS;

   9065  0 000257   200006 470700       G2           LDP0  ! STA$,,AUTO
         0 000260   000020 236300                    LDQ   ! 16,,PR0
         0 000261   000777 316203                    CANQ  ! 511,DU
         0 000262   000573 601200 0                  TNZ   ! NORBLKS

      294     9066    3             RBLK$=STA$;

   9066  0 000263   200006 236300                    LDQ   ! STA$,,AUTO
         0 000264   200045 756300                    STQ   ! RBLK$,,AUTO

      295     9067    3             I=KQMR_RBLKT#;

   9067  0 000265   000003 235207                    LDA   ! 3,DL
         0 000266   200012 755300                    STA   ! I,,AUTO

      296     9068    3             CALL KQM$GETBD (CG$->KQ$CG,RBLK$,I) ALTRET(NORBLKS);

   9068  0 000267   200012 631700                    EPPR1 ! I,,AUTO
         0 000270   200140 451700                    STP1  ! J+4,,AUTO
         0 000271   200045 633700                    EPPR3 ! RBLK$,,AUTO
         0 000272   200137 453700                    STP3  ! J+3,,AUTO
         0 000273   200010 236300                    LDQ   ! CG$,,AUTO
         0 000274   200136 756300                    STQ   ! J+2,,AUTO
         0 000275   200136 630700                    EPPR0 ! J+2,,AUTO
         0 000276   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 000277   000000 701200 xent               TSX1  ! KQM$GETBD
         0 000300   000573 702200 0                  TSX2  ! NORBLKS

   9067  0 000301                       G3           null
      297     9069    3   G3:       ;
      298     9070                  %LOCK (G=STA$->KQ$STA.GATE);

   9071  0 000301   200006 236300                    LDQ   ! STA$,,AUTO
         0 000302   000016 036203                    ADLQ  ! 14,DU
         0 000303   200136 756300                    STQ   ! J+2,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:62   
         0 000304   200136 630700                    EPPR0 ! J+2,,AUTO
         0 000305   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000306   000000 701200 xent               TSX1  ! HFC$LOCK
         0 000307   000000 011200                    NOP   ! 0

      299     9073    3   G4:       STA$->KQ$STA.RBLK$=RBLK$;

   9073  0 000310   200045 236300       G4           LDQ   ! RBLK$,,AUTO
         0 000311   200006 470700                    LDP0  ! STA$,,AUTO
         0 000312   000011 756300                    STQ   ! 9,,PR0

      300     9074    3             END;

      301     9075    2           END;

      302     9076        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:63   
      303     9077        /**/
      304     9078            /*********************************************
      305     9079             *                                           *
      306     9080             *        Fill in RBLK params                *
      307     9081             *                                           *
      308     9082             *********************************************/
      309     9083    1         RBLK$->KQ$RBLK.SECURE=CG$->KQ$CG.AUCTL.SECURE;

   9083  0 000313   200045 470500                    LDP0    RBLK$,,AUTO
         0 000314   200010 471500                    LDP1    CG$,,AUTO
         0 000315   100136 236100                    LDQ     94,,PR1
         0 000316   000001 772000                    QRL     1
         0 000317   000001 676100                    ERQ     1,,PR0
         0 000320   400000 376007                    ANQ     -131072,DL
         0 000321   000001 656100                    ERSQ    1,,PR0

      310     9084    1         IF USERBLK = 0 THEN

   9084  0 000322   200040 235100                    LDA     USERBLK,,AUTO
         0 000323   000472 601000 0                  TNZ     s:9123

      311     9085    1          IF K$RWPARM.RBLK$ ~= ADDR(NIL) THEN

   9085  0 000324   200004 470500                    LDP0    @K$RWPARM,,AUTO
         0 000325   000000 236100                    LDQ     0,,PR0
         0 000326   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000327   000355 600000 0                  TZE     s:9094

      312     9086    2            DO;

      313     9087    2            RBLK$->KQ$RBLK.KEY1L=K$RWPARM.RBLK$->KQ$RBLK.KEY1L;

   9087  0 000330   000000 473500                    LDP3    0,,PR0
         0 000331   200045 474500                    LDP4    RBLK$,,AUTO
         0 000332   300001 236100                    LDQ     1,,PR3
         0 000333   400001 676100                    ERQ     1,,PR4
         0 000334   000360 376007                    ANQ     240,DL
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:64   
         0 000335   400001 656100                    ERSQ    1,,PR4

      314     9088    2            RBLK$->KQ$RBLK.KEY2L=K$RWPARM.RBLK$->KQ$RBLK.KEY2L;

   9088  0 000336   000000 473500                    LDP3    0,,PR0
         0 000337   200045 474500                    LDP4    RBLK$,,AUTO
         0 000340   300001 236100                    LDQ     1,,PR3
         0 000341   400001 676100                    ERQ     1,,PR4
         0 000342   000017 376007                    ANQ     15,DL
         0 000343   400001 656100                    ERSQ    1,,PR4

      315     9089    2            RBLK$->KQ$RBLK.KEY1 =K$RWPARM.RBLK$->KQ$RBLK.KEY1;

   9089  0 000344   000000 473500                    LDP3    0,,PR0
         0 000345   300002 237100                    LDAQ    2,,PR3
         0 000346   200045 474500                    LDP4    RBLK$,,AUTO
         0 000347   400002 757100                    STAQ    2,,PR4

      316     9090    2            RBLK$->KQ$RBLK.KEY2 =K$RWPARM.RBLK$->KQ$RBLK.KEY2;

   9090  0 000350   000000 473500                    LDP3    0,,PR0
         0 000351   300004 237100                    LDAQ    4,,PR3
         0 000352   200045 474500                    LDP4    RBLK$,,AUTO
         0 000353   400004 757100                    STAQ    4,,PR4

      317     9091    2            END;

   9091  0 000354   000517 710000 0                  TRA     s:9135

      318     9092    1          ELSE
      319     9093    2            DO;

      320     9094    2            RBLK$->KQ$RBLK.EOFNONE=RWPARM.EOFNONE;

   9094  0 000355   200045 473500                    LDP3    RBLK$,,AUTO
         0 000356   200060 236100                    LDQ     RWPARM+8,,AUTO
         0 000357   000001 772000                    QRL     1
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:65   
         0 000360   300001 676100                    ERQ     1,,PR3
         0 000361   200000 376007                    ANQ     65536,DL
         0 000362   300001 656100                    ERSQ    1,,PR3

      321     9095    2            RBLK$->KQ$RBLK.MID.PRIMARY=K$RWPARM.MSGID;

   9095  0 000363   200045 473500                    LDP3    RBLK$,,AUTO
         0 000364   000011 235100                    LDA     9,,PR0
         0 000365   300006 755100                    STA     6,,PR3

      322     9096    2            IF RWPARM.MSGTYP = ' ' THEN KEY1L=0;

   9096  0 000366   200054 237100                    LDAQ    RWPARM+4,,AUTO
         0 000367   000006 117000 1                  CMPAQ   6
         0 000370   000373 601000 0                  TNZ     s:9099

   9096  0 000371   200046 450100                    STZ     KEY1L,,AUTO
         0 000372   000412 710000 0                  TRA     s:9103

      323     9097    2            ELSE
      324     9098    3              DO;

      325     9099    3              CALL INDEX (KEY1L,'?',RWPARM.MSGTYP);

   9099  0 000373   000000 124500                    SCM     mask='000'O
         0 000374   200054 000010                    ADSC9   RWPARM+4,,AUTO           cn=0,n=8
         0 000375   000010 000001 1                  ADSC9   8                        cn=0,n=1
         0 000376   200046 000100                    ARG     KEY1L,,AUTO

      326     9100    3              ADDR(RBLK$->KQ$RBLK.KEY1)->B$$KEY1=ADDR(RWPARM.MSGTYP)->B$$KEY1;

   9100  0 000377   200046 720100                    LXL0    KEY1L,,AUTO
         0 000400   200045 473500                    LDP3    RBLK$,,AUTO
         0 000401   040140 100540                    MLR     fill='040'O
         0 000402   200054 000010                    ADSC9   RWPARM+4,,AUTO           cn=0,n=*X0
         0 000403   300002 000010                    ADSC9   2,,PR3                   cn=0,n=*X0

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:66   
      327     9101    3              RBLK$->KQ$RBLK.KEY1L=KEY1L;

   9101  0 000404   200045 473500                    LDP3    RBLK$,,AUTO
         0 000405   200046 236100                    LDQ     KEY1L,,AUTO
         0 000406   000004 736000                    QLS     4
         0 000407   300001 676100                    ERQ     1,,PR3
         0 000410   000360 376007                    ANQ     240,DL
         0 000411   300001 656100                    ERSQ    1,,PR3

      328     9102    3              END;

      329     9103    2            IF RWPARM.STATION = ' ' THEN KEY2L=0;

   9103  0 000412   200052 237100                    LDAQ    RWPARM+2,,AUTO
         0 000413   000006 117000 1                  CMPAQ   6
         0 000414   000417 601000 0                  TNZ     s:9106

   9103  0 000415   200120 450100                    STZ     KEY2L,,AUTO
         0 000416   000435 710000 0                  TRA     s:9110

      330     9104    2            ELSE
      331     9105    3              DO;

      332     9106    3              CALL INDEX (KEY2L,'?',RWPARM.STATION);

   9106  0 000417   000000 124500                    SCM     mask='000'O
         0 000420   200052 000010                    ADSC9   RWPARM+2,,AUTO           cn=0,n=8
         0 000421   000010 000001 1                  ADSC9   8                        cn=0,n=1
         0 000422   200120 000100                    ARG     KEY2L,,AUTO

      333     9107    3              ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2=ADDR(RWPARM.STATION)->B$$KEY2;

   9107  0 000423   200120 720100                    LXL0    KEY2L,,AUTO
         0 000424   200045 473500                    LDP3    RBLK$,,AUTO
         0 000425   040140 100540                    MLR     fill='040'O
         0 000426   200052 000010                    ADSC9   RWPARM+2,,AUTO           cn=0,n=*X0
         0 000427   300004 000010                    ADSC9   4,,PR3                   cn=0,n=*X0
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:67   

      334     9108    3              RBLK$->KQ$RBLK.KEY2L=KEY2L;

   9108  0 000430   200045 473500                    LDP3    RBLK$,,AUTO
         0 000431   200120 236100                    LDQ     KEY2L,,AUTO
         0 000432   300001 676100                    ERQ     1,,PR3
         0 000433   000017 376007                    ANQ     15,DL
         0 000434   300001 656100                    ERSQ    1,,PR3

      335     9109    3              END;

      336     9110    2            IF CG$->KQ$CG.QISS THEN

   9110  0 000435   100106 235100                    LDA     70,,PR1
         0 000436   000517 600000 0                  TZE     s:9135

      337     9111    3              DO;

      338     9112    3              KEY=RBLK$->KQ$RBLK.KEY1;

   9112  0 000437   200045 473500                    LDP3    RBLK$,,AUTO
         0 000440   300002 237100                    LDAQ    2,,PR3
         0 000441   200124 757100                    STAQ    KEY,,AUTO

      339     9113    3              RBLK$->KQ$RBLK.KEY1=RBLK$->KQ$RBLK.KEY2;

   9113  0 000442   300004 237100                    LDAQ    4,,PR3
         0 000443   300002 757100                    STAQ    2,,PR3

      340     9114    3              RBLK$->KQ$RBLK.KEY1L=KEY2L;

   9114  0 000444   200045 473500                    LDP3    RBLK$,,AUTO
         0 000445   200120 236100                    LDQ     KEY2L,,AUTO
         0 000446   000004 736000                    QLS     4
         0 000447   300001 676100                    ERQ     1,,PR3
         0 000450   000360 376007                    ANQ     240,DL
         0 000451   300001 656100                    ERSQ    1,,PR3
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:68   

      341     9115    3              RBLK$->KQ$RBLK.KEY2=KEY;

   9115  0 000452   200124 237100                    LDAQ    KEY,,AUTO
         0 000453   200045 473500                    LDP3    RBLK$,,AUTO
         0 000454   300004 757100                    STAQ    4,,PR3

      342     9116    3              RBLK$->KQ$RBLK.KEY2L=KEY1L;

   9116  0 000455   200045 473500                    LDP3    RBLK$,,AUTO
         0 000456   200046 236100                    LDQ     KEY1L,,AUTO
         0 000457   300001 676100                    ERQ     1,,PR3
         0 000460   000017 376007                    ANQ     15,DL
         0 000461   300001 656100                    ERSQ    1,,PR3

      343     9117    3              KEY2L=KEY1L;

   9117  0 000462   200046 236100                    LDQ     KEY1L,,AUTO
         0 000463   200120 756100                    STQ     KEY2L,,AUTO

      344     9118    3              KEY1L=RBLK$->KQ$RBLK.KEY1L;

   9118  0 000464   200045 473500                    LDP3    RBLK$,,AUTO
         0 000465   300001 236100                    LDQ     1,,PR3
         0 000466   000004 772000                    QRL     4
         0 000467   000017 376007                    ANQ     15,DL
         0 000470   200046 756100                    STQ     KEY1L,,AUTO

      345     9119    3              END;

      346     9120    2            END;

   9120  0 000471   000517 710000 0                  TRA     s:9135

      347     9121    1         ELSE
      348     9122    2           DO;

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:69   
      349     9123    2           RBLK$->KQ$RBLK.EOFNONE=RBLK.EOFNONE;

   9123  0 000472   200045 470500                    LDP0    RBLK$,,AUTO
         0 000473   200017 236100                    LDQ     RBLK+1,,AUTO
         0 000474   000001 676100                    ERQ     1,,PR0
         0 000475   200000 376007                    ANQ     65536,DL
         0 000476   000001 656100                    ERSQ    1,,PR0

      350     9124    2           RBLK$->KQ$RBLK.KEY1=RBLK.KEY1;

   9124  0 000477   200020 237100                    LDAQ    RBLK+2,,AUTO
         0 000500   200045 470500                    LDP0    RBLK$,,AUTO
         0 000501   000002 757100                    STAQ    2,,PR0

      351     9125    2           RBLK$->KQ$RBLK.KEY2=RBLK.KEY2;

   9125  0 000502   200022 237100                    LDAQ    RBLK+4,,AUTO
         0 000503   200045 470500                    LDP0    RBLK$,,AUTO
         0 000504   000004 757100                    STAQ    4,,PR0

      352     9126    2           RBLK$->KQ$RBLK.KEY1L=RBLK.KEY1L;

   9126  0 000505   200045 470500                    LDP0    RBLK$,,AUTO
         0 000506   200017 236100                    LDQ     RBLK+1,,AUTO
         0 000507   000001 676100                    ERQ     1,,PR0
         0 000510   000360 376007                    ANQ     240,DL
         0 000511   000001 656100                    ERSQ    1,,PR0

      353     9127    2           RBLK$->KQ$RBLK.KEY2L=RBLK.KEY2L;

   9127  0 000512   200045 470500                    LDP0    RBLK$,,AUTO
         0 000513   200017 236100                    LDQ     RBLK+1,,AUTO
         0 000514   000001 676100                    ERQ     1,,PR0
         0 000515   000017 376007                    ANQ     15,DL
         0 000516   000001 656100                    ERSQ    1,,PR0

      354     9128    2           END;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:70   

      355     9129        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:71   
      356     9130            /*********************************************
      357     9131             *                                           *
      358     9132             *         Search for a message              *
      359     9133             *                                           *
      360     9134             *********************************************/
      361     9135    1         CALL KQL$DTFIND (STA$->KQ$STA,MBLK$) ALTRET(GOTMSG0);

   9135  0 000517   200007 630500                    EPPR0   MBLK$,,AUTO
         0 000520   200137 450500                    STP0    J+3,,AUTO
         0 000521   200006 236100                    LDQ     STA$,,AUTO
         0 000522   200136 756100                    STQ     J+2,,AUTO
         0 000523   200136 630500                    EPPR0   J+2,,AUTO
         0 000524   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000525   000000 701000 xent               TSX1    KQL$DTFIND
         0 000526   000665 702000 0                  TSX2    GOTMSG0

      362     9136    1         IF MBLK$R < 0 THEN GOTO GETOUT; /* Delayed find */

   9136  0 000527   200007 235100                    LDA     MBLK$,,AUTO
         0 000530   002064 604000 0                  TMI     GETOUT

      363     9137                           /* Nothing found */
      364     9138    1         IF RBLK$->KQ$RBLK.ERR ~= 0 THEN

   9138  0 000531   200045 470500                    LDP0    RBLK$,,AUTO
         0 000532   000001 236100                    LDQ     1,,PR0
         0 000533   007000 316007                    CANQ    3584,DL
         0 000534   000557 600000 0                  TZE     s:9147

      365     9139    2           DO;

      366     9140    2           RWPARM.ERR=RBLK$->KQ$RBLK.ERR;

   9140  0 000535   000001 236100                    LDQ     1,,PR0
         0 000536   000011 772000                    QRL     9
         0 000537   000007 376007                    ANQ     7,DL
         0 000540   200063 756100                    STQ     RWPARM+11,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:72   

      367     9141    2           IF ADDR(K$RWPARM) ~= ADDR(NIL) THEN

   9141  0 000541   200004 236100                    LDQ     @K$RWPARM,,AUTO
         0 000542   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000543   000551 600000 0                  TZE     s:9143

      368     9142    2            K$RWPARM.ERR=RBLK$->KQ$RBLK.ERR;

   9142  0 000544   200004 471500                    LDP1    @K$RWPARM,,AUTO
         0 000545   000001 236100                    LDQ     1,,PR0
         0 000546   000011 772000                    QRL     9
         0 000547   000007 376007                    ANQ     7,DL
         0 000550   100013 756100                    STQ     11,,PR1

      369     9143    2           RBLK$->KQ$RBLK.STATE=KQRS_COMP#;

   9143  0 000551   000001 220003                    LDX0    1,DU
         0 000552   200045 470500                    LDP0    RBLK$,,AUTO
         0 000553   000001 740100                    STX0    1,,PR0

      370     9144    2           CALL XITNL;

   9144  0 000554   003056 701000 0                  TSX1    XITNL
         0 000555   000000 011000                    NOP     0

      371     9145    2           ALTRETURN;

   9145  0 000556   000000 702200 xent               TSX2  ! X66_AALT

      372     9146    2           END;
      373     9147    1         RBLK$->KQ$RBLK.STATE=KQRS_PEND#;

   9147  0 000557   000002 220003                    LDX0    2,DU
         0 000560   000001 740100                    STX0    1,,PR0

   9147  0 000561                       GETOUTNL     null
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:73   
      374     9148    1   GETOUTNL:;
      375     9149    1         CALL XITNL;

   9149  0 000561   003056 701000 0                  TSX1    XITNL
         0 000562   000000 011000                    NOP     0

      376     9150    1         RETURN;

   9150  0 000563   000000 702200 xent               TSX2  ! X66_ARET

   9147  0 000564                       NORBLKSU     null
      377     9151        /**/
      378     9152        /**/
      379     9153    1   NORBLKSU:;
      380     9154              %UNLOCK (G=STA$->KQ$STA.GATE);

   9155  0 000564   200006 236100                    LDQ     STA$,,AUTO
         0 000565   000016 036003                    ADLQ    14,DU
         0 000566   200136 756100                    STQ     J+2,,AUTO
         0 000567   200136 630500                    EPPR0   J+2,,AUTO
         0 000570   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000571   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000572   000000 011000                    NOP     0

   9147  0 000573                       NORBLKS      null
      381     9157    1   NORBLKS:;
      382     9158                                /* Force him to try the GET later - used
      383     9159                                   when we need to delay a bit */
      384     9160    1         RWPARM.ERR=KQGE_NORBLK#;

   9160  0 000573   000005 235007                    LDA     5,DL
         0 000574   200063 755100                    STA     RWPARM+11,,AUTO

      385     9161    1         IF ADDR(K$RWPARM) ~= ADDR(NIL) THEN

   9161  0 000575   200004 236100                    LDQ     @K$RWPARM,,AUTO
         0 000576   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:74   
         0 000577   000602 600000 0                  TZE     ALTOUT

      386     9162    1          K$RWPARM.ERR=KQGE_NORBLK#;

   9162  0 000600   200004 470500                    LDP0    @K$RWPARM,,AUTO
         0 000601   000013 755100                    STA     11,,PR0

   9161  0 000602                       ALTOUT       null
      387     9163    1   ALTOUT:;
      388     9164    1         CALL XIT;

   9164  0 000602   003042 701000 0                  TSX1    XIT
         0 000603   000000 011000                    NOP     0

   9161  0 000604                       ALTRT        null
      389     9165    1   ALTRT:;
      390     9166    1         ALTRETURN;

   9166  0 000604   000000 702200 xent               TSX2  ! X66_AALT

      391     9167        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:75   
      392     9168        /**/
      393     9169        /*F* NAME:         KQG$GOTMWB
      394     9170             PURPOSE:      To satisfy a GET with a message from a writer's
      395     9171                           buffer
      396     9172             DESCRIPTION:  Called from KQW$WRITE when a write message can
      397     9173                           satisfy a pending GET.
      398     9174
      399     9175                           Entered with the MBLK pointed to by the GETting
      400     9176                           RBLK, the RBLK state set to KQRS_XFIP, and the
      401     9177                           GETting station's LOCKCNT bumped but the station
      402     9178                           gate unlocked.  IOQ$ in the RBLK points to the
      403     9179                           writer's IOQ packet.
      404     9180
      405     9181                           The writer is blocked (%SS_QA) until the write
      406     9182                           completes via KQG$GET.
      407     9183                           If the writer's buffer is bad, this is commun-
      408     9184                           icated by TYC in his REQ packet being set.  If
      409     9185                           PCW is called, the writer is unblocked and told
      410     9186                           to call KCD$WRITE.  All this communication is
      411     9187                           performed thru N$REQ.STATION.LSTA$.
      412     9188
      413     9189                           KQG$GOTMWB only ALTRETs if KCD$WRITE returns a
      414     9190                           size-too-big error.  In this case the MBLK has
      415     9191                           been moved back into the writing station block,
      416     9192                           and the writer simply dumps the message into the
      417     9193                           comgroup.
      418     9194        */
      419     9195    1   KQG$GOTMWB: ENTRY (PAR) ALTRET;

   9195  0 000605   000000 700200 xent  KQG$GOTMWB   TSX0  ! X66_AUTO_2
         0 000606   000146 000002                    ZERO    102,2

      420     9196        /**/
      421     9197    1         NK$LDCTAUTO$ = ADDR(PAR);

   9197  0 000607   200003 236100                    LDQ     @PAR,,AUTO
         0 000610   200005 756100                    STQ     NK$LDCTAUTO$,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:76   

      422     9198    1         CALL ENTER;

   9198  0 000611   003014 701000 0                  TSX1    ENTER
         0 000612   000000 011000                    NOP     0

      423     9199    1         IOQ$=RBLK$->KQ$RBLK.IOQ$;

   9199  0 000613   200045 470500                    LDP0    RBLK$,,AUTO
         0 000614   000015 236100                    LDQ     13,,PR0
         0 000615   200122 756100                    STQ     IOQ$,,AUTO

      424     9200    1         ADDR(IOQ$->N$REQ.STATION.LSTA$)->B$$WORD=0;

   9200  0 000616   200122 471500                    LDP1    IOQ$,,AUTO
         0 000617   100013 450100                    STZ     11,,PR1

      425     9201    1         GOTO GOTMSG0;

   9201  0 000620   000665 710000 0                  TRA     GOTMSG0

      426     9202        /**/
      427     9203        /**/
      428     9204        /*F* NAME:         KQG$GOTMSG
      429     9205             PURPOSE:      To satisfy a GET with a message from the comgroup
      430     9206             DESCRIPTION:  Called from SENDMSG in KQW$WRITE when a message
      431     9207                           contained in DBLKs (as opposed to a writer's buffer)
      432     9208                           satisfies a pending GET.
      433     9209
      434     9210                           Entered with the MBLK pointed to by the GETting
      435     9211                           RBLK, RBLK.NCDDA set to MBLK.DDA,
      436     9212                           the RBLK state set to KQRS_XFIP, and
      437     9213                           the GETter's station unlocked; the GETting
      438     9214                           station has had its LOCKCNT incremented.
      439     9215
      440     9216                           Also called from KQL$LIST when a delayed MLH
      441     9217                           search finishes;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:77   
      442     9218        */
      443     9219    1   KQG$GOTMSG: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */

   9219  0 000621   000000 700200 xent  KQG$GOTMSG   TSX0  ! X66_AUTO_2
         0 000622   000146 000002                    ZERO    102,2

      444     9220        /**/
      445     9221    1         NK$LDCTAUTO$ = ADDR(PAR);

   9221  0 000623   200003 236100                    LDQ     @PAR,,AUTO
         0 000624   200005 756100                    STQ     NK$LDCTAUTO$,,AUTO

      446     9222    1         CALL ENTER;

   9222  0 000625   003014 701000 0                  TSX1    ENTER
         0 000626   000000 011000                    NOP     0

      447     9223    1         GOTO GOTMSG;

   9223  0 000627   000636 710000 0                  TRA     GOTMSG

      448     9224        /**/
      449     9225        /*F* NAME:        KQG$GOTMSGSTA
      450     9226             PURPOSE:     Finish up cleaning up '*' messages
      451     9227             DESCRIPTION: Called from KQL when we're cleaning up star messages and
      452     9228                          the terminal station's LDCT does not exist.  This can occur
      453     9229                          if the comgroup is being opened after system recovery or if
      454     9230                          the messages didn't get cleaned up before the comgroup was
      455     9231                          closed.
      456     9232        */
      457     9233    1   KQG$GOTMSGSTA: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */

   9233  0 000630   000000 700200 xent  KQG$GOTMSGS* TSX0  ! X66_AUTO_2
         0 000631   000146 000002                    ZERO    102,2

      458     9234        /**/
      459     9235    1         STA$=ADDR(PAR);
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:78   

   9235  0 000632   200003 236100                    LDQ     @PAR,,AUTO
         0 000633   200006 756100                    STQ     STA$,,AUTO

      460     9236    1         CALL ENTERSTA;

   9236  0 000634   003021 701000 0                  TSX1    ENTERSTA
         0 000635   000000 011000                    NOP     0

   9235  0 000636                       GOTMSG       null
      461     9237    1   GOTMSG:;
      462     9238    1         IF RBLK$->KQ$RBLK.RUNDOWN THEN

   9238  0 000636   200045 470500                    LDP0    RBLK$,,AUTO
         0 000637   000001 236100                    LDQ     1,,PR0
         0 000640   010000 316007                    CANQ    4096,DL
         0 000641   000663 600000 0                  TZE     s:9246

      463     9239    2           DO;

      464     9240    2           CALL KQP$UNLOCK (STA$->KQ$STA);

   9240  0 000642   200006 630500                    EPPR0   STA$,,AUTO
         0 000643   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000644   000000 701000 xent               TSX1    KQP$UNLOCK
         0 000645   000000 011000                    NOP     0

      465     9241                           /* Cleaning up '*' msgs */
      466     9242    2           IF NOT CG$->KQ$CG.RCVR THEN GOTO CL15;

   9242  0 000646   200010 470500                    LDP0    CG$,,AUTO
         0 000647   000105 236100                    LDQ     69,,PR0
         0 000650   000010 316007                    CANQ    8,DL
         0 000651   002566 600000 0                  TZE     CL15

      467     9243    2           CALL SSR$RUE (%SS_UQA,RBLK$->KQ$RBLK.RUND.USR#);

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:79   
   9243  0 000652   200045 236100                    LDQ     RBLK$,,AUTO
         0 000653   000013 036003                    ADLQ    11,DU
         0 000654   000012 235000 1                  LDA     10
         0 000655   200136 757100                    STAQ    J+2,,AUTO
         0 000656   200136 630500                    EPPR0   J+2,,AUTO
         0 000657   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000660   000000 701000 xent               TSX1    SSR$RUE
         0 000661   000000 011000                    NOP     0

      468     9244    2           RETURN;

   9244  0 000662   000000 702200 xent               TSX2  ! X66_ARET

      469     9245    2           END;
      470     9246    1         IOQ$=ADDR(NIL);

   9246  0 000663   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000664   200122 756100                    STQ     IOQ$,,AUTO

   9246  0 000665                       GOTMSG0      null
      471     9247    1   GOTMSG0:;
      472     9248    1         IF KQ_LOG.TSIO THEN

   9248  0 000665   000000 236000 xsym               LDQ     KQ_LOG
         0 000666   004000 316003                    CANQ    2048,DU
         0 000667   000740 600000 0                  TZE     GOTMSG1

      473     9249    2           DO;

      474     9250    2           IF MBLK$~=ADDR(NIL) THEN

   9250  0 000670   200007 236100                    LDQ     MBLK$,,AUTO
         0 000671   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000672   000716 600000 0                  TZE     s:9257

      475     9251    2            CALL KQZ$LOG (CG$->KQ$CG,%KQLOG_GETC,0,
      476     9252    2            MBLK$->KQ$MBLK.MID.PRIMARY,
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:80   
      477     9253    2            ADDR(MBLK$->KQ$MBLK.MID.PRIMARY)->B$$HALF,
      478     9254    2            SUBSTR(STA$->KQ$STA.BTN.KEY,0,4),
      479     9255    2            SUBSTR(STA$->KQ$STA.BTN.KEY,4,4));

   9255  0 000673   200006 236100                    LDQ     STA$,,AUTO
         0 000674   000006 036003                    ADLQ    6,DU
         0 000675   200144 756100                    STQ     J+8,,AUTO
         0 000676   200006 236100                    LDQ     STA$,,AUTO
         0 000677   000005 036003                    ADLQ    5,DU
         0 000700   200143 756100                    STQ     J+7,,AUTO
         0 000701   200007 236100                    LDQ     MBLK$,,AUTO
         0 000702   000014 036003                    ADLQ    12,DU
         0 000703   200142 756100                    STQ     J+6,,AUTO
         0 000704   000001 235000 1                  LDA     1
         0 000705   200140 757100                    STAQ    J+4,,AUTO
         0 000706   000014 236000 1                  LDQ     12
         0 000707   200010 235100                    LDA     CG$,,AUTO
         0 000710   200136 757100                    STAQ    J+2,,AUTO
         0 000711   200136 630500                    EPPR0   J+2,,AUTO
         0 000712   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000713   000000 701000 xent               TSX1    KQZ$LOG
         0 000714   000000 011000                    NOP     0
         0 000715   000740 710000 0                  TRA     GOTMSG1

      480     9256    2           ELSE
      481     9257    2            CALL KQZ$LOG (CG$->KQ$CG,%KQLOG_GETC,0,

   9257  0 000716   200006 236100                    LDQ     STA$,,AUTO
         0 000717   000006 036003                    ADLQ    6,DU
         0 000720   200144 756100                    STQ     J+8,,AUTO
         0 000721   200006 236100                    LDQ     STA$,,AUTO
         0 000722   000005 036003                    ADLQ    5,DU
         0 000723   000001 235000 1                  LDA     1
         0 000724   200142 757100                    STAQ    J+6,,AUTO
         0 000725   200007 630500                    EPPR0   MBLK$,,AUTO
         0 000726   200141 450500                    STP0    J+5,,AUTO
         0 000727   000001 236000 1                  LDQ     1
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:81   
         0 000730   200140 756100                    STQ     J+4,,AUTO
         0 000731   000014 236000 1                  LDQ     12
         0 000732   200010 235100                    LDA     CG$,,AUTO
         0 000733   200136 757100                    STAQ    J+2,,AUTO
         0 000734   200136 630500                    EPPR0   J+2,,AUTO
         0 000735   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000736   000000 701000 xent               TSX1    KQZ$LOG
         0 000737   000000 011000                    NOP     0

      482     9258    2            MBLK$,0,SUBSTR(STA$->KQ$STA.BTN.KEY,0,4),
      483     9259    2            SUBSTR(STA$->KQ$STA.BTN.KEY,4,4));
      484     9260    2           END;

   9258  0 000740                       GOTMSG1      null
      485     9261            /*********************************************
      486     9262             *                                           *
      487     9263             *         FETCH the data block              *
      488     9264             *                                           *
      489     9265             *********************************************/
      490     9266    1   GOTMSG1:;
      491     9267    1         IF MBLK$ ~= ADDR(NIL) THEN

   9267  0 000740   200007 236100                    LDQ     MBLK$,,AUTO
         0 000741   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000742   000772 600000 0                  TZE     s:9277

      492     9268    1          IF MBLK$->KQ$MBLK.DDA ~= 0 THEN

   9268  0 000743   200007 470500                    LDP0    MBLK$,,AUTO
         0 000744   000006 235100                    LDA     6,,PR0
         0 000745   000772 600000 0                  TZE     s:9277

      493     9269    2            DO;

      494     9270    2            DBLK$R=MBLK$->KQ$MBLK.STAMP;

   9270  0 000746   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:82   
         0 000747   777777 376007                    ANQ     -1,DL
         0 000750   200011 756100                    STQ     DBLK$,,AUTO

      495     9271    2            DDA=RBLK$->KQ$RBLK.NCDDA;

   9271  0 000751   200045 471500                    LDP1    RBLK$,,AUTO
         0 000752   100011 235100                    LDA     9,,PR1
         0 000753   200013 755100                    STA     DDA,,AUTO

      496     9272    2            CALL KQD$FETCH (CG$->KQ$CG,DBLK$,DDA) ALTRET(NOFETCH);

   9272  0 000754   200013 633500                    EPPR3   DDA,,AUTO
         0 000755   200140 453500                    STP3    J+4,,AUTO
         0 000756   200011 634500                    EPPR4   DBLK$,,AUTO
         0 000757   200137 454500                    STP4    J+3,,AUTO
         0 000760   200010 236100                    LDQ     CG$,,AUTO
         0 000761   200136 756100                    STQ     J+2,,AUTO
         0 000762   200136 630500                    EPPR0   J+2,,AUTO
         0 000763   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000764   000000 701000 xent               TSX1    KQD$FETCH
         0 000765   001524 702000 0                  TSX2    NOFETCH

   9271  0 000766                       GOTMSG10     null
      497     9273    2   GOTMSG10:;
      498     9274    2            RBLK$->KQ$RBLK.DBLK$=DBLK$;

   9274  0 000766   200011 236100                    LDQ     DBLK$,,AUTO
         0 000767   200045 470500                    LDP0    RBLK$,,AUTO
         0 000770   000013 756100                    STQ     11,,PR0

      499     9275    2            GOTO GOTMSG2;

   9275  0 000771   000775 710000 0                  TRA     GOTMSG2

      500     9276    2            END;
      501     9277    1         RBLK$->KQ$RBLK.DBLK$=ADDR(NIL);

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:83   
   9277  0 000772   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000773   200045 470500                    LDP0    RBLK$,,AUTO
         0 000774   000013 756100                    STQ     11,,PR0

   9277  0 000775                       GOTMSG2      null
      502     9278    1   GOTMSG2:;
      503     9279            /*********************************************
      504     9280             *                                           *
      505     9281             *        Fill in RWPARM for receiver        *
      506     9282             *                                           *
      507     9283             *********************************************/
      508     9284    1         IOQ$=RBLK$->KQ$RBLK.IOQ$;

   9284  0 000775   200045 470500                    LDP0    RBLK$,,AUTO
         0 000776   000015 236100                    LDQ     13,,PR0
         0 000777   200122 756100                    STQ     IOQ$,,AUTO

      509     9285    1         IF MBLK$ = ADDR(NIL) THEN

   9285  0 001000   200007 236100                    LDQ     MBLK$,,AUTO
         0 001001   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001002   001012 601000 0                  TNZ     s:9292

      510     9286    2           DO;

      511     9287    2           RWPARM.ERR=RBLK$->KQ$RBLK.ERR;

   9287  0 001003   000001 236100                    LDQ     1,,PR0
         0 001004   000011 772000                    QRL     9
         0 001005   000007 376007                    ANQ     7,DL
         0 001006   200063 756100                    STQ     RWPARM+11,,AUTO

      512     9288    2           RWPARM.MSG$=ADDR(NIL);

   9288  0 001007   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001010   200050 756100                    STQ     RWPARM,,AUTO

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:84   
      513     9289    2           END;

   9289  0 001011   001175 710000 0                  TRA     GET1

      514     9290    1         ELSE
      515     9291    2           DO;

      516     9292    2           RWPARM.ERR        =0;

   9292  0 001012   200063 450100                    STZ     RWPARM+11,,AUTO

      517     9293    2           RWPARM.MSGID      =MBLK$->KQ$MBLK.MID.PRIMARY;

   9293  0 001013   200007 471500                    LDP1    MBLK$,,AUTO
         0 001014   100014 235100                    LDA     12,,PR1
         0 001015   200061 755100                    STA     RWPARM+9,,AUTO

      518     9294    2           RWPARM.MSGIDXT    =BINBIT(MBLK$->KQ$MBLK.MID.XT,36);

   9294  0 001016   100015 236100                    LDQ     13,,PR1
         0 001017   200062 756100                    STQ     RWPARM+10,,AUTO

      519     9295    2           RWPARM.DVE        =MBLK$->KQ$MBLK.DVE;

   9295  0 001020   000100 100500                    MLR     fill='000'O
         0 001021   100010 200002                    ADSC9   8,,PR1                   cn=1,n=2
         0 001022   200136 000004                    ADSC9   J+2,,AUTO                cn=0,n=4
         0 001023   200136 220100                    LDX0    J+2,,AUTO
         0 001024   200060 740100                    STX0    RWPARM+8,,AUTO

      520     9296    2           RWPARM.FC         =MBLK$->KQ$MBLK.FC;

   9296  0 001025   100010 236100                    LDQ     8,,PR1
         0 001026   037000 376003                    ANQ     15872,DU
         0 001027   000033 772000                    QRL     27
         0 001030   200060 552104                    STBQ    RWPARM+8,'04'O,AUTO

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:85   
      521     9297    2           IF  NOT MBLK$->KQ$MBLK.STAR

   9297  0 001031   100010 236100                    LDQ     8,,PR1
         0 001032   100000 316003                    CANQ    32768,DU
         0 001033   001064 601000 0                  TNZ     s:9306
         0 001034   000001 236100                    LDQ     1,,PR0
         0 001035   400000 316007                    CANQ    -131072,DL
         0 001036   001064 600000 0                  TZE     s:9306

      522     9298    2           AND RBLK$->KQ$RBLK.SECURE THEN
      523     9299    3             DO;

      524     9300    3             RWPARM.DVE.DVBYTE.RRR='1'B;

   9300  0 001037   010000 236003                    LDQ     4096,DU
         0 001040   200060 256100                    ORSQ    RWPARM+8,,AUTO

      525     9301    3             MBSTAMP=MBLK$->KQ$MBLK.STAMP;

   9301  0 001041   100001 720100                    LXL0    1,,PR1
         0 001042   200042 740100                    STX0    MBSTAMP,,AUTO

      526     9302    3             RWPARM.BLKREC.BLK#.B=MBSTAMPR.TOP;

   9302  0 001043   200042 236100                    LDQ     MBSTAMP,,AUTO
         0 001044   600000 376003                    ANQ     -65536,DU
         0 001045   000020 772000                    QRL     16
         0 001046   200057 676100                    ERQ     RWPARM+7,,AUTO
         0 001047   000377 376003                    ANQ     255,DU
         0 001050   200057 656100                    ERSQ    RWPARM+7,,AUTO

      527     9303    3             RWPARM.BLKREC.REC#.T=MBSTAMPR.MID;

   9303  0 001051   200042 236100                    LDQ     MBSTAMP,,AUTO
         0 001052   000021 772000                    QRL     17
         0 001053   200057 676100                    ERQ     RWPARM+7,,AUTO
         0 001054   377000 376007                    ANQ     130560,DL
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:86   
         0 001055   200057 656100                    ERSQ    RWPARM+7,,AUTO

      528     9304    3             RWPARM.BLKREC.REC#.B=MBSTAMPR.BOT;

   9304  0 001056   200042 236100                    LDQ     MBSTAMP,,AUTO
         0 001057   000022 772000                    QRL     18
         0 001060   200057 676100                    ERQ     RWPARM+7,,AUTO
         0 001061   000377 376007                    ANQ     255,DL
         0 001062   200057 656100                    ERSQ    RWPARM+7,,AUTO

      529     9305    3             END;

   9305  0 001063   001066 710000 0                  TRA     s:9307

      530     9306    2           ELSE RWPARM.DVE.DVBYTE.RRR='0'B;

   9306  0 001064   000015 236000 1                  LDQ     13
         0 001065   200060 356100                    ANSQ    RWPARM+8,,AUTO

      531     9307    2           DBLK$=RBLK$->KQ$RBLK.DBLK$;

   9307  0 001066   000013 236100                    LDQ     11,,PR0
         0 001067   200011 756100                    STQ     DBLK$,,AUTO

      532     9308    2           IF DBLK$ = ADDR(NIL) THEN

   9308  0 001070   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001071   001121 601000 0                  TNZ     s:9326

      533     9309    3             DO;

      534     9310    3             IF IOQ$ = ADDR(NIL) THEN

   9310  0 001072   200122 236100                    LDQ     IOQ$,,AUTO
         0 001073   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001074   001101 601000 0                  TNZ     s:9317

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:87   
      535     9311    4               DO;

      536     9312    4               RWPARM.MSGSZ=0;

   9312  0 001075   200051 450100                    STZ     RWPARM+1,,AUTO

      537     9313    4               RWPARM.MSG$=ADDR(KQ_IRBLK);

   9313  0 001076   000016 236000 1                  LDQ     14
         0 001077   200050 756100                    STQ     RWPARM,,AUTO

      538     9314    4               END;

   9314  0 001100   001161 710000 0                  TRA     s:9342

      539     9315    3             ELSE
      540     9316    4               DO;

      541     9317    4               IF NOT MBLK$->KQ$MBLK.DVE.DVBYTE & %DVBYTE_VFC# THEN

   9317  0 001101   100010 236100                    LDQ     8,,PR1
         0 001102   000011 736000                    QLS     9
         0 001103   777000 376003                    ANQ     -512,DU
         0 001104   100000 376003                    ANQ     32768,DU
         0 001105   001110 601000 0                  TNZ     s:9319

      542     9318    4                RWPARM.DVE.DVBYTE.VFC = '1'B;

   9318  0 001106   100000 236003                    LDQ     32768,DU
         0 001107   200060 256100                    ORSQ    RWPARM+8,,AUTO

      543     9319    4               RWPARM.DVE.VFC='A';

   9319  0 001110   000101 236003                    LDQ     65,DU
         0 001111   200060 552120                    STBQ    RWPARM+8,'20'O,AUTO

      544     9320    4               RWPARM.MSG$   =IOQ$->N$REQ.BUF$;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:88   

   9320  0 001112   200122 473500                    LDP3    IOQ$,,AUTO
         0 001113   300005 236100                    LDQ     5,,PR3
         0 001114   200050 756100                    STQ     RWPARM,,AUTO

      545     9321    4               RWPARM.MSGSZ  =IOQ$->N$REQ.BUFSIZE;

   9321  0 001115   300004 236100                    LDQ     4,,PR3
         0 001116   000020 772000                    QRL     16
         0 001117   200051 756100                    STQ     RWPARM+1,,AUTO

      546     9322    4               END;

      547     9323    3             END;

   9323  0 001120   001161 710000 0                  TRA     s:9342

      548     9324    2           ELSE
      549     9325    3             DO;

      550     9326    3             IF MBLK$->KQ$MBLK.DVE.DVBYTE&%DVBYTE_VFC# THEN

   9326  0 001121   100010 236100                    LDQ     8,,PR1
         0 001122   000011 736000                    QLS     9
         0 001123   777000 376003                    ANQ     -512,DU
         0 001124   100000 376003                    ANQ     32768,DU
         0 001125   001142 600000 0                  TZE     s:9334

      551     9327    4               DO;

      552     9328    4               RWPARM.DVE.VFC=PINCRC(DBLK$,SIZEC(KQ$DBLK))->B$$CHAR;

   9328  0 001126   200011 473500                    LDP3    DBLK$,,AUTO
         0 001127   040100 100500                    MLR     fill='040'O
         0 001130   300006 000001                    ADSC9   6,,PR3                   cn=0,n=1
         0 001131   200060 200001                    ADSC9   RWPARM+8,,AUTO           cn=1,n=1

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:89   
      553     9329    4               RWPARM.MSG$   =PINCRC(DBLK$,SIZEC(KQ$DBLK)+1);

   9329  0 001132   200011 236100                    LDQ     DBLK$,,AUTO
         0 001133   000017 036000 1                  ADLQ    15
         0 001134   200050 756100                    STQ     RWPARM,,AUTO

      554     9330    4               RWPARM.MSGSZ  =DBLK$->KQ$DBLK.DSIZE-1;

   9330  0 001135   300000 236100                    LDQ     0,,PR3
         0 001136   777777 376007                    ANQ     -1,DL
         0 001137   000001 136007                    SBLQ    1,DL
         0 001140   200051 756100                    STQ     RWPARM+1,,AUTO

      555     9331    4               END;

   9331  0 001141   001155 710000 0                  TRA     s:9339

      556     9332    3             ELSE
      557     9333    4               DO;

      558     9334    4               RWPARM.DVE.DVBYTE.VFC = '1'B;

   9334  0 001142   100000 236003                    LDQ     32768,DU
         0 001143   200060 256100                    ORSQ    RWPARM+8,,AUTO

      559     9335    4               RWPARM.DVE.VFC='A';

   9335  0 001144   000101 236003                    LDQ     65,DU
         0 001145   200060 552120                    STBQ    RWPARM+8,'20'O,AUTO

      560     9336    4               RWPARM.MSG$   =PINCRC(DBLK$,SIZEC(KQ$DBLK));

   9336  0 001146   200011 236100                    LDQ     DBLK$,,AUTO
         0 001147   000006 036003                    ADLQ    6,DU
         0 001150   200050 756100                    STQ     RWPARM,,AUTO

      561     9337    4               RWPARM.MSGSZ  =DBLK$->KQ$DBLK.DSIZE;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:90   

   9337  0 001151   200011 473500                    LDP3    DBLK$,,AUTO
         0 001152   300000 236100                    LDQ     0,,PR3
         0 001153   777777 376007                    ANQ     -1,DL
         0 001154   200051 756100                    STQ     RWPARM+1,,AUTO

      562     9338    4               END;

      563     9339    3             IF DBLK$->KQ$DBLK.FLNKDA ~= 0 THEN

   9339  0 001155   300001 235100                    LDA     1,,PR3
         0 001156   001161 600000 0                  TZE     s:9342

      564     9340    3              RWPARM.DVE.DVBYTE.CONT='1'B;

   9340  0 001157   001000 236003                    LDQ     512,DU
         0 001160   200060 256100                    ORSQ    RWPARM+8,,AUTO

      565     9341    3             END;

      566     9342    2           IF CG$->KQ$CG.QISS THEN

   9342  0 001161   200010 473500                    LDP3    CG$,,AUTO
         0 001162   300106 235100                    LDA     70,,PR3
         0 001163   001171 600000 0                  TZE     s:9349

      567     9343    3             DO;

      568     9344    3             RWPARM.STATION=MBLK$->KQ$MBLK.KEY1;

   9344  0 001164   100002 237100                    LDAQ    2,,PR1
         0 001165   200052 757100                    STAQ    RWPARM+2,,AUTO

      569     9345    3             RWPARM.MSGTYP =MBLK$->KQ$MBLK.KEY2;

   9345  0 001166   100004 237100                    LDAQ    4,,PR1
         0 001167   200054 757100                    STAQ    RWPARM+4,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:91   

      570     9346    3             END;

   9346  0 001170   001175 710000 0                  TRA     GET1

      571     9347    2           ELSE
      572     9348    3             DO;

      573     9349    3             RWPARM.STATION=MBLK$->KQ$MBLK.KEY2;

   9349  0 001171   100004 237100                    LDAQ    4,,PR1
         0 001172   200052 757100                    STAQ    RWPARM+2,,AUTO

      574     9350    3             RWPARM.MSGTYP =MBLK$->KQ$MBLK.KEY1;

   9350  0 001173   100002 237100                    LDAQ    2,,PR1
         0 001174   200054 757100                    STAQ    RWPARM+4,,AUTO

      575     9351    3             END;

      576     9352    2           END;

   9351  0 001175                       GET1         null
      577     9353    1   GET1: ;
      578     9354            /*********************************************
      579     9355             *                                           *
      580     9356             *         Give message to KCD$WRITE         *
      581     9357             *                                           *
      582     9358             *********************************************/
      583     9359    1         RBLK$->KQ$RBLK.STATE=KQRS_XFIW#;

   9359  0 001175   000006 220003                    LDX0    6,DU
         0 001176   200045 470500                    LDP0    RBLK$,,AUTO
         0 001177   000001 740100                    STX0    1,,PR0

      584     9360    1         RBLK=RBLK$->KQ$RBLK;

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:92   
   9360  0 001200   200045 470500                    LDP0    RBLK$,,AUTO
         0 001201   000100 100500                    MLR     fill='000'O
         0 001202   000000 000070                    ADSC9   0,,PR0                   cn=0,n=56
         0 001203   200016 000110                    ADSC9   RBLK,,AUTO               cn=0,n=72

      585     9361    1         AUTOGATE.LOCK = 1;

   9361  0 001204   000001 235007                    LDA     1,DL
         0 001205   200130 755100                    STA     AUTOGATE,,AUTO

      586     9362              %LOCK(G=AUTOGATE);

   9363  0 001206   200130 631500                    EPPR1   AUTOGATE,,AUTO
         0 001207   200136 451500                    STP1    J+2,,AUTO
         0 001210   200136 630500                    EPPR0   J+2,,AUTO
         0 001211   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001212   000000 701000 xent               TSX1    HFC$LOCK
         0 001213   000000 011000                    NOP     0

      587     9365    1         CALL KCD$WRITE (NK$LDCT,RWPARM) ALTRET(WALT);

   9365  0 001214   200050 630500                    EPPR0   RWPARM,,AUTO
         0 001215   200137 450500                    STP0    J+3,,AUTO
         0 001216   200005 236100                    LDQ     NK$LDCTAUTO$,,AUTO
         0 001217   200136 756100                    STQ     J+2,,AUTO
         0 001220   200136 630500                    EPPR0   J+2,,AUTO
         0 001221   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001222   000000 701000 xent               TSX1    KCD$WRITE
         0 001223   001304 702000 0                  TSX2    WALT

      588     9366              %UNLOCK(G=AUTOGATE);

   9367  0 001224   200130 630500                    EPPR0   AUTOGATE,,AUTO
         0 001225   200136 450500                    STP0    J+2,,AUTO
         0 001226   200136 630500                    EPPR0   J+2,,AUTO
         0 001227   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001230   000000 701000 xent               TSX1    HFC$UNLOCK
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:93   
         0 001231   000000 011000                    NOP     0

      589     9369    1         IF IOQ$ ~= ADDR(NIL) THEN

   9369  0 001232   200122 236100                    LDQ     IOQ$,,AUTO
         0 001233   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001234   001253 600000 0                  TZE     s:9381

      590     9370    2           DO;

      591     9371    2           CALL REG ALTRET(GETOUT);

   9371  0 001235   003122 701000 0                  TSX1    REG
         0 001236   002064 702000 0                  TSX2    GETOUT

      592     9372    3             DO CASE (ADDR(IOQ$->N$REQ.STATION.LSTA$)->B$$WORD);

   9372  0 001237   200122 470500                    LDP0    IOQ$,,AUTO
         0 001240   000013 235100                    LDA     11,,PR0
         0 001241   000003 115007                    CMPA    3,DL
         0 001242   001244 602005 0                  TNC     s:9372+5,AL
         0 001243   001247 710000 0                  TRA     s:9374
         0 001244   001247 710000 0                  TRA     s:9374
         0 001245   001253 710000 0                  TRA     s:9381
         0 001246   001252 710000 0                  TRA     s:9377

      593     9373    3               CASE (ELSE);

      594     9374    3                 CALL SC_BCGGET;

   9374  0 001247   000000 713400 xsym               CLIMB   SC_BCGGET
         0 001250   000000 600000 xsid               climb   nvectors=         0
         0 001251   001253 710000 0                  TRA     s:9381

      595     9375    3               CASE (1);

      596     9376    3               CASE (2); /* Another GET done underneath us */
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:94   

      597     9377    3                 GOTO GETOUT;

   9377  0 001252   002064 710000 0                  TRA     GETOUT

      598     9378    3             END;

      599     9379    2           END;

      600     9380    2           DO INHIBIT;

      601     9381    2           IF STA$->KQ$STA.IDSC

   9381  0 001253   200006 470700                    LDP0  ! STA$,,AUTO
         0 001254   000020 234300                    SZN   ! 16,,PR0
         0 001255   002064 604200 0                  TMI   ! GETOUT
         0 001256   200063 235300                    LDA   ! RWPARM+11,,AUTO
         0 001257   002064 601200 0                  TNZ   ! GETOUT

      602     9382    2           OR RWPARM.ERR ~= 0 THEN
      603     9383    2            GOTO GETOUT;
      604     9384    2           IF IOQ$ ~= ADDR(NIL) THEN

   9384  0 001260   200122 236300                    LDQ   ! IOQ$,,AUTO
         0 001261   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 001262   001301 600200 0                  TZE   ! GET2

      605     9385    3             DO;

      606     9386    3             RWPARM=KC_CRWP;

   9386  0 001263   000100 100600                    MLR   ! fill='000'O
         0 001264   000000 000234 xsym               ADSC9   KC_CRWP                  cn=0,n=156
         0 001265   200050 000234                    ADSC9   RWPARM,,AUTO             cn=0,n=156

      607     9387    3             RWPARM.RBLK$=ADDR(RBLK);

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:95   
   9387  0 001266   200016 631700                    EPPR1 ! RBLK,,AUTO
         0 001267   200050 451700                    STP1  ! RWPARM,,AUTO

      608     9388    3             CALL KQG$GET (NK$LDCT,RWPARM);

   9388  0 001270   200050 633700                    EPPR3 ! RWPARM,,AUTO
         0 001271   200137 453700                    STP3  ! J+3,,AUTO
         0 001272   200005 236300                    LDQ   ! NK$LDCTAUTO$,,AUTO
         0 001273   200136 756300                    STQ   ! J+2,,AUTO
         0 001274   200136 630700                    EPPR0 ! J+2,,AUTO
         0 001275   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         0 001276   000000 701200 0                  TSX1  ! s:69
         0 001277   000000 011200                    NOP   ! 0

      609     9389    3             GOTO GETOUT;

   9389  0 001300   002064 710200 0                  TRA   ! GETOUT

   9384  0 001301                       GET2         null
      610     9390    3             END;
      611     9391    2   GET2:   ;
      612     9392    2           USERBLK=1;

   9392  0 001301   000001 235207                    LDA   ! 1,DL
         0 001302   200040 755300                    STA   ! USERBLK,,AUTO

      613     9393    2           GOTO GET0;

   9393  0 001303   000013 710200 0                  TRA   ! GET0

      614     9394    2           END;

   9388  0 001304                       WALT         null
      615     9395    1   WALT: ;
      616     9396              %UNLOCK(G=AUTOGATE);

   9397  0 001304   200130 630500                    EPPR0   AUTOGATE,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:96   
         0 001305   200136 450500                    STP0    J+2,,AUTO
         0 001306   200136 630500                    EPPR0   J+2,,AUTO
         0 001307   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001310   000000 701000 xent               TSX1    HFC$UNLOCK
         0 001311   000000 011000                    NOP     0

      617     9399            /*********************************************
      618     9400             *                                           *
      619     9401             *         KCD$WRITE    ALTRETs              *
      620     9402             *                                           *
      621     9403             *********************************************/
      622     9404    1         IF STA$->KQ$STA.IDSC THEN GOTO GETOUT;

   9404  0 001312   200006 470500                    LDP0    STA$,,AUTO
         0 001313   000020 234100                    SZN     16,,PR0
         0 001314   002064 604000 0                  TMI     GETOUT

      623     9405    2           DO CASE (RWPARM.ERR);

   9405  0 001315   200063 235100                    LDA     RWPARM+11,,AUTO
         0 001316   000006 135007                    SBLA    6,DL
         0 001317   000007 115007                    CMPA    7,DL
         0 001320   001322 602005 0                  TNC     s:9405+5,AL
         0 001321   001331 710000 0                  TRA     s:9408
         0 001322   001523 710000 0                  TRA     s:9473
         0 001323   001341 710000 0                  TRA     REQ
         0 001324   001406 710000 0                  TRA     s:9433
         0 001325   001406 710000 0                  TRA     s:9433
         0 001326   001331 710000 0                  TRA     s:9408
         0 001327   001432 710000 0                  TRA     s:9447
         0 001330   001334 710000 0                  TRA     s:9413

      624     9406
      625     9407    2             CASE (ELSE);

      626     9408    2               CALL SC_BCGGET;

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:97   
   9408  0 001331   000000 713400 xsym               CLIMB   SC_BCGGET
         0 001332   000000 600000 xsid               climb   nvectors=         0
         0 001333   001523 710000 0                  TRA     s:9473

      627     9409
      628     9410    2             CASE (KQGE_DISC#);

      629     9411
      630     9412    2             CASE (KQGE_QCONT#);

      631     9413    2               RBLK$->KQ$RBLK.NCDDA=MBLK$->KQ$MBLK.DDA;

   9413  0 001334   200007 471500                    LDP1    MBLK$,,AUTO
         0 001335   200045 473500                    LDP3    RBLK$,,AUTO
         0 001336   100006 235100                    LDA     6,,PR1
         0 001337   300011 755100                    STA     9,,PR3

      632     9414    2               GOTO REQ;

   9414  0 001340   001341 710000 0                  TRA     REQ

      633     9415
      634     9416    2             CASE (KQGE_SZ2BIG#);

   9414  0 001341                       REQ          null
      635     9417    2   REQ:        ;
      636     9418    2               IF IOQ$ ~= ADDR(NIL) THEN

   9418  0 001341   200122 236100                    LDQ     IOQ$,,AUTO
         0 001342   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001343   001362 600000 0                  TZE     s:9426

      637     9419    3                 DO;

      638     9420    3                 IF RBLK$->KQ$RBLK.MBLK$~=ADDR(NIL) THEN

   9420  0 001344   200045 471500                    LDP1    RBLK$,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:98   
         0 001345   100000 236100                    LDQ     0,,PR1
         0 001346   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001347   001353 600000 0                  TZE     s:9422

      639     9421    3                  RBLK$->KQ$RBLK.MBLK$->KQ$MBLK.RBLK = '0'B;

   9421  0 001350   100000 473500                    LDP3    0,,PR1
         0 001351   000020 236000 1                  LDQ     16
         0 001352   300010 356100                    ANSQ    8,,PR3

      640     9422    3                 RBLK$->KQ$RBLK.MBLK$=ADDR(NIL);

   9422  0 001353   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001354   200045 471500                    LDP1    RBLK$,,AUTO
         0 001355   100000 756100                    STQ     0,,PR1

      641     9423    3                 RBLK$->KQ$RBLK.STATE=KQRS_COMP#;

   9423  0 001356   000001 220003                    LDX0    1,DU
         0 001357   200045 471500                    LDP1    RBLK$,,AUTO
         0 001360   100001 740100                    STX0    1,,PR1

      642     9424    3                 GOTO ALTOUT;

   9424  0 001361   000602 710000 0                  TRA     ALTOUT

      643     9425    3                 END;
      644     9426    2               DBLK$=RBLK$->KQ$RBLK.DBLK$;

   9426  0 001362   200045 471500                    LDP1    RBLK$,,AUTO
         0 001363   100013 236100                    LDQ     11,,PR1
         0 001364   200011 756100                    STQ     DBLK$,,AUTO

      645     9427    2               RBLK$->KQ$RBLK.DBLK$=ADDR(NIL);

   9427  0 001365   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001366   100013 756100                    STQ     11,,PR1
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:99   

      646     9428    2               IF DBLK$ ~= ADDR(NIL) THEN

   9428  0 001367   200011 236100                    LDQ     DBLK$,,AUTO
         0 001370   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001371   001402 600000 0                  TZE     s:9430

      647     9429    2                CALL KQD$UNLOCK (CG$->KQ$CG,DBLK$);

   9429  0 001372   200011 631500                    EPPR1   DBLK$,,AUTO
         0 001373   200137 451500                    STP1    J+3,,AUTO
         0 001374   200010 236100                    LDQ     CG$,,AUTO
         0 001375   200136 756100                    STQ     J+2,,AUTO
         0 001376   200136 630500                    EPPR0   J+2,,AUTO
         0 001377   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001400   000000 701000 xent               TSX1    KQD$UNLOCK
         0 001401   000000 011000                    NOP     0

      648     9430    2               RBLK$->KQ$RBLK.STATE=KQRS_COMP#;

   9430  0 001402   000001 220003                    LDX0    1,DU
         0 001403   200045 470500                    LDP0    RBLK$,,AUTO
         0 001404   000001 740100                    STX0    1,,PR0
         0 001405   001523 710000 0                  TRA     s:9473

      649     9431
      650     9432    2             CASE (KQGE_PCW#,KQGE_DLTR#);

      651     9433    2               IF IOQ$ ~= ADDR(NIL) THEN

   9433  0 001406   200122 236100                    LDQ     IOQ$,,AUTO
         0 001407   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001410   001523 600000 0                  TZE     s:9473

      652     9434    3                 DO;

      653     9435    3                 CALL REG ALTRET(GETOUT);
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:100  

   9435  0 001411   003122 701000 0                  TSX1    REG
         0 001412   002064 702000 0                  TSX2    GETOUT

      654     9436    4                   DO CASE (ADDR(IOQ$->N$REQ.STATION.LSTA$)->B$$WORD);

   9436  0 001413   200122 470500                    LDP0    IOQ$,,AUTO
         0 001414   000013 235100                    LDA     11,,PR0
         0 001415   000004 115007                    CMPA    4,DL
         0 001416   001420 602005 0                  TNC     s:9436+5,AL
         0 001417   001424 710000 0                  TRA     s:9438
         0 001420   001424 710000 0                  TRA     s:9438
         0 001421   001431 710000 0                  TRA     s:9444
         0 001422   001431 710000 0                  TRA     s:9444
         0 001423   001427 710000 0                  TRA     s:9441

      655     9437    4                     CASE (ELSE);

      656     9438    4                       CALL SC_BCGGET;

   9438  0 001424   000000 713400 xsym               CLIMB   SC_BCGGET
         0 001425   000000 600000 xsid               climb   nvectors=         0
         0 001426   001523 710000 0                  TRA     s:9473

      657     9439    4                     CASE (1,2); /* DONE was called */

      658     9440    4                     CASE (3);

      659     9441    4                       ADDR(IOQ$->N$REQ.STATION.LSTA$)->B$$WORD=0;

   9441  0 001427   000013 450100                    STZ     11,,PR0

      660     9442    4                       GOTO GET1; /* PCW was called */

   9442  0 001430   001175 710000 0                  TRA     GET1

      661     9443    4                   END;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:101  

      662     9444    3                 END;

   9444  0 001431   001523 710000 0                  TRA     s:9473

      663     9445
      664     9446    2             CASE (KQGE_NVGT#);

      665     9447    2               IF IOQ$ ~= ADDR(NIL) THEN

   9447  0 001432   200122 236100                    LDQ     IOQ$,,AUTO
         0 001433   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001434   001452 600000 0                  TZE     s:9454

      666     9448    3                 DO;

      667     9449    3                 CALL SSR$REG (%SS_SL,,1);

   9449  0 001435   000022 236000 1                  LDQ     18
         0 001436   200140 756100                    STQ     J+4,,AUTO
         0 001437   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001440   000023 235000 1                  LDA     19
         0 001441   200136 757100                    STAQ    J+2,,AUTO
         0 001442   200136 630500                    EPPR0   J+2,,AUTO
         0 001443   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 001444   000000 701000 xent               TSX1    SSR$REG
         0 001445   000000 011000                    NOP     0

      668     9450    3                 IF STA$->KQ$STA.IDSC THEN

   9450  0 001446   200006 470500                    LDP0    STA$,,AUTO
         0 001447   000020 234100                    SZN     16,,PR0
         0 001450   002064 604000 0                  TMI     GETOUT

      669     9451    3                  GOTO GETOUT;
      670     9452    3                 GOTO GET1;

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:102  
   9452  0 001451   001175 710000 0                  TRA     GET1

      671     9453    3                 END;
      672     9454    2               RBLK$->KQ$RBLK.STATE=KQRS_NVGT#;

   9454  0 001452   000010 220003                    LDX0    8,DU
         0 001453   200045 471500                    LDP1    RBLK$,,AUTO
         0 001454   100001 740100                    STX0    1,,PR1

      673     9455                    %LOCK (G=STA$->KQ$STA.GATE);

   9456  0 001455   200006 236100                    LDQ     STA$,,AUTO
         0 001456   000016 036003                    ADLQ    14,DU
         0 001457   200136 756100                    STQ     J+2,,AUTO
         0 001460   200136 630500                    EPPR0   J+2,,AUTO
         0 001461   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001462   000000 701000 xent               TSX1    HFC$LOCK
         0 001463   000000 011000                    NOP     0

      674     9458    2               STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT+1;

   9458  0 001464   200006 470500                    LDP0    STA$,,AUTO
         0 001465   000020 236100                    LDQ     16,,PR0
         0 001466   000001 036007                    ADLQ    1,DL
         0 001467   000020 552104                    STBQ    16,'04'O,PR0

      675     9459                    %UNLOCK (G=STA$->KQ$STA.GATE);

   9460  0 001470   200006 236100                    LDQ     STA$,,AUTO
         0 001471   000016 036003                    ADLQ    14,DU
         0 001472   200136 756100                    STQ     J+2,,AUTO
         0 001473   200136 630500                    EPPR0   J+2,,AUTO
         0 001474   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001475   000000 701000 xent               TSX1    HFC$UNLOCK
         0 001476   000000 011000                    NOP     0

      676     9462                    %LOCK (G=CG$->KQ$CG.GATE.CG);
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:103  

   9463  0 001477   200010 236100                    LDQ     CG$,,AUTO
         0 001500   000107 036003                    ADLQ    71,DU
         0 001501   200136 756100                    STQ     J+2,,AUTO
         0 001502   200136 630500                    EPPR0   J+2,,AUTO
         0 001503   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001504   000000 701000 xent               TSX1    HFC$LOCK
         0 001505   000000 011000                    NOP     0

      677     9465    2               MBLK$->KQ$MBLK.DGVGLNK$=CG$->KQ$CG.DGVGHD$;

   9465  0 001506   200010 470500                    LDP0    CG$,,AUTO
         0 001507   000023 236100                    LDQ     19,,PR0
         0 001510   200007 471500                    LDP1    MBLK$,,AUTO
         0 001511   100000 756100                    STQ     0,,PR1

      678     9466    2               CG$->KQ$CG.DGVGHD$=STA$;

   9466  0 001512   200006 236100                    LDQ     STA$,,AUTO
         0 001513   000023 756100                    STQ     19,,PR0

      679     9467                    %UNLOCK (G=CG$->KQ$CG.GATE.CG);

   9468  0 001514   200010 236100                    LDQ     CG$,,AUTO
         0 001515   000107 036003                    ADLQ    71,DU
         0 001516   200136 756100                    STQ     J+2,,AUTO
         0 001517   200136 630500                    EPPR0   J+2,,AUTO
         0 001520   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001521   000000 701000 xent               TSX1    HFC$UNLOCK
         0 001522   000000 011000                    NOP     0

      680     9470
      681     9471    2           END; /*CASE RWPARM.ERR*/

      682     9472
      683     9473    1         GOTO GETOUT;

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:104  
   9473  0 001523   002064 710000 0                  TRA     GETOUT

   9468  0 001524                       NOFETCH      null
      684     9474    1   NOFETCH:;
      685     9475            /*********************************************
      686     9476             *                                           *
      687     9477             *         Cannot FETCH the DBLK             *
      688     9478             *                                           *
      689     9479             *********************************************/
      690     9480    1         IF DBLK$ ~= ADDR(NIL) THEN

   9480  0 001524   200011 236100                    LDQ     DBLK$,,AUTO
         0 001525   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001526   001573 600000 0                  TZE     s:9498

      691     9481    2           DO;      /* Got a DEFER block */

      692     9482    2           IF SETLOCK = 0 THEN

   9482  0 001527   200123 235100                    LDA     SETLOCK,,AUTO
         0 001530   001553 601000 0                  TNZ     s:9492

      693     9483    3             DO;

      694     9484                  %LOCK (G=STA$->KQ$STA.GATE);

   9485  0 001531   200006 236100                    LDQ     STA$,,AUTO
         0 001532   000016 036003                    ADLQ    14,DU
         0 001533   200136 756100                    STQ     J+2,,AUTO
         0 001534   200136 630500                    EPPR0   J+2,,AUTO
         0 001535   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001536   000000 701000 xent               TSX1    HFC$LOCK
         0 001537   000000 011000                    NOP     0

      695     9487    3             STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT+1;

   9487  0 001540   200006 470500                    LDP0    STA$,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:105  
         0 001541   000020 236100                    LDQ     16,,PR0
         0 001542   000001 036007                    ADLQ    1,DL
         0 001543   000020 552104                    STBQ    16,'04'O,PR0

      696     9488                  %UNLOCK (G=STA$->KQ$STA.GATE);

   9489  0 001544   200006 236100                    LDQ     STA$,,AUTO
         0 001545   000016 036003                    ADLQ    14,DU
         0 001546   200136 756100                    STQ     J+2,,AUTO
         0 001547   200136 630500                    EPPR0   J+2,,AUTO
         0 001550   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001551   000000 701000 xent               TSX1    HFC$UNLOCK
         0 001552   000000 011000                    NOP     0

      697     9491    3             END;

      698     9492    2           DBLK$->KQ$DFRBLK.INFO$=STA$;

   9492  0 001553   200006 236100                    LDQ     STA$,,AUTO
         0 001554   200011 470500                    LDP0    DBLK$,,AUTO
         0 001555   000006 756100                    STQ     6,,PR0

      699     9493    2           CALL KQD$DEFERGO (CG$->KQ$CG,DBLK$,ENTADDR(KQG$FCONT));

   9493  0 001556   001647 636000 0                  EAQ     s:9536
         0 001557   200136 756100                    STQ     J+2,,AUTO
         0 001560   200136 630500                    EPPR0   J+2,,AUTO
         0 001561   200141 450500                    STP0    J+5,,AUTO
         0 001562   200011 631500                    EPPR1   DBLK$,,AUTO
         0 001563   200140 451500                    STP1    J+4,,AUTO
         0 001564   200010 236100                    LDQ     CG$,,AUTO
         0 001565   200137 756100                    STQ     J+3,,AUTO
         0 001566   200137 630500                    EPPR0   J+3,,AUTO
         0 001567   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 001570   000000 701000 xent               TSX1    KQD$DEFERGO
         0 001571   000000 011000                    NOP     0

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:106  
      700     9494    2           RETURN;

   9494  0 001572   000000 702200 xent               TSX2  ! X66_ARET

      701     9495    2           END;
      702     9496        /**/
      703     9497        /**/
      704     9498    1         IF DDA = %KQDE_NDFRBLK THEN

   9498  0 001573   200013 235100                    LDA     DDA,,AUTO
         0 001574   000012 115007                    CMPA    10,DL
         0 001575   001611 601000 0                  TNZ     NOFETCH1

      705     9499    2   NDFR:   DO; /* No defer blocks available right now */

   9499  0 001576                       NDFR         null
      706     9500    2           IF GOTDFR = 0 THEN

   9500  0 001576   200044 235100                    LDA     GOTDFR,,AUTO
         0 001577   001604 601000 0                  TNZ     s:9505

      707     9501    3             DO;

      708     9502    3             RBLK$->KQ$RBLK.STATE=KQRS_COMP#;

   9502  0 001600   000001 220003                    LDX0    1,DU
         0 001601   200045 470500                    LDP0    RBLK$,,AUTO
         0 001602   000001 740100                    STX0    1,,PR0

      709     9503    3             GOTO NORBLKS;

   9503  0 001603   000573 710000 0                  TRA     NORBLKS

      710     9504    3             END;
      711     9505    2           CALL KQR$FDELAY (STA$->KQ$STA);

   9505  0 001604   200006 630500                    EPPR0   STA$,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:107  
         0 001605   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001606   000000 701000 xent               TSX1    KQR$FDELAY
         0 001607   000000 011000                    NOP     0

      712     9506    2           GOTO GETOUT;

   9506  0 001610   002064 710000 0                  TRA     GETOUT

   9498  0 001611                       NOFETCH1     null
      713     9507    2           END NDFR;
      714     9508        /**/
      715     9509        /**/
      716     9510                      /* Some other error */
      717     9511    1   NOFETCH1:;
      718     9512    2           DO CASE (DDA);

   9512  0 001611   200013 235100                    LDA     DDA,,AUTO
         0 001612   000007 115007                    CMPA    7,DL
         0 001613   001615 602005 0                  TNC     NOFETCH1+4,AL
         0 001614   001644 710000 0                  TRA     s:9523
         0 001615   001644 710000 0                  TRA     s:9523
         0 001616   001644 710000 0                  TRA     s:9523
         0 001617   001644 710000 0                  TRA     s:9523
         0 001620   001624 710000 0                  TRA     s:9515
         0 001621   001624 710000 0                  TRA     s:9515
         0 001622   001624 710000 0                  TRA     s:9515
         0 001623   001624 710000 0                  TRA     s:9515

      719     9513
      720     9514    2             CASE (%KQDE_STMP,%KQDE_STATE,%KQDE_BDDA,%KQDE_IOERR);

      721     9515    2               CALL KQR$LOGERR (STA$->KQ$STA);

   9515  0 001624   200006 630500                    EPPR0   STA$,,AUTO
         0 001625   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001626   000000 701000 xent               TSX1    KQR$LOGERR
         0 001627   000000 011000                    NOP     0
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:108  

      722     9516    2               RBLK=RBLK$->KQ$RBLK;

   9516  0 001630   200045 470500                    LDP0    RBLK$,,AUTO
         0 001631   000100 100500                    MLR     fill='000'O
         0 001632   000000 000070                    ADSC9   0,,PR0                   cn=0,n=56
         0 001633   200016 000110                    ADSC9   RBLK,,AUTO               cn=0,n=72

      723     9517    2               RBLK$->KQ$RBLK.STATE=KQRS_COMP#;

   9517  0 001634   000001 220003                    LDX0    1,DU
         0 001635   000001 740100                    STX0    1,,PR0

      724     9518    2               RBLK$->KQ$RBLK.NCDDA=0;

   9518  0 001636   200045 470500                    LDP0    RBLK$,,AUTO
         0 001637   000011 450100                    STZ     9,,PR0

      725     9519    2               RBLK$->KQ$RBLK.SECURE='0'B;

   9519  0 001640   200045 470500                    LDP0    RBLK$,,AUTO
         0 001641   000024 236000 1                  LDQ     20
         0 001642   000001 356100                    ANSQ    1,,PR0

      726     9520    2               GOTO GET2;

   9520  0 001643   001301 710000 0                  TRA     GET2

      727     9521
      728     9522    2             CASE (ELSE);

      729     9523    2               CALL SC_CGNOTIMP;

   9523  0 001644   000000 713400 xsym               CLIMB   SC_CGNOTIMP
         0 001645   000000 600000 xsid               climb   nvectors=         0

      730     9524
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:109  
      731     9525    2           END;

   9525  0 001646   001651 710000 0                  TRA     s:9538

      732     9526        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:110  
      733     9527        /**/
      734     9528        /*F* NAME:         KQG$FCONT
      735     9529             PURPOSE:      To continue a GET after a deferred FETCH
      736     9530             CALL:         KQG$FCONT (KQ$DFRPARM);
      737     9531             DESCRIPTION:  The defer params contain the station pointer,
      738     9532                           and the results of the FETCH.  Their pointer
      739     9533                           is stuffed into the station's RBLK, and we
      740     9534                           fall into KQG$FCONT1.
      741     9535        */
      742     9536    1   KQG$FCONT: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */

   9536  0 001647   000000 700200 xent  KQG$FCONT    TSX0  ! X66_AUTO_2
         0 001650   000146 000002                    ZERO    102,2

      743     9537        /**/
      744     9538    1         STA$=ADDR(PAR)->KQ$DFRPARM.INFO$;

   9538  0 001651   200003 470500                    LDP0    @PAR,,AUTO
         0 001652   000000 236100                    LDQ     0,,PR0
         0 001653   200006 756100                    STQ     STA$,,AUTO

      745     9539    1         RBLK$=STA$->KQ$STA.RBLK$;

   9539  0 001654   200006 471500                    LDP1    STA$,,AUTO
         0 001655   100011 236100                    LDQ     9,,PR1
         0 001656   200045 756100                    STQ     RBLK$,,AUTO

      746     9540    1         IF RBLK$->KQ$RBLK.STATE ~= KQRS_XFIP# THEN CALL SC_BCGGET;

   9540  0 001657   200045 473500                    LDP3    RBLK$,,AUTO
         0 001660   300001 220100                    LDX0    1,,PR3
         0 001661   000003 100003                    CMPX0   3,DU
         0 001662   001665 600000 0                  TZE     s:9541

   9540  0 001663   000000 713400 xsym               CLIMB   SC_BCGGET
         0 001664   000000 600000 xsid               climb   nvectors=         0

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:111  
      747     9541    1         RBLK$->KQ$RBLK.DFRP$=ADDR(PAR);

   9541  0 001665   200003 236100                    LDQ     @PAR,,AUTO
         0 001666   200045 470500                    LDP0    RBLK$,,AUTO
         0 001667   000013 756100                    STQ     11,,PR0

      748     9542        /* NK$LDCTAUTO$ needs to be set up */
      749     9543    1         NK$LDCTAUTO$ = STA$->KQ$STA.LDCT$ ;

   9543  0 001670   200006 470500                    LDP0    STA$,,AUTO
         0 001671   000010 236100                    LDQ     8,,PR0
         0 001672   200005 756100                    STQ     NK$LDCTAUTO$,,AUTO

      750     9544        /**/
      751     9545        /*F* NAME:         KQG$FCONT1
      752     9546             PURPOSE:      To continue a GET after a deferred FETCH
      753     9547             DESCRIPTION:  The RBLK DFRP$ points to the KQ$DFRPARM.
      754     9548
      755     9549                           The GET continues.
      756     9550        */
      757     9551    1         CALL ENTER;

   9551  0 001673   003014 701000 0                  TSX1    ENTER
         0 001674   000000 011000                    NOP     0

      758     9552    1         DFRP$=RBLK$->KQ$RBLK.DFRP$;

   9552  0 001675   200045 470500                    LDP0    RBLK$,,AUTO
         0 001676   000013 236100                    LDQ     11,,PR0
         0 001677   200043 756100                    STQ     DFRP$,,AUTO

      759     9553    1         DBLK$=DFRP$->KQ$DFRPARM.DBLK$;

   9553  0 001700   200043 471500                    LDP1    DFRP$,,AUTO
         0 001701   100001 236100                    LDQ     1,,PR1
         0 001702   200011 756100                    STQ     DBLK$,,AUTO

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:112  
      760     9554    1         RBLK$->KQ$RBLK.DBLK$=DBLK$;

   9554  0 001703   000013 756100                    STQ     11,,PR0

      761     9555    1         IF DBLK$ = ADDR(NIL) THEN

   9555  0 001704   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001705   001711 601000 0                  TNZ     s:9560

      762     9556    2           DO;

      763     9557    2           DDA=DFRP$->KQ$DFRPARM.ERR;

   9557  0 001706   100004 235100                    LDA     4,,PR1
         0 001707   200013 755100                    STA     DDA,,AUTO

      764     9558    2           GOTO NOFETCH1;

   9558  0 001710   001611 710000 0                  TRA     NOFETCH1

      765     9559    2           END;
      766     9560    1         GOTO GOTMSG2;

   9560  0 001711   000775 710000 0                  TRA     GOTMSG2

      767     9561        /**/
      768     9562        /*F* NAME:         KQG$PCW
      769     9563             PURPOSE:      To call KCD$WRITE when it couldn't do its job
      770     9564             DESCRIPTION:  If KCD$WRITE cannot complete its function, then
      771     9565                           it ALTRETs with error code KQGE_PCW#, and causes
      772     9566                           KQG$PCW to be called later.  This simply results
      773     9567                           in KCD$WRITE being called again.
      774     9568        */
      775     9569    1   KQG$PCW: ENTRY (PAR) ALTRET;

   9569  0 001712   000000 700200 xent  KQG$PCW      TSX0  ! X66_AUTO_2
         0 001713   000146 000002                    ZERO    102,2
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:113  

      776     9570        /**/
      777     9571    1         NK$LDCTAUTO$ = ADDR(PAR);

   9571  0 001714   200003 236100                    LDQ     @PAR,,AUTO
         0 001715   200005 756100                    STQ     NK$LDCTAUTO$,,AUTO

      778     9572    1         CALL SETUP ALTRET(RTN);

   9572  0 001716   002715 701000 0                  TSX1    SETUP
         0 001717   002066 702000 0                  TSX2    RTN

      779     9573    1         IF RBLK$->KQ$RBLK.STATE ~= KQRS_XFIW# THEN CALL SC_BCGGET;

   9573  0 001720   200045 470500                    LDP0    RBLK$,,AUTO
         0 001721   000001 220100                    LDX0    1,,PR0
         0 001722   000006 100003                    CMPX0   6,DU
         0 001723   001726 600000 0                  TZE     s:9574

   9573  0 001724   000000 713400 xsym               CLIMB   SC_BCGGET
         0 001725   000000 600000 xsid               climb   nvectors=         0

      780     9574    1         IF RBLK$->KQ$RBLK.IOQ$ ~= ADDR(NIL) THEN

   9574  0 001726   200045 470500                    LDP0    RBLK$,,AUTO
         0 001727   000015 236100                    LDQ     13,,PR0
         0 001730   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001731   001737 600000 0                  TZE     s:9579

      781     9575    2           DO;

      782     9576    2           CALL UNREG(3);

   9576  0 001732   000025 236000 1                  LDQ     21
         0 001733   200133 756100                    STQ     AUTOGATE+3,,AUTO
         0 001734   003201 701000 0                  TSX1    UNREG
         0 001735   000000 011000                    NOP     0
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:114  

      783     9577    2           GOTO GETOUT;

   9577  0 001736   002064 710000 0                  TRA     GETOUT

      784     9578    2           END;
      785     9579    1         MBLK$=RBLK$->KQ$RBLK.MBLK$;

   9579  0 001737   000000 236100                    LDQ     0,,PR0
         0 001740   200007 756100                    STQ     MBLK$,,AUTO

      786     9580    1         GOTO GOTMSG2;

   9580  0 001741   000775 710000 0                  TRA     GOTMSG2

      787     9581        /**/
      788     9582        /*F* NAME:         KQG$DFETCH
      789     9583             PURPOSE:      To continue a GET by re-trying a FETCH which
      790     9584                           failed due to no defer blocks.
      791     9585             DESCRIPTION:  Called from KCC$CLOCK.
      792     9586        */
      793     9587    1   KQG$DFETCH: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */

   9587  0 001742   000000 700200 xent  KQG$DFETCH   TSX0  ! X66_AUTO_2
         0 001743   000146 000002                    ZERO    102,2

      794     9588        /**/
      795     9589    1         NK$LDCTAUTO$ = ADDR(PAR);

   9589  0 001744   200003 236100                    LDQ     @PAR,,AUTO
         0 001745   200005 756100                    STQ     NK$LDCTAUTO$,,AUTO

      796     9590    1         CALL ENTER;

   9590  0 001746   003014 701000 0                  TSX1    ENTER
         0 001747   000000 011000                    NOP     0

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:115  
      797     9591    1         IF RBLK$->KQ$RBLK.STATE ~= KQRS_NFET# THEN CALL SC_BCGGET;

   9591  0 001750   200045 470500                    LDP0    RBLK$,,AUTO
         0 001751   000001 220100                    LDX0    1,,PR0
         0 001752   000011 100003                    CMPX0   9,DU
         0 001753   001756 600000 0                  TZE     s:9592

   9591  0 001754   000000 713400 xsym               CLIMB   SC_BCGGET
         0 001755   000000 600000 xsid               climb   nvectors=         0

      798     9592    1         RBLK$->KQ$RBLK.STATE=KQRS_XFIP#;

   9592  0 001756   000003 220003                    LDX0    3,DU
         0 001757   200045 470500                    LDP0    RBLK$,,AUTO
         0 001760   000001 740100                    STX0    1,,PR0

      799     9593    1         GOTO GOTMSG1;

   9593  0 001761   000740 710000 0                  TRA     GOTMSG1

      800     9594        /**/
      801     9595        /*F* NAME:         KQG$DVGET
      802     9596             PURPOSE:      To continue a GET by re-trying a VGET which
      803     9597                           failed due to a full FEP WSQ.
      804     9598             DESCRIPTION:  Called from KCC$CLOCK.
      805     9599        */
      806     9600    1   KQG$DVGET: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */

   9600  0 001762   000000 700200 xent  KQG$DVGET    TSX0  ! X66_AUTO_2
         0 001763   000146 000002                    ZERO    102,2

      807     9601        /**/
      808     9602    1         NK$LDCTAUTO$ = ADDR(PAR);

   9602  0 001764   200003 236100                    LDQ     @PAR,,AUTO
         0 001765   200005 756100                    STQ     NK$LDCTAUTO$,,AUTO

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:116  
      809     9603    1         CALL ENTER;

   9603  0 001766   003014 701000 0                  TSX1    ENTER
         0 001767   000000 011000                    NOP     0

      810     9604    1         IF RBLK$->KQ$RBLK.STATE ~= KQRS_NVGT# THEN CALL SC_BCGGET;

   9604  0 001770   200045 470500                    LDP0    RBLK$,,AUTO
         0 001771   000001 220100                    LDX0    1,,PR0
         0 001772   000010 100003                    CMPX0   8,DU
         0 001773   001776 600000 0                  TZE     s:9605

   9604  0 001774   000000 713400 xsym               CLIMB   SC_BCGGET
         0 001775   000000 600000 xsid               climb   nvectors=         0

      811     9605    1         GOTO GOTMSG2;

   9605  0 001776   000775 710000 0                  TRA     GOTMSG2

      812     9606        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:117  
      813     9607        /**/
      814     9608        /*F* NAME:         KQG$DONE
      815     9609             PURPOSE:      To finish a GET
      816     9610             DESCRIPTION:  Called when the msg passed to KCD$WRITE has
      817     9611                           been sent to the TERMINAL.
      818     9612        */
      819     9613    1   KQG$DONE: ENTRY (PAR,K$RWPARM) ALTRET;

   9613  0 001777   000000 700200 xent  KQG$DONE     TSX0  ! X66_AUTO_2
         0 002000   000146 000002                    ZERO    102,2

      820     9614        /**/
      821     9615    1         NK$LDCTAUTO$ = ADDR(PAR);

   9615  0 002001   200003 236100                    LDQ     @PAR,,AUTO
         0 002002   200005 756100                    STQ     NK$LDCTAUTO$,,AUTO

      822     9616    1         CALL SETUP ALTRET(RTN);

   9616  0 002003   002715 701000 0                  TSX1    SETUP
         0 002004   002066 702000 0                  TSX2    RTN

      823     9617    1         DOGET=0;

   9617  0 002005   200041 450100                    STZ     DOGET,,AUTO

   9617  0 002006                       DONE         null
      824     9618    1   DONE: ;
      825     9619    1         IF RBLK$->KQ$RBLK.STATE = KQRS_XFIW# THEN

   9619  0 002006   200045 470500                    LDP0    RBLK$,,AUTO
         0 002007   000001 220100                    LDX0    1,,PR0
         0 002010   000006 100003                    CMPX0   6,DU
         0 002011   002057 601000 0                  TNZ     s:9636

      826     9620    2           DO;

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:118  
      827     9621    2           IF RBLK$->KQ$RBLK.IOQ$ ~= ADDR(NIL) THEN

   9621  0 002012   000015 236100                    LDQ     13,,PR0
         0 002013   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002014   002031 600000 0                  TZE     s:9627

      828     9622    3             DO;

      829     9623    3             RBLK$->KQ$RBLK.IOQ$->N$REQ.TYC=K$RWPARM.TYC;

   9623  0 002015   000015 471500                    LDP1    13,,PR0
         0 002016   200004 473500                    LDP3    @K$RWPARM,,AUTO
         0 002017   300006 236100                    LDQ     6,,PR3
         0 002020   100021 756100                    STQ     17,,PR1

      830     9624    3             CALL UNREG (DOGET+1);

   9624  0 002021   200041 235100                    LDA     DOGET,,AUTO
         0 002022   000001 035007                    ADLA    1,DL
         0 002023   200145 755100                    STA     J+9,,AUTO
         0 002024   200145 630500                    EPPR0   J+9,,AUTO
         0 002025   200133 450500                    STP0    AUTOGATE+3,,AUTO
         0 002026   003201 701000 0                  TSX1    UNREG
         0 002027   000000 011000                    NOP     0

      831     9625    3             END;

   9625  0 002030   002053 710000 0                  TRA     s:9634

      832     9626    2           ELSE
      833     9627    2            IF RBLK$->KQ$RBLK.DBLK$ ~= ADDR(NIL) THEN

   9627  0 002031   000013 236100                    LDQ     11,,PR0
         0 002032   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002033   002053 600000 0                  TZE     s:9634

      834     9628    3              DO;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:119  

      835     9629    3              DBLK$=RBLK$->KQ$RBLK.DBLK$;

   9629  0 002034   200011 756100                    STQ     DBLK$,,AUTO

      836     9630    3              RBLK$->KQ$RBLK.DBLK$=ADDR(NIL);

   9630  0 002035   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 002036   000013 756100                    STQ     11,,PR0

      837     9631    3              RBLK$->KQ$RBLK.NCDDA=DBLK$->KQ$DBLK.FLNKDA;

   9631  0 002037   200011 470500                    LDP0    DBLK$,,AUTO
         0 002040   200045 471500                    LDP1    RBLK$,,AUTO
         0 002041   000001 235100                    LDA     1,,PR0
         0 002042   100011 755100                    STA     9,,PR1

      838     9632    3              CALL KQD$UNLOCK (CG$->KQ$CG,DBLK$);

   9632  0 002043   200011 630500                    EPPR0   DBLK$,,AUTO
         0 002044   200137 450500                    STP0    J+3,,AUTO
         0 002045   200010 236100                    LDQ     CG$,,AUTO
         0 002046   200136 756100                    STQ     J+2,,AUTO
         0 002047   200136 630500                    EPPR0   J+2,,AUTO
         0 002050   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 002051   000000 701000 xent               TSX1    KQD$UNLOCK
         0 002052   000000 011000                    NOP     0

      839     9633    3              END;

      840     9634    2           RBLK$->KQ$RBLK.STATE=KQRS_COMP#;

   9634  0 002053   000001 220003                    LDX0    1,DU
         0 002054   200045 470500                    LDP0    RBLK$,,AUTO
         0 002055   000001 740100                    STX0    1,,PR0

      841     9635    2           END;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:120  

   9635  0 002056   002062 710000 0                  TRA     s:9637

      842     9636    1         ELSE IF RBLK$->KQ$RBLK.STATE ~= KQRS_COMP# THEN RETURN;

   9636  0 002057   000001 100003                    CMPX0   1,DU
         0 002060   002062 600000 0                  TZE     s:9637

   9636  0 002061   000000 702200 xent               TSX2  ! X66_ARET

      843     9637    1         IF DOGET ~= 0 THEN GOTO GET2;

   9637  0 002062   200041 235100                    LDA     DOGET,,AUTO
         0 002063   001301 601000 0                  TNZ     GET2

   9637  0 002064                       GETOUT       null
      844     9638    1   GETOUT:;
      845     9639    1         CALL XIT;

   9639  0 002064   003042 701000 0                  TSX1    XIT
         0 002065   000000 011000                    NOP     0

   9637  0 002066                       RTN          null
      846     9640    1   RTN:  ;
      847     9641    1         RETURN;

   9641  0 002066   000000 702200 xent               TSX2  ! X66_ARET

      848     9642        /**/
      849     9643        /*F* NAME:         KQG$COMP
      850     9644             PURPOSE:      To complete a secure GET
      851     9645             DESCRIPTION:  If the comgroup is SECURE, then a GETed message
      852     9646                           is not deleted until KQG$COMP is called.  This
      853     9647                           occurs after KQG$DONE is called, and when the
      854     9648                           data is guaranteed to have been output.
      855     9649
      856     9650                           Unless the comgroup is running forms, COMPing a
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:121  
      857     9651                           msg causes all unCOMPed msgs xmitted prior to the
      858     9652                           COMPed one to be put back in the queue (assumption
      859     9653                           being they will never be COMPed).
      860     9654
      861     9655                           The message identified by K$RWPARM.BLKREC is
      862     9656                           found and deleted.
      863     9657        */
      864     9658    1   KQG$COMP: ENTRY (PAR,K$RWPARM) ALTRET; /* !!Doesn't ALTRET!! */

   9658  0 002067   000000 700200 xent  KQG$COMP     TSX0  ! X66_AUTO_2
         0 002070   000146 000002                    ZERO    102,2

      865     9659        /**/
      866     9660    1         NK$LDCTAUTO$ = ADDR(PAR);

   9660  0 002071   200003 236100                    LDQ     @PAR,,AUTO
         0 002072   200005 756100                    STQ     NK$LDCTAUTO$,,AUTO

      867     9661    1         CALL SETUPNS ALTRET(RTN);

   9661  0 002073   002721 701000 0                  TSX1    SETUPNS
         0 002074   002066 702000 0                  TSX2    RTN

      868     9662    1         MBSTAMPR.TOP=K$RWPARM.BLKREC.BLK#.B;

   9662  0 002075   200004 470500                    LDP0    @K$RWPARM,,AUTO
         0 002076   000007 236100                    LDQ     7,,PR0
         0 002077   000020 736000                    QLS     16
         0 002100   200042 676100                    ERQ     MBSTAMP,,AUTO
         0 002101   600000 376003                    ANQ     -65536,DU
         0 002102   200042 656100                    ERSQ    MBSTAMP,,AUTO

      869     9663    1         MBSTAMPR.MID=K$RWPARM.BLKREC.REC#.T;

   9663  0 002103   000007 236100                    LDQ     7,,PR0
         0 002104   000021 736000                    QLS     17
         0 002105   200042 676100                    ERQ     MBSTAMP,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:122  
         0 002106   177400 376003                    ANQ     65280,DU
         0 002107   200042 656100                    ERSQ    MBSTAMP,,AUTO

      870     9664    1         MBSTAMPR.BOT=K$RWPARM.BLKREC.REC#.B;

   9664  0 002110   000007 236100                    LDQ     7,,PR0
         0 002111   000022 736000                    QLS     18
         0 002112   200042 676100                    ERQ     MBSTAMP,,AUTO
         0 002113   000377 376003                    ANQ     255,DU
         0 002114   200042 656100                    ERSQ    MBSTAMP,,AUTO

      871     9665              %LOCK (G=STA$->KQ$STA.GATE);

   9666  0 002115   200006 236100                    LDQ     STA$,,AUTO
         0 002116   000016 036003                    ADLQ    14,DU
         0 002117   200136 756100                    STQ     J+2,,AUTO
         0 002120   200136 630500                    EPPR0   J+2,,AUTO
         0 002121   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002122   000000 701000 xent               TSX1    HFC$LOCK
         0 002123   000000 011000                    NOP     0

      872     9668    1         P$=ADDR(STA$->KQ$STA.SGHD$);

   9668  0 002124   200006 236100                    LDQ     STA$,,AUTO
         0 002125   000014 036003                    ADLQ    12,DU
         0 002126   200121 756100                    STQ     P$,,AUTO

      873     9669    1         MBLK$=P$->B$$PTR;

   9669  0 002127   200121 470500                    LDP0    P$,,AUTO
         0 002130   000000 236100                    LDQ     0,,PR0
         0 002131   200007 756100                    STQ     MBLK$,,AUTO

      874     9670    2           DO WHILE (MBLK$ ~= ADDR(NIL));

   9670  0 002132   002157 710000 0                  TRA     s:9679

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:123  
      875     9671    2           IF MBSTAMP = MBLK$->KQ$MBLK.STAMP THEN

   9671  0 002133   200007 470500                    LDP0    MBLK$,,AUTO
         0 002134   000001 720100                    LXL0    1,,PR0
         0 002135   200042 100100                    CMPX0   MBSTAMP,,AUTO
         0 002136   002152 601000 0                  TNZ     s:9677

      876     9672    3             DO INHIBIT;

      877     9673    3             P$->B$$PTR=MBLK$->KQ$MBLK.LNK$;

   9673  0 002137   000000 236300                    LDQ   ! 0,,PR0
         0 002140   200121 471700                    LDP1  ! P$,,AUTO
         0 002141   100000 756300                    STQ   ! 0,,PR1

      878     9674    3             CALL KQU$DELMSG (CG$->KQ$CG,MBLK$->KQ$MBLK);

   9674  0 002142   200007 236300                    LDQ   ! MBLK$,,AUTO
         0 002143   200010 235300                    LDA   ! CG$,,AUTO
         0 002144   200136 757300                    STAQ  ! J+2,,AUTO
         0 002145   200136 630700                    EPPR0 ! J+2,,AUTO
         0 002146   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         0 002147   000000 701200 xent               TSX1  ! KQU$DELMSG
         0 002150   000000 011200                    NOP   ! 0

      879     9675    3             GOTO GETOUTNL;

   9675  0 002151   000561 710200 0                  TRA   ! GETOUTNL

      880     9676    3             END;

      881     9677    2           P$=ADDR(MBLK$->KQ$MBLK.LNK$);

   9677  0 002152   200007 236100                    LDQ     MBLK$,,AUTO
         0 002153   200121 756100                    STQ     P$,,AUTO

      882     9678    2           MBLK$=P$->B$$PTR;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:124  

   9678  0 002154   200121 470500                    LDP0    P$,,AUTO
         0 002155   000000 236100                    LDQ     0,,PR0
         0 002156   200007 756100                    STQ     MBLK$,,AUTO

      883     9679    2           END;

   9679  0 002157   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002160   002133 601000 0                  TNZ     s:9671

      884     9680    1         RBLK$=STA$->KQ$STA.RBLK$;

   9680  0 002161   200006 471500                    LDP1    STA$,,AUTO
         0 002162   100011 236100                    LDQ     9,,PR1
         0 002163   200045 756100                    STQ     RBLK$,,AUTO

      885     9681    1         IF RBLK$ ~= ADDR(NIL) THEN

   9681  0 002164   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002165   002217 600000 0                  TZE     s:9691

      886     9682    1          IF RBLK$->KQ$RBLK.SECURE THEN

   9682  0 002166   200045 473500                    LDP3    RBLK$,,AUTO
         0 002167   300001 236100                    LDQ     1,,PR3
         0 002170   400000 316007                    CANQ    -131072,DL
         0 002171   002217 600000 0                  TZE     s:9691

      887     9683    1           IF RBLK$->KQ$RBLK.MBLK$ ~= ADDR(NIL) THEN

   9683  0 002172   300000 236100                    LDQ     0,,PR3
         0 002173   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002174   002217 600000 0                  TZE     s:9691

      888     9684    1            IF MBSTAMP = RBLK$->KQ$RBLK.MBLK$->KQ$MBLK.STAMP THEN

   9684  0 002175   300000 474500                    LDP4    0,,PR3
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:125  
         0 002176   400001 720100                    LXL0    1,,PR4
         0 002177   200042 100100                    CMPX0   MBSTAMP,,AUTO
         0 002200   002217 601000 0                  TNZ     s:9691

      889     9685    1             IF RBLK$->KQ$RBLK.NCDDA = 0 THEN

   9685  0 002201   300011 235100                    LDA     9,,PR3
         0 002202   002217 601000 0                  TNZ     s:9691

      890     9686    2              IF RBLK$->KQ$RBLK.STATE = KQRS_COMP# THEN DO;

   9686  0 002203   300001 221100                    LDX1    1,,PR3
         0 002204   000001 101003                    CMPX1   1,DU
         0 002205   002215 601000 0                  TNZ     s:9690

      891     9687    2                RBLK$->KQ$RBLK.NCDDA=RBLK$->KQ$RBLK.MBLK$->KQ$MBLK.DDA;

   9687  0 002206   400006 235100                    LDA     6,,PR4
         0 002207   300011 755100                    STA     9,,PR3

      892     9688    2                CALL KQU$DELREAD (STA$->KQ$STA);

   9688  0 002210   200006 630500                    EPPR0   STA$,,AUTO
         0 002211   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002212   000000 701000 xent               TSX1    KQU$DELREAD
         0 002213   000000 011000                    NOP     0

      893     9689    2                END;

   9689  0 002214   002217 710000 0                  TRA     s:9691

      894     9690    1              ELSE RBLK$->KQ$RBLK.COMP='1'B;

   9690  0 002215   100000 236007                    LDQ     32768,DL
         0 002216   300001 256100                    ORSQ    1,,PR3

      895     9691    1         GOTO GETOUTNL;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:126  

   9691  0 002217   000561 710000 0                  TRA     GETOUTNL

      896     9692        /**/
      897     9693        /*F* NAME:         KQG$CANCEL
      898     9694             PURPOSE:      To cancel a pending GET
      899     9695             DESCRIPTION:  ALTRETs unless a GET is pending.  Else cancels
      900     9696                           it, decrements STA.READS, and RETURNs.
      901     9697        */
      902     9698    1   KQG$CANCEL: ENTRY (PAR) ALTRET;

   9698  0 002220   000000 700200 xent  KQG$CANCEL   TSX0  ! X66_AUTO_2
         0 002221   000146 000002                    ZERO    102,2

      903     9699        /**/
      904     9700    1         NK$LDCTAUTO$ = ADDR(PAR);

   9700  0 002222   200003 236100                    LDQ     @PAR,,AUTO
         0 002223   200005 756100                    STQ     NK$LDCTAUTO$,,AUTO

      905     9701    1         CALL SETUP ALTRET(ALTRT);

   9701  0 002224   002715 701000 0                  TSX1    SETUP
         0 002225   000604 702000 0                  TSX2    ALTRT

      906     9702              %LOCK (G=STA$->KQ$STA.GATE);

   9703  0 002226   200006 236100                    LDQ     STA$,,AUTO
         0 002227   000016 036003                    ADLQ    14,DU
         0 002230   200136 756100                    STQ     J+2,,AUTO
         0 002231   200136 630500                    EPPR0   J+2,,AUTO
         0 002232   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002233   000000 701000 xent               TSX1    HFC$LOCK
         0 002234   000000 011000                    NOP     0

      907     9705    1         IF RBLK$ = ADDR(NIL)

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:127  
   9705  0 002235   200045 236100                    LDQ     RBLK$,,AUTO
         0 002236   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002237   002244 600000 0                  TZE     s:9708
         0 002240   200045 470500                    LDP0    RBLK$,,AUTO
         0 002241   000001 220100                    LDX0    1,,PR0
         0 002242   000001 100003                    CMPX0   1,DU
         0 002243   002247 601000 0                  TNZ     s:9711

      908     9706    1         OR RBLK$->KQ$RBLK.STATE = KQRS_COMP#
      909     9707    2         THEN DO;

      910     9708    2           CALL XITNL;

   9708  0 002244   003056 701000 0                  TSX1    XITNL
         0 002245   000000 011000                    NOP     0

      911     9709    2           RETURN;

   9709  0 002246   000000 702200 xent               TSX2  ! X66_ARET

      912     9710    2           END;
      913     9711    1         IF RBLK$->KQ$RBLK.STATE ~= KQRS_PEND#

   9711  0 002247   000002 100003                    CMPX0   2,DU
         0 002250   002254 600000 0                  TZE     s:9716

      914     9712    2         THEN DO;

      915     9713    2           CALL XITNL;

   9713  0 002251   003056 701000 0                  TSX1    XITNL
         0 002252   000000 011000                    NOP     0

      916     9714    2           ALTRETURN;

   9714  0 002253   000000 702200 xent               TSX2  ! X66_AALT

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:128  
      917     9715    2           END;
      918     9716    1         RBLK$->KQ$RBLK.STATE=KQRS_COMP#;

   9716  0 002254   000001 221003                    LDX1    1,DU
         0 002255   000001 741100                    STX1    1,,PR0

      919     9717    1         STA$->KQ$STA.READS=STA$->KQ$STA.READS-1;

   9717  0 002256   200006 470500                    LDP0    STA$,,AUTO
         0 002257   000001 336007                    LCQ     1,DL
         0 002260   000026 056100                    ASQ     22,,PR0

      920     9718    1         IF RBLK$->KQ$RBLK.MBLK$ ~= ADDR(NIL) THEN CALL SC_BCGGET;

   9718  0 002261   200045 471500                    LDP1    RBLK$,,AUTO
         0 002262   100000 236100                    LDQ     0,,PR1
         0 002263   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002264   002267 600000 0                  TZE     s:9719

   9718  0 002265   000000 713400 xsym               CLIMB   SC_BCGGET
         0 002266   000000 600000 xsid               climb   nvectors=         0

      921     9719    1         RBLK$->KQ$RBLK.NCDDA=0;

   9719  0 002267   200045 470500                    LDP0    RBLK$,,AUTO
         0 002270   000011 450100                    STZ     9,,PR0

      922     9720    1         GOTO GETOUTNL;

   9720  0 002271   000561 710000 0                  TRA     GETOUTNL

      923     9721        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:129  
      924     9722        /**/
      925     9723        /*F* NAME:         KQG$CLEANUP
      926     9724             PURPOSE:      To clean up GETs during a disconnect
      927     9725             DESCRIPTION:  Called from KQP$FDISC to run down GETs.
      928     9726                           Sets DSID to infinity.
      929     9727                           Also deletes '*' msgs if required.
      930     9728                           Station block locked when called; unlocked
      931     9729                           upon return.
      932     9730                           Station LOCKCNT counted up on entry;
      933     9731                           not counted down.
      934     9732
      935     9733                           If a delay is required, ALTRETs and calls back
      936     9734                           to KQP$CDISC when finished, with station gate
      937     9735                           unlocked.
      938     9736        */
      939     9737    1   KQG$CLEANUP: ENTRY (PAR) ALTRET;

   9737  0 002272   000000 700200 xent  KQG$CLEANUP  TSX0  ! X66_AUTO_2
         0 002273   000146 000002                    ZERO    102,2

      940     9738        /**/
      941     9739    1         NK$LDCTAUTO$ = ADDR(PAR);

   9739  0 002274   200003 236100                    LDQ     @PAR,,AUTO
         0 002275   200005 756100                    STQ     NK$LDCTAUTO$,,AUTO

      942     9740    1         STA$=NK$LDCT.STA$;

   9740  0 002276   200005 470500                    LDP0    NK$LDCTAUTO$,,AUTO
         0 002277   000012 236100                    LDQ     10,,PR0
         0 002300   200006 756100                    STQ     STA$,,AUTO

      943     9741    1         CG$=NK$LDCT.CG$;

   9741  0 002301   000027 236100                    LDQ     23,,PR0
         0 002302   200010 756100                    STQ     CG$,,AUTO

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:130  
   9741  0 002303                       CLEANUP      null
      944     9742    1   CLEANUP:;
      945     9743    1         SETLOCK=0;

   9743  0 002303   200123 450100                    STZ     SETLOCK,,AUTO

      946     9744    1         STA$->KQ$STA.DSID=BITBIN('777777777777'O);

   9744  0 002304   200006 470500                    LDP0    STA$,,AUTO
         0 002305   000027 235000 xsym               LDA     B_VECTNIL+23
         0 002306   000022 755100                    STA     18,,PR0

      947     9745    1         RBLK$=STA$->KQ$STA.RBLK$;

   9745  0 002307   000011 236100                    LDQ     9,,PR0
         0 002310   200045 756100                    STQ     RBLK$,,AUTO

      948     9746    1         IF RBLK$ ~= ADDR(NIL) THEN

   9746  0 002311   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002312   002367 600000 0                  TZE     s:9770

      949     9747    2           DO CASE (RBLK$->KQ$RBLK.STATE);

   9747  0 002313   200045 471500                    LDP1    RBLK$,,AUTO
         0 002314   100001 220100                    LDX0    1,,PR1
         0 002315   000012 100003                    CMPX0   10,DU
         0 002316   002320 602010 0                  TNC     s:9747+5,X0
         0 002317   002365 710000 0                  TRA     s:9765
         0 002320   002332 710000 0                  TRA     RELRBLKT
         0 002321   002346 710000 0                  TRA     CL1
         0 002322   002332 710000 0                  TRA     RELRBLKT
         0 002323   002346 710000 0                  TRA     CL1
         0 002324   002365 710000 0                  TRA     s:9765
         0 002325   002365 710000 0                  TRA     s:9765
         0 002326   002351 710000 0                  TRA     s:9760
         0 002327   002365 710000 0                  TRA     s:9765
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:131  
         0 002330   002351 710000 0                  TRA     s:9760
         0 002331   002346 710000 0                  TRA     CL1

      950     9748
      951     9749    2             CASE (KQRS_PEND#,KQRS_RSIP#);

   9747  0 002332                       RELRBLKT     null
      952     9750    2   RELRBLKT:   ;
      953     9751    2               STA$->KQ$STA.RBLK$=ADDR(NIL);

   9751  0 002332   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 002333   200006 470500                    LDP0    STA$,,AUTO
         0 002334   000011 756100                    STQ     9,,PR0

      954     9752    2               CALL KQM$RELRBLKT (CG$->KQ$CG,RBLK$);

   9752  0 002335   200045 631500                    EPPR1   RBLK$,,AUTO
         0 002336   200137 451500                    STP1    J+3,,AUTO
         0 002337   200010 236100                    LDQ     CG$,,AUTO
         0 002340   200136 756100                    STQ     J+2,,AUTO
         0 002341   200136 630500                    EPPR0   J+2,,AUTO
         0 002342   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 002343   000000 701000 xent               TSX1    KQM$RELRBLKT
         0 002344   000000 011000                    NOP     0
         0 002345   002367 710000 0                  TRA     s:9770

      955     9753
      956     9754    2             CASE (KQRS_COMP#,KQRS_XFIP#,KQRS_NFET#);

   9751  0 002346                       CL1          null
      957     9755    2   CL1:        ;
      958     9756    2               CALL DUMPRD;

   9756  0 002346   003252 701000 0                  TSX1    DUMPRD
         0 002347   000000 011000                    NOP     0

      959     9757    2               GOTO RELRBLKT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:132  

   9757  0 002350   002332 710000 0                  TRA     RELRBLKT

      960     9758
      961     9759    2             CASE (KQRS_XFIW#,KQRS_NVGT#);

      962     9760    2               IF RBLK$->KQ$RBLK.DBLK$ ~= ADDR(NIL) THEN

   9760  0 002351   100013 236100                    LDQ     11,,PR1
         0 002352   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002353   002364 600000 0                  TZE     s:9762

      963     9761    2                CALL KQD$UNLOCK (CG$->KQ$CG,RBLK$->KQ$RBLK.DBLK$);

   9761  0 002354   200045 236100                    LDQ     RBLK$,,AUTO
         0 002355   000013 036003                    ADLQ    11,DU
         0 002356   200010 235100                    LDA     CG$,,AUTO
         0 002357   200136 757100                    STAQ    J+2,,AUTO
         0 002360   200136 630500                    EPPR0   J+2,,AUTO
         0 002361   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 002362   000000 701000 xent               TSX1    KQD$UNLOCK
         0 002363   000000 011000                    NOP     0

      964     9762    2               GOTO CL1;

   9762  0 002364   002346 710000 0                  TRA     CL1

      965     9763
      966     9764    2             CASE (ELSE);

      967     9765    2               CALL SC_BCGGET;

   9765  0 002365   000000 713400 xsym               CLIMB   SC_BCGGET
         0 002366   000000 600000 xsid               climb   nvectors=         0

      968     9766
      969     9767    2           END; /*CASE RBLK$->KQ$RBLK.STATE*/
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:133  

      970     9768        /**/
      971     9769                                /* Merge secure GETs back in */
      972     9770    1         CALL MERGE (STA$->KQ$STA.SGHD$);

   9770  0 002367   200006 236100                    LDQ     STA$,,AUTO
         0 002370   000014 036003                    ADLQ    12,DU
         0 002371   200133 756100                    STQ     AUTOGATE+3,,AUTO
         0 002372   003336 701000 0                  TSX1    MERGE
         0 002373   000000 011000                    NOP     0

      973     9771              %UNLOCK (G=STA$->KQ$STA.GATE);

   9772  0 002374   200006 236100                    LDQ     STA$,,AUTO
         0 002375   000016 036003                    ADLQ    14,DU
         0 002376   200136 756100                    STQ     J+2,,AUTO
         0 002377   200136 630500                    EPPR0   J+2,,AUTO
         0 002400   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002401   000000 701000 xent               TSX1    HFC$UNLOCK
         0 002402   000000 011000                    NOP     0

      974     9774    1         IF  NOT STA$->KQ$STA.STARSDUN

   9774  0 002403   200006 470500                    LDP0    STA$,,AUTO
         0 002404   000023 236100                    LDQ     19,,PR0
         0 002405   002000 316007                    CANQ    1024,DL
         0 002406   002576 601000 0                  TNZ     CL40
         0 002407   200010 471500                    LDP1    CG$,,AUTO
         0 002410   100133 236100                    LDQ     91,,PR1
         0 002411   000002 316007                    CANQ    2,DL
         0 002412   002576 600000 0                  TZE     CL40

      975     9775    1         AND CG$->KQ$CG.AUCTL.SMD THEN
      976     9776    2           DO;

      977     9777                     /*    Get rid of '*' messages by reading for them.
      978     9778                      *    Since DSID is infinite, they will be discarded
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:134  
      979     9779                      *    automatically.  If
      980     9780                      *    this is recovery, the user is blocked
      981     9781                      *    across the process.  Otherwise (disc)
      982     9782                      *    we may have to ALTRET & call KQP$CDISC
      983     9783                      *    back when we're done.
      984     9784                      *
      985     9785                      *    Note that if people try to write
      986     9786                      *    to us while we're doing this,
      987     9787                      *    then if they're writing star
      988     9788                      *    messages, DSID will cause the
      989     9789                      *    msgs to get deleted; else
      990     9790                      *    they won't satisfy our read
      991     9791                      *    (which explicitly asks for
      992     9792                      *    *), and will just insert into
      993     9793                      *    the MLH which is perfectly OK.
      994     9794                      */
      995     9795    2           CALL KQM$GETRBLKT (CG$->KQ$CG,RBLK$,I) ALTRET(CL40);

   9795  0 002413   200012 633500                    EPPR3   I,,AUTO
         0 002414   200140 453500                    STP3    J+4,,AUTO
         0 002415   200045 634500                    EPPR4   RBLK$,,AUTO
         0 002416   200137 454500                    STP4    J+3,,AUTO
         0 002417   200010 236100                    LDQ     CG$,,AUTO
         0 002420   200136 756100                    STQ     J+2,,AUTO
         0 002421   200136 630500                    EPPR0   J+2,,AUTO
         0 002422   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 002423   000000 701000 xent               TSX1    KQM$GETRBLKT
         0 002424   002576 702000 0                  TSX2    CL40

   9795  0 002425                       CL2          null
      996     9796    2   CL2:    ;
      997     9797    2           STA$->KQ$STA.RBLK$=RBLK$;

   9797  0 002425   200045 236100                    LDQ     RBLK$,,AUTO
         0 002426   200006 470500                    LDP0    STA$,,AUTO
         0 002427   000011 756100                    STQ     9,,PR0

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:135  
      998     9798    2           IF CG$->KQ$CG.QISS THEN

   9798  0 002430   200010 471500                    LDP1    CG$,,AUTO
         0 002431   100106 235100                    LDA     70,,PR1
         0 002432   002450 600000 0                  TZE     s:9806

      999     9799    3             DO;

     1000     9800    3             RBLK$->KQ$RBLK.KEY1L=0;

   9800  0 002433   200045 473500                    LDP3    RBLK$,,AUTO
         0 002434   000026 236000 1                  LDQ     22
         0 002435   300001 356100                    ANSQ    1,,PR3

     1001     9801    3             RBLK$->KQ$RBLK.KEY2L=1;

   9801  0 002436   200045 473500                    LDP3    RBLK$,,AUTO
         0 002437   300001 236100                    LDQ     1,,PR3
         0 002440   000027 376000 1                  ANQ     23
         0 002441   000001 276007                    ORQ     1,DL
         0 002442   300001 756100                    STQ     1,,PR3

     1002     9802    3             RBLK$->KQ$RBLK.KEY2='*';

   9802  0 002443   000030 235000 1                  LDA     24
         0 002444   000035 236000 xsym               LDQ     B_VECTNIL+29
         0 002445   200045 473500                    LDP3    RBLK$,,AUTO
         0 002446   300004 757100                    STAQ    4,,PR3

     1003     9803    3             END;

   9803  0 002447   002464 710000 0                  TRA     s:9810

     1004     9804    2           ELSE
     1005     9805    3             DO;

     1006     9806    3             RBLK$->KQ$RBLK.KEY1L=1;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:136  

   9806  0 002450   200045 473500                    LDP3    RBLK$,,AUTO
         0 002451   300001 236100                    LDQ     1,,PR3
         0 002452   000026 376000 1                  ANQ     22
         0 002453   000020 276007                    ORQ     16,DL
         0 002454   300001 756100                    STQ     1,,PR3

     1007     9807    3             RBLK$->KQ$RBLK.KEY1='*';

   9807  0 002455   000030 235000 1                  LDA     24
         0 002456   000035 236000 xsym               LDQ     B_VECTNIL+29
         0 002457   200045 473500                    LDP3    RBLK$,,AUTO
         0 002460   300002 757100                    STAQ    2,,PR3

     1008     9808    3             RBLK$->KQ$RBLK.KEY2L=0;

   9808  0 002461   200045 473500                    LDP3    RBLK$,,AUTO
         0 002462   000027 236000 1                  LDQ     23
         0 002463   300001 356100                    ANSQ    1,,PR3

     1009     9809    3             END;

     1010     9810    2           RBLK$->KQ$RBLK.RUNDOWN='1'B;

   9810  0 002464   200045 473500                    LDP3    RBLK$,,AUTO
         0 002465   010000 236007                    LDQ     4096,DL
         0 002466   300001 256100                    ORSQ    1,,PR3

     1011     9811    2           RBLK$->KQ$RBLK.EOFNONE='1'B;

   9811  0 002467   200045 473500                    LDP3    RBLK$,,AUTO
         0 002470   200000 236007                    LDQ     65536,DL
         0 002471   300001 256100                    ORSQ    1,,PR3

     1012     9812    2           RBLK$->KQ$RBLK.RUND.USR#=S_CUN;

   9812  0 002472   200045 473500                    LDP3    RBLK$,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:137  
         0 002473   000000 236000 xsym               LDQ     S_CUN
         0 002474   000033 736000                    QLS     27
         0 002475   300013 552140                    STBQ    11,'40'O,PR3

   9812  0 002476                       CL10         null
     1013     9813    2   CL10:   ;
     1014     9814                %LOCK (G=STA$->KQ$STA.GATE);

   9815  0 002476   200006 236100                    LDQ     STA$,,AUTO
         0 002477   000016 036003                    ADLQ    14,DU
         0 002500   200136 756100                    STQ     J+2,,AUTO
         0 002501   200136 630500                    EPPR0   J+2,,AUTO
         0 002502   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002503   000000 701000 xent               TSX1    HFC$LOCK
         0 002504   000000 011000                    NOP     0

     1015     9817    2           RBLK$->KQ$RBLK.STATE=KQRS_RSIP#;

   9817  0 002505   000000 220003                    LDX0    0,DU
         0 002506   200045 470500                    LDP0    RBLK$,,AUTO
         0 002507   000001 740100                    STX0    1,,PR0

     1016     9818    2           CALL KQL$DTFIND (STA$->KQ$STA,MBLK$) ALTRET(CL20);

   9818  0 002510   200007 630500                    EPPR0   MBLK$,,AUTO
         0 002511   200137 450500                    STP0    J+3,,AUTO
         0 002512   200006 236100                    LDQ     STA$,,AUTO
         0 002513   200136 756100                    STQ     J+2,,AUTO
         0 002514   200136 630500                    EPPR0   J+2,,AUTO
         0 002515   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 002516   000000 701000 xent               TSX1    KQL$DTFIND
         0 002517   002572 702000 0                  TSX2    CL20

     1017     9819    2           IF MBLK$R = 0 THEN

   9819  0 002520   200007 235100                    LDA     MBLK$,,AUTO
         0 002521   002556 601000 0                  TNZ     s:9831
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:138  

     1018     9820    3             DO;

     1019     9821                  %UNLOCK (G=STA$->KQ$STA.GATE);

   9822  0 002522   200006 236100                    LDQ     STA$,,AUTO
         0 002523   000016 036003                    ADLQ    14,DU
         0 002524   200136 756100                    STQ     J+2,,AUTO
         0 002525   200136 630500                    EPPR0   J+2,,AUTO
         0 002526   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002527   000000 701000 xent               TSX1    HFC$UNLOCK
         0 002530   000000 011000                    NOP     0

     1020     9824    3   CL12:     STA$->KQ$STA.RBLK$=ADDR(NIL);

   9824  0 002531   000001 236000 xsym  CL12         LDQ     B_VECTNIL+1
         0 002532   200006 470500                    LDP0    STA$,,AUTO
         0 002533   000011 756100                    STQ     9,,PR0

     1021     9825    3             STA$->KQ$STA.STARSDUN='1'B;

   9825  0 002534   002000 236007                    LDQ     1024,DL
         0 002535   000023 256100                    ORSQ    19,,PR0

     1022     9826    3             CALL KQM$RELRBLKT (CG$->KQ$CG,RBLK$);

   9826  0 002536   200045 631500                    EPPR1   RBLK$,,AUTO
         0 002537   200137 451500                    STP1    J+3,,AUTO
         0 002540   200010 236100                    LDQ     CG$,,AUTO
         0 002541   200136 756100                    STQ     J+2,,AUTO
         0 002542   200136 630500                    EPPR0   J+2,,AUTO
         0 002543   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 002544   000000 701000 xent               TSX1    KQM$RELRBLKT
         0 002545   000000 011000                    NOP     0

     1023     9827    3             IF SETLOCK = 0 THEN RETURN; /* No delay, or REGed */

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:139  
   9827  0 002546   200123 235100                    LDA     SETLOCK,,AUTO
         0 002547   002551 601000 0                  TNZ     s:9828

   9827  0 002550   000000 702200 xent               TSX2  ! X66_ARET

     1024     9828    3             CALL KQP$CDISC (NK$LDCT);

   9828  0 002551   200005 630500                    EPPR0   NK$LDCTAUTO$,,AUTO
         0 002552   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002553   000000 701000 xent               TSX1    KQP$CDISC
         0 002554   000000 011000                    NOP     0

     1025     9829    3             RETURN;

   9829  0 002555   000000 702200 xent               TSX2  ! X66_ARET

     1026     9830    3             END;
     1027     9831    2           IF NOT CG$->KQ$CG.RCVR THEN GOTO ALTOUT;

   9831  0 002556   200010 470500                    LDP0    CG$,,AUTO
         0 002557   000105 236100                    LDQ     69,,PR0
         0 002560   000010 316007                    CANQ    8,DL
         0 002561   000602 600000 0                  TZE     ALTOUT

     1028     9832    2           CALL SSR$REG (%SS_QA);

   9832  0 002562   000032 630400 1                  EPPR0   26
         0 002563   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002564   000000 701000 xent               TSX1    SSR$REG
         0 002565   000000 011000                    NOP     0

     1029     9833    2   CL15:   IF RBLK$->KQ$RBLK.ERR = 0 THEN    /* expect it to be KQGE_EOF# */

   9833  0 002566   200045 470500       CL15         LDP0    RBLK$,,AUTO
         0 002567   000001 236100                    LDQ     1,,PR0
         0 002570   007000 316007                    CANQ    3584,DL
         0 002571   002575 601000 0                  TNZ     s:9838
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:140  

     1030     9834    3             DO;

     1031     9835    3   CL20:     CALL SC_BCGGET;

   9835  0 002572   000000 713400 xsym  CL20         CLIMB   SC_BCGGET
         0 002573   000000 600000 xsid               climb   nvectors=         0

     1032     9836    3             GOTO CL40;

   9836  0 002574   002576 710000 0                  TRA     CL40

     1033     9837    3             END;
     1034     9838    2           GOTO CL12;

   9838  0 002575   002531 710000 0                  TRA     CL12

     1035     9839    2           END;
     1036     9840                     /*    If no RBLK is available,
     1037     9841                      *    return.  This is OK since
     1038     9842                      *    the worst result of this
     1039     9843                      *    is leaving a bunch of *
     1040     9844                      *    messages around which will
     1041     9845                      *    take up space & maybe have
     1042     9846                      *    to be garbage-collected.
     1043     9847                      *
     1044     9848                      *    CAUSES PROBLEMS - KQ$STA.LDCT$ is NIL at open time
     1045     9849                      *       when CLEANUP is called - deletion of star messages
     1046     9850                      *       will cause screech if we must delay and call KQG$GOTMSG
     1047     9851                      */
     1048     9852    1   CL40: GOTO GETOUT;

   9852  0 002576   002064 710000 0     CL40         TRA     GETOUT

     1049     9853        /**/
     1050     9854        /*F* NAME:         KQG$RECOVER
     1051     9855             PURPOSE:      To clean up GETs for a terminal station when
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:141  
     1052     9856                           a comgroup is being opened after being closed
     1053     9857                           by RECOVER.
     1054     9858             CALL:         KQG$RECOVER(KQ$STA);
     1055     9859             DESCRIPTION:  The current GET is cleaned up just as in
     1056     9860                           KQG$CLEANUP
     1057     9861        */
     1058     9862    1   KQG$RECOVER: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */

   9862  0 002577   000000 700200 xent  KQG$RECOVER  TSX0  ! X66_AUTO_2
         0 002600   000146 000002                    ZERO    102,2

     1059     9863        /**/
     1060     9864    1         STA$=ADDR(PAR);

   9864  0 002601   200003 236100                    LDQ     @PAR,,AUTO
         0 002602   200006 756100                    STQ     STA$,,AUTO

     1061     9865    1         CG$=STA$->KQ$STA.CG$;

   9865  0 002603   200006 470500                    LDP0    STA$,,AUTO
         0 002604   000007 236100                    LDQ     7,,PR0
         0 002605   200010 756100                    STQ     CG$,,AUTO

     1062     9866              %LOCK (G=STA$->KQ$STA.GATE);

   9867  0 002606   200006 236100                    LDQ     STA$,,AUTO
         0 002607   000016 036003                    ADLQ    14,DU
         0 002610   200136 756100                    STQ     J+2,,AUTO
         0 002611   200136 630500                    EPPR0   J+2,,AUTO
         0 002612   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002613   000000 701000 xent               TSX1    HFC$LOCK
         0 002614   000000 011000                    NOP     0

     1063     9869    1         GOTO CLEANUP;

   9869  0 002615   002303 710000 0                  TRA     CLEANUP

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:142  
     1064     9870        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:143  
     1065     9871        /**/
     1066     9872        /*F* NAME:         KQG$DACT
     1067     9873             PURPOSE:      To process deactivation of a TERMINAL
     1068     9874             DESCRIPTION:  Called when a TERMINAL is being deactivated.
     1069     9875                           Cancels the outstanding GET if any.
     1070     9876        */
     1071     9877    1   KQG$DACT: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */

   9877  0 002616   000000 700200 xent  KQG$DACT     TSX0  ! X66_AUTO_2
         0 002617   000146 000002                    ZERO    102,2

     1072     9878        /**/
     1073     9879    1         NK$LDCTAUTO$ = ADDR(PAR);

   9879  0 002620   200003 236100                    LDQ     @PAR,,AUTO
         0 002621   200005 756100                    STQ     NK$LDCTAUTO$,,AUTO

     1074     9880    1         CALL SETUP ALTRET(RTN);

   9880  0 002622   002715 701000 0                  TSX1    SETUP
         0 002623   002066 702000 0                  TSX2    RTN

     1075     9881              %LOCK (G=STA$->KQ$STA.GATE);

   9882  0 002624   200006 236100                    LDQ     STA$,,AUTO
         0 002625   000016 036003                    ADLQ    14,DU
         0 002626   200136 756100                    STQ     J+2,,AUTO
         0 002627   200136 630500                    EPPR0   J+2,,AUTO
         0 002630   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002631   000000 701000 xent               TSX1    HFC$LOCK
         0 002632   000000 011000                    NOP     0

     1076     9884    1         IF RBLK$ ~= ADDR(NIL) THEN

   9884  0 002633   200045 236100                    LDQ     RBLK$,,AUTO
         0 002634   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002635   002655 600000 0                  TZE     s:9890
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:144  

     1077     9885    1          IF RBLK$->KQ$RBLK.STATE = KQRS_PEND# THEN

   9885  0 002636   200045 470500                    LDP0    RBLK$,,AUTO
         0 002637   000001 220100                    LDX0    1,,PR0
         0 002640   000002 100003                    CMPX0   2,DU
         0 002641   002655 601000 0                  TNZ     s:9890

     1078     9886    2            DO INHIBIT;

     1079     9887    2            STA$->KQ$STA.RBLK$=ADDR(NIL);

   9887  0 002642   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 002643   200006 471700                    LDP1  ! STA$,,AUTO
         0 002644   100011 756300                    STQ   ! 9,,PR1

     1080     9888    2            CALL KQM$RELRBLKT (CG$->KQ$CG,RBLK$);

   9888  0 002645   200045 630700                    EPPR0 ! RBLK$,,AUTO
         0 002646   200137 450700                    STP0  ! J+3,,AUTO
         0 002647   200010 236300                    LDQ   ! CG$,,AUTO
         0 002650   200136 756300                    STQ   ! J+2,,AUTO
         0 002651   200136 630700                    EPPR0 ! J+2,,AUTO
         0 002652   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         0 002653   000000 701200 xent               TSX1  ! KQM$RELRBLKT
         0 002654   000000 011200                    NOP   ! 0

     1081     9889    2            END;

     1082     9890    1         GOTO GETOUTNL;

   9890  0 002655   000561 710000 0                  TRA     GETOUTNL

     1083     9891        /**/
     1084     9892        /*F* NAME:         KQG$TRUNC
     1085     9893             PURPOSE:      To 'trunc' a TERM's RBLK & MBLK
     1086     9894             CALL:         KQG$TRUNC (KQ$STA)
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:145  
     1087     9895             INPUT:        Station gate locked
     1088     9896             DESCRIPTION:  Releases any stagnant RBLK, MBLK
     1089     9897                           Does not unlock gate
     1090     9898        */
     1091     9899    1   KQG$TRUNC: ENTRY (PAR) ALTRET; /* !!Doesn't ALTRET!! */

   9899  0 002656   000000 700200 xent  KQG$TRUNC    TSX0  ! X66_AUTO_2
         0 002657   000146 000002                    ZERO    102,2

     1092     9900        /**/
     1093     9901    1         STA$=ADDR(PAR);

   9901  0 002660   200003 236100                    LDQ     @PAR,,AUTO
         0 002661   200006 756100                    STQ     STA$,,AUTO

     1094     9902    1         CG$=STA$->KQ$STA.CG$;

   9902  0 002662   200006 470500                    LDP0    STA$,,AUTO
         0 002663   000007 236100                    LDQ     7,,PR0
         0 002664   200010 756100                    STQ     CG$,,AUTO

     1095     9903    1         RBLK$=STA$->KQ$STA.RBLK$;

   9903  0 002665   000011 236100                    LDQ     9,,PR0
         0 002666   200045 756100                    STQ     RBLK$,,AUTO

     1096     9904    1         IF RBLK$ ~= ADDR(NIL) THEN

   9904  0 002667   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002670   002714 600000 0                  TZE     s:9912

     1097     9905    1          IF  RBLK$->KQ$RBLK.STATE = KQRS_COMP#

   9905  0 002671   200045 471500                    LDP1    RBLK$,,AUTO
         0 002672   100001 220100                    LDX0    1,,PR1
         0 002673   000001 100003                    CMPX0   1,DU
         0 002674   002714 601000 0                  TNZ     s:9912
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:146  
         0 002675   100011 235100                    LDA     9,,PR1
         0 002676   002714 601000 0                  TNZ     s:9912

     1098     9906    1          AND RBLK$->KQ$RBLK.NCDDA = 0 THEN
     1099     9907    2            DO INHIBIT;

     1100     9908    2            CALL DUMPRD;

   9908  0 002677   003252 701200 0                  TSX1  ! DUMPRD
         0 002700   000000 011200                    NOP   ! 0

     1101     9909    2            STA$->KQ$STA.RBLK$=ADDR(NIL);

   9909  0 002701   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 002702   200006 470700                    LDP0  ! STA$,,AUTO
         0 002703   000011 756300                    STQ   ! 9,,PR0

     1102     9910    2            CALL KQM$RELRBLKT (CG$->KQ$CG,RBLK$);

   9910  0 002704   200045 631700                    EPPR1 ! RBLK$,,AUTO
         0 002705   200137 451700                    STP1  ! J+3,,AUTO
         0 002706   200010 236300                    LDQ   ! CG$,,AUTO
         0 002707   200136 756300                    STQ   ! J+2,,AUTO
         0 002710   200136 630700                    EPPR0 ! J+2,,AUTO
         0 002711   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         0 002712   000000 701200 xent               TSX1  ! KQM$RELRBLKT
         0 002713   000000 011200                    NOP   ! 0

     1103     9911    2            END;

     1104     9912    1         RETURN;

   9912  0 002714   000000 702200 xent               TSX2  ! X66_ARET

     1105     9913        %EJECT;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:147  
     1106     9914        /**/
     1107     9915        /*********************************************************************************
     1108     9916        *                                                                                *
     1109     9917        *   SSS   U   U  BBBB   RRRR    OOO   U   U  TTTTT   III   N   N  EEEEE   SSS    *
     1110     9918        *  S   S  U   U  B   B  R   R  O O O  U   U    T      I    N   N  E      S   S   *
     1111     9919        *  S      U   U  B   B  R   R  O O O  U   U    T      I    NN  N  E      S       *
     1112     9920        *   SSS   U   U  BBBB   RRRR   O  OO  U   U    T      I    N N N  EEEE    SSS    *
     1113     9921        *      S  U   U  B   B  R R    O   O  U   U    T      I    N  NN  E          S   *
     1114     9922        *  S   S  U   U  B   B  R  R   O   O  U   U    T      I    N   N  E      S   S   *
     1115     9923        *   SSS    UUU   BBBB   R   R   OOO    UUU     T     III   N   N  EEEEE   SSS    *
     1116     9924        *                                                                                *
     1117     9925        *********************************************************************************/
     1118     9926
     1119     9927        /****************************************************************
     1120     9928        *****************************************************************/
     1121     9929        /*D* NAME:         SETUP
     1122     9930             PURPOSE:      To provide entry to this module
     1123     9931             DESCRIPTION:  Picks up the STA$ from the LDCT and ALTRETs
     1124     9932                           if it's NIL.  Else maps onto the comgroup
     1125     9933                           data, and picks up the CG context block pointer.
     1126     9934                           If IDSC in the KQ$STA is set, ALTRETs.  Else
     1127     9935                           returns.
     1128     9936
     1129     9937                           SETUP increments the station LOCKCNT, and sets
     1130     9938                           SETLOCK; SETUPNS does neither.
     1131     9939        */
     1132     9940    1   SETUP: PROC ALTRET;

   9940  0 002715   200132 741300       SETUP        STX1  ! AUTOGATE+2,,AUTO

     1133     9941    2         SETLOCK=1;

   9941  0 002716   000001 235007                    LDA     1,DL
         0 002717   200123 755100                    STA     SETLOCK,,AUTO

     1134     9942    2         GOTO SET0;

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:148  
   9942  0 002720   002723 710000 0                  TRA     SET0

     1135     9943    2   SETUPNS: ENTRY ALTRET;

   9943  0 002721   200132 741300       SETUPNS      STX1  ! AUTOGATE+2,,AUTO

     1136     9944    2         SETLOCK=0;

   9944  0 002722   200123 450100                    STZ     SETLOCK,,AUTO

   9944  0 002723                       SET0         null
     1137     9945    2   SET0: ;
     1138     9946    2         STA$=NK$LDCT.STA$;

   9946  0 002723   200005 470500                    LDP0    NK$LDCTAUTO$,,AUTO
         0 002724   000012 236100                    LDQ     10,,PR0
         0 002725   200006 756100                    STQ     STA$,,AUTO

     1139     9947    2         IF STA$ = ADDR(NIL) THEN ALTRETURN;

   9947  0 002726   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 002727   002731 601000 0                  TNZ     s:9948

   9947  0 002730   000000 702211                    TSX2  ! 0,X1

     1140     9948    2         CG$=NK$LDCT.CG$;

   9948  0 002731   000027 236100                    LDQ     23,,PR0
         0 002732   200010 756100                    STQ     CG$,,AUTO

     1141     9949    2         CALL KQX$LDASR (CG$->KQ$CG);

   9949  0 002733   200010 630500                    EPPR0   CG$,,AUTO
         0 002734   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002735   000000 701000 xent               TSX1    KQX$LDASR
         0 002736   000000 011000                    NOP     0

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:149  
     1142     9950    2         IF SETLOCK = 0 THEN

   9950  0 002737   200123 235100                    LDA     SETLOCK,,AUTO
         0 002740   002746 601000 0                  TNZ     s:9957

     1143     9951    3           DO;

     1144     9952    3           IF STA$->KQ$STA.IDSC THEN ALTRETURN;

   9952  0 002741   200006 470500                    LDP0    STA$,,AUTO
         0 002742   000020 234100                    SZN     16,,PR0
         0 002743   003003 605000 0                  TPL     s:9971

   9952  0 002744   200132 221300                    LDX1  ! AUTOGATE+2,,AUTO
         0 002745   000000 702211                    TSX2  ! 0,X1

     1145     9953    3           END;
     1146     9954    2         ELSE
     1147     9955    3           DO;

     1148     9956                %LOCK (G=STA$->KQ$STA.GATE);

   9957  0 002746   200006 236100                    LDQ     STA$,,AUTO
         0 002747   000016 036003                    ADLQ    14,DU
         0 002750   200136 756100                    STQ     J+2,,AUTO
         0 002751   200136 630500                    EPPR0   J+2,,AUTO
         0 002752   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002753   000000 701000 xent               TSX1    HFC$LOCK
         0 002754   000000 011000                    NOP     0

     1149     9959    3           IF STA$->KQ$STA.IDSC THEN

   9959  0 002755   200006 470500                    LDP0    STA$,,AUTO
         0 002756   000020 234100                    SZN     16,,PR0
         0 002757   002771 605000 0                  TPL     s:9966

     1150     9960    4             DO;
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:150  

     1151     9961                  %UNLOCK (G=STA$->KQ$STA.GATE);

   9962  0 002760   200006 236100                    LDQ     STA$,,AUTO
         0 002761   000016 036003                    ADLQ    14,DU
         0 002762   200136 756100                    STQ     J+2,,AUTO
         0 002763   200136 630500                    EPPR0   J+2,,AUTO
         0 002764   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 002765   000000 701000 xent               TSX1    HFC$UNLOCK
         0 002766   000000 011000                    NOP     0

     1152     9964    4             ALTRETURN;

   9964  0 002767   200132 221300                    LDX1  ! AUTOGATE+2,,AUTO
         0 002770   000000 702211                    TSX2  ! 0,X1

     1153     9965    4             END;
     1154     9966    3           STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT+1;

   9966  0 002771   000020 236100                    LDQ     16,,PR0
         0 002772   000001 036007                    ADLQ    1,DL
         0 002773   000020 552104                    STBQ    16,'04'O,PR0

     1155     9967                %UNLOCK (G=STA$->KQ$STA.GATE);

   9968  0 002774   200006 236100                    LDQ     STA$,,AUTO
         0 002775   000016 036003                    ADLQ    14,DU
         0 002776   200136 756100                    STQ     J+2,,AUTO
         0 002777   200136 630500                    EPPR0   J+2,,AUTO
         0 003000   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003001   000000 701000 xent               TSX1    HFC$UNLOCK
         0 003002   000000 011000                    NOP     0

     1156     9970    3           END;

     1157     9971    2         GOTDFR=0;

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:151  
   9971  0 003003   200044 450100                    STZ     GOTDFR,,AUTO

     1158     9972    2         RBLK$=STA$->KQ$STA.RBLK$;

   9972  0 003004   200006 470500                    LDP0    STA$,,AUTO
         0 003005   000011 236100                    LDQ     9,,PR0
         0 003006   200045 756100                    STQ     RBLK$,,AUTO

     1159     9973    2         RWPARM=KC_CRWP;

   9973  0 003007   000100 100400                    MLR     fill='000'O
         0 003010   000000 000234 xsym               ADSC9   KC_CRWP                  cn=0,n=156
         0 003011   200050 000234                    ADSC9   RWPARM,,AUTO             cn=0,n=156

     1160     9974    2         RETURN;

   9974  0 003012   200132 221300                    LDX1  ! AUTOGATE+2,,AUTO
         0 003013   000001 702211                    TSX2  ! 1,X1

     1161     9975    2   END SETUP;
     1162     9976        /****************************************************************
     1163     9977        *****************************************************************/
     1164     9978        /*D* NAME:         ENTER
     1165     9979             PURPOSE:      To set up when entered with the station lock
     1166     9980                           incremented from before.
     1167     9981        */
     1168     9982    1   ENTER: PROC;

   9982  0 003014   200132 741300       ENTER        STX1  ! AUTOGATE+2,,AUTO

     1169     9983        /**/
     1170     9984    2         STA$=NK$LDCT.STA$;

   9984  0 003015   200005 470500                    LDP0    NK$LDCTAUTO$,,AUTO
         0 003016   000012 236100                    LDQ     10,,PR0
         0 003017   200006 756100                    STQ     STA$,,AUTO
         0 003020   003022 710000 0                  TRA     s:9992
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:152  

     1171     9985        /**/
     1172     9986        /*D* NAME:        ENTERSTA
     1173     9987             PURPOSE:     same as ENTER, but STA$ is already set up - don't have an
     1174     9988                          LDCT.
     1175     9989        */
     1176     9990    2   ENTERSTA: ENTRY;

   9990  0 003021   200132 741300       ENTERSTA     STX1  ! AUTOGATE+2,,AUTO

     1177     9991        /**/
     1178     9992    2         SETLOCK=1;

   9992  0 003022   000001 235007                    LDA     1,DL
         0 003023   200123 755100                    STA     SETLOCK,,AUTO

     1179     9993    2         GOTDFR=-1;

   9993  0 003024   000001 336007                    LCQ     1,DL
         0 003025   200044 756100                    STQ     GOTDFR,,AUTO

     1180     9994    2         CG$=STA$->KQ$STA.CG$;

   9994  0 003026   200006 470500                    LDP0    STA$,,AUTO
         0 003027   000007 236100                    LDQ     7,,PR0
         0 003030   200010 756100                    STQ     CG$,,AUTO

     1181     9995    2         RBLK$=STA$->KQ$STA.RBLK$;

   9995  0 003031   000011 236100                    LDQ     9,,PR0
         0 003032   200045 756100                    STQ     RBLK$,,AUTO

     1182     9996    2         MBLK$=RBLK$->KQ$RBLK.MBLK$;

   9996  0 003033   200045 471500                    LDP1    RBLK$,,AUTO
         0 003034   100000 236100                    LDQ     0,,PR1
         0 003035   200007 756100                    STQ     MBLK$,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:153  

     1183     9997    2         RWPARM=KC_CRWP;

   9997  0 003036   000100 100400                    MLR     fill='000'O
         0 003037   000000 000234 xsym               ADSC9   KC_CRWP                  cn=0,n=156
         0 003040   200050 000234                    ADSC9   RWPARM,,AUTO             cn=0,n=156

     1184     9998    2         RETURN;

   9998  0 003041   000001 702211                    TSX2  ! 1,X1

     1185     9999    2   END ENTER;
     1186    10000        /****************************************************************
     1187    10001        *****************************************************************/
     1188    10002        /*D* NAME:         XIT
     1189    10003             PURPOSE:      To exit from KQG$GET
     1190    10004             DESCRIPTION:  If SETLOCK = 0, returns.  Otherwise locks the
     1191    10005                           station gate and decrements LOCKCNT.  If this
     1192    10006                           hits 0 with IDSC set, calls KQP$FDISC and
     1193    10007                           ALTRETs; else returns.
     1194    10008        */
     1195    10009    1   XIT:  PROC ALTRET;

  10009  0 003042   200132 741300       XIT          STX1  ! AUTOGATE+2,,AUTO

     1196    10010    2         IF SETLOCK = 0 THEN RETURN;

  10010  0 003043   200123 235100                    LDA     SETLOCK,,AUTO
         0 003044   003046 601000 0                  TNZ     s:10012

  10010  0 003045   000001 702211                    TSX2  ! 1,X1

     1197    10011              %LOCK (G=STA$->KQ$STA.GATE);

  10012  0 003046   200006 236100                    LDQ     STA$,,AUTO
         0 003047   000016 036003                    ADLQ    14,DU
         0 003050   200136 756100                    STQ     J+2,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:154  
         0 003051   200136 630500                    EPPR0   J+2,,AUTO
         0 003052   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003053   000000 701000 xent               TSX1    HFC$LOCK
         0 003054   000000 011000                    NOP     0

     1198    10014    2         GOTO XIT0;

  10014  0 003055   003072 710000 0                  TRA     XIT0

     1199    10015        /*D* NAME:         XITNL
     1200    10016             PURPOSE:      To exit from KQG$GET
     1201    10017             DESCRIPTION:  Same as XIT but entered with the station gate
     1202    10018                           locked.  Must unlock it even if SETLOCK = 0.
     1203    10019        */
     1204    10020    2   XITNL: ENTRY ALTRET;

  10020  0 003056   200132 741300       XITNL        STX1  ! AUTOGATE+2,,AUTO

     1205    10021    2         IF SETLOCK = 0 THEN

  10021  0 003057   200123 235100                    LDA     SETLOCK,,AUTO
         0 003060   003072 601000 0                  TNZ     XIT0

     1206    10022    3           DO;

     1207    10023                %UNLOCK (G=STA$->KQ$STA.GATE);

  10024  0 003061   200006 236100                    LDQ     STA$,,AUTO
         0 003062   000016 036003                    ADLQ    14,DU
         0 003063   200136 756100                    STQ     J+2,,AUTO
         0 003064   200136 630500                    EPPR0   J+2,,AUTO
         0 003065   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003066   000000 701000 xent               TSX1    HFC$UNLOCK
         0 003067   000000 011000                    NOP     0

     1208    10026    3           RETURN;

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:155  
  10026  0 003070   200132 221300                    LDX1  ! AUTOGATE+2,,AUTO
         0 003071   000001 702211                    TSX2  ! 1,X1

  10021  0 003072                       XIT0         null
     1209    10027    3           END;
     1210    10028    2   XIT0: ;
     1211    10029    2         STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT-1;

  10029  0 003072   200006 470500                    LDP0    STA$,,AUTO
         0 003073   000020 236100                    LDQ     16,,PR0
         0 003074   000777 036007                    ADLQ    511,DL
         0 003075   000020 552104                    STBQ    16,'04'O,PR0

     1212    10030    2         IF STA$->KQ$STA.LOCKCNT = 0 THEN

  10030  0 003076   000020 236100                    LDQ     16,,PR0
         0 003077   000777 316007                    CANQ    511,DL
         0 003100   003111 601000 0                  TNZ     s:10037

     1213    10031    2          IF STA$->KQ$STA.IDSC THEN

  10031  0 003101   000020 234100                    SZN     16,,PR0
         0 003102   003111 605000 0                  TPL     s:10037

     1214    10032    3            DO;

     1215    10033    3            CALL KQP$FDISC (NK$LDCT);

  10033  0 003103   200005 630500                    EPPR0   NK$LDCTAUTO$,,AUTO
         0 003104   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003105   000000 701000 xent               TSX1    KQP$FDISC
         0 003106   000000 011000                    NOP     0

     1216    10034    3            ALTRETURN;

  10034  0 003107   200132 221300                    LDX1  ! AUTOGATE+2,,AUTO
         0 003110   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:156  

     1217    10035    3            END;
     1218    10036              %UNLOCK (G=STA$->KQ$STA.GATE);

  10037  0 003111   200006 236100                    LDQ     STA$,,AUTO
         0 003112   000016 036003                    ADLQ    14,DU
         0 003113   200136 756100                    STQ     J+2,,AUTO
         0 003114   200136 630500                    EPPR0   J+2,,AUTO
         0 003115   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003116   000000 701000 xent               TSX1    HFC$UNLOCK
         0 003117   000000 011000                    NOP     0

     1219    10039    2         RETURN;

  10039  0 003120   200132 221300                    LDX1  ! AUTOGATE+2,,AUTO
         0 003121   000001 702211                    TSX2  ! 1,X1

     1220    10040    2   END XIT;
     1221    10041        /****************************************************************
     1222    10042        *****************************************************************/
     1223    10043        /*D* NAME:         REG
     1224    10044             PURPOSE:      To REG for access 'till KCD$WRITE completes
     1225    10045        */
     1226    10046    1   REG:  PROC ALTRET;

  10046  0 003122   200132 741300       REG          STX1  ! AUTOGATE+2,,AUTO

     1227    10047        %LOCK (G=STA$->KQ$STA.GATE);

  10048  0 003123   200006 236100                    LDQ     STA$,,AUTO
         0 003124   000016 036003                    ADLQ    14,DU
         0 003125   200136 756100                    STQ     J+2,,AUTO
         0 003126   200136 630500                    EPPR0   J+2,,AUTO
         0 003127   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003130   000000 701000 xent               TSX1    HFC$LOCK
         0 003131   000000 011000                    NOP     0

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:157  
     1228    10050    2         IF ADDR(IOQ$->N$REQ.STATION.LSTA$)->B$$SBIN > 0 THEN

  10050  0 003132   200122 470500                    LDP0    IOQ$,,AUTO
         0 003133   000013 235100                    LDA     11,,PR0
         0 003134   003146 604400 0                  TMOZ    s:10057

     1229    10051    3           DO; /* Already DONE */

     1230    10052                %UNLOCK (G=STA$->KQ$STA.GATE);

  10053  0 003135   200006 236100                    LDQ     STA$,,AUTO
         0 003136   000016 036003                    ADLQ    14,DU
         0 003137   200136 756100                    STQ     J+2,,AUTO
         0 003140   200136 630500                    EPPR0   J+2,,AUTO
         0 003141   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003142   000000 701000 xent               TSX1    HFC$UNLOCK
         0 003143   000000 011000                    NOP     0

     1231    10055    3           RETURN;

  10055  0 003144   200132 221300                    LDX1  ! AUTOGATE+2,,AUTO
         0 003145   000001 702211                    TSX2  ! 1,X1

     1232    10056    3           END;
     1233    10057    2         ELSE IF STA$->KQ$STA.IDSC THEN

  10057  0 003146   200006 471500                    LDP1    STA$,,AUTO
         0 003147   100020 234100                    SZN     16,,PR1
         0 003150   003162 605000 0                  TPL     s:10064

     1234    10058    3            DO;

     1235    10059                 %UNLOCK (G=STA$->KQ$STA.GATE);

  10060  0 003151   200006 236100                    LDQ     STA$,,AUTO
         0 003152   000016 036003                    ADLQ    14,DU
         0 003153   200136 756100                    STQ     J+2,,AUTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:158  
         0 003154   200136 630500                    EPPR0   J+2,,AUTO
         0 003155   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003156   000000 701000 xent               TSX1    HFC$UNLOCK
         0 003157   000000 011000                    NOP     0

     1236    10062    3            ALTRETURN;

  10062  0 003160   200132 221300                    LDX1  ! AUTOGATE+2,,AUTO
         0 003161   000000 702211                    TSX2  ! 0,X1

     1237    10063    3            END;
     1238    10064    2         ADDR(IOQ$->N$REQ.STATION.LSTA$)->B$$SBIN=-1;

  10064  0 003162   000001 336007                    LCQ     1,DL
         0 003163   000013 756100                    STQ     11,,PR0

     1239    10065              %UNLOCK (G=STA$->KQ$STA.GATE);

  10066  0 003164   200006 236100                    LDQ     STA$,,AUTO
         0 003165   000016 036003                    ADLQ    14,DU
         0 003166   200136 756100                    STQ     J+2,,AUTO
         0 003167   200136 630500                    EPPR0   J+2,,AUTO
         0 003170   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003171   000000 701000 xent               TSX1    HFC$UNLOCK
         0 003172   000000 011000                    NOP     0

     1240    10068    2         CALL SSR$REG (%SS_QA);

  10068  0 003173   000032 630400 1                  EPPR0   26
         0 003174   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003175   000000 701000 xent               TSX1    SSR$REG
         0 003176   000000 011000                    NOP     0

     1241    10069    2         RETURN;

  10069  0 003177   200132 221300                    LDX1  ! AUTOGATE+2,,AUTO
         0 003200   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:159  

     1242    10070    2   END REG;
     1243    10071        /*D* NAME:         UNREG
     1244    10072             PURPOSE:      To un-REG the user when KCD$WRITE completes
     1245    10073        */
     1246    10074    1   UNREG: PROC (INFO);

  10074  0 003201   200132 741300       UNREG        STX1  ! AUTOGATE+2,,AUTO

     1247    10075        /**/
     1248    10076    2   DCL INFO UBIN;
     1249    10077    2   DCL J SBIN;
     1250    10078        /**/
     1251    10079        %LOCK (G=STA$->KQ$STA.GATE);

  10080  0 003202   200006 236100                    LDQ     STA$,,AUTO
         0 003203   000016 036003                    ADLQ    14,DU
         0 003204   200136 756100                    STQ     J+2,,AUTO
         0 003205   200136 630500                    EPPR0   J+2,,AUTO
         0 003206   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003207   000000 701000 xent               TSX1    HFC$LOCK
         0 003210   000000 011000                    NOP     0

     1252    10082    2         P$=ADDR(RBLK$->KQ$RBLK.IOQ$->N$REQ.STATION.LSTA$);

  10082  0 003211   200045 470500                    LDP0    RBLK$,,AUTO
         0 003212   000015 471500                    LDP1    13,,PR0
         0 003213   100013 633500                    EPPR3   11,,PR1
         0 003214   200121 453500                    STP3    P$,,AUTO

     1253    10083    2         J=P$->B$$SBIN;

  10083  0 003215   300000 235100                    LDA     0,,PR3
         0 003216   200134 755100                    STA     J,,AUTO

     1254    10084    2         IF J <= 0 THEN

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:160  
  10084  0 003217   003223 605400 0                  TPNZ    s:10087

     1255    10085    2          P$->B$$WORD=INFO;

  10085  0 003220   200133 474500                    LDP4    @INFO,,AUTO
         0 003221   400000 235100                    LDA     0,,PR4
         0 003222   300000 755100                    STA     0,,PR3

     1256    10086              %UNLOCK (G=STA$->KQ$STA.GATE);

  10087  0 003223   200006 236100                    LDQ     STA$,,AUTO
         0 003224   000016 036003                    ADLQ    14,DU
         0 003225   200136 756100                    STQ     J+2,,AUTO
         0 003226   200136 630500                    EPPR0   J+2,,AUTO
         0 003227   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003230   000000 701000 xent               TSX1    HFC$UNLOCK
         0 003231   000000 011000                    NOP     0

     1257    10089    2         IF J = -1 THEN

  10089  0 003232   200134 235100                    LDA     J,,AUTO
         0 003233   000027 115000 xsym               CMPA    B_VECTNIL+23
         0 003234   003250 601000 0                  TNZ     s:10091

     1258    10090    2          CALL SSR$RUE (%SS_UQA,RBLK$->KQ$RBLK.IOQ$->N$REQ.USER#);

  10090  0 003235   200045 470500                    LDP0    RBLK$,,AUTO
         0 003236   000015 471500                    LDP1    13,,PR0
         0 003237   200140 451500                    STP1    J+4,,AUTO
         0 003240   200140 236100                    LDQ     J+4,,AUTO
         0 003241   000033 036000 1                  ADLQ    27
         0 003242   000012 235000 1                  LDA     10
         0 003243   200136 757100                    STAQ    J+2,,AUTO
         0 003244   200136 630500                    EPPR0   J+2,,AUTO
         0 003245   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 003246   000000 701000 xent               TSX1    SSR$RUE
         0 003247   000000 011000                    NOP     0
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:161  

     1259    10091    2         RETURN;

  10091  0 003250   200132 221300                    LDX1  ! AUTOGATE+2,,AUTO
         0 003251   000001 702211                    TSX2  ! 1,X1

     1260    10092    2   END;
     1261    10093        /****************************************************************
     1262    10094        *****************************************************************/
     1263    10095        /*D* NAME:         DUMPRD
     1264    10096             PURPOSE:      To get rid of the message from a GET
     1265    10097             INPUT:        Station locked
     1266    10098             DESCRIPTION:  If the message says SECURE, it is put on the
     1267    10099                           SGHD$ list, else it is deleted.
     1268    10100        */
     1269    10101    1   DUMPRD: PROC;

  10101  0 003252   200132 741300       DUMPRD       STX1  ! AUTOGATE+2,,AUTO

     1270    10102        /**/
     1271    10103    2         IF RBLK$->KQ$RBLK.MBLK$ ~= ADDR(NIL) THEN

  10103  0 003253   200045 470500                    LDP0    RBLK$,,AUTO
         0 003254   000000 236100                    LDQ     0,,PR0
         0 003255   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 003256   003334 600000 0                  TZE     s:10130

     1272    10104    3           DO;

     1273    10105    3           MBLK$=RBLK$->KQ$RBLK.MBLK$;

  10105  0 003257   200007 756100                    STQ     MBLK$,,AUTO

     1274    10106    3           IF RBLK$->KQ$RBLK.SECURE = '0'B

  10106  0 003260   000001 236100                    LDQ     1,,PR0
         0 003261   400000 316007                    CANQ    -131072,DL
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:162  
         0 003262   003272 600000 0                  TZE     s:10110
         0 003263   200007 471500                    LDP1    MBLK$,,AUTO
         0 003264   100010 236100                    LDQ     8,,PR1
         0 003265   100000 316003                    CANQ    32768,DU
         0 003266   003272 601000 0                  TNZ     s:10110
         0 003267   000001 236100                    LDQ     1,,PR0
         0 003270   100000 316007                    CANQ    32768,DL
         0 003271   003302 600000 0                  TZE     s:10115

     1275    10107    3           OR MBLK$->KQ$MBLK.STAR
     1276    10108    3           OR RBLK$->KQ$RBLK.COMP THEN
     1277    10109    4             DO;

     1278    10110    4             RBLK$->KQ$RBLK.NCDDA=RBLK$->KQ$RBLK.MBLK$->KQ$MBLK.DDA;

  10110  0 003272   000000 471500                    LDP1    0,,PR0
         0 003273   100006 235100                    LDA     6,,PR1
         0 003274   000011 755100                    STA     9,,PR0

     1279    10111    4             CALL KQU$DELREAD (STA$->KQ$STA);

  10111  0 003275   200006 630500                    EPPR0   STA$,,AUTO
         0 003276   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003277   000000 701000 xent               TSX1    KQU$DELREAD
         0 003300   000000 011000                    NOP     0

     1280    10112    4             END;

  10112  0 003301   003334 710000 0                  TRA     s:10130

     1281    10113    3           ELSE
     1282    10114    4             DO;

     1283    10115    4             MBLK$->KQ$MBLK.RBLK = '0'B;

  10115  0 003302   000020 236000 1                  LDQ     16
         0 003303   100010 356100                    ANSQ    8,,PR1
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:163  

     1284    10116    4             RBLK$->KQ$RBLK.MBLK$=ADDR(NIL);

  10116  0 003304   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 003305   200045 470500                    LDP0    RBLK$,,AUTO
         0 003306   000000 756100                    STQ     0,,PR0

     1285    10117    4             MBLK$->KQ$MBLK.LNK$=ADDR(NIL);

  10117  0 003307   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 003310   200007 470500                    LDP0    MBLK$,,AUTO
         0 003311   000000 756100                    STQ     0,,PR0

     1286    10118    4             IF STA$->KQ$STA.SGHD$ = ADDR(NIL) THEN

  10118  0 003312   200006 470500                    LDP0    STA$,,AUTO
         0 003313   000014 236100                    LDQ     12,,PR0
         0 003314   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 003315   003321 601000 0                  TNZ     s:10122

     1287    10119    4              STA$->KQ$STA.SGHD$=MBLK$;

  10119  0 003316   200007 236100                    LDQ     MBLK$,,AUTO
         0 003317   000014 756100                    STQ     12,,PR0
         0 003320   003334 710000 0                  TRA     s:10130

     1288    10120    4             ELSE
     1289    10121    5               DO;

     1290    10122    5               P$=STA$->KQ$STA.SGHD$;

  10122  0 003321   200121 756100                    STQ     P$,,AUTO

     1291    10123    6                 DO WHILE (P$->KQ$MBLK.LNK$ ~= ADDR(NIL));

  10123  0 003322   003326 710000 0                  TRA     s:10125

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:164  
     1292    10124    6                 P$=P$->KQ$MBLK.LNK$;

  10124  0 003323   200121 470500                    LDP0    P$,,AUTO
         0 003324   000000 236100                    LDQ     0,,PR0
         0 003325   200121 756100                    STQ     P$,,AUTO

     1293    10125    6                 END;

  10125  0 003326   200121 470500                    LDP0    P$,,AUTO
         0 003327   000000 236100                    LDQ     0,,PR0
         0 003330   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 003331   003323 601000 0                  TNZ     s:10124

     1294    10126    5               P$->KQ$MBLK.LNK$=MBLK$;

  10126  0 003332   200007 236100                    LDQ     MBLK$,,AUTO
         0 003333   000000 756100                    STQ     0,,PR0

     1295    10127    5               END;

     1296    10128    4             END;

     1297    10129    3           END;

     1298    10130    2         RETURN;

  10130  0 003334   200132 221300                    LDX1  ! AUTOGATE+2,,AUTO
         0 003335   000001 702211                    TSX2  ! 1,X1

     1299    10131    2   END DUMPRD;
     1300    10132        /****************************************************************
     1301    10133        *****************************************************************/
     1302    10134        /*D* NAME:         MERGE
     1303    10135             PURPOSE:      To merge secure GETs back into the station's
     1304    10136                           queue.
     1305    10137             DESCRIPTION:  P$ is the pointer which heads the desired list,
     1306    10138                           which is all inserted.
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:165  
     1307    10139        */
     1308    10140    1   MERGE: PROC (HEAD$);

  10140  0 003336   200132 741300       MERGE        STX1  ! AUTOGATE+2,,AUTO

     1309    10141        /**/
     1310    10142    2   DCL HEAD$ PTR;
     1311    10143        /**/
     1312    10144    3           DO WHILE (HEAD$ ~= ADDR(NIL));

  10144  0 003337   003352 710000 0                  TRA     s:10146

     1313    10145    3           CALL KQL$INSERT (CG$->KQ$CG,STA$->KQ$STA.MLH,HEAD$);

  10145  0 003340   200133 236100                    LDQ     @HEAD$,,AUTO
         0 003341   200140 756100                    STQ     J+4,,AUTO
         0 003342   200006 236100                    LDQ     STA$,,AUTO
         0 003343   000034 036003                    ADLQ    28,DU
         0 003344   200010 235100                    LDA     CG$,,AUTO
         0 003345   200136 757100                    STAQ    J+2,,AUTO
         0 003346   200136 630500                    EPPR0   J+2,,AUTO
         0 003347   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 003350   000000 701000 xent               TSX1    KQL$INSERT
         0 003351   000000 011000                    NOP     0

     1314    10146    3           END;

  10146  0 003352   200133 470500                    LDP0    @HEAD$,,AUTO
         0 003353   000000 236100                    LDQ     0,,PR0
         0 003354   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 003355   003340 601000 0                  TNZ     s:10145

     1315    10147    2         RETURN;

  10147  0 003356   200132 221300                    LDX1  ! AUTOGATE+2,,AUTO
         0 003357   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:166  
(unnamed)
 Sect OctLoc
   1     000   000000 000021   000002 006000   000002 006000   000002 006000    ................
   1     004   000000 006000   000000 000000   040040 040040   040040 040040    ........
   1     010   077040 040040   000000 000034   000011 006000   000000 000022    ?   ............
   1     014   000013 006000   767777 777777   000000 006000   000006 200000    ................
   1     020   777777 777677   000000 000031   000003 006000   000021 006000    ................
   1     024   777777 377777   000005 006000   777777 777417   777777 777760    ................
   1     030   052040 040040   000000 000033   000031 006000   000027 600000    *   ............
     1316    10148    2   END MERGE;
     1317    10149    1   END KQG$GET;

PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:167  
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   KC_CP6.:E05TOU  is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
   NK$LDCT.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   N$REQ.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   KQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KQ_MAC_C.:E05TOU  is referenced.
   KQ_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KQG$GET.
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:168  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   133-0-0/w PTR         r     1 @HEAD$                   133-0-0/w PTR         r     1 @INFO
     4-0-0/w PTR         r     1 @K$RWPARM                  3-0-0/w PTR         r     1 @PAR
   130-0-0/d STRC(72)    r     1 AUTOGATE                  10-0-0/w PTR         r     1 CG$
    11-0-0/w PTR         r     1 DBLK$                     11-0-0/w UBIN        r     1 DBLK$R
    13-0-0/w UBIN        r     1 DDA                       43-0-0/w PTR         r     1 DFRP$
    41-0-0/w UBIN        r     1 DOGET                     44-0-0/w SBIN        r     1 GOTDFR
    *0-0-0/w PTR         r     1 HEAD$                     12-0-0/w UBIN        r     1 I
    *0-0-0/w UBIN        r     1 INFO                     122-0-0/w PTR         r     1 IOQ$
   134-0-0/w SBIN        r     1 J                         *0-0-0/d STRC(1404)  r     1 K$RWPARM
   124-0-0/c CHAR(8)     r     1 KEY                       46-0-0/w UBIN        r     1 KEY1L
   120-0-0/w UBIN        r     1 KEY2L                      7-0-0/w PTR         r     1 MBLK$
     7-0-0/w SBIN        r     1 MBLK$R                    42-0-0/b UBIN(18)    r     1 MBSTAMP
    42-0-0/b STRC(18)    r     1 MBSTAMPR                   5-0-0/w PTR         r     1 NK$LDCTAUTO$
   121-0-0/w PTR         r     1 P$                        *0-0-0/w UBIN        r     1 PAR
    16-0-0/d STRC(648)   r     1 RBLK                      45-0-0/w PTR         r     1 RBLK$
    50-0-0/d STRC(1404)  r     1 RWPARM                   123-0-0/w UBIN        r     1 SETLOCK
     6-0-0/w PTR         r     1 STA$                      40-0-0/w UBIN        r     1 USERBLK

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1404)  r     1 KC_CRWP                    0-0-0/d STRC(648)   r     1 KQ_IRBLK
     0-0-0/d STRC(504)   r     1 KQ_IRBLKT                  0-0-0/b STRC        r     1 KQ_LOG
     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w UBIN        r     1 S_CUN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:169  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 B$$CHAR                    0-0-0/h UBIN(18)    r     1 B$$HALF
     0-0-0/w ACHR        r     1 B$$KEY1                    0-0-0/w ACHR        r     1 B$$KEY2
     0-0-0/w PTR         r     1 B$$PTR                     0-0-0/w SBIN        r     1 B$$SBIN
     0-0-0/w UBIN        r     1 B$$WORD                    0-0-0/d STRC(6516)  r     1 KQ$CG
     0-0-0/d STRC(216)   r     1 KQ$DBLK                    0-0-0/d STRC(288)   r     1 KQ$DFRBLK
     0-0-0/w STRC(180)   r     1 KQ$DFRPARM                 0-0-0/d STRC(576)   r     1 KQ$MBLK
     0-0-0/d STRC(504)   r     1 KQ$RBLK                    0-0-0/d STRC(1296)  r     1 KQ$STA
     0-0-0/d STRC(1080)  r     1 N$REQ                      0-0-0/d STRC(864)   r     1 NK$LDCT


   Procedure KQG$GET requires 1776 words for executable code.
   Procedure KQG$GET requires 102 words of local(AUTO) storage.

    No errors detected in file KQG$GET.:E05TSI    .
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:170  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:171  
          MINI XREF LISTING

ALTOUT
      9161**LABEL    9424--GOTO     9831--GOTO
ALTRT
      9161**LABEL    9701--CALLALT
AUTOGATE
      8559**DCL      9363<>CALL     9367<>CALL     9397<>CALL
AUTOGATE.LOCK
      8560**DCL      9361<<ASSIGN
B$$CHAR
      8022**DCL      9328>>ASSIGN
B$$HALF
      8023**DCL      9255<>CALL
B$$KEY1
      8017**DCL      9020>>IF       9020>>IF       9030>>IF       9030>>IF       9100<<ASSIGN   9100>>ASSIGN
B$$KEY2
      8018**DCL      9020>>IF       9020>>IF       9030>>IF       9030>>IF       9107<<ASSIGN   9107>>ASSIGN
B$$PTR
      8019**DCL      9669>>ASSIGN   9673<<ASSIGN   9678>>ASSIGN
B$$SBIN
      8021**DCL     10050>>IF      10064<<ASSIGN  10083>>ASSIGN
B$$WORD
      8020**DCL      9200<<ASSIGN   9372>>DOCASE   9436>>DOCASE   9441<<ASSIGN  10085<<ASSIGN
CG$
      8034**DCL      6178--IMP-PTR  8973>>ASSIGN   8973>>ASSIGN   8975>>CALL     9018>>IF       9025>>CALL
      9063>>CALL     9068>>CALL     9083>>ASSIGN   9110>>IF       9242>>IF       9255>>CALL     9257>>CALL
      9272>>CALL     9342>>IF       9429>>CALL     9463>>CALL     9465>>ASSIGN   9466>>ASSIGN   9468>>CALL
      9493>>CALL     9632>>CALL     9674>>CALL     9741<<ASSIGN   9752>>CALL     9761>>CALL     9774>>IF
      9795>>CALL     9798>>IF       9826>>CALL     9831>>IF       9865<<ASSIGN   9888>>CALL     9902<<ASSIGN
      9910>>CALL     9948<<ASSIGN   9949>>CALL     9994<<ASSIGN  10145>>CALL
CL1
      9751**LABEL    9762--GOTO
CL12
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:172  
      9824**LABEL    9838--GOTO
CL15
      9833**LABEL    9242--GOTO
CL20
      9835**LABEL    9818--CALLALT
CL40
      9852**LABEL    9795--CALLALT  9836--GOTO
CLEANUP
      9741**LABEL    9869--GOTO
DBLK$
      8035**DCL      7562--IMP-PTR  7922--IMP-PTR  8036--REDEF    9272<>CALL     9274>>ASSIGN   9307<<ASSIGN
      9308>>IF       9328>>ASSIGN   9329>>ASSIGN   9330>>ASSIGN   9336>>ASSIGN   9337>>ASSIGN   9339>>IF
      9426<<ASSIGN   9428>>IF       9429<>CALL     9480>>IF       9492>>ASSIGN   9493<>CALL     9553<<ASSIGN
      9554>>ASSIGN   9555>>IF       9629<<ASSIGN   9631>>ASSIGN   9632<>CALL
DBLK$R
      8036**DCL      9270<<ASSIGN
DDA
      8038**DCL      9271<<ASSIGN   9272<>CALL     9498>>IF       9512>>DOCASE   9557<<ASSIGN
DFRP$
      8233**DCL      7801--IMP-PTR  9552<<ASSIGN   9553>>ASSIGN   9557>>ASSIGN
DOGET
      8227**DCL      9617<<ASSIGN   9624>>CALL     9637>>IF
DUMPRD
     10101**PROC     9040--CALL     9756--CALL     9908--CALL
ENTER
      9982**PROC     9198--CALL     9222--CALL     9551--CALL     9590--CALL     9603--CALL
ENTERSTA IN PROCEDURE ENTER
      9990**ENTRY    9236--CALL
G2
      9065**LABEL    9063--CALLALT
G3
      9067**LABEL    9064--GOTO
G4
      9073**LABEL    9053--GOTO
GET0
      8971**LABEL    9393--GOTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:173  
GET1
      9351**LABEL    9442--GOTO     9452--GOTO
GET2
      9384**LABEL    9520--GOTO     9637--GOTO
GETOUT
      9637**LABEL    9136--GOTO     9371--CALLALT  9377--GOTO     9383--GOTO     9389--GOTO     9404--GOTO
      9435--CALLALT  9451--GOTO     9473--GOTO     9506--GOTO     9577--GOTO     9852--GOTO
GETOUTNL
      9147**LABEL    9675--GOTO     9691--GOTO     9720--GOTO     9890--GOTO
GOTDFR
      8234**DCL      9500>>IF       9971<<ASSIGN   9993<<ASSIGN
GOTMSG
      9235**LABEL    9223--GOTO
GOTMSG0
      9246**LABEL    9135--CALLALT  9201--GOTO
GOTMSG1
      9258**LABEL    9038--GOTO     9593--GOTO
GOTMSG2
      9277**LABEL    9275--GOTO     9560--GOTO     9580--GOTO     9605--GOTO
HEAD$ IN PROCEDURE MERGE
     10142**DCL     10140--PROC    10144>>DOWHILE 10145<>CALL
HFC$LOCK
      2940**DCL-ENT  8986--CALL     9071--CALL     9363--CALL     9456--CALL     9463--CALL     9485--CALL
      9666--CALL     9703--CALL     9815--CALL     9867--CALL     9882--CALL     9957--CALL    10012--CALL
     10048--CALL    10080--CALL
HFC$UNLOCK
      2940**DCL-ENT  9036--CALL     9055--CALL     9061--CALL     9155--CALL     9367--CALL     9397--CALL
      9460--CALL     9468--CALL     9489--CALL     9772--CALL     9822--CALL     9962--CALL     9968--CALL
     10024--CALL    10037--CALL    10053--CALL    10060--CALL    10066--CALL    10087--CALL
I
      8037**DCL      9063<>CALL     9067<<ASSIGN   9068<>CALL     9795<>CALL
INFO IN PROCEDURE UNREG
     10076**DCL     10074--PROC    10085>>ASSIGN
IOQ$
      8555**DCL      9199<<ASSIGN   9200>>ASSIGN   9246<<ASSIGN   9284<<ASSIGN   9310>>IF       9320>>ASSIGN
      9321>>ASSIGN   9369>>IF       9372>>DOCASE   9384>>IF       9418>>IF       9433>>IF       9436>>DOCASE
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:174  
      9441>>ASSIGN   9447>>IF      10050>>IF      10064>>ASSIGN
J IN PROCEDURE UNREG
     10077**DCL     10083<<ASSIGN  10084>>IF      10089>>IF
K$RWPARM
      5862**DCL        69--PROC     8970>>ASSIGN   9141--IF       9161--IF       9613--ENTRY    9658--ENTRY
K$RWPARM.BLKREC
      5888**DCL      5913--REDEF
K$RWPARM.BLKREC.BLK#.B
      5895**DCL      9662>>ASSIGN
K$RWPARM.BLKREC.BLKU#
      5889**DCL      5891--REDEF
K$RWPARM.BLKREC.REC#.B
      5907**DCL      9664>>ASSIGN
K$RWPARM.BLKREC.REC#.T
      5905**DCL      9663>>ASSIGN
K$RWPARM.BLKREC.RECU#
      5901**DCL      5903--REDEF
K$RWPARM.DVE.DVBYTE.VFC
      5928**DCL      5929--REDEF
K$RWPARM.DVE.EOMCHAR
      5936**DCL      5940--REDEF
K$RWPARM.ERR
      6000**DCL      6005--REDEF    9057<<ASSIGN   9142<<ASSIGN   9162<<ASSIGN
K$RWPARM.FC
      5964**DCL      5965--REDEF
K$RWPARM.FLDID
      6146**DCL      6147--REDEF
K$RWPARM.FPT$
      6027**DCL      6034--REDEF
K$RWPARM.KEYTYPE
      6153**DCL      6154--REDEF
K$RWPARM.MSG$
      5863**DCL      5869--REDEF
K$RWPARM.MSGID
      5975**DCL      5980--REDEF    9095>>ASSIGN
K$RWPARM.MSGIDXT
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:175  
      5988**DCL      5992--REDEF
K$RWPARM.ORG
      6124**DCL      6125--REDEF
K$RWPARM.RBLK$
      5869**DCL      9085>>IF       9087>>ASSIGN   9088>>ASSIGN   9089>>ASSIGN   9090>>ASSIGN
K$RWPARM.THDRSZ
      6068**DCL      6072--REDEF
K$RWPARM.TYC
      5884**DCL      9623>>ASSIGN
K$RWPARM.VDOFLGS
      6126**DCL      6137--REDEF
KCD$WRITE
      8568**DCL-ENT  9365--CALL
KC_CRWP
      8616**DCL      9386>>ASSIGN   9973>>ASSIGN   9997>>ASSIGN
KC_CRWP.BLKREC
      8642**DCL      8667--REDEF
KC_CRWP.BLKREC.BLKU#
      8643**DCL      8645--REDEF
KC_CRWP.BLKREC.RECU#
      8655**DCL      8657--REDEF
KC_CRWP.DVE.DVBYTE.VFC
      8682**DCL      8683--REDEF
KC_CRWP.DVE.EOMCHAR
      8690**DCL      8694--REDEF
KC_CRWP.ERR
      8754**DCL      8759--REDEF
KC_CRWP.FC
      8718**DCL      8719--REDEF
KC_CRWP.FLDID
      8900**DCL      8901--REDEF
KC_CRWP.FPT$
      8781**DCL      8788--REDEF
KC_CRWP.KEYTYPE
      8907**DCL      8908--REDEF
KC_CRWP.MSG$
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:176  
      8617**DCL      8623--REDEF
KC_CRWP.MSGID
      8729**DCL      8734--REDEF
KC_CRWP.MSGIDXT
      8742**DCL      8746--REDEF
KC_CRWP.ORG
      8878**DCL      8879--REDEF
KC_CRWP.THDRSZ
      8822**DCL      8826--REDEF
KC_CRWP.VDOFLGS
      8880**DCL      8891--REDEF
KEY
      8557**DCL      9112<<ASSIGN   9115>>ASSIGN
KEY1L
      8236**DCL      8017--IMP-SIZ  9016<<ASSIGN   9020>>IF       9020>>IF       9030>>IF       9030>>IF
      9096<<ASSIGN   9099<<CALLBLT  9100>>ASSIGN   9100>>ASSIGN   9101>>ASSIGN   9116>>ASSIGN   9117>>ASSIGN
      9118<<ASSIGN
KEY2L
      8553**DCL      8018--IMP-SIZ  9017<<ASSIGN   9020>>IF       9020>>IF       9030>>IF       9030>>IF
      9103<<ASSIGN   9106<<CALLBLT  9107>>ASSIGN   9107>>ASSIGN   9108>>ASSIGN   9114>>ASSIGN   9117<<ASSIGN
KQ$CG
      6178**DCL      8975<>CALL     9025<>CALL     9063<>CALL     9068<>CALL     9255<>CALL     9257<>CALL
      9272<>CALL     9429<>CALL     9493<>CALL     9632<>CALL     9674<>CALL     9752<>CALL     9761<>CALL
      9795<>CALL     9826<>CALL     9888<>CALL     9910<>CALL     9949<>CALL    10145<>CALL
KQ$CG.AUCTL.DVBYTE.REREAD
      6621**DCL      6622--REDEF
KQ$CG.AUCTL.SECURE
      6626**DCL      9083>>ASSIGN
KQ$CG.AUCTL.SMD
      6620**DCL      9774>>IF
KQ$CG.DGVGHD$
      6278**DCL      9465>>ASSIGN   9466<<ASSIGN
KQ$CG.GATE.CG
      6568**DCL      9463<>CALL     9468<>CALL
KQ$CG.QISS
      6564**DCL      9018>>IF       9110>>IF       9342>>IF       9798>>IF
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:177  
KQ$CG.RCVR
      6552**DCL      9242>>IF       9831>>IF
KQ$CG.STATS.GETS
      6670**DCL      8973<<ASSIGN   8973>>ASSIGN
KQ$DBLK
      7562**DCL      9328--ASSIGN   9329--ASSIGN   9336--ASSIGN
KQ$DBLK.DSIZE
      7567**DCL      9330>>ASSIGN   9337>>ASSIGN
KQ$DBLK.FLNKDA
      7569**DCL      9339>>IF       9631>>ASSIGN
KQ$DFRBLK.DBLK$
      7944**DCL      7946--REDEF
KQ$DFRBLK.INFO
      7952**DCL      7954--REDEF
KQ$DFRBLK.INFO$
      7954**DCL      9492<<ASSIGN
KQ$DFRPARM.DBLK$
      7806**DCL      7808--REDEF    9553>>ASSIGN
KQ$DFRPARM.ERR
      7814**DCL      9557>>ASSIGN
KQ$DFRPARM.INFO
      7802**DCL      7804--REDEF
KQ$DFRPARM.INFO$
      7804**DCL      9538>>ASSIGN
KQ$MBLK
      7254**DCL      9674<>CALL
KQ$MBLK.DDA
      7319**DCL      9268>>IF       9413>>ASSIGN   9687>>ASSIGN  10110>>ASSIGN
KQ$MBLK.DGVGLNK$
      7268**DCL      9465<<ASSIGN
KQ$MBLK.DVE
      7352**DCL      9295>>ASSIGN
KQ$MBLK.DVE.DVBYTE
      7354**DCL      9317>>IF       9326>>IF
KQ$MBLK.DVE.EOMCHAR
      7356**DCL      7358--REDEF
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:178  
KQ$MBLK.FC
      7349**DCL      9296>>ASSIGN
KQ$MBLK.KEY1
      7282**DCL      7284--REDEF    9344>>ASSIGN   9350>>ASSIGN
KQ$MBLK.KEY2
      7291**DCL      7309--REDEF    9345>>ASSIGN   9349>>ASSIGN
KQ$MBLK.LNK$
      7256**DCL      7258--REDEF    7264--REDEF    7268--REDEF    9673>>ASSIGN   9677--ASSIGN  10117<<ASSIGN
     10123>>DOWHILE 10124>>ASSIGN  10126<<ASSIGN
KQ$MBLK.MID.PRIMARY
      7415**DCL      9255<>CALL     9255--CALL     9293>>ASSIGN
KQ$MBLK.MID.XT
      7416**DCL      9294>>ASSIGN
KQ$MBLK.RBLK
      7395**DCL      9421<<ASSIGN  10115<<ASSIGN
KQ$MBLK.STAMP
      7276**DCL      9270>>ASSIGN   9301>>ASSIGN   9671>>IF       9684>>IF
KQ$MBLK.STAR
      7344**DCL      9297>>IF      10106>>IF
KQ$MBLK.TYC
      7405**DCL      7407--REDEF
KQ$MBLK.XSP.MREQ$
      7311**DCL      7315--REDEF
KQ$RBLK
      7615**DCL      9043<<ASSIGN   9360>>ASSIGN   9516>>ASSIGN
KQ$RBLK.CNACTD
      7651**DCL      7660--REDEF
KQ$RBLK.COMP
      7638**DCL      9690<<ASSIGN  10106>>IF
KQ$RBLK.DBLK$
      7714**DCL      7718--REDEF    7721--REDEF    9274<<ASSIGN   9277<<ASSIGN   9307>>ASSIGN   9426>>ASSIGN
      9427<<ASSIGN   9554<<ASSIGN   9627>>IF       9629>>ASSIGN   9630<<ASSIGN   9760>>IF       9761<>CALL
KQ$RBLK.DFRP$
      7718**DCL      9541<<ASSIGN   9552>>ASSIGN
KQ$RBLK.EOFNONE
      7629**DCL      7632--REDEF    9094<<ASSIGN   9123<<ASSIGN   9811<<ASSIGN
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:179  
KQ$RBLK.ERR
      7663**DCL      9138>>IF       9140>>ASSIGN   9142>>ASSIGN   9287>>ASSIGN   9833>>IF
KQ$RBLK.FROMQ
      7635**DCL      7638--REDEF
KQ$RBLK.IOQ$
      7728**DCL      9199>>ASSIGN   9284>>ASSIGN   9574>>IF       9621>>IF       9623>>ASSIGN  10082>>ASSIGN
     10090>>CALL
KQ$RBLK.KEY1
      7677**DCL      9020--IF       9030--IF       9089<<ASSIGN   9089>>ASSIGN   9100--ASSIGN   9112>>ASSIGN
      9113<<ASSIGN   9124<<ASSIGN   9807<<ASSIGN
KQ$RBLK.KEY1L
      7672**DCL      9016>>ASSIGN   9087<<ASSIGN   9087>>ASSIGN   9101<<ASSIGN   9114<<ASSIGN   9118>>ASSIGN
      9126<<ASSIGN   9800<<ASSIGN   9806<<ASSIGN
KQ$RBLK.KEY1R
      7676**DCL      7677--REDEF
KQ$RBLK.KEY2
      7682**DCL      9020--IF       9030--IF       9090<<ASSIGN   9090>>ASSIGN   9107--ASSIGN   9113>>ASSIGN
      9115<<ASSIGN   9125<<ASSIGN   9802<<ASSIGN
KQ$RBLK.KEY2L
      7674**DCL      9017>>ASSIGN   9088<<ASSIGN   9088>>ASSIGN   9108<<ASSIGN   9116<<ASSIGN   9127<<ASSIGN
      9801<<ASSIGN   9808<<ASSIGN
KQ$RBLK.KEY2R
      7681**DCL      7682--REDEF
KQ$RBLK.LATCH
      7624**DCL      7626--REDEF
KQ$RBLK.MBLK$
      7616**DCL      9013>>ASSIGN   9025<>CALL     9420>>IF       9421>>ASSIGN   9422<<ASSIGN   9579>>ASSIGN
      9683>>IF       9684>>IF       9687>>ASSIGN   9718>>IF       9996>>ASSIGN  10103>>IF      10105>>ASSIGN
     10110>>ASSIGN  10116<<ASSIGN
KQ$RBLK.MID.PRIMARY
      7692**DCL      9095<<ASSIGN
KQ$RBLK.NCDDA
      7698**DCL      9011>>IF       9024<<ASSIGN   9271>>ASSIGN   9413<<ASSIGN   9518<<ASSIGN   9631<<ASSIGN
      9685>>IF       9687<<ASSIGN   9719<<ASSIGN   9905>>IF      10110<<ASSIGN
KQ$RBLK.RUND.USR#
      7723**DCL      9243<>CALL     9812<<ASSIGN
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:180  
KQ$RBLK.RUNDOWN
      7660**DCL      9238>>IF       9810<<ASSIGN
KQ$RBLK.SECURE
      7626**DCL      9083<<ASSIGN   9297>>IF       9519<<ASSIGN   9682>>IF      10106>>IF
KQ$RBLK.STATE
      7621**DCL      8992>>DOCASE   9034<<ASSIGN   9143<<ASSIGN   9147<<ASSIGN   9359<<ASSIGN   9423<<ASSIGN
      9430<<ASSIGN   9454<<ASSIGN   9502<<ASSIGN   9517<<ASSIGN   9540>>IF       9573>>IF       9591>>IF
      9592<<ASSIGN   9604>>IF       9619>>IF       9634<<ASSIGN   9636>>IF       9686>>IF       9705>>IF
      9711>>IF       9716<<ASSIGN   9747>>DOCASE   9817<<ASSIGN   9885>>IF       9905>>IF
KQ$STA
      6916**DCL      9135<>CALL     9240<>CALL     9505<>CALL     9515<>CALL     9688<>CALL     9818<>CALL
     10111<>CALL
KQ$STA.ACTTYC
      6968**DCL      6972--REDEF
KQ$STA.BTN.KEY
      6952**DCL      8975<>CALL     8975<>CALL     9255<>CALL     9255<>CALL     9257<>CALL     9257<>CALL
KQ$STA.CG$
      6955**DCL      9865>>ASSIGN   9902>>ASSIGN   9994>>ASSIGN
KQ$STA.DCBLNK$
      6975**DCL      6978--REDEF    6982--REDEF
KQ$STA.DSID
      7055**DCL      9744<<ASSIGN
KQ$STA.EVCNT
      7061**DCL      7064--REDEF
KQ$STA.EVNT
      7027**DCL      7031--REDEF    7034--REDEF
KQ$STA.GATE
      6994**DCL      8986<>CALL     9036<>CALL     9055<>CALL     9061<>CALL     9071<>CALL     9155<>CALL
      9456<>CALL     9460<>CALL     9485<>CALL     9489<>CALL     9666<>CALL     9703<>CALL     9772<>CALL
      9815<>CALL     9822<>CALL     9867<>CALL     9882<>CALL     9957<>CALL     9962<>CALL     9968<>CALL
     10012<>CALL    10024<>CALL    10037<>CALL    10048<>CALL    10053<>CALL    10060<>CALL    10066<>CALL
     10080<>CALL    10087<>CALL
KQ$STA.IDSC
      6996**DCL      9381>>IF       9404>>IF       9450>>IF       9952>>IF       9959>>IF      10031>>IF
     10057>>IF
KQ$STA.LDCT$
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:181  
      6957**DCL      9543>>ASSIGN
KQ$STA.LOCKCNT
      7050**DCL      9458<<ASSIGN   9458>>ASSIGN   9487<<ASSIGN   9487>>ASSIGN   9966<<ASSIGN   9966>>ASSIGN
     10029<<ASSIGN  10029>>ASSIGN  10030>>IF
KQ$STA.MLH
      7184**DCL      9025<>CALL    10145<>CALL
KQ$STA.MREQ
      7041**DCL      9047>>IF       9048>>IF       9049>>IF       9052<<ASSIGN   9065>>IF
KQ$STA.MREQ$
      7126**DCL      9051>>ASSIGN
KQ$STA.OPNBLKED
      7088**DCL      7091--REDEF
KQ$STA.OPNREJ
      7094**DCL      7096--REDEF
KQ$STA.RBLK$
      6959**DCL      8989>>ASSIGN   9073<<ASSIGN   9539>>ASSIGN   9680>>ASSIGN   9745>>ASSIGN   9751<<ASSIGN
      9797<<ASSIGN   9824<<ASSIGN   9887<<ASSIGN   9903>>ASSIGN   9909<<ASSIGN   9972>>ASSIGN   9995>>ASSIGN
KQ$STA.READS
      7142**DCL      8988<<ASSIGN   8988>>ASSIGN   9717<<ASSIGN   9717>>ASSIGN
KQ$STA.SGHD$
      6982**DCL      9668--ASSIGN   9770<>CALL    10118>>IF      10119<<ASSIGN  10122>>ASSIGN
KQ$STA.STARSDUN
      7104**DCL      9774>>IF       9825<<ASSIGN
KQ$STA.SUCCREAD
      7017**DCL      7021--REDEF
KQ$STA.TCOUNT
      7146**DCL      7152--REDEF
KQ$STA.VGOT$
      7131**DCL      7135--REDEF    7139--REDEF
KQD$DEFERGO
      8570**DCL-ENT  9493--CALL
KQD$FETCH
      8571**DCL-ENT  9272--CALL
KQD$UNLOCK
      8573**DCL-ENT  9429--CALL     9632--CALL     9761--CALL
KQG$FCONT
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:182  
      9536**ENTRY    9493--CALL
KQG$GET
        69**PROC     9388--CALL
KQL$DTFIND
      8574**DCL-ENT  9135--CALL     9818--CALL
KQL$INSERT
      8575**DCL-ENT  9025--CALL    10145--CALL
KQM$GETBD
      8576**DCL-ENT  9068--CALL
KQM$GETRBLKT
      8578**DCL-ENT  9063--CALL     9795--CALL
KQM$RELRBLKT
      8580**DCL-ENT  9752--CALL     9826--CALL     9888--CALL     9910--CALL
KQP$CDISC
      8582**DCL-ENT  9828--CALL
KQP$FDISC
      8581**DCL-ENT 10033--CALL
KQP$UNLOCK
      8583**DCL-ENT  9240--CALL
KQR$FDELAY
      8584**DCL-ENT  9505--CALL
KQR$LOGERR
      8585**DCL-ENT  9515--CALL
KQU$DELMSG
      8586**DCL-ENT  9674--CALL
KQU$DELREAD
      8587**DCL-ENT  9688--CALL    10111--CALL
KQX$LDASR
      8588**DCL-ENT  9949--CALL
KQZ$LOG
      8589**DCL-ENT  8975--CALL     9255--CALL     9257--CALL
KQ_IMBLK.DVE.EOMCHAR
      3615**DCL      3617--REDEF
KQ_IMBLK.KEY1
      3541**DCL      3543--REDEF
KQ_IMBLK.KEY2
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:183  
      3550**DCL      3568--REDEF
KQ_IMBLK.LNK$
      3515**DCL      3517--REDEF    3523--REDEF    3527--REDEF
KQ_IMBLK.TYC
      3664**DCL      3666--REDEF
KQ_IMBLK.XSP.MREQ$
      3570**DCL      3574--REDEF
KQ_IRBLK
      2997**DCL      9313--ASSIGN
KQ_IRBLK.BUF$
      3119**DCL      3121--REDEF
KQ_IRBLK.CNACTD
      3033**DCL      3042--REDEF
KQ_IRBLK.DBLKX
      3139**DCL      3143--REDEF
KQ_IRBLK.EOFNONE
      3011**DCL      3014--REDEF
KQ_IRBLK.FROMQ
      3017**DCL      3020--REDEF
KQ_IRBLK.KEY1R
      3058**DCL      3059--REDEF
KQ_IRBLK.KEY2R
      3063**DCL      3064--REDEF
KQ_IRBLK.LATCH
      3006**DCL      3008--REDEF
KQ_IRBLK.LWRITES$
      3150**DCL      3154--REDEF
KQ_IRBLKT
      3183**DCL      9043>>ASSIGN
KQ_IRBLKT.CNACTD
      3219**DCL      3228--REDEF
KQ_IRBLKT.DBLK$
      3282**DCL      3286--REDEF    3289--REDEF
KQ_IRBLKT.EOFNONE
      3197**DCL      3200--REDEF
KQ_IRBLKT.FROMQ
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:184  
      3203**DCL      3206--REDEF
KQ_IRBLKT.KEY1R
      3244**DCL      3245--REDEF
KQ_IRBLKT.KEY2R
      3249**DCL      3250--REDEF
KQ_IRBLKT.LATCH
      3192**DCL      3194--REDEF
KQ_LOG.TSIO
      2973**DCL      8974>>IF       9248>>IF
MBLK$
      8032**DCL      7254--IMP-PTR  8033--REDEF    9013<<ASSIGN   9135<>CALL     9250>>IF       9255>>CALL
      9255>>CALL     9257<>CALL     9267>>IF       9268>>IF       9270>>ASSIGN   9285>>IF       9293>>ASSIGN
      9294>>ASSIGN   9295>>ASSIGN   9296>>ASSIGN   9297>>IF       9301>>ASSIGN   9317>>IF       9326>>IF
      9344>>ASSIGN   9345>>ASSIGN   9349>>ASSIGN   9350>>ASSIGN   9413>>ASSIGN   9465>>ASSIGN   9579<<ASSIGN
      9669<<ASSIGN   9670>>DOWHILE  9671>>IF       9673>>ASSIGN   9674>>CALL     9677>>ASSIGN   9678<<ASSIGN
      9818<>CALL     9996<<ASSIGN  10105<<ASSIGN  10106>>IF      10115>>ASSIGN  10117>>ASSIGN  10119>>ASSIGN
     10126>>ASSIGN
MBLK$R
      8033**DCL      9136>>IF       9819>>IF
MBSTAMP
      8228**DCL      8229--REDEF    9301<<ASSIGN   9671>>IF       9684>>IF
MBSTAMPR.BOT
      8232**DCL      9304>>ASSIGN   9664<<ASSIGN
MBSTAMPR.MID
      8231**DCL      9303>>ASSIGN   9663<<ASSIGN
MBSTAMPR.TOP
      8230**DCL      9302>>ASSIGN   9662<<ASSIGN
MERGE
     10140**PROC     9770--CALL
N$DCT$$
      4087**DCL      4087--IMP-PTR
N$LDCT.DDT$
      7832**DCL      7832--REDEF
N$LDCT.IOQ$
      7831**DCL      7832--REDEF
N$LDCT.LDCTX
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:185  
      7833**DCL      7833--REDEF
N$LDCT.LKFLG.ABORTED
      7845**DCL      7846--REDEF
N$LDCT.RLCID.LDCTX
      7855**DCL      7855--REDEF
N$LDCT.STA$
      7851**DCL      7852--REDEF
N$LDCT.SYMB$
      7830**DCL      7830--REDEF    7830--REDEF    7831--REDEF
N$REQ.BUF$
      7977**DCL      9320>>ASSIGN
N$REQ.BUFADDR
      7977**DCL      7978--REDEF    7978--REDEF
N$REQ.BUFSIZE
      7971**DCL      9321>>ASSIGN
N$REQ.DLA.DRELADDR
      7969**DCL      7969--REDEF
N$REQ.DVE.EOMCHAR
      8006**DCL      8007--REDEF
N$REQ.EAINFO
      8000**DCL      8000--REDEF
N$REQ.EAINFOX
      8000**DCL      8001--REDEF
N$REQ.EVNTINFO
      8001**DCL      8001--REDEF
N$REQ.STATION.LSTA$
      7981**DCL      9200--ASSIGN   9372--DOCASE   9436--DOCASE   9441--ASSIGN  10050--IF      10064--ASSIGN
     10082--ASSIGN
N$REQ.STATUS
      7982**DCL      7988--REDEF
N$REQ.TYC
      7990**DCL      9623<<ASSIGN
N$REQ.USER#
      8002**DCL     10090<>CALL
NEWRBLK
      9032**LABEL    9026--GOTO
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:186  
NK$LDCT
      7876**DCL      9365<>CALL     9388<>CALL     9828<>CALL    10033<>CALL
NK$LDCT.CG$
      7907**DCL      9741>>ASSIGN   9948>>ASSIGN
NK$LDCT.DDT$
      7878**DCL      7878--REDEF
NK$LDCT.IOQ$
      7877**DCL      7878--REDEF
NK$LDCT.LDCTX
      7879**DCL      7879--REDEF
NK$LDCT.LKFLG.ABORTED
      7891**DCL      7892--REDEF
NK$LDCT.RLCID.LDCTX
      7901**DCL      7901--REDEF
NK$LDCT.STA$
      7897**DCL      7898--REDEF    9740>>ASSIGN   9946>>ASSIGN   9984>>ASSIGN
NK$LDCT.SYMB$
      7876**DCL      7876--REDEF    7876--REDEF    7877--REDEF
NK$LDCTAUTO$
      8030**DCL      7876--IMP-PTR  8968<<ASSIGN   9197<<ASSIGN   9221<<ASSIGN   9365>>CALL     9388>>CALL
      9543<<ASSIGN   9571<<ASSIGN   9589<<ASSIGN   9602<<ASSIGN   9615<<ASSIGN   9660<<ASSIGN   9700<<ASSIGN
      9739<<ASSIGN   9740>>ASSIGN   9741>>ASSIGN   9828>>CALL     9879<<ASSIGN   9946>>ASSIGN   9948>>ASSIGN
      9984>>ASSIGN  10033>>CALL
NOFETCH
      9468**LABEL    9272--CALLALT
NOFETCH1
      9498**LABEL    9558--GOTO
NORBLKS
      9147**LABEL    9065--GOTO     9068--CALLALT  9503--GOTO
NORBLKSU
      9147**LABEL    9008--GOTO     9048--GOTO
P$
      8554**DCL      9668<<ASSIGN   9669>>ASSIGN   9673>>ASSIGN   9677<<ASSIGN   9678>>ASSIGN  10082<<ASSIGN
     10083>>ASSIGN  10085>>ASSIGN  10122<<ASSIGN  10123>>DOWHILE 10124<<ASSIGN  10124>>ASSIGN  10126>>ASSIGN
PAR
      5840**DCL        69--PROC     8968--ASSIGN   9195--ENTRY    9197--ASSIGN   9219--ENTRY    9221--ASSIGN
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:187  
      9233--ENTRY    9235--ASSIGN   9536--ENTRY    9538--ASSIGN   9541--ASSIGN   9569--ENTRY    9571--ASSIGN
      9587--ENTRY    9589--ASSIGN   9600--ENTRY    9602--ASSIGN   9613--ENTRY    9615--ASSIGN   9658--ENTRY
      9660--ASSIGN   9698--ENTRY    9700--ASSIGN   9737--ENTRY    9739--ASSIGN   9862--ENTRY    9864--ASSIGN
      9877--ENTRY    9879--ASSIGN   9899--ENTRY    9901--ASSIGN
RBLK
      8053**DCL      9360<<ASSIGN   9387--ASSIGN   9516<<ASSIGN
RBLK.BUF$
      8175**DCL      8177--REDEF
RBLK.CNACTD
      8089**DCL      8098--REDEF
RBLK.DBLKX
      8195**DCL      8199--REDEF
RBLK.EOFNONE
      8067**DCL      8070--REDEF    9123>>ASSIGN
RBLK.FROMQ
      8073**DCL      8076--REDEF
RBLK.KEY1
      8115**DCL      9124>>ASSIGN
RBLK.KEY1L
      8110**DCL      9126>>ASSIGN
RBLK.KEY1R
      8114**DCL      8115--REDEF
RBLK.KEY2
      8120**DCL      9125>>ASSIGN
RBLK.KEY2L
      8112**DCL      9127>>ASSIGN
RBLK.KEY2R
      8119**DCL      8120--REDEF
RBLK.LATCH
      8062**DCL      8064--REDEF
RBLK.LWRITES$
      8206**DCL      8210--REDEF
RBLK$
      8235**DCL      7615--IMP-PTR  8989<<ASSIGN   8990>>IF       8992>>DOCASE   9011>>IF       9013>>ASSIGN
      9016>>ASSIGN   9017>>ASSIGN   9020>>IF       9020>>IF       9024>>ASSIGN   9025>>CALL     9030>>IF
      9030>>IF       9034>>ASSIGN   9043>>ASSIGN   9051<<ASSIGN   9053>>IF       9063<>CALL     9066<<ASSIGN
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:188  
      9068<>CALL     9073>>ASSIGN   9083>>ASSIGN   9087>>ASSIGN   9088>>ASSIGN   9089>>ASSIGN   9090>>ASSIGN
      9094>>ASSIGN   9095>>ASSIGN   9100>>ASSIGN   9101>>ASSIGN   9107>>ASSIGN   9108>>ASSIGN   9112>>ASSIGN
      9113>>ASSIGN   9113>>ASSIGN   9114>>ASSIGN   9115>>ASSIGN   9116>>ASSIGN   9118>>ASSIGN   9123>>ASSIGN
      9124>>ASSIGN   9125>>ASSIGN   9126>>ASSIGN   9127>>ASSIGN   9138>>IF       9140>>ASSIGN   9142>>ASSIGN
      9143>>ASSIGN   9147>>ASSIGN   9199>>ASSIGN   9238>>IF       9243>>CALL     9271>>ASSIGN   9274>>ASSIGN
      9277>>ASSIGN   9284>>ASSIGN   9287>>ASSIGN   9297>>IF       9307>>ASSIGN   9359>>ASSIGN   9360>>ASSIGN
      9413>>ASSIGN   9420>>IF       9421>>ASSIGN   9422>>ASSIGN   9423>>ASSIGN   9426>>ASSIGN   9427>>ASSIGN
      9430>>ASSIGN   9454>>ASSIGN   9502>>ASSIGN   9516>>ASSIGN   9517>>ASSIGN   9518>>ASSIGN   9519>>ASSIGN
      9539<<ASSIGN   9540>>IF       9541>>ASSIGN   9552>>ASSIGN   9554>>ASSIGN   9573>>IF       9574>>IF
      9579>>ASSIGN   9591>>IF       9592>>ASSIGN   9604>>IF       9619>>IF       9621>>IF       9623>>ASSIGN
      9627>>IF       9629>>ASSIGN   9630>>ASSIGN   9631>>ASSIGN   9634>>ASSIGN   9636>>IF       9680<<ASSIGN
      9681>>IF       9682>>IF       9683>>IF       9684>>IF       9685>>IF       9686>>IF       9687>>ASSIGN
      9687>>ASSIGN   9690>>ASSIGN   9705>>IF       9705>>IF       9711>>IF       9716>>ASSIGN   9718>>IF
      9719>>ASSIGN   9745<<ASSIGN   9746>>IF       9747>>DOCASE   9752<>CALL     9760>>IF       9761>>CALL
      9795<>CALL     9797>>ASSIGN   9800>>ASSIGN   9801>>ASSIGN   9802>>ASSIGN   9806>>ASSIGN   9807>>ASSIGN
      9808>>ASSIGN   9810>>ASSIGN   9811>>ASSIGN   9812>>ASSIGN   9817>>ASSIGN   9826<>CALL     9833>>IF
      9884>>IF       9885>>IF       9888<>CALL     9903<<ASSIGN   9904>>IF       9905>>IF       9905>>IF
      9910<>CALL     9972<<ASSIGN   9995<<ASSIGN   9996>>ASSIGN  10082>>ASSIGN  10090>>CALL    10103>>IF
     10105>>ASSIGN  10106>>IF      10106>>IF      10110>>ASSIGN  10110>>ASSIGN  10116>>ASSIGN
REG
     10046**PROC     9371--CALL     9435--CALL
RELRBLKT
      9747**LABEL    9757--GOTO
REQ
      9414**LABEL    9414--GOTO
REQUEUE
      9021**LABEL    9032--GOTO
RTN
      9637**LABEL    8969--CALLALT  9572--CALLALT  9616--CALLALT  9661--CALLALT  9880--CALLALT
RWPARM
      8258**DCL      8970<<ASSIGN   9365<>CALL     9386<<ASSIGN   9388<>CALL     9973<<ASSIGN   9997<<ASSIGN
RWPARM.BLKREC
      8284**DCL      8309--REDEF
RWPARM.BLKREC.BLK#.B
      8291**DCL      9302<<ASSIGN
RWPARM.BLKREC.BLKU#
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:189  
      8285**DCL      8287--REDEF
RWPARM.BLKREC.REC#.B
      8303**DCL      9304<<ASSIGN
RWPARM.BLKREC.REC#.T
      8301**DCL      9303<<ASSIGN
RWPARM.BLKREC.RECU#
      8297**DCL      8299--REDEF
RWPARM.DVE
      8315**DCL      9295<<ASSIGN
RWPARM.DVE.DVBYTE.CONT
      8331**DCL      9340<<ASSIGN
RWPARM.DVE.DVBYTE.RRR
      8328**DCL      9300<<ASSIGN   9306<<ASSIGN
RWPARM.DVE.DVBYTE.VFC
      8324**DCL      8325--REDEF    9318<<ASSIGN   9334<<ASSIGN
RWPARM.DVE.EOMCHAR
      8332**DCL      8336--REDEF
RWPARM.DVE.VFC
      8336**DCL      9319<<ASSIGN   9328<<ASSIGN   9335<<ASSIGN
RWPARM.EOFNONE
      8340**DCL      9094>>ASSIGN
RWPARM.ERR
      8396**DCL      8401--REDEF    9140<<ASSIGN   9160<<ASSIGN   9287<<ASSIGN   9292<<ASSIGN   9381>>IF
      9405>>DOCASE
RWPARM.FC
      8360**DCL      8361--REDEF    9296<<ASSIGN
RWPARM.FLDID
      8542**DCL      8543--REDEF
RWPARM.FPT$
      8423**DCL      8430--REDEF
RWPARM.KEYTYPE
      8549**DCL      8550--REDEF
RWPARM.MSG$
      8259**DCL      8265--REDEF    9288<<ASSIGN   9313<<ASSIGN   9320<<ASSIGN   9329<<ASSIGN   9336<<ASSIGN
RWPARM.MSGID
      8371**DCL      8376--REDEF    9293<<ASSIGN
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:190  
RWPARM.MSGIDXT
      8384**DCL      8388--REDEF    9294<<ASSIGN
RWPARM.MSGSZ
      8266**DCL      9312<<ASSIGN   9321<<ASSIGN   9330<<ASSIGN   9337<<ASSIGN
RWPARM.MSGTYP
      8275**DCL      9020--IF       9030--IF       9096>>IF       9099>>CALLBLT  9100--ASSIGN   9345<<ASSIGN
      9350<<ASSIGN
RWPARM.ORG
      8520**DCL      8521--REDEF
RWPARM.RBLK$
      8265**DCL      9387<<ASSIGN
RWPARM.STATION
      8270**DCL      9020--IF       9030--IF       9103>>IF       9106>>CALLBLT  9107--ASSIGN   9344<<ASSIGN
      9349<<ASSIGN
RWPARM.THDRSZ
      8464**DCL      8468--REDEF
RWPARM.VDOFLGS
      8522**DCL      8533--REDEF
SC_BCGGET
      8593**DCL-ENT  8994--CALL     9374--CALL     9408--CALL     9438--CALL     9540--CALL     9573--CALL
      9591--CALL     9604--CALL     9718--CALL     9765--CALL     9835--CALL
SC_CGNOTIMP
      8592**DCL-ENT  9523--CALL
SET0 IN PROCEDURE SETUP
      9944**LABEL    9942--GOTO
SETLOCK
      8556**DCL      9482>>IF       9743<<ASSIGN   9827>>IF       9941<<ASSIGN   9944<<ASSIGN   9950>>IF
      9992<<ASSIGN  10010>>IF      10021>>IF
SETUP
      9940**PROC     9572--CALL     9616--CALL     9701--CALL     9880--CALL
SETUPNS IN PROCEDURE SETUP
      9943**ENTRY    8969--CALL     9661--CALL
SSR$REG
      8590**DCL-ENT  9449--CALL     9832--CALL    10068--CALL
SSR$RUE
      8591**DCL-ENT  9243--CALL    10090--CALL
PL6.E3A0      #001=KQG$GET File=KQG$GET.:E05TSI                                  WED 07/30/97 01:28 Page:191  
STA$
      8031**DCL      6916--IMP-PTR  8975>>CALL     8975>>CALL     8986>>CALL     8988>>ASSIGN   8988>>ASSIGN
      8989>>ASSIGN   9025>>CALL     9036>>CALL     9047>>IF       9048>>IF       9049>>IF       9051>>ASSIGN
      9052>>ASSIGN   9055>>CALL     9061>>CALL     9065>>IF       9066>>ASSIGN   9071>>CALL     9073>>ASSIGN
      9135>>CALL     9155>>CALL     9235<<ASSIGN   9240>>CALL     9255>>CALL     9255>>CALL     9257>>CALL
      9257>>CALL     9381>>IF       9404>>IF       9450>>IF       9456>>CALL     9458>>ASSIGN   9458>>ASSIGN
      9460>>CALL     9466>>ASSIGN   9485>>CALL     9487>>ASSIGN   9487>>ASSIGN   9489>>CALL     9492>>ASSIGN
      9505>>CALL     9515>>CALL     9538<<ASSIGN   9539>>ASSIGN   9543>>ASSIGN   9666>>CALL     9668>>ASSIGN
      9680>>ASSIGN   9688>>CALL     9703>>CALL     9717>>ASSIGN   9717>>ASSIGN   9740<<ASSIGN   9744>>ASSIGN
      9745>>ASSIGN   9751>>ASSIGN   9770>>CALL     9772>>CALL     9774>>IF       9797>>ASSIGN   9815>>CALL
      9818>>CALL     9822>>CALL     9824>>ASSIGN   9825>>ASSIGN   9864<<ASSIGN   9865>>ASSIGN   9867>>CALL
      9882>>CALL     9887>>ASSIGN   9901<<ASSIGN   9902>>ASSIGN   9903>>ASSIGN   9909>>ASSIGN   9946<<ASSIGN
      9947>>IF       9952>>IF       9957>>CALL     9959>>IF       9962>>CALL     9966>>ASSIGN   9966>>ASSIGN
      9968>>CALL     9972>>ASSIGN   9984<<ASSIGN   9994>>ASSIGN   9995>>ASSIGN  10012>>CALL    10024>>CALL
     10029>>ASSIGN  10029>>ASSIGN  10030>>IF      10031>>IF      10037>>CALL    10048>>CALL    10053>>CALL
     10057>>IF      10060>>CALL    10066>>CALL    10080>>CALL    10087>>CALL    10111>>CALL    10118>>IF
     10119>>ASSIGN  10122>>ASSIGN  10145>>CALL
S_CUN
      8594**DCL      9812>>ASSIGN
UNREG
     10074**PROC     9576--CALL     9624--CALL
USERBLK
      8226**DCL      8971<<ASSIGN   9014>>IF       9084>>IF       9392<<ASSIGN
WALT
      9388**LABEL    9365--CALLALT
XIT
     10009**PROC     9164--CALL     9639--CALL
XIT0 IN PROCEDURE XIT
     10021**LABEL   10014--GOTO
XITNL IN PROCEDURE XIT
     10020**ENTRY    9144--CALL     9149--CALL     9708--CALL     9713--CALL
