VERSION E05

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:1    
        1        1        /*M*  DDB$SET_TT - REPORT AND SETUP FOR TRACE TRANSFER */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CCC,DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DDB$SET_TT.
        9        9             PURPOSE:  TO REPORT THE CURRENT TRANSFER, AND SET UP THE NEXT
       10       10             DESCRIPTION:  FIRST DETERMINES IF THE INSTRUCTION AT GOIC WILL
       11       11                  TRANSFER.  IF SO, A HISTORY BUFFER ENTRY IS BUILT AND USER
       12       12                  IS INFORMED OF THE TRANSFER, DEPENDING ON OPTIONS.  THEN
       13       13                  WE LOOK FOR THE NEXT TRANSFER TO BE EXECUTED AND PLANT A
       14       14                  DERAIL ON IT.  WHEN GOIC IS IN THE SPECIAL LOCATION, THE
       15       15                  IC REPORTED IS THE CORRECT ONE.
       16       16             ENVIRONMENT:  DDB$SET_TT IS ENTERED WHEN A TT DERAIL IS HIT,
       17       17                  OR AFTER THE CALL TO DDA$GO WHEN THERE HAS BEEN INTERACTION
       18       18                  WITH THE USER. */
       19       19        DDB$SET_TT: PROC ALTRET;
       20       20    1   DCL LIC UBIN;                      /* Left ic (left-hand side of the -->) */
       21       21    1   DCL RIC UBIN;                           /* Right ic */
       22       22    1   DCL IC UBIN;                            /* Ic to start searching from */
       23       23    1   DCL TYPE UBIN;
       24       24    1   DCL LENGTH UBIN;
       25       25    1   DCL IC$ PTR;
       26       26    1   DCL BB$ PTR;
       27       27    1   DCL PRIM$ PTR;
       28       28    1   DCL REM UBIN;
       29       29    1   DCL NCARS UBIN;
       30       30    1   DCL ALT_FLAG BIT(1);
       31       31    1   DCL DOIT BIT(1) ALIGNED;
       32       32    1   DCL SUBST# UBIN;
       33       33    1   DCL STMT# UBIN;
       34       34    1   DCL STMT$ PTR;
       35       35    1   DCL PNP$ PTR;
       36       36    1   DCL COMPARE UBIN;
       37       37    1   DCL 1 COMP BASED,
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:2    
       38       38    1         2 * UBIN HALF UNAL,
       39       39    1         2 C CHAR(COMPARE);
       40       40    1   DCL SUBST UBIN;
       41       41    1   DCL TEMP UBIN;
       42       42    1   DCL LNODE UBIN;
       43       43    1   DCL RNODE UBIN;
       44       44    1   DCL ALT_BIT BIT(1) ALIGNED BASED;
       45       45    1   DCL CHAR4 CHAR(4) BASED;
       46       46    1   DCL UBIN36 UBIN BASED;
       47       47        %INCLUDE B$OBJECT_C;
       48     3477        %B$EXST;
       49     3584        %B$EDEF;
       50     3654        %SUB_CST;
       51     3670        %INCLUDE DD$BASED;
       52     4973        %HOST_INSTR(NAME=INSTR);
       53     4995        %INCLUDE XUH_MACRO_C;
       54     5079        %INCLUDE DD_SD_M;
       55     6415        %S_D;
       56     7733        %INCLUDE DD_SUBS_C;
       57     8004        %INCLUDE DD_PSUBS_C;
       58     8479        %INCLUDE DD_ERR_C;
       59     8876        %INCLUDE CP_6;
       60     8957        %B$TCB;
       61     8960        %B$ALIBF;
       62     8964        %SUB_ECCDELTA;
       63     9001        %INCLUDE B$JIT;
       64     9291        %INCLUDE M_INFO_C;
       65     9431    1   DCL B$JIT$ PTR SYMREF;
       66     9432    1   DCL B$TCB$ PTR SYMREF;
       67     9433    1   DCL D_SYMBOLS BIT(1) ALIGNED SYMREF;
       68     9434    1   DCL UIS$ PTR SYMREF;
       69     9435    1   DCL D_XDELTA BIT(1) SYMREF;
       70     9436    1   DCL DDF$FIND_PEDEF ENTRY(2) ALTRET;
       71     9437    1   DCL DDB$INTERP ENTRY(3);
       72     9438    1   DCL DDB$TESTTRAN ENTRY(1) ALTRET;
       73     9439    1   DCL DDB$TEFFADD ENTRY(2) ALTRET;
       74     9440    1   DCL DDQ$WRITE ENTRY(2);
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:3    
       75     9441    1   DCL DDE$ERROR ENTRY;
       76     9442    1   DCL DDR$POSIT ENTRY(5) ALTRET;
       77     9443    1   DCL DDB$STEPADR ENTRY(5) ALTRET;
       78     9444    1   DCL DDB$PLANTONE ENTRY(4) ALTRET;
       79     9445    1   DCL DDB$PUTHIST ENTRY(6);
       80     9446    1   DCL DDF$STATEMENT ENTRY(4) ALTRET;
       81     9447    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
       82     9448    1   DCL DDS$IC2NODE ENTRY(2) ALTRET;
       83     9449    1   DCL DDR$REPORT ENTRY(1);
       84     9450                                                /**/
       85     9451    1        IF S_D.T$T.SHARED
       86     9452    2        THEN DO;
       87     9453    2             S_D.T$T.SHARED = '0'B;
       88     9454    2             IF S_D.TR$INFO.TYPE = C@STATEMENTS OR S_D.TR$INFO.TYPE=C@PARAGRAPHS
       89     9455    3             THEN DO;
       90     9456    3                  CALL DDF$STATEMENT (S_D.TIC, STMT#, SUBST#, SUBST) ALTRET(SKIP0);
       91     9457    3                  CALL DDF$EXST_#(STMT#, STMT$) ALTRET(SKIP0);
       92     9458    3                  IF S_D.TIC ~= STMT$->B$EXST.ISADDR THEN GOTO SKIP0;
       93     9459    3                  IF S_D.TR$INFO.TYPE = C@PARAGRAPHS AND NOT S_D.LABEL_FOUND THEN GOTO
              9459                           SKIP0;
       94     9460    3                END;
       95     9461    2   REPORT0:
       96     9462    2             IF S_D.HIST.ACTIVE
       97     9463    3             THEN DO;
       98     9464    3                  IF S_D.OVERLAID
       99     9465    4                  THEN DO;
      100     9466    4                       CALL DDS$IC2NODE (LIC, LNODE) ALTRET(ZERO0);
      101     9467    4                       CALL DDS$IC2NODE (RIC, RNODE) ALTRET(ZERO0);
      102     9468    4                     END;
      103     9469    4                  ELSE DO;
      104     9470    4   ZERO0:              LNODE=0;
      105     9471    4                       RNODE=0;
      106     9472    4                     END;
      107     9473    3                  CALL DDB$PUTHIST (H_STT, 0, LIC, RIC, LNODE, RNODE);
      108     9474    3                END;
      109     9475    2             IF NOT S_D.TR$INFO.SILENT AND NOT S_D.TR$INFO.P
      110     9476    3             THEN DO;
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:4    
      111     9477    3                  S_D.OUTPUT = '[SHARED-LIB] --> ';
      112     9478    3                  REM = S_D.OUT_WIDTH - 17;
      113     9479    3                  BB$ = PINCRC(ADDR(S_D.OUTPUT), 17);
      114     9480    3                  CALL DDR$POSIT( S_D.TIC, BB$, REM, NCARS);
      115     9481    3                  BB$ = PINCRC(BB$, NCARS);
      116     9482    3                  CALL DDQ$WRITE(ADDR(S_D.OUTPUT), POFFC(BB$, ADDR(S_D.OUTPUT)));
      117     9483    3                END;
      118     9484    2           END;
      119     9485    1   SKIP0:
      120     9486                                                /**/
      121     9487    1        IF S_D.ALIB THEN
      122     9488    1             IF B$TCB$->B$TCB.STK$->B$ALIBF.WHO ~= %SC_AUSR#
      123     9489    2             THEN DO;
      124     9490    2                  S_D.ERROR = E@CANTTTALIB; /*E@CANTTTALIB*/
      125     9491    2                  CALL DDE$ERROR;
      126     9492    2                  ALTRETURN;
      127     9493    2                END;
      128     9494    2        IF S_D.GOIC = S_D.SL THEN DO;
      129     9495    2             LIC = S_D.TIC;      /* If we're in the sl, there must have been a */
      130     9496                       /* Breakpoint, tic will point to where the user thinks we are */
      131     9497    2             IC = LIC+1;                   /* If the instruction in the sl does not
      132     9498                                 branch, we will want to start searching from here */
      133     9499    2           END;
      134     9500    2        ELSE DO;
      135     9501    2             LIC = S_D.GOIC;
      136     9502    2             IC = LIC;
      137     9503    2           END;
      138     9504    1        IF NOT D_XDELTA
      139     9505    1        THEN IF IC >= %LIBLO*1024 - %ISEGLO*1024 AND B$JIT.TDP <= %LIBLO
      140     9506    1               AND B$JIT.PCL = 0
      141     9507    2             THEN DO;
      142     9508    2                  S_D.ERROR = E@CANTTTSHARED; /*E@CANTTTSHARED*/
      143     9509    2                  CALL DDE$ERROR;
      144     9510    2                  ALTRETURN;
      145     9511    2                END;
      146     9512    1        IC$ = PINCRW(UIS$, S_D.GOIC);
      147     9513    1        CALL DDB$INTERP(IC$, TYPE, LENGTH);
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:5    
      148     9514    1        IF TYPE = T_UNCTRA THEN GOTO GOT_ONE; /* This one's going to branch */
      149     9515    2        ELSE IF TYPE = T_CONTRA THEN DO;
      150     9516    2                  CALL DDB$TESTTRAN(IC$) ALTRET(SEARCH_P1);
              9516                           /* If no branch, add 1 to ic before
      151     9517                            starting search, otherwise we'd just find this one again */
      152     9518    2                  GOTO GOT_ONE;
      153     9519    2                END;
      154     9520    1             ELSE GOTO SEARCH_IS;     /* It wasn't a transfer, go look for one */
      155     9521                       /* I know that this if construct could have been coded with out
      156     9522                       the gotos, but i thought it would be clearer this way */
      157     9523    1   GOT_ONE: ;                              /* Set up for write and history */
      158     9524    1        CALL DDB$TEFFADD(IC$, RIC) ALTRET(LOST_IT); /* Compute transfer address */
      159     9525    1        IF S_D.ISBASE ~= 0
      160     9526    2        THEN DO;
      161     9527    2             RIC = RIC + S_D.ISBASE;
      162     9528    2             GOTO ENTER_IT;
      163     9529    2           END;
      164     9530                                 /* If bypass, use_mon, and both ics are in non-standard
      165     9531                                 code, then don't report the trace */
      166     9532    1        IF S_D.BYPASS AND D_SYMBOLS
      167     9533    1          AND PINCRW(S_D.EDEF$,S_D.QSCH.PEDEF#*SIZEW(B$EDEF))->B$EDEF.CST = %NSTD#
      168     9534    2        THEN DO;
      169     9535    2             CALL DDF$FIND_PEDEF(RIC, PRIM$) ALTRET(ENTER_IT);
      170     9536    2             IF PRIM$->B$EDEF.CST = %NSTD# THEN GOTO SKIP_IT;
      171     9537    2           END;
      172     9538    1   ENTER_IT: ;
      173     9539    1        IF S_D.TR$INFO.TYPE = C@STATEMENTS OR S_D.TR$INFO.TYPE = C@PARAGRAPHS
      174     9540    2        THEN DO;
      175     9541    2             CALL DDF$STATEMENT (RIC, STMT#, SUBST#, SUBST) ALTRET(SKIP_IT);
      176     9542    2             CALL DDF$EXST_#(STMT#, STMT$) ALTRET(SKIP_IT);
      177     9543    2             IF RIC ~= STMT$->B$EXST.ISADDR THEN GOTO SKIP_IT;
      178     9544    2             IF S_D.TR$INFO.TYPE = C@PARAGRAPHS AND NOT S_D.LABEL_FOUND THEN GOTO
              9544                      SKIP_IT;
      179     9545    2           END;
      180     9546    1   REPORT1:
      181     9547    1        IF S_D.HIST.ACTIVE
      182     9548    2        THEN DO;
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:6    
      183     9549    2             IF S_D.OVERLAID
      184     9550    3             THEN DO;
      185     9551    3                  CALL DDS$IC2NODE (LIC, LNODE) ALTRET(ZERO);
      186     9552    3                  CALL DDS$IC2NODE (RIC, RNODE) ALTRET(ZERO);
      187     9553    3                END;
      188     9554    3             ELSE DO;
      189     9555    3   ZERO:          LNODE=0;
      190     9556    3                  RNODE=0;
      191     9557    3                END;
      192     9558    2             CALL DDB$PUTHIST (H_TT, 0, LIC, RIC, LNODE, RNODE);
      193     9559    2           END;
      194     9560    1        IF S_D.TR$INFO.SILENT THEN GOTO SKIP_IT;
      195     9561    1        S_D.OUTPUT = ' ';                  /* Clear output buffer */
      196     9562    1        REM = LENGTHC( S_D.OUTPUT );
      197     9563    1        BB$ = ADDR(S_D.OUTPUT);
      198     9564    1        CALL DDR$POSIT( LIC, BB$, REM, NCARS);
      199     9565    2        IF S_D.TR$INFO.P THEN DO;
      200     9566    2             CALL DDF$FIND_PEDEF (LIC, PRIM$) ALTRET (SKIP_IT);
      201     9567    2             PNP$ = PINCRW(S_D.DNAME$, PRIM$->B$EDEF.NPOINTER);
      202     9568    2             COMPARE = S_D.TR$INFO.PSIZ;
      203     9569    2             IF S_D.TR$INFO.PTXT ~= PNP$->COMP.C THEN GOTO SKIP_IT;
      204     9570    2           END;
      205     9571    1        BB$ = PINCRC(BB$, NCARS+1);
      206     9572    1        BB$->CHAR4 = '--> ';
      207     9573    1        BB$ = PINCRC(BB$, 4);
      208     9574    1        CALL DDR$POSIT( RIC, BB$, REM, NCARS);
      209     9575    1        BB$ = PINCRC(BB$,NCARS);
      210     9576    1        CALL DDQ$WRITE(ADDR(S_D.OUTPUT), POFFC(BB$, ADDR(S_D.OUTPUT)));
      211     9577    1   SKIP_IT: ;
      212     9578    1        IF NOT D_XDELTA
      213     9579    1        THEN IF RIC >= %LIBLO*1024 - %ISEGLO*1024 AND B$JIT.TDP <= %LIBLO
      214     9580    1               AND B$JIT.PCL = 0
      215     9581    2             THEN DO;                      /* If ic is in shared code */
      216     9582    2                  IF S_D.GOIC = S_D.SL
      217     9583    3                  THEN DO;  /* Put the instruction back so stepadr can see it */
      218     9584    3                       TEMP = S_D.FAULTINS$->UBIN36;
      219     9585    3                       IC = IC - 1; /* It got bumped up when we came in, remember? */
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:7    
      220     9586    3                       S_D.FAULTINS$->UBIN36 = S_D.FAULTINS;
              9586                                /* Saved for us by DDA$GO */
      221     9587    3                     END;
      222     9588    2                  DOIT = '1'B;
      223     9589    2                  CALL DDB$STEPADR (DOIT, IC, LIC, ALT_FLAG, RIC) ALTRET(LOST_IT);
      224     9590    2                  IF S_D.GOIC = S_D.SL
      225     9591    2                  THEN S_D.FAULTINS$->UBIN36 = TEMP; /* Put the derail back */
      226     9592    2                  IF LIC = RIC THEN ALT_FLAG = '0'B;
      227     9593    2                  IF ALT_FLAG
      228     9594    3                  THEN DO;
      229     9595    3                       CALL DDB$PLANTONE (PINCRW(UIS$,RIC), 0, DRL_STT, ADDR(S_D.T$T.
              9595                                SAVEINS)) ALTRET(BAD_PUT);
      230     9596    3                       CALL DDB$PLANTONE (PINCRW(UIS$,LIC), 0, DRL_STT, ADDR(S_D.T$T.
              9596                                RETINS)) ALTRET(BAD_PUT);
      231     9597    3                       S_D.T$T.SAVELOC = RIC;
      232     9598    3                       S_D.T$T.RETLOC = LIC;
      233     9599    3                       S_D.T$T.LOC_SAVED = '1'B;
      234     9600    3                       S_D.T$T.RET_SAVED = '1'B;
      235     9601    3                     END;
      236     9602    3                  ELSE DO;
      237     9603    3                       CALL DDB$PLANTONE (PINCRW(UIS$,LIC), 0, DRL_STT, ADDR(S_D.T$T.
              9603                                SAVEINS)) ALTRET(BAD_PUT);
      238     9604    3                       S_D.T$T.SAVELOC = LIC;
      239     9605    3                       S_D.T$T.LOC_SAVED = '1'B;
      240     9606    3                     END;
      241     9607    2                  RETURN;
      242     9608    2                END;
      243     9609    1        IC = RIC;                          /* Start search from here */
      244     9610    1        GOTO SEARCH_IS;
      245     9611    1   SEARCH_P1: IC = IC + 1;
      246     9612    1   SEARCH_IS: ;
      247     9613    1        S_D.ACCESS = '1'B;
      248     9614    1        REMEMBER S_FAULT IN S_D.REM_ACCESS;
              9614                 /* In case we fall off the end of the world or hit a missing page */
      249     9615    1        IC$ = PINCRW(UIS$, IC);
      250     9616    1   LOOK: CALL DDB$INTERP(IC$, TYPE, LENGTH);
      251     9617    1        IF TYPE = T_CONTRA OR TYPE = T_UNCTRA
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:8    
      252     9618    1        THEN GOTO SAVE_IT;
      253     9619    1        ELSE IF TYPE = T_SPECIAL AND LENGTH = 2 /* Climb */
      254     9620    2             THEN DO;
      255     9621    3                  IF IC$->ALT_BIT THEN DO; /* Climb with altret */
      256     9622    3                       IC$ = PINCRW(IC$,3); /* Point to return */
      257     9623    4                       IF LIC = POFFW(IC$, UIS$) THEN DO;
      258     9624    4                            IC$ = PINCRW(UIS$, RIC);
      259     9625    4                            GOTO SAVE_IT; /* Don't loop if this transfer and the */
      260     9626                                                /* next transfer are the same ic */
      261     9627    4                          END;
      262     9628    3                       CALL DDB$PLANTONE(IC$, 0, DRL_TT, ADDR(S_D.T$T.RETINS)) ALTRET (
              9628                                BAD_PUT);
      263     9629    3                       S_D.T$T.RET_SAVED = '1'B;
      264     9630    3                       S_D.T$T.RETLOC = POFFW(IC$, UIS$);
      265     9631    3                       IC$ = PINCRW(IC$, -1); /* Point to altret */
      266     9632    3                       GOTO SAVE_IT;
      267     9633    3                     END;
      268     9634    3                  ELSE DO;
      269     9635    3                       IC$ = PINCRW(IC$,2); /* Point to return */
      270     9636    3                       GOTO SAVE_IT;
      271     9637    3                     END;
      272     9638    2                END;
      273     9639    1        IC$ = PINCRW(IC$,LENGTH);
      274     9640    1        GOTO LOOK;
      275     9641    1   SAVE_IT: ;
      276     9642    1        IF POFFW(IC$,UIS$) = LIC
              9642                 /* If next transfer is where where we just came from */
      277     9643    1        THEN IC$ = PINCRW(UIS$,RIC);
              9643                 /* Set the derail at where we're going, so we'll look the next time */
      278     9644                                                /* This keeps us from looping forever */
      279     9645    1        CALL DDB$PLANTONE(IC$, 0, DRL_TT, ADDR(S_D.T$T.SAVEINS)) ALTRET(BAD_PUT);
      280     9646    1        S_D.T$T.SAVELOC = POFFW(IC$,UIS$);
      281     9647    1        S_D.T$T.LOC_SAVED = '1'B;
      282     9648    1   RET: S_D.ACCESS = '0'B;
      283     9649    1        RETURN;
      284     9650    1   BAD_PUT: CALL DDE$ERROR;
      285     9651    1        CALL DDR$REPORT(R_TTLOST);
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:9    
      286     9652    1        ALTRETURN;
      287     9653    1   LOST_IT: ;
      288     9654    1        IF S_D.TR$INFO.ACTIVE AND IC$->INSTR.TAG.TM = 2
      289     9655                                                /* Trace calls and fault tag set */
      290     9656    1        THEN RETURN;             /* We will get entered on trace call next time */
      291     9657    2        ELSE DO;
      292     9658    2             S_D.ERROR = E@LOST_TT;        /* E@LOST_TT */
      293     9659    2             GOTO BAD_PUT;
      294     9660    2           END;
      295     9661    1   S_FAULT: GOTO RET;            /* He's gonna get blown away, set back and wait */
      296     9662    1   END;

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:10   
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDB$SET_TT.

   Procedure DDB$SET_TT requires 692 words for executable code.
   Procedure DDB$SET_TT requires 30 words of local(AUTO) storage.

    No errors detected in file DDB$SET_TT.:E05TSI    .

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:11   

 Object Unit name= DDB$SET_TT                                 File name= DDB$SET_TT.:E05TOU
 UTS= JUL 29 '97 13:47:07.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      6      6  DDB$SET_TT
    2   Proc  even  none   692   1264  DDB$SET_TT
    3  RoData even  none     9     11  DDB$SET_TT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        0  DDB$SET_TT
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:12   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 DDF$STATEMENT
 yes     yes           Std       2 DDS$IC2NODE
         yes           Std       1 DDR$REPORT
 yes     yes           Std       2 DDF$EXST_#
         yes           Std       6 DDB$PUTHIST
         yes           Std       2 DDQ$WRITE
 yes     yes           Std       5 DDR$POSIT
 yes     yes           Std       2 DDF$FIND_PEDEF
         yes           Std       0 DDE$ERROR
 yes     yes           Std       1 DDB$TESTTRAN
         yes           Std       3 DDB$INTERP
 yes     yes           Std       2 DDB$TEFFADD
 yes     yes           Std       5 DDB$STEPADR
 yes     yes           Std       4 DDB$PLANTONE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  M$UC                                  B$JIT$
     B$TCB$                                D_SYMBOLS                             UIS$
     D_XDELTA                              B_VECTNIL
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:13   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:14   


        1        1        /*M*  DDB$SET_TT - REPORT AND SETUP FOR TRACE TRANSFER */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CCC,DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DDB$SET_TT.
        9        9             PURPOSE:  TO REPORT THE CURRENT TRANSFER, AND SET UP THE NEXT
       10       10             DESCRIPTION:  FIRST DETERMINES IF THE INSTRUCTION AT GOIC WILL
       11       11                  TRANSFER.  IF SO, A HISTORY BUFFER ENTRY IS BUILT AND USER
       12       12                  IS INFORMED OF THE TRANSFER, DEPENDING ON OPTIONS.  THEN
       13       13                  WE LOOK FOR THE NEXT TRANSFER TO BE EXECUTED AND PLANT A
       14       14                  DERAIL ON IT.  WHEN GOIC IS IN THE SPECIAL LOCATION, THE
       15       15                  IC REPORTED IS THE CORRECT ONE.
       16       16             ENVIRONMENT:  DDB$SET_TT IS ENTERED WHEN A TT DERAIL IS HIT,
       17       17                  OR AFTER THE CALL TO DDA$GO WHEN THERE HAS BEEN INTERACTION
       18       18                  WITH THE USER. */
       19       19        DDB$SET_TT: PROC ALTRET;

     19  2 000000   000000 700200 xent  DDB$SET_TT   TSX0  ! X66_AUTO_0
         2 000001   000036 000000                    ZERO    30,0

       20       20    1   DCL LIC UBIN;                      /* Left ic (left-hand side of the -->) */
       21       21    1   DCL RIC UBIN;                           /* Right ic */
       22       22    1   DCL IC UBIN;                            /* Ic to start searching from */
       23       23    1   DCL TYPE UBIN;
       24       24    1   DCL LENGTH UBIN;
       25       25    1   DCL IC$ PTR;
       26       26    1   DCL BB$ PTR;
       27       27    1   DCL PRIM$ PTR;
       28       28    1   DCL REM UBIN;
       29       29    1   DCL NCARS UBIN;
       30       30    1   DCL ALT_FLAG BIT(1);
       31       31    1   DCL DOIT BIT(1) ALIGNED;
       32       32    1   DCL SUBST# UBIN;
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:15   
       33       33    1   DCL STMT# UBIN;
       34       34    1   DCL STMT$ PTR;
       35       35    1   DCL PNP$ PTR;
       36       36    1   DCL COMPARE UBIN;
       37       37    1   DCL 1 COMP BASED,
       38       38    1         2 * UBIN HALF UNAL,
       39       39    1         2 C CHAR(COMPARE);
       40       40    1   DCL SUBST UBIN;
       41       41    1   DCL TEMP UBIN;
       42       42    1   DCL LNODE UBIN;
       43       43    1   DCL RNODE UBIN;
       44       44    1   DCL ALT_BIT BIT(1) ALIGNED BASED;
       45       45    1   DCL CHAR4 CHAR(4) BASED;
       46       46    1   DCL UBIN36 UBIN BASED;
       47       47        %INCLUDE B$OBJECT_C;
       48     3477        %B$EXST;
       49     3584        %B$EDEF;
       50     3654        %SUB_CST;
       51     3670        %INCLUDE DD$BASED;
       52     4973        %HOST_INSTR(NAME=INSTR);
       53     4995        %INCLUDE XUH_MACRO_C;
       54     5079        %INCLUDE DD_SD_M;
       55     6415        %S_D;
       56     7733        %INCLUDE DD_SUBS_C;
       57     8004        %INCLUDE DD_PSUBS_C;
       58     8479        %INCLUDE DD_ERR_C;
       59     8876        %INCLUDE CP_6;
       60     8957        %B$TCB;
       61     8960        %B$ALIBF;
       62     8964        %SUB_ECCDELTA;
       63     9001        %INCLUDE B$JIT;
       64     9291        %INCLUDE M_INFO_C;
       65     9431    1   DCL B$JIT$ PTR SYMREF;
       66     9432    1   DCL B$TCB$ PTR SYMREF;
       67     9433    1   DCL D_SYMBOLS BIT(1) ALIGNED SYMREF;
       68     9434    1   DCL UIS$ PTR SYMREF;
       69     9435    1   DCL D_XDELTA BIT(1) SYMREF;
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:16   
       70     9436    1   DCL DDF$FIND_PEDEF ENTRY(2) ALTRET;
       71     9437    1   DCL DDB$INTERP ENTRY(3);
       72     9438    1   DCL DDB$TESTTRAN ENTRY(1) ALTRET;
       73     9439    1   DCL DDB$TEFFADD ENTRY(2) ALTRET;
       74     9440    1   DCL DDQ$WRITE ENTRY(2);
       75     9441    1   DCL DDE$ERROR ENTRY;
       76     9442    1   DCL DDR$POSIT ENTRY(5) ALTRET;
       77     9443    1   DCL DDB$STEPADR ENTRY(5) ALTRET;
       78     9444    1   DCL DDB$PLANTONE ENTRY(4) ALTRET;
       79     9445    1   DCL DDB$PUTHIST ENTRY(6);
       80     9446    1   DCL DDF$STATEMENT ENTRY(4) ALTRET;
       81     9447    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
       82     9448    1   DCL DDS$IC2NODE ENTRY(2) ALTRET;
       83     9449    1   DCL DDR$REPORT ENTRY(1);
       84     9450                                                /**/
       85     9451    1        IF S_D.T$T.SHARED

   9451  2 000002   000000 470400 xsym               LDP0    S_D$
         2 000003   004712 234100                    SZN     2506,,PR0
         2 000004   000204 605000 2                  TPL     SKIP0

       86     9452    2        THEN DO;

       87     9453    2             S_D.T$T.SHARED = '0'B;

   9453  2 000005   004712 450100                    STZ     2506,,PR0

       88     9454    2             IF S_D.TR$INFO.TYPE = C@STATEMENTS OR S_D.TR$INFO.TYPE=C@PARAGRAPHS

   9454  2 000006   004634 235100                    LDA     2460,,PR0
         2 000007   001107 115007                    CMPA    583,DL
         2 000010   000013 600000 2                  TZE     s:9456
         2 000011   001106 115007                    CMPA    582,DL
         2 000012   000053 601000 2                  TNZ     REPORT0

       89     9455    3             THEN DO;

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:17   
       90     9456    3                  CALL DDF$STATEMENT (S_D.TIC, STMT#, SUBST#, SUBST) ALTRET(SKIP0);

   9456  2 000013   200024 631500                    EPPR1   SUBST,,AUTO
         2 000014   200033 451500                    STP1    RNODE+4,,AUTO
         2 000015   200017 633500                    EPPR3   SUBST#,,AUTO
         2 000016   200032 453500                    STP3    RNODE+3,,AUTO
         2 000017   200020 634500                    EPPR4   STMT#,,AUTO
         2 000020   200031 454500                    STP4    RNODE+2,,AUTO
         2 000021   000000 236000 xsym               LDQ     S_D$
         2 000022   000027 036003                    ADLQ    23,DU
         2 000023   200030 756100                    STQ     RNODE+1,,AUTO
         2 000024   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000025   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000026   000000 701000 xent               TSX1    DDF$STATEMENT
         2 000027   000204 702000 2                  TSX2    SKIP0

       91     9457    3                  CALL DDF$EXST_#(STMT#, STMT$) ALTRET(SKIP0);

   9457  2 000030   200021 630500                    EPPR0   STMT$,,AUTO
         2 000031   200031 450500                    STP0    RNODE+2,,AUTO
         2 000032   200020 631500                    EPPR1   STMT#,,AUTO
         2 000033   200030 451500                    STP1    RNODE+1,,AUTO
         2 000034   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000035   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000036   000000 701000 xent               TSX1    DDF$EXST_#
         2 000037   000204 702000 2                  TSX2    SKIP0

       92     9458    3                  IF S_D.TIC ~= STMT$->B$EXST.ISADDR THEN GOTO SKIP0;

   9458  2 000040   000000 470400 xsym               LDP0    S_D$
         2 000041   200021 471500                    LDP1    STMT$,,AUTO
         2 000042   100000 236100                    LDQ     0,,PR1
         2 000043   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 000044   000027 116100                    CMPQ    23,,PR0
         2 000045   000204 601000 2                  TNZ     SKIP0

       93     9459    3                  IF S_D.TR$INFO.TYPE = C@PARAGRAPHS AND NOT S_D.LABEL_FOUND THEN GOTO
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:18   
              9459                           SKIP0;

   9459  2 000046   004634 235100                    LDA     2460,,PR0
         2 000047   001106 115007                    CMPA    582,DL
         2 000050   000053 601000 2                  TNZ     REPORT0
         2 000051   005327 234100                    SZN     2775,,PR0
         2 000052   000204 605000 2                  TPL     SKIP0

       94     9460    3                END;

       95     9461    2   REPORT0:
       96     9462    2             IF S_D.HIST.ACTIVE

   9462  2 000053   004725 234100       REPORT0      SZN     2517,,PR0
         2 000054   000120 605000 2                  TPL     s:9475

       97     9463    3             THEN DO;

       98     9464    3                  IF S_D.OVERLAID

   9464  2 000055   004764 234100                    SZN     2548,,PR0
         2 000056   000100 605000 2                  TPL     ZERO0

       99     9465    4                  THEN DO;

      100     9466    4                       CALL DDS$IC2NODE (LIC, LNODE) ALTRET(ZERO0);

   9466  2 000057   200026 631500                    EPPR1   LNODE,,AUTO
         2 000060   200031 451500                    STP1    RNODE+2,,AUTO
         2 000061   200003 633500                    EPPR3   LIC,,AUTO
         2 000062   200030 453500                    STP3    RNODE+1,,AUTO
         2 000063   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000064   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000065   000000 701000 xent               TSX1    DDS$IC2NODE
         2 000066   000100 702000 2                  TSX2    ZERO0

      101     9467    4                       CALL DDS$IC2NODE (RIC, RNODE) ALTRET(ZERO0);
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:19   

   9467  2 000067   200027 630500                    EPPR0   RNODE,,AUTO
         2 000070   200031 450500                    STP0    RNODE+2,,AUTO
         2 000071   200004 631500                    EPPR1   RIC,,AUTO
         2 000072   200030 451500                    STP1    RNODE+1,,AUTO
         2 000073   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000074   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000075   000000 701000 xent               TSX1    DDS$IC2NODE
         2 000076   000100 702000 2                  TSX2    ZERO0

      102     9468    4                     END;

   9468  2 000077   000102 710000 2                  TRA     s:9473

      103     9469    4                  ELSE DO;

      104     9470    4   ZERO0:              LNODE=0;

   9470  2 000100   200026 450100       ZERO0        STZ     LNODE,,AUTO

      105     9471    4                       RNODE=0;

   9471  2 000101   200027 450100                    STZ     RNODE,,AUTO

      106     9472    4                     END;

      107     9473    3                  CALL DDB$PUTHIST (H_STT, 0, LIC, RIC, LNODE, RNODE);

   9473  2 000102   200027 630500                    EPPR0   RNODE,,AUTO
         2 000103   200035 450500                    STP0    RNODE+6,,AUTO
         2 000104   200026 631500                    EPPR1   LNODE,,AUTO
         2 000105   200034 451500                    STP1    RNODE+5,,AUTO
         2 000106   200004 633500                    EPPR3   RIC,,AUTO
         2 000107   200033 453500                    STP3    RNODE+4,,AUTO
         2 000110   200003 634500                    EPPR4   LIC,,AUTO
         2 000111   200032 454500                    STP4    RNODE+3,,AUTO
         2 000112   000000 237000 3                  LDAQ    0
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:20   
         2 000113   200030 757100                    STAQ    RNODE+1,,AUTO
         2 000114   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000115   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000116   000000 701000 xent               TSX1    DDB$PUTHIST
         2 000117   000000 011000                    NOP     0

      108     9474    3                END;

      109     9475    2             IF NOT S_D.TR$INFO.SILENT AND NOT S_D.TR$INFO.P

   9475  2 000120   000000 470400 xsym               LDP0    S_D$
         2 000121   004631 234100                    SZN     2457,,PR0
         2 000122   000204 604000 2                  TMI     SKIP0
         2 000123   004633 234100                    SZN     2459,,PR0
         2 000124   000204 604000 2                  TMI     SKIP0

      110     9476    3             THEN DO;

      111     9477    3                  S_D.OUTPUT = '[SHARED-LIB] --> ';

   9477  2 000125   040100 100400                    MLR     fill='040'O
         2 000126   000000 000021 1                  ADSC9   0                        cn=0,n=17
         2 000127   005335 004000                    ADSC9   2781,,PR0                cn=0,n=2048

      112     9478    3                  REM = S_D.OUT_WIDTH - 17;

   9478  2 000130   000014 235100                    LDA     12,,PR0
         2 000131   000021 135007                    SBLA    17,DL
         2 000132   200013 755100                    STA     REM,,AUTO

      113     9479    3                  BB$ = PINCRC(ADDR(S_D.OUTPUT), 17);

   9479  2 000133   000000 236000 xsym               LDQ     S_D$
         2 000134   000002 036000 3                  ADLQ    2
         2 000135   200011 756100                    STQ     BB$,,AUTO

      114     9480    3                  CALL DDR$POSIT( S_D.TIC, BB$, REM, NCARS);
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:21   

   9480  2 000136   200014 631500                    EPPR1   NCARS,,AUTO
         2 000137   200033 451500                    STP1    RNODE+4,,AUTO
         2 000140   200013 633500                    EPPR3   REM,,AUTO
         2 000141   200032 453500                    STP3    RNODE+3,,AUTO
         2 000142   200011 634500                    EPPR4   BB$,,AUTO
         2 000143   200031 454500                    STP4    RNODE+2,,AUTO
         2 000144   000000 236000 xsym               LDQ     S_D$
         2 000145   000027 036003                    ADLQ    23,DU
         2 000146   200030 756100                    STQ     RNODE+1,,AUTO
         2 000147   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000150   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000151   000000 701000 xent               TSX1    DDR$POSIT
         2 000152   000000 011000                    NOP     0

      115     9481    3                  BB$ = PINCRC(BB$, NCARS);

   9481  2 000153   200014 236100                    LDQ     NCARS,,AUTO
         2 000154   000020 736000                    QLS     16
         2 000155   200011 036100                    ADLQ    BB$,,AUTO
         2 000156   200011 756100                    STQ     BB$,,AUTO

      116     9482    3                  CALL DDQ$WRITE(ADDR(S_D.OUTPUT), POFFC(BB$, ADDR(S_D.OUTPUT)));

   9482  2 000157   000000 236000 xsym               LDQ     S_D$
         2 000160   005335 036003                    ADLQ    2781,DU
         2 000161   000020 772000                    QRL     16
         2 000162   200030 756100                    STQ     RNODE+1,,AUTO
         2 000163   200011 236100                    LDQ     BB$,,AUTO
         2 000164   000020 772000                    QRL     16
         2 000165   200030 136100                    SBLQ    RNODE+1,,AUTO
         2 000166   200032 756100                    STQ     RNODE+3,,AUTO
         2 000167   000000 236000 xsym               LDQ     S_D$
         2 000170   005335 036003                    ADLQ    2781,DU
         2 000171   200031 756100                    STQ     RNODE+2,,AUTO
         2 000172   200032 235100                    LDA     RNODE+3,,AUTO
         2 000173   200033 755100                    STA     RNODE+4,,AUTO
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:22   
         2 000174   200033 630500                    EPPR0   RNODE+4,,AUTO
         2 000175   200035 450500                    STP0    RNODE+6,,AUTO
         2 000176   200031 631500                    EPPR1   RNODE+2,,AUTO
         2 000177   200034 451500                    STP1    RNODE+5,,AUTO
         2 000200   200034 630500                    EPPR0   RNODE+5,,AUTO
         2 000201   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000202   000000 701000 xent               TSX1    DDQ$WRITE
         2 000203   000000 011000                    NOP     0

      117     9483    3                END;

      118     9484    2           END;

      119     9485    1   SKIP0:
      120     9486                                                /**/
      121     9487    1        IF S_D.ALIB THEN

   9487  2 000204   000000 470400 xsym  SKIP0        LDP0    S_D$
         2 000205   005134 234100                    SZN     2652,,PR0
         2 000206   000222 605000 2                  TPL     s:9494

      122     9488    1             IF B$TCB$->B$TCB.STK$->B$ALIBF.WHO ~= %SC_AUSR#

   9488  2 000207   000000 471400 xsym               LDP1    B$TCB$
         2 000210   100001 473500                    LDP3    1,,PR1
         2 000211   300100 236100                    LDQ     64,,PR3
         2 000212   777000 316003                    CANQ    -512,DU
         2 000213   000222 600000 2                  TZE     s:9494

      123     9489    2             THEN DO;

      124     9490    2                  S_D.ERROR = E@CANTTTALIB; /*E@CANTTTALIB*/

   9490  2 000214   000335 235007                    LDA     221,DL
         2 000215   000013 755100                    STA     11,,PR0

      125     9491    2                  CALL DDE$ERROR;
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:23   

   9491  2 000216   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000217   000000 701000 xent               TSX1    DDE$ERROR
         2 000220   000000 011000                    NOP     0

      126     9492    2                  ALTRETURN;

   9492  2 000221   000000 702200 xent               TSX2  ! X66_AALT

      127     9493    2                END;
      128     9494    2        IF S_D.GOIC = S_D.SL THEN DO;

   9494  2 000222   000001 236100                    LDQ     1,,PR0
         2 000223   000010 116100                    CMPQ    8,,PR0
         2 000224   000232 601000 2                  TNZ     s:9501

      129     9495    2             LIC = S_D.TIC;      /* If we're in the sl, there must have been a */

   9495  2 000225   000027 235100                    LDA     23,,PR0
         2 000226   200003 755100                    STA     LIC,,AUTO

      130     9496                       /* Breakpoint, tic will point to where the user thinks we are */
      131     9497    2             IC = LIC+1;                   /* If the instruction in the sl does not

   9497  2 000227   000001 035007                    ADLA    1,DL
         2 000230   200005 755100                    STA     IC,,AUTO

      132     9498                                 branch, we will want to start searching from here */
      133     9499    2           END;

   9499  2 000231   000234 710000 2                  TRA     s:9504

      134     9500    2        ELSE DO;

      135     9501    2             LIC = S_D.GOIC;

   9501  2 000232   200003 756100                    STQ     LIC,,AUTO
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:24   

      136     9502    2             IC = LIC;

   9502  2 000233   200005 756100                    STQ     IC,,AUTO

      137     9503    2           END;

      138     9504    1        IF NOT D_XDELTA

   9504  2 000234   000000 234000 xsym               SZN     D_XDELTA
         2 000235   000255 604000 2                  TMI     s:9512

      139     9505    1        THEN IF IC >= %LIBLO*1024 - %ISEGLO*1024 AND B$JIT.TDP <= %LIBLO

   9505  2 000236   200005 235100                    LDA     IC,,AUTO
         2 000237   700000 115007                    CMPA    -32768,DL
         2 000240   000255 602000 2                  TNC     s:9512
         2 000241   000000 471400 xsym               LDP1    B$JIT$
         2 000242   100204 220100                    LDX0    132,,PR1
         2 000243   000441 100003                    CMPX0   289,DU
         2 000244   000255 603000 2                  TRC     s:9512
         2 000245   100215 721100                    LXL1    141,,PR1
         2 000246   000255 601000 2                  TNZ     s:9512

      140     9506    1               AND B$JIT.PCL = 0
      141     9507    2             THEN DO;

      142     9508    2                  S_D.ERROR = E@CANTTTSHARED; /*E@CANTTTSHARED*/

   9508  2 000247   000334 236007                    LDQ     220,DL
         2 000250   000013 756100                    STQ     11,,PR0

      143     9509    2                  CALL DDE$ERROR;

   9509  2 000251   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000252   000000 701000 xent               TSX1    DDE$ERROR
         2 000253   000000 011000                    NOP     0
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:25   

      144     9510    2                  ALTRETURN;

   9510  2 000254   000000 702200 xent               TSX2  ! X66_AALT

      145     9511    2                END;
      146     9512    1        IC$ = PINCRW(UIS$, S_D.GOIC);

   9512  2 000255   000001 720100                    LXL0    1,,PR0
         2 000256   000000 636010                    EAQ     0,X0
         2 000257   000000 036000 xsym               ADLQ    UIS$
         2 000260   200010 756100                    STQ     IC$,,AUTO

      147     9513    1        CALL DDB$INTERP(IC$, TYPE, LENGTH);

   9513  2 000261   200007 631500                    EPPR1   LENGTH,,AUTO
         2 000262   200032 451500                    STP1    RNODE+3,,AUTO
         2 000263   200006 633500                    EPPR3   TYPE,,AUTO
         2 000264   200031 453500                    STP3    RNODE+2,,AUTO
         2 000265   200010 634500                    EPPR4   IC$,,AUTO
         2 000266   200030 454500                    STP4    RNODE+1,,AUTO
         2 000267   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000270   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000271   000000 701000 xent               TSX1    DDB$INTERP
         2 000272   000000 011000                    NOP     0

      148     9514    1        IF TYPE = T_UNCTRA THEN GOTO GOT_ONE; /* This one's going to branch */

   9514  2 000273   200006 235100                    LDA     TYPE,,AUTO
         2 000274   000002 115007                    CMPA    2,DL
         2 000275   000307 600000 2                  TZE     GOT_ONE

      149     9515    2        ELSE IF TYPE = T_CONTRA THEN DO;

   9515  2 000276   000003 115007                    CMPA    3,DL
         2 000277   001034 601000 2                  TNZ     SEARCH_IS

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:26   
      150     9516    2                  CALL DDB$TESTTRAN(IC$) ALTRET(SEARCH_P1);
              9516                           /* If no branch, add 1 to ic before

   9516  2 000300   200010 630500                    EPPR0   IC$,,AUTO
         2 000301   200030 450500                    STP0    RNODE+1,,AUTO
         2 000302   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000303   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000304   000000 701000 xent               TSX1    DDB$TESTTRAN
         2 000305   001031 702000 2                  TSX2    SEARCH_P1

      151     9517                            starting search, otherwise we'd just find this one again */
      152     9518    2                  GOTO GOT_ONE;

   9518  2 000306   000307 710000 2                  TRA     GOT_ONE

   9514  2 000307                       GOT_ONE      null
      153     9519    2                END;
      154     9520    1             ELSE GOTO SEARCH_IS;     /* It wasn't a transfer, go look for one */
      155     9521                       /* I know that this if construct could have been coded with out
      156     9522                       the gotos, but i thought it would be clearer this way */
      157     9523    1   GOT_ONE: ;                              /* Set up for write and history */
      158     9524    1        CALL DDB$TEFFADD(IC$, RIC) ALTRET(LOST_IT); /* Compute transfer address */

   9524  2 000307   200004 630500                    EPPR0   RIC,,AUTO
         2 000310   200031 450500                    STP0    RNODE+2,,AUTO
         2 000311   200010 631500                    EPPR1   IC$,,AUTO
         2 000312   200030 451500                    STP1    RNODE+1,,AUTO
         2 000313   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000314   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000315   000000 701000 xent               TSX1    DDB$TEFFADD
         2 000316   001247 702000 2                  TSX2    LOST_IT

      159     9525    1        IF S_D.ISBASE ~= 0

   9525  2 000317   000000 470400 xsym               LDP0    S_D$
         2 000320   000720 235100                    LDA     464,,PR0
         2 000321   000326 600000 2                  TZE     s:9532
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:27   

      160     9526    2        THEN DO;

      161     9527    2             RIC = RIC + S_D.ISBASE;

   9527  2 000322   200004 236100                    LDQ     RIC,,AUTO
         2 000323   000720 036100                    ADLQ    464,,PR0
         2 000324   200004 756100                    STQ     RIC,,AUTO

      162     9528    2             GOTO ENTER_IT;

   9528  2 000325   000357 710000 2                  TRA     ENTER_IT

      163     9529    2           END;
      164     9530                                 /* If bypass, use_mon, and both ics are in non-standard
      165     9531                                 code, then don't report the trace */
      166     9532    1        IF S_D.BYPASS AND D_SYMBOLS

   9532  2 000326   001032 234100                    SZN     538,,PR0
         2 000327   000357 605000 2                  TPL     ENTER_IT
         2 000330   000000 234000 xsym               SZN     D_SYMBOLS
         2 000331   000357 605000 2                  TPL     ENTER_IT
         2 000332   000734 720100                    LXL0    476,,PR0
         2 000333   001042 471500                    LDP1    546,,PR0
         2 000334   000000 636010                    EAQ     0,X0
         2 000335   000021 772000                    QRL     17
         2 000336   100001 236106                    LDQ     1,QL,PR1
         2 000337   074000 376007                    ANQ     30720,DL
         2 000340   004000 116007                    CMPQ    2048,DL
         2 000341   000357 601000 2                  TNZ     ENTER_IT

      167     9533    1          AND PINCRW(S_D.EDEF$,S_D.QSCH.PEDEF#*SIZEW(B$EDEF))->B$EDEF.CST = %NSTD#
      168     9534    2        THEN DO;

      169     9535    2             CALL DDF$FIND_PEDEF(RIC, PRIM$) ALTRET(ENTER_IT);

   9535  2 000342   200012 633500                    EPPR3   PRIM$,,AUTO
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:28   
         2 000343   200031 453500                    STP3    RNODE+2,,AUTO
         2 000344   200004 634500                    EPPR4   RIC,,AUTO
         2 000345   200030 454500                    STP4    RNODE+1,,AUTO
         2 000346   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000347   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000350   000000 701000 xent               TSX1    DDF$FIND_PEDEF
         2 000351   000357 702000 2                  TSX2    ENTER_IT

      170     9536    2             IF PRIM$->B$EDEF.CST = %NSTD# THEN GOTO SKIP_IT;

   9536  2 000352   200012 470500                    LDP0    PRIM$,,AUTO
         2 000353   000001 236100                    LDQ     1,,PR0
         2 000354   074000 376007                    ANQ     30720,DL
         2 000355   004000 116007                    CMPQ    2048,DL
         2 000356   000632 600000 2                  TZE     SKIP_IT

      171     9537    2           END;

   9536  2 000357                       ENTER_IT     null
      172     9538    1   ENTER_IT: ;
      173     9539    1        IF S_D.TR$INFO.TYPE = C@STATEMENTS OR S_D.TR$INFO.TYPE = C@PARAGRAPHS

   9539  2 000357   000000 470400 xsym               LDP0    S_D$
         2 000360   004634 235100                    LDA     2460,,PR0
         2 000361   001107 115007                    CMPA    583,DL
         2 000362   000365 600000 2                  TZE     s:9541
         2 000363   001106 115007                    CMPA    582,DL
         2 000364   000424 601000 2                  TNZ     REPORT1

      174     9540    2        THEN DO;

      175     9541    2             CALL DDF$STATEMENT (RIC, STMT#, SUBST#, SUBST) ALTRET(SKIP_IT);

   9541  2 000365   200024 631500                    EPPR1   SUBST,,AUTO
         2 000366   200033 451500                    STP1    RNODE+4,,AUTO
         2 000367   200017 633500                    EPPR3   SUBST#,,AUTO
         2 000370   200032 453500                    STP3    RNODE+3,,AUTO
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:29   
         2 000371   200020 634500                    EPPR4   STMT#,,AUTO
         2 000372   200031 454500                    STP4    RNODE+2,,AUTO
         2 000373   200004 635500                    EPPR5   RIC,,AUTO
         2 000374   200030 455500                    STP5    RNODE+1,,AUTO
         2 000375   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000376   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000377   000000 701000 xent               TSX1    DDF$STATEMENT
         2 000400   000632 702000 2                  TSX2    SKIP_IT

      176     9542    2             CALL DDF$EXST_#(STMT#, STMT$) ALTRET(SKIP_IT);

   9542  2 000401   200021 630500                    EPPR0   STMT$,,AUTO
         2 000402   200031 450500                    STP0    RNODE+2,,AUTO
         2 000403   200020 631500                    EPPR1   STMT#,,AUTO
         2 000404   200030 451500                    STP1    RNODE+1,,AUTO
         2 000405   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000406   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000407   000000 701000 xent               TSX1    DDF$EXST_#
         2 000410   000632 702000 2                  TSX2    SKIP_IT

      177     9543    2             IF RIC ~= STMT$->B$EXST.ISADDR THEN GOTO SKIP_IT;

   9543  2 000411   200021 470500                    LDP0    STMT$,,AUTO
         2 000412   000000 236100                    LDQ     0,,PR0
         2 000413   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 000414   200004 116100                    CMPQ    RIC,,AUTO
         2 000415   000632 601000 2                  TNZ     SKIP_IT

      178     9544    2             IF S_D.TR$INFO.TYPE = C@PARAGRAPHS AND NOT S_D.LABEL_FOUND THEN GOTO
              9544                      SKIP_IT;

   9544  2 000416   000000 471400 xsym               LDP1    S_D$
         2 000417   104634 235100                    LDA     2460,,PR1
         2 000420   001106 115007                    CMPA    582,DL
         2 000421   000424 601000 2                  TNZ     REPORT1
         2 000422   105327 234100                    SZN     2775,,PR1
         2 000423   000632 605000 2                  TPL     SKIP_IT
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:30   

      179     9545    2           END;

      180     9546    1   REPORT1:
      181     9547    1        IF S_D.HIST.ACTIVE

   9547  2 000424   000000 470400 xsym  REPORT1      LDP0    S_D$
         2 000425   004725 234100                    SZN     2517,,PR0
         2 000426   000472 605000 2                  TPL     s:9560

      182     9548    2        THEN DO;

      183     9549    2             IF S_D.OVERLAID

   9549  2 000427   004764 234100                    SZN     2548,,PR0
         2 000430   000452 605000 2                  TPL     ZERO

      184     9550    3             THEN DO;

      185     9551    3                  CALL DDS$IC2NODE (LIC, LNODE) ALTRET(ZERO);

   9551  2 000431   200026 631500                    EPPR1   LNODE,,AUTO
         2 000432   200031 451500                    STP1    RNODE+2,,AUTO
         2 000433   200003 633500                    EPPR3   LIC,,AUTO
         2 000434   200030 453500                    STP3    RNODE+1,,AUTO
         2 000435   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000436   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000437   000000 701000 xent               TSX1    DDS$IC2NODE
         2 000440   000452 702000 2                  TSX2    ZERO

      186     9552    3                  CALL DDS$IC2NODE (RIC, RNODE) ALTRET(ZERO);

   9552  2 000441   200027 630500                    EPPR0   RNODE,,AUTO
         2 000442   200031 450500                    STP0    RNODE+2,,AUTO
         2 000443   200004 631500                    EPPR1   RIC,,AUTO
         2 000444   200030 451500                    STP1    RNODE+1,,AUTO
         2 000445   200030 630500                    EPPR0   RNODE+1,,AUTO
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:31   
         2 000446   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000447   000000 701000 xent               TSX1    DDS$IC2NODE
         2 000450   000452 702000 2                  TSX2    ZERO

      187     9553    3                END;

   9553  2 000451   000454 710000 2                  TRA     s:9558

      188     9554    3             ELSE DO;

      189     9555    3   ZERO:          LNODE=0;

   9555  2 000452   200026 450100       ZERO         STZ     LNODE,,AUTO

      190     9556    3                  RNODE=0;

   9556  2 000453   200027 450100                    STZ     RNODE,,AUTO

      191     9557    3                END;

      192     9558    2             CALL DDB$PUTHIST (H_TT, 0, LIC, RIC, LNODE, RNODE);

   9558  2 000454   200027 630500                    EPPR0   RNODE,,AUTO
         2 000455   200035 450500                    STP0    RNODE+6,,AUTO
         2 000456   200026 631500                    EPPR1   LNODE,,AUTO
         2 000457   200034 451500                    STP1    RNODE+5,,AUTO
         2 000460   200004 633500                    EPPR3   RIC,,AUTO
         2 000461   200033 453500                    STP3    RNODE+4,,AUTO
         2 000462   200003 634500                    EPPR4   LIC,,AUTO
         2 000463   200032 454500                    STP4    RNODE+3,,AUTO
         2 000464   000004 237000 3                  LDAQ    4
         2 000465   200030 757100                    STAQ    RNODE+1,,AUTO
         2 000466   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000467   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000470   000000 701000 xent               TSX1    DDB$PUTHIST
         2 000471   000000 011000                    NOP     0

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:32   
      193     9559    2           END;

      194     9560    1        IF S_D.TR$INFO.SILENT THEN GOTO SKIP_IT;

   9560  2 000472   000000 470400 xsym               LDP0    S_D$
         2 000473   004631 234100                    SZN     2457,,PR0
         2 000474   000632 604000 2                  TMI     SKIP_IT

      195     9561    1        S_D.OUTPUT = ' ';                  /* Clear output buffer */

   9561  2 000475   040100 100400                    MLR     fill='040'O
         2 000476   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000477   005335 004000                    ADSC9   2781,,PR0                cn=0,n=2048

      196     9562    1        REM = LENGTHC( S_D.OUTPUT );

   9562  2 000500   004000 235007                    LDA     2048,DL
         2 000501   200013 755100                    STA     REM,,AUTO

      197     9563    1        BB$ = ADDR(S_D.OUTPUT);

   9563  2 000502   000000 236000 xsym               LDQ     S_D$
         2 000503   005335 036003                    ADLQ    2781,DU
         2 000504   200011 756100                    STQ     BB$,,AUTO

      198     9564    1        CALL DDR$POSIT( LIC, BB$, REM, NCARS);

   9564  2 000505   200014 631500                    EPPR1   NCARS,,AUTO
         2 000506   200033 451500                    STP1    RNODE+4,,AUTO
         2 000507   200013 633500                    EPPR3   REM,,AUTO
         2 000510   200032 453500                    STP3    RNODE+3,,AUTO
         2 000511   200011 634500                    EPPR4   BB$,,AUTO
         2 000512   200031 454500                    STP4    RNODE+2,,AUTO
         2 000513   200003 635500                    EPPR5   LIC,,AUTO
         2 000514   200030 455500                    STP5    RNODE+1,,AUTO
         2 000515   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000516   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:33   
         2 000517   000000 701000 xent               TSX1    DDR$POSIT
         2 000520   000000 011000                    NOP     0

      199     9565    2        IF S_D.TR$INFO.P THEN DO;

   9565  2 000521   000000 470400 xsym               LDP0    S_D$
         2 000522   004633 234100                    SZN     2459,,PR0
         2 000523   000551 605000 2                  TPL     s:9571

      200     9566    2             CALL DDF$FIND_PEDEF (LIC, PRIM$) ALTRET (SKIP_IT);

   9566  2 000524   200012 631500                    EPPR1   PRIM$,,AUTO
         2 000525   200031 451500                    STP1    RNODE+2,,AUTO
         2 000526   200003 633500                    EPPR3   LIC,,AUTO
         2 000527   200030 453500                    STP3    RNODE+1,,AUTO
         2 000530   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000531   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000532   000000 701000 xent               TSX1    DDF$FIND_PEDEF
         2 000533   000632 702000 2                  TSX2    SKIP_IT

      201     9567    2             PNP$ = PINCRW(S_D.DNAME$, PRIM$->B$EDEF.NPOINTER);

   9567  2 000534   200012 470500                    LDP0    PRIM$,,AUTO
         2 000535   000001 220100                    LDX0    1,,PR0
         2 000536   000000 471400 xsym               LDP1    S_D$
         2 000537   101041 473500                    LDP3    545,,PR1
         2 000540   300000 634510                    EPPR4   0,X0,PR3
         2 000541   200022 454500                    STP4    PNP$,,AUTO

      202     9568    2             COMPARE = S_D.TR$INFO.PSIZ;

   9568  2 000542   104635 235100                    LDA     2461,,PR1
         2 000543   200023 755100                    STA     COMPARE,,AUTO

      203     9569    2             IF S_D.TR$INFO.PTXT ~= PNP$->COMP.C THEN GOTO SKIP_IT;

   9569  2 000544   000000 621005                    EAX1    0,AL
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:34   
         2 000545   040140 106500                    CMPC    fill='040'O
         2 000546   104636 000030                    ADSC9   2462,,PR1                cn=0,n=24
         2 000547   400000 400011                    ADSC9   0,,PR4                   cn=2,n=*X1
         2 000550   000632 601000 2                  TNZ     SKIP_IT

      204     9570    2           END;

      205     9571    1        BB$ = PINCRC(BB$, NCARS+1);

   9571  2 000551   200014 236100                    LDQ     NCARS,,AUTO
         2 000552   000020 736000                    QLS     16
         2 000553   200000 036007                    ADLQ    65536,DL
         2 000554   200011 036100                    ADLQ    BB$,,AUTO
         2 000555   200011 756100                    STQ     BB$,,AUTO

      206     9572    1        BB$->CHAR4 = '--> ';

   9572  2 000556   200011 470500                    LDP0    BB$,,AUTO
         2 000557   040100 100400                    MLR     fill='040'O
         2 000560   000005 000004 1                  ADSC9   5                        cn=0,n=4
         2 000561   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      207     9573    1        BB$ = PINCRC(BB$, 4);

   9573  2 000562   200011 236100                    LDQ     BB$,,AUTO
         2 000563   000001 036003                    ADLQ    1,DU
         2 000564   200011 756100                    STQ     BB$,,AUTO

      208     9574    1        CALL DDR$POSIT( RIC, BB$, REM, NCARS);

   9574  2 000565   200014 630500                    EPPR0   NCARS,,AUTO
         2 000566   200033 450500                    STP0    RNODE+4,,AUTO
         2 000567   200013 631500                    EPPR1   REM,,AUTO
         2 000570   200032 451500                    STP1    RNODE+3,,AUTO
         2 000571   200011 633500                    EPPR3   BB$,,AUTO
         2 000572   200031 453500                    STP3    RNODE+2,,AUTO
         2 000573   200004 634500                    EPPR4   RIC,,AUTO
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:35   
         2 000574   200030 454500                    STP4    RNODE+1,,AUTO
         2 000575   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000576   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000577   000000 701000 xent               TSX1    DDR$POSIT
         2 000600   000000 011000                    NOP     0

      209     9575    1        BB$ = PINCRC(BB$,NCARS);

   9575  2 000601   200014 236100                    LDQ     NCARS,,AUTO
         2 000602   000020 736000                    QLS     16
         2 000603   200011 036100                    ADLQ    BB$,,AUTO
         2 000604   200011 756100                    STQ     BB$,,AUTO

      210     9576    1        CALL DDQ$WRITE(ADDR(S_D.OUTPUT), POFFC(BB$, ADDR(S_D.OUTPUT)));

   9576  2 000605   000000 236000 xsym               LDQ     S_D$
         2 000606   005335 036003                    ADLQ    2781,DU
         2 000607   000020 772000                    QRL     16
         2 000610   200030 756100                    STQ     RNODE+1,,AUTO
         2 000611   200011 236100                    LDQ     BB$,,AUTO
         2 000612   000020 772000                    QRL     16
         2 000613   200030 136100                    SBLQ    RNODE+1,,AUTO
         2 000614   200032 756100                    STQ     RNODE+3,,AUTO
         2 000615   000000 236000 xsym               LDQ     S_D$
         2 000616   005335 036003                    ADLQ    2781,DU
         2 000617   200031 756100                    STQ     RNODE+2,,AUTO
         2 000620   200032 235100                    LDA     RNODE+3,,AUTO
         2 000621   200033 755100                    STA     RNODE+4,,AUTO
         2 000622   200033 630500                    EPPR0   RNODE+4,,AUTO
         2 000623   200035 450500                    STP0    RNODE+6,,AUTO
         2 000624   200031 631500                    EPPR1   RNODE+2,,AUTO
         2 000625   200034 451500                    STP1    RNODE+5,,AUTO
         2 000626   200034 630500                    EPPR0   RNODE+5,,AUTO
         2 000627   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000630   000000 701000 xent               TSX1    DDQ$WRITE
         2 000631   000000 011000                    NOP     0

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:36   
   9575  2 000632                       SKIP_IT      null
      211     9577    1   SKIP_IT: ;
      212     9578    1        IF NOT D_XDELTA

   9578  2 000632   000000 234000 xsym               SZN     D_XDELTA
         2 000633   001026 604000 2                  TMI     s:9609

      213     9579    1        THEN IF RIC >= %LIBLO*1024 - %ISEGLO*1024 AND B$JIT.TDP <= %LIBLO

   9579  2 000634   200004 235100                    LDA     RIC,,AUTO
         2 000635   700000 115007                    CMPA    -32768,DL
         2 000636   001026 602000 2                  TNC     s:9609
         2 000637   000000 470400 xsym               LDP0    B$JIT$
         2 000640   000204 220100                    LDX0    132,,PR0
         2 000641   000441 100003                    CMPX0   289,DU
         2 000642   001026 603000 2                  TRC     s:9609
         2 000643   000215 721100                    LXL1    141,,PR0
         2 000644   001026 601000 2                  TNZ     s:9609

      214     9580    1               AND B$JIT.PCL = 0
      215     9581    2             THEN DO;                      /* If ic is in shared code */

      216     9582    2                  IF S_D.GOIC = S_D.SL

   9582  2 000645   000000 471400 xsym               LDP1    S_D$
         2 000646   100001 236100                    LDQ     1,,PR1
         2 000647   100010 116100                    CMPQ    8,,PR1
         2 000650   000662 601000 2                  TNZ     s:9588

      217     9583    3                  THEN DO;  /* Put the instruction back so stepadr can see it */

      218     9584    3                       TEMP = S_D.FAULTINS$->UBIN36;

   9584  2 000651   100003 473500                    LDP3    3,,PR1
         2 000652   300000 235100                    LDA     0,,PR3
         2 000653   200025 755100                    STA     TEMP,,AUTO

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:37   
      219     9585    3                       IC = IC - 1; /* It got bumped up when we came in, remember? */

   9585  2 000654   200005 235100                    LDA     IC,,AUTO
         2 000655   000001 135007                    SBLA    1,DL
         2 000656   200005 755100                    STA     IC,,AUTO

      220     9586    3                       S_D.FAULTINS$->UBIN36 = S_D.FAULTINS;
              9586                                /* Saved for us by DDA$GO */

   9586  2 000657   100003 473500                    LDP3    3,,PR1
         2 000660   105330 235100                    LDA     2776,,PR1
         2 000661   300000 755100                    STA     0,,PR3

      221     9587    3                     END;

      222     9588    2                  DOIT = '1'B;

   9588  2 000662   400000 236003                    LDQ     -131072,DU
         2 000663   200016 756100                    STQ     DOIT,,AUTO

      223     9589    2                  CALL DDB$STEPADR (DOIT, IC, LIC, ALT_FLAG, RIC) ALTRET(LOST_IT);

   9589  2 000664   200004 630500                    EPPR0   RIC,,AUTO
         2 000665   200034 450500                    STP0    RNODE+5,,AUTO
         2 000666   200015 633500                    EPPR3   ALT_FLAG,,AUTO
         2 000667   200033 453500                    STP3    RNODE+4,,AUTO
         2 000670   200003 634500                    EPPR4   LIC,,AUTO
         2 000671   200032 454500                    STP4    RNODE+3,,AUTO
         2 000672   200005 635500                    EPPR5   IC,,AUTO
         2 000673   200031 455500                    STP5    RNODE+2,,AUTO
         2 000674   200016 636500                    EPPR6   DOIT,,AUTO
         2 000675   200030 456500                    STP6    RNODE+1,,AUTO
         2 000676   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 000677   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 000700   000000 701000 xent               TSX1    DDB$STEPADR
         2 000701   001247 702000 2                  TSX2    LOST_IT

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:38   
      224     9590    2                  IF S_D.GOIC = S_D.SL

   9590  2 000702   000000 470400 xsym               LDP0    S_D$
         2 000703   000001 236100                    LDQ     1,,PR0
         2 000704   000010 116100                    CMPQ    8,,PR0
         2 000705   000711 601000 2                  TNZ     s:9592

      225     9591    2                  THEN S_D.FAULTINS$->UBIN36 = TEMP; /* Put the derail back */

   9591  2 000706   000003 471500                    LDP1    3,,PR0
         2 000707   200025 235100                    LDA     TEMP,,AUTO
         2 000710   100000 755100                    STA     0,,PR1

      226     9592    2                  IF LIC = RIC THEN ALT_FLAG = '0'B;

   9592  2 000711   200003 236100                    LDQ     LIC,,AUTO
         2 000712   200004 116100                    CMPQ    RIC,,AUTO
         2 000713   000715 601000 2                  TNZ     s:9593

   9592  2 000714   200015 450100                    STZ     ALT_FLAG,,AUTO

      227     9593    2                  IF ALT_FLAG

   9593  2 000715   200015 234100                    SZN     ALT_FLAG,,AUTO
         2 000716   000776 605000 2                  TPL     s:9603

      228     9594    3                  THEN DO;

      229     9595    3                       CALL DDB$PLANTONE (PINCRW(UIS$,RIC), 0, DRL_STT, ADDR(S_D.T$T.
              9595                                SAVEINS)) ALTRET(BAD_PUT);

   9595  2 000717   200004 236100                    LDQ     RIC,,AUTO
         2 000720   000022 736000                    QLS     18
         2 000721   000000 036000 xsym               ADLQ    UIS$
         2 000722   200030 756100                    STQ     RNODE+1,,AUTO
         2 000723   000000 236000 xsym               LDQ     S_D$
         2 000724   004713 036003                    ADLQ    2507,DU
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:39   
         2 000725   200031 756100                    STQ     RNODE+2,,AUTO
         2 000726   200031 631500                    EPPR1   RNODE+2,,AUTO
         2 000727   200035 451500                    STP1    RNODE+6,,AUTO
         2 000730   000003 236000 3                  LDQ     3
         2 000731   200034 756100                    STQ     RNODE+5,,AUTO
         2 000732   000001 236000 3                  LDQ     1
         2 000733   200033 756100                    STQ     RNODE+4,,AUTO
         2 000734   200030 633500                    EPPR3   RNODE+1,,AUTO
         2 000735   200032 453500                    STP3    RNODE+3,,AUTO
         2 000736   200032 630500                    EPPR0   RNODE+3,,AUTO
         2 000737   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000740   000000 701000 xent               TSX1    DDB$PLANTONE
         2 000741   001237 702000 2                  TSX2    BAD_PUT

      230     9596    3                       CALL DDB$PLANTONE (PINCRW(UIS$,LIC), 0, DRL_STT, ADDR(S_D.T$T.
              9596                                RETINS)) ALTRET(BAD_PUT);

   9596  2 000742   200003 236100                    LDQ     LIC,,AUTO
         2 000743   000022 736000                    QLS     18
         2 000744   000000 036000 xsym               ADLQ    UIS$
         2 000745   200030 756100                    STQ     RNODE+1,,AUTO
         2 000746   000000 236000 xsym               LDQ     S_D$
         2 000747   004715 036003                    ADLQ    2509,DU
         2 000750   200031 756100                    STQ     RNODE+2,,AUTO
         2 000751   200031 630500                    EPPR0   RNODE+2,,AUTO
         2 000752   200035 450500                    STP0    RNODE+6,,AUTO
         2 000753   000003 236000 3                  LDQ     3
         2 000754   200034 756100                    STQ     RNODE+5,,AUTO
         2 000755   000001 236000 3                  LDQ     1
         2 000756   200033 756100                    STQ     RNODE+4,,AUTO
         2 000757   200030 631500                    EPPR1   RNODE+1,,AUTO
         2 000760   200032 451500                    STP1    RNODE+3,,AUTO
         2 000761   200032 630500                    EPPR0   RNODE+3,,AUTO
         2 000762   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000763   000000 701000 xent               TSX1    DDB$PLANTONE
         2 000764   001237 702000 2                  TSX2    BAD_PUT

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:40   
      231     9597    3                       S_D.T$T.SAVELOC = RIC;

   9597  2 000765   200004 720100                    LXL0    RIC,,AUTO
         2 000766   000000 470400 xsym               LDP0    S_D$
         2 000767   004714 740100                    STX0    2508,,PR0

      232     9598    3                       S_D.T$T.RETLOC = LIC;

   9598  2 000770   200003 721100                    LXL1    LIC,,AUTO
         2 000771   004714 441100                    SXL1    2508,,PR0

      233     9599    3                       S_D.T$T.LOC_SAVED = '1'B;

   9599  2 000772   400000 236003                    LDQ     -131072,DU
         2 000773   004710 756100                    STQ     2504,,PR0

      234     9600    3                       S_D.T$T.RET_SAVED = '1'B;

   9600  2 000774   004711 756100                    STQ     2505,,PR0

      235     9601    3                     END;

   9601  2 000775   001025 710000 2                  TRA     s:9607

      236     9602    3                  ELSE DO;

      237     9603    3                       CALL DDB$PLANTONE (PINCRW(UIS$,LIC), 0, DRL_STT, ADDR(S_D.T$T.
              9603                                SAVEINS)) ALTRET(BAD_PUT);

   9603  2 000776   000022 736000                    QLS     18
         2 000777   000000 036000 xsym               ADLQ    UIS$
         2 001000   200030 756100                    STQ     RNODE+1,,AUTO
         2 001001   000000 236000 xsym               LDQ     S_D$
         2 001002   004713 036003                    ADLQ    2507,DU
         2 001003   200031 756100                    STQ     RNODE+2,,AUTO
         2 001004   200031 631500                    EPPR1   RNODE+2,,AUTO
         2 001005   200035 451500                    STP1    RNODE+6,,AUTO
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:41   
         2 001006   000003 236000 3                  LDQ     3
         2 001007   200034 756100                    STQ     RNODE+5,,AUTO
         2 001010   000001 236000 3                  LDQ     1
         2 001011   200033 756100                    STQ     RNODE+4,,AUTO
         2 001012   200030 633500                    EPPR3   RNODE+1,,AUTO
         2 001013   200032 453500                    STP3    RNODE+3,,AUTO
         2 001014   200032 630500                    EPPR0   RNODE+3,,AUTO
         2 001015   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 001016   000000 701000 xent               TSX1    DDB$PLANTONE
         2 001017   001237 702000 2                  TSX2    BAD_PUT

      238     9604    3                       S_D.T$T.SAVELOC = LIC;

   9604  2 001020   200003 720100                    LXL0    LIC,,AUTO
         2 001021   000000 470400 xsym               LDP0    S_D$
         2 001022   004714 740100                    STX0    2508,,PR0

      239     9605    3                       S_D.T$T.LOC_SAVED = '1'B;

   9605  2 001023   400000 236003                    LDQ     -131072,DU
         2 001024   004710 756100                    STQ     2504,,PR0

      240     9606    3                     END;

      241     9607    2                  RETURN;

   9607  2 001025   000000 702200 xent               TSX2  ! X66_ARET

      242     9608    2                END;
      243     9609    1        IC = RIC;                          /* Start search from here */

   9609  2 001026   200004 235100                    LDA     RIC,,AUTO
         2 001027   200005 755100                    STA     IC,,AUTO

      244     9610    1        GOTO SEARCH_IS;

   9610  2 001030   001034 710000 2                  TRA     SEARCH_IS
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:42   

      245     9611    1   SEARCH_P1: IC = IC + 1;

   9611  2 001031   200005 235100       SEARCH_P1    LDA     IC,,AUTO
         2 001032   000001 035007                    ADLA    1,DL
         2 001033   200005 755100                    STA     IC,,AUTO

   9609  2 001034                       SEARCH_IS    null
      246     9612    1   SEARCH_IS: ;
      247     9613    1        S_D.ACCESS = '1'B;

   9613  2 001034   400000 236003                    LDQ     -131072,DU
         2 001035   000000 470400 xsym               LDP0    S_D$
         2 001036   000016 756100                    STQ     14,,PR0

      248     9614    1        REMEMBER S_FAULT IN S_D.REM_ACCESS;
              9614                 /* In case we fall off the end of the world or hit a missing page */

   9614  2 001037   001263 635000 2                  EAA     S_FAULT
         2 001040   000024 452500                    STP2    20,,PR0
         2 001041   000025 755100                    STA     21,,PR0

      249     9615    1        IC$ = PINCRW(UIS$, IC);

   9615  2 001042   200005 236100                    LDQ     IC,,AUTO
         2 001043   000022 736000                    QLS     18
         2 001044   000000 036000 xsym               ADLQ    UIS$
         2 001045   200010 756100                    STQ     IC$,,AUTO

      250     9616    1   LOOK: CALL DDB$INTERP(IC$, TYPE, LENGTH);

   9616  2 001046   200007 630500       LOOK         EPPR0   LENGTH,,AUTO
         2 001047   200032 450500                    STP0    RNODE+3,,AUTO
         2 001050   200006 631500                    EPPR1   TYPE,,AUTO
         2 001051   200031 451500                    STP1    RNODE+2,,AUTO
         2 001052   200010 633500                    EPPR3   IC$,,AUTO
         2 001053   200030 453500                    STP3    RNODE+1,,AUTO
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:43   
         2 001054   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 001055   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001056   000000 701000 xent               TSX1    DDB$INTERP
         2 001057   000000 011000                    NOP     0

      251     9617    1        IF TYPE = T_CONTRA OR TYPE = T_UNCTRA

   9617  2 001060   200006 235100                    LDA     TYPE,,AUTO
         2 001061   000003 115007                    CMPA    3,DL
         2 001062   001165 600000 2                  TZE     SAVE_IT
         2 001063   000002 115007                    CMPA    2,DL
         2 001064   001165 600000 2                  TZE     SAVE_IT

      252     9618    1        THEN GOTO SAVE_IT;
      253     9619    1        ELSE IF TYPE = T_SPECIAL AND LENGTH = 2 /* Climb */

   9619  2 001065   000004 115007                    CMPA    4,DL
         2 001066   001160 601000 2                  TNZ     s:9639
         2 001067   200007 236100                    LDQ     LENGTH,,AUTO
         2 001070   000002 116007                    CMPQ    2,DL
         2 001071   001160 601000 2                  TNZ     s:9639

      254     9620    2             THEN DO;

      255     9621    3                  IF IC$->ALT_BIT THEN DO; /* Climb with altret */

   9621  2 001072   200010 470500                    LDP0    IC$,,AUTO
         2 001073   000000 234100                    SZN     0,,PR0
         2 001074   001154 605000 2                  TPL     s:9635

      256     9622    3                       IC$ = PINCRW(IC$,3); /* Point to return */

   9622  2 001075   200010 236100                    LDQ     IC$,,AUTO
         2 001076   000003 036003                    ADLQ    3,DU
         2 001077   200010 756100                    STQ     IC$,,AUTO

      257     9623    4                       IF LIC = POFFW(IC$, UIS$) THEN DO;
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:44   

   9623  2 001100   000000 235000 xsym               LDA     UIS$
         2 001101   000022 771000                    ARL     18
         2 001102   200030 755100                    STA     RNODE+1,,AUTO
         2 001103   200010 236100                    LDQ     IC$,,AUTO
         2 001104   000022 772000                    QRL     18
         2 001105   200030 136100                    SBLQ    RNODE+1,,AUTO
         2 001106   001116 604000 2                  TMI     s:9628
         2 001107   200003 116100                    CMPQ    LIC,,AUTO
         2 001110   001116 601000 2                  TNZ     s:9628

      258     9624    4                            IC$ = PINCRW(UIS$, RIC);

   9624  2 001111   200004 236100                    LDQ     RIC,,AUTO
         2 001112   000022 736000                    QLS     18
         2 001113   000000 036000 xsym               ADLQ    UIS$
         2 001114   200010 756100                    STQ     IC$,,AUTO

      259     9625    4                            GOTO SAVE_IT; /* Don't loop if this transfer and the */

   9625  2 001115   001165 710000 2                  TRA     SAVE_IT

      260     9626                                                /* next transfer are the same ic */
      261     9627    4                          END;
      262     9628    3                      CALL DDB$PLANTONE(IC$, 0, DRL_TT, ADDR(S_D.T$T.RETINS)) ALTRET (
              9628                                BAD_PUT);

   9628  2 001116   000000 236000 xsym               LDQ     S_D$
         2 001117   004715 036003                    ADLQ    2509,DU
         2 001120   200030 756100                    STQ     RNODE+1,,AUTO
         2 001121   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 001122   200035 450500                    STP0    RNODE+6,,AUTO
         2 001123   000006 236000 3                  LDQ     6
         2 001124   200034 756100                    STQ     RNODE+5,,AUTO
         2 001125   000001 236000 3                  LDQ     1
         2 001126   200033 756100                    STQ     RNODE+4,,AUTO
         2 001127   200010 631500                    EPPR1   IC$,,AUTO
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:45   
         2 001130   200032 451500                    STP1    RNODE+3,,AUTO
         2 001131   200032 630500                    EPPR0   RNODE+3,,AUTO
         2 001132   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 001133   000000 701000 xent               TSX1    DDB$PLANTONE
         2 001134   001237 702000 2                  TSX2    BAD_PUT

      263     9629    3                       S_D.T$T.RET_SAVED = '1'B;

   9629  2 001135   400000 236003                    LDQ     -131072,DU
         2 001136   000000 470400 xsym               LDP0    S_D$
         2 001137   004711 756100                    STQ     2505,,PR0

      264     9630    3                       S_D.T$T.RETLOC = POFFW(IC$, UIS$);

   9630  2 001140   000000 235000 xsym               LDA     UIS$
         2 001141   000022 771000                    ARL     18
         2 001142   200030 755100                    STA     RNODE+1,,AUTO
         2 001143   200010 236100                    LDQ     IC$,,AUTO
         2 001144   000022 772000                    QRL     18
         2 001145   200030 136100                    SBLQ    RNODE+1,,AUTO
         2 001146   000000 620006                    EAX0    0,QL
         2 001147   004714 440100                    SXL0    2508,,PR0

      265     9631    3                       IC$ = PINCRW(IC$, -1); /* Point to altret */

   9631  2 001150   200010 236100                    LDQ     IC$,,AUTO
         2 001151   777777 036003                    ADLQ    -1,DU
         2 001152   200010 756100                    STQ     IC$,,AUTO

      266     9632    3                       GOTO SAVE_IT;

   9632  2 001153   001165 710000 2                  TRA     SAVE_IT

      267     9633    3                     END;
      268     9634    3                  ELSE DO;

      269     9635    3                       IC$ = PINCRW(IC$,2); /* Point to return */
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:46   

   9635  2 001154   200010 236100                    LDQ     IC$,,AUTO
         2 001155   000002 036003                    ADLQ    2,DU
         2 001156   200010 756100                    STQ     IC$,,AUTO

      270     9636    3                       GOTO SAVE_IT;

   9636  2 001157   001165 710000 2                  TRA     SAVE_IT

      271     9637    3                     END;
      272     9638    2                END;
      273     9639    1        IC$ = PINCRW(IC$,LENGTH);

   9639  2 001160   200007 236100                    LDQ     LENGTH,,AUTO
         2 001161   000022 736000                    QLS     18
         2 001162   200010 036100                    ADLQ    IC$,,AUTO
         2 001163   200010 756100                    STQ     IC$,,AUTO

      274     9640    1        GOTO LOOK;

   9640  2 001164   001046 710000 2                  TRA     LOOK

   9639  2 001165                       SAVE_IT      null
      275     9641    1   SAVE_IT: ;
      276     9642    1        IF POFFW(IC$,UIS$) = LIC
              9642                 /* If next transfer is where where we just came from */

   9642  2 001165   000000 235000 xsym               LDA     UIS$
         2 001166   000022 771000                    ARL     18
         2 001167   200030 755100                    STA     RNODE+1,,AUTO
         2 001170   200010 236100                    LDQ     IC$,,AUTO
         2 001171   000022 772000                    QRL     18
         2 001172   200030 136100                    SBLQ    RNODE+1,,AUTO
         2 001173   001202 604000 2                  TMI     s:9645
         2 001174   200003 116100                    CMPQ    LIC,,AUTO
         2 001175   001202 601000 2                  TNZ     s:9645

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:47   
      277     9643    1        THEN IC$ = PINCRW(UIS$,RIC);
              9643                 /* Set the derail at where we're going, so we'll look the next time */

   9643  2 001176   200004 236100                    LDQ     RIC,,AUTO
         2 001177   000022 736000                    QLS     18
         2 001200   000000 036000 xsym               ADLQ    UIS$
         2 001201   200010 756100                    STQ     IC$,,AUTO

      278     9644                                                /* This keeps us from looping forever */
      279     9645    1        CALL DDB$PLANTONE(IC$, 0, DRL_TT, ADDR(S_D.T$T.SAVEINS)) ALTRET(BAD_PUT);

   9645  2 001202   000000 236000 xsym               LDQ     S_D$
         2 001203   004713 036003                    ADLQ    2507,DU
         2 001204   200030 756100                    STQ     RNODE+1,,AUTO
         2 001205   200030 630500                    EPPR0   RNODE+1,,AUTO
         2 001206   200035 450500                    STP0    RNODE+6,,AUTO
         2 001207   000006 236000 3                  LDQ     6
         2 001210   200034 756100                    STQ     RNODE+5,,AUTO
         2 001211   000001 236000 3                  LDQ     1
         2 001212   200033 756100                    STQ     RNODE+4,,AUTO
         2 001213   200010 631500                    EPPR1   IC$,,AUTO
         2 001214   200032 451500                    STP1    RNODE+3,,AUTO
         2 001215   200032 630500                    EPPR0   RNODE+3,,AUTO
         2 001216   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 001217   000000 701000 xent               TSX1    DDB$PLANTONE
         2 001220   001237 702000 2                  TSX2    BAD_PUT

      280     9646    1        S_D.T$T.SAVELOC = POFFW(IC$,UIS$);

   9646  2 001221   000000 235000 xsym               LDA     UIS$
         2 001222   000022 771000                    ARL     18
         2 001223   200030 755100                    STA     RNODE+1,,AUTO
         2 001224   200010 236100                    LDQ     IC$,,AUTO
         2 001225   000022 772000                    QRL     18
         2 001226   200030 136100                    SBLQ    RNODE+1,,AUTO
         2 001227   000000 620006                    EAX0    0,QL
         2 001230   000000 470400 xsym               LDP0    S_D$
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:48   
         2 001231   004714 740100                    STX0    2508,,PR0

      281     9647    1        S_D.T$T.LOC_SAVED = '1'B;

   9647  2 001232   400000 236003                    LDQ     -131072,DU
         2 001233   004710 756100                    STQ     2504,,PR0

      282     9648    1   RET: S_D.ACCESS = '0'B;

   9648  2 001234   000000 470400 xsym  RET          LDP0    S_D$
         2 001235   000016 450100                    STZ     14,,PR0

      283     9649    1        RETURN;

   9649  2 001236   000000 702200 xent               TSX2  ! X66_ARET

      284     9650    1   BAD_PUT: CALL DDE$ERROR;

   9650  2 001237   000002 631400 xsym  BAD_PUT      EPPR1   B_VECTNIL+2
         2 001240   000000 701000 xent               TSX1    DDE$ERROR
         2 001241   000000 011000                    NOP     0

      285     9651    1        CALL DDR$REPORT(R_TTLOST);

   9651  2 001242   000010 630400 3                  EPPR0   8
         2 001243   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001244   000000 701000 xent               TSX1    DDR$REPORT
         2 001245   000000 011000                    NOP     0

      286     9652    1        ALTRETURN;

   9652  2 001246   000000 702200 xent               TSX2  ! X66_AALT

   9647  2 001247                       LOST_IT      null
      287     9653    1   LOST_IT: ;
      288     9654    1        IF S_D.TR$INFO.ACTIVE AND IC$->INSTR.TAG.TM = 2

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:49   
   9654  2 001247   000000 470400 xsym               LDP0    S_D$
         2 001250   004630 234100                    SZN     2456,,PR0
         2 001251   001260 605000 2                  TPL     s:9658
         2 001252   200010 471500                    LDP1    IC$,,AUTO
         2 001253   100000 236100                    LDQ     0,,PR1
         2 001254   000060 376007                    ANQ     48,DL
         2 001255   000040 116007                    CMPQ    32,DL
         2 001256   001260 601000 2                  TNZ     s:9658

      289     9655                                                /* Trace calls and fault tag set */
      290     9656    1        THEN RETURN;             /* We will get entered on trace call next time */

   9656  2 001257   000000 702200 xent               TSX2  ! X66_ARET

      291     9657    2        ELSE DO;

      292     9658    2             S_D.ERROR = E@LOST_TT;        /* E@LOST_TT */

   9658  2 001260   001002 235007                    LDA     514,DL
         2 001261   000013 755100                    STA     11,,PR0

      293     9659    2             GOTO BAD_PUT;

   9659  2 001262   001237 710000 2                  TRA     BAD_PUT

      294     9660    2           END;
      295     9661    1   S_FAULT: GOTO RET;            /* He's gonna get blown away, set back and wait */

   9661  2 001263   001234 710000 2     S_FAULT      TRA     RET

(unnamed)
 Sect OctLoc
   1     000   133123 110101   122105 104055   114111 102135   040055 055076    [SHARED-LIB] -->
   1     004   040040 040040   055055 076040                                        -->

(unnamed)
 Sect OctLoc
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:50   
   3     000   000015 006000   000002 006000   005341 200000   000012 006000    ................
   3     004   000002 006000   000002 006000   000006 006000   000000 000026    ................
   3     010   000007 006000                                                    ....
      296     9662    1   END;

PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:51   
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDB$SET_TT.

   Procedure DDB$SET_TT requires 692 words for executable code.
   Procedure DDB$SET_TT requires 30 words of local(AUTO) storage.

    No errors detected in file DDB$SET_TT.:E05TSI    .
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:52   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:53   
          MINI XREF LISTING

ALT_BIT
        44**DCL      9621>>IF
ALT_FLAG
        30**DCL      9589<>CALL     9592<<ASSIGN   9593>>IF
B$ALIBF.WHO
      8961**DCL      9488>>IF
B$EDEF
      3585**DCL      9532--IF
B$EDEF.CST
      3631**DCL      9532>>IF       9536>>IF
B$EDEF.NPOINTER
      3610**DCL      9567>>ASSIGN
B$EDEF.OU
      3602**DCL      3608--REDEF
B$EXST.ISADDR
      3493**DCL      9458>>IF       9543>>IF
B$EXST.OU
      3487**DCL      3493--REDEF
B$JIT.CPFLAGS1.SLEAZE
      9109**DCL      9109--REDEF
B$JIT.ERR.MID
      9016**DCL      9016--REDEF
B$JIT.JRESPEAK
      9177**DCL      9178--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      9286**DCL      9286--REDEF    9287--REDEF
B$JIT.PCL
      9179**DCL      9505>>IF       9579>>IF
B$JIT.PNR
      9190**DCL      9190--REDEF
B$JIT.TDP
      9175**DCL      9505>>IF       9579>>IF
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:54   
B$JIT.TSLINE
      9284**DCL      9285--REDEF
B$JIT$
      9431**DCL      9010--IMP-PTR  9505>>IF       9505>>IF       9579>>IF       9579>>IF
B$TCB.STK$
      8958**DCL      9488>>IF
B$TCB$
      9432**DCL      9488>>IF
BAD_PUT
      9650**LABEL    9595--CALLALT  9596--CALLALT  9603--CALLALT  9628--CALLALT  9645--CALLALT  9659--GOTO
BB$
        26**DCL      9479<<ASSIGN   9480<>CALL     9481<<ASSIGN   9481>>ASSIGN   9482>>CALL     9563<<ASSIGN
      9564<>CALL     9571<<ASSIGN   9571>>ASSIGN   9572>>ASSIGN   9573<<ASSIGN   9573>>ASSIGN   9574<>CALL
      9575<<ASSIGN   9575>>ASSIGN   9576>>CALL
CHAR4
        45**DCL      9572<<ASSIGN
COMP.C
        39**DCL      9569>>IF
COMPARE
        36**DCL        39--IMP-SIZ  9568<<ASSIGN   9569>>IF
DDB$INTERP
      9437**DCL-ENT  9513--CALL     9616--CALL
DDB$PLANTONE
      9444**DCL-ENT  9595--CALL     9596--CALL     9603--CALL     9628--CALL     9645--CALL
DDB$PUTHIST
      9445**DCL-ENT  9473--CALL     9558--CALL
DDB$STEPADR
      9443**DCL-ENT  9589--CALL
DDB$TEFFADD
      9439**DCL-ENT  9524--CALL
DDB$TESTTRAN
      9438**DCL-ENT  9516--CALL
DDE$ERROR
      9441**DCL-ENT  9491--CALL     9509--CALL     9650--CALL
DDF$EXST_#
      9447**DCL-ENT  9457--CALL     9542--CALL
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:55   
DDF$FIND_PEDEF
      9436**DCL-ENT  9535--CALL     9566--CALL
DDF$STATEMENT
      9446**DCL-ENT  9456--CALL     9541--CALL
DDQ$WRITE
      9440**DCL-ENT  9482--CALL     9576--CALL
DDR$POSIT
      9442**DCL-ENT  9480--CALL     9564--CALL     9574--CALL
DDR$REPORT
      9449**DCL-ENT  9651--CALL
DDS$IC2NODE
      9448**DCL-ENT  9466--CALL     9467--CALL     9551--CALL     9552--CALL
DOIT
        31**DCL      9588<<ASSIGN   9589<>CALL
D_SYMBOLS
      9433**DCL      9532>>IF
D_XDELTA
      9435**DCL      9504>>IF       9578>>IF
ENTER_IT
      9536**LABEL    9528--GOTO     9535--CALLALT
GOT_ONE
      9514**LABEL    9514--GOTO     9518--GOTO
IC
        22**DCL      9497<<ASSIGN   9502<<ASSIGN   9505>>IF       9585<<ASSIGN   9585>>ASSIGN   9589<>CALL
      9609<<ASSIGN   9611<<ASSIGN   9611>>ASSIGN   9615>>ASSIGN
IC$
        25**DCL      9512<<ASSIGN   9513<>CALL     9516<>CALL     9524<>CALL     9615<<ASSIGN   9616<>CALL
      9621>>IF       9622<<ASSIGN   9622>>ASSIGN   9623>>IF       9624<<ASSIGN   9628<>CALL     9630>>ASSIGN
      9631<<ASSIGN   9631>>ASSIGN   9635<<ASSIGN   9635>>ASSIGN   9639<<ASSIGN   9639>>ASSIGN   9642>>IF
      9643<<ASSIGN   9645<>CALL     9646>>ASSIGN   9654>>IF
INSTR.TAG.TD
      4990**DCL      4991--REDEF
INSTR.TAG.TM
      4989**DCL      9654>>IF
INSTR.TAGG
      4987**DCL      4988--REDEF
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:56   
INSTR.Y
      4975**DCL      4976--REDEF    4979--REDEF
LENGTH
        24**DCL      9513<>CALL     9616<>CALL     9619>>IF       9639>>ASSIGN
LIC
        20**DCL      9466<>CALL     9473<>CALL     9495<<ASSIGN   9497>>ASSIGN   9501<<ASSIGN   9502>>ASSIGN
      9551<>CALL     9558<>CALL     9564<>CALL     9566<>CALL     9589<>CALL     9592>>IF       9596>>CALL
      9598>>ASSIGN   9603>>CALL     9604>>ASSIGN   9623>>IF       9642>>IF
LNODE
        42**DCL      9466<>CALL     9470<<ASSIGN   9473<>CALL     9551<>CALL     9555<<ASSIGN   9558<>CALL
LOOK
      9616**LABEL    9640--GOTO
LOST_IT
      9647**LABEL    9524--CALLALT  9589--CALLALT
NCARS
        29**DCL      9480<>CALL     9481>>ASSIGN   9564<>CALL     9571>>ASSIGN   9574<>CALL     9575>>ASSIGN
PNP$
        35**DCL      9567<<ASSIGN   9569>>IF
PRIM$
        27**DCL      9535<>CALL     9536>>IF       9566<>CALL     9567>>ASSIGN
REM
        28**DCL      9478<<ASSIGN   9480<>CALL     9562<<ASSIGN   9564<>CALL     9574<>CALL
RET
      9648**LABEL    9661--GOTO
RIC
        21**DCL      9467<>CALL     9473<>CALL     9524<>CALL     9527<<ASSIGN   9527>>ASSIGN   9535<>CALL
      9541<>CALL     9543>>IF       9552<>CALL     9558<>CALL     9574<>CALL     9579>>IF       9589<>CALL
      9592>>IF       9595>>CALL     9597>>ASSIGN   9609>>ASSIGN   9624>>ASSIGN   9643>>ASSIGN
RNODE
        43**DCL      9467<>CALL     9471<<ASSIGN   9473<>CALL     9552<>CALL     9556<<ASSIGN   9558<>CALL
SAVE_IT
      9639**LABEL    9618--GOTO     9625--GOTO     9632--GOTO     9636--GOTO
SEARCH_IS
      9609**LABEL    9520--GOTO     9610--GOTO
SEARCH_P1
      9611**LABEL    9516--CALLALT
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:57   
SKIP0
      9487**LABEL    9456--CALLALT  9457--CALLALT  9458--GOTO     9459--GOTO
SKIP_IT
      9575**LABEL    9536--GOTO     9541--CALLALT  9542--CALLALT  9543--GOTO     9544--GOTO     9560--GOTO
      9566--CALLALT  9569--GOTO
STMT#
        33**DCL      9456<>CALL     9457<>CALL     9541<>CALL     9542<>CALL
STMT$
        34**DCL      9457<>CALL     9458>>IF       9542<>CALL     9543>>IF
SUBST
        40**DCL      9456<>CALL     9541<>CALL
SUBST#
        32**DCL      9456<>CALL     9541<>CALL
S_D.ACCESS
      6454**DCL      9613<<ASSIGN   9648<<ASSIGN
S_D.ALIB
      7171**DCL      9487>>IF
S_D.BYPASS
      6847**DCL      9532>>IF
S_D.CURRENT_CHANNEL
      7367**DCL      7369--REDEF
S_D.DEBUGA
      6519**DCL      6521--REDEF
S_D.DNAME$
      6861**DCL      9567>>ASSIGN
S_D.EDEF$
      6863**DCL      9532>>IF
S_D.EIS
      7477**DCL      7506--REDEF
S_D.ERROR
      6448**DCL      9490<<ASSIGN   9508<<ASSIGN   9658<<ASSIGN
S_D.FAULTINS
      7388**DCL      9586>>ASSIGN
S_D.FAULTINS$
      6432**DCL      9584>>ASSIGN   9586>>ASSIGN   9591>>ASSIGN
S_D.GOIC
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:58   
      6428**DCL      9494>>IF       9501>>ASSIGN   9512>>ASSIGN   9582>>IF       9590>>IF
S_D.HIST.ACTIVE
      7012**DCL      9462>>IF       9547>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
      7410**DCL      7411--REDEF    7425--REDEF
S_D.ISBASE
      6697**DCL      9525>>IF       9527>>ASSIGN
S_D.JDE
      7024**DCL      7025--REDEF
S_D.L$.VALUE
      6577**DCL      6583--REDEF    6591--REDEF    6594--REDEF    6597--REDEF    6600--REDEF
S_D.L$.VALUE.L
      6578**DCL      6579--REDEF    6580--REDEF
S_D.L6_MESSAGE_BUF
      7431**DCL      7433--REDEF
S_D.LABEL_FOUND
      7384**DCL      9459>>IF       9544>>IF
S_D.OUTPUT
      7397**DCL      7399--REDEF    9477<<ASSIGN   9479--ASSIGN   9482--CALL     9482--CALL     9561<<ASSIGN
      9562--ASSIGN   9563--ASSIGN   9576--CALL     9576--CALL
S_D.OUT_WIDTH
      6450**DCL      9478>>ASSIGN
S_D.OVERLAID
      7081**DCL      9464>>IF       9549>>IF
S_D.QSCH.PEDEF#
      6725**DCL      9532>>IF
S_D.REMOTE_MSG.FNCC
      7416**DCL      7417--REDEF
S_D.REMOTE_MSG.STXC
      7412**DCL      7413--REDEF
S_D.REMOTE_MSG.SUBFNCC
      7420**DCL      7421--REDEF
S_D.REM_ACCESS
      6462**DCL      9614<<REMEMBR
S_D.SL
      6442**DCL      9494>>IF       9582>>IF       9590>>IF
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:59   
S_D.SV
      6476**DCL      6497--REDEF
S_D.T$T.LOC_SAVED
      6982**DCL      9599<<ASSIGN   9605<<ASSIGN   9647<<ASSIGN
S_D.T$T.RETINS
      6994**DCL      9596--CALL     9628--CALL
S_D.T$T.RETLOC
      6992**DCL      9598<<ASSIGN   9630<<ASSIGN
S_D.T$T.RET_SAVED
      6984**DCL      9600<<ASSIGN   9629<<ASSIGN
S_D.T$T.SAVEINS
      6988**DCL      9595--CALL     9603--CALL     9645--CALL
S_D.T$T.SAVELOC
      6990**DCL      9597<<ASSIGN   9604<<ASSIGN   9646<<ASSIGN
S_D.T$T.SHARED
      6986**DCL      9451>>IF       9453<<ASSIGN
S_D.TIC
      6466**DCL      9456<>CALL     9458>>IF       9480<>CALL     9495>>ASSIGN
S_D.TR$INFO.ACTIVE
      6903**DCL      9654>>IF
S_D.TR$INFO.P
      6909**DCL      9475>>IF       9565>>IF
S_D.TR$INFO.PSIZ
      6913**DCL      9568>>ASSIGN
S_D.TR$INFO.PTXT
      6915**DCL      9569>>IF
S_D.TR$INFO.SILENT
      6905**DCL      9475>>IF       9560>>IF
S_D.TR$INFO.TYPE
      6911**DCL      9454>>IF       9454>>IF       9459>>IF       9539>>IF       9539>>IF       9544>>IF
S_D$
      7728**DCL      6424--IMP-PTR  9451>>IF       9453>>ASSIGN   9454>>IF       9454>>IF       9456>>CALL
      9458>>IF       9459>>IF       9459>>IF       9462>>IF       9464>>IF       9475>>IF       9475>>IF
      9477>>ASSIGN   9478>>ASSIGN   9479>>ASSIGN   9480>>CALL     9482>>CALL     9482>>CALL     9487>>IF
      9490>>ASSIGN   9494>>IF       9494>>IF       9495>>ASSIGN   9501>>ASSIGN   9508>>ASSIGN   9512>>ASSIGN
      9525>>IF       9527>>ASSIGN   9532>>IF       9532>>IF       9532>>IF       9539>>IF       9539>>IF
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:60   
      9544>>IF       9544>>IF       9547>>IF       9549>>IF       9560>>IF       9561>>ASSIGN   9563>>ASSIGN
      9565>>IF       9567>>ASSIGN   9568>>ASSIGN   9569>>IF       9576>>CALL     9576>>CALL     9582>>IF
      9582>>IF       9584>>ASSIGN   9586>>ASSIGN   9586>>ASSIGN   9590>>IF       9590>>IF       9591>>ASSIGN
      9595>>CALL     9596>>CALL     9597>>ASSIGN   9598>>ASSIGN   9599>>ASSIGN   9600>>ASSIGN   9603>>CALL
      9604>>ASSIGN   9605>>ASSIGN   9613>>ASSIGN   9614>>REMEMBR  9628>>CALL     9629>>ASSIGN   9630>>ASSIGN
      9645>>CALL     9646>>ASSIGN   9647>>ASSIGN   9648>>ASSIGN   9654>>IF       9658>>ASSIGN
S_FAULT
      9661**LABEL    9614--REMEMBR
TEMP
        41**DCL      9584<<ASSIGN   9591>>ASSIGN
TYPE
        23**DCL      9513<>CALL     9514>>IF       9515>>IF       9616<>CALL     9617>>IF       9617>>IF
      9619>>IF
UBIN36
        46**DCL      9584>>ASSIGN   9586<<ASSIGN   9591<<ASSIGN
UIS$
      9434**DCL      9512>>ASSIGN   9595>>CALL     9596>>CALL     9603>>CALL     9615>>ASSIGN   9623>>IF
      9624>>ASSIGN   9630>>ASSIGN   9642>>IF       9643>>ASSIGN   9646>>ASSIGN
ZERO
      9555**LABEL    9551--CALLALT  9552--CALLALT
ZERO0
      9470**LABEL    9466--CALLALT  9467--CALLALT
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:61   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:62   
              MINI UREF LISTING

DDB$SET_TT      19**PROC
M$ACCT    8902**DCL-ENT
M$ACTIVATE    8905**DCL-ENT
M$ALIB    8898**DCL-ENT
M$ASUSER    8900**DCL-ENT
M$ATTACH    8907**DCL-ENT
M$BADPP    8925**DCL-ENT
M$CGCTL    8906**DCL-ENT
M$CGINFO    8906**DCL-ENT
M$CHECK    8887**DCL-ENT
M$CHGUNIT    8945**DCL-ENT
M$CLOSE    8885**DCL-ENT
M$CLRSTK    8943**DCL-ENT
M$CMDVAR    8954**DCL-ENT
M$CONFIG    8915**DCL-ENT
M$CORRES    8890**DCL-ENT
M$CPEXIT    8899**DCL-ENT
M$CVM    8923**DCL-ENT
M$CVOL    8888**DCL-ENT
M$DCLFLD    8915**DCL-ENT
M$DEACTIVATE    8905**DCL-ENT
M$DELREC    8887**DCL-ENT
M$DEQ    8952**DCL-ENT
M$DETACH    8907**DCL-ENT
M$DEVICE    8889**DCL-ENT
M$DISPLAY    8952**DCL-ENT
M$DISPRES    8892**DCL-ENT
M$DLIB    8898**DCL-ENT
M$DRIBBLE    8915**DCL-ENT
M$DRTN    8943**DCL-ENT
M$DSUSER    8900**DCL-ENT
M$ENQ    8951**DCL-ENT
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:63   
M$EOM    8910**DCL-ENT
M$ERASE    8916**DCL-ENT
M$ERR    8897**DCL-ENT
M$ERRMSG    8948**DCL-ENT
M$EVENT    8940**DCL-ENT
M$EXHUME    8949**DCL-ENT
M$EXIT    8897**DCL-ENT
M$EXTEND    8889**DCL-ENT
M$FDP    8921**DCL-ENT
M$FDS    8920**DCL-ENT
M$FEBOOT    8913**DCL-ENT
M$FECTL    8914**DCL-ENT
M$FEDUMP    8913**DCL-ENT
M$FID    8948**DCL-ENT
M$FINDPROC    8902**DCL-ENT
M$FSUSER    8900**DCL-ENT
M$FVP    8922**DCL-ENT
M$FWCG    8906**DCL-ENT
M$GBPL    8926**DCL-ENT
M$GDDL    8922**DCL-ENT
M$GDP    8921**DCL-ENT
M$GDS    8920**DCL-ENT
M$GETDCB    8891**DCL-ENT
M$GETMOUSE    8931**DCL-ENT
M$GETPM    8932**DCL-ENT
M$GJOB    8950**DCL-ENT
M$GLINEATTR    8910**DCL-ENT
M$GOODPP    8925**DCL-ENT
M$GPLATEN    8918**DCL-ENT
M$GPROMPT    8917**DCL-ENT
M$GTRMATTR    8911**DCL-ENT
M$GTRMCTL    8909**DCL-ENT
M$GTRMTAB    8912**DCL-ENT
M$GVP    8921**DCL-ENT
M$HELP    8948**DCL-ENT
M$INT    8940**DCL-ENT
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:64   
M$INTRTN    8901**DCL-ENT
M$IOQ    8936**DCL-ENT
M$JOBSTATS    8950**DCL-ENT
M$KEYIN    8890**DCL-ENT
M$LDEV    8885**DCL-ENT
M$LDTRC    8898**DCL-ENT
M$LIMIT    8891**DCL-ENT
M$LINES    8890**DCL-ENT
M$LINK    8897**DCL-ENT
M$MADMUCK    8893**DCL-ENT
M$MAKUSER    8924**DCL-ENT
M$MBS    8892**DCL-ENT
M$MDFFLD    8916**DCL-ENT
M$MERC    8941**DCL-ENT
M$MERCS    8942**DCL-ENT
M$MIRROR    8936**DCL-ENT
M$MONINFO    8953**DCL-ENT
M$MPL    8926**DCL-ENT
M$NODEINFO    8917**DCL-ENT
M$NXTUSR    8951**DCL-ENT
M$OCMSG    8949**DCL-ENT
M$OLAY    8897**DCL-ENT
M$OPEN    8885**DCL-ENT
M$PAS    8926**DCL-ENT
M$PATHCON    8949**DCL-ENT
M$PDS    8920**DCL-ENT
M$PFIL    8887**DCL-ENT
M$PLATEN    8911**DCL-ENT
M$PRECORD    8889**DCL-ENT
M$PROCNAME    8902**DCL-ENT
M$PROFILE    8913**DCL-ENT
M$PROMPT    8909**DCL-ENT
M$RACST    8893**DCL-ENT
M$RDSYSLOG    8934**DCL-ENT
M$READ    8886**DCL-ENT
M$RELDCB    8891**DCL-ENT
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:65   
M$RELRES    8892**DCL-ENT
M$RELSTARF    8894**DCL-ENT
M$REM    8894**DCL-ENT
M$RENV    8941**DCL-ENT
M$REQUIRE    8893**DCL-ENT
M$RETRY    8942**DCL-ENT
M$RETRYS    8942**DCL-ENT
M$REW    8888**DCL-ENT
M$RLSFLD    8916**DCL-ENT
M$RPRIV    8944**DCL-ENT
M$RSPP    8923**DCL-ENT
M$RSWITCH    8945**DCL-ENT
M$RUE    8951**DCL-ENT
M$SAD    8924**DCL-ENT
M$SAVE    8900**DCL-ENT
M$SCON    8901**DCL-ENT
M$SCREECH    8899**DCL-ENT
M$SENV    8941**DCL-ENT
M$SETFMA    8885**DCL-ENT
M$SETFP    8914**DCL-ENT
M$SINPUT    8912**DCL-ENT
M$SLCFLD    8917**DCL-ENT
M$SMOUSE    8931**DCL-ENT
M$SMPRT    8923**DCL-ENT
M$SPRIV    8944**DCL-ENT
M$SSC    8924**DCL-ENT
M$SSWITCH    8944**DCL-ENT
M$STATE    8953**DCL-ENT
M$STD    8925**DCL-ENT
M$STIMER    8939**DCL-ENT
M$STLPP    8922**DCL-ENT
M$STRAP    8939**DCL-ENT
M$STRMATTR    8911**DCL-ENT
M$STRMCTL    8909**DCL-ENT
M$STRMTAB    8912**DCL-ENT
M$SYMBIO    8950**DCL-ENT
PL6.E3A0      #001=DDB$SET_TT File=DDB$SET_TT.:E05TSI                            TUE 07/29/97 13:47 Page:66   
M$SYSCON    8936**DCL-ENT
M$SYSID    8954**DCL-ENT
M$TDCLOSE    8935**DCL-ENT
M$TDIO    8935**DCL-ENT
M$TDOPEN    8934**DCL-ENT
M$TDREQCPU    8935**DCL-ENT
M$TEMPWROC    8929**DCL-ENT
M$TIME    8952**DCL-ENT
M$TRAP    8939**DCL-ENT
M$TRMISC    8914**DCL-ENT
M$TRMPRG    8910**DCL-ENT
M$TRTN    8943**DCL-ENT
M$TRUNC    8886**DCL-ENT
M$TTIMER    8939**DCL-ENT
M$UC    8909**DCL
M$UMPL    8926**DCL-ENT
M$UNFID    8948**DCL-ENT
M$UNLATCH    8905**DCL-ENT
M$UNSHARE    8902**DCL-ENT
M$USRFIELD    8945**DCL-ENT
M$VIRTUAL    8920**DCL-ENT
M$WAIT    8943**DCL-ENT
M$WEOF    8888**DCL-ENT
M$WRITE    8886**DCL-ENT
M$WRSYSLOG    8934**DCL-ENT
M$XCON    8940**DCL-ENT
M$XCONRTN    8901**DCL-ENT
M$XEQTIME    8953**DCL-ENT
M$XFLUSH    8894**DCL-ENT
M$XMOUSE    8931**DCL-ENT
M$XXX    8897**DCL-ENT
M$YC    8899**DCL-ENT
REPORT0    9462**LABEL
REPORT1    9547**LABEL
