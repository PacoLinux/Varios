VERSION E05

PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:1    
        1        1        /*M* CPJ$ESTCLIM, CPJ$ESTCUM, CPJ$READ_S, CPJ$WRITE_S */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /*P*   NAME:   CPJ$SUBR
        9        9               PURPOSE: Selection of routined called for purposes of performing
       10       10                       a variety of functions.
       11       11               DESCRIPTION: See the function or routine preambles for the individual
       12       12                       subroutines.
       13       13        */
       14       14                   %EJECT;
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:2    
       15       15        /*********************************************************************/
       16       16        /*F*   NAME:   CPJ$ESTLIM
       17       17               PURPOSE: Establish new limit and cumulative value for a specified
       18       18                        service limit.
       19       19               DESCRIPTION: The amount used for a job step(s) is calculated
       20       20                        and the JIT and *S file updated to establish a new
       21       21                        limit for subsequent step(s).
       22       22        */
       23       23        /*D*   NAME:   CPJ$ESTLIM
       24       24               CALL:   CALL CPJ$ESTLIM(LIM,LIM_VAL,STEP_FLG);
       25       25               INTERFACE:
       26       26               INPUT:  LIM - limit record from *S
       27       27                       LIMIT_VAL - limit to be updated in JIT and *S
       28       28                       STEP_FLG - flag indicating a step limit calculation is to
       29       29                                  be performed.
       30       30               OUTPUT: JIT updated with new limit
       31       31                       *S updated with new limit and cumulative values
       32       32               DESCRIPTION: A new CUR_MAX and CUMUL is established in the *S record
       33       33                       and a new limit established in the JIT specified limit.
       34       34                       CUR_MAX will reflect the new maximum resulting from a previously
       35       35                       established limit (CUR_MAX minus the amount used for subsequent
       36       36                       job steps) or (STEP_MAX minus amount used for subsequent
       37       37                       job step) if step limit was in effect.
       38       38                       This routine will be called at job step termination if step
       39       39                       limits were in effect or whenever a LIMIT command is executed.
       40       40        */
       41       41        /**********************************************************************/
       42       42        CPJ$ESTLIM: PROC(LIM,LIM_VAL,STEP_FLG);
       43       43                   %INCLUDE CP_6;
       44      124                   %INCLUDE XU_MACRO_C;
       45     3230                   %INCLUDE CP_DATA_R;
       46     5793                   %INCLUDE B$JIT;
       47     6083                   %INCLUDE CP_SUBS_C;
       48     7000                   %INCLUDE CP_MACROS_C;
       49     7752                   %INCLUDE CP_6_SUBS;
       50     8292                   %CP_LIMREC(NAME=LIM,STCLASS="");
       51     8330    1   DCL LIM_VAL  UBIN WORD;                          /*Limit being considered*/
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:3    
       52     8331    1   DCL STEP_FLG BIT(1) ALIGNED;                        /*Step flag*/
       53     8332    1   DCL TLOC SBIN WORD;                              /*Temp loc*/
       54     8333        /**/
       55     8334        /**/
       56     8335    2   EST_LIM5: DO CASE(LIM_VAL);
       57     8336                                                         /**/
       58     8337    2      CASE(LIM_LO);
       59     8338    2        IF (ADDR(STEP_FLG)=ADDR(NIL)) OR (STEP_FLG=%NO#)
       60     8339    2           THEN
       61     8340        /*
       62     8341          ****  Value reflects lo since job beginning or previous LIMIT command
       63     8342        */
       64     8343    2              TLOC=LIM.CUR_MAX.REMLO-B$JIT.REMLO;
       65     8344
       66     8345    2           ELSE
       67     8346        /*
       68     8347          ****  Value reflects lo for last job step only
       69     8348        */
       70     8349    3              DO;
       71     8350    3                 TLOC=LIM.STEP_MAX.REMLO-B$JIT.REMLO;
       72     8351    3                 LIM.STEP_MAX.REMLO=0;
       73     8352    3              END;
       74     8353    2        LIM.CUMUL.REMLO=LIM.CUMUL.REMLO+TLOC; /*Add amount for this step(s)*/
       75     8354    2        LIM.CUR_MAX.REMLO = LIM.CUR_MAX.REMLO - TLOC;
       76     8355    2        B$JIT.REMLO=LIM.CUR_MAX.REMLO;
       77     8356                                                         /**/
       78     8357    2      CASE(LIM_PO);
       79     8358    2        IF (ADDR(STEP_FLG)=ADDR(NIL)) OR (STEP_FLG=%NO#)
       80     8359    2           THEN
       81     8360    2              TLOC=LIM.CUR_MAX.REMCPO-B$JIT.REMCPO;
       82     8361
       83     8362    2           ELSE
       84     8363    3              DO;
       85     8364    3                 TLOC=LIM.STEP_MAX.REMCPO-B$JIT.REMCPO;
       86     8365    3                 LIM.STEP_MAX.REMCPO=0;
       87     8366    3              END;
       88     8367    2        LIM.CUMUL.REMCPO=LIM.CUMUL.REMCPO+TLOC; /*Add amount for this step(s)*/
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:4    
       89     8368    2        LIM.CUR_MAX.REMCPO = LIM.CUR_MAX.REMCPO - TLOC;
       90     8369    2        B$JIT.REMCPO=LIM.CUR_MAX.REMCPO;
       91     8370                                                         /**/
       92     8371    2      CASE(LIM_DO);
       93     8372    2        IF (ADDR(STEP_FLG)=ADDR(NIL)) OR (STEP_FLG=%NO#)
       94     8373    2           THEN
       95     8374    2              TLOC=LIM.CUR_MAX.REMDO-B$JIT.REMDO;
       96     8375
       97     8376    2           ELSE
       98     8377    3              DO;
       99     8378    3                 TLOC=LIM.STEP_MAX.REMDO-B$JIT.REMDO;
      100     8379    3                 LIM.STEP_MAX.REMDO=0;
      101     8380    3              END;
      102     8381    2        LIM.CUMUL.REMDO=LIM.CUMUL.REMDO+TLOC; /*Add amount for this step(s)*/
      103     8382    2        LIM.CUR_MAX.REMDO = LIM.CUR_MAX.REMDO - TLOC;
      104     8383    2        B$JIT.REMDO=LIM.CUR_MAX.REMDO;
      105     8384                                                         /**/
      106     8385    2      CASE(LIM_MEM);
      107     8386    2              IF (ADDR(STEP_FLG)~=ADDR(NIL)) AND (STEP_FLG=%YES#)
      108     8387    2                 THEN
      109     8388    2                    LIM.STEP_MAX.MAXCORE=0;
      110     8389    2              B$JIT.MAXCORE=LIM.CUR_MAX.MAXCORE; /* Set to prev. ESTAB. MAX. */
      111     8390                                                         /**/
      112     8391    2      CASE(LIM_TDIS);
      113     8392    2        IF (ADDR(STEP_FLG)~=ADDR(NIL)) AND (STEP_FLG=%YES#)
      114     8393    2           THEN
      115     8394    2              LIM.STEP_MAX.MAXTMPDP=0;
      116     8395    2        B$JIT.MAXTMPDP=LIM.CUR_MAX.MAXTMPDP + LIM.CUMUL.MAXTMPDP ;
      117     8396                                                         /**/
      118     8397    2      CASE(LIM_PDIS);
      119     8398    2        IF (ADDR(STEP_FLG)=ADDR(NIL)) OR (STEP_FLG=%NO#)
      120     8399    2           THEN
      121     8400    2              TLOC = LIM.CUR_MAX.PRDPRM - B$JIT.PRDPRM;
      122     8401
      123     8402    2           ELSE
      124     8403    3              DO;
      125     8404    3                 TLOC = LIM.STEP_MAX.PRDPRM - B$JIT.PRDPRM;
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:5    
      126     8405    3                 LIM.STEP_MAX.PRDPRM=0;
      127     8406    3              END;
      128     8407    2        LIM.CUMUL.PRDPRM = LIM.CUMUL.PRDPRM+TLOC; /*Add amount for this step(s)*/
      129     8408    2        LIM.CUR_MAX.PRDPRM = LIM.CUR_MAX.PRDPRM - TLOC;
      130     8409    2        B$JIT.PRDPRM = LIM.CUR_MAX.PRDPRM;
      131     8410                                                         /**/
      132     8411    2      CASE(LIM_FPOOLS);
      133     8412    2        IF ((ADDR(STEP_FLG)~=ADDR(NIL)) AND (STEP_FLG=%YES#))
      134     8413    2           THEN
      135     8414    2              LIM.STEP_MAX.FBUL=0;
      136     8415    2        B$JIT.FBUL=LIM.CUR_MAX.FBUL;       /*Set to prev. Estab. MAX.*/
      137     8416                                                         /**/
      138     8417    2      CASE(LIM_TIME);
      139     8418    2        IF (ADDR(STEP_FLG)=ADDR(NIL)) OR (STEP_FLG=%NO#)
      140     8419    2           THEN
      141     8420    2              TLOC=LIM.CUR_MAX.MRT-B$JIT.MRT;
      142     8421
      143     8422    2           ELSE
      144     8423    3              DO;
      145     8424    3                 TLOC=LIM.STEP_MAX.MRT-B$JIT.MRT;
      146     8425    3                 LIM.STEP_MAX.MRT=0;
      147     8426    3              END;
      148     8427    2        LIM.CUMUL.MRT=LIM.CUMUL.MRT+TLOC;   /*Add amount for this step(s)*/
      149     8428    2        LIM.CUR_MAX.MRT = LIM.CUR_MAX.MRT - TLOC;
      150     8429    2        B$JIT.MRT=LIM.CUR_MAX.MRT;
      151     8430    2      END EST_LIM5;
      152     8431    1     RETURN;
      153     8432    1   END CPJ$ESTLIM;
      154     8433                   %EOD;

PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:6    
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPJ$ESTLIM.

   Procedure CPJ$ESTLIM requires 198 words for executable code.
   Procedure CPJ$ESTLIM requires 8 words of local(AUTO) storage.

PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:7    

 Object Unit name= CPJ$ESTLIM                                 File name= CPJ$SUBR.:E05TOU
 UTS= JUL 29 '97 11:53:30.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none   198    306  CPJ$ESTLIM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        3  CPJ$ESTLIM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$JIT$                                B_VECTNIL
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:8    


        1        1        /*M* CPJ$ESTCLIM, CPJ$ESTCUM, CPJ$READ_S, CPJ$WRITE_S */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /*P*   NAME:   CPJ$SUBR
        9        9               PURPOSE: Selection of routined called for purposes of performing
       10       10                       a variety of functions.
       11       11               DESCRIPTION: See the function or routine preambles for the individual
       12       12                       subroutines.
       13       13        */
       14       14                   %EJECT;
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:9    
       15       15        /*********************************************************************/
       16       16        /*F*   NAME:   CPJ$ESTLIM
       17       17               PURPOSE: Establish new limit and cumulative value for a specified
       18       18                        service limit.
       19       19               DESCRIPTION: The amount used for a job step(s) is calculated
       20       20                        and the JIT and *S file updated to establish a new
       21       21                        limit for subsequent step(s).
       22       22        */
       23       23        /*D*   NAME:   CPJ$ESTLIM
       24       24               CALL:   CALL CPJ$ESTLIM(LIM,LIM_VAL,STEP_FLG);
       25       25               INTERFACE:
       26       26               INPUT:  LIM - limit record from *S
       27       27                       LIMIT_VAL - limit to be updated in JIT and *S
       28       28                       STEP_FLG - flag indicating a step limit calculation is to
       29       29                                  be performed.
       30       30               OUTPUT: JIT updated with new limit
       31       31                       *S updated with new limit and cumulative values
       32       32               DESCRIPTION: A new CUR_MAX and CUMUL is established in the *S record
       33       33                       and a new limit established in the JIT specified limit.
       34       34                       CUR_MAX will reflect the new maximum resulting from a previously
       35       35                       established limit (CUR_MAX minus the amount used for subsequent
       36       36                       job steps) or (STEP_MAX minus amount used for subsequent
       37       37                       job step) if step limit was in effect.
       38       38                       This routine will be called at job step termination if step
       39       39                       limits were in effect or whenever a LIMIT command is executed.
       40       40        */
       41       41        /**********************************************************************/
       42       42        CPJ$ESTLIM: PROC(LIM,LIM_VAL,STEP_FLG);

     42  1 000000   000000 700200 xent  CPJ$ESTLIM   TSX0  ! X66_AUTO_3
         1 000001   000010 000003                    ZERO    8,3

       43       43                   %INCLUDE CP_6;
       44      124                   %INCLUDE XU_MACRO_C;
       45     3230                   %INCLUDE CP_DATA_R;
       46     5793                   %INCLUDE B$JIT;
       47     6083                   %INCLUDE CP_SUBS_C;
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:10   
       48     7000                   %INCLUDE CP_MACROS_C;
       49     7752                   %INCLUDE CP_6_SUBS;
       50     8292                   %CP_LIMREC(NAME=LIM,STCLASS="");
       51     8330    1   DCL LIM_VAL  UBIN WORD;                          /*Limit being considered*/
       52     8331    1   DCL STEP_FLG BIT(1) ALIGNED;                        /*Step flag*/
       53     8332    1   DCL TLOC SBIN WORD;                              /*Temp loc*/
       54     8333        /**/
       55     8334        /**/
       56     8335    2   EST_LIM5: DO CASE(LIM_VAL);

   8335  1 000002   200004 470500       EST_LIM5     LDP0    @LIM_VAL,,AUTO
         1 000003   000000 235100                    LDA     0,,PR0
         1 000004   000016 115007                    CMPA    14,DL
         1 000005   000007 602005 1                  TNC     EST_LIM5+5,AL
         1 000006   000305 710000 1                  TRA     s:8431
         1 000007   000305 710000 1                  TRA     s:8431
         1 000010   000305 710000 1                  TRA     s:8431
         1 000011   000113 710000 1                  TRA     s:8372
         1 000012   000235 710000 1                  TRA     s:8412
         1 000013   000305 710000 1                  TRA     s:8431
         1 000014   000025 710000 1                  TRA     s:8338
         1 000015   000146 710000 1                  TRA     s:8386
         1 000016   000305 710000 1                  TRA     s:8431
         1 000017   000202 710000 1                  TRA     s:8398
         1 000020   000060 710000 1                  TRA     s:8358
         1 000021   000305 710000 1                  TRA     s:8431
         1 000022   000305 710000 1                  TRA     s:8431
         1 000023   000164 710000 1                  TRA     s:8392
         1 000024   000253 710000 1                  TRA     s:8418

       57     8336                                                         /**/
       58     8337    2      CASE(LIM_LO);

       59     8338    2        IF (ADDR(STEP_FLG)=ADDR(NIL)) OR (STEP_FLG=%NO#)

   8338  1 000025   200005 236100                    LDQ     @STEP_FLG,,AUTO
         1 000026   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:11   
         1 000027   000033 600000 1                  TZE     s:8343
         1 000030   200005 471500                    LDP1    @STEP_FLG,,AUTO
         1 000031   100000 234100                    SZN     0,,PR1
         1 000032   000041 604000 1                  TMI     s:8350

       60     8339    2           THEN
       61     8340        /*
       62     8341          ****  Value reflects lo since job beginning or previous LIMIT command
       63     8342        */
       64     8343    2              TLOC=LIM.CUR_MAX.REMLO-B$JIT.REMLO;

   8343  1 000033   000000 471400 xsym               LDP1    B$JIT$
         1 000034   200003 473500                    LDP3    @LIM,,AUTO
         1 000035   300010 236100                    LDQ     8,,PR3
         1 000036   100361 136100                    SBLQ    241,,PR1
         1 000037   200006 756100                    STQ     TLOC,,AUTO
         1 000040   000047 710000 1                  TRA     s:8353

       65     8344
       66     8345    2           ELSE
       67     8346        /*
       68     8347          ****  Value reflects lo for last job step only
       69     8348        */
       70     8349    3              DO;

       71     8350    3                 TLOC=LIM.STEP_MAX.REMLO-B$JIT.REMLO;

   8350  1 000041   000000 473400 xsym               LDP3    B$JIT$
         1 000042   200003 474500                    LDP4    @LIM,,AUTO
         1 000043   400017 236100                    LDQ     15,,PR4
         1 000044   300361 136100                    SBLQ    241,,PR3
         1 000045   200006 756100                    STQ     TLOC,,AUTO

       72     8351    3                 LIM.STEP_MAX.REMLO=0;

   8351  1 000046   400017 450100                    STZ     15,,PR4

PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:12   
       73     8352    3              END;

       74     8353    2        LIM.CUMUL.REMLO=LIM.CUMUL.REMLO+TLOC; /*Add amount for this step(s)*/

   8353  1 000047   200003 471500                    LDP1    @LIM,,AUTO
         1 000050   100025 036100                    ADLQ    21,,PR1
         1 000051   100025 756100                    STQ     21,,PR1

       75     8354    2        LIM.CUR_MAX.REMLO = LIM.CUR_MAX.REMLO - TLOC;

   8354  1 000052   100010 236100                    LDQ     8,,PR1
         1 000053   200006 136100                    SBLQ    TLOC,,AUTO
         1 000054   100010 756100                    STQ     8,,PR1

       76     8355    2        B$JIT.REMLO=LIM.CUR_MAX.REMLO;

   8355  1 000055   000000 473400 xsym               LDP3    B$JIT$
         1 000056   300361 756100                    STQ     241,,PR3
         1 000057   000305 710000 1                  TRA     s:8431

       77     8356                                                         /**/
       78     8357    2      CASE(LIM_PO);

       79     8358    2        IF (ADDR(STEP_FLG)=ADDR(NIL)) OR (STEP_FLG=%NO#)

   8358  1 000060   200005 236100                    LDQ     @STEP_FLG,,AUTO
         1 000061   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000062   000066 600000 1                  TZE     s:8360
         1 000063   200005 471500                    LDP1    @STEP_FLG,,AUTO
         1 000064   100000 234100                    SZN     0,,PR1
         1 000065   000074 604000 1                  TMI     s:8364

       80     8359    2           THEN
       81     8360    2              TLOC=LIM.CUR_MAX.REMCPO-B$JIT.REMCPO;

   8360  1 000066   000000 471400 xsym               LDP1    B$JIT$
         1 000067   200003 473500                    LDP3    @LIM,,AUTO
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:13   
         1 000070   300011 236100                    LDQ     9,,PR3
         1 000071   100360 136100                    SBLQ    240,,PR1
         1 000072   200006 756100                    STQ     TLOC,,AUTO
         1 000073   000102 710000 1                  TRA     s:8367

       82     8361
       83     8362    2           ELSE
       84     8363    3              DO;

       85     8364    3                 TLOC=LIM.STEP_MAX.REMCPO-B$JIT.REMCPO;

   8364  1 000074   000000 473400 xsym               LDP3    B$JIT$
         1 000075   200003 474500                    LDP4    @LIM,,AUTO
         1 000076   400020 236100                    LDQ     16,,PR4
         1 000077   300360 136100                    SBLQ    240,,PR3
         1 000100   200006 756100                    STQ     TLOC,,AUTO

       86     8365    3                 LIM.STEP_MAX.REMCPO=0;

   8365  1 000101   400020 450100                    STZ     16,,PR4

       87     8366    3              END;

       88     8367    2        LIM.CUMUL.REMCPO=LIM.CUMUL.REMCPO+TLOC; /*Add amount for this step(s)*/

   8367  1 000102   200003 471500                    LDP1    @LIM,,AUTO
         1 000103   100026 036100                    ADLQ    22,,PR1
         1 000104   100026 756100                    STQ     22,,PR1

       89     8368    2        LIM.CUR_MAX.REMCPO = LIM.CUR_MAX.REMCPO - TLOC;

   8368  1 000105   100011 236100                    LDQ     9,,PR1
         1 000106   200006 136100                    SBLQ    TLOC,,AUTO
         1 000107   100011 756100                    STQ     9,,PR1

       90     8369    2        B$JIT.REMCPO=LIM.CUR_MAX.REMCPO;

PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:14   
   8369  1 000110   000000 473400 xsym               LDP3    B$JIT$
         1 000111   300360 756100                    STQ     240,,PR3
         1 000112   000305 710000 1                  TRA     s:8431

       91     8370                                                         /**/
       92     8371    2      CASE(LIM_DO);

       93     8372    2        IF (ADDR(STEP_FLG)=ADDR(NIL)) OR (STEP_FLG=%NO#)

   8372  1 000113   200005 236100                    LDQ     @STEP_FLG,,AUTO
         1 000114   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000115   000121 600000 1                  TZE     s:8374
         1 000116   200005 471500                    LDP1    @STEP_FLG,,AUTO
         1 000117   100000 234100                    SZN     0,,PR1
         1 000120   000127 604000 1                  TMI     s:8378

       94     8373    2           THEN
       95     8374    2              TLOC=LIM.CUR_MAX.REMDO-B$JIT.REMDO;

   8374  1 000121   000000 471400 xsym               LDP1    B$JIT$
         1 000122   200003 473500                    LDP3    @LIM,,AUTO
         1 000123   300012 236100                    LDQ     10,,PR3
         1 000124   100362 136100                    SBLQ    242,,PR1
         1 000125   200006 756100                    STQ     TLOC,,AUTO
         1 000126   000135 710000 1                  TRA     s:8381

       96     8375
       97     8376    2           ELSE
       98     8377    3              DO;

       99     8378    3                 TLOC=LIM.STEP_MAX.REMDO-B$JIT.REMDO;

   8378  1 000127   000000 473400 xsym               LDP3    B$JIT$
         1 000130   200003 474500                    LDP4    @LIM,,AUTO
         1 000131   400021 236100                    LDQ     17,,PR4
         1 000132   300362 136100                    SBLQ    242,,PR3
         1 000133   200006 756100                    STQ     TLOC,,AUTO
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:15   

      100     8379    3                 LIM.STEP_MAX.REMDO=0;

   8379  1 000134   400021 450100                    STZ     17,,PR4

      101     8380    3              END;

      102     8381    2        LIM.CUMUL.REMDO=LIM.CUMUL.REMDO+TLOC; /*Add amount for this step(s)*/

   8381  1 000135   200003 471500                    LDP1    @LIM,,AUTO
         1 000136   100027 036100                    ADLQ    23,,PR1
         1 000137   100027 756100                    STQ     23,,PR1

      103     8382    2        LIM.CUR_MAX.REMDO = LIM.CUR_MAX.REMDO - TLOC;

   8382  1 000140   100012 236100                    LDQ     10,,PR1
         1 000141   200006 136100                    SBLQ    TLOC,,AUTO
         1 000142   100012 756100                    STQ     10,,PR1

      104     8383    2        B$JIT.REMDO=LIM.CUR_MAX.REMDO;

   8383  1 000143   000000 473400 xsym               LDP3    B$JIT$
         1 000144   300362 756100                    STQ     242,,PR3
         1 000145   000305 710000 1                  TRA     s:8431

      105     8384                                                         /**/
      106     8385    2      CASE(LIM_MEM);

      107     8386    2              IF (ADDR(STEP_FLG)~=ADDR(NIL)) AND (STEP_FLG=%YES#)

   8386  1 000146   200005 236100                    LDQ     @STEP_FLG,,AUTO
         1 000147   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000150   000157 600000 1                  TZE     s:8389
         1 000151   200005 471500                    LDP1    @STEP_FLG,,AUTO
         1 000152   100000 234100                    SZN     0,,PR1
         1 000153   000157 605000 1                  TPL     s:8389

PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:16   
      108     8387    2                 THEN
      109     8388    2                    LIM.STEP_MAX.MAXCORE=0;

   8388  1 000154   000000 220003                    LDX0    0,DU
         1 000155   200003 473500                    LDP3    @LIM,,AUTO
         1 000156   300016 740100                    STX0    14,,PR3

      110     8389    2              B$JIT.MAXCORE=LIM.CUR_MAX.MAXCORE; /* Set to prev. ESTAB. MAX. */

   8389  1 000157   200003 471500                    LDP1    @LIM,,AUTO
         1 000160   100007 220100                    LDX0    7,,PR1
         1 000161   000000 473400 xsym               LDP3    B$JIT$
         1 000162   300210 740100                    STX0    136,,PR3
         1 000163   000305 710000 1                  TRA     s:8431

      111     8390                                                         /**/
      112     8391    2      CASE(LIM_TDIS);

      113     8392    2        IF (ADDR(STEP_FLG)~=ADDR(NIL)) AND (STEP_FLG=%YES#)

   8392  1 000164   200005 236100                    LDQ     @STEP_FLG,,AUTO
         1 000165   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000166   000174 600000 1                  TZE     s:8395
         1 000167   200005 471500                    LDP1    @STEP_FLG,,AUTO
         1 000170   100000 234100                    SZN     0,,PR1
         1 000171   000174 605000 1                  TPL     s:8395

      114     8393    2           THEN
      115     8394    2              LIM.STEP_MAX.MAXTMPDP=0;

   8394  1 000172   200003 473500                    LDP3    @LIM,,AUTO
         1 000173   300023 450100                    STZ     19,,PR3

      116     8395    2        B$JIT.MAXTMPDP=LIM.CUR_MAX.MAXTMPDP + LIM.CUMUL.MAXTMPDP ;

   8395  1 000174   200003 471500                    LDP1    @LIM,,AUTO
         1 000175   100014 236100                    LDQ     12,,PR1
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:17   
         1 000176   100030 036100                    ADLQ    24,,PR1
         1 000177   000000 473400 xsym               LDP3    B$JIT$
         1 000200   300241 756100                    STQ     161,,PR3
         1 000201   000305 710000 1                  TRA     s:8431

      117     8396                                                         /**/
      118     8397    2      CASE(LIM_PDIS);

      119     8398    2        IF (ADDR(STEP_FLG)=ADDR(NIL)) OR (STEP_FLG=%NO#)

   8398  1 000202   200005 236100                    LDQ     @STEP_FLG,,AUTO
         1 000203   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000204   000210 600000 1                  TZE     s:8400
         1 000205   200005 471500                    LDP1    @STEP_FLG,,AUTO
         1 000206   100000 234100                    SZN     0,,PR1
         1 000207   000216 604000 1                  TMI     s:8404

      120     8399    2           THEN
      121     8400    2              TLOC = LIM.CUR_MAX.PRDPRM - B$JIT.PRDPRM;

   8400  1 000210   000000 471400 xsym               LDP1    B$JIT$
         1 000211   200003 473500                    LDP3    @LIM,,AUTO
         1 000212   300013 236100                    LDQ     11,,PR3
         1 000213   100242 136100                    SBLQ    162,,PR1
         1 000214   200006 756100                    STQ     TLOC,,AUTO
         1 000215   000224 710000 1                  TRA     s:8407

      122     8401
      123     8402    2           ELSE
      124     8403    3              DO;

      125     8404    3                 TLOC = LIM.STEP_MAX.PRDPRM - B$JIT.PRDPRM;

   8404  1 000216   000000 473400 xsym               LDP3    B$JIT$
         1 000217   200003 474500                    LDP4    @LIM,,AUTO
         1 000220   400022 236100                    LDQ     18,,PR4
         1 000221   300242 136100                    SBLQ    162,,PR3
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:18   
         1 000222   200006 756100                    STQ     TLOC,,AUTO

      126     8405    3                 LIM.STEP_MAX.PRDPRM=0;

   8405  1 000223   400022 450100                    STZ     18,,PR4

      127     8406    3              END;

      128     8407    2        LIM.CUMUL.PRDPRM = LIM.CUMUL.PRDPRM+TLOC; /*Add amount for this step(s)*/

   8407  1 000224   200003 471500                    LDP1    @LIM,,AUTO
         1 000225   100031 036100                    ADLQ    25,,PR1
         1 000226   100031 756100                    STQ     25,,PR1

      129     8408    2        LIM.CUR_MAX.PRDPRM = LIM.CUR_MAX.PRDPRM - TLOC;

   8408  1 000227   100013 236100                    LDQ     11,,PR1
         1 000230   200006 136100                    SBLQ    TLOC,,AUTO
         1 000231   100013 756100                    STQ     11,,PR1

      130     8409    2        B$JIT.PRDPRM = LIM.CUR_MAX.PRDPRM;

   8409  1 000232   000000 473400 xsym               LDP3    B$JIT$
         1 000233   300242 756100                    STQ     162,,PR3
         1 000234   000305 710000 1                  TRA     s:8431

      131     8410                                                         /**/
      132     8411    2      CASE(LIM_FPOOLS);

      133     8412    2        IF ((ADDR(STEP_FLG)~=ADDR(NIL)) AND (STEP_FLG=%YES#))

   8412  1 000235   200005 236100                    LDQ     @STEP_FLG,,AUTO
         1 000236   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000237   000246 600000 1                  TZE     s:8415
         1 000240   200005 471500                    LDP1    @STEP_FLG,,AUTO
         1 000241   100000 234100                    SZN     0,,PR1
         1 000242   000246 605000 1                  TPL     s:8415
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:19   

      134     8413    2           THEN
      135     8414    2              LIM.STEP_MAX.FBUL=0;

   8414  1 000243   000000 220003                    LDX0    0,DU
         1 000244   200003 473500                    LDP3    @LIM,,AUTO
         1 000245   300016 440100                    SXL0    14,,PR3

      136     8415    2        B$JIT.FBUL=LIM.CUR_MAX.FBUL;       /*Set to prev. Estab. MAX.*/

   8415  1 000246   200003 471500                    LDP1    @LIM,,AUTO
         1 000247   100007 720100                    LXL0    7,,PR1
         1 000250   000000 473400 xsym               LDP3    B$JIT$
         1 000251   300205 440100                    SXL0    133,,PR3
         1 000252   000305 710000 1                  TRA     s:8431

      137     8416                                                         /**/
      138     8417    2      CASE(LIM_TIME);

      139     8418    2        IF (ADDR(STEP_FLG)=ADDR(NIL)) OR (STEP_FLG=%NO#)

   8418  1 000253   200005 236100                    LDQ     @STEP_FLG,,AUTO
         1 000254   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000255   000261 600000 1                  TZE     s:8420
         1 000256   200005 471500                    LDP1    @STEP_FLG,,AUTO
         1 000257   100000 234100                    SZN     0,,PR1
         1 000260   000267 604000 1                  TMI     s:8424

      140     8419    2           THEN
      141     8420    2              TLOC=LIM.CUR_MAX.MRT-B$JIT.MRT;

   8420  1 000261   000000 471400 xsym               LDP1    B$JIT$
         1 000262   200003 473500                    LDP3    @LIM,,AUTO
         1 000263   300015 236100                    LDQ     13,,PR3
         1 000264   100276 136100                    SBLQ    190,,PR1
         1 000265   200006 756100                    STQ     TLOC,,AUTO
         1 000266   000275 710000 1                  TRA     s:8427
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:20   

      142     8421
      143     8422    2           ELSE
      144     8423    3              DO;

      145     8424    3                 TLOC=LIM.STEP_MAX.MRT-B$JIT.MRT;

   8424  1 000267   000000 473400 xsym               LDP3    B$JIT$
         1 000270   200003 474500                    LDP4    @LIM,,AUTO
         1 000271   400024 236100                    LDQ     20,,PR4
         1 000272   300276 136100                    SBLQ    190,,PR3
         1 000273   200006 756100                    STQ     TLOC,,AUTO

      146     8425    3                 LIM.STEP_MAX.MRT=0;

   8425  1 000274   400024 450100                    STZ     20,,PR4

      147     8426    3              END;

      148     8427    2        LIM.CUMUL.MRT=LIM.CUMUL.MRT+TLOC;   /*Add amount for this step(s)*/

   8427  1 000275   200003 471500                    LDP1    @LIM,,AUTO
         1 000276   100032 036100                    ADLQ    26,,PR1
         1 000277   100032 756100                    STQ     26,,PR1

      149     8428    2        LIM.CUR_MAX.MRT = LIM.CUR_MAX.MRT - TLOC;

   8428  1 000300   100015 236100                    LDQ     13,,PR1
         1 000301   200006 136100                    SBLQ    TLOC,,AUTO
         1 000302   100015 756100                    STQ     13,,PR1

      150     8429    2        B$JIT.MRT=LIM.CUR_MAX.MRT;

   8429  1 000303   000000 473400 xsym               LDP3    B$JIT$
         1 000304   300276 756100                    STQ     190,,PR3

      151     8430    2      END EST_LIM5;
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:21   

      152     8431    1     RETURN;

   8431  1 000305   000000 702200 xent               TSX2  ! X66_ARET
      153     8432    1   END CPJ$ESTLIM;
      154     8433                   %EOD;

PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:22   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPJ$ESTLIM.
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:23   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @LIM                       4-0-0/w PTR         r     1 @LIM_VAL
     5-0-0/w PTR         r     1 @STEP_FLG                 *0-0-0/w STRC(972)   r     1 LIM
    *0-0-0/w UBIN        r     1 LIM_VAL                   *0-0-0/w BIT         r     1 STEP_FLG
     6-0-0/w SBIN        r     1 TLOC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT


   Procedure CPJ$ESTLIM requires 198 words for executable code.
   Procedure CPJ$ESTLIM requires 8 words of local(AUTO) storage.
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:24   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:25   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      5901**DCL      5901--REDEF
B$JIT.ERR.MID
      5808**DCL      5808--REDEF
B$JIT.FBUL
      5967**DCL      8415<<ASSIGN
B$JIT.JRESPEAK
      5969**DCL      5970--REDEF
B$JIT.MAXCORE
      5968**DCL      8389<<ASSIGN
B$JIT.MAXTMPDP
      5976**DCL      8395<<ASSIGN
B$JIT.MRT
      5981**DCL      8420>>ASSIGN   8424>>ASSIGN   8429<<ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
      6078**DCL      6078--REDEF    6079--REDEF
B$JIT.PNR
      5982**DCL      5982--REDEF
B$JIT.PRDPRM
      5976**DCL      8400>>ASSIGN   8404>>ASSIGN   8409<<ASSIGN
B$JIT.REMCPO
      6080**DCL      8360>>ASSIGN   8364>>ASSIGN   8369<<ASSIGN
B$JIT.REMDO
      6080**DCL      8374>>ASSIGN   8378>>ASSIGN   8383<<ASSIGN
B$JIT.REMLO
      6080**DCL      8343>>ASSIGN   8350>>ASSIGN   8355<<ASSIGN
B$JIT.TSLINE
      6076**DCL      6077--REDEF
B$JIT$
      5726**DCL      5802--IMP-PTR  8343>>ASSIGN   8350>>ASSIGN   8355>>ASSIGN   8360>>ASSIGN   8364>>ASSIGN
      8369>>ASSIGN   8374>>ASSIGN   8378>>ASSIGN   8383>>ASSIGN   8389>>ASSIGN   8395>>ASSIGN   8400>>ASSIGN
      8404>>ASSIGN   8409>>ASSIGN   8415>>ASSIGN   8420>>ASSIGN   8424>>ASSIGN   8429>>ASSIGN
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:26   
CAMR_REC.ACSVEH_
      4765**DCL      4766--REDEF
CAMR_REC.ALTKEYS_
      4771**DCL      4772--REDEF    4772--REDEF
CAMR_REC.HDR_
      4770**DCL      4771--REDEF
CAMR_REC.TAB_
      4769**DCL      4770--REDEF
CAMR_REC.UHL_
      4763**DCL      4764--REDEF    4764--REDEF
CAMR_REC.V.FSN#
      4803**DCL      4803--REDEF    4803--REDEF
CAMR_REC.WSN_
      4769**DCL      4769--REDEF
CFPT_CLOSE.SN_
      3607**DCL      3607--REDEF
CFPT_CLOSE.UTL_
      3608**DCL      3608--REDEF
CFPT_CLOSE.V.EXPIRE#
      3622**DCL      3622--REDEF
CFPT_CLOSE.V.TYPE#
      3620**DCL      3620--REDEF
CFPT_CLOSE.V.XTNSIZE#
      3617**DCL      3617--REDEF    3619--REDEF
CFPT_OPEN.ACSVEH_
      3542**DCL      3543--REDEF
CFPT_OPEN.ALTKEYS_
      3548**DCL      3549--REDEF    3549--REDEF
CFPT_OPEN.HDR_
      3547**DCL      3548--REDEF
CFPT_OPEN.TAB_
      3546**DCL      3547--REDEF
CFPT_OPEN.UHL_
      3540**DCL      3541--REDEF    3541--REDEF
CFPT_OPEN.V.FSN#
      3580**DCL      3580--REDEF    3580--REDEF
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:27   
CFPT_OPEN.WSN_
      3546**DCL      3546--REDEF
CFPT_READ.STATION_
      3646**DCL      3647--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      3658**DCL      3658--REDEF
CFPT_READ.V.INDX#
      3656**DCL      3656--REDEF
CFPT_READUC.STATION_
      4016**DCL      4017--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      4028**DCL      4028--REDEF
CFPT_READUC.V.INDX#
      4026**DCL      4026--REDEF
CFPT_TRTN.V.IR#
      4252**DCL      4253--REDEF
CFPT_WRITE.STATION_
      3684**DCL      3684--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      3691**DCL      3691--REDEF
CFPT_WRITEUC.STATION_
      3984**DCL      3984--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      3991**DCL      3991--REDEF
CFPT_XXX.V.STEPCC#
      4964**DCL      4964--REDEF
CGETCMD.OUT$
      4985**DCL      4991--REDEF
CVLP_TRMCTL.BREAKCOUNT
      4576**DCL      4577--REDEF
CVLP_WINDOW.FWINDOW#
      4672**DCL      4672--REDEF    4673--REDEF
LIM
      8293**DCL        42--PROC
LIM.CUMUL.MAXTMPDP
      8326**DCL      8395>>ASSIGN
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:28   
LIM.CUMUL.MRT
      8328**DCL      8427<<ASSIGN   8427>>ASSIGN
LIM.CUMUL.PRDPRM
      8327**DCL      8407<<ASSIGN   8407>>ASSIGN
LIM.CUMUL.REMCPO
      8324**DCL      8367<<ASSIGN   8367>>ASSIGN
LIM.CUMUL.REMDO
      8325**DCL      8381<<ASSIGN   8381>>ASSIGN
LIM.CUMUL.REMLO
      8323**DCL      8353<<ASSIGN   8353>>ASSIGN
LIM.CUR_MAX.FBUL
      8306**DCL      8415>>ASSIGN
LIM.CUR_MAX.MAXCORE
      8305**DCL      8389>>ASSIGN
LIM.CUR_MAX.MAXTMPDP
      8311**DCL      8395>>ASSIGN
LIM.CUR_MAX.MRT
      8312**DCL      8420>>ASSIGN   8428<<ASSIGN   8428>>ASSIGN   8429>>ASSIGN
LIM.CUR_MAX.PRDPRM
      8310**DCL      8400>>ASSIGN   8408<<ASSIGN   8408>>ASSIGN   8409>>ASSIGN
LIM.CUR_MAX.REMCPO
      8308**DCL      8360>>ASSIGN   8368<<ASSIGN   8368>>ASSIGN   8369>>ASSIGN
LIM.CUR_MAX.REMDO
      8309**DCL      8374>>ASSIGN   8382<<ASSIGN   8382>>ASSIGN   8383>>ASSIGN
LIM.CUR_MAX.REMLO
      8307**DCL      8343>>ASSIGN   8354<<ASSIGN   8354>>ASSIGN   8355>>ASSIGN
LIM.STEP_MAX.FBUL
      8315**DCL      8414<<ASSIGN
LIM.STEP_MAX.MAXCORE
      8314**DCL      8388<<ASSIGN
LIM.STEP_MAX.MAXTMPDP
      8320**DCL      8394<<ASSIGN
LIM.STEP_MAX.MRT
      8321**DCL      8424>>ASSIGN   8425<<ASSIGN
LIM.STEP_MAX.PRDPRM
      8319**DCL      8404>>ASSIGN   8405<<ASSIGN
PL6.E3A0      #001=CPJ$ESTLIM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:29   
LIM.STEP_MAX.REMCPO
      8317**DCL      8364>>ASSIGN   8365<<ASSIGN
LIM.STEP_MAX.REMDO
      8318**DCL      8378>>ASSIGN   8379<<ASSIGN
LIM.STEP_MAX.REMLO
      8316**DCL      8350>>ASSIGN   8351<<ASSIGN
LIM_VAL
      8330**DCL        42--PROC     8335>>DOCASE
STEP_FLG
      8331**DCL        42--PROC     8338--IF       8338>>IF       8358--IF       8358>>IF       8372--IF
      8372>>IF       8386--IF       8386>>IF       8392--IF       8392>>IF       8398--IF       8398>>IF
      8412--IF       8412>>IF       8418--IF       8418>>IF
TLOC
      8332**DCL      8343<<ASSIGN   8350<<ASSIGN   8353>>ASSIGN   8354>>ASSIGN   8360<<ASSIGN   8364<<ASSIGN
      8367>>ASSIGN   8368>>ASSIGN   8374<<ASSIGN   8378<<ASSIGN   8381>>ASSIGN   8382>>ASSIGN   8400<<ASSIGN
      8404<<ASSIGN   8407>>ASSIGN   8408>>ASSIGN   8420<<ASSIGN   8424<<ASSIGN   8427>>ASSIGN   8428>>ASSIGN

PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:30   
      155        1        /*T***********************************************************/
      156        2        /*T*                                                         */
      157        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      158        4        /*T*                                                         */
      159        5        /*T***********************************************************/
      160        6        /**********************************************************************/
      161        7        /*F*   NAME:   CPJ$ESTCUM
      162        8               PURPOSE: Establish cumulative values in the JIT and *S for
      163        9                       job or job step for all service limits.
      164       10               DESCEIPTION: The amount of limits used for those specified
      165       11                       on a previous STEP LIMIT command are calculated and stored in the
      166       12                       JIT and the *S file. Otherwise limits for the whole job are
      167       13                       calculated and the JIT and *S updated.
      168       14        */
      169       15        /*D*   NAME:   CPJ$ESTCUM
      170       16               CALL:   CALL CPJ$ESTCUM(STEP_FLG,STEP_LMTX)
      171       17               INTERFACE: CPJ$READ_S,CPJ$ESTLIM,CPJ$WRITE,CPC$OPEN_S,CPC$WRITEMSGE
      172       18               INPUT:  STEP_FLG - flag indicating job step calculations are to be
      173       19                                  performed
      174       20               OUTPUT: JIT updated with new limits
      175       21                       *S updated with new limits and cumulative values
      176       22                       STEP_LMTX - flag indicating a step limit was exceeded and
      177       23                       normally checked after   step aborts
      178       24               DESCRIPTION: If the step flag is set, limits used for the previous
      179       25                       job step are calculated and added to the cumulative
      180       26                       values in  the *S.  The new maximums ,for the step limits
      181       27                       only, revert to their previous maximums minus amount used.
      182       28                       Otherwise, limits used for the total job for all limits are
      183       29                       established in *S and new maximums established in the JIT
      184       30                       and *S.
      185       31        */
      186       32        /**********************************************************************/
      187       33        CPJ$ESTCUM: PROC(STEP_FLG,STEP_LMTX) ALTRET;
      188       34        /**/
      189       35        /**/
      190       36                   %INCLUDE CP_6;
      191      117                   %INCLUDE B$JIT;
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:31   
      192      407                   %INCLUDE CP_MACROS_C;
      193     1159                   %INCLUDE CP_SUBS_C;
      194     2076                   %INCLUDE CP_6_SUBS;
      195     2616                   %INCLUDE B_MACROS_C;
      196     2727                   %INCLUDE XU_MACRO_C;
      197     5833                   %INCLUDE CP_DATA_R;
      198     8396                   %INCLUDE CP_PERR_C;
      199     8734               /***** Ptr variable declarations *****/
      200     8735    1   DCL STEP_FLG BIT(1) ALIGNED;                        /*Step limit flag*/
      201     8736    1   DCL STEP_LMTX BIT(1) ALIGNED;                       /*Step limit excd. Flag*/
      202     8737    1   DCL DCB# UBIN WORD;                              /*Dcb number*/
      203     8738              /***** External procedure (entry) declarations *****/
      204     8739    1   DCL CPC$WRITEMSGE ENTRY(6);
      205     8740    1   DCL CPJ$ESTLIM ENTRY(3);                         /*Establish limits*/
      206     8741    1   DCL CPE$RZEROS ENTRY(3);
      207     8742    1   DCL CPJ$READ_S ENTRY(3) ALTRET;                  /*Read *S*/
      208     8743    1   DCL CPJ$WRITE_S ENTRY(3) ALTRET;                 /*Write *S*/
      209     8744    1   DCL CPC$OPEN_S ENTRY(1) ALTRET;                  /*Open *S */
      210     8745             /***** Fpts *****/
      211     8746        %SEG$2(NAME=SEG$2);
      212     8806        %ERR_CODE (NAME=E_CANTOPN,MID#=CPJ$IBEXMID,CODE#=E$CANTOPN,STCLASS=CONSTANT);
      213     8826        %CP_LIMREC(NAME=CP_LIMREC,STCLASS=AUTO);
      214     8864        %FPT_OPEN(FPTN=FPT$OPEN,STCLASS=BASED);
      215     8973        %FPT_CLOSE(FPTN=FPT$CLOSE,STCLASS=BASED);
      216     9015             /***** Based structures *****/
      217     9016        %B$TCB (STCLASS="BASED(B$TCB$)");
      218     9019        %B$EXCFR;
      219     9037          %EJECT;
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:32   
      220     9038        /*
      221     9039          **** Read in limit record from *S
      222     9040        */
      223     9041    1     DCB#=M$IBEX1_NUM;
      224     9042    1     CALL CPC$OPEN_S(DCB#) ALTRET(ESTCUM55);
      225     9043    1     CALL CPJ$READ_S(DCB#,VECTOR(K_LIMIT),VECTOR(CP_LIMREC))
      226     9044    1          ALTRET(ESTCUM80);
      227     9045        /*
      228     9046          ****  Determine if we're establishing cumulative values for a job step or job
      229     9047        */
      230     9048    1     IF (ADDR(STEP_FLG)~=ADDR(NIL) AND (STEP_FLG=%YES#))
      231     9049    1        THEN
      232     9050    2           DO;
      233     9051    2              IF ADDR(STEP_LMTX)~=ADDR(NIL)
      234     9052    2                 THEN /*Init. Flag*/
      235     9053    2                    STEP_LMTX=%NO#;
      236     9054    2              CALL ESTCUM_STEP;               /*Job step cumul. CALCS.*/
      237     9055        /*
      238     9056          ****  Reset step limit flag in the jit
      239     9057        */
      240     9058    2              B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_STEPLMT#;
      241     9059    2           END;
      242     9060
      243     9061    1        ELSE
      244     9062        /*
      245     9063          ****  Perform job cumulative calculations
      246     9064        */
      247     9065    2           DO;
      248     9066        /*
      249     9067          ****           First perform job step cumul. Calcs. In case step
      250     9068          ****           Limits were in effect.
      251     9069        */
      252     9070    2              CALL ESTCUM_STEP;
      253     9071        /*
      254     9072          ****           Perform cumul. Calcs. For all limits
      255     9073        */
      256     9074    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_MEM);
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:33   
      257     9075    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_TIME);
      258     9076    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_LO);
      259     9077    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_PO);
      260     9078    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_DO);
      261     9079    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_TDIS);
      262     9080    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_PDIS);
      263     9081    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_FPOOLS);
      264     9082    2           END;
      265     9083    1     CALL CPJ$WRITE_S(DCB#,VECTOR(K_LIMIT),VECTOR(CP_LIMREC))
      266     9084    1          ALTRET(ESTCUM80);
      267     9085    1     SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DCB#=DCB#;
      268     9086    1     SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DISP#=%SAVE#;
      269     9087    1     CALL M$CLOSE(SEG$2.FPT_CLOSE$->FPT$CLOSE) ALTRET(ESTCUM65);
      270     9088    1     RETURN;
      271     9089    1   ESTCUM55:;
      272     9090        /*E*       ERROR: CPJ-E$CANTOPN-E
      273     9091                   DESCRIPTION: Unable to open %FN file
      274     9092                   DESCRIPTION: IBEX was unable to open the specified file.
      275     9093        */
      276     9094    1     CALL CPC$WRITEMSGE(E_CANTOPN,DCB#,,,,%YES#);
      277     9095    1     GOTO ESTCUM80;
      278     9096    1   ESTCUM65:;
      279     9097    1     B$JIT.USRERR = B$TCB.ALT$ -> B$EXCFR.ERR;
      280     9098    1     ALTRETURN;
      281     9099    1   ESTCUM80:;
      282     9100    1     SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DCB#=DCB#;
      283     9101    1     SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DISP#=%SAVE#;
      284     9102    1     CALL M$CLOSE(SEG$2.FPT_CLOSE$->FPT$CLOSE); /*Close the dcb*/
      285     9103    1     ALTRETURN;
      286     9104                   %EJECT;
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:34   
      287     9105        /**********************************************************************/
      288     9106        /*I*   NAME:   ESTCUM_STEP
      289     9107               PURPOSE: Establish cumulative values and maximums for step
      290     9108                       limits that were previously established via a limit command.
      291     9109               CALL:   CALL ESTCUM_STEP
      292     9110               INTERFACE: CPJ$ESTLIM
      293     9111               INPUT:  CP_LIMREC - limit record from *S
      294     9112               OUTPUT: JIT and CP_LIMREC updated
      295     9113                       STEP_LMTX - set if a step limit was exceeded. Used by
      296     9114                                   calling routine to determine appropriate action
      297     9115                                   such as aborting or continuing job
      298     9116                                   processing.
      299     9117               DESCRIPTION: If step_max in *S was previously established(non-zero)
      300     9118                       for a limit, then the cumulative values in *S are updated
      301     9119                       with new limits established in the *S and JIT for subsequent
      302     9120                       processing. Step_max is reset to indicate step limits are
      303     9121                       no longer in existence. A limit exceeded flag is set
      304     9122                       whenever a previously established step limit was exceeded
      305     9123                       and was reflected in the JIT.
      306     9124        */
      307     9125        /***********************************************************************/
      308     9126    1   ESTCUM_STEP: PROC;
      309     9127        /**/
      310     9128        /**/
      311     9129    2     IF CP_LIMREC.STEP_MAX.MAXCORE~=0
      312     9130    2        THEN
      313     9131    2           CALL CPJ$ESTLIM(CP_LIMREC,LIM_MEM,%YES#);
      314     9132    2     IF CP_LIMREC.STEP_MAX.MRT~=0
      315     9133    2        THEN
      316     9134    3           DO;
      317     9135    3              IF ((ADDR(STEP_LMTX)~=ADDR(NIL)) AND (B$JIT.XLIMFLG=%XL_TIME#))
      318     9136    3                 THEN
      319     9137    4                    DO;
      320     9138    4                       B$JIT.XLIMFLG=B$JIT.XLIMFLG\%XL_TIME#;
      321     9139    4                       STEP_LMTX=%YES#;
      322     9140    4                    END;
      323     9141    3              CALL CPJ$ESTLIM(CP_LIMREC,LIM_TIME,%YES#);
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:35   
      324     9142    3           END;
      325     9143    2     IF CP_LIMREC.STEP_MAX.REMLO~=0
      326     9144    2        THEN
      327     9145    3           DO;
      328     9146    3              IF ((ADDR(STEP_LMTX)~=ADDR(NIL)) AND (B$JIT.XLIMFLG=%XL_LO#))
      329     9147    3                 THEN
      330     9148    4                    DO;
      331     9149    4                       B$JIT.XLIMFLG=B$JIT.XLIMFLG\%XL_LO#;
      332     9150    4                       STEP_LMTX=%YES#;
      333     9151    4                    END;
      334     9152    3              CALL CPJ$ESTLIM(CP_LIMREC,LIM_LO,%YES#);
      335     9153    3           END;
      336     9154    2     IF CP_LIMREC.STEP_MAX.REMCPO~=0
      337     9155    2        THEN
      338     9156    3           DO;
      339     9157    3              IF ((ADDR(STEP_LMTX)~=ADDR(NIL)) AND (B$JIT.XLIMFLG=%XL_PO#))
      340     9158    3                 THEN
      341     9159    4                    DO;
      342     9160    4                       B$JIT.XLIMFLG=B$JIT.XLIMFLG\%XL_PO#;
      343     9161    4                       STEP_LMTX=%YES#;
      344     9162    4                    END;
      345     9163    3              CALL CPJ$ESTLIM(CP_LIMREC,LIM_PO,%YES#);
      346     9164    3           END;
      347     9165    2     IF CP_LIMREC.STEP_MAX.REMDO~=0
      348     9166    2        THEN
      349     9167    3           DO;
      350     9168    3              IF ((ADDR(STEP_LMTX)~=ADDR(NIL)) AND (B$JIT.XLIMFLG=%XL_DO#))
      351     9169    3                 THEN
      352     9170    4                    DO;
      353     9171    4                       B$JIT.XLIMFLG=B$JIT.XLIMFLG\%XL_DO#;
      354     9172    4                       STEP_LMTX=%YES#;
      355     9173    4                    END;
      356     9174    3              CALL CPJ$ESTLIM(CP_LIMREC,LIM_DO,%YES#);
      357     9175    3           END;
      358     9176    2     IF CP_LIMREC.STEP_MAX.MAXTMPDP~=0
      359     9177    2        THEN
      360     9178    3           DO;
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:36   
      361     9179    3              IF ((ADDR(STEP_LMTX)~=ADDR(NIL)) AND (B$JIT.XLIMFLG=%XL_TDISC#))
      362     9180    3                 THEN
      363     9181    4                    DO;
      364     9182    4                       B$JIT.XLIMFLG=B$JIT.XLIMFLG\%XL_TDISC#;
      365     9183    4                       STEP_LMTX=%YES#;
      366     9184    4                    END;
      367     9185    3              CALL CPJ$ESTLIM(CP_LIMREC,LIM_TDIS,%YES#);
      368     9186    3           END;
      369     9187    2     IF CP_LIMREC.STEP_MAX.PRDPRM~=0
      370     9188    2        THEN
      371     9189    3           DO;
      372     9190    3              IF ((ADDR(STEP_LMTX)~=ADDR(NIL)) AND (B$JIT.XLIMFLG=%XL_PDISC#))
      373     9191    3                 THEN
      374     9192    4                    DO;
      375     9193    4                       B$JIT.XLIMFLG=B$JIT.XLIMFLG\%XL_PDISC#;
      376     9194    4                       STEP_LMTX=%YES#;
      377     9195    4                    END;
      378     9196    3              CALL CPJ$ESTLIM(CP_LIMREC,LIM_PDIS,%YES#);
      379     9197    3           END;
      380     9198    2     IF CP_LIMREC.STEP_MAX.FBUL~=0
      381     9199    2        THEN
      382     9200    2           CALL CPJ$ESTLIM(CP_LIMREC,LIM_FPOOLS,%YES#);
      383     9201    2     RETURN;
      384     9202    2   END ESTCUM_STEP;
      385     9203    1   END CPJ$ESTCUM;
      386     9204                   %EOD;

PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:37   
--  Include file information  --

   CP_PERR_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPJ$ESTCUM.

   Procedure CPJ$ESTCUM requires 372 words for executable code.
   Procedure CPJ$ESTCUM requires 44 words of local(AUTO) storage.

PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:38   

 Object Unit name= CPJ$ESTCUM                                 File name= CPJ$SUBR.:E05TOU
 UTS= JUL 29 '97 11:53:54.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  CPJ$ESTCUM
    2   Proc  even  none   372    564  CPJ$ESTCUM
    3  RoData even  none    16     20  CPJ$ESTCUM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  CPJ$ESTCUM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 CPC$OPEN_S
 yes     yes           Std       3 CPJ$WRITE_S
 yes     yes           Std       3 CPJ$READ_S
         yes           Std       6 CPC$WRITEMSGE
         yes           Std       3 CPJ$ESTLIM
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:39   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    SEG2$                            r    B$JIT$
r    B$TCB$                                M$IBEX1_NUM                           K_LIMIT
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:40   


      155        1        /*T***********************************************************/
      156        2        /*T*                                                         */
      157        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      158        4        /*T*                                                         */
      159        5        /*T***********************************************************/
      160        6        /**********************************************************************/
      161        7        /*F*   NAME:   CPJ$ESTCUM
      162        8               PURPOSE: Establish cumulative values in the JIT and *S for
      163        9                       job or job step for all service limits.
      164       10               DESCEIPTION: The amount of limits used for those specified
      165       11                       on a previous STEP LIMIT command are calculated and stored in the
      166       12                       JIT and the *S file. Otherwise limits for the whole job are
      167       13                       calculated and the JIT and *S updated.
      168       14        */
      169       15        /*D*   NAME:   CPJ$ESTCUM
      170       16               CALL:   CALL CPJ$ESTCUM(STEP_FLG,STEP_LMTX)
      171       17               INTERFACE: CPJ$READ_S,CPJ$ESTLIM,CPJ$WRITE,CPC$OPEN_S,CPC$WRITEMSGE
      172       18               INPUT:  STEP_FLG - flag indicating job step calculations are to be
      173       19                                  performed
      174       20               OUTPUT: JIT updated with new limits
      175       21                       *S updated with new limits and cumulative values
      176       22                       STEP_LMTX - flag indicating a step limit was exceeded and
      177       23                       normally checked after   step aborts
      178       24               DESCRIPTION: If the step flag is set, limits used for the previous
      179       25                       job step are calculated and added to the cumulative
      180       26                       values in  the *S.  The new maximums ,for the step limits
      181       27                       only, revert to their previous maximums minus amount used.
      182       28                       Otherwise, limits used for the total job for all limits are
      183       29                       established in *S and new maximums established in the JIT
      184       30                       and *S.
      185       31        */
      186       32        /**********************************************************************/
      187       33        CPJ$ESTCUM: PROC(STEP_FLG,STEP_LMTX) ALTRET;

     33  2 000000   000000 700200 xent  CPJ$ESTCUM   TSX0  ! X66_AUTO_2
         2 000001   000054 000002                    ZERO    44,2
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:41   

      188       34        /**/
      189       35        /**/
      190       36                   %INCLUDE CP_6;
      191      117                   %INCLUDE B$JIT;
      192      407                   %INCLUDE CP_MACROS_C;
      193     1159                   %INCLUDE CP_SUBS_C;
      194     2076                   %INCLUDE CP_6_SUBS;
      195     2616                   %INCLUDE B_MACROS_C;
      196     2727                   %INCLUDE XU_MACRO_C;
      197     5833                   %INCLUDE CP_DATA_R;
      198     8396                   %INCLUDE CP_PERR_C;
      199     8734               /***** Ptr variable declarations *****/
      200     8735    1   DCL STEP_FLG BIT(1) ALIGNED;                        /*Step limit flag*/
      201     8736    1   DCL STEP_LMTX BIT(1) ALIGNED;                       /*Step limit excd. Flag*/
      202     8737    1   DCL DCB# UBIN WORD;                              /*Dcb number*/
      203     8738              /***** External procedure (entry) declarations *****/
      204     8739    1   DCL CPC$WRITEMSGE ENTRY(6);
      205     8740    1   DCL CPJ$ESTLIM ENTRY(3);                         /*Establish limits*/
      206     8741    1   DCL CPE$RZEROS ENTRY(3);
      207     8742    1   DCL CPJ$READ_S ENTRY(3) ALTRET;                  /*Read *S*/
      208     8743    1   DCL CPJ$WRITE_S ENTRY(3) ALTRET;                 /*Write *S*/
      209     8744    1   DCL CPC$OPEN_S ENTRY(1) ALTRET;                  /*Open *S */
      210     8745             /***** Fpts *****/
      211     8746        %SEG$2(NAME=SEG$2);
      212     8806        %ERR_CODE (NAME=E_CANTOPN,MID#=CPJ$IBEXMID,CODE#=E$CANTOPN,STCLASS=CONSTANT);
      213     8826        %CP_LIMREC(NAME=CP_LIMREC,STCLASS=AUTO);
      214     8864        %FPT_OPEN(FPTN=FPT$OPEN,STCLASS=BASED);
      215     8973        %FPT_CLOSE(FPTN=FPT$CLOSE,STCLASS=BASED);
      216     9015             /***** Based structures *****/
      217     9016        %B$TCB (STCLASS="BASED(B$TCB$)");
      218     9019        %B$EXCFR;
      219     9037          %EJECT;
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:42   
      220     9038        /*
      221     9039          **** Read in limit record from *S
      222     9040        */
      223     9041    1     DCB#=M$IBEX1_NUM;

   9041  2 000002   000000 235000 xsym               LDA     M$IBEX1_NUM
         2 000003   200005 755100                    STA     DCB#,,AUTO

      224     9042    1     CALL CPC$OPEN_S(DCB#) ALTRET(ESTCUM55);

   9042  2 000004   200005 630500                    EPPR0   DCB#,,AUTO
         2 000005   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000006   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000007   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000010   000000 701000 xent               TSX1    CPC$OPEN_S
         2 000011   000212 702000 2                  TSX2    ESTCUM55

      225     9043    1     CALL CPJ$READ_S(DCB#,VECTOR(K_LIMIT),VECTOR(CP_LIMREC))

   9043  2 000012   000002 235000 3                  LDA     2
         2 000013   200044 452500                    STP2    CP_LIMREC+30,,AUTO
         2 000014   200044 236100                    LDQ     CP_LIMREC+30,,AUTO
         2 000015   000006 036003                    ADLQ    6,DU
         2 000016   200046 757100                    STAQ    CP_LIMREC+32,,AUTO
         2 000017   200046 630500                    EPPR0   CP_LIMREC+32,,AUTO
         2 000020   200052 450500                    STP0    CP_LIMREC+36,,AUTO
         2 000021   000003 236000 3                  LDQ     3
         2 000022   200051 756100                    STQ     CP_LIMREC+35,,AUTO
         2 000023   200005 631500                    EPPR1   DCB#,,AUTO
         2 000024   200050 451500                    STP1    CP_LIMREC+34,,AUTO
         2 000025   200050 630500                    EPPR0   CP_LIMREC+34,,AUTO
         2 000026   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000027   000000 701000 xent               TSX1    CPJ$READ_S
         2 000030   000237 702000 2                  TSX2    ESTCUM80

      226     9044    1          ALTRET(ESTCUM80);
      227     9045        /*
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:43   
      228     9046          ****  Determine if we're establishing cumulative values for a job step or job
      229     9047        */
      230     9048    1     IF (ADDR(STEP_FLG)~=ADDR(NIL) AND (STEP_FLG=%YES#))

   9048  2 000031   200003 236100                    LDQ     @STEP_FLG,,AUTO
         2 000032   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000033   000054 600000 2                  TZE     s:9070
         2 000034   200003 470500                    LDP0    @STEP_FLG,,AUTO
         2 000035   000000 234100                    SZN     0,,PR0
         2 000036   000054 605000 2                  TPL     s:9070

      231     9049    1        THEN
      232     9050    2           DO;

      233     9051    2              IF ADDR(STEP_LMTX)~=ADDR(NIL)

   9051  2 000037   200004 236100                    LDQ     @STEP_LMTX,,AUTO
         2 000040   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000041   000044 600000 2                  TZE     s:9054

      234     9052    2                 THEN /*Init. Flag*/
      235     9053    2                    STEP_LMTX=%NO#;

   9053  2 000042   200004 471500                    LDP1    @STEP_LMTX,,AUTO
         2 000043   100000 450100                    STZ     0,,PR1

      236     9054    2              CALL ESTCUM_STEP;               /*Job step cumul. CALCS.*/

   9054  2 000044   000253 701000 2                  TSX1    ESTCUM_STEP
         2 000045   000000 011000                    NOP     0

      237     9055        /*
      238     9056          ****  Reset step limit flag in the jit
      239     9057        */
      240     9058    2              B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_STEPLMT#;

   9058  2 000046   000001 236000 1                  LDQ     E_CANTOPN+1
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:44   
         2 000047   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 000050   000000 470400 xsym               LDP0    B$JIT$
         2 000051   000143 376100                    ANQ     99,,PR0
         2 000052   000143 756100                    STQ     99,,PR0

      241     9059    2           END;

   9059  2 000053   000156 710000 2                  TRA     s:9083

      242     9060
      243     9061    1        ELSE
      244     9062        /*
      245     9063          ****  Perform job cumulative calculations
      246     9064        */
      247     9065    2           DO;

      248     9066        /*
      249     9067          ****           First perform job step cumul. Calcs. In case step
      250     9068          ****           Limits were in effect.
      251     9069        */
      252     9070    2              CALL ESTCUM_STEP;

   9070  2 000054   000253 701000 2                  TSX1    ESTCUM_STEP
         2 000055   000000 011000                    NOP     0

      253     9071        /*
      254     9072          ****           Perform cumul. Calcs. For all limits
      255     9073        */
      256     9074    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_MEM);

   9074  2 000056   000004 236000 3                  LDQ     4
         2 000057   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000060   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000061   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000062   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000063   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000064   000000 701000 xent               TSX1    CPJ$ESTLIM
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:45   
         2 000065   000000 011000                    NOP     0

      257     9075    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_TIME);

   9075  2 000066   000006 236000 3                  LDQ     6
         2 000067   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000070   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000071   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000072   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000073   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000074   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000075   000000 011000                    NOP     0

      258     9076    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_LO);

   9076  2 000076   000007 236000 3                  LDQ     7
         2 000077   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000100   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000101   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000102   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000103   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000104   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000105   000000 011000                    NOP     0

      259     9077    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_PO);

   9077  2 000106   000010 236000 3                  LDQ     8
         2 000107   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000110   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000111   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000112   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000113   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000114   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000115   000000 011000                    NOP     0

      260     9078    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_DO);

PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:46   
   9078  2 000116   000011 236000 3                  LDQ     9
         2 000117   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000120   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000121   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000122   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000123   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000124   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000125   000000 011000                    NOP     0

      261     9079    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_TDIS);

   9079  2 000126   000013 236000 3                  LDQ     11
         2 000127   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000130   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000131   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000132   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000133   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000134   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000135   000000 011000                    NOP     0

      262     9080    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_PDIS);

   9080  2 000136   000014 236000 3                  LDQ     12
         2 000137   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000140   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000141   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000142   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000143   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000144   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000145   000000 011000                    NOP     0

      263     9081    2              CALL CPJ$ESTLIM(CP_LIMREC,LIM_FPOOLS);

   9081  2 000146   000015 236000 3                  LDQ     13
         2 000147   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000150   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000151   200044 450500                    STP0    CP_LIMREC+30,,AUTO
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:47   
         2 000152   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000153   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000154   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000155   000000 011000                    NOP     0

      264     9082    2           END;

      265     9083    1     CALL CPJ$WRITE_S(DCB#,VECTOR(K_LIMIT),VECTOR(CP_LIMREC))

   9083  2 000156   000002 235000 3                  LDA     2
         2 000157   200044 452500                    STP2    CP_LIMREC+30,,AUTO
         2 000160   200044 236100                    LDQ     CP_LIMREC+30,,AUTO
         2 000161   000006 036003                    ADLQ    6,DU
         2 000162   200046 757100                    STAQ    CP_LIMREC+32,,AUTO
         2 000163   200046 630500                    EPPR0   CP_LIMREC+32,,AUTO
         2 000164   200052 450500                    STP0    CP_LIMREC+36,,AUTO
         2 000165   000003 236000 3                  LDQ     3
         2 000166   200051 756100                    STQ     CP_LIMREC+35,,AUTO
         2 000167   200005 631500                    EPPR1   DCB#,,AUTO
         2 000170   200050 451500                    STP1    CP_LIMREC+34,,AUTO
         2 000171   200050 630500                    EPPR0   CP_LIMREC+34,,AUTO
         2 000172   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000173   000000 701000 xent               TSX1    CPJ$WRITE_S
         2 000174   000237 702000 2                  TSX2    ESTCUM80

      266     9084    1          ALTRET(ESTCUM80);
      267     9085    1     SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DCB#=DCB#;

   9085  2 000175   000000 470400 xsym               LDP0    SEG2$
         2 000176   000163 471500                    LDP1    115,,PR0
         2 000177   200005 720100                    LXL0    DCB#,,AUTO
         2 000200   100032 740100                    STX0    26,,PR1

      268     9086    1     SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DISP#=%SAVE#;

   9086  2 000201   000163 471500                    LDP1    115,,PR0
         2 000202   000002 236007                    LDQ     2,DL
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:48   
         2 000203   100032 552104                    STBQ    26,'04'O,PR1

      269     9087    1     CALL M$CLOSE(SEG$2.FPT_CLOSE$->FPT$CLOSE) ALTRET(ESTCUM65);

   9087  2 000204   000163 471500                    LDP1    115,,PR0
         2 000205   100000 630500                    EPPR0   0,,PR1
         2 000206   450001 713400                    CLIMB   alt,close
         2 000207   406000 401760                    pmme    nvectors=13
         2 000210   000231 702000 2                  TSX2    ESTCUM65

      270     9088    1     RETURN;

   9088  2 000211   000000 702200 xent               TSX2  ! X66_ARET

   9086  2 000212                       ESTCUM55     null
      271     9089    1   ESTCUM55:;
      272     9090        /*E*       ERROR: CPJ-E$CANTOPN-E
      273     9091                   DESCRIPTION: Unable to open %FN file
      274     9092                   DESCRIPTION: IBEX was unable to open the specified file.
      275     9093        */
      276     9094    1     CALL CPC$WRITEMSGE(E_CANTOPN,DCB#,,,,%YES#);

   9094  2 000212   000016 236000 3                  LDQ     14
         2 000213   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000214   200050 757100                    STAQ    CP_LIMREC+34,,AUTO
         2 000215   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000216   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000217   200046 757100                    STAQ    CP_LIMREC+32,,AUTO
         2 000220   200005 630500                    EPPR0   DCB#,,AUTO
         2 000221   200045 450500                    STP0    CP_LIMREC+31,,AUTO
         2 000222   000017 236000 3                  LDQ     15
         2 000223   200044 756100                    STQ     CP_LIMREC+30,,AUTO
         2 000224   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000225   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000226   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000227   000000 011000                    NOP     0

PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:49   
      277     9095    1     GOTO ESTCUM80;

   9095  2 000230   000237 710000 2                  TRA     ESTCUM80

   9086  2 000231                       ESTCUM65     null
      278     9096    1   ESTCUM65:;
      279     9097    1     B$JIT.USRERR = B$TCB.ALT$ -> B$EXCFR.ERR;

   9097  2 000231   000000 470400 xsym               LDP0    B$TCB$
         2 000232   000000 471500                    LDP1    0,,PR0
         2 000233   100102 236100                    LDQ     66,,PR1
         2 000234   000000 473400 xsym               LDP3    B$JIT$
         2 000235   300144 756100                    STQ     100,,PR3

      280     9098    1     ALTRETURN;

   9098  2 000236   000000 702200 xent               TSX2  ! X66_AALT

   9097  2 000237                       ESTCUM80     null
      281     9099    1   ESTCUM80:;
      282     9100    1     SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DCB#=DCB#;

   9100  2 000237   000000 470400 xsym               LDP0    SEG2$
         2 000240   000163 471500                    LDP1    115,,PR0
         2 000241   200005 720100                    LXL0    DCB#,,AUTO
         2 000242   100032 740100                    STX0    26,,PR1

      283     9101    1     SEG$2.FPT_CLOSE$->FPT$CLOSE.V.DISP#=%SAVE#;

   9101  2 000243   000163 471500                    LDP1    115,,PR0
         2 000244   000002 236007                    LDQ     2,DL
         2 000245   100032 552104                    STBQ    26,'04'O,PR1

      284     9102    1     CALL M$CLOSE(SEG$2.FPT_CLOSE$->FPT$CLOSE); /*Close the dcb*/

   9102  2 000246   000163 471500                    LDP1    115,,PR0
         2 000247   100000 630500                    EPPR0   0,,PR1
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:50   
         2 000250   050001 713400                    CLIMB   close
         2 000251   406000 401760                    pmme    nvectors=13

      285     9103    1     ALTRETURN;

   9103  2 000252   000000 702200 xent               TSX2  ! X66_AALT

      286     9104                   %EJECT;
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:51   
      287     9105        /**********************************************************************/
      288     9106        /*I*   NAME:   ESTCUM_STEP
      289     9107               PURPOSE: Establish cumulative values and maximums for step
      290     9108                       limits that were previously established via a limit command.
      291     9109               CALL:   CALL ESTCUM_STEP
      292     9110               INTERFACE: CPJ$ESTLIM
      293     9111               INPUT:  CP_LIMREC - limit record from *S
      294     9112               OUTPUT: JIT and CP_LIMREC updated
      295     9113                       STEP_LMTX - set if a step limit was exceeded. Used by
      296     9114                                   calling routine to determine appropriate action
      297     9115                                   such as aborting or continuing job
      298     9116                                   processing.
      299     9117               DESCRIPTION: If step_max in *S was previously established(non-zero)
      300     9118                       for a limit, then the cumulative values in *S are updated
      301     9119                       with new limits established in the *S and JIT for subsequent
      302     9120                       processing. Step_max is reset to indicate step limits are
      303     9121                       no longer in existence. A limit exceeded flag is set
      304     9122                       whenever a previously established step limit was exceeded
      305     9123                       and was reflected in the JIT.
      306     9124        */
      307     9125        /***********************************************************************/
      308     9126    1   ESTCUM_STEP: PROC;

   9126  2 000253   200042 741300       ESTCUM_STEP  STX1  ! CP_LIMREC+28,,AUTO

      309     9127        /**/
      310     9128        /**/
      311     9129    2     IF CP_LIMREC.STEP_MAX.MAXCORE~=0

   9129  2 000254   200024 220100                    LDX0    CP_LIMREC+14,,AUTO
         2 000255   000270 600000 2                  TZE     s:9132

      312     9130    2        THEN
      313     9131    2           CALL CPJ$ESTLIM(CP_LIMREC,LIM_MEM,%YES#);

   9131  2 000256   000016 236000 3                  LDQ     14
         2 000257   200046 756100                    STQ     CP_LIMREC+32,,AUTO
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:52   
         2 000260   000004 236000 3                  LDQ     4
         2 000261   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000262   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000263   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000264   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000265   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000266   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000267   000000 011000                    NOP     0

      314     9132    2     IF CP_LIMREC.STEP_MAX.MRT~=0

   9132  2 000270   200032 235100                    LDA     CP_LIMREC+20,,AUTO
         2 000271   000325 600000 2                  TZE     s:9143

      315     9133    2        THEN
      316     9134    3           DO;

      317     9135    3              IF ((ADDR(STEP_LMTX)~=ADDR(NIL)) AND (B$JIT.XLIMFLG=%XL_TIME#))

   9135  2 000272   200004 236100                    LDQ     @STEP_LMTX,,AUTO
         2 000273   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000274   000313 600000 2                  TZE     s:9141
         2 000275   000000 470400 xsym               LDP0    B$JIT$
         2 000276   000316 236100                    LDQ     206,,PR0
         2 000277   777000 376007                    ANQ     -512,DL
         2 000300   001000 116007                    CMPQ    512,DL
         2 000301   000313 601000 2                  TNZ     s:9141

      318     9136    3                 THEN
      319     9137    4                    DO;

      320     9138    4                       B$JIT.XLIMFLG=B$JIT.XLIMFLG\%XL_TIME#;

   9138  2 000302   000316 236100                    LDQ     206,,PR0
         2 000303   000022 736000                    QLS     18
         2 000304   777000 376003                    ANQ     -512,DU
         2 000305   001000 676003                    ERQ     512,DU
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:53   
         2 000306   000022 772000                    QRL     18
         2 000307   000316 552110                    STBQ    206,'10'O,PR0

      321     9139    4                       STEP_LMTX=%YES#;

   9139  2 000310   400000 236003                    LDQ     -131072,DU
         2 000311   200004 471500                    LDP1    @STEP_LMTX,,AUTO
         2 000312   100000 756100                    STQ     0,,PR1

      322     9140    4                    END;

      323     9141    3              CALL CPJ$ESTLIM(CP_LIMREC,LIM_TIME,%YES#);

   9141  2 000313   000016 236000 3                  LDQ     14
         2 000314   200046 756100                    STQ     CP_LIMREC+32,,AUTO
         2 000315   000006 236000 3                  LDQ     6
         2 000316   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000317   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000320   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000321   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000322   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000323   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000324   000000 011000                    NOP     0

      324     9142    3           END;

      325     9143    2     IF CP_LIMREC.STEP_MAX.REMLO~=0

   9143  2 000325   200025 235100                    LDA     CP_LIMREC+15,,AUTO
         2 000326   000362 600000 2                  TZE     s:9154

      326     9144    2        THEN
      327     9145    3           DO;

      328     9146    3              IF ((ADDR(STEP_LMTX)~=ADDR(NIL)) AND (B$JIT.XLIMFLG=%XL_LO#))

   9146  2 000327   200004 236100                    LDQ     @STEP_LMTX,,AUTO
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:54   
         2 000330   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000331   000350 600000 2                  TZE     s:9152
         2 000332   000000 470400 xsym               LDP0    B$JIT$
         2 000333   000316 236100                    LDQ     206,,PR0
         2 000334   777000 376007                    ANQ     -512,DL
         2 000335   100000 116007                    CMPQ    32768,DL
         2 000336   000350 601000 2                  TNZ     s:9152

      329     9147    3                 THEN
      330     9148    4                    DO;

      331     9149    4                       B$JIT.XLIMFLG=B$JIT.XLIMFLG\%XL_LO#;

   9149  2 000337   000316 236100                    LDQ     206,,PR0
         2 000340   000022 736000                    QLS     18
         2 000341   777000 376003                    ANQ     -512,DU
         2 000342   100000 676003                    ERQ     32768,DU
         2 000343   000022 772000                    QRL     18
         2 000344   000316 552110                    STBQ    206,'10'O,PR0

      332     9150    4                       STEP_LMTX=%YES#;

   9150  2 000345   400000 236003                    LDQ     -131072,DU
         2 000346   200004 471500                    LDP1    @STEP_LMTX,,AUTO
         2 000347   100000 756100                    STQ     0,,PR1

      333     9151    4                    END;

      334     9152    3              CALL CPJ$ESTLIM(CP_LIMREC,LIM_LO,%YES#);

   9152  2 000350   000016 236000 3                  LDQ     14
         2 000351   200046 756100                    STQ     CP_LIMREC+32,,AUTO
         2 000352   000007 236000 3                  LDQ     7
         2 000353   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000354   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000355   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000356   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:55   
         2 000357   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000360   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000361   000000 011000                    NOP     0

      335     9153    3           END;

      336     9154    2     IF CP_LIMREC.STEP_MAX.REMCPO~=0

   9154  2 000362   200026 235100                    LDA     CP_LIMREC+16,,AUTO
         2 000363   000417 600000 2                  TZE     s:9165

      337     9155    2        THEN
      338     9156    3           DO;

      339     9157    3              IF ((ADDR(STEP_LMTX)~=ADDR(NIL)) AND (B$JIT.XLIMFLG=%XL_PO#))

   9157  2 000364   200004 236100                    LDQ     @STEP_LMTX,,AUTO
         2 000365   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000366   000405 600000 2                  TZE     s:9163
         2 000367   000000 470400 xsym               LDP0    B$JIT$
         2 000370   000316 236100                    LDQ     206,,PR0
         2 000371   777000 376007                    ANQ     -512,DL
         2 000372   400000 116007                    CMPQ    -131072,DL
         2 000373   000405 601000 2                  TNZ     s:9163

      340     9158    3                 THEN
      341     9159    4                    DO;

      342     9160    4                       B$JIT.XLIMFLG=B$JIT.XLIMFLG\%XL_PO#;

   9160  2 000374   000316 236100                    LDQ     206,,PR0
         2 000375   000022 736000                    QLS     18
         2 000376   777000 376003                    ANQ     -512,DU
         2 000377   400000 676003                    ERQ     -131072,DU
         2 000400   000022 772000                    QRL     18
         2 000401   000316 552110                    STBQ    206,'10'O,PR0

PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:56   
      343     9161    4                       STEP_LMTX=%YES#;

   9161  2 000402   400000 236003                    LDQ     -131072,DU
         2 000403   200004 471500                    LDP1    @STEP_LMTX,,AUTO
         2 000404   100000 756100                    STQ     0,,PR1

      344     9162    4                    END;

      345     9163    3              CALL CPJ$ESTLIM(CP_LIMREC,LIM_PO,%YES#);

   9163  2 000405   000016 236000 3                  LDQ     14
         2 000406   200046 756100                    STQ     CP_LIMREC+32,,AUTO
         2 000407   000010 236000 3                  LDQ     8
         2 000410   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000411   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000412   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000413   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000414   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000415   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000416   000000 011000                    NOP     0

      346     9164    3           END;

      347     9165    2     IF CP_LIMREC.STEP_MAX.REMDO~=0

   9165  2 000417   200027 235100                    LDA     CP_LIMREC+17,,AUTO
         2 000420   000454 600000 2                  TZE     s:9176

      348     9166    2        THEN
      349     9167    3           DO;

      350     9168    3              IF ((ADDR(STEP_LMTX)~=ADDR(NIL)) AND (B$JIT.XLIMFLG=%XL_DO#))

   9168  2 000421   200004 236100                    LDQ     @STEP_LMTX,,AUTO
         2 000422   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000423   000442 600000 2                  TZE     s:9174
         2 000424   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:57   
         2 000425   000316 236100                    LDQ     206,,PR0
         2 000426   777000 376007                    ANQ     -512,DL
         2 000427   040000 116007                    CMPQ    16384,DL
         2 000430   000442 601000 2                  TNZ     s:9174

      351     9169    3                 THEN
      352     9170    4                    DO;

      353     9171    4                       B$JIT.XLIMFLG=B$JIT.XLIMFLG\%XL_DO#;

   9171  2 000431   000316 236100                    LDQ     206,,PR0
         2 000432   000022 736000                    QLS     18
         2 000433   777000 376003                    ANQ     -512,DU
         2 000434   040000 676003                    ERQ     16384,DU
         2 000435   000022 772000                    QRL     18
         2 000436   000316 552110                    STBQ    206,'10'O,PR0

      354     9172    4                       STEP_LMTX=%YES#;

   9172  2 000437   400000 236003                    LDQ     -131072,DU
         2 000440   200004 471500                    LDP1    @STEP_LMTX,,AUTO
         2 000441   100000 756100                    STQ     0,,PR1

      355     9173    4                    END;

      356     9174    3              CALL CPJ$ESTLIM(CP_LIMREC,LIM_DO,%YES#);

   9174  2 000442   000016 236000 3                  LDQ     14
         2 000443   200046 756100                    STQ     CP_LIMREC+32,,AUTO
         2 000444   000011 236000 3                  LDQ     9
         2 000445   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000446   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000447   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000450   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000451   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000452   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000453   000000 011000                    NOP     0
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:58   

      357     9175    3           END;

      358     9176    2     IF CP_LIMREC.STEP_MAX.MAXTMPDP~=0

   9176  2 000454   200031 235100                    LDA     CP_LIMREC+19,,AUTO
         2 000455   000511 600000 2                  TZE     s:9187

      359     9177    2        THEN
      360     9178    3           DO;

      361     9179    3              IF ((ADDR(STEP_LMTX)~=ADDR(NIL)) AND (B$JIT.XLIMFLG=%XL_TDISC#))

   9179  2 000456   200004 236100                    LDQ     @STEP_LMTX,,AUTO
         2 000457   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000460   000477 600000 2                  TZE     s:9185
         2 000461   000000 470400 xsym               LDP0    B$JIT$
         2 000462   000316 236100                    LDQ     206,,PR0
         2 000463   777000 376007                    ANQ     -512,DL
         2 000464   010000 116007                    CMPQ    4096,DL
         2 000465   000477 601000 2                  TNZ     s:9185

      362     9180    3                 THEN
      363     9181    4                    DO;

      364     9182    4                       B$JIT.XLIMFLG=B$JIT.XLIMFLG\%XL_TDISC#;

   9182  2 000466   000316 236100                    LDQ     206,,PR0
         2 000467   000022 736000                    QLS     18
         2 000470   777000 376003                    ANQ     -512,DU
         2 000471   010000 676003                    ERQ     4096,DU
         2 000472   000022 772000                    QRL     18
         2 000473   000316 552110                    STBQ    206,'10'O,PR0

      365     9183    4                       STEP_LMTX=%YES#;

   9183  2 000474   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:59   
         2 000475   200004 471500                    LDP1    @STEP_LMTX,,AUTO
         2 000476   100000 756100                    STQ     0,,PR1

      366     9184    4                    END;

      367     9185    3              CALL CPJ$ESTLIM(CP_LIMREC,LIM_TDIS,%YES#);

   9185  2 000477   000016 236000 3                  LDQ     14
         2 000500   200046 756100                    STQ     CP_LIMREC+32,,AUTO
         2 000501   000013 236000 3                  LDQ     11
         2 000502   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000503   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000504   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000505   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000506   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000507   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000510   000000 011000                    NOP     0

      368     9186    3           END;

      369     9187    2     IF CP_LIMREC.STEP_MAX.PRDPRM~=0

   9187  2 000511   200030 235100                    LDA     CP_LIMREC+18,,AUTO
         2 000512   000546 600000 2                  TZE     s:9198

      370     9188    2        THEN
      371     9189    3           DO;

      372     9190    3              IF ((ADDR(STEP_LMTX)~=ADDR(NIL)) AND (B$JIT.XLIMFLG=%XL_PDISC#))

   9190  2 000513   200004 236100                    LDQ     @STEP_LMTX,,AUTO
         2 000514   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000515   000534 600000 2                  TZE     s:9196
         2 000516   000000 470400 xsym               LDP0    B$JIT$
         2 000517   000316 236100                    LDQ     206,,PR0
         2 000520   777000 376007                    ANQ     -512,DL
         2 000521   020000 116007                    CMPQ    8192,DL
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:60   
         2 000522   000534 601000 2                  TNZ     s:9196

      373     9191    3                 THEN
      374     9192    4                    DO;

      375     9193    4                       B$JIT.XLIMFLG=B$JIT.XLIMFLG\%XL_PDISC#;

   9193  2 000523   000316 236100                    LDQ     206,,PR0
         2 000524   000022 736000                    QLS     18
         2 000525   777000 376003                    ANQ     -512,DU
         2 000526   020000 676003                    ERQ     8192,DU
         2 000527   000022 772000                    QRL     18
         2 000530   000316 552110                    STBQ    206,'10'O,PR0

      376     9194    4                       STEP_LMTX=%YES#;

   9194  2 000531   400000 236003                    LDQ     -131072,DU
         2 000532   200004 471500                    LDP1    @STEP_LMTX,,AUTO
         2 000533   100000 756100                    STQ     0,,PR1

      377     9195    4                    END;

      378     9196    3              CALL CPJ$ESTLIM(CP_LIMREC,LIM_PDIS,%YES#);

   9196  2 000534   000016 236000 3                  LDQ     14
         2 000535   200046 756100                    STQ     CP_LIMREC+32,,AUTO
         2 000536   000014 236000 3                  LDQ     12
         2 000537   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000540   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000541   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000542   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000543   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000544   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000545   000000 011000                    NOP     0

      379     9197    3           END;

PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:61   
      380     9198    2     IF CP_LIMREC.STEP_MAX.FBUL~=0

   9198  2 000546   200024 720100                    LXL0    CP_LIMREC+14,,AUTO
         2 000547   000562 600000 2                  TZE     s:9201

      381     9199    2        THEN
      382     9200    2           CALL CPJ$ESTLIM(CP_LIMREC,LIM_FPOOLS,%YES#);

   9200  2 000550   000016 236000 3                  LDQ     14
         2 000551   200046 756100                    STQ     CP_LIMREC+32,,AUTO
         2 000552   000015 236000 3                  LDQ     13
         2 000553   200045 756100                    STQ     CP_LIMREC+31,,AUTO
         2 000554   200006 630500                    EPPR0   CP_LIMREC,,AUTO
         2 000555   200044 450500                    STP0    CP_LIMREC+30,,AUTO
         2 000556   200044 630500                    EPPR0   CP_LIMREC+30,,AUTO
         2 000557   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000560   000000 701000 xent               TSX1    CPJ$ESTLIM
         2 000561   000000 011000                    NOP     0

      383     9201    2     RETURN;

   9201  2 000562   200042 221300                    LDX1  ! CP_LIMREC+28,,AUTO
         2 000563   000001 702211                    TSX2  ! 1,X1
      384     9202    2   END ESTCUM_STEP;
      385     9203    1   END CPJ$ESTCUM;
      386     9204                   %EOD;

PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:62   
--  Include file information  --

   CP_PERR_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPJ$ESTCUM.
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:63   

 **** Variables and constants ****

  ****  Section 001 RoData CPJ$ESTCUM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_CANTOPN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @STEP_FLG                  4-0-0/w PTR         r     1 @STEP_LMTX
     6-0-0/w STRC(972)   r     1 CP_LIMREC                  5-0-0/w UBIN        r     1 DCB#
    *0-0-0/w BIT         r     1 STEP_FLG                  *0-0-0/w BIT         r     1 STEP_LMTX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/c STRC(54)    r     1 K_LIMIT                    0-0-0/w UBIN        r     1 M$IBEX1_NUM
     0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$EXCFR                    0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d STRC(1080)  r     1 FPT$CLOSE
     0-0-0/w STRC(6264)  r     1 SEG$2

PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:64   

   Procedure CPJ$ESTCUM requires 372 words for executable code.
   Procedure CPJ$ESTCUM requires 44 words of local(AUTO) storage.
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:65   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:66   
          MINI XREF LISTING

B$EXCFR.ASL
      9020**DCL      9020--REDEF
B$EXCFR.ERR
      9034**DCL      9097>>ASSIGN
B$EXCFR.ERR.ERR#
      9034**DCL      9034--REDEF
B$EXCFR.EVID
      9033**DCL      9033--REDEF    9034--REDEF
B$EXCFR.IR
      9021**DCL      9021--REDEF
B$EXCFR.PREVSZ
      9020**DCL      9020--REDEF
B$EXCFR.SUBC
      9032**DCL      9032--REDEF    9033--REDEF    9033--REDEF
B$JIT.CPFLAGS1
       220**DCL      9058<<ASSIGN   9058>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       225**DCL       225--REDEF
B$JIT.ERR.MID
       132**DCL       132--REDEF
B$JIT.JRESPEAK
       293**DCL       294--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       402**DCL       402--REDEF     403--REDEF
B$JIT.PNR
       306**DCL       306--REDEF
B$JIT.TSLINE
       400**DCL       401--REDEF
B$JIT.USRERR
       267**DCL      9097<<ASSIGN
B$JIT.XLIMFLG
       362**DCL      9135>>IF       9138<<ASSIGN   9138>>ASSIGN   9146>>IF       9149<<ASSIGN   9149>>ASSIGN
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:67   
      9157>>IF       9160<<ASSIGN   9160>>ASSIGN   9168>>IF       9171<<ASSIGN   9171>>ASSIGN   9179>>IF
      9182<<ASSIGN   9182>>ASSIGN   9190>>IF       9193<<ASSIGN   9193>>ASSIGN
B$JIT$
      8329**DCL       126--IMP-PTR  9058>>ASSIGN   9058>>ASSIGN   9097>>ASSIGN   9135>>IF       9138>>ASSIGN
      9138>>ASSIGN   9146>>IF       9149>>ASSIGN   9149>>ASSIGN   9157>>IF       9160>>ASSIGN   9160>>ASSIGN
      9168>>IF       9171>>ASSIGN   9171>>ASSIGN   9179>>IF       9182>>ASSIGN   9182>>ASSIGN   9190>>IF
      9193>>ASSIGN   9193>>ASSIGN
B$TCB.ALT$
      9017**DCL      9097>>ASSIGN
B$TCB$
      8331**DCL      9017--IMP-PTR  9097>>ASSIGN
CAMR_REC.ACSVEH_
      7368**DCL      7369--REDEF
CAMR_REC.ALTKEYS_
      7374**DCL      7375--REDEF    7375--REDEF
CAMR_REC.HDR_
      7373**DCL      7374--REDEF
CAMR_REC.TAB_
      7372**DCL      7373--REDEF
CAMR_REC.UHL_
      7366**DCL      7367--REDEF    7367--REDEF
CAMR_REC.V.FSN#
      7406**DCL      7406--REDEF    7406--REDEF
CAMR_REC.WSN_
      7372**DCL      7372--REDEF
CFPT_CLOSE.SN_
      6210**DCL      6210--REDEF
CFPT_CLOSE.UTL_
      6211**DCL      6211--REDEF
CFPT_CLOSE.V.EXPIRE#
      6225**DCL      6225--REDEF
CFPT_CLOSE.V.TYPE#
      6223**DCL      6223--REDEF
CFPT_CLOSE.V.XTNSIZE#
      6220**DCL      6220--REDEF    6222--REDEF
CFPT_OPEN.ACSVEH_
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:68   
      6145**DCL      6146--REDEF
CFPT_OPEN.ALTKEYS_
      6151**DCL      6152--REDEF    6152--REDEF
CFPT_OPEN.HDR_
      6150**DCL      6151--REDEF
CFPT_OPEN.TAB_
      6149**DCL      6150--REDEF
CFPT_OPEN.UHL_
      6143**DCL      6144--REDEF    6144--REDEF
CFPT_OPEN.V.FSN#
      6183**DCL      6183--REDEF    6183--REDEF
CFPT_OPEN.WSN_
      6149**DCL      6149--REDEF
CFPT_READ.STATION_
      6249**DCL      6250--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      6261**DCL      6261--REDEF
CFPT_READ.V.INDX#
      6259**DCL      6259--REDEF
CFPT_READUC.STATION_
      6619**DCL      6620--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      6631**DCL      6631--REDEF
CFPT_READUC.V.INDX#
      6629**DCL      6629--REDEF
CFPT_TRTN.V.IR#
      6855**DCL      6856--REDEF
CFPT_WRITE.STATION_
      6287**DCL      6287--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      6294**DCL      6294--REDEF
CFPT_WRITEUC.STATION_
      6587**DCL      6587--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      6594**DCL      6594--REDEF
CFPT_XXX.V.STEPCC#
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:69   
      7567**DCL      7567--REDEF
CGETCMD.OUT$
      7588**DCL      7594--REDEF
CPC$OPEN_S
      8744**DCL-ENT  9042--CALL
CPC$WRITEMSGE
      8739**DCL-ENT  9094--CALL
CPJ$ESTLIM
      8740**DCL-ENT  9074--CALL     9075--CALL     9076--CALL     9077--CALL     9078--CALL     9079--CALL
      9080--CALL     9081--CALL     9131--CALL     9141--CALL     9152--CALL     9163--CALL     9174--CALL
      9185--CALL     9196--CALL     9200--CALL
CPJ$READ_S
      8742**DCL-ENT  9043--CALL
CPJ$WRITE_S
      8743**DCL-ENT  9083--CALL
CP_LIMREC
      8827**DCL      9043--CALL     9074<>CALL     9075<>CALL     9076<>CALL     9077<>CALL     9078<>CALL
      9079<>CALL     9080<>CALL     9081<>CALL     9083--CALL     9131<>CALL     9141<>CALL     9152<>CALL
      9163<>CALL     9174<>CALL     9185<>CALL     9196<>CALL     9200<>CALL
CP_LIMREC.STEP_MAX.FBUL
      8849**DCL      9198>>IF
CP_LIMREC.STEP_MAX.MAXCORE
      8848**DCL      9129>>IF
CP_LIMREC.STEP_MAX.MAXTMPDP
      8854**DCL      9176>>IF
CP_LIMREC.STEP_MAX.MRT
      8855**DCL      9132>>IF
CP_LIMREC.STEP_MAX.PRDPRM
      8853**DCL      9187>>IF
CP_LIMREC.STEP_MAX.REMCPO
      8851**DCL      9154>>IF
CP_LIMREC.STEP_MAX.REMDO
      8852**DCL      9165>>IF
CP_LIMREC.STEP_MAX.REMLO
      8850**DCL      9143>>IF
CVLP_TRMCTL.BREAKCOUNT
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:70   
      7179**DCL      7180--REDEF
CVLP_WINDOW.FWINDOW#
      7275**DCL      7275--REDEF    7276--REDEF
DCB#
      8737**DCL      9041<<ASSIGN   9042<>CALL     9043<>CALL     9083<>CALL     9085>>ASSIGN   9094<>CALL
      9100>>ASSIGN
ESTCUM55
      9086**LABEL    9042--CALLALT
ESTCUM65
      9086**LABEL    9087--CALLALT
ESTCUM80
      9097**LABEL    9043--CALLALT  9083--CALLALT  9095--GOTO
ESTCUM_STEP
      9126**PROC     9054--CALL     9070--CALL
E_CANTOPN
      8819**DCL      9094<>CALL
FPT$CLOSE
      8996**DCL      9087<>CALL     9102<>CALL
FPT$CLOSE.SN_
      8996**DCL      8996--REDEF
FPT$CLOSE.UTL_
      8997**DCL      8997--REDEF
FPT$CLOSE.V.DCB#
      9002**DCL      9085<<ASSIGN   9100<<ASSIGN
FPT$CLOSE.V.DISP#
      9005**DCL      9086<<ASSIGN   9101<<ASSIGN
FPT$CLOSE.V.EXPIRE#
      9011**DCL      9011--REDEF
FPT$CLOSE.V.TYPE#
      9009**DCL      9009--REDEF
FPT$CLOSE.V.XTNSIZE#
      9006**DCL      9006--REDEF    9008--REDEF
FPT$OPEN.ACSVEH_
      8931**DCL      8932--REDEF
FPT$OPEN.ALTKEYS_
      8937**DCL      8938--REDEF    8938--REDEF
PL6.E3A0      #002=CPJ$ESTCUM File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:53 Page:71   
FPT$OPEN.HDR_
      8936**DCL      8937--REDEF
FPT$OPEN.TAB_
      8935**DCL      8936--REDEF
FPT$OPEN.UHL_
      8929**DCL      8930--REDEF    8930--REDEF
FPT$OPEN.V.FSN#
      8969**DCL      8969--REDEF    8969--REDEF
FPT$OPEN.WSN_
      8935**DCL      8935--REDEF
K_LIMIT
      8369**DCL      9043--CALL     9083--CALL
M$CLOSE
        45**DCL-ENT  9087--CALL     9102--CALL
M$IBEX1_NUM
      8335**DCL      9041>>ASSIGN
SEG$2.FPT_CLOSE$
      8785**DCL      9085>>ASSIGN   9086>>ASSIGN   9087>>CALL     9100>>ASSIGN   9101>>ASSIGN   9102>>CALL
SEG2$
      8322**DCL      8747--IMP-PTR  9085>>ASSIGN   9086>>ASSIGN   9087>>CALL     9100>>ASSIGN   9101>>ASSIGN
      9102>>CALL
STEP_FLG
      8735**DCL        33--PROC     9048--IF       9048>>IF
STEP_LMTX
      8736**DCL        33--PROC     9051--IF       9053<<ASSIGN   9135--IF       9139<<ASSIGN   9146--IF
      9150<<ASSIGN   9157--IF       9161<<ASSIGN   9168--IF       9172<<ASSIGN   9179--IF       9183<<ASSIGN
      9190--IF       9194<<ASSIGN

PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:72   
      387        1        /*T***********************************************************/
      388        2        /*T*                                                         */
      389        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      390        4        /*T*                                                         */
      391        5        /*T***********************************************************/
      392        6        /**********************************************************************/
      393        7        /*F*   NAME:   CPJ$READ_S
      394        8               PURPOSE: Read a record from the *S file
      395        9               DESCRIPTION: The specified record is read from the *S file.
      396       10        */
      397       11        /*D*   NAME:   CPJ$READ_S
      398       12               CALL:   CALL CPJ$READ_S(DCB#,VECT_KEY,VECT_BUF)
      399       13               INPUT:  DCB# - dcb through which read is to occur
      400       14                       VECT_KEY - vector of key to be read
      401       15                       VECT_BUF - vector of buffer
      402       16               OUTPUT: specified record read into buffer
      403       17               DESCRIPTION: The specified record is read into the specified buffer.
      404       18        */
      405       19        /***********************************************************************/
      406       20        CPJ$READ_S: PROC(DCB#,VECT_KEY,VECT_BUF) ALTRET;
      407       21                   %INCLUDE B$JIT;
      408      311                   %INCLUDE CP_6;
      409      392                   %INCLUDE CP_MACROS_C;
      410     1144                   %INCLUDE B_MACROS_C;
      411     1255                   %INCLUDE XU_MACRO_C;
      412     4361                   %INCLUDE CP_DATA_R;
      413     6924                   %INCLUDE CP_6_SUBS;
      414     7464             /***** Parameters *****/
      415     7465    1   DCL DCB# UBIN WORD;
      416     7466        %VECTOR (NAME=VECT_KEY,STCLASS=DALIGNED);
      417     7476        %VECTOR (NAME=VECT_BUF,STCLASS=DALIGNED);
      418     7486             /***** Fpts *****/
      419     7487        %FPT_READ (FPTN=FPT_READ,STCLASS=AUTO);
      420     7526             /***** Based structures *****/
      421     7527        %B$TCB (STCLASS="BASED(B$TCB$)");
      422     7530        %B$EXCFR;
      423     7548    1   CPJ$READ_REC: ENTRY(DCB#,VECT_KEY,VECT_BUF) ALTRET;
PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:73   
      424     7549        %EJECT;
PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:74   
      425     7550    1     FPT_READ = CFPT_READ;
      426     7551    1     FPT_READ.V_ = VECTOR(FPT_READ.V);
      427     7552    1     FPT_READ.KEY_ = VECT_KEY;
      428     7553    1     FPT_READ.BUF_ = VECT_BUF;
      429     7554    1     FPT_READ.V.KEYS# = %YES#;
      430     7555    1     FPT_READ.V.DCB# = DCB#;
      431     7556    1     CALL M$READ (FPT_READ) ALTRET(E_READ);
      432     7557    1     RETURN;
      433     7558        /**/
      434     7559    1   E_READ:
      435     7560    1     B$JIT.USRERR = B$TCB.ALT$ -> B$EXCFR.ERR;
      436     7561    1     ALTRETURN;
      437     7562    1   END CPJ$READ_S;
      438     7563                   %EOD;

PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:75   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPJ$READ_S.

   Procedure CPJ$READ_S requires 35 words for executable code.
   Procedure CPJ$READ_S requires 22 words of local(AUTO) storage.

PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:76   

 Object Unit name= CPJ$READ_S                                 File name= CPJ$SUBR.:E05TOU
 UTS= JUL 29 '97 11:54:24.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    35     43  CPJ$READ_S
    2  RoData even  none     1      1  CPJ$READ_S

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  CPJ$READ_S
     1      3          yes     yes      Std        3  CPJ$READ_REC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_READ                        r    B$JIT$
r    B$TCB$
PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:77   


      387        1        /*T***********************************************************/
      388        2        /*T*                                                         */
      389        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      390        4        /*T*                                                         */
      391        5        /*T***********************************************************/
      392        6        /**********************************************************************/
      393        7        /*F*   NAME:   CPJ$READ_S
      394        8               PURPOSE: Read a record from the *S file
      395        9               DESCRIPTION: The specified record is read from the *S file.
      396       10        */
      397       11        /*D*   NAME:   CPJ$READ_S
      398       12               CALL:   CALL CPJ$READ_S(DCB#,VECT_KEY,VECT_BUF)
      399       13               INPUT:  DCB# - dcb through which read is to occur
      400       14                       VECT_KEY - vector of key to be read
      401       15                       VECT_BUF - vector of buffer
      402       16               OUTPUT: specified record read into buffer
      403       17               DESCRIPTION: The specified record is read into the specified buffer.
      404       18        */
      405       19        /***********************************************************************/
      406       20        CPJ$READ_S: PROC(DCB#,VECT_KEY,VECT_BUF) ALTRET;

     20  1 000000   000000 700200 xent  CPJ$READ_S   TSX0  ! X66_AUTO_3
         1 000001   000026 000003                    ZERO    22,3
         1 000002   000005 710000 1                  TRA     s:7550

      407       21                   %INCLUDE B$JIT;
      408      311                   %INCLUDE CP_6;
      409      392                   %INCLUDE CP_MACROS_C;
      410     1144                   %INCLUDE B_MACROS_C;
      411     1255                   %INCLUDE XU_MACRO_C;
      412     4361                   %INCLUDE CP_DATA_R;
      413     6924                   %INCLUDE CP_6_SUBS;
      414     7464             /***** Parameters *****/
      415     7465    1   DCL DCB# UBIN WORD;
      416     7466        %VECTOR (NAME=VECT_KEY,STCLASS=DALIGNED);
      417     7476        %VECTOR (NAME=VECT_BUF,STCLASS=DALIGNED);
PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:78   
      418     7486             /***** Fpts *****/
      419     7487        %FPT_READ (FPTN=FPT_READ,STCLASS=AUTO);
      420     7526             /***** Based structures *****/
      421     7527        %B$TCB (STCLASS="BASED(B$TCB$)");
      422     7530        %B$EXCFR;
      423     7548    1   CPJ$READ_REC: ENTRY(DCB#,VECT_KEY,VECT_BUF) ALTRET;

   7548  1 000003   000000 700200 xent  CPJ$READ_REC TSX0  ! X66_AUTO_3
         1 000004   000026 000003                    ZERO    22,3

      424     7549        %EJECT;
PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:79   
      425     7550    1     FPT_READ = CFPT_READ;

   7550  1 000005   000100 100400                    MLR     fill='000'O
         1 000006   000000 000070 xsym               ADSC9   CFPT_READ                cn=0,n=56
         1 000007   200006 000070                    ADSC9   FPT_READ,,AUTO           cn=0,n=56

      426     7551    1     FPT_READ.V_ = VECTOR(FPT_READ.V);

   7551  1 000010   000000 235000 2                  LDA     0
         1 000011   200024 452500                    STP2    FPT_READ+14,,AUTO
         1 000012   200024 236100                    LDQ     FPT_READ+14,,AUTO
         1 000013   000016 036003                    ADLQ    14,DU
         1 000014   200006 757100                    STAQ    FPT_READ,,AUTO

      427     7552    1     FPT_READ.KEY_ = VECT_KEY;

   7552  1 000015   200004 470500                    LDP0    @VECT_KEY,,AUTO
         1 000016   000000 237100                    LDAQ    0,,PR0
         1 000017   200010 757100                    STAQ    FPT_READ+2,,AUTO

      428     7553    1     FPT_READ.BUF_ = VECT_BUF;

   7553  1 000020   200005 471500                    LDP1    @VECT_BUF,,AUTO
         1 000021   100000 237100                    LDAQ    0,,PR1
         1 000022   200012 757100                    STAQ    FPT_READ+4,,AUTO

      429     7554    1     FPT_READ.V.KEYS# = %YES#;

   7554  1 000023   200000 236007                    LDQ     65536,DL
         1 000024   200016 256100                    ORSQ    FPT_READ+8,,AUTO

      430     7555    1     FPT_READ.V.DCB# = DCB#;

   7555  1 000025   200003 473500                    LDP3    @DCB#,,AUTO
         1 000026   300000 720100                    LXL0    0,,PR3
         1 000027   200016 740100                    STX0    FPT_READ+8,,AUTO

PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:80   
      431     7556    1     CALL M$READ (FPT_READ) ALTRET(E_READ);

   7556  1 000030   200006 630500                    EPPR0   FPT_READ,,AUTO
         1 000031   440000 713400                    CLIMB   alt,read
         1 000032   401400 401760                    pmme    nvectors=4
         1 000033   000035 702000 1                  TSX2    E_READ

      432     7557    1     RETURN;

   7557  1 000034   000000 702200 xent               TSX2  ! X66_ARET

      433     7558        /**/
      434     7559    1   E_READ:
      435     7560    1     B$JIT.USRERR = B$TCB.ALT$ -> B$EXCFR.ERR;

   7560  1 000035   000000 470400 xsym  E_READ       LDP0    B$TCB$
         1 000036   000000 471500                    LDP1    0,,PR0
         1 000037   100102 236100                    LDQ     66,,PR1
         1 000040   000000 473400 xsym               LDP3    B$JIT$
         1 000041   300144 756100                    STQ     100,,PR3

      436     7561    1     ALTRETURN;

   7561  1 000042   000000 702200 xent               TSX2  ! X66_AALT
      437     7562    1   END CPJ$READ_S;
      438     7563                   %EOD;

PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:81   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPJ$READ_S.
PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:82   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @VECT_BUF
     4-0-0/w PTR         r     1 @VECT_KEY                 *0-0-0/w UBIN        r     1 DCB#
     6-0-0/d STRC(504)   r     1 FPT_READ                  *0-0-0/d STRC(72)    r     1 VECT_BUF
    *0-0-0/d STRC(72)    r     1 VECT_KEY

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(504)   r     1 CFPT_READ

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$EXCFR                    0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB


   Procedure CPJ$READ_S requires 35 words for executable code.
   Procedure CPJ$READ_S requires 22 words of local(AUTO) storage.
PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:83   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:84   
          MINI XREF LISTING

B$EXCFR.ASL
      7531**DCL      7531--REDEF
B$EXCFR.ERR
      7545**DCL      7560>>ASSIGN
B$EXCFR.ERR.ERR#
      7545**DCL      7545--REDEF
B$EXCFR.EVID
      7544**DCL      7544--REDEF    7545--REDEF
B$EXCFR.IR
      7532**DCL      7532--REDEF
B$EXCFR.PREVSZ
      7531**DCL      7531--REDEF
B$EXCFR.SUBC
      7543**DCL      7543--REDEF    7544--REDEF    7544--REDEF
B$JIT.CPFLAGS1.SLEAZE
       129**DCL       129--REDEF
B$JIT.ERR.MID
        36**DCL        36--REDEF
B$JIT.JRESPEAK
       197**DCL       198--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       306**DCL       306--REDEF     307--REDEF
B$JIT.PNR
       210**DCL       210--REDEF
B$JIT.TSLINE
       304**DCL       305--REDEF
B$JIT.USRERR
       171**DCL      7560<<ASSIGN
B$JIT$
      6857**DCL        30--IMP-PTR  7560>>ASSIGN
B$TCB.ALT$
      7528**DCL      7560>>ASSIGN
PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:85   
B$TCB$
      6859**DCL      7528--IMP-PTR  7560>>ASSIGN
CAMR_REC.ACSVEH_
      5896**DCL      5897--REDEF
CAMR_REC.ALTKEYS_
      5902**DCL      5903--REDEF    5903--REDEF
CAMR_REC.HDR_
      5901**DCL      5902--REDEF
CAMR_REC.TAB_
      5900**DCL      5901--REDEF
CAMR_REC.UHL_
      5894**DCL      5895--REDEF    5895--REDEF
CAMR_REC.V.FSN#
      5934**DCL      5934--REDEF    5934--REDEF
CAMR_REC.WSN_
      5900**DCL      5900--REDEF
CFPT_CLOSE.SN_
      4738**DCL      4738--REDEF
CFPT_CLOSE.UTL_
      4739**DCL      4739--REDEF
CFPT_CLOSE.V.EXPIRE#
      4753**DCL      4753--REDEF
CFPT_CLOSE.V.TYPE#
      4751**DCL      4751--REDEF
CFPT_CLOSE.V.XTNSIZE#
      4748**DCL      4748--REDEF    4750--REDEF
CFPT_OPEN.ACSVEH_
      4673**DCL      4674--REDEF
CFPT_OPEN.ALTKEYS_
      4679**DCL      4680--REDEF    4680--REDEF
CFPT_OPEN.HDR_
      4678**DCL      4679--REDEF
CFPT_OPEN.TAB_
      4677**DCL      4678--REDEF
CFPT_OPEN.UHL_
      4671**DCL      4672--REDEF    4672--REDEF
PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:86   
CFPT_OPEN.V.FSN#
      4711**DCL      4711--REDEF    4711--REDEF
CFPT_OPEN.WSN_
      4677**DCL      4677--REDEF
CFPT_READ
      4774**DCL      7550>>ASSIGN
CFPT_READ.STATION_
      4777**DCL      4778--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      4789**DCL      4789--REDEF
CFPT_READ.V.INDX#
      4787**DCL      4787--REDEF
CFPT_READUC.STATION_
      5147**DCL      5148--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      5159**DCL      5159--REDEF
CFPT_READUC.V.INDX#
      5157**DCL      5157--REDEF
CFPT_TRTN.V.IR#
      5383**DCL      5384--REDEF
CFPT_WRITE.STATION_
      4815**DCL      4815--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      4822**DCL      4822--REDEF
CFPT_WRITEUC.STATION_
      5115**DCL      5115--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      5122**DCL      5122--REDEF
CFPT_XXX.V.STEPCC#
      6095**DCL      6095--REDEF
CGETCMD.OUT$
      6116**DCL      6122--REDEF
CVLP_TRMCTL.BREAKCOUNT
      5707**DCL      5708--REDEF
CVLP_WINDOW.FWINDOW#
      5803**DCL      5803--REDEF    5804--REDEF
PL6.E3A0      #003=CPJ$READ_S File=CPJ$SUBR.:E05TSI                              TUE 07/29/97 11:54 Page:87   
DCB#
      7465**DCL        20--PROC     7548--ENTRY    7555>>ASSIGN
E_READ
      7560**LABEL    7556--CALLALT
FPT_READ
      7504**DCL      7550<<ASSIGN   7556<>CALL
FPT_READ.BUF_
      7506**DCL      7553<<ASSIGN
FPT_READ.KEY_
      7504**DCL      7552<<ASSIGN
FPT_READ.STATION_
      7507**DCL      7508--REDEF
FPT_READ.V
      7508**DCL      7551--ASSIGN
FPT_READ.V.DCB#
      7508**DCL      7555<<ASSIGN
FPT_READ.V.DVBYTE.REREAD#
      7519**DCL      7519--REDEF
FPT_READ.V.INDX#
      7517**DCL      7517--REDEF
FPT_READ.V.KEYS#
      7509**DCL      7554<<ASSIGN
FPT_READ.V_
      7504**DCL      7551<<ASSIGN
M$READ
       321**DCL-ENT  7556--CALL
VECT_BUF
      7477**DCL        20--PROC     7548--ENTRY    7553>>ASSIGN
VECT_KEY
      7467**DCL        20--PROC     7548--ENTRY    7552>>ASSIGN

PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:88   
      439        1        /*T***********************************************************/
      440        2        /*T*                                                         */
      441        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      442        4        /*T*                                                         */
      443        5        /*T***********************************************************/
      444        6        /**********************************************************************/
      445        7        /*F*   NAME:   CPJ$WRITE_S
      446        8               PURPOSE: Write a record to the *S file
      447        9               DESCRIPTION: The specified record is written to the *S file.
      448       10        */
      449       11        /*D*   NAME:   CPJ$WRITE_S
      450       12               CALL:   CALL CPJ$WRITE_S(DCB#,VECT_KEY,VECT_BUF)
      451       13               INPUT:  DCB# - dcb through which write is to occur
      452       14                       VECT_KEY - vector of key to be written
      453       15                       VECT_BUF - vector of buffer
      454       16               OUTPUT: specified record written to *S
      455       17               DESCRIPTION: The specified record is written to the *S file
      456       18        */
      457       19        /**********************************************************************/
      458       20        CPJ$WRITE_S: PROC(DCB#,VECT_KEY,VECT_BUF) ALTRET;
      459       21                   %INCLUDE B$JIT;
      460      311                   %INCLUDE CP_6;
      461      392                   %INCLUDE CP_MACROS_C;
      462     1144                   %INCLUDE B_MACROS_C;
      463     1255                   %INCLUDE XU_MACRO_C;
      464     4361                   %INCLUDE CP_DATA_R;
      465     6924                   %INCLUDE CP_6_SUBS;
      466     7464             /***** Parameters *****/
      467     7465    1   DCL DCB# UBIN WORD;
      468     7466        %VECTOR (NAME=VECT_KEY,STCLASS=DALIGNED);
      469     7476        %VECTOR (NAME=VECT_BUF,STCLASS=DALIGNED);
      470     7486             /***** Fpts *****/
      471     7487        %FPT_WRITE (FPTN=FPT_WRITE,STCLASS=AUTO);
      472     7518             /***** Based structures *****/
      473     7519        %B$TCB (STCLASS="BASED(B$TCB$)");
      474     7522        %B$EXCFR;
      475     7540    1   CPJ$WRITE_REC: ENTRY(DCB#,VECT_KEY,VECT_BUF) ALTRET;
PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:89   
      476     7541        %EJECT;
PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:90   
      477     7542    1     FPT_WRITE = CFPT_WRITE;
      478     7543    1     FPT_WRITE.V_ = VECTOR(FPT_WRITE.V);
      479     7544    1     FPT_WRITE.KEY_ = VECT_KEY;
      480     7545    1     FPT_WRITE.BUF_ = VECT_BUF;
      481     7546    1     FPT_WRITE.V.ONEWKEY# = %YES#;
      482     7547    1     FPT_WRITE.V.DCB# = DCB#;
      483     7548    1     CALL M$WRITE (FPT_WRITE) ALTRET(E_WRITE);
      484     7549    1     RETURN;
      485     7550        /**/
      486     7551    1   E_WRITE:
      487     7552    1     B$JIT.USRERR = B$TCB.ALT$ -> B$EXCFR.ERR;
      488     7553    1     ALTRETURN;
      489     7554    1   END CPJ$WRITE_S;

PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:91   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPJ$WRITE_S.

   Procedure CPJ$WRITE_S requires 35 words for executable code.
   Procedure CPJ$WRITE_S requires 20 words of local(AUTO) storage.

    No errors detected in file CPJ$SUBR.:E05TSI    .

PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:92   

 Object Unit name= CPJ$WRITE_S                                File name= CPJ$SUBR.:E05TOU
 UTS= JUL 29 '97 11:54:46.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    35     43  CPJ$WRITE_S
    2  RoData even  none     1      1  CPJ$WRITE_S

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  CPJ$WRITE_S
     1      3          yes     yes      Std        3  CPJ$WRITE_REC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_WRITE                       r    B$JIT$
r    B$TCB$
PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:93   


      439        1        /*T***********************************************************/
      440        2        /*T*                                                         */
      441        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      442        4        /*T*                                                         */
      443        5        /*T***********************************************************/
      444        6        /**********************************************************************/
      445        7        /*F*   NAME:   CPJ$WRITE_S
      446        8               PURPOSE: Write a record to the *S file
      447        9               DESCRIPTION: The specified record is written to the *S file.
      448       10        */
      449       11        /*D*   NAME:   CPJ$WRITE_S
      450       12               CALL:   CALL CPJ$WRITE_S(DCB#,VECT_KEY,VECT_BUF)
      451       13               INPUT:  DCB# - dcb through which write is to occur
      452       14                       VECT_KEY - vector of key to be written
      453       15                       VECT_BUF - vector of buffer
      454       16               OUTPUT: specified record written to *S
      455       17               DESCRIPTION: The specified record is written to the *S file
      456       18        */
      457       19        /**********************************************************************/
      458       20        CPJ$WRITE_S: PROC(DCB#,VECT_KEY,VECT_BUF) ALTRET;

     20  1 000000   000000 700200 xent  CPJ$WRITE_S  TSX0  ! X66_AUTO_3
         1 000001   000024 000003                    ZERO    20,3
         1 000002   000005 710000 1                  TRA     s:7542

      459       21                   %INCLUDE B$JIT;
      460      311                   %INCLUDE CP_6;
      461      392                   %INCLUDE CP_MACROS_C;
      462     1144                   %INCLUDE B_MACROS_C;
      463     1255                   %INCLUDE XU_MACRO_C;
      464     4361                   %INCLUDE CP_DATA_R;
      465     6924                   %INCLUDE CP_6_SUBS;
      466     7464             /***** Parameters *****/
      467     7465    1   DCL DCB# UBIN WORD;
      468     7466        %VECTOR (NAME=VECT_KEY,STCLASS=DALIGNED);
      469     7476        %VECTOR (NAME=VECT_BUF,STCLASS=DALIGNED);
PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:94   
      470     7486             /***** Fpts *****/
      471     7487        %FPT_WRITE (FPTN=FPT_WRITE,STCLASS=AUTO);
      472     7518             /***** Based structures *****/
      473     7519        %B$TCB (STCLASS="BASED(B$TCB$)");
      474     7522        %B$EXCFR;
      475     7540    1   CPJ$WRITE_REC: ENTRY(DCB#,VECT_KEY,VECT_BUF) ALTRET;

   7540  1 000003   000000 700200 xent  CPJ$WRITE_R* TSX0  ! X66_AUTO_3
         1 000004   000024 000003                    ZERO    20,3

      476     7541        %EJECT;
PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:95   
      477     7542    1     FPT_WRITE = CFPT_WRITE;

   7542  1 000005   000100 100400                    MLR     fill='000'O
         1 000006   000000 000060 xsym               ADSC9   CFPT_WRITE               cn=0,n=48
         1 000007   200006 000060                    ADSC9   FPT_WRITE,,AUTO          cn=0,n=48

      478     7543    1     FPT_WRITE.V_ = VECTOR(FPT_WRITE.V);

   7543  1 000010   000000 235000 2                  LDA     0
         1 000011   200022 452500                    STP2    FPT_WRITE+12,,AUTO
         1 000012   200022 236100                    LDQ     FPT_WRITE+12,,AUTO
         1 000013   000016 036003                    ADLQ    14,DU
         1 000014   200006 757100                    STAQ    FPT_WRITE,,AUTO

      479     7544    1     FPT_WRITE.KEY_ = VECT_KEY;

   7544  1 000015   200004 470500                    LDP0    @VECT_KEY,,AUTO
         1 000016   000000 237100                    LDAQ    0,,PR0
         1 000017   200010 757100                    STAQ    FPT_WRITE+2,,AUTO

      480     7545    1     FPT_WRITE.BUF_ = VECT_BUF;

   7545  1 000020   200005 471500                    LDP1    @VECT_BUF,,AUTO
         1 000021   100000 237100                    LDAQ    0,,PR1
         1 000022   200012 757100                    STAQ    FPT_WRITE+4,,AUTO

      481     7546    1     FPT_WRITE.V.ONEWKEY# = %YES#;

   7546  1 000023   000400 236007                    LDQ     256,DL
         1 000024   200016 256100                    ORSQ    FPT_WRITE+8,,AUTO

      482     7547    1     FPT_WRITE.V.DCB# = DCB#;

   7547  1 000025   200003 473500                    LDP3    @DCB#,,AUTO
         1 000026   300000 720100                    LXL0    0,,PR3
         1 000027   200016 740100                    STX0    FPT_WRITE+8,,AUTO

PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:96   
      483     7548    1     CALL M$WRITE (FPT_WRITE) ALTRET(E_WRITE);

   7548  1 000030   200006 630500                    EPPR0   FPT_WRITE,,AUTO
         1 000031   440001 713400                    CLIMB   alt,write
         1 000032   401400 401760                    pmme    nvectors=4
         1 000033   000035 702000 1                  TSX2    E_WRITE

      484     7549    1     RETURN;

   7549  1 000034   000000 702200 xent               TSX2  ! X66_ARET

      485     7550        /**/
      486     7551    1   E_WRITE:
      487     7552    1     B$JIT.USRERR = B$TCB.ALT$ -> B$EXCFR.ERR;

   7552  1 000035   000000 470400 xsym  E_WRITE      LDP0    B$TCB$
         1 000036   000000 471500                    LDP1    0,,PR0
         1 000037   100102 236100                    LDQ     66,,PR1
         1 000040   000000 473400 xsym               LDP3    B$JIT$
         1 000041   300144 756100                    STQ     100,,PR3

      488     7553    1     ALTRETURN;

   7553  1 000042   000000 702200 xent               TSX2  ! X66_AALT
      489     7554    1   END CPJ$WRITE_S;

PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:97   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPJ$WRITE_S.
PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:98   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @VECT_BUF
     4-0-0/w PTR         r     1 @VECT_KEY                 *0-0-0/w UBIN        r     1 DCB#
     6-0-0/d STRC(432)   r     1 FPT_WRITE                 *0-0-0/d STRC(72)    r     1 VECT_BUF
    *0-0-0/d STRC(72)    r     1 VECT_KEY

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(432)   r     1 CFPT_WRITE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$EXCFR                    0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB


   Procedure CPJ$WRITE_S requires 35 words for executable code.
   Procedure CPJ$WRITE_S requires 20 words of local(AUTO) storage.

    No errors detected in file CPJ$SUBR.:E05TSI    .
PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:99   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:100  
          MINI XREF LISTING

B$EXCFR.ASL
      7523**DCL      7523--REDEF
B$EXCFR.ERR
      7537**DCL      7552>>ASSIGN
B$EXCFR.ERR.ERR#
      7537**DCL      7537--REDEF
B$EXCFR.EVID
      7536**DCL      7536--REDEF    7537--REDEF
B$EXCFR.IR
      7524**DCL      7524--REDEF
B$EXCFR.PREVSZ
      7523**DCL      7523--REDEF
B$EXCFR.SUBC
      7535**DCL      7535--REDEF    7536--REDEF    7536--REDEF
B$JIT.CPFLAGS1.SLEAZE
       129**DCL       129--REDEF
B$JIT.ERR.MID
        36**DCL        36--REDEF
B$JIT.JRESPEAK
       197**DCL       198--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       306**DCL       306--REDEF     307--REDEF
B$JIT.PNR
       210**DCL       210--REDEF
B$JIT.TSLINE
       304**DCL       305--REDEF
B$JIT.USRERR
       171**DCL      7552<<ASSIGN
B$JIT$
      6857**DCL        30--IMP-PTR  7552>>ASSIGN
B$TCB.ALT$
      7520**DCL      7552>>ASSIGN
PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:101  
B$TCB$
      6859**DCL      7520--IMP-PTR  7552>>ASSIGN
CAMR_REC.ACSVEH_
      5896**DCL      5897--REDEF
CAMR_REC.ALTKEYS_
      5902**DCL      5903--REDEF    5903--REDEF
CAMR_REC.HDR_
      5901**DCL      5902--REDEF
CAMR_REC.TAB_
      5900**DCL      5901--REDEF
CAMR_REC.UHL_
      5894**DCL      5895--REDEF    5895--REDEF
CAMR_REC.V.FSN#
      5934**DCL      5934--REDEF    5934--REDEF
CAMR_REC.WSN_
      5900**DCL      5900--REDEF
CFPT_CLOSE.SN_
      4738**DCL      4738--REDEF
CFPT_CLOSE.UTL_
      4739**DCL      4739--REDEF
CFPT_CLOSE.V.EXPIRE#
      4753**DCL      4753--REDEF
CFPT_CLOSE.V.TYPE#
      4751**DCL      4751--REDEF
CFPT_CLOSE.V.XTNSIZE#
      4748**DCL      4748--REDEF    4750--REDEF
CFPT_OPEN.ACSVEH_
      4673**DCL      4674--REDEF
CFPT_OPEN.ALTKEYS_
      4679**DCL      4680--REDEF    4680--REDEF
CFPT_OPEN.HDR_
      4678**DCL      4679--REDEF
CFPT_OPEN.TAB_
      4677**DCL      4678--REDEF
CFPT_OPEN.UHL_
      4671**DCL      4672--REDEF    4672--REDEF
PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:102  
CFPT_OPEN.V.FSN#
      4711**DCL      4711--REDEF    4711--REDEF
CFPT_OPEN.WSN_
      4677**DCL      4677--REDEF
CFPT_READ.STATION_
      4777**DCL      4778--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      4789**DCL      4789--REDEF
CFPT_READ.V.INDX#
      4787**DCL      4787--REDEF
CFPT_READUC.STATION_
      5147**DCL      5148--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      5159**DCL      5159--REDEF
CFPT_READUC.V.INDX#
      5157**DCL      5157--REDEF
CFPT_TRTN.V.IR#
      5383**DCL      5384--REDEF
CFPT_WRITE
      4813**DCL      7542>>ASSIGN
CFPT_WRITE.STATION_
      4815**DCL      4815--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      4822**DCL      4822--REDEF
CFPT_WRITEUC.STATION_
      5115**DCL      5115--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      5122**DCL      5122--REDEF
CFPT_XXX.V.STEPCC#
      6095**DCL      6095--REDEF
CGETCMD.OUT$
      6116**DCL      6122--REDEF
CVLP_TRMCTL.BREAKCOUNT
      5707**DCL      5708--REDEF
CVLP_WINDOW.FWINDOW#
      5803**DCL      5803--REDEF    5804--REDEF
PL6.E3A0      #004=CPJ$WRITE_S File=CPJ$SUBR.:E05TSI                             TUE 07/29/97 11:54 Page:103  
DCB#
      7465**DCL        20--PROC     7540--ENTRY    7547>>ASSIGN
E_WRITE
      7552**LABEL    7548--CALLALT
FPT_WRITE
      7504**DCL      7542<<ASSIGN   7548<>CALL
FPT_WRITE.BUF_
      7504**DCL      7545<<ASSIGN
FPT_WRITE.KEY_
      7504**DCL      7544<<ASSIGN
FPT_WRITE.STATION_
      7506**DCL      7506--REDEF
FPT_WRITE.V
      7507**DCL      7543--ASSIGN
FPT_WRITE.V.DCB#
      7507**DCL      7547<<ASSIGN
FPT_WRITE.V.DVBYTE.VFC#
      7513**DCL      7513--REDEF
FPT_WRITE.V.ONEWKEY#
      7509**DCL      7546<<ASSIGN
FPT_WRITE.V_
      7504**DCL      7543<<ASSIGN
M$WRITE
       321**DCL-ENT  7548--CALL
VECT_BUF
      7477**DCL        20--PROC     7540--ENTRY    7545>>ASSIGN
VECT_KEY
      7467**DCL        20--PROC     7540--ENTRY    7544>>ASSIGN
