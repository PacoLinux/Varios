LARK (Laurie's Administrative Routines for "Komgroups") is a tool that allows
interactive usage of comgroups to perform comgroup operations that normally can
be done only through the implementation of specialized code.  LARK allows
creation, modification, and display of comgroups and their parameters and then
permits the operation of comgroup-connected stations with defined functions to
perform or simulate various applications.
 
Full command line syntax:
 
!LARK.X
 
Try
    HELP (LARK.X) COMMANDS for a complete list of LARK commands;
    HELP (LARK.X) command for information about a specific command;
    HELP (LARK.X) command PARM for the command parameters;
    HELP (LARK.X) command DESC for the command description;
    HELP (LARK.X) command OPT for the command option definitions;
    HELP (LARK.X) CONCEPTS for concepts in using LARK;
    HELP (LARK.X) INTERNAL_DESIGN for a description of how LARK works;
    HELP (LARK.X) LIMITATIONS for a description of LARK's limitations;
    HELP (LARK.X) TOPICS for a complete list of HELP topics.
 
HELP file for: LARK.X
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
ABORT syntax:
 
ABO/RT [ STA/TION = ] station
 
Parameters:
 
station        specifies the functional station to be aborted
 
The ABORT station command causes the ghost user associated with the defined
station to terminate.  Thus, both the functional and control stations are
disconnected from the comgroup.
 
Options:
 
none
 
00002
00003
00001
00001
ACTIVATE syntax:
 
ACT/IVATE [ [ COMG/ROUP|CG = ] comgroup_fid ] ( activate_options [ ) ]
 
Parameters:
 
comgroup_fid   is a legal comgroup FID
activate_options specifies one or more options separated by commas
 
The ACTIVATE command activates the specified station which is connected to the
selected comgroup.  This command is performed by the LARK temporary station,
which opens to the comgroup, performs the M$ACTIVATE, and disconnects.  Because
of this, the ACTIVATE command cannot be used to convert a terminal station into
a pure or transformed FPRG station.
 
Options:
 
ABTE/T = Y/ES|N/O
      Specifies whether or not the TYC value specified in ABTREAD is to be
      permanent.
 
ABTR/EAD = tyc
      Specifies the octal TYC value with which the target DCB's next or
      pending read will be aborted.
 
ATTR = attribute
      Specifies the mask of required attributes for the resource that is to be
      connected to the comgroup.
 
BIN = Y/ES|N/O
      Specifies whether or not the data is to read as a string of bits
      instead of characters.
 
CONN/ECTRES = Y/ES|N/O
      Specifies whether or not the resource specified by RES and ATTR will be
      connected to the comgroup with the station name specified.
 
FL/USH = Y/ES|N/O
      Specifies whether or not to flush the list of messages waiting to go the
      target station.
 
MAXRD = number
      Specifies the maximum number of reads that a FEP can have outstanding
      to a terminal station.
 
MINRD = number
      Specifies the minumum number of reads that a FEP can have outstanding
      to a terminal station.
 
REREAD = Y/ES|N/O
      Specifies whether or not the previous input line is to be echoed and
      set to the current input line.
 
RES = resource
      Specifies the four character resource name that is to be connected to
      the comgroup.
 
STA/TION = station
      Specifies the name of the station to activate.  This option must be
      supplied or the command will not be executed.
 
TRANS = Y/ES|N/O
      Specifies whether or not data is to be read without translation.
 
00002
00003
00001
00001
CLOSE syntax:
 
CLO/SE [ [ ( ] close_option [ ) ] ]
 
Parameters:
 
close_option   specifies required information to close the station
 
The CLOSE command closes the LARK control station which was opened using the
OPEN command.
 
Options:
 
STA/TION = station_name
      Specifies the name of the LARK control station which was
      previously opened using the OPEN command.  If this station name
      is provided, it is verified to be correct before the station is
      closed.
 
00002
00003
00001
00001
Current LARK capabilities are as follows:
 
ABO/RT   causes a functional station and its ghost user to terminate
ACT/IVATE allows the activation of a comgroup station connected to the
         comgroup
CLO/SE   allows closing the LARK control station previously opened via the
         OPEN command
CON/NECT causes a defined functional station to connect to the comgroup
CRE/ATE  allows the creation of a new comgroup with selected options
DEA/CTIVATE allows the deactivation or disconnection of a comgroup station
         connected to the comgroup
DEF/INE  allows the definition and creation of a functional station
DEL/ETE  allows the deletion of an existing comgroup
DISC/ONNECT causes a defined, connected functional station to disconnect from
         the comgroup
DI/SPLAY allows the display of various parameters associated with a comgroup
MOD/IFY  allows the modification of various parameters associated with a
         comgroup
OPE/N    allows opening the LARK control station to a selected comgroup
PA/USE   causes LARK to wait for some specified amount of time
RES/UME  causes a defined, connected functional station to begin or resume its
         defined function
SEL/ECT  allows the selection of a specific comgroup FID for commands not
         providing the optional comgroup FID,  the name of LARK's temporary
         station, and whether or not DISPLAY is done using an AU station
SETP/ROFILE allows changing the profile assigned to a terminal station
STARTF/PRG starts an FPRG and makes it into a transformed FPRG station
STA/TUS  allows the display of the current status of a defined functional
         station and its corresponding control station
STOPF/PRG stops a an FPRG and deactivates its station
SUS/PEND causes a defined, connected, running functional station to halt its
         activity and wait
<CR>     causes LARK to check for the arrival of any new control messages
 
Use E/ND, Q/UIT, or X/IT to exit from LARK.
 
LARK is intended to allow the user to manipulate comgroups in various ways
without requiring him to perform the tedious job of code implementation.  LARK
performs this function by using general code which makes use of user-supplied
parameters to meet specific needs.
 
Several types of comgroup tasks are performed by LARK.  One group of commands
allows comgroup file manipulation, including creation and deletion of
comgroups, as well as modification and display of the various comgroup control
parameters.  Another set of commands support one-time tasks, such as station
deactivation and modification of station profile.  The last category of
commands provides the ability to connect actual stations to a comgroup which
perform tasks defined by the user.
 
Because LARK is able to perform such a variety of comgroup tasks, several uses
exist for it.  It can be used with existing comgroup applications to display
and modify parameter values and monitor the operation of the application, which
is useful when tuning an application.  Effects of station additions to an
existing application can be observed by using LARK to attach functioning
stations to the actual application.  In some cases, LARK may be used to provide
a temporary solution when use of a comgroup is necessary, but implementing the
actual code to perform the required comgroup function is not desirable.  An
important use for LARK is that of designing, testing, and tuning a comgroup
application prior to developing the actual code for that application.
 
There are three stages in the development of a comgroup application.  The first
stage, that of creating and setting up a comgroup file, can be accomplished by
using the CREATE command followed by the MODIFY command.  DISPLAY can be used
to ensure that the comgroup has been organized properly.  The next stage
involves defining tasks for the various stations that will be connected to the
comgroup.  Before this can be done, OPEN must be used to connect LARK's control
station.  If terminal stations are needed, they should be connected.  Then, the
DEFINE command is used to describe the personality and task of each functional
station.  The final stage includes the actual operation of the application.
The defined stations are connected to the comgroup via the CONNECT command and
started by the RESUME command.  Their performance can be monitored by the use
of the STATUS command.  Any cleanup required may be accomplished simply by
exiting LARK, although various commands do exist for cleanup, including ABORT
and CLOSE.
 
CONNECT syntax:
 
CON/NECT [ STA/TION = ] station
 
Parameters:
 
station        specifies the name of the functional station to be connected to
               the current comgroup
 
The CONNECT command connects (opens) a previously defined functional station to
the currently selected comgroup.  The function to be performed by the station
is not started at this point;  the station is in suspended mode when first
connected.
 
00002
00001
00001
CREATE syntax:
 
CRE/ATE [ COMG/ROUP|CG = ] comgroup_fid [ ( create_options [ ) ] ]
 
Parameters:
 
comgroup_fid   is a legal comgroup FID
create_options specifies one or more options separated by commas
 
The CREATE command creates a comgroup using the parameters specified in the
command.  It sets all comgroup parameters to their default values.
 
Options:
 
A/CCT = account_name [ ( access_options ) ]
      Specifies a given account or group of accounts and the
      associated access attributes to the comgroup being created.
      This option can be used multiple times to define different
      accesses for different accounts or groups of accounts.
      Access_options specify one or more access options, separated
      by commas, in the form:
         access_option = { Y/ES | N/O }
      and access_options can be chosen from the following list:
         AU       AURD     DELF     DELR     EXEC     NOLIST
         READ     REATTR   TCTL     UPD      WNEW
      All of the access options default to NO.
 
EXI/ST = { ERR/OR | NEW/FILE }
      Specifies the steps to be taken at comgroup creation time if
      a file of the given name already exists.  The ERROR option
      signifies that if the specified file already exists, an error
      will be reported and the new comgroup will not be created.
      The NEWFILE option will allow the new comgroup to be created,
      even if another file by that name exists.  The default is
      ERROR.
 
EXP/IRE = { NEV/ER | number_of_days }
      Specifies the number of days to retain the comgroup or that
      the comgroup is never to expire.  The default is NEVER.
 
I/XTNSIZE = size_in_granules
      Specifies the size in granules of the initial extent.  The
      default is 30 granules.
 
J/OURNAL = { Y/ES | N/O }
      Specifies that the system access ghost should journal this
      comgroup.  The default is NO.
 
Q/ISS = { Y/ES | N/O }
      Specifies the queue tree to be the station tree (YES) or the
      message type tree (NO).  The default is NO.
 
00002
00003
00001
00001
DEACTIVATE syntax:
 
DEA/CTIVATE [ [ COMG/ROUP|CG = ] comgroup_fid ] ( deactivate_options [ ) ]
 
Parameters:
 
comgroup_fid   is a legal comgroup FID
deactivate_options specifies one or more options separated by commas
 
The DEACTIVATE command deactivates the specified station which is connected to
the selected comgroup.  This command is performed by the LARK temporary
station, which opens to the comgroup, performs the M$DEACTIVATE, and
disconnects.
 
Options:
 
DISC/ONNECT = Y/ES|N/O
      Specifies whether or not the given station is to be disconnected upon
      deactivation.
 
DSCGO = Y/ES|N/O
      Specifies whether or not disconnect permission is being given.
 
FL/USH = Y/ES|N/O
      Specifies whether or not to flush the list of messages waiting to go to
      the target station.
 
STA/TION = station
      Specifies the name of the station to deactivate.  This option must be
      supplied or the command will not be executed.
 
00002
00003
00001
00001
DEFINE syntax:
 
DEF/INE [ STA/TION = ] station ( define_options [ ) ]
 
Parameters:
 
station        specifies the functional station to be defined
define_options specifies one or more options separated by commas
 
The DEFINE command allows the definition of the functions to be performed by
this functional station.  When this command is performed, a ghost user is
started which automatically connects a control station to the selected
comgroup.  The control station is used to communicate with LARK's control
station in controlling the actions of the functional station.  If a previous
DEFINE command was given which started the ghost user for this functional
station, the existing ghost user is used.
 
The execution of the DEFINE command does not cause the functional station to be
connected to the comgroup.  The CONNECT command must be used for that.
 
Options:
 
A/DMINISTRATION
      Specifies that various parameters controlling the overall actions of the
      functional station be set.
      At the second command level, ADMIN parameters can be specified in the
      following forms:
 
         admin_parm_y/n = { Y/ES | N/O }
         where admin_parm_y/n can be:
            ABORTONCOMP/LETION | ABORTCOMP/LETION indicates whether or not the
               ghost user should be aborted on completion of the defined
               function (default=YES)
            AU indicates whether or not the functional station should be
               connected to the comgroup as the AU station;  the functional
               station currently does not perform any special AU functions
               (default=NO)
            DISCONCOMP/LETION | DISCCOMP/LETION indicates whether or not the
               functional station should be disconnected from the comgroup
               upon completion of the defined function (default=YES)
            NEWDEFONCOMP/LETION | NEWDEFCOMP/LETION indicates whether or not a
               new DEFINE command must be done when the functional station has
               completed its task;  useful only when ABORTONCOMP=NO
               (default=YES)
 
         admin_end_cmd
            E/ND        EX/IT       Q/UIT       X/IT
 
C/ONTROL
      Specifies that various parameters affecting the ghost user and the
      associated control station be set.
      At the second command level, the following CONTROL parameters can be
      specified:
         ACCT | ACCO/UNT = logon_account
            logon_account is a valid CP6 account name which will be the
            account to be used by the ghost user
            (default=current time-sharing account)
         NAME = logon_name
            logon_name is a valid CP6 name which will be the name to be used
            by the ghost user (default=current timesharing account logon)
         PASS/WORD = logon_password
            logon_password is the valid password for the account being used
            (default=current timesharing account logon)
         STA/TION = station
            station is the station name to be used by the control station
            for this ghost user.  If this parameter is not supplied, a station
            name in the form of $CONxxxx is supplied.
 
         control_end_cmd
            E/ND        EX/IT       Q/UIT       X/IT
 
R/EAD
      Specifies that various parameters controlling the functional station's
      read functions are to be set.
      At the second command level, READ parameters can be specified in the
      following forms:
         read_parm_y/n = { Y/ES | N/O }
         where read_parm_y/n can be:
            ABORTONERR/OR | ABORTERR/OR indicates whether or not the ghost
               user should be aborted if an error occurs on a read
               (default=NO)
            BIN indicates whether or not the data is presented as a string of
               bits (default=NO)
            CONT indicates whether or not this is a continued read
               (default=NO)
            NEWMESSAGEFILE | NEWMSGFILE indicates whether or not an existing
               file should be replaced by the new message file (default=NO)
            TRANS indicates whether or not the data is to be read without
               translation (transparency) (default=NO)
            WAIT indicates whether or not the read operation is to be
               completed before control is returned to the ghost user
               (default=YES)
 
         read_parm_num = numeric_value
         where read_parm_num can be:
            FREQUENCY indicates the number of seconds to wait between issuing
               reads (default=0)
            LENGTHMAX | LENMAX indicates the length in bytes of the largest
               record to be read (default=1024)
            NUMBEROPS | NUMOPS indicates the number of reads to be performed
               (default=1)
 
         read_parm_fid = fid
         where read_parm_fid can be:
            MESSAGEFILE | MSGFILE indicates the fid of a file to be created
               which will contain all the messages read by this functional
               station; if the file exists and NEWMSGFILE = YES, the existing
               file will be overwritten, otherwise an error will be returned
               by LARKETTE  (default='')
 
         read_end_cmd
            E/ND        EX/IT       Q/UIT       X/IT
 
RS/TATION
      Specifies that the parameters associated with the functional station's
      read VLP_STATION be set.
      At the second command level, RSTA parameters can be specified in one of
      the following forms:
 
         rstation_parm_y/n = { Y/ES | N/O }
         where rstation_parm_y/n can be:
            ALLABSENT   ALLDCBS     ALLTRMS     ANYDCB      DIRONLY
            EOFNONE     EOFONE      LATCH       LOCK        WAS
 
         rstation_parm_msg = msgtype
         where rstation_parm_msg can be:
            MSGTYP
 
         rstation_parm_sta = station
         where rstation_parm_sta can be:
            STATION
 
         rstation_parm_sec = number_of_seconds
         where rstation_parm_sec can be;
            EOFTIME
 
         rstation_end_cmd
            E/ND        EX/IT       Q/UIT       X/IT
 
SE/TSTA
      Specifies that the VLP_SETSTA parameters associated with the functional
      station be set.
      At the second command level, SETSTA parameters can be specified in
      one of the following forms:
 
         setsta_parm_y/n = { Y/ES | N/O }
         where setsta_parm_y/n can be:
            ALLABSENT   ALLDCBS     ALLTRMS     ANYDCB      DIRONLY
            EOFNONE     EOFONE      ILATCH      ILOCK       OLATCH
            OLOCK       WAS
 
         setsta_parm_msg = msgtype
         where setsta_parm_msg can be:
            IMSGTYP     OMSGTYP
 
         setsta_parm_sta = station
         where setsta_parm_sta can be:
            ISTATION    OSTATION
 
         setsta_parm_sec = number_of_seconds
         where setsta_parm_sec can be;
            EOFTIME
 
         setsta_end_cmd
            E/ND        EX/IT       Q/UIT       X/IT
 
W/RITE
      Specifies that various parameters controlling the functional station's
      write functions are to be set.
      At the second command level, WRITE parameters can be specified in the
      following forms:
         write_parm_y/n = { Y/ES | N/O }
         where write_parm_y/n can be:
            ABORTONERR/OR | ABORTERR/OR indicates whether or not the ghost
               user should be aborted if an error occurs on a write
               (default=NO)
            BIN indicates whether or not the data is presented as a string of
               bits (default=NO)
            CONT indicates whether or not this is a continued write
               (default=NO)
            TRANS indicates whether or not the data is to be written without
               translation (transparency) (default=NO)
            WAIT indicates whether or not the write operation is to be
               completed before control is returned to the ghost user
               (default=YES)
 
         write_parm_num = numeric_value
         where write_parm_num can be:
            FREQUENCY indicates the number of seconds to wait between issuing
               writes (default=0)
            LENGTHMAX | LENMAX indicates the length in bytes of the largest
               record to be written (default=1024)
            LENGTHMIN | LENMIN indicates the length in bytes of the smallest
               record to be written (default=1024)
            NUMBEROPS | NUMOPS indicates the number of writes to be performed;
               specifying 0 means read msgfile until EOF (default=1)
 
         write_parm_fid = fid
         where write_parm_fid can be:
            MESSAGEFILE | MSGFILE indicates the fid of a file to be read
               that contains all the messages to be written by this functional
               station;  if a message file is not designated, messages are
               generated by the ghost user containing consecutive numbers
               in the first 8 bytes of the record (default='')
 
         write_end_cmd
            E/ND        EX/IT       Q/UIT       X/IT
 
00002
00003
00001
00001
Because of the complexity of the tasks LARK performs, an additional program is
required to carry out the full range of capabilities provided.  LARKETTE is a
program invoked as a CP-6 ghost user by LARK.  A LARKETTE ghost must be started
each time a new DCB station is defined.  LARKETTE has two main
responsibilities.  One, of course, is to carry out the function defined for
this DCB station.  Since LARKETTE is a general program that can perform various
tasks for DCB stations, the task to be performed is specified by various
parameters sent from LARK.  Therefore, the second responsibility is to respond
to various types of messages sent from LARK.  In addition to function
definition, messages pertaining to station control and status requests must be
carried out.
 
Various types of stations are required by LARK to implement an application.
Their uses will be noted in the remainder of this section.  Their definitions
are as follows:
     control station (C):  a station used by LARK or LARKETTE
        necessary to perform overhead duties;
        this station may or may not be an AU
 
     temporary station (T):  a station used by LARK to perform
        duties which may require it to be an AU station
 
     functional station (F):  a station defined by the user to
        perform the user defined tasks
 
This following figure illustrates the connection of a comgroup functional
station to a comgroup.  The possible communication paths between the functional
station and other stations are illustrated.
 
                               ------
           _________          |      |           __________
          /_______ /|         |      |   ____   | LARKETTE |
         |        | |= = = = =| * * *|--|_F1_|--|   ghost  |
         |  LARK  | |         | *    |           ----------
         |________|/          | *    |
        /________ /           | *    |   __________
                              | * * *|--| terminal |
                              |      |  |  station |
                              |  CG  |   ----------
                               ------
 
In order to provide the wide range of capabilities, some portion of the total
comgroup usage is necessary for LARK's overhead.  The communication between
LARK and LARKETTE occurs through additional stations connected to the comgroup.
Also, temporary connections of an additional DCB station are required by LARK
to perform the comgroup file manipulations and one-time tasks, primarily done
during the initial setup.  This station is sometimes required to be the
administrative user of the comgroup.  Because of this requirement, this station
is only connected for the amount of time required to execute the given command.
 
The next figure illustrates that portion of comgroup usage required for LARK's
overhead.  The control communication path is shown, as well as a possible path
from the temporary station.  Additional communication may occur between LARK's
temporary station and the functional stations, which is not shown in this
diagram.
 
                               ------
           _________    ___   |      |   ____    __________
          /_______ /|--|_C_|--|* * * |--|_C1_|--| LARKETTE |
         |        | |   ___   |      |          |   ghost  |
         |  LARK  | |--|_T_|--|*     |           ----------
         |________|/          |  *   |
        /_________/           |    * |   __________
                              |      |--| terminal |
                              |      |  |  station |
                              |  CG  |   ----------
                               ------
 
Thus, a LARK comgroup application requires more usage of the comgroup than the
user might suspect.  However, the user need not be concerned with the stations
used for LARK's overhead;  their operation occurs automatically without his
intervention.  And, most of the use of these stations occurs during application
setup, so it shouldn't affect the user's application.  The complete LARK
comgroup application is shown in this last figure.
 
                            ------
        _________    ___   |      |   ____    __________
       /_______ /|--|_C_|--|      |--|_C1_|--| LARKETTE |
      |        | |   ___   |      |--|_F1_|--|   ghost  |
      |  LARK  | |--|_T_|--|      |           ----------
      |________|/          |      |
     /_________/           |      |   __________
                           |      |--| terminal |
                           |      |  |  station |
                           |  CG  |   ----------
                            ------
 
LARK.X
AID=SYSTEM_PROGRAMMING
AID=PROGRAMMING
COMGROUP
DEBUGGING
TESTING
TOOL=LARK
LARK (Laurie's Administrative Routines for "Komgroups") is a tool that allows
interactive usage of comgroups to perform comgroup operations that normally can
be done only through the implementation of specialized code.  LARK allows
creation, modification, and display of comgroups and their parameters and then
permits the operation of comgroup-connected stations with defined functions to
perform or simulate various applications.
 
