/*M* MULTIBAN - program to print Hershey fonts, banner style */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X* DDA */
HBAN:  PROC MAIN;
       %INCLUDE CP_6;
       %INCLUDE CP_6_SUBS;
       %INCLUDE MULTIBAN_C;
       %INCLUDE XU_MACRO_C;
       %INCLUDE B$JIT;
/* */
       %FPT_OPEN(DCB=M$LO);
       %FPT_WRITE(DCB=M$LO, BUF=BUFFER, VFC=YES);
       %FPT_WRITE(FPTN=WRITE_SYNERR, DCB=M$DO, BUF=BUF_SYNERR);
       %FPT_WRITE(FPTN=WRITE_HUH, DCB=M$DO, BUF=BUF_HUH);
       %FPT_WRITE(FPTN=WRITETOP, DCB=M$LO, BUF=TOPBUF, VFC=YES);
       %FPT_WRITE(FPTN=WRITE_BUF, DCB=M$LO, BUF=BUF);
       %FPT_WRITE(FPTN=WRITE_CARROT, DCB=M$DO, BUF=BUF);
       %FPT_TIME(DATE=DATE, TIME=TIME, DAY=DAY, DEST=LOCAL);
       %FPT_CLOSE(DCB=M$LO, DISP=SAVE);
/* */
       DCL M$LO DCB;
       DCL M$DO DCB;
/* */
       %XUR_INIT;
       %PARSE$SYM(NAME=OUT$SYM);
       %PARSE$OUT(NAME=OUT, STCLASS=BASED);
       %P$PCB(NAME=P$PCB, STCLASS="BASED(PCB$)");
       %F$DCB(BASED="BASED(DCB$)");
/* */
       %EQU YES=1;
       %EQU NO=0;
       %EQU VERTICAL=1;
       %EQU HORIZONTAL=0;
/* */
       DCL B$JIT$ PTR SYMREF;
       DCL OPT_LIST SBIN SYMREF;
/* */
       DCL XTBL(0:127) CHAR(1) CALIGNED STATIC INIT(' '*0);
       DCL BUF_SYNERR CHAR(0) CONSTANT INIT('Syntax error');
       DCL BUF_HUH CHAR(0) CONSTANT INIT(
'Font initilization failed, font probably doesn''t exist.');
       DCL TOPBUF CHAR(0) CONSTANT INIT('0');
/* */
       DCL XUR$INIT ENTRY(3) ALTRET;
       DCL XUR$GETCMD ENTRY(6) ALTRET;
       DCL INITBAN ENTRY(8) ALTRET;
       DCL GETBAN ENTRY(1) ALTRET;
/* */
       DCL 1 BUFFER STATIC,
            2 VFC CHAR(1) CALIGNED,
            2 TEXT CHAR(132) CALIGNED;
       DCL DATE CHAR(10) STATIC;
       DCL TIME CHAR(11) STATIC;
       DCL DAY CHAR(5) STATIC;
       DCL TEXT CHAR(80) STATIC;
       DCL BUF CHAR(256) STATIC;
       DCL SAVETEXT CHAR(80);
       DCL 1 OCHRS STATIC,
            2 CNT UBIN(9) CALIGNED,
            2 TEXT CHAR(79) CALIGNED;
       DCL CHAR1 CHAR(1) STATIC;
       DCL 1 FONT STATIC,
            2 SIZE UBIN(9) CALIGNED,
            2 TEXT CHAR(31) CALIGNED;
/* */
       DCL CSIZE SBIN STATIC;
       DCL COUNT SBIN STATIC;
       DCL SIZE SBIN STATIC;
       DCL I SBIN STATIC;
       DCL J SBIN STATIC;
       DCL N1 SBIN STATIC;
       DCL N2 SBIN STATIC;
       DCL ANDFLG SBIN STATIC;
       DCL ORIEN SBIN STATIC;
       DCL RATIO SBIN STATIC;
       DCL CENTER SBIN STATIC;
       DCL WIDTH STATIC SBIN;
       DCL SPACE SBIN STATIC;
/* */
       DCL PCB$ PTR STATIC;
       DCL BLK$ PTR STATIC;
       DCL OUT$ PTR STATIC;
       DCL DCB$ PTR STATIC;
/* */
       CALL M$OPEN(FPT_OPEN);
       DCB$=DCBADDR(DCBNUM(M$LO));
       WIDTH=F$DCB.WIDTH#;
       FONT.TEXT='SIMPROMMON';
       FONT.SIZE=10;
       CSIZE=7;
       COUNT=0;
       ANDFLG=0;
       ORIEN=%HORIZONTAL;
       RATIO=22;
       CENTER=%NO;
       OCHRS.CNT=3;
       OCHRS.TEXT='HIX';
       SPACE=2;
       TEXT=' ';
       SIZE=B$JIT.CCARS-B$JIT.CCDISP;
       IF SIZE = 0 THEN
          CALL M$EXIT;
       CALL INSERT(BUF, 0, 256,
          SUBSTR(B$JIT.CCBUF, B$JIT.CCDISP, SIZE));
 
       CALL XUR$INIT(XUR_INIT, PCB$);
       CALL XUR$GETCMD(OPT_LIST, BLK$,, BUF, SIZE) ALTRET(SYNERR);
 
       I=0;
       DO WHILE(I < BLK$->OUT.NSUBLKS);
          OUT$=BLK$->OUT.SUBLK$(I)->OUT.SUBLK$(0);
          DO CASE(OUT$->OUT.CODE);
             CASE(%SIZE);
                CALL CHARBIN(CSIZE, OUT$->OUT.SUBLK$(0)->OUT$SYM.TEXT);
 
             CASE(%FONT);
                FONT.SIZE=10;
                CALL INSERT(FONT.TEXT, 0, FONT.SIZE,
                   OUT$->OUT.SUBLK$(0)->OUT$SYM.TEXT);
 
             CASE(%TEXT);
                CALL INSERT(TEXT, COUNT, OUT$->OUT$SYM.COUNT,
                   OUT$->OUT$SYM.TEXT);
                COUNT=OUT$->OUT$SYM.COUNT+COUNT;
 
             CASE(%TOP);
                CALL M$WRITE(WRITETOP);
 
             CASE(%MDATE);
                CALL GETDATE;
 
             CASE(%MTIME);
                CALL GETTIME;
 
             CASE(%HORIZ);
                ORIEN=%HORIZONTAL;
 
             CASE(%VERT);
                ORIEN=%VERTICAL;
 
             CASE(%RATIO);
                CALL CHARBIN(RATIO, OUT$->OUT.SUBLK$(0)->OUT$SYM.TEXT);
 
             CASE(%CENTER);
                CENTER=%YES;
 
             CASE(%NOCENTER);
                CENTER=%NO;
 
             CASE(%BLANK);
                CALL CHARBIN(N1, OUT$->OUT.SUBLK$(0)->OUT$SYM.TEXT);
                BUF=' ';
                DO N2=1 TO N1;
                   CALL M$WRITE(WRITE_BUF);
                END;  /* DO J */
 
             CASE(%SPACE);
                CALL CHARBIN(SPACE, OUT$->OUT.SUBLK$(0)->OUT$SYM.TEXT);
 
             CASE(%OVER);
                OCHRS.CNT=OUT$->OUT.SUBLK$(0)->OUT$SYM.COUNT;
                OCHRS.TEXT=OUT$->OUT.SUBLK$(0)->OUT$SYM.TEXT;
 
             CASE(%DAY);
                FPT_TIME.V.DEST#=%LOCAL#;
                CALL M$TIME(FPT_TIME);
                CALL INSERT(TEXT, COUNT, 3, SUBSTR(DAY, 0, 3));
                COUNT=COUNT+3;
 
          END;
 
          ANDFLG=0;
          IF I < BLK$->OUT.NSUBLKS-1 THEN
             IF BLK$->OUT.NSUBLKS > 1 THEN
                IF BLK$->OUT.SUBLK$(I+1)->OUT.SUBLK$(0)->OUT.CODE = %AND THEN
                   DO;
                   ANDFLG=1;
                   I=I+1;
                   END;
 
          IF COUNT > 0 AND ANDFLG = 0 THEN
             DO;   /* WRITE THIS OUT */
             CALL INITBAN(FONT, TEXT, COUNT, CSIZE, ORIEN, RATIO,
                CENTER, WIDTH) ALTRET(INITERR);
             DO WHILE ('1'B);
                CALL GETBAN(BUF) ALTRET(LAST);
                J=131;
                DO WHILE (SUBSTR(BUF, J, 1) = ' ' AND J > 0);
                   J=J-1;
                END;
                FPT_WRITE.BUF_.BOUND=J+1;
                BUFFER.VFC='a';
                DO J=0 TO OCHRS.CNT-1;
                   CALL INSERT(CHAR1, 0, 1, SUBSTR(OCHRS.TEXT, J, 1));
                   DO N1=0 TO 127;
                      XTBL(N1)=CHAR1;
                   END;
                   XTBL(32)=' ';
                   CALL XLATE(BUFFER.TEXT, XTBL, BUF);
                   CALL M$WRITE(FPT_WRITE);
                   BUFFER.VFC='`';
                END;  /* DO J */
             END;  /* WHILE */
LAST:        BUF=' ';
             DO J=1 TO SPACE;
                CALL M$WRITE(WRITE_BUF);
             END;
             COUNT=0;
             TEXT=' ';
             END;  /* WRITE THIS OUT */
 
             I=I+1;
          END;  /* WHILE */
 
       CALL M$CLOSE(FPT_CLOSE);
       CALL M$EXIT;
 
SYNERR: ;
       BUF=' ';
       J=PCB$->P$PCB.HI_CHAR+B$JIT.CCDISP+1;
       CALL INSERT(BUF, J, 1, '^');
       CALL M$WRITE(WRITE_CARROT);
       CALL M$WRITE(WRITE_SYNERR);
       CALL M$EXIT;
INITERR: CALL M$WRITE(WRITE_HUH);
       CALL M$EXIT;
       %EJECT;
GETTIME: PROC;
/* */
       FPT_TIME.V.DEST#=%LOCAL;
       CALL M$TIME(FPT_TIME);
       IF OUT$->OUT.NSUBLKS = 0 THEN
          DO;
          CALL INSERT(TEXT, COUNT, 5, SUBSTR(TIME, 0, 5));
          COUNT=COUNT+5;
          END;
       ELSE
          DO CASE(OUT$->OUT.SUBLK$(0)->OUT.CODE);
             CASE(%HOUR);
                CALL INSERT(TEXT, COUNT, 2, SUBSTR(TIME, 0, 2));
                COUNT=COUNT+2;
 
             CASE(%MIN);
                CALL INSERT(TEXT, COUNT, 2, SUBSTR(TIME, 3, 2));
                COUNT=COUNT+2;
 
             CASE(%SEC);
                CALL INSERT(TEXT, COUNT, 2, SUBSTR(TIME, 6, 2));
                COUNT=COUNT+2;
 
          END;
 
       RETURN;
       END GETTIME;
       %EJECT;
GETDATE: PROC;
/* */
       IF OUT$->OUT.NSUBLKS = 0 THEN
          DO;
          FPT_TIME.V.DEST# = %LOCAL#;
          CALL M$TIME(FPT_TIME);
          CALL INSERT(TEXT, COUNT, 8, SUBSTR(DATE, 0, 8));
          COUNT=COUNT+8;
          END;
       ELSE
          DO CASE(OUT$->OUT.SUBLK$(0)->OUT.CODE);
             CASE(%EXT);
                FPT_TIME.V.DEST#=%EXT#;
                CALL M$TIME(FPT_TIME);
                CALL INSERT(TEXT, COUNT, 10, DATE);
                COUNT=COUNT+10;
 
             CASE(%LOCAL);
                FPT_TIME.V.DEST#=%LOCAL#;
                CALL M$TIME(FPT_TIME);
                CALL INSERT(TEXT, COUNT, 8, SUBSTR(DATE, 0, 8));
                COUNT=COUNT+8;
 
             CASE(%ANS);
                FPT_TIME.V.DEST#=%ANS#;
                CALL M$TIME(FPT_TIME);
                CALL INSERT(TEXT, COUNT, 6, SUBSTR(DATE, 0, 6));
                COUNT=COUNT+6;
 
          END;
 
       RETURN;
       END GETDATE;
       END HBAN;
