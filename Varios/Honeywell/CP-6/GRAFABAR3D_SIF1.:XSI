      PROGRAM GRAFABAR3D
C*T***********************************************************  
C*T*                                                         *  
C*T* Copyright (c) Bull HN Information Systems Inc., 1989    *  
C*T*                                                         *  
C*T***********************************************************  
C*X* JR,IND=3,FMT=1000,STMT=100
      SAVE
      INTEGER OPTS(16)
      CHARACTER*16 XTITL(100),YTITL(100),DTEMP
      CHARACTER*80 TTEMP
      CHARACTER*16 DTEMP1,DTEMP2,DTEMP3
      DIMENSION Y(4),Z(10000)
      COMMON /PLOTD/ XHI,XLO,YHI,YLO
      INTEGER VIEWSURF/0/,NX/0/,NY/0/
      CHARACTER*40 MTITLE,MNOTE
      CHARACTER*40 NOTES(11)
      CALL CCBUF(OPTS)
      IF (OPTS(1).EQ.9999) THEN
         OUTPUT 'Bad command line option -- aborting'
         STOP 
      ENDIF 
      CALL GRAFASTART
      WRITE (108,1060)
      READ (105,1070) XYANG
      WRITE (108,1080)
      READ (105,1090) ELEVANG
  100 CONTINUE 
      IF (XYANG .LT. 0.) THEN
         XYANG = XYANG + 360.
         GOTO 100 
      ENDIF 
  110 CONTINUE 
      IF (XYANG .GT. 360.) THEN
         XYANG = XYANG - 360.
         GOTO 110 
      ENDIF 
      IF (XYANG.GT.90. .AND. XYANG.LE.180.) THEN
         XYANG = XYANG - 90.
      ENDIF 
      IF (XYANG.GT.270. .AND. XYANG.LE.360.) THEN
         XYANG = XYANG - 90.
      ENDIF 
  120 CONTINUE 
      IF (ELEVANG .LT. 0.) THEN
         ELEVANG = ELEVANG + 360.
         GOTO 120 
      ENDIF 
  130 CONTINUE 
      IF (ELEVANG .GT. 90.) THEN
         ELEVANG = ELEVANG - 90.
         GOTO 130 
      ENDIF 
      ITEMP = INT(XYANG)
      IF (MOD(ITEMP,90).LT.5) THEN
         XYANG = XYANG + 5.
      ENDIF 
      IF (MOD(ITEMP,90).GT.85) THEN
         XYANG=XYANG - 5.
      ENDIF 
      ITEMP = INT(ELEVANG)
      IF (MOD(ITEMP,90) .LT. 5) THEN
         ELEVANG = ELEVANG + 5.
      ENDIF 
      IF (MOD(ITEMP,90) .GT. 85) THEN
         ELEVANG = ELEVANG - 5.
      ENDIF 
      WRITE (108,1100) XYANG,ELEVANG
      WRITE (108,1150)
      READ (105,1160) MTITLE
      WRITE (108,1170)
      READ (105,1120) MNOTE
      WRITE (108,1000)
      NNOTES=0
  140 CONTINUE 
      READ (105,1010,END=150) NOTES(NNOTES+1)
      IF (NOTES(NNOTES+1).EQ.'!EOD')GOTO 150 
      NNOTES=NNOTES+1
      IF (NNOTES.LT.10)GOTO 140 
  150 CONTINUE 
      NX=0
  160 CONTINUE 
      WRITE (108,1180)
  170 CONTINUE 
      READ (105,1190,END=180) DTEMP
      IF (DTEMP.EQ.'!EOD')GOTO 180 
      IF (DTEMP.EQ.'    ')GOTO 180 
      NX=NX+1
      XTITL(NX)=DTEMP
      GOTO 170 
  180 CONTINUE 
      IF (NX.LT.1) THEN
         OUTPUT '*** Cannot run with no x-axis data, try again!'
         GOTO 160 
      ENDIF 
      NY=0
      WRITE (108,1200)
  190 CONTINUE 
      READ (105,1210,END=200) DTEMP
      IF (DTEMP.EQ.'!EOD')GOTO 200 
      IF (DTEMP.EQ.'    ')GOTO 200 
      NY=NY+1
      YTITL(NY)=DTEMP
      GOTO 190 
  200 CONTINUE 
C
C         one trick of this program is to make the Z array
C         arranged in an M x N (x by y) fashion for the
C         BAR3D subroutine, yet be able to dynamically change
C         or address the dimensions in this, the data collection
C         part of the program.  it is accomplished by declaring
C         the Z array with a SINGLE dimension, then doing the
C         M by N arithmetic and subscript evaluation ourselves.
C
C         the formula for determining the correct element of
C         a single-dimension array from two subscripts had to
C         be determined (and is documented here).
C
C         given that we want to find an index, K, into a single
C         dimension array, yet later address it as a doubly
C         dimensioned array of size MAXI,MAXJ, and we currently
C         have two indices, I, and J, the formula for finding K
C         is:
C
C         K = (J-1) * MAXI + I
C
      ZMAX=-1.
      DO 210 I=1,NX
         DO 210 J=1,NY
            K = (J-1)*NX+I
            Z(K)=-1.
  210 CONTINUE 
      WRITE (108,1110)
  220 CONTINUE 
      READ (105,1130,END=270) TTEMP
      IF (TTEMP.EQ.'!EOD')GOTO 270 
      IF (TTEMP.EQ.'    ') THEN
         OUTPUT '*** blank data line ignored'
         GOTO 220 
      ENDIF 
      IFLAG=0
      CALL PARSIT(TTEMP,DTEMP1,DTEMP2,DTEMP3,IFLAG)
      IF (IFLAG.NE.0) THEN
         WRITE (108,1020) TTEMP
         GOTO 220 
      ENDIF 
      DO 230 IX=1,NX
         ITX=IX
         IF (DTEMP1.EQ.XTITL(IX))GOTO 240 
  230 CONTINUE 
      WRITE (108,1030) DTEMP1
      GOTO 220 
  240 CONTINUE 
      DO 250 IY=1,NY
         ITY=IY
         IF (DTEMP2.EQ.YTITL(IY))GOTO 260 
  250 CONTINUE 
      WRITE (108,1040) DTEMP2
      GOTO 220 
  260 CONTINUE 
      DECODE (16,1140, DTEMP3) THEDAT
      Z( (ITY-1)*NX + ITX) = THEDAT
      IF (THEDAT .GT. ZMAX) ZMAX = THEDAT
      GOTO 220 
  270 CONTINUE 
C     ZSCALE=(ABS(COS(XYANG/57.3)*NX)+ABS(COS(XYANG/57.3)*NY))/(ZMAX*2.)
      ZSCALE=SQRT(FLOAT(NX*NX)+FLOAT(NY*NY))/(ZMAX*2.)
      XHI=-900.
      YHI=-900.
      XLO=900.
      YLO=900.
      DO 280 I=1,NX
         DO 280 J=1,NY
            K = (J-1)*NX+I
            IF (Z(K).GE.0.)GOTO 280 
            WRITE (108,1050) XTITL(I),YTITL(J)
            STOP 
  280 CONTINUE 
      CALL XG$INITIALIZE_CORE ('BUFFERED','NONE','3D','NONE')
      CALL XG$SET_COORD_SYSTEM_TYPE ('RIGHT')
      CALL XG$SET_NDC_SPACE_2 (1.0,.7)
      CALL XG$INITIALIZE_VIEW_SURFACE  (VIEWSURF,'INTENSITY')
      CALL XG$SELECT_VIEW_SURFACE  (VIEWSURF)
      CALL XG$SET_IMMEDIATE_VISIBILITY ('OFF')
      CALL XG$SET_WINDOW_CLIPPING  ('ON')
      CALL XG$SET_WINDOW  (0.,10.,0.,7.)
      CALL XG$SET_CHARPRECISION ('stroke')
      IF (OPTS(1).EQ.1) THEN
         CALL XG$SET_VIEWPORT_2 (.05,.95,.035,.665)
      ENDIF 
      CALL XG$CREATE_TEMPORARY_SEG
      CALL XG$SET_LINEWIDTH(.15)
      CALL XG$MOVE_ABS_2 (0.,0.)
      DO 330 LOOPER=0,1
         CALL BAR3D (Z, NX, NY, 5., 0., XYANG, ELEVANG, 1. , 1.,ZSCALE,
     1      LOOPER)
         IF (XYANG.GT.180.) THEN
            LOOPX=NX
            LOOPXINC=-1
            LOOPY=NY
            LOOPYINC=-1
         ELSE 
            LOOPX=1
            LOOPXINC=1
            LOOPY=1
            LOOPYINC=1
         ENDIF 
         DO 290 I=1,NX
            CALL CHARSIZE(XTITL(LOOPX),16,II)
            CALL LBL3D (XTITL(LOOPX),II,FLOAT(I)-.5,-.3,0.,.25,0.,
     1            LOOPER)
            LOOPX=LOOPX+LOOPXINC
  290    CONTINUE 
         DO 300 I=1,NY
            CALL CHARSIZE(YTITL(LOOPY),16,II)
            CALL LBL3D (YTITL(LOOPY),-(II),0.,FLOAT(I)-.5,-.3,.25,0.,
     1            LOOPER)
            LOOPY=LOOPY+LOOPYINC
  300    CONTINUE 
         ZAXS = ZMAX*ZSCALE
         Y(1)=0.
         Y(2)=ZMAX
         CALL SCALE (Y,ZAXS,2,1,1.0)
         ZCUR=Y(3)
         ZTOP=0.
  310    CONTINUE 
         ENCODE (16,1220,DTEMP),ZCUR
         CALL CHARSIZE (DTEMP,16,II)
         CALL LBL3D(DTEMP,-(II),FLOAT(NX)+.35,0.,ZCUR+.5,.25,1.,LOOPER)
         ENCODE (16,1230,DTEMP),ZCUR
         CALL CHARSIZE (DTEMP,16,II)
         CALL LBL3D(DTEMP,II,0.,FLOAT(NY)+.5,ZCUR+.5,.25,1.,LOOPER)
         ZCUR=ZCUR+Y(4)
         IF (ZCUR.LE.ZMAX)GOTO 310 
         IF (ZTOP.EQ.0.) ZTOP=1.;GOTO 310 
         IF (LOOPER .EQ. 0) THEN
            CALL XG$SET_IMMEDIATE_VISIBILITY('ON')
            CALL XG$ESCAPE (1,0,0)
            CALL XG$CLOSE_TEMPORARY_SEG
C           OUTPUT XHI,XLO,YHI,YLO
C           OUTPUT ZAXS,ZMAX,ZSCALE
C           OUTPUT Y(3),Y(4)
C           READ (105,1190) XXX
C
C         space for top title
C
            YHI=YHI+.70
C
C         space for notation
C
            YLO=YLO-.35
C
C              okay, use the highs and lows and determine a
C              .7 ratio window that'll hold it!
C
            YSIZE=YHI-YLO
            XSIZE=XHI-XLO
            YCENT=YLO+(YSIZE/2.)
            XCENT=XLO+(XSIZE/2.)
            IF (YSIZE.GE.(.7*XSIZE)) THEN
               YARGG=YSIZE/2.
               XARGG=(YSIZE/2.)/.7
            ELSE 
               XARGG=XSIZE/2.
               YARGG=(.7*XSIZE)/2.
            ENDIF 
            XWLO=XCENT-XARGG
            XWHI=XCENT+XARGG
            YWLO=YCENT-YARGG
            YWHI=YCENT+YARGG
            CALL XG$SET_WINDOW (XWLO,XWHI,YWLO,YWHI)
C
C         HERE, CLOSE TEMP SEG, REESTABLISH A COMPUTED WINDOW, AND
C         REOPEN A TEMPSEG
C
            CALL XG$CREATE_TEMPORARY_SEG
            CALL XG$SET_IMMEDIATE_VISIBILITY('OFF')
            CALL XG$SET_CHARUP_2 (0.,1.)
            CALL XG$MOVE_ABS_2 (XCENT,YWHI+.10)
            CALL XG$SET_CHARJUST('CENTER','TOP')
            CALL XG$SET_CHARSIZE (.45,.45)
            CALL TEXTWIDTH(.45)
            CALL XG$SET_FONT(13)
            CALL CHARSIZE(MTITLE,40,II)
            CALL XG$TEXT_COUNT(MTITLE,II)
            CALL XG$SET_CHARSIZE(.15,.15)
            CALL TEXTWIDTH(.15)
            CALL XG$MOVE_ABS_2(XWHI-.05,YWLO+.05)
            CALL XG$SET_CHARJUST('RIGHT','BOTTOM')
            CALL CHARSIZE(MNOTE,40,II)
            CALL XG$TEXT_COUNT(MNOTE,II)
            CALL XG$SET_CHARJUST('LEFT','BOTTOM')
            IF (NNOTES.GT.0) THEN
               YLOC=YWLO+.05
               DO 320 I=NNOTES,1,-1
                  CALL XG$MOVE_ABS_2 (XWLO+.05,YLOC)
                  CALL CHARSIZE(NOTES(I),40,II)
                  CALL XG$TEXT_COUNT(NOTES(I),II)
                  YLOC=YLOC+.2
  320          CONTINUE 
            ENDIF 
         ENDIF 
  330 CONTINUE 
      IF (OPTS(2).EQ.1) THEN
         CALL XG$MOVE_ABS_2 (XWLO+.001,YWLO+.001)
         CALL XG$LINE_ABS_2 (XWLO+.001,YWHI-.001)
         CALL XG$LINE_ABS_2 (XWHI-.001,YWHI-.001)
         CALL XG$LINE_ABS_2 (XWHI-.001,YWLO+.001)
         CALL XG$LINE_ABS_2 (XWLO+.001,YWLO+.001)
      ENDIF 
      CALL XG$CLOSE_TEMPORARY_SEG
      CALL XG$SET_IMMEDIATE_VISIBILITY('ON')
      CALL XG$DESELECT_VIEW_SURFACE  (VIEWSURF)
      CALL XG$TERMINATE_VIEW_SURFACE  (VIEWSURF)
      CALL XG$TERMINATE_CORE
      CALL GRAFAEXIT
C1190 FORMAT (A4)
 1000 FORMAT (' Input extra note text (for left-side) here; !EOD ends')
 1010  FORMAT (A)
 1020 FORMAT (
     -          ' *** bad input on this line!!',/,
     -          A,/,
     -          ' Data order must be X label, Y label, size',/,
     -          ' size MUST be a positive number')
 1030 FORMAT(' *** could not find X-axis label matching: ',A)
 1040 FORMAT (' *** could not find Y-axis label matching: ',A)
 1050 FORMAT(' *** error! no data for bar at ',A,',',A)
 1060 FORMAT (' What is X-Y plane viewing angle (0-90,180-270)')
 1070 FORMAT (F)
 1080 FORMAT (' What is elevation viewing angle (0-90)')
 1090 FORMAT (F)
 1100 FORMAT (' *** X-Y plane angle used is : ',F,/,
     -            ' *** Elevation angle used is : ',F)
 1110 FORMAT (' Enter data for each bar in the form',/,
     -        ' x_label y_label value',/,
     -        ' ESC-F or !EOD ends input')
 1120 FORMAT (A40)
 1130 FORMAT (A80)
 1140 FORMAT (F)
 1150 FORMAT (' What is plot title? (40 characters max)')
 1160 FORMAT(A40)
 1170 FORMAT(' What is lower right corner notation text? (40 chars.)')
 1180 FORMAT (' Enter x-axis (right-side) titles one per line; a blank'
     -    ' entry or !EOD indicates',/,' the end of x-axis data')
 1190 FORMAT (A16)
 1200 FORMAT (' Enter y-axis (left-side) titles one per line; a blank'
     -    ' entry or !EOD indicates',/,' the end of y-axis data')
 1210 FORMAT (A16)
 1220 FORMAT ('- ',I)
 1230 FORMAT(I,' -')
      END 
