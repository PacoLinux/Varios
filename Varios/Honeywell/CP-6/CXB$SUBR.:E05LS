VERSION E05

PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:1    
        1        1        /*M* SET routines. CXB$BLDAM, CXB$MDFYAM, CXB$DELAM, CXB$PROCOPT, CXB$WINDOW_OPTS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DFC,DMC */
        8        8        /*F*   NAME:   CXB$BLDAM
        9        9               PURPOSE: To build an assign merge record for a specified dcb
       10       10               DESCRIPTION: CXB$BLDAM builds a new assign merge record in an
       11       11                       acquired data segment for a specified dcb.
       12       12        */
       13       13        /*D*   NAME:   CXB$BLDAM
       14       14               CALL:   CALL CXB$BLDAM(BLK$,FID$,GETCMD,CPSL_PARAM)
       15       15               INTERFACE: CXC$GETSEG,CXB$PROCOPT,X$ALLOCATE
       16       16               INPUT:  BLK$ - pointer to parse output block
       17       17                       FID$ - pointer to fid
       18       18                       GETCMD - The CXG$GETCMD parameter.
       19       19                       CPSL_PARAM - The Command Processor Special Library Parameter.
       20       20               OUTPUT: assign merge record to segment #3
       21       21               DESCRIPTION: Data segment #3 is obtained and utilized as a buffer
       22       22                       for the assign merge record to be created. Pointers to the
       23       23                       various components of a fid along with the fid information
       24       24                       is inserted into the record if a fid pointer is passed.
       25       25                       If a fid pointer is not passed, an assign merge record is
       26       26                       created with null fid information pointers.
       27       27                       In the case of an ADJUST command, the building of an
       28       28                       assign merge type record without fid information is
       29       29                       required. Also information specified as options on the
       30       30                       various commands is inserted into the record.
       31       31        */
       32       32        /**********************************************************************/
       33       33        CXB$BLDAM: PROC(BLK$,FID$,GETCMD,CPSL_PARAM) ;
       34       34                   %INCLUDE B$JIT;
       35      324                   %INCLUDE CP_6;
       36      405                   %INCLUDE CX_MACROS_M;
       37      456                   %INCLUDE XU_MACRO_C;
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:2    
       38     3562                   %INCLUDE CX_DATA_R;
       39     4496                   %INCLUDE CX_SUBS_C;
       40     4509                   %INCLUDE CX_ISUBS_C;
       41     4861                   %INCLUDE CX_PERR_C;
       42     4932                   %INCLUDE CP_6_SUBS;
       43     5472                   %INCLUDE XUM_MACRO_C;
       44     5499                   %INCLUDE B_MACROS_C;
       45     5610          /***** Fpts *****/
       46     5611        %CPSL_AMR$PTRS(NAME=AMR$PTRS,STCLASS=BASED);
       47     5616        %FPT_FID(FPTN=FPT_FID,STCLASS=AUTO);
       48     5639        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
       49     5748        %FPT_OPEN(FPTN=AMR$REC$,STCLASS="BASED(CPSL_SEG3$)",PFMT="PTR");
       50     5857        %VLR_FID(FPTN=FID_RESULTS,STCLASS=AUTO);
       51     5876        %TEXTC(NAME=TEXTC,STCLASS=BASED);
       52     5881        %PARSE$OUT(NAME=OUT$BLK);
       53     5926        %VLP_NAME(FPTN=AM$NAME,STCLASS=BASED,LEN=31);
       54     5953        %VLP_ACCT(FPTN=AM$ACCT,STCLASS=BASED);
       55     5966        %VLP_PASS(FPTN=AM$PASS,STCLASS=BASED);
       56     5979        %VLP_SN(FPTN=AM$SN,N=50,STCLASS=BASED);
       57     5992        %VLP_WSN(FPTN=AM$WSN,STCLASS=BASED);
       58     6005        %VLP_NAME(FPTN=AMR_NAME,STCLASS=AUTO,LEN=31);
       59     6032        %VLP_ACCT(FPTN=AMR_ACCT,STCLASS=AUTO);
       60     6045        %VLP_PASS(FPTN=AMR_PASS,STCLASS=AUTO);
       61     6058        %VLP_WSN(FPTN=AMR_WSN,STCLASS=AUTO);
       62     6071        %VLP_SN(FPTN=AMR_SN,STCLASS=AUTO,N=50);
       63     6084        %XUM$MCB(NAME=MCB,STCLASS=AUTO);
       64     6088          /***** Error codes *****/
       65     6089        %VLP_ERRCODE (FPTN=E_AMFULL,FCG=CX,MID=B,ERR#=E$AMFULL,STCLASS=CONSTANT);
       66     6134          /***** Local variables *****/
       67     6135    1   DCL TEMP$ PTR;                                   /*Temp. Ptr*/
       68     6136    1   DCL BLK$ PTR;                           /*Parse output block ptr*/
       69     6137    1   DCL FID$ PTR;                           /*Pointer to fid*/
       70     6138    1   DCL TEMP SBIN WORD;                               /* Temp cell */
       71     6139        %XUG_GETCMD (NAME=GETCMD, STCLASS=PARAM) ;
       72     6477        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
       73     6495          /***** External routines *****/
       74     6496        %INCLUDE CXG_ENTRY ;
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:3    
       75     6508    1   DCL CXC$GETSEG ENTRY(2) ;               /*Get data segment*/
       76     6509    1   DCL CXC$RELSEG ENTRY(1);
       77     6510    1   DCL CXB$PROCOPT ENTRY(4) ;              /*Process option*/
       78     6511    1   DCL CXX$CNVRT_FID ENTRY(3) ;
       79     6512    1   DCL CXC$SCREECH ENTRY(2);                        /*Screech*/
       80     6513    1   DCL CXB$RELVPA ENTRY(1);                         /*Release vlp area in *A*/
       81     6514    1   DCL CX_DATA_D ENTRY CONV (5);       /* Force LINK to UNSAT-load data defn's. */
       82     6515    1   DCL X$ALLOCATE ENTRY(1) ALTRET;
       83     6516          /***** Based structures *****/
       84     6517        %B$TCB (STCLASS="BASED(B$TCB$)");
       85     6520        %B$EXCFR;
       86     6538        %EJECT;
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:4    
       87     6539    1     IF CPSL_PARAM.FLAGS.VERIFY_ONLY
       88     6540    1         THEN
       89     6541    2             DO ;
       90     6542    2               CALL CXB$PROCOPT(BLK$,MCB,GETCMD,CPSL_PARAM) ;
       91     6543    2               GOTO BLDAMRET ;
       92     6544    2             END ; /* Then Do */
       93     6545    1     CALL CXC$GETSEG(CPSL_SEG3$) ;                    /*Get seg for buffer*/
       94     6546    1     IF CPSL_PARAM.ERRCODE ~= %NO#
       95     6547    1         THEN
       96     6548    1             GOTO CXB$BLDAM50 ;
       97     6549        /*
       98     6550          ****  Initialize a/m record with defaults
       99     6551        */
      100     6552    1     AMR$REC$=CPSL_CAMR_REC;
      101     6553    1     AMR$REC$.V_=PINCRW(CPSL_SEG3$,POFFW(ADDR(AMR$REC$.V),ADDR(AMR$REC$)));
      102     6554        /*
      103     6555          ****  Initialize SEG3   control block
      104     6556        */
      105     6557    1     MCB.FREE_HEAD$=ADDR(NIL);
      106     6558        /*  ****  Reserve two words in a/m for HI_SEGMENT$ and FREE_HEAD$ */
      107     6559    1     MCB.SEGMENT_BASE$=PINCRW(AMR$REC$.V_,SIZEW(AMR$REC$.V)+2);
      108     6560    1     MCB.HI_SEGMENT$=MCB.SEGMENT_BASE$;
      109     6561    1     MCB.WKSZ=1024-POFFC(MCB.SEGMENT_BASE$,CPSL_SEG3$); /*# words*/
      110     6562    1     MCB.TYPE=0;                           /*Allocate bytes*/
      111     6563    1     MCB.MIN_SIZE=0;
      112     6564        /*
      113     6565          ****  Init. Fid pointers and M$FID fpt only if FID$ parameter passed.
      114     6566          ****  FID$ isn't passed if modifying existing a/m record via a SET or
      115     6567          ****   Modifying a dcb via an ADJUST.
      116     6568        */
      117     6569    1     IF (ADDR(FID$)~=ADDR(NIL))
      118     6570    1        THEN
      119     6571    2           DO;
      120     6572    2              FPT_FID = CPSL_CFPT_FID ;
      121     6573    2              FPT_FID.V_ = VECTOR(FPT_FID.V) ;
      122     6574    2              FPT_FID.TEXTFID_=VECTOR(FID$->TEXTC.TEXT);
      123     6575    2              FPT_FID.NAME_=VECTOR(AMR_NAME);
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:5    
      124     6576    2              FPT_FID.ACCT_=VECTOR(AMR_ACCT);
      125     6577    2              FPT_FID.PASS_=VECTOR(AMR_PASS);
      126     6578    2              FPT_FID.WSN_=VECTOR(AMR_WSN);
      127     6579    2              FPT_FID.SN_=VECTOR(AMR_SN);
      128     6580    2              FPT_FID.ASN_=VECTOR(AMR$REC$.V.ASN#);
      129     6581    2              FPT_FID.RES_=VECTOR(AMR$REC$.V.RES#);
      130     6582    2              FPT_FID.RESULTS_=VECTOR(FID_RESULTS);
      131     6583    2              FPT_FID.V.SCRUB.SNAME#=%YES#;
      132     6584    2              FPT_FID.V.SCRUB.SACCT#=%YES#;
      133     6585    2              FPT_FID.V.SCRUB.SPASS#=%YES#;
      134     6586    2              FPT_FID.V.SCRUB.SSN#=%YES#;
      135     6587    2              FPT_FID.V.SCRUB.SRES#=%YES#;
      136     6588    2              FPT_FID.V.SCRUB.SWSN#=%YES#;
      137     6589        /*
      138     6590          ****  Insert fid info. Into the a/m record
      139     6591        */
      140     6592    3              CALL M$FID(FPT_FID) WHENALTRETURN DO;
      141     6593    3                 IF BLK$->OUT$BLK.CODE~=SETCMND AND BLK$->OUT$BLK.CODE~=ADJUSTCMND
      142     6594    3                    THEN
      143     6595    3                       GOTO CXB$BLDAM65;
      144     6596    3              END;
      145     6597    2              IF (FID_RESULTS.NAME=%YES#)
      146     6598    2                 THEN
      147     6599    3                    DO;
      148     6600    3                       MCB.SIZE=AMR_NAME.L#+1;   /*Add one for count*/
      149     6601    3                       CALL X$ALLOCATE(MCB) ALTRET(CXB$BLDAM55);
      150     6602    3                       AMR$REC$.NAME_=MCB.ADDRESS$;
      151     6603    3                       AMR$REC$.NAME_->AM$NAME=AMR_NAME;
      152     6604    3                    END;
      153     6605        /*
      154     6606          ****   Set account/password if specified, otherwise for ASN=FILE#,
      155     6607          ****   TAPE# or COMGROUP#,
      156     6608          ****   Reset them except when only pack,tape or comgroup was spec'd w/o name,
      157     6609          ****   Account, or password. Assume user wants his dcb unchanged in this case.
      158     6610        */
      159     6611    2              IF (FID_RESULTS.ACCT=%YES#) OR (AMR$REC$.V.ASN#=%FILE#) OR
      160     6612    2                   (AMR$REC$.V.ASN#=%TAPE#) OR (AMR$REC$.V.ASN#=%COMGROUP#)
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:6    
      161     6613    2                 THEN
      162     6614    3                    DO;
      163     6615    3                       IF (AMR$REC$.V.ASN#=%FILE#) OR (AMR$REC$.V.ASN#=%TAPE#)
      164     6616    3                            OR (AMR$REC$.V.ASN#=%COMGROUP#)
      165     6617    3                          THEN
      166     6618    3                             IF ((FID_RESULTS.NAME=%NO#) AND (FID_RESULTS.ACCT=%NO#)
              6618                                      AND (FID_RESULTS.PASS=%NO#))
      167     6619    3                                THEN
      168     6620    3                                   GOTO CXB$BLDAM20;
      169     6621    3                                ELSE
      170     6622    4                                   DO;
      171     6623    4                                      MCB.SIZE=8;
      172     6624    4                                      CALL X$ALLOCATE(MCB) ALTRET(CXB$BLDAM55);
      173     6625    4                                      AMR$REC$.ACCT_=MCB.ADDRESS$;
      174     6626    4                                      AMR$REC$.ACCT_->AM$ACCT=AMR_ACCT;
      175     6627    4                                   END;
      176     6628    3                    END;
      177     6629    2   CXB$BLDAM20:  ;
      178     6630    2              IF (FID_RESULTS.ACCT=%YES#) OR (AMR$REC$.V.ASN#=%FILE#) OR
      179     6631    2                   (AMR$REC$.V.ASN#=%TAPE#) OR (AMR$REC$.V.ASN#=%COMGROUP#)
      180     6632    2                 THEN
      181     6633    3                    DO;
      182     6634    3                       IF (AMR$REC$.V.ASN#=%FILE#) OR (AMR$REC$.V.ASN#=%TAPE#)
      183     6635    3                            OR (AMR$REC$.V.ASN#=%COMGROUP#)
      184     6636    3                          THEN
      185     6637    3                             IF ((FID_RESULTS.NAME=%NO#) AND (FID_RESULTS.ACCT=%NO#)
              6637                                      AND (FID_RESULTS.PASS=%NO#))
      186     6638    3                                THEN
      187     6639    3                                   GOTO CXB$BLDAM30;
      188     6640    3                                ELSE
      189     6641    4                                   DO;
      190     6642    4                                      MCB.SIZE=8;
      191     6643    4                                      CALL X$ALLOCATE(MCB) ALTRET(CXB$BLDAM55);
      192     6644    4                                      AMR$REC$.PASS_=MCB.ADDRESS$;
      193     6645    4                                      AMR$REC$.PASS_->AM$PASS=AMR_PASS;
      194     6646    4                                   END;
      195     6647    3                    END;
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:7    
      196     6648    2   CXB$BLDAM30:  ;
      197     6649    2              IF (FID_RESULTS.WSN=%YES#)
      198     6650    2                 THEN
      199     6651    3                    DO;
      200     6652    3                       MCB.SIZE=8;
      201     6653    3                       CALL X$ALLOCATE(MCB) ALTRET(CXB$BLDAM55);
      202     6654    3                       AMR$REC$.WSN_=MCB.ADDRESS$;
      203     6655    3                       AMR$REC$.WSN_->AM$WSN=AMR_WSN;
      204     6656    3                    END;
      205     6657    2              IF (FID_RESULTS.SN=%YES#) OR (AMR$REC$.V.ASN#=%COMGROUP#) OR
      206     6658    2                   (AMR$REC$.V.ASN#=%FILE#)
      207     6659    2                 THEN
      208     6660    3                    DO;
      209     6661        /*
      210     6662          ****  If no SN spec'd, create one consisting of blanks to
      211     6663          ****  Indicate SN's in dcb are to be reset.
      212     6664        */
      213     6665    3                       IF AMR_SN.NUM#=0
      214     6666    3                          THEN
      215     6667    3                             AMR_SN.NUM#=1;         /*Init. To one*/
      216     6668    3                       MCB.SIZE=(AMR_SN.NUM#*6)+4; /*Add 4 for sn count*/
      217     6669    3                       CALL X$ALLOCATE(MCB) ALTRET(CXB$BLDAM55);
      218     6670    3                       AMR$REC$.SN_=MCB.ADDRESS$;
      219     6671    3                       AMR$REC$.SN_->AM$SN.NUM#=AMR_SN.NUM#;
      220     6672    4                       DO TEMP = 0 TO AMR_SN.NUM#-1;
      221     6673    4                          AMR$REC$.SN_->AM$SN.SN#(TEMP)=AMR_SN.SN#(TEMP);
      222     6674    4                       END;
      223     6675    3                    END;
      224     6676    2           END;
      225     6677        /*
      226     6678          **** Process options if present on SET or ADJUST command
      227     6679        */
      228     6680    1     IF ((BLK$->OUT$BLK.CODE=SETCMND)
      229     6681    1          OR (BLK$->OUT$BLK.CODE=ADJUSTCMND))
      230     6682    1        THEN
      231     6683    2             DO ;
      232     6684    2               CALL CXB$PROCOPT(BLK$,MCB,GETCMD,CPSL_PARAM) ;
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:8    
      233     6685    2               IF CPSL_PARAM.ERRCODE ~= %NO#
      234     6686    2                 THEN
      235     6687    2                   GOTO CXB$BLDAM70 ;
      236     6688    2             END ; /* Then Do */
      237     6689        /*
      238     6690          ****  Save HI_SEGMENT$ and FREE_HEAD$ in *A for subsequent use
      239     6691        */
      240     6692    1     TEMP$=PINCRW(AMR$REC$.V_,SIZEW(AMR$REC$.V));
      241     6693    1     TEMP$->AMR$PTRS.HI_SEGMENT$=MCB.HI_SEGMENT$;
      242     6694    1     TEMP$->AMR$PTRS.FREE_HEAD$=MCB.FREE_HEAD$;
      243     6695    1   BLDAMRET:
      244     6696    1     RETURN;
      245     6697
      246     6698    1   CXB$BLDAM50:;
      247     6699    1     CALL CXC$SCREECH(E$SUASEG,'B');
      248     6700        /*E*    ERROR:   CXB-E$SUASEG-A
      249     6701                MESSAGE:  Command Processor ABORT:  Unable to obtain data segment.
      250     6702                                       JIT.ERR follows.
      251     6703                DESCRIPTION: Command Processor was unable to get a data segment used
      252     6704                             for the purpose of creating the assign merge record.
      253     6705        */
      254     6706    1   CXB$BLDAM55:;
      255     6707    1     CPSL_PARAM.ERRCODE = E_AMFULL ;
      256     6708    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      257     6709    1     GOTO BLDAMRET ;
      258     6710        /* Error message output by called routine if Command Processor detected ERROR.*/
      259     6711        /* Pass it through CPSL_PARAM.ERRCODE for the Command Processor to output. */
      260     6712        /* By a common error printing routine in Command Procesor. */
      261     6713    1   CXB$BLDAM65:;
      262     6714    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$EXCFR.ERR;
      263     6715    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      264     6716    1   CXB$BLDAM70:;
      265     6717    1     CALL CXC$RELSEG (CPSL_SEG3$);
      266     6718    1     GOTO BLDAMRET ;
      267     6719    1   END CXB$BLDAM;
      268     6720                   %EOD;

PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:9    
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_ISUBS_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXB$BLDAM.

   Procedure CXB$BLDAM requires 357 words for executable code.
   Procedure CXB$BLDAM requires 206 words of local(AUTO) storage.

PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:10   

 Object Unit name= CXB$BLDAM                                  File name= CXB$SUBR.:E05TOU
 UTS= JUL 29 '97 12:15:59.60 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  CXB$BLDAM
    2   Proc  even  none   357    545  CXB$BLDAM
    3  RoData even  none    12     14  CXB$BLDAM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        4  CXB$BLDAM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 CX_DATA_D
         yes           Std       4 CXB$PROCOPT
         yes           Std       2 CXC$GETSEG
 yes     yes           Std       1 X$ALLOCATE
         yes           Std       2 CXC$SCREECH
         yes           Std       1 CXC$RELSEG
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CPSL_CAMR_REC                         CPSL_CFPT_FID
r    B$JIT$                           r    B$TCB$                           r    CPSL_SEG3$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:12   


        1        1       /*M* SET routines. CXB$BLDAM, CXB$MDFYAM, CXB$DELAM, CXB$PROCOPT, CXB$WINDOW_OPTS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DFC,DMC */
        8        8        /*F*   NAME:   CXB$BLDAM
        9        9               PURPOSE: To build an assign merge record for a specified dcb
       10       10               DESCRIPTION: CXB$BLDAM builds a new assign merge record in an
       11       11                       acquired data segment for a specified dcb.
       12       12        */
       13       13        /*D*   NAME:   CXB$BLDAM
       14       14               CALL:   CALL CXB$BLDAM(BLK$,FID$,GETCMD,CPSL_PARAM)
       15       15               INTERFACE: CXC$GETSEG,CXB$PROCOPT,X$ALLOCATE
       16       16               INPUT:  BLK$ - pointer to parse output block
       17       17                       FID$ - pointer to fid
       18       18                       GETCMD - The CXG$GETCMD parameter.
       19       19                       CPSL_PARAM - The Command Processor Special Library Parameter.
       20       20               OUTPUT: assign merge record to segment #3
       21       21               DESCRIPTION: Data segment #3 is obtained and utilized as a buffer
       22       22                       for the assign merge record to be created. Pointers to the
       23       23                       various components of a fid along with the fid information
       24       24                       is inserted into the record if a fid pointer is passed.
       25       25                       If a fid pointer is not passed, an assign merge record is
       26       26                       created with null fid information pointers.
       27       27                       In the case of an ADJUST command, the building of an
       28       28                       assign merge type record without fid information is
       29       29                       required. Also information specified as options on the
       30       30                       various commands is inserted into the record.
       31       31        */
       32       32        /**********************************************************************/
       33       33        CXB$BLDAM: PROC(BLK$,FID$,GETCMD,CPSL_PARAM) ;

     33  2 000000   000000 700200 xent  CXB$BLDAM    TSX0  ! X66_AUTO_4
         2 000001   000316 000004                    ZERO    206,4
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:13   

       34       34                   %INCLUDE B$JIT;
       35      324                   %INCLUDE CP_6;
       36      405                   %INCLUDE CX_MACROS_M;
       37      456                   %INCLUDE XU_MACRO_C;
       38     3562                   %INCLUDE CX_DATA_R;
       39     4496                   %INCLUDE CX_SUBS_C;
       40     4509                   %INCLUDE CX_ISUBS_C;
       41     4861                   %INCLUDE CX_PERR_C;
       42     4932                   %INCLUDE CP_6_SUBS;
       43     5472                   %INCLUDE XUM_MACRO_C;
       44     5499                   %INCLUDE B_MACROS_C;
       45     5610          /***** Fpts *****/
       46     5611        %CPSL_AMR$PTRS(NAME=AMR$PTRS,STCLASS=BASED);
       47     5616        %FPT_FID(FPTN=FPT_FID,STCLASS=AUTO);
       48     5639        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
       49     5748        %FPT_OPEN(FPTN=AMR$REC$,STCLASS="BASED(CPSL_SEG3$)",PFMT="PTR");
       50     5857        %VLR_FID(FPTN=FID_RESULTS,STCLASS=AUTO);
       51     5876        %TEXTC(NAME=TEXTC,STCLASS=BASED);
       52     5881        %PARSE$OUT(NAME=OUT$BLK);
       53     5926        %VLP_NAME(FPTN=AM$NAME,STCLASS=BASED,LEN=31);
       54     5953        %VLP_ACCT(FPTN=AM$ACCT,STCLASS=BASED);
       55     5966        %VLP_PASS(FPTN=AM$PASS,STCLASS=BASED);
       56     5979        %VLP_SN(FPTN=AM$SN,N=50,STCLASS=BASED);
       57     5992        %VLP_WSN(FPTN=AM$WSN,STCLASS=BASED);
       58     6005        %VLP_NAME(FPTN=AMR_NAME,STCLASS=AUTO,LEN=31);
       59     6032        %VLP_ACCT(FPTN=AMR_ACCT,STCLASS=AUTO);
       60     6045        %VLP_PASS(FPTN=AMR_PASS,STCLASS=AUTO);
       61     6058        %VLP_WSN(FPTN=AMR_WSN,STCLASS=AUTO);
       62     6071        %VLP_SN(FPTN=AMR_SN,STCLASS=AUTO,N=50);
       63     6084        %XUM$MCB(NAME=MCB,STCLASS=AUTO);
       64     6088          /***** Error codes *****/
       65     6089        %VLP_ERRCODE (FPTN=E_AMFULL,FCG=CX,MID=B,ERR#=E$AMFULL,STCLASS=CONSTANT);
       66     6134          /***** Local variables *****/
       67     6135    1   DCL TEMP$ PTR;                                   /*Temp. Ptr*/
       68     6136    1   DCL BLK$ PTR;                           /*Parse output block ptr*/
       69     6137    1   DCL FID$ PTR;                           /*Pointer to fid*/
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:14   
       70     6138    1   DCL TEMP SBIN WORD;                               /* Temp cell */
       71     6139        %XUG_GETCMD (NAME=GETCMD, STCLASS=PARAM) ;
       72     6477        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
       73     6495          /***** External routines *****/
       74     6496        %INCLUDE CXG_ENTRY ;
       75     6508    1   DCL CXC$GETSEG ENTRY(2) ;               /*Get data segment*/
       76     6509    1   DCL CXC$RELSEG ENTRY(1);
       77     6510    1   DCL CXB$PROCOPT ENTRY(4) ;              /*Process option*/
       78     6511    1   DCL CXX$CNVRT_FID ENTRY(3) ;
       79     6512    1   DCL CXC$SCREECH ENTRY(2);                        /*Screech*/
       80     6513    1   DCL CXB$RELVPA ENTRY(1);                         /*Release vlp area in *A*/
       81     6514    1   DCL CX_DATA_D ENTRY CONV (5);       /* Force LINK to UNSAT-load data defn's. */
       82     6515    1   DCL X$ALLOCATE ENTRY(1) ALTRET;
       83     6516          /***** Based structures *****/
       84     6517        %B$TCB (STCLASS="BASED(B$TCB$)");
       85     6520        %B$EXCFR;
       86     6538        %EJECT;
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:15   
       87     6539    1     IF CPSL_PARAM.FLAGS.VERIFY_ONLY

   6539  2 000002   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 000003   000001 234100                    SZN     1,,PR0
         2 000004   000021 605000 2                  TPL     s:6545

       88     6540    1         THEN
       89     6541    2             DO ;

       90     6542    2               CALL CXB$PROCOPT(BLK$,MCB,GETCMD,CPSL_PARAM) ;

   6542  2 000005   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 000006   200005 235100                    LDA     @GETCMD,,AUTO
         2 000007   200314 757100                    STAQ    TEMP+4,,AUTO
         2 000010   200276 631500                    EPPR1   MCB,,AUTO
         2 000011   200313 451500                    STP1    TEMP+3,,AUTO
         2 000012   200003 236100                    LDQ     @BLK$,,AUTO
         2 000013   200312 756100                    STQ     TEMP+2,,AUTO
         2 000014   200312 630500                    EPPR0   TEMP+2,,AUTO
         2 000015   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000016   000000 701000 xent               TSX1    CXB$PROCOPT
         2 000017   000000 011000                    NOP     0

       91     6543    2               GOTO BLDAMRET ;

   6543  2 000020   000516 710000 2                  TRA     BLDAMRET

       92     6544    2             END ; /* Then Do */
       93     6545    1     CALL CXC$GETSEG(CPSL_SEG3$) ;                    /*Get seg for buffer*/

   6545  2 000021   000000 630400 3                  EPPR0   0
         2 000022   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000023   000000 701000 xent               TSX1    CXC$GETSEG
         2 000024   000000 011000                    NOP     0

       94     6546    1     IF CPSL_PARAM.ERRCODE ~= %NO#

PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:16   
   6546  2 000025   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 000026   000002 235100                    LDA     2,,PR0
         2 000027   000517 601000 2                  TNZ     CXB$BLDAM50

       95     6547    1         THEN
       96     6548    1             GOTO CXB$BLDAM50 ;
       97     6549        /*
       98     6550          ****  Initialize a/m record with defaults
       99     6551        */
      100     6552    1     AMR$REC$=CPSL_CAMR_REC;

   6552  2 000030   000000 471400 xsym               LDP1    CPSL_SEG3$
         2 000031   000100 100400                    MLR     fill='000'O
         2 000032   000000 000240 xsym               ADSC9   CPSL_CAMR_REC            cn=0,n=160
         2 000033   100000 000240                    ADSC9   0,,PR1                   cn=0,n=160

      101     6553    1     AMR$REC$.V_=PINCRW(CPSL_SEG3$,POFFW(ADDR(AMR$REC$.V),ADDR(AMR$REC$)));

   6553  2 000034   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 000035   000022 772000                    QRL     18
         2 000036   200312 756100                    STQ     TEMP+2,,AUTO
         2 000037   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 000040   000022 036003                    ADLQ    18,DU
         2 000041   000022 772000                    QRL     18
         2 000042   200312 136100                    SBLQ    TEMP+2,,AUTO
         2 000043   000022 736000                    QLS     18
         2 000044   000000 036000 xsym               ADLQ    CPSL_SEG3$
         2 000045   100000 756100                    STQ     0,,PR1

      102     6554        /*
      103     6555          ****  Initialize SEG3   control block
      104     6556        */
      105     6557    1     MCB.FREE_HEAD$=ADDR(NIL);

   6557  2 000046   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000047   200277 756100                    STQ     MCB+1,,AUTO

PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:17   
      106     6558        /*  ****  Reserve two words in a/m for HI_SEGMENT$ and FREE_HEAD$ */
      107     6559    1     MCB.SEGMENT_BASE$=PINCRW(AMR$REC$.V_,SIZEW(AMR$REC$.V)+2);

   6559  2 000050   100000 236100                    LDQ     0,,PR1
         2 000051   000030 036003                    ADLQ    24,DU
         2 000052   200300 756100                    STQ     MCB+2,,AUTO

      108     6560    1     MCB.HI_SEGMENT$=MCB.SEGMENT_BASE$;

   6560  2 000053   200301 756100                    STQ     MCB+3,,AUTO

      109     6561    1     MCB.WKSZ=1024-POFFC(MCB.SEGMENT_BASE$,CPSL_SEG3$); /*# words*/

   6561  2 000054   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 000055   000020 772000                    QRL     16
         2 000056   200312 756100                    STQ     TEMP+2,,AUTO
         2 000057   200300 236100                    LDQ     MCB+2,,AUTO
         2 000060   000020 772000                    QRL     16
         2 000061   200312 136100                    SBLQ    TEMP+2,,AUTO
         2 000062   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 000063   002001 036007                    ADLQ    1025,DL
         2 000064   200302 756100                    STQ     MCB+4,,AUTO

      110     6562    1     MCB.TYPE=0;                           /*Allocate bytes*/

   6562  2 000065   200303 450100                    STZ     MCB+5,,AUTO

      111     6563    1     MCB.MIN_SIZE=0;

   6563  2 000066   200305 450100                    STZ     MCB+7,,AUTO

      112     6564        /*
      113     6565          ****  Init. Fid pointers and M$FID fpt only if FID$ parameter passed.
      114     6566          ****  FID$ isn't passed if modifying existing a/m record via a SET or
      115     6567          ****   Modifying a dcb via an ADJUST.
      116     6568        */
      117     6569    1     IF (ADDR(FID$)~=ADDR(NIL))
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:18   

   6569  2 000067   200004 236100                    LDQ     @FID$,,AUTO
         2 000070   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000071   000460 600000 2                  TZE     s:6680

      118     6570    1        THEN
      119     6571    2           DO;

      120     6572    2              FPT_FID = CPSL_CFPT_FID ;

   6572  2 000072   000100 100400                    MLR     fill='000'O
         2 000073   000000 000140 xsym               ADSC9   CPSL_CFPT_FID            cn=0,n=96
         2 000074   200010 000140                    ADSC9   FPT_FID,,AUTO            cn=0,n=96

      121     6573    2              FPT_FID.V_ = VECTOR(FPT_FID.V) ;

   6573  2 000075   000001 235000 3                  LDA     1
         2 000076   200312 452500                    STP2    TEMP+2,,AUTO
         2 000077   200312 236100                    LDQ     TEMP+2,,AUTO
         2 000100   000034 036003                    ADLQ    28,DU
         2 000101   200010 757100                    STAQ    FPT_FID,,AUTO

      122     6574    2              FPT_FID.TEXTFID_=VECTOR(FID$->TEXTC.TEXT);

   6574  2 000102   200004 473500                    LDP3    @FID$,,AUTO
         2 000103   300000 474500                    LDP4    0,,PR3
         2 000104   000100 101500                    MRL     fill='000'O
         2 000105   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 000106   200312 000002                    ADSC9   TEMP+2,,AUTO             cn=0,n=2
         2 000107   200312 220100                    LDX0    TEMP+2,,AUTO
         2 000110   000000 635010                    EAA     0,X0
         2 000111   000002 771000                    ARL     2
         2 000112   000140 135007                    SBLA    96,DL
         2 000113   200313 454500                    STP4    TEMP+3,,AUTO
         2 000114   200313 236100                    LDQ     TEMP+3,,AUTO
         2 000115   200000 036007                    ADLQ    65536,DL
         2 000116   200012 757100                    STAQ    FPT_FID+2,,AUTO
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:19   

      123     6575    2              FPT_FID.NAME_=VECTOR(AMR_NAME);

   6575  2 000117   000002 235000 3                  LDA     2
         2 000120   200312 452500                    STP2    TEMP+2,,AUTO
         2 000121   200312 236100                    LDQ     TEMP+2,,AUTO
         2 000122   000144 036003                    ADLQ    100,DU
         2 000123   200014 757100                    STAQ    FPT_FID+4,,AUTO

      124     6576    2              FPT_FID.ACCT_=VECTOR(AMR_ACCT);

   6576  2 000124   000003 235000 3                  LDA     3
         2 000125   200312 452500                    STP2    TEMP+2,,AUTO
         2 000126   200312 236100                    LDQ     TEMP+2,,AUTO
         2 000127   000154 036003                    ADLQ    108,DU
         2 000130   200016 757100                    STAQ    FPT_FID+6,,AUTO

      125     6577    2              FPT_FID.PASS_=VECTOR(AMR_PASS);

   6577  2 000131   000003 235000 3                  LDA     3
         2 000132   200312 452500                    STP2    TEMP+2,,AUTO
         2 000133   200312 236100                    LDQ     TEMP+2,,AUTO
         2 000134   000156 036003                    ADLQ    110,DU
         2 000135   200020 757100                    STAQ    FPT_FID+8,,AUTO

      126     6578    2              FPT_FID.WSN_=VECTOR(AMR_WSN);

   6578  2 000136   000003 235000 3                  LDA     3
         2 000137   200312 452500                    STP2    TEMP+2,,AUTO
         2 000140   200312 236100                    LDQ     TEMP+2,,AUTO
         2 000141   000160 036003                    ADLQ    112,DU
         2 000142   200024 757100                    STAQ    FPT_FID+12,,AUTO

      127     6579    2              FPT_FID.SN_=VECTOR(AMR_SN);

   6579  2 000143   000004 235000 3                  LDA     4
         2 000144   200312 452500                    STP2    TEMP+2,,AUTO
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:20   
         2 000145   200312 236100                    LDQ     TEMP+2,,AUTO
         2 000146   000162 036003                    ADLQ    114,DU
         2 000147   200022 757100                    STAQ    FPT_FID+10,,AUTO

      128     6580    2              FPT_FID.ASN_=VECTOR(AMR$REC$.V.ASN#);

   6580  2 000150   177640 235007                    LDA     65440,DL
         2 000151   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 000152   000005 036000 3                  ADLQ    5
         2 000153   200026 757100                    STAQ    FPT_FID+14,,AUTO

      129     6581    2              FPT_FID.RES_=VECTOR(AMR$REC$.V.RES#);

   6581  2 000154   777640 235007                    LDA     -96,DL
         2 000155   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 000156   000026 036003                    ADLQ    22,DU
         2 000157   200030 757100                    STAQ    FPT_FID+16,,AUTO

      130     6582    2              FPT_FID.RESULTS_=VECTOR(FID_RESULTS);

   6582  2 000160   000006 235000 3                  LDA     6
         2 000161   200312 452500                    STP2    TEMP+2,,AUTO
         2 000162   200312 236100                    LDQ     TEMP+2,,AUTO
         2 000163   000132 036003                    ADLQ    90,DU
         2 000164   200032 757100                    STAQ    FPT_FID+18,,AUTO

      131     6583    2              FPT_FID.V.SCRUB.SNAME#=%YES#;

   6583  2 000165   400000 236003                    LDQ     -131072,DU
         2 000166   200034 256100                    ORSQ    FPT_FID+20,,AUTO

      132     6584    2              FPT_FID.V.SCRUB.SACCT#=%YES#;

   6584  2 000167   200000 236003                    LDQ     65536,DU
         2 000170   200034 256100                    ORSQ    FPT_FID+20,,AUTO

      133     6585    2              FPT_FID.V.SCRUB.SPASS#=%YES#;
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:21   

   6585  2 000171   100000 236003                    LDQ     32768,DU
         2 000172   200034 256100                    ORSQ    FPT_FID+20,,AUTO

      134     6586    2              FPT_FID.V.SCRUB.SSN#=%YES#;

   6586  2 000173   040000 236003                    LDQ     16384,DU
         2 000174   200034 256100                    ORSQ    FPT_FID+20,,AUTO

      135     6587    2              FPT_FID.V.SCRUB.SRES#=%YES#;

   6587  2 000175   010000 236003                    LDQ     4096,DU
         2 000176   200034 256100                    ORSQ    FPT_FID+20,,AUTO

      136     6588    2              FPT_FID.V.SCRUB.SWSN#=%YES#;

   6588  2 000177   020000 236003                    LDQ     8192,DU
         2 000200   200034 256100                    ORSQ    FPT_FID+20,,AUTO

      137     6589        /*
      138     6590          ****  Insert fid info. Into the a/m record
      139     6591        */
      140     6592    3              CALL M$FID(FPT_FID) WHENALTRETURN DO;

   6592  2 000201   200010 630500                    EPPR0   FPT_FID,,AUTO
         2 000202   420001 713400                    CLIMB   alt,+8193
         2 000203   404400 401760                    pmme    nvectors=10
         2 000204   000206 702000 2                  TSX2    s:6593
         2 000205   000215 710000 2                  TRA     s:6597

      141     6593    3                 IF BLK$->OUT$BLK.CODE~=SETCMND AND BLK$->OUT$BLK.CODE~=ADJUSTCMND

   6593  2 000206   200003 470500                    LDP0    @BLK$,,AUTO
         2 000207   000000 471500                    LDP1    0,,PR0
         2 000210   100000 720100                    LXL0    0,,PR1
         2 000211   000006 100003                    CMPX0   6,DU
         2 000212   000215 600000 2                  TZE     s:6597
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:22   
         2 000213   000001 100003                    CMPX0   1,DU
         2 000214   000531 601000 2                  TNZ     CXB$BLDAM65

      142     6594    3                    THEN
      143     6595    3                       GOTO CXB$BLDAM65;
      144     6596    3              END;

      145     6597    2              IF (FID_RESULTS.NAME=%YES#)

   6597  2 000215   200132 234100                    SZN     FID_RESULTS,,AUTO
         2 000216   000240 605000 2                  TPL     s:6611

      146     6598    2                 THEN
      147     6599    3                    DO;

      148     6600    3                       MCB.SIZE=AMR_NAME.L#+1;   /*Add one for count*/

   6600  2 000217   200144 236100                    LDQ     AMR_NAME,,AUTO
         2 000220   000033 772000                    QRL     27
         2 000221   000001 036007                    ADLQ    1,DL
         2 000222   200304 756100                    STQ     MCB+6,,AUTO

      149     6601    3                       CALL X$ALLOCATE(MCB) ALTRET(CXB$BLDAM55);

   6601  2 000223   200276 630500                    EPPR0   MCB,,AUTO
         2 000224   200312 450500                    STP0    TEMP+2,,AUTO
         2 000225   200312 630500                    EPPR0   TEMP+2,,AUTO
         2 000226   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000227   000000 701000 xent               TSX1    X$ALLOCATE
         2 000230   000523 702000 2                  TSX2    CXB$BLDAM55

      150     6602    3                       AMR$REC$.NAME_=MCB.ADDRESS$;

   6602  2 000231   200276 236100                    LDQ     MCB,,AUTO
         2 000232   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 000233   000003 756100                    STQ     3,,PR0

PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:23   
      151     6603    3                       AMR$REC$.NAME_->AM$NAME=AMR_NAME;

   6603  2 000234   000003 471500                    LDP1    3,,PR0
         2 000235   000100 100500                    MLR     fill='000'O
         2 000236   200144 000040                    ADSC9   AMR_NAME,,AUTO           cn=0,n=32
         2 000237   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32

      152     6604    3                    END;

      153     6605        /*
      154     6606          ****   Set account/password if specified, otherwise for ASN=FILE#,
      155     6607          ****   TAPE# or COMGROUP#,
      156     6608          ****   Reset them except when only pack,tape or comgroup was spec'd w/o name,
      157     6609          ****   Account, or password. Assume user wants his dcb unchanged in this case.
      158     6610        */
      159     6611    2              IF (FID_RESULTS.ACCT=%YES#) OR (AMR$REC$.V.ASN#=%FILE#) OR

   6611  2 000240   200132 236100                    LDQ     FID_RESULTS,,AUTO
         2 000241   200000 316003                    CANQ    65536,DU
         2 000242   000254 601000 2                  TNZ     s:6615
         2 000243   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 000244   000023 236100                    LDQ     19,,PR0
         2 000245   000777 376007                    ANQ     511,DL
         2 000246   000001 116007                    CMPQ    1,DL
         2 000247   000254 600000 2                  TZE     s:6615
         2 000250   000002 116007                    CMPQ    2,DL
         2 000251   000254 600000 2                  TZE     s:6615
         2 000252   000004 116007                    CMPQ    4,DL
         2 000253   000313 601000 2                  TNZ     CXB$BLDAM20

      160     6612    2                   (AMR$REC$.V.ASN#=%TAPE#) OR (AMR$REC$.V.ASN#=%COMGROUP#)
      161     6613    2                 THEN
      162     6614    3                    DO;

      163     6615    3                       IF (AMR$REC$.V.ASN#=%FILE#) OR (AMR$REC$.V.ASN#=%TAPE#)

   6615  2 000254   000000 470400 xsym               LDP0    CPSL_SEG3$
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:24   
         2 000255   000023 236100                    LDQ     19,,PR0
         2 000256   000777 376007                    ANQ     511,DL
         2 000257   000001 116007                    CMPQ    1,DL
         2 000260   000265 600000 2                  TZE     s:6618
         2 000261   000002 116007                    CMPQ    2,DL
         2 000262   000265 600000 2                  TZE     s:6618
         2 000263   000004 116007                    CMPQ    4,DL
         2 000264   000313 601000 2                  TNZ     CXB$BLDAM20

      164     6616    3                            OR (AMR$REC$.V.ASN#=%COMGROUP#)
      165     6617    3                          THEN
      166     6618    3                             IF ((FID_RESULTS.NAME=%NO#) AND (FID_RESULTS.ACCT=%NO#)
              6618                                      AND (FID_RESULTS.PASS=%NO#))

   6618  2 000265   200132 234100                    SZN     FID_RESULTS,,AUTO
         2 000266   000274 604000 2                  TMI     s:6623
         2 000267   200132 236100                    LDQ     FID_RESULTS,,AUTO
         2 000270   200000 316003                    CANQ    65536,DU
         2 000271   000274 601000 2                  TNZ     s:6623
         2 000272   100000 316003                    CANQ    32768,DU
         2 000273   000313 600000 2                  TZE     CXB$BLDAM20

      167     6619    3                                THEN
      168     6620    3                                   GOTO CXB$BLDAM20;
      169     6621    3                                ELSE
      170     6622    4                                   DO;

      171     6623    4                                      MCB.SIZE=8;

   6623  2 000274   000010 235007                    LDA     8,DL
         2 000275   200304 755100                    STA     MCB+6,,AUTO

      172     6624    4                                      CALL X$ALLOCATE(MCB) ALTRET(CXB$BLDAM55);

   6624  2 000276   200276 631500                    EPPR1   MCB,,AUTO
         2 000277   200312 451500                    STP1    TEMP+2,,AUTO
         2 000300   200312 630500                    EPPR0   TEMP+2,,AUTO
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:25   
         2 000301   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000302   000000 701000 xent               TSX1    X$ALLOCATE
         2 000303   000523 702000 2                  TSX2    CXB$BLDAM55

      173     6625    4                                      AMR$REC$.ACCT_=MCB.ADDRESS$;

   6625  2 000304   200276 236100                    LDQ     MCB,,AUTO
         2 000305   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 000306   000012 756100                    STQ     10,,PR0

      174     6626    4                                      AMR$REC$.ACCT_->AM$ACCT=AMR_ACCT;

   6626  2 000307   000012 471500                    LDP1    10,,PR0
         2 000310   000100 100500                    MLR     fill='000'O
         2 000311   200154 000010                    ADSC9   AMR_ACCT,,AUTO           cn=0,n=8
         2 000312   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8

      175     6627    4                                   END;

      176     6628    3                    END;

   6622  2 000313                       CXB$BLDAM20  null
      177     6629    2   CXB$BLDAM20:  ;
      178     6630    2              IF (FID_RESULTS.ACCT=%YES#) OR (AMR$REC$.V.ASN#=%FILE#) OR

   6630  2 000313   200132 236100                    LDQ     FID_RESULTS,,AUTO
         2 000314   200000 316003                    CANQ    65536,DU
         2 000315   000326 601000 2                  TNZ     s:6634
         2 000316   000023 236100                    LDQ     19,,PR0
         2 000317   000777 376007                    ANQ     511,DL
         2 000320   000001 116007                    CMPQ    1,DL
         2 000321   000326 600000 2                  TZE     s:6634
         2 000322   000002 116007                    CMPQ    2,DL
         2 000323   000326 600000 2                  TZE     s:6634
         2 000324   000004 116007                    CMPQ    4,DL
         2 000325   000364 601000 2                  TNZ     CXB$BLDAM30

PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:26   
      179     6631    2                   (AMR$REC$.V.ASN#=%TAPE#) OR (AMR$REC$.V.ASN#=%COMGROUP#)
      180     6632    2                 THEN
      181     6633    3                    DO;

      182     6634    3                       IF (AMR$REC$.V.ASN#=%FILE#) OR (AMR$REC$.V.ASN#=%TAPE#)

   6634  2 000326   000023 236100                    LDQ     19,,PR0
         2 000327   000777 376007                    ANQ     511,DL
         2 000330   000001 116007                    CMPQ    1,DL
         2 000331   000336 600000 2                  TZE     s:6637
         2 000332   000002 116007                    CMPQ    2,DL
         2 000333   000336 600000 2                  TZE     s:6637
         2 000334   000004 116007                    CMPQ    4,DL
         2 000335   000364 601000 2                  TNZ     CXB$BLDAM30

      183     6635    3                            OR (AMR$REC$.V.ASN#=%COMGROUP#)
      184     6636    3                          THEN
      185     6637    3                             IF ((FID_RESULTS.NAME=%NO#) AND (FID_RESULTS.ACCT=%NO#)
              6637                                      AND (FID_RESULTS.PASS=%NO#))

   6637  2 000336   200132 234100                    SZN     FID_RESULTS,,AUTO
         2 000337   000345 604000 2                  TMI     s:6642
         2 000340   200132 236100                    LDQ     FID_RESULTS,,AUTO
         2 000341   200000 316003                    CANQ    65536,DU
         2 000342   000345 601000 2                  TNZ     s:6642
         2 000343   100000 316003                    CANQ    32768,DU
         2 000344   000364 600000 2                  TZE     CXB$BLDAM30

      186     6638    3                                THEN
      187     6639    3                                   GOTO CXB$BLDAM30;
      188     6640    3                                ELSE
      189     6641    4                                   DO;

      190     6642    4                                      MCB.SIZE=8;

   6642  2 000345   000010 235007                    LDA     8,DL
         2 000346   200304 755100                    STA     MCB+6,,AUTO
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:27   

      191     6643    4                                      CALL X$ALLOCATE(MCB) ALTRET(CXB$BLDAM55);

   6643  2 000347   200276 631500                    EPPR1   MCB,,AUTO
         2 000350   200312 451500                    STP1    TEMP+2,,AUTO
         2 000351   200312 630500                    EPPR0   TEMP+2,,AUTO
         2 000352   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000353   000000 701000 xent               TSX1    X$ALLOCATE
         2 000354   000523 702000 2                  TSX2    CXB$BLDAM55

      192     6644    4                                      AMR$REC$.PASS_=MCB.ADDRESS$;

   6644  2 000355   200276 236100                    LDQ     MCB,,AUTO
         2 000356   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 000357   000004 756100                    STQ     4,,PR0

      193     6645    4                                      AMR$REC$.PASS_->AM$PASS=AMR_PASS;

   6645  2 000360   000004 471500                    LDP1    4,,PR0
         2 000361   000100 100500                    MLR     fill='000'O
         2 000362   200156 000010                    ADSC9   AMR_PASS,,AUTO           cn=0,n=8
         2 000363   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8

      194     6646    4                                   END;

      195     6647    3                    END;

   6641  2 000364                       CXB$BLDAM30  null
      196     6648    2   CXB$BLDAM30:  ;
      197     6649    2              IF (FID_RESULTS.WSN=%YES#)

   6649  2 000364   200132 236100                    LDQ     FID_RESULTS,,AUTO
         2 000365   020000 316003                    CANQ    8192,DU
         2 000366   000406 600000 2                  TZE     s:6657

      198     6650    2                 THEN
      199     6651    3                    DO;
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:28   

      200     6652    3                       MCB.SIZE=8;

   6652  2 000367   000010 235007                    LDA     8,DL
         2 000370   200304 755100                    STA     MCB+6,,AUTO

      201     6653    3                       CALL X$ALLOCATE(MCB) ALTRET(CXB$BLDAM55);

   6653  2 000371   200276 631500                    EPPR1   MCB,,AUTO
         2 000372   200312 451500                    STP1    TEMP+2,,AUTO
         2 000373   200312 630500                    EPPR0   TEMP+2,,AUTO
         2 000374   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000375   000000 701000 xent               TSX1    X$ALLOCATE
         2 000376   000523 702000 2                  TSX2    CXB$BLDAM55

      202     6654    3                       AMR$REC$.WSN_=MCB.ADDRESS$;

   6654  2 000377   200276 236100                    LDQ     MCB,,AUTO
         2 000400   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 000401   000015 756100                    STQ     13,,PR0

      203     6655    3                       AMR$REC$.WSN_->AM$WSN=AMR_WSN;

   6655  2 000402   000015 471500                    LDP1    13,,PR0
         2 000403   000100 100500                    MLR     fill='000'O
         2 000404   200160 000010                    ADSC9   AMR_WSN,,AUTO            cn=0,n=8
         2 000405   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8

      204     6656    3                    END;

      205     6657    2              IF (FID_RESULTS.SN=%YES#) OR (AMR$REC$.V.ASN#=%COMGROUP#) OR

   6657  2 000406   200132 236100                    LDQ     FID_RESULTS,,AUTO
         2 000407   040000 316003                    CANQ    16384,DU
         2 000410   000417 601000 2                  TNZ     s:6665
         2 000411   000023 236100                    LDQ     19,,PR0
         2 000412   000777 376007                    ANQ     511,DL
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:29   
         2 000413   000004 116007                    CMPQ    4,DL
         2 000414   000417 600000 2                  TZE     s:6665
         2 000415   000001 116007                    CMPQ    1,DL
         2 000416   000460 601000 2                  TNZ     s:6680

      206     6658    2                   (AMR$REC$.V.ASN#=%FILE#)
      207     6659    2                 THEN
      208     6660    3                    DO;

      209     6661        /*
      210     6662          ****  If no SN spec'd, create one consisting of blanks to
      211     6663          ****  Indicate SN's in dcb are to be reset.
      212     6664        */
      213     6665    3                       IF AMR_SN.NUM#=0

   6665  2 000417   200162 235100                    LDA     AMR_SN,,AUTO
         2 000420   000423 601000 2                  TNZ     s:6668

      214     6666    3                          THEN
      215     6667    3                             AMR_SN.NUM#=1;         /*Init. To one*/

   6667  2 000421   000001 236007                    LDQ     1,DL
         2 000422   200162 756100                    STQ     AMR_SN,,AUTO

      216     6668    3                       MCB.SIZE=(AMR_SN.NUM#*6)+4; /*Add 4 for sn count*/

   6668  2 000423   200162 236100                    LDQ     AMR_SN,,AUTO
         2 000424   000006 402007                    MPY     6,DL
         2 000425   000004 036007                    ADLQ    4,DL
         2 000426   200304 756100                    STQ     MCB+6,,AUTO

      217     6669    3                       CALL X$ALLOCATE(MCB) ALTRET(CXB$BLDAM55);

   6669  2 000427   200276 631500                    EPPR1   MCB,,AUTO
         2 000430   200312 451500                    STP1    TEMP+2,,AUTO
         2 000431   200312 630500                    EPPR0   TEMP+2,,AUTO
         2 000432   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:30   
         2 000433   000000 701000 xent               TSX1    X$ALLOCATE
         2 000434   000523 702000 2                  TSX2    CXB$BLDAM55

      218     6670    3                       AMR$REC$.SN_=MCB.ADDRESS$;

   6670  2 000435   200276 236100                    LDQ     MCB,,AUTO
         2 000436   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 000437   000001 756100                    STQ     1,,PR0

      219     6671    3                       AMR$REC$.SN_->AM$SN.NUM#=AMR_SN.NUM#;

   6671  2 000440   000001 471500                    LDP1    1,,PR0
         2 000441   200162 235100                    LDA     AMR_SN,,AUTO
         2 000442   100000 755100                    STA     0,,PR1

      220     6672    4                       DO TEMP = 0 TO AMR_SN.NUM#-1;

   6672  2 000443   200310 450100                    STZ     TEMP,,AUTO
         2 000444   000455 710000 2                  TRA     s:6674+1

      221     6673    4                          AMR$REC$.SN_->AM$SN.SN#(TEMP)=AMR_SN.SN#(TEMP);

   6673  2 000445   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 000446   000001 471500                    LDP1    1,,PR0
         2 000447   200310 236100                    LDQ     TEMP,,AUTO
         2 000450   000006 402007                    MPY     6,DL
         2 000451   040106 100506                    MLR     fill='040'O
         2 000452   200163 000006                    ADSC9   AMR_SN+1,Q,AUTO          cn=0,n=6
         2 000453   100001 000006                    ADSC9   1,Q,PR1                  cn=0,n=6

      222     6674    4                       END;

   6674  2 000454   200310 054100                    AOS     TEMP,,AUTO
         2 000455   200310 236100                    LDQ     TEMP,,AUTO
         2 000456   200162 116100                    CMPQ    AMR_SN,,AUTO
         2 000457   000445 604000 2                  TMI     s:6673

PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:31   
      223     6675    3                    END;

      224     6676    2           END;

      225     6677        /*
      226     6678          **** Process options if present on SET or ADJUST command
      227     6679        */
      228     6680    1     IF ((BLK$->OUT$BLK.CODE=SETCMND)

   6680  2 000460   200003 470500                    LDP0    @BLK$,,AUTO
         2 000461   000000 471500                    LDP1    0,,PR0
         2 000462   100000 720100                    LXL0    0,,PR1
         2 000463   000006 100003                    CMPX0   6,DU
         2 000464   000467 600000 2                  TZE     s:6684
         2 000465   000001 100003                    CMPX0   1,DU
         2 000466   000505 601000 2                  TNZ     s:6692

      229     6681    1          OR (BLK$->OUT$BLK.CODE=ADJUSTCMND))
      230     6682    1        THEN
      231     6683    2             DO ;

      232     6684    2               CALL CXB$PROCOPT(BLK$,MCB,GETCMD,CPSL_PARAM) ;

   6684  2 000467   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 000470   200005 235100                    LDA     @GETCMD,,AUTO
         2 000471   200314 757100                    STAQ    TEMP+4,,AUTO
         2 000472   200276 631500                    EPPR1   MCB,,AUTO
         2 000473   200313 451500                    STP1    TEMP+3,,AUTO
         2 000474   200003 236100                    LDQ     @BLK$,,AUTO
         2 000475   200312 756100                    STQ     TEMP+2,,AUTO
         2 000476   200312 630500                    EPPR0   TEMP+2,,AUTO
         2 000477   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000500   000000 701000 xent               TSX1    CXB$PROCOPT
         2 000501   000000 011000                    NOP     0

      233     6685    2               IF CPSL_PARAM.ERRCODE ~= %NO#

PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:32   
   6685  2 000502   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 000503   000002 235100                    LDA     2,,PR0
         2 000504   000540 601000 2                  TNZ     CXB$BLDAM70

      234     6686    2                 THEN
      235     6687    2                   GOTO CXB$BLDAM70 ;
      236     6688    2             END ; /* Then Do */

      237     6689        /*
      238     6690          ****  Save HI_SEGMENT$ and FREE_HEAD$ in *A for subsequent use
      239     6691        */
      240     6692    1     TEMP$=PINCRW(AMR$REC$.V_,SIZEW(AMR$REC$.V));

   6692  2 000505   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 000506   000000 236100                    LDQ     0,,PR0
         2 000507   000026 036003                    ADLQ    22,DU
         2 000510   200307 756100                    STQ     TEMP$,,AUTO

      241     6693    1     TEMP$->AMR$PTRS.HI_SEGMENT$=MCB.HI_SEGMENT$;

   6693  2 000511   200301 236100                    LDQ     MCB+3,,AUTO
         2 000512   200307 471500                    LDP1    TEMP$,,AUTO
         2 000513   100000 756100                    STQ     0,,PR1

      242     6694    1     TEMP$->AMR$PTRS.FREE_HEAD$=MCB.FREE_HEAD$;

   6694  2 000514   200277 236100                    LDQ     MCB+1,,AUTO
         2 000515   100001 756100                    STQ     1,,PR1

      243     6695    1   BLDAMRET:
      244     6696    1     RETURN;

   6696  2 000516   000000 702200 xent  BLDAMRET     TSX2  ! X66_ARET

   6694  2 000517                       CXB$BLDAM50  null
      245     6697
      246     6698    1   CXB$BLDAM50:;
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:33   
      247     6699    1     CALL CXC$SCREECH(E$SUASEG,'B');

   6699  2 000517   000011 630400 3                  EPPR0   9
         2 000520   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000521   000000 701000 xent               TSX1    CXC$SCREECH
         2 000522   000000 011000                    NOP     0

   6694  2 000523                       CXB$BLDAM55  null
      248     6700        /*E*    ERROR:   CXB-E$SUASEG-A
      249     6701                MESSAGE:  Command Processor ABORT:  Unable to obtain data segment.
      250     6702                                       JIT.ERR follows.
      251     6703                DESCRIPTION: Command Processor was unable to get a data segment used
      252     6704                             for the purpose of creating the assign merge record.
      253     6705        */
      254     6706    1   CXB$BLDAM55:;
      255     6707    1     CPSL_PARAM.ERRCODE = E_AMFULL ;

   6707  2 000523   000000 236000 1                  LDQ     E_AMFULL
         2 000524   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 000525   000002 756100                    STQ     2,,PR0

      256     6708    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   6708  2 000526   000013 236000 3                  LDQ     11
         2 000527   000001 356100                    ANSQ    1,,PR0

      257     6709    1     GOTO BLDAMRET ;

   6709  2 000530   000516 710000 2                  TRA     BLDAMRET

   6708  2 000531                       CXB$BLDAM65  null
      258     6710        /* Error message output by called routine if Command Processor detected ERROR.*/
      259     6711        /* Pass it through CPSL_PARAM.ERRCODE for the Command Processor to output. */
      260     6712        /* By a common error printing routine in Command Procesor. */
      261     6713    1   CXB$BLDAM65:;
      262     6714    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$EXCFR.ERR;

PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:34   
   6714  2 000531   000000 473400 xsym               LDP3    B$TCB$
         2 000532   300000 474500                    LDP4    0,,PR3
         2 000533   400102 236100                    LDQ     66,,PR4
         2 000534   200006 475500                    LDP5    @CPSL_PARAM,,AUTO
         2 000535   500002 756100                    STQ     2,,PR5

      263     6715    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   6715  2 000536   000013 236000 3                  LDQ     11
         2 000537   500001 356100                    ANSQ    1,,PR5

   6715  2 000540                       CXB$BLDAM70  null
      264     6716    1   CXB$BLDAM70:;
      265     6717    1     CALL CXC$RELSEG (CPSL_SEG3$);

   6717  2 000540   000000 630400 3                  EPPR0   0
         2 000541   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000542   000000 701000 xent               TSX1    CXC$RELSEG
         2 000543   000000 011000                    NOP     0

      266     6718    1     GOTO BLDAMRET ;

   6718  2 000544   000516 710000 2                  TRA     BLDAMRET
      267     6719    1   END CXB$BLDAM;
      268     6720                   %EOD;

PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:35   
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_ISUBS_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXB$BLDAM.
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:36   

 **** Variables and constants ****

  ****  Section 001 RoData CXB$BLDAM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_AMFULL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BLK$                      6-0-0/w PTR         r     1 @CPSL_PARAM
     4-0-0/w PTR         r     1 @FID$                      5-0-0/w PTR         r     1 @GETCMD
   154-0-0/c STRC(72)    r     1 AMR_ACCT                 144-0-0/c STRC(288)   r     1 AMR_NAME
   156-0-0/c STRC(72)    r     1 AMR_PASS                 162-0-0/d STRC(2736)  r     1 AMR_SN
   160-0-0/c STRC(72)    r     1 AMR_WSN                   *0-0-0/w PTR         r     1 BLK$
    *0-0-0/w STRC(180)   r     1 CPSL_PARAM                *0-0-0/w PTR         r     1 FID$
   132-0-0/d STRC(324)   r     1 FID_RESULTS               10-0-0/d STRC(864)   r     1 FPT_FID
    *0-0-0/d STRC(1512)  r     1 GETCMD                   276-0-0/w STRC(324)   r     1 MCB
   310-0-0/w SBIN        r     1 TEMP                     307-0-0/w PTR         r     1 TEMP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(2088)  r     1 CPSL_CAMR_REC              0-0-0/d STRC(864)   r     1 CPSL_CFPT_FID
     0-0-0/w PTR         r     1 CPSL_SEG3$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:37   

     0-0-0/c STRC(72)    r     1 AM$ACCT                    0-0-0/c STRC(288)   r     1 AM$NAME
     0-0-0/c STRC(72)    r     1 AM$PASS                    0-0-0/d STRC(2736)  r     1 AM$SN
     0-0-0/c STRC(72)    r     1 AM$WSN                     0-0-0/w STRC(72)    r     1 AMR$PTRS
     0-0-0/d STRC(1440)  r     1 AMR$REC$                   0-0-0/w STRC(2448)  r     1 B$EXCFR
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/w STRC(144)   r     1 OUT$BLK
     0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure CXB$BLDAM requires 357 words for executable code.
   Procedure CXB$BLDAM requires 206 words of local(AUTO) storage.
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:38   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:39   
          MINI XREF LISTING

AM$ACCT
      5964**DCL      6626<<ASSIGN
AM$NAME
      5951**DCL      6603<<ASSIGN
AM$PASS
      5977**DCL      6645<<ASSIGN
AM$SN.NUM#
      5990**DCL      6671<<ASSIGN
AM$SN.SN#
      5990**DCL      6673<<ASSIGN
AM$WSN
      6003**DCL      6655<<ASSIGN
AMR$PTRS.FREE_HEAD$
      5614**DCL      6694<<ASSIGN
AMR$PTRS.HI_SEGMENT$
      5613**DCL      6693<<ASSIGN
AMR$REC$
      5813**DCL      6552<<ASSIGN   6553--ASSIGN
AMR$REC$.ACCT_
      5817**DCL      6625<<ASSIGN   6626>>ASSIGN
AMR$REC$.ACSVEH_
      5815**DCL      5816--REDEF
AMR$REC$.ALTKEYS_
      5821**DCL      5822--REDEF    5822--REDEF
AMR$REC$.HDR_
      5820**DCL      5821--REDEF
AMR$REC$.NAME_
      5814**DCL      6602<<ASSIGN   6603>>ASSIGN
AMR$REC$.PASS_
      5815**DCL      6644<<ASSIGN   6645>>ASSIGN
AMR$REC$.SN_
      5813**DCL      6670<<ASSIGN   6671>>ASSIGN   6673>>ASSIGN
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:40   
AMR$REC$.TAB_
      5819**DCL      5820--REDEF
AMR$REC$.UHL_
      5813**DCL      5814--REDEF    5814--REDEF
AMR$REC$.V
      5822**DCL      6553--ASSIGN   6559--ASSIGN   6692--ASSIGN
AMR$REC$.V.ASN#
      5832**DCL      6580--ASSIGN   6611>>IF       6611>>IF       6611>>IF       6615>>IF       6615>>IF
      6615>>IF       6630>>IF       6630>>IF       6630>>IF       6634>>IF       6634>>IF       6634>>IF
      6657>>IF       6657>>IF
AMR$REC$.V.FSN#
      5853**DCL      5853--REDEF    5853--REDEF
AMR$REC$.V.RES#
      5837**DCL      6581--ASSIGN
AMR$REC$.V_
      5813**DCL      6553<<ASSIGN   6559>>ASSIGN   6692>>ASSIGN
AMR$REC$.WSN_
      5819**DCL      5819--REDEF    6654<<ASSIGN   6655>>ASSIGN
AMR_ACCT
      6043**DCL      6576--ASSIGN   6626>>ASSIGN
AMR_NAME
      6030**DCL      6575--ASSIGN   6603>>ASSIGN
AMR_NAME.L#
      6030**DCL      6600>>ASSIGN
AMR_PASS
      6056**DCL      6577--ASSIGN   6645>>ASSIGN
AMR_SN
      6082**DCL      6579--ASSIGN
AMR_SN.NUM#
      6082**DCL      6665>>IF       6667<<ASSIGN   6668>>ASSIGN   6671>>ASSIGN   6672>>DOINDEX
AMR_SN.SN#
      6082**DCL      6673>>ASSIGN
AMR_WSN
      6069**DCL      6578--ASSIGN   6655>>ASSIGN
B$EXCFR.ASL
      6521**DCL      6521--REDEF
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:41   
B$EXCFR.ERR
      6535**DCL      6714>>ASSIGN
B$EXCFR.ERR.ERR#
      6535**DCL      6535--REDEF
B$EXCFR.EVID
      6534**DCL      6534--REDEF    6535--REDEF
B$EXCFR.IR
      6522**DCL      6522--REDEF
B$EXCFR.PREVSZ
      6521**DCL      6521--REDEF
B$EXCFR.SUBC
      6533**DCL      6533--REDEF    6534--REDEF    6534--REDEF
B$JIT.CPFLAGS1.SLEAZE
       142**DCL       142--REDEF
B$JIT.ERR.MID
        49**DCL        49--REDEF
B$JIT.JRESPEAK
       210**DCL       211--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       319**DCL       319--REDEF     320--REDEF
B$JIT.PNR
       223**DCL       223--REDEF
B$JIT.TSLINE
       317**DCL       318--REDEF
B$JIT$
      4463**DCL        43--IMP-PTR
B$TCB.ALT$
      6518**DCL      6714>>ASSIGN
B$TCB$
      4464**DCL      6518--IMP-PTR  6714>>ASSIGN
BLDAMRET
      6696**LABEL    6543--GOTO     6709--GOTO     6718--GOTO
BLK$
      6136**DCL        33--PROC     5887--IMP-PTR  6542<>CALL     6593>>IF       6593>>IF       6680>>IF
      6680>>IF       6684<>CALL
CPSL_CAMR_REC
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:42   
      3749**DCL      6552>>ASSIGN
CPSL_CAMR_REC.ACSVEH_
      3751**DCL      3752--REDEF
CPSL_CAMR_REC.ALTKEYS_
      3757**DCL      3758--REDEF    3758--REDEF
CPSL_CAMR_REC.HDR_
      3756**DCL      3757--REDEF
CPSL_CAMR_REC.TAB_
      3755**DCL      3756--REDEF
CPSL_CAMR_REC.UHL_
      3749**DCL      3750--REDEF    3750--REDEF
CPSL_CAMR_REC.V.FSN#
      3789**DCL      3789--REDEF    3789--REDEF
CPSL_CAMR_REC.WSN_
      3755**DCL      3755--REDEF
CPSL_CFPT_CLOSE.SN_
      3816**DCL      3816--REDEF
CPSL_CFPT_CLOSE.UTL_
      3817**DCL      3817--REDEF
CPSL_CFPT_CLOSE.V.EXPIRE#
      3831**DCL      3831--REDEF
CPSL_CFPT_CLOSE.V.TYPE#
      3829**DCL      3829--REDEF
CPSL_CFPT_CLOSE.V.XTNSIZE#
      3826**DCL      3826--REDEF    3828--REDEF
CPSL_CFPT_FID
      3995**DCL      6572>>ASSIGN
CPSL_CFPT_OPEN.ACSVEH_
      3642**DCL      3643--REDEF
CPSL_CFPT_OPEN.ALTKEYS_
      3648**DCL      3649--REDEF    3649--REDEF
CPSL_CFPT_OPEN.HDR_
      3647**DCL      3648--REDEF
CPSL_CFPT_OPEN.TAB_
      3646**DCL      3647--REDEF
CPSL_CFPT_OPEN.UHL_
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:43   
      3640**DCL      3641--REDEF    3641--REDEF
CPSL_CFPT_OPEN.V.FSN#
      3680**DCL      3680--REDEF    3680--REDEF
CPSL_CFPT_OPEN.WSN_
      3646**DCL      3646--REDEF
CPSL_CFPT_READ.STATION_
      3855**DCL      3856--REDEF
CPSL_CFPT_READ.V.DVBYTE.REREAD#
      3867**DCL      3867--REDEF
CPSL_CFPT_READ.V.INDX#
      3865**DCL      3865--REDEF
CPSL_CFPT_WRITE.STATION_
      3893**DCL      3893--REDEF
CPSL_CFPT_WRITE.V.DVBYTE.VFC#
      3900**DCL      3900--REDEF
CPSL_CVLP_TRMCTL.BREAKCOUNT
      4284**DCL      4285--REDEF
CPSL_CVLP_WINDOW.FWINDOW#
      4380**DCL      4380--REDEF    4381--REDEF
CPSL_PARAM
      6478**DCL        33--PROC     6542<>CALL     6684<>CALL
CPSL_PARAM.ERRCODE
      6486**DCL      6546>>IF       6685>>IF       6707<<ASSIGN   6714<<ASSIGN
CPSL_PARAM.FLAGS.REPORTED_TO_USER
      6483**DCL      6708<<ASSIGN   6715<<ASSIGN
CPSL_PARAM.FLAGS.VERIFY_ONLY
      6481**DCL      6539>>IF
CPSL_SEG3$
      4466**DCL      5813--IMP-PTR  6545<>CALL     6552>>ASSIGN   6553>>ASSIGN   6553>>ASSIGN   6553>>ASSIGN
      6553>>ASSIGN   6559>>ASSIGN   6561>>ASSIGN   6580>>ASSIGN   6581>>ASSIGN   6602>>ASSIGN   6603>>ASSIGN
      6611>>IF       6611>>IF       6611>>IF       6615>>IF       6615>>IF       6615>>IF       6625>>ASSIGN
      6626>>ASSIGN   6630>>IF       6630>>IF       6630>>IF       6634>>IF       6634>>IF       6634>>IF
      6644>>ASSIGN   6645>>ASSIGN   6654>>ASSIGN   6655>>ASSIGN   6657>>IF       6657>>IF       6670>>ASSIGN
      6671>>ASSIGN   6673>>ASSIGN   6692>>ASSIGN   6717<>CALL
CXB$BLDAM20
      6622**LABEL    6620--GOTO
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:44   
CXB$BLDAM30
      6641**LABEL    6639--GOTO
CXB$BLDAM50
      6694**LABEL    6548--GOTO
CXB$BLDAM55
      6694**LABEL    6601--CALLALT  6624--CALLALT  6643--CALLALT  6653--CALLALT  6669--CALLALT
CXB$BLDAM65
      6708**LABEL    6595--GOTO
CXB$BLDAM70
      6715**LABEL    6687--GOTO
CXB$PROCOPT
      6510**DCL-ENT  6542--CALL     6684--CALL
CXC$GETSEG
      6508**DCL-ENT  6545--CALL
CXC$RELSEG
      6509**DCL-ENT  6717--CALL
CXC$SCREECH
      6512**DCL-ENT  6699--CALL
E_AMFULL
      6101**DCL      6707>>ASSIGN
FID$
      6137**DCL        33--PROC     6569--IF       6574>>ASSIGN   6574>>ASSIGN
FID_RESULTS
      5868**DCL      6582--ASSIGN
FID_RESULTS.ACCT
      5868**DCL      6611>>IF       6618>>IF       6630>>IF       6637>>IF
FID_RESULTS.NAME
      5868**DCL      6597>>IF       6618>>IF       6637>>IF
FID_RESULTS.PASS
      5868**DCL      6618>>IF       6637>>IF
FID_RESULTS.SN
      5868**DCL      6657>>IF
FID_RESULTS.WSN
      5868**DCL      6649>>IF
FPT_FID
      5627**DCL      6572<<ASSIGN   6592<>CALL
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:45   
FPT_FID.ACCT_
      5628**DCL      6576<<ASSIGN
FPT_FID.ASN_
      5630**DCL      6580<<ASSIGN
FPT_FID.NAME_
      5628**DCL      6575<<ASSIGN
FPT_FID.PASS_
      5628**DCL      6577<<ASSIGN
FPT_FID.RESULTS_
      5630**DCL      6582<<ASSIGN
FPT_FID.RES_
      5630**DCL      6581<<ASSIGN
FPT_FID.SN_
      5629**DCL      6579<<ASSIGN
FPT_FID.TEXTFID_
      5627**DCL      6574<<ASSIGN
FPT_FID.V
      5631**DCL      6573--ASSIGN
FPT_FID.V.SCRUB.SACCT#
      5631**DCL      6584<<ASSIGN
FPT_FID.V.SCRUB.SNAME#
      5631**DCL      6583<<ASSIGN
FPT_FID.V.SCRUB.SPASS#
      5632**DCL      6585<<ASSIGN
FPT_FID.V.SCRUB.SRES#
      5633**DCL      6587<<ASSIGN
FPT_FID.V.SCRUB.SSN#
      5632**DCL      6586<<ASSIGN
FPT_FID.V.SCRUB.SWSN#
      5632**DCL      6588<<ASSIGN
FPT_FID.V_
      5627**DCL      6573<<ASSIGN
FPT_FID.WSN_
      5629**DCL      6578<<ASSIGN
FPT_OPEN.ACSVEH_
      5706**DCL      5707--REDEF
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:46   
FPT_OPEN.ALTKEYS_
      5712**DCL      5713--REDEF    5713--REDEF
FPT_OPEN.HDR_
      5711**DCL      5712--REDEF
FPT_OPEN.TAB_
      5710**DCL      5711--REDEF
FPT_OPEN.UHL_
      5704**DCL      5705--REDEF    5705--REDEF
FPT_OPEN.V.FSN#
      5744**DCL      5744--REDEF    5744--REDEF
FPT_OPEN.WSN_
      5710**DCL      5710--REDEF
GETCMD
      6152**DCL        33--PROC     6542<>CALL     6684<>CALL
GETCMD.OUT$
      6157**DCL      6163--REDEF
M$FID
       396**DCL-ENT  6592--CALL
MCB
      6085**DCL      6542<>CALL     6601<>CALL     6624<>CALL     6643<>CALL     6653<>CALL     6669<>CALL
      6684<>CALL
MCB.ADDRESS$
      6085**DCL      6602>>ASSIGN   6625>>ASSIGN   6644>>ASSIGN   6654>>ASSIGN   6670>>ASSIGN
MCB.FREE_HEAD$
      6085**DCL      6557<<ASSIGN   6694>>ASSIGN
MCB.HI_SEGMENT$
      6085**DCL      6560<<ASSIGN   6693>>ASSIGN
MCB.MIN_SIZE
      6086**DCL      6563<<ASSIGN
MCB.SEGMENT_BASE$
      6085**DCL      6559<<ASSIGN   6560>>ASSIGN   6561>>ASSIGN
MCB.SIZE
      6085**DCL      6600<<ASSIGN   6623<<ASSIGN   6642<<ASSIGN   6652<<ASSIGN   6668<<ASSIGN
MCB.TYPE
      6085**DCL      6562<<ASSIGN
MCB.WKSZ
PL6.E3A0      #001=CXB$BLDAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:15 Page:47   
      6085**DCL      6561<<ASSIGN
OUT$BLK.CODE
      5895**DCL      6593>>IF       6593>>IF       6680>>IF       6680>>IF
TEMP
      6138**DCL      6672<<DOINDEX  6673>>ASSIGN   6673>>ASSIGN
TEMP$
      6135**DCL      6692<<ASSIGN   6693>>ASSIGN   6694>>ASSIGN
TEXTC.SIZ
      5878**DCL      5879--IMP-SIZ  6574>>ASSIGN
TEXTC.TEXT
      5879**DCL      6574--ASSIGN
X$ALLOCATE
      6515**DCL-ENT  6601--CALL     6624--CALL     6643--CALL     6653--CALL     6669--CALL

PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:48   
      269        1        /*T***********************************************************/
      270        2        /*T*                                                         */
      271        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      272        4        /*T*                                                         */
      273        5        /*T***********************************************************/
      274        6        /**********************************************************************/
      275        7        /*F*   NAME:   CXB$MDFYAM
      276        8               PURPOSE: To modify an existing assign merge record for a dcb in
      277        9                       the *A file.
      278       10               DESCRIPTION: CXB$MDFYAM modifies an already existing assign merge
      279       11                       record for a dcb.
      280       12        */
      281       13        /*D*   NAME:   CXB$MDFYAM
      282       14               CALL:   CALL CXB$MDFYAM(BLK$,DCB$,WKDCB#,GETCMD,CPSL_PARAM)
      283       15               INTERFACE: CXB$PROCOPT
      284       16               INPUT:  BLK$ - pointer to parse output block
      285       17                       DCB$ - pointer to dcb
      286       18                       WKDCB# - DCB to use for read/write of AMR.
      287       19                       GETCMD - The CXG$GETCMD parameter. Used for GETCMD.ERR#.
      288       20                       CPSL_PARAM - The Command Processor Special Library Parameter.
      289       21               OUTPUT: specified assign merge record in buffer
      290       22               DESCRIPTION: Data segment #3 is obtained and utilized as a buffer
      291       23                       for reading an assign merge record. The assign merge record
      292       24                       for a specified dcb is read and modified utilizing the
      293       25                        options specified on the command.
      294       26        */
      295       27        /**********************************************************************/
      296       28        CXB$MDFYAM: PROC(BLK$,DCBNAME$,WKDCB#,GETCMD,CPSL_PARAM) ;
      297       29                   %INCLUDE CP_6;
      298      110                   %INCLUDE CP_6_SUBS;
      299      650                   %INCLUDE XU_MACRO_C;
      300     3756                   %INCLUDE XUM_MACRO_C;
      301     3783                   %INCLUDE CX_SUBS_C;
      302     3796                   %INCLUDE CX_ISUBS_C;
      303     4148                   %INCLUDE CX_PERR_C;
      304     4219                   %INCLUDE F_ERRORS_C;
      305     4459                   %INCLUDE B$JIT;
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:49   
      306     4749                   %INCLUDE CX_MACROS_M;
      307     4800                  %INCLUDE CX_DATA_R;
      308     5734    1   DCL CXB$PROCOPT ENTRY(4) ;              /*Process options*/
      309     5735    1   DCL CXC$READAM ENTRY(3) ;               /*Read a/m recd*/
      310     5736    1   DCL CXC$RELSEG ENTRY(1);
      311     5737    1   DCL BLK$ PTR;                           /*Parse output block ptr*/
      312     5738    1   DCL DCBNAME$ PTR;                       /*Pointer to dcb name*/
      313     5739    1   DCL WKDCB# PTR ;                        /* DCB to use for read/write of amr */
      314     5740        %XUG_GETCMD (NAME=GETCMD,STCLASS=PARAM) ;
      315     6078        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM,STCLASS=PARAM) ;
      316     6096    1   DCL TEMP$ PTR;                                   /*Temporary pointer*/
      317     6097          /***** Error codes *****/
      318     6098          /***** Fpts *****/
      319     6099        %XUM$MCB(NAME=MCB,STCLASS=AUTO);
      320     6103        %CPSL_AMR$PTRS(NAME=AMR$PTRS,STCLASS=BASED);
      321     6108        %FPT_OPEN(FPTN=AMR$REC$,STCLASS="BASED(CPSL_SEG3$)",PFMT="PTR");
      322     6217        %EJECT;
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:50   
      323     6218        /*
      324     6219             ***** Read A/M record into SEG$3 ...
      325     6220        */
      326     6221    1     IF CPSL_PARAM.FLAGS.VERIFY_ONLY
      327     6222    1         THEN
      328     6223    2             DO ;
      329     6224    2               CALL CXB$PROCOPT(BLK$,MCB,GETCMD,CPSL_PARAM) ;
      330     6225    2               GOTO MDFYAMRET ;
      331     6226    2             END ; /* Then Do */
      332     6227    1     CALL CXC$READAM(DCBNAME$,WKDCB#,CPSL_PARAM) ;
      333     6228    1     IF CPSL_PARAM.ERRCODE ~= %NO#
      334     6229    1         THEN
      335     6230    1             GOTO CXB$MDFYAM50 ;
      336     6231        /*
      337     6232          ****  Initialize SEG3 allocation block
      338     6233        */
      339     6234    1     MCB.SEGMENT_BASE$=PINCRW(AMR$REC$.V_,SIZEW(AMR$REC$.V)+2);
      340     6235        /*  ****   Get HI_SEGMENT$ & FREE_HEAD$ from *A  */
      341     6236    1     TEMP$=PINCRW(AMR$REC$.V_,SIZEW(AMR$REC$.V));
      342     6237    1     MCB.HI_SEGMENT$=TEMP$->AMR$PTRS.HI_SEGMENT$;
      343     6238    1     MCB.FREE_HEAD$=TEMP$->AMR$PTRS.FREE_HEAD$;
      344     6239    1     MCB.WKSZ=1024-POFFC(MCB.SEGMENT_BASE$,CPSL_SEG3$);
      345     6240    1     MCB.MIN_SIZE=0;
      346     6241    1     MCB.TYPE=0;
      347     6242    1     CALL CXB$PROCOPT(BLK$,MCB,GETCMD,CPSL_PARAM) ;          /*Process options*/
      348     6243    1     IF CPSL_PARAM.ERRCODE ~= %NO#
      349     6244    1         THEN
      350     6245    1           GOTO CXB$MDFYAM50 ;
      351     6246        /*
      352     6247          ****  Store HI_SEGMENT$ & FREE_HEAD$ in *A for subsequent use
      353     6248        */
      354     6249    1     TEMP$->AMR$PTRS.HI_SEGMENT$=MCB.HI_SEGMENT$;
      355     6250    1     TEMP$->AMR$PTRS.FREE_HEAD$=MCB.FREE_HEAD$;
      356     6251    2     DO WHILE (%NO#) ;
      357     6252    2   CXB$MDFYAM50:;
      358     6253        /* Error message output by calling routines if CPSL detected error*/
      359     6254    2        CALL CXC$RELSEG (CPSL_SEG3$);
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:51   
      360     6255    2     END ;   /* Do While */
      361     6256
      362     6257    1     MDFYAMRET:
      363     6258    1     RETURN;
      364     6259    1   END CXB$MDFYAM;
      365     6260        %EOD;

PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:52   
--  Include file information  --

   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_ISUBS_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXB$MDFYAM.

   Procedure CXB$MDFYAM requires 74 words for executable code.
   Procedure CXB$MDFYAM requires 22 words of local(AUTO) storage.

PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:53   

 Object Unit name= CXB$MDFYAM                                 File name= CXB$SUBR.:E05TOU
 UTS= JUL 29 '97 12:17:52.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    74    112  CXB$MDFYAM
    2  RoData even  none     1      1  CXB$MDFYAM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        5  CXB$MDFYAM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 CXB$PROCOPT
         yes           Std       3 CXC$READAM
         yes           Std       1 CXC$RELSEG
                       nStd      0 X66_AUTO_5
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:54   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$JIT$                           r    CPSL_SEG3$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:55   


      269        1        /*T***********************************************************/
      270        2        /*T*                                                         */
      271        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      272        4        /*T*                                                         */
      273        5        /*T***********************************************************/
      274        6        /**********************************************************************/
      275        7        /*F*   NAME:   CXB$MDFYAM
      276        8               PURPOSE: To modify an existing assign merge record for a dcb in
      277        9                       the *A file.
      278       10               DESCRIPTION: CXB$MDFYAM modifies an already existing assign merge
      279       11                       record for a dcb.
      280       12        */
      281       13        /*D*   NAME:   CXB$MDFYAM
      282       14               CALL:   CALL CXB$MDFYAM(BLK$,DCB$,WKDCB#,GETCMD,CPSL_PARAM)
      283       15               INTERFACE: CXB$PROCOPT
      284       16               INPUT:  BLK$ - pointer to parse output block
      285       17                       DCB$ - pointer to dcb
      286       18                       WKDCB# - DCB to use for read/write of AMR.
      287       19                       GETCMD - The CXG$GETCMD parameter. Used for GETCMD.ERR#.
      288       20                       CPSL_PARAM - The Command Processor Special Library Parameter.
      289       21               OUTPUT: specified assign merge record in buffer
      290       22               DESCRIPTION: Data segment #3 is obtained and utilized as a buffer
      291       23                       for reading an assign merge record. The assign merge record
      292       24                       for a specified dcb is read and modified utilizing the
      293       25                        options specified on the command.
      294       26        */
      295       27        /**********************************************************************/
      296       28        CXB$MDFYAM: PROC(BLK$,DCBNAME$,WKDCB#,GETCMD,CPSL_PARAM) ;

     28  1 000000   000000 700200 xent  CXB$MDFYAM   TSX0  ! X66_AUTO_5
         1 000001   000026 000005                    ZERO    22,5

      297       29                   %INCLUDE CP_6;
      298      110                   %INCLUDE CP_6_SUBS;
      299      650                   %INCLUDE XU_MACRO_C;
      300     3756                   %INCLUDE XUM_MACRO_C;
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:56   
      301     3783                   %INCLUDE CX_SUBS_C;
      302     3796                   %INCLUDE CX_ISUBS_C;
      303     4148                   %INCLUDE CX_PERR_C;
      304     4219                   %INCLUDE F_ERRORS_C;
      305     4459                   %INCLUDE B$JIT;
      306     4749                   %INCLUDE CX_MACROS_M;
      307     4800                  %INCLUDE CX_DATA_R;
      308     5734    1   DCL CXB$PROCOPT ENTRY(4) ;              /*Process options*/
      309     5735    1   DCL CXC$READAM ENTRY(3) ;               /*Read a/m recd*/
      310     5736    1   DCL CXC$RELSEG ENTRY(1);
      311     5737    1   DCL BLK$ PTR;                           /*Parse output block ptr*/
      312     5738    1   DCL DCBNAME$ PTR;                       /*Pointer to dcb name*/
      313     5739    1   DCL WKDCB# PTR ;                        /* DCB to use for read/write of amr */
      314     5740        %XUG_GETCMD (NAME=GETCMD,STCLASS=PARAM) ;
      315     6078        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM,STCLASS=PARAM) ;
      316     6096    1   DCL TEMP$ PTR;                                   /*Temporary pointer*/
      317     6097          /***** Error codes *****/
      318     6098          /***** Fpts *****/
      319     6099        %XUM$MCB(NAME=MCB,STCLASS=AUTO);
      320     6103        %CPSL_AMR$PTRS(NAME=AMR$PTRS,STCLASS=BASED);
      321     6108        %FPT_OPEN(FPTN=AMR$REC$,STCLASS="BASED(CPSL_SEG3$)",PFMT="PTR");
      322     6217        %EJECT;
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:57   
      323     6218        /*
      324     6219             ***** Read A/M record into SEG$3 ...
      325     6220        */
      326     6221    1     IF CPSL_PARAM.FLAGS.VERIFY_ONLY

   6221  1 000002   200007 470500                    LDP0    @CPSL_PARAM,,AUTO
         1 000003   000001 234100                    SZN     1,,PR0
         1 000004   000020 605000 1                  TPL     s:6227

      327     6222    1         THEN
      328     6223    2             DO ;

      329     6224    2               CALL CXB$PROCOPT(BLK$,MCB,GETCMD,CPSL_PARAM) ;

   6224  1 000005   200006 237100                    LDAQ    @GETCMD,,AUTO
         1 000006   200024 757100                    STAQ    MCB+11,,AUTO
         1 000007   200011 631500                    EPPR1   MCB,,AUTO
         1 000010   200023 451500                    STP1    MCB+10,,AUTO
         1 000011   200003 236100                    LDQ     @BLK$,,AUTO
         1 000012   200022 756100                    STQ     MCB+9,,AUTO
         1 000013   200022 630500                    EPPR0   MCB+9,,AUTO
         1 000014   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000015   000000 701000 xent               TSX1    CXB$PROCOPT
         1 000016   000000 011000                    NOP     0

      330     6225    2               GOTO MDFYAMRET ;

   6225  1 000017   000111 710000 1                  TRA     MDFYAMRET

      331     6226    2             END ; /* Then Do */
      332     6227    1     CALL CXC$READAM(DCBNAME$,WKDCB#,CPSL_PARAM) ;

   6227  1 000020   200007 236100                    LDQ     @CPSL_PARAM,,AUTO
         1 000021   200024 756100                    STQ     MCB+11,,AUTO
         1 000022   200004 237100                    LDAQ    @DCBNAME$,,AUTO
         1 000023   200022 757100                    STAQ    MCB+9,,AUTO
         1 000024   200022 630500                    EPPR0   MCB+9,,AUTO
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:58   
         1 000025   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000026   000000 701000 xent               TSX1    CXC$READAM
         1 000027   000000 011000                    NOP     0

      333     6228    1     IF CPSL_PARAM.ERRCODE ~= %NO#

   6228  1 000030   200007 470500                    LDP0    @CPSL_PARAM,,AUTO
         1 000031   000002 235100                    LDA     2,,PR0
         1 000032   000105 601000 1                  TNZ     CXB$MDFYAM50

      334     6229    1         THEN
      335     6230    1             GOTO CXB$MDFYAM50 ;
      336     6231        /*
      337     6232          ****  Initialize SEG3 allocation block
      338     6233        */
      339     6234    1     MCB.SEGMENT_BASE$=PINCRW(AMR$REC$.V_,SIZEW(AMR$REC$.V)+2);

   6234  1 000033   000000 471400 xsym               LDP1    CPSL_SEG3$
         1 000034   100000 236100                    LDQ     0,,PR1
         1 000035   000030 036003                    ADLQ    24,DU
         1 000036   200013 756100                    STQ     MCB+2,,AUTO

      340     6235        /*  ****   Get HI_SEGMENT$ & FREE_HEAD$ from *A  */
      341     6236    1     TEMP$=PINCRW(AMR$REC$.V_,SIZEW(AMR$REC$.V));

   6236  1 000037   100000 236100                    LDQ     0,,PR1
         1 000040   000026 036003                    ADLQ    22,DU
         1 000041   200010 756100                    STQ     TEMP$,,AUTO

      342     6237    1     MCB.HI_SEGMENT$=TEMP$->AMR$PTRS.HI_SEGMENT$;

   6237  1 000042   200010 473500                    LDP3    TEMP$,,AUTO
         1 000043   300000 236100                    LDQ     0,,PR3
         1 000044   200014 756100                    STQ     MCB+3,,AUTO

      343     6238    1     MCB.FREE_HEAD$=TEMP$->AMR$PTRS.FREE_HEAD$;

PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:59   
   6238  1 000045   300001 236100                    LDQ     1,,PR3
         1 000046   200012 756100                    STQ     MCB+1,,AUTO

      344     6239    1     MCB.WKSZ=1024-POFFC(MCB.SEGMENT_BASE$,CPSL_SEG3$);

   6239  1 000047   000000 236000 xsym               LDQ     CPSL_SEG3$
         1 000050   000020 772000                    QRL     16
         1 000051   200022 756100                    STQ     MCB+9,,AUTO
         1 000052   200013 236100                    LDQ     MCB+2,,AUTO
         1 000053   000020 772000                    QRL     16
         1 000054   200022 136100                    SBLQ    MCB+9,,AUTO
         1 000055   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000056   002001 036007                    ADLQ    1025,DL
         1 000057   200015 756100                    STQ     MCB+4,,AUTO

      345     6240    1     MCB.MIN_SIZE=0;

   6240  1 000060   200020 450100                    STZ     MCB+7,,AUTO

      346     6241    1     MCB.TYPE=0;

   6241  1 000061   200016 450100                    STZ     MCB+5,,AUTO

      347     6242    1     CALL CXB$PROCOPT(BLK$,MCB,GETCMD,CPSL_PARAM) ;          /*Process options*/

   6242  1 000062   200006 237100                    LDAQ    @GETCMD,,AUTO
         1 000063   200024 757100                    STAQ    MCB+11,,AUTO
         1 000064   200011 634500                    EPPR4   MCB,,AUTO
         1 000065   200023 454500                    STP4    MCB+10,,AUTO
         1 000066   200003 236100                    LDQ     @BLK$,,AUTO
         1 000067   200022 756100                    STQ     MCB+9,,AUTO
         1 000070   200022 630500                    EPPR0   MCB+9,,AUTO
         1 000071   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000072   000000 701000 xent               TSX1    CXB$PROCOPT
         1 000073   000000 011000                    NOP     0

      348     6243    1     IF CPSL_PARAM.ERRCODE ~= %NO#
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:60   

   6243  1 000074   200007 470500                    LDP0    @CPSL_PARAM,,AUTO
         1 000075   000002 235100                    LDA     2,,PR0
         1 000076   000105 601000 1                  TNZ     CXB$MDFYAM50

      349     6244    1         THEN
      350     6245    1           GOTO CXB$MDFYAM50 ;
      351     6246        /*
      352     6247          ****  Store HI_SEGMENT$ & FREE_HEAD$ in *A for subsequent use
      353     6248        */
      354     6249    1     TEMP$->AMR$PTRS.HI_SEGMENT$=MCB.HI_SEGMENT$;

   6249  1 000077   200014 236100                    LDQ     MCB+3,,AUTO
         1 000100   200010 471500                    LDP1    TEMP$,,AUTO
         1 000101   100000 756100                    STQ     0,,PR1

      355     6250    1     TEMP$->AMR$PTRS.FREE_HEAD$=MCB.FREE_HEAD$;

   6250  1 000102   200012 236100                    LDQ     MCB+1,,AUTO
         1 000103   100001 756100                    STQ     1,,PR1

      356     6251    2     DO WHILE (%NO#) ;

   6251  1 000104   000111 710000 1                  TRA     MDFYAMRET

   6245  1 000105                       CXB$MDFYAM50 null
      357     6252    2   CXB$MDFYAM50:;
      358     6253        /* Error message output by calling routines if CPSL detected error*/
      359     6254    2        CALL CXC$RELSEG (CPSL_SEG3$);

   6254  1 000105   000000 630400 2                  EPPR0   0
         1 000106   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000107   000000 701000 xent               TSX1    CXC$RELSEG
         1 000110   000000 011000                    NOP     0

      360     6255    2     END ;   /* Do While */

PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:61   
      361     6256
      362     6257    1     MDFYAMRET:
      363     6258    1     RETURN;

   6258  1 000111   000000 702200 xent  MDFYAMRET    TSX2  ! X66_ARET
      364     6259    1   END CXB$MDFYAM;
      365     6260        %EOD;

PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:62   
--  Include file information  --

   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_ISUBS_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXB$MDFYAM.
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:63   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BLK$                      7-0-0/w PTR         r     1 @CPSL_PARAM
     4-0-0/w PTR         r     1 @DCBNAME$                  6-0-0/w PTR         r     1 @GETCMD
     5-0-0/w PTR         r     1 @WKDCB#                   *0-0-0/w PTR         r     1 BLK$
    *0-0-0/w STRC(180)   r     1 CPSL_PARAM                *0-0-0/w PTR         r     1 DCBNAME$
    *0-0-0/d STRC(1512)  r     1 GETCMD                    11-0-0/w STRC(324)   r     1 MCB
    10-0-0/w PTR         r     1 TEMP$                     *0-0-0/w PTR         r     1 WKDCB#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 CPSL_SEG3$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 AMR$PTRS                   0-0-0/d STRC(1440)  r     1 AMR$REC$


   Procedure CXB$MDFYAM requires 74 words for executable code.
   Procedure CXB$MDFYAM requires 22 words of local(AUTO) storage.
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:64   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:65   
          MINI XREF LISTING

AMR$PTRS.FREE_HEAD$
      6106**DCL      6238>>ASSIGN   6250<<ASSIGN
AMR$PTRS.HI_SEGMENT$
      6105**DCL      6237>>ASSIGN   6249<<ASSIGN
AMR$REC$.ACSVEH_
      6175**DCL      6176--REDEF
AMR$REC$.ALTKEYS_
      6181**DCL      6182--REDEF    6182--REDEF
AMR$REC$.HDR_
      6180**DCL      6181--REDEF
AMR$REC$.TAB_
      6179**DCL      6180--REDEF
AMR$REC$.UHL_
      6173**DCL      6174--REDEF    6174--REDEF
AMR$REC$.V
      6182**DCL      6234--ASSIGN   6236--ASSIGN
AMR$REC$.V.FSN#
      6213**DCL      6213--REDEF    6213--REDEF
AMR$REC$.V_
      6173**DCL      6234>>ASSIGN   6236>>ASSIGN
AMR$REC$.WSN_
      6179**DCL      6179--REDEF
B$JIT.CPFLAGS1.SLEAZE
      4567**DCL      4567--REDEF
B$JIT.ERR.MID
      4474**DCL      4474--REDEF
B$JIT.JRESPEAK
      4635**DCL      4636--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      4744**DCL      4744--REDEF    4745--REDEF
B$JIT.PNR
      4648**DCL      4648--REDEF
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:66   
B$JIT.TSLINE
      4742**DCL      4743--REDEF
B$JIT$
      5701**DCL      4468--IMP-PTR
BLK$
      5737**DCL        28--PROC     6224<>CALL     6242<>CALL
CPSL_CAMR_REC.ACSVEH_
      4989**DCL      4990--REDEF
CPSL_CAMR_REC.ALTKEYS_
      4995**DCL      4996--REDEF    4996--REDEF
CPSL_CAMR_REC.HDR_
      4994**DCL      4995--REDEF
CPSL_CAMR_REC.TAB_
      4993**DCL      4994--REDEF
CPSL_CAMR_REC.UHL_
      4987**DCL      4988--REDEF    4988--REDEF
CPSL_CAMR_REC.V.FSN#
      5027**DCL      5027--REDEF    5027--REDEF
CPSL_CAMR_REC.WSN_
      4993**DCL      4993--REDEF
CPSL_CFPT_CLOSE.SN_
      5054**DCL      5054--REDEF
CPSL_CFPT_CLOSE.UTL_
      5055**DCL      5055--REDEF
CPSL_CFPT_CLOSE.V.EXPIRE#
      5069**DCL      5069--REDEF
CPSL_CFPT_CLOSE.V.TYPE#
      5067**DCL      5067--REDEF
CPSL_CFPT_CLOSE.V.XTNSIZE#
      5064**DCL      5064--REDEF    5066--REDEF
CPSL_CFPT_OPEN.ACSVEH_
      4880**DCL      4881--REDEF
CPSL_CFPT_OPEN.ALTKEYS_
      4886**DCL      4887--REDEF    4887--REDEF
CPSL_CFPT_OPEN.HDR_
      4885**DCL      4886--REDEF
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:67   
CPSL_CFPT_OPEN.TAB_
      4884**DCL      4885--REDEF
CPSL_CFPT_OPEN.UHL_
      4878**DCL      4879--REDEF    4879--REDEF
CPSL_CFPT_OPEN.V.FSN#
      4918**DCL      4918--REDEF    4918--REDEF
CPSL_CFPT_OPEN.WSN_
      4884**DCL      4884--REDEF
CPSL_CFPT_READ.STATION_
      5093**DCL      5094--REDEF
CPSL_CFPT_READ.V.DVBYTE.REREAD#
      5105**DCL      5105--REDEF
CPSL_CFPT_READ.V.INDX#
      5103**DCL      5103--REDEF
CPSL_CFPT_WRITE.STATION_
      5131**DCL      5131--REDEF
CPSL_CFPT_WRITE.V.DVBYTE.VFC#
      5138**DCL      5138--REDEF
CPSL_CVLP_TRMCTL.BREAKCOUNT
      5522**DCL      5523--REDEF
CPSL_CVLP_WINDOW.FWINDOW#
      5618**DCL      5618--REDEF    5619--REDEF
CPSL_PARAM
      6079**DCL        28--PROC     6224<>CALL     6227<>CALL     6242<>CALL
CPSL_PARAM.ERRCODE
      6087**DCL      6228>>IF       6243>>IF
CPSL_PARAM.FLAGS.VERIFY_ONLY
      6082**DCL      6221>>IF
CPSL_SEG3$
      5704**DCL      6173--IMP-PTR  6234>>ASSIGN   6236>>ASSIGN   6239>>ASSIGN   6254<>CALL
CXB$MDFYAM50
      6245**LABEL    6230--GOTO     6245--GOTO
CXB$PROCOPT
      5734**DCL-ENT  6224--CALL     6242--CALL
CXC$READAM
      5735**DCL-ENT  6227--CALL
PL6.E3A0      #002=CXB$MDFYAM File=CXB$SUBR.:E05TSI                              TUE 07/29/97 12:17 Page:68   
CXC$RELSEG
      5736**DCL-ENT  6254--CALL
DCBNAME$
      5738**DCL        28--PROC     6227<>CALL
GETCMD
      5753**DCL        28--PROC     6224<>CALL     6242<>CALL
GETCMD.OUT$
      5758**DCL      5764--REDEF
MCB
      6100**DCL      6224<>CALL     6242<>CALL
MCB.FREE_HEAD$
      6100**DCL      6238<<ASSIGN   6250>>ASSIGN
MCB.HI_SEGMENT$
      6100**DCL      6237<<ASSIGN   6249>>ASSIGN
MCB.MIN_SIZE
      6101**DCL      6240<<ASSIGN
MCB.SEGMENT_BASE$
      6100**DCL      6234<<ASSIGN   6239>>ASSIGN
MCB.TYPE
      6100**DCL      6241<<ASSIGN
MCB.WKSZ
      6100**DCL      6239<<ASSIGN
MDFYAMRET
      6258**LABEL    6225--GOTO
TEMP$
      6096**DCL      6236<<ASSIGN   6237>>ASSIGN   6238>>ASSIGN   6249>>ASSIGN   6250>>ASSIGN
WKDCB#
      5739**DCL        28--PROC     6227<>CALL

PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:69   
      366        1        /*T***********************************************************/
      367        2        /*T*                                                         */
      368        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      369        4        /*T*                                                         */
      370        5        /*T***********************************************************/
      371        6        /**********************************************************************/
      372        7        /*F*   NAME:   CXB$DELAM
      373        8               PURPOSE: Delete a keyed record or multiple keyed records in the *a file.
      374        9               DESCRIPTION: A single keyed record is deleted if one key is specified.
      375       10                       If two keys are specified, this is considered a range
      376       11                       specification and multiple keys are deleted.
      377       12        */
      378       13        /*D*   NAME:   CXB$DELAM
      379       14               CALL:   CALL CXB$DELAM(FKEY$,LKEY$,WKDCB#,CPSL_PARAM)
      380       15               INPUT:  FKEY$ - pointer to first key to be deleted
      381       16                       LKEY$ - pointer to last key within range to be deleted
      382       17                       WKDCB# - The dcb number to use to DELETE AM record.
      383       18                       CPSL_PARAM - The Command Processor Shared Library Parameter.
      384       19               OUTPUT: assign merge record(s) deleted from *a file
      385       20               DESCRIPTION: A check is made to determine whether a single or
      386       21                       multiple keyed records within a given range are to be
      387       22                       deleted and the M$DELREC fpt initialized accordingly.
      388       23        */
      389       24        /**********************************************************************/
      390       25        CXB$DELAM: PROC(FKEY$,LKEY$,WKDCB#,CPSL_PARAM) ;
      391       26                   %INCLUDE CP_6;
      392      107                   %INCLUDE XU_MACRO_C;
      393     3213                   %INCLUDE CX_DATA_R;
      394     4147                   %INCLUDE CX_MACROS_M;
      395     4198                   %INCLUDE CX_SUBS_C;
      396     4211                   %INCLUDE B_MACROS_C;
      397     4322                   %INCLUDE CX_PERR_C;
      398     4393                   %INCLUDE CP_6_SUBS;
      399     4933                   %INCLUDE B$JIT;
      400     5223                   %INCLUDE B_ERRORS_C;
      401     6350                   %INCLUDE CXG_ENTRY ;
      402     6362          /***** Parameters *****/
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:70   
      403     6363    1   DCL FKEY$ PTR;                          /*Ptr to 1ST key*/
      404     6364    1   DCL LKEY$ PTR;                          /*Ptr to last key*/
      405     6365    1   DCL WKDCB# UBIN WORD ;
      406     6366    1   DCL ACTIVE_PRIVS BIT(36) ;
      407     6367        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
      408     6385          /***** External routines *****/
      409     6386          /***** Based structures *****/
      410     6387        %B$TCB (STCLASS="BASED(B$TCB$)");
      411     6390        %B$EXCFR;
      412     6408        %TEXTC;
      413     6413        %F$DCB(DCBN=F$DCB);
      414     6470        %FPT_CLOSE(FPTN=FPT_CLOSE,STCLASS=AUTO);
      415     6512          /***** Fpts *****/
      416     6513        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
      417     6622        %FPT_DELREC(FPTN=FPT_DELREC,STCLASS=AUTO);
      418     6641        %EJECT;
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:71   
      419     6642          %SAVE_ACTIVE_PRIVS;
      420     6646    1     FPT_CLOSE = CPSL_CFPT_CLOSE ;
      421     6647    1     FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V) ;
      422     6648        /*
      423     6649             ***** Open *A file...
      424     6650        */
      425     6651    1     FPT_OPEN=CPSL_CFPT_OPEN;
      426     6652    1     FPT_OPEN.V_=VECTOR(FPT_OPEN.V);
      427     6653    1     FPT_OPEN.NAME_=VECTOR(CPSL_STARA);
      428     6654    1     FPT_OPEN.V.DCB#=WKDCB#;
      429     6655    1     FPT_OPEN.V.ASN#=%FILE#;
      430     6656    1     FPT_OPEN.V.FUN#=%UPDATE#;
      431     6657    1     FPT_OPEN.V.ORG#=%KEYED#;
      432     6658    1     FPT_OPEN.V.ACS#=%DIRECT#;
      433     6659    1     FPT_OPEN.V.INITZ.SCRUB#=%YES#;
      434     6660    1     CALL M$OPEN(FPT_OPEN) ALTRET(E_OPENAM);
      435     6661          %RESTORE_ACTIVE_PRIVS;
      436     6664        /*
      437     6665             ***** init FPT_DELREC
      438     6666        */
      439     6667    1     FPT_DELREC = CPSL_CFPT_DELREC;
      440     6668    1     FPT_DELREC.V_ = VECTOR(FPT_DELREC.V);
      441     6669    1     FPT_DELREC.KEY_=VECTOR(FKEY$->TEXTC);
      442     6670    1     FPT_DELREC.V.DCB#=WKDCB#;
      443     6671        /*
      444     6672             *****     Check if last key spec'd
      445     6673        */
      446     6674    1     IF ADDR(LKEY$)=ADDR(NIL)
      447     6675    1        THEN
      448     6676    1           FPT_DELREC.LKEY_=VECTOR(NIL);
      449     6677    1        ELSE
      450     6678    1           FPT_DELREC.LKEY_=VECTOR(LKEY$->TEXTC);
      451     6679        /*
      452     6680             *****     Delete the spec'd records
      453     6681        */
      454     6682    1     CALL M$DELREC(FPT_DELREC) ALTRET(E_DELAM);
      455     6683    1     FPT_CLOSE.V.DCB#=WKDCB#;
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:72   
      456     6684    1     FPT_CLOSE.V.DISP#=%SAVE#;
      457     6685    1     CALL M$CLOSE(FPT_CLOSE) ALTRET(E_CLOSE);
      458     6686    1   DELAMRET:
      459     6687    1     RETURN;
      460     6688
      461     6689    1   E_OPENAM:
      462     6690          %RESTORE_ACTIVE_PRIVS;
      463     6693    1   E_DELAM:
      464     6694    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$EXCFR.ERR;
      465     6695    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      466     6696    1     IF DCBADDR(WKDCB#) -> F$DCB.FCD#
      467     6697    1        THEN /* *A file open */
      468     6698    2           DO; /* close it */
      469     6699    2              FPT_CLOSE.V.DCB#=WKDCB#;
      470     6700    2              FPT_CLOSE.V.DISP#=%SAVE#;
      471     6701    2              CALL M$CLOSE(FPT_CLOSE) ALTRET(E_CLOSE);
      472     6702    2           END;
      473     6703    1     GOTO DELAMRET ;
      474     6704    1   E_CLOSE:
      475     6705    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$EXCFR.ERR;
      476     6706    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      477     6707    1     GOTO DELAMRET ;
      478     6708    1   END CXB$DELAM;
      479     6709                   %EOD;

PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:73   
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXB$DELAM.

   Procedure CXB$DELAM requires 135 words for executable code.
   Procedure CXB$DELAM requires 108 words of local(AUTO) storage.

PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:74   

 Object Unit name= CXB$DELAM                                  File name= CXB$SUBR.:E05TOU
 UTS= JUL 29 '97 12:19:34.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none   135    207  CXB$DELAM
    2  RoData even  none     9     11  CXB$DELAM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        4  CXB$DELAM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CPSL_CFPT_OPEN                        CPSL_CFPT_CLOSE
     CPSL_CFPT_DELREC                 r    B$JIT$                           r    B$TCB$
     CPSL_STARA                            B_VECTNIL
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:75   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ROSID                                 ISSID
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:76   


      366        1        /*T***********************************************************/
      367        2        /*T*                                                         */
      368        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      369        4        /*T*                                                         */
      370        5        /*T***********************************************************/
      371        6        /**********************************************************************/
      372        7        /*F*   NAME:   CXB$DELAM
      373        8               PURPOSE: Delete a keyed record or multiple keyed records in the *a file.
      374        9               DESCRIPTION: A single keyed record is deleted if one key is specified.
      375       10                       If two keys are specified, this is considered a range
      376       11                       specification and multiple keys are deleted.
      377       12        */
      378       13        /*D*   NAME:   CXB$DELAM
      379       14               CALL:   CALL CXB$DELAM(FKEY$,LKEY$,WKDCB#,CPSL_PARAM)
      380       15               INPUT:  FKEY$ - pointer to first key to be deleted
      381       16                       LKEY$ - pointer to last key within range to be deleted
      382       17                       WKDCB# - The dcb number to use to DELETE AM record.
      383       18                       CPSL_PARAM - The Command Processor Shared Library Parameter.
      384       19               OUTPUT: assign merge record(s) deleted from *a file
      385       20               DESCRIPTION: A check is made to determine whether a single or
      386       21                       multiple keyed records within a given range are to be
      387       22                       deleted and the M$DELREC fpt initialized accordingly.
      388       23        */
      389       24        /**********************************************************************/
      390       25        CXB$DELAM: PROC(FKEY$,LKEY$,WKDCB#,CPSL_PARAM) ;

     25  1 000000   000000 700200 xent  CXB$DELAM    TSX0  ! X66_AUTO_4
         1 000001   000154 000004                    ZERO    108,4

      391       26                   %INCLUDE CP_6;
      392      107                   %INCLUDE XU_MACRO_C;
      393     3213                   %INCLUDE CX_DATA_R;
      394     4147                   %INCLUDE CX_MACROS_M;
      395     4198                   %INCLUDE CX_SUBS_C;
      396     4211                   %INCLUDE B_MACROS_C;
      397     4322                   %INCLUDE CX_PERR_C;
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:77   
      398     4393                   %INCLUDE CP_6_SUBS;
      399     4933                   %INCLUDE B$JIT;
      400     5223                   %INCLUDE B_ERRORS_C;
      401     6350                   %INCLUDE CXG_ENTRY ;
      402     6362          /***** Parameters *****/
      403     6363    1   DCL FKEY$ PTR;                          /*Ptr to 1ST key*/
      404     6364    1   DCL LKEY$ PTR;                          /*Ptr to last key*/
      405     6365    1   DCL WKDCB# UBIN WORD ;
      406     6366    1   DCL ACTIVE_PRIVS BIT(36) ;
      407     6367        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
      408     6385          /***** External routines *****/
      409     6386          /***** Based structures *****/
      410     6387        %B$TCB (STCLASS="BASED(B$TCB$)");
      411     6390        %B$EXCFR;
      412     6408        %TEXTC;
      413     6413        %F$DCB(DCBN=F$DCB);
      414     6470        %FPT_CLOSE(FPTN=FPT_CLOSE,STCLASS=AUTO);
      415     6512          /***** Fpts *****/
      416     6513        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
      417     6622        %FPT_DELREC(FPTN=FPT_DELREC,STCLASS=AUTO);
      418     6641        %EJECT;
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:78   
      419     6642          %SAVE_ACTIVE_PRIVS;

   6643  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000013 236100                    LDQ     11,,PR0
         1 000004   200007 756100                    STQ     ACTIVE_PRIVS,,AUTO

   6644  1 000005   000013 450100                    STZ     11,,PR0

      420     6646    1     FPT_CLOSE = CPSL_CFPT_CLOSE ;

   6646  1 000006   000100 100400                    MLR     fill='000'O
         1 000007   000000 000170 xsym               ADSC9   CPSL_CFPT_CLOSE          cn=0,n=120
         1 000010   200010 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

      421     6647    1     FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V) ;

   6647  1 000011   000000 235000 2                  LDA     0
         1 000012   200152 452500                    STP2    FPT_DELREC+10,,AUTO
         1 000013   200152 236100                    LDQ     FPT_DELREC+10,,AUTO
         1 000014   000042 036003                    ADLQ    34,DU
         1 000015   200010 757100                    STAQ    FPT_CLOSE,,AUTO

      422     6648        /*
      423     6649             ***** Open *A file...
      424     6650        */
      425     6651    1     FPT_OPEN=CPSL_CFPT_OPEN;

   6651  1 000016   000100 100400                    MLR     fill='000'O
         1 000017   000000 000350 xsym               ADSC9   CPSL_CFPT_OPEN           cn=0,n=232
         1 000020   200046 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      426     6652    1     FPT_OPEN.V_=VECTOR(FPT_OPEN.V);

   6652  1 000021   000001 235000 2                  LDA     1
         1 000022   200152 452500                    STP2    FPT_DELREC+10,,AUTO
         1 000023   200152 236100                    LDQ     FPT_DELREC+10,,AUTO
         1 000024   000112 036003                    ADLQ    74,DU
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:79   
         1 000025   200046 757100                    STAQ    FPT_OPEN,,AUTO

      427     6653    1     FPT_OPEN.NAME_=VECTOR(CPSL_STARA);

   6653  1 000026   000002 237000 2                  LDAQ    2
         1 000027   200054 757100                    STAQ    FPT_OPEN+6,,AUTO

      428     6654    1     FPT_OPEN.V.DCB#=WKDCB#;

   6654  1 000030   200005 471500                    LDP1    @WKDCB#,,AUTO
         1 000031   100000 720100                    LXL0    0,,PR1
         1 000032   200112 740100                    STX0    FPT_OPEN+36,,AUTO

      429     6655    1     FPT_OPEN.V.ASN#=%FILE#;

   6655  1 000033   000001 236007                    LDQ     1,DL
         1 000034   200113 552104                    STBQ    FPT_OPEN+37,'04'O,AUTO

      430     6656    1     FPT_OPEN.V.FUN#=%UPDATE#;

   6656  1 000035   001000 236007                    LDQ     512,DL
         1 000036   200113 552110                    STBQ    FPT_OPEN+37,'10'O,AUTO

      431     6657    1     FPT_OPEN.V.ORG#=%KEYED#;

   6657  1 000037   002000 236007                    LDQ     1024,DL
         1 000040   200114 552110                    STBQ    FPT_OPEN+38,'10'O,AUTO

      432     6658    1     FPT_OPEN.V.ACS#=%DIRECT#;

   6658  1 000041   000002 236007                    LDQ     2,DL
         1 000042   200114 552104                    STBQ    FPT_OPEN+38,'04'O,AUTO

      433     6659    1     FPT_OPEN.V.INITZ.SCRUB#=%YES#;

   6659  1 000043   400000 236007                    LDQ     -131072,DL
         1 000044   200112 256100                    ORSQ    FPT_OPEN+36,,AUTO
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:80   

      434     6660    1     CALL M$OPEN(FPT_OPEN) ALTRET(E_OPENAM);

   6660  1 000045   200046 630500                    EPPR0   FPT_OPEN,,AUTO
         1 000046   450000 713400                    CLIMB   alt,open
         1 000047   410400 401760                    pmme    nvectors=18
         1 000050   000145 702000 1                  TSX2    E_OPENAM

      435     6661          %RESTORE_ACTIVE_PRIVS;

   6662  1 000051   200007 236100                    LDQ     ACTIVE_PRIVS,,AUTO
         1 000052   000000 470400 xsym               LDP0    B$JIT$
         1 000053   000013 756100                    STQ     11,,PR0

      436     6664        /*
      437     6665             ***** init FPT_DELREC
      438     6666        */
      439     6667    1     FPT_DELREC = CPSL_CFPT_DELREC;

   6667  1 000054   000100 100400                    MLR     fill='000'O
         1 000055   000000 000050 xsym               ADSC9   CPSL_CFPT_DELREC         cn=0,n=40
         1 000056   200140 000050                    ADSC9   FPT_DELREC,,AUTO         cn=0,n=40

      440     6668    1     FPT_DELREC.V_ = VECTOR(FPT_DELREC.V);

   6668  1 000057   000004 235000 2                  LDA     4
         1 000060   200152 452500                    STP2    FPT_DELREC+10,,AUTO
         1 000061   200152 236100                    LDQ     FPT_DELREC+10,,AUTO
         1 000062   000150 036003                    ADLQ    104,DU
         1 000063   200140 757100                    STAQ    FPT_DELREC,,AUTO

      441     6669    1     FPT_DELREC.KEY_=VECTOR(FKEY$->TEXTC);

   6669  1 000064   200003 471500                    LDP1    @FKEY$,,AUTO
         1 000065   100000 473500                    LDP3    0,,PR1
         1 000066   000100 101500                    MRL     fill='000'O
         1 000067   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:81   
         1 000070   200152 000002                    ADSC9   FPT_DELREC+10,,AUTO      cn=0,n=2
         1 000071   200152 220100                    LDX0    FPT_DELREC+10,,AUTO
         1 000072   000001 621010                    EAX1    1,X0
         1 000073   000000 635011                    EAA     0,X1
         1 000074   000002 771000                    ARL     2
         1 000075   000140 135007                    SBLA    96,DL
         1 000076   200153 453500                    STP3    FPT_DELREC+11,,AUTO
         1 000077   200153 236100                    LDQ     FPT_DELREC+11,,AUTO
         1 000100   200142 757100                    STAQ    FPT_DELREC+2,,AUTO

      442     6670    1     FPT_DELREC.V.DCB#=WKDCB#;

   6670  1 000101   200005 473500                    LDP3    @WKDCB#,,AUTO
         1 000102   300000 720100                    LXL0    0,,PR3
         1 000103   200150 740100                    STX0    FPT_DELREC+8,,AUTO

      443     6671        /*
      444     6672             *****     Check if last key spec'd
      445     6673        */
      446     6674    1     IF ADDR(LKEY$)=ADDR(NIL)

   6674  1 000104   200004 236100                    LDQ     @LKEY$,,AUTO
         1 000105   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000106   000112 601000 1                  TNZ     s:6678

      447     6675    1        THEN
      448     6676    1           FPT_DELREC.LKEY_=VECTOR(NIL);

   6676  1 000107   000006 237000 2                  LDAQ    6
         1 000110   200144 757100                    STAQ    FPT_DELREC+4,,AUTO
         1 000111   000127 710000 1                  TRA     s:6682

      449     6677    1        ELSE
      450     6678    1           FPT_DELREC.LKEY_=VECTOR(LKEY$->TEXTC);

   6678  1 000112   200004 474500                    LDP4    @LKEY$,,AUTO
         1 000113   400000 475500                    LDP5    0,,PR4
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:82   
         1 000114   000100 101500                    MRL     fill='000'O
         1 000115   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         1 000116   200152 000002                    ADSC9   FPT_DELREC+10,,AUTO      cn=0,n=2
         1 000117   200152 221100                    LDX1    FPT_DELREC+10,,AUTO
         1 000120   000001 622011                    EAX2    1,X1
         1 000121   000000 635012                    EAA     0,X2
         1 000122   000002 771000                    ARL     2
         1 000123   000140 135007                    SBLA    96,DL
         1 000124   200153 455500                    STP5    FPT_DELREC+11,,AUTO
         1 000125   200153 236100                    LDQ     FPT_DELREC+11,,AUTO
         1 000126   200144 757100                    STAQ    FPT_DELREC+4,,AUTO

      451     6679        /*
      452     6680             *****     Delete the spec'd records
      453     6681        */
      454     6682    1     CALL M$DELREC(FPT_DELREC) ALTRET(E_DELAM);

   6682  1 000127   200140 630500                    EPPR0   FPT_DELREC,,AUTO
         1 000130   440002 713400                    CLIMB   alt,+16386
         1 000131   401400 401760                    pmme    nvectors=4
         1 000132   000150 702000 1                  TSX2    E_DELAM

      455     6683    1     FPT_CLOSE.V.DCB#=WKDCB#;

   6683  1 000133   200005 470500                    LDP0    @WKDCB#,,AUTO
         1 000134   000000 720100                    LXL0    0,,PR0
         1 000135   200042 740100                    STX0    FPT_CLOSE+26,,AUTO

      456     6684    1     FPT_CLOSE.V.DISP#=%SAVE#;

   6684  1 000136   000002 236007                    LDQ     2,DL
         1 000137   200042 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      457     6685    1     CALL M$CLOSE(FPT_CLOSE) ALTRET(E_CLOSE);

   6685  1 000140   200010 630500                    EPPR0   FPT_CLOSE,,AUTO
         1 000141   450001 713400                    CLIMB   alt,close
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:83   
         1 000142   406000 401760                    pmme    nvectors=13
         1 000143   000177 702000 1                  TSX2    E_CLOSE

      458     6686    1   DELAMRET:
      459     6687    1     RETURN;

   6687  1 000144   000000 702200 xent  DELAMRET     TSX2  ! X66_ARET

      460     6688
      461     6689    1   E_OPENAM:
      462     6690          %RESTORE_ACTIVE_PRIVS;

   6691  1 000145   200007 236100       E_OPENAM     LDQ     ACTIVE_PRIVS,,AUTO
         1 000146   000000 470400 xsym               LDP0    B$JIT$
         1 000147   000013 756100                    STQ     11,,PR0

      463     6693    1   E_DELAM:
      464     6694    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$EXCFR.ERR;

   6694  1 000150   000000 470400 xsym  E_DELAM      LDP0    B$TCB$
         1 000151   000000 471500                    LDP1    0,,PR0
         1 000152   100102 236100                    LDQ     66,,PR1
         1 000153   200006 473500                    LDP3    @CPSL_PARAM,,AUTO
         1 000154   300002 756100                    STQ     2,,PR3

      465     6695    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   6695  1 000155   000005 236000 2                  LDQ     5
         1 000156   300001 356100                    ANSQ    1,,PR3

      466     6696    1     IF DCBADDR(WKDCB#) -> F$DCB.FCD#

   6696  1 000157   000010 471400 2                  LDP1    8
         1 000160   100000 474500                    LDP4    0,,PR1
         1 000161   200005 475500                    LDP5    @WKDCB#,,AUTO
         1 000162   500000 720100                    LXL0    0,,PR5
         1 000163   400000 476510                    LDP6    0,X0,PR4
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:84   
         1 000164   600031 236100                    LDQ     25,,PR6
         1 000165   020000 316007                    CANQ    8192,DL
         1 000166   000176 600000 1                  TZE     s:6703

      467     6697    1        THEN /* *A file open */
      468     6698    2           DO; /* close it */

      469     6699    2              FPT_CLOSE.V.DCB#=WKDCB#;

   6699  1 000167   200042 740100                    STX0    FPT_CLOSE+26,,AUTO

      470     6700    2              FPT_CLOSE.V.DISP#=%SAVE#;

   6700  1 000170   000002 236007                    LDQ     2,DL
         1 000171   200042 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      471     6701    2              CALL M$CLOSE(FPT_CLOSE) ALTRET(E_CLOSE);

   6701  1 000172   200010 630500                    EPPR0   FPT_CLOSE,,AUTO
         1 000173   450001 713400                    CLIMB   alt,close
         1 000174   406000 401760                    pmme    nvectors=13
         1 000175   000177 702000 1                  TSX2    E_CLOSE

      472     6702    2           END;

      473     6703    1     GOTO DELAMRET ;

   6703  1 000176   000144 710000 1                  TRA     DELAMRET

      474     6704    1   E_CLOSE:
      475     6705    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$EXCFR.ERR;

   6705  1 000177   000000 470400 xsym  E_CLOSE      LDP0    B$TCB$
         1 000200   000000 471500                    LDP1    0,,PR0
         1 000201   100102 236100                    LDQ     66,,PR1
         1 000202   200006 473500                    LDP3    @CPSL_PARAM,,AUTO
         1 000203   300002 756100                    STQ     2,,PR3
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:85   

      476     6706    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   6706  1 000204   000005 236000 2                  LDQ     5
         1 000205   300001 356100                    ANSQ    1,,PR3

      477     6707    1     GOTO DELAMRET ;

   6707  1 000206   000144 710000 1                  TRA     DELAMRET
      478     6708    1   END CXB$DELAM;
      479     6709                   %EOD;

PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:86   
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXB$DELAM.
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:87   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @CPSL_PARAM                3-0-0/w PTR         r     1 @FKEY$
     4-0-0/w PTR         r     1 @LKEY$                     5-0-0/w PTR         r     1 @WKDCB#
     7-0-0/b BIT         r     1 ACTIVE_PRIVS              *0-0-0/w STRC(180)   r     1 CPSL_PARAM
    *0-0-0/w PTR         r     1 FKEY$                     10-0-0/d STRC(1080)  r     1 FPT_CLOSE
   140-0-0/d STRC(360)   r     1 FPT_DELREC                46-0-0/d STRC(2088)  r     1 FPT_OPEN
    *0-0-0/w PTR         r     1 LKEY$                     *0-0-0/w UBIN        r     1 WKDCB#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(1080)  r     1 CPSL_CFPT_CLOSE            0-0-0/d STRC(360)   r     1 CPSL_CFPT_DELREC
     0-0-0/d STRC(2088)  r     1 CPSL_CFPT_OPEN             0-0-0/c STRC(27)    r     1 CPSL_STARA

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$EXCFR                    0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure CXB$DELAM requires 135 words for executable code.
   Procedure CXB$DELAM requires 108 words of local(AUTO) storage.
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:88   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:89   
          MINI XREF LISTING

ACTIVE_PRIVS
      6366**DCL      6643<<ASSIGN   6662>>ASSIGN   6691>>ASSIGN
B$EXCFR.ASL
      6391**DCL      6391--REDEF
B$EXCFR.ERR
      6405**DCL      6694>>ASSIGN   6705>>ASSIGN
B$EXCFR.ERR.ERR#
      6405**DCL      6405--REDEF
B$EXCFR.EVID
      6404**DCL      6404--REDEF    6405--REDEF
B$EXCFR.IR
      6392**DCL      6392--REDEF
B$EXCFR.PREVSZ
      6391**DCL      6391--REDEF
B$EXCFR.SUBC
      6403**DCL      6403--REDEF    6404--REDEF    6404--REDEF
B$JIT.CPFLAGS1.SLEAZE
      5041**DCL      5041--REDEF
B$JIT.ERR.MID
      4948**DCL      4948--REDEF
B$JIT.JRESPEAK
      5109**DCL      5110--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      5218**DCL      5218--REDEF    5219--REDEF
B$JIT.PNR
      5122**DCL      5122--REDEF
B$JIT.PRIV.ACTIVE
      4948**DCL      6643>>ASSIGN   6644<<ASSIGN   6662<<ASSIGN   6691<<ASSIGN
B$JIT.TSLINE
      5216**DCL      5217--REDEF
B$JIT$
      4114**DCL      4942--IMP-PTR  6643>>ASSIGN   6644>>ASSIGN   6662>>ASSIGN   6691>>ASSIGN
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:90   
B$TCB.ALT$
      6388**DCL      6694>>ASSIGN   6705>>ASSIGN
B$TCB$
      4115**DCL      6388--IMP-PTR  6694>>ASSIGN   6705>>ASSIGN
CPSL_CAMR_REC.ACSVEH_
      3402**DCL      3403--REDEF
CPSL_CAMR_REC.ALTKEYS_
      3408**DCL      3409--REDEF    3409--REDEF
CPSL_CAMR_REC.HDR_
      3407**DCL      3408--REDEF
CPSL_CAMR_REC.TAB_
      3406**DCL      3407--REDEF
CPSL_CAMR_REC.UHL_
      3400**DCL      3401--REDEF    3401--REDEF
CPSL_CAMR_REC.V.FSN#
      3440**DCL      3440--REDEF    3440--REDEF
CPSL_CAMR_REC.WSN_
      3406**DCL      3406--REDEF
CPSL_CFPT_CLOSE
      3467**DCL      6646>>ASSIGN
CPSL_CFPT_CLOSE.SN_
      3467**DCL      3467--REDEF
CPSL_CFPT_CLOSE.UTL_
      3468**DCL      3468--REDEF
CPSL_CFPT_CLOSE.V.EXPIRE#
      3482**DCL      3482--REDEF
CPSL_CFPT_CLOSE.V.TYPE#
      3480**DCL      3480--REDEF
CPSL_CFPT_CLOSE.V.XTNSIZE#
      3477**DCL      3477--REDEF    3479--REDEF
CPSL_CFPT_DELREC
      3567**DCL      6667>>ASSIGN
CPSL_CFPT_OPEN
      3291**DCL      6651>>ASSIGN
CPSL_CFPT_OPEN.ACSVEH_
      3293**DCL      3294--REDEF
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:91   
CPSL_CFPT_OPEN.ALTKEYS_
      3299**DCL      3300--REDEF    3300--REDEF
CPSL_CFPT_OPEN.HDR_
      3298**DCL      3299--REDEF
CPSL_CFPT_OPEN.TAB_
      3297**DCL      3298--REDEF
CPSL_CFPT_OPEN.UHL_
      3291**DCL      3292--REDEF    3292--REDEF
CPSL_CFPT_OPEN.V.FSN#
      3331**DCL      3331--REDEF    3331--REDEF
CPSL_CFPT_OPEN.WSN_
      3297**DCL      3297--REDEF
CPSL_CFPT_READ.STATION_
      3506**DCL      3507--REDEF
CPSL_CFPT_READ.V.DVBYTE.REREAD#
      3518**DCL      3518--REDEF
CPSL_CFPT_READ.V.INDX#
      3516**DCL      3516--REDEF
CPSL_CFPT_WRITE.STATION_
      3544**DCL      3544--REDEF
CPSL_CFPT_WRITE.V.DVBYTE.VFC#
      3551**DCL      3551--REDEF
CPSL_CVLP_TRMCTL.BREAKCOUNT
      3935**DCL      3936--REDEF
CPSL_CVLP_WINDOW.FWINDOW#
      4031**DCL      4031--REDEF    4032--REDEF
CPSL_PARAM
      6368**DCL        25--PROC
CPSL_PARAM.ERRCODE
      6376**DCL      6694<<ASSIGN   6705<<ASSIGN
CPSL_PARAM.FLAGS.REPORTED_TO_USER
      6373**DCL      6695<<ASSIGN   6706<<ASSIGN
CPSL_STARA
      4141**DCL      6653--ASSIGN
DELAMRET
      6687**LABEL    6703--GOTO     6707--GOTO
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:92   
E_CLOSE
      6705**LABEL    6685--CALLALT  6701--CALLALT
E_DELAM
      6694**LABEL    6682--CALLALT
E_OPENAM
      6691**LABEL    6660--CALLALT
F$DCB.ACTPOS
      6446**DCL      6446--REDEF
F$DCB.ARS#
      6420**DCL      6420--REDEF
F$DCB.ATTR
      6439**DCL      6440--REDEF
F$DCB.BORROW
      6454**DCL      6454--REDEF    6454--REDEF    6454--REDEF
F$DCB.DCBNAME.L
      6468**DCL      6468--IMP-SIZ
F$DCB.EOMCHAR#
      6424**DCL      6424--REDEF
F$DCB.FCD#
      6433**DCL      6696>>IF
F$DCB.FLDID
      6449**DCL      6449--REDEF
F$DCB.FORM$
      6443**DCL      6443--REDEF
F$DCB.FSECT
      6459**DCL      6459--REDEF
F$DCB.FSN#
      6436**DCL      6436--REDEF    6436--REDEF    6437--REDEF
F$DCB.HEADER$
      6442**DCL      6442--REDEF
F$DCB.IXTNSIZE#
      6440**DCL      6440--REDEF
F$DCB.LASTSTA$
      6429**DCL      6429--REDEF
F$DCB.LVL
      6455**DCL      6455--REDEF
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:93   
F$DCB.NAME#.C
      6430**DCL      6430--REDEF
F$DCB.NOEOF
      6452**DCL      6452--REDEF
F$DCB.NRECS#
      6441**DCL      6441--REDEF
F$DCB.NRECX
      6460**DCL      6460--REDEF
F$DCB.OHDR
      6452**DCL      6452--REDEF
F$DCB.ORG#
      6435**DCL      6435--REDEF
F$DCB.PRECNO
      6458**DCL      6458--REDEF
F$DCB.RCSZ
      6464**DCL      6464--REDEF
F$DCB.RES#
      6431**DCL      6431--REDEF
F$DCB.SETX
      6443**DCL      6443--REDEF
F$DCB.TAB$
      6443**DCL      6443--REDEF
F$DCB.TDA
      6457**DCL      6458--REDEF
F$DCB.WSN#
      6431**DCL      6431--REDEF
FKEY$
      6363**DCL        25--PROC     6669>>ASSIGN   6669>>ASSIGN
FPT_CLOSE
      6493**DCL      6646<<ASSIGN   6685<>CALL     6701<>CALL
FPT_CLOSE.SN_
      6493**DCL      6493--REDEF
FPT_CLOSE.UTL_
      6494**DCL      6494--REDEF
FPT_CLOSE.V
      6498**DCL      6647--ASSIGN
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:94   
FPT_CLOSE.V.DCB#
      6499**DCL      6683<<ASSIGN   6699<<ASSIGN
FPT_CLOSE.V.DISP#
      6502**DCL      6684<<ASSIGN   6700<<ASSIGN
FPT_CLOSE.V.EXPIRE#
      6508**DCL      6508--REDEF
FPT_CLOSE.V.TYPE#
      6506**DCL      6506--REDEF
FPT_CLOSE.V.XTNSIZE#
      6503**DCL      6503--REDEF    6505--REDEF
FPT_CLOSE.V_
      6493**DCL      6647<<ASSIGN
FPT_DELREC
      6633**DCL      6667<<ASSIGN   6682<>CALL
FPT_DELREC.KEY_
      6633**DCL      6669<<ASSIGN
FPT_DELREC.LKEY_
      6635**DCL      6676<<ASSIGN   6678<<ASSIGN
FPT_DELREC.V
      6636**DCL      6668--ASSIGN
FPT_DELREC.V.DCB#
      6637**DCL      6670<<ASSIGN
FPT_DELREC.V_
      6633**DCL      6668<<ASSIGN
FPT_OPEN
      6578**DCL      6651<<ASSIGN   6660<>CALL
FPT_OPEN.ACSVEH_
      6580**DCL      6581--REDEF
FPT_OPEN.ALTKEYS_
      6586**DCL      6587--REDEF    6587--REDEF
FPT_OPEN.HDR_
      6585**DCL      6586--REDEF
FPT_OPEN.NAME_
      6579**DCL      6653<<ASSIGN
FPT_OPEN.TAB_
      6584**DCL      6585--REDEF
PL6.E3A0      #003=CXB$DELAM File=CXB$SUBR.:E05TSI                               TUE 07/29/97 12:19 Page:95   
FPT_OPEN.UHL_
      6578**DCL      6579--REDEF    6579--REDEF
FPT_OPEN.V
      6587**DCL      6652--ASSIGN
FPT_OPEN.V.ACS#
      6598**DCL      6658<<ASSIGN
FPT_OPEN.V.ASN#
      6597**DCL      6655<<ASSIGN
FPT_OPEN.V.DCB#
      6587**DCL      6654<<ASSIGN
FPT_OPEN.V.FSN#
      6618**DCL      6618--REDEF    6618--REDEF
FPT_OPEN.V.FUN#
      6597**DCL      6656<<ASSIGN
FPT_OPEN.V.INITZ.SCRUB#
      6588**DCL      6659<<ASSIGN
FPT_OPEN.V.ORG#
      6598**DCL      6657<<ASSIGN
FPT_OPEN.V_
      6578**DCL      6652<<ASSIGN
FPT_OPEN.WSN_
      6584**DCL      6584--REDEF
LKEY$
      6364**DCL        25--PROC     6674--IF       6678>>ASSIGN   6678>>ASSIGN
M$CLOSE
        35**DCL-ENT  6685--CALL     6701--CALL
M$DELREC
        37**DCL-ENT  6682--CALL
M$OPEN
        35**DCL-ENT  6660--CALL
TEXTC
      6409**DCL      6669--ASSIGN   6678--ASSIGN
TEXTC.SIZ
      6410**DCL      6411--IMP-SIZ  6669>>ASSIGN   6678>>ASSIGN
WKDCB#
      6365**DCL        25--PROC     6654>>ASSIGN   6670>>ASSIGN   6683>>ASSIGN   6696--IF       6699>>ASSIGN

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:96   
      480        1        /*T***********************************************************/
      481        2        /*T*                                                         */
      482        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      483        4        /*T*                                                         */
      484        5        /*T***********************************************************/
      485        6        /********************************************************************/
      486        7        /*F*   NAME:   CXB$PROCOPT
      487        8               PURPOSE: To process the SET,RESET and ADJUST command options
      488        9               DESCRIPTION: CXB$PROCOPT processes the various options which
      489       10                       may be specified on the SET,RESET and ADJUST commands
      490       11                       and stores the pertinent information into the assign-merge
      491       12                       record. On a RESET, the specified option(s) is SET
      492       13                       to its default. For a SET or ADJUST command, the specified
      493       14                       information is stored into the assign-merge record.
      494       15        */
      495       16        /*D*   NAME:   CXB$PROCOPT
      496       17               CALL:   CALL CXB$PROCOPT(BLK$,MCB,GETCMDCPSL_PARAM)
      497       18               INTERFACE: CXG$ERRMSG
      498       19               INPUT:  SEG3$ - contains the assign merge record
      499       20                       BLK$ - pointer to parse output
      500       21                       MCB - memory control block used for allocating VLP's in SEG3
      501       22                       GETCMD - The CXG$GETCMD parameter.
      502       23                       CPSL_PARAM - Command Processor Special Library Parameter.
      503       24               DESCRIPTION: Data segment #3 is expected to contain the assign
      504       25                       merge record for the dcb specified on the command. The
      505       26                       various options are processed and the assign merge record
      506       27                       SET accordingly.
      507       28        */
      508       29        /**********************************************************************/
      509       30        CXB$PROCOPT: PROC(BLK$,MCB,GETCMD,CPSL_PARAM) ;
      510       31                   %INCLUDE CP_6;
      511      112                   %INCLUDE CX_MACROS_M;
      512      163                   %INCLUDE XU_MACRO_C;
      513     3269                   %INCLUDE XUM_MACRO_C;
      514     3296                   %INCLUDE CX_DATA_R;
      515     4230                   %INCLUDE B_MACROS_C;
      516     4341                   %INCLUDE XU_SUBS_C;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:97   
      517     4433                   %INCLUDE CX_SUBS_C;
      518     4446                   %INCLUDE CX_ISUBS_C;
      519     4798                   %INCLUDE CX_PERR_C;
      520     4869                   %INCLUDE CP_6_SUBS;
      521     5409                   %INCLUDE B_ERRORS_C;
      522     6536                   %INCLUDE B$JIT ;
      523     6826                   %INCLUDE CXG_ENTRY ;
      524     6838        %EQU SETSTA = 1 ;
      525     6839        %EQU VIRTUAL = 2 ;
      526     6840        %EQU FPRG = 3 ;
      527     6841        %EQU WINDOW = 4 ;
      528     6842    1   DCL ERR_FLD1$ PTR;                      /*Ptr to error msge text*/
      529     6843    1   DCL ERR_FLD2$ PTR;                      /*Ptr to error msge text*/
      530     6844    1   DCL TEMP$ PTR;                          /*Option pointer*/
      531     6845    1   DCL PTR$ PTR;                                    /*Temp. Pointer*/
      532     6846    1   DCL TEMP2$ PTR;                                  /*Temp. Pointer*/
      533     6847    1   DCL BLK$ PTR;                           /*Parse output block pointer*/
      534     6848    1   DCL DCB# UBIN WORD ;
      535     6849    1   DCL ASN UBIN WORD ;
      536     6850    1   DCL FID_ASN UBIN(9) ;
      537     6851    1   DCL FID_RES CHAR(4) ;
      538     6852        %XUG_GETCMD (NAME=GETCMD, STCLASS=PARAM) ;
      539     7190        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
      540     7208    1   DCL I SBIN;                             /*Temp loc for indexes*/
      541     7209    1   DCL J SBIN;                                      /*Temp value*/
      542     7210    1   DCL TVAL SBIN;                                   /*Temp. Location*/
      543     7211    1   DCL CXX$DECBIN ENTRY(2) ALTRET;                  /*Cnvrt dec value to bin*/
      544     7212    1   DCL CXX$SET ENTRY(4) ;                           /* Context checker. */
      545     7213    1   DCL CXX$RESET ENTRY(4) ;                         /* Context checker. */
      546     7214    1   DCL CXB$WINDOW_OPTS ENTRY(4) ;
      547     7215    1   DCL 1 VLP$ATTR BASED,                            /*Vlp length*/
      548     7216    1          2 SIZE# UBIN WORD,
      549     7217    1          2 R REDEF SIZE#,
      550     7218    1            3 NAW# UBIN (18) UNAL,
      551     7219    1            3 SIZ# UBIN (18) UNAL ;
      552     7220    1   DCL X$DEALLOCATE ENTRY(1) ALTRET;
      553     7221    1   DCL X$ALLOCATE ENTRY(1) ALTRET;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:98   
      554     7222          /***** Fpts *****/
      555     7223        %FPT_OPEN(FPTN=AMR$REC$,STCLASS="BASED(CPSL_SEG3$)",PFMT="PTR");
      556     7332        %FPT_OPEN(FPTN=FPT$OPEN,STCLASS=BASED);
      557     7441        %PARSE$OUT(NAME=OUT$BLK);
      558     7486        %PARSE$SYM(NAME=P$S);
      559     7524        %VLP_SN(FPTN=AM$SN,N=50,STCLASS=BASED);
      560     7537        %VLP_HDR(FPTN=AM$HDR,LEN="AM$HDR.TITL.L#",STCLASS=BASED);
      561     7553        %VLP_HDR(FPTN=AM_HDR,LEN=114,STCLASS=AUTO);
      562     7569        %VLP_ALTKEYS(FPTN=AM$ALTKEYS,STCLASS=BASED);
      563     7584        %VLP_FORM(FPTN=AM$FORM,STCLASS=BASED);
      564     7597        %VLP_TAB(FPTN=AM$TAB,STCLASS=BASED);
      565     7611        %VLP_SETSTA(FPTN=AM$SETSTA,STCLASS=BASED);
      566     7639        %VLP_WINDOW(FPTN=VLP$WINDOW,STCLASS=BASED) ;
      567     7683        %VLP_FPRG(FPTN=VLP$FPRG,STCLASS=BASED) ;
      568     7704        %VLP_VIRTUAL(FPTN=VLP$VIRTUAL,STCLASS=BASED) ;
      569     7724        %XUM$MCB(NAME=MCB);
      570     7728        %F$DCB (DCBN=F$DCB) ;
      571     7785        %B$TCB (STCLASS="BASED(B$TCB$)");
      572     7788        %B$EXCFR;
      573     7806          %FPT_FID (FPTN=FPT_FID, STCLASS=AUTO) ;
      574     7829          %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
      575     7848          %VLP_NAME (FPTN=FID_NAME,STCLASS=AUTO,LEN=31);
      576     7875          %VLP_SN (FPTN=FID_SN,STCLASS=AUTO,N=50);
      577     7888          %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
      578     7901          %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
      579     7914          %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
      580     7927          /***** Error codes *****/
      581     7928        %VLP_ERRCODE (FPTN=E_AMFULL,FCG=CX,MID=B,ERR#=E$AMFULL,STCLASS=CONSTANT);
      582     7973        %VLP_ERRCODE (FPTN=E_BADSETSTAOPT,FCG=CX,MID=B,ERR#=E$BADSETSTAOPT,STCLASS=CONSTANT)
              7973            ;
      583     8018        %VLP_ERRCODE (FPTN=E_BADVIRTUALOPT,FCG=CX,MID=B,ERR#=E$BADVIRTUALOPT,STCLASS=
              8018            CONSTANT);
      584     8063        %VLP_ERRCODE (FPTN=E_BADACSVEHOPT,FCG=CX,MID=B,ERR#=E$BADACSVEHOPT,STCLASS=CONSTANT)
              8063            ;
      585     8108        %VLP_ERRCODE (FPTN=E_BADWINDOWOPT,FCG=CX,MID=B,ERR#=E$BADWINDOWOPT,STCLASS=CONSTANT)
              8108            ;
      586     8153        %VLP_ERRCODE (FPTN=E_BADALTKEYSOPT,FCG=CX,MID=B,ERR#=E$BADALTKEYSOPT,STCLASS=
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:99   
              8153            CONSTANT);
      587     8198        %VLP_ERRCODE (FPTN=E_BADFPRGOPT,FCG=CX,MID=B,ERR#=E$BADFPRGOPT,STCLASS=CONSTANT);
      588     8243        %VLP_ERRCODE (FPTN=E_FPRG_FID_NONAME,FCG=CX,MID=B,ERR#=E$FPRG_FID_NONAME,STCLASS=
              8243            CONSTANT);
      589     8288        %VLP_ERRCODE (FPTN=E_FPRG_FID_DISKONLY,FCG=CX,MID=B,ERR#=E$FPRG_FID_DISKONLY,STCLASS
              8288            =CONSTANT);
      590     8333        /**/
      591     8334        /*E*    ERROR:   CXB-E$BADSETSTAOPT-C
      592     8335                MESSAGE:  SETSTA option illegal for this command.
      593     8336                MESSAGE1: ASN of the fid for this command is not COMGROUP or DEVICE
      594     8337                DESCRIPTION: A SETSTA option was specified on an ADJUST, RESET, or
      595     8338                             SET command with an ASN that is not COMGROUP or DEVICE.
      596     8339        */
      597     8340        /*E*    ERROR:   CXB-E$BADVIRTUALOPT-C
      598     8341                MESSAGE:  VIRTUAL option illegal for this command.
      599     8342                MESSAGE1: ASN of the fid for this command is not FILE.
      600     8343                DESCRIPTION: A VIRTUAL option was specified on an ADJUST, RESET, or
      601     8344                             SET command with an ASN that is not FILE.
      602     8345        */
      603     8346        /*E*    ERROR:   CXB-E$BADACSVEHOPT-C
      604     8347                MESSAGE:  ACSVEH option illegal for this command.
      605     8348                MESSAGE1: ASN of the fid for this command is not FILE.
      606     8349                DESCRIPTION: An ACSVEH option was specified on an ADJUST, RESET, or
      607     8350                             SET command with an ASN that is not FILE.
      608     8351        */
      609     8352        /*E*    ERROR:   CXB-E$BADWINDOWOPT-C
      610     8353                MESSAGE:  WINDOW option illegal for this command.
      611     8354                MESSAGE1: ASN of the fid for this command is not COMGROUP or DEVICE.
      612     8355                DESCRIPTION: A WINDOW option was specified on an ADJUST, RESET, or
      613     8356                             SET command with an ASN that is not COMGROUP or DEVICE.
      614     8357        */
      615     8358        /*E*    ERROR:   CXB-E$BADALTKEYSOPT-C
      616     8359                MESSAGE:  ALTKEYS option illegal for this command.
      617     8360                MESSAGE1: ASN of the fid for this command is not FILE.
      618     8361                DESCRIPTION: An ALTKEYS option was specified on an ADJUST, RESET, or
      619     8362                             SET command with an ASN that is not FILE.
      620     8363        */
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:100  
      621     8364        /*E*    ERROR:   CXB-E$BADFPRGOPT-C
      622     8365                MESSAGE:  FPRG option illegal for this command.
      623     8366                MESSAGE1: ASN of the fid for this command is not COMGROUP or DEVICE.
      624     8367                DESCRIPTION: An FPRG option was specified on an ADJUST, RESET, or
      625     8368                             SET command with an ASN that is not COMGROUP or DEVICE.
      626     8369        */
      627     8370        /*E*    ERROR:   CXB-E$FPRG_FID_NONAME-C
      628     8371                MESSAGE:  The FPRG fid option must specify a NAME.
      629     8372                DESCRIPTION: An FPRG fid option was specified without specifing a NAME.
      630     8373        */
      631     8374        /*E*    ERROR:   CXB-E$FPRG_FID_DISKONLY-C
      632     8375                MESSAGE:  The FPRG fid must be a disk file only.
      633     8376                DESCRIPTION: An FPRG fid specified a non-disk file.
      634     8377        */
      635     8378        %EJECT ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:101  
      636     8379    1     IF BLK$->OUT$BLK.CODE = ADJUSTCMND
      637     8380    1         THEN
      638     8381    2             DO ;
      639     8382    2               DCB# = CPSL_PARAM.ERR_DCB# ;
      640     8383    2               CPSL_PARAM.ERR_DCB# = 0 ;
      641     8384    2               ASN = DCBADDR(DCB#) -> F$DCB.ASN# ;
      642     8385    2             END ; /* Then Do */
      643     8386    1         ELSE
      644     8387    1             ASN = AMR$REC$.V.ASN# ;
      645     8388    1     I=0;
      646     8389        /*
      647     8390          ****     Process RESET command options
      648     8391        */
      649     8392    1     IF (BLK$->OUT$BLK.CODE = RESETCMND)
      650     8393    1        THEN
      651     8394    2   CXB$PROC2: DO WHILE (I<BLK$->OUT$BLK.NSUBLKS);
      652     8395    2              TEMP$=BLK$->OUT$BLK.SUBLK$(I);
      653     8396    3             DO CASE (TEMP$->OUT$BLK.CODE) ;
      654     8397    3               CASE (DCBOPT) ;
      655     8398    3                     CALL CXX$RESET(TEMP$->OUT$BLK, GETCMD,CPSL_PARAM) ;
      656     8399
      657     8400    3               CASE (ELSE) ;
      658     8401    3                 CALL CHK_IF_ASN_OK(TEMP$) ALTRET(PROCOPTRET) ;
      659     8402
      660     8403    3             END ; /* Do Case */
      661     8404    2             IF CPSL_PARAM.FLAGS.VERIFY_ONLY
      662     8405    2               THEN
      663     8406    2                 IF CPSL_PARAM.ERRCODE ~= %NO#
      664     8407    2                   THEN
      665     8408    2                     I = BLK$->OUT$BLK.NSUBLKS ;
      666     8409    2                   ELSE ;
      667     8410    2               ELSE
      668     8411    3   CXB$PROC3: DO CASE(TEMP$->OUT$BLK.CODE);
      669     8412    3               CASE(ACCESSOPT,READOPT,WRITEOPT);
      670     8413    3                 MCB.ADDRESS$=AMR$REC$.ACCESS_;
      671     8414    3                 CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Release vlp area*/
      672     8415    3                 AMR$REC$.ACCESS_=ADDR(NIL);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:102  
      673     8416    3               CASE(ACSOPT);
      674     8417    3                 AMR$REC$.V.ACS#=CPSL_CFPT_OPEN.V.ACS#;
      675     8418    3               CASE(ACSVEHOPT);
      676     8419    3                 MCB.ADDRESS$=AMR$REC$.ACSVEH_;
      677     8420    3                 CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Release vlp area*/
      678     8421    3                 AMR$REC$.ACSVEH_=ADDR(NIL);
      679     8422    3               CASE(ALLDCBSOPT);
      680     8423    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      681     8424    3                    THEN
      682     8425    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.ALLDCBS#=CPSL_CVLP_SETSTA.
      683     8426    3                            OSTA.ALLDCBS#;
      684     8427    3               CASE(ALLTRMSOPT);
      685     8428    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      686     8429    3                    THEN
      687     8430    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.ALLTRMS#=CPSL_CVLP_SETSTA.
      688     8431    3                            OSTA.ALLTRMS#;
      689     8432    3               CASE(ALTKEYSOPT);
      690     8433    3                 MCB.ADDRESS$=AMR$REC$.ALTKEYS_;
      691     8434    3                 CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Release vlp area*/
      692     8435    3                 AMR$REC$.ALTKEYS_=ADDR(NIL);
      693     8436    3               CASE(ANSISPANSEQOPT);
      694     8437    3                 AMR$REC$.V.ANSISPANSEQ#=CPSL_CFPT_OPEN.V.ANSISPANSEQ#;
      695     8438    3               CASE(ANYDCBOPT);
      696     8439    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      697     8440    3                    THEN
      698     8441    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.ANYDCB#=CPSL_CVLP_SETSTA.
      699     8442    3                            OSTA.ANYDCB#;
      700     8443    3               CASE(AUOPT);
      701     8444    3                 AMR$REC$.V.AU#=CPSL_CFPT_OPEN.V.AU#;
      702     8445    3               CASE(BLKLOPT);
      703     8446    3                 AMR$REC$.V.BLKL#=CPSL_CFPT_OPEN.V.BLKL#;
      704     8447    3                 AMR$REC$.V.BLOCKED#=CPSL_CFPT_OPEN.V.BLOCKED#;
      705     8448    3               CASE(BLOCKEDOPT);
      706     8449    3                 AMR$REC$.V.BLOCKED#=CPSL_CFPT_OPEN.V.BLOCKED#;
      707     8450    3               CASE(BTMBRDROPT) ;
      708     8451    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
      709     8452    3                   THEN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:103  
      710     8453    3                     AMR$REC$.WINDOW_->VLP$WINDOW.BTMBRDR# = CPSL_CVLP_WINDOW.
      711     8454    3                           BTMBRDR# ;
      712     8455    3               CASE(BUPMOPT);
      713     8456    3                 AMR$REC$.V.BUPM#=CPSL_CFPT_OPEN.V.BUPM#;
      714     8457    3               CASE(COMPOPT);
      715     8458    3                 AMR$REC$.V.COMP#=CPSL_CFPT_OPEN.V.COMP#;
      716     8459    3               CASE(COPIESOPT);
      717     8460    3                 AMR$REC$.V.COPIES#=CPSL_CFPT_OPEN.V.COPIES#;
      718     8461    3               CASE(CTGOPT);
      719     8462    3                 AMR$REC$.V.CTG#=CPSL_CFPT_OPEN.V.CTG#;
      720     8463    3               CASE(CVOLOPT);
      721     8464    3                 AMR$REC$.V.CVOL#=CPSL_CFPT_OPEN.V.CVOL#;
      722     8465    3               CASE(DEBUGOPT) ;
      723     8466    3                 IF AMR$REC$.FPRG_~=ADDR(NIL)
      724     8467    3                   THEN
      725     8468    3                     AMR$REC$.FPRG_->VLP$FPRG.FLGS.DEBUG# = CPSL_CVLP_FPRG.
      726     8469    3                           FLGS.DEBUG# ;
      727     8470    3               CASE(DCBCONLGLOPT);
      728     8471    3                 AMR$REC$.V.DCBCONLGL#=CPSL_CFPT_OPEN.V.DCBCONLGL#;
      729     8472    3               CASE(DENSITYOPT);
      730     8473    3                 AMR$REC$.V.DENSITY#=CPSL_CFPT_OPEN.V.DENSITY#;
      731     8474    3               CASE(DIRONLYOPT);
      732     8475    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      733     8476    3                    THEN
      734     8477    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.DIRONLY#=CPSL_CVLP_SETSTA.
      735     8478    3                            ISTA.DIRONLY#;
      736     8479    3               CASE(DISPOPT);
      737     8480    3                 AMR$REC$.V.DISP#=CPSL_CFPT_OPEN.V.DISP#;
      738     8481    3               CASE(DVFCOPT);
      739     8482    3                 AMR$REC$.V.DVFC#=CPSL_CFPT_OPEN.V.DVFC#;
      740     8483    3               CASE(EBCDICOPT);
      741     8484    3                 AMR$REC$.V.EBCDIC#=CPSL_CFPT_OPEN.V.EBCDIC#;
      742     8485    3                 AMR$REC$.V.CNVRT#=CPSL_CFPT_OPEN.V.CNVRT#;
      743     8486    3               CASE(EOFNONEOPT);
      744     8487    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      745     8488    3                    THEN
      746     8489    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.EOFNONE#=CPSL_CVLP_SETSTA.
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:104  
      747     8490    3                            ISTA.EOFNONE#;
      748     8491    3               CASE(EOFONEOPT);
      749     8492    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      750     8493    3                    THEN
      751     8494    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.EOFONE#=CPSL_CVLP_SETSTA.
      752     8495    3                            ISTA.EOFONE#;
      753     8496    3               CASE(EOFTIMEOPT);
      754     8497    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      755     8498    3                    THEN
      756     8499    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.EOFTIME#=CPSL_CVLP_SETSTA.
      757     8500    3                            ISTA.EOFTIME#;
      758     8501    3               CASE(EVENTOPT);
      759     8502    3                 AMR$REC$.V.EVENT#=CPSL_CFPT_OPEN.V.EVENT#;
      760     8503    3               CASE(EXISTOPT);
      761     8504    3                 AMR$REC$.V.EXIST#=CPSL_CFPT_OPEN.V.EXIST#;
      762     8505    3               CASE(EXPIREOPT);
      763     8506    3                 AMR$REC$.V.EXPIRE#=CPSL_CFPT_OPEN.V.EXPIRE#;
      764     8507    3               CASE(FORMOPT);
      765     8508    3                 MCB.ADDRESS$=AMR$REC$.FORM_;
      766     8509    3                 CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Release vlp area*/
      767     8510    3                 AMR$REC$.FORM_=ADDR(NIL);
      768     8511    3               CASE(FPRG_FIDOPT) ;
      769     8512    3                 IF AMR$REC$.FPRG_~=ADDR(NIL)
      770     8513    3                   THEN
      771     8514    4                     DO ;
      772     8515    4                       AMR$REC$.FPRG_->VLP$FPRG.NAME = CPSL_CVLP_FPRG.NAME ;
      773     8516    4                       AMR$REC$.FPRG_->VLP$FPRG.ACCT# = CPSL_CVLP_FPRG.ACCT# ;
      774     8517    4                       AMR$REC$.FPRG_->VLP$FPRG.PASS# = CPSL_CVLP_FPRG.PASS# ;
      775     8518    4                       AMR$REC$.FPRG_->VLP$FPRG.PSN# = CPSL_CVLP_FPRG.PSN# ;
      776     8519    4                     END ; /* Then Do */
      777     8520    3               CASE(FSNOPT);
      778     8521    3                 AMR$REC$.V.FSN#=CPSL_CFPT_OPEN.V.FSN#;
      779     8522    3               CASE(FUNOPT);
      780     8523    3                 AMR$REC$.V.FUN#=CPSL_CFPT_OPEN.V.FUN#;
      781     8524    3               CASE(FWINDOWOPT) ;
      782     8525    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
      783     8526    3                   THEN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:105  
      784     8527    3                     AMR$REC$.WINDOW_->VLP$WINDOW.FWINDOW# = CPSL_CVLP_WINDOW.
      785     8528    3                           FWINDOW# ;
      786     8529    3               CASE(GHSTACSOPT);
      787     8530    3                 AMR$REC$.V.GHSTACS#=CPSL_CFPT_OPEN.V.GHSTACS#;
      788     8531    3               CASE(HBRDRCHROPT) ;
      789     8532    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
      790     8533    3                   THEN
      791     8534    3                     AMR$REC$.WINDOW_->VLP$WINDOW.HBRDRCHR# = CPSL_CVLP_WINDOW.
      792     8535    3                           HBRDRCHR# ;
      793     8536    3               CASE(HBRDRSIZOPT) ;
      794     8537    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
      795     8538    3                   THEN
      796     8539    3                     AMR$REC$.WINDOW_->VLP$WINDOW.HBRDRSIZ# = CPSL_CVLP_WINDOW.
      797     8540    3                           HBRDRSIZ# ;
      798     8541    3               CASE(HDRHOPT);
      799     8542    3                 IF AMR$REC$.HDR_~=ADDR(NIL)
      800     8543    3                    THEN
      801     8544    3                       AMR$REC$.HDR_->AM$HDR.CTL.HEADERHEIGHT#=CPSL_CVLP_HDR.CTL.
      802     8545    3                            HEADERHEIGHT#;
      803     8546    3               CASE(HEADEROPT);
      804     8547        /* ****          Reset all header related data   */
      805     8548    3                 MCB.ADDRESS$=AMR$REC$.HDR_;
      806     8549    3                 CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Rel. Vlp area*/
      807     8550    3                 AMR$REC$.HDR_=ADDR(NIL);
      808     8551    3               CASE(IGNOREFSNOPT);
      809     8552    3                 AMR$REC$.V.IGNOREFSN#=CPSL_CFPT_OPEN.V.IGNOREFSN#;
      810     8553    3               CASE(ILATCHOPT);
      811     8554    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      812     8555    3                    THEN
      813     8556    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.ILATCH#=CPSL_CVLP_SETSTA.
      814     8557    3                            ISTA.ILATCH#;
      815     8558    3               CASE(ILOCKOPT);
      816     8559    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      817     8560    3                    THEN
      818     8561    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.ILOCK#=CPSL_CVLP_SETSTA.
      819     8562    3                            ISTA.ILOCK#;
      820     8563    3               CASE(IMSGTYPOPT);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:106  
      821     8564    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      822     8565    3                    THEN
      823     8566    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.IMSGTYP#=CPSL_CVLP_SETSTA.
      824     8567    3                            ISTA.IMSGTYP#;
      825     8568    3               CASE(INDENTOPT);
      826     8569    3                 IF AMR$REC$.HDR_~=ADDR(NIL)
      827     8570    3                    THEN
      828     8571    3                       AMR$REC$.HDR_->AM$HDR.CTL.INDENT#=CPSL_CVLP_HDR.CTL.
      829     8572    3                            INDENT#;
      830     8573    3               CASE(INITIALIZEOPT) ;
      831     8574    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)
      832     8575    3                   THEN
      833     8576    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.INITIALIZE# = CPSL_CVLP_VIRTUAL.
      834     8577    3                           INITIALIZE# ;
      835     8578    3               CASE(INITVALUEOPT) ;
      836     8579    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)
      837     8580    3                   THEN
      838     8581    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.INITVALUE# = CPSL_CVLP_VIRTUAL.
      839     8582    3                           INITVALUE# ;
      840     8583    3               CASE(INSTATTROPT) ;
      841     8584    3                 CALL RESET_ATTR_OPTS(AMR$REC$.INSTATTR_) ALTRET(PROCOPTRET) ;
      842     8585    3               CASE(INSTATTRSIZEOPT) ;
      843     8586    3                 IF AMR$REC$.INSTATTR_ ~= ADDR(NIL)
      844     8587    3                   THEN
      845     8588    3                     AMR$REC$.INSTATTR_->VLP$ATTR.R.NAW# = 0 ;
      846     8589    3               CASE(IOERROKOPT);
      847     8590    3                 AMR$REC$.V.IOERROK#=CPSL_CFPT_OPEN.V.IOERROK#;
      848     8591    3               CASE(ISTATIONOPT);
      849     8592    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      850     8593    3                    THEN
      851     8594    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.ISTATION#=CPSL_CVLP_SETSTA.
      852     8595    3                            ISTA.ISTATION#;
      853     8596    3               CASE(IXTNSIZEOPT);
      854     8597    3                 AMR$REC$.V.IXTNSIZE#=CPSL_CFPT_OPEN.V.IXTNSIZE#;
      855     8598    3               CASE(JRNLBYPASSOPT);
      856     8599    3                 AMR$REC$.V.JRNLBYPASS#=CPSL_CFPT_OPEN.V.JRNLBYPASS#;
      857     8600    3               CASE(KEYLOPT);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:107  
      858     8601    3                 AMR$REC$.V.KEYL#=CPSL_CFPT_OPEN.V.KEYL#;
      859     8602    3               CASE(KEYXOPT);
      860     8603    3                 AMR$REC$.V.KEYX#=CPSL_CFPT_OPEN.V.KEYX#;
      861     8604    3               CASE(LDBYPROOPT) ;
      862     8605    3                 IF AMR$REC$.FPRG_~=ADDR(NIL)
      863     8606    3                   THEN
      864     8607    3                     AMR$REC$.FPRG_->VLP$FPRG.LDBYPRO# = CPSL_CVLP_FPRG.
      865     8608    3                           LDBYPRO# ;
      866     8609    3               CASE(LFTBRDROPT) ;
      867     8610    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
      868     8611    3                   THEN
      869     8612    3                     AMR$REC$.WINDOW_->VLP$WINDOW.LFTBRDR# = CPSL_CVLP_WINDOW.
      870     8613    3                           LFTBRDR# ;
      871     8614    3               CASE(LINESOPT);
      872     8615    3                 AMR$REC$.V.LINES#=CPSL_CFPT_OPEN.V.LINES#;
      873     8616    3               CASE(LOADOPT);
      874     8617    3                 AMR$REC$.V.LOAD#=CPSL_CFPT_OPEN.V.LOAD#;
      875     8618    3               CASE(LRDL0OPT);
      876     8619    3                 AMR$REC$.V.LRDL0#=CPSL_CFPT_OPEN.V.LRDL0#;
      877     8620    3               CASE(LSLIDEOPT);
      878     8621    3                 AMR$REC$.V.LSLIDE#=CPSL_CFPT_OPEN.V.LSLIDE#;
      879     8622    3               CASE(LSTAOROPT);
      880     8623    3                 AMR$REC$.V.LSTAOR#=CPSL_CFPT_OPEN.V.LSTAOR#;
      881     8624    3               CASE(MARGINOPT);
      882     8625    3                 IF AMR$REC$.TAB_~=ADDR(NIL)
      883     8626    3                    THEN
      884     8627    3                       AMR$REC$.TAB_->AM$TAB.MARGIN#=0;
      885     8628    3               CASE(MINPHYSOPT) ;
      886     8629    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)
      887     8630    3                   THEN
      888     8631    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.MINPHYS# = CPSL_CVLP_VIRTUAL.
      889     8632    3                           MINPHYS# ;
      890     8633    3               CASE(MAXVOLOPT);
      891     8634    3                 AMR$REC$.V.MAXVOL#=CPSL_CFPT_OPEN.V.MAXVOL#;
      892     8635    3               CASE(MINLENGTHOPT) ;
      893     8636    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
      894     8637    3                   THEN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:108  
      895     8638    3                     AMR$REC$.WINDOW_->VLP$WINDOW.MINLENGTH# = CPSL_CVLP_WINDOW.
      896     8639    3                           MINLENGTH# ;
      897     8640    3               CASE(MINWIDTHOPT) ;
      898     8641    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
      899     8642    3                   THEN
      900     8643    3                     AMR$REC$.WINDOW_->VLP$WINDOW.MINWIDTH# = CPSL_CVLP_WINDOW.
      901     8644    3                           MINWIDTH# ;
      902     8645    3               CASE(MYSTATIONOPT);
      903     8646    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      904     8647    3                    THEN
      905     8648    3                       AMR$REC$.SETSTA_->AM$SETSTA.MYSTATION#=CPSL_CVLP_SETSTA.
      906     8649    3                            MYSTATION#;
      907     8650    3               CASE(NOFILEOPT) ;
      908     8651    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)
      909     8652    3                   THEN
      910     8653    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.NOFILE# = CPSL_CVLP_VIRTUAL.
      911     8654    3                           NOFILE# ;
      912     8655    3               CASE(NRECSOPT);
      913     8656    3                 AMR$REC$.V.NRECS#=CPSL_CFPT_OPEN.V.NRECS#;
      914     8657    3               CASE(OLATCHOPT);
      915     8658    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      916     8659    3                    THEN
      917     8660    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OLATCH#=CPSL_CVLP_SETSTA.
      918     8661    3                            OSTA.OLATCH#;
      919     8662    3               CASE(OLOCKOPT);
      920     8663    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      921     8664    3                    THEN
      922     8665    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OLOCK#=CPSL_CVLP_SETSTA.
      923     8666    3                            OSTA.OLOCK#;
      924     8667    3               CASE(OMSGTYPOPT);
      925     8668    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      926     8669    3                    THEN
      927     8670    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OMSGTYP#=CPSL_CVLP_SETSTA.
      928     8671    3                            OSTA.OMSGTYP#;
      929     8672    3               CASE(OPTIONALOPT) ;
      930     8673    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
      931     8674    3                   THEN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:109  
      932     8675    3                     AMR$REC$.WINDOW_->VLP$WINDOW.REMOVABLE# = CPSL_CVLP_WINDOW.
      933     8676    3                           REMOVABLE# ;
      934     8677    3               CASE(ORGOPT);
      935     8678    3                 AMR$REC$.V.ORG#=CPSL_CFPT_OPEN.V.ORG#;
      936     8679    3               CASE(OSTATIONOPT);
      937     8680    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
      938     8681    3                    THEN
      939     8682    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OSTATION#=CPSL_CVLP_SETSTA.
      940     8683    3                            OSTA.OSTATION#;
      941     8684    3               CASE(PAGECOLOPT);
      942     8685    3                 IF AMR$REC$.HDR_~=ADDR(NIL)
      943     8686    3                    THEN
      944     8687    3                       AMR$REC$.HDR_->AM$HDR.CTL.COUNT#=CPSL_CVLP_HDR.CTL.
      945     8688    3                            COUNT#;
      946     8689    3               CASE(PHYSICALOPT) ;
      947     8690    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)
      948     8691    3                   THEN
      949     8692    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.PHYSICAL# = CPSL_CVLP_VIRTUAL.
      950     8693    3                           PHYSICAL# ;
      951     8694    3               CASE(POSITIONOPT) ;
      952     8695    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
      953     8696    3                   THEN
      954     8697    3                     AMR$REC$.WINDOW_->VLP$WINDOW.POSITION# = CPSL_CVLP_WINDOW.
      955     8698    3                           POSITION# ;
      956     8699    3               CASE(PROCATTROPT) ;
      957     8700    3                 CALL RESET_ATTR_OPTS(AMR$REC$.PROCATTR_) ALTRET(PROCOPTRET) ;
      958     8701    3               CASE(PROCATTRSIZEOPT) ;
      959     8702    3                 IF AMR$REC$.PROCATTR_ ~= ADDR(NIL)
      960     8703    3                   THEN
      961     8704    3                     AMR$REC$.PROCATTR_->VLP$ATTR.R.NAW# = 0 ;
      962     8705    3               CASE(PROFILEOPT) ;
      963     8706    3                 IF AMR$REC$.FPRG_~=ADDR(NIL)
      964     8707    3                   THEN
      965     8708    3                     AMR$REC$.FPRG_->VLP$FPRG.PROFILE# = CPSL_CVLP_FPRG.
      966     8709    3                           PROFILE# ;
      967     8710    3               CASE(QISSOPT);
      968     8711    3                 AMR$REC$.V.QISS# = CPSL_CFPT_OPEN.V.QISS#;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:110  
      969     8712    3               CASE(RECLOPT);
      970     8713    3                 AMR$REC$.V.RECL#=CPSL_CFPT_OPEN.V.RECL#;
      971     8714    3               CASE(RHTBRDROPT) ;
      972     8715    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
      973     8716    3                   THEN
      974     8717    3                     AMR$REC$.WINDOW_->VLP$WINDOW.RHTBRDR# = CPSL_CVLP_WINDOW.
      975     8718    3                           RHTBRDR# ;
      976     8719    3               CASE(RPAGEOPT);
      977     8720    3                 IF AMR$REC$.HDR_~=ADDR(NIL)
      978     8721    3                    THEN
      979     8722    3                       AMR$REC$.HDR_->AM$HDR.CTL.RESETPAGE#=CPSL_CVLP_HDR.CTL.
      980     8723    3                            RESETPAGE#;
      981     8724    3               CASE(SEGNUMOPT) ;
      982     8725    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)
      983     8726    3                   THEN
      984     8727    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.SEGNUM# = CPSL_CVLP_VIRTUAL.
      985     8728    3                           SEGNUM# ;
      986     8729    3               CASE(SEGSIZEOPT) ;
      987     8730    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)
      988     8731    3                   THEN
      989     8732    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.SEGSIZE# = CPSL_CVLP_VIRTUAL.
      990     8733    3                           SEGSIZE# ;
      991     8734    3               CASE(SCRUBOPT);
      992     8735    3                 AMR$REC$.V.INITZ.SCRUB#=CPSL_CFPT_OPEN.V.INITZ.SCRUB#;
      993     8736    3               CASE(SEEDOPT);
      994     8737    3                 AMR$REC$.V.SEED#=CPSL_CFPT_OPEN.V.SEED#;
      995     8738    3                 AMR$REC$.V.SEEDSPECIFIED#=CPSL_CFPT_OPEN.V.SEEDSPECIFIED#;
      996     8739    3               CASE(SEQCOLOPT);
      997     8740    3                 AMR$REC$.V.SEQCOL#=CPSL_CFPT_OPEN.V.SEQCOL#;
      998     8741    3               CASE(SEQIDOPT);
      999     8742    3                 AMR$REC$.V.SEQID#=CPSL_CFPT_OPEN.V.SEQID#;
     1000     8743    3               CASE(SEQOPT);
     1001     8744        /*               Reset all seq related options to their defaults */
     1002     8745    3                 AMR$REC$.V.SEQ#=CPSL_CFPT_OPEN.V.SEQ#;
     1003     8746    3                 AMR$REC$.V.SEQCOL#=CPSL_CFPT_OPEN.V.SEQCOL#;
     1004     8747    3                 AMR$REC$.V.SEQID#=CPSL_CFPT_OPEN.V.SEQID#;
     1005     8748    3               CASE(SHAREOPT);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:111  
     1006     8749    3                 AMR$REC$.V.SHARE#=CPSL_CFPT_OPEN.V.SHARE#;
     1007     8750    3               CASE(SNOPT);
     1008     8751    3                 MCB.ADDRESS$=AMR$REC$.SN_;
     1009     8752    3                 CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Release vlp area*/
     1010     8753    3                 AMR$REC$.SN_=ADDR(NIL);
     1011     8754    3               CASE(SPANNEDOPT);
     1012     8755    3                 AMR$REC$.V.SPANNED#=CPSL_CFPT_OPEN.V.SPANNED#;
     1013     8756    3               CASE(SPAREOPT);
     1014     8757    3                 AMR$REC$.V.SPARE#=CPSL_CFPT_OPEN.V.SPARE#;
     1015     8758    3               CASE(TABOPT);
     1016     8759    3                 IF AMR$REC$.TAB_ ~= ADDR(NIL)
     1017     8760    3                    THEN
     1018     8761    4                       DO J=0 TO 30;
     1019     8762    4                          AMR$REC$.TAB_->AM$TAB.TABS#(J)=0;
     1020     8763    4                       END;
     1021     8764    3               CASE(TERMCONLGLOPT);
     1022     8765    3                 AMR$REC$.V.TERMCONLGL#=CPSL_CFPT_OPEN.V.TERMCONLGL#;
     1023     8766    3               CASE(TITLEOPT);
     1024     8767    3                 IF AMR$REC$.HDR_~=ADDR(NIL)
     1025     8768    3                    THEN
     1026     8769    4                       DO;
     1027     8770    4                          AMR$REC$.HDR_->AM$HDR.TITL.L#=0;
     1028     8771    4                          AMR$REC$.HDR_->AM$HDR.TITL.TITLE#=' ';
     1029     8772    4                       END;
     1030     8773    3               CASE(TOPBRDROPT) ;
     1031     8774    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
     1032     8775    3                   THEN
     1033     8776    3                     AMR$REC$.WINDOW_->VLP$WINDOW.TOPBRDR# = CPSL_CVLP_WINDOW.
     1034     8777    3                           TOPBRDR# ;
     1035     8778    3               CASE(TYPEOPT);
     1036     8779    3                 AMR$REC$.V.TYPE#=CPSL_CFPT_OPEN.V.TYPE#;
     1037     8780    3               CASE(UATTROPT) ;
     1038     8781    3                 CALL RESET_ATTR_OPTS(AMR$REC$.UATTR_) ALTRET(PROCOPTRET) ;
     1039     8782    3               CASE(UATTRSIZEOPT) ;
     1040     8783    3                 IF AMR$REC$.UATTR_ ~= ADDR(NIL)
     1041     8784    3                   THEN
     1042     8785    3                     AMR$REC$.UATTR_->VLP$ATTR.R.NAW# = 0 ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:112  
     1043     8786    3               CASE(UOPT0OPT);
     1044     8787    3                 AMR$REC$.V.UOPT#(0)=CPSL_CFPT_OPEN.V.UOPT#(0);
     1045     8788    3               CASE(UOPT1OPT);
     1046     8789    3                 AMR$REC$.V.UOPT#(1)=CPSL_CFPT_OPEN.V.UOPT#(1);
     1047     8790    3               CASE(UOPT2OPT);
     1048     8791    3                 AMR$REC$.V.UOPT#(2)=CPSL_CFPT_OPEN.V.UOPT#(2);
     1049     8792    3               CASE(UOPT3OPT);
     1050     8793    3                 AMR$REC$.V.UOPT#(3)=CPSL_CFPT_OPEN.V.UOPT#(3);
     1051     8794    3               CASE(UOPT4OPT);
     1052     8795    3                 AMR$REC$.V.UOPT#(4)=CPSL_CFPT_OPEN.V.UOPT#(4);
     1053     8796    3               CASE(UOPT5OPT);
     1054     8797    3                 AMR$REC$.V.UOPT#(5)=CPSL_CFPT_OPEN.V.UOPT#(5);
     1055     8798    3               CASE(UOPT6OPT);
     1056     8799    3                 AMR$REC$.V.UOPT#(6)=CPSL_CFPT_OPEN.V.UOPT#(6);
     1057     8800    3               CASE(UOPT7OPT);
     1058     8801    3                 AMR$REC$.V.UOPT#(7)=CPSL_CFPT_OPEN.V.UOPT#(7);
     1059     8802    3               CASE(UOPT8OPT);
     1060     8803    3                 AMR$REC$.V.UOPT#(8)=CPSL_CFPT_OPEN.V.UOPT#(8);
     1061     8804    3               CASE(VBRDRCHROPT) ;
     1062     8805    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
     1063     8806    3                   THEN
     1064     8807    3                     AMR$REC$.WINDOW_->VLP$WINDOW.VBRDRCHR# = CPSL_CVLP_WINDOW.
     1065     8808    3                           VBRDRCHR# ;
     1066     8809    3               CASE(VBRDRSIZOPT) ;
     1067     8810    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
     1068     8811    3                   THEN
     1069     8812    3                     AMR$REC$.WINDOW_->VLP$WINDOW.VBRDRSIZ# = CPSL_CVLP_WINDOW.
     1070     8813    3                           VBRDRSIZ# ;
     1071     8814    3               CASE(VOLACCOPT);
     1072     8815    3                 AMR$REC$.V.VOLACCESS#=CPSL_CFPT_OPEN.V.VOLACCESS#;
     1073     8816    3               CASE(VOLOPT);
     1074     8817    3                 AMR$REC$.V.VOL#=CPSL_CFPT_OPEN.V.VOL#;
     1075     8818    3               CASE(WLENGTHOPT) ;
     1076     8819    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
     1077     8820    3                   THEN
     1078     8821    3                     AMR$REC$.WINDOW_->VLP$WINDOW.LENGTH# = CPSL_CVLP_WINDOW.
     1079     8822    3                           LENGTH# ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:113  
     1080     8823    3               CASE(WWIDTHOPT) ;
     1081     8824    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)
     1082     8825    3                   THEN
     1083     8826    3                     AMR$REC$.WINDOW_->VLP$WINDOW.WIDTH# = CPSL_CVLP_WINDOW.
     1084     8827    3                           WIDTH# ;
     1085     8828    3               CASE(WASOPT);
     1086     8829    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)
     1087     8830    3                    THEN
     1088     8831    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.WAS#=CPSL_CVLP_SETSTA.
     1089     8832    3                            OSTA.WAS#;
     1090     8833    3               CASE(XTENDOPT);
     1091     8834    3                 AMR$REC$.V.XTEND#=CPSL_CFPT_OPEN.V.XTEND#;
     1092     8835    3               CASE(XTNSIZEOPT);
     1093     8836    3                 AMR$REC$.V.XTNSIZE#=CPSL_CFPT_OPEN.V.XTNSIZE#;
     1094     8837    3               END CXB$PROC3;
     1095     8838    2              I=I+1;                       /*Bump index to next option*/
     1096     8839    2           END CXB$PROC2;
     1097     8840    1        ELSE
     1098     8841        /*
     1099     8842          ****     Process SET/ADJUST command options
     1100     8843        */
     1101     8844    2   CXB$PROC5: DO WHILE (I<BLK$->OUT$BLK.NSUBLKS);
     1102     8845    2              TEMP$=BLK$->OUT$BLK.SUBLK$(I);    /*Create ptr to sublk*/
     1103     8846    3              DO CASE (TEMP$->OUT$BLK.CODE) ;
     1104     8847    3               CASE (DCBOPT,
     1105     8848    3                       BLKLOPT,
     1106     8849    3                      COPIESOPT,
     1107     8850    3                       DVFCOPT,
     1108     8851    3                       EOFTIMEOPT,
     1109     8852    3                       EVENTOPT,
     1110     8853    3                       EXPIREOPT,
     1111     8854    3                       FIDOPT,
     1112     8855    3                       FORMOPT,
     1113     8856    3                       FSNOPT,
     1114     8857    3                       GHSTACSOPT,
     1115     8858    3                       HDRHOPT,
     1116     8859    3                       INDENTOPT,
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:114  
     1117     8860    3                       INITVALUEOPT,
     1118     8861    3                       IXTNSIZEOPT,
     1119     8862    3                       KEYLOPT,
     1120     8863    3                       KEYXOPT,
     1121     8864    3                       LINESOPT,
     1122     8865    3                       LRDL0OPT,
     1123     8866    3                       LSLIDEOPT,
     1124     8867    3                       MARGINOPT,
     1125     8868    3                       MAXVOLOPT,
     1126     8869    3                       MINPHYSOPT,
     1127     8870    3                       NRECSOPT,
     1128     8871    3                       OSTAT_NAME,
     1129     8872    3                       PAGECOLOPT,
     1130     8873    3                       PHYSICALOPT,
     1131     8874    3                       PROFILEOPT,
     1132     8875    3                       RECLOPT,
     1133     8876    3                       SEEDOPT,
     1134     8877    3                       SEGSIZEOPT,
     1135     8878    3                       SEQCOLOPT,
     1136     8879    3                       SEQIDOPT,
     1137     8880    3                       SPAREOPT,
     1138     8881    3                       TITLEOPT,
     1139     8882    3                       TYPEOPT,
     1140     8883    3                       VOLOPT,
     1141     8884    3                       XTNSIZEOPT) ;
     1142     8885    3                     CALL CXX$SET(TEMP$->OUT$BLK, GETCMD,CPSL_PARAM,J) ;
     1143     8886
     1144     8887    3               CASE (IMSGTYPOPT,
     1145     8888    3                     ISTATIONOPT,
     1146     8889    3                     MYSTATIONOPT,
     1147     8890    3                     OMSGTYPOPT,
     1148     8891    3                     OSTATIONOPT) ;
     1149     8892    3                 CALL CXX$SET(TEMP$->OUT$BLK.SUBLK$(0)->P$S,
     1150     8893    3                               GETCMD,CPSL_PARAM) ;
     1151     8894
     1152     8895    3               CASE(SNOPT,
     1153     8896    3                     TABOPT) ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:115  
     1154     8897    3                 CALL CXX$SET(TEMP$->OUT$BLK, GETCMD, CPSL_PARAM) ;
     1155     8898    4                 DO J=0 TO TEMP$->OUT$BLK.NSUBLKS-1 ;
     1156     8899    4                   PTR$=TEMP$->OUT$BLK.SUBLK$(J) ;
     1157     8900    4                   CALL CXX$SET(PTR$->P$S, GETCMD, CPSL_PARAM, TVAL) ;
     1158     8901    4                 END ; /* Do J */
     1159     8902
     1160     8903    3               CASE(ACCESSOPT,
     1161     8904    3                     READOPT,
     1162     8905    3                     WRITEOPT,
     1163     8906    3                     ACSVEHOPT) ;
     1164     8907    3                 PTR$ = TEMP$->OUT$BLK.SUBLK$(0) ;
     1165     8908    3                 IF PTR$->OUT$BLK.NSUBLKS ~= 0
     1166     8909    3                   THEN
     1167     8910    4                     DO J=0 TO PTR$->OUT$BLK.NSUBLKS-1 ;
     1168     8911    5                       DO CASE(PTR$->OUT$BLK.SUBLK$(J)->OUT$BLK.CODE) ;
     1169     8912    5                         CASE(ACC_ACCT, ACS_VEH) ;
     1170     8913    5                           CALL CXX$SET(PTR$->OUT$BLK.SUBLK$(J)->P$S,
     1171     8914    5                                         GETCMD, CPSL_PARAM) ;
     1172     8915    5                       END ; /* Do Case */
     1173     8916    4                     END ; /* Do J */
     1174     8917
     1175     8918    3               CASE( BTMBRDROPT,
     1176     8919    3                     FWINDOWOPT,
     1177     8920    3                     HBRDRCHROPT,
     1178     8921    3                     HBRDRSIZOPT,
     1179     8922    3                     LFTBRDROPT,
     1180     8923    3                     MINLENGTHOPT,
     1181     8924    3                     MINWIDTHOPT,
     1182     8925    3                     OPTIONALOPT,
     1183     8926    3                     POSITIONOPT,
     1184     8927    3                     RHTBRDROPT,
     1185     8928    3                     TOPBRDROPT,
     1186     8929    3                     VBRDRCHROPT,
     1187     8930    3                     VBRDRSIZOPT,
     1188     8931    3                     WLENGTHOPT,
     1189     8932    3                     WWIDTHOPT) ;
     1190     8933    3                   IF AMR$REC$.WINDOW_ = ADDR(NIL)
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:116  
     1191     8934    3                     THEN
     1192     8935    3                       CALL BLD_VLP_AREA(%WINDOW) ALTRET(CXB$PROC55);
     1193     8936    3                   CALL CXB$WINDOW_OPTS(TEMP$, AMR$REC$.WINDOW_,GETCMD,
     1194     8937    3                                         CPSL_PARAM) ;
     1195     8938
     1196     8939    3               CASE (ELSE) ;
     1197     8940
     1198     8941    3              END ; /* Do Case */
     1199     8942    2             CALL CHK_IF_ASN_OK(TEMP$) ALTRET(PROCOPTRET) ;
     1200     8943    2             IF CPSL_PARAM.FLAGS.VERIFY_ONLY
     1201     8944    2               THEN
     1202     8945    2                 IF CPSL_PARAM.ERRCODE ~= %NO#
     1203     8946    2                   THEN
     1204     8947    2                     I = BLK$->OUT$BLK.NSUBLKS ;
     1205     8948    2                   ELSE ;
     1206     8949    2               ELSE
     1207     8950    3   CXB$PROC10: DO CASE(TEMP$->OUT$BLK.CODE);
     1208     8951    3               CASE(ACCESSOPT,READOPT,WRITEOPT);
     1209     8952    3                 CALL BLD_ACCESS_VLP(AMR$REC$.ACCESS_) ALTRET(CXB$PROC55);
     1210     8953    3                 AMR$REC$.ACCESS_->VLP$ATTR.SIZE#=(AMR$REC$.ACCESS_->VLP$ATTR.SIZE#+3)/
              8953                          4;
     1211     8954    3               CASE(ACSOPT);
     1212     8955    3                 AMR$REC$.V.ACS#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;
     1213     8956    3               CASE(ACSVEHOPT);
     1214     8957    3                 CALL BLD_ACCESS_VLP(AMR$REC$.ACSVEH_) ALTRET(CXB$PROC55);
     1215     8958    3                 AMR$REC$.ACSVEH_->VLP$ATTR.SIZE#=(AMR$REC$.ACSVEH_->VLP$ATTR.SIZE#+3)/
              8958                          4;
     1216     8959    3               CASE(ALLDCBSOPT);
     1217     8960    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
     1218     8961    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.ALLDCBS# = BINBIT(TEMP$->OUT$BLK.
              8961                          SUBLK$(0)->OUT$BLK.CODE,1);
     1219     8962    3               CASE(ALLTRMSOPT);
     1220     8963    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
     1221     8964    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.ALLTRMS# = BINBIT(TEMP$->OUT$BLK.
              8964                          SUBLK$(0)->OUT$BLK.CODE,1);
     1222     8965    3               CASE(ALTKEYSOPT);
     1223     8966    3                 CALL ALTKEYS_OPTS(TEMP$->OUT$BLK) ALTRET(PROCOPTRET) ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:117  
     1224     8967    3               CASE(ANSISPANSEQOPT);
     1225     8968    3                 AMR$REC$.V.ANSISPANSEQ# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.
              8968                          CODE,1);
     1226     8969    3               CASE(ANYDCBOPT);
     1227     8970    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
     1228     8971    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.ANYDCB# = BINBIT(TEMP$->OUT$BLK.
              8971                          SUBLK$(0)->OUT$BLK.CODE,1);
     1229     8972    3               CASE(AUOPT);
     1230     8973    3                 AMR$REC$.V.AU# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     1231     8974    3               CASE(BLKLOPT);
     1232     8975    3                 AMR$REC$.V.BLKL#=J;             /*Value into *A*/
     1233     8976        /* ****          Set blocked bit to indicate blocking desired*/
     1234     8977    3                 AMR$REC$.V.BLOCKED#=%YES#;
     1235     8978    3               CASE(BLOCKEDOPT);
     1236     8979    3                 AMR$REC$.V.BLOCKED# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              8979                          ;
     1237     8980    3               CASE(BUPMOPT);
     1238     8981    3                 AMR$REC$.V.BUPM#=BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->
     1239     8982    3                      OUT$BLK.CODE,1);
     1240     8983    3               CASE(COMPOPT);
     1241     8984    3                 AMR$REC$.V.COMP# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     1242     8985    3               CASE(COPIESOPT);
     1243     8986    3                 AMR$REC$.V.COPIES#=J;
     1244     8987    3               CASE(CTGOPT);
     1245     8988    3                 AMR$REC$.V.CTG# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     1246     8989    3               CASE(CVOLOPT);
     1247     8990    3                 AMR$REC$.V.CVOL# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     1248     8991    3               CASE(DCBCONLGLOPT);
     1249     8992    3                 AMR$REC$.V.DCBCONLGL# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,
              8992                          1);
     1250     8993    3               CASE(DEBUGOPT);
     1251     8994    3                 CALL BLD_VLP_AREA(%FPRG) ALTRET(CXB$PROC55);
     1252     8995    3                 AMR$REC$.FPRG_->VLP$FPRG.FLGS.DEBUG# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)
              8995                          ->OUT$BLK.CODE,1);
     1253     8996    3               CASE(DENSITYOPT);
     1254     8997    3                 AMR$REC$.V.DENSITY#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;
     1255     8998    3               CASE(DIRONLYOPT);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:118  
     1256     8999    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
     1257     9000    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.DIRONLY# = BINBIT(TEMP$->OUT$BLK.
              9000                          SUBLK$(0)->OUT$BLK.CODE,1);
     1258     9001    3               CASE(DISPOPT);
     1259     9002    3                 AMR$REC$.V.DISP#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;
     1260     9003    3               CASE(DVFCOPT);
     1261     9004    4                 DO CASE(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE);
     1262     9005    4                  CASE(DVFC_QUOTE);
     1263     9006    4                    AMR$REC$.V.DVFC#=TEMP$->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1264     9007    4                  CASE(DVFC_OCT);
     1265     9008    4                   AMR$REC$.V.DVFC#=BINASC(J);
     1266     9009    4                  END;
     1267     9010    3               CASE(EBCDICOPT);
     1268     9011    3                 AMR$REC$.V.EBCDIC# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     1269     9012    3                 AMR$REC$.V.CNVRT#=AMR$REC$.V.EBCDIC#;
     1270     9013    3                 IF TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.NSUBLKS > 0
     1271     9014    3                    THEN
     1272     9015    4                       DO;
     1273     9016    4                          TEMP$ = TEMP$->OUT$BLK.SUBLK$(0);
     1274     9017    4                          AMR$REC$.V.CNVRT# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.
              9017                                   CODE,1);
     1275     9018    4                       END;
     1276     9019    3               CASE(EOFNONEOPT);
     1277     9020    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
     1278     9021    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.EOFNONE# = BINBIT(TEMP$->OUT$BLK.
              9021                          SUBLK$(0)->OUT$BLK.CODE,1);
     1279     9022    3               CASE(EOFONEOPT);
     1280     9023    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
     1281     9024    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.EOFONE# = BINBIT(TEMP$->OUT$BLK.
              9024                          SUBLK$(0)->OUT$BLK.CODE,1);
     1282     9025    3               CASE(EOFTIMEOPT);
     1283     9026    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
     1284     9027    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.EOFTIME#=J;
     1285     9028    3               CASE(EVENTOPT);
     1286     9029    3                 AMR$REC$.V.EVENT#=J;
     1287     9030    3               CASE(EXISTOPT);
     1288     9031    3                 AMR$REC$.V.EXIST#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:119  
     1289     9032    3               CASE(EXPIREOPT);
     1290     9033    4                  DO CASE(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE);
     1291     9034    4                  CASE(EXP_DDD);
     1292     9035    4                    AMR$REC$.V.EXPIRE#=J;
     1293     9036    4                  CASE(EXP_NEVER);
     1294     9037    4                    AMR$REC$.V.EXPIRE#=-1;
     1295     9038    4                  END;
     1296     9039    3               CASE(FORMOPT);
     1297     9040    3                 MCB.SIZE=SIZEC(AM$FORM);
     1298     9041    3                 CALL GETVLPA(AMR$REC$.FORM_) ALTRET(PROCOPTRET);
     1299     9042    3                 AMR$REC$.FORM_->AM$FORM.FORM#=TEMP$->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1300     9043    3               CASE(FPRG_FIDOPT) ;
     1301     9044    3                 CALL BLD_VLP_AREA(%FPRG) ALTRET(CXB$PROC55) ;
     1302     9045    3                 CALL CNVRT_FID (TEMP$->OUT$BLK.SUBLK$(0)->P$S)
     1303     9046    3                                   ALTRET(PROCOPTRET) ;
     1304     9047    3                 IF NOT FID_RESULTS.NAME
     1305     9048    3                   THEN
     1306     9049    4                     DO ;
     1307     9050    4                       CPSL_PARAM.ERRCODE = E_FPRG_FID_NONAME ;
     1308     9051    4                       CPSL_PARAM.ERR_CPOS = TEMP$->OUT$BLK.SUBLK$(0) ->
     1309     9052    4                                             P$S.CPOS ;
     1310     9053    4                       GOTO PROCOPTRET ;
     1311     9054    4                     END ; /* Then Do */
     1312     9055    3                 IF FID_RESULTS.WSN
     1313     9056    3                   THEN
     1314     9057    4                     DO ;
     1315     9058    4                       CPSL_PARAM.ERRCODE = E_FPRG_FID_DISKONLY ;
     1316     9059    4                       CPSL_PARAM.ERR_CPOS = TEMP$->OUT$BLK.SUBLK$(0) ->
     1317     9060    4                                             P$S.CPOS ;
     1318     9061    4                       GOTO PROCOPTRET ;
     1319     9062    4                     END ; /* Then Do */
     1320     9063    3                 AMR$REC$.FPRG_->VLP$FPRG.NAME = FID_NAME ;
     1321     9064    3                 AMR$REC$.FPRG_->VLP$FPRG.ACCT# = FID_ACCT.ACCT# ;
     1322     9065    3                 AMR$REC$.FPRG_->VLP$FPRG.PASS# = FID_PASS.PASS# ;
     1323     9066    3                 AMR$REC$.FPRG_->VLP$FPRG.PSN# = FID_SN.SN#(0) ;
     1324     9067    3               CASE(FSNOPT);
     1325     9068    3                 AMR$REC$.V.FSN#=J;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:120  
     1326     9069    3               CASE(FUNOPT);
     1327     9070    3                 AMR$REC$.V.FUN#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;
     1328     9071    3               CASE(GHSTACSOPT);
     1329     9072    3                 AMR$REC$.V.GHSTACS#=J;
     1330     9073    3               CASE(HDRHOPT,INDENTOPT,PAGECOLOPT);
     1331     9074        /* ****             Get vlp area if one doesn't exist*/
     1332     9075    3                 IF AMR$REC$.HDR_=ADDR(NIL)
     1333     9076    3                    THEN
     1334     9077    4                       DO;
     1335     9078    4                          MCB.SIZE=SIZEC(CPSL_CVLP_HDR);
     1336     9079    4                          CALL GETVLPA(AMR$REC$.HDR_) ALTRET(PROCOPTRET);
     1337     9080    4                          AMR$REC$.HDR_->AM$HDR=CPSL_CVLP_HDR;
     1338     9081    4                          AMR$REC$.HDR_->AM$HDR.TITL.L#=0;
     1339     9082    4                       END;
     1340     9083    3                 IF TEMP$->OUT$BLK.CODE=HDRHOPT
     1341     9084    3                    THEN
     1342     9085    3                       AMR$REC$.HDR_->AM$HDR.CTL.HEADERHEIGHT#=J;
     1343     9086    3                 IF TEMP$->OUT$BLK.CODE=INDENTOPT
     1344     9087    3                    THEN
     1345     9088    3                       AMR$REC$.HDR_->AM$HDR.CTL.INDENT#=J;
     1346     9089    3                 IF TEMP$->OUT$BLK.CODE=PAGECOLOPT
     1347     9090    3                    THEN
     1348     9091    3                       AMR$REC$.HDR_->AM$HDR.CTL.COUNT#=J;
     1349     9092    3               CASE(IGNOREFSNOPT);
     1350     9093    3                 AMR$REC$.V.IGNOREFSN# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,
              9093                          1);
     1351     9094    3               CASE(ILATCHOPT);
     1352     9095    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
     1353     9096    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.ILATCH# = BINBIT(TEMP$->OUT$BLK.
              9096                          SUBLK$(0)->OUT$BLK.CODE,1);
     1354     9097    3               CASE(ILOCKOPT);
     1355     9098    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
     1356     9099    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.ILOCK# = BINBIT(TEMP$->OUT$BLK.SUBLK$
              9099                          (0)->OUT$BLK.CODE,1);
     1357     9100    3               CASE(IMSGTYPOPT);
     1358     9101    3                 CALL BLD_VLP_AREA(%SETSTA) ALTRET(CXB$PROC55);
     1359     9102    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.IMSGTYP#=
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:121  
     1360     9103    3                       TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1361     9104    3               CASE(INITIALIZEOPT);
     1362     9105    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55);
     1363     9106    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.INITIALIZE# = BINBIT(TEMP$->OUT$BLK.
              9106                          SUBLK$(0)->OUT$BLK.CODE,1);
     1364     9107    3               CASE(INITVALUEOPT) ;
     1365     9108    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55) ;
     1366     9109    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.INITVALUE# = J ;
     1367     9110    3               CASE(INSTATTROPT, INSTATTRSIZEOPT) ;
     1368     9111    3                 CALL ATTR_OPTS(AMR$REC$.INSTATTR_) ALTRET(PROCOPTRET);
     1369     9112    3               CASE(IOERROKOPT);
     1370     9113    3                 AMR$REC$.V.IOERROK# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9113                          ;
     1371     9114    3               CASE(ISTATIONOPT);
     1372     9115    3                 CALL BLD_VLP_AREA(%SETSTA) ALTRET(CXB$PROC55);
     1373     9116    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.ISTATION#=
     1374     9117    3                       TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1375     9118    3               CASE(IXTNSIZEOPT);
     1376     9119    3                 AMR$REC$.V.IXTNSIZE#=J;
     1377     9120    3               CASE(JRNLBYPASSOPT);
     1378     9121    3                 AMR$REC$.V.JRNLBYPASS# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE
              9121                          ,1);
     1379     9122    3               CASE(KEYLOPT);
     1380     9123    3                 AMR$REC$.V.KEYL#=J;
     1381     9124    3               CASE(KEYXOPT);
     1382     9125    3                 AMR$REC$.V.KEYX#=J;             /*Value into *A*/
     1383     9126    3               CASE(LINESOPT);
     1384     9127    3                 AMR$REC$.V.LINES#=J;
     1385     9128    3               CASE(LOADOPT);
     1386     9129    3                 AMR$REC$.V.LOAD#=BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->
     1387     9130    3                      OUT$BLK.CODE,1);
     1388     9131    3               CASE(LDBYPROOPT);
     1389     9132    3                 CALL BLD_VLP_AREA(%FPRG) ALTRET(CXB$PROC55);
     1390     9133    3                 AMR$REC$.FPRG_->VLP$FPRG.LDBYPRO# = TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.
              9133                          CODE;
     1391     9134    3               CASE(LRDL0OPT);
     1392     9135    3                 AMR$REC$.V.LRDL0#=J;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:122  
     1393     9136    3               CASE(LSLIDEOPT);
     1394     9137    3                 AMR$REC$.V.LSLIDE#=J;
     1395     9138    3               CASE(LSTAOROPT);
     1396     9139    3                 AMR$REC$.V.LSTAOR# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     1397     9140    3               CASE(MARGINOPT);
     1398     9141        /*
     1399     9142          ****  Get vlp area if one doesn't exist. Keep throughout job due to
     1400     9143                multiple entries in vlp.
     1401     9144        */
     1402     9145    3                 IF AMR$REC$.TAB_=ADDR(NIL)
     1403     9146    3                    THEN
     1404     9147    4                       DO;
     1405     9148    4                          MCB.SIZE=SIZEC(CPSL_CVLP_TAB);
     1406     9149    4                          CALL GETVLPA(AMR$REC$.TAB_) ALTRET(PROCOPTRET);
     1407     9150    4                          AMR$REC$.TAB_->AM$TAB=CPSL_CVLP_TAB;
     1408     9151    4                       END;
     1409     9152    3                 AMR$REC$.TAB_->AM$TAB.MARGIN#=J;
     1410     9153    3               CASE(MAXVOLOPT);
     1411     9154    3                 AMR$REC$.V.MAXVOL#=J;
     1412     9155    3               CASE(MINPHYSOPT) ;
     1413     9156    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55) ;
     1414     9157    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.MINPHYS# = J ;
     1415     9158    3               CASE(MYSTATIONOPT);
     1416     9159    3                 CALL BLD_VLP_AREA(%SETSTA) ALTRET(CXB$PROC55);
     1417     9160    3                 AMR$REC$.SETSTA_->AM$SETSTA.MYSTATION#=
     1418     9161    3                       TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1419     9162    3               CASE(NOFILEOPT);
     1420     9163    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55);
     1421     9164    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.NOFILE# = BINBIT(TEMP$->OUT$BLK.SUBLK$(
              9164                          0)->OUT$BLK.CODE,1);
     1422     9165    3               CASE(NRECSOPT);
     1423     9166    3                 AMR$REC$.V.NRECS#=J;         /*Value to *A*/
     1424     9167    3               CASE(OLATCHOPT);
     1425     9168    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
     1426     9169    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OLATCH# = BINBIT(TEMP$->OUT$BLK.
              9169                          SUBLK$(0)->OUT$BLK.CODE,1);
     1427     9170    3               CASE(OLOCKOPT);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:123  
     1428     9171    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
     1429     9172    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OLOCK# = BINBIT(TEMP$->OUT$BLK.SUBLK$
              9172                          (0)->OUT$BLK.CODE,1);
     1430     9173    3               CASE(OMSGTYPOPT);
     1431     9174    3                CALL BLD_VLP_AREA(%SETSTA) ALTRET(CXB$PROC55);
     1432     9175    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OMSGTYP#=
     1433     9176    3                       TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1434     9177    3               CASE(ORGOPT);
     1435     9178    3                 AMR$REC$.V.ORG#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;
     1436     9179    3               CASE(OSTATIONOPT);
     1437     9180    3                 CALL BLD_VLP_AREA(%SETSTA) ALTRET(CXB$PROC55);
     1438     9181    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OSTATION#=
     1439     9182    3                       TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1440     9183    3               CASE(PHYSICALOPT) ;
     1441     9184    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55) ;
     1442     9185    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.PHYSICAL# = J ;
     1443     9186    3               CASE(PROFILEOPT) ;
     1444     9187    3                 CALL BLD_VLP_AREA(%FPRG) ALTRET(CXB$PROC55) ;
     1445     9188    3                 AMR$REC$.FPRG_->VLP$FPRG.PROFILE#.C# =
     1446     9189    3                             TEMP$ -> OUT$BLK.SUBLK$(0)->P$S.COUNT ;
     1447     9190    3                 AMR$REC$.FPRG_->VLP$FPRG.PROFILE#.T# =
     1448     9191    3                             TEMP$ -> OUT$BLK.SUBLK$(0)->P$S.TEXT ;
     1449     9192    3               CASE(PROCATTROPT, PROCATTRSIZEOPT) ;
     1450     9193    3                 CALL ATTR_OPTS(AMR$REC$.PROCATTR_) ALTRET(PROCOPTRET);
     1451     9194    3               CASE(QISSOPT);
     1452     9195    3                 AMR$REC$.V.QISS# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     1453     9196    3               CASE(RECLOPT);
     1454     9197    3                 AMR$REC$.V.RECL#=J;             /*Value into *A*/
     1455     9198    3               CASE(RPAGEOPT);
     1456     9199        /* ****             Get vlp area if one doesn't exist*/
     1457     9200    3                 IF AMR$REC$.HDR_=ADDR(NIL)
     1458     9201    3                    THEN
     1459     9202    4                       DO;
     1460     9203    4                          MCB.SIZE=SIZEC(CPSL_CVLP_HDR);
     1461     9204    4                          CALL GETVLPA(AMR$REC$.HDR_) ALTRET(PROCOPTRET);
     1462     9205    4                          AMR$REC$.HDR_->AM$HDR=CPSL_CVLP_HDR;
     1463     9206    4                          AMR$REC$.HDR_->AM$HDR.TITL.L#=0;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:124  
     1464     9207    4                       END;
     1465     9208    3                 AMR$REC$.HDR_->AM$HDR.CTL.RESETPAGE# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)
              9208                          ->OUT$BLK.CODE,1);
     1466     9209    3                 AMR$REC$.V.INITZ.SCRUB# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.
              9209                          CODE,1);
     1467     9210    3               CASE(SCRUBOPT);
     1468     9211    3                 AMR$REC$.V.INITZ.SCRUB# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.
              9211                          CODE,1);
     1469     9212    3               CASE(SEEDOPT);
     1470     9213    4                 DO CASE(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE);
     1471     9214    4                   CASE(SEED_NONE);
     1472     9215    4                     AMR$REC$.V.SEED#=%NO#;
     1473     9216    4                     AMR$REC$.V.SEEDSPECIFIED#=%NO#;
     1474     9217    4                   CASE(SEED_OCT, SEED_QUOTE);
     1475     9218    4                     AMR$REC$.V.SEED#=BINBIT(J, 36);
     1476     9219    4                     AMR$REC$.V.SEEDSPECIFIED#=%YES#;
     1477     9220    4                 END;  /* Do Case */
     1478     9221    3               CASE(SEGNUMOPT) ;
     1479     9222    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55) ;
     1480     9223    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.SEGNUM# =
     1481     9224    3                     TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;
     1482     9225    3               CASE(SEGSIZEOPT) ;
     1483     9226    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55) ;
     1484     9227    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.SEGSIZE# = J ;
     1485     9228    3               CASE(SEQCOLOPT);
     1486     9229    3                 AMR$REC$.V.SEQ#=%YES#;
     1487     9230    3                 AMR$REC$.V.SEQCOL#=J;
     1488     9231    3               CASE(SEQIDOPT);
     1489     9232    3                 AMR$REC$.V.SEQ#=%YES#;
     1490     9233    3                 AMR$REC$.V.SEQID#=TEMP$->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1491     9234    3               CASE(SEQOPT);
     1492     9235    3                 AMR$REC$.V.SEQ# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     1493     9236    3               CASE(SHAREOPT);
     1494     9237    3                 AMR$REC$.V.SHARE#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;
     1495     9238    3               CASE(SNOPT);
     1496     9239        /*
     1497     9240          ****  Append new sn's to existing sn's
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:125  
     1498     9241        */
     1499     9242    3                 IF (AMR$REC$.SN_~=ADDR(NIL)) AND (AMR$REC$.SN_->AM$SN.SN#(0)
     1500     9243    3                      ~=' ')
     1501     9244    3                    THEN
     1502     9245    4                       DO;
     1503     9246    4                          MCB.SIZE=(AMR$REC$.SN_->AM$SN.NUM#*6)+4; /*Old sn size*/
     1504     9247    4                          MCB.SIZE=MCB.SIZE+(TEMP$->OUT$BLK.NSUBLKS*6);
     1505     9248        /*
     1506     9249          ****  Get new area large enough for old and new sn's
     1507     9250        */
     1508     9251    4                          CALL X$ALLOCATE(MCB) ALTRET(CXB$PROC55);
     1509     9252    4                          TEMP2$=AMR$REC$.SN_;
     1510     9253    4                          AMR$REC$.SN_=MCB.ADDRESS$;
     1511     9254        /*
     1512     9255          ****  Move all sn's to new area
     1513     9256        */
     1514     9257    4                          AMR$REC$.SN_->AM$SN.NUM#=TEMP2$->AM$SN.NUM#;
     1515     9258    5                          DO J=0 TO TEMP2$->AM$SN.NUM#-1;
     1516     9259    5                             AMR$REC$.SN_->AM$SN.SN#(J)=TEMP2$->AM$SN.SN#(J);
     1517     9260    5                          END;
     1518     9261    4                          MCB.ADDRESS$=TEMP2$;
     1519     9262    4                          CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Del. Old area*/
     1520     9263    4                       END;
     1521     9264    3                    ELSE
     1522     9265        /*
     1523     9266          ****  Delete blanks SN if in EXISTENCE...USED to reset dcb sn's
     1524     9267        */
     1525     9268    4                       DO;
     1526     9269    4                          MCB.SIZE=(TEMP$->OUT$BLK.NSUBLKS*6)+4;
     1527     9270    4                          CALL GETVLPA(AMR$REC$.SN_) ALTRET(PROCOPTRET);
     1528     9271    4                          AMR$REC$.SN_->AM$SN.NUM#=0;
     1529     9272    4                       END;
     1530     9273    3                 TVAL=AMR$REC$.SN_->AM$SN.NUM#;
     1531     9274    3                 AMR$REC$.SN_->AM$SN.NUM#=AMR$REC$.SN_->AM$SN.NUM#+TEMP$->
     1532     9275    3                      OUT$BLK.NSUBLKS;
     1533     9276        /* ****              Store serial number into the vlp*/
     1534     9277    4                 DO J=0 TO TEMP$->OUT$BLK.NSUBLKS-1;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:126  
     1535     9278    4                    PTR$=TEMP$->OUT$BLK.SUBLK$(J);
     1536     9279    4                    AMR$REC$.SN_->AM$SN.SN#(TVAL)=PTR$->P$S.TEXT;
     1537     9280    4                    TVAL=TVAL+1;
     1538     9281    4                 END;
     1539     9282    3               CASE(SPANNEDOPT);
     1540     9283    3                 AMR$REC$.V.SPANNED# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9283                          ;
     1541     9284    3               CASE(SPAREOPT);
     1542     9285    3                 AMR$REC$.V.SPARE#=J;
     1543     9286    3               CASE(TABOPT);
     1544     9287        /* ****              Get vlp area if one doesn't exist. Keep throughout job
     1545     9288                             due to multiple entries in VLP.*/
     1546     9289    3                 IF AMR$REC$.TAB_=ADDR(NIL)
     1547     9290    3                    THEN
     1548     9291    4                       DO;
     1549     9292    4                          MCB.SIZE=SIZEC(CPSL_CVLP_TAB);
     1550     9293    4                          CALL GETVLPA(AMR$REC$.TAB_) ALTRET(PROCOPTRET);
     1551     9294    4                          AMR$REC$.TAB_->AM$TAB=CPSL_CVLP_TAB;
     1552     9295    4                       END;
     1553     9296        /* ****              Insert tab SETtings*/
     1554     9297    4                 DO J=0 TO TEMP$->OUT$BLK.NSUBLKS-1;
     1555     9298    4                    CALL CXX$DECBIN(TEMP$->OUT$BLK.SUBLK$(J)->P$S.COUNT,TVAL);
     1556     9299    4                    AMR$REC$.TAB_->AM$TAB.TABS#(J)=TVAL;
     1557     9300    4                 END;
     1558     9301    4                 DO J=TEMP$->OUT$BLK.NSUBLKS TO 30; /*Zero remainder*/
     1559     9302    4                    AMR$REC$.TAB_->AM$TAB.TABS#(J)=0;
     1560     9303    4                 END;
     1561     9304    3               CASE(TERMCONLGLOPT);
     1562     9305    3                 AMR$REC$.V.TERMCONLGL# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE
              9305                          ,1);
     1563     9306    3               CASE(TITLEOPT);
     1564     9307    3                 IF AMR$REC$.HDR_~=ADDR(NIL)
     1565     9308    3                    THEN
     1566     9309    4                       DO;
     1567     9310        /* ***                   Preserve cntl info. Until after new vlp area is
     1568     9311                                 allocated*/
     1569     9312    4                          AM_HDR.CTL=AMR$REC$.HDR_->AM$HDR.CTL;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:127  
     1570     9313    4                          MCB.SIZE=TEMP$->OUT$BLK.SUBLK$(0)->P$S
     1571     9314    4                               .COUNT+SIZEC(CPSL_CVLP_HDR);
     1572     9315    4                          CALL GETVLPA(AMR$REC$.HDR_) ALTRET(PROCOPTRET);
     1573     9316        /* ****                  Restore cntl info.      */
     1574     9317    4                          AMR$REC$.HDR_->AM$HDR.CTL=AM_HDR.CTL;
     1575     9318    4                       END;
     1576     9319    3                    ELSE
     1577     9320    4                       DO;
     1578     9321    4                          MCB.SIZE=TEMP$->OUT$BLK.SUBLK$(0)->P$S.COUNT
     1579     9322    4                               +SIZEC(CPSL_CVLP_HDR);
     1580     9323    4                          CALL GETVLPA(AMR$REC$.HDR_) ALTRET(PROCOPTRET);
     1581     9324    4                          AMR$REC$.HDR_->AM$HDR=CPSL_CVLP_HDR;
     1582     9325    4                       END;
     1583     9326    3                 AMR$REC$.HDR_->AM$HDR.TITL.L#=TEMP$->OUT$BLK.SUBLK$(0)->
     1584     9327    3                      P$S.COUNT;
     1585     9328    3                 AMR$REC$.HDR_->AM$HDR.TITL.TITLE#=TEMP$->OUT$BLK.SUBLK$(0)->
     1586     9329    3                      P$S.TEXT;
     1587     9330    3               CASE(TYPEOPT);
     1588     9331    3                 AMR$REC$.V.TYPE#=TEMP$->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1589     9332    3               CASE(UOPT0OPT);
     1590     9333    3                 AMR$REC$.V.UOPT#(0) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9333                          ;
     1591     9334    3               CASE(UATTROPT, UATTRSIZEOPT) ;
     1592     9335    3                 CALL ATTR_OPTS(AMR$REC$.UATTR_) ALTRET(PROCOPTRET);
     1593     9336    3               CASE(UOPT1OPT);
     1594     9337    3                 AMR$REC$.V.UOPT#(1) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9337                          ;
     1595     9338    3               CASE(UOPT2OPT);
     1596     9339    3                 AMR$REC$.V.UOPT#(2) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9339                          ;
     1597     9340    3               CASE(UOPT3OPT);
     1598     9341    3                 AMR$REC$.V.UOPT#(3) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9341                          ;
     1599     9342    3               CASE(UOPT4OPT);
     1600     9343    3                 AMR$REC$.V.UOPT#(4) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9343                          ;
     1601     9344    3               CASE(UOPT5OPT);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:128  
     1602     9345    3                 AMR$REC$.V.UOPT#(5) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9345                          ;
     1603     9346    3               CASE(UOPT6OPT);
     1604     9347    3                 AMR$REC$.V.UOPT#(6) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9347                          ;
     1605     9348    3               CASE(UOPT7OPT);
     1606     9349    3                 AMR$REC$.V.UOPT#(7) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9349                          ;
     1607     9350    3               CASE(UOPT8OPT);
     1608     9351    3                 AMR$REC$.V.UOPT#(8) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9351                          ;
     1609     9352    3               CASE(VOLACCOPT);
     1610     9353    3                 AMR$REC$.V.VOLACCESS#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;
     1611     9354    3               CASE(VOLOPT);
     1612     9355    3               CASE(WASOPT);
     1613     9356    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
     1614     9357    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.WAS# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0
              9357                          )->OUT$BLK.CODE,1);
     1615     9358    3               CASE(XTENDOPT);
     1616     9359    3                 AMR$REC$.V.XTEND# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     1617     9360    3               CASE(XTNSIZEOPT);
     1618     9361    3                 AMR$REC$.V.XTNSIZE#=J;
     1619     9362    3               END CXB$PROC10;
     1620     9363    2              I=I+1;                       /*Bump index to next option*/
     1621     9364    2           END CXB$PROC5;
     1622     9365    1     RETURN;
     1623     9366
     1624     9367    1   CXB$PROC45:;
     1625     9368    1     CPSL_PARAM.ERRCODE = MCB.ERR ;
     1626     9369    1     CPSL_PARAM.ERR_CPOS = 511;
     1627     9370    1     GOTO PROCOPTRET ;
     1628     9371    1   CXB$PROC55:;
     1629     9372    1     CPSL_PARAM.ERRCODE = E_AMFULL ;
     1630     9373    1     CPSL_PARAM.ERR_CPOS = 511;
     1631     9374    1   PROCOPTRET: ;
     1632     9375    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
     1633     9376    1     RETURN;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:129  
     1634     9377                   %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:130  
     1635     9378        /**********************************************************************/
     1636     9379        /*I*   NAME:   BLD_ACCESS_VLP
     1637     9380               PURPOSE: Build access type VLP
     1638     9381               CALL:   CALL BLD_ACCESS_VLP(VLP$)
     1639     9382               INPUT:  VLP$ - pointer to VLP area to be initialized
     1640     9383                            - parse input
     1641     9384               OUTPUT: VLP in assign merge record
     1642     9385               DESCRIPTION: Creates READ,WRITE,ACSVEH,ACCESS VLPS for SET assignments.
     1643     9386        */
     1644     9387        /**********************************************************************/
     1645     9388    1   BLD_ACCESS_VLP: PROC(VLP$) ALTRET;
     1646     9389    2   DCL VLP$ PTR;                                    /*Ptr to vlp to be initialized*/
     1647     9390    2   DCL CNTLS(0:17) BIT(1);
     1648     9391    2   DCL CNTLS_TRANS(0:17) UBIN BYTE CALIGNED CONSTANT INIT(0, 1, 2, 3, 4, 5,
     1649     9392    2                                     6, 7, 10, 9, 11, 8, 12, 13, 14, 15, 16, 17) ;
     1650     9393                          /* The above table is to convert CNTLS from parse
     1651     9394                              tree so they end up in the correct bit position.
     1652     9395                          */
     1653     9396    2   DCL FILL$ PTR;                                   /*Ptr to current vlp entry*/
     1654     9397    2   DCL OLDVFCSIZE UBIN WORD;                         /* To add to end of old vfc */
     1655     9398    2   DCL 1 VLP$ATTR BASED,                            /*Vlp length*/
     1656     9399    2          2 SIZE# SBIN WORD;
     1657     9400    2   DCL 1 VLP$ACSVEH BASED,                          /*Access vehicle vlp*/
     1658     9401    2          2 FFLG BIT(18),
     1659     9402    2          2 C UBIN BYTE UNAL,
     1660     9403    2          2 VEHICLE# CHAR(VLP$ACSVEH.C);
     1661     9404    2   DCL 1 VLP$ACCESS BASED,                          /*Access vlp*/
     1662     9405    2          2 FFLG BIT(18),
     1663     9406    2          2 ACCT# CHAR(8);
     1664     9407    2   DCL B$WORD(0:0) UBIN WORD BASED;
     1665     9408                                                         /**/
     1666     9409        /* ****    Build control information             */
     1667     9410    3     DO CASE(TEMP$->OUT$BLK.CODE);
     1668     9411    3      CASE(READOPT);
     1669     9412    3        CNTLS=%FFLG_READ#;                 /*Read only*/
     1670     9413    3      CASE(WRITEOPT);
     1671     9414    3        CNTLS=%FFLG_WRITE#;                 /*READ,DELR,WNEW,UPD,DELE,REATTR*/
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:131  
     1672     9415    3      CASE(ACSVEHOPT,ACCESSOPT);
     1673     9416    3        CNTLS='0'B;
     1674     9417    3        IF TEMP$->OUT$BLK.NSUBLKS>1
     1675     9418    3           THEN   /*Controls were spec'd*/
     1676     9419    4              DO;
     1677     9420    4                 PTR$=TEMP$->OUT$BLK.SUBLK$(1);
     1678     9421    5                 DO J=0 TO PTR$->OUT$BLK.NSUBLKS-1;
     1679     9422    5                    CNTLS(CNTLS_TRANS(PTR$->OUT$BLK.SUBLK$(J)->OUT$BLK.CODE-1))=%YES#;
     1680     9423    5                 END;
     1681     9424    4              END;
     1682     9425    3      END;
     1683     9426    2     MCB.SIZE = SIZEC(VLP$ATTR.SIZE#);      /* Always need this */
     1684     9427        /*
     1685     9428          ****  If we already have a vlp area we need to figure out how many bytes
     1686     9429                (not words) it really is (what a pain!)
     1687     9430        */
     1688     9431    2     IF (VLP$ ~= ADDR(NIL))
     1689     9432    2        THEN
     1690     9433    3           DO;
     1691     9434    3              TEMP2$ = PINCRC(VLP$,SIZEC(VLP$ATTR.SIZE#));
     1692     9435    3              IF (TEMP$ -> OUT$BLK.CODE = ACSVEHOPT)
     1693     9436    3                 THEN
     1694     9437    4                    DO WHILE (POFFC(PINCRC(TEMP2$,4),VLP$) <
     1695     9438    4                            (VLP$ -> VLP$ATTR.SIZE# * 4) + SIZEC(VLP$ATTR.SIZE#));
     1696     9439    4                       MCB.SIZE = MCB.SIZE + TEMP2$ -> VLP$ACSVEH.C +
     1697     9440    4                            SIZEC(VLP$ACSVEH.FFLG) + 1;
     1698     9441    4                       TEMP2$ = PINCRC(TEMP2$,TEMP2$ -> VLP$ACSVEH.C +
     1699     9442    4                            SIZEC(VLP$ACSVEH.FFLG) + 1);
     1700     9443    4                    END;
     1701     9444        /**/
     1702     9445    3                 ELSE
     1703     9446    4                    DO WHILE (POFFC(PINCRC(TEMP2$,SIZEC(VLP$ACCESS.FFLG) +
     1704     9447    4                            SIZEC(VLP$ACCESS.ACCT#)),VLP$) <=
     1705     9448    4                            (VLP$ -> VLP$ATTR.SIZE# * 4) + SIZEC(VLP$ATTR.SIZE#));
     1706     9449    4                       MCB.SIZE = MCB.SIZE + SIZEC(VLP$ACCESS.FFLG) +
     1707     9450    4                            SIZEC(VLP$ACCESS.ACCT#);
     1708     9451    4                       TEMP2$ = PINCRC(TEMP2$,SIZEC(VLP$ACCESS.FFLG) +
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:132  
     1709     9452    4                            SIZEC(VLP$ACCESS.ACCT#));
     1710     9453    4                    END;
     1711     9454    3              OLDVFCSIZE = MCB.SIZE - SIZEC(VLP$ATTR.SIZE#);
     1712     9455    3           END;
     1713     9456        /*
     1714     9457          ****  Determine vlp size needed
     1715     9458        */
     1716     9459    2     PTR$=TEMP$->OUT$BLK.SUBLK$(0);
     1717     9460    2     IF PTR$->OUT$BLK.NSUBLKS = 0
     1718     9461    2        THEN
     1719     9462    2           MCB.SIZE=MCB.SIZE+10;              /*All was spec'd*/
     1720     9463    2        ELSE
     1721     9464    3           DO J=0 TO PTR$->OUT$BLK.NSUBLKS-1;
     1722     9465    3              IF (TEMP$->OUT$BLK.CODE=ACSVEHOPT)
     1723     9466    3                 THEN
     1724     9467    3                    MCB.SIZE=MCB.SIZE+PTR$->OUT$BLK.SUBLK$(J)->OUT$BLK.
     1725     9468    3                         SUBLK$(0)->P$S.COUNT+3;    /*add c=1,access=2*/
     1726     9469    3                 ELSE
     1727     9470    3                    MCB.SIZE=MCB.SIZE+10;           /*Add ACCOUNT=8,ACCESS=2*/
     1728     9471    3           END;
     1729     9472    2     IF (VLP$ = ADDR(NIL))
     1730     9473    2        THEN
     1731     9474    3           DO;             /* First time */
     1732     9475    3              CALL GETVLPA(VLP$) ALTRET (BLD_ACC50);
     1733     9476    3              VLP$ -> VLP$ATTR.SIZE# = 0;
     1734     9477    3           END;
     1735     9478        /*
     1736     9479          **** If not first time, then get new vlp area and
     1737     9480                move old one before deallocating the old one.
     1738     9481        */
     1739     9482    2        ELSE
     1740     9483    3           DO;
     1741     9484    3              CALL X$ALLOCATE(MCB) ALTRET (BLD_ACC50);
     1742     9485    3              TEMP2$ = VLP$;
     1743     9486    3              VLP$ = MCB.ADDRESS$;
     1744     9487    4              DO J = 1 TO TEMP2$ -> VLP$ATTR.SIZE#;
     1745     9488    4                 VLP$ -> B$WORD(J) = TEMP2$ -> B$WORD(J);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:133  
     1746     9489    4              END;
     1747     9490        /*
     1748     9491          ****  Convert the word count to the byte count that we caculated so
     1749     9492                that we know where to put the next vlp item in the list
     1750     9493        */
     1751     9494    3              VLP$ -> VLP$ATTR.SIZE# = OLDVFCSIZE;
     1752     9495    3              MCB.ADDRESS$ = TEMP2$;
     1753     9496    3              CALL X$DEALLOCATE(MCB) ALTRET (BLD_ACC50);
     1754     9497    3           END;
     1755     9498        /*
     1756     9499          ****    Create text,build access and vehicle list for all
     1757     9500        */
     1758     9501    2     IF PTR$->OUT$BLK.NSUBLKS = 0
     1759     9502    2        THEN
     1760     9503    3           DO;
     1761     9504    3              FILL$=PINCRC(VLP$,VLP$->VLP$ATTR.SIZE#+4);
     1762     9505    3              FILL$->VLP$ACCESS.FFLG=CNTLS;
     1763     9506    3              FILL$->VLP$ACCESS.ACCT#='ALL';
     1764     9507    3              AMR$REC$.ACCESS_->VLP$ATTR.SIZE#=AMR$REC$.ACCESS_->VLP$ATTR.SIZE#+10;
     1765     9508    3           END;
     1766     9509    2        ELSE
     1767     9510        /*
     1768     9511          ****  Build account access and access vehicle lists
     1769     9512        */
     1770     9513    3   BLD_ACC10: DO J=0 TO PTR$->OUT$BLK.NSUBLKS-1;
     1771     9514    3              IF TEMP$->OUT$BLK.CODE=ACSVEHOPT
     1772     9515    3                 THEN
     1773     9516    4                    DO;
     1774     9517    4                       FILL$=PINCRC(VLP$,VLP$->VLP$ATTR.SIZE#+4);
     1775     9518    4                       FILL$->VLP$ACSVEH.FFLG=CNTLS;
     1776     9519    4                       FILL$->VLP$ACSVEH.C=
     1777     9520    4                         PTR$->OUT$BLK.SUBLK$(J)->OUT$BLK.SUBLK$(0)->P$S.COUNT;
     1778     9521    4                       FILL$->VLP$ACSVEH.VEHICLE#=
     1779     9522    4                         PTR$->OUT$BLK.SUBLK$(J)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1780     9523    4                       AMR$REC$.ACSVEH_->VLP$ATTR.SIZE#=FILL$->VLP$ACSVEH.C+3+
     1781     9524    4                         AMR$REC$.ACSVEH_->VLP$ATTR.SIZE#;
     1782     9525    4                    END;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:134  
     1783     9526    3                 ELSE
     1784     9527    4                    DO;
     1785     9528    4                       FILL$=PINCRC(VLP$,VLP$->VLP$ATTR.SIZE#+4);
     1786     9529    4                       FILL$->VLP$ACCESS.FFLG=CNTLS;
     1787     9530    4                       FILL$->VLP$ACCESS.ACCT#=
     1788     9531    4                         PTR$->OUT$BLK.SUBLK$(J)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1789     9532    4                       AMR$REC$.ACCESS_->VLP$ATTR.SIZE#=AMR$REC$.ACCESS_->VLP$ATTR.
              9532                                SIZE#+10;
     1790     9533    4                    END;
     1791     9534    3           END BLD_ACC10;
     1792     9535    2     RETURN;
     1793     9536    2   BLD_ACC50: ;
     1794     9537    2     ALTRETURN;
     1795     9538    2   END BLD_ACCESS_VLP;
     1796     9539                   %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:135  
     1797     9540        /**********************************************************************/
     1798     9541        /*I*   NAME:   GETVLPA
     1799     9542               PURPOSE: Get available area in the assign merge record(SEG3) for VLP
     1800     9543               CALL:   CALL GETVLPA(VLP$)
     1801     9544               INTERFACE: CXB$RELVPA,X$ALLOCATE
     1802     9545               INPUT:  VLP$ - location in fpt to store VLP area pointer
     1803     9546               OUTPUT: VLP$ - pointer to VLP area
     1804     9547               DESCRIPTION: Segment 3 is searched for available vlp storage using
     1805     9548                       the X$ALLOCATE routine. If a vlp area was previously
     1806     9549                       allocated(vlp$~=addr(nil), the old vlp area is released
     1807     9550                       prior to obtaining new vlp space.
     1808     9551        */
     1809     9552        /**********************************************************************/
     1810     9553    1   GETVLPA: PROC(VLP$) ALTRET;
     1811     9554    2   DCL VLP$ PTR;                                    /*Ptr to available vlp area*/
     1812     9555        /*
     1813     9556          ****  Release old vlp area before allocating new area
     1814     9557        */
     1815     9558    2     IF VLP$~=ADDR(NIL)
     1816     9559    2        THEN
     1817     9560    3           DO;
     1818     9561    3              MCB.ADDRESS$=VLP$;
     1819     9562    3              CALL X$DEALLOCATE(MCB) ALTRET(GETVLPA60);
     1820     9563    3           END;
     1821     9564        /*
     1822     9565          ****  Get new area
     1823     9566        */
     1824     9567    2     CALL X$ALLOCATE(MCB) ALTRET(GETVLPA50);
     1825     9568    2     VLP$=MCB.ADDRESS$;                    /*Store new ptr in *A*/
     1826     9569    2     RETURN;
     1827     9570    2   GETVLPA50: ;
     1828     9571        /*E*       ERROR:   CPB-E$AMFULL-C
     1829     9572                   MESSAGE: Assign-merge record has exceeded its maximum size
     1830     9573                   DESCRIPTION: The assign-merge record has exceeded 1024 words
     1831     9574                                which is the maximum size permitted. This is
     1832     9575                                unlikely to occur and may be caused by an X$ALLOCATE
     1833     9576                                routine error.
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:136  
     1834     9577        */
     1835     9578    2     CPSL_PARAM.ERRCODE = E_AMFULL ;
     1836     9579    3     DO WHILE ('0'B) ;
     1837     9580    3   GETVLPA60: ;
     1838     9581    3       CPSL_PARAM.ERRCODE = MCB.ERR ;
     1839     9582    3     END ;   /* Do While */
     1840     9583    2     CPSL_PARAM.ERR_CPOS = 511;
     1841     9584    2     ALTRETURN;
     1842     9585    2   END GETVLPA;
     1843     9586                   %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:137  
     1844     9587        /**********************************************************************/
     1845     9588        /*I*   NAME:   BLD_VLP_AREA
     1846     9589               PURPOSE: Build an area to hold VLP if nonexistant
     1847     9590               CALL:   CALL BLD_VLP_AREA(type)
     1848     9591               INPUT:  type - Code for the type of VLP to build.
     1849     9592               OUTPUT:  AMR$REC$.xxx_ - initialized with pointer to vlp area
     1850     9593               DESCRIPTION: Creates a vlp with defaults if one hasn't already
     1851     9594                            been allocated.
     1852     9595        */
     1853     9596        /**********************************************************************/
     1854     9597    1   BLD_VLP_AREA: PROC(TYPE) ALTRET;
     1855     9598
     1856     9599    2   DCL TYPE UBIN WORD ;
     1857     9600    2   DCL ALLOC_FLG BIT(1) ;
     1858     9601    2     ALLOC_FLG = %NO# ;
     1859     9602    3     DO CASE(TYPE) ;
     1860     9603    3         CASE(%SETSTA, %VIRTUAL) ;
     1861     9604    3             IF AMR$REC$.VIRTUAL_ = ADDR(NIL)
     1862     9605    3               THEN
     1863     9606    3                 ALLOC_FLG  = %YES# ;
     1864     9607    3         CASE(%WINDOW) ;
     1865     9608    3             IF AMR$REC$.WINDOW_ = ADDR(NIL)
     1866     9609    3               THEN
     1867     9610    3                 ALLOC_FLG = %YES# ;
     1868     9611    3         CASE(%FPRG) ;
     1869     9612    3             IF AMR$REC$.FPRG_ = ADDR(NIL)
     1870     9613    3               THEN
     1871     9614    3                 ALLOC_FLG = %YES# ;
     1872     9615    3     END ;   /* Do Case */
     1873     9616    2     IF ALLOC_FLG
     1874     9617    2        THEN
     1875     9618    3           DO;
     1876     9619    4               DO CASE(TYPE) ;
     1877     9620    4                 CASE(%SETSTA) ;
     1878     9621    4                   MCB.SIZE=SIZEC(CPSL_CVLP_SETSTA) ;
     1879     9622    4                 CASE(%VIRTUAL) ;
     1880     9623    4                   MCB.SIZE=SIZEC(CPSL_CVLP_VIRTUAL);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:138  
     1881     9624    4                 CASE(%FPRG) ;
     1882     9625    4                   MCB.SIZE=SIZEC(CPSL_CVLP_FPRG) ;
     1883     9626    4                   MCB.TYPE = 2 ;  /* Double Word alignment. */
     1884     9627    4                 CASE(%WINDOW) ;
     1885     9628    4                   MCB.SIZE=SIZEC(CPSL_CVLP_WINDOW) ;
     1886     9629    4               END ; /* Do Case */
     1887     9630    3               CALL X$ALLOCATE(MCB) ALTRET(BLD_VLP_AREA50);
     1888     9631    4               DO CASE(TYPE) ;
     1889     9632    4                 CASE(%SETSTA) ;
     1890     9633    4                   AMR$REC$.SETSTA_=MCB.ADDRESS$ ;
     1891     9634    4                   AMR$REC$.SETSTA_->AM$SETSTA=CPSL_CVLP_SETSTA;
     1892     9635    4                 CASE(%VIRTUAL) ;
     1893     9636    4                   AMR$REC$.VIRTUAL_=MCB.ADDRESS$;
     1894     9637    4                   AMR$REC$.VIRTUAL_->VLP$VIRTUAL=CPSL_CVLP_VIRTUAL;
     1895     9638    4                 CASE(%FPRG) ;
     1896     9639    4                   MCB.TYPE = 0 ;  /* Set it back to normal setting. */
     1897     9640    4                   AMR$REC$.FPRG_=MCB.ADDRESS$ ;
     1898     9641    4                   AMR$REC$.FPRG_->VLP$FPRG=CPSL_CVLP_FPRG;
     1899     9642    4                 CASE(%WINDOW) ;
     1900     9643    4                   AMR$REC$.WINDOW_=MCB.ADDRESS$ ;
     1901     9644    4                   AMR$REC$.WINDOW_->VLP$WINDOW=CPSL_CVLP_WINDOW;
     1902     9645    4               END ; /* Do Case */
     1903     9646    3            END;
     1904     9647    2     RETURN;
     1905     9648    2   BLD_VLP_AREA50:;
     1906     9649    2     ALTRETURN;
     1907     9650    2   END BLD_VLP_AREA;
     1908     9651                   %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:139  
     1909     9652        /**********************************************************************/
     1910     9653        /*I*   NAME:   CHK_IF_ASN_OK
     1911     9654               PURPOSE: See if the ASN is correct for this type of option.  If so,
     1912     9655                        RETURN. Otherwise, setup the error code and position, and
     1913     9656                        ALTRETURN.
     1914     9657               CALL:   CALL CHK_IF_ASN_OK(B$)
     1915     9658               INPUT:  B$ - Pointer to the option block.
     1916     9659               OUTPUT: CPSL_PARAM.ERRCODE - The error code to be returned.
     1917     9660                       CPSL_PARAM.ERR_CPOS# - The position of the option that
     1918     9661                          was being processed.
     1919     9662               DESCRIPTION: Check to see if the ASN is legal for the option that
     1920     9663                       is being processed.  If so, RETURN normally.  Otherwise,
     1921     9664                       put the error code and character position in the CPSL_PARAM
     1922     9665                       structure, and ALTRETURN to the calling routine.
     1923     9666        */
     1924     9667        /**********************************************************************/
     1925     9668    1   CHK_IF_ASN_OK: PROC(B$) ALTRET;
     1926     9669
     1927     9670    2   DCL B$ PTR PARAM ;
     1928     9671    2   DCL ASN_GOOD BIT(1) ;
     1929     9672    2   DCL ERR BIT(36) ;
     1930     9673
     1931     9674    2     ASN_GOOD = %YES# ;
     1932     9675    3     DO CASE(B$->OUT$BLK.CODE) ;
     1933     9676
     1934     9677    3         CASE(ACSVEHOPT) ;
     1935     9678    3             IF ASN ~= %FILE#
     1936     9679    3               THEN
     1937     9680    4                 DO ;
     1938     9681    4                   ASN_GOOD = %NO# ;
     1939     9682    4                   ERR = E_BADACSVEHOPT ;
     1940     9683    4                 END ; /* Then Do */
     1941     9684
     1942     9685    3         CASE(ALTKEYSOPT) ;
     1943     9686    3             IF ASN ~= %FILE#
     1944     9687    3               THEN
     1945     9688    4                 DO ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:140  
     1946     9689    4                   ASN_GOOD = %NO# ;
     1947     9690    4                   ERR = E_BADALTKEYSOPT ;
     1948     9691    4                 END ; /* Then Do */
     1949     9692
     1950     9693    3         CASE(DEBUGOPT,
     1951     9694    3               FPRG_FIDOPT,
     1952     9695    3               LDBYPROOPT,
     1953     9696    3               PROFILEOPT) ;
     1954     9697    3             IF ASN ~= %COMGROUP# AND ASN ~= %DEVICE#
     1955     9698    3               THEN
     1956     9699    4                 DO ;
     1957     9700    4                   ASN_GOOD = %NO# ;
     1958     9701    4                   ERR = E_BADFPRGOPT ;
     1959     9702    4                 END ; /* Then Do */
     1960     9703
     1961     9704    3         CASE( ALLDCBSOPT,
     1962     9705    3               ALLTRMSOPT,
     1963     9706    3               ANYDCBOPT,
     1964     9707    3               DIRONLYOPT,
     1965     9708    3               EOFNONEOPT,
     1966     9709    3               EOFONEOPT,
     1967     9710    3               EOFTIMEOPT,
     1968     9711    3               ILATCHOPT,
     1969     9712    3               ILOCKOPT,
     1970     9713    3               IMSGTYPOPT,
     1971     9714    3               ISTATIONOPT,
     1972     9715    3               MYSTATIONOPT,
     1973     9716    3               OLATCHOPT,
     1974     9717    3               OLOCKOPT,
     1975     9718    3               OMSGTYPOPT,
     1976     9719    3               OSTATIONOPT,
     1977     9720    3               WASOPT) ;
     1978     9721    3             IF ASN ~= %COMGROUP# AND ASN ~= %DEVICE#
     1979     9722    3               THEN
     1980     9723    4                 DO ;
     1981     9724    4                   ASN_GOOD = %NO# ;
     1982     9725    4                   ERR = E_BADSETSTAOPT ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:141  
     1983     9726    4                 END ; /* Then Do */
     1984     9727
     1985     9728    3         CASE(INITIALIZEOPT,
     1986     9729    3               INITVALUEOPT,
     1987     9730    3               MINPHYSOPT,
     1988     9731    3               NOFILEOPT,
     1989     9732    3               PHYSICALOPT,
     1990     9733    3               SEGNUMOPT,
     1991     9734    3               SEGSIZEOPT) ;
     1992     9735    3             IF ASN ~= %FILE#
     1993     9736    3               THEN
     1994     9737    4                 DO ;
     1995     9738    4                   ASN_GOOD = %NO# ;
     1996     9739    4                   ERR = E_BADVIRTUALOPT ;
     1997     9740    4                 END ; /* Then Do */
     1998     9741    3             CASE( BTMBRDROPT,
     1999     9742    3                   FWINDOWOPT,
     2000     9743    3                   HBRDRCHROPT,
     2001     9744    3                   HBRDRSIZOPT,
     2002     9745    3                   LFTBRDROPT,
     2003     9746    3                   MINLENGTHOPT,
     2004     9747    3                   MINWIDTHOPT,
     2005     9748    3                   OPTIONALOPT,
     2006     9749    3                   POSITIONOPT,
     2007     9750    3                   RHTBRDROPT,
     2008     9751    3                   TOPBRDROPT,
     2009     9752    3                   VBRDRCHROPT,
     2010     9753    3                   VBRDRSIZOPT,
     2011     9754    3                   WLENGTHOPT,
     2012     9755    3                   WWIDTHOPT) ;
     2013     9756    3             IF ASN ~= %DEVICE#
     2014     9757    3               THEN
     2015     9758    4                 DO ;
     2016     9759    4                   ASN_GOOD = %NO# ;
     2017     9760    4                   ERR = E_BADWINDOWOPT ;
     2018     9761    4                 END ; /* Then Do */
     2019     9762
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:142  
     2020     9763    3     END ;   /* Do Case */
     2021     9764
     2022     9765    2     IF ASN_GOOD
     2023     9766    2         THEN
     2024     9767    2             RETURN ;
     2025     9768
     2026     9769    2     CPSL_PARAM.ERRCODE = ERR ;
     2027     9770    2     CPSL_PARAM.ERR_CPOS = B$->OUT$BLK.CPOS ;
     2028     9771
     2029     9772    2     ALTRETURN ;
     2030     9773
     2031     9774    2   END   CHK_IF_ASN_OK ;
     2032     9775        %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:143  
     2033     9776        /**********************************************************************/
     2034     9777        /*I*      NAME:CNVRT_FID
     2035     9778                  PURPOSE:  BREAKS UP A FID INTO ITS VARIOUS COMPONENTS
     2036     9779                  INPUT:    OUT_SYM
     2037     9780                  OUTPUT:   FID into various vlp's
     2038     9781                            errors output resulting from M$FID pmme execution
     2039     9782        */
     2040     9783        /**********************************************************************/
     2041     9784    1   CNVRT_FID: PROC(OUT_SYM) ALTRET;
     2042     9785
     2043     9786        %PARSE$SYM (NAME=OUT_SYM, STCLASS=PARAM) ;
     2044     9824        /*
     2045     9825          ****    BREAK UP THE FID
     2046     9826        */
     2047     9827    2      FPT_FID =CPSL_CFPT_FID;
     2048     9828    2      FPT_FID.V_=VECTOR(FPT_FID.V);
     2049     9829    2      FPT_FID.SN_ = VECTOR(FID_SN);
     2050     9830    2      FPT_FID.WSN_ = VECTOR(FID_WSN);
     2051     9831    2      FPT_FID.ASN_ = VECTOR(FID_ASN);
     2052     9832    2      FPT_FID.RES_ = VECTOR(FID_RES);
     2053     9833    2      FPT_FID.NAME_ = VECTOR(FID_NAME);
     2054     9834    2      FPT_FID.ACCT_ = VECTOR(FID_ACCT);
     2055     9835    2      FPT_FID.PASS_ = VECTOR(FID_PASS);
     2056     9836    2      FPT_FID.RESULTS_ = VECTOR(FID_RESULTS);
     2057     9837    2      FPT_FID.TEXTFID_ = VECTOR(OUT_SYM.TEXT);
     2058     9838    2      CALL M$FID(FPT_FID) ALTRET(CNVRT_FID50);
     2059     9839    2      RETURN;
     2060     9840    2   CNVRT_FID50:
     2061     9841    2     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$EXCFR.ERR ;
     2062     9842    2     CPSL_PARAM.ERR_CPOS = OUT_SYM.CPOS ;
     2063     9843    2      ALTRETURN;
     2064     9844    2   END CNVRT_FID;
     2065     9845                   %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:144  
     2066     9846        /**********************************************************************/
     2067     9847        /*I*   NAME:   ALTKEYS_OPTS
     2068     9848               PURPOSE: To process the ALTKEYS options for the SET,RESET, and
     2069     9849                        ADJUST commands.
     2070     9850               CALL:   CALL ALTKEYS_OPTS(OUT_BLK)
     2071     9851               INPUT:  OUT_BLK - The parse block that describes the ALTKEYS option.
     2072     9852               OUTPUT: xxx.ALTKEY_ - The pointer in the AMR for the ALTKEYS area.
     2073     9853               DESCRIPTION: If an area has been allocated, then another area must
     2074     9854                       be allocated to accommodate the number of entries of the
     2075     9855                       old VLP, plus the number of new  entries.  In either case,
     2076     9856                       an area must be allocated using segment 3.  After allocation,
     2077     9857                       if an area had already existed, its entries must be moved
     2078     9858                       to the new area, and old area deallocated.  Then the new
     2079     9859                       entries must be added.
     2080     9860        */
     2081     9861        /**********************************************************************/
     2082     9862    1   ALTKEYS_OPTS: PROC(OUT_BLK) ALTRET;
     2083     9863
     2084     9864          %PARSE$OUT (NAME=OUT_BLK, STCLASS=PARAM) ;
     2085     9909    2     DCL I UBIN ;
     2086     9910    2     DCL J UBIN ;
     2087     9911    2     DCL K UBIN ;
     2088     9912    2     DCL NUM UBIN ;
     2089     9913    2     DCL SIZC UBIN ;
     2090     9914    2     DCL TEMP UBIN ;
     2091     9915    2     DCL BLK$ PTR ;
     2092     9916    2     DCL VLP$ PTR ;
     2093     9917          %VLP_ALTKEYS (FPTN=CVLP_ALTKEYS,STCLASS=CONSTANT) ;
     2094     9932
     2095     9933    2     IF AMR$REC$.ALTKEYS_ ~= ADDR(NIL)
     2096     9934    2       THEN
     2097     9935    2         NUM = AMR$REC$.ALTKEYS_->AM$ALTKEYS.SIZ# ;
     2098     9936    2       ELSE
     2099     9937    2         NUM = 0 ;
     2100     9938
     2101     9939    2     NUM = NUM + OUT_BLK.NSUBLKS ;
     2102     9940    2     SIZC = SIZEC(AMR$REC$.ALTKEYS_->AM$ALTKEYS.SIZ#) + (SIZEC(AMR$REC$.ALTKEYS_
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:145  
     2103     9941    2                     -> AM$ALTKEYS.K(0)) * NUM) ;
     2104     9942    2     MCB.SIZE = SIZC ;
     2105     9943    2     CALL X$ALLOCATE(MCB) ALTRET(E_ALTKEYS_OPTS) ;
     2106     9944    2     VLP$ = MCB.ADDRESS$ ;
     2107     9945    2     IF AMR$REC$.ALTKEYS_ ~= ADDR(NIL)
     2108     9946    2       THEN
     2109     9947    3         DO ;
     2110     9948    4           DO I=0 TO AMR$REC$.ALTKEYS_->AM$ALTKEYS.SIZ#-1 ;
     2111     9949    4             VLP$->AM$ALTKEYS.K(I) = AMR$REC$.ALTKEYS_->AM$ALTKEYS.K(I) ;
     2112     9950    4           END ; /* Do I */
     2113     9951    3           K = I ;
     2114     9952    3           MCB.ADDRESS$ = AMR$REC$.ALTKEYS_ ;
     2115     9953    3           CALL X$DEALLOCATE(MCB) ALTRET(E_ALTKEYS_OPTS) ;
     2116     9954    3           AMR$REC$.ALTKEYS_ = ADDR(NIL) ;
     2117     9955    3         END ; /* Then Do */
     2118     9956    2       ELSE
     2119     9957    2         K = 0 ;
     2120     9958    3     DO I=K TO NUM-1 ;
     2121     9959    3       VLP$->AM$ALTKEYS.K(I) = CVLP_ALTKEYS.K(0) ;
     2122     9960    3       BLK$ = OUT_BLK.SUBLK$(I-K) ;
     2123     9961    4       DO J=0 TO BLK$->OUT$BLK.NSUBLKS-1 ;
     2124     9962    5         DO CASE(BLK$->OUT$BLK.SUBLK$(J)->OUT$BLK.CODE) ;
     2125     9963    5           CASE(ALTKEY_UNIQUE_OPT) ;
     2126     9964    5             VLP$->AM$ALTKEYS.K.UNIQUE#(I) = BINBIT(BLK$->OUT$BLK.SUBLK$(J)->OUT$BLK.
              9964                      SUBLK$(0)->OUT$BLK.CODE,1);
     2127     9965
     2128     9966    5           CASE(ALTKEY_KEYL_OPT) ;
     2129     9967    5             CALL CXX$SET(BLK$->OUT$BLK.SUBLK$(J)->P$S, GETCMD, CPSL_PARAM,
     2130     9968    5                                     TEMP) ;
     2131     9969    5             VLP$->AM$ALTKEYS.K.KEYL#(I) = TEMP ;
     2132     9970
     2133     9971    5           CASE(ALTKEY_KEYX_OPT) ;
     2134     9972    5             CALL CXX$SET(BLK$->OUT$BLK.SUBLK$(J)->P$S, GETCMD, CPSL_PARAM,
     2135     9973    5                                     TEMP) ;
     2136     9974    5             VLP$->AM$ALTKEYS.K.KEYX#(I) = TEMP ;
     2137     9975
     2138     9976    5         END ; /* Do Case */
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:146  
     2139     9977    4       END ; /* Do J */
     2140     9978    3     END ;   /* Do I */
     2141     9979
     2142     9980    2     VLP$ -> AM$ALTKEYS.SIZ# = NUM;
     2143     9981    2     AMR$REC$.ALTKEYS_ = VLP$ ;
     2144     9982
     2145     9983    2     RETURN ;
     2146     9984
     2147     9985    2   E_ALTKEYS_OPTS:
     2148     9986    2     CPSL_PARAM.ERRCODE = MCB.ERR ;
     2149     9987    2     CPSL_PARAM.ERR_CPOS = 511;
     2150     9988
     2151     9989    2   ALTKEYS_OPTS_ALTRET:
     2152     9990    2     ALTRETURN ;
     2153     9991
     2154     9992    2   END   ALTKEYS_OPTS ;
     2155     9993                   %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:147  
     2156     9994        /**********************************************************************/
     2157     9995        /*I*   NAME:   ATTR_OPTS
     2158     9996               PURPOSE: To process the ATTR type options for the SET,RESET, and
     2159     9997                        ADJUST commands, i.e. PROCATTR, INSTATTR, and UATTR.
     2160     9998               CALL:   CALL ATTR_OPTS(ATTR$)
     2161     9999               INPUT:  ATTR$ - The location to receive the pointer to the area
     2162    10000               DESCRIPTION: If an area has been allocated, then another area must
     2163    10001                       be allocated to accommodate the complete character count,
     2164    10002                       old ATTR, plus the new character string.  In either case,
     2165    10003                       an area must be allocated using segment 3.  After allocation,
     2166    10004                       if an area had already existed, its character string must
     2167    10005                       be moved to the new area, and old area deallocated.  Then the
     2168    10006                       new character string must be added.
     2169    10007        */
     2170    10008        /**********************************************************************/
     2171    10009    1   ATTR_OPTS: PROC(ATTR$) ALTRET;
     2172    10010
     2173    10011    2   DCL ATTR$ PTR PARAM ;
     2174    10012    2   DCL VARYCNT UBIN WORD ;
     2175    10013    2   DCL VARY$STR CHAR(VARYCNT) BASED ;
     2176    10014    2   DCL BUF$ PTR ;
     2177    10015    2   DCL ALLOCSZ UBIN WORD ;
     2178    10016    2   DCL SIZC UBIN ;
     2179    10017    2   DCL I UBIN WORD ;
     2180    10018    2   DCL J UBIN WORD ;
     2181    10019    2   DCL START$ PTR ;
     2182    10020    2   DCL VLP$ PTR ;
     2183    10021    2   DCL BUFSIZC UBIN ;
     2184    10022        %VLP_ATTR (FPTN=VLP$ATTR, STCLASS=BASED) ;
     2185    10036    2   3 BUF CHAR(BUFSIZC) ;
     2186    10037
     2187    10038    3     DO CASE(TEMP$->OUT$BLK.CODE) ;
     2188    10039
     2189    10040    3       CASE( INSTATTRSIZEOPT,
     2190    10041    3             PROCATTRSIZEOPT,
     2191    10042    3             UATTRSIZEOPT) ;
     2192    10043    3         IF ATTR$ = ADDR(NIL)
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:148  
     2193    10044    3           THEN
     2194    10045    4             DO ;
     2195    10046    4               BUFSIZC = 0 ;
     2196    10047    4               MCB.SIZE = SIZEC(ATTR$->VLP$ATTR) ;
     2197    10048    4               CALL X$ALLOCATE(MCB) ALTRET(E_ATTR_OPTS) ;
     2198    10049    4               ATTR$ = MCB.ADDRESS$ ;
     2199    10050    4             END ; /* Then Do */
     2200    10051    3         CALL CXX$SET(TEMP$->OUT$BLK.SUBLK$(0)->P$S, GETCMD, CPSL_PARAM, I) ;
     2201    10052    3         IF CPSL_PARAM.ERRCODE ~= %NO#
     2202    10053    3           THEN
     2203    10054    3             GOTO ATTR_OPTS_RET ;
     2204    10055    3         ATTR$->VLP$ATTR.NAW# = I ;
     2205    10056
     2206    10057    3       CASE( INSTATTROPT,
     2207    10058    3             PROCATTROPT,
     2208    10059    3             UATTROPT) ;
     2209    10060    3         IF ATTR$ = ADDR(NIL)
     2210    10061    3           THEN
     2211    10062    3             SIZC = 0 ;
     2212    10063    3           ELSE
     2213    10064    3             SIZC = ATTR$->VLP$ATTR.SIZ# * 4 ;
     2214    10065
     2215    10066    4         DO I = 0 TO TEMP$->OUT$BLK.NSUBLKS-1 ;
     2216    10067    4           SIZC = SIZC + TEMP$->OUT$BLK.SUBLK$(I)->P$S.COUNT ;
     2217    10068    4         END ;   /* Do I */
     2218    10069
     2219    10070    3         SIZC = ((SIZC+3)/4)*4 ;
     2220    10071    3         BUFSIZC = SIZC ;
     2221    10072    3         MCB.SIZE = SIZEC(ATTR$->VLP$ATTR) ;
     2222    10073    3         CALL X$ALLOCATE(MCB) ALTRET(E_ATTR_OPTS) ;
     2223    10074    3         VLP$ = MCB.ADDRESS$ ;
     2224    10075    3         VARYCNT = 0 ;
     2225    10076    3         IF ATTR$ ~= ADDR(NIL)
     2226    10077    3           THEN
     2227    10078    4             DO ;
     2228    10079    4               BUFSIZC = ATTR$->VLP$ATTR.SIZ# * 4 ;
     2229    10080    4               VLP$->VLP$ATTR.Q.BUF = ATTR$->VLP$ATTR.Q.BUF ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:149  
     2230    10081    4               VARYCNT = BUFSIZC ;
     2231    10082    4               MCB.ADDRESS$ = ATTR$ ;
     2232    10083    4               CALL X$DEALLOCATE(MCB) ALTRET(E_ATTR_OPTS) ;
     2233    10084    4               ATTR$ = ADDR(NIL) ;
     2234    10085    4             END ; /* Then Do */
     2235    10086    3         START$ = ADDR(VLP$->VLP$ATTR.Q.BUF) ;
     2236    10087    3         BUF$ = START$ ;
     2237    10088    4         DO I=0 TO TEMP$->OUT$BLK.NSUBLKS-1 ;
     2238    10089    4           BUF$ = PINCRC(BUF$, VARYCNT) ;
     2239    10090    4           VARYCNT = TEMP$->OUT$BLK.SUBLK$(I)->P$S.COUNT ;
     2240    10091    4           BUF$->VARY$STR = TEMP$->OUT$BLK.SUBLK$(I)->P$S.TEXT ;
     2241    10092    4         END ;   /* Do I */
     2242    10093    3         I = POFFC(BUF$,START$) ;
     2243    10094    3         VARYCNT = SIZC - I ;
     2244    10095    3         IF VARYCNT > 0
     2245    10096    3           THEN
     2246    10097    3             BUF$->VARY$STR = ' ' ;
     2247    10098    3         VLP$->VLP$ATTR.SIZ# = SIZC/4 ;
     2248    10099    3         ATTR$ = VLP$ ;
     2249    10100    3     END ;   /* Do Case */
     2250    10101
     2251    10102    2   ATTR_OPTS_RET:
     2252    10103    2   RETURN ;
     2253    10104
     2254    10105    2   E_ATTR_OPTS:
     2255    10106    2     CPSL_PARAM.ERRCODE = MCB.ERR ;
     2256    10107    2     CPSL_PARAM.ERR_CPOS = 511;
     2257    10108    2     ALTRETURN ;
     2258    10109
     2259    10110    2   END   ATTR_OPTS ;
     2260    10111        /**********************************************************************/
     2261    10112        /*I*   NAME:   RESET_ATTR_OPTS
     2262    10113               PURPOSE: To RESET the ATTR buffer for the RESET command.
     2263    10114                        i.e. PROCATTR, INSTATTR, and UATTR.
     2264    10115               CALL:   CALL RESET_ATTR_OPTS(ATTR$)
     2265    10116               INPUT:  ATTR$ - The location to receive the pointer to the area
     2266    10117               DESCRIPTION: If an area has been allocated, then another area must
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:150  
     2267    10118                       be allocated to accommodate the new VLP_ATRR.
     2268    10119                       The NAW# of the old is put in the new, and the old is
     2269    10120                       deallocated.
     2270    10121        */
     2271    10122        /**********************************************************************/
     2272    10123    1   RESET_ATTR_OPTS: PROC(ATTR$) ALTRET;
     2273    10124
     2274    10125    2   DCL ATTR$ PTR PARAM ;
     2275    10126    2   DCL I UBIN ;
     2276    10127    2   DCL BUFSIZC UBIN ;
     2277    10128        %VLP_ATTR (FPTN=VLP$ATTR, STCLASS=BASED) ;
     2278    10142    2   3 BUF CHAR(BUFSIZC) ;
     2279    10143
     2280    10144    2     IF ATTR$ = ADDR(NIL)
     2281    10145    2       THEN
     2282    10146    2         GOTO RESET_ATTR_OPTS_RET ;
     2283    10147    2     I = ATTR$->VLP$ATTR.NAW# ;
     2284    10148    2     MCB.ADDRESS$ = ATTR$ ;
     2285    10149    2     CALL X$DEALLOCATE(MCB) ALTRET(E_RESET_ATTR_OPTS) ;
     2286    10150    2     IF I = 0                  /* NAW is ZERO, no area to allocate */
     2287    10151    2       THEN
     2288    10152    2         ATTR$ = ADDR(NIL) ;
     2289    10153    2       ELSE
     2290    10154    3         DO ;
     2291    10155    3           BUFSIZC = 0 ;
     2292    10156    3           MCB.SIZE = SIZEC(ATTR$->VLP$ATTR) ;
     2293    10157    3           CALL X$ALLOCATE(MCB) ALTRET(E_RESET_ATTR_OPTS) ;
     2294    10158    3           ATTR$ = MCB.ADDRESS$ ;
     2295    10159    3           ATTR$ -> VLP$ATTR.SIZ# = 0 ;
     2296    10160    3           ATTR$ -> VLP$ATTR.NAW# = I ;
     2297    10161    3         END ;  /* Else Do */
     2298    10162
     2299    10163    2   RESET_ATTR_OPTS_RET:
     2300    10164    2     RETURN ;
     2301    10165
     2302    10166    2   E_RESET_ATTR_OPTS:
     2303    10167    2     CPSL_PARAM.ERRCODE = MCB.ERR ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:151  
     2304    10168    2     CPSL_PARAM.ERR_CPOS = 511;
     2305    10169    2     ALTRETURN ;
     2306    10170
     2307    10171    2   END RESET_ATTR_OPTS ;
     2308    10172    1   END CXB$PROCOPT;
     2309    10173        %EOD ;

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:152  
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_ISUBS_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXB$PROCOPT.

   Procedure CXB$PROCOPT requires 4386 words for executable code.
   Procedure CXB$PROCOPT requires 190 words of local(AUTO) storage.

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:153  

 Object Unit name= CXB$PROCOPT                                File name= CXB$SUBR.:E05TOU
 UTS= JUL 29 '97 12:20:48.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     17     21  CXB$PROCOPT
    2   Proc  even  none  4386  10442  CXB$PROCOPT
    3  RoData even  none    18     22  CXB$PROCOPT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        4  CXB$PROCOPT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 CXX$RESET
 yes     yes           Std       1 X$DEALLOCATE
         yes           Std       4 CXB$WINDOW_OPTS
 yes     yes           Std       1 X$ALLOCATE
 yes     yes           Std       2 CXX$DECBIN
         yes           Std       4 CXX$SET
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:154  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CPSL_CFPT_OPEN                        CPSL_CFPT_FID
     CPSL_CVLP_HDR                         CPSL_CVLP_SETSTA                      CPSL_CVLP_TAB
     CPSL_CVLP_WINDOW                      CPSL_CVLP_FPRG                        CPSL_CVLP_VIRTUAL
r    B$JIT$                           r    B$TCB$                           r    CPSL_SEG3$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 ISSID
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:155  


      480        1        /*T***********************************************************/
      481        2        /*T*                                                         */
      482        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      483        4        /*T*                                                         */
      484        5        /*T***********************************************************/
      485        6        /********************************************************************/
      486        7        /*F*   NAME:   CXB$PROCOPT
      487        8               PURPOSE: To process the SET,RESET and ADJUST command options
      488        9               DESCRIPTION: CXB$PROCOPT processes the various options which
      489       10                       may be specified on the SET,RESET and ADJUST commands
      490       11                       and stores the pertinent information into the assign-merge
      491       12                       record. On a RESET, the specified option(s) is SET
      492       13                       to its default. For a SET or ADJUST command, the specified
      493       14                       information is stored into the assign-merge record.
      494       15        */
      495       16        /*D*   NAME:   CXB$PROCOPT
      496       17               CALL:   CALL CXB$PROCOPT(BLK$,MCB,GETCMDCPSL_PARAM)
      497       18               INTERFACE: CXG$ERRMSG
      498       19               INPUT:  SEG3$ - contains the assign merge record
      499       20                       BLK$ - pointer to parse output
      500       21                       MCB - memory control block used for allocating VLP's in SEG3
      501       22                       GETCMD - The CXG$GETCMD parameter.
      502       23                       CPSL_PARAM - Command Processor Special Library Parameter.
      503       24               DESCRIPTION: Data segment #3 is expected to contain the assign
      504       25                       merge record for the dcb specified on the command. The
      505       26                       various options are processed and the assign merge record
      506       27                       SET accordingly.
      507       28        */
      508       29        /**********************************************************************/
      509       30        CXB$PROCOPT: PROC(BLK$,MCB,GETCMD,CPSL_PARAM) ;

     30  2 000000   000000 700200 xent  CXB$PROCOPT  TSX0  ! X66_AUTO_4
         2 000001   000276 000004                    ZERO    190,4

      510       31                   %INCLUDE CP_6;
      511      112                   %INCLUDE CX_MACROS_M;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:156  
      512      163                   %INCLUDE XU_MACRO_C;
      513     3269                   %INCLUDE XUM_MACRO_C;
      514     3296                   %INCLUDE CX_DATA_R;
      515     4230                   %INCLUDE B_MACROS_C;
      516     4341                   %INCLUDE XU_SUBS_C;
      517     4433                   %INCLUDE CX_SUBS_C;
      518     4446                   %INCLUDE CX_ISUBS_C;
      519     4798                   %INCLUDE CX_PERR_C;
      520     4869                   %INCLUDE CP_6_SUBS;
      521     5409                   %INCLUDE B_ERRORS_C;
      522     6536                   %INCLUDE B$JIT ;
      523     6826                   %INCLUDE CXG_ENTRY ;
      524     6838        %EQU SETSTA = 1 ;
      525     6839        %EQU VIRTUAL = 2 ;
      526     6840        %EQU FPRG = 3 ;
      527     6841        %EQU WINDOW = 4 ;
      528     6842    1   DCL ERR_FLD1$ PTR;                      /*Ptr to error msge text*/
      529     6843    1   DCL ERR_FLD2$ PTR;                      /*Ptr to error msge text*/
      530     6844    1   DCL TEMP$ PTR;                          /*Option pointer*/
      531     6845    1   DCL PTR$ PTR;                                    /*Temp. Pointer*/
      532     6846    1   DCL TEMP2$ PTR;                                  /*Temp. Pointer*/
      533     6847    1   DCL BLK$ PTR;                           /*Parse output block pointer*/
      534     6848    1   DCL DCB# UBIN WORD ;
      535     6849    1   DCL ASN UBIN WORD ;
      536     6850    1   DCL FID_ASN UBIN(9) ;
      537     6851    1   DCL FID_RES CHAR(4) ;
      538     6852        %XUG_GETCMD (NAME=GETCMD, STCLASS=PARAM) ;
      539     7190        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
      540     7208    1   DCL I SBIN;                             /*Temp loc for indexes*/
      541     7209    1   DCL J SBIN;                                      /*Temp value*/
      542     7210    1   DCL TVAL SBIN;                                   /*Temp. Location*/
      543     7211    1   DCL CXX$DECBIN ENTRY(2) ALTRET;                  /*Cnvrt dec value to bin*/
      544     7212    1   DCL CXX$SET ENTRY(4) ;                           /* Context checker. */
      545     7213    1   DCL CXX$RESET ENTRY(4) ;                         /* Context checker. */
      546     7214    1   DCL CXB$WINDOW_OPTS ENTRY(4) ;
      547     7215    1   DCL 1 VLP$ATTR BASED,                            /*Vlp length*/
      548     7216    1          2 SIZE# UBIN WORD,
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:157  
      549     7217    1          2 R REDEF SIZE#,
      550     7218    1            3 NAW# UBIN (18) UNAL,
      551     7219    1            3 SIZ# UBIN (18) UNAL ;
      552     7220    1   DCL X$DEALLOCATE ENTRY(1) ALTRET;
      553     7221    1   DCL X$ALLOCATE ENTRY(1) ALTRET;
      554     7222          /***** Fpts *****/
      555     7223        %FPT_OPEN(FPTN=AMR$REC$,STCLASS="BASED(CPSL_SEG3$)",PFMT="PTR");
      556     7332        %FPT_OPEN(FPTN=FPT$OPEN,STCLASS=BASED);
      557     7441        %PARSE$OUT(NAME=OUT$BLK);
      558     7486        %PARSE$SYM(NAME=P$S);
      559     7524        %VLP_SN(FPTN=AM$SN,N=50,STCLASS=BASED);
      560     7537        %VLP_HDR(FPTN=AM$HDR,LEN="AM$HDR.TITL.L#",STCLASS=BASED);
      561     7553        %VLP_HDR(FPTN=AM_HDR,LEN=114,STCLASS=AUTO);
      562     7569        %VLP_ALTKEYS(FPTN=AM$ALTKEYS,STCLASS=BASED);
      563     7584        %VLP_FORM(FPTN=AM$FORM,STCLASS=BASED);
      564     7597        %VLP_TAB(FPTN=AM$TAB,STCLASS=BASED);
      565     7611        %VLP_SETSTA(FPTN=AM$SETSTA,STCLASS=BASED);
      566     7639        %VLP_WINDOW(FPTN=VLP$WINDOW,STCLASS=BASED) ;
      567     7683        %VLP_FPRG(FPTN=VLP$FPRG,STCLASS=BASED) ;
      568     7704        %VLP_VIRTUAL(FPTN=VLP$VIRTUAL,STCLASS=BASED) ;
      569     7724        %XUM$MCB(NAME=MCB);
      570     7728        %F$DCB (DCBN=F$DCB) ;
      571     7785        %B$TCB (STCLASS="BASED(B$TCB$)");
      572     7788        %B$EXCFR;
      573     7806          %FPT_FID (FPTN=FPT_FID, STCLASS=AUTO) ;
      574     7829          %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
      575     7848          %VLP_NAME (FPTN=FID_NAME,STCLASS=AUTO,LEN=31);
      576     7875          %VLP_SN (FPTN=FID_SN,STCLASS=AUTO,N=50);
      577     7888          %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
      578     7901          %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
      579     7914          %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
      580     7927          /***** Error codes *****/
      581     7928        %VLP_ERRCODE (FPTN=E_AMFULL,FCG=CX,MID=B,ERR#=E$AMFULL,STCLASS=CONSTANT);
      582     7973       %VLP_ERRCODE (FPTN=E_BADSETSTAOPT,FCG=CX,MID=B,ERR#=E$BADSETSTAOPT,STCLASS=CONSTANT)
              7973            ;
      583     8018        %VLP_ERRCODE (FPTN=E_BADVIRTUALOPT,FCG=CX,MID=B,ERR#=E$BADVIRTUALOPT,STCLASS=
              8018            CONSTANT);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:158  
      584     8063       %VLP_ERRCODE (FPTN=E_BADACSVEHOPT,FCG=CX,MID=B,ERR#=E$BADACSVEHOPT,STCLASS=CONSTANT)
              8063            ;
      585     8108       %VLP_ERRCODE (FPTN=E_BADWINDOWOPT,FCG=CX,MID=B,ERR#=E$BADWINDOWOPT,STCLASS=CONSTANT)
              8108            ;
      586     8153        %VLP_ERRCODE (FPTN=E_BADALTKEYSOPT,FCG=CX,MID=B,ERR#=E$BADALTKEYSOPT,STCLASS=
              8153            CONSTANT);
      587     8198        %VLP_ERRCODE (FPTN=E_BADFPRGOPT,FCG=CX,MID=B,ERR#=E$BADFPRGOPT,STCLASS=CONSTANT);
      588     8243        %VLP_ERRCODE (FPTN=E_FPRG_FID_NONAME,FCG=CX,MID=B,ERR#=E$FPRG_FID_NONAME,STCLASS=
              8243            CONSTANT);
      589     8288       %VLP_ERRCODE (FPTN=E_FPRG_FID_DISKONLY,FCG=CX,MID=B,ERR#=E$FPRG_FID_DISKONLY,STCLASS
              8288            =CONSTANT);
      590     8333        /**/
      591     8334        /*E*    ERROR:   CXB-E$BADSETSTAOPT-C
      592     8335                MESSAGE:  SETSTA option illegal for this command.
      593     8336                MESSAGE1: ASN of the fid for this command is not COMGROUP or DEVICE
      594     8337                DESCRIPTION: A SETSTA option was specified on an ADJUST, RESET, or
      595     8338                             SET command with an ASN that is not COMGROUP or DEVICE.
      596     8339        */
      597     8340        /*E*    ERROR:   CXB-E$BADVIRTUALOPT-C
      598     8341                MESSAGE:  VIRTUAL option illegal for this command.
      599     8342                MESSAGE1: ASN of the fid for this command is not FILE.
      600     8343                DESCRIPTION: A VIRTUAL option was specified on an ADJUST, RESET, or
      601     8344                             SET command with an ASN that is not FILE.
      602     8345        */
      603     8346        /*E*    ERROR:   CXB-E$BADACSVEHOPT-C
      604     8347                MESSAGE:  ACSVEH option illegal for this command.
      605     8348                MESSAGE1: ASN of the fid for this command is not FILE.
      606     8349                DESCRIPTION: An ACSVEH option was specified on an ADJUST, RESET, or
      607     8350                             SET command with an ASN that is not FILE.
      608     8351        */
      609     8352        /*E*    ERROR:   CXB-E$BADWINDOWOPT-C
      610     8353                MESSAGE:  WINDOW option illegal for this command.
      611     8354                MESSAGE1: ASN of the fid for this command is not COMGROUP or DEVICE.
      612     8355                DESCRIPTION: A WINDOW option was specified on an ADJUST, RESET, or
      613     8356                             SET command with an ASN that is not COMGROUP or DEVICE.
      614     8357        */
      615     8358        /*E*    ERROR:   CXB-E$BADALTKEYSOPT-C
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:159  
      616     8359                MESSAGE:  ALTKEYS option illegal for this command.
      617     8360                MESSAGE1: ASN of the fid for this command is not FILE.
      618     8361                DESCRIPTION: An ALTKEYS option was specified on an ADJUST, RESET, or
      619     8362                             SET command with an ASN that is not FILE.
      620     8363        */
      621     8364        /*E*    ERROR:   CXB-E$BADFPRGOPT-C
      622     8365                MESSAGE:  FPRG option illegal for this command.
      623     8366                MESSAGE1: ASN of the fid for this command is not COMGROUP or DEVICE.
      624     8367                DESCRIPTION: An FPRG option was specified on an ADJUST, RESET, or
      625     8368                             SET command with an ASN that is not COMGROUP or DEVICE.
      626     8369        */
      627     8370        /*E*    ERROR:   CXB-E$FPRG_FID_NONAME-C
      628     8371                MESSAGE:  The FPRG fid option must specify a NAME.
      629     8372                DESCRIPTION: An FPRG fid option was specified without specifing a NAME.
      630     8373        */
      631     8374        /*E*    ERROR:   CXB-E$FPRG_FID_DISKONLY-C
      632     8375                MESSAGE:  The FPRG fid must be a disk file only.
      633     8376                DESCRIPTION: An FPRG fid specified a non-disk file.
      634     8377        */
      635     8378        %EJECT ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:160  
      636     8379    1     IF BLK$->OUT$BLK.CODE = ADJUSTCMND

   8379  2 000002   200003 470500                    LDP0    @BLK$,,AUTO
         2 000003   000000 471500                    LDP1    0,,PR0
         2 000004   100000 720100                    LXL0    0,,PR1
         2 000005   000001 100003                    CMPX0   1,DU
         2 000006   000023 601000 2                  TNZ     s:8387

      637     8380    1         THEN
      638     8381    2             DO ;

      639     8382    2               DCB# = CPSL_PARAM.ERR_DCB# ;

   8382  2 000007   200006 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 000010   300004 235100                    LDA     4,,PR3
         2 000011   200014 755100                    STA     DCB#,,AUTO

      640     8383    2               CPSL_PARAM.ERR_DCB# = 0 ;

   8383  2 000012   300004 450100                    STZ     4,,PR3

      641     8384    2               ASN = DCBADDR(DCB#) -> F$DCB.ASN# ;

   8384  2 000013   000000 471400 3                  LDP1    0
         2 000014   100000 474500                    LDP4    0,,PR1
         2 000015   400000 475505                    LDP5    0,AL,PR4
         2 000016   500032 236100                    LDQ     26,,PR5
         2 000017   000011 772000                    QRL     9
         2 000020   000777 376007                    ANQ     511,DL
         2 000021   200015 756100                    STQ     ASN,,AUTO

      642     8385    2             END ; /* Then Do */

   8385  2 000022   000027 710000 2                  TRA     s:8388

      643     8386    1         ELSE
      644     8387    1             ASN = AMR$REC$.V.ASN# ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:161  

   8387  2 000023   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000024   300023 236100                    LDQ     19,,PR3
         2 000025   000777 376007                    ANQ     511,DL
         2 000026   200015 756100                    STQ     ASN,,AUTO

      645     8388    1     I=0;

   8388  2 000027   200020 450100                    STZ     I,,AUTO

      646     8389        /*
      647     8390          ****     Process RESET command options
      648     8391        */
      649     8392    1     IF (BLK$->OUT$BLK.CODE = RESETCMND)

   8392  2 000030   000000 471500                    LDP1    0,,PR0
         2 000031   100000 720100                    LXL0    0,,PR1
         2 000032   000005 100003                    CMPX0   5,DU
         2 000033   002155 601000 2                  TNZ     CXB$PROC5

      650     8393    1        THEN
      651     8394    2   CXB$PROC2: DO WHILE (I<BLK$->OUT$BLK.NSUBLKS);

   8394  2 000034   100001 236100       CXB$PROC2    LDQ     1,,PR1
         2 000035   000022 772000                    QRL     18
         2 000036   200020 116100                    CMPQ    I,,AUTO
         2 000037   006003 604400 2                  TMOZ    s:9365

      652     8395    2              TEMP$=BLK$->OUT$BLK.SUBLK$(I);

   8395  2 000040   200003 470500                    LDP0    @BLK$,,AUTO
         2 000041   000000 471500                    LDP1    0,,PR0
         2 000042   200020 720100                    LXL0    I,,AUTO
         2 000043   100003 236110                    LDQ     3,X0,PR1
         2 000044   200011 756100                    STQ     TEMP$,,AUTO

      653     8396    3             DO CASE (TEMP$->OUT$BLK.CODE) ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:162  

   8396  2 000045   200011 471500                    LDP1    TEMP$,,AUTO
         2 000046   100000 236100                    LDQ     0,,PR1
         2 000047   777777 376007                    ANQ     -1,DL
         2 000050   000020 136007                    SBLQ    16,DL
         2 000051   000001 116007                    CMPQ    1,DL
         2 000052   000054 602006 2                  TNC     s:8396+7,QL
         2 000053   000067 710000 2                  TRA     s:8401
         2 000054   000055 710000 2                  TRA     s:8398

      654     8397    3               CASE (DCBOPT) ;

      655     8398    3                     CALL CXX$RESET(TEMP$->OUT$BLK, GETCMD,CPSL_PARAM) ;

   8398  2 000055   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 000056   200274 756100                    STQ     BUFSIZC+4,,AUTO
         2 000057   200005 236100                    LDQ     @GETCMD,,AUTO
         2 000060   200011 235100                    LDA     TEMP$,,AUTO
         2 000061   200272 757100                    STAQ    BUFSIZC+2,,AUTO
         2 000062   200272 630500                    EPPR0   BUFSIZC+2,,AUTO
         2 000063   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000064   000000 701000 xent               TSX1    CXX$RESET
         2 000065   000000 011000                    NOP     0
         2 000066   000073 710000 2                  TRA     s:8404

      656     8399
      657     8400    3               CASE (ELSE) ;

      658     8401    3                 CALL CHK_IF_ASN_OK(TEMP$) ALTRET(PROCOPTRET) ;

   8401  2 000067   200011 633500                    EPPR3   TEMP$,,AUTO
         2 000070   200257 453500                    STP3    FID_WSN+3,,AUTO
         2 000071   007104 701000 2                  TSX1    CHK_IF_ASN_OK
         2 000072   006020 702000 2                  TSX2    PROCOPTRET

      659     8402
      660     8403    3             END ; /* Do Case */
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:163  

      661     8404    2             IF CPSL_PARAM.FLAGS.VERIFY_ONLY

   8404  2 000073   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 000074   000001 234100                    SZN     1,,PR0
         2 000075   000106 605000 2                  TPL     CXB$PROC3

      662     8405    2               THEN
      663     8406    2                 IF CPSL_PARAM.ERRCODE ~= %NO#

   8406  2 000076   000002 235100                    LDA     2,,PR0
         2 000077   002145 600000 2                  TZE     s:8838

      664     8407    2                   THEN
      665     8408    2                     I = BLK$->OUT$BLK.NSUBLKS ;

   8408  2 000100   200003 471500                    LDP1    @BLK$,,AUTO
         2 000101   100000 473500                    LDP3    0,,PR1
         2 000102   300001 236100                    LDQ     1,,PR3
         2 000103   000022 772000                    QRL     18
         2 000104   200020 756100                    STQ     I,,AUTO
         2 000105   002145 710000 2                  TRA     s:8838

      666     8409    2                   ELSE ;
      667     8410    2               ELSE
      668     8411    3   CXB$PROC3: DO CASE(TEMP$->OUT$BLK.CODE);

   8411  2 000106   200011 471500       CXB$PROC3    LDP1    TEMP$,,AUTO
         2 000107   100000 720100                    LXL0    0,,PR1
         2 000110   000211 100003                    CMPX0   137,DU
         2 000111   000113 602010 2                  TNC     CXB$PROC3+5,X0
         2 000112   002145 710000 2                  TRA     s:8838
         2 000113   002145 710000 2                  TRA     s:8838
         2 000114   000464 710000 2                  TRA     s:8451
         2 000115   000733 710000 2                  TRA     s:8525
         2 000116   000751 710000 2                  TRA     s:8532
         2 000117   000761 710000 2                  TRA     s:8537
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:164  
         2 000120   001205 710000 2                  TRA     s:8610
         2 000121   001273 710000 2                  TRA     s:8636
         2 000122   001303 710000 2                  TRA     s:8641
         2 000123   001377 710000 2                  TRA     s:8673
         2 000124   001446 710000 2                  TRA     s:8695
         2 000125   001517 710000 2                  TRA     s:8715
         2 000126   001724 710000 2                  TRA     s:8774
         2 000127   002046 710000 2                  TRA     s:8805
         2 000130   002056 710000 2                  TRA     s:8810
         2 000131   002102 710000 2                  TRA     s:8819
         2 000132   002112 710000 2                  TRA     s:8824
         2 000133   002145 710000 2                  TRA     s:8838
         2 000134   002145 710000 2                  TRA     s:8838
         2 000135   002145 710000 2                  TRA     s:8838
         2 000136   002145 710000 2                  TRA     s:8838
         2 000137   002145 710000 2                  TRA     s:8838
         2 000140   000324 710000 2                  TRA     s:8413
         2 000141   000340 710000 2                  TRA     s:8417
         2 000142   000344 710000 2                  TRA     s:8419
         2 000143   000360 710000 2                  TRA     s:8423
         2 000144   000372 710000 2                  TRA     s:8428
         2 000145   000404 710000 2                  TRA     s:8433
         2 000146   000426 710000 2                  TRA     s:8439
         2 000147   000440 710000 2                  TRA     s:8444
         2 000150   000446 710000 2                  TRA     s:8446
         2 000151   000456 710000 2                  TRA     s:8449
         2 000152   000476 710000 2                  TRA     s:8456
         2 000153   002145 710000 2                  TRA     s:8838
         2 000154   000504 710000 2                  TRA     s:8458
         2 000155   000516 710000 2                  TRA     s:8462
         2 000156   000524 710000 2                  TRA     s:8464
         2 000157   000544 710000 2                  TRA     s:8471
         2 000160   000532 710000 2                  TRA     s:8466
         2 000161   000552 710000 2                  TRA     s:8473
         2 000162   000556 710000 2                  TRA     s:8475
         2 000163   000570 710000 2                  TRA     s:8480
         2 000164   000574 710000 2                  TRA     s:8482
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:165  
         2 000165   000600 710000 2                  TRA     s:8484
         2 000166   000612 710000 2                  TRA     s:8487
         2 000167   000624 710000 2                  TRA     s:8492
         2 000170   000636 710000 2                  TRA     s:8497
         2 000171   000646 710000 2                  TRA     s:8502
         2 000172   000652 710000 2                  TRA     s:8504
         2 000173   000660 710000 2                  TRA     s:8506
         2 000174   002145 710000 2                  TRA     s:8838
         2 000175   000664 710000 2                  TRA     s:8508
         2 000176   000700 710000 2                  TRA     s:8512
         2 000177   000723 710000 2                  TRA     s:8521
         2 000200   000727 710000 2                  TRA     s:8523
         2 000201   000743 710000 2                  TRA     s:8530
         2 000202   000773 710000 2                  TRA     s:8542
         2 000203   001005 710000 2                  TRA     s:8548
         2 000204   002145 710000 2                  TRA     s:8838
         2 000205   002145 710000 2                  TRA     s:8838
         2 000206   001021 710000 2                  TRA     s:8552
         2 000207   001027 710000 2                  TRA     s:8554
         2 000210   001041 710000 2                  TRA     s:8559
         2 000211   001053 710000 2                  TRA     s:8564
         2 000212   001064 710000 2                  TRA     s:8569
         2 000213   001074 710000 2                  TRA     s:8574
         2 000214   001106 710000 2                  TRA     s:8579
         2 000215   001116 710000 2                  TRA     s:8584
         2 000216   001124 710000 2                  TRA     s:8586
         2 000217   001134 710000 2                  TRA     s:8590
         2 000220   001142 710000 2                  TRA     s:8592
         2 000221   001153 710000 2                  TRA     s:8597
         2 000222   001157 710000 2                  TRA     s:8599
         2 000223   001165 710000 2                  TRA     s:8601
         2 000224   001171 710000 2                  TRA     s:8603
         2 000225   001175 710000 2                  TRA     s:8605
         2 000226   001217 710000 2                  TRA     s:8615
         2 000227   001223 710000 2                  TRA     s:8617
         2 000230   002145 710000 2                  TRA     s:8838
         2 000231   001231 710000 2                  TRA     s:8619
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:166  
         2 000232   001235 710000 2                  TRA     s:8621
         2 000233   001241 710000 2                  TRA     s:8623
         2 000234   001247 710000 2                  TRA     s:8625
         2 000235   001267 710000 2                  TRA     s:8634
         2 000236   001257 710000 2                  TRA     s:8629
         2 000237   001313 710000 2                  TRA     s:8646
         2 000240   001324 710000 2                  TRA     s:8651
         2 000241   001336 710000 2                  TRA     s:8656
         2 000242   001342 710000 2                  TRA     s:8658
         2 000243   001354 710000 2                  TRA     s:8663
         2 000244   001366 710000 2                  TRA     s:8668
         2 000245   001411 710000 2                  TRA     s:8678
         2 000246   001415 710000 2                  TRA     s:8680
         2 000247   001426 710000 2                  TRA     s:8685
         2 000250   001436 710000 2                  TRA     s:8690
         2 000251   001456 710000 2                  TRA     s:8700
         2 000252   001464 710000 2                  TRA     s:8702
         2 000253   001474 710000 2                  TRA     s:8706
         2 000254   001505 710000 2                  TRA     s:8711
         2 000255   000324 710000 2                  TRA     s:8413
         2 000256   001513 710000 2                  TRA     s:8713
         2 000257   001531 710000 2                  TRA     s:8720
         2 000260   001563 710000 2                  TRA     s:8735
         2 000261   001571 710000 2                  TRA     s:8737
         2 000262   001543 710000 2                  TRA     s:8725
         2 000263   001553 710000 2                  TRA     s:8730
         2 000264   001601 710000 2                  TRA     s:8740
         2 000265   001605 710000 2                  TRA     s:8742
         2 000266   001611 710000 2                  TRA     s:8745
         2 000267   001623 710000 2                  TRA     s:8749
         2 000270   001631 710000 2                  TRA     s:8751
         2 000271   001645 710000 2                  TRA     s:8755
         2 000272   001653 710000 2                  TRA     s:8757
         2 000273   001657 710000 2                  TRA     s:8759
         2 000274   001677 710000 2                  TRA     s:8765
         2 000275   001705 710000 2                  TRA     s:8767
         2 000276   001736 710000 2                  TRA     s:8779
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:167  
         2 000277   001742 710000 2                  TRA     s:8781
         2 000300   001750 710000 2                  TRA     s:8783
         2 000301   002145 710000 2                  TRA     s:8838
         2 000302   001760 710000 2                  TRA     s:8787
         2 000303   001766 710000 2                  TRA     s:8789
         2 000304   001774 710000 2                  TRA     s:8791
         2 000305   002002 710000 2                  TRA     s:8793
         2 000306   002010 710000 2                  TRA     s:8795
         2 000307   002016 710000 2                  TRA     s:8797
         2 000310   002024 710000 2                  TRA     s:8799
         2 000311   002032 710000 2                  TRA     s:8801
         2 000312   002040 710000 2                  TRA     s:8803
         2 000313   002070 710000 2                  TRA     s:8815
         2 000314   002076 710000 2                  TRA     s:8817
         2 000315   002122 710000 2                  TRA     s:8829
         2 000316   000324 710000 2                  TRA     s:8413
         2 000317   002145 710000 2                  TRA     s:8838
         2 000320   002134 710000 2                  TRA     s:8834
         2 000321   002142 710000 2                  TRA     s:8836
         2 000322   000420 710000 2                  TRA     s:8437
         2 000323   000512 710000 2                  TRA     s:8460

      669     8412    3               CASE(ACCESSOPT,READOPT,WRITEOPT);

      670     8413    3                 MCB.ADDRESS$=AMR$REC$.ACCESS_;

   8413  2 000324   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000325   300005 236100                    LDQ     5,,PR3
         2 000326   200004 474500                    LDP4    @MCB,,AUTO
         2 000327   400000 756100                    STQ     0,,PR4

      671     8414    3                 CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Release vlp area*/

   8414  2 000330   200004 630500                    EPPR0   @MCB,,AUTO
         2 000331   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000332   000000 701000 xent               TSX1    X$DEALLOCATE
         2 000333   006004 702000 2                  TSX2    CXB$PROC45
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:168  

      672     8415    3                 AMR$REC$.ACCESS_=ADDR(NIL);

   8415  2 000334   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000335   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 000336   000005 756100                    STQ     5,,PR0
         2 000337   002145 710000 2                  TRA     s:8838

      673     8416    3               CASE(ACSOPT);

      674     8417    3                 AMR$REC$.V.ACS#=CPSL_CFPT_OPEN.V.ACS#;

   8417  2 000340   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000341   000046 236000 xsym               LDQ     CPSL_CFPT_OPEN+38
         2 000342   300024 552104                    STBQ    20,'04'O,PR3
         2 000343   002145 710000 2                  TRA     s:8838

      675     8418    3               CASE(ACSVEHOPT);

      676     8419    3                 MCB.ADDRESS$=AMR$REC$.ACSVEH_;

   8419  2 000344   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000345   300006 236100                    LDQ     6,,PR3
         2 000346   200004 474500                    LDP4    @MCB,,AUTO
         2 000347   400000 756100                    STQ     0,,PR4

      677     8420    3                 CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Release vlp area*/

   8420  2 000350   200004 630500                    EPPR0   @MCB,,AUTO
         2 000351   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000352   000000 701000 xent               TSX1    X$DEALLOCATE
         2 000353   006004 702000 2                  TSX2    CXB$PROC45

      678     8421    3                 AMR$REC$.ACSVEH_=ADDR(NIL);

   8421  2 000354   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000355   000000 470400 xsym               LDP0    CPSL_SEG3$
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:169  
         2 000356   000006 756100                    STQ     6,,PR0
         2 000357   002145 710000 2                  TRA     s:8838

      679     8422    3               CASE(ALLDCBSOPT);

      680     8423    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8423  2 000360   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000361   300002 236100                    LDQ     2,,PR3
         2 000362   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000363   002145 600000 2                  TZE     s:8838

      681     8424    3                    THEN
      682     8425    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.ALLDCBS#=CPSL_CVLP_SETSTA.

   8425  2 000364   300002 474500                    LDP4    2,,PR3
         2 000365   000013 236000 xsym               LDQ     CPSL_CVLP_SETSTA+11
         2 000366   400013 676100                    ERQ     11,,PR4
         2 000367   010000 376003                    ANQ     4096,DU
         2 000370   400013 656100                    ERSQ    11,,PR4
         2 000371   002145 710000 2                  TRA     s:8838

      683     8426    3                            OSTA.ALLDCBS#;
      684     8427    3               CASE(ALLTRMSOPT);

      685     8428    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8428  2 000372   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000373   300002 236100                    LDQ     2,,PR3
         2 000374   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000375   002145 600000 2                  TZE     s:8838

      686     8429    3                    THEN
      687     8430    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.ALLTRMS#=CPSL_CVLP_SETSTA.

   8430  2 000376   300002 474500                    LDP4    2,,PR3
         2 000377   000013 236000 xsym               LDQ     CPSL_CVLP_SETSTA+11
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:170  
         2 000400   400013 676100                    ERQ     11,,PR4
         2 000401   020000 376003                    ANQ     8192,DU
         2 000402   400013 656100                    ERSQ    11,,PR4
         2 000403   002145 710000 2                  TRA     s:8838

      688     8431    3                            OSTA.ALLTRMS#;
      689     8432    3               CASE(ALTKEYSOPT);

      690     8433    3                 MCB.ADDRESS$=AMR$REC$.ALTKEYS_;

   8433  2 000404   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000405   300021 236100                    LDQ     17,,PR3
         2 000406   200004 474500                    LDP4    @MCB,,AUTO
         2 000407   400000 756100                    STQ     0,,PR4

      691     8434    3                 CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Release vlp area*/

   8434  2 000410   200004 630500                    EPPR0   @MCB,,AUTO
         2 000411   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000412   000000 701000 xent               TSX1    X$DEALLOCATE
         2 000413   006004 702000 2                  TSX2    CXB$PROC45

      692     8435    3                 AMR$REC$.ALTKEYS_=ADDR(NIL);

   8435  2 000414   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000415   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 000416   000021 756100                    STQ     17,,PR0
         2 000417   002145 710000 2                  TRA     s:8838

      693     8436    3               CASE(ANSISPANSEQOPT);

      694     8437    3                 AMR$REC$.V.ANSISPANSEQ#=CPSL_CFPT_OPEN.V.ANSISPANSEQ#;

   8437  2 000420   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000421   000060 236000 xsym               LDQ     CPSL_CFPT_OPEN+48
         2 000422   300036 676100                    ERQ     30,,PR3
         2 000423   006000 376007                    ANQ     3072,DL
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:171  
         2 000424   300036 656100                    ERSQ    30,,PR3
         2 000425   002145 710000 2                  TRA     s:8838

      695     8438    3               CASE(ANYDCBOPT);

      696     8439    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8439  2 000426   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000427   300002 236100                    LDQ     2,,PR3
         2 000430   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000431   002145 600000 2                  TZE     s:8838

      697     8440    3                    THEN
      698     8441    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.ANYDCB#=CPSL_CVLP_SETSTA.

   8441  2 000432   300002 474500                    LDP4    2,,PR3
         2 000433   000013 236000 xsym               LDQ     CPSL_CVLP_SETSTA+11
         2 000434   400013 676100                    ERQ     11,,PR4
         2 000435   002000 376003                    ANQ     1024,DU
         2 000436   400013 656100                    ERSQ    11,,PR4
         2 000437   002145 710000 2                  TRA     s:8838

      699     8442    3                            OSTA.ANYDCB#;
      700     8443    3               CASE(AUOPT);

      701     8444    3                 AMR$REC$.V.AU#=CPSL_CFPT_OPEN.V.AU#;

   8444  2 000440   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000441   000063 236000 xsym               LDQ     CPSL_CFPT_OPEN+51
         2 000442   300041 676100                    ERQ     33,,PR3
         2 000443   000140 376003                    ANQ     96,DU
         2 000444   300041 656100                    ERSQ    33,,PR3
         2 000445   002145 710000 2                  TRA     s:8838

      702     8445    3               CASE(BLKLOPT);

      703     8446    3                 AMR$REC$.V.BLKL#=CPSL_CFPT_OPEN.V.BLKL#;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:172  

   8446  2 000446   000052 221000 xsym               LDX1    CPSL_CFPT_OPEN+42
         2 000447   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000450   300030 741100                    STX1    24,,PR3

      704     8447    3                 AMR$REC$.V.BLOCKED#=CPSL_CFPT_OPEN.V.BLOCKED#;

   8447  2 000451   000047 236000 xsym               LDQ     CPSL_CFPT_OPEN+39
         2 000452   300025 676100                    ERQ     21,,PR3
         2 000453   140000 376007                    ANQ     49152,DL
         2 000454   300025 656100                    ERSQ    21,,PR3
         2 000455   002145 710000 2                  TRA     s:8838

      705     8448    3               CASE(BLOCKEDOPT);

      706     8449    3                 AMR$REC$.V.BLOCKED#=CPSL_CFPT_OPEN.V.BLOCKED#;

   8449  2 000456   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000457   000047 236000 xsym               LDQ     CPSL_CFPT_OPEN+39
         2 000460   300025 676100                    ERQ     21,,PR3
         2 000461   140000 376007                    ANQ     49152,DL
         2 000462   300025 656100                    ERSQ    21,,PR3
         2 000463   002145 710000 2                  TRA     s:8838

      707     8450    3               CASE(BTMBRDROPT) ;

      708     8451    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8451  2 000464   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000465   300006 236100                    LDQ     6,,PR3
         2 000466   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000467   002145 600000 2                  TZE     s:8838

      709     8452    3                   THEN
      710     8453    3                     AMR$REC$.WINDOW_->VLP$WINDOW.BTMBRDR# = CPSL_CVLP_WINDOW.

   8453  2 000470   300006 474500                    LDP4    6,,PR3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:173  
         2 000471   000003 236000 xsym               LDQ     CPSL_CVLP_WINDOW+3
         2 000472   400003 676100                    ERQ     3,,PR4
         2 000473   060000 376003                    ANQ     24576,DU
         2 000474   400003 656100                    ERSQ    3,,PR4
         2 000475   002145 710000 2                  TRA     s:8838

      711     8454    3                           BTMBRDR# ;
      712     8455    3               CASE(BUPMOPT);

      713     8456    3                 AMR$REC$.V.BUPM#=CPSL_CFPT_OPEN.V.BUPM#;

   8456  2 000476   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000477   000047 236000 xsym               LDQ     CPSL_CFPT_OPEN+39
         2 000500   300025 676100                    ERQ     21,,PR3
         2 000501   006000 376007                    ANQ     3072,DL
         2 000502   300025 656100                    ERSQ    21,,PR3
         2 000503   002145 710000 2                  TRA     s:8838

      714     8457    3               CASE(COMPOPT);

      715     8458    3                 AMR$REC$.V.COMP#=CPSL_CFPT_OPEN.V.COMP#;

   8458  2 000504   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000505   000047 236000 xsym               LDQ     CPSL_CFPT_OPEN+39
         2 000506   300025 676100                    ERQ     21,,PR3
         2 000507   600000 376007                    ANQ     -65536,DL
         2 000510   300025 656100                    ERSQ    21,,PR3
         2 000511   002145 710000 2                  TRA     s:8838

      716     8459    3               CASE(COPIESOPT);

      717     8460    3                 AMR$REC$.V.COPIES#=CPSL_CFPT_OPEN.V.COPIES#;

   8460  2 000512   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000513   000066 236000 xsym               LDQ     CPSL_CFPT_OPEN+54
         2 000514   300044 552110                    STBQ    36,'10'O,PR3
         2 000515   002145 710000 2                  TRA     s:8838
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:174  

      718     8461    3               CASE(CTGOPT);

      719     8462    3                 AMR$REC$.V.CTG#=CPSL_CFPT_OPEN.V.CTG#;

   8462  2 000516   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000517   000044 236000 xsym               LDQ     CPSL_CFPT_OPEN+36
         2 000520   300022 676100                    ERQ     18,,PR3
         2 000521   000140 376007                    ANQ     96,DL
         2 000522   300022 656100                    ERSQ    18,,PR3
         2 000523   002145 710000 2                  TRA     s:8838

      720     8463    3               CASE(CVOLOPT);

      721     8464    3                 AMR$REC$.V.CVOL#=CPSL_CFPT_OPEN.V.CVOL#;

   8464  2 000524   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000525   000044 236000 xsym               LDQ     CPSL_CFPT_OPEN+36
         2 000526   300022 676100                    ERQ     18,,PR3
         2 000527   000006 376007                    ANQ     6,DL
         2 000530   300022 656100                    ERSQ    18,,PR3
         2 000531   002145 710000 2                  TRA     s:8838

      722     8465    3               CASE(DEBUGOPT) ;

      723     8466    3                 IF AMR$REC$.FPRG_~=ADDR(NIL)

   8466  2 000532   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000533   300021 236100                    LDQ     17,,PR3
         2 000534   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000535   002145 600000 2                  TZE     s:8838

      724     8467    3                   THEN
      725     8468    3                     AMR$REC$.FPRG_->VLP$FPRG.FLGS.DEBUG# = CPSL_CVLP_FPRG.

   8468  2 000536   300021 474500                    LDP4    17,,PR3
         2 000537   000000 236000 xsym               LDQ     CPSL_CVLP_FPRG
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:175  
         2 000540   400000 676100                    ERQ     0,,PR4
         2 000541   000400 376003                    ANQ     256,DU
         2 000542   400000 656100                    ERSQ    0,,PR4
         2 000543   002145 710000 2                  TRA     s:8838

      726     8469    3                           FLGS.DEBUG# ;
      727     8470    3               CASE(DCBCONLGLOPT);

      728     8471    3                 AMR$REC$.V.DCBCONLGL#=CPSL_CFPT_OPEN.V.DCBCONLGL#;

   8471  2 000544   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000545   000060 236000 xsym               LDQ     CPSL_CFPT_OPEN+48
         2 000546   300036 676100                    ERQ     30,,PR3
         2 000547   400000 376007                    ANQ     -131072,DL
         2 000550   300036 656100                    ERSQ    30,,PR3
         2 000551   002145 710000 2                  TRA     s:8838

      729     8472    3               CASE(DENSITYOPT);

      730     8473    3                 AMR$REC$.V.DENSITY#=CPSL_CFPT_OPEN.V.DENSITY#;

   8473  2 000552   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000553   000066 236000 xsym               LDQ     CPSL_CFPT_OPEN+54
         2 000554   300044 552104                    STBQ    36,'04'O,PR3
         2 000555   002145 710000 2                  TRA     s:8838

      731     8474    3               CASE(DIRONLYOPT);

      732     8475    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8475  2 000556   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000557   300002 236100                    LDQ     2,,PR3
         2 000560   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000561   002145 600000 2                  TZE     s:8838

      733     8476    3                    THEN
      734     8477    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.DIRONLY#=CPSL_CVLP_SETSTA.
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:176  

   8477  2 000562   300002 474500                    LDP4    2,,PR3
         2 000563   000006 236000 xsym               LDQ     CPSL_CVLP_SETSTA+6
         2 000564   400006 676100                    ERQ     6,,PR4
         2 000565   004000 376003                    ANQ     2048,DU
         2 000566   400006 656100                    ERSQ    6,,PR4
         2 000567   002145 710000 2                  TRA     s:8838

      735     8478    3                            ISTA.DIRONLY#;
      736     8479    3               CASE(DISPOPT);

      737     8480    3                 AMR$REC$.V.DISP#=CPSL_CFPT_OPEN.V.DISP#;

   8480  2 000570   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000571   000051 236000 xsym               LDQ     CPSL_CFPT_OPEN+41
         2 000572   300027 552104                    STBQ    23,'04'O,PR3
         2 000573   002145 710000 2                  TRA     s:8838

      738     8481    3               CASE(DVFCOPT);

      739     8482    3                 AMR$REC$.V.DVFC#=CPSL_CFPT_OPEN.V.DVFC#;

   8482  2 000574   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000575   000062 236000 xsym               LDQ     CPSL_CFPT_OPEN+50
         2 000576   300040 552110                    STBQ    32,'10'O,PR3
         2 000577   002145 710000 2                  TRA     s:8838

      740     8483    3               CASE(EBCDICOPT);

      741     8484    3                 AMR$REC$.V.EBCDIC#=CPSL_CFPT_OPEN.V.EBCDIC#;

   8484  2 000600   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000601   000060 236000 xsym               LDQ     CPSL_CFPT_OPEN+48
         2 000602   300036 676100                    ERQ     30,,PR3
         2 000603   600000 376003                    ANQ     -65536,DU
         2 000604   300036 656100                    ERSQ    30,,PR3

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:177  
      742     8485    3                 AMR$REC$.V.CNVRT#=CPSL_CFPT_OPEN.V.CNVRT#;

   8485  2 000605   000060 236000 xsym               LDQ     CPSL_CFPT_OPEN+48
         2 000606   300036 676100                    ERQ     30,,PR3
         2 000607   140000 376003                    ANQ     49152,DU
         2 000610   300036 656100                    ERSQ    30,,PR3
         2 000611   002145 710000 2                  TRA     s:8838

      743     8486    3               CASE(EOFNONEOPT);

      744     8487    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8487  2 000612   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000613   300002 236100                    LDQ     2,,PR3
         2 000614   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000615   002145 600000 2                  TZE     s:8838

      745     8488    3                    THEN
      746     8489    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.EOFNONE#=CPSL_CVLP_SETSTA.

   8489  2 000616   300002 474500                    LDP4    2,,PR3
         2 000617   000006 236000 xsym               LDQ     CPSL_CVLP_SETSTA+6
         2 000620   400006 676100                    ERQ     6,,PR4
         2 000621   040000 376003                    ANQ     16384,DU
         2 000622   400006 656100                    ERSQ    6,,PR4
         2 000623   002145 710000 2                  TRA     s:8838

      747     8490    3                            ISTA.EOFNONE#;
      748     8491    3               CASE(EOFONEOPT);

      749     8492    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8492  2 000624   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000625   300002 236100                    LDQ     2,,PR3
         2 000626   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000627   002145 600000 2                  TZE     s:8838

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:178  
      750     8493    3                    THEN
      751     8494    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.EOFONE#=CPSL_CVLP_SETSTA.

   8494  2 000630   300002 474500                    LDP4    2,,PR3
         2 000631   000006 236000 xsym               LDQ     CPSL_CVLP_SETSTA+6
         2 000632   400006 676100                    ERQ     6,,PR4
         2 000633   100000 376003                    ANQ     32768,DU
         2 000634   400006 656100                    ERSQ    6,,PR4
         2 000635   002145 710000 2                  TRA     s:8838

      752     8495    3                            ISTA.EOFONE#;
      753     8496    3               CASE(EOFTIMEOPT);

      754     8497    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8497  2 000636   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000637   300002 236100                    LDQ     2,,PR3
         2 000640   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000641   002145 600000 2                  TZE     s:8838

      755     8498    3                    THEN
      756     8499    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.EOFTIME#=CPSL_CVLP_SETSTA.

   8499  2 000642   300002 474500                    LDP4    2,,PR3
         2 000643   000006 721000 xsym               LXL1    CPSL_CVLP_SETSTA+6
         2 000644   400006 441100                    SXL1    6,,PR4
         2 000645   002145 710000 2                  TRA     s:8838

      757     8500    3                            ISTA.EOFTIME#;
      758     8501    3               CASE(EVENTOPT);

      759     8502    3                 AMR$REC$.V.EVENT#=CPSL_CFPT_OPEN.V.EVENT#;

   8502  2 000646   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000647   000065 235000 xsym               LDA     CPSL_CFPT_OPEN+53
         2 000650   300043 755100                    STA     35,,PR3
         2 000651   002145 710000 2                  TRA     s:8838
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:179  

      760     8503    3               CASE(EXISTOPT);

      761     8504    3                 AMR$REC$.V.EXIST#=CPSL_CFPT_OPEN.V.EXIST#;

   8504  2 000652   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000653   000044 236000 xsym               LDQ     CPSL_CFPT_OPEN+36
         2 000654   300022 676100                    ERQ     18,,PR3
         2 000655   000600 376007                    ANQ     384,DL
         2 000656   300022 656100                    ERSQ    18,,PR3
         2 000657   002145 710000 2                  TRA     s:8838

      762     8505    3               CASE(EXPIREOPT);

      763     8506    3                 AMR$REC$.V.EXPIRE#=CPSL_CFPT_OPEN.V.EXPIRE#;

   8506  2 000660   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000661   000057 235000 xsym               LDA     CPSL_CFPT_OPEN+47
         2 000662   300035 755100                    STA     29,,PR3
         2 000663   002145 710000 2                  TRA     s:8838

      764     8507    3               CASE(FORMOPT);

      765     8508    3                 MCB.ADDRESS$=AMR$REC$.FORM_;

   8508  2 000664   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000665   300020 236100                    LDQ     16,,PR3
         2 000666   200004 474500                    LDP4    @MCB,,AUTO
         2 000667   400000 756100                    STQ     0,,PR4

      766     8509    3                 CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Release vlp area*/

   8509  2 000670   200004 630500                    EPPR0   @MCB,,AUTO
         2 000671   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000672   000000 701000 xent               TSX1    X$DEALLOCATE
         2 000673   006004 702000 2                  TSX2    CXB$PROC45

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:180  
      767     8510    3                 AMR$REC$.FORM_=ADDR(NIL);

   8510  2 000674   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000675   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 000676   000020 756100                    STQ     16,,PR0
         2 000677   002145 710000 2                  TRA     s:8838

      768     8511    3               CASE(FPRG_FIDOPT) ;

      769     8512    3                 IF AMR$REC$.FPRG_~=ADDR(NIL)

   8512  2 000700   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000701   300021 236100                    LDQ     17,,PR3
         2 000702   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000703   002145 600000 2                  TZE     s:8838

      770     8513    3                   THEN
      771     8514    4                     DO ;

      772     8515    4                       AMR$REC$.FPRG_->VLP$FPRG.NAME = CPSL_CVLP_FPRG.NAME ;

   8515  2 000704   300021 474500                    LDP4    17,,PR3
         2 000705   000100 100400                    MLR     fill='000'O
         2 000706   000002 000040 xsym               ADSC9   CPSL_CVLP_FPRG+2         cn=0,n=32
         2 000707   400002 000040                    ADSC9   2,,PR4                   cn=0,n=32

      773     8516    4                       AMR$REC$.FPRG_->VLP$FPRG.ACCT# = CPSL_CVLP_FPRG.ACCT# ;

   8516  2 000710   300021 471500                    LDP1    17,,PR3
         2 000711   000012 237000 xsym               LDAQ    CPSL_CVLP_FPRG+10
         2 000712   100012 757100                    STAQ    10,,PR1

      774     8517    4                       AMR$REC$.FPRG_->VLP$FPRG.PASS# = CPSL_CVLP_FPRG.PASS# ;

   8517  2 000713   300021 471500                    LDP1    17,,PR3
         2 000714   000014 237000 xsym               LDAQ    CPSL_CVLP_FPRG+12
         2 000715   100014 757100                    STAQ    12,,PR1
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:181  

      775     8518    4                       AMR$REC$.FPRG_->VLP$FPRG.PSN# = CPSL_CVLP_FPRG.PSN# ;

   8518  2 000716   300021 471500                    LDP1    17,,PR3
         2 000717   040100 100400                    MLR     fill='040'O
         2 000720   000000 400006 xsym               ADSC9   CPSL_CVLP_FPRG           cn=2,n=6
         2 000721   100000 400006                    ADSC9   0,,PR1                   cn=2,n=6

      776     8519    4                     END ; /* Then Do */

   8519  2 000722   002145 710000 2                  TRA     s:8838

      777     8520    3               CASE(FSNOPT);

      778     8521    3                 AMR$REC$.V.FSN#=CPSL_CFPT_OPEN.V.FSN#;

   8521  2 000723   000066 221000 xsym               LDX1    CPSL_CFPT_OPEN+54
         2 000724   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000725   300044 741100                    STX1    36,,PR3
         2 000726   002145 710000 2                  TRA     s:8838

      779     8522    3               CASE(FUNOPT);

      780     8523    3                 AMR$REC$.V.FUN#=CPSL_CFPT_OPEN.V.FUN#;

   8523  2 000727   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000730   000045 236000 xsym               LDQ     CPSL_CFPT_OPEN+37
         2 000731   300023 552110                    STBQ    19,'10'O,PR3
         2 000732   002145 710000 2                  TRA     s:8838

      781     8524    3               CASE(FWINDOWOPT) ;

      782     8525    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8525  2 000733   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000734   300006 236100                    LDQ     6,,PR3
         2 000735   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:182  
         2 000736   002145 600000 2                  TZE     s:8838

      783     8526    3                   THEN
      784     8527    3                     AMR$REC$.WINDOW_->VLP$WINDOW.FWINDOW# = CPSL_CVLP_WINDOW.

   8527  2 000737   300006 474500                    LDP4    6,,PR3
         2 000740   000000 236000 xsym               LDQ     CPSL_CVLP_WINDOW
         2 000741   400000 756100                    STQ     0,,PR4
         2 000742   002145 710000 2                  TRA     s:8838

      785     8528    3                           FWINDOW# ;
      786     8529    3               CASE(GHSTACSOPT);

      787     8530    3                 AMR$REC$.V.GHSTACS#=CPSL_CFPT_OPEN.V.GHSTACS#;

   8530  2 000743   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000744   000047 236000 xsym               LDQ     CPSL_CFPT_OPEN+39
         2 000745   300025 676100                    ERQ     21,,PR3
         2 000746   000017 376007                    ANQ     15,DL
         2 000747   300025 656100                    ERSQ    21,,PR3
         2 000750   002145 710000 2                  TRA     s:8838

      788     8531    3               CASE(HBRDRCHROPT) ;

      789     8532    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8532  2 000751   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000752   300006 236100                    LDQ     6,,PR3
         2 000753   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000754   002145 600000 2                  TZE     s:8838

      790     8533    3                   THEN
      791     8534    3                     AMR$REC$.WINDOW_->VLP$WINDOW.HBRDRCHR# = CPSL_CVLP_WINDOW.

   8534  2 000755   300006 474500                    LDP4    6,,PR3
         2 000756   000003 236000 xsym               LDQ     CPSL_CVLP_WINDOW+3
         2 000757   400003 552120                    STBQ    3,'20'O,PR4
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:183  
         2 000760   002145 710000 2                  TRA     s:8838

      792     8535    3                           HBRDRCHR# ;
      793     8536    3               CASE(HBRDRSIZOPT) ;

      794     8537    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8537  2 000761   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000762   300006 236100                    LDQ     6,,PR3
         2 000763   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000764   002145 600000 2                  TZE     s:8838

      795     8538    3                   THEN
      796     8539    3                     AMR$REC$.WINDOW_->VLP$WINDOW.HBRDRSIZ# = CPSL_CVLP_WINDOW.

   8539  2 000765   300006 474500                    LDP4    6,,PR3
         2 000766   000003 236000 xsym               LDQ     CPSL_CVLP_WINDOW+3
         2 000767   400003 676100                    ERQ     3,,PR4
         2 000770   017000 376003                    ANQ     7680,DU
         2 000771   400003 656100                    ERSQ    3,,PR4
         2 000772   002145 710000 2                  TRA     s:8838

      797     8540    3                           HBRDRSIZ# ;
      798     8541    3               CASE(HDRHOPT);

      799     8542    3                 IF AMR$REC$.HDR_~=ADDR(NIL)

   8542  2 000773   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 000774   300017 236100                    LDQ     15,,PR3
         2 000775   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000776   002145 600000 2                  TZE     s:8838

      800     8543    3                    THEN
      801     8544    3                       AMR$REC$.HDR_->AM$HDR.CTL.HEADERHEIGHT#=CPSL_CVLP_HDR.CTL.

   8544  2 000777   300017 474500                    LDP4    15,,PR3
         2 001000   000000 236000 xsym               LDQ     CPSL_CVLP_HDR
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:184  
         2 001001   400000 676100                    ERQ     0,,PR4
         2 001002   000017 376003                    ANQ     15,DU
         2 001003   400000 656100                    ERSQ    0,,PR4
         2 001004   002145 710000 2                  TRA     s:8838

      802     8545    3                            HEADERHEIGHT#;
      803     8546    3               CASE(HEADEROPT);

      804     8547        /* ****          Reset all header related data   */
      805     8548    3                 MCB.ADDRESS$=AMR$REC$.HDR_;

   8548  2 001005   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001006   300017 236100                    LDQ     15,,PR3
         2 001007   200004 474500                    LDP4    @MCB,,AUTO
         2 001010   400000 756100                    STQ     0,,PR4

      806     8549    3                 CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Rel. Vlp area*/

   8549  2 001011   200004 630500                    EPPR0   @MCB,,AUTO
         2 001012   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001013   000000 701000 xent               TSX1    X$DEALLOCATE
         2 001014   006004 702000 2                  TSX2    CXB$PROC45

      807     8550    3                 AMR$REC$.HDR_=ADDR(NIL);

   8550  2 001015   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001016   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 001017   000017 756100                    STQ     15,,PR0
         2 001020   002145 710000 2                  TRA     s:8838

      808     8551    3               CASE(IGNOREFSNOPT);

      809     8552    3                 AMR$REC$.V.IGNOREFSN#=CPSL_CFPT_OPEN.V.IGNOREFSN#;

   8552  2 001021   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001022   000060 236000 xsym               LDQ     CPSL_CFPT_OPEN+48
         2 001023   300036 676100                    ERQ     30,,PR3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:185  
         2 001024   060000 376007                    ANQ     24576,DL
         2 001025   300036 656100                    ERSQ    30,,PR3
         2 001026   002145 710000 2                  TRA     s:8838

      810     8553    3               CASE(ILATCHOPT);

      811     8554    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8554  2 001027   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001030   300002 236100                    LDQ     2,,PR3
         2 001031   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001032   002145 600000 2                  TZE     s:8838

      812     8555    3                    THEN
      813     8556    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.ILATCH#=CPSL_CVLP_SETSTA.

   8556  2 001033   300002 474500                    LDP4    2,,PR3
         2 001034   000006 236000 xsym               LDQ     CPSL_CVLP_SETSTA+6
         2 001035   400006 676100                    ERQ     6,,PR4
         2 001036   200000 376003                    ANQ     65536,DU
         2 001037   400006 656100                    ERSQ    6,,PR4
         2 001040   002145 710000 2                  TRA     s:8838

      814     8557    3                            ISTA.ILATCH#;
      815     8558    3               CASE(ILOCKOPT);

      816     8559    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8559  2 001041   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001042   300002 236100                    LDQ     2,,PR3
         2 001043   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001044   002145 600000 2                  TZE     s:8838

      817     8560    3                    THEN
      818     8561    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.ILOCK#=CPSL_CVLP_SETSTA.

   8561  2 001045   300002 474500                    LDP4    2,,PR3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:186  
         2 001046   000006 236000 xsym               LDQ     CPSL_CVLP_SETSTA+6
         2 001047   400006 676100                    ERQ     6,,PR4
         2 001050   400000 376003                    ANQ     -131072,DU
         2 001051   400006 656100                    ERSQ    6,,PR4
         2 001052   002145 710000 2                  TRA     s:8838

      819     8562    3                            ISTA.ILOCK#;
      820     8563    3               CASE(IMSGTYPOPT);

      821     8564    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8564  2 001053   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001054   300002 236100                    LDQ     2,,PR3
         2 001055   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001056   002145 600000 2                  TZE     s:8838

      822     8565    3                    THEN
      823     8566    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.IMSGTYP#=CPSL_CVLP_SETSTA.

   8566  2 001057   300002 474500                    LDP4    2,,PR3
         2 001060   040100 100400                    MLR     fill='040'O
         2 001061   000004 000010 xsym               ADSC9   CPSL_CVLP_SETSTA+4       cn=0,n=8
         2 001062   400004 000010                    ADSC9   4,,PR4                   cn=0,n=8
         2 001063   002145 710000 2                  TRA     s:8838

      824     8567    3                            ISTA.IMSGTYP#;
      825     8568    3               CASE(INDENTOPT);

      826     8569    3                 IF AMR$REC$.HDR_~=ADDR(NIL)

   8569  2 001064   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001065   300017 236100                    LDQ     15,,PR3
         2 001066   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001067   002145 600000 2                  TZE     s:8838

      827     8570    3                    THEN
      828     8571    3                       AMR$REC$.HDR_->AM$HDR.CTL.INDENT#=CPSL_CVLP_HDR.CTL.
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:187  

   8571  2 001070   300017 474500                    LDP4    15,,PR3
         2 001071   000000 236000 xsym               LDQ     CPSL_CVLP_HDR
         2 001072   400000 552110                    STBQ    0,'10'O,PR4
         2 001073   002145 710000 2                  TRA     s:8838

      829     8572    3                            INDENT#;
      830     8573    3               CASE(INITIALIZEOPT) ;

      831     8574    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)

   8574  2 001074   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001075   300002 236100                    LDQ     2,,PR3
         2 001076   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001077   002145 600000 2                  TZE     s:8838

      832     8575    3                   THEN
      833     8576    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.INITIALIZE# = CPSL_CVLP_VIRTUAL.

   8576  2 001100   300002 474500                    LDP4    2,,PR3
         2 001101   000000 236000 xsym               LDQ     CPSL_CVLP_VIRTUAL
         2 001102   400000 676100                    ERQ     0,,PR4
         2 001103   400000 376003                    ANQ     -131072,DU
         2 001104   400000 656100                    ERSQ    0,,PR4
         2 001105   002145 710000 2                  TRA     s:8838

      834     8577    3                           INITIALIZE# ;
      835     8578    3               CASE(INITVALUEOPT) ;

      836     8579    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)

   8579  2 001106   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001107   300002 236100                    LDQ     2,,PR3
         2 001110   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001111   002145 600000 2                  TZE     s:8838

      837     8580    3                   THEN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:188  
      838     8581    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.INITVALUE# = CPSL_CVLP_VIRTUAL.

   8581  2 001112   300002 474500                    LDP4    2,,PR3
         2 001113   000001 235000 xsym               LDA     CPSL_CVLP_VIRTUAL+1
         2 001114   400001 755100                    STA     1,,PR4
         2 001115   002145 710000 2                  TRA     s:8838

      839     8582    3                           INITVALUE# ;
      840     8583    3               CASE(INSTATTROPT) ;

      841     8584    3                 CALL RESET_ATTR_OPTS(AMR$REC$.INSTATTR_) ALTRET(PROCOPTRET) ;

   8584  2 001116   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 001117   000010 036003                    ADLQ    8,DU
         2 001120   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 001121   010351 701000 2                  TSX1    RESET_ATTR_OPTS
         2 001122   006020 702000 2                  TSX2    PROCOPTRET
         2 001123   002145 710000 2                  TRA     s:8838

      842     8585    3               CASE(INSTATTRSIZEOPT) ;

      843     8586    3                 IF AMR$REC$.INSTATTR_ ~= ADDR(NIL)

   8586  2 001124   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001125   300010 236100                    LDQ     8,,PR3
         2 001126   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001127   002145 600000 2                  TZE     s:8838

      844     8587    3                   THEN
      845     8588    3                     AMR$REC$.INSTATTR_->VLP$ATTR.R.NAW# = 0 ;

   8588  2 001130   300010 474500                    LDP4    8,,PR3
         2 001131   000000 221003                    LDX1    0,DU
         2 001132   400000 741100                    STX1    0,,PR4
         2 001133   002145 710000 2                  TRA     s:8838

      846     8589    3               CASE(IOERROKOPT);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:189  

      847     8590    3                 AMR$REC$.V.IOERROK#=CPSL_CFPT_OPEN.V.IOERROK#;

   8590  2 001134   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001135   000060 236000 xsym               LDQ     CPSL_CFPT_OPEN+48
         2 001136   300036 676100                    ERQ     30,,PR3
         2 001137   003000 376003                    ANQ     1536,DU
         2 001140   300036 656100                    ERSQ    30,,PR3
         2 001141   002145 710000 2                  TRA     s:8838

      848     8591    3               CASE(ISTATIONOPT);

      849     8592    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8592  2 001142   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001143   300002 236100                    LDQ     2,,PR3
         2 001144   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001145   002145 600000 2                  TZE     s:8838

      850     8593    3                    THEN
      851     8594    3                       AMR$REC$.SETSTA_->AM$SETSTA.ISTA.ISTATION#=CPSL_CVLP_SETSTA.

   8594  2 001146   300002 474500                    LDP4    2,,PR3
         2 001147   040100 100400                    MLR     fill='040'O
         2 001150   000002 000010 xsym               ADSC9   CPSL_CVLP_SETSTA+2       cn=0,n=8
         2 001151   400002 000010                    ADSC9   2,,PR4                   cn=0,n=8
         2 001152   002145 710000 2                  TRA     s:8838

      852     8595    3                            ISTA.ISTATION#;
      853     8596    3               CASE(IXTNSIZEOPT);

      854     8597    3                 AMR$REC$.V.IXTNSIZE#=CPSL_CFPT_OPEN.V.IXTNSIZE#;

   8597  2 001153   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001154   000055 235000 xsym               LDA     CPSL_CFPT_OPEN+45
         2 001155   300033 755100                    STA     27,,PR3
         2 001156   002145 710000 2                  TRA     s:8838
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:190  

      855     8598    3               CASE(JRNLBYPASSOPT);

      856     8599    3                 AMR$REC$.V.JRNLBYPASS#=CPSL_CFPT_OPEN.V.JRNLBYPASS#;

   8599  2 001157   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001160   000047 236000 xsym               LDQ     CPSL_CFPT_OPEN+39
         2 001161   300025 676100                    ERQ     21,,PR3
         2 001162   000060 376007                    ANQ     48,DL
         2 001163   300025 656100                    ERSQ    21,,PR3
         2 001164   002145 710000 2                  TRA     s:8838

      857     8600    3               CASE(KEYLOPT);

      858     8601    3                 AMR$REC$.V.KEYL#=CPSL_CFPT_OPEN.V.KEYL#;

   8601  2 001165   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001166   000051 236000 xsym               LDQ     CPSL_CFPT_OPEN+41
         2 001167   300027 552110                    STBQ    23,'10'O,PR3
         2 001170   002145 710000 2                  TRA     s:8838

      859     8602    3               CASE(KEYXOPT);

      860     8603    3                 AMR$REC$.V.KEYX#=CPSL_CFPT_OPEN.V.KEYX#;

   8603  2 001171   000051 221000 xsym               LDX1    CPSL_CFPT_OPEN+41
         2 001172   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001173   300027 741100                    STX1    23,,PR3
         2 001174   002145 710000 2                  TRA     s:8838

      861     8604    3               CASE(LDBYPROOPT) ;

      862     8605    3                 IF AMR$REC$.FPRG_~=ADDR(NIL)

   8605  2 001175   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001176   300021 236100                    LDQ     17,,PR3
         2 001177   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:191  
         2 001200   002145 600000 2                  TZE     s:8838

      863     8606    3                   THEN
      864     8607    3                     AMR$REC$.FPRG_->VLP$FPRG.LDBYPRO# = CPSL_CVLP_FPRG.

   8607  2 001201   300021 474500                    LDP4    17,,PR3
         2 001202   000000 236000 xsym               LDQ     CPSL_CVLP_FPRG
         2 001203   400000 552140                    STBQ    0,'40'O,PR4
         2 001204   002145 710000 2                  TRA     s:8838

      865     8608    3                           LDBYPRO# ;
      866     8609    3               CASE(LFTBRDROPT) ;

      867     8610    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8610  2 001205   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001206   300006 236100                    LDQ     6,,PR3
         2 001207   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001210   002145 600000 2                  TZE     s:8838

      868     8611    3                   THEN
      869     8612    3                     AMR$REC$.WINDOW_->VLP$WINDOW.LFTBRDR# = CPSL_CVLP_WINDOW.

   8612  2 001211   300006 474500                    LDP4    6,,PR3
         2 001212   000003 236000 xsym               LDQ     CPSL_CVLP_WINDOW+3
         2 001213   400003 676100                    ERQ     3,,PR4
         2 001214   300000 376007                    ANQ     98304,DL
         2 001215   400003 656100                    ERSQ    3,,PR4
         2 001216   002145 710000 2                  TRA     s:8838

      870     8613    3                           LFTBRDR# ;
      871     8614    3               CASE(LINESOPT);

      872     8615    3                 AMR$REC$.V.LINES#=CPSL_CFPT_OPEN.V.LINES#;

   8615  2 001217   000063 721000 xsym               LXL1    CPSL_CFPT_OPEN+51
         2 001220   000000 473400 xsym               LDP3    CPSL_SEG3$
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:192  
         2 001221   300041 441100                    SXL1    33,,PR3
         2 001222   002145 710000 2                  TRA     s:8838

      873     8616    3               CASE(LOADOPT);

      874     8617    3                 AMR$REC$.V.LOAD#=CPSL_CFPT_OPEN.V.LOAD#;

   8617  2 001223   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001224   000047 236000 xsym               LDQ     CPSL_CFPT_OPEN+39
         2 001225   300025 676100                    ERQ     21,,PR3
         2 001226   001400 376007                    ANQ     768,DL
         2 001227   300025 656100                    ERSQ    21,,PR3
         2 001230   002145 710000 2                  TRA     s:8838

      875     8618    3               CASE(LRDL0OPT);

      876     8619    3                 AMR$REC$.V.LRDL0#=CPSL_CFPT_OPEN.V.LRDL0#;

   8619  2 001231   000053 721000 xsym               LXL1    CPSL_CFPT_OPEN+43
         2 001232   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001233   300031 441100                    SXL1    25,,PR3
         2 001234   002145 710000 2                  TRA     s:8838

      877     8620    3               CASE(LSLIDEOPT);

      878     8621    3                 AMR$REC$.V.LSLIDE#=CPSL_CFPT_OPEN.V.LSLIDE#;

   8621  2 001235   000053 221000 xsym               LDX1    CPSL_CFPT_OPEN+43
         2 001236   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001237   300031 741100                    STX1    25,,PR3
         2 001240   002145 710000 2                  TRA     s:8838

      879     8622    3               CASE(LSTAOROPT);

      880     8623    3                 AMR$REC$.V.LSTAOR#=CPSL_CFPT_OPEN.V.LSTAOR#;

   8623  2 001241   000000 473400 xsym               LDP3    CPSL_SEG3$
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:193  
         2 001242   000047 236000 xsym               LDQ     CPSL_CFPT_OPEN+39
         2 001243   300025 676100                    ERQ     21,,PR3
         2 001244   000300 376007                    ANQ     192,DL
         2 001245   300025 656100                    ERSQ    21,,PR3
         2 001246   002145 710000 2                  TRA     s:8838

      881     8624    3               CASE(MARGINOPT);

      882     8625    3                 IF AMR$REC$.TAB_~=ADDR(NIL)

   8625  2 001247   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001250   300016 236100                    LDQ     14,,PR3
         2 001251   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001252   002145 600000 2                  TZE     s:8838

      883     8626    3                    THEN
      884     8627    3                       AMR$REC$.TAB_->AM$TAB.MARGIN#=0;

   8627  2 001253   300016 474500                    LDP4    14,,PR3
         2 001254   000000 236003                    LDQ     0,DU
         2 001255   400000 552140                    STBQ    0,'40'O,PR4
         2 001256   002145 710000 2                  TRA     s:8838

      885     8628    3               CASE(MINPHYSOPT) ;

      886     8629    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)

   8629  2 001257   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001260   300002 236100                    LDQ     2,,PR3
         2 001261   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001262   002145 600000 2                  TZE     s:8838

      887     8630    3                   THEN
      888     8631    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.MINPHYS# = CPSL_CVLP_VIRTUAL.

   8631  2 001263   300002 474500                    LDP4    2,,PR3
         2 001264   000003 721000 xsym               LXL1    CPSL_CVLP_VIRTUAL+3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:194  
         2 001265   400003 441100                    SXL1    3,,PR4
         2 001266   002145 710000 2                  TRA     s:8838

      889     8632    3                           MINPHYS# ;
      890     8633    3               CASE(MAXVOLOPT);

      891     8634    3                 AMR$REC$.V.MAXVOL#=CPSL_CFPT_OPEN.V.MAXVOL#;

   8634  2 001267   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001270   000061 236000 xsym               LDQ     CPSL_CFPT_OPEN+49
         2 001271   300037 552120                    STBQ    31,'20'O,PR3
         2 001272   002145 710000 2                  TRA     s:8838

      892     8635    3               CASE(MINLENGTHOPT) ;

      893     8636    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8636  2 001273   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001274   300006 236100                    LDQ     6,,PR3
         2 001275   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001276   002145 600000 2                  TZE     s:8838

      894     8637    3                   THEN
      895     8638    3                     AMR$REC$.WINDOW_->VLP$WINDOW.MINLENGTH# = CPSL_CVLP_WINDOW.

   8638  2 001277   300006 474500                    LDP4    6,,PR3
         2 001300   000004 236000 xsym               LDQ     CPSL_CVLP_WINDOW+4
         2 001301   400004 552140                    STBQ    4,'40'O,PR4
         2 001302   002145 710000 2                  TRA     s:8838

      896     8639    3                           MINLENGTH# ;
      897     8640    3               CASE(MINWIDTHOPT) ;

      898     8641    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8641  2 001303   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001304   300006 236100                    LDQ     6,,PR3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:195  
         2 001305   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001306   002145 600000 2                  TZE     s:8838

      899     8642    3                   THEN
      900     8643    3                     AMR$REC$.WINDOW_->VLP$WINDOW.MINWIDTH# = CPSL_CVLP_WINDOW.

   8643  2 001307   300006 474500                    LDP4    6,,PR3
         2 001310   000004 236000 xsym               LDQ     CPSL_CVLP_WINDOW+4
         2 001311   400004 552120                    STBQ    4,'20'O,PR4
         2 001312   002145 710000 2                  TRA     s:8838

      901     8644    3                           MINWIDTH# ;
      902     8645    3               CASE(MYSTATIONOPT);

      903     8646    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8646  2 001313   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001314   300002 236100                    LDQ     2,,PR3
         2 001315   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001316   002145 600000 2                  TZE     s:8838

      904     8647    3                    THEN
      905     8648    3                       AMR$REC$.SETSTA_->AM$SETSTA.MYSTATION#=CPSL_CVLP_SETSTA.

   8648  2 001317   300002 474500                    LDP4    2,,PR3
         2 001320   040100 100400                    MLR     fill='040'O
         2 001321   000000 000010 xsym               ADSC9   CPSL_CVLP_SETSTA         cn=0,n=8
         2 001322   400000 000010                    ADSC9   0,,PR4                   cn=0,n=8
         2 001323   002145 710000 2                  TRA     s:8838

      906     8649    3                            MYSTATION#;
      907     8650    3               CASE(NOFILEOPT) ;

      908     8651    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)

   8651  2 001324   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001325   300002 236100                    LDQ     2,,PR3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:196  
         2 001326   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001327   002145 600000 2                  TZE     s:8838

      909     8652    3                   THEN
      910     8653    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.NOFILE# = CPSL_CVLP_VIRTUAL.

   8653  2 001330   300002 474500                    LDP4    2,,PR3
         2 001331   000000 236000 xsym               LDQ     CPSL_CVLP_VIRTUAL
         2 001332   400000 676100                    ERQ     0,,PR4
         2 001333   200000 376003                    ANQ     65536,DU
         2 001334   400000 656100                    ERSQ    0,,PR4
         2 001335   002145 710000 2                  TRA     s:8838

      911     8654    3                           NOFILE# ;
      912     8655    3               CASE(NRECSOPT);

      913     8656    3                 AMR$REC$.V.NRECS#=CPSL_CFPT_OPEN.V.NRECS#;

   8656  2 001336   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001337   000056 235000 xsym               LDA     CPSL_CFPT_OPEN+46
         2 001340   300034 755100                    STA     28,,PR3
         2 001341   002145 710000 2                  TRA     s:8838

      914     8657    3               CASE(OLATCHOPT);

      915     8658    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8658  2 001342   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001343   300002 236100                    LDQ     2,,PR3
         2 001344   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001345   002145 600000 2                  TZE     s:8838

      916     8659    3                    THEN
      917     8660    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OLATCH#=CPSL_CVLP_SETSTA.

   8660  2 001346   300002 474500                    LDP4    2,,PR3
         2 001347   000013 236000 xsym               LDQ     CPSL_CVLP_SETSTA+11
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:197  
         2 001350   400013 676100                    ERQ     11,,PR4
         2 001351   200000 376003                    ANQ     65536,DU
         2 001352   400013 656100                    ERSQ    11,,PR4
         2 001353   002145 710000 2                  TRA     s:8838

      918     8661    3                            OSTA.OLATCH#;
      919     8662    3               CASE(OLOCKOPT);

      920     8663    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8663  2 001354   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001355   300002 236100                    LDQ     2,,PR3
         2 001356   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001357   002145 600000 2                  TZE     s:8838

      921     8664    3                    THEN
      922     8665    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OLOCK#=CPSL_CVLP_SETSTA.

   8665  2 001360   300002 474500                    LDP4    2,,PR3
         2 001361   000013 236000 xsym               LDQ     CPSL_CVLP_SETSTA+11
         2 001362   400013 676100                    ERQ     11,,PR4
         2 001363   400000 376003                    ANQ     -131072,DU
         2 001364   400013 656100                    ERSQ    11,,PR4
         2 001365   002145 710000 2                  TRA     s:8838

      923     8666    3                            OSTA.OLOCK#;
      924     8667    3               CASE(OMSGTYPOPT);

      925     8668    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8668  2 001366   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001367   300002 236100                    LDQ     2,,PR3
         2 001370   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001371   002145 600000 2                  TZE     s:8838

      926     8669    3                    THEN
      927     8670    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OMSGTYP#=CPSL_CVLP_SETSTA.
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:198  

   8670  2 001372   300002 474500                    LDP4    2,,PR3
         2 001373   040100 100400                    MLR     fill='040'O
         2 001374   000011 000010 xsym               ADSC9   CPSL_CVLP_SETSTA+9       cn=0,n=8
         2 001375   400011 000010                    ADSC9   9,,PR4                   cn=0,n=8
         2 001376   002145 710000 2                  TRA     s:8838

      928     8671    3                            OSTA.OMSGTYP#;
      929     8672    3               CASE(OPTIONALOPT) ;

      930     8673    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8673  2 001377   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001400   300006 236100                    LDQ     6,,PR3
         2 001401   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001402   002145 600000 2                  TZE     s:8838

      931     8674    3                   THEN
      932     8675    3                     AMR$REC$.WINDOW_->VLP$WINDOW.REMOVABLE# = CPSL_CVLP_WINDOW.

   8675  2 001403   300006 474500                    LDP4    6,,PR3
         2 001404   000004 236000 xsym               LDQ     CPSL_CVLP_WINDOW+4
         2 001405   400004 676100                    ERQ     4,,PR4
         2 001406   300000 376007                    ANQ     98304,DL
         2 001407   400004 656100                    ERSQ    4,,PR4
         2 001410   002145 710000 2                  TRA     s:8838

      933     8676    3                           REMOVABLE# ;
      934     8677    3               CASE(ORGOPT);

      935     8678    3                 AMR$REC$.V.ORG#=CPSL_CFPT_OPEN.V.ORG#;

   8678  2 001411   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001412   000046 236000 xsym               LDQ     CPSL_CFPT_OPEN+38
         2 001413   300024 552110                    STBQ    20,'10'O,PR3
         2 001414   002145 710000 2                  TRA     s:8838

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:199  
      936     8679    3               CASE(OSTATIONOPT);

      937     8680    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8680  2 001415   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001416   300002 236100                    LDQ     2,,PR3
         2 001417   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001420   002145 600000 2                  TZE     s:8838

      938     8681    3                    THEN
      939     8682    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OSTATION#=CPSL_CVLP_SETSTA.

   8682  2 001421   300002 474500                    LDP4    2,,PR3
         2 001422   040100 100400                    MLR     fill='040'O
         2 001423   000007 000010 xsym               ADSC9   CPSL_CVLP_SETSTA+7       cn=0,n=8
         2 001424   400007 000010                    ADSC9   7,,PR4                   cn=0,n=8
         2 001425   002145 710000 2                  TRA     s:8838

      940     8683    3                            OSTA.OSTATION#;
      941     8684    3               CASE(PAGECOLOPT);

      942     8685    3                 IF AMR$REC$.HDR_~=ADDR(NIL)

   8685  2 001426   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001427   300017 236100                    LDQ     15,,PR3
         2 001430   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001431   002145 600000 2                  TZE     s:8838

      943     8686    3                    THEN
      944     8687    3                       AMR$REC$.HDR_->AM$HDR.CTL.COUNT#=CPSL_CVLP_HDR.CTL.

   8687  2 001432   300017 474500                    LDP4    15,,PR3
         2 001433   000000 236000 xsym               LDQ     CPSL_CVLP_HDR
         2 001434   400000 552104                    STBQ    0,'04'O,PR4
         2 001435   002145 710000 2                  TRA     s:8838

      945     8688    3                            COUNT#;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:200  
      946     8689    3               CASE(PHYSICALOPT) ;

      947     8690    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)

   8690  2 001436   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001437   300002 236100                    LDQ     2,,PR3
         2 001440   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001441   002145 600000 2                  TZE     s:8838

      948     8691    3                   THEN
      949     8692    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.PHYSICAL# = CPSL_CVLP_VIRTUAL.

   8692  2 001442   300002 474500                    LDP4    2,,PR3
         2 001443   000003 221000 xsym               LDX1    CPSL_CVLP_VIRTUAL+3
         2 001444   400003 741100                    STX1    3,,PR4
         2 001445   002145 710000 2                  TRA     s:8838

      950     8693    3                           PHYSICAL# ;
      951     8694    3               CASE(POSITIONOPT) ;

      952     8695    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8695  2 001446   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001447   300006 236100                    LDQ     6,,PR3
         2 001450   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001451   002145 600000 2                  TZE     s:8838

      953     8696    3                   THEN
      954     8697    3                     AMR$REC$.WINDOW_->VLP$WINDOW.POSITION# = CPSL_CVLP_WINDOW.

   8697  2 001452   300006 474500                    LDP4    6,,PR3
         2 001453   000002 236000 xsym               LDQ     CPSL_CVLP_WINDOW+2
         2 001454   400002 552140                    STBQ    2,'40'O,PR4
         2 001455   002145 710000 2                  TRA     s:8838

      955     8698    3                           POSITION# ;
      956     8699    3               CASE(PROCATTROPT) ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:201  

      957     8700    3                 CALL RESET_ATTR_OPTS(AMR$REC$.PROCATTR_) ALTRET(PROCOPTRET) ;

   8700  2 001456   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 001457   000011 036003                    ADLQ    9,DU
         2 001460   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 001461   010351 701000 2                  TSX1    RESET_ATTR_OPTS
         2 001462   006020 702000 2                  TSX2    PROCOPTRET
         2 001463   002145 710000 2                  TRA     s:8838

      958     8701    3               CASE(PROCATTRSIZEOPT) ;

      959     8702    3                 IF AMR$REC$.PROCATTR_ ~= ADDR(NIL)

   8702  2 001464   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001465   300011 236100                    LDQ     9,,PR3
         2 001466   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001467   002145 600000 2                  TZE     s:8838

      960     8703    3                   THEN
      961     8704    3                     AMR$REC$.PROCATTR_->VLP$ATTR.R.NAW# = 0 ;

   8704  2 001470   300011 474500                    LDP4    9,,PR3
         2 001471   000000 221003                    LDX1    0,DU
         2 001472   400000 741100                    STX1    0,,PR4
         2 001473   002145 710000 2                  TRA     s:8838

      962     8705    3               CASE(PROFILEOPT) ;

      963     8706    3                 IF AMR$REC$.FPRG_~=ADDR(NIL)

   8706  2 001474   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001475   300021 236100                    LDQ     17,,PR3
         2 001476   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001477   002145 600000 2                  TZE     s:8838

      964     8707    3                   THEN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:202  
      965     8708    3                     AMR$REC$.FPRG_->VLP$FPRG.PROFILE# = CPSL_CVLP_FPRG.

   8708  2 001500   300021 474500                    LDP4    17,,PR3
         2 001501   000100 100400                    MLR     fill='000'O
         2 001502   000016 000014 xsym               ADSC9   CPSL_CVLP_FPRG+14        cn=0,n=12
         2 001503   400016 000014                    ADSC9   14,,PR4                  cn=0,n=12
         2 001504   002145 710000 2                  TRA     s:8838

      966     8709    3                           PROFILE# ;
      967     8710    3               CASE(QISSOPT);

      968     8711    3                 AMR$REC$.V.QISS# = CPSL_CFPT_OPEN.V.QISS#;

   8711  2 001505   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001506   000063 236000 xsym               LDQ     CPSL_CFPT_OPEN+51
         2 001507   300041 676100                    ERQ     33,,PR3
         2 001510   000030 376003                    ANQ     24,DU
         2 001511   300041 656100                    ERSQ    33,,PR3
         2 001512   002145 710000 2                  TRA     s:8838

      969     8712    3               CASE(RECLOPT);

      970     8713    3                 AMR$REC$.V.RECL#=CPSL_CFPT_OPEN.V.RECL#;

   8713  2 001513   000052 721000 xsym               LXL1    CPSL_CFPT_OPEN+42
         2 001514   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001515   300030 441100                    SXL1    24,,PR3
         2 001516   002145 710000 2                  TRA     s:8838

      971     8714    3               CASE(RHTBRDROPT) ;

      972     8715    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8715  2 001517   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001520   300006 236100                    LDQ     6,,PR3
         2 001521   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001522   002145 600000 2                  TZE     s:8838
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:203  

      973     8716    3                   THEN
      974     8717    3                     AMR$REC$.WINDOW_->VLP$WINDOW.RHTBRDR# = CPSL_CVLP_WINDOW.

   8717  2 001523   300006 474500                    LDP4    6,,PR3
         2 001524   000003 236000 xsym               LDQ     CPSL_CVLP_WINDOW+3
         2 001525   400003 676100                    ERQ     3,,PR4
         2 001526   060000 376007                    ANQ     24576,DL
         2 001527   400003 656100                    ERSQ    3,,PR4
         2 001530   002145 710000 2                  TRA     s:8838

      975     8718    3                           RHTBRDR# ;
      976     8719    3               CASE(RPAGEOPT);

      977     8720    3                 IF AMR$REC$.HDR_~=ADDR(NIL)

   8720  2 001531   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001532   300017 236100                    LDQ     15,,PR3
         2 001533   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001534   002145 600000 2                  TZE     s:8838

      978     8721    3                    THEN
      979     8722    3                       AMR$REC$.HDR_->AM$HDR.CTL.RESETPAGE#=CPSL_CVLP_HDR.CTL.

   8722  2 001535   300017 474500                    LDP4    15,,PR3
         2 001536   000000 236000 xsym               LDQ     CPSL_CVLP_HDR
         2 001537   400000 676100                    ERQ     0,,PR4
         2 001540   001000 376003                    ANQ     512,DU
         2 001541   400000 656100                    ERSQ    0,,PR4
         2 001542   002145 710000 2                  TRA     s:8838

      980     8723    3                            RESETPAGE#;
      981     8724    3               CASE(SEGNUMOPT) ;

      982     8725    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)

   8725  2 001543   000000 473400 xsym               LDP3    CPSL_SEG3$
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:204  
         2 001544   300002 236100                    LDQ     2,,PR3
         2 001545   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001546   002145 600000 2                  TZE     s:8838

      983     8726    3                   THEN
      984     8727    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.SEGNUM# = CPSL_CVLP_VIRTUAL.

   8727  2 001547   300002 474500                    LDP4    2,,PR3
         2 001550   000000 236000 xsym               LDQ     CPSL_CVLP_VIRTUAL
         2 001551   400000 552104                    STBQ    0,'04'O,PR4
         2 001552   002145 710000 2                  TRA     s:8838

      985     8728    3                           SEGNUM# ;
      986     8729    3               CASE(SEGSIZEOPT) ;

      987     8730    3                 IF AMR$REC$.VIRTUAL_~=ADDR(NIL)

   8730  2 001553   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001554   300002 236100                    LDQ     2,,PR3
         2 001555   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001556   002145 600000 2                  TZE     s:8838

      988     8731    3                   THEN
      989     8732    3                     AMR$REC$.VIRTUAL_->VLP$VIRTUAL.SEGSIZE# = CPSL_CVLP_VIRTUAL.

   8732  2 001557   300002 474500                    LDP4    2,,PR3
         2 001560   000002 235000 xsym               LDA     CPSL_CVLP_VIRTUAL+2
         2 001561   400002 755100                    STA     2,,PR4
         2 001562   002145 710000 2                  TRA     s:8838

      990     8733    3                           SEGSIZE# ;
      991     8734    3               CASE(SCRUBOPT);

      992     8735    3                 AMR$REC$.V.INITZ.SCRUB#=CPSL_CFPT_OPEN.V.INITZ.SCRUB#;

   8735  2 001563   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001564   000044 236000 xsym               LDQ     CPSL_CFPT_OPEN+36
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:205  
         2 001565   300022 676100                    ERQ     18,,PR3
         2 001566   400000 376007                    ANQ     -131072,DL
         2 001567   300022 656100                    ERSQ    18,,PR3
         2 001570   002145 710000 2                  TRA     s:8838

      993     8736    3               CASE(SEEDOPT);

      994     8737    3                 AMR$REC$.V.SEED#=CPSL_CFPT_OPEN.V.SEED#;

   8737  2 001571   000067 236000 xsym               LDQ     CPSL_CFPT_OPEN+55
         2 001572   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001573   300045 756100                    STQ     37,,PR3

      995     8738    3                 AMR$REC$.V.SEEDSPECIFIED#=CPSL_CFPT_OPEN.V.SEEDSPECIFIED#;

   8738  2 001574   000060 236000 xsym               LDQ     CPSL_CFPT_OPEN+48
         2 001575   300036 676100                    ERQ     30,,PR3
         2 001576   010000 376007                    ANQ     4096,DL
         2 001577   300036 656100                    ERSQ    30,,PR3
         2 001600   002145 710000 2                  TRA     s:8838

      996     8739    3               CASE(SEQCOLOPT);

      997     8740    3                 AMR$REC$.V.SEQCOL#=CPSL_CFPT_OPEN.V.SEQCOL#;

   8740  2 001601   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001602   000063 236000 xsym               LDQ     CPSL_CFPT_OPEN+51
         2 001603   300041 552140                    STBQ    33,'40'O,PR3
         2 001604   002145 710000 2                  TRA     s:8838

      998     8741    3               CASE(SEQIDOPT);

      999     8742    3                 AMR$REC$.V.SEQID#=CPSL_CFPT_OPEN.V.SEQID#;

   8742  2 001605   000064 236000 xsym               LDQ     CPSL_CFPT_OPEN+52
         2 001606   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001607   300042 756100                    STQ     34,,PR3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:206  
         2 001610   002145 710000 2                  TRA     s:8838

     1000     8743    3               CASE(SEQOPT);

     1001     8744        /*               Reset all seq related options to their defaults */
     1002     8745    3                 AMR$REC$.V.SEQ#=CPSL_CFPT_OPEN.V.SEQ#;

   8745  2 001611   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001612   000063 236000 xsym               LDQ     CPSL_CFPT_OPEN+51
         2 001613   300041 676100                    ERQ     33,,PR3
         2 001614   000600 376003                    ANQ     384,DU
         2 001615   300041 656100                    ERSQ    33,,PR3

     1003     8746    3                 AMR$REC$.V.SEQCOL#=CPSL_CFPT_OPEN.V.SEQCOL#;

   8746  2 001616   000063 236000 xsym               LDQ     CPSL_CFPT_OPEN+51
         2 001617   300041 552140                    STBQ    33,'40'O,PR3

     1004     8747    3                 AMR$REC$.V.SEQID#=CPSL_CFPT_OPEN.V.SEQID#;

   8747  2 001620   000064 236000 xsym               LDQ     CPSL_CFPT_OPEN+52
         2 001621   300042 756100                    STQ     34,,PR3
         2 001622   002145 710000 2                  TRA     s:8838

     1005     8748    3               CASE(SHAREOPT);

     1006     8749    3                 AMR$REC$.V.SHARE#=CPSL_CFPT_OPEN.V.SHARE#;

   8749  2 001623   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001624   000044 236000 xsym               LDQ     CPSL_CFPT_OPEN+36
         2 001625   300022 676100                    ERQ     18,,PR3
         2 001626   000030 376007                    ANQ     24,DL
         2 001627   300022 656100                    ERSQ    18,,PR3
         2 001630   002145 710000 2                  TRA     s:8838

     1007     8750    3               CASE(SNOPT);

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:207  
     1008     8751    3                 MCB.ADDRESS$=AMR$REC$.SN_;

   8751  2 001631   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001632   300001 236100                    LDQ     1,,PR3
         2 001633   200004 474500                    LDP4    @MCB,,AUTO
         2 001634   400000 756100                    STQ     0,,PR4

     1009     8752    3                 CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Release vlp area*/

   8752  2 001635   200004 630500                    EPPR0   @MCB,,AUTO
         2 001636   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001637   000000 701000 xent               TSX1    X$DEALLOCATE
         2 001640   006004 702000 2                  TSX2    CXB$PROC45

     1010     8753    3                 AMR$REC$.SN_=ADDR(NIL);

   8753  2 001641   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001642   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 001643   000001 756100                    STQ     1,,PR0
         2 001644   002145 710000 2                  TRA     s:8838

     1011     8754    3               CASE(SPANNEDOPT);

     1012     8755    3                 AMR$REC$.V.SPANNED#=CPSL_CFPT_OPEN.V.SPANNED#;

   8755  2 001645   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001646   000047 236000 xsym               LDQ     CPSL_CFPT_OPEN+39
         2 001647   300025 676100                    ERQ     21,,PR3
         2 001650   030000 376007                    ANQ     12288,DL
         2 001651   300025 656100                    ERSQ    21,,PR3
         2 001652   002145 710000 2                  TRA     s:8838

     1013     8756    3               CASE(SPAREOPT);

     1014     8757    3                 AMR$REC$.V.SPARE#=CPSL_CFPT_OPEN.V.SPARE#;

   8757  2 001653   000054 221000 xsym               LDX1    CPSL_CFPT_OPEN+44
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:208  
         2 001654   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001655   300032 741100                    STX1    26,,PR3
         2 001656   002145 710000 2                  TRA     s:8838

     1015     8758    3               CASE(TABOPT);

     1016     8759    3                 IF AMR$REC$.TAB_ ~= ADDR(NIL)

   8759  2 001657   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001660   300016 236100                    LDQ     14,,PR3
         2 001661   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001662   002145 600000 2                  TZE     s:8838

     1017     8760    3                    THEN
     1018     8761    4                       DO J=0 TO 30;

   8761  2 001663   200021 450100                    STZ     J,,AUTO

     1019     8762    4                          AMR$REC$.TAB_->AM$TAB.TABS#(J)=0;

   8762  2 001664   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 001665   000016 471500                    LDP1    14,,PR0
         2 001666   200021 235100                    LDA     J,,AUTO
         2 001667   000105 101400                    MRL     fill='000'O
         2 001670   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         2 001671   100000 200001                    ADSC9   0,A,PR1                  cn=1,n=1

     1020     8763    4                       END;

   8763  2 001672   200021 054100                    AOS     J,,AUTO
         2 001673   200021 235100                    LDA     J,,AUTO
         2 001674   000036 115007                    CMPA    30,DL
         2 001675   001664 604400 2                  TMOZ    s:8762
         2 001676   002145 710000 2                  TRA     s:8838

     1021     8764    3               CASE(TERMCONLGLOPT);

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:209  
     1022     8765    3                 AMR$REC$.V.TERMCONLGL#=CPSL_CFPT_OPEN.V.TERMCONLGL#;

   8765  2 001677   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001700   000060 236000 xsym               LDQ     CPSL_CFPT_OPEN+48
         2 001701   300036 676100                    ERQ     30,,PR3
         2 001702   200000 376007                    ANQ     65536,DL
         2 001703   300036 656100                    ERSQ    30,,PR3
         2 001704   002145 710000 2                  TRA     s:8838

     1023     8766    3               CASE(TITLEOPT);

     1024     8767    3                 IF AMR$REC$.HDR_~=ADDR(NIL)

   8767  2 001705   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001706   300017 236100                    LDQ     15,,PR3
         2 001707   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001710   002145 600000 2                  TZE     s:8838

     1025     8768    3                    THEN
     1026     8769    4                       DO;

     1027     8770    4                          AMR$REC$.HDR_->AM$HDR.TITL.L#=0;

   8770  2 001711   300017 474500                    LDP4    15,,PR3
         2 001712   000000 236003                    LDQ     0,DU
         2 001713   400001 552140                    STBQ    1,'40'O,PR4

     1028     8771    4                          AMR$REC$.HDR_->AM$HDR.TITL.TITLE#=' ';

   8771  2 001714   300017 471500                    LDP1    15,,PR3
         2 001715   100001 236100                    LDQ     1,,PR1
         2 001716   000033 772000                    QRL     27
         2 001717   000000 620006                    EAX0    0,QL
         2 001720   040140 100400                    MLR     fill='040'O
         2 001721   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001722   100001 200010                    ADSC9   1,,PR1                   cn=1,n=*X0

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:210  
     1029     8772    4                       END;

   8772  2 001723   002145 710000 2                  TRA     s:8838

     1030     8773    3               CASE(TOPBRDROPT) ;

     1031     8774    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8774  2 001724   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001725   300006 236100                    LDQ     6,,PR3
         2 001726   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001727   002145 600000 2                  TZE     s:8838

     1032     8775    3                   THEN
     1033     8776    3                     AMR$REC$.WINDOW_->VLP$WINDOW.TOPBRDR# = CPSL_CVLP_WINDOW.

   8776  2 001730   300006 474500                    LDP4    6,,PR3
         2 001731   000003 236000 xsym               LDQ     CPSL_CVLP_WINDOW+3
         2 001732   400003 676100                    ERQ     3,,PR4
         2 001733   300000 376003                    ANQ     98304,DU
         2 001734   400003 656100                    ERSQ    3,,PR4
         2 001735   002145 710000 2                  TRA     s:8838

     1034     8777    3                           TOPBRDR# ;
     1035     8778    3               CASE(TYPEOPT);

     1036     8779    3                 AMR$REC$.V.TYPE#=CPSL_CFPT_OPEN.V.TYPE#;

   8779  2 001736   000047 221000 xsym               LDX1    CPSL_CFPT_OPEN+39
         2 001737   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001740   300025 741100                    STX1    21,,PR3
         2 001741   002145 710000 2                  TRA     s:8838

     1037     8780    3               CASE(UATTROPT) ;

     1038     8781    3                 CALL RESET_ATTR_OPTS(AMR$REC$.UATTR_) ALTRET(PROCOPTRET) ;

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:211  
   8781  2 001742   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 001743   000007 036003                    ADLQ    7,DU
         2 001744   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 001745   010351 701000 2                  TSX1    RESET_ATTR_OPTS
         2 001746   006020 702000 2                  TSX2    PROCOPTRET
         2 001747   002145 710000 2                  TRA     s:8838

     1039     8782    3               CASE(UATTRSIZEOPT) ;

     1040     8783    3                 IF AMR$REC$.UATTR_ ~= ADDR(NIL)

   8783  2 001750   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001751   300007 236100                    LDQ     7,,PR3
         2 001752   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001753   002145 600000 2                  TZE     s:8838

     1041     8784    3                   THEN
     1042     8785    3                     AMR$REC$.UATTR_->VLP$ATTR.R.NAW# = 0 ;

   8785  2 001754   300007 474500                    LDP4    7,,PR3
         2 001755   000000 221003                    LDX1    0,DU
         2 001756   400000 741100                    STX1    0,,PR4
         2 001757   002145 710000 2                  TRA     s:8838

     1043     8786    3               CASE(UOPT0OPT);

     1044     8787    3                 AMR$REC$.V.UOPT#(0)=CPSL_CFPT_OPEN.V.UOPT#(0);

   8787  2 001760   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001761   000046 236000 xsym               LDQ     CPSL_CFPT_OPEN+38
         2 001762   300024 676100                    ERQ     20,,PR3
         2 001763   600000 376003                    ANQ     -65536,DU
         2 001764   300024 656100                    ERSQ    20,,PR3
         2 001765   002145 710000 2                  TRA     s:8838

     1045     8788    3               CASE(UOPT1OPT);

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:212  
     1046     8789    3                 AMR$REC$.V.UOPT#(1)=CPSL_CFPT_OPEN.V.UOPT#(1);

   8789  2 001766   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001767   000046 236000 xsym               LDQ     CPSL_CFPT_OPEN+38
         2 001770   300024 676100                    ERQ     20,,PR3
         2 001771   140000 376003                    ANQ     49152,DU
         2 001772   300024 656100                    ERSQ    20,,PR3
         2 001773   002145 710000 2                  TRA     s:8838

     1047     8790    3               CASE(UOPT2OPT);

     1048     8791    3                 AMR$REC$.V.UOPT#(2)=CPSL_CFPT_OPEN.V.UOPT#(2);

   8791  2 001774   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 001775   000046 236000 xsym               LDQ     CPSL_CFPT_OPEN+38
         2 001776   300024 676100                    ERQ     20,,PR3
         2 001777   030000 376003                    ANQ     12288,DU
         2 002000   300024 656100                    ERSQ    20,,PR3
         2 002001   002145 710000 2                  TRA     s:8838

     1049     8792    3               CASE(UOPT3OPT);

     1050     8793    3                 AMR$REC$.V.UOPT#(3)=CPSL_CFPT_OPEN.V.UOPT#(3);

   8793  2 002002   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002003   000046 236000 xsym               LDQ     CPSL_CFPT_OPEN+38
         2 002004   300024 676100                    ERQ     20,,PR3
         2 002005   006000 376003                    ANQ     3072,DU
         2 002006   300024 656100                    ERSQ    20,,PR3
         2 002007   002145 710000 2                  TRA     s:8838

     1051     8794    3               CASE(UOPT4OPT);

     1052     8795    3                 AMR$REC$.V.UOPT#(4)=CPSL_CFPT_OPEN.V.UOPT#(4);

   8795  2 002010   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002011   000046 236000 xsym               LDQ     CPSL_CFPT_OPEN+38
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:213  
         2 002012   300024 676100                    ERQ     20,,PR3
         2 002013   001400 376003                    ANQ     768,DU
         2 002014   300024 656100                    ERSQ    20,,PR3
         2 002015   002145 710000 2                  TRA     s:8838

     1053     8796    3               CASE(UOPT5OPT);

     1054     8797    3                 AMR$REC$.V.UOPT#(5)=CPSL_CFPT_OPEN.V.UOPT#(5);

   8797  2 002016   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002017   000046 236000 xsym               LDQ     CPSL_CFPT_OPEN+38
         2 002020   300024 676100                    ERQ     20,,PR3
         2 002021   000300 376003                    ANQ     192,DU
         2 002022   300024 656100                    ERSQ    20,,PR3
         2 002023   002145 710000 2                  TRA     s:8838

     1055     8798    3               CASE(UOPT6OPT);

     1056     8799    3                 AMR$REC$.V.UOPT#(6)=CPSL_CFPT_OPEN.V.UOPT#(6);

   8799  2 002024   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002025   000046 236000 xsym               LDQ     CPSL_CFPT_OPEN+38
         2 002026   300024 676100                    ERQ     20,,PR3
         2 002027   000060 376003                    ANQ     48,DU
         2 002030   300024 656100                    ERSQ    20,,PR3
         2 002031   002145 710000 2                  TRA     s:8838

     1057     8800    3               CASE(UOPT7OPT);

     1058     8801    3                 AMR$REC$.V.UOPT#(7)=CPSL_CFPT_OPEN.V.UOPT#(7);

   8801  2 002032   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002033   000046 236000 xsym               LDQ     CPSL_CFPT_OPEN+38
         2 002034   300024 676100                    ERQ     20,,PR3
         2 002035   000014 376003                    ANQ     12,DU
         2 002036   300024 656100                    ERSQ    20,,PR3
         2 002037   002145 710000 2                  TRA     s:8838
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:214  

     1059     8802    3               CASE(UOPT8OPT);

     1060     8803    3                 AMR$REC$.V.UOPT#(8)=CPSL_CFPT_OPEN.V.UOPT#(8);

   8803  2 002040   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002041   000046 236000 xsym               LDQ     CPSL_CFPT_OPEN+38
         2 002042   300024 676100                    ERQ     20,,PR3
         2 002043   000003 376003                    ANQ     3,DU
         2 002044   300024 656100                    ERSQ    20,,PR3
         2 002045   002145 710000 2                  TRA     s:8838

     1061     8804    3               CASE(VBRDRCHROPT) ;

     1062     8805    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8805  2 002046   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002047   300006 236100                    LDQ     6,,PR3
         2 002050   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002051   002145 600000 2                  TZE     s:8838

     1063     8806    3                   THEN
     1064     8807    3                     AMR$REC$.WINDOW_->VLP$WINDOW.VBRDRCHR# = CPSL_CVLP_WINDOW.

   8807  2 002052   300006 474500                    LDP4    6,,PR3
         2 002053   000003 236000 xsym               LDQ     CPSL_CVLP_WINDOW+3
         2 002054   400003 552104                    STBQ    3,'04'O,PR4
         2 002055   002145 710000 2                  TRA     s:8838

     1065     8808    3                           VBRDRCHR# ;
     1066     8809    3               CASE(VBRDRSIZOPT) ;

     1067     8810    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8810  2 002056   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002057   300006 236100                    LDQ     6,,PR3
         2 002060   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:215  
         2 002061   002145 600000 2                  TZE     s:8838

     1068     8811    3                   THEN
     1069     8812    3                     AMR$REC$.WINDOW_->VLP$WINDOW.VBRDRSIZ# = CPSL_CVLP_WINDOW.

   8812  2 002062   300006 474500                    LDP4    6,,PR3
         2 002063   000003 236000 xsym               LDQ     CPSL_CVLP_WINDOW+3
         2 002064   400003 676100                    ERQ     3,,PR4
         2 002065   017000 376007                    ANQ     7680,DL
         2 002066   400003 656100                    ERSQ    3,,PR4
         2 002067   002145 710000 2                  TRA     s:8838

     1070     8813    3                           VBRDRSIZ# ;
     1071     8814    3               CASE(VOLACCOPT);

     1072     8815    3                 AMR$REC$.V.VOLACCESS#=CPSL_CFPT_OPEN.V.VOLACCESS#;

   8815  2 002070   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002071   000063 236000 xsym               LDQ     CPSL_CFPT_OPEN+51
         2 002072   300041 676100                    ERQ     33,,PR3
         2 002073   000007 376003                    ANQ     7,DU
         2 002074   300041 656100                    ERSQ    33,,PR3
         2 002075   002145 710000 2                  TRA     s:8838

     1073     8816    3               CASE(VOLOPT);

     1074     8817    3                 AMR$REC$.V.VOL#=CPSL_CFPT_OPEN.V.VOL#;

   8817  2 002076   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002077   000061 236000 xsym               LDQ     CPSL_CFPT_OPEN+49
         2 002100   300037 552140                    STBQ    31,'40'O,PR3
         2 002101   002145 710000 2                  TRA     s:8838

     1075     8818    3               CASE(WLENGTHOPT) ;

     1076     8819    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:216  
   8819  2 002102   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002103   300006 236100                    LDQ     6,,PR3
         2 002104   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002105   002145 600000 2                  TZE     s:8838

     1077     8820    3                   THEN
     1078     8821    3                     AMR$REC$.WINDOW_->VLP$WINDOW.LENGTH# = CPSL_CVLP_WINDOW.

   8821  2 002106   300006 474500                    LDP4    6,,PR3
         2 002107   000001 221000 xsym               LDX1    CPSL_CVLP_WINDOW+1
         2 002110   400001 741100                    STX1    1,,PR4
         2 002111   002145 710000 2                  TRA     s:8838

     1079     8822    3                           LENGTH# ;
     1080     8823    3               CASE(WWIDTHOPT) ;

     1081     8824    3                 IF AMR$REC$.WINDOW_~=ADDR(NIL)

   8824  2 002112   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002113   300006 236100                    LDQ     6,,PR3
         2 002114   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002115   002145 600000 2                  TZE     s:8838

     1082     8825    3                   THEN
     1083     8826    3                     AMR$REC$.WINDOW_->VLP$WINDOW.WIDTH# = CPSL_CVLP_WINDOW.

   8826  2 002116   300006 474500                    LDP4    6,,PR3
         2 002117   000001 721000 xsym               LXL1    CPSL_CVLP_WINDOW+1
         2 002120   400001 441100                    SXL1    1,,PR4
         2 002121   002145 710000 2                  TRA     s:8838

     1084     8827    3                           WIDTH# ;
     1085     8828    3               CASE(WASOPT);

     1086     8829    3                 IF AMR$REC$.SETSTA_~=ADDR(NIL)

   8829  2 002122   000000 473400 xsym               LDP3    CPSL_SEG3$
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:217  
         2 002123   300002 236100                    LDQ     2,,PR3
         2 002124   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002125   002145 600000 2                  TZE     s:8838

     1087     8830    3                    THEN
     1088     8831    3                       AMR$REC$.SETSTA_->AM$SETSTA.OSTA.WAS#=CPSL_CVLP_SETSTA.

   8831  2 002126   300002 474500                    LDP4    2,,PR3
         2 002127   000013 236000 xsym               LDQ     CPSL_CVLP_SETSTA+11
         2 002130   400013 676100                    ERQ     11,,PR4
         2 002131   001000 376003                    ANQ     512,DU
         2 002132   400013 656100                    ERSQ    11,,PR4
         2 002133   002145 710000 2                  TRA     s:8838

     1089     8832    3                            OSTA.WAS#;
     1090     8833    3               CASE(XTENDOPT);

     1091     8834    3                 AMR$REC$.V.XTEND#=CPSL_CFPT_OPEN.V.XTEND#;

   8834  2 002134   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002135   000060 236000 xsym               LDQ     CPSL_CFPT_OPEN+48
         2 002136   300036 676100                    ERQ     30,,PR3
         2 002137   030000 376003                    ANQ     12288,DU
         2 002140   300036 656100                    ERSQ    30,,PR3
         2 002141   002145 710000 2                  TRA     s:8838

     1092     8835    3               CASE(XTNSIZEOPT);

     1093     8836    3                 AMR$REC$.V.XTNSIZE#=CPSL_CFPT_OPEN.V.XTNSIZE#;

   8836  2 002142   000054 721000 xsym               LXL1    CPSL_CFPT_OPEN+44
         2 002143   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 002144   300032 441100                    SXL1    26,,PR3

     1094     8837    3               END CXB$PROC3;

     1095     8838    2              I=I+1;                       /*Bump index to next option*/
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:218  

   8838  2 002145   200020 054100                    AOS     I,,AUTO

     1096     8839    2           END CXB$PROC2;

   8839  2 002146   200003 470500                    LDP0    @BLK$,,AUTO
         2 002147   000000 471500                    LDP1    0,,PR0
         2 002150   100001 236100                    LDQ     1,,PR1
         2 002151   000022 772000                    QRL     18
         2 002152   200020 116100                    CMPQ    I,,AUTO
         2 002153   000040 605400 2                  TPNZ    s:8395
         2 002154   006003 710000 2                  TRA     s:9365

     1097     8840    1        ELSE
     1098     8841        /*
     1099     8842          ****     Process SET/ADJUST command options
     1100     8843        */
     1101     8844    2   CXB$PROC5: DO WHILE (I<BLK$->OUT$BLK.NSUBLKS);

   8844  2 002155   100001 236100       CXB$PROC5    LDQ     1,,PR1
         2 002156   000022 772000                    QRL     18
         2 002157   200020 116100                    CMPQ    I,,AUTO
         2 002160   006003 604400 2                  TMOZ    s:9365

     1102     8845    2              TEMP$=BLK$->OUT$BLK.SUBLK$(I);    /*Create ptr to sublk*/

   8845  2 002161   200003 470500                    LDP0    @BLK$,,AUTO
         2 002162   000000 471500                    LDP1    0,,PR0
         2 002163   200020 720100                    LXL0    I,,AUTO
         2 002164   100003 236110                    LDQ     3,X0,PR1
         2 002165   200011 756100                    STQ     TEMP$,,AUTO

     1103     8846    3              DO CASE (TEMP$->OUT$BLK.CODE) ;

   8846  2 002166   200011 471500                    LDP1    TEMP$,,AUTO
         2 002167   100000 721100                    LXL1    0,,PR1
         2 002170   000465 101003                    CMPX1   309,DU
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:219  
         2 002171   002173 602011 2                  TNC     s:8846+5,X1
         2 002172   003037 710000 2                  TRA     s:8942
         2 002173   003037 710000 2                  TRA     s:8942
         2 002174   003012 710000 2                  TRA     s:8933
         2 002175   003012 710000 2                  TRA     s:8933
         2 002176   003012 710000 2                  TRA     s:8933
         2 002177   003012 710000 2                  TRA     s:8933
         2 002200   003012 710000 2                  TRA     s:8933
         2 002201   003012 710000 2                  TRA     s:8933
         2 002202   003012 710000 2                  TRA     s:8933
         2 002203   003012 710000 2                  TRA     s:8933
         2 002204   003012 710000 2                  TRA     s:8933
         2 002205   003012 710000 2                  TRA     s:8933
         2 002206   003012 710000 2                  TRA     s:8933
         2 002207   003012 710000 2                  TRA     s:8933
         2 002210   003012 710000 2                  TRA     s:8933
         2 002211   003012 710000 2                  TRA     s:8933
         2 002212   003012 710000 2                  TRA     s:8933
         2 002213   002660 710000 2                  TRA     s:8885
         2 002214   003037 710000 2                  TRA     s:8942
         2 002215   003037 710000 2                  TRA     s:8942
         2 002216   003037 710000 2                  TRA     s:8942
         2 002217   003037 710000 2                  TRA     s:8942
         2 002220   002750 710000 2                  TRA     s:8907
         2 002221   003037 710000 2                  TRA     s:8942
         2 002222   002750 710000 2                  TRA     s:8907
         2 002223   003037 710000 2                  TRA     s:8942
         2 002224   003037 710000 2                  TRA     s:8942
         2 002225   003037 710000 2                  TRA     s:8942
         2 002226   003037 710000 2                  TRA     s:8942
         2 002227   003037 710000 2                  TRA     s:8942
         2 002230   002660 710000 2                  TRA     s:8885
         2 002231   003037 710000 2                  TRA     s:8942
         2 002232   003037 710000 2                  TRA     s:8942
         2 002233   003037 710000 2                  TRA     s:8942
         2 002234   003037 710000 2                  TRA     s:8942
         2 002235   003037 710000 2                  TRA     s:8942
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:220  
         2 002236   003037 710000 2                  TRA     s:8942
         2 002237   003037 710000 2                  TRA     s:8942
         2 002240   003037 710000 2                  TRA     s:8942
         2 002241   003037 710000 2                  TRA     s:8942
         2 002242   003037 710000 2                  TRA     s:8942
         2 002243   003037 710000 2                  TRA     s:8942
         2 002244   002660 710000 2                  TRA     s:8885
         2 002245   003037 710000 2                  TRA     s:8942
         2 002246   003037 710000 2                  TRA     s:8942
         2 002247   003037 710000 2                  TRA     s:8942
         2 002250   002660 710000 2                  TRA     s:8885
         2 002251   002660 710000 2                  TRA     s:8885
         2 002252   003037 710000 2                  TRA     s:8942
         2 002253   002660 710000 2                  TRA     s:8885
         2 002254   003037 710000 2                  TRA     s:8942
         2 002255   002660 710000 2                  TRA     s:8885
         2 002256   003037 710000 2                  TRA     s:8942
         2 002257   002660 710000 2                  TRA     s:8885
         2 002260   003037 710000 2                  TRA     s:8942
         2 002261   002660 710000 2                  TRA     s:8885
         2 002262   002660 710000 2                  TRA     s:8885
         2 002263   003037 710000 2                  TRA     s:8942
         2 002264   003037 710000 2                  TRA     s:8942
         2 002265   003037 710000 2                  TRA     s:8942
         2 002266   003037 710000 2                  TRA     s:8942
         2 002267   003037 710000 2                  TRA     s:8942
         2 002270   003037 710000 2                  TRA     s:8942
         2 002271   002674 710000 2                  TRA     s:8892
         2 002272   002660 710000 2                  TRA     s:8885
         2 002273   003037 710000 2                  TRA     s:8942
         2 002274   002660 710000 2                  TRA     s:8885
         2 002275   003037 710000 2                  TRA     s:8942
         2 002276   003037 710000 2                  TRA     s:8942
         2 002277   003037 710000 2                  TRA     s:8942
         2 002300   002674 710000 2                  TRA     s:8892
         2 002301   002660 710000 2                  TRA     s:8885
         2 002302   003037 710000 2                  TRA     s:8942
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:221  
         2 002303   002660 710000 2                  TRA     s:8885
         2 002304   002660 710000 2                  TRA     s:8885
         2 002305   003037 710000 2                  TRA     s:8942
         2 002306   002660 710000 2                  TRA     s:8885
         2 002307   003037 710000 2                  TRA     s:8942
         2 002310   003037 710000 2                  TRA     s:8942
         2 002311   002660 710000 2                  TRA     s:8885
         2 002312   002660 710000 2                  TRA     s:8885
         2 002313   003037 710000 2                  TRA     s:8942
         2 002314   002660 710000 2                  TRA     s:8885
         2 002315   002660 710000 2                  TRA     s:8885
         2 002316   002660 710000 2                  TRA     s:8885
         2 002317   002674 710000 2                  TRA     s:8892
         2 002320   003037 710000 2                  TRA     s:8942
         2 002321   002660 710000 2                  TRA     s:8885
         2 002322   003037 710000 2                  TRA     s:8942
         2 002323   003037 710000 2                  TRA     s:8942
         2 002324   002674 710000 2                  TRA     s:8892
         2 002325   003037 710000 2                  TRA     s:8942
         2 002326   002674 710000 2                  TRA     s:8892
         2 002327   002660 710000 2                  TRA     s:8885
         2 002330   002660 710000 2                  TRA     s:8885
         2 002331   003037 710000 2                  TRA     s:8942
         2 002332   003037 710000 2                  TRA     s:8942
         2 002333   002660 710000 2                  TRA     s:8885
         2 002334   003037 710000 2                  TRA     s:8942
         2 002335   002750 710000 2                  TRA     s:8907
         2 002336   002660 710000 2                  TRA     s:8885
         2 002337   003037 710000 2                  TRA     s:8942
         2 002340   003037 710000 2                  TRA     s:8942
         2 002341   002660 710000 2                  TRA     s:8885
         2 002342   003037 710000 2                  TRA     s:8942
         2 002343   002660 710000 2                  TRA     s:8885
         2 002344   002660 710000 2                  TRA     s:8885
         2 002345   002660 710000 2                  TRA     s:8885
         2 002346   003037 710000 2                  TRA     s:8942
         2 002347   003037 710000 2                  TRA     s:8942
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:222  
         2 002350   002707 710000 2                  TRA     s:8897
         2 002351   003037 710000 2                  TRA     s:8942
         2 002352   002660 710000 2                  TRA     s:8885
         2 002353   002707 710000 2                  TRA     s:8897
         2 002354   003037 710000 2                  TRA     s:8942
         2 002355   002660 710000 2                  TRA     s:8885
         2 002356   002660 710000 2                  TRA     s:8885
         2 002357   003037 710000 2                  TRA     s:8942
         2 002360   003037 710000 2                  TRA     s:8942
         2 002361   003037 710000 2                  TRA     s:8942
         2 002362   003037 710000 2                  TRA     s:8942
         2 002363   003037 710000 2                  TRA     s:8942
         2 002364   003037 710000 2                  TRA     s:8942
         2 002365   003037 710000 2                  TRA     s:8942
         2 002366   003037 710000 2                  TRA     s:8942
         2 002367   003037 710000 2                  TRA     s:8942
         2 002370   003037 710000 2                  TRA     s:8942
         2 002371   003037 710000 2                  TRA     s:8942
         2 002372   003037 710000 2                  TRA     s:8942
         2 002373   003037 710000 2                  TRA     s:8942
         2 002374   002660 710000 2                  TRA     s:8885
         2 002375   003037 710000 2                  TRA     s:8942
         2 002376   002750 710000 2                  TRA     s:8907
         2 002377   003037 710000 2                  TRA     s:8942
         2 002400   003037 710000 2                  TRA     s:8942
         2 002401   002660 710000 2                  TRA     s:8885
         2 002402   003037 710000 2                  TRA     s:8942
         2 002403   002660 710000 2                  TRA     s:8885
         2 002404   003037 710000 2                  TRA     s:8942
         2 002405   003037 710000 2                  TRA     s:8942
         2 002406   003037 710000 2                  TRA     s:8942
         2 002407   003037 710000 2                  TRA     s:8942
         2 002410   003037 710000 2                  TRA     s:8942
         2 002411   003037 710000 2                  TRA     s:8942
         2 002412   003037 710000 2                  TRA     s:8942
         2 002413   003037 710000 2                  TRA     s:8942
         2 002414   003037 710000 2                  TRA     s:8942
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:223  
         2 002415   003037 710000 2                  TRA     s:8942
         2 002416   003037 710000 2                  TRA     s:8942
         2 002417   003037 710000 2                  TRA     s:8942
         2 002420   003037 710000 2                  TRA     s:8942
         2 002421   003037 710000 2                  TRA     s:8942
         2 002422   003037 710000 2                  TRA     s:8942
         2 002423   003037 710000 2                  TRA     s:8942
         2 002424   003037 710000 2                  TRA     s:8942
         2 002425   003037 710000 2                  TRA     s:8942
         2 002426   003037 710000 2                  TRA     s:8942
         2 002427   003037 710000 2                  TRA     s:8942
         2 002430   003037 710000 2                  TRA     s:8942
         2 002431   003037 710000 2                  TRA     s:8942
         2 002432   003037 710000 2                  TRA     s:8942
         2 002433   003037 710000 2                  TRA     s:8942
         2 002434   003037 710000 2                  TRA     s:8942
         2 002435   003037 710000 2                  TRA     s:8942
         2 002436   003037 710000 2                  TRA     s:8942
         2 002437   003037 710000 2                  TRA     s:8942
         2 002440   003037 710000 2                  TRA     s:8942
         2 002441   003037 710000 2                  TRA     s:8942
         2 002442   003037 710000 2                  TRA     s:8942
         2 002443   003037 710000 2                  TRA     s:8942
         2 002444   003037 710000 2                  TRA     s:8942
         2 002445   003037 710000 2                  TRA     s:8942
         2 002446   003037 710000 2                  TRA     s:8942
         2 002447   003037 710000 2                  TRA     s:8942
         2 002450   003037 710000 2                  TRA     s:8942
         2 002451   003037 710000 2                  TRA     s:8942
         2 002452   003037 710000 2                  TRA     s:8942
         2 002453   003037 710000 2                  TRA     s:8942
         2 002454   003037 710000 2                  TRA     s:8942
         2 002455   003037 710000 2                  TRA     s:8942
         2 002456   003037 710000 2                  TRA     s:8942
         2 002457   003037 710000 2                  TRA     s:8942
         2 002460   003037 710000 2                  TRA     s:8942
         2 002461   003037 710000 2                  TRA     s:8942
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:224  
         2 002462   003037 710000 2                  TRA     s:8942
         2 002463   003037 710000 2                  TRA     s:8942
         2 002464   003037 710000 2                  TRA     s:8942
         2 002465   003037 710000 2                  TRA     s:8942
         2 002466   003037 710000 2                  TRA     s:8942
         2 002467   003037 710000 2                  TRA     s:8942
         2 002470   003037 710000 2                  TRA     s:8942
         2 002471   003037 710000 2                  TRA     s:8942
         2 002472   003037 710000 2                  TRA     s:8942
         2 002473   003037 710000 2                  TRA     s:8942
         2 002474   003037 710000 2                  TRA     s:8942
         2 002475   003037 710000 2                  TRA     s:8942
         2 002476   003037 710000 2                  TRA     s:8942
         2 002477   003037 710000 2                  TRA     s:8942
         2 002500   003037 710000 2                  TRA     s:8942
         2 002501   003037 710000 2                  TRA     s:8942
         2 002502   003037 710000 2                  TRA     s:8942
         2 002503   003037 710000 2                  TRA     s:8942
         2 002504   003037 710000 2                  TRA     s:8942
         2 002505   002660 710000 2                  TRA     s:8885
         2 002506   003037 710000 2                  TRA     s:8942
         2 002507   003037 710000 2                  TRA     s:8942
         2 002510   003037 710000 2                  TRA     s:8942
         2 002511   003037 710000 2                  TRA     s:8942
         2 002512   003037 710000 2                  TRA     s:8942
         2 002513   003037 710000 2                  TRA     s:8942
         2 002514   003037 710000 2                  TRA     s:8942
         2 002515   003037 710000 2                  TRA     s:8942
         2 002516   003037 710000 2                  TRA     s:8942
         2 002517   003037 710000 2                  TRA     s:8942
         2 002520   003037 710000 2                  TRA     s:8942
         2 002521   003037 710000 2                  TRA     s:8942
         2 002522   003037 710000 2                  TRA     s:8942
         2 002523   003037 710000 2                  TRA     s:8942
         2 002524   003037 710000 2                  TRA     s:8942
         2 002525   003037 710000 2                  TRA     s:8942
         2 002526   003037 710000 2                  TRA     s:8942
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:225  
         2 002527   003037 710000 2                  TRA     s:8942
         2 002530   003037 710000 2                  TRA     s:8942
         2 002531   003037 710000 2                  TRA     s:8942
         2 002532   003037 710000 2                  TRA     s:8942
         2 002533   003037 710000 2                  TRA     s:8942
         2 002534   003037 710000 2                  TRA     s:8942
         2 002535   003037 710000 2                  TRA     s:8942
         2 002536   003037 710000 2                  TRA     s:8942
         2 002537   003037 710000 2                  TRA     s:8942
         2 002540   003037 710000 2                  TRA     s:8942
         2 002541   003037 710000 2                  TRA     s:8942
         2 002542   003037 710000 2                  TRA     s:8942
         2 002543   003037 710000 2                  TRA     s:8942
         2 002544   003037 710000 2                  TRA     s:8942
         2 002545   003037 710000 2                  TRA     s:8942
         2 002546   003037 710000 2                  TRA     s:8942
         2 002547   003037 710000 2                  TRA     s:8942
         2 002550   003037 710000 2                  TRA     s:8942
         2 002551   003037 710000 2                  TRA     s:8942
         2 002552   003037 710000 2                  TRA     s:8942
         2 002553   003037 710000 2                  TRA     s:8942
         2 002554   003037 710000 2                  TRA     s:8942
         2 002555   003037 710000 2                  TRA     s:8942
         2 002556   003037 710000 2                  TRA     s:8942
         2 002557   003037 710000 2                  TRA     s:8942
         2 002560   003037 710000 2                  TRA     s:8942
         2 002561   003037 710000 2                  TRA     s:8942
         2 002562   003037 710000 2                  TRA     s:8942
         2 002563   003037 710000 2                  TRA     s:8942
         2 002564   003037 710000 2                  TRA     s:8942
         2 002565   003037 710000 2                  TRA     s:8942
         2 002566   003037 710000 2                  TRA     s:8942
         2 002567   003037 710000 2                  TRA     s:8942
         2 002570   003037 710000 2                  TRA     s:8942
         2 002571   003037 710000 2                  TRA     s:8942
         2 002572   003037 710000 2                  TRA     s:8942
         2 002573   003037 710000 2                  TRA     s:8942
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:226  
         2 002574   003037 710000 2                  TRA     s:8942
         2 002575   003037 710000 2                  TRA     s:8942
         2 002576   003037 710000 2                  TRA     s:8942
         2 002577   003037 710000 2                  TRA     s:8942
         2 002600   003037 710000 2                  TRA     s:8942
         2 002601   003037 710000 2                  TRA     s:8942
         2 002602   003037 710000 2                  TRA     s:8942
         2 002603   003037 710000 2                  TRA     s:8942
         2 002604   003037 710000 2                  TRA     s:8942
         2 002605   003037 710000 2                  TRA     s:8942
         2 002606   003037 710000 2                  TRA     s:8942
         2 002607   003037 710000 2                  TRA     s:8942
         2 002610   003037 710000 2                  TRA     s:8942
         2 002611   003037 710000 2                  TRA     s:8942
         2 002612   003037 710000 2                  TRA     s:8942
         2 002613   003037 710000 2                  TRA     s:8942
         2 002614   003037 710000 2                  TRA     s:8942
         2 002615   003037 710000 2                  TRA     s:8942
         2 002616   003037 710000 2                  TRA     s:8942
         2 002617   003037 710000 2                  TRA     s:8942
         2 002620   003037 710000 2                  TRA     s:8942
         2 002621   003037 710000 2                  TRA     s:8942
         2 002622   003037 710000 2                  TRA     s:8942
         2 002623   003037 710000 2                  TRA     s:8942
         2 002624   003037 710000 2                  TRA     s:8942
         2 002625   003037 710000 2                  TRA     s:8942
         2 002626   003037 710000 2                  TRA     s:8942
         2 002627   003037 710000 2                  TRA     s:8942
         2 002630   003037 710000 2                  TRA     s:8942
         2 002631   003037 710000 2                  TRA     s:8942
         2 002632   003037 710000 2                  TRA     s:8942
         2 002633   003037 710000 2                  TRA     s:8942
         2 002634   003037 710000 2                  TRA     s:8942
         2 002635   003037 710000 2                  TRA     s:8942
         2 002636   003037 710000 2                  TRA     s:8942
         2 002637   003037 710000 2                  TRA     s:8942
         2 002640   003037 710000 2                  TRA     s:8942
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:227  
         2 002641   003037 710000 2                  TRA     s:8942
         2 002642   003037 710000 2                  TRA     s:8942
         2 002643   003037 710000 2                  TRA     s:8942
         2 002644   003037 710000 2                  TRA     s:8942
         2 002645   003037 710000 2                  TRA     s:8942
         2 002646   003037 710000 2                  TRA     s:8942
         2 002647   003037 710000 2                  TRA     s:8942
         2 002650   003037 710000 2                  TRA     s:8942
         2 002651   003037 710000 2                  TRA     s:8942
         2 002652   003037 710000 2                  TRA     s:8942
         2 002653   003037 710000 2                  TRA     s:8942
         2 002654   003037 710000 2                  TRA     s:8942
         2 002655   003037 710000 2                  TRA     s:8942
         2 002656   003037 710000 2                  TRA     s:8942
         2 002657   002660 710000 2                  TRA     s:8885

     1104     8847    3               CASE (DCBOPT,

     1105     8848    3                       BLKLOPT,
     1106     8849    3                      COPIESOPT,
     1107     8850    3                       DVFCOPT,
     1108     8851    3                       EOFTIMEOPT,
     1109     8852    3                       EVENTOPT,
     1110     8853    3                       EXPIREOPT,
     1111     8854    3                       FIDOPT,
     1112     8855    3                       FORMOPT,
     1113     8856    3                       FSNOPT,
     1114     8857    3                       GHSTACSOPT,
     1115     8858    3                       HDRHOPT,
     1116     8859    3                       INDENTOPT,
     1117     8860    3                       INITVALUEOPT,
     1118     8861    3                       IXTNSIZEOPT,
     1119     8862    3                       KEYLOPT,
     1120     8863    3                       KEYXOPT,
     1121     8864    3                       LINESOPT,
     1122     8865    3                       LRDL0OPT,
     1123     8866    3                       LSLIDEOPT,
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:228  
     1124     8867    3                       MARGINOPT,
     1125     8868    3                       MAXVOLOPT,
     1126     8869    3                       MINPHYSOPT,
     1127     8870    3                       NRECSOPT,
     1128     8871    3                       OSTAT_NAME,
     1129     8872    3                       PAGECOLOPT,
     1130     8873    3                       PHYSICALOPT,
     1131     8874    3                       PROFILEOPT,
     1132     8875    3                       RECLOPT,
     1133     8876    3                       SEEDOPT,
     1134     8877    3                       SEGSIZEOPT,
     1135     8878    3                       SEQCOLOPT,
     1136     8879    3                       SEQIDOPT,
     1137     8880    3                       SPAREOPT,
     1138     8881    3                       TITLEOPT,
     1139     8882    3                       TYPEOPT,
     1140     8883    3                       VOLOPT,
     1141     8884    3                       XTNSIZEOPT) ;
     1142     8885    3                     CALL CXX$SET(TEMP$->OUT$BLK, GETCMD,CPSL_PARAM,J) ;

   8885  2 002660   200021 633500                    EPPR3   J,,AUTO
         2 002661   200275 453500                    STP3    BUFSIZC+5,,AUTO
         2 002662   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002663   200274 756100                    STQ     BUFSIZC+4,,AUTO
         2 002664   200005 236100                    LDQ     @GETCMD,,AUTO
         2 002665   200011 235100                    LDA     TEMP$,,AUTO
         2 002666   200272 757100                    STAQ    BUFSIZC+2,,AUTO
         2 002667   200272 630500                    EPPR0   BUFSIZC+2,,AUTO
         2 002670   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 002671   000000 701000 xent               TSX1    CXX$SET
         2 002672   000000 011000                    NOP     0
         2 002673   003037 710000 2                  TRA     s:8942

     1143     8886
     1144     8887    3               CASE (IMSGTYPOPT,

     1145     8888    3                     ISTATIONOPT,
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:229  
     1146     8889    3                     MYSTATIONOPT,
     1147     8890    3                     OMSGTYPOPT,
     1148     8891    3                     OSTATIONOPT) ;
     1149     8892    3                 CALL CXX$SET(TEMP$->OUT$BLK.SUBLK$(0)->P$S,

   8892  2 002674   100003 473500                    LDP3    3,,PR1
         2 002675   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002676   200274 756100                    STQ     BUFSIZC+4,,AUTO
         2 002677   200005 236100                    LDQ     @GETCMD,,AUTO
         2 002700   200273 756100                    STQ     BUFSIZC+3,,AUTO
         2 002701   200272 453500                    STP3    BUFSIZC+2,,AUTO
         2 002702   200272 630500                    EPPR0   BUFSIZC+2,,AUTO
         2 002703   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 002704   000000 701000 xent               TSX1    CXX$SET
         2 002705   000000 011000                    NOP     0
         2 002706   003037 710000 2                  TRA     s:8942

     1150     8893    3                               GETCMD,CPSL_PARAM) ;
     1151     8894
     1152     8895    3               CASE(SNOPT,

     1153     8896    3                     TABOPT) ;
     1154     8897    3                 CALL CXX$SET(TEMP$->OUT$BLK, GETCMD, CPSL_PARAM) ;

   8897  2 002707   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002710   200274 756100                    STQ     BUFSIZC+4,,AUTO
         2 002711   200005 236100                    LDQ     @GETCMD,,AUTO
         2 002712   200011 235100                    LDA     TEMP$,,AUTO
         2 002713   200272 757100                    STAQ    BUFSIZC+2,,AUTO
         2 002714   200272 630500                    EPPR0   BUFSIZC+2,,AUTO
         2 002715   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 002716   000000 701000 xent               TSX1    CXX$SET
         2 002717   000000 011000                    NOP     0

     1155     8898    4                 DO J=0 TO TEMP$->OUT$BLK.NSUBLKS-1 ;

   8898  2 002720   200021 450100                    STZ     J,,AUTO
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:230  
         2 002721   002742 710000 2                  TRA     s:8901+1

     1156     8899    4                   PTR$=TEMP$->OUT$BLK.SUBLK$(J) ;

   8899  2 002722   200011 470500                    LDP0    TEMP$,,AUTO
         2 002723   200021 720100                    LXL0    J,,AUTO
         2 002724   000003 236110                    LDQ     3,X0,PR0
         2 002725   200012 756100                    STQ     PTR$,,AUTO

     1157     8900    4                   CALL CXX$SET(PTR$->P$S, GETCMD, CPSL_PARAM, TVAL) ;

   8900  2 002726   200022 631500                    EPPR1   TVAL,,AUTO
         2 002727   200275 451500                    STP1    BUFSIZC+5,,AUTO
         2 002730   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002731   200274 756100                    STQ     BUFSIZC+4,,AUTO
         2 002732   200005 236100                    LDQ     @GETCMD,,AUTO
         2 002733   200012 235100                    LDA     PTR$,,AUTO
         2 002734   200272 757100                    STAQ    BUFSIZC+2,,AUTO
         2 002735   200272 630500                    EPPR0   BUFSIZC+2,,AUTO
         2 002736   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 002737   000000 701000 xent               TSX1    CXX$SET
         2 002740   000000 011000                    NOP     0

     1158     8901    4                 END ; /* Do J */

   8901  2 002741   200021 054100                    AOS     J,,AUTO
         2 002742   200011 470500                    LDP0    TEMP$,,AUTO
         2 002743   000001 236100                    LDQ     1,,PR0
         2 002744   000022 772000                    QRL     18
         2 002745   200021 116100                    CMPQ    J,,AUTO
         2 002746   002722 605400 2                  TPNZ    s:8899
         2 002747   003037 710000 2                  TRA     s:8942

     1159     8902
     1160     8903    3               CASE(ACCESSOPT,

     1161     8904    3                     READOPT,
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:231  
     1162     8905    3                     WRITEOPT,
     1163     8906    3                     ACSVEHOPT) ;
     1164     8907    3                 PTR$ = TEMP$->OUT$BLK.SUBLK$(0) ;

   8907  2 002750   100003 236100                    LDQ     3,,PR1
         2 002751   200012 756100                    STQ     PTR$,,AUTO

     1165     8908    3                 IF PTR$->OUT$BLK.NSUBLKS ~= 0

   8908  2 002752   200012 473500                    LDP3    PTR$,,AUTO
         2 002753   300001 222100                    LDX2    1,,PR3
         2 002754   003037 600000 2                  TZE     s:8942

     1166     8909    3                   THEN
     1167     8910    4                     DO J=0 TO PTR$->OUT$BLK.NSUBLKS-1 ;

   8910  2 002755   200021 450100                    STZ     J,,AUTO
         2 002756   003004 710000 2                  TRA     s:8916+1

     1168     8911    5                       DO CASE(PTR$->OUT$BLK.SUBLK$(J)->OUT$BLK.CODE) ;

   8911  2 002757   200012 470500                    LDP0    PTR$,,AUTO
         2 002760   200021 720100                    LXL0    J,,AUTO
         2 002761   000003 471510                    LDP1    3,X0,PR0
         2 002762   100000 236100                    LDQ     0,,PR1
         2 002763   777777 376007                    ANQ     -1,DL
         2 002764   000310 136007                    SBLQ    200,DL
         2 002765   000002 116007                    CMPQ    2,DL
         2 002766   002770 602006 2                  TNC     s:8911+9,QL
         2 002767   003003 710000 2                  TRA     s:8916
         2 002770   002772 710000 2                  TRA     s:8913
         2 002771   002772 710000 2                  TRA     s:8913

     1169     8912    5                         CASE(ACC_ACCT, ACS_VEH) ;

     1170     8913    5                           CALL CXX$SET(PTR$->OUT$BLK.SUBLK$(J)->P$S,

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:232  
   8913  2 002772   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002773   200274 756100                    STQ     BUFSIZC+4,,AUTO
         2 002774   200005 236100                    LDQ     @GETCMD,,AUTO
         2 002775   200273 756100                    STQ     BUFSIZC+3,,AUTO
         2 002776   200272 451500                    STP1    BUFSIZC+2,,AUTO
         2 002777   200272 630500                    EPPR0   BUFSIZC+2,,AUTO
         2 003000   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 003001   000000 701000 xent               TSX1    CXX$SET
         2 003002   000000 011000                    NOP     0

     1171     8914    5                                         GETCMD, CPSL_PARAM) ;
     1172     8915    5                       END ; /* Do Case */

     1173     8916    4                     END ; /* Do J */

   8916  2 003003   200021 054100                    AOS     J,,AUTO
         2 003004   200012 470500                    LDP0    PTR$,,AUTO
         2 003005   000001 236100                    LDQ     1,,PR0
         2 003006   000022 772000                    QRL     18
         2 003007   200021 116100                    CMPQ    J,,AUTO
         2 003010   002757 605400 2                  TPNZ    s:8911
         2 003011   003037 710000 2                  TRA     s:8942

     1174     8917
     1175     8918    3               CASE( BTMBRDROPT,

     1176     8919    3                     FWINDOWOPT,
     1177     8920    3                     HBRDRCHROPT,
     1178     8921    3                     HBRDRSIZOPT,
     1179     8922    3                     LFTBRDROPT,
     1180     8923    3                     MINLENGTHOPT,
     1181     8924    3                     MINWIDTHOPT,
     1182     8925    3                     OPTIONALOPT,
     1183     8926    3                     POSITIONOPT,
     1184     8927    3                     RHTBRDROPT,
     1185     8928    3                     TOPBRDROPT,
     1186     8929    3                     VBRDRCHROPT,
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:233  
     1187     8930    3                     VBRDRSIZOPT,
     1188     8931    3                     WLENGTHOPT,
     1189     8932    3                     WWIDTHOPT) ;
     1190     8933    3                   IF AMR$REC$.WINDOW_ = ADDR(NIL)

   8933  2 003012   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 003013   300006 236100                    LDQ     6,,PR3
         2 003014   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 003015   003022 601000 2                  TNZ     s:8936

     1191     8934    3                     THEN
     1192     8935    3                       CALL BLD_VLP_AREA(%WINDOW) ALTRET(CXB$PROC55);

   8935  2 003016   000001 236000 3                  LDQ     1
         2 003017   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 003020   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 003021   006013 702000 2                  TSX2    CXB$PROC55

     1193     8936    3                   CALL CXB$WINDOW_OPTS(TEMP$, AMR$REC$.WINDOW_,GETCMD,

   8936  2 003022   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 003023   200005 235100                    LDA     @GETCMD,,AUTO
         2 003024   200274 757100                    STAQ    BUFSIZC+4,,AUTO
         2 003025   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 003026   000006 036003                    ADLQ    6,DU
         2 003027   200273 756100                    STQ     BUFSIZC+3,,AUTO
         2 003030   200011 630500                    EPPR0   TEMP$,,AUTO
         2 003031   200272 450500                    STP0    BUFSIZC+2,,AUTO
         2 003032   200272 630500                    EPPR0   BUFSIZC+2,,AUTO
         2 003033   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 003034   000000 701000 xent               TSX1    CXB$WINDOW_OPTS
         2 003035   000000 011000                    NOP     0
         2 003036   003037 710000 2                  TRA     s:8942

     1194     8937    3                                         CPSL_PARAM) ;
     1195     8938
     1196     8939    3               CASE (ELSE) ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:234  

     1197     8940
     1198     8941    3              END ; /* Do Case */

     1199     8942    2             CALL CHK_IF_ASN_OK(TEMP$) ALTRET(PROCOPTRET) ;

   8942  2 003037   200011 630500                    EPPR0   TEMP$,,AUTO
         2 003040   200257 450500                    STP0    FID_WSN+3,,AUTO
         2 003041   007104 701000 2                  TSX1    CHK_IF_ASN_OK
         2 003042   006020 702000 2                  TSX2    PROCOPTRET

     1200     8943    2             IF CPSL_PARAM.FLAGS.VERIFY_ONLY

   8943  2 003043   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 003044   000001 234100                    SZN     1,,PR0
         2 003045   003056 605000 2                  TPL     CXB$PROC10

     1201     8944    2               THEN
     1202     8945    2                 IF CPSL_PARAM.ERRCODE ~= %NO#

   8945  2 003046   000002 235100                    LDA     2,,PR0
         2 003047   005774 600000 2                  TZE     s:9363

     1203     8946    2                   THEN
     1204     8947    2                     I = BLK$->OUT$BLK.NSUBLKS ;

   8947  2 003050   200003 471500                    LDP1    @BLK$,,AUTO
         2 003051   100000 473500                    LDP3    0,,PR1
         2 003052   300001 236100                    LDQ     1,,PR3
         2 003053   000022 772000                    QRL     18
         2 003054   200020 756100                    STQ     I,,AUTO
         2 003055   005774 710000 2                  TRA     s:9363

     1205     8948    2                   ELSE ;
     1206     8949    2               ELSE
     1207     8950    3   CXB$PROC10: DO CASE(TEMP$->OUT$BLK.CODE);

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:235  
   8950  2 003056   200011 471500       CXB$PROC10   LDP1    TEMP$,,AUTO
         2 003057   100000 236100                    LDQ     0,,PR1
         2 003060   777777 376007                    ANQ     -1,DL
         2 003061   000025 136007                    SBLQ    21,DL
         2 003062   000164 116007                    CMPQ    116,DL
         2 003063   003065 602006 2                  TNC     CXB$PROC10+7,QL
         2 003064   005774 710000 2                  TRA     s:9363
         2 003065   003251 710000 2                  TRA     s:8952
         2 003066   003265 710000 2                  TRA     s:8955
         2 003067   003272 710000 2                  TRA     s:8957
         2 003070   003306 710000 2                  TRA     s:8960
         2 003071   003326 710000 2                  TRA     s:8963
         2 003072   003346 710000 2                  TRA     s:8966
         2 003073   003365 710000 2                  TRA     s:8970
         2 003074   003405 710000 2                  TRA     s:8973
         2 003075   003417 710000 2                  TRA     s:8975
         2 003076   003427 710000 2                  TRA     s:8979
         2 003077   003441 710000 2                  TRA     s:8981
         2 003100   005774 710000 2                  TRA     s:9363
         2 003101   003453 710000 2                  TRA     s:8984
         2 003102   003472 710000 2                  TRA     s:8988
         2 003103   003504 710000 2                  TRA     s:8990
         2 003104   003516 710000 2                  TRA     s:8992
         2 003105   003530 710000 2                  TRA     s:8994
         2 003106   003550 710000 2                  TRA     s:8997
         2 003107   003555 710000 2                  TRA     s:8999
         2 003110   003575 710000 2                  TRA     s:9002
         2 003111   003602 710000 2                  TRA     s:9004
         2 003112   003632 710000 2                  TRA     s:9011
         2 003113   003666 710000 2                  TRA     s:9020
         2 003114   003706 710000 2                  TRA     s:9023
         2 003115   003726 710000 2                  TRA     s:9026
         2 003116   003737 710000 2                  TRA     s:9029
         2 003117   003743 710000 2                  TRA     s:9031
         2 003120   003753 710000 2                  TRA     s:9033
         2 003121   005774 710000 2                  TRA     s:9363
         2 003122   003774 710000 2                  TRA     s:9040
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:236  
         2 003123   004017 710000 2                  TRA     s:9044
         2 003124   004075 710000 2                  TRA     s:9068
         2 003125   004101 710000 2                  TRA     s:9070
         2 003126   004107 710000 2                  TRA     s:9072
         2 003127   004115 710000 2                  TRA     s:9075
         2 003130   005774 710000 2                  TRA     s:9363
         2 003131   005774 710000 2                  TRA     s:9363
         2 003132   005774 710000 2                  TRA     s:9363
         2 003133   004201 710000 2                  TRA     s:9093
         2 003134   004213 710000 2                  TRA     s:9095
         2 003135   004233 710000 2                  TRA     s:9098
         2 003136   004252 710000 2                  TRA     s:9101
         2 003137   004115 710000 2                  TRA     s:9075
         2 003140   004272 710000 2                  TRA     s:9105
         2 003141   004311 710000 2                  TRA     s:9108
         2 003142   004322 710000 2                  TRA     s:9111
         2 003143   004322 710000 2                  TRA     s:9111
         2 003144   004330 710000 2                  TRA     s:9113
         2 003145   004342 710000 2                  TRA     s:9115
         2 003146   004362 710000 2                  TRA     s:9119
         2 003147   004366 710000 2                  TRA     s:9121
         2 003150   004400 710000 2                  TRA     s:9123
         2 003151   004405 710000 2                  TRA     s:9125
         2 003152   004427 710000 2                  TRA     s:9132
         2 003153   004411 710000 2                  TRA     s:9127
         2 003154   004415 710000 2                  TRA     s:9129
         2 003155   005774 710000 2                  TRA     s:9363
         2 003156   004443 710000 2                  TRA     s:9135
         2 003157   004447 710000 2                  TRA     s:9137
         2 003160   004453 710000 2                  TRA     s:9139
         2 003161   004465 710000 2                  TRA     s:9145
         2 003162   004514 710000 2                  TRA     s:9154
         2 003163   004521 710000 2                  TRA     s:9156
         2 003164   004532 710000 2                  TRA     s:9159
         2 003165   004552 710000 2                  TRA     s:9163
         2 003166   004572 710000 2                  TRA     s:9166
         2 003167   004576 710000 2                  TRA     s:9168
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:237  
         2 003170   004616 710000 2                  TRA     s:9171
         2 003171   004635 710000 2                  TRA     s:9174
         2 003172   004655 710000 2                  TRA     s:9178
         2 003173   004663 710000 2                  TRA     s:9180
         2 003174   004115 710000 2                  TRA     s:9075
         2 003175   004703 710000 2                  TRA     s:9184
         2 003176   004737 710000 2                  TRA     s:9193
         2 003177   004737 710000 2                  TRA     s:9193
         2 003200   004714 710000 2                  TRA     s:9187
         2 003201   004745 710000 2                  TRA     s:9195
         2 003202   003251 710000 2                  TRA     s:8952
         2 003203   004757 710000 2                  TRA     s:9197
         2 003204   004763 710000 2                  TRA     s:9200
         2 003205   005037 710000 2                  TRA     s:9211
         2 003206   005051 710000 2                  TRA     s:9213
         2 003207   005076 710000 2                  TRA     s:9222
         2 003210   005111 710000 2                  TRA     s:9226
         2 003211   005122 710000 2                  TRA     s:9229
         2 003212   005133 710000 2                  TRA     s:9232
         2 003213   005150 710000 2                  TRA     s:9235
         2 003214   005162 710000 2                  TRA     s:9237
         2 003215   005172 710000 2                  TRA     s:9242
         2 003216   005344 710000 2                  TRA     s:9283
         2 003217   005356 710000 2                  TRA     s:9285
         2 003220   005362 710000 2                  TRA     s:9289
         2 003221   005451 710000 2                  TRA     s:9305
         2 003222   005463 710000 2                  TRA     s:9307
         2 003223   005557 710000 2                  TRA     s:9331
         2 003224   005601 710000 2                  TRA     s:9335
         2 003225   005601 710000 2                  TRA     s:9335
         2 003226   005774 710000 2                  TRA     s:9363
         2 003227   005570 710000 2                  TRA     s:9333
         2 003230   005607 710000 2                  TRA     s:9337
         2 003231   005621 710000 2                  TRA     s:9339
         2 003232   005633 710000 2                  TRA     s:9341
         2 003233   005645 710000 2                  TRA     s:9343
         2 003234   005657 710000 2                  TRA     s:9345
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:238  
         2 003235   005671 710000 2                  TRA     s:9347
         2 003236   005703 710000 2                  TRA     s:9349
         2 003237   005715 710000 2                  TRA     s:9351
         2 003240   005727 710000 2                  TRA     s:9353
         2 003241   005774 710000 2                  TRA     s:9363
         2 003242   005737 710000 2                  TRA     s:9356
         2 003243   003251 710000 2                  TRA     s:8952
         2 003244   005774 710000 2                  TRA     s:9363
         2 003245   005757 710000 2                  TRA     s:9359
         2 003246   005771 710000 2                  TRA     s:9361
         2 003247   003353 710000 2                  TRA     s:8968
         2 003250   003465 710000 2                  TRA     s:8986

     1208     8951    3               CASE(ACCESSOPT,READOPT,WRITEOPT);

     1209     8952    3                 CALL BLD_ACCESS_VLP(AMR$REC$.ACCESS_) ALTRET(CXB$PROC55);

   8952  2 003251   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 003252   000005 036003                    ADLQ    5,DU
         2 003253   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 003254   006024 701000 2                  TSX1    BLD_ACCESS_VLP
         2 003255   006013 702000 2                  TSX2    CXB$PROC55

     1210     8953    3                AMR$REC$.ACCESS_->VLP$ATTR.SIZE#=(AMR$REC$.ACCESS_->VLP$ATTR.SIZE#+3)/
              8953                          4;

   8953  2 003256   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 003257   000005 471500                    LDP1    5,,PR0
         2 003260   100000 236100                    LDQ     0,,PR1
         2 003261   000003 036007                    ADLQ    3,DL
         2 003262   000002 772000                    QRL     2
         2 003263   100000 756100                    STQ     0,,PR1
         2 003264   005774 710000 2                  TRA     s:9363

     1211     8954    3               CASE(ACSOPT);

     1212     8955    3                 AMR$REC$.V.ACS#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:239  

   8955  2 003265   100003 473500                    LDP3    3,,PR1
         2 003266   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003267   300000 236100                    LDQ     0,,PR3
         2 003270   400024 552104                    STBQ    20,'04'O,PR4
         2 003271   005774 710000 2                  TRA     s:9363

     1213     8956    3               CASE(ACSVEHOPT);

     1214     8957    3                 CALL BLD_ACCESS_VLP(AMR$REC$.ACSVEH_) ALTRET(CXB$PROC55);

   8957  2 003272   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 003273   000006 036003                    ADLQ    6,DU
         2 003274   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 003275   006024 701000 2                  TSX1    BLD_ACCESS_VLP
         2 003276   006013 702000 2                  TSX2    CXB$PROC55

     1215     8958    3                AMR$REC$.ACSVEH_->VLP$ATTR.SIZE#=(AMR$REC$.ACSVEH_->VLP$ATTR.SIZE#+3)/
              8958                          4;

   8958  2 003277   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 003300   000006 471500                    LDP1    6,,PR0
         2 003301   100000 236100                    LDQ     0,,PR1
         2 003302   000003 036007                    ADLQ    3,DL
         2 003303   000002 772000                    QRL     2
         2 003304   100000 756100                    STQ     0,,PR1
         2 003305   005774 710000 2                  TRA     s:9363

     1216     8959    3               CASE(ALLDCBSOPT);

     1217     8960    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);

   8960  2 003306   000002 236000 3                  LDQ     2
         2 003307   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 003310   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 003311   006013 702000 2                  TSX2    CXB$PROC55

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:240  
     1218     8961    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.ALLDCBS# = BINBIT(TEMP$->OUT$BLK.
              8961                          SUBLK$(0)->OUT$BLK.CODE,1);

   8961  2 003312   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 003313   000002 471500                    LDP1    2,,PR0
         2 003314   200011 473500                    LDP3    TEMP$,,AUTO
         2 003315   300003 474500                    LDP4    3,,PR3
         2 003316   400000 236100                    LDQ     0,,PR4
         2 003317   777777 376007                    ANQ     -1,DL
         2 003320   000043 736000                    QLS     35
         2 003321   000005 772000                    QRL     5
         2 003322   100013 676100                    ERQ     11,,PR1
         2 003323   010000 376003                    ANQ     4096,DU
         2 003324   100013 656100                    ERSQ    11,,PR1
         2 003325   005774 710000 2                  TRA     s:9363

     1219     8962    3               CASE(ALLTRMSOPT);

     1220     8963    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);

   8963  2 003326   000002 236000 3                  LDQ     2
         2 003327   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 003330   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 003331   006013 702000 2                  TSX2    CXB$PROC55

     1221     8964    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.ALLTRMS# = BINBIT(TEMP$->OUT$BLK.
              8964                          SUBLK$(0)->OUT$BLK.CODE,1);

   8964  2 003332   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 003333   000002 471500                    LDP1    2,,PR0
         2 003334   200011 473500                    LDP3    TEMP$,,AUTO
         2 003335   300003 474500                    LDP4    3,,PR3
         2 003336   400000 236100                    LDQ     0,,PR4
         2 003337   777777 376007                    ANQ     -1,DL
         2 003340   000043 736000                    QLS     35
         2 003341   000004 772000                    QRL     4
         2 003342   100013 676100                    ERQ     11,,PR1
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:241  
         2 003343   020000 376003                    ANQ     8192,DU
         2 003344   100013 656100                    ERSQ    11,,PR1
         2 003345   005774 710000 2                  TRA     s:9363

     1222     8965    3               CASE(ALTKEYSOPT);

     1223     8966    3                 CALL ALTKEYS_OPTS(TEMP$->OUT$BLK) ALTRET(PROCOPTRET) ;

   8966  2 003346   200011 236100                    LDQ     TEMP$,,AUTO
         2 003347   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 003350   007521 701000 2                  TSX1    ALTKEYS_OPTS
         2 003351   006020 702000 2                  TSX2    PROCOPTRET
         2 003352   005774 710000 2                  TRA     s:9363

     1224     8967    3               CASE(ANSISPANSEQOPT);

     1225     8968    3                 AMR$REC$.V.ANSISPANSEQ# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.
              8968                          CODE,1);

   8968  2 003353   100003 473500                    LDP3    3,,PR1
         2 003354   300000 236100                    LDQ     0,,PR3
         2 003355   777777 376007                    ANQ     -1,DL
         2 003356   000043 736000                    QLS     35
         2 003357   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003360   000030 772000                    QRL     24
         2 003361   400036 676100                    ERQ     30,,PR4
         2 003362   006000 376007                    ANQ     3072,DL
         2 003363   400036 656100                    ERSQ    30,,PR4
         2 003364   005774 710000 2                  TRA     s:9363

     1226     8969    3               CASE(ANYDCBOPT);

     1227     8970    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);

   8970  2 003365   000002 236000 3                  LDQ     2
         2 003366   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 003367   006723 701000 2                  TSX1    BLD_VLP_AREA
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:242  
         2 003370   006013 702000 2                  TSX2    CXB$PROC55

     1228     8971    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.ANYDCB# = BINBIT(TEMP$->OUT$BLK.
              8971                          SUBLK$(0)->OUT$BLK.CODE,1);

   8971  2 003371   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 003372   000002 471500                    LDP1    2,,PR0
         2 003373   200011 473500                    LDP3    TEMP$,,AUTO
         2 003374   300003 474500                    LDP4    3,,PR3
         2 003375   400000 236100                    LDQ     0,,PR4
         2 003376   777777 376007                    ANQ     -1,DL
         2 003377   000043 736000                    QLS     35
         2 003400   000007 772000                    QRL     7
         2 003401   100013 676100                    ERQ     11,,PR1
         2 003402   002000 376003                    ANQ     1024,DU
         2 003403   100013 656100                    ERSQ    11,,PR1
         2 003404   005774 710000 2                  TRA     s:9363

     1229     8972    3               CASE(AUOPT);

     1230     8973    3                 AMR$REC$.V.AU# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   8973  2 003405   100003 473500                    LDP3    3,,PR1
         2 003406   300000 236100                    LDQ     0,,PR3
         2 003407   777777 376007                    ANQ     -1,DL
         2 003410   000043 736000                    QLS     35
         2 003411   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003412   000013 772000                    QRL     11
         2 003413   400041 676100                    ERQ     33,,PR4
         2 003414   000140 376003                    ANQ     96,DU
         2 003415   400041 656100                    ERSQ    33,,PR4
         2 003416   005774 710000 2                  TRA     s:9363

     1231     8974    3               CASE(BLKLOPT);

     1232     8975    3                 AMR$REC$.V.BLKL#=J;             /*Value into *A*/

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:243  
   8975  2 003417   200021 720100                    LXL0    J,,AUTO
         2 003420   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 003421   300030 740100                    STX0    24,,PR3

     1233     8976        /* ****          Set blocked bit to indicate blocking desired*/
     1234     8977    3                 AMR$REC$.V.BLOCKED#=%YES#;

   8977  2 003422   300025 236100                    LDQ     21,,PR3
         2 003423   000003 376000 3                  ANQ     3
         2 003424   100000 276007                    ORQ     32768,DL
         2 003425   300025 756100                    STQ     21,,PR3
         2 003426   005774 710000 2                  TRA     s:9363

     1235     8978    3               CASE(BLOCKEDOPT);

     1236     8979    3                AMR$REC$.V.BLOCKED# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              8979                          ;

   8979  2 003427   100003 473500                    LDP3    3,,PR1
         2 003430   300000 236100                    LDQ     0,,PR3
         2 003431   777777 376007                    ANQ     -1,DL
         2 003432   000043 736000                    QLS     35
         2 003433   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003434   000024 772000                    QRL     20
         2 003435   400025 676100                    ERQ     21,,PR4
         2 003436   140000 376007                    ANQ     49152,DL
         2 003437   400025 656100                    ERSQ    21,,PR4
         2 003440   005774 710000 2                  TRA     s:9363

     1237     8980    3               CASE(BUPMOPT);

     1238     8981    3                 AMR$REC$.V.BUPM#=BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->

   8981  2 003441   100003 473500                    LDP3    3,,PR1
         2 003442   300000 236100                    LDQ     0,,PR3
         2 003443   777777 376007                    ANQ     -1,DL
         2 003444   000043 736000                    QLS     35
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:244  
         2 003445   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003446   000030 772000                    QRL     24
         2 003447   400025 676100                    ERQ     21,,PR4
         2 003450   006000 376007                    ANQ     3072,DL
         2 003451   400025 656100                    ERSQ    21,,PR4
         2 003452   005774 710000 2                  TRA     s:9363

     1239     8982    3                      OUT$BLK.CODE,1);
     1240     8983    3               CASE(COMPOPT);

     1241     8984    3                 AMR$REC$.V.COMP# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   8984  2 003453   100003 473500                    LDP3    3,,PR1
         2 003454   300000 236100                    LDQ     0,,PR3
         2 003455   777777 376007                    ANQ     -1,DL
         2 003456   000043 736000                    QLS     35
         2 003457   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003460   000022 772000                    QRL     18
         2 003461   400025 676100                    ERQ     21,,PR4
         2 003462   600000 376007                    ANQ     -65536,DL
         2 003463   400025 656100                    ERSQ    21,,PR4
         2 003464   005774 710000 2                  TRA     s:9363

     1242     8985    3               CASE(COPIESOPT);

     1243     8986    3                 AMR$REC$.V.COPIES#=J;

   8986  2 003465   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 003466   200021 236100                    LDQ     J,,AUTO
         2 003467   000011 736000                    QLS     9
         2 003470   300044 552110                    STBQ    36,'10'O,PR3
         2 003471   005774 710000 2                  TRA     s:9363

     1244     8987    3               CASE(CTGOPT);

     1245     8988    3                 AMR$REC$.V.CTG# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:245  
   8988  2 003472   100003 473500                    LDP3    3,,PR1
         2 003473   300000 236100                    LDQ     0,,PR3
         2 003474   777777 376007                    ANQ     -1,DL
         2 003475   000043 736000                    QLS     35
         2 003476   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003477   000035 772000                    QRL     29
         2 003500   400022 676100                    ERQ     18,,PR4
         2 003501   000140 376007                    ANQ     96,DL
         2 003502   400022 656100                    ERSQ    18,,PR4
         2 003503   005774 710000 2                  TRA     s:9363

     1246     8989    3               CASE(CVOLOPT);

     1247     8990    3                 AMR$REC$.V.CVOL# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   8990  2 003504   100003 473500                    LDP3    3,,PR1
         2 003505   300000 236100                    LDQ     0,,PR3
         2 003506   777777 376007                    ANQ     -1,DL
         2 003507   000043 736000                    QLS     35
         2 003510   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003511   000041 772000                    QRL     33
         2 003512   400022 676100                    ERQ     18,,PR4
         2 003513   000006 376007                    ANQ     6,DL
         2 003514   400022 656100                    ERSQ    18,,PR4
         2 003515   005774 710000 2                  TRA     s:9363

     1248     8991    3               CASE(DCBCONLGLOPT);

     1249     8992    3                AMR$REC$.V.DCBCONLGL# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,
              8992                          1);

   8992  2 003516   100003 473500                    LDP3    3,,PR1
         2 003517   300000 236100                    LDQ     0,,PR3
         2 003520   777777 376007                    ANQ     -1,DL
         2 003521   000043 736000                    QLS     35
         2 003522   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003523   000022 772000                    QRL     18
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:246  
         2 003524   400036 676100                    ERQ     30,,PR4
         2 003525   400000 376007                    ANQ     -131072,DL
         2 003526   400036 656100                    ERSQ    30,,PR4
         2 003527   005774 710000 2                  TRA     s:9363

     1250     8993    3               CASE(DEBUGOPT);

     1251     8994    3                 CALL BLD_VLP_AREA(%FPRG) ALTRET(CXB$PROC55);

   8994  2 003530   000004 236000 3                  LDQ     4
         2 003531   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 003532   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 003533   006013 702000 2                  TSX2    CXB$PROC55

     1252     8995    3                AMR$REC$.FPRG_->VLP$FPRG.FLGS.DEBUG# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)
              8995                          ->OUT$BLK.CODE,1);

   8995  2 003534   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 003535   000021 471500                    LDP1    17,,PR0
         2 003536   200011 473500                    LDP3    TEMP$,,AUTO
         2 003537   300003 474500                    LDP4    3,,PR3
         2 003540   400000 236100                    LDQ     0,,PR4
         2 003541   777777 376007                    ANQ     -1,DL
         2 003542   000043 736000                    QLS     35
         2 003543   000011 772000                    QRL     9
         2 003544   100000 676100                    ERQ     0,,PR1
         2 003545   000400 376003                    ANQ     256,DU
         2 003546   100000 656100                    ERSQ    0,,PR1
         2 003547   005774 710000 2                  TRA     s:9363

     1253     8996    3               CASE(DENSITYOPT);

     1254     8997    3                 AMR$REC$.V.DENSITY#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;

   8997  2 003550   100003 473500                    LDP3    3,,PR1
         2 003551   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003552   300000 236100                    LDQ     0,,PR3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:247  
         2 003553   400044 552104                    STBQ    36,'04'O,PR4
         2 003554   005774 710000 2                  TRA     s:9363

     1255     8998    3               CASE(DIRONLYOPT);

     1256     8999    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);

   8999  2 003555   000002 236000 3                  LDQ     2
         2 003556   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 003557   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 003560   006013 702000 2                  TSX2    CXB$PROC55

     1257     9000    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.DIRONLY# = BINBIT(TEMP$->OUT$BLK.
              9000                          SUBLK$(0)->OUT$BLK.CODE,1);

   9000  2 003561   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 003562   000002 471500                    LDP1    2,,PR0
         2 003563   200011 473500                    LDP3    TEMP$,,AUTO
         2 003564   300003 474500                    LDP4    3,,PR3
         2 003565   400000 236100                    LDQ     0,,PR4
         2 003566   777777 376007                    ANQ     -1,DL
         2 003567   000043 736000                    QLS     35
         2 003570   000006 772000                    QRL     6
         2 003571   100006 676100                    ERQ     6,,PR1
         2 003572   004000 376003                    ANQ     2048,DU
         2 003573   100006 656100                    ERSQ    6,,PR1
         2 003574   005774 710000 2                  TRA     s:9363

     1258     9001    3               CASE(DISPOPT);

     1259     9002    3                 AMR$REC$.V.DISP#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;

   9002  2 003575   100003 473500                    LDP3    3,,PR1
         2 003576   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003577   300000 236100                    LDQ     0,,PR3
         2 003600   400027 552104                    STBQ    23,'04'O,PR4
         2 003601   005774 710000 2                  TRA     s:9363
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:248  

     1260     9003    3               CASE(DVFCOPT);

     1261     9004    4                 DO CASE(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE);

   9004  2 003602   100003 473500                    LDP3    3,,PR1
         2 003603   300000 236100                    LDQ     0,,PR3
         2 003604   777777 376007                    ANQ     -1,DL
         2 003605   000454 136007                    SBLQ    300,DL
         2 003606   000002 116007                    CMPQ    2,DL
         2 003607   003611 602006 2                  TNC     s:9004+7,QL
         2 003610   005774 710000 2                  TRA     s:9363
         2 003611   003623 710000 2                  TRA     s:9008
         2 003612   003613 710000 2                  TRA     s:9006

     1262     9005    4                  CASE(DVFC_QUOTE);

     1263     9006    4                    AMR$REC$.V.DVFC#=TEMP$->OUT$BLK.SUBLK$(0)->P$S.TEXT;

   9006  2 003613   300004 236100                    LDQ     4,,PR3
         2 003614   000033 772000                    QRL     27
         2 003615   000000 620006                    EAX0    0,QL
         2 003616   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003617   040100 100540                    MLR     fill='040'O
         2 003620   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         2 003621   400040 400001                    ADSC9   32,,PR4                  cn=2,n=1
         2 003622   005774 710000 2                  TRA     s:9363

     1264     9007    4                  CASE(DVFC_OCT);

     1265     9008    4                   AMR$REC$.V.DVFC#=BINASC(J);

   9008  2 003623   200021 236100                    LDQ     J,,AUTO
         2 003624   000033 736000                    QLS     27
         2 003625   000005 276000 3                  ORQ     5
         2 003626   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003627   000022 772000                    QRL     18
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:249  
         2 003630   400040 552110                    STBQ    32,'10'O,PR4

     1266     9009    4                  END;

   9009  2 003631   005774 710000 2                  TRA     s:9363

     1267     9010    3               CASE(EBCDICOPT);

     1268     9011    3                AMR$REC$.V.EBCDIC# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   9011  2 003632   100003 473500                    LDP3    3,,PR1
         2 003633   300000 236100                    LDQ     0,,PR3
         2 003634   777777 376007                    ANQ     -1,DL
         2 003635   000043 736000                    QLS     35
         2 003636   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003637   400036 676100                    ERQ     30,,PR4
         2 003640   600000 376003                    ANQ     -65536,DU
         2 003641   400036 656100                    ERSQ    30,,PR4

     1269     9012    3                 AMR$REC$.V.CNVRT#=AMR$REC$.V.EBCDIC#;

   9012  2 003642   400036 236100                    LDQ     30,,PR4
         2 003643   000002 772000                    QRL     2
         2 003644   400036 676100                    ERQ     30,,PR4
         2 003645   140000 376003                    ANQ     49152,DU
         2 003646   400036 656100                    ERSQ    30,,PR4

     1270     9013    3                 IF TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.NSUBLKS > 0

   9013  2 003647   100003 473500                    LDP3    3,,PR1
         2 003650   300001 220100                    LDX0    1,,PR3
         2 003651   005774 600000 2                  TZE     s:9363

     1271     9014    3                    THEN
     1272     9015    4                       DO;

     1273     9016    4                          TEMP$ = TEMP$->OUT$BLK.SUBLK$(0);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:250  

   9016  2 003652   100003 236100                    LDQ     3,,PR1
         2 003653   200011 756100                    STQ     TEMP$,,AUTO

     1274     9017    4                         AMR$REC$.V.CNVRT# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.
              9017                                   CODE,1);

   9017  2 003654   200011 471500                    LDP1    TEMP$,,AUTO
         2 003655   100003 473500                    LDP3    3,,PR1
         2 003656   300000 236100                    LDQ     0,,PR3
         2 003657   777777 376007                    ANQ     -1,DL
         2 003660   000043 736000                    QLS     35
         2 003661   000002 772000                    QRL     2
         2 003662   400036 676100                    ERQ     30,,PR4
         2 003663   140000 376003                    ANQ     49152,DU
         2 003664   400036 656100                    ERSQ    30,,PR4

     1275     9018    4                       END;

   9018  2 003665   005774 710000 2                  TRA     s:9363

     1276     9019    3               CASE(EOFNONEOPT);

     1277     9020    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);

   9020  2 003666   000002 236000 3                  LDQ     2
         2 003667   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 003670   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 003671   006013 702000 2                  TSX2    CXB$PROC55

     1278     9021    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.EOFNONE# = BINBIT(TEMP$->OUT$BLK.
              9021                          SUBLK$(0)->OUT$BLK.CODE,1);

   9021  2 003672   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 003673   000002 471500                    LDP1    2,,PR0
         2 003674   200011 473500                    LDP3    TEMP$,,AUTO
         2 003675   300003 474500                    LDP4    3,,PR3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:251  
         2 003676   400000 236100                    LDQ     0,,PR4
         2 003677   777777 376007                    ANQ     -1,DL
         2 003700   000043 736000                    QLS     35
         2 003701   000003 772000                    QRL     3
         2 003702   100006 676100                    ERQ     6,,PR1
         2 003703   040000 376003                    ANQ     16384,DU
         2 003704   100006 656100                    ERSQ    6,,PR1
         2 003705   005774 710000 2                  TRA     s:9363

     1279     9022    3               CASE(EOFONEOPT);

     1280     9023    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);

   9023  2 003706   000002 236000 3                  LDQ     2
         2 003707   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 003710   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 003711   006013 702000 2                  TSX2    CXB$PROC55

     1281     9024    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.EOFONE# = BINBIT(TEMP$->OUT$BLK.
              9024                          SUBLK$(0)->OUT$BLK.CODE,1);

   9024  2 003712   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 003713   000002 471500                    LDP1    2,,PR0
         2 003714   200011 473500                    LDP3    TEMP$,,AUTO
         2 003715   300003 474500                    LDP4    3,,PR3
         2 003716   400000 236100                    LDQ     0,,PR4
         2 003717   777777 376007                    ANQ     -1,DL
         2 003720   000043 736000                    QLS     35
         2 003721   000002 772000                    QRL     2
         2 003722   100006 676100                    ERQ     6,,PR1
         2 003723   100000 376003                    ANQ     32768,DU
         2 003724   100006 656100                    ERSQ    6,,PR1
         2 003725   005774 710000 2                  TRA     s:9363

     1282     9025    3               CASE(EOFTIMEOPT);

     1283     9026    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:252  

   9026  2 003726   000002 236000 3                  LDQ     2
         2 003727   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 003730   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 003731   006013 702000 2                  TSX2    CXB$PROC55

     1284     9027    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.EOFTIME#=J;

   9027  2 003732   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 003733   000002 471500                    LDP1    2,,PR0
         2 003734   200021 720100                    LXL0    J,,AUTO
         2 003735   100006 440100                    SXL0    6,,PR1
         2 003736   005774 710000 2                  TRA     s:9363

     1285     9028    3               CASE(EVENTOPT);

     1286     9029    3                 AMR$REC$.V.EVENT#=J;

   9029  2 003737   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 003740   200021 235100                    LDA     J,,AUTO
         2 003741   300043 755100                    STA     35,,PR3
         2 003742   005774 710000 2                  TRA     s:9363

     1287     9030    3               CASE(EXISTOPT);

     1288     9031    3                 AMR$REC$.V.EXIST#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;

   9031  2 003743   100003 473500                    LDP3    3,,PR1
         2 003744   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003745   300000 236100                    LDQ     0,,PR3
         2 003746   000007 736000                    QLS     7
         2 003747   400022 676100                    ERQ     18,,PR4
         2 003750   000600 376007                    ANQ     384,DL
         2 003751   400022 656100                    ERSQ    18,,PR4
         2 003752   005774 710000 2                  TRA     s:9363

     1289     9032    3               CASE(EXPIREOPT);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:253  

     1290     9033    4                  DO CASE(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE);

   9033  2 003753   100003 473500                    LDP3    3,,PR1
         2 003754   300000 236100                    LDQ     0,,PR3
         2 003755   777777 376007                    ANQ     -1,DL
         2 003756   000456 136007                    SBLQ    302,DL
         2 003757   000002 116007                    CMPQ    2,DL
         2 003760   003762 602006 2                  TNC     s:9033+7,QL
         2 003761   005774 710000 2                  TRA     s:9363
         2 003762   003764 710000 2                  TRA     s:9035
         2 003763   003770 710000 2                  TRA     s:9037

     1291     9034    4                  CASE(EXP_DDD);

     1292     9035    4                    AMR$REC$.V.EXPIRE#=J;

   9035  2 003764   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003765   200021 235100                    LDA     J,,AUTO
         2 003766   400035 755100                    STA     29,,PR4
         2 003767   005774 710000 2                  TRA     s:9363

     1293     9036    4                  CASE(EXP_NEVER);

     1294     9037    4                    AMR$REC$.V.EXPIRE#=-1;

   9037  2 003770   000001 335007                    LCA     1,DL
         2 003771   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 003772   400035 755100                    STA     29,,PR4

     1295     9038    4                  END;

   9038  2 003773   005774 710000 2                  TRA     s:9363

     1296     9039    3               CASE(FORMOPT);

     1297     9040    3                 MCB.SIZE=SIZEC(AM$FORM);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:254  

   9040  2 003774   000006 235007                    LDA     6,DL
         2 003775   200004 473500                    LDP3    @MCB,,AUTO
         2 003776   300006 755100                    STA     6,,PR3

     1298     9041    3                 CALL GETVLPA(AMR$REC$.FORM_) ALTRET(PROCOPTRET);

   9041  2 003777   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 004000   000020 036003                    ADLQ    16,DU
         2 004001   200265 756100                    STQ     I+1,,AUTO
         2 004002   006661 701000 2                  TSX1    GETVLPA
         2 004003   006020 702000 2                  TSX2    PROCOPTRET

     1299     9042    3                 AMR$REC$.FORM_->AM$FORM.FORM#=TEMP$->OUT$BLK.SUBLK$(0)->P$S.TEXT;

   9042  2 004004   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004005   000020 471500                    LDP1    16,,PR0
         2 004006   200011 473500                    LDP3    TEMP$,,AUTO
         2 004007   300003 474500                    LDP4    3,,PR3
         2 004010   400004 236100                    LDQ     4,,PR4
         2 004011   000033 772000                    QRL     27
         2 004012   000000 620006                    EAX0    0,QL
         2 004013   040100 100540                    MLR     fill='040'O
         2 004014   400004 200010                    ADSC9   4,,PR4                   cn=1,n=*X0
         2 004015   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         2 004016   005774 710000 2                  TRA     s:9363

     1300     9043    3               CASE(FPRG_FIDOPT) ;

     1301     9044    3                 CALL BLD_VLP_AREA(%FPRG) ALTRET(CXB$PROC55) ;

   9044  2 004017   000004 236000 3                  LDQ     4
         2 004020   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004021   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004022   006013 702000 2                  TSX2    CXB$PROC55

     1302     9045    3                 CALL CNVRT_FID (TEMP$->OUT$BLK.SUBLK$(0)->P$S)
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:255  

   9045  2 004023   200011 470500                    LDP0    TEMP$,,AUTO
         2 004024   000003 471500                    LDP1    3,,PR0
         2 004025   200257 451500                    STP1    FID_WSN+3,,AUTO
         2 004026   007410 701000 2                  TSX1    CNVRT_FID
         2 004027   006020 702000 2                  TSX2    PROCOPTRET

     1303     9046    3                                   ALTRET(PROCOPTRET) ;
     1304     9047    3                 IF NOT FID_RESULTS.NAME

   9047  2 004030   200112 234100                    SZN     FID_RESULTS,,AUTO
         2 004031   004042 604000 2                  TMI     s:9055

     1305     9048    3                   THEN
     1306     9049    4                     DO ;

     1307     9050    4                       CPSL_PARAM.ERRCODE = E_FPRG_FID_NONAME ;

   9050  2 004032   000007 236000 1                  LDQ     E_FPRG_FID_NONAME
         2 004033   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 004034   000002 756100                    STQ     2,,PR0

     1308     9051    4                       CPSL_PARAM.ERR_CPOS = TEMP$->OUT$BLK.SUBLK$(0) ->

   9051  2 004035   200011 471500                    LDP1    TEMP$,,AUTO
         2 004036   100003 473500                    LDP3    3,,PR1
         2 004037   300002 235100                    LDA     2,,PR3
         2 004040   000003 755100                    STA     3,,PR0

     1309     9052    4                                             P$S.CPOS ;
     1310     9053    4                       GOTO PROCOPTRET ;

   9053  2 004041   006020 710000 2                  TRA     PROCOPTRET

     1311     9054    4                     END ; /* Then Do */
     1312     9055    3                 IF FID_RESULTS.WSN

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:256  
   9055  2 004042   200112 236100                    LDQ     FID_RESULTS,,AUTO
         2 004043   020000 316003                    CANQ    8192,DU
         2 004044   004055 600000 2                  TZE     s:9063

     1313     9056    3                   THEN
     1314     9057    4                     DO ;

     1315     9058    4                       CPSL_PARAM.ERRCODE = E_FPRG_FID_DISKONLY ;

   9058  2 004045   000010 236000 1                  LDQ     E_FPRG_FID_DISKONLY
         2 004046   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 004047   000002 756100                    STQ     2,,PR0

     1316     9059    4                       CPSL_PARAM.ERR_CPOS = TEMP$->OUT$BLK.SUBLK$(0) ->

   9059  2 004050   200011 471500                    LDP1    TEMP$,,AUTO
         2 004051   100003 473500                    LDP3    3,,PR1
         2 004052   300002 235100                    LDA     2,,PR3
         2 004053   000003 755100                    STA     3,,PR0

     1317     9060    4                                             P$S.CPOS ;
     1318     9061    4                       GOTO PROCOPTRET ;

   9061  2 004054   006020 710000 2                  TRA     PROCOPTRET

     1319     9062    4                     END ; /* Then Do */
     1320     9063    3                 AMR$REC$.FPRG_->VLP$FPRG.NAME = FID_NAME ;

   9063  2 004055   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004056   000021 471500                    LDP1    17,,PR0
         2 004057   000100 100500                    MLR     fill='000'O
         2 004060   200124 000040                    ADSC9   FID_NAME,,AUTO           cn=0,n=32
         2 004061   100002 000040                    ADSC9   2,,PR1                   cn=0,n=32

     1321     9064    3                 AMR$REC$.FPRG_->VLP$FPRG.ACCT# = FID_ACCT.ACCT# ;

   9064  2 004062   000021 471500                    LDP1    17,,PR0
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:257  
         2 004063   200250 237100                    LDAQ    FID_ACCT,,AUTO
         2 004064   100012 757100                    STAQ    10,,PR1

     1322     9065    3                 AMR$REC$.FPRG_->VLP$FPRG.PASS# = FID_PASS.PASS# ;

   9065  2 004065   000021 471500                    LDP1    17,,PR0
         2 004066   200252 237100                    LDAQ    FID_PASS,,AUTO
         2 004067   100014 757100                    STAQ    12,,PR1

     1323     9066    3                 AMR$REC$.FPRG_->VLP$FPRG.PSN# = FID_SN.SN#(0) ;

   9066  2 004070   000021 471500                    LDP1    17,,PR0
         2 004071   040100 100500                    MLR     fill='040'O
         2 004072   200135 000006                    ADSC9   FID_SN+1,,AUTO           cn=0,n=6
         2 004073   100000 400006                    ADSC9   0,,PR1                   cn=2,n=6
         2 004074   005774 710000 2                  TRA     s:9363

     1324     9067    3               CASE(FSNOPT);

     1325     9068    3                 AMR$REC$.V.FSN#=J;

   9068  2 004075   200021 720100                    LXL0    J,,AUTO
         2 004076   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004077   300044 740100                    STX0    36,,PR3
         2 004100   005774 710000 2                  TRA     s:9363

     1326     9069    3               CASE(FUNOPT);

     1327     9070    3                 AMR$REC$.V.FUN#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;

   9070  2 004101   100003 473500                    LDP3    3,,PR1
         2 004102   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 004103   300000 236100                    LDQ     0,,PR3
         2 004104   000011 736000                    QLS     9
         2 004105   400023 552110                    STBQ    19,'10'O,PR4
         2 004106   005774 710000 2                  TRA     s:9363

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:258  
     1328     9071    3               CASE(GHSTACSOPT);

     1329     9072    3                 AMR$REC$.V.GHSTACS#=J;

   9072  2 004107   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004110   200021 236100                    LDQ     J,,AUTO
         2 004111   300025 676100                    ERQ     21,,PR3
         2 004112   000017 376007                    ANQ     15,DL
         2 004113   300025 656100                    ERSQ    21,,PR3
         2 004114   005774 710000 2                  TRA     s:9363

     1330     9073    3               CASE(HDRHOPT,INDENTOPT,PAGECOLOPT);

     1331     9074        /* ****             Get vlp area if one doesn't exist*/
     1332     9075    3                 IF AMR$REC$.HDR_=ADDR(NIL)

   9075  2 004115   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004116   300017 236100                    LDQ     15,,PR3
         2 004117   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 004120   004144 601000 2                  TNZ     s:9083

     1333     9076    3                    THEN
     1334     9077    4                       DO;

     1335     9078    4                          MCB.SIZE=SIZEC(CPSL_CVLP_HDR);

   9078  2 004121   000010 235007                    LDA     8,DL
         2 004122   200004 474500                    LDP4    @MCB,,AUTO
         2 004123   400006 755100                    STA     6,,PR4

     1336     9079    4                          CALL GETVLPA(AMR$REC$.HDR_) ALTRET(PROCOPTRET);

   9079  2 004124   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 004125   000017 036003                    ADLQ    15,DU
         2 004126   200265 756100                    STQ     I+1,,AUTO
         2 004127   006661 701000 2                  TSX1    GETVLPA
         2 004130   006020 702000 2                  TSX2    PROCOPTRET
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:259  

     1337     9080    4                          AMR$REC$.HDR_->AM$HDR=CPSL_CVLP_HDR;

   9080  2 004131   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004132   000017 471500                    LDP1    15,,PR0
         2 004133   100001 236100                    LDQ     1,,PR1
         2 004134   000033 772000                    QRL     27
         2 004135   000005 620006                    EAX0    5,QL
         2 004136   000140 100400                    MLR     fill='000'O
         2 004137   000000 000010 xsym               ADSC9   CPSL_CVLP_HDR            cn=0,n=8
         2 004140   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1338     9081    4                          AMR$REC$.HDR_->AM$HDR.TITL.L#=0;

   9081  2 004141   000017 471500                    LDP1    15,,PR0
         2 004142   000000 236003                    LDQ     0,DU
         2 004143   100001 552140                    STBQ    1,'40'O,PR1

     1339     9082    4                       END;

     1340     9083    3                 IF TEMP$->OUT$BLK.CODE=HDRHOPT

   9083  2 004144   200011 470500                    LDP0    TEMP$,,AUTO
         2 004145   000000 720100                    LXL0    0,,PR0
         2 004146   000067 100003                    CMPX0   55,DU
         2 004147   004157 601000 2                  TNZ     s:9086

     1341     9084    3                    THEN
     1342     9085    3                       AMR$REC$.HDR_->AM$HDR.CTL.HEADERHEIGHT#=J;

   9085  2 004150   000000 471400 xsym               LDP1    CPSL_SEG3$
         2 004151   100017 473500                    LDP3    15,,PR1
         2 004152   200021 236100                    LDQ     J,,AUTO
         2 004153   000022 736000                    QLS     18
         2 004154   300000 676100                    ERQ     0,,PR3
         2 004155   000017 376003                    ANQ     15,DU
         2 004156   300000 656100                    ERSQ    0,,PR3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:260  

     1343     9086    3                 IF TEMP$->OUT$BLK.CODE=INDENTOPT

   9086  2 004157   200011 470500                    LDP0    TEMP$,,AUTO
         2 004160   000000 720100                    LXL0    0,,PR0
         2 004161   000077 100003                    CMPX0   63,DU
         2 004162   004170 601000 2                  TNZ     s:9089

     1344     9087    3                    THEN
     1345     9088    3                       AMR$REC$.HDR_->AM$HDR.CTL.INDENT#=J;

   9088  2 004163   000000 471400 xsym               LDP1    CPSL_SEG3$
         2 004164   100017 473500                    LDP3    15,,PR1
         2 004165   200021 236100                    LDQ     J,,AUTO
         2 004166   000011 736000                    QLS     9
         2 004167   300000 552110                    STBQ    0,'10'O,PR3

     1346     9089    3                 IF TEMP$->OUT$BLK.CODE=PAGECOLOPT

   9089  2 004170   200011 470500                    LDP0    TEMP$,,AUTO
         2 004171   000000 720100                    LXL0    0,,PR0
         2 004172   000134 100003                    CMPX0   92,DU
         2 004173   005774 601000 2                  TNZ     s:9363

     1347     9090    3                    THEN
     1348     9091    3                       AMR$REC$.HDR_->AM$HDR.CTL.COUNT#=J;

   9091  2 004174   000000 471400 xsym               LDP1    CPSL_SEG3$
         2 004175   100017 473500                    LDP3    15,,PR1
         2 004176   200021 236100                    LDQ     J,,AUTO
         2 004177   300000 552104                    STBQ    0,'04'O,PR3
         2 004200   005774 710000 2                  TRA     s:9363

     1349     9092    3               CASE(IGNOREFSNOPT);

     1350     9093    3                AMR$REC$.V.IGNOREFSN# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,
              9093                          1);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:261  

   9093  2 004201   100003 473500                    LDP3    3,,PR1
         2 004202   300000 236100                    LDQ     0,,PR3
         2 004203   777777 376007                    ANQ     -1,DL
         2 004204   000043 736000                    QLS     35
         2 004205   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 004206   000025 772000                    QRL     21
         2 004207   400036 676100                    ERQ     30,,PR4
         2 004210   060000 376007                    ANQ     24576,DL
         2 004211   400036 656100                    ERSQ    30,,PR4
         2 004212   005774 710000 2                  TRA     s:9363

     1351     9094    3               CASE(ILATCHOPT);

     1352     9095    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);

   9095  2 004213   000002 236000 3                  LDQ     2
         2 004214   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004215   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004216   006013 702000 2                  TSX2    CXB$PROC55

     1353     9096    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.ILATCH# = BINBIT(TEMP$->OUT$BLK.
              9096                          SUBLK$(0)->OUT$BLK.CODE,1);

   9096  2 004217   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004220   000002 471500                    LDP1    2,,PR0
         2 004221   200011 473500                    LDP3    TEMP$,,AUTO
         2 004222   300003 474500                    LDP4    3,,PR3
         2 004223   400000 236100                    LDQ     0,,PR4
         2 004224   777777 376007                    ANQ     -1,DL
         2 004225   000043 736000                    QLS     35
         2 004226   000001 772000                    QRL     1
         2 004227   100006 676100                    ERQ     6,,PR1
         2 004230   200000 376003                    ANQ     65536,DU
         2 004231   100006 656100                    ERSQ    6,,PR1
         2 004232   005774 710000 2                  TRA     s:9363

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:262  
     1354     9097    3               CASE(ILOCKOPT);

     1355     9098    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);

   9098  2 004233   000002 236000 3                  LDQ     2
         2 004234   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004235   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004236   006013 702000 2                  TSX2    CXB$PROC55

     1356     9099    3                AMR$REC$.SETSTA_->AM$SETSTA.ISTA.ILOCK# = BINBIT(TEMP$->OUT$BLK.SUBLK$
              9099                          (0)->OUT$BLK.CODE,1);

   9099  2 004237   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004240   000002 471500                    LDP1    2,,PR0
         2 004241   200011 473500                    LDP3    TEMP$,,AUTO
         2 004242   300003 474500                    LDP4    3,,PR3
         2 004243   400000 236100                    LDQ     0,,PR4
         2 004244   777777 376007                    ANQ     -1,DL
         2 004245   000043 736000                    QLS     35
         2 004246   100006 676100                    ERQ     6,,PR1
         2 004247   400000 376003                    ANQ     -131072,DU
         2 004250   100006 656100                    ERSQ    6,,PR1
         2 004251   005774 710000 2                  TRA     s:9363

     1357     9100    3               CASE(IMSGTYPOPT);

     1358     9101    3                 CALL BLD_VLP_AREA(%SETSTA) ALTRET(CXB$PROC55);

   9101  2 004252   000002 236000 3                  LDQ     2
         2 004253   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004254   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004255   006013 702000 2                  TSX2    CXB$PROC55

     1359     9102    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.IMSGTYP#=

   9102  2 004256   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004257   000002 471500                    LDP1    2,,PR0
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:263  
         2 004260   200011 473500                    LDP3    TEMP$,,AUTO
         2 004261   300003 474500                    LDP4    3,,PR3
         2 004262   400003 475500                    LDP5    3,,PR4
         2 004263   500004 236100                    LDQ     4,,PR5
         2 004264   000033 772000                    QRL     27
         2 004265   000000 620006                    EAX0    0,QL
         2 004266   040100 100540                    MLR     fill='040'O
         2 004267   500004 200010                    ADSC9   4,,PR5                   cn=1,n=*X0
         2 004270   100004 000010                    ADSC9   4,,PR1                   cn=0,n=8
         2 004271   005774 710000 2                  TRA     s:9363

     1360     9103    3                       TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1361     9104    3               CASE(INITIALIZEOPT);

     1362     9105    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55);

   9105  2 004272   000006 236000 3                  LDQ     6
         2 004273   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004274   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004275   006013 702000 2                  TSX2    CXB$PROC55

     1363     9106    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.INITIALIZE# = BINBIT(TEMP$->OUT$BLK.
              9106                          SUBLK$(0)->OUT$BLK.CODE,1);

   9106  2 004276   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004277   000002 471500                    LDP1    2,,PR0
         2 004300   200011 473500                    LDP3    TEMP$,,AUTO
         2 004301   300003 474500                    LDP4    3,,PR3
         2 004302   400000 236100                    LDQ     0,,PR4
         2 004303   777777 376007                    ANQ     -1,DL
         2 004304   000043 736000                    QLS     35
         2 004305   100000 676100                    ERQ     0,,PR1
         2 004306   400000 376003                    ANQ     -131072,DU
         2 004307   100000 656100                    ERSQ    0,,PR1
         2 004310   005774 710000 2                  TRA     s:9363

     1364     9107    3               CASE(INITVALUEOPT) ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:264  

     1365     9108    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55) ;

   9108  2 004311   000006 236000 3                  LDQ     6
         2 004312   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004313   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004314   006013 702000 2                  TSX2    CXB$PROC55

     1366     9109    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.INITVALUE# = J ;

   9109  2 004315   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004316   000002 471500                    LDP1    2,,PR0
         2 004317   200021 235100                    LDA     J,,AUTO
         2 004320   100001 755100                    STA     1,,PR1
         2 004321   005774 710000 2                  TRA     s:9363

     1367     9110    3               CASE(INSTATTROPT, INSTATTRSIZEOPT) ;

     1368     9111    3                 CALL ATTR_OPTS(AMR$REC$.INSTATTR_) ALTRET(PROCOPTRET);

   9111  2 004322   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 004323   000010 036003                    ADLQ    8,DU
         2 004324   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004325   007764 701000 2                  TSX1    ATTR_OPTS
         2 004326   006020 702000 2                  TSX2    PROCOPTRET
         2 004327   005774 710000 2                  TRA     s:9363

     1369     9112    3               CASE(IOERROKOPT);

     1370     9113    3                AMR$REC$.V.IOERROK# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9113                          ;

   9113  2 004330   100003 473500                    LDP3    3,,PR1
         2 004331   300000 236100                    LDQ     0,,PR3
         2 004332   777777 376007                    ANQ     -1,DL
         2 004333   000043 736000                    QLS     35
         2 004334   000000 474400 xsym               LDP4    CPSL_SEG3$
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:265  
         2 004335   000007 772000                    QRL     7
         2 004336   400036 676100                    ERQ     30,,PR4
         2 004337   003000 376003                    ANQ     1536,DU
         2 004340   400036 656100                    ERSQ    30,,PR4
         2 004341   005774 710000 2                  TRA     s:9363

     1371     9114    3               CASE(ISTATIONOPT);

     1372     9115    3                 CALL BLD_VLP_AREA(%SETSTA) ALTRET(CXB$PROC55);

   9115  2 004342   000002 236000 3                  LDQ     2
         2 004343   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004344   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004345   006013 702000 2                  TSX2    CXB$PROC55

     1373     9116    3                 AMR$REC$.SETSTA_->AM$SETSTA.ISTA.ISTATION#=

   9116  2 004346   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004347   000002 471500                    LDP1    2,,PR0
         2 004350   200011 473500                    LDP3    TEMP$,,AUTO
         2 004351   300003 474500                    LDP4    3,,PR3
         2 004352   400003 475500                    LDP5    3,,PR4
         2 004353   500004 236100                    LDQ     4,,PR5
         2 004354   000033 772000                    QRL     27
         2 004355   000000 620006                    EAX0    0,QL
         2 004356   040100 100540                    MLR     fill='040'O
         2 004357   500004 200010                    ADSC9   4,,PR5                   cn=1,n=*X0
         2 004360   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         2 004361   005774 710000 2                  TRA     s:9363

     1374     9117    3                       TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1375     9118    3               CASE(IXTNSIZEOPT);

     1376     9119    3                 AMR$REC$.V.IXTNSIZE#=J;

   9119  2 004362   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004363   200021 235100                    LDA     J,,AUTO
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:266  
         2 004364   300033 755100                    STA     27,,PR3
         2 004365   005774 710000 2                  TRA     s:9363

     1377     9120    3               CASE(JRNLBYPASSOPT);

     1378     9121    3                AMR$REC$.V.JRNLBYPASS# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE
              9121                          ,1);

   9121  2 004366   100003 473500                    LDP3    3,,PR1
         2 004367   300000 236100                    LDQ     0,,PR3
         2 004370   777777 376007                    ANQ     -1,DL
         2 004371   000043 736000                    QLS     35
         2 004372   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 004373   000036 772000                    QRL     30
         2 004374   400025 676100                    ERQ     21,,PR4
         2 004375   000060 376007                    ANQ     48,DL
         2 004376   400025 656100                    ERSQ    21,,PR4
         2 004377   005774 710000 2                  TRA     s:9363

     1379     9122    3               CASE(KEYLOPT);

     1380     9123    3                 AMR$REC$.V.KEYL#=J;

   9123  2 004400   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004401   200021 236100                    LDQ     J,,AUTO
         2 004402   000011 736000                    QLS     9
         2 004403   300027 552110                    STBQ    23,'10'O,PR3
         2 004404   005774 710000 2                  TRA     s:9363

     1381     9124    3               CASE(KEYXOPT);

     1382     9125    3                 AMR$REC$.V.KEYX#=J;             /*Value into *A*/

   9125  2 004405   200021 720100                    LXL0    J,,AUTO
         2 004406   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004407   300027 740100                    STX0    23,,PR3
         2 004410   005774 710000 2                  TRA     s:9363
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:267  

     1383     9126    3               CASE(LINESOPT);

     1384     9127    3                 AMR$REC$.V.LINES#=J;

   9127  2 004411   200021 720100                    LXL0    J,,AUTO
         2 004412   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004413   300041 440100                    SXL0    33,,PR3
         2 004414   005774 710000 2                  TRA     s:9363

     1385     9128    3               CASE(LOADOPT);

     1386     9129    3                 AMR$REC$.V.LOAD#=BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->

   9129  2 004415   100003 473500                    LDP3    3,,PR1
         2 004416   300000 236100                    LDQ     0,,PR3
         2 004417   777777 376007                    ANQ     -1,DL
         2 004420   000043 736000                    QLS     35
         2 004421   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 004422   000032 772000                    QRL     26
         2 004423   400025 676100                    ERQ     21,,PR4
         2 004424   001400 376007                    ANQ     768,DL
         2 004425   400025 656100                    ERSQ    21,,PR4
         2 004426   005774 710000 2                  TRA     s:9363

     1387     9130    3                      OUT$BLK.CODE,1);
     1388     9131    3               CASE(LDBYPROOPT);

     1389     9132    3                 CALL BLD_VLP_AREA(%FPRG) ALTRET(CXB$PROC55);

   9132  2 004427   000004 236000 3                  LDQ     4
         2 004430   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004431   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004432   006013 702000 2                  TSX2    CXB$PROC55

     1390     9133    3                AMR$REC$.FPRG_->VLP$FPRG.LDBYPRO# = TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.
              9133                          CODE;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:268  

   9133  2 004433   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004434   000021 471500                    LDP1    17,,PR0
         2 004435   200011 473500                    LDP3    TEMP$,,AUTO
         2 004436   300003 474500                    LDP4    3,,PR3
         2 004437   400000 236100                    LDQ     0,,PR4
         2 004440   000033 736000                    QLS     27
         2 004441   100000 552140                    STBQ    0,'40'O,PR1
         2 004442   005774 710000 2                  TRA     s:9363

     1391     9134    3               CASE(LRDL0OPT);

     1392     9135    3                 AMR$REC$.V.LRDL0#=J;

   9135  2 004443   200021 720100                    LXL0    J,,AUTO
         2 004444   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004445   300031 440100                    SXL0    25,,PR3
         2 004446   005774 710000 2                  TRA     s:9363

     1393     9136    3               CASE(LSLIDEOPT);

     1394     9137    3                 AMR$REC$.V.LSLIDE#=J;

   9137  2 004447   200021 720100                    LXL0    J,,AUTO
         2 004450   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004451   300031 740100                    STX0    25,,PR3
         2 004452   005774 710000 2                  TRA     s:9363

     1395     9138    3               CASE(LSTAOROPT);

     1396     9139    3                AMR$REC$.V.LSTAOR# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   9139  2 004453   100003 473500                    LDP3    3,,PR1
         2 004454   300000 236100                    LDQ     0,,PR3
         2 004455   777777 376007                    ANQ     -1,DL
         2 004456   000043 736000                    QLS     35
         2 004457   000000 474400 xsym               LDP4    CPSL_SEG3$
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:269  
         2 004460   000034 772000                    QRL     28
         2 004461   400025 676100                    ERQ     21,,PR4
         2 004462   000300 376007                    ANQ     192,DL
         2 004463   400025 656100                    ERSQ    21,,PR4
         2 004464   005774 710000 2                  TRA     s:9363

     1397     9140    3               CASE(MARGINOPT);

     1398     9141        /*
     1399     9142          ****  Get vlp area if one doesn't exist. Keep throughout job due to
     1400     9143                multiple entries in vlp.
     1401     9144        */
     1402     9145    3                 IF AMR$REC$.TAB_=ADDR(NIL)

   9145  2 004465   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004466   300016 236100                    LDQ     14,,PR3
         2 004467   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 004470   004506 601000 2                  TNZ     s:9152

     1403     9146    3                    THEN
     1404     9147    4                       DO;

     1405     9148    4                          MCB.SIZE=SIZEC(CPSL_CVLP_TAB);

   9148  2 004471   000040 235007                    LDA     32,DL
         2 004472   200004 474500                    LDP4    @MCB,,AUTO
         2 004473   400006 755100                    STA     6,,PR4

     1406     9149    4                          CALL GETVLPA(AMR$REC$.TAB_) ALTRET(PROCOPTRET);

   9149  2 004474   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 004475   000016 036003                    ADLQ    14,DU
         2 004476   200265 756100                    STQ     I+1,,AUTO
         2 004477   006661 701000 2                  TSX1    GETVLPA
         2 004500   006020 702000 2                  TSX2    PROCOPTRET

     1407     9150    4                          AMR$REC$.TAB_->AM$TAB=CPSL_CVLP_TAB;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:270  

   9150  2 004501   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004502   000016 471500                    LDP1    14,,PR0
         2 004503   000100 100400                    MLR     fill='000'O
         2 004504   000000 000040 xsym               ADSC9   CPSL_CVLP_TAB            cn=0,n=32
         2 004505   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32

     1408     9151    4                       END;

     1409     9152    3                 AMR$REC$.TAB_->AM$TAB.MARGIN#=J;

   9152  2 004506   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004507   000016 471500                    LDP1    14,,PR0
         2 004510   200021 236100                    LDQ     J,,AUTO
         2 004511   000033 736000                    QLS     27
         2 004512   100000 552140                    STBQ    0,'40'O,PR1
         2 004513   005774 710000 2                  TRA     s:9363

     1410     9153    3               CASE(MAXVOLOPT);

     1411     9154    3                 AMR$REC$.V.MAXVOL#=J;

   9154  2 004514   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004515   200021 236100                    LDQ     J,,AUTO
         2 004516   000022 736000                    QLS     18
         2 004517   300037 552120                    STBQ    31,'20'O,PR3
         2 004520   005774 710000 2                  TRA     s:9363

     1412     9155    3               CASE(MINPHYSOPT) ;

     1413     9156    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55) ;

   9156  2 004521   000006 236000 3                  LDQ     6
         2 004522   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004523   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004524   006013 702000 2                  TSX2    CXB$PROC55

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:271  
     1414     9157    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.MINPHYS# = J ;

   9157  2 004525   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004526   000002 471500                    LDP1    2,,PR0
         2 004527   200021 720100                    LXL0    J,,AUTO
         2 004530   100003 440100                    SXL0    3,,PR1
         2 004531   005774 710000 2                  TRA     s:9363

     1415     9158    3               CASE(MYSTATIONOPT);

     1416     9159    3                 CALL BLD_VLP_AREA(%SETSTA) ALTRET(CXB$PROC55);

   9159  2 004532   000002 236000 3                  LDQ     2
         2 004533   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004534   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004535   006013 702000 2                  TSX2    CXB$PROC55

     1417     9160    3                 AMR$REC$.SETSTA_->AM$SETSTA.MYSTATION#=

   9160  2 004536   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004537   000002 471500                    LDP1    2,,PR0
         2 004540   200011 473500                    LDP3    TEMP$,,AUTO
         2 004541   300003 474500                    LDP4    3,,PR3
         2 004542   400003 475500                    LDP5    3,,PR4
         2 004543   500004 236100                    LDQ     4,,PR5
         2 004544   000033 772000                    QRL     27
         2 004545   000000 620006                    EAX0    0,QL
         2 004546   040100 100540                    MLR     fill='040'O
         2 004547   500004 200010                    ADSC9   4,,PR5                   cn=1,n=*X0
         2 004550   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         2 004551   005774 710000 2                  TRA     s:9363

     1418     9161    3                       TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1419     9162    3               CASE(NOFILEOPT);

     1420     9163    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55);

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:272  
   9163  2 004552   000006 236000 3                  LDQ     6
         2 004553   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004554   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004555   006013 702000 2                  TSX2    CXB$PROC55

     1421     9164    3                AMR$REC$.VIRTUAL_->VLP$VIRTUAL.NOFILE# = BINBIT(TEMP$->OUT$BLK.SUBLK$(
              9164                          0)->OUT$BLK.CODE,1);

   9164  2 004556   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004557   000002 471500                    LDP1    2,,PR0
         2 004560   200011 473500                    LDP3    TEMP$,,AUTO
         2 004561   300003 474500                    LDP4    3,,PR3
         2 004562   400000 236100                    LDQ     0,,PR4
         2 004563   777777 376007                    ANQ     -1,DL
         2 004564   000043 736000                    QLS     35
         2 004565   000001 772000                    QRL     1
         2 004566   100000 676100                    ERQ     0,,PR1
         2 004567   200000 376003                    ANQ     65536,DU
         2 004570   100000 656100                    ERSQ    0,,PR1
         2 004571   005774 710000 2                  TRA     s:9363

     1422     9165    3               CASE(NRECSOPT);

     1423     9166    3                 AMR$REC$.V.NRECS#=J;         /*Value to *A*/

   9166  2 004572   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004573   200021 235100                    LDA     J,,AUTO
         2 004574   300034 755100                    STA     28,,PR3
         2 004575   005774 710000 2                  TRA     s:9363

     1424     9167    3               CASE(OLATCHOPT);

     1425     9168    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);

   9168  2 004576   000002 236000 3                  LDQ     2
         2 004577   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004600   006723 701000 2                  TSX1    BLD_VLP_AREA
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:273  
         2 004601   006013 702000 2                  TSX2    CXB$PROC55

     1426     9169    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OLATCH# = BINBIT(TEMP$->OUT$BLK.
              9169                          SUBLK$(0)->OUT$BLK.CODE,1);

   9169  2 004602   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004603   000002 471500                    LDP1    2,,PR0
         2 004604   200011 473500                    LDP3    TEMP$,,AUTO
         2 004605   300003 474500                    LDP4    3,,PR3
         2 004606   400000 236100                    LDQ     0,,PR4
         2 004607   777777 376007                    ANQ     -1,DL
         2 004610   000043 736000                    QLS     35
         2 004611   000001 772000                    QRL     1
         2 004612   100013 676100                    ERQ     11,,PR1
         2 004613   200000 376003                    ANQ     65536,DU
         2 004614   100013 656100                    ERSQ    11,,PR1
         2 004615   005774 710000 2                  TRA     s:9363

     1427     9170    3               CASE(OLOCKOPT);

     1428     9171    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);

   9171  2 004616   000002 236000 3                  LDQ     2
         2 004617   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004620   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004621   006013 702000 2                  TSX2    CXB$PROC55

     1429     9172    3                AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OLOCK# = BINBIT(TEMP$->OUT$BLK.SUBLK$
              9172                          (0)->OUT$BLK.CODE,1);

   9172  2 004622   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004623   000002 471500                    LDP1    2,,PR0
         2 004624   200011 473500                    LDP3    TEMP$,,AUTO
         2 004625   300003 474500                    LDP4    3,,PR3
         2 004626   400000 236100                    LDQ     0,,PR4
         2 004627   777777 376007                    ANQ     -1,DL
         2 004630   000043 736000                    QLS     35
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:274  
         2 004631   100013 676100                    ERQ     11,,PR1
         2 004632   400000 376003                    ANQ     -131072,DU
         2 004633   100013 656100                    ERSQ    11,,PR1
         2 004634   005774 710000 2                  TRA     s:9363

     1430     9173    3               CASE(OMSGTYPOPT);

     1431     9174    3                CALL BLD_VLP_AREA(%SETSTA) ALTRET(CXB$PROC55);

   9174  2 004635   000002 236000 3                  LDQ     2
         2 004636   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004637   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004640   006013 702000 2                  TSX2    CXB$PROC55

     1432     9175    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OMSGTYP#=

   9175  2 004641   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004642   000002 471500                    LDP1    2,,PR0
         2 004643   200011 473500                    LDP3    TEMP$,,AUTO
         2 004644   300003 474500                    LDP4    3,,PR3
         2 004645   400003 475500                    LDP5    3,,PR4
         2 004646   500004 236100                    LDQ     4,,PR5
         2 004647   000033 772000                    QRL     27
         2 004650   000000 620006                    EAX0    0,QL
         2 004651   040100 100540                    MLR     fill='040'O
         2 004652   500004 200010                    ADSC9   4,,PR5                   cn=1,n=*X0
         2 004653   100011 000010                    ADSC9   9,,PR1                   cn=0,n=8
         2 004654   005774 710000 2                  TRA     s:9363

     1433     9176    3                       TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1434     9177    3               CASE(ORGOPT);

     1435     9178    3                 AMR$REC$.V.ORG#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;

   9178  2 004655   100003 473500                    LDP3    3,,PR1
         2 004656   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 004657   300000 236100                    LDQ     0,,PR3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:275  
         2 004660   000011 736000                    QLS     9
         2 004661   400024 552110                    STBQ    20,'10'O,PR4
         2 004662   005774 710000 2                  TRA     s:9363

     1436     9179    3               CASE(OSTATIONOPT);

     1437     9180    3                 CALL BLD_VLP_AREA(%SETSTA) ALTRET(CXB$PROC55);

   9180  2 004663   000002 236000 3                  LDQ     2
         2 004664   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004665   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004666   006013 702000 2                  TSX2    CXB$PROC55

     1438     9181    3                 AMR$REC$.SETSTA_->AM$SETSTA.OSTA.OSTATION#=

   9181  2 004667   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004670   000002 471500                    LDP1    2,,PR0
         2 004671   200011 473500                    LDP3    TEMP$,,AUTO
         2 004672   300003 474500                    LDP4    3,,PR3
         2 004673   400003 475500                    LDP5    3,,PR4
         2 004674   500004 236100                    LDQ     4,,PR5
         2 004675   000033 772000                    QRL     27
         2 004676   000000 620006                    EAX0    0,QL
         2 004677   040100 100540                    MLR     fill='040'O
         2 004700   500004 200010                    ADSC9   4,,PR5                   cn=1,n=*X0
         2 004701   100007 000010                    ADSC9   7,,PR1                   cn=0,n=8
         2 004702   005774 710000 2                  TRA     s:9363

     1439     9182    3                       TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1440     9183    3               CASE(PHYSICALOPT) ;

     1441     9184    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55) ;

   9184  2 004703   000006 236000 3                  LDQ     6
         2 004704   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004705   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004706   006013 702000 2                  TSX2    CXB$PROC55
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:276  

     1442     9185    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.PHYSICAL# = J ;

   9185  2 004707   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004710   000002 471500                    LDP1    2,,PR0
         2 004711   200021 720100                    LXL0    J,,AUTO
         2 004712   100003 740100                    STX0    3,,PR1
         2 004713   005774 710000 2                  TRA     s:9363

     1443     9186    3               CASE(PROFILEOPT) ;

     1444     9187    3                 CALL BLD_VLP_AREA(%FPRG) ALTRET(CXB$PROC55) ;

   9187  2 004714   000004 236000 3                  LDQ     4
         2 004715   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004716   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 004717   006013 702000 2                  TSX2    CXB$PROC55

     1445     9188    3                 AMR$REC$.FPRG_->VLP$FPRG.PROFILE#.C# =

   9188  2 004720   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 004721   000021 471500                    LDP1    17,,PR0
         2 004722   200011 473500                    LDP3    TEMP$,,AUTO
         2 004723   300003 474500                    LDP4    3,,PR3
         2 004724   400004 236100                    LDQ     4,,PR4
         2 004725   100016 552140                    STBQ    14,'40'O,PR1

     1446     9189    3                             TEMP$ -> OUT$BLK.SUBLK$(0)->P$S.COUNT ;
     1447     9190    3                 AMR$REC$.FPRG_->VLP$FPRG.PROFILE#.T# =

   9190  2 004726   000021 471500                    LDP1    17,,PR0
         2 004727   300003 474500                    LDP4    3,,PR3
         2 004730   400004 236100                    LDQ     4,,PR4
         2 004731   000033 772000                    QRL     27
         2 004732   000000 620006                    EAX0    0,QL
         2 004733   040100 100540                    MLR     fill='040'O
         2 004734   400004 200010                    ADSC9   4,,PR4                   cn=1,n=*X0
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:277  
         2 004735   100016 200013                    ADSC9   14,,PR1                  cn=1,n=11
         2 004736   005774 710000 2                  TRA     s:9363

     1448     9191    3                             TEMP$ -> OUT$BLK.SUBLK$(0)->P$S.TEXT ;
     1449     9192    3               CASE(PROCATTROPT, PROCATTRSIZEOPT) ;

     1450     9193    3                 CALL ATTR_OPTS(AMR$REC$.PROCATTR_) ALTRET(PROCOPTRET);

   9193  2 004737   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 004740   000011 036003                    ADLQ    9,DU
         2 004741   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 004742   007764 701000 2                  TSX1    ATTR_OPTS
         2 004743   006020 702000 2                  TSX2    PROCOPTRET
         2 004744   005774 710000 2                  TRA     s:9363

     1451     9194    3               CASE(QISSOPT);

     1452     9195    3                 AMR$REC$.V.QISS# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   9195  2 004745   100003 473500                    LDP3    3,,PR1
         2 004746   300000 236100                    LDQ     0,,PR3
         2 004747   777777 376007                    ANQ     -1,DL
         2 004750   000043 736000                    QLS     35
         2 004751   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 004752   000015 772000                    QRL     13
         2 004753   400041 676100                    ERQ     33,,PR4
         2 004754   000030 376003                    ANQ     24,DU
         2 004755   400041 656100                    ERSQ    33,,PR4
         2 004756   005774 710000 2                  TRA     s:9363

     1453     9196    3               CASE(RECLOPT);

     1454     9197    3                 AMR$REC$.V.RECL#=J;             /*Value into *A*/

   9197  2 004757   200021 720100                    LXL0    J,,AUTO
         2 004760   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004761   300030 440100                    SXL0    24,,PR3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:278  
         2 004762   005774 710000 2                  TRA     s:9363

     1455     9198    3               CASE(RPAGEOPT);

     1456     9199        /* ****             Get vlp area if one doesn't exist*/
     1457     9200    3                 IF AMR$REC$.HDR_=ADDR(NIL)

   9200  2 004763   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 004764   300017 236100                    LDQ     15,,PR3
         2 004765   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 004766   005012 601000 2                  TNZ     s:9208

     1458     9201    3                    THEN
     1459     9202    4                       DO;

     1460     9203    4                          MCB.SIZE=SIZEC(CPSL_CVLP_HDR);

   9203  2 004767   000010 235007                    LDA     8,DL
         2 004770   200004 474500                    LDP4    @MCB,,AUTO
         2 004771   400006 755100                    STA     6,,PR4

     1461     9204    4                          CALL GETVLPA(AMR$REC$.HDR_) ALTRET(PROCOPTRET);

   9204  2 004772   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 004773   000017 036003                    ADLQ    15,DU
         2 004774   200265 756100                    STQ     I+1,,AUTO
         2 004775   006661 701000 2                  TSX1    GETVLPA
         2 004776   006020 702000 2                  TSX2    PROCOPTRET

     1462     9205    4                          AMR$REC$.HDR_->AM$HDR=CPSL_CVLP_HDR;

   9205  2 004777   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005000   000017 471500                    LDP1    15,,PR0
         2 005001   100001 236100                    LDQ     1,,PR1
         2 005002   000033 772000                    QRL     27
         2 005003   000005 620006                    EAX0    5,QL
         2 005004   000140 100400                    MLR     fill='000'O
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:279  
         2 005005   000000 000010 xsym               ADSC9   CPSL_CVLP_HDR            cn=0,n=8
         2 005006   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1463     9206    4                          AMR$REC$.HDR_->AM$HDR.TITL.L#=0;

   9206  2 005007   000017 471500                    LDP1    15,,PR0
         2 005010   000000 236003                    LDQ     0,DU
         2 005011   100001 552140                    STBQ    1,'40'O,PR1

     1464     9207    4                       END;

     1465     9208    3                AMR$REC$.HDR_->AM$HDR.CTL.RESETPAGE# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)
              9208                          ->OUT$BLK.CODE,1);

   9208  2 005012   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005013   000017 471500                    LDP1    15,,PR0
         2 005014   200011 473500                    LDP3    TEMP$,,AUTO
         2 005015   300003 474500                    LDP4    3,,PR3
         2 005016   400000 236100                    LDQ     0,,PR4
         2 005017   777777 376007                    ANQ     -1,DL
         2 005020   000043 736000                    QLS     35
         2 005021   000010 772000                    QRL     8
         2 005022   100000 676100                    ERQ     0,,PR1
         2 005023   001000 376003                    ANQ     512,DU
         2 005024   100000 656100                    ERSQ    0,,PR1

     1466     9209    3                 AMR$REC$.V.INITZ.SCRUB# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.
              9209                          CODE,1);

   9209  2 005025   200011 471500                    LDP1    TEMP$,,AUTO
         2 005026   100003 473500                    LDP3    3,,PR1
         2 005027   300000 236100                    LDQ     0,,PR3
         2 005030   777777 376007                    ANQ     -1,DL
         2 005031   000043 736000                    QLS     35
         2 005032   000022 772000                    QRL     18
         2 005033   000022 676100                    ERQ     18,,PR0
         2 005034   400000 376007                    ANQ     -131072,DL
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:280  
         2 005035   000022 656100                    ERSQ    18,,PR0
         2 005036   005774 710000 2                  TRA     s:9363

     1467     9210    3               CASE(SCRUBOPT);

     1468     9211    3                 AMR$REC$.V.INITZ.SCRUB# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.
              9211                          CODE,1);

   9211  2 005037   100003 473500                    LDP3    3,,PR1
         2 005040   300000 236100                    LDQ     0,,PR3
         2 005041   777777 376007                    ANQ     -1,DL
         2 005042   000043 736000                    QLS     35
         2 005043   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005044   000022 772000                    QRL     18
         2 005045   400022 676100                    ERQ     18,,PR4
         2 005046   400000 376007                    ANQ     -131072,DL
         2 005047   400022 656100                    ERSQ    18,,PR4
         2 005050   005774 710000 2                  TRA     s:9363

     1469     9212    3               CASE(SEEDOPT);

     1470     9213    4                 DO CASE(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE);

   9213  2 005051   100003 473500                    LDP3    3,,PR1
         2 005052   300000 236100                    LDQ     0,,PR3
         2 005053   777777 376007                    ANQ     -1,DL
         2 005054   000474 136007                    SBLQ    316,DL
         2 005055   000003 116007                    CMPQ    3,DL
         2 005056   005060 602006 2                  TNC     s:9213+7,QL
         2 005057   005774 710000 2                  TRA     s:9363
         2 005060   005070 710000 2                  TRA     s:9218
         2 005061   005063 710000 2                  TRA     s:9215
         2 005062   005070 710000 2                  TRA     s:9218

     1471     9214    4                   CASE(SEED_NONE);

     1472     9215    4                     AMR$REC$.V.SEED#=%NO#;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:281  

   9215  2 005063   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005064   400045 450100                    STZ     37,,PR4

     1473     9216    4                     AMR$REC$.V.SEEDSPECIFIED#=%NO#;

   9216  2 005065   000007 236000 3                  LDQ     7
         2 005066   400036 356100                    ANSQ    30,,PR4
         2 005067   005774 710000 2                  TRA     s:9363

     1474     9217    4                   CASE(SEED_OCT, SEED_QUOTE);

     1475     9218    4                     AMR$REC$.V.SEED#=BINBIT(J, 36);

   9218  2 005070   200021 236100                    LDQ     J,,AUTO
         2 005071   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005072   400045 756100                    STQ     37,,PR4

     1476     9219    4                     AMR$REC$.V.SEEDSPECIFIED#=%YES#;

   9219  2 005073   010000 236007                    LDQ     4096,DL
         2 005074   400036 256100                    ORSQ    30,,PR4

     1477     9220    4                 END;  /* Do Case */

   9220  2 005075   005774 710000 2                  TRA     s:9363

     1478     9221    3               CASE(SEGNUMOPT) ;

     1479     9222    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55) ;

   9222  2 005076   000006 236000 3                  LDQ     6
         2 005077   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 005100   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 005101   006013 702000 2                  TSX2    CXB$PROC55

     1480     9223    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.SEGNUM# =
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:282  

   9223  2 005102   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005103   000002 471500                    LDP1    2,,PR0
         2 005104   200011 473500                    LDP3    TEMP$,,AUTO
         2 005105   300003 474500                    LDP4    3,,PR3
         2 005106   400000 236100                    LDQ     0,,PR4
         2 005107   100000 552104                    STBQ    0,'04'O,PR1
         2 005110   005774 710000 2                  TRA     s:9363

     1481     9224    3                     TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;
     1482     9225    3               CASE(SEGSIZEOPT) ;

     1483     9226    3                 CALL BLD_VLP_AREA(%VIRTUAL) ALTRET(CXB$PROC55) ;

   9226  2 005111   000006 236000 3                  LDQ     6
         2 005112   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 005113   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 005114   006013 702000 2                  TSX2    CXB$PROC55

     1484     9227    3                 AMR$REC$.VIRTUAL_->VLP$VIRTUAL.SEGSIZE# = J ;

   9227  2 005115   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005116   000002 471500                    LDP1    2,,PR0
         2 005117   200021 235100                    LDA     J,,AUTO
         2 005120   100002 755100                    STA     2,,PR1
         2 005121   005774 710000 2                  TRA     s:9363

     1485     9228    3               CASE(SEQCOLOPT);

     1486     9229    3                 AMR$REC$.V.SEQ#=%YES#;

   9229  2 005122   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 005123   300041 236100                    LDQ     33,,PR3
         2 005124   000010 376000 3                  ANQ     8
         2 005125   000400 276003                    ORQ     256,DU
         2 005126   300041 756100                    STQ     33,,PR3

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:283  
     1487     9230    3                 AMR$REC$.V.SEQCOL#=J;

   9230  2 005127   200021 236100                    LDQ     J,,AUTO
         2 005130   000033 736000                    QLS     27
         2 005131   300041 552140                    STBQ    33,'40'O,PR3
         2 005132   005774 710000 2                  TRA     s:9363

     1488     9231    3               CASE(SEQIDOPT);

     1489     9232    3                 AMR$REC$.V.SEQ#=%YES#;

   9232  2 005133   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 005134   300041 236100                    LDQ     33,,PR3
         2 005135   000010 376000 3                  ANQ     8
         2 005136   000400 276003                    ORQ     256,DU
         2 005137   300041 756100                    STQ     33,,PR3

     1490     9233    3                 AMR$REC$.V.SEQID#=TEMP$->OUT$BLK.SUBLK$(0)->P$S.TEXT;

   9233  2 005140   100003 474500                    LDP4    3,,PR1
         2 005141   400004 236100                    LDQ     4,,PR4
         2 005142   000033 772000                    QRL     27
         2 005143   000000 620006                    EAX0    0,QL
         2 005144   040100 100540                    MLR     fill='040'O
         2 005145   400004 200010                    ADSC9   4,,PR4                   cn=1,n=*X0
         2 005146   300042 000004                    ADSC9   34,,PR3                  cn=0,n=4
         2 005147   005774 710000 2                  TRA     s:9363

     1491     9234    3               CASE(SEQOPT);

     1492     9235    3                 AMR$REC$.V.SEQ# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   9235  2 005150   100003 473500                    LDP3    3,,PR1
         2 005151   300000 236100                    LDQ     0,,PR3
         2 005152   777777 376007                    ANQ     -1,DL
         2 005153   000043 736000                    QLS     35
         2 005154   000000 474400 xsym               LDP4    CPSL_SEG3$
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:284  
         2 005155   000011 772000                    QRL     9
         2 005156   400041 676100                    ERQ     33,,PR4
         2 005157   000600 376003                    ANQ     384,DU
         2 005160   400041 656100                    ERSQ    33,,PR4
         2 005161   005774 710000 2                  TRA     s:9363

     1493     9236    3               CASE(SHAREOPT);

     1494     9237    3                 AMR$REC$.V.SHARE#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;

   9237  2 005162   100003 473500                    LDP3    3,,PR1
         2 005163   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005164   300000 236100                    LDQ     0,,PR3
         2 005165   000003 736000                    QLS     3
         2 005166   400022 676100                    ERQ     18,,PR4
         2 005167   000030 376007                    ANQ     24,DL
         2 005170   400022 656100                    ERSQ    18,,PR4
         2 005171   005774 710000 2                  TRA     s:9363

     1495     9238    3               CASE(SNOPT);

     1496     9239        /*
     1497     9240          ****  Append new sn's to existing sn's
     1498     9241        */
     1499     9242    3                 IF (AMR$REC$.SN_~=ADDR(NIL)) AND (AMR$REC$.SN_->AM$SN.SN#(0)

   9242  2 005172   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 005173   300001 236100                    LDQ     1,,PR3
         2 005174   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 005175   005263 600000 2                  TZE     s:9269
         2 005176   300001 474500                    LDP4    1,,PR3
         2 005177   040000 106500                    CMPC    fill='040'O
         2 005200   400001 000006                    ADSC9   1,,PR4                   cn=0,n=6
         2 005201   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 005202   005263 600000 2                  TZE     s:9269

     1500     9243    3                      ~=' ')
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:285  
     1501     9244    3                    THEN
     1502     9245    4                       DO;

     1503     9246    4                          MCB.SIZE=(AMR$REC$.SN_->AM$SN.NUM#*6)+4; /*Old sn size*/

   9246  2 005203   200004 475500                    LDP5    @MCB,,AUTO
         2 005204   400000 236100                    LDQ     0,,PR4
         2 005205   000006 402007                    MPY     6,DL
         2 005206   000004 036007                    ADLQ    4,DL
         2 005207   500006 756100                    STQ     6,,PR5

     1504     9247    4                          MCB.SIZE=MCB.SIZE+(TEMP$->OUT$BLK.NSUBLKS*6);

   9247  2 005210   200011 471500                    LDP1    TEMP$,,AUTO
         2 005211   100001 236100                    LDQ     1,,PR1
         2 005212   000022 772000                    QRL     18
         2 005213   000006 402007                    MPY     6,DL
         2 005214   500006 036100                    ADLQ    6,,PR5
         2 005215   500006 756100                    STQ     6,,PR5

     1505     9248        /*
     1506     9249          ****  Get new area large enough for old and new sn's
     1507     9250        */
     1508     9251    4                          CALL X$ALLOCATE(MCB) ALTRET(CXB$PROC55);

   9251  2 005216   200004 630500                    EPPR0   @MCB,,AUTO
         2 005217   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005220   000000 701000 xent               TSX1    X$ALLOCATE
         2 005221   006013 702000 2                  TSX2    CXB$PROC55

     1509     9252    4                          TEMP2$=AMR$REC$.SN_;

   9252  2 005222   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005223   000001 236100                    LDQ     1,,PR0
         2 005224   200013 756100                    STQ     TEMP2$,,AUTO

     1510     9253    4                          AMR$REC$.SN_=MCB.ADDRESS$;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:286  

   9253  2 005225   200004 471500                    LDP1    @MCB,,AUTO
         2 005226   100000 236100                    LDQ     0,,PR1
         2 005227   000001 756100                    STQ     1,,PR0

     1511     9254        /*
     1512     9255          ****  Move all sn's to new area
     1513     9256        */
     1514     9257    4                          AMR$REC$.SN_->AM$SN.NUM#=TEMP2$->AM$SN.NUM#;

   9257  2 005230   000001 473500                    LDP3    1,,PR0
         2 005231   200013 474500                    LDP4    TEMP2$,,AUTO
         2 005232   400000 235100                    LDA     0,,PR4
         2 005233   300000 755100                    STA     0,,PR3

     1515     9258    5                          DO J=0 TO TEMP2$->AM$SN.NUM#-1;

   9258  2 005234   200021 450100                    STZ     J,,AUTO
         2 005235   005247 710000 2                  TRA     s:9260+1

     1516     9259    5                             AMR$REC$.SN_->AM$SN.SN#(J)=TEMP2$->AM$SN.SN#(J);

   9259  2 005236   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005237   000001 471500                    LDP1    1,,PR0
         2 005240   200021 236100                    LDQ     J,,AUTO
         2 005241   000006 402007                    MPY     6,DL
         2 005242   200013 473500                    LDP3    TEMP2$,,AUTO
         2 005243   040106 100506                    MLR     fill='040'O
         2 005244   300001 000006                    ADSC9   1,Q,PR3                  cn=0,n=6
         2 005245   100001 000006                    ADSC9   1,Q,PR1                  cn=0,n=6

     1517     9260    5                          END;

   9260  2 005246   200021 054100                    AOS     J,,AUTO
         2 005247   200013 471500                    LDP1    TEMP2$,,AUTO
         2 005250   200021 236100                    LDQ     J,,AUTO
         2 005251   100000 116100                    CMPQ    0,,PR1
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:287  
         2 005252   005236 604000 2                  TMI     s:9259

     1518     9261    4                          MCB.ADDRESS$=TEMP2$;

   9261  2 005253   200013 236100                    LDQ     TEMP2$,,AUTO
         2 005254   200004 473500                    LDP3    @MCB,,AUTO
         2 005255   300000 756100                    STQ     0,,PR3

     1519     9262    4                          CALL X$DEALLOCATE(MCB) ALTRET(CXB$PROC45); /*Del. Old area*/

   9262  2 005256   200004 630500                    EPPR0   @MCB,,AUTO
         2 005257   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005260   000000 701000 xent               TSX1    X$DEALLOCATE
         2 005261   006004 702000 2                  TSX2    CXB$PROC45

     1520     9263    4                       END;

   9263  2 005262   005301 710000 2                  TRA     s:9273

     1521     9264    3                    ELSE
     1522     9265        /*
     1523     9266          ****  Delete blanks SN if in EXISTENCE...USED to reset dcb sn's
     1524     9267        */
     1525     9268    4                       DO;

     1526     9269    4                          MCB.SIZE=(TEMP$->OUT$BLK.NSUBLKS*6)+4;

   9269  2 005263   100001 236100                    LDQ     1,,PR1
         2 005264   000022 772000                    QRL     18
         2 005265   000006 402007                    MPY     6,DL
         2 005266   000004 036007                    ADLQ    4,DL
         2 005267   200004 474500                    LDP4    @MCB,,AUTO
         2 005270   400006 756100                    STQ     6,,PR4

     1527     9270    4                          CALL GETVLPA(AMR$REC$.SN_) ALTRET(PROCOPTRET);

   9270  2 005271   000000 236000 xsym               LDQ     CPSL_SEG3$
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:288  
         2 005272   000001 036003                    ADLQ    1,DU
         2 005273   200265 756100                    STQ     I+1,,AUTO
         2 005274   006661 701000 2                  TSX1    GETVLPA
         2 005275   006020 702000 2                  TSX2    PROCOPTRET

     1528     9271    4                          AMR$REC$.SN_->AM$SN.NUM#=0;

   9271  2 005276   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005277   000001 471500                    LDP1    1,,PR0
         2 005300   100000 450100                    STZ     0,,PR1

     1529     9272    4                       END;

     1530     9273    3                 TVAL=AMR$REC$.SN_->AM$SN.NUM#;

   9273  2 005301   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005302   000001 471500                    LDP1    1,,PR0
         2 005303   100000 235100                    LDA     0,,PR1
         2 005304   200022 755100                    STA     TVAL,,AUTO

     1531     9274    3                 AMR$REC$.SN_->AM$SN.NUM#=AMR$REC$.SN_->AM$SN.NUM#+TEMP$->

   9274  2 005305   000001 471500                    LDP1    1,,PR0
         2 005306   200011 473500                    LDP3    TEMP$,,AUTO
         2 005307   300001 236100                    LDQ     1,,PR3
         2 005310   000022 772000                    QRL     18
         2 005311   100000 036100                    ADLQ    0,,PR1
         2 005312   100000 756100                    STQ     0,,PR1

     1532     9275    3                      OUT$BLK.NSUBLKS;
     1533     9276        /* ****              Store serial number into the vlp*/
     1534     9277    4                 DO J=0 TO TEMP$->OUT$BLK.NSUBLKS-1;

   9277  2 005313   200021 450100                    STZ     J,,AUTO
         2 005314   005336 710000 2                  TRA     s:9281+1

     1535     9278    4                    PTR$=TEMP$->OUT$BLK.SUBLK$(J);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:289  

   9278  2 005315   200011 470500                    LDP0    TEMP$,,AUTO
         2 005316   200021 720100                    LXL0    J,,AUTO
         2 005317   000003 236110                    LDQ     3,X0,PR0
         2 005320   200012 756100                    STQ     PTR$,,AUTO

     1536     9279    4                    AMR$REC$.SN_->AM$SN.SN#(TVAL)=PTR$->P$S.TEXT;

   9279  2 005321   000000 471400 xsym               LDP1    CPSL_SEG3$
         2 005322   100001 473500                    LDP3    1,,PR1
         2 005323   200012 474500                    LDP4    PTR$,,AUTO
         2 005324   400004 236100                    LDQ     4,,PR4
         2 005325   000033 772000                    QRL     27
         2 005326   000000 621006                    EAX1    0,QL
         2 005327   200022 236100                    LDQ     TVAL,,AUTO
         2 005330   000006 402007                    MPY     6,DL
         2 005331   040106 100540                    MLR     fill='040'O
         2 005332   400004 200011                    ADSC9   4,,PR4                   cn=1,n=*X1
         2 005333   300001 000006                    ADSC9   1,Q,PR3                  cn=0,n=6

     1537     9280    4                    TVAL=TVAL+1;

   9280  2 005334   200022 054100                    AOS     TVAL,,AUTO

     1538     9281    4                 END;

   9281  2 005335   200021 054100                    AOS     J,,AUTO
         2 005336   200011 470500                    LDP0    TEMP$,,AUTO
         2 005337   000001 236100                    LDQ     1,,PR0
         2 005340   000022 772000                    QRL     18
         2 005341   200021 116100                    CMPQ    J,,AUTO
         2 005342   005315 605400 2                  TPNZ    s:9278
         2 005343   005774 710000 2                  TRA     s:9363

     1539     9282    3               CASE(SPANNEDOPT);

     1540     9283    3                AMR$REC$.V.SPANNED# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:290  
              9283                          ;

   9283  2 005344   100003 473500                    LDP3    3,,PR1
         2 005345   300000 236100                    LDQ     0,,PR3
         2 005346   777777 376007                    ANQ     -1,DL
         2 005347   000043 736000                    QLS     35
         2 005350   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005351   000026 772000                    QRL     22
         2 005352   400025 676100                    ERQ     21,,PR4
         2 005353   030000 376007                    ANQ     12288,DL
         2 005354   400025 656100                    ERSQ    21,,PR4
         2 005355   005774 710000 2                  TRA     s:9363

     1541     9284    3               CASE(SPAREOPT);

     1542     9285    3                 AMR$REC$.V.SPARE#=J;

   9285  2 005356   200021 720100                    LXL0    J,,AUTO
         2 005357   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 005360   300032 740100                    STX0    26,,PR3
         2 005361   005774 710000 2                  TRA     s:9363

     1543     9286    3               CASE(TABOPT);

     1544     9287        /* ****              Get vlp area if one doesn't exist. Keep throughout job
     1545     9288                             due to multiple entries in VLP.*/
     1546     9289    3                 IF AMR$REC$.TAB_=ADDR(NIL)

   9289  2 005362   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 005363   300016 236100                    LDQ     14,,PR3
         2 005364   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 005365   005403 601000 2                  TNZ     s:9297

     1547     9290    3                    THEN
     1548     9291    4                       DO;

     1549     9292    4                          MCB.SIZE=SIZEC(CPSL_CVLP_TAB);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:291  

   9292  2 005366   000040 235007                    LDA     32,DL
         2 005367   200004 474500                    LDP4    @MCB,,AUTO
         2 005370   400006 755100                    STA     6,,PR4

     1550     9293    4                          CALL GETVLPA(AMR$REC$.TAB_) ALTRET(PROCOPTRET);

   9293  2 005371   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 005372   000016 036003                    ADLQ    14,DU
         2 005373   200265 756100                    STQ     I+1,,AUTO
         2 005374   006661 701000 2                  TSX1    GETVLPA
         2 005375   006020 702000 2                  TSX2    PROCOPTRET

     1551     9294    4                          AMR$REC$.TAB_->AM$TAB=CPSL_CVLP_TAB;

   9294  2 005376   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005377   000016 471500                    LDP1    14,,PR0
         2 005400   000100 100400                    MLR     fill='000'O
         2 005401   000000 000040 xsym               ADSC9   CPSL_CVLP_TAB            cn=0,n=32
         2 005402   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32

     1552     9295    4                       END;

     1553     9296        /* ****              Insert tab SETtings*/
     1554     9297    4                 DO J=0 TO TEMP$->OUT$BLK.NSUBLKS-1;

   9297  2 005403   200021 450100                    STZ     J,,AUTO
         2 005404   005427 710000 2                  TRA     s:9300+1

     1555     9298    4                    CALL CXX$DECBIN(TEMP$->OUT$BLK.SUBLK$(J)->P$S.COUNT,TVAL);

   9298  2 005405   200011 470500                    LDP0    TEMP$,,AUTO
         2 005406   200021 720100                    LXL0    J,,AUTO
         2 005407   000003 471510                    LDP1    3,X0,PR0
         2 005410   200022 633500                    EPPR3   TVAL,,AUTO
         2 005411   200273 453500                    STP3    BUFSIZC+3,,AUTO
         2 005412   100004 634500                    EPPR4   4,,PR1
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:292  
         2 005413   200272 454500                    STP4    BUFSIZC+2,,AUTO
         2 005414   200272 630500                    EPPR0   BUFSIZC+2,,AUTO
         2 005415   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005416   000000 701000 xent               TSX1    CXX$DECBIN
         2 005417   000000 011000                    NOP     0

     1556     9299    4                    AMR$REC$.TAB_->AM$TAB.TABS#(J)=TVAL;

   9299  2 005420   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005421   000016 471500                    LDP1    14,,PR0
         2 005422   200021 235100                    LDA     J,,AUTO
         2 005423   000105 101500                    MRL     fill='000'O
         2 005424   200022 000004                    ADSC9   TVAL,,AUTO               cn=0,n=4
         2 005425   100000 200001                    ADSC9   0,A,PR1                  cn=1,n=1

     1557     9300    4                 END;

   9300  2 005426   200021 054100                    AOS     J,,AUTO
         2 005427   200011 470500                    LDP0    TEMP$,,AUTO
         2 005430   000001 236100                    LDQ     1,,PR0
         2 005431   000022 772000                    QRL     18
         2 005432   200021 116100                    CMPQ    J,,AUTO
         2 005433   005405 605400 2                  TPNZ    s:9298

     1558     9301    4                 DO J=TEMP$->OUT$BLK.NSUBLKS TO 30; /*Zero remainder*/

   9301  2 005434   200021 756100                    STQ     J,,AUTO
         2 005435   005445 710000 2                  TRA     s:9303+1

     1559     9302    4                    AMR$REC$.TAB_->AM$TAB.TABS#(J)=0;

   9302  2 005436   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005437   000016 471500                    LDP1    14,,PR0
         2 005440   200021 235100                    LDA     J,,AUTO
         2 005441   000105 101400                    MRL     fill='000'O
         2 005442   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         2 005443   100000 200001                    ADSC9   0,A,PR1                  cn=1,n=1
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:293  

     1560     9303    4                 END;

   9303  2 005444   200021 054100                    AOS     J,,AUTO
         2 005445   200021 235100                    LDA     J,,AUTO
         2 005446   000036 115007                    CMPA    30,DL
         2 005447   005436 604400 2                  TMOZ    s:9302
         2 005450   005774 710000 2                  TRA     s:9363

     1561     9304    3               CASE(TERMCONLGLOPT);

     1562     9305    3                AMR$REC$.V.TERMCONLGL# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE
              9305                          ,1);

   9305  2 005451   100003 473500                    LDP3    3,,PR1
         2 005452   300000 236100                    LDQ     0,,PR3
         2 005453   777777 376007                    ANQ     -1,DL
         2 005454   000043 736000                    QLS     35
         2 005455   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005456   000023 772000                    QRL     19
         2 005457   400036 676100                    ERQ     30,,PR4
         2 005460   200000 376007                    ANQ     65536,DL
         2 005461   400036 656100                    ERSQ    30,,PR4
         2 005462   005774 710000 2                  TRA     s:9363

     1563     9306    3               CASE(TITLEOPT);

     1564     9307    3                 IF AMR$REC$.HDR_~=ADDR(NIL)

   9307  2 005463   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 005464   300017 236100                    LDQ     15,,PR3
         2 005465   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 005466   005512 600000 2                  TZE     s:9321

     1565     9308    3                    THEN
     1566     9309    4                       DO;

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:294  
     1567     9310        /* ***                   Preserve cntl info. Until after new vlp area is
     1568     9311                                 allocated*/
     1569     9312    4                          AM_HDR.CTL=AMR$REC$.HDR_->AM$HDR.CTL;

   9312  2 005467   300017 474500                    LDP4    15,,PR3
         2 005470   400000 236100                    LDQ     0,,PR4
         2 005471   200023 756100                    STQ     AM_HDR,,AUTO

     1570     9313    4                          MCB.SIZE=TEMP$->OUT$BLK.SUBLK$(0)->P$S

   9313  2 005472   100003 475500                    LDP5    3,,PR1
         2 005473   500004 236100                    LDQ     4,,PR5
         2 005474   000033 772000                    QRL     27
         2 005475   000010 036007                    ADLQ    8,DL
         2 005476   200004 476500                    LDP6    @MCB,,AUTO
         2 005477   600006 756100                    STQ     6,,PR6

     1571     9314    4                               .COUNT+SIZEC(CPSL_CVLP_HDR);
     1572     9315    4                          CALL GETVLPA(AMR$REC$.HDR_) ALTRET(PROCOPTRET);

   9315  2 005500   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 005501   000017 036003                    ADLQ    15,DU
         2 005502   200265 756100                    STQ     I+1,,AUTO
         2 005503   006661 701000 2                  TSX1    GETVLPA
         2 005504   006020 702000 2                  TSX2    PROCOPTRET

     1573     9316        /* ****                  Restore cntl info.      */
     1574     9317    4                          AMR$REC$.HDR_->AM$HDR.CTL=AM_HDR.CTL;

   9317  2 005505   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005506   000017 471500                    LDP1    15,,PR0
         2 005507   200023 236100                    LDQ     AM_HDR,,AUTO
         2 005510   100000 756100                    STQ     0,,PR1

     1575     9318    4                       END;

   9318  2 005511   005535 710000 2                  TRA     s:9326
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:295  

     1576     9319    3                    ELSE
     1577     9320    4                       DO;

     1578     9321    4                          MCB.SIZE=TEMP$->OUT$BLK.SUBLK$(0)->P$S.COUNT

   9321  2 005512   100003 474500                    LDP4    3,,PR1
         2 005513   400004 236100                    LDQ     4,,PR4
         2 005514   000033 772000                    QRL     27
         2 005515   000010 036007                    ADLQ    8,DL
         2 005516   200004 475500                    LDP5    @MCB,,AUTO
         2 005517   500006 756100                    STQ     6,,PR5

     1579     9322    4                               +SIZEC(CPSL_CVLP_HDR);
     1580     9323    4                          CALL GETVLPA(AMR$REC$.HDR_) ALTRET(PROCOPTRET);

   9323  2 005520   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 005521   000017 036003                    ADLQ    15,DU
         2 005522   200265 756100                    STQ     I+1,,AUTO
         2 005523   006661 701000 2                  TSX1    GETVLPA
         2 005524   006020 702000 2                  TSX2    PROCOPTRET

     1581     9324    4                          AMR$REC$.HDR_->AM$HDR=CPSL_CVLP_HDR;

   9324  2 005525   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005526   000017 471500                    LDP1    15,,PR0
         2 005527   100001 236100                    LDQ     1,,PR1
         2 005530   000033 772000                    QRL     27
         2 005531   000005 620006                    EAX0    5,QL
         2 005532   000140 100400                    MLR     fill='000'O
         2 005533   000000 000010 xsym               ADSC9   CPSL_CVLP_HDR            cn=0,n=8
         2 005534   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1582     9325    4                       END;

     1583     9326    3                 AMR$REC$.HDR_->AM$HDR.TITL.L#=TEMP$->OUT$BLK.SUBLK$(0)->

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:296  
   9326  2 005535   000017 471500                    LDP1    15,,PR0
         2 005536   200011 473500                    LDP3    TEMP$,,AUTO
         2 005537   300003 474500                    LDP4    3,,PR3
         2 005540   400004 236100                    LDQ     4,,PR4
         2 005541   100001 552140                    STBQ    1,'40'O,PR1

     1584     9327    3                      P$S.COUNT;
     1585     9328    3                 AMR$REC$.HDR_->AM$HDR.TITL.TITLE#=TEMP$->OUT$BLK.SUBLK$(0)->

   9328  2 005542   000017 471500                    LDP1    15,,PR0
         2 005543   100001 236100                    LDQ     1,,PR1
         2 005544   000033 772000                    QRL     27
         2 005545   200011 473500                    LDP3    TEMP$,,AUTO
         2 005546   300003 474500                    LDP4    3,,PR3
         2 005547   000000 620006                    EAX0    0,QL
         2 005550   400004 236100                    LDQ     4,,PR4
         2 005551   000033 772000                    QRL     27
         2 005552   000000 621006                    EAX1    0,QL
         2 005553   040140 100540                    MLR     fill='040'O
         2 005554   400004 200011                    ADSC9   4,,PR4                   cn=1,n=*X1
         2 005555   100001 200010                    ADSC9   1,,PR1                   cn=1,n=*X0
         2 005556   005774 710000 2                  TRA     s:9363

     1586     9329    3                      P$S.TEXT;
     1587     9330    3               CASE(TYPEOPT);

     1588     9331    3                 AMR$REC$.V.TYPE#=TEMP$->OUT$BLK.SUBLK$(0)->P$S.TEXT;

   9331  2 005557   100003 473500                    LDP3    3,,PR1
         2 005560   300004 236100                    LDQ     4,,PR3
         2 005561   000033 772000                    QRL     27
         2 005562   000000 620006                    EAX0    0,QL
         2 005563   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005564   040100 100540                    MLR     fill='040'O
         2 005565   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         2 005566   400025 000002                    ADSC9   21,,PR4                  cn=0,n=2
         2 005567   005774 710000 2                  TRA     s:9363
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:297  

     1589     9332    3               CASE(UOPT0OPT);

     1590     9333    3                AMR$REC$.V.UOPT#(0) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9333                          ;

   9333  2 005570   100003 473500                    LDP3    3,,PR1
         2 005571   300000 236100                    LDQ     0,,PR3
         2 005572   777777 376007                    ANQ     -1,DL
         2 005573   000043 736000                    QLS     35
         2 005574   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005575   400024 676100                    ERQ     20,,PR4
         2 005576   600000 376003                    ANQ     -65536,DU
         2 005577   400024 656100                    ERSQ    20,,PR4
         2 005600   005774 710000 2                  TRA     s:9363

     1591     9334    3               CASE(UATTROPT, UATTRSIZEOPT) ;

     1592     9335    3                 CALL ATTR_OPTS(AMR$REC$.UATTR_) ALTRET(PROCOPTRET);

   9335  2 005601   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 005602   000007 036003                    ADLQ    7,DU
         2 005603   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 005604   007764 701000 2                  TSX1    ATTR_OPTS
         2 005605   006020 702000 2                  TSX2    PROCOPTRET
         2 005606   005774 710000 2                  TRA     s:9363

     1593     9336    3               CASE(UOPT1OPT);

     1594     9337    3                AMR$REC$.V.UOPT#(1) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9337                          ;

   9337  2 005607   100003 473500                    LDP3    3,,PR1
         2 005610   300000 236100                    LDQ     0,,PR3
         2 005611   777777 376007                    ANQ     -1,DL
         2 005612   000043 736000                    QLS     35
         2 005613   000000 474400 xsym               LDP4    CPSL_SEG3$
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:298  
         2 005614   000002 772000                    QRL     2
         2 005615   400024 676100                    ERQ     20,,PR4
         2 005616   140000 376003                    ANQ     49152,DU
         2 005617   400024 656100                    ERSQ    20,,PR4
         2 005620   005774 710000 2                  TRA     s:9363

     1595     9338    3               CASE(UOPT2OPT);

     1596     9339    3                AMR$REC$.V.UOPT#(2) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9339                          ;

   9339  2 005621   100003 473500                    LDP3    3,,PR1
         2 005622   300000 236100                    LDQ     0,,PR3
         2 005623   777777 376007                    ANQ     -1,DL
         2 005624   000043 736000                    QLS     35
         2 005625   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005626   000004 772000                    QRL     4
         2 005627   400024 676100                    ERQ     20,,PR4
         2 005630   030000 376003                    ANQ     12288,DU
         2 005631   400024 656100                    ERSQ    20,,PR4
         2 005632   005774 710000 2                  TRA     s:9363

     1597     9340    3               CASE(UOPT3OPT);

     1598     9341    3                AMR$REC$.V.UOPT#(3) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9341                          ;

   9341  2 005633   100003 473500                    LDP3    3,,PR1
         2 005634   300000 236100                    LDQ     0,,PR3
         2 005635   777777 376007                    ANQ     -1,DL
         2 005636   000043 736000                    QLS     35
         2 005637   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005640   000006 772000                    QRL     6
         2 005641   400024 676100                    ERQ     20,,PR4
         2 005642   006000 376003                    ANQ     3072,DU
         2 005643   400024 656100                    ERSQ    20,,PR4
         2 005644   005774 710000 2                  TRA     s:9363
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:299  

     1599     9342    3               CASE(UOPT4OPT);

     1600     9343    3                AMR$REC$.V.UOPT#(4) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9343                          ;

   9343  2 005645   100003 473500                    LDP3    3,,PR1
         2 005646   300000 236100                    LDQ     0,,PR3
         2 005647   777777 376007                    ANQ     -1,DL
         2 005650   000043 736000                    QLS     35
         2 005651   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005652   000010 772000                    QRL     8
         2 005653   400024 676100                    ERQ     20,,PR4
         2 005654   001400 376003                    ANQ     768,DU
         2 005655   400024 656100                    ERSQ    20,,PR4
         2 005656   005774 710000 2                  TRA     s:9363

     1601     9344    3               CASE(UOPT5OPT);

     1602     9345    3                AMR$REC$.V.UOPT#(5) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9345                          ;

   9345  2 005657   100003 473500                    LDP3    3,,PR1
         2 005660   300000 236100                    LDQ     0,,PR3
         2 005661   777777 376007                    ANQ     -1,DL
         2 005662   000043 736000                    QLS     35
         2 005663   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005664   000012 772000                    QRL     10
         2 005665   400024 676100                    ERQ     20,,PR4
         2 005666   000300 376003                    ANQ     192,DU
         2 005667   400024 656100                    ERSQ    20,,PR4
         2 005670   005774 710000 2                  TRA     s:9363

     1603     9346    3               CASE(UOPT6OPT);

     1604     9347    3                AMR$REC$.V.UOPT#(6) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9347                          ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:300  

   9347  2 005671   100003 473500                    LDP3    3,,PR1
         2 005672   300000 236100                    LDQ     0,,PR3
         2 005673   777777 376007                    ANQ     -1,DL
         2 005674   000043 736000                    QLS     35
         2 005675   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005676   000014 772000                    QRL     12
         2 005677   400024 676100                    ERQ     20,,PR4
         2 005700   000060 376003                    ANQ     48,DU
         2 005701   400024 656100                    ERSQ    20,,PR4
         2 005702   005774 710000 2                  TRA     s:9363

     1605     9348    3               CASE(UOPT7OPT);

     1606     9349    3                AMR$REC$.V.UOPT#(7) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9349                          ;

   9349  2 005703   100003 473500                    LDP3    3,,PR1
         2 005704   300000 236100                    LDQ     0,,PR3
         2 005705   777777 376007                    ANQ     -1,DL
         2 005706   000043 736000                    QLS     35
         2 005707   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005710   000016 772000                    QRL     14
         2 005711   400024 676100                    ERQ     20,,PR4
         2 005712   000014 376003                    ANQ     12,DU
         2 005713   400024 656100                    ERSQ    20,,PR4
         2 005714   005774 710000 2                  TRA     s:9363

     1607     9350    3               CASE(UOPT8OPT);

     1608     9351    3                AMR$REC$.V.UOPT#(8) = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1)
              9351                          ;

   9351  2 005715   100003 473500                    LDP3    3,,PR1
         2 005716   300000 236100                    LDQ     0,,PR3
         2 005717   777777 376007                    ANQ     -1,DL
         2 005720   000043 736000                    QLS     35
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:301  
         2 005721   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005722   000020 772000                    QRL     16
         2 005723   400024 676100                    ERQ     20,,PR4
         2 005724   000003 376003                    ANQ     3,DU
         2 005725   400024 656100                    ERSQ    20,,PR4
         2 005726   005774 710000 2                  TRA     s:9363

     1609     9352    3               CASE(VOLACCOPT);

     1610     9353    3                 AMR$REC$.V.VOLACCESS#=TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;

   9353  2 005727   100003 473500                    LDP3    3,,PR1
         2 005730   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005731   300000 236100                    LDQ     0,,PR3
         2 005732   000022 736000                    QLS     18
         2 005733   400041 676100                    ERQ     33,,PR4
         2 005734   000007 376003                    ANQ     7,DU
         2 005735   400041 656100                    ERSQ    33,,PR4
         2 005736   005774 710000 2                  TRA     s:9363

     1611     9354    3               CASE(VOLOPT);

     1612     9355    3               CASE(WASOPT);

     1613     9356    3                 CALL BLD_VLP_AREA(%SETSTA)  ALTRET(CXB$PROC55);

   9356  2 005737   000002 236000 3                  LDQ     2
         2 005740   200257 756100                    STQ     FID_WSN+3,,AUTO
         2 005741   006723 701000 2                  TSX1    BLD_VLP_AREA
         2 005742   006013 702000 2                  TSX2    CXB$PROC55

     1614     9357    3                AMR$REC$.SETSTA_->AM$SETSTA.OSTA.WAS# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0
              9357                          )->OUT$BLK.CODE,1);

   9357  2 005743   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 005744   000002 471500                    LDP1    2,,PR0
         2 005745   200011 473500                    LDP3    TEMP$,,AUTO
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:302  
         2 005746   300003 474500                    LDP4    3,,PR3
         2 005747   400000 236100                    LDQ     0,,PR4
         2 005750   777777 376007                    ANQ     -1,DL
         2 005751   000043 736000                    QLS     35
         2 005752   000010 772000                    QRL     8
         2 005753   100013 676100                    ERQ     11,,PR1
         2 005754   001000 376003                    ANQ     512,DU
         2 005755   100013 656100                    ERSQ    11,,PR1
         2 005756   005774 710000 2                  TRA     s:9363

     1615     9358    3               CASE(XTENDOPT);

     1616     9359    3                 AMR$REC$.V.XTEND# = BINBIT(TEMP$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   9359  2 005757   100003 473500                    LDP3    3,,PR1
         2 005760   300000 236100                    LDQ     0,,PR3
         2 005761   777777 376007                    ANQ     -1,DL
         2 005762   000043 736000                    QLS     35
         2 005763   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 005764   000004 772000                    QRL     4
         2 005765   400036 676100                    ERQ     30,,PR4
         2 005766   030000 376003                    ANQ     12288,DU
         2 005767   400036 656100                    ERSQ    30,,PR4
         2 005770   005774 710000 2                  TRA     s:9363

     1617     9360    3               CASE(XTNSIZEOPT);

     1618     9361    3                 AMR$REC$.V.XTNSIZE#=J;

   9361  2 005771   200021 720100                    LXL0    J,,AUTO
         2 005772   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 005773   300032 440100                    SXL0    26,,PR3

     1619     9362    3               END CXB$PROC10;

     1620     9363    2              I=I+1;                       /*Bump index to next option*/

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:303  
   9363  2 005774   200020 054100                    AOS     I,,AUTO

     1621     9364    2           END CXB$PROC5;

   9364  2 005775   200003 470500                    LDP0    @BLK$,,AUTO
         2 005776   000000 471500                    LDP1    0,,PR0
         2 005777   100001 236100                    LDQ     1,,PR1
         2 006000   000022 772000                    QRL     18
         2 006001   200020 116100                    CMPQ    I,,AUTO
         2 006002   002161 605400 2                  TPNZ    s:8845

     1622     9365    1     RETURN;

   9365  2 006003   000000 702200 xent               TSX2  ! X66_ARET

   9361  2 006004                       CXB$PROC45   null
     1623     9366
     1624     9367    1   CXB$PROC45:;
     1625     9368    1     CPSL_PARAM.ERRCODE = MCB.ERR ;

   9368  2 006004   200004 470500                    LDP0    @MCB,,AUTO
         2 006005   000010 236100                    LDQ     8,,PR0
         2 006006   200006 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 006007   100002 756100                    STQ     2,,PR1

     1626     9369    1     CPSL_PARAM.ERR_CPOS = 511;

   9369  2 006010   000777 235007                    LDA     511,DL
         2 006011   100003 755100                    STA     3,,PR1

     1627     9370    1     GOTO PROCOPTRET ;

   9370  2 006012   006020 710000 2                  TRA     PROCOPTRET

   9369  2 006013                       CXB$PROC55   null
     1628     9371    1   CXB$PROC55:;
     1629     9372    1     CPSL_PARAM.ERRCODE = E_AMFULL ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:304  

   9372  2 006013   000000 236000 1                  LDQ     E_AMFULL
         2 006014   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 006015   000002 756100                    STQ     2,,PR0

     1630     9373    1     CPSL_PARAM.ERR_CPOS = 511;

   9373  2 006016   000777 235007                    LDA     511,DL
         2 006017   000003 755100                    STA     3,,PR0

   9373  2 006020                       PROCOPTRET   null
     1631     9374    1   PROCOPTRET: ;
     1632     9375    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   9375  2 006020   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 006021   000011 236000 3                  LDQ     9
         2 006022   000001 356100                    ANSQ    1,,PR0

     1633     9376    1     RETURN;

   9376  2 006023   000000 702200 xent               TSX2  ! X66_ARET

     1634     9377                   %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:305  
     1635     9378        /**********************************************************************/
     1636     9379        /*I*   NAME:   BLD_ACCESS_VLP
     1637     9380               PURPOSE: Build access type VLP
     1638     9381               CALL:   CALL BLD_ACCESS_VLP(VLP$)
     1639     9382               INPUT:  VLP$ - pointer to VLP area to be initialized
     1640     9383                            - parse input
     1641     9384               OUTPUT: VLP in assign merge record
     1642     9385               DESCRIPTION: Creates READ,WRITE,ACSVEH,ACCESS VLPS for SET assignments.
     1643     9386        */
     1644     9387        /**********************************************************************/
     1645     9388    1   BLD_ACCESS_VLP: PROC(VLP$) ALTRET;

   9388  2 006024   200256 741300       BLD_ACCESS_* STX1  ! FID_WSN+2,,AUTO

     1646     9389    2   DCL VLP$ PTR;                                    /*Ptr to vlp to be initialized*/
     1647     9390    2   DCL CNTLS(0:17) BIT(1);
     1648     9391    2   DCL CNTLS_TRANS(0:17) UBIN BYTE CALIGNED CONSTANT INIT(0, 1, 2, 3, 4, 5,
     1649     9392    2                                     6, 7, 10, 9, 11, 8, 12, 13, 14, 15, 16, 17) ;
     1650     9393                          /* The above table is to convert CNTLS from parse
     1651     9394                              tree so they end up in the correct bit position.
     1652     9395                          */
     1653     9396    2   DCL FILL$ PTR;                                   /*Ptr to current vlp entry*/
     1654     9397    2   DCL OLDVFCSIZE UBIN WORD;                         /* To add to end of old vfc */
     1655     9398    2   DCL 1 VLP$ATTR BASED,                            /*Vlp length*/
     1656     9399    2          2 SIZE# SBIN WORD;
     1657     9400    2   DCL 1 VLP$ACSVEH BASED,                          /*Access vehicle vlp*/
     1658     9401    2          2 FFLG BIT(18),
     1659     9402    2          2 C UBIN BYTE UNAL,
     1660     9403    2          2 VEHICLE# CHAR(VLP$ACSVEH.C);
     1661     9404    2   DCL 1 VLP$ACCESS BASED,                          /*Access vlp*/
     1662     9405    2          2 FFLG BIT(18),
     1663     9406    2          2 ACCT# CHAR(8);
     1664     9407    2   DCL B$WORD(0:0) UBIN WORD BASED;
     1665     9408                                                         /**/
     1666     9409        /* ****    Build control information             */
     1667     9410    3     DO CASE(TEMP$->OUT$BLK.CODE);

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:306  
   9410  2 006025   200011 470500                    LDP0    TEMP$,,AUTO
         2 006026   000000 236100                    LDQ     0,,PR0
         2 006027   777777 376007                    ANQ     -1,DL
         2 006030   000025 136007                    SBLQ    21,DL
         2 006031   000157 116007                    CMPQ    111,DL
         2 006032   006034 602006 2                  TNC     s:9410+7,QL
         2 006033   006254 710000 2                  TRA     s:9426
         2 006034   006221 710000 2                  TRA     s:9416
         2 006035   006254 710000 2                  TRA     s:9426
         2 006036   006221 710000 2                  TRA     s:9416
         2 006037   006254 710000 2                  TRA     s:9426
         2 006040   006254 710000 2                  TRA     s:9426
         2 006041   006254 710000 2                  TRA     s:9426
         2 006042   006254 710000 2                  TRA     s:9426
         2 006043   006254 710000 2                  TRA     s:9426
         2 006044   006254 710000 2                  TRA     s:9426
         2 006045   006254 710000 2                  TRA     s:9426
         2 006046   006254 710000 2                  TRA     s:9426
         2 006047   006254 710000 2                  TRA     s:9426
         2 006050   006254 710000 2                  TRA     s:9426
         2 006051   006254 710000 2                  TRA     s:9426
         2 006052   006254 710000 2                  TRA     s:9426
         2 006053   006254 710000 2                  TRA     s:9426
         2 006054   006254 710000 2                  TRA     s:9426
         2 006055   006254 710000 2                  TRA     s:9426
         2 006056   006254 710000 2                  TRA     s:9426
         2 006057   006254 710000 2                  TRA     s:9426
         2 006060   006254 710000 2                  TRA     s:9426
         2 006061   006254 710000 2                  TRA     s:9426
         2 006062   006254 710000 2                  TRA     s:9426
         2 006063   006254 710000 2                  TRA     s:9426
         2 006064   006254 710000 2                  TRA     s:9426
         2 006065   006254 710000 2                  TRA     s:9426
         2 006066   006254 710000 2                  TRA     s:9426
         2 006067   006254 710000 2                  TRA     s:9426
         2 006070   006254 710000 2                  TRA     s:9426
         2 006071   006254 710000 2                  TRA     s:9426
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:307  
         2 006072   006254 710000 2                  TRA     s:9426
         2 006073   006254 710000 2                  TRA     s:9426
         2 006074   006254 710000 2                  TRA     s:9426
         2 006075   006254 710000 2                  TRA     s:9426
         2 006076   006254 710000 2                  TRA     s:9426
         2 006077   006254 710000 2                  TRA     s:9426
         2 006100   006254 710000 2                  TRA     s:9426
         2 006101   006254 710000 2                  TRA     s:9426
         2 006102   006254 710000 2                  TRA     s:9426
         2 006103   006254 710000 2                  TRA     s:9426
         2 006104   006254 710000 2                  TRA     s:9426
         2 006105   006254 710000 2                  TRA     s:9426
         2 006106   006254 710000 2                  TRA     s:9426
         2 006107   006254 710000 2                  TRA     s:9426
         2 006110   006254 710000 2                  TRA     s:9426
         2 006111   006254 710000 2                  TRA     s:9426
         2 006112   006254 710000 2                  TRA     s:9426
         2 006113   006254 710000 2                  TRA     s:9426
         2 006114   006254 710000 2                  TRA     s:9426
         2 006115   006254 710000 2                  TRA     s:9426
         2 006116   006254 710000 2                  TRA     s:9426
         2 006117   006254 710000 2                  TRA     s:9426
         2 006120   006254 710000 2                  TRA     s:9426
         2 006121   006254 710000 2                  TRA     s:9426
         2 006122   006254 710000 2                  TRA     s:9426
         2 006123   006254 710000 2                  TRA     s:9426
         2 006124   006254 710000 2                  TRA     s:9426
         2 006125   006254 710000 2                  TRA     s:9426
         2 006126   006254 710000 2                  TRA     s:9426
         2 006127   006254 710000 2                  TRA     s:9426
         2 006130   006254 710000 2                  TRA     s:9426
         2 006131   006254 710000 2                  TRA     s:9426
         2 006132   006254 710000 2                  TRA     s:9426
         2 006133   006254 710000 2                  TRA     s:9426
         2 006134   006254 710000 2                  TRA     s:9426
         2 006135   006254 710000 2                  TRA     s:9426
         2 006136   006254 710000 2                  TRA     s:9426
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:308  
         2 006137   006254 710000 2                  TRA     s:9426
         2 006140   006254 710000 2                  TRA     s:9426
         2 006141   006254 710000 2                  TRA     s:9426
         2 006142   006254 710000 2                  TRA     s:9426
         2 006143   006254 710000 2                  TRA     s:9426
         2 006144   006254 710000 2                  TRA     s:9426
         2 006145   006254 710000 2                  TRA     s:9426
         2 006146   006254 710000 2                  TRA     s:9426
         2 006147   006254 710000 2                  TRA     s:9426
         2 006150   006254 710000 2                  TRA     s:9426
         2 006151   006213 710000 2                  TRA     s:9412
         2 006152   006254 710000 2                  TRA     s:9426
         2 006153   006254 710000 2                  TRA     s:9426
         2 006154   006254 710000 2                  TRA     s:9426
         2 006155   006254 710000 2                  TRA     s:9426
         2 006156   006254 710000 2                  TRA     s:9426
         2 006157   006254 710000 2                  TRA     s:9426
         2 006160   006254 710000 2                  TRA     s:9426
         2 006161   006254 710000 2                  TRA     s:9426
         2 006162   006254 710000 2                  TRA     s:9426
         2 006163   006254 710000 2                  TRA     s:9426
         2 006164   006254 710000 2                  TRA     s:9426
         2 006165   006254 710000 2                  TRA     s:9426
         2 006166   006254 710000 2                  TRA     s:9426
         2 006167   006254 710000 2                  TRA     s:9426
         2 006170   006254 710000 2                  TRA     s:9426
         2 006171   006254 710000 2                  TRA     s:9426
         2 006172   006254 710000 2                  TRA     s:9426
         2 006173   006254 710000 2                  TRA     s:9426
         2 006174   006254 710000 2                  TRA     s:9426
         2 006175   006254 710000 2                  TRA     s:9426
         2 006176   006254 710000 2                  TRA     s:9426
         2 006177   006254 710000 2                  TRA     s:9426
         2 006200   006254 710000 2                  TRA     s:9426
         2 006201   006254 710000 2                  TRA     s:9426
         2 006202   006254 710000 2                  TRA     s:9426
         2 006203   006254 710000 2                  TRA     s:9426
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:309  
         2 006204   006254 710000 2                  TRA     s:9426
         2 006205   006254 710000 2                  TRA     s:9426
         2 006206   006254 710000 2                  TRA     s:9426
         2 006207   006254 710000 2                  TRA     s:9426
         2 006210   006254 710000 2                  TRA     s:9426
         2 006211   006254 710000 2                  TRA     s:9426
         2 006212   006216 710000 2                  TRA     s:9414

     1668     9411    3      CASE(READOPT);

     1669     9412    3        CNTLS=%FFLG_READ#;                 /*Read only*/

   9412  2 006213   400000 220003                    LDX0    -131072,DU
         2 006214   200260 740100                    STX0    CNTLS,,AUTO
         2 006215   006254 710000 2                  TRA     s:9426

     1670     9413    3      CASE(WRITEOPT);

     1671     9414    3        CNTLS=%FFLG_WRITE#;                 /*READ,DELR,WNEW,UPD,DELE,REATTR*/

   9414  2 006216   765000 220003                    LDX0    -5632,DU
         2 006217   200260 740100                    STX0    CNTLS,,AUTO
         2 006220   006254 710000 2                  TRA     s:9426

     1672     9415    3      CASE(ACSVEHOPT,ACCESSOPT);

     1673     9416    3        CNTLS='0'B;

   9416  2 006221   000000 220003                    LDX0    0,DU
         2 006222   200260 740100                    STX0    CNTLS,,AUTO

     1674     9417    3        IF TEMP$->OUT$BLK.NSUBLKS>1

   9417  2 006223   000001 222100                    LDX2    1,,PR0
         2 006224   000002 102003                    CMPX2   2,DU
         2 006225   006254 602000 2                  TNC     s:9426

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:310  
     1675     9418    3           THEN   /*Controls were spec'd*/
     1676     9419    4              DO;

     1677     9420    4                 PTR$=TEMP$->OUT$BLK.SUBLK$(1);

   9420  2 006226   000004 236100                    LDQ     4,,PR0
         2 006227   200012 756100                    STQ     PTR$,,AUTO

     1678     9421    5                 DO J=0 TO PTR$->OUT$BLK.NSUBLKS-1;

   9421  2 006230   200021 450100                    STZ     J,,AUTO
         2 006231   006247 710000 2                  TRA     s:9423+1

     1679     9422    5                    CNTLS(CNTLS_TRANS(PTR$->OUT$BLK.SUBLK$(J)->OUT$BLK.CODE-1))=%YES#;

   9422  2 006232   200012 470500                    LDP0    PTR$,,AUTO
         2 006233   200021 720100                    LXL0    J,,AUTO
         2 006234   000003 471510                    LDP1    3,X0,PR0
         2 006235   100000 236100                    LDQ     0,,PR1
         2 006236   777777 376007                    ANQ     -1,DL
         2 006237   000100 101406                    MRL     fill='000'O
         2 006240   000010 600001 1                  ADSC9   E_FPRG_FID_DISKONLY,Q    cn=3,n=1
         2 006241   200272 000004                    ADSC9   BUFSIZC+2,,AUTO          cn=0,n=4
         2 006242   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 006243   003106 060400                    CSL     bolr='003'O
         2 006244   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         2 006245   200260 000001                    BDSC    CNTLS,Q,AUTO             by=0,bit=0,n=1

     1680     9423    5                 END;

   9423  2 006246   200021 054100                    AOS     J,,AUTO
         2 006247   200012 470500                    LDP0    PTR$,,AUTO
         2 006250   000001 236100                    LDQ     1,,PR0
         2 006251   000022 772000                    QRL     18
         2 006252   200021 116100                    CMPQ    J,,AUTO
         2 006253   006232 605400 2                  TPNZ    s:9422

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:311  
     1681     9424    4              END;

     1682     9425    3      END;

     1683     9426    2     MCB.SIZE = SIZEC(VLP$ATTR.SIZE#);      /* Always need this */

   9426  2 006254   000004 235007                    LDA     4,DL
         2 006255   200004 470500                    LDP0    @MCB,,AUTO
         2 006256   000006 755100                    STA     6,,PR0

     1684     9427        /*
     1685     9428          ****  If we already have a vlp area we need to figure out how many bytes
     1686     9429                (not words) it really is (what a pain!)
     1687     9430        */
     1688     9431    2     IF (VLP$ ~= ADDR(NIL))

   9431  2 006257   200257 471500                    LDP1    @VLP$,,AUTO
         2 006260   100000 236100                    LDQ     0,,PR1
         2 006261   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 006262   006366 600000 2                  TZE     s:9459

     1689     9432    2        THEN
     1690     9433    3           DO;

     1691     9434    3              TEMP2$ = PINCRC(VLP$,SIZEC(VLP$ATTR.SIZE#));

   9434  2 006263   000001 036003                    ADLQ    1,DU
         2 006264   200013 756100                    STQ     TEMP2$,,AUTO

     1692     9435    3              IF (TEMP$ -> OUT$BLK.CODE = ACSVEHOPT)

   9435  2 006265   200011 473500                    LDP3    TEMP$,,AUTO
         2 006266   300000 720100                    LXL0    0,,PR3
         2 006267   000027 100003                    CMPX0   23,DU
         2 006270   006334 601000 2                  TNZ     s:9446

     1693     9436    3                 THEN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:312  
     1694     9437    4                    DO WHILE (POFFC(PINCRC(TEMP2$,4),VLP$) <

   9437  2 006271   006313 710000 2                  TRA     s:9443

     1695     9438    4                            (VLP$ -> VLP$ATTR.SIZE# * 4) + SIZEC(VLP$ATTR.SIZE#));
     1696     9439    4                       MCB.SIZE = MCB.SIZE + TEMP2$ -> VLP$ACSVEH.C +

   9439  2 006272   200004 470500                    LDP0    @MCB,,AUTO
         2 006273   200013 471500                    LDP1    TEMP2$,,AUTO
         2 006274   000100 101500                    MRL     fill='000'O
         2 006275   100000 400001                    ADSC9   0,,PR1                   cn=2,n=1
         2 006276   200272 000004                    ADSC9   BUFSIZC+2,,AUTO          cn=0,n=4
         2 006277   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 006300   000006 036100                    ADLQ    6,,PR0
         2 006301   000003 036007                    ADLQ    3,DL
         2 006302   000006 756100                    STQ     6,,PR0

     1697     9440    4                            SIZEC(VLP$ACSVEH.FFLG) + 1;
     1698     9441    4                       TEMP2$ = PINCRC(TEMP2$,TEMP2$ -> VLP$ACSVEH.C +

   9441  2 006303   000100 101500                    MRL     fill='000'O
         2 006304   100000 400001                    ADSC9   0,,PR1                   cn=2,n=1
         2 006305   200272 000004                    ADSC9   BUFSIZC+2,,AUTO          cn=0,n=4
         2 006306   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 006307   000020 736000                    QLS     16
         2 006310   600000 036007                    ADLQ    -65536,DL
         2 006311   200013 036100                    ADLQ    TEMP2$,,AUTO
         2 006312   200013 756100                    STQ     TEMP2$,,AUTO

     1699     9442    4                            SIZEC(VLP$ACSVEH.FFLG) + 1);
     1700     9443    4                    END;

   9443  2 006313   000001 036003                    ADLQ    1,DU
         2 006314   000020 772000                    QRL     16
         2 006315   200257 471500                    LDP1    @VLP$,,AUTO
         2 006316   200272 756100                    STQ     BUFSIZC+2,,AUTO
         2 006317   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:313  
         2 006320   000020 772000                    QRL     16
         2 006321   200273 756100                    STQ     BUFSIZC+3,,AUTO
         2 006322   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 006323   200273 136100                    SBLQ    BUFSIZC+3,,AUTO
         2 006324   100000 473500                    LDP3    0,,PR1
         2 006325   300000 235100                    LDA     0,,PR3
         2 006326   000002 735000                    ALS     2
         2 006327   000004 035007                    ADLA    4,DL
         2 006330   200274 755100                    STA     BUFSIZC+4,,AUTO
         2 006331   200274 116100                    CMPQ    BUFSIZC+4,,AUTO
         2 006332   006272 604000 2                  TMI     s:9439
         2 006333   006363 710000 2                  TRA     s:9454

     1701     9444        /**/
     1702     9445    3                 ELSE
     1703     9446    4                    DO WHILE (POFFC(PINCRC(TEMP2$,SIZEC(VLP$ACCESS.FFLG) +

   9446  2 006334   006343 710000 2                  TRA     s:9453

     1704     9447    4                            SIZEC(VLP$ACCESS.ACCT#)),VLP$) <=
     1705     9448    4                            (VLP$ -> VLP$ATTR.SIZE# * 4) + SIZEC(VLP$ATTR.SIZE#));
     1706     9449    4                       MCB.SIZE = MCB.SIZE + SIZEC(VLP$ACCESS.FFLG) +

   9449  2 006335   200004 470500                    LDP0    @MCB,,AUTO
         2 006336   000012 236007                    LDQ     10,DL
         2 006337   000006 056100                    ASQ     6,,PR0

     1707     9450    4                            SIZEC(VLP$ACCESS.ACCT#);
     1708     9451    4                       TEMP2$ = PINCRC(TEMP2$,SIZEC(VLP$ACCESS.FFLG) +

   9451  2 006340   200013 236100                    LDQ     TEMP2$,,AUTO
         2 006341   000012 036000 3                  ADLQ    10
         2 006342   200013 756100                    STQ     TEMP2$,,AUTO

     1709     9452    4                            SIZEC(VLP$ACCESS.ACCT#));
     1710     9453    4                    END;

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:314  
   9453  2 006343   000012 036000 3                  ADLQ    10
         2 006344   000020 772000                    QRL     16
         2 006345   200257 471500                    LDP1    @VLP$,,AUTO
         2 006346   200272 756100                    STQ     BUFSIZC+2,,AUTO
         2 006347   100000 236100                    LDQ     0,,PR1
         2 006350   000020 772000                    QRL     16
         2 006351   200273 756100                    STQ     BUFSIZC+3,,AUTO
         2 006352   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 006353   200273 136100                    SBLQ    BUFSIZC+3,,AUTO
         2 006354   100000 473500                    LDP3    0,,PR1
         2 006355   300000 235100                    LDA     0,,PR3
         2 006356   000002 735000                    ALS     2
         2 006357   000004 035007                    ADLA    4,DL
         2 006360   200274 755100                    STA     BUFSIZC+4,,AUTO
         2 006361   200274 116100                    CMPQ    BUFSIZC+4,,AUTO
         2 006362   006335 604400 2                  TMOZ    s:9449

     1711     9454    3              OLDVFCSIZE = MCB.SIZE - SIZEC(VLP$ATTR.SIZE#);

   9454  2 006363   000006 235100                    LDA     6,,PR0
         2 006364   000004 135007                    SBLA    4,DL
         2 006365   200262 755100                    STA     OLDVFCSIZE,,AUTO

     1712     9455    3           END;

     1713     9456        /*
     1714     9457          ****  Determine vlp size needed
     1715     9458        */
     1716     9459    2     PTR$=TEMP$->OUT$BLK.SUBLK$(0);

   9459  2 006366   200011 473500                    LDP3    TEMP$,,AUTO
         2 006367   300003 236100                    LDQ     3,,PR3
         2 006370   200012 756100                    STQ     PTR$,,AUTO

     1717     9460    2     IF PTR$->OUT$BLK.NSUBLKS = 0

   9460  2 006371   200012 474500                    LDP4    PTR$,,AUTO
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:315  
         2 006372   400001 220100                    LDX0    1,,PR4
         2 006373   006377 601000 2                  TNZ     s:9464

     1718     9461    2        THEN
     1719     9462    2           MCB.SIZE=MCB.SIZE+10;              /*All was spec'd*/

   9462  2 006374   000012 236007                    LDQ     10,DL
         2 006375   000006 056100                    ASQ     6,,PR0
         2 006376   006431 710000 2                  TRA     s:9472

     1720     9463    2        ELSE
     1721     9464    3           DO J=0 TO PTR$->OUT$BLK.NSUBLKS-1;

   9464  2 006377   200021 450100                    STZ     J,,AUTO
         2 006400   006424 710000 2                  TRA     s:9471+1

     1722     9465    3              IF (TEMP$->OUT$BLK.CODE=ACSVEHOPT)

   9465  2 006401   200011 470500                    LDP0    TEMP$,,AUTO
         2 006402   000000 720100                    LXL0    0,,PR0
         2 006403   000027 100003                    CMPX0   23,DU
         2 006404   006420 601000 2                  TNZ     s:9470

     1723     9466    3                 THEN
     1724     9467    3                    MCB.SIZE=MCB.SIZE+PTR$->OUT$BLK.SUBLK$(J)->OUT$BLK.

   9467  2 006405   200012 471500                    LDP1    PTR$,,AUTO
         2 006406   200021 721100                    LXL1    J,,AUTO
         2 006407   100003 473511                    LDP3    3,X1,PR1
         2 006410   300003 474500                    LDP4    3,,PR3
         2 006411   200004 475500                    LDP5    @MCB,,AUTO
         2 006412   400004 236100                    LDQ     4,,PR4
         2 006413   000033 772000                    QRL     27
         2 006414   500006 036100                    ADLQ    6,,PR5
         2 006415   000003 036007                    ADLQ    3,DL
         2 006416   500006 756100                    STQ     6,,PR5
         2 006417   006423 710000 2                  TRA     s:9471
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:316  

     1725     9468    3                         SUBLK$(0)->P$S.COUNT+3;    /*add c=1,access=2*/
     1726     9469    3                 ELSE
     1727     9470    3                    MCB.SIZE=MCB.SIZE+10;           /*Add ACCOUNT=8,ACCESS=2*/

   9470  2 006420   200004 471500                    LDP1    @MCB,,AUTO
         2 006421   000012 236007                    LDQ     10,DL
         2 006422   100006 056100                    ASQ     6,,PR1

     1728     9471    3           END;

   9471  2 006423   200021 054100                    AOS     J,,AUTO
         2 006424   200012 470500                    LDP0    PTR$,,AUTO
         2 006425   000001 236100                    LDQ     1,,PR0
         2 006426   000022 772000                    QRL     18
         2 006427   200021 116100                    CMPQ    J,,AUTO
         2 006430   006401 605400 2                  TPNZ    s:9465

     1729     9472    2     IF (VLP$ = ADDR(NIL))

   9472  2 006431   200257 470500                    LDP0    @VLP$,,AUTO
         2 006432   000000 236100                    LDQ     0,,PR0
         2 006433   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 006434   006445 601000 2                  TNZ     s:9484

     1730     9473    2        THEN
     1731     9474    3           DO;             /* First time */

     1732     9475    3              CALL GETVLPA(VLP$) ALTRET (BLD_ACC50);

   9475  2 006435   200257 236100                    LDQ     @VLP$,,AUTO
         2 006436   200265 756100                    STQ     I+1,,AUTO
         2 006437   006661 701000 2                  TSX1    GETVLPA
         2 006440   006657 702000 2                  TSX2    BLD_ACC50

     1733     9476    3              VLP$ -> VLP$ATTR.SIZE# = 0;

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:317  
   9476  2 006441   200257 470500                    LDP0    @VLP$,,AUTO
         2 006442   000000 471500                    LDP1    0,,PR0
         2 006443   100000 450100                    STZ     0,,PR1

     1734     9477    3           END;

   9477  2 006444   006507 710000 2                  TRA     s:9501

     1735     9478        /*
     1736     9479          **** If not first time, then get new vlp area and
     1737     9480                move old one before deallocating the old one.
     1738     9481        */
     1739     9482    2        ELSE
     1740     9483    3           DO;

     1741     9484    3              CALL X$ALLOCATE(MCB) ALTRET (BLD_ACC50);

   9484  2 006445   200004 630500                    EPPR0   @MCB,,AUTO
         2 006446   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006447   000000 701000 xent               TSX1    X$ALLOCATE
         2 006450   006657 702000 2                  TSX2    BLD_ACC50

     1742     9485    3              TEMP2$ = VLP$;

   9485  2 006451   200257 470500                    LDP0    @VLP$,,AUTO
         2 006452   000000 236100                    LDQ     0,,PR0
         2 006453   200013 756100                    STQ     TEMP2$,,AUTO

     1743     9486    3              VLP$ = MCB.ADDRESS$;

   9486  2 006454   200004 471500                    LDP1    @MCB,,AUTO
         2 006455   100000 236100                    LDQ     0,,PR1
         2 006456   000000 756100                    STQ     0,,PR0

     1744     9487    4              DO J = 1 TO TEMP2$ -> VLP$ATTR.SIZE#;

   9487  2 006457   000001 235007                    LDA     1,DL
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:318  
         2 006460   200021 755100                    STA     J,,AUTO
         2 006461   006471 710000 2                  TRA     s:9489+1

     1745     9488    4                 VLP$ -> B$WORD(J) = TEMP2$ -> B$WORD(J);

   9488  2 006462   200257 470500                    LDP0    @VLP$,,AUTO
         2 006463   000000 471500                    LDP1    0,,PR0
         2 006464   200013 473500                    LDP3    TEMP2$,,AUTO
         2 006465   200021 720100                    LXL0    J,,AUTO
         2 006466   300000 235110                    LDA     0,X0,PR3
         2 006467   100000 755110                    STA     0,X0,PR1

     1746     9489    4              END;

   9489  2 006470   200021 054100                    AOS     J,,AUTO
         2 006471   200013 471500                    LDP1    TEMP2$,,AUTO
         2 006472   200021 236100                    LDQ     J,,AUTO
         2 006473   100000 116100                    CMPQ    0,,PR1
         2 006474   006462 604400 2                  TMOZ    s:9488

     1747     9490        /*
     1748     9491          ****  Convert the word count to the byte count that we caculated so
     1749     9492                that we know where to put the next vlp item in the list
     1750     9493        */
     1751     9494    3              VLP$ -> VLP$ATTR.SIZE# = OLDVFCSIZE;

   9494  2 006475   000000 473500                    LDP3    0,,PR0
         2 006476   200262 235100                    LDA     OLDVFCSIZE,,AUTO
         2 006477   300000 755100                    STA     0,,PR3

     1752     9495    3              MCB.ADDRESS$ = TEMP2$;

   9495  2 006500   200013 236100                    LDQ     TEMP2$,,AUTO
         2 006501   200004 473500                    LDP3    @MCB,,AUTO
         2 006502   300000 756100                    STQ     0,,PR3

     1753     9496    3              CALL X$DEALLOCATE(MCB) ALTRET (BLD_ACC50);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:319  

   9496  2 006503   200004 630500                    EPPR0   @MCB,,AUTO
         2 006504   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006505   000000 701000 xent               TSX1    X$DEALLOCATE
         2 006506   006657 702000 2                  TSX2    BLD_ACC50

     1754     9497    3           END;

     1755     9498        /*
     1756     9499          ****    Create text,build access and vehicle list for all
     1757     9500        */
     1758     9501    2     IF PTR$->OUT$BLK.NSUBLKS = 0

   9501  2 006507   200012 470500                    LDP0    PTR$,,AUTO
         2 006510   000001 220100                    LDX0    1,,PR0
         2 006511   006536 601000 2                  TNZ     BLD_ACC10

     1759     9502    2        THEN
     1760     9503    3           DO;

     1761     9504    3              FILL$=PINCRC(VLP$,VLP$->VLP$ATTR.SIZE#+4);

   9504  2 006512   200257 471500                    LDP1    @VLP$,,AUTO
         2 006513   100000 473500                    LDP3    0,,PR1
         2 006514   300000 236100                    LDQ     0,,PR3
         2 006515   000011 402007                    MPY     9,DL
         2 006516   000000 116003                    CMPQ    0,DU
         2 006517   006521 605000 2                  TPL     s:9504+7
         2 006520   000044 036003                    ADLQ    36,DU
         2 006521   300001 503506                    ABD     1,QL,PR3
         2 006522   200261 453500                    STP3    FILL$,,AUTO

     1762     9505    3              FILL$->VLP$ACCESS.FFLG=CNTLS;

   9505  2 006523   000100 100500                    MLR     fill='000'O
         2 006524   200260 000002                    ADSC9   CNTLS,,AUTO              cn=0,n=2
         2 006525   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:320  

     1763     9506    3              FILL$->VLP$ACCESS.ACCT#='ALL';

   9506  2 006526   040100 100400                    MLR     fill='040'O
         2 006527   000020 000003 1                  ADSC9   CVLP_ALTKEYS+2           cn=0,n=3
         2 006530   300000 400010                    ADSC9   0,,PR3                   cn=2,n=8

     1764     9507    3              AMR$REC$.ACCESS_->VLP$ATTR.SIZE#=AMR$REC$.ACCESS_->VLP$ATTR.SIZE#+10;

   9507  2 006531   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 006532   400005 475500                    LDP5    5,,PR4
         2 006533   000012 236007                    LDQ     10,DL
         2 006534   500000 056100                    ASQ     0,,PR5

     1765     9508    3           END;

   9508  2 006535   006655 710000 2                  TRA     s:9535

     1766     9509    2        ELSE
     1767     9510        /*
     1768     9511          ****  Build account access and access vehicle lists
     1769     9512        */
     1770     9513    3   BLD_ACC10: DO J=0 TO PTR$->OUT$BLK.NSUBLKS-1;

   9513  2 006536   200021 450100       BLD_ACC10    STZ     J,,AUTO
         2 006537   006651 710000 2                  TRA     s:9534+1

     1771     9514    3              IF TEMP$->OUT$BLK.CODE=ACSVEHOPT

   9514  2 006540   200011 470500                    LDP0    TEMP$,,AUTO
         2 006541   000000 720100                    LXL0    0,,PR0
         2 006542   000027 100003                    CMPX0   23,DU
         2 006543   006616 601000 2                  TNZ     s:9528

     1772     9515    3                 THEN
     1773     9516    4                    DO;

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:321  
     1774     9517    4                       FILL$=PINCRC(VLP$,VLP$->VLP$ATTR.SIZE#+4);

   9517  2 006544   200257 471500                    LDP1    @VLP$,,AUTO
         2 006545   100000 473500                    LDP3    0,,PR1
         2 006546   300000 236100                    LDQ     0,,PR3
         2 006547   000011 402007                    MPY     9,DL
         2 006550   000000 116003                    CMPQ    0,DU
         2 006551   006553 605000 2                  TPL     s:9517+7
         2 006552   000044 036003                    ADLQ    36,DU
         2 006553   300001 503506                    ABD     1,QL,PR3
         2 006554   200261 453500                    STP3    FILL$,,AUTO

     1775     9518    4                       FILL$->VLP$ACSVEH.FFLG=CNTLS;

   9518  2 006555   000100 100500                    MLR     fill='000'O
         2 006556   200260 000002                    ADSC9   CNTLS,,AUTO              cn=0,n=2
         2 006557   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

     1776     9519    4                       FILL$->VLP$ACSVEH.C=

   9519  2 006560   200012 470500                    LDP0    PTR$,,AUTO
         2 006561   200021 720100                    LXL0    J,,AUTO
         2 006562   000003 474510                    LDP4    3,X0,PR0
         2 006563   400003 475500                    LDP5    3,,PR4
         2 006564   000100 100500                    MLR     fill='000'O
         2 006565   500004 000001                    ADSC9   4,,PR5                   cn=0,n=1
         2 006566   300000 400001                    ADSC9   0,,PR3                   cn=2,n=1

     1777     9520    4                         PTR$->OUT$BLK.SUBLK$(J)->OUT$BLK.SUBLK$(0)->P$S.COUNT;
     1778     9521    4                       FILL$->VLP$ACSVEH.VEHICLE#=

   9521  2 006567   000100 101500                    MRL     fill='000'O
         2 006570   300000 400001                    ADSC9   0,,PR3                   cn=2,n=1
         2 006571   200272 000002                    ADSC9   BUFSIZC+2,,AUTO          cn=0,n=2
         2 006572   200272 220100                    LDX0    BUFSIZC+2,,AUTO
         2 006573   200021 721100                    LXL1    J,,AUTO
         2 006574   000003 474511                    LDP4    3,X1,PR0
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:322  
         2 006575   400003 475500                    LDP5    3,,PR4
         2 006576   500004 236100                    LDQ     4,,PR5
         2 006577   000033 772000                    QRL     27
         2 006600   000000 622006                    EAX2    0,QL
         2 006601   040140 100540                    MLR     fill='040'O
         2 006602   500004 200012                    ADSC9   4,,PR5                   cn=1,n=*X2
         2 006603   300000 600010                    ADSC9   0,,PR3                   cn=3,n=*X0

     1779     9522    4                         PTR$->OUT$BLK.SUBLK$(J)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1780     9523    4                       AMR$REC$.ACSVEH_->VLP$ATTR.SIZE#=FILL$->VLP$ACSVEH.C+3+

   9523  2 006604   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 006605   400006 475500                    LDP5    6,,PR4
         2 006606   000100 101500                    MRL     fill='000'O
         2 006607   300000 400001                    ADSC9   0,,PR3                   cn=2,n=1
         2 006610   200272 000004                    ADSC9   BUFSIZC+2,,AUTO          cn=0,n=4
         2 006611   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 006612   500000 036100                    ADLQ    0,,PR5
         2 006613   000003 036007                    ADLQ    3,DL
         2 006614   500000 756100                    STQ     0,,PR5

     1781     9524    4                         AMR$REC$.ACSVEH_->VLP$ATTR.SIZE#;
     1782     9525    4                    END;

   9525  2 006615   006650 710000 2                  TRA     s:9534

     1783     9526    3                 ELSE
     1784     9527    4                    DO;

     1785     9528    4                       FILL$=PINCRC(VLP$,VLP$->VLP$ATTR.SIZE#+4);

   9528  2 006616   200257 471500                    LDP1    @VLP$,,AUTO
         2 006617   100000 473500                    LDP3    0,,PR1
         2 006620   300000 236100                    LDQ     0,,PR3
         2 006621   000011 402007                    MPY     9,DL
         2 006622   000000 116003                    CMPQ    0,DU
         2 006623   006625 605000 2                  TPL     s:9528+7
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:323  
         2 006624   000044 036003                    ADLQ    36,DU
         2 006625   300001 503506                    ABD     1,QL,PR3
         2 006626   200261 453500                    STP3    FILL$,,AUTO

     1786     9529    4                       FILL$->VLP$ACCESS.FFLG=CNTLS;

   9529  2 006627   000100 100500                    MLR     fill='000'O
         2 006630   200260 000002                    ADSC9   CNTLS,,AUTO              cn=0,n=2
         2 006631   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

     1787     9530    4                       FILL$->VLP$ACCESS.ACCT#=

   9530  2 006632   200012 470500                    LDP0    PTR$,,AUTO
         2 006633   200021 720100                    LXL0    J,,AUTO
         2 006634   000003 474510                    LDP4    3,X0,PR0
         2 006635   400003 475500                    LDP5    3,,PR4
         2 006636   500004 236100                    LDQ     4,,PR5
         2 006637   000033 772000                    QRL     27
         2 006640   000000 621006                    EAX1    0,QL
         2 006641   040100 100540                    MLR     fill='040'O
         2 006642   500004 200011                    ADSC9   4,,PR5                   cn=1,n=*X1
         2 006643   300000 400010                    ADSC9   0,,PR3                   cn=2,n=8

     1788     9531    4                         PTR$->OUT$BLK.SUBLK$(J)->OUT$BLK.SUBLK$(0)->P$S.TEXT;
     1789     9532    4                       AMR$REC$.ACCESS_->VLP$ATTR.SIZE#=AMR$REC$.ACCESS_->VLP$ATTR.
              9532                                SIZE#+10;

   9532  2 006644   000000 474400 xsym               LDP4    CPSL_SEG3$
         2 006645   400005 475500                    LDP5    5,,PR4
         2 006646   000012 236007                    LDQ     10,DL
         2 006647   500000 056100                    ASQ     0,,PR5

     1790     9533    4                    END;

     1791     9534    3           END BLD_ACC10;

   9534  2 006650   200021 054100                    AOS     J,,AUTO
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:324  
         2 006651   000001 236100                    LDQ     1,,PR0
         2 006652   000022 772000                    QRL     18
         2 006653   200021 116100                    CMPQ    J,,AUTO
         2 006654   006540 605400 2                  TPNZ    s:9514

     1792     9535    2     RETURN;

   9535  2 006655   200256 221300                    LDX1  ! FID_WSN+2,,AUTO
         2 006656   000001 702211                    TSX2  ! 1,X1

   9532  2 006657                       BLD_ACC50    null
     1793     9536    2   BLD_ACC50: ;
     1794     9537    2     ALTRETURN;

   9537  2 006657   200256 221300                    LDX1  ! FID_WSN+2,,AUTO
         2 006660   000000 702211                    TSX2  ! 0,X1

     1795     9538    2   END BLD_ACCESS_VLP;
     1796     9539                   %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:325  
     1797     9540        /**********************************************************************/
     1798     9541        /*I*   NAME:   GETVLPA
     1799     9542               PURPOSE: Get available area in the assign merge record(SEG3) for VLP
     1800     9543               CALL:   CALL GETVLPA(VLP$)
     1801     9544               INTERFACE: CXB$RELVPA,X$ALLOCATE
     1802     9545               INPUT:  VLP$ - location in fpt to store VLP area pointer
     1803     9546               OUTPUT: VLP$ - pointer to VLP area
     1804     9547               DESCRIPTION: Segment 3 is searched for available vlp storage using
     1805     9548                       the X$ALLOCATE routine. If a vlp area was previously
     1806     9549                       allocated(vlp$~=addr(nil), the old vlp area is released
     1807     9550                       prior to obtaining new vlp space.
     1808     9551        */
     1809     9552        /**********************************************************************/
     1810     9553    1   GETVLPA: PROC(VLP$) ALTRET;

   9553  2 006661   200264 741300       GETVLPA      STX1  ! SIZC+1,,AUTO

     1811     9554    2   DCL VLP$ PTR;                                    /*Ptr to available vlp area*/
     1812     9555        /*
     1813     9556          ****  Release old vlp area before allocating new area
     1814     9557        */
     1815     9558    2     IF VLP$~=ADDR(NIL)

   9558  2 006662   200265 470500                    LDP0    @VLP$,,AUTO
         2 006663   000000 236100                    LDQ     0,,PR0
         2 006664   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 006665   006674 600000 2                  TZE     s:9567

     1816     9559    2        THEN
     1817     9560    3           DO;

     1818     9561    3              MCB.ADDRESS$=VLP$;

   9561  2 006666   200004 471500                    LDP1    @MCB,,AUTO
         2 006667   100000 756100                    STQ     0,,PR1

     1819     9562    3              CALL X$DEALLOCATE(MCB) ALTRET(GETVLPA60);
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:326  

   9562  2 006670   200004 630500                    EPPR0   @MCB,,AUTO
         2 006671   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006672   000000 701000 xent               TSX1    X$DEALLOCATE
         2 006673   006712 702000 2                  TSX2    GETVLPA60

     1820     9563    3           END;

     1821     9564        /*
     1822     9565          ****  Get new area
     1823     9566        */
     1824     9567    2     CALL X$ALLOCATE(MCB) ALTRET(GETVLPA50);

   9567  2 006674   200004 630500                    EPPR0   @MCB,,AUTO
         2 006675   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006676   000000 701000 xent               TSX1    X$ALLOCATE
         2 006677   006706 702000 2                  TSX2    GETVLPA50

     1825     9568    2     VLP$=MCB.ADDRESS$;                    /*Store new ptr in *A*/

   9568  2 006700   200004 470500                    LDP0    @MCB,,AUTO
         2 006701   000000 236100                    LDQ     0,,PR0
         2 006702   200265 471500                    LDP1    @VLP$,,AUTO
         2 006703   100000 756100                    STQ     0,,PR1

     1826     9569    2     RETURN;

   9569  2 006704   200264 221300                    LDX1  ! SIZC+1,,AUTO
         2 006705   000001 702211                    TSX2  ! 1,X1

   9568  2 006706                       GETVLPA50    null
     1827     9570    2   GETVLPA50: ;
     1828     9571        /*E*       ERROR:   CPB-E$AMFULL-C
     1829     9572                   MESSAGE: Assign-merge record has exceeded its maximum size
     1830     9573                   DESCRIPTION: The assign-merge record has exceeded 1024 words
     1831     9574                                which is the maximum size permitted. This is
     1832     9575                                unlikely to occur and may be caused by an X$ALLOCATE
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:327  
     1833     9576                                routine error.
     1834     9577        */
     1835     9578    2     CPSL_PARAM.ERRCODE = E_AMFULL ;

   9578  2 006706   000000 236000 1                  LDQ     E_AMFULL
         2 006707   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 006710   000002 756100                    STQ     2,,PR0

     1836     9579    3     DO WHILE ('0'B) ;

   9579  2 006711   006716 710000 2                  TRA     s:9583

   9567  2 006712                       GETVLPA60    null
     1837     9580    3   GETVLPA60: ;
     1838     9581    3       CPSL_PARAM.ERRCODE = MCB.ERR ;

   9581  2 006712   200004 470500                    LDP0    @MCB,,AUTO
         2 006713   000010 236100                    LDQ     8,,PR0
         2 006714   200006 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 006715   100002 756100                    STQ     2,,PR1

     1839     9582    3     END ;   /* Do While */

     1840     9583    2     CPSL_PARAM.ERR_CPOS = 511;

   9583  2 006716   000777 235007                    LDA     511,DL
         2 006717   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 006720   000003 755100                    STA     3,,PR0

     1841     9584    2     ALTRETURN;

   9584  2 006721   200264 221300                    LDX1  ! SIZC+1,,AUTO
         2 006722   000000 702211                    TSX2  ! 0,X1

     1842     9585    2   END GETVLPA;
     1843     9586                   %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:328  
     1844     9587        /**********************************************************************/
     1845     9588        /*I*   NAME:   BLD_VLP_AREA
     1846     9589               PURPOSE: Build an area to hold VLP if nonexistant
     1847     9590               CALL:   CALL BLD_VLP_AREA(type)
     1848     9591               INPUT:  type - Code for the type of VLP to build.
     1849     9592               OUTPUT:  AMR$REC$.xxx_ - initialized with pointer to vlp area
     1850     9593               DESCRIPTION: Creates a vlp with defaults if one hasn't already
     1851     9594                            been allocated.
     1852     9595        */
     1853     9596        /**********************************************************************/
     1854     9597    1   BLD_VLP_AREA: PROC(TYPE) ALTRET;

   9597  2 006723   200256 741300       BLD_VLP_AREA STX1  ! FID_WSN+2,,AUTO

     1855     9598
     1856     9599    2   DCL TYPE UBIN WORD ;
     1857     9600    2   DCL ALLOC_FLG BIT(1) ;
     1858     9601    2     ALLOC_FLG = %NO# ;

   9601  2 006724   200260 450100                    STZ     ALLOC_FLG,,AUTO

     1859     9602    3     DO CASE(TYPE) ;

   9602  2 006725   200257 470500                    LDP0    @TYPE,,AUTO
         2 006726   000000 235100                    LDA     0,,PR0
         2 006727   000005 115007                    CMPA    5,DL
         2 006730   006732 602005 2                  TNC     s:9602+5,AL
         2 006731   006763 710000 2                  TRA     s:9616
         2 006732   006763 710000 2                  TRA     s:9616
         2 006733   006737 710000 2                  TRA     s:9604
         2 006734   006737 710000 2                  TRA     s:9604
         2 006735   006755 710000 2                  TRA     s:9612
         2 006736   006746 710000 2                  TRA     s:9608

     1860     9603    3         CASE(%SETSTA, %VIRTUAL) ;

     1861     9604    3             IF AMR$REC$.VIRTUAL_ = ADDR(NIL)
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:329  

   9604  2 006737   000000 471400 xsym               LDP1    CPSL_SEG3$
         2 006740   100002 236100                    LDQ     2,,PR1
         2 006741   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 006742   006763 601000 2                  TNZ     s:9616

     1862     9605    3               THEN
     1863     9606    3                 ALLOC_FLG  = %YES# ;

   9606  2 006743   400000 236003                    LDQ     -131072,DU
         2 006744   200260 756100                    STQ     ALLOC_FLG,,AUTO
         2 006745   006763 710000 2                  TRA     s:9616

     1864     9607    3         CASE(%WINDOW) ;

     1865     9608    3             IF AMR$REC$.WINDOW_ = ADDR(NIL)

   9608  2 006746   000000 471400 xsym               LDP1    CPSL_SEG3$
         2 006747   100006 236100                    LDQ     6,,PR1
         2 006750   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 006751   006763 601000 2                  TNZ     s:9616

     1866     9609    3               THEN
     1867     9610    3                 ALLOC_FLG = %YES# ;

   9610  2 006752   400000 236003                    LDQ     -131072,DU
         2 006753   200260 756100                    STQ     ALLOC_FLG,,AUTO
         2 006754   006763 710000 2                  TRA     s:9616

     1868     9611    3         CASE(%FPRG) ;

     1869     9612    3             IF AMR$REC$.FPRG_ = ADDR(NIL)

   9612  2 006755   000000 471400 xsym               LDP1    CPSL_SEG3$
         2 006756   100021 236100                    LDQ     17,,PR1
         2 006757   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 006760   006763 601000 2                  TNZ     s:9616
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:330  

     1870     9613    3               THEN
     1871     9614    3                 ALLOC_FLG = %YES# ;

   9614  2 006761   400000 236003                    LDQ     -131072,DU
         2 006762   200260 756100                    STQ     ALLOC_FLG,,AUTO

     1872     9615    3     END ;   /* Do Case */

     1873     9616    2     IF ALLOC_FLG

   9616  2 006763   200260 234100                    SZN     ALLOC_FLG,,AUTO
         2 006764   007100 605000 2                  TPL     s:9647

     1874     9617    2        THEN
     1875     9618    3           DO;

     1876     9619    4               DO CASE(TYPE) ;

   9619  2 006765   000005 115007                    CMPA    5,DL
         2 006766   006770 602005 2                  TNC     s:9619+3,AL
         2 006767   007016 710000 2                  TRA     s:9630
         2 006770   007016 710000 2                  TRA     s:9630
         2 006771   006775 710000 2                  TRA     s:9621
         2 006772   007001 710000 2                  TRA     s:9623
         2 006773   007005 710000 2                  TRA     s:9625
         2 006774   007013 710000 2                  TRA     s:9628

     1877     9620    4                 CASE(%SETSTA) ;

     1878     9621    4                   MCB.SIZE=SIZEC(CPSL_CVLP_SETSTA) ;

   9621  2 006775   000060 236007                    LDQ     48,DL
         2 006776   200004 471500                    LDP1    @MCB,,AUTO
         2 006777   100006 756100                    STQ     6,,PR1
         2 007000   007016 710000 2                  TRA     s:9630

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:331  
     1879     9622    4                 CASE(%VIRTUAL) ;

     1880     9623    4                   MCB.SIZE=SIZEC(CPSL_CVLP_VIRTUAL);

   9623  2 007001   000060 236007                    LDQ     48,DL
         2 007002   200004 471500                    LDP1    @MCB,,AUTO
         2 007003   100006 756100                    STQ     6,,PR1
         2 007004   007016 710000 2                  TRA     s:9630

     1881     9624    4                 CASE(%FPRG) ;

     1882     9625    4                   MCB.SIZE=SIZEC(CPSL_CVLP_FPRG) ;

   9625  2 007005   000110 236007                    LDQ     72,DL
         2 007006   200004 471500                    LDP1    @MCB,,AUTO
         2 007007   100006 756100                    STQ     6,,PR1

     1883     9626    4                   MCB.TYPE = 2 ;  /* Double Word alignment. */

   9626  2 007010   000002 235007                    LDA     2,DL
         2 007011   100005 755100                    STA     5,,PR1
         2 007012   007016 710000 2                  TRA     s:9630

     1884     9627    4                 CASE(%WINDOW) ;

     1885     9628    4                   MCB.SIZE=SIZEC(CPSL_CVLP_WINDOW) ;

   9628  2 007013   000040 236007                    LDQ     32,DL
         2 007014   200004 471500                    LDP1    @MCB,,AUTO
         2 007015   100006 756100                    STQ     6,,PR1

     1886     9629    4               END ; /* Do Case */

     1887     9630    3               CALL X$ALLOCATE(MCB) ALTRET(BLD_VLP_AREA50);

   9630  2 007016   200004 630500                    EPPR0   @MCB,,AUTO
         2 007017   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:332  
         2 007020   000000 701000 xent               TSX1    X$ALLOCATE
         2 007021   007102 702000 2                  TSX2    BLD_VLP_AREA50

     1888     9631    4               DO CASE(TYPE) ;

   9631  2 007022   200257 470500                    LDP0    @TYPE,,AUTO
         2 007023   000000 235100                    LDA     0,,PR0
         2 007024   000005 115007                    CMPA    5,DL
         2 007025   007027 602005 2                  TNC     s:9631+5,AL
         2 007026   007100 710000 2                  TRA     s:9647
         2 007027   007100 710000 2                  TRA     s:9647
         2 007030   007034 710000 2                  TRA     s:9633
         2 007031   007045 710000 2                  TRA     s:9636
         2 007032   007056 710000 2                  TRA     s:9639
         2 007033   007070 710000 2                  TRA     s:9643

     1889     9632    4                 CASE(%SETSTA) ;

     1890     9633    4                   AMR$REC$.SETSTA_=MCB.ADDRESS$ ;

   9633  2 007034   200004 471500                    LDP1    @MCB,,AUTO
         2 007035   100000 236100                    LDQ     0,,PR1
         2 007036   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 007037   300002 756100                    STQ     2,,PR3

     1891     9634    4                   AMR$REC$.SETSTA_->AM$SETSTA=CPSL_CVLP_SETSTA;

   9634  2 007040   300002 474500                    LDP4    2,,PR3
         2 007041   000100 100400                    MLR     fill='000'O
         2 007042   000000 000060 xsym               ADSC9   CPSL_CVLP_SETSTA         cn=0,n=48
         2 007043   400000 000060                    ADSC9   0,,PR4                   cn=0,n=48
         2 007044   007100 710000 2                  TRA     s:9647

     1892     9635    4                 CASE(%VIRTUAL) ;

     1893     9636    4                   AMR$REC$.VIRTUAL_=MCB.ADDRESS$;

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:333  
   9636  2 007045   200004 471500                    LDP1    @MCB,,AUTO
         2 007046   100000 236100                    LDQ     0,,PR1
         2 007047   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 007050   300002 756100                    STQ     2,,PR3

     1894     9637    4                   AMR$REC$.VIRTUAL_->VLP$VIRTUAL=CPSL_CVLP_VIRTUAL;

   9637  2 007051   300002 474500                    LDP4    2,,PR3
         2 007052   000100 100400                    MLR     fill='000'O
         2 007053   000000 000060 xsym               ADSC9   CPSL_CVLP_VIRTUAL        cn=0,n=48
         2 007054   400000 000060                    ADSC9   0,,PR4                   cn=0,n=48
         2 007055   007100 710000 2                  TRA     s:9647

     1895     9638    4                 CASE(%FPRG) ;

     1896     9639    4                   MCB.TYPE = 0 ;  /* Set it back to normal setting. */

   9639  2 007056   200004 471500                    LDP1    @MCB,,AUTO
         2 007057   100005 450100                    STZ     5,,PR1

     1897     9640    4                   AMR$REC$.FPRG_=MCB.ADDRESS$ ;

   9640  2 007060   100000 236100                    LDQ     0,,PR1
         2 007061   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 007062   300021 756100                    STQ     17,,PR3

     1898     9641    4                   AMR$REC$.FPRG_->VLP$FPRG=CPSL_CVLP_FPRG;

   9641  2 007063   300021 474500                    LDP4    17,,PR3
         2 007064   000100 100400                    MLR     fill='000'O
         2 007065   000000 000104 xsym               ADSC9   CPSL_CVLP_FPRG           cn=0,n=68
         2 007066   400000 000104                    ADSC9   0,,PR4                   cn=0,n=68
         2 007067   007100 710000 2                  TRA     s:9647

     1899     9642    4                 CASE(%WINDOW) ;

     1900     9643    4                   AMR$REC$.WINDOW_=MCB.ADDRESS$ ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:334  

   9643  2 007070   200004 471500                    LDP1    @MCB,,AUTO
         2 007071   100000 236100                    LDQ     0,,PR1
         2 007072   000000 473400 xsym               LDP3    CPSL_SEG3$
         2 007073   300006 756100                    STQ     6,,PR3

     1901     9644    4                   AMR$REC$.WINDOW_->VLP$WINDOW=CPSL_CVLP_WINDOW;

   9644  2 007074   300006 474500                    LDP4    6,,PR3
         2 007075   000100 100400                    MLR     fill='000'O
         2 007076   000000 000040 xsym               ADSC9   CPSL_CVLP_WINDOW         cn=0,n=32
         2 007077   400000 000040                    ADSC9   0,,PR4                   cn=0,n=32

     1902     9645    4               END ; /* Do Case */

     1903     9646    3            END;

     1904     9647    2     RETURN;

   9647  2 007100   200256 221300                    LDX1  ! FID_WSN+2,,AUTO
         2 007101   000001 702211                    TSX2  ! 1,X1

   9641  2 007102                       BLD_VLP_ARE* null
     1905     9648    2   BLD_VLP_AREA50:;
     1906     9649    2     ALTRETURN;

   9649  2 007102   200256 221300                    LDX1  ! FID_WSN+2,,AUTO
         2 007103   000000 702211                    TSX2  ! 0,X1

     1907     9650    2   END BLD_VLP_AREA;
     1908     9651                   %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:335  
     1909     9652        /**********************************************************************/
     1910     9653        /*I*   NAME:   CHK_IF_ASN_OK
     1911     9654               PURPOSE: See if the ASN is correct for this type of option.  If so,
     1912     9655                        RETURN. Otherwise, setup the error code and position, and
     1913     9656                        ALTRETURN.
     1914     9657               CALL:   CALL CHK_IF_ASN_OK(B$)
     1915     9658               INPUT:  B$ - Pointer to the option block.
     1916     9659               OUTPUT: CPSL_PARAM.ERRCODE - The error code to be returned.
     1917     9660                       CPSL_PARAM.ERR_CPOS# - The position of the option that
     1918     9661                          was being processed.
     1919     9662               DESCRIPTION: Check to see if the ASN is legal for the option that
     1920     9663                       is being processed.  If so, RETURN normally.  Otherwise,
     1921     9664                       put the error code and character position in the CPSL_PARAM
     1922     9665                       structure, and ALTRETURN to the calling routine.
     1923     9666        */
     1924     9667        /**********************************************************************/
     1925     9668    1   CHK_IF_ASN_OK: PROC(B$) ALTRET;

   9668  2 007104   200256 741300       CHK_IF_ASN_* STX1  ! FID_WSN+2,,AUTO

     1926     9669
     1927     9670    2   DCL B$ PTR PARAM ;
     1928     9671    2   DCL ASN_GOOD BIT(1) ;
     1929     9672    2   DCL ERR BIT(36) ;
     1930     9673
     1931     9674    2     ASN_GOOD = %YES# ;

   9674  2 007105   400000 236003                    LDQ     -131072,DU
         2 007106   200260 756100                    STQ     ASN_GOOD,,AUTO

     1932     9675    3     DO CASE(B$->OUT$BLK.CODE) ;

   9675  2 007107   200257 470500                    LDP0    @B$,,AUTO
         2 007110   000000 471500                    LDP1    0,,PR0
         2 007111   100000 720100                    LXL0    0,,PR1
         2 007112   000203 100003                    CMPX0   131,DU
         2 007113   007115 602010 2                  TNC     s:9675+6,X0
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:336  
         2 007114   007375 710000 2                  TRA     s:9765
         2 007115   007375 710000 2                  TRA     s:9765
         2 007116   007367 710000 2                  TRA     s:9756
         2 007117   007367 710000 2                  TRA     s:9756
         2 007120   007367 710000 2                  TRA     s:9756
         2 007121   007367 710000 2                  TRA     s:9756
         2 007122   007367 710000 2                  TRA     s:9756
         2 007123   007367 710000 2                  TRA     s:9756
         2 007124   007367 710000 2                  TRA     s:9756
         2 007125   007367 710000 2                  TRA     s:9756
         2 007126   007367 710000 2                  TRA     s:9756
         2 007127   007367 710000 2                  TRA     s:9756
         2 007130   007367 710000 2                  TRA     s:9756
         2 007131   007367 710000 2                  TRA     s:9756
         2 007132   007367 710000 2                  TRA     s:9756
         2 007133   007367 710000 2                  TRA     s:9756
         2 007134   007367 710000 2                  TRA     s:9756
         2 007135   007375 710000 2                  TRA     s:9765
         2 007136   007375 710000 2                  TRA     s:9765
         2 007137   007375 710000 2                  TRA     s:9765
         2 007140   007375 710000 2                  TRA     s:9765
         2 007141   007375 710000 2                  TRA     s:9765
         2 007142   007375 710000 2                  TRA     s:9765
         2 007143   007375 710000 2                  TRA     s:9765
         2 007144   007320 710000 2                  TRA     s:9678
         2 007145   007347 710000 2                  TRA     s:9721
         2 007146   007347 710000 2                  TRA     s:9721
         2 007147   007327 710000 2                  TRA     s:9686
         2 007150   007347 710000 2                  TRA     s:9721
         2 007151   007375 710000 2                  TRA     s:9765
         2 007152   007375 710000 2                  TRA     s:9765
         2 007153   007375 710000 2                  TRA     s:9765
         2 007154   007375 710000 2                  TRA     s:9765
         2 007155   007375 710000 2                  TRA     s:9765
         2 007156   007375 710000 2                  TRA     s:9765
         2 007157   007375 710000 2                  TRA     s:9765
         2 007160   007375 710000 2                  TRA     s:9765
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:337  
         2 007161   007375 710000 2                  TRA     s:9765
         2 007162   007336 710000 2                  TRA     s:9697
         2 007163   007375 710000 2                  TRA     s:9765
         2 007164   007347 710000 2                  TRA     s:9721
         2 007165   007375 710000 2                  TRA     s:9765
         2 007166   007375 710000 2                  TRA     s:9765
         2 007167   007375 710000 2                  TRA     s:9765
         2 007170   007347 710000 2                  TRA     s:9721
         2 007171   007347 710000 2                  TRA     s:9721
         2 007172   007347 710000 2                  TRA     s:9721
         2 007173   007375 710000 2                  TRA     s:9765
         2 007174   007375 710000 2                  TRA     s:9765
         2 007175   007375 710000 2                  TRA     s:9765
         2 007176   007375 710000 2                  TRA     s:9765
         2 007177   007375 710000 2                  TRA     s:9765
         2 007200   007336 710000 2                  TRA     s:9697
         2 007201   007375 710000 2                  TRA     s:9765
         2 007202   007375 710000 2                  TRA     s:9765
         2 007203   007375 710000 2                  TRA     s:9765
         2 007204   007375 710000 2                  TRA     s:9765
         2 007205   007375 710000 2                  TRA     s:9765
         2 007206   007375 710000 2                  TRA     s:9765
         2 007207   007375 710000 2                  TRA     s:9765
         2 007210   007375 710000 2                  TRA     s:9765
         2 007211   007347 710000 2                  TRA     s:9721
         2 007212   007347 710000 2                  TRA     s:9721
         2 007213   007347 710000 2                  TRA     s:9721
         2 007214   007375 710000 2                  TRA     s:9765
         2 007215   007360 710000 2                  TRA     s:9735
         2 007216   007360 710000 2                  TRA     s:9735
         2 007217   007375 710000 2                  TRA     s:9765
         2 007220   007375 710000 2                  TRA     s:9765
         2 007221   007375 710000 2                  TRA     s:9765
         2 007222   007347 710000 2                  TRA     s:9721
         2 007223   007375 710000 2                  TRA     s:9765
         2 007224   007375 710000 2                  TRA     s:9765
         2 007225   007375 710000 2                  TRA     s:9765
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:338  
         2 007226   007375 710000 2                  TRA     s:9765
         2 007227   007336 710000 2                  TRA     s:9697
         2 007230   007375 710000 2                  TRA     s:9765
         2 007231   007375 710000 2                  TRA     s:9765
         2 007232   007375 710000 2                  TRA     s:9765
         2 007233   007375 710000 2                  TRA     s:9765
         2 007234   007375 710000 2                  TRA     s:9765
         2 007235   007375 710000 2                  TRA     s:9765
         2 007236   007375 710000 2                  TRA     s:9765
         2 007237   007375 710000 2                  TRA     s:9765
         2 007240   007360 710000 2                  TRA     s:9735
         2 007241   007347 710000 2                  TRA     s:9721
         2 007242   007360 710000 2                  TRA     s:9735
         2 007243   007375 710000 2                  TRA     s:9765
         2 007244   007347 710000 2                  TRA     s:9721
         2 007245   007347 710000 2                  TRA     s:9721
         2 007246   007347 710000 2                  TRA     s:9721
         2 007247   007375 710000 2                  TRA     s:9765
         2 007250   007347 710000 2                  TRA     s:9721
         2 007251   007375 710000 2                  TRA     s:9765
         2 007252   007360 710000 2                  TRA     s:9735
         2 007253   007375 710000 2                  TRA     s:9765
         2 007254   007375 710000 2                  TRA     s:9765
         2 007255   007336 710000 2                  TRA     s:9697
         2 007256   007375 710000 2                  TRA     s:9765
         2 007257   007375 710000 2                  TRA     s:9765
         2 007260   007375 710000 2                  TRA     s:9765
         2 007261   007375 710000 2                  TRA     s:9765
         2 007262   007375 710000 2                  TRA     s:9765
         2 007263   007375 710000 2                  TRA     s:9765
         2 007264   007360 710000 2                  TRA     s:9735
         2 007265   007360 710000 2                  TRA     s:9735
         2 007266   007375 710000 2                  TRA     s:9765
         2 007267   007375 710000 2                  TRA     s:9765
         2 007270   007375 710000 2                  TRA     s:9765
         2 007271   007375 710000 2                  TRA     s:9765
         2 007272   007375 710000 2                  TRA     s:9765
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:339  
         2 007273   007375 710000 2                  TRA     s:9765
         2 007274   007375 710000 2                  TRA     s:9765
         2 007275   007375 710000 2                  TRA     s:9765
         2 007276   007375 710000 2                  TRA     s:9765
         2 007277   007375 710000 2                  TRA     s:9765
         2 007300   007375 710000 2                  TRA     s:9765
         2 007301   007375 710000 2                  TRA     s:9765
         2 007302   007375 710000 2                  TRA     s:9765
         2 007303   007375 710000 2                  TRA     s:9765
         2 007304   007375 710000 2                  TRA     s:9765
         2 007305   007375 710000 2                  TRA     s:9765
         2 007306   007375 710000 2                  TRA     s:9765
         2 007307   007375 710000 2                  TRA     s:9765
         2 007310   007375 710000 2                  TRA     s:9765
         2 007311   007375 710000 2                  TRA     s:9765
         2 007312   007375 710000 2                  TRA     s:9765
         2 007313   007375 710000 2                  TRA     s:9765
         2 007314   007375 710000 2                  TRA     s:9765
         2 007315   007375 710000 2                  TRA     s:9765
         2 007316   007375 710000 2                  TRA     s:9765
         2 007317   007347 710000 2                  TRA     s:9721

     1933     9676
     1934     9677    3         CASE(ACSVEHOPT) ;

     1935     9678    3             IF ASN ~= %FILE#

   9678  2 007320   200015 235100                    LDA     ASN,,AUTO
         2 007321   000001 115007                    CMPA    1,DL
         2 007322   007375 600000 2                  TZE     s:9765

     1936     9679    3               THEN
     1937     9680    4                 DO ;

     1938     9681    4                   ASN_GOOD = %NO# ;

   9681  2 007323   200260 450100                    STZ     ASN_GOOD,,AUTO
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:340  

     1939     9682    4                   ERR = E_BADACSVEHOPT ;

   9682  2 007324   000003 236000 1                  LDQ     E_BADACSVEHOPT
         2 007325   200261 756100                    STQ     ERR,,AUTO

     1940     9683    4                 END ; /* Then Do */

   9683  2 007326   007375 710000 2                  TRA     s:9765

     1941     9684
     1942     9685    3         CASE(ALTKEYSOPT) ;

     1943     9686    3             IF ASN ~= %FILE#

   9686  2 007327   200015 235100                    LDA     ASN,,AUTO
         2 007330   000001 115007                    CMPA    1,DL
         2 007331   007375 600000 2                  TZE     s:9765

     1944     9687    3               THEN
     1945     9688    4                 DO ;

     1946     9689    4                   ASN_GOOD = %NO# ;

   9689  2 007332   200260 450100                    STZ     ASN_GOOD,,AUTO

     1947     9690    4                   ERR = E_BADALTKEYSOPT ;

   9690  2 007333   000005 236000 1                  LDQ     E_BADALTKEYSOPT
         2 007334   200261 756100                    STQ     ERR,,AUTO

     1948     9691    4                 END ; /* Then Do */

   9691  2 007335   007375 710000 2                  TRA     s:9765

     1949     9692
     1950     9693    3         CASE(DEBUGOPT,
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:341  

     1951     9694    3               FPRG_FIDOPT,
     1952     9695    3               LDBYPROOPT,
     1953     9696    3               PROFILEOPT) ;
     1954     9697    3             IF ASN ~= %COMGROUP# AND ASN ~= %DEVICE#

   9697  2 007336   200015 235100                    LDA     ASN,,AUTO
         2 007337   000004 115007                    CMPA    4,DL
         2 007340   007375 600000 2                  TZE     s:9765
         2 007341   000003 115007                    CMPA    3,DL
         2 007342   007375 600000 2                  TZE     s:9765

     1955     9698    3               THEN
     1956     9699    4                 DO ;

     1957     9700    4                   ASN_GOOD = %NO# ;

   9700  2 007343   200260 450100                    STZ     ASN_GOOD,,AUTO

     1958     9701    4                   ERR = E_BADFPRGOPT ;

   9701  2 007344   000006 236000 1                  LDQ     E_BADFPRGOPT
         2 007345   200261 756100                    STQ     ERR,,AUTO

     1959     9702    4                 END ; /* Then Do */

   9702  2 007346   007375 710000 2                  TRA     s:9765

     1960     9703
     1961     9704    3         CASE( ALLDCBSOPT,

     1962     9705    3               ALLTRMSOPT,
     1963     9706    3               ANYDCBOPT,
     1964     9707    3               DIRONLYOPT,
     1965     9708    3               EOFNONEOPT,
     1966     9709    3               EOFONEOPT,
     1967     9710    3               EOFTIMEOPT,
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:342  
     1968     9711    3               ILATCHOPT,
     1969     9712    3               ILOCKOPT,
     1970     9713    3               IMSGTYPOPT,
     1971     9714    3               ISTATIONOPT,
     1972     9715    3               MYSTATIONOPT,
     1973     9716    3               OLATCHOPT,
     1974     9717    3               OLOCKOPT,
     1975     9718    3               OMSGTYPOPT,
     1976     9719    3               OSTATIONOPT,
     1977     9720    3               WASOPT) ;
     1978     9721    3             IF ASN ~= %COMGROUP# AND ASN ~= %DEVICE#

   9721  2 007347   200015 235100                    LDA     ASN,,AUTO
         2 007350   000004 115007                    CMPA    4,DL
         2 007351   007375 600000 2                  TZE     s:9765
         2 007352   000003 115007                    CMPA    3,DL
         2 007353   007375 600000 2                  TZE     s:9765

     1979     9722    3               THEN
     1980     9723    4                 DO ;

     1981     9724    4                   ASN_GOOD = %NO# ;

   9724  2 007354   200260 450100                    STZ     ASN_GOOD,,AUTO

     1982     9725    4                   ERR = E_BADSETSTAOPT ;

   9725  2 007355   000001 236000 1                  LDQ     E_BADSETSTAOPT
         2 007356   200261 756100                    STQ     ERR,,AUTO

     1983     9726    4                 END ; /* Then Do */

   9726  2 007357   007375 710000 2                  TRA     s:9765

     1984     9727
     1985     9728    3         CASE(INITIALIZEOPT,

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:343  
     1986     9729    3               INITVALUEOPT,
     1987     9730    3               MINPHYSOPT,
     1988     9731    3               NOFILEOPT,
     1989     9732    3               PHYSICALOPT,
     1990     9733    3               SEGNUMOPT,
     1991     9734    3               SEGSIZEOPT) ;
     1992     9735    3             IF ASN ~= %FILE#

   9735  2 007360   200015 235100                    LDA     ASN,,AUTO
         2 007361   000001 115007                    CMPA    1,DL
         2 007362   007375 600000 2                  TZE     s:9765

     1993     9736    3               THEN
     1994     9737    4                 DO ;

     1995     9738    4                   ASN_GOOD = %NO# ;

   9738  2 007363   200260 450100                    STZ     ASN_GOOD,,AUTO

     1996     9739    4                   ERR = E_BADVIRTUALOPT ;

   9739  2 007364   000002 236000 1                  LDQ     E_BADVIRTUALOPT
         2 007365   200261 756100                    STQ     ERR,,AUTO

     1997     9740    4                 END ; /* Then Do */

   9740  2 007366   007375 710000 2                  TRA     s:9765

     1998     9741    3             CASE( BTMBRDROPT,

     1999     9742    3                   FWINDOWOPT,
     2000     9743    3                   HBRDRCHROPT,
     2001     9744    3                   HBRDRSIZOPT,
     2002     9745    3                   LFTBRDROPT,
     2003     9746    3                   MINLENGTHOPT,
     2004     9747    3                   MINWIDTHOPT,
     2005     9748    3                   OPTIONALOPT,
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:344  
     2006     9749    3                   POSITIONOPT,
     2007     9750    3                   RHTBRDROPT,
     2008     9751    3                   TOPBRDROPT,
     2009     9752    3                   VBRDRCHROPT,
     2010     9753    3                   VBRDRSIZOPT,
     2011     9754    3                   WLENGTHOPT,
     2012     9755    3                   WWIDTHOPT) ;
     2013     9756    3             IF ASN ~= %DEVICE#

   9756  2 007367   200015 235100                    LDA     ASN,,AUTO
         2 007370   000003 115007                    CMPA    3,DL
         2 007371   007375 600000 2                  TZE     s:9765

     2014     9757    3               THEN
     2015     9758    4                 DO ;

     2016     9759    4                   ASN_GOOD = %NO# ;

   9759  2 007372   200260 450100                    STZ     ASN_GOOD,,AUTO

     2017     9760    4                   ERR = E_BADWINDOWOPT ;

   9760  2 007373   000004 236000 1                  LDQ     E_BADWINDOWOPT
         2 007374   200261 756100                    STQ     ERR,,AUTO

     2018     9761    4                 END ; /* Then Do */

     2019     9762
     2020     9763    3     END ;   /* Do Case */

     2021     9764
     2022     9765    2     IF ASN_GOOD

   9765  2 007375   200260 234100                    SZN     ASN_GOOD,,AUTO
         2 007376   007400 605000 2                  TPL     s:9769

     2023     9766    2         THEN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:345  
     2024     9767    2             RETURN ;

   9767  2 007377   000001 702211                    TSX2  ! 1,X1

     2025     9768
     2026     9769    2     CPSL_PARAM.ERRCODE = ERR ;

   9769  2 007400   200261 236100                    LDQ     ERR,,AUTO
         2 007401   200006 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 007402   300002 756100                    STQ     2,,PR3

     2027     9770    2     CPSL_PARAM.ERR_CPOS = B$->OUT$BLK.CPOS ;

   9770  2 007403   000000 471500                    LDP1    0,,PR0
         2 007404   100002 235100                    LDA     2,,PR1
         2 007405   300003 755100                    STA     3,,PR3

     2028     9771
     2029     9772    2     ALTRETURN ;

   9772  2 007406   200256 221300                    LDX1  ! FID_WSN+2,,AUTO
         2 007407   000000 702211                    TSX2  ! 0,X1

     2030     9773
     2031     9774    2   END   CHK_IF_ASN_OK ;
     2032     9775        %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:346  
     2033     9776        /**********************************************************************/
     2034     9777        /*I*      NAME:CNVRT_FID
     2035     9778                  PURPOSE:  BREAKS UP A FID INTO ITS VARIOUS COMPONENTS
     2036     9779                  INPUT:    OUT_SYM
     2037     9780                  OUTPUT:   FID into various vlp's
     2038     9781                            errors output resulting from M$FID pmme execution
     2039     9782        */
     2040     9783        /**********************************************************************/
     2041     9784    1   CNVRT_FID: PROC(OUT_SYM) ALTRET;

   9784  2 007410   200256 741300       CNVRT_FID    STX1  ! FID_WSN+2,,AUTO

     2042     9785
     2043     9786        %PARSE$SYM (NAME=OUT_SYM, STCLASS=PARAM) ;
     2044     9824        /*
     2045     9825          ****    BREAK UP THE FID
     2046     9826        */
     2047     9827    2      FPT_FID =CPSL_CFPT_FID;

   9827  2 007411   000100 100400                    MLR     fill='000'O
         2 007412   000000 000140 xsym               ADSC9   CPSL_CFPT_FID            cn=0,n=96
         2 007413   200062 000140                    ADSC9   FPT_FID,,AUTO            cn=0,n=96

     2048     9828    2      FPT_FID.V_=VECTOR(FPT_FID.V);

   9828  2 007414   000013 235000 3                  LDA     11
         2 007415   200272 452500                    STP2    BUFSIZC+2,,AUTO
         2 007416   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 007417   000106 036003                    ADLQ    70,DU
         2 007420   200062 757100                    STAQ    FPT_FID,,AUTO

     2049     9829    2      FPT_FID.SN_ = VECTOR(FID_SN);

   9829  2 007421   000014 235000 3                  LDA     12
         2 007422   200272 452500                    STP2    BUFSIZC+2,,AUTO
         2 007423   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 007424   000134 036003                    ADLQ    92,DU
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:347  
         2 007425   200074 757100                    STAQ    FPT_FID+10,,AUTO

     2050     9830    2      FPT_FID.WSN_ = VECTOR(FID_WSN);

   9830  2 007426   000015 235000 3                  LDA     13
         2 007427   200272 452500                    STP2    BUFSIZC+2,,AUTO
         2 007430   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 007431   000254 036003                    ADLQ    172,DU
         2 007432   200076 757100                    STAQ    FPT_FID+12,,AUTO

     2051     9831    2      FPT_FID.ASN_ = VECTOR(FID_ASN);

   9831  2 007433   777640 235007                    LDA     -96,DL
         2 007434   200272 452500                    STP2    BUFSIZC+2,,AUTO
         2 007435   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 007436   000016 036003                    ADLQ    14,DU
         2 007437   200100 757100                    STAQ    FPT_FID+14,,AUTO

     2052     9832    2      FPT_FID.RES_ = VECTOR(FID_RES);

   9832  2 007440   777640 235007                    LDA     -96,DL
         2 007441   200272 452500                    STP2    BUFSIZC+2,,AUTO
         2 007442   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 007443   000017 036003                    ADLQ    15,DU
         2 007444   200102 757100                    STAQ    FPT_FID+16,,AUTO

     2053     9833    2      FPT_FID.NAME_ = VECTOR(FID_NAME);

   9833  2 007445   000016 235000 3                  LDA     14
         2 007446   200272 452500                    STP2    BUFSIZC+2,,AUTO
         2 007447   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 007450   000124 036003                    ADLQ    84,DU
         2 007451   200066 757100                    STAQ    FPT_FID+4,,AUTO

     2054     9834    2      FPT_FID.ACCT_ = VECTOR(FID_ACCT);

   9834  2 007452   000015 235000 3                  LDA     13
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:348  
         2 007453   200272 452500                    STP2    BUFSIZC+2,,AUTO
         2 007454   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 007455   000250 036003                    ADLQ    168,DU
         2 007456   200070 757100                    STAQ    FPT_FID+6,,AUTO

     2055     9835    2      FPT_FID.PASS_ = VECTOR(FID_PASS);

   9835  2 007457   000015 235000 3                  LDA     13
         2 007460   200272 452500                    STP2    BUFSIZC+2,,AUTO
         2 007461   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 007462   000252 036003                    ADLQ    170,DU
         2 007463   200072 757100                    STAQ    FPT_FID+8,,AUTO

     2056     9836    2      FPT_FID.RESULTS_ = VECTOR(FID_RESULTS);

   9836  2 007464   000017 235000 3                  LDA     15
         2 007465   200272 452500                    STP2    BUFSIZC+2,,AUTO
         2 007466   200272 236100                    LDQ     BUFSIZC+2,,AUTO
         2 007467   000112 036003                    ADLQ    74,DU
         2 007470   200104 757100                    STAQ    FPT_FID+18,,AUTO

     2057     9837    2      FPT_FID.TEXTFID_ = VECTOR(OUT_SYM.TEXT);

   9837  2 007471   200257 470500                    LDP0    @OUT_SYM,,AUTO
         2 007472   000004 236100                    LDQ     4,,PR0
         2 007473   000033 772000                    QRL     27
         2 007474   000064 737000                    LLS     52
         2 007475   000140 135007                    SBLA    96,DL
         2 007476   200257 236100                    LDQ     @OUT_SYM,,AUTO
         2 007477   000020 036000 3                  ADLQ    16
         2 007500   200064 757100                    STAQ    FPT_FID+2,,AUTO

     2058     9838    2      CALL M$FID(FPT_FID) ALTRET(CNVRT_FID50);

   9838  2 007501   200062 630500                    EPPR0   FPT_FID,,AUTO
         2 007502   420001 713400                    CLIMB   alt,+8193
         2 007503   404400 401760                    pmme    nvectors=10
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:349  
         2 007504   007507 702000 2                  TSX2    CNVRT_FID50

     2059     9839    2      RETURN;

   9839  2 007505   200256 221300                    LDX1  ! FID_WSN+2,,AUTO
         2 007506   000001 702211                    TSX2  ! 1,X1

     2060     9840    2   CNVRT_FID50:
     2061     9841    2     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$EXCFR.ERR ;

   9841  2 007507   000000 470400 xsym  CNVRT_FID50  LDP0    B$TCB$
         2 007510   000000 471500                    LDP1    0,,PR0
         2 007511   100102 236100                    LDQ     66,,PR1
         2 007512   200006 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 007513   300002 756100                    STQ     2,,PR3

     2062     9842    2     CPSL_PARAM.ERR_CPOS = OUT_SYM.CPOS ;

   9842  2 007514   200257 471500                    LDP1    @OUT_SYM,,AUTO
         2 007515   100002 235100                    LDA     2,,PR1
         2 007516   300003 755100                    STA     3,,PR3

     2063     9843    2      ALTRETURN;

   9843  2 007517   200256 221300                    LDX1  ! FID_WSN+2,,AUTO
         2 007520   000000 702211                    TSX2  ! 0,X1

     2064     9844    2   END CNVRT_FID;
     2065     9845                   %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:350  
     2066     9846        /**********************************************************************/
     2067     9847        /*I*   NAME:   ALTKEYS_OPTS
     2068     9848               PURPOSE: To process the ALTKEYS options for the SET,RESET, and
     2069     9849                        ADJUST commands.
     2070     9850               CALL:   CALL ALTKEYS_OPTS(OUT_BLK)
     2071     9851               INPUT:  OUT_BLK - The parse block that describes the ALTKEYS option.
     2072     9852               OUTPUT: xxx.ALTKEY_ - The pointer in the AMR for the ALTKEYS area.
     2073     9853               DESCRIPTION: If an area has been allocated, then another area must
     2074     9854                       be allocated to accommodate the number of entries of the
     2075     9855                       old VLP, plus the number of new  entries.  In either case,
     2076     9856                       an area must be allocated using segment 3.  After allocation,
     2077     9857                       if an area had already existed, its entries must be moved
     2078     9858                       to the new area, and old area deallocated.  Then the new
     2079     9859                       entries must be added.
     2080     9860        */
     2081     9861        /**********************************************************************/
     2082     9862    1   ALTKEYS_OPTS: PROC(OUT_BLK) ALTRET;

   9862  2 007521   200256 741300       ALTKEYS_OPTS STX1  ! FID_WSN+2,,AUTO

     2083     9863
     2084     9864          %PARSE$OUT (NAME=OUT_BLK, STCLASS=PARAM) ;
     2085     9909    2     DCL I UBIN ;
     2086     9910    2     DCL J UBIN ;
     2087     9911    2     DCL K UBIN ;
     2088     9912    2     DCL NUM UBIN ;
     2089     9913    2     DCL SIZC UBIN ;
     2090     9914    2     DCL TEMP UBIN ;
     2091     9915    2     DCL BLK$ PTR ;
     2092     9916    2     DCL VLP$ PTR ;
     2093     9917          %VLP_ALTKEYS (FPTN=CVLP_ALTKEYS,STCLASS=CONSTANT) ;
     2094     9932
     2095     9933    2     IF AMR$REC$.ALTKEYS_ ~= ADDR(NIL)

   9933  2 007522   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 007523   000021 236100                    LDQ     17,,PR0
         2 007524   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:351  
         2 007525   007532 600000 2                  TZE     s:9937

     2096     9934    2       THEN
     2097     9935    2         NUM = AMR$REC$.ALTKEYS_->AM$ALTKEYS.SIZ# ;

   9935  2 007526   000021 471500                    LDP1    17,,PR0
         2 007527   100000 235100                    LDA     0,,PR1
         2 007530   200263 755100                    STA     NUM,,AUTO
         2 007531   007533 710000 2                  TRA     s:9939

     2098     9936    2       ELSE
     2099     9937    2         NUM = 0 ;

   9937  2 007532   200263 450100                    STZ     NUM,,AUTO

     2100     9938
     2101     9939    2     NUM = NUM + OUT_BLK.NSUBLKS ;

   9939  2 007533   200257 471500                    LDP1    @OUT_BLK,,AUTO
         2 007534   100001 236100                    LDQ     1,,PR1
         2 007535   000022 772000                    QRL     18
         2 007536   200263 036100                    ADLQ    NUM,,AUTO
         2 007537   200263 756100                    STQ     NUM,,AUTO

     2102     9940    2     SIZC = SIZEC(AMR$REC$.ALTKEYS_->AM$ALTKEYS.SIZ#) + (SIZEC(AMR$REC$.ALTKEYS_

   9940  2 007540   000021 473500                    LDP3    17,,PR0
         2 007541   200263 235100                    LDA     NUM,,AUTO
         2 007542   000002 735000                    ALS     2
         2 007543   000004 035007                    ADLA    4,DL
         2 007544   200264 755100                    STA     SIZC,,AUTO

     2103     9941    2                     -> AM$ALTKEYS.K(0)) * NUM) ;
     2104     9942    2     MCB.SIZE = SIZC ;

   9942  2 007545   200004 474500                    LDP4    @MCB,,AUTO
         2 007546   400006 755100                    STA     6,,PR4
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:352  

     2105     9943    2     CALL X$ALLOCATE(MCB) ALTRET(E_ALTKEYS_OPTS) ;

   9943  2 007547   200004 630500                    EPPR0   @MCB,,AUTO
         2 007550   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007551   000000 701000 xent               TSX1    X$ALLOCATE
         2 007552   007754 702000 2                  TSX2    E_ALTKEYS_OPTS

     2106     9944    2     VLP$ = MCB.ADDRESS$ ;

   9944  2 007553   200004 470500                    LDP0    @MCB,,AUTO
         2 007554   000000 236100                    LDQ     0,,PR0
         2 007555   200267 756100                    STQ     VLP$,,AUTO

     2107     9945    2     IF AMR$REC$.ALTKEYS_ ~= ADDR(NIL)

   9945  2 007556   000000 471400 xsym               LDP1    CPSL_SEG3$
         2 007557   100021 236100                    LDQ     17,,PR1
         2 007560   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 007561   007616 600000 2                  TZE     s:9957

     2108     9946    2       THEN
     2109     9947    3         DO ;

     2110     9948    4           DO I=0 TO AMR$REC$.ALTKEYS_->AM$ALTKEYS.SIZ#-1 ;

   9948  2 007562   200260 450100                    STZ     I,,AUTO
         2 007563   007575 710000 2                  TRA     s:9950+3

     2111     9949    4             VLP$->AM$ALTKEYS.K(I) = AMR$REC$.ALTKEYS_->AM$ALTKEYS.K(I) ;

   9949  2 007564   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 007565   000021 471500                    LDP1    17,,PR0
         2 007566   200260 720100                    LXL0    I,,AUTO
         2 007567   100001 236110                    LDQ     1,X0,PR1
         2 007570   200267 473500                    LDP3    VLP$,,AUTO
         2 007571   300001 756110                    STQ     1,X0,PR3
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:353  

     2112     9950    4           END ; /* Do I */

   9950  2 007572   200260 235100                    LDA     I,,AUTO
         2 007573   000001 035007                    ADLA    1,DL
         2 007574   200260 755100                    STA     I,,AUTO
         2 007575   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 007576   000021 471500                    LDP1    17,,PR0
         2 007577   200260 236100                    LDQ     I,,AUTO
         2 007600   100000 116100                    CMPQ    0,,PR1
         2 007601   007564 602000 2                  TNC     s:9949

     2113     9951    3           K = I ;

   9951  2 007602   200262 756100                    STQ     K,,AUTO

     2114     9952    3           MCB.ADDRESS$ = AMR$REC$.ALTKEYS_ ;

   9952  2 007603   000021 236100                    LDQ     17,,PR0
         2 007604   200004 473500                    LDP3    @MCB,,AUTO
         2 007605   300000 756100                    STQ     0,,PR3

     2115     9953    3           CALL X$DEALLOCATE(MCB) ALTRET(E_ALTKEYS_OPTS) ;

   9953  2 007606   200004 630500                    EPPR0   @MCB,,AUTO
         2 007607   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 007610   000000 701000 xent               TSX1    X$DEALLOCATE
         2 007611   007754 702000 2                  TSX2    E_ALTKEYS_OPTS

     2116     9954    3           AMR$REC$.ALTKEYS_ = ADDR(NIL) ;

   9954  2 007612   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 007613   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 007614   000021 756100                    STQ     17,,PR0

     2117     9955    3         END ; /* Then Do */

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:354  
   9955  2 007615   007617 710000 2                  TRA     s:9958

     2118     9956    2       ELSE
     2119     9957    2         K = 0 ;

   9957  2 007616   200262 450100                    STZ     K,,AUTO

     2120     9958    3     DO I=K TO NUM-1 ;

   9958  2 007617   200262 235100                    LDA     K,,AUTO
         2 007620   200260 755100                    STA     I,,AUTO
         2 007621   007741 710000 2                  TRA     s:9978+3

     2121     9959    3       VLP$->AM$ALTKEYS.K(I) = CVLP_ALTKEYS.K(0) ;

   9959  2 007622   000017 236000 1                  LDQ     CVLP_ALTKEYS+1
         2 007623   200267 470500                    LDP0    VLP$,,AUTO
         2 007624   200260 720100                    LXL0    I,,AUTO
         2 007625   000001 756110                    STQ     1,X0,PR0

     2122     9960    3       BLK$ = OUT_BLK.SUBLK$(I-K) ;

   9960  2 007626   200260 236100                    LDQ     I,,AUTO
         2 007627   200262 136100                    SBLQ    K,,AUTO
         2 007630   200257 471500                    LDP1    @OUT_BLK,,AUTO
         2 007631   100003 236106                    LDQ     3,QL,PR1
         2 007632   200266 756100                    STQ     BLK$,,AUTO

     2123     9961    4       DO J=0 TO BLK$->OUT$BLK.NSUBLKS-1 ;

   9961  2 007633   200261 450100                    STZ     J,,AUTO
         2 007634   007730 710000 2                  TRA     s:9977+3

     2124     9962    5         DO CASE(BLK$->OUT$BLK.SUBLK$(J)->OUT$BLK.CODE) ;

   9962  2 007635   200266 470500                    LDP0    BLK$,,AUTO
         2 007636   200261 720100                    LXL0    J,,AUTO
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:355  
         2 007637   000003 471510                    LDP1    3,X0,PR0
         2 007640   100000 236100                    LDQ     0,,PR1
         2 007641   777777 376007                    ANQ     -1,DL
         2 007642   000467 136007                    SBLQ    311,DL
         2 007643   000003 116007                    CMPQ    3,DL
         2 007644   007646 602006 2                  TNC     s:9962+9,QL
         2 007645   007725 710000 2                  TRA     s:9977
         2 007646   007663 710000 2                  TRA     s:9967
         2 007647   007706 710000 2                  TRA     s:9972
         2 007650   007651 710000 2                  TRA     s:9964

     2125     9963    5           CASE(ALTKEY_UNIQUE_OPT) ;

     2126     9964    5             VLP$->AM$ALTKEYS.K.UNIQUE#(I) = BINBIT(BLK$->OUT$BLK.SUBLK$(J)->OUT$BLK.
              9964                      SUBLK$(0)->OUT$BLK.CODE,1);

   9964  2 007651   100003 473500                    LDP3    3,,PR1
         2 007652   300000 236100                    LDQ     0,,PR3
         2 007653   777777 376007                    ANQ     -1,DL
         2 007654   000043 736000                    QLS     35
         2 007655   200267 474500                    LDP4    VLP$,,AUTO
         2 007656   200260 721100                    LXL1    I,,AUTO
         2 007657   400001 676111                    ERQ     1,X1,PR4
         2 007660   400000 376003                    ANQ     -131072,DU
         2 007661   400001 656111                    ERSQ    1,X1,PR4
         2 007662   007725 710000 2                  TRA     s:9977

     2127     9965
     2128     9966    5           CASE(ALTKEY_KEYL_OPT) ;

     2129     9967    5             CALL CXX$SET(BLK$->OUT$BLK.SUBLK$(J)->P$S, GETCMD, CPSL_PARAM,

   9967  2 007663   200265 633500                    EPPR3   TEMP,,AUTO
         2 007664   200275 453500                    STP3    BUFSIZC+5,,AUTO
         2 007665   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 007666   200274 756100                    STQ     BUFSIZC+4,,AUTO
         2 007667   200005 236100                    LDQ     @GETCMD,,AUTO
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:356  
         2 007670   200273 756100                    STQ     BUFSIZC+3,,AUTO
         2 007671   200272 451500                    STP1    BUFSIZC+2,,AUTO
         2 007672   200272 630500                    EPPR0   BUFSIZC+2,,AUTO
         2 007673   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 007674   000000 701000 xent               TSX1    CXX$SET
         2 007675   000000 011000                    NOP     0

     2130     9968    5                                     TEMP) ;
     2131     9969    5             VLP$->AM$ALTKEYS.K.KEYL#(I) = TEMP ;

   9969  2 007676   200267 470500                    LDP0    VLP$,,AUTO
         2 007677   200260 720100                    LXL0    I,,AUTO
         2 007700   200265 236100                    LDQ     TEMP,,AUTO
         2 007701   000022 736000                    QLS     18
         2 007702   000001 676110                    ERQ     1,X0,PR0
         2 007703   000777 376003                    ANQ     511,DU
         2 007704   000001 656110                    ERSQ    1,X0,PR0
         2 007705   007725 710000 2                  TRA     s:9977

     2132     9970
     2133     9971    5           CASE(ALTKEY_KEYX_OPT) ;

     2134     9972    5             CALL CXX$SET(BLK$->OUT$BLK.SUBLK$(J)->P$S, GETCMD, CPSL_PARAM,

   9972  2 007706   200265 633500                    EPPR3   TEMP,,AUTO
         2 007707   200275 453500                    STP3    BUFSIZC+5,,AUTO
         2 007710   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 007711   200274 756100                    STQ     BUFSIZC+4,,AUTO
         2 007712   200005 236100                    LDQ     @GETCMD,,AUTO
         2 007713   200273 756100                    STQ     BUFSIZC+3,,AUTO
         2 007714   200272 451500                    STP1    BUFSIZC+2,,AUTO
         2 007715   200272 630500                    EPPR0   BUFSIZC+2,,AUTO
         2 007716   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 007717   000000 701000 xent               TSX1    CXX$SET
         2 007720   000000 011000                    NOP     0

     2135     9973    5                                     TEMP) ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:357  
     2136     9974    5             VLP$->AM$ALTKEYS.K.KEYX#(I) = TEMP ;

   9974  2 007721   200265 720100                    LXL0    TEMP,,AUTO
         2 007722   200267 470500                    LDP0    VLP$,,AUTO
         2 007723   200260 721100                    LXL1    I,,AUTO
         2 007724   000001 440111                    SXL0    1,X1,PR0

     2137     9975
     2138     9976    5         END ; /* Do Case */

     2139     9977    4       END ; /* Do J */

   9977  2 007725   200261 235100                    LDA     J,,AUTO
         2 007726   000001 035007                    ADLA    1,DL
         2 007727   200261 755100                    STA     J,,AUTO
         2 007730   200266 470500                    LDP0    BLK$,,AUTO
         2 007731   000001 236100                    LDQ     1,,PR0
         2 007732   000022 772000                    QRL     18
         2 007733   200261 116100                    CMPQ    J,,AUTO
         2 007734   007736 600000 2                  TZE     s:9978
         2 007735   007635 603000 2                  TRC     s:9962

     2140     9978    3     END ;   /* Do I */

   9978  2 007736   200260 235100                    LDA     I,,AUTO
         2 007737   000001 035007                    ADLA    1,DL
         2 007740   200260 755100                    STA     I,,AUTO
         2 007741   200260 236100                    LDQ     I,,AUTO
         2 007742   200263 116100                    CMPQ    NUM,,AUTO
         2 007743   007622 602000 2                  TNC     s:9959

     2141     9979
     2142     9980    2     VLP$ -> AM$ALTKEYS.SIZ# = NUM;

   9980  2 007744   200267 470500                    LDP0    VLP$,,AUTO
         2 007745   200263 235100                    LDA     NUM,,AUTO
         2 007746   000000 755100                    STA     0,,PR0
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:358  

     2143     9981    2     AMR$REC$.ALTKEYS_ = VLP$ ;

   9981  2 007747   200267 236100                    LDQ     VLP$,,AUTO
         2 007750   000000 471400 xsym               LDP1    CPSL_SEG3$
         2 007751   100021 756100                    STQ     17,,PR1

     2144     9982
     2145     9983    2     RETURN ;

   9983  2 007752   200256 221300                    LDX1  ! FID_WSN+2,,AUTO
         2 007753   000001 702211                    TSX2  ! 1,X1

     2146     9984
     2147     9985    2   E_ALTKEYS_OPTS:
     2148     9986    2     CPSL_PARAM.ERRCODE = MCB.ERR ;

   9986  2 007754   200004 470500       E_ALTKEYS_O* LDP0    @MCB,,AUTO
         2 007755   000010 236100                    LDQ     8,,PR0
         2 007756   200006 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 007757   100002 756100                    STQ     2,,PR1

     2149     9987    2     CPSL_PARAM.ERR_CPOS = 511;

   9987  2 007760   000777 235007                    LDA     511,DL
         2 007761   100003 755100                    STA     3,,PR1

     2150     9988
     2151     9989    2   ALTKEYS_OPTS_ALTRET:
     2152     9990    2     ALTRETURN ;

   9990  2 007762   200256 221300       ALTKEYS_OPT* LDX1  ! FID_WSN+2,,AUTO
         2 007763   000000 702211                    TSX2  ! 0,X1

     2153     9991
     2154     9992    2   END   ALTKEYS_OPTS ;
     2155     9993                   %EJECT;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:359  
     2156     9994        /**********************************************************************/
     2157     9995        /*I*   NAME:   ATTR_OPTS
     2158     9996               PURPOSE: To process the ATTR type options for the SET,RESET, and
     2159     9997                        ADJUST commands, i.e. PROCATTR, INSTATTR, and UATTR.
     2160     9998               CALL:   CALL ATTR_OPTS(ATTR$)
     2161     9999               INPUT:  ATTR$ - The location to receive the pointer to the area
     2162    10000               DESCRIPTION: If an area has been allocated, then another area must
     2163    10001                       be allocated to accommodate the complete character count,
     2164    10002                       old ATTR, plus the new character string.  In either case,
     2165    10003                       an area must be allocated using segment 3.  After allocation,
     2166    10004                       if an area had already existed, its character string must
     2167    10005                       be moved to the new area, and old area deallocated.  Then the
     2168    10006                       new character string must be added.
     2169    10007        */
     2170    10008        /**********************************************************************/
     2171    10009    1   ATTR_OPTS: PROC(ATTR$) ALTRET;

  10009  2 007764   200256 741300       ATTR_OPTS    STX1  ! FID_WSN+2,,AUTO

     2172    10010
     2173    10011    2   DCL ATTR$ PTR PARAM ;
     2174    10012    2   DCL VARYCNT UBIN WORD ;
     2175    10013    2   DCL VARY$STR CHAR(VARYCNT) BASED ;
     2176    10014    2   DCL BUF$ PTR ;
     2177    10015    2   DCL ALLOCSZ UBIN WORD ;
     2178    10016    2   DCL SIZC UBIN ;
     2179    10017    2   DCL I UBIN WORD ;
     2180    10018    2   DCL J UBIN WORD ;
     2181    10019    2   DCL START$ PTR ;
     2182    10020    2   DCL VLP$ PTR ;
     2183    10021    2   DCL BUFSIZC UBIN ;
     2184    10022        %VLP_ATTR (FPTN=VLP$ATTR, STCLASS=BASED) ;
     2185    10036    2   3 BUF CHAR(BUFSIZC) ;
     2186    10037
     2187    10038    3     DO CASE(TEMP$->OUT$BLK.CODE) ;

  10038  2 007765   200011 470500                    LDP0    TEMP$,,AUTO
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:360  
         2 007766   000000 236100                    LDQ     0,,PR0
         2 007767   777777 376007                    ANQ     -1,DL
         2 007770   000102 136007                    SBLQ    66,DL
         2 007771   000064 116007                    CMPQ    52,DL
         2 007772   007774 602006 2                  TNC     s:10038+7,QL
         2 007773   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 007774   010133 710000 2                  TRA     s:10060
         2 007775   010060 710000 2                  TRA     s:10043
         2 007776   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 007777   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010000   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010001   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010002   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010003   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010004   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010005   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010006   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010007   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010010   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010011   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010012   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010013   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010014   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010015   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010016   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010017   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010020   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010021   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010022   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010023   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010024   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010025   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010026   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010027   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010030   010133 710000 2                  TRA     s:10060
         2 010031   010060 710000 2                  TRA     s:10043
         2 010032   010337 710000 2                  TRA     ATTR_OPTS_RET
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:361  
         2 010033   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010034   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010035   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010036   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010037   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010040   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010041   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010042   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010043   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010044   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010045   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010046   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010047   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010050   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010051   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010052   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010053   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010054   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010055   010337 710000 2                  TRA     ATTR_OPTS_RET
         2 010056   010133 710000 2                  TRA     s:10060
         2 010057   010060 710000 2                  TRA     s:10043

     2188    10039
     2189    10040    3       CASE( INSTATTRSIZEOPT,

     2190    10041    3             PROCATTRSIZEOPT,
     2191    10042    3             UATTRSIZEOPT) ;
     2192    10043    3         IF ATTR$ = ADDR(NIL)

  10043  2 010060   200257 471500                    LDP1    @ATTR$,,AUTO
         2 010061   100000 236100                    LDQ     0,,PR1
         2 010062   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 010063   010106 601000 2                  TNZ     s:10051

     2193    10044    3           THEN
     2194    10045    4             DO ;

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:362  
     2195    10046    4               BUFSIZC = 0 ;

  10046  2 010064   200270 450100                    STZ     BUFSIZC,,AUTO

     2196    10047    4               MCB.SIZE = SIZEC(ATTR$->VLP$ATTR) ;

  10047  2 010065   100000 473500                    LDP3    0,,PR1
         2 010066   200270 236100                    LDQ     BUFSIZC,,AUTO
         2 010067   000011 402007                    MPY     9,DL
         2 010070   000107 036007                    ADLQ    71,DL
         2 010071   000001 772000                    QRL     1
         2 010072   000022 506007                    DIV     18,DL
         2 010073   000002 736000                    QLS     2
         2 010074   200004 474500                    LDP4    @MCB,,AUTO
         2 010075   400006 756100                    STQ     6,,PR4

     2197    10048    4               CALL X$ALLOCATE(MCB) ALTRET(E_ATTR_OPTS) ;

  10048  2 010076   200004 630500                    EPPR0   @MCB,,AUTO
         2 010077   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 010100   000000 701000 xent               TSX1    X$ALLOCATE
         2 010101   010341 702000 2                  TSX2    E_ATTR_OPTS

     2198    10049    4               ATTR$ = MCB.ADDRESS$ ;

  10049  2 010102   200004 470500                    LDP0    @MCB,,AUTO
         2 010103   000000 236100                    LDQ     0,,PR0
         2 010104   200257 471500                    LDP1    @ATTR$,,AUTO
         2 010105   100000 756100                    STQ     0,,PR1

     2199    10050    4             END ; /* Then Do */

     2200    10051    3         CALL CXX$SET(TEMP$->OUT$BLK.SUBLK$(0)->P$S, GETCMD, CPSL_PARAM, I) ;

  10051  2 010106   200011 470500                    LDP0    TEMP$,,AUTO
         2 010107   000003 473500                    LDP3    3,,PR0
         2 010110   200264 634500                    EPPR4   I,,AUTO
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:363  
         2 010111   200275 454500                    STP4    BUFSIZC+5,,AUTO
         2 010112   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 010113   200274 756100                    STQ     BUFSIZC+4,,AUTO
         2 010114   200005 236100                    LDQ     @GETCMD,,AUTO
         2 010115   200273 756100                    STQ     BUFSIZC+3,,AUTO
         2 010116   200272 453500                    STP3    BUFSIZC+2,,AUTO
         2 010117   200272 630500                    EPPR0   BUFSIZC+2,,AUTO
         2 010120   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 010121   000000 701000 xent               TSX1    CXX$SET
         2 010122   000000 011000                    NOP     0

     2201    10052    3         IF CPSL_PARAM.ERRCODE ~= %NO#

  10052  2 010123   200006 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 010124   000002 235100                    LDA     2,,PR0
         2 010125   010337 601000 2                  TNZ     ATTR_OPTS_RET

     2202    10053    3           THEN
     2203    10054    3             GOTO ATTR_OPTS_RET ;
     2204    10055    3         ATTR$->VLP$ATTR.NAW# = I ;

  10055  2 010126   200257 471500                    LDP1    @ATTR$,,AUTO
         2 010127   100000 473500                    LDP3    0,,PR1
         2 010130   200264 720100                    LXL0    I,,AUTO
         2 010131   300000 740100                    STX0    0,,PR3
         2 010132   010337 710000 2                  TRA     ATTR_OPTS_RET

     2205    10056
     2206    10057    3       CASE( INSTATTROPT,

     2207    10058    3             PROCATTROPT,
     2208    10059    3             UATTROPT) ;
     2209    10060    3         IF ATTR$ = ADDR(NIL)

  10060  2 010133   200257 471500                    LDP1    @ATTR$,,AUTO
         2 010134   100000 236100                    LDQ     0,,PR1
         2 010135   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:364  
         2 010136   010141 601000 2                  TNZ     s:10064

     2210    10061    3           THEN
     2211    10062    3             SIZC = 0 ;

  10062  2 010137   200263 450100                    STZ     SIZC,,AUTO
         2 010140   010146 710000 2                  TRA     s:10066

     2212    10063    3           ELSE
     2213    10064    3             SIZC = ATTR$->VLP$ATTR.SIZ# * 4 ;

  10064  2 010141   100000 473500                    LDP3    0,,PR1
         2 010142   300000 236100                    LDQ     0,,PR3
         2 010143   000002 736000                    QLS     2
         2 010144   000021 376000 3                  ANQ     17
         2 010145   200263 756100                    STQ     SIZC,,AUTO

     2214    10065
     2215    10066    4         DO I = 0 TO TEMP$->OUT$BLK.NSUBLKS-1 ;

  10066  2 010146   200264 450100                    STZ     I,,AUTO
         2 010147   010162 710000 2                  TRA     s:10068+3

     2216    10067    4           SIZC = SIZC + TEMP$->OUT$BLK.SUBLK$(I)->P$S.COUNT ;

  10067  2 010150   200011 470500                    LDP0    TEMP$,,AUTO
         2 010151   200264 720100                    LXL0    I,,AUTO
         2 010152   000003 471510                    LDP1    3,X0,PR0
         2 010153   100004 236100                    LDQ     4,,PR1
         2 010154   000033 772000                    QRL     27
         2 010155   200263 036100                    ADLQ    SIZC,,AUTO
         2 010156   200263 756100                    STQ     SIZC,,AUTO

     2217    10068    4         END ;   /* Do I */

  10068  2 010157   200264 235100                    LDA     I,,AUTO
         2 010160   000001 035007                    ADLA    1,DL
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:365  
         2 010161   200264 755100                    STA     I,,AUTO
         2 010162   000001 236100                    LDQ     1,,PR0
         2 010163   000022 772000                    QRL     18
         2 010164   200264 116100                    CMPQ    I,,AUTO
         2 010165   010167 600000 2                  TZE     s:10070
         2 010166   010150 603000 2                  TRC     s:10067

     2218    10069
     2219    10070    3         SIZC = ((SIZC+3)/4)*4 ;

  10070  2 010167   200263 236100                    LDQ     SIZC,,AUTO
         2 010170   000003 036007                    ADLQ    3,DL
         2 010171   000002 772000                    QRL     2
         2 010172   000002 736000                    QLS     2
         2 010173   200263 756100                    STQ     SIZC,,AUTO

     2220    10071    3         BUFSIZC = SIZC ;

  10071  2 010174   200270 756100                    STQ     BUFSIZC,,AUTO

     2221    10072    3         MCB.SIZE = SIZEC(ATTR$->VLP$ATTR) ;

  10072  2 010175   200257 471500                    LDP1    @ATTR$,,AUTO
         2 010176   100000 473500                    LDP3    0,,PR1
         2 010177   000011 402007                    MPY     9,DL
         2 010200   000107 036007                    ADLQ    71,DL
         2 010201   000001 772000                    QRL     1
         2 010202   000022 506007                    DIV     18,DL
         2 010203   000002 736000                    QLS     2
         2 010204   200004 474500                    LDP4    @MCB,,AUTO
         2 010205   400006 756100                    STQ     6,,PR4

     2222    10073    3         CALL X$ALLOCATE(MCB) ALTRET(E_ATTR_OPTS) ;

  10073  2 010206   200004 630500                    EPPR0   @MCB,,AUTO
         2 010207   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 010210   000000 701000 xent               TSX1    X$ALLOCATE
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:366  
         2 010211   010341 702000 2                  TSX2    E_ATTR_OPTS

     2223    10074    3         VLP$ = MCB.ADDRESS$ ;

  10074  2 010212   200004 470500                    LDP0    @MCB,,AUTO
         2 010213   000000 236100                    LDQ     0,,PR0
         2 010214   200267 756100                    STQ     VLP$,,AUTO

     2224    10075    3         VARYCNT = 0 ;

  10075  2 010215   200260 450100                    STZ     VARYCNT,,AUTO

     2225    10076    3         IF ATTR$ ~= ADDR(NIL)

  10076  2 010216   200257 471500                    LDP1    @ATTR$,,AUTO
         2 010217   100000 236100                    LDQ     0,,PR1
         2 010220   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 010221   010250 600000 2                  TZE     s:10086

     2226    10077    3           THEN
     2227    10078    4             DO ;

     2228    10079    4               BUFSIZC = ATTR$->VLP$ATTR.SIZ# * 4 ;

  10079  2 010222   100000 473500                    LDP3    0,,PR1
         2 010223   300000 236100                    LDQ     0,,PR3
         2 010224   000002 736000                    QLS     2
         2 010225   000021 376000 3                  ANQ     17
         2 010226   200270 756100                    STQ     BUFSIZC,,AUTO

     2229    10080    4               VLP$->VLP$ATTR.Q.BUF = ATTR$->VLP$ATTR.Q.BUF ;

  10080  2 010227   000000 620006                    EAX0    0,QL
         2 010230   200267 474500                    LDP4    VLP$,,AUTO
         2 010231   200270 721100                    LXL1    BUFSIZC,,AUTO
         2 010232   040140 100540                    MLR     fill='040'O
         2 010233   300001 000010                    ADSC9   1,,PR3                   cn=0,n=*X0
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:367  
         2 010234   400001 000011                    ADSC9   1,,PR4                   cn=0,n=*X1

     2230    10081    4               VARYCNT = BUFSIZC ;

  10081  2 010235   200270 235100                    LDA     BUFSIZC,,AUTO
         2 010236   200260 755100                    STA     VARYCNT,,AUTO

     2231    10082    4               MCB.ADDRESS$ = ATTR$ ;

  10082  2 010237   100000 236100                    LDQ     0,,PR1
         2 010240   000000 756100                    STQ     0,,PR0

     2232    10083    4               CALL X$DEALLOCATE(MCB) ALTRET(E_ATTR_OPTS) ;

  10083  2 010241   200004 630500                    EPPR0   @MCB,,AUTO
         2 010242   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 010243   000000 701000 xent               TSX1    X$DEALLOCATE
         2 010244   010341 702000 2                  TSX2    E_ATTR_OPTS

     2233    10084    4               ATTR$ = ADDR(NIL) ;

  10084  2 010245   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 010246   200257 470500                    LDP0    @ATTR$,,AUTO
         2 010247   000000 756100                    STQ     0,,PR0

     2234    10085    4             END ; /* Then Do */

     2235    10086    3         START$ = ADDR(VLP$->VLP$ATTR.Q.BUF) ;

  10086  2 010250   200267 236100                    LDQ     VLP$,,AUTO
         2 010251   000001 036003                    ADLQ    1,DU
         2 010252   200266 756100                    STQ     START$,,AUTO

     2236    10087    3         BUF$ = START$ ;

  10087  2 010253   200261 756100                    STQ     BUF$,,AUTO

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:368  
     2237    10088    4         DO I=0 TO TEMP$->OUT$BLK.NSUBLKS-1 ;

  10088  2 010254   200264 450100                    STZ     I,,AUTO
         2 010255   010301 710000 2                  TRA     s:10092+3

     2238    10089    4           BUF$ = PINCRC(BUF$, VARYCNT) ;

  10089  2 010256   200260 236100                    LDQ     VARYCNT,,AUTO
         2 010257   000020 736000                    QLS     16
         2 010260   200261 036100                    ADLQ    BUF$,,AUTO
         2 010261   200261 756100                    STQ     BUF$,,AUTO

     2239    10090    4           VARYCNT = TEMP$->OUT$BLK.SUBLK$(I)->P$S.COUNT ;

  10090  2 010262   200011 470500                    LDP0    TEMP$,,AUTO
         2 010263   200264 720100                    LXL0    I,,AUTO
         2 010264   000003 471510                    LDP1    3,X0,PR0
         2 010265   100004 236100                    LDQ     4,,PR1
         2 010266   000033 772000                    QRL     27
         2 010267   200260 756100                    STQ     VARYCNT,,AUTO

     2240    10091    4           BUF$->VARY$STR = TEMP$->OUT$BLK.SUBLK$(I)->P$S.TEXT ;

  10091  2 010270   000000 621006                    EAX1    0,QL
         2 010271   200261 473500                    LDP3    BUF$,,AUTO
         2 010272   200260 722100                    LXL2    VARYCNT,,AUTO
         2 010273   040140 100540                    MLR     fill='040'O
         2 010274   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         2 010275   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2

     2241    10092    4         END ;   /* Do I */

  10092  2 010276   200264 235100                    LDA     I,,AUTO
         2 010277   000001 035007                    ADLA    1,DL
         2 010300   200264 755100                    STA     I,,AUTO
         2 010301   200011 470500                    LDP0    TEMP$,,AUTO
         2 010302   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:369  
         2 010303   000022 772000                    QRL     18
         2 010304   200264 116100                    CMPQ    I,,AUTO
         2 010305   010307 600000 2                  TZE     s:10093
         2 010306   010256 603000 2                  TRC     s:10089

     2242    10093    3         I = POFFC(BUF$,START$) ;

  10093  2 010307   200266 236100                    LDQ     START$,,AUTO
         2 010310   000020 772000                    QRL     16
         2 010311   200272 756100                    STQ     BUFSIZC+2,,AUTO
         2 010312   200261 236100                    LDQ     BUF$,,AUTO
         2 010313   000020 772000                    QRL     16
         2 010314   200272 136100                    SBLQ    BUFSIZC+2,,AUTO
         2 010315   200264 756100                    STQ     I,,AUTO

     2243    10094    3         VARYCNT = SIZC - I ;

  10094  2 010316   200263 236100                    LDQ     SIZC,,AUTO
         2 010317   200264 136100                    SBLQ    I,,AUTO
         2 010320   200260 756100                    STQ     VARYCNT,,AUTO

     2244    10095    3         IF VARYCNT > 0

  10095  2 010321   010327 600000 2                  TZE     s:10098

     2245    10096    3           THEN
     2246    10097    3             BUF$->VARY$STR = ' ' ;

  10097  2 010322   200261 471500                    LDP1    BUF$,,AUTO
         2 010323   000000 620006                    EAX0    0,QL
         2 010324   040140 100400                    MLR     fill='040'O
         2 010325   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 010326   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     2247    10098    3         VLP$->VLP$ATTR.SIZ# = SIZC/4 ;

  10098  2 010327   200263 236100                    LDQ     SIZC,,AUTO
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:370  
         2 010330   000002 772000                    QRL     2
         2 010331   000000 620006                    EAX0    0,QL
         2 010332   200267 470500                    LDP0    VLP$,,AUTO
         2 010333   000000 440100                    SXL0    0,,PR0

     2248    10099    3         ATTR$ = VLP$ ;

  10099  2 010334   200267 236100                    LDQ     VLP$,,AUTO
         2 010335   200257 471500                    LDP1    @ATTR$,,AUTO
         2 010336   100000 756100                    STQ     0,,PR1

     2249    10100    3     END ;   /* Do Case */

     2250    10101
     2251    10102    2   ATTR_OPTS_RET:
     2252    10103    2   RETURN ;

  10103  2 010337   200256 221300       ATTR_OPTS_R* LDX1  ! FID_WSN+2,,AUTO
         2 010340   000001 702211                    TSX2  ! 1,X1

     2253    10104
     2254    10105    2   E_ATTR_OPTS:
     2255    10106    2     CPSL_PARAM.ERRCODE = MCB.ERR ;

  10106  2 010341   200004 470500       E_ATTR_OPTS  LDP0    @MCB,,AUTO
         2 010342   000010 236100                    LDQ     8,,PR0
         2 010343   200006 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 010344   100002 756100                    STQ     2,,PR1

     2256    10107    2     CPSL_PARAM.ERR_CPOS = 511;

  10107  2 010345   000777 235007                    LDA     511,DL
         2 010346   100003 755100                    STA     3,,PR1

     2257    10108    2     ALTRETURN ;

  10108  2 010347   200256 221300                    LDX1  ! FID_WSN+2,,AUTO
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:371  
         2 010350   000000 702211                    TSX2  ! 0,X1

     2258    10109
     2259    10110    2   END   ATTR_OPTS ;
     2260    10111        /**********************************************************************/
     2261    10112        /*I*   NAME:   RESET_ATTR_OPTS
     2262    10113               PURPOSE: To RESET the ATTR buffer for the RESET command.
     2263    10114                        i.e. PROCATTR, INSTATTR, and UATTR.
     2264    10115               CALL:   CALL RESET_ATTR_OPTS(ATTR$)
     2265    10116               INPUT:  ATTR$ - The location to receive the pointer to the area
     2266    10117               DESCRIPTION: If an area has been allocated, then another area must
     2267    10118                       be allocated to accommodate the new VLP_ATRR.
     2268    10119                       The NAW# of the old is put in the new, and the old is
     2269    10120                       deallocated.
     2270    10121        */
     2271    10122        /**********************************************************************/
     2272    10123    1   RESET_ATTR_OPTS: PROC(ATTR$) ALTRET;

  10123  2 010351   200256 741300       RESET_ATTR_* STX1  ! FID_WSN+2,,AUTO

     2273    10124
     2274    10125    2   DCL ATTR$ PTR PARAM ;
     2275    10126    2   DCL I UBIN ;
     2276    10127    2   DCL BUFSIZC UBIN ;
     2277    10128        %VLP_ATTR (FPTN=VLP$ATTR, STCLASS=BASED) ;
     2278    10142    2   3 BUF CHAR(BUFSIZC) ;
     2279    10143
     2280    10144    2     IF ATTR$ = ADDR(NIL)

  10144  2 010352   200257 470500                    LDP0    @ATTR$,,AUTO
         2 010353   000000 236100                    LDQ     0,,PR0
         2 010354   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 010355   010430 600000 2                  TZE     RESET_ATTR_OPTS_RET

     2281    10145    2       THEN
     2282    10146    2         GOTO RESET_ATTR_OPTS_RET ;
     2283    10147    2     I = ATTR$->VLP$ATTR.NAW# ;
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:372  

  10147  2 010356   000000 471500                    LDP1    0,,PR0
         2 010357   100000 236100                    LDQ     0,,PR1
         2 010360   000022 772000                    QRL     18
         2 010361   200260 756100                    STQ     I,,AUTO

     2284    10148    2     MCB.ADDRESS$ = ATTR$ ;

  10148  2 010362   000000 236100                    LDQ     0,,PR0
         2 010363   200004 473500                    LDP3    @MCB,,AUTO
         2 010364   300000 756100                    STQ     0,,PR3

     2285    10149    2     CALL X$DEALLOCATE(MCB) ALTRET(E_RESET_ATTR_OPTS) ;

  10149  2 010365   200004 630500                    EPPR0   @MCB,,AUTO
         2 010366   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 010367   000000 701000 xent               TSX1    X$DEALLOCATE
         2 010370   010432 702000 2                  TSX2    E_RESET_ATTR_OPTS

     2286    10150    2     IF I = 0                  /* NAW is ZERO, no area to allocate */

  10150  2 010371   200260 235100                    LDA     I,,AUTO
         2 010372   010377 601000 2                  TNZ     s:10155

     2287    10151    2       THEN
     2288    10152    2         ATTR$ = ADDR(NIL) ;

  10152  2 010373   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 010374   200257 470500                    LDP0    @ATTR$,,AUTO
         2 010375   000000 756100                    STQ     0,,PR0
         2 010376   010430 710000 2                  TRA     RESET_ATTR_OPTS_RET

     2289    10153    2       ELSE
     2290    10154    3         DO ;

     2291    10155    3           BUFSIZC = 0 ;

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:373  
  10155  2 010377   200261 450100                    STZ     BUFSIZC,,AUTO

     2292    10156    3           MCB.SIZE = SIZEC(ATTR$->VLP$ATTR) ;

  10156  2 010400   200257 470500                    LDP0    @ATTR$,,AUTO
         2 010401   000000 471500                    LDP1    0,,PR0
         2 010402   200261 236100                    LDQ     BUFSIZC,,AUTO
         2 010403   000011 402007                    MPY     9,DL
         2 010404   000107 036007                    ADLQ    71,DL
         2 010405   000001 772000                    QRL     1
         2 010406   000022 506007                    DIV     18,DL
         2 010407   000002 736000                    QLS     2
         2 010410   200004 473500                    LDP3    @MCB,,AUTO
         2 010411   300006 756100                    STQ     6,,PR3

     2293    10157    3           CALL X$ALLOCATE(MCB) ALTRET(E_RESET_ATTR_OPTS) ;

  10157  2 010412   200004 630500                    EPPR0   @MCB,,AUTO
         2 010413   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 010414   000000 701000 xent               TSX1    X$ALLOCATE
         2 010415   010432 702000 2                  TSX2    E_RESET_ATTR_OPTS

     2294    10158    3           ATTR$ = MCB.ADDRESS$ ;

  10158  2 010416   200004 470500                    LDP0    @MCB,,AUTO
         2 010417   000000 236100                    LDQ     0,,PR0
         2 010420   200257 471500                    LDP1    @ATTR$,,AUTO
         2 010421   100000 756100                    STQ     0,,PR1

     2295    10159    3           ATTR$ -> VLP$ATTR.SIZ# = 0 ;

  10159  2 010422   100000 473500                    LDP3    0,,PR1
         2 010423   000000 220003                    LDX0    0,DU
         2 010424   300000 440100                    SXL0    0,,PR3

     2296    10160    3           ATTR$ -> VLP$ATTR.NAW# = I ;

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:374  
  10160  2 010425   100000 473500                    LDP3    0,,PR1
         2 010426   200260 721100                    LXL1    I,,AUTO
         2 010427   300000 741100                    STX1    0,,PR3

     2297    10161    3         END ;  /* Else Do */

     2298    10162
     2299    10163    2   RESET_ATTR_OPTS_RET:
     2300    10164    2     RETURN ;

  10164  2 010430   200256 221300       RESET_ATTR_* LDX1  ! FID_WSN+2,,AUTO
         2 010431   000001 702211                    TSX2  ! 1,X1

     2301    10165
     2302    10166    2   E_RESET_ATTR_OPTS:
     2303    10167    2     CPSL_PARAM.ERRCODE = MCB.ERR ;

  10167  2 010432   200004 470500       E_RESET_ATT* LDP0    @MCB,,AUTO
         2 010433   000010 236100                    LDQ     8,,PR0
         2 010434   200006 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 010435   100002 756100                    STQ     2,,PR1

     2304    10168    2     CPSL_PARAM.ERR_CPOS = 511;

  10168  2 010436   000777 235007                    LDA     511,DL
         2 010437   100003 755100                    STA     3,,PR1

     2305    10169    2     ALTRETURN ;

  10169  2 010440   200256 221300                    LDX1  ! FID_WSN+2,,AUTO
         2 010441   000000 702211                    TSX2  ! 0,X1
     2306    10170
     2307    10171    2   END RESET_ATTR_OPTS ;
     2308    10172    1   END CXB$PROCOPT;
     2309    10173        %EOD ;

PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:375  
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_ISUBS_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXB$PROCOPT.
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:376  

 **** Variables and constants ****

  ****  Section 001 RoData CXB$PROCOPT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    11-0-0/c UBIN(9)     r     1 CNTLS_TRANS(0:17)
    16-0-0/d STRC(72)    r     1 CVLP_ALTKEYS               0-0-0/w STRC        r     1 E_AMFULL
     3-0-0/w STRC        r     1 E_BADACSVEHOPT             5-0-0/w STRC        r     1 E_BADALTKEYSOPT
     6-0-0/w STRC        r     1 E_BADFPRGOPT               1-0-0/w STRC        r     1 E_BADSETSTAOPT
     2-0-0/w STRC        r     1 E_BADVIRTUALOPT            4-0-0/w STRC        r     1 E_BADWINDOWOPT
    10-0-0/w STRC        r     1 E_FPRG_FID_DISKONLY        7-0-0/w STRC        r     1 E_FPRG_FID_NONAME

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   257-0-0/w PTR         r     1 @ATTR$                   257-0-0/w PTR         r     1 @ATTR$
   257-0-0/w PTR         r     1 @B$                        3-0-0/w PTR         r     1 @BLK$
     6-0-0/w PTR         r     1 @CPSL_PARAM                5-0-0/w PTR         r     1 @GETCMD
     4-0-0/w PTR         r     1 @MCB                     257-0-0/w PTR         r     1 @OUT_BLK
   257-0-0/w PTR         r     1 @OUT_SYM                 257-0-0/w PTR         r     1 @TYPE
   257-0-0/w PTR         r     1 @VLP$                    265-0-0/w PTR         r     1 @VLP$
   260-0-0/b BIT         r     1 ALLOC_FLG                 23-0-0/w STRC(1071)  r     1 AM_HDR
    15-0-0/w UBIN        r     1 ASN                      260-0-0/b BIT         r     1 ASN_GOOD
    *0-0-0/w PTR         r     1 ATTR$                     *0-0-0/w PTR         r     1 ATTR$
    *0-0-0/w PTR         r     1 B$                        *0-0-0/w PTR         r     1 BLK$
   266-0-0/w PTR         r     1 BLK$                     261-0-0/w PTR         r     1 BUF$
   270-0-0/w UBIN        r     1 BUFSIZC                  261-0-0/w UBIN        r     1 BUFSIZC
   260-0-0/b BIT         r     1 CNTLS(0:17)               *0-0-0/w STRC(180)   r     1 CPSL_PARAM
    14-0-0/w UBIN        r     1 DCB#                     261-0-0/b BIT         r     1 ERR
   250-0-0/c STRC(72)    r     1 FID_ACCT                  16-0-0/w UBIN(9)     r     1 FID_ASN
   124-0-0/c STRC(288)   r     1 FID_NAME                 252-0-0/c STRC(72)    r     1 FID_PASS
    17-0-0/c CHAR(4)     r     1 FID_RES                  112-0-0/d STRC(324)   r     1 FID_RESULTS
   134-0-0/d STRC(2736)  r     1 FID_SN                   254-0-0/c STRC(72)    r     1 FID_WSN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:377  
   261-0-0/w PTR         r     1 FILL$                     62-0-0/d STRC(864)   r     1 FPT_FID
    *0-0-0/d STRC(1512)  r     1 GETCMD                    20-0-0/w SBIN        r     1 I
   260-0-0/w UBIN        r     1 I                        264-0-0/w UBIN        r     1 I
   260-0-0/w UBIN        r     1 I                         21-0-0/w SBIN        r     1 J
   261-0-0/w UBIN        r     1 J                        262-0-0/w UBIN        r     1 K
    *0-0-0/w STRC(324)   r     1 MCB                      263-0-0/w UBIN        r     1 NUM
   262-0-0/w UBIN        r     1 OLDVFCSIZE                *0-0-0/w STRC(144)   r     1 OUT_BLK
    *0-0-0/w ASTR(153)   r     1 OUT_SYM                   12-0-0/w PTR         r     1 PTR$
   264-0-0/w UBIN        r     1 SIZC                     263-0-0/w UBIN        r     1 SIZC
   266-0-0/w PTR         r     1 START$                   265-0-0/w UBIN        r     1 TEMP
    11-0-0/w PTR         r     1 TEMP$                     13-0-0/w PTR         r     1 TEMP2$
    22-0-0/w SBIN        r     1 TVAL                      *0-0-0/w UBIN        r     1 TYPE
   260-0-0/w UBIN        r     1 VARYCNT                   *0-0-0/w PTR         r     1 VLP$
    *0-0-0/w PTR         r     1 VLP$                     267-0-0/w PTR         r     1 VLP$
   267-0-0/w PTR         r     1 VLP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(864)   r     1 CPSL_CFPT_FID              0-0-0/d STRC(2088)  r     1 CPSL_CFPT_OPEN
     0-0-0/d STRC(612)   r     1 CPSL_CVLP_FPRG             0-0-0/w STRC(72)    r     1 CPSL_CVLP_HDR
     0-0-0/w STRC(432)   r     1 CPSL_CVLP_SETSTA           0-0-0/w STRC(288)   r     1 CPSL_CVLP_TAB
     0-0-0/w STRC(432)   r     1 CPSL_CVLP_VIRTUAL          0-0-0/d STRC(288)   r     1 CPSL_CVLP_WINDOW
     0-0-0/w PTR         r     1 CPSL_SEG3$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(72)    r     1 AM$ALTKEYS                 0-0-0/c STRC(54)    r     1 AM$FORM
     0-0-0/w ASTR(45)    r     1 AM$HDR                     0-0-0/w STRC(432)   r     1 AM$SETSTA
     0-0-0/d STRC(2736)  r     1 AM$SN                      0-0-0/w STRC(288)   r     1 AM$TAB
     0-0-0/d STRC(1440)  r     1 AMR$REC$                   0-0-0/w STRC(2448)  r     1 B$EXCFR
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:378  
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/w UBIN        r     1 B$WORD(0:0)
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(144)   r     1 OUT$BLK
     0-0-0/w ASTR(153)   r     1 P$S                        0-0-0/c ACHR        r     1 VARY$STR
     0-0-0/c STRC(90)    r     1 VLP$ACCESS                 0-0-0/c ASTR(27)    r     1 VLP$ACSVEH
     0-0-0/w STRC        r     1 VLP$ATTR                   0-0-0/w STRC        r     1 VLP$ATTR
     0-0-0/w ASTR        r     1 VLP$ATTR                   0-0-0/w ASTR        r     1 VLP$ATTR
     0-0-0/d STRC(612)   r     1 VLP$FPRG                   0-0-0/w STRC(432)   r     1 VLP$VIRTUAL
     0-0-0/d STRC(288)   r     1 VLP$WINDOW


   Procedure CXB$PROCOPT requires 4386 words for executable code.
   Procedure CXB$PROCOPT requires 190 words of local(AUTO) storage.
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:379  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:380  
          MINI XREF LISTING

ALLOC_FLG IN PROCEDURE BLD_VLP_AREA
      9600**DCL      9601<<ASSIGN   9606<<ASSIGN   9610<<ASSIGN   9614<<ASSIGN   9616>>IF
ALTKEYS_OPTS
      9862**PROC     8966--CALL
AM$ALTKEYS.K
      7580**DCL      9940--ASSIGN   9949<<ASSIGN   9949>>ASSIGN   9959<<ASSIGN
AM$ALTKEYS.K.KEYL#
      7581**DCL      9969<<ASSIGN
AM$ALTKEYS.K.KEYX#
      7581**DCL      9974<<ASSIGN
AM$ALTKEYS.K.UNIQUE#
      7580**DCL      9964<<ASSIGN
AM$ALTKEYS.SIZ#
      7580**DCL      9935>>ASSIGN   9940--ASSIGN   9948>>DOINDEX  9980<<ASSIGN
AM$FORM
      7595**DCL      9040--ASSIGN
AM$FORM.FORM#
      7595**DCL      9042<<ASSIGN
AM$HDR
      7548**DCL      9080<<ASSIGN   9205<<ASSIGN   9324<<ASSIGN
AM$HDR.CTL
      7548**DCL      9312>>ASSIGN   9317<<ASSIGN
AM$HDR.CTL.COUNT#
      7550**DCL      8687<<ASSIGN   9091<<ASSIGN
AM$HDR.CTL.HEADERHEIGHT#
      7549**DCL      8544<<ASSIGN   9085<<ASSIGN
AM$HDR.CTL.INDENT#
      7549**DCL      8571<<ASSIGN   9088<<ASSIGN
AM$HDR.CTL.RESETPAGE#
      7548**DCL      8722<<ASSIGN   9208<<ASSIGN
AM$HDR.TITL.L#
      7550**DCL      7551--IMP-SIZ  8770<<ASSIGN   8771>>ASSIGN   9080>>ASSIGN   9081<<ASSIGN   9205>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:381  
      9206<<ASSIGN   9324>>ASSIGN   9326<<ASSIGN   9328>>ASSIGN
AM$HDR.TITL.TITLE#
      7551**DCL      8771<<ASSIGN   9328<<ASSIGN
AM$SETSTA
      7623**DCL      9634<<ASSIGN
AM$SETSTA.ISTA.DIRONLY#
      7630**DCL      8477<<ASSIGN   9000<<ASSIGN
AM$SETSTA.ISTA.EOFNONE#
      7629**DCL      8489<<ASSIGN   9021<<ASSIGN
AM$SETSTA.ISTA.EOFONE#
      7629**DCL      8494<<ASSIGN   9024<<ASSIGN
AM$SETSTA.ISTA.EOFTIME#
      7631**DCL      8499<<ASSIGN   9027<<ASSIGN
AM$SETSTA.ISTA.ILATCH#
      7628**DCL      8556<<ASSIGN   9096<<ASSIGN
AM$SETSTA.ISTA.ILOCK#
      7628**DCL      8561<<ASSIGN   9099<<ASSIGN
AM$SETSTA.ISTA.IMSGTYP#
      7628**DCL      8566<<ASSIGN   9102<<ASSIGN
AM$SETSTA.ISTA.ISTATION#
      7627**DCL      8594<<ASSIGN   9116<<ASSIGN
AM$SETSTA.MYSTATION#
      7627**DCL      8648<<ASSIGN   9160<<ASSIGN
AM$SETSTA.OSTA.ALLDCBS#
      7634**DCL      8425<<ASSIGN   8961<<ASSIGN
AM$SETSTA.OSTA.ALLTRMS#
      7634**DCL      8430<<ASSIGN   8964<<ASSIGN
AM$SETSTA.OSTA.ANYDCB#
      7635**DCL      8441<<ASSIGN   8971<<ASSIGN
AM$SETSTA.OSTA.OLATCH#
      7633**DCL      8660<<ASSIGN   9169<<ASSIGN
AM$SETSTA.OSTA.OLOCK#
      7633**DCL      8665<<ASSIGN   9172<<ASSIGN
AM$SETSTA.OSTA.OMSGTYP#
      7632**DCL      8670<<ASSIGN   9175<<ASSIGN
AM$SETSTA.OSTA.OSTATION#
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:382  
      7632**DCL      8682<<ASSIGN   9181<<ASSIGN
AM$SETSTA.OSTA.WAS#
      7636**DCL      8831<<ASSIGN   9357<<ASSIGN
AM$SN.NUM#
      7535**DCL      9246>>ASSIGN   9257<<ASSIGN   9257>>ASSIGN   9258>>DOINDEX  9271<<ASSIGN   9273>>ASSIGN
      9274<<ASSIGN   9274>>ASSIGN
AM$SN.SN#
      7535**DCL      9242>>IF       9259<<ASSIGN   9259>>ASSIGN   9279<<ASSIGN
AM$TAB
      7608**DCL      9150<<ASSIGN   9294<<ASSIGN
AM$TAB.MARGIN#
      7608**DCL      8627<<ASSIGN   9152<<ASSIGN
AM$TAB.TABS#
      7608**DCL      8762<<ASSIGN   9299<<ASSIGN   9302<<ASSIGN
AMR$REC$.ACCESS_
      7290**DCL      8413>>ASSIGN   8415<<ASSIGN   8952<>CALL     8953>>ASSIGN   8953>>ASSIGN   9507>>ASSIGN
      9507>>ASSIGN   9532>>ASSIGN   9532>>ASSIGN
AMR$REC$.ACSVEH_
      7290**DCL      7291--REDEF    8419>>ASSIGN   8421<<ASSIGN   8957<>CALL     8958>>ASSIGN   8958>>ASSIGN
      9523>>ASSIGN   9523>>ASSIGN
AMR$REC$.ALTKEYS_
      7296**DCL      7297--REDEF    7297--REDEF    8433>>ASSIGN   8435<<ASSIGN   9933>>IF       9935>>ASSIGN
      9940>>ASSIGN   9940>>ASSIGN   9945>>IF       9948>>DOINDEX  9949>>ASSIGN   9952>>ASSIGN   9954<<ASSIGN
      9981<<ASSIGN
AMR$REC$.FORM_
      7296**DCL      8508>>ASSIGN   8510<<ASSIGN   9041<>CALL     9042>>ASSIGN
AMR$REC$.FPRG_
      7297**DCL      8466>>IF       8468>>ASSIGN   8512>>IF       8515>>ASSIGN   8516>>ASSIGN   8517>>ASSIGN
      8518>>ASSIGN   8605>>IF       8607>>ASSIGN   8706>>IF       8708>>ASSIGN   8995>>ASSIGN   9063>>ASSIGN
      9064>>ASSIGN   9065>>ASSIGN   9066>>ASSIGN   9133>>ASSIGN   9188>>ASSIGN   9190>>ASSIGN   9612>>IF
      9640<<ASSIGN   9641>>ASSIGN
AMR$REC$.HDR_
      7295**DCL      7296--REDEF    8542>>IF       8544>>ASSIGN   8548>>ASSIGN   8550<<ASSIGN   8569>>IF
      8571>>ASSIGN   8685>>IF       8687>>ASSIGN   8720>>IF       8722>>ASSIGN   8767>>IF       8770>>ASSIGN
      8771>>ASSIGN   8771>>ASSIGN   9075>>IF       9079<>CALL     9080>>ASSIGN   9080>>ASSIGN   9081>>ASSIGN
      9085>>ASSIGN   9088>>ASSIGN   9091>>ASSIGN   9200>>IF       9204<>CALL     9205>>ASSIGN   9205>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:383  
      9206>>ASSIGN   9208>>ASSIGN   9307>>IF       9312>>ASSIGN   9315<>CALL     9317>>ASSIGN   9323<>CALL
      9324>>ASSIGN   9324>>ASSIGN   9326>>ASSIGN   9328>>ASSIGN   9328>>ASSIGN
AMR$REC$.INSTATTR_
      7292**DCL      8584<>CALL     8586>>IF       8588>>ASSIGN   9111<>CALL
AMR$REC$.PROCATTR_
      7292**DCL      8700<>CALL     8702>>IF       8704>>ASSIGN   9193<>CALL
AMR$REC$.SETSTA_
      7289**DCL      8423>>IF       8425>>ASSIGN   8428>>IF       8430>>ASSIGN   8439>>IF       8441>>ASSIGN
      8475>>IF       8477>>ASSIGN   8487>>IF       8489>>ASSIGN   8492>>IF       8494>>ASSIGN   8497>>IF
      8499>>ASSIGN   8554>>IF       8556>>ASSIGN   8559>>IF       8561>>ASSIGN   8564>>IF       8566>>ASSIGN
      8592>>IF       8594>>ASSIGN   8646>>IF       8648>>ASSIGN   8658>>IF       8660>>ASSIGN   8663>>IF
      8665>>ASSIGN   8668>>IF       8670>>ASSIGN   8680>>IF       8682>>ASSIGN   8829>>IF       8831>>ASSIGN
      8961>>ASSIGN   8964>>ASSIGN   8971>>ASSIGN   9000>>ASSIGN   9021>>ASSIGN   9024>>ASSIGN   9027>>ASSIGN
      9096>>ASSIGN   9099>>ASSIGN   9102>>ASSIGN   9116>>ASSIGN   9160>>ASSIGN   9169>>ASSIGN   9172>>ASSIGN
      9175>>ASSIGN   9181>>ASSIGN   9357>>ASSIGN   9633<<ASSIGN   9634>>ASSIGN
AMR$REC$.SN_
      7288**DCL      8751>>ASSIGN   8753<<ASSIGN   9242>>IF       9242>>IF       9246>>ASSIGN   9252>>ASSIGN
      9253<<ASSIGN   9257>>ASSIGN   9259>>ASSIGN   9270<>CALL     9271>>ASSIGN   9273>>ASSIGN   9274>>ASSIGN
      9274>>ASSIGN   9279>>ASSIGN
AMR$REC$.TAB_
      7294**DCL      7295--REDEF    8625>>IF       8627>>ASSIGN   8759>>IF       8762>>ASSIGN   9145>>IF
      9149<>CALL     9150>>ASSIGN   9152>>ASSIGN   9289>>IF       9293<>CALL     9294>>ASSIGN   9299>>ASSIGN
      9302>>ASSIGN
AMR$REC$.UATTR_
      7291**DCL      8781<>CALL     8783>>IF       8785>>ASSIGN   9335<>CALL
AMR$REC$.UHL_
      7288**DCL      7289--REDEF    7289--REDEF
AMR$REC$.V.ACS#
      7308**DCL      8417<<ASSIGN   8955<<ASSIGN
AMR$REC$.V.ANSISPANSEQ#
      7321**DCL      8437<<ASSIGN   8968<<ASSIGN
AMR$REC$.V.ASN#
      7307**DCL      8387>>ASSIGN
AMR$REC$.V.AU#
      7326**DCL      8444<<ASSIGN   8973<<ASSIGN
AMR$REC$.V.BLKL#
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:384  
      7314**DCL      8446<<ASSIGN   8975<<ASSIGN
AMR$REC$.V.BLOCKED#
      7309**DCL      8447<<ASSIGN   8449<<ASSIGN   8977<<ASSIGN   8979<<ASSIGN
AMR$REC$.V.BUPM#
      7310**DCL      8456<<ASSIGN   8981<<ASSIGN
AMR$REC$.V.CNVRT#
      7317**DCL      8485<<ASSIGN   9012<<ASSIGN   9017<<ASSIGN
AMR$REC$.V.COMP#
      7309**DCL      8458<<ASSIGN   8984<<ASSIGN
AMR$REC$.V.COPIES#
      7329**DCL      8460<<ASSIGN   8986<<ASSIGN
AMR$REC$.V.CTG#
      7301**DCL      8462<<ASSIGN   8988<<ASSIGN
AMR$REC$.V.CVOL#
      7302**DCL      8464<<ASSIGN   8990<<ASSIGN
AMR$REC$.V.DCBCONLGL#
      7319**DCL      8471<<ASSIGN   8992<<ASSIGN
AMR$REC$.V.DENSITY#
      7329**DCL      8473<<ASSIGN   8997<<ASSIGN
AMR$REC$.V.DISP#
      7313**DCL      8480<<ASSIGN   9002<<ASSIGN
AMR$REC$.V.DVFC#
      7324**DCL      8482<<ASSIGN   9006<<ASSIGN   9008<<ASSIGN
AMR$REC$.V.EBCDIC#
      7317**DCL      8484<<ASSIGN   9011<<ASSIGN   9012>>ASSIGN
AMR$REC$.V.EVENT#
      7327**DCL      8502<<ASSIGN   9029<<ASSIGN
AMR$REC$.V.EXIST#
      7301**DCL      8504<<ASSIGN   9031<<ASSIGN
AMR$REC$.V.EXPIRE#
      7317**DCL      8506<<ASSIGN   9035<<ASSIGN   9037<<ASSIGN
AMR$REC$.V.FSN#
      7328**DCL      7328--REDEF    7328--REDEF    8521<<ASSIGN   9068<<ASSIGN
AMR$REC$.V.FUN#
      7307**DCL      8523<<ASSIGN   9070<<ASSIGN
AMR$REC$.V.GHSTACS#
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:385  
      7312**DCL      8530<<ASSIGN   9072<<ASSIGN
AMR$REC$.V.IGNOREFSN#
      7321**DCL      8552<<ASSIGN   9093<<ASSIGN
AMR$REC$.V.INITZ.SCRUB#
      7298**DCL      8735<<ASSIGN   9209<<ASSIGN   9211<<ASSIGN
AMR$REC$.V.IOERROK#
      7319**DCL      8590<<ASSIGN   9113<<ASSIGN
AMR$REC$.V.IXTNSIZE#
      7316**DCL      8597<<ASSIGN   9119<<ASSIGN
AMR$REC$.V.JRNLBYPASS#
      7311**DCL      8599<<ASSIGN   9121<<ASSIGN
AMR$REC$.V.KEYL#
      7313**DCL      8601<<ASSIGN   9123<<ASSIGN
AMR$REC$.V.KEYX#
      7312**DCL      8603<<ASSIGN   9125<<ASSIGN
AMR$REC$.V.LINES#
      7327**DCL      8615<<ASSIGN   9127<<ASSIGN
AMR$REC$.V.LOAD#
      7311**DCL      8617<<ASSIGN   9129<<ASSIGN
AMR$REC$.V.LRDL0#
      7315**DCL      8619<<ASSIGN   9135<<ASSIGN
AMR$REC$.V.LSLIDE#
      7314**DCL      8621<<ASSIGN   9137<<ASSIGN
AMR$REC$.V.LSTAOR#
      7311**DCL      8623<<ASSIGN   9139<<ASSIGN
AMR$REC$.V.MAXVOL#
      7323**DCL      8634<<ASSIGN   9154<<ASSIGN
AMR$REC$.V.NRECS#
      7316**DCL      8656<<ASSIGN   9166<<ASSIGN
AMR$REC$.V.ORG#
      7308**DCL      8678<<ASSIGN   9178<<ASSIGN
AMR$REC$.V.QISS#
      7326**DCL      8711<<ASSIGN   9195<<ASSIGN
AMR$REC$.V.RECL#
      7314**DCL      8713<<ASSIGN   9197<<ASSIGN
AMR$REC$.V.SEED#
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:386  
      7330**DCL      8737<<ASSIGN   9215<<ASSIGN   9218<<ASSIGN
AMR$REC$.V.SEEDSPECIFIED#
      7321**DCL      8738<<ASSIGN   9216<<ASSIGN   9219<<ASSIGN
AMR$REC$.V.SEQ#
      7325**DCL      8745<<ASSIGN   9229<<ASSIGN   9232<<ASSIGN   9235<<ASSIGN
AMR$REC$.V.SEQCOL#
      7325**DCL      8740<<ASSIGN   8746<<ASSIGN   9230<<ASSIGN
AMR$REC$.V.SEQID#
      7327**DCL      8742<<ASSIGN   8747<<ASSIGN   9233<<ASSIGN
AMR$REC$.V.SHARE#
      7302**DCL      8749<<ASSIGN   9237<<ASSIGN
AMR$REC$.V.SPANNED#
      7310**DCL      8755<<ASSIGN   9283<<ASSIGN
AMR$REC$.V.SPARE#
      7315**DCL      8757<<ASSIGN   9285<<ASSIGN
AMR$REC$.V.TERMCONLGL#
      7320**DCL      8765<<ASSIGN   9305<<ASSIGN
AMR$REC$.V.TYPE#
      7309**DCL      8779<<ASSIGN   9331<<ASSIGN
AMR$REC$.V.UOPT#
      7307**DCL      8787<<ASSIGN   8789<<ASSIGN   8791<<ASSIGN   8793<<ASSIGN   8795<<ASSIGN   8797<<ASSIGN
      8799<<ASSIGN   8801<<ASSIGN   8803<<ASSIGN   9333<<ASSIGN   9337<<ASSIGN   9339<<ASSIGN   9341<<ASSIGN
      9343<<ASSIGN   9345<<ASSIGN   9347<<ASSIGN   9349<<ASSIGN   9351<<ASSIGN
AMR$REC$.V.VOL#
      7322**DCL      8817<<ASSIGN
AMR$REC$.V.VOLACCESS#
      7326**DCL      8815<<ASSIGN   9353<<ASSIGN
AMR$REC$.V.XTEND#
      7318**DCL      8834<<ASSIGN   9359<<ASSIGN
AMR$REC$.V.XTNSIZE#
      7316**DCL      8836<<ASSIGN   9361<<ASSIGN
AMR$REC$.VIRTUAL_
      7289**DCL      8574>>IF       8576>>ASSIGN   8579>>IF       8581>>ASSIGN   8629>>IF       8631>>ASSIGN
      8651>>IF       8653>>ASSIGN   8690>>IF       8692>>ASSIGN   8725>>IF       8727>>ASSIGN   8730>>IF
      8732>>ASSIGN   9106>>ASSIGN   9109>>ASSIGN   9157>>ASSIGN   9164>>ASSIGN   9185>>ASSIGN   9223>>ASSIGN
      9227>>ASSIGN   9604>>IF       9636<<ASSIGN   9637>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:387  
AMR$REC$.WINDOW_
      7291**DCL      8451>>IF       8453>>ASSIGN   8525>>IF       8527>>ASSIGN   8532>>IF       8534>>ASSIGN
      8537>>IF       8539>>ASSIGN   8610>>IF       8612>>ASSIGN   8636>>IF       8638>>ASSIGN   8641>>IF
      8643>>ASSIGN   8673>>IF       8675>>ASSIGN   8695>>IF       8697>>ASSIGN   8715>>IF       8717>>ASSIGN
      8774>>IF       8776>>ASSIGN   8805>>IF       8807>>ASSIGN   8810>>IF       8812>>ASSIGN   8819>>IF
      8821>>ASSIGN   8824>>IF       8826>>ASSIGN   8933>>IF       8936<>CALL     9608>>IF       9643<<ASSIGN
      9644>>ASSIGN
AMR$REC$.WSN_
      7294**DCL      7294--REDEF
AM_HDR.CTL
      7564**DCL      9312<<ASSIGN   9317>>ASSIGN
ASN
      6849**DCL      8384<<ASSIGN   8387<<ASSIGN   9678>>IF       9686>>IF       9697>>IF       9697>>IF
      9721>>IF       9721>>IF       9735>>IF       9756>>IF
ASN_GOOD IN PROCEDURE CHK_IF_ASN_OK
      9671**DCL      9674<<ASSIGN   9681<<ASSIGN   9689<<ASSIGN   9700<<ASSIGN   9724<<ASSIGN   9738<<ASSIGN
      9759<<ASSIGN   9765>>IF
ATTR$ IN PROCEDURE ATTR_OPTS
     10011**DCL     10009--PROC    10043>>IF      10047>>ASSIGN  10049<<ASSIGN  10055>>ASSIGN  10060>>IF
     10064>>ASSIGN  10072>>ASSIGN  10076>>IF      10079>>ASSIGN  10080>>ASSIGN  10082>>ASSIGN  10084<<ASSIGN
     10099<<ASSIGN
ATTR$ IN PROCEDURE RESET_ATTR_OPTS
     10125**DCL     10123--PROC    10144>>IF      10147>>ASSIGN  10148>>ASSIGN  10152<<ASSIGN  10156>>ASSIGN
     10158<<ASSIGN  10159>>ASSIGN  10160>>ASSIGN
ATTR_OPTS
     10009**PROC     9111--CALL     9193--CALL     9335--CALL
ATTR_OPTS_RET IN PROCEDURE ATTR_OPTS
     10103**LABEL   10054--GOTO
B$ IN PROCEDURE CHK_IF_ASN_OK
      9670**DCL      9668--PROC     9675>>DOCASE   9770>>ASSIGN
B$EXCFR.ASL
      7789**DCL      7789--REDEF
B$EXCFR.ERR
      7803**DCL      9841>>ASSIGN
B$EXCFR.ERR.ERR#
      7803**DCL      7803--REDEF
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:388  
B$EXCFR.EVID
      7802**DCL      7802--REDEF    7803--REDEF
B$EXCFR.IR
      7790**DCL      7790--REDEF
B$EXCFR.PREVSZ
      7789**DCL      7789--REDEF
B$EXCFR.SUBC
      7801**DCL      7801--REDEF    7802--REDEF    7802--REDEF
B$JIT.CPFLAGS1.SLEAZE
      6644**DCL      6644--REDEF
B$JIT.ERR.MID
      6551**DCL      6551--REDEF
B$JIT.JRESPEAK
      6712**DCL      6713--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      6821**DCL      6821--REDEF    6822--REDEF
B$JIT.PNR
      6725**DCL      6725--REDEF
B$JIT.TSLINE
      6819**DCL      6820--REDEF
B$JIT$
      4197**DCL      6545--IMP-PTR
B$TCB.ALT$
      7786**DCL      9841>>ASSIGN
B$TCB$
      4198**DCL      7786--IMP-PTR  9841>>ASSIGN
B$WORD IN PROCEDURE BLD_ACCESS_VLP
      9407**DCL      9488<<ASSIGN   9488>>ASSIGN
BLD_ACC50 IN PROCEDURE BLD_ACCESS_VLP
      9532**LABEL    9475--CALLALT  9484--CALLALT  9496--CALLALT
BLD_ACCESS_VLP
      9388**PROC     8952--CALL     8957--CALL
BLD_VLP_AREA
      9597**PROC     8935--CALL     8960--CALL     8963--CALL     8970--CALL     8994--CALL     8999--CALL
      9020--CALL     9023--CALL     9026--CALL     9044--CALL     9095--CALL     9098--CALL     9101--CALL
      9105--CALL     9108--CALL     9115--CALL     9132--CALL     9156--CALL     9159--CALL     9163--CALL
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:389  
      9168--CALL     9171--CALL     9174--CALL     9180--CALL     9184--CALL     9187--CALL     9222--CALL
      9226--CALL     9356--CALL
BLD_VLP_AREA50 IN PROCEDURE BLD_VLP_AREA
      9641**LABEL    9630--CALLALT
BLK$
      6847**DCL        30--PROC     7447--IMP-PTR  7493--IMP-PTR  8379>>IF       8392>>IF       8394>>DOWHILE
      8395>>ASSIGN   8408>>ASSIGN   8844>>DOWHILE  8845>>ASSIGN   8947>>ASSIGN
BLK$ IN PROCEDURE ALTKEYS_OPTS
      9915**DCL      9960<<ASSIGN   9961>>DOINDEX  9962>>DOCASE   9964>>ASSIGN   9967>>CALL     9967>>CALL
      9972>>CALL     9972>>CALL
BUF$ IN PROCEDURE ATTR_OPTS
     10014**DCL     10087<<ASSIGN  10089<<ASSIGN  10089>>ASSIGN  10091>>ASSIGN  10093>>ASSIGN  10097>>ASSIGN
BUFSIZC IN PROCEDURE ATTR_OPTS
     10021**DCL     10036--IMP-SIZ 10046<<ASSIGN  10047>>ASSIGN  10071<<ASSIGN  10072>>ASSIGN  10079<<ASSIGN
     10080>>ASSIGN  10080>>ASSIGN  10081>>ASSIGN
BUFSIZC IN PROCEDURE RESET_ATTR_OPTS
     10127**DCL     10142--IMP-SIZ 10155<<ASSIGN  10156>>ASSIGN
CHK_IF_ASN_OK
      9668**PROC     8401--CALL     8942--CALL
CNTLS IN PROCEDURE BLD_ACCESS_VLP
      9390**DCL      9412<<ASSIGN   9414<<ASSIGN   9416<<ASSIGN   9422<<ASSIGN   9505>>ASSIGN   9518>>ASSIGN
      9529>>ASSIGN
CNTLS_TRANS IN PROCEDURE BLD_ACCESS_VLP
      9391**DCL      9422>>ASSIGN
CNVRT_FID
      9784**PROC     9045--CALL
CNVRT_FID50 IN PROCEDURE CNVRT_FID
      9841**LABEL    9838--CALLALT
CPSL_CAMR_REC.ACSVEH_
      3485**DCL      3486--REDEF
CPSL_CAMR_REC.ALTKEYS_
      3491**DCL      3492--REDEF    3492--REDEF
CPSL_CAMR_REC.HDR_
      3490**DCL      3491--REDEF
CPSL_CAMR_REC.TAB_
      3489**DCL      3490--REDEF
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:390  
CPSL_CAMR_REC.UHL_
      3483**DCL      3484--REDEF    3484--REDEF
CPSL_CAMR_REC.V.FSN#
      3523**DCL      3523--REDEF    3523--REDEF
CPSL_CAMR_REC.WSN_
      3489**DCL      3489--REDEF
CPSL_CFPT_CLOSE.SN_
      3550**DCL      3550--REDEF
CPSL_CFPT_CLOSE.UTL_
      3551**DCL      3551--REDEF
CPSL_CFPT_CLOSE.V.EXPIRE#
      3565**DCL      3565--REDEF
CPSL_CFPT_CLOSE.V.TYPE#
      3563**DCL      3563--REDEF
CPSL_CFPT_CLOSE.V.XTNSIZE#
      3560**DCL      3560--REDEF    3562--REDEF
CPSL_CFPT_FID
      3729**DCL      9827>>ASSIGN
CPSL_CFPT_OPEN.ACSVEH_
      3376**DCL      3377--REDEF
CPSL_CFPT_OPEN.ALTKEYS_
      3382**DCL      3383--REDEF    3383--REDEF
CPSL_CFPT_OPEN.HDR_
      3381**DCL      3382--REDEF
CPSL_CFPT_OPEN.TAB_
      3380**DCL      3381--REDEF
CPSL_CFPT_OPEN.UHL_
      3374**DCL      3375--REDEF    3375--REDEF
CPSL_CFPT_OPEN.V.ACS#
      3394**DCL      8417>>ASSIGN
CPSL_CFPT_OPEN.V.ANSISPANSEQ#
      3407**DCL      8437>>ASSIGN
CPSL_CFPT_OPEN.V.AU#
      3412**DCL      8444>>ASSIGN
CPSL_CFPT_OPEN.V.BLKL#
      3400**DCL      8446>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:391  
CPSL_CFPT_OPEN.V.BLOCKED#
      3395**DCL      8447>>ASSIGN   8449>>ASSIGN
CPSL_CFPT_OPEN.V.BUPM#
      3396**DCL      8456>>ASSIGN
CPSL_CFPT_OPEN.V.CNVRT#
      3403**DCL      8485>>ASSIGN
CPSL_CFPT_OPEN.V.COMP#
      3395**DCL      8458>>ASSIGN
CPSL_CFPT_OPEN.V.COPIES#
      3415**DCL      8460>>ASSIGN
CPSL_CFPT_OPEN.V.CTG#
      3387**DCL      8462>>ASSIGN
CPSL_CFPT_OPEN.V.CVOL#
      3388**DCL      8464>>ASSIGN
CPSL_CFPT_OPEN.V.DCBCONLGL#
      3405**DCL      8471>>ASSIGN
CPSL_CFPT_OPEN.V.DENSITY#
      3415**DCL      8473>>ASSIGN
CPSL_CFPT_OPEN.V.DISP#
      3399**DCL      8480>>ASSIGN
CPSL_CFPT_OPEN.V.DVFC#
      3410**DCL      8482>>ASSIGN
CPSL_CFPT_OPEN.V.EBCDIC#
      3403**DCL      8484>>ASSIGN
CPSL_CFPT_OPEN.V.EVENT#
      3413**DCL      8502>>ASSIGN
CPSL_CFPT_OPEN.V.EXIST#
      3387**DCL      8504>>ASSIGN
CPSL_CFPT_OPEN.V.EXPIRE#
      3403**DCL      8506>>ASSIGN
CPSL_CFPT_OPEN.V.FSN#
      3414**DCL      3414--REDEF    3414--REDEF    8521>>ASSIGN
CPSL_CFPT_OPEN.V.FUN#
      3393**DCL      8523>>ASSIGN
CPSL_CFPT_OPEN.V.GHSTACS#
      3398**DCL      8530>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:392  
CPSL_CFPT_OPEN.V.IGNOREFSN#
      3407**DCL      8552>>ASSIGN
CPSL_CFPT_OPEN.V.INITZ.SCRUB#
      3384**DCL      8735>>ASSIGN
CPSL_CFPT_OPEN.V.IOERROK#
      3405**DCL      8590>>ASSIGN
CPSL_CFPT_OPEN.V.IXTNSIZE#
      3402**DCL      8597>>ASSIGN
CPSL_CFPT_OPEN.V.JRNLBYPASS#
      3397**DCL      8599>>ASSIGN
CPSL_CFPT_OPEN.V.KEYL#
      3399**DCL      8601>>ASSIGN
CPSL_CFPT_OPEN.V.KEYX#
      3398**DCL      8603>>ASSIGN
CPSL_CFPT_OPEN.V.LINES#
      3413**DCL      8615>>ASSIGN
CPSL_CFPT_OPEN.V.LOAD#
      3397**DCL      8617>>ASSIGN
CPSL_CFPT_OPEN.V.LRDL0#
      3401**DCL      8619>>ASSIGN
CPSL_CFPT_OPEN.V.LSLIDE#
      3400**DCL      8621>>ASSIGN
CPSL_CFPT_OPEN.V.LSTAOR#
      3397**DCL      8623>>ASSIGN
CPSL_CFPT_OPEN.V.MAXVOL#
      3409**DCL      8634>>ASSIGN
CPSL_CFPT_OPEN.V.NRECS#
      3402**DCL      8656>>ASSIGN
CPSL_CFPT_OPEN.V.ORG#
      3394**DCL      8678>>ASSIGN
CPSL_CFPT_OPEN.V.QISS#
      3412**DCL      8711>>ASSIGN
CPSL_CFPT_OPEN.V.RECL#
      3400**DCL      8713>>ASSIGN
CPSL_CFPT_OPEN.V.SEED#
      3416**DCL      8737>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:393  
CPSL_CFPT_OPEN.V.SEEDSPECIFIED#
      3407**DCL      8738>>ASSIGN
CPSL_CFPT_OPEN.V.SEQ#
      3411**DCL      8745>>ASSIGN
CPSL_CFPT_OPEN.V.SEQCOL#
      3411**DCL      8740>>ASSIGN   8746>>ASSIGN
CPSL_CFPT_OPEN.V.SEQID#
      3413**DCL      8742>>ASSIGN   8747>>ASSIGN
CPSL_CFPT_OPEN.V.SHARE#
      3388**DCL      8749>>ASSIGN
CPSL_CFPT_OPEN.V.SPANNED#
      3396**DCL      8755>>ASSIGN
CPSL_CFPT_OPEN.V.SPARE#
      3401**DCL      8757>>ASSIGN
CPSL_CFPT_OPEN.V.TERMCONLGL#
      3406**DCL      8765>>ASSIGN
CPSL_CFPT_OPEN.V.TYPE#
      3395**DCL      8779>>ASSIGN
CPSL_CFPT_OPEN.V.UOPT#
      3393**DCL      8787>>ASSIGN   8789>>ASSIGN   8791>>ASSIGN   8793>>ASSIGN   8795>>ASSIGN   8797>>ASSIGN
      8799>>ASSIGN   8801>>ASSIGN   8803>>ASSIGN
CPSL_CFPT_OPEN.V.VOL#
      3408**DCL      8817>>ASSIGN
CPSL_CFPT_OPEN.V.VOLACCESS#
      3412**DCL      8815>>ASSIGN
CPSL_CFPT_OPEN.V.XTEND#
      3404**DCL      8834>>ASSIGN
CPSL_CFPT_OPEN.V.XTNSIZE#
      3402**DCL      8836>>ASSIGN
CPSL_CFPT_OPEN.WSN_
      3380**DCL      3380--REDEF
CPSL_CFPT_READ.STATION_
      3589**DCL      3590--REDEF
CPSL_CFPT_READ.V.DVBYTE.REREAD#
      3601**DCL      3601--REDEF
CPSL_CFPT_READ.V.INDX#
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:394  
      3599**DCL      3599--REDEF
CPSL_CFPT_WRITE.STATION_
      3627**DCL      3627--REDEF
CPSL_CFPT_WRITE.V.DVBYTE.VFC#
      3634**DCL      3634--REDEF
CPSL_CVLP_FPRG
      4151**DCL      9625--ASSIGN   9641>>ASSIGN
CPSL_CVLP_FPRG.ACCT#
      4157**DCL      8516>>ASSIGN
CPSL_CVLP_FPRG.FLGS.DEBUG#
      4155**DCL      8468>>ASSIGN
CPSL_CVLP_FPRG.LDBYPRO#
      4155**DCL      8607>>ASSIGN
CPSL_CVLP_FPRG.NAME
      4156**DCL      8515>>ASSIGN
CPSL_CVLP_FPRG.PASS#
      4158**DCL      8517>>ASSIGN
CPSL_CVLP_FPRG.PROFILE#
      4158**DCL      8708>>ASSIGN
CPSL_CVLP_FPRG.PSN#
      4156**DCL      8518>>ASSIGN
CPSL_CVLP_HDR
      3943**DCL      9078--ASSIGN   9080>>ASSIGN   9203--ASSIGN   9205>>ASSIGN   9313--ASSIGN   9321--ASSIGN
      9324>>ASSIGN
CPSL_CVLP_HDR.CTL.COUNT#
      3945**DCL      8687>>ASSIGN
CPSL_CVLP_HDR.CTL.HEADERHEIGHT#
      3944**DCL      8544>>ASSIGN
CPSL_CVLP_HDR.CTL.INDENT#
      3944**DCL      8571>>ASSIGN
CPSL_CVLP_HDR.CTL.RESETPAGE#
      3943**DCL      8722>>ASSIGN
CPSL_CVLP_SETSTA
      3960**DCL      9621--ASSIGN   9634>>ASSIGN
CPSL_CVLP_SETSTA.ISTA.DIRONLY#
      3967**DCL      8477>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:395  
CPSL_CVLP_SETSTA.ISTA.EOFNONE#
      3966**DCL      8489>>ASSIGN
CPSL_CVLP_SETSTA.ISTA.EOFONE#
      3966**DCL      8494>>ASSIGN
CPSL_CVLP_SETSTA.ISTA.EOFTIME#
      3968**DCL      8499>>ASSIGN
CPSL_CVLP_SETSTA.ISTA.ILATCH#
      3965**DCL      8556>>ASSIGN
CPSL_CVLP_SETSTA.ISTA.ILOCK#
      3965**DCL      8561>>ASSIGN
CPSL_CVLP_SETSTA.ISTA.IMSGTYP#
      3965**DCL      8566>>ASSIGN
CPSL_CVLP_SETSTA.ISTA.ISTATION#
      3964**DCL      8594>>ASSIGN
CPSL_CVLP_SETSTA.MYSTATION#
      3964**DCL      8648>>ASSIGN
CPSL_CVLP_SETSTA.OSTA.ALLDCBS#
      3971**DCL      8425>>ASSIGN
CPSL_CVLP_SETSTA.OSTA.ALLTRMS#
      3971**DCL      8430>>ASSIGN
CPSL_CVLP_SETSTA.OSTA.ANYDCB#
      3972**DCL      8441>>ASSIGN
CPSL_CVLP_SETSTA.OSTA.OLATCH#
      3970**DCL      8660>>ASSIGN
CPSL_CVLP_SETSTA.OSTA.OLOCK#
      3970**DCL      8665>>ASSIGN
CPSL_CVLP_SETSTA.OSTA.OMSGTYP#
      3969**DCL      8670>>ASSIGN
CPSL_CVLP_SETSTA.OSTA.OSTATION#
      3969**DCL      8682>>ASSIGN
CPSL_CVLP_SETSTA.OSTA.WAS#
      3973**DCL      8831>>ASSIGN
CPSL_CVLP_TAB
      3987**DCL      9148--ASSIGN   9150>>ASSIGN   9292--ASSIGN   9294>>ASSIGN
CPSL_CVLP_TRMCTL.BREAKCOUNT
      4018**DCL      4019--REDEF
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:396  
CPSL_CVLP_VIRTUAL
      4172**DCL      9623--ASSIGN   9637>>ASSIGN
CPSL_CVLP_VIRTUAL.INITIALIZE#
      4172**DCL      8576>>ASSIGN
CPSL_CVLP_VIRTUAL.INITVALUE#
      4174**DCL      8581>>ASSIGN
CPSL_CVLP_VIRTUAL.MINPHYS#
      4175**DCL      8631>>ASSIGN
CPSL_CVLP_VIRTUAL.NOFILE#
      4172**DCL      8653>>ASSIGN
CPSL_CVLP_VIRTUAL.PHYSICAL#
      4175**DCL      8692>>ASSIGN
CPSL_CVLP_VIRTUAL.SEGNUM#
      4173**DCL      8727>>ASSIGN
CPSL_CVLP_VIRTUAL.SEGSIZE#
      4174**DCL      8732>>ASSIGN
CPSL_CVLP_WINDOW
      4114**DCL      9628--ASSIGN   9644>>ASSIGN
CPSL_CVLP_WINDOW.BTMBRDR#
      4130**DCL      8453>>ASSIGN
CPSL_CVLP_WINDOW.FWINDOW#
      4114**DCL      4114--REDEF    4115--REDEF    8527>>ASSIGN
CPSL_CVLP_WINDOW.HBRDRCHR#
      4131**DCL      8534>>ASSIGN
CPSL_CVLP_WINDOW.HBRDRSIZ#
      4131**DCL      8539>>ASSIGN
CPSL_CVLP_WINDOW.LENGTH#
      4128**DCL      8821>>ASSIGN
CPSL_CVLP_WINDOW.LFTBRDR#
      4132**DCL      8612>>ASSIGN
CPSL_CVLP_WINDOW.MINLENGTH#
      4133**DCL      8638>>ASSIGN
CPSL_CVLP_WINDOW.MINWIDTH#
      4134**DCL      8643>>ASSIGN
CPSL_CVLP_WINDOW.POSITION#
      4128**DCL      8697>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:397  
CPSL_CVLP_WINDOW.REMOVABLE#
      4135**DCL      8675>>ASSIGN
CPSL_CVLP_WINDOW.RHTBRDR#
      4132**DCL      8717>>ASSIGN
CPSL_CVLP_WINDOW.TOPBRDR#
      4130**DCL      8776>>ASSIGN
CPSL_CVLP_WINDOW.VBRDRCHR#
      4133**DCL      8807>>ASSIGN
CPSL_CVLP_WINDOW.VBRDRSIZ#
      4132**DCL      8812>>ASSIGN
CPSL_CVLP_WINDOW.WIDTH#
      4128**DCL      8826>>ASSIGN
CPSL_PARAM
      7191**DCL        30--PROC     8398<>CALL     8885<>CALL     8892<>CALL     8897<>CALL     8900<>CALL
      8913<>CALL     8936<>CALL     9967<>CALL     9972<>CALL    10051<>CALL
CPSL_PARAM.ERRCODE
      7199**DCL      8406>>IF       8945>>IF       9050<<ASSIGN   9058<<ASSIGN   9368<<ASSIGN   9372<<ASSIGN
      9578<<ASSIGN   9581<<ASSIGN   9769<<ASSIGN   9841<<ASSIGN   9986<<ASSIGN  10052>>IF      10106<<ASSIGN
     10167<<ASSIGN
CPSL_PARAM.ERR_CPOS
      7205**DCL      9051<<ASSIGN   9059<<ASSIGN   9369<<ASSIGN   9373<<ASSIGN   9583<<ASSIGN   9770<<ASSIGN
      9842<<ASSIGN   9987<<ASSIGN  10107<<ASSIGN  10168<<ASSIGN
CPSL_PARAM.ERR_DCB#
      7206**DCL      8382>>ASSIGN   8383<<ASSIGN
CPSL_PARAM.FLAGS.REPORTED_TO_USER
      7196**DCL      9375<<ASSIGN
CPSL_PARAM.FLAGS.VERIFY_ONLY
      7194**DCL      8404>>IF       8943>>IF
CPSL_SEG3$
      4200**DCL      7288--IMP-PTR  8387>>ASSIGN   8413>>ASSIGN   8415>>ASSIGN   8417>>ASSIGN   8419>>ASSIGN
      8421>>ASSIGN   8423>>IF       8425>>ASSIGN   8428>>IF       8430>>ASSIGN   8433>>ASSIGN   8435>>ASSIGN
      8437>>ASSIGN   8439>>IF       8441>>ASSIGN   8444>>ASSIGN   8446>>ASSIGN   8447>>ASSIGN   8449>>ASSIGN
      8451>>IF       8453>>ASSIGN   8456>>ASSIGN   8458>>ASSIGN   8460>>ASSIGN   8462>>ASSIGN   8464>>ASSIGN
      8466>>IF       8468>>ASSIGN   8471>>ASSIGN   8473>>ASSIGN   8475>>IF       8477>>ASSIGN   8480>>ASSIGN
      8482>>ASSIGN   8484>>ASSIGN   8485>>ASSIGN   8487>>IF       8489>>ASSIGN   8492>>IF       8494>>ASSIGN
      8497>>IF       8499>>ASSIGN   8502>>ASSIGN   8504>>ASSIGN   8506>>ASSIGN   8508>>ASSIGN   8510>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:398  
      8512>>IF       8515>>ASSIGN   8516>>ASSIGN   8517>>ASSIGN   8518>>ASSIGN   8521>>ASSIGN   8523>>ASSIGN
      8525>>IF       8527>>ASSIGN   8530>>ASSIGN   8532>>IF       8534>>ASSIGN   8537>>IF       8539>>ASSIGN
      8542>>IF       8544>>ASSIGN   8548>>ASSIGN   8550>>ASSIGN   8552>>ASSIGN   8554>>IF       8556>>ASSIGN
      8559>>IF       8561>>ASSIGN   8564>>IF       8566>>ASSIGN   8569>>IF       8571>>ASSIGN   8574>>IF
      8576>>ASSIGN   8579>>IF       8581>>ASSIGN   8584>>CALL     8586>>IF       8588>>ASSIGN   8590>>ASSIGN
      8592>>IF       8594>>ASSIGN   8597>>ASSIGN   8599>>ASSIGN   8601>>ASSIGN   8603>>ASSIGN   8605>>IF
      8607>>ASSIGN   8610>>IF       8612>>ASSIGN   8615>>ASSIGN   8617>>ASSIGN   8619>>ASSIGN   8621>>ASSIGN
      8623>>ASSIGN   8625>>IF       8627>>ASSIGN   8629>>IF       8631>>ASSIGN   8634>>ASSIGN   8636>>IF
      8638>>ASSIGN   8641>>IF       8643>>ASSIGN   8646>>IF       8648>>ASSIGN   8651>>IF       8653>>ASSIGN
      8656>>ASSIGN   8658>>IF       8660>>ASSIGN   8663>>IF       8665>>ASSIGN   8668>>IF       8670>>ASSIGN
      8673>>IF       8675>>ASSIGN   8678>>ASSIGN   8680>>IF       8682>>ASSIGN   8685>>IF       8687>>ASSIGN
      8690>>IF       8692>>ASSIGN   8695>>IF       8697>>ASSIGN   8700>>CALL     8702>>IF       8704>>ASSIGN
      8706>>IF       8708>>ASSIGN   8711>>ASSIGN   8713>>ASSIGN   8715>>IF       8717>>ASSIGN   8720>>IF
      8722>>ASSIGN   8725>>IF       8727>>ASSIGN   8730>>IF       8732>>ASSIGN   8735>>ASSIGN   8737>>ASSIGN
      8738>>ASSIGN   8740>>ASSIGN   8742>>ASSIGN   8745>>ASSIGN   8746>>ASSIGN   8747>>ASSIGN   8749>>ASSIGN
      8751>>ASSIGN   8753>>ASSIGN   8755>>ASSIGN   8757>>ASSIGN   8759>>IF       8762>>ASSIGN   8765>>ASSIGN
      8767>>IF       8770>>ASSIGN   8771>>ASSIGN   8771>>ASSIGN   8774>>IF       8776>>ASSIGN   8779>>ASSIGN
      8781>>CALL     8783>>IF       8785>>ASSIGN   8787>>ASSIGN   8789>>ASSIGN   8791>>ASSIGN   8793>>ASSIGN
      8795>>ASSIGN   8797>>ASSIGN   8799>>ASSIGN   8801>>ASSIGN   8803>>ASSIGN   8805>>IF       8807>>ASSIGN
      8810>>IF       8812>>ASSIGN   8815>>ASSIGN   8817>>ASSIGN   8819>>IF       8821>>ASSIGN   8824>>IF
      8826>>ASSIGN   8829>>IF       8831>>ASSIGN   8834>>ASSIGN   8836>>ASSIGN   8933>>IF       8936>>CALL
      8952>>CALL     8953>>ASSIGN   8953>>ASSIGN   8955>>ASSIGN   8957>>CALL     8958>>ASSIGN   8958>>ASSIGN
      8961>>ASSIGN   8964>>ASSIGN   8968>>ASSIGN   8971>>ASSIGN   8973>>ASSIGN   8975>>ASSIGN   8977>>ASSIGN
      8979>>ASSIGN   8981>>ASSIGN   8984>>ASSIGN   8986>>ASSIGN   8988>>ASSIGN   8990>>ASSIGN   8992>>ASSIGN
      8995>>ASSIGN   8997>>ASSIGN   9000>>ASSIGN   9002>>ASSIGN   9006>>ASSIGN   9008>>ASSIGN   9011>>ASSIGN
      9012>>ASSIGN   9012>>ASSIGN   9017>>ASSIGN   9021>>ASSIGN   9024>>ASSIGN   9027>>ASSIGN   9029>>ASSIGN
      9031>>ASSIGN   9035>>ASSIGN   9037>>ASSIGN   9041>>CALL     9042>>ASSIGN   9063>>ASSIGN   9064>>ASSIGN
      9065>>ASSIGN   9066>>ASSIGN   9068>>ASSIGN   9070>>ASSIGN   9072>>ASSIGN   9075>>IF       9079>>CALL
      9080>>ASSIGN   9080>>ASSIGN   9081>>ASSIGN   9085>>ASSIGN   9088>>ASSIGN   9091>>ASSIGN   9093>>ASSIGN
      9096>>ASSIGN   9099>>ASSIGN   9102>>ASSIGN   9106>>ASSIGN   9109>>ASSIGN   9111>>CALL     9113>>ASSIGN
      9116>>ASSIGN   9119>>ASSIGN   9121>>ASSIGN   9123>>ASSIGN   9125>>ASSIGN   9127>>ASSIGN   9129>>ASSIGN
      9133>>ASSIGN   9135>>ASSIGN   9137>>ASSIGN   9139>>ASSIGN   9145>>IF       9149>>CALL     9150>>ASSIGN
      9152>>ASSIGN   9154>>ASSIGN   9157>>ASSIGN   9160>>ASSIGN   9164>>ASSIGN   9166>>ASSIGN   9169>>ASSIGN
      9172>>ASSIGN   9175>>ASSIGN   9178>>ASSIGN   9181>>ASSIGN   9185>>ASSIGN   9188>>ASSIGN   9190>>ASSIGN
      9193>>CALL     9195>>ASSIGN   9197>>ASSIGN   9200>>IF       9204>>CALL     9205>>ASSIGN   9205>>ASSIGN
      9206>>ASSIGN   9208>>ASSIGN   9209>>ASSIGN   9211>>ASSIGN   9215>>ASSIGN   9216>>ASSIGN   9218>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:399  
      9219>>ASSIGN   9223>>ASSIGN   9227>>ASSIGN   9229>>ASSIGN   9230>>ASSIGN   9232>>ASSIGN   9233>>ASSIGN
      9235>>ASSIGN   9237>>ASSIGN   9242>>IF       9242>>IF       9246>>ASSIGN   9252>>ASSIGN   9253>>ASSIGN
      9257>>ASSIGN   9259>>ASSIGN   9270>>CALL     9271>>ASSIGN   9273>>ASSIGN   9274>>ASSIGN   9274>>ASSIGN
      9279>>ASSIGN   9283>>ASSIGN   9285>>ASSIGN   9289>>IF       9293>>CALL     9294>>ASSIGN   9299>>ASSIGN
      9302>>ASSIGN   9305>>ASSIGN   9307>>IF       9312>>ASSIGN   9315>>CALL     9317>>ASSIGN   9323>>CALL
      9324>>ASSIGN   9324>>ASSIGN   9326>>ASSIGN   9328>>ASSIGN   9328>>ASSIGN   9331>>ASSIGN   9333>>ASSIGN
      9335>>CALL     9337>>ASSIGN   9339>>ASSIGN   9341>>ASSIGN   9343>>ASSIGN   9345>>ASSIGN   9347>>ASSIGN
      9349>>ASSIGN   9351>>ASSIGN   9353>>ASSIGN   9357>>ASSIGN   9359>>ASSIGN   9361>>ASSIGN   9507>>ASSIGN
      9507>>ASSIGN   9523>>ASSIGN   9523>>ASSIGN   9532>>ASSIGN   9532>>ASSIGN   9604>>IF       9608>>IF
      9612>>IF       9633>>ASSIGN   9634>>ASSIGN   9636>>ASSIGN   9637>>ASSIGN   9640>>ASSIGN   9641>>ASSIGN
      9643>>ASSIGN   9644>>ASSIGN   9933>>IF       9935>>ASSIGN   9940>>ASSIGN   9940>>ASSIGN   9945>>IF
      9948>>DOINDEX  9949>>ASSIGN   9952>>ASSIGN   9954>>ASSIGN   9981>>ASSIGN
CVLP_ALTKEYS.K IN PROCEDURE ALTKEYS_OPTS
      9928**DCL      9959>>ASSIGN
CXB$PROC45
      9361**LABEL    8414--CALLALT  8420--CALLALT  8434--CALLALT  8509--CALLALT  8549--CALLALT  8752--CALLALT
      9262--CALLALT
CXB$PROC55
      9369**LABEL    8935--CALLALT  8952--CALLALT  8957--CALLALT  8960--CALLALT  8963--CALLALT  8970--CALLALT
      8994--CALLALT  8999--CALLALT  9020--CALLALT  9023--CALLALT  9026--CALLALT  9044--CALLALT  9095--CALLALT
      9098--CALLALT  9101--CALLALT  9105--CALLALT  9108--CALLALT  9115--CALLALT  9132--CALLALT  9156--CALLALT
      9159--CALLALT  9163--CALLALT  9168--CALLALT  9171--CALLALT  9174--CALLALT  9180--CALLALT  9184--CALLALT
      9187--CALLALT  9222--CALLALT  9226--CALLALT  9251--CALLALT  9356--CALLALT
CXB$WINDOW_OPTS
      7214**DCL-ENT  8936--CALL
CXX$DECBIN
      7211**DCL-ENT  9298--CALL
CXX$RESET
      7213**DCL-ENT  8398--CALL
CXX$SET
      7212**DCL-ENT  8885--CALL     8892--CALL     8897--CALL     8900--CALL     8913--CALL     9967--CALL
      9972--CALL    10051--CALL
DCB#
      6848**DCL      8382<<ASSIGN   8384--ASSIGN
ERR IN PROCEDURE CHK_IF_ASN_OK
      9672**DCL      9682<<ASSIGN   9690<<ASSIGN   9701<<ASSIGN   9725<<ASSIGN   9739<<ASSIGN   9760<<ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:400  
      9769>>ASSIGN
E_ALTKEYS_OPTS IN PROCEDURE ALTKEYS_OPTS
      9986**LABEL    9943--CALLALT  9953--CALLALT
E_AMFULL
      7940**DCL      9372>>ASSIGN   9578>>ASSIGN
E_ATTR_OPTS IN PROCEDURE ATTR_OPTS
     10106**LABEL   10048--CALLALT 10073--CALLALT 10083--CALLALT
E_BADACSVEHOPT
      8075**DCL      9682>>ASSIGN
E_BADALTKEYSOPT
      8165**DCL      9690>>ASSIGN
E_BADFPRGOPT
      8210**DCL      9701>>ASSIGN
E_BADSETSTAOPT
      7985**DCL      9725>>ASSIGN
E_BADVIRTUALOPT
      8030**DCL      9739>>ASSIGN
E_BADWINDOWOPT
      8120**DCL      9760>>ASSIGN
E_FPRG_FID_DISKONLY
      8300**DCL      9058>>ASSIGN
E_FPRG_FID_NONAME
      8255**DCL      9050>>ASSIGN
E_RESET_ATTR_OPTS IN PROCEDURE RESET_ATTR_OPTS
     10167**LABEL   10149--CALLALT 10157--CALLALT
F$DCB.ACTPOS
      7761**DCL      7761--REDEF
F$DCB.ARS#
      7735**DCL      7735--REDEF
F$DCB.ASN#
      7750**DCL      8384>>ASSIGN
F$DCB.ATTR
      7754**DCL      7755--REDEF
F$DCB.BORROW
      7769**DCL      7769--REDEF    7769--REDEF    7769--REDEF
F$DCB.DCBNAME.L
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:401  
      7783**DCL      7783--IMP-SIZ
F$DCB.EOMCHAR#
      7739**DCL      7739--REDEF
F$DCB.FLDID
      7764**DCL      7764--REDEF
F$DCB.FORM$
      7758**DCL      7758--REDEF
F$DCB.FSECT
      7774**DCL      7774--REDEF
F$DCB.FSN#
      7751**DCL      7751--REDEF    7751--REDEF    7752--REDEF
F$DCB.HEADER$
      7757**DCL      7757--REDEF
F$DCB.IXTNSIZE#
      7755**DCL      7755--REDEF
F$DCB.LASTSTA$
      7744**DCL      7744--REDEF
F$DCB.LVL
      7770**DCL      7770--REDEF
F$DCB.NAME#.C
      7745**DCL      7745--REDEF
F$DCB.NOEOF
      7767**DCL      7767--REDEF
F$DCB.NRECS#
      7756**DCL      7756--REDEF
F$DCB.NRECX
      7775**DCL      7775--REDEF
F$DCB.OHDR
      7767**DCL      7767--REDEF
F$DCB.ORG#
      7750**DCL      7750--REDEF
F$DCB.PRECNO
      7773**DCL      7773--REDEF
F$DCB.RCSZ
      7779**DCL      7779--REDEF
F$DCB.RES#
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:402  
      7746**DCL      7746--REDEF
F$DCB.SETX
      7758**DCL      7758--REDEF
F$DCB.TAB$
      7758**DCL      7758--REDEF
F$DCB.TDA
      7772**DCL      7773--REDEF
F$DCB.WSN#
      7746**DCL      7746--REDEF
FID_ACCT
      7899**DCL      9834--ASSIGN
FID_ACCT.ACCT#
      7899**DCL      9064>>ASSIGN
FID_ASN
      6850**DCL      9831--ASSIGN
FID_NAME
      7873**DCL      9063>>ASSIGN   9833--ASSIGN
FID_PASS
      7912**DCL      9835--ASSIGN
FID_PASS.PASS#
      7912**DCL      9065>>ASSIGN
FID_RES
      6851**DCL      9832--ASSIGN
FID_RESULTS
      7840**DCL      9836--ASSIGN
FID_RESULTS.NAME
      7840**DCL      9047>>IF
FID_RESULTS.WSN
      7840**DCL      9055>>IF
FID_SN
      7886**DCL      9829--ASSIGN
FID_SN.SN#
      7886**DCL      9066>>ASSIGN
FID_WSN
      7925**DCL      9830--ASSIGN
FILL$ IN PROCEDURE BLD_ACCESS_VLP
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:403  
      9396**DCL      9504<<ASSIGN   9505>>ASSIGN   9506>>ASSIGN   9517<<ASSIGN   9518>>ASSIGN   9519>>ASSIGN
      9521>>ASSIGN   9521>>ASSIGN   9523>>ASSIGN   9528<<ASSIGN   9529>>ASSIGN   9530>>ASSIGN
FPT$OPEN.ACSVEH_
      7399**DCL      7400--REDEF
FPT$OPEN.ALTKEYS_
      7405**DCL      7406--REDEF    7406--REDEF
FPT$OPEN.HDR_
      7404**DCL      7405--REDEF
FPT$OPEN.TAB_
      7403**DCL      7404--REDEF
FPT$OPEN.UHL_
      7397**DCL      7398--REDEF    7398--REDEF
FPT$OPEN.V.FSN#
      7437**DCL      7437--REDEF    7437--REDEF
FPT$OPEN.WSN_
      7403**DCL      7403--REDEF
FPT_FID
      7817**DCL      9827<<ASSIGN   9838<>CALL
FPT_FID.ACCT_
      7818**DCL      9834<<ASSIGN
FPT_FID.ASN_
      7820**DCL      9831<<ASSIGN
FPT_FID.NAME_
      7818**DCL      9833<<ASSIGN
FPT_FID.PASS_
      7818**DCL      9835<<ASSIGN
FPT_FID.RESULTS_
      7820**DCL      9836<<ASSIGN
FPT_FID.RES_
      7820**DCL      9832<<ASSIGN
FPT_FID.SN_
      7819**DCL      9829<<ASSIGN
FPT_FID.TEXTFID_
      7817**DCL      9837<<ASSIGN
FPT_FID.V
      7821**DCL      9828--ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:404  
FPT_FID.V_
      7817**DCL      9828<<ASSIGN
FPT_FID.WSN_
      7819**DCL      9830<<ASSIGN
GETCMD
      6865**DCL        30--PROC     8398<>CALL     8885<>CALL     8892<>CALL     8897<>CALL     8900<>CALL
      8913<>CALL     8936<>CALL     9967<>CALL     9972<>CALL    10051<>CALL
GETCMD.OUT$
      6870**DCL      6876--REDEF
GETVLPA
      9553**PROC     9041--CALL     9079--CALL     9149--CALL     9204--CALL     9270--CALL     9293--CALL
      9315--CALL     9323--CALL     9475--CALL
GETVLPA50 IN PROCEDURE GETVLPA
      9568**LABEL    9567--CALLALT
GETVLPA60 IN PROCEDURE GETVLPA
      9567**LABEL    9562--CALLALT
I
      7208**DCL      8388<<ASSIGN   8394>>DOWHILE  8395>>ASSIGN   8408<<ASSIGN   8838<<ASSIGN   8838>>ASSIGN
      8844>>DOWHILE  8845>>ASSIGN   8947<<ASSIGN   9363<<ASSIGN   9363>>ASSIGN
I IN PROCEDURE ALTKEYS_OPTS
      9909**DCL      9948<<DOINDEX  9949>>ASSIGN   9949>>ASSIGN   9951>>ASSIGN   9958<<DOINDEX  9959>>ASSIGN
      9960>>ASSIGN   9964>>ASSIGN   9969>>ASSIGN   9974>>ASSIGN
I IN PROCEDURE ATTR_OPTS
     10017**DCL     10051<>CALL    10055>>ASSIGN  10066<<DOINDEX 10067>>ASSIGN  10088<<DOINDEX 10090>>ASSIGN
     10091>>ASSIGN  10091>>ASSIGN  10093<<ASSIGN  10094>>ASSIGN
I IN PROCEDURE RESET_ATTR_OPTS
     10126**DCL     10147<<ASSIGN  10150>>IF      10160>>ASSIGN
J
      7209**DCL      8761<<DOINDEX  8762>>ASSIGN   8885<>CALL     8898<<DOINDEX  8899>>ASSIGN   8910<<DOINDEX
      8911>>DOCASE   8913>>CALL     8913>>CALL     8975>>ASSIGN   8986>>ASSIGN   9008>>ASSIGN   9027>>ASSIGN
      9029>>ASSIGN   9035>>ASSIGN   9068>>ASSIGN   9072>>ASSIGN   9085>>ASSIGN   9088>>ASSIGN   9091>>ASSIGN
      9109>>ASSIGN   9119>>ASSIGN   9123>>ASSIGN   9125>>ASSIGN   9127>>ASSIGN   9135>>ASSIGN   9137>>ASSIGN
      9152>>ASSIGN   9154>>ASSIGN   9157>>ASSIGN   9166>>ASSIGN   9185>>ASSIGN   9197>>ASSIGN   9218>>ASSIGN
      9227>>ASSIGN   9230>>ASSIGN   9258<<DOINDEX  9259>>ASSIGN   9259>>ASSIGN   9277<<DOINDEX  9278>>ASSIGN
      9285>>ASSIGN   9297<<DOINDEX  9298>>CALL     9299>>ASSIGN   9301<<DOINDEX  9302>>ASSIGN   9361>>ASSIGN
      9421<<DOINDEX  9422>>ASSIGN   9464<<DOINDEX  9467>>ASSIGN   9487<<DOINDEX  9488>>ASSIGN   9488>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:405  
      9513<<DOINDEX  9519>>ASSIGN   9521>>ASSIGN   9521>>ASSIGN   9530>>ASSIGN   9530>>ASSIGN
J IN PROCEDURE ALTKEYS_OPTS
      9910**DCL      9961<<DOINDEX  9962>>DOCASE   9964>>ASSIGN   9967>>CALL     9967>>CALL     9972>>CALL
      9972>>CALL
K IN PROCEDURE ALTKEYS_OPTS
      9911**DCL      9951<<ASSIGN   9957<<ASSIGN   9958>>DOINDEX  9960>>ASSIGN
M$FID
       103**DCL-ENT  9838--CALL
MCB
      7725**DCL        30--PROC     8414<>CALL     8420<>CALL     8434<>CALL     8509<>CALL     8549<>CALL
      8752<>CALL     9251<>CALL     9262<>CALL     9484<>CALL     9496<>CALL     9562<>CALL     9567<>CALL
      9630<>CALL     9943<>CALL     9953<>CALL    10048<>CALL    10073<>CALL    10083<>CALL    10149<>CALL
     10157<>CALL
MCB.ADDRESS$
      7725**DCL      8413<<ASSIGN   8419<<ASSIGN   8433<<ASSIGN   8508<<ASSIGN   8548<<ASSIGN   8751<<ASSIGN
      9253>>ASSIGN   9261<<ASSIGN   9486>>ASSIGN   9495<<ASSIGN   9561<<ASSIGN   9568>>ASSIGN   9633>>ASSIGN
      9636>>ASSIGN   9640>>ASSIGN   9643>>ASSIGN   9944>>ASSIGN   9952<<ASSIGN  10049>>ASSIGN  10074>>ASSIGN
     10082<<ASSIGN  10148<<ASSIGN  10158>>ASSIGN
MCB.ERR
      7726**DCL      9368>>ASSIGN   9581>>ASSIGN   9986>>ASSIGN  10106>>ASSIGN  10167>>ASSIGN
MCB.SIZE
      7725**DCL      9040<<ASSIGN   9078<<ASSIGN   9148<<ASSIGN   9203<<ASSIGN   9246<<ASSIGN   9247<<ASSIGN
      9247>>ASSIGN   9269<<ASSIGN   9292<<ASSIGN   9313<<ASSIGN   9321<<ASSIGN   9426<<ASSIGN   9439<<ASSIGN
      9439>>ASSIGN   9449<<ASSIGN   9449>>ASSIGN   9454>>ASSIGN   9462<<ASSIGN   9462>>ASSIGN   9467<<ASSIGN
      9467>>ASSIGN   9470<<ASSIGN   9470>>ASSIGN   9621<<ASSIGN   9623<<ASSIGN   9625<<ASSIGN   9628<<ASSIGN
      9942<<ASSIGN  10047<<ASSIGN  10072<<ASSIGN  10156<<ASSIGN
MCB.TYPE
      7725**DCL      9626<<ASSIGN   9639<<ASSIGN
NUM IN PROCEDURE ALTKEYS_OPTS
      9912**DCL      9935<<ASSIGN   9937<<ASSIGN   9939<<ASSIGN   9939>>ASSIGN   9940>>ASSIGN   9958>>DOINDEX
      9980>>ASSIGN
OLDVFCSIZE IN PROCEDURE BLD_ACCESS_VLP
      9397**DCL      9454<<ASSIGN   9494>>ASSIGN
OUT$BLK
      7447**DCL      8398<>CALL     8885<>CALL     8897<>CALL     8966<>CALL
OUT$BLK.CODE
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:406  
      7455**DCL      8379>>IF       8392>>IF       8396>>DOCASE   8411>>DOCASE   8846>>DOCASE   8911>>DOCASE
      8950>>DOCASE   8955>>ASSIGN   8961>>ASSIGN   8964>>ASSIGN   8968>>ASSIGN   8971>>ASSIGN   8973>>ASSIGN
      8979>>ASSIGN   8981>>ASSIGN   8984>>ASSIGN   8988>>ASSIGN   8990>>ASSIGN   8992>>ASSIGN   8995>>ASSIGN
      8997>>ASSIGN   9000>>ASSIGN   9002>>ASSIGN   9004>>DOCASE   9011>>ASSIGN   9017>>ASSIGN   9021>>ASSIGN
      9024>>ASSIGN   9031>>ASSIGN   9033>>DOCASE   9070>>ASSIGN   9083>>IF       9086>>IF       9089>>IF
      9093>>ASSIGN   9096>>ASSIGN   9099>>ASSIGN   9106>>ASSIGN   9113>>ASSIGN   9121>>ASSIGN   9129>>ASSIGN
      9133>>ASSIGN   9139>>ASSIGN   9164>>ASSIGN   9169>>ASSIGN   9172>>ASSIGN   9178>>ASSIGN   9195>>ASSIGN
      9208>>ASSIGN   9209>>ASSIGN   9211>>ASSIGN   9213>>DOCASE   9223>>ASSIGN   9235>>ASSIGN   9237>>ASSIGN
      9283>>ASSIGN   9305>>ASSIGN   9333>>ASSIGN   9337>>ASSIGN   9339>>ASSIGN   9341>>ASSIGN   9343>>ASSIGN
      9345>>ASSIGN   9347>>ASSIGN   9349>>ASSIGN   9351>>ASSIGN   9353>>ASSIGN   9357>>ASSIGN   9359>>ASSIGN
      9410>>DOCASE   9422>>ASSIGN   9435>>IF       9465>>IF       9514>>IF       9675>>DOCASE   9962>>DOCASE
      9964>>ASSIGN  10038>>DOCASE
OUT$BLK.CPOS
      7473**DCL      9770>>ASSIGN
OUT$BLK.NSUBLKS
      7459**DCL      8394>>DOWHILE  8408>>ASSIGN   8844>>DOWHILE  8898>>DOINDEX  8908>>IF       8910>>DOINDEX
      8947>>ASSIGN   9013>>IF       9247>>ASSIGN   9269>>ASSIGN   9274>>ASSIGN   9277>>DOINDEX  9297>>DOINDEX
      9301>>DOINDEX  9417>>IF       9421>>DOINDEX  9460>>IF       9464>>DOINDEX  9501>>IF       9513>>DOINDEX
      9961>>DOINDEX 10066>>DOINDEX 10088>>DOINDEX
OUT$BLK.SUBLK$
      7480**DCL      8395>>ASSIGN   8845>>ASSIGN   8892>>CALL     8892>>CALL     8899>>ASSIGN   8907>>ASSIGN
      8911>>DOCASE   8913>>CALL     8913>>CALL     8955>>ASSIGN   8961>>ASSIGN   8964>>ASSIGN   8968>>ASSIGN
      8971>>ASSIGN   8973>>ASSIGN   8979>>ASSIGN   8981>>ASSIGN   8984>>ASSIGN   8988>>ASSIGN   8990>>ASSIGN
      8992>>ASSIGN   8995>>ASSIGN   8997>>ASSIGN   9000>>ASSIGN   9002>>ASSIGN   9004>>DOCASE   9006>>ASSIGN
      9006>>ASSIGN   9011>>ASSIGN   9013>>IF       9016>>ASSIGN   9017>>ASSIGN   9021>>ASSIGN   9024>>ASSIGN
      9031>>ASSIGN   9033>>DOCASE   9042>>ASSIGN   9042>>ASSIGN   9045>>CALL     9045>>CALL     9051>>ASSIGN
      9059>>ASSIGN   9070>>ASSIGN   9093>>ASSIGN   9096>>ASSIGN   9099>>ASSIGN   9102>>ASSIGN   9102>>ASSIGN
      9102>>ASSIGN   9102>>ASSIGN   9106>>ASSIGN   9113>>ASSIGN   9116>>ASSIGN   9116>>ASSIGN   9116>>ASSIGN
      9116>>ASSIGN   9121>>ASSIGN   9129>>ASSIGN   9133>>ASSIGN   9139>>ASSIGN   9160>>ASSIGN   9160>>ASSIGN
      9160>>ASSIGN   9160>>ASSIGN   9164>>ASSIGN   9169>>ASSIGN   9172>>ASSIGN   9175>>ASSIGN   9175>>ASSIGN
      9175>>ASSIGN   9175>>ASSIGN   9178>>ASSIGN   9181>>ASSIGN   9181>>ASSIGN   9181>>ASSIGN   9181>>ASSIGN
      9188>>ASSIGN   9190>>ASSIGN   9190>>ASSIGN   9195>>ASSIGN   9208>>ASSIGN   9209>>ASSIGN   9211>>ASSIGN
      9213>>DOCASE   9223>>ASSIGN   9233>>ASSIGN   9233>>ASSIGN   9235>>ASSIGN   9237>>ASSIGN   9278>>ASSIGN
      9283>>ASSIGN   9298>>CALL     9305>>ASSIGN   9313>>ASSIGN   9321>>ASSIGN   9326>>ASSIGN   9328>>ASSIGN
      9328>>ASSIGN   9331>>ASSIGN   9331>>ASSIGN   9333>>ASSIGN   9337>>ASSIGN   9339>>ASSIGN   9341>>ASSIGN
      9343>>ASSIGN   9345>>ASSIGN   9347>>ASSIGN   9349>>ASSIGN   9351>>ASSIGN   9353>>ASSIGN   9357>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:407  
      9359>>ASSIGN   9420>>ASSIGN   9422>>ASSIGN   9459>>ASSIGN   9467>>ASSIGN   9467>>ASSIGN   9519>>ASSIGN
      9519>>ASSIGN   9521>>ASSIGN   9521>>ASSIGN   9521>>ASSIGN   9521>>ASSIGN   9530>>ASSIGN   9530>>ASSIGN
      9530>>ASSIGN   9530>>ASSIGN   9962>>DOCASE   9964>>ASSIGN   9964>>ASSIGN   9967>>CALL     9967>>CALL
      9972>>CALL     9972>>CALL    10051>>CALL    10051>>CALL    10067>>ASSIGN  10090>>ASSIGN  10091>>ASSIGN
     10091>>ASSIGN
OUT_BLK IN PROCEDURE ALTKEYS_OPTS
      9870**DCL      9862--PROC
OUT_BLK.NSUBLKS IN PROCEDURE ALTKEYS_OPTS
      9882**DCL      9939>>ASSIGN
OUT_BLK.SUBLK$ IN PROCEDURE ALTKEYS_OPTS
      9903**DCL      9960>>ASSIGN
OUT_SYM IN PROCEDURE CNVRT_FID
      9793**DCL      9784--PROC
OUT_SYM.COUNT IN PROCEDURE CNVRT_FID
      9816**DCL      9819--IMP-SIZ  9837>>ASSIGN
OUT_SYM.CPOS IN PROCEDURE CNVRT_FID
      9808**DCL      9842>>ASSIGN
OUT_SYM.TEXT IN PROCEDURE CNVRT_FID
      9819**DCL      9837--ASSIGN
P$S
      7493**DCL      8892<>CALL     8900<>CALL     8913<>CALL     9045<>CALL     9967<>CALL     9972<>CALL
     10051<>CALL
P$S.COUNT
      7516**DCL      7519--IMP-SIZ  8892>>CALL     8900>>CALL     8913>>CALL     9006>>ASSIGN   9042>>ASSIGN
      9045>>CALL     9102>>ASSIGN   9116>>ASSIGN   9160>>ASSIGN   9175>>ASSIGN   9181>>ASSIGN   9188>>ASSIGN
      9190>>ASSIGN   9233>>ASSIGN   9279>>ASSIGN   9298<>CALL     9313>>ASSIGN   9321>>ASSIGN   9326>>ASSIGN
      9328>>ASSIGN   9331>>ASSIGN   9467>>ASSIGN   9519>>ASSIGN   9521>>ASSIGN   9530>>ASSIGN   9967>>CALL
      9972>>CALL    10051>>CALL    10067>>ASSIGN  10090>>ASSIGN  10091>>ASSIGN
P$S.CPOS
      7508**DCL      9051>>ASSIGN   9059>>ASSIGN
P$S.TEXT
      7519**DCL      9006>>ASSIGN   9042>>ASSIGN   9102>>ASSIGN   9116>>ASSIGN   9160>>ASSIGN   9175>>ASSIGN
      9181>>ASSIGN   9190>>ASSIGN   9233>>ASSIGN   9279>>ASSIGN   9328>>ASSIGN   9331>>ASSIGN   9521>>ASSIGN
      9530>>ASSIGN  10091>>ASSIGN
PROCOPTRET
      9373**LABEL    8401--CALLALT  8584--CALLALT  8700--CALLALT  8781--CALLALT  8942--CALLALT  8966--CALLALT
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:408  
      9041--CALLALT  9045--CALLALT  9053--GOTO     9061--GOTO     9079--CALLALT  9111--CALLALT  9149--CALLALT
      9193--CALLALT  9204--CALLALT  9270--CALLALT  9293--CALLALT  9315--CALLALT  9323--CALLALT  9335--CALLALT
      9370--GOTO
PTR$
      6845**DCL      8899<<ASSIGN   8900>>CALL     8900>>CALL     8907<<ASSIGN   8908>>IF       8910>>DOINDEX
      8911>>DOCASE   8913>>CALL     8913>>CALL     9278<<ASSIGN   9279>>ASSIGN   9279>>ASSIGN   9420<<ASSIGN
      9421>>DOINDEX  9422>>ASSIGN   9459<<ASSIGN   9460>>IF       9464>>DOINDEX  9467>>ASSIGN   9501>>IF
      9513>>DOINDEX  9519>>ASSIGN   9521>>ASSIGN   9521>>ASSIGN   9530>>ASSIGN   9530>>ASSIGN
RESET_ATTR_OPTS
     10123**PROC     8584--CALL     8700--CALL     8781--CALL
RESET_ATTR_OPTS_RET IN PROCEDURE RESET_ATTR_OPTS
     10164**LABEL   10146--GOTO
SIZC IN PROCEDURE ALTKEYS_OPTS
      9913**DCL      9940<<ASSIGN   9942>>ASSIGN
SIZC IN PROCEDURE ATTR_OPTS
     10016**DCL     10062<<ASSIGN  10064<<ASSIGN  10067<<ASSIGN  10067>>ASSIGN  10070<<ASSIGN  10070>>ASSIGN
     10071>>ASSIGN  10094>>ASSIGN  10098>>ASSIGN
START$ IN PROCEDURE ATTR_OPTS
     10019**DCL     10086<<ASSIGN  10087>>ASSIGN  10093>>ASSIGN
TEMP IN PROCEDURE ALTKEYS_OPTS
      9914**DCL      9967<>CALL     9969>>ASSIGN   9972<>CALL     9974>>ASSIGN
TEMP$
      6844**DCL      8395<<ASSIGN   8396>>DOCASE   8398>>CALL     8401<>CALL     8411>>DOCASE   8845<<ASSIGN
      8846>>DOCASE   8885>>CALL     8892>>CALL     8892>>CALL     8897>>CALL     8898>>DOINDEX  8899>>ASSIGN
      8907>>ASSIGN   8936<>CALL     8942<>CALL     8950>>DOCASE   8955>>ASSIGN   8961>>ASSIGN   8964>>ASSIGN
      8966>>CALL     8968>>ASSIGN   8971>>ASSIGN   8973>>ASSIGN   8979>>ASSIGN   8981>>ASSIGN   8984>>ASSIGN
      8988>>ASSIGN   8990>>ASSIGN   8992>>ASSIGN   8995>>ASSIGN   8997>>ASSIGN   9000>>ASSIGN   9002>>ASSIGN
      9004>>DOCASE   9006>>ASSIGN   9006>>ASSIGN   9011>>ASSIGN   9013>>IF       9016<<ASSIGN   9016>>ASSIGN
      9017>>ASSIGN   9021>>ASSIGN   9024>>ASSIGN   9031>>ASSIGN   9033>>DOCASE   9042>>ASSIGN   9042>>ASSIGN
      9045>>CALL     9045>>CALL     9051>>ASSIGN   9059>>ASSIGN   9070>>ASSIGN   9083>>IF       9086>>IF
      9089>>IF       9093>>ASSIGN   9096>>ASSIGN   9099>>ASSIGN   9102>>ASSIGN   9102>>ASSIGN   9106>>ASSIGN
      9113>>ASSIGN   9116>>ASSIGN   9116>>ASSIGN   9121>>ASSIGN   9129>>ASSIGN   9133>>ASSIGN   9139>>ASSIGN
      9160>>ASSIGN   9160>>ASSIGN   9164>>ASSIGN   9169>>ASSIGN   9172>>ASSIGN   9175>>ASSIGN   9175>>ASSIGN
      9178>>ASSIGN   9181>>ASSIGN   9181>>ASSIGN   9188>>ASSIGN   9190>>ASSIGN   9190>>ASSIGN   9195>>ASSIGN
      9208>>ASSIGN   9209>>ASSIGN   9211>>ASSIGN   9213>>DOCASE   9223>>ASSIGN   9233>>ASSIGN   9233>>ASSIGN
      9235>>ASSIGN   9237>>ASSIGN   9247>>ASSIGN   9269>>ASSIGN   9274>>ASSIGN   9277>>DOINDEX  9278>>ASSIGN
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:409  
      9283>>ASSIGN   9297>>DOINDEX  9298>>CALL     9301>>DOINDEX  9305>>ASSIGN   9313>>ASSIGN   9321>>ASSIGN
      9326>>ASSIGN   9328>>ASSIGN   9328>>ASSIGN   9331>>ASSIGN   9331>>ASSIGN   9333>>ASSIGN   9337>>ASSIGN
      9339>>ASSIGN   9341>>ASSIGN   9343>>ASSIGN   9345>>ASSIGN   9347>>ASSIGN   9349>>ASSIGN   9351>>ASSIGN
      9353>>ASSIGN   9357>>ASSIGN   9359>>ASSIGN   9410>>DOCASE   9417>>IF       9420>>ASSIGN   9435>>IF
      9459>>ASSIGN   9465>>IF       9514>>IF      10038>>DOCASE  10051>>CALL    10051>>CALL    10066>>DOINDEX
     10067>>ASSIGN  10088>>DOINDEX 10090>>ASSIGN  10091>>ASSIGN  10091>>ASSIGN
TEMP2$
      6846**DCL      9252<<ASSIGN   9257>>ASSIGN   9258>>DOINDEX  9259>>ASSIGN   9261>>ASSIGN   9434<<ASSIGN
      9437>>DOWHILE  9439>>ASSIGN   9441<<ASSIGN   9441>>ASSIGN   9441>>ASSIGN   9446>>DOWHILE  9451<<ASSIGN
      9451>>ASSIGN   9485<<ASSIGN   9487>>DOINDEX  9488>>ASSIGN   9495>>ASSIGN
TVAL
      7210**DCL      8900<>CALL     9273<<ASSIGN   9279>>ASSIGN   9280<<ASSIGN   9280>>ASSIGN   9298<>CALL
      9299>>ASSIGN
TYPE IN PROCEDURE BLD_VLP_AREA
      9599**DCL      9597--PROC     9602>>DOCASE   9619>>DOCASE   9631>>DOCASE
VARY$STR IN PROCEDURE ATTR_OPTS
     10013**DCL     10091<<ASSIGN  10097<<ASSIGN
VARYCNT IN PROCEDURE ATTR_OPTS
     10012**DCL     10013--IMP-SIZ 10075<<ASSIGN  10081<<ASSIGN  10089>>ASSIGN  10090<<ASSIGN  10091>>ASSIGN
     10094<<ASSIGN  10095>>IF      10097>>ASSIGN
VLP$ IN PROCEDURE ALTKEYS_OPTS
      9916**DCL      9944<<ASSIGN   9949>>ASSIGN   9959>>ASSIGN   9964>>ASSIGN   9969>>ASSIGN   9974>>ASSIGN
      9980>>ASSIGN   9981>>ASSIGN
VLP$ IN PROCEDURE ATTR_OPTS
     10020**DCL     10074<<ASSIGN  10080>>ASSIGN  10086>>ASSIGN  10098>>ASSIGN  10099>>ASSIGN
VLP$ IN PROCEDURE BLD_ACCESS_VLP
      9389**DCL      9388--PROC     9431>>IF       9434>>ASSIGN   9437>>DOWHILE  9437>>DOWHILE  9446>>DOWHILE
      9446>>DOWHILE  9472>>IF       9475<>CALL     9476>>ASSIGN   9485>>ASSIGN   9486<<ASSIGN   9488>>ASSIGN
      9494>>ASSIGN   9504>>ASSIGN   9504>>ASSIGN   9517>>ASSIGN   9517>>ASSIGN   9528>>ASSIGN   9528>>ASSIGN
VLP$ IN PROCEDURE GETVLPA
      9554**DCL      9553--PROC     9558>>IF       9561>>ASSIGN   9568<<ASSIGN
VLP$ACCESS.ACCT# IN PROCEDURE BLD_ACCESS_VLP
      9406**DCL      9446--DOWHILE  9449--ASSIGN   9451--ASSIGN   9506<<ASSIGN   9530<<ASSIGN
VLP$ACCESS.FFLG IN PROCEDURE BLD_ACCESS_VLP
      9405**DCL      9446--DOWHILE  9449--ASSIGN   9451--ASSIGN   9505<<ASSIGN   9529<<ASSIGN
VLP$ACSVEH.C IN PROCEDURE BLD_ACCESS_VLP
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:410  
      9402**DCL      9403--IMP-SIZ  9439>>ASSIGN   9441>>ASSIGN   9519<<ASSIGN   9521>>ASSIGN   9523>>ASSIGN
VLP$ACSVEH.FFLG IN PROCEDURE BLD_ACCESS_VLP
      9401**DCL      9439--ASSIGN   9441--ASSIGN   9518<<ASSIGN
VLP$ACSVEH.VEHICLE# IN PROCEDURE BLD_ACCESS_VLP
      9403**DCL      9521<<ASSIGN
VLP$ATTR.R.NAW#
      7218**DCL      8588<<ASSIGN   8704<<ASSIGN   8785<<ASSIGN
VLP$ATTR.SIZE#
      7216**DCL      7217--REDEF    8953<<ASSIGN   8953>>ASSIGN   8958<<ASSIGN   8958>>ASSIGN
VLP$ATTR IN PROCEDURE ATTR_OPTS
     10033**DCL     10047--ASSIGN  10072--ASSIGN
VLP$ATTR.NAW# IN PROCEDURE ATTR_OPTS
     10033**DCL     10055<<ASSIGN
VLP$ATTR.Q.BUF IN PROCEDURE ATTR_OPTS
     10036**DCL     10080<<ASSIGN  10080>>ASSIGN  10086--ASSIGN
VLP$ATTR.SIZ# IN PROCEDURE ATTR_OPTS
     10033**DCL     10064>>ASSIGN  10079>>ASSIGN  10098<<ASSIGN
VLP$ATTR.SIZE# IN PROCEDURE BLD_ACCESS_VLP
      9399**DCL      9426--ASSIGN   9434--ASSIGN   9437>>DOWHILE  9437--DOWHILE  9446>>DOWHILE  9446--DOWHILE
      9454--ASSIGN   9476<<ASSIGN   9487>>DOINDEX  9494<<ASSIGN   9504>>ASSIGN   9507<<ASSIGN   9507>>ASSIGN
      9517>>ASSIGN   9523<<ASSIGN   9523>>ASSIGN   9528>>ASSIGN   9532<<ASSIGN   9532>>ASSIGN
VLP$ATTR IN PROCEDURE RESET_ATTR_OPTS
     10139**DCL     10156--ASSIGN
VLP$ATTR.NAW# IN PROCEDURE RESET_ATTR_OPTS
     10139**DCL     10147>>ASSIGN  10160<<ASSIGN
VLP$ATTR.SIZ# IN PROCEDURE RESET_ATTR_OPTS
     10139**DCL     10159<<ASSIGN
VLP$FPRG
      7694**DCL      9641<<ASSIGN
VLP$FPRG.ACCT#
      7700**DCL      8516<<ASSIGN   9064<<ASSIGN
VLP$FPRG.FLGS.DEBUG#
      7698**DCL      8468<<ASSIGN   8995<<ASSIGN
VLP$FPRG.LDBYPRO#
      7698**DCL      8607<<ASSIGN   9133<<ASSIGN
VLP$FPRG.NAME
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:411  
      7699**DCL      8515<<ASSIGN   9063<<ASSIGN
VLP$FPRG.PASS#
      7701**DCL      8517<<ASSIGN   9065<<ASSIGN
VLP$FPRG.PROFILE#
      7701**DCL      8708<<ASSIGN
VLP$FPRG.PROFILE#.C#
      7701**DCL      9188<<ASSIGN
VLP$FPRG.PROFILE#.T#
      7701**DCL      9190<<ASSIGN
VLP$FPRG.PSN#
      7699**DCL      8518<<ASSIGN   9066<<ASSIGN
VLP$VIRTUAL
      7715**DCL      9637<<ASSIGN
VLP$VIRTUAL.INITIALIZE#
      7715**DCL      8576<<ASSIGN   9106<<ASSIGN
VLP$VIRTUAL.INITVALUE#
      7717**DCL      8581<<ASSIGN   9109<<ASSIGN
VLP$VIRTUAL.MINPHYS#
      7718**DCL      8631<<ASSIGN   9157<<ASSIGN
VLP$VIRTUAL.NOFILE#
      7715**DCL      8653<<ASSIGN   9164<<ASSIGN
VLP$VIRTUAL.PHYSICAL#
      7718**DCL      8692<<ASSIGN   9185<<ASSIGN
VLP$VIRTUAL.SEGNUM#
      7716**DCL      8727<<ASSIGN   9223<<ASSIGN
VLP$VIRTUAL.SEGSIZE#
      7717**DCL      8732<<ASSIGN   9227<<ASSIGN
VLP$WINDOW
      7657**DCL      9644<<ASSIGN
VLP$WINDOW.BTMBRDR#
      7673**DCL      8453<<ASSIGN
VLP$WINDOW.FWINDOW#
      7657**DCL      7657--REDEF    7658--REDEF    8527<<ASSIGN
VLP$WINDOW.HBRDRCHR#
      7674**DCL      8534<<ASSIGN
VLP$WINDOW.HBRDRSIZ#
PL6.E3A0      #004=CXB$PROCOPT File=CXB$SUBR.:E05TSI                             TUE 07/29/97 12:20 Page:412  
      7674**DCL      8539<<ASSIGN
VLP$WINDOW.LENGTH#
      7671**DCL      8821<<ASSIGN
VLP$WINDOW.LFTBRDR#
      7675**DCL      8612<<ASSIGN
VLP$WINDOW.MINLENGTH#
      7676**DCL      8638<<ASSIGN
VLP$WINDOW.MINWIDTH#
      7677**DCL      8643<<ASSIGN
VLP$WINDOW.POSITION#
      7671**DCL      8697<<ASSIGN
VLP$WINDOW.REMOVABLE#
      7678**DCL      8675<<ASSIGN
VLP$WINDOW.RHTBRDR#
      7675**DCL      8717<<ASSIGN
VLP$WINDOW.TOPBRDR#
      7673**DCL      8776<<ASSIGN
VLP$WINDOW.VBRDRCHR#
      7676**DCL      8807<<ASSIGN
VLP$WINDOW.VBRDRSIZ#
      7675**DCL      8812<<ASSIGN
VLP$WINDOW.WIDTH#
      7671**DCL      8826<<ASSIGN
X$ALLOCATE
      7221**DCL-ENT  9251--CALL     9484--CALL     9567--CALL     9630--CALL     9943--CALL    10048--CALL
     10073--CALL    10157--CALL
X$DEALLOCATE
      7220**DCL-ENT  8414--CALL     8420--CALL     8434--CALL     8509--CALL     8549--CALL     8752--CALL
      9262--CALL     9496--CALL     9562--CALL     9953--CALL    10083--CALL    10149--CALL

PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:413  
     2310        1        /*T***********************************************************/
     2311        2        /*T*                                                         */
     2312        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2313        4        /*T*                                                         */
     2314        5        /*T***********************************************************/
     2315        6        /********************************************************************/
     2316        7        /*F*   NAME:   CXB$WINDOW_OPTS
     2317        8               PURPOSE: To process the WINDOW options for SET/RESET/ADJUST,
     2318        9                      TERMINAL, and LDEV commands.
     2319       10               DESCRIPTION: CXB$WINDOW processes the various WINDOW options which
     2320       11                       may be specified on the SET,RESET,ADJUST,TERMINAL and LDEV
     2321       12                       commands and stores it in the VLP_WINDOW passed.
     2322       13        */
     2323       14        /*D*   NAME:   CXB$WINDOW_OPTS
     2324       15               CALL:   CALL CXB$WINDOW_OPTS(BLK$,VLP$,GETCMD,CPSL_PARAM)
     2325       16               INTERFACE: CXG$ERRMSG
     2326       17               INPUT:  BLK$ - pointer to parse output
     2327       18                       VLP$ - pointer to the FPT_xxx.WINDOW_.
     2328       19                       GETCMD - The CXG$GETCMD parameter.
     2329       20                       CPSL_PARAM - The Command Processor Shared Library Parameter.
     2330       21               DESCRIPTION: Data segment #3 is expected to contain the VLP_WINDOW
     2331       22                       The various options are processed and the VLP_WINDOW
     2332       23                       is set accordingly.
     2333       24        */
     2334       25        /**********************************************************************/
     2335       26        CXB$WINDOW_OPTS: PROC(BLK$,VLP$,GETCMD,CPSL_PARAM) ;
     2336       27                   %INCLUDE CP_6;
     2337      108                   %INCLUDE CX_MACROS_M;
     2338      159                   %INCLUDE XU_MACRO_C;
     2339     3265                   %INCLUDE CX_DATA_R;
     2340     4199                   %INCLUDE XU_SUBS_C;
     2341     4291                   %INCLUDE CX_SUBS_C;
     2342     4304                   %INCLUDE CX_ISUBS_C;
     2343     4656                   %INCLUDE CX_PERR_C;
     2344     4727                   %INCLUDE CP_6_SUBS;
     2345     5267                   %INCLUDE B_ERRORS_C;
     2346     6394                   %INCLUDE CXG_ENTRY ;
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:414  
     2347     6406    1   DCL BLK$ PTR PARAM ;
     2348     6407    1   DCL VLP$ PTR PARAM ;
     2349     6408        %XUG_GETCMD (NAME=GETCMD, STCLASS=PARAM) ;
     2350     6746        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
     2351     6764
     2352     6765    1   DCL CXX$WINDOW ENTRY(4) ;                        /* Context checker. */
     2353     6766        %PARSE$OUT(NAME=OUT$BLK);
     2354     6811        %PARSE$SYM(NAME=P$S);
     2355     6849        %VLP_WINDOW(FPTN=VLP$WINDOW,STCLASS="BASED (VLP$)");
     2356     6893    1   DCL TEMP$ PTR ;
     2357     6894    1   DCL PTR$ PTR ;
     2358     6895    1   DCL I UBIN WORD ;
     2359     6896    1   DCL J UBIN WORD ;
     2360     6897
     2361     6898    2       DO CASE(BLK$->OUT$BLK.CODE) ;
     2362     6899    2         CASE(FWINDOWOPT,
     2363     6900    2               HBRDRCHROPT,
     2364     6901    2               HBRDRSIZOPT,
     2365     6902    2               WLENGTHOPT,
     2366     6903    2               MINLENGTHOPT,
     2367     6904    2               MINWIDTHOPT,
     2368     6905    2               VBRDRCHROPT,
     2369     6906    2               VBRDRSIZOPT,
     2370     6907    2               WWIDTHOPT) ;
     2371     6908    2             CALL CXX$WINDOW(BLK$->OUT$BLK,GETCMD,CPSL_PARAM,J) ;
     2372     6909    2       END ; /* Do Case */
     2373     6910
     2374     6911    2       DO CASE(BLK$->OUT$BLK.CODE) ;
     2375     6912    2         CASE(BTMBRDROPT) ;
     2376     6913    2             VLP$WINDOW.BTMBRDR# = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     2377     6914    2         CASE(FWINDOWOPT) ;
     2378     6915    2             VLP$WINDOW.FWINDOW# = BLK$->OUT$BLK.SUBLK$(0)->P$S.TEXT ;
     2379     6916    2         CASE(HBRDRCHROPT) ;
     2380     6917    2             VLP$WINDOW.HBRDRCHR# = BLK$->OUT$BLK.SUBLK$(0)->P$S.TEXT ;
     2381     6918    2         CASE(HBRDRSIZOPT) ;
     2382     6919    2             VLP$WINDOW.HBRDRSIZ# = J ;
     2383     6920    2         CASE(LFTBRDROPT) ;
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:415  
     2384     6921    2             VLP$WINDOW.LFTBRDR# = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     2385     6922    2         CASE(MINLENGTHOPT) ;
     2386     6923    2             VLP$WINDOW.MINLENGTH# = J ;
     2387     6924    2         CASE(MINWIDTHOPT) ;
     2388     6925    2             VLP$WINDOW.MINWIDTH# = J ;
     2389     6926    2         CASE(OPTIONALOPT) ;
     2390     6927    2             VLP$WINDOW.REMOVABLE# = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     2391     6928    2         CASE(POSITIONOPT) ;
     2392     6929    2             VLP$WINDOW.POSITION# = BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;
     2393     6930    2         CASE(RHTBRDROPT) ;
     2394     6931    2             VLP$WINDOW.RHTBRDR# = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     2395     6932    2         CASE(TOPBRDROPT) ;
     2396     6933    2             VLP$WINDOW.TOPBRDR# = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);
     2397     6934    2         CASE(VBRDRCHROPT) ;
     2398     6935    2             VLP$WINDOW.VBRDRCHR# = BLK$->OUT$BLK.SUBLK$(0)->P$S.TEXT ;
     2399     6936    2         CASE(VBRDRSIZOPT) ;
     2400     6937    2             VLP$WINDOW.VBRDRSIZ# = J ;
     2401     6938    2         CASE(WLENGTHOPT) ;
     2402     6939    2             VLP$WINDOW.LENGTH# = J + %WINDOW_ABSVAL# ;
     2403     6940    2         CASE(WWIDTHOPT) ;
     2404     6941    2             VLP$WINDOW.WIDTH# = J + %WINDOW_ABSVAL# ;
     2405     6942    2       END ; /* Do Case */
     2406     6943
     2407     6944    1       RETURN ;
     2408     6945
     2409     6946    1   END CXB$WINDOW_OPTS ;

PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:416  
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_ISUBS_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXB$WINDOW_OPTS.

   Procedure CXB$WINDOW_OPTS requires 189 words for executable code.
   Procedure CXB$WINDOW_OPTS requires 16 words of local(AUTO) storage.

    No errors detected in file CXB$SUBR.:E05TSI    .

PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:417  

 Object Unit name= CXB$WINDOW_OPTS                            File name= CXB$SUBR.:E05TOU
 UTS= JUL 29 '97 12:24:51.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none   189    275  CXB$WINDOW_OPTS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        4  CXB$WINDOW_OPTS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 CXX$WINDOW
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:418  


     2310        1        /*T***********************************************************/
     2311        2        /*T*                                                         */
     2312        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2313        4        /*T*                                                         */
     2314        5        /*T***********************************************************/
     2315        6        /********************************************************************/
     2316        7        /*F*   NAME:   CXB$WINDOW_OPTS
     2317        8               PURPOSE: To process the WINDOW options for SET/RESET/ADJUST,
     2318        9                      TERMINAL, and LDEV commands.
     2319       10               DESCRIPTION: CXB$WINDOW processes the various WINDOW options which
     2320       11                       may be specified on the SET,RESET,ADJUST,TERMINAL and LDEV
     2321       12                       commands and stores it in the VLP_WINDOW passed.
     2322       13        */
     2323       14        /*D*   NAME:   CXB$WINDOW_OPTS
     2324       15               CALL:   CALL CXB$WINDOW_OPTS(BLK$,VLP$,GETCMD,CPSL_PARAM)
     2325       16               INTERFACE: CXG$ERRMSG
     2326       17               INPUT:  BLK$ - pointer to parse output
     2327       18                       VLP$ - pointer to the FPT_xxx.WINDOW_.
     2328       19                       GETCMD - The CXG$GETCMD parameter.
     2329       20                       CPSL_PARAM - The Command Processor Shared Library Parameter.
     2330       21               DESCRIPTION: Data segment #3 is expected to contain the VLP_WINDOW
     2331       22                       The various options are processed and the VLP_WINDOW
     2332       23                       is set accordingly.
     2333       24        */
     2334       25        /**********************************************************************/
     2335       26        CXB$WINDOW_OPTS: PROC(BLK$,VLP$,GETCMD,CPSL_PARAM) ;

     26  1 000000   000000 700200 xent  CXB$WINDOW_* TSX0  ! X66_AUTO_4
         1 000001   000020 000004                    ZERO    16,4

     2336       27                   %INCLUDE CP_6;
     2337      108                   %INCLUDE CX_MACROS_M;
     2338      159                   %INCLUDE XU_MACRO_C;
     2339     3265                   %INCLUDE CX_DATA_R;
     2340     4199                   %INCLUDE XU_SUBS_C;
     2341     4291                   %INCLUDE CX_SUBS_C;
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:419  
     2342     4304                   %INCLUDE CX_ISUBS_C;
     2343     4656                   %INCLUDE CX_PERR_C;
     2344     4727                   %INCLUDE CP_6_SUBS;
     2345     5267                   %INCLUDE B_ERRORS_C;
     2346     6394                   %INCLUDE CXG_ENTRY ;
     2347     6406    1   DCL BLK$ PTR PARAM ;
     2348     6407    1   DCL VLP$ PTR PARAM ;
     2349     6408        %XUG_GETCMD (NAME=GETCMD, STCLASS=PARAM) ;
     2350     6746        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
     2351     6764
     2352     6765    1   DCL CXX$WINDOW ENTRY(4) ;                        /* Context checker. */
     2353     6766        %PARSE$OUT(NAME=OUT$BLK);
     2354     6811        %PARSE$SYM(NAME=P$S);
     2355     6849        %VLP_WINDOW(FPTN=VLP$WINDOW,STCLASS="BASED (VLP$)");
     2356     6893    1   DCL TEMP$ PTR ;
     2357     6894    1   DCL PTR$ PTR ;
     2358     6895    1   DCL I UBIN WORD ;
     2359     6896    1   DCL J UBIN WORD ;
     2360     6897
     2361     6898    2       DO CASE(BLK$->OUT$BLK.CODE) ;

   6898  1 000002   200003 470500                    LDP0    @BLK$,,AUTO
         1 000003   000000 471500                    LDP1    0,,PR0
         1 000004   100000 720100                    LXL0    0,,PR1
         1 000005   000020 100003                    CMPX0   16,DU
         1 000006   000010 602010 1                  TNC     s:6898+6,X0
         1 000007   000043 710000 1                  TRA     s:6911
         1 000010   000043 710000 1                  TRA     s:6911
         1 000011   000043 710000 1                  TRA     s:6911
         1 000012   000030 710000 1                  TRA     s:6908
         1 000013   000030 710000 1                  TRA     s:6908
         1 000014   000030 710000 1                  TRA     s:6908
         1 000015   000043 710000 1                  TRA     s:6911
         1 000016   000030 710000 1                  TRA     s:6908
         1 000017   000030 710000 1                  TRA     s:6908
         1 000020   000043 710000 1                  TRA     s:6911
         1 000021   000043 710000 1                  TRA     s:6911
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:420  
         1 000022   000043 710000 1                  TRA     s:6911
         1 000023   000043 710000 1                  TRA     s:6911
         1 000024   000030 710000 1                  TRA     s:6908
         1 000025   000030 710000 1                  TRA     s:6908
         1 000026   000030 710000 1                  TRA     s:6908
         1 000027   000030 710000 1                  TRA     s:6908

     2362     6899    2         CASE(FWINDOWOPT,

     2363     6900    2               HBRDRCHROPT,
     2364     6901    2               HBRDRSIZOPT,
     2365     6902    2               WLENGTHOPT,
     2366     6903    2               MINLENGTHOPT,
     2367     6904    2               MINWIDTHOPT,
     2368     6905    2               VBRDRCHROPT,
     2369     6906    2               VBRDRSIZOPT,
     2370     6907    2               WWIDTHOPT) ;
     2371     6908    2             CALL CXX$WINDOW(BLK$->OUT$BLK,GETCMD,CPSL_PARAM,J) ;

   6908  1 000030   200012 633500                    EPPR3   J,,AUTO
         1 000031   200017 453500                    STP3    J+5,,AUTO
         1 000032   200006 236100                    LDQ     @CPSL_PARAM,,AUTO
         1 000033   200016 756100                    STQ     J+4,,AUTO
         1 000034   200005 236100                    LDQ     @GETCMD,,AUTO
         1 000035   200015 756100                    STQ     J+3,,AUTO
         1 000036   200014 451500                    STP1    J+2,,AUTO
         1 000037   200014 630500                    EPPR0   J+2,,AUTO
         1 000040   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000041   000000 701000 xent               TSX1    CXX$WINDOW
         1 000042   000000 011000                    NOP     0

     2372     6909    2       END ; /* Do Case */

     2373     6910
     2374     6911    2       DO CASE(BLK$->OUT$BLK.CODE) ;

   6911  1 000043   200003 470500                    LDP0    @BLK$,,AUTO
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:421  
         1 000044   000000 471500                    LDP1    0,,PR0
         1 000045   100000 720100                    LXL0    0,,PR1
         1 000046   000020 100003                    CMPX0   16,DU
         1 000047   000051 602010 1                  TNC     s:6911+6,X0
         1 000050   000274 710000 1                  TRA     s:6944
         1 000051   000274 710000 1                  TRA     s:6944
         1 000052   000071 710000 1                  TRA     s:6913
         1 000053   000104 710000 1                  TRA     s:6915
         1 000054   000116 710000 1                  TRA     s:6917
         1 000055   000130 710000 1                  TRA     s:6919
         1 000056   000140 710000 1                  TRA     s:6921
         1 000057   000153 710000 1                  TRA     s:6923
         1 000060   000161 710000 1                  TRA     s:6925
         1 000061   000167 710000 1                  TRA     s:6927
         1 000062   000202 710000 1                  TRA     s:6929
         1 000063   000211 710000 1                  TRA     s:6931
         1 000064   000224 710000 1                  TRA     s:6933
         1 000065   000237 710000 1                  TRA     s:6935
         1 000066   000251 710000 1                  TRA     s:6937
         1 000067   000261 710000 1                  TRA     s:6939
         1 000070   000267 710000 1                  TRA     s:6941

     2375     6912    2         CASE(BTMBRDROPT) ;

     2376     6913    2             VLP$WINDOW.BTMBRDR# = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   6913  1 000071   200004 473500                    LDP3    @VLP$,,AUTO
         1 000072   300000 474500                    LDP4    0,,PR3
         1 000073   100003 475500                    LDP5    3,,PR1
         1 000074   500000 236100                    LDQ     0,,PR5
         1 000075   777777 376007                    ANQ     -1,DL
         1 000076   000043 736000                    QLS     35
         1 000077   000003 772000                    QRL     3
         1 000100   400003 676100                    ERQ     3,,PR4
         1 000101   060000 376003                    ANQ     24576,DU
         1 000102   400003 656100                    ERSQ    3,,PR4
         1 000103   000274 710000 1                  TRA     s:6944
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:422  

     2377     6914    2         CASE(FWINDOWOPT) ;

     2378     6915    2             VLP$WINDOW.FWINDOW# = BLK$->OUT$BLK.SUBLK$(0)->P$S.TEXT ;

   6915  1 000104   200004 473500                    LDP3    @VLP$,,AUTO
         1 000105   300000 474500                    LDP4    0,,PR3
         1 000106   100003 475500                    LDP5    3,,PR1
         1 000107   500004 236100                    LDQ     4,,PR5
         1 000110   000033 772000                    QRL     27
         1 000111   000000 621006                    EAX1    0,QL
         1 000112   040100 100540                    MLR     fill='040'O
         1 000113   500004 200011                    ADSC9   4,,PR5                   cn=1,n=*X1
         1 000114   400000 000004                    ADSC9   0,,PR4                   cn=0,n=4
         1 000115   000274 710000 1                  TRA     s:6944

     2379     6916    2         CASE(HBRDRCHROPT) ;

     2380     6917    2             VLP$WINDOW.HBRDRCHR# = BLK$->OUT$BLK.SUBLK$(0)->P$S.TEXT ;

   6917  1 000116   200004 473500                    LDP3    @VLP$,,AUTO
         1 000117   300000 474500                    LDP4    0,,PR3
         1 000120   100003 475500                    LDP5    3,,PR1
         1 000121   500004 236100                    LDQ     4,,PR5
         1 000122   000033 772000                    QRL     27
         1 000123   000000 621006                    EAX1    0,QL
         1 000124   040100 100540                    MLR     fill='040'O
         1 000125   500004 200011                    ADSC9   4,,PR5                   cn=1,n=*X1
         1 000126   400003 200001                    ADSC9   3,,PR4                   cn=1,n=1
         1 000127   000274 710000 1                  TRA     s:6944

     2381     6918    2         CASE(HBRDRSIZOPT) ;

     2382     6919    2             VLP$WINDOW.HBRDRSIZ# = J ;

   6919  1 000130   200004 473500                    LDP3    @VLP$,,AUTO
         1 000131   300000 474500                    LDP4    0,,PR3
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:423  
         1 000132   200012 236100                    LDQ     J,,AUTO
         1 000133   000033 736000                    QLS     27
         1 000134   400003 676100                    ERQ     3,,PR4
         1 000135   017000 376003                    ANQ     7680,DU
         1 000136   400003 656100                    ERSQ    3,,PR4
         1 000137   000274 710000 1                  TRA     s:6944

     2383     6920    2         CASE(LFTBRDROPT) ;

     2384     6921    2             VLP$WINDOW.LFTBRDR# = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   6921  1 000140   200004 473500                    LDP3    @VLP$,,AUTO
         1 000141   300000 474500                    LDP4    0,,PR3
         1 000142   100003 475500                    LDP5    3,,PR1
         1 000143   500000 236100                    LDQ     0,,PR5
         1 000144   777777 376007                    ANQ     -1,DL
         1 000145   000043 736000                    QLS     35
         1 000146   000023 772000                    QRL     19
         1 000147   400003 676100                    ERQ     3,,PR4
         1 000150   300000 376007                    ANQ     98304,DL
         1 000151   400003 656100                    ERSQ    3,,PR4
         1 000152   000274 710000 1                  TRA     s:6944

     2385     6922    2         CASE(MINLENGTHOPT) ;

     2386     6923    2             VLP$WINDOW.MINLENGTH# = J ;

   6923  1 000153   200004 473500                    LDP3    @VLP$,,AUTO
         1 000154   300000 474500                    LDP4    0,,PR3
         1 000155   200012 236100                    LDQ     J,,AUTO
         1 000156   000033 736000                    QLS     27
         1 000157   400004 552140                    STBQ    4,'40'O,PR4
         1 000160   000274 710000 1                  TRA     s:6944

     2387     6924    2         CASE(MINWIDTHOPT) ;

     2388     6925    2             VLP$WINDOW.MINWIDTH# = J ;
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:424  

   6925  1 000161   200004 473500                    LDP3    @VLP$,,AUTO
         1 000162   300000 474500                    LDP4    0,,PR3
         1 000163   200012 236100                    LDQ     J,,AUTO
         1 000164   000022 736000                    QLS     18
         1 000165   400004 552120                    STBQ    4,'20'O,PR4
         1 000166   000274 710000 1                  TRA     s:6944

     2389     6926    2         CASE(OPTIONALOPT) ;

     2390     6927    2             VLP$WINDOW.REMOVABLE# = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   6927  1 000167   200004 473500                    LDP3    @VLP$,,AUTO
         1 000170   300000 474500                    LDP4    0,,PR3
         1 000171   100003 475500                    LDP5    3,,PR1
         1 000172   500000 236100                    LDQ     0,,PR5
         1 000173   777777 376007                    ANQ     -1,DL
         1 000174   000043 736000                    QLS     35
         1 000175   000023 772000                    QRL     19
         1 000176   400004 676100                    ERQ     4,,PR4
         1 000177   300000 376007                    ANQ     98304,DL
         1 000200   400004 656100                    ERSQ    4,,PR4
         1 000201   000274 710000 1                  TRA     s:6944

     2391     6928    2         CASE(POSITIONOPT) ;

     2392     6929    2             VLP$WINDOW.POSITION# = BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE ;

   6929  1 000202   200004 473500                    LDP3    @VLP$,,AUTO
         1 000203   300000 474500                    LDP4    0,,PR3
         1 000204   100003 475500                    LDP5    3,,PR1
         1 000205   500000 236100                    LDQ     0,,PR5
         1 000206   000033 736000                    QLS     27
         1 000207   400002 552140                    STBQ    2,'40'O,PR4
         1 000210   000274 710000 1                  TRA     s:6944

     2393     6930    2         CASE(RHTBRDROPT) ;
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:425  

     2394     6931    2             VLP$WINDOW.RHTBRDR# = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   6931  1 000211   200004 473500                    LDP3    @VLP$,,AUTO
         1 000212   300000 474500                    LDP4    0,,PR3
         1 000213   100003 475500                    LDP5    3,,PR1
         1 000214   500000 236100                    LDQ     0,,PR5
         1 000215   777777 376007                    ANQ     -1,DL
         1 000216   000043 736000                    QLS     35
         1 000217   000025 772000                    QRL     21
         1 000220   400003 676100                    ERQ     3,,PR4
         1 000221   060000 376007                    ANQ     24576,DL
         1 000222   400003 656100                    ERSQ    3,,PR4
         1 000223   000274 710000 1                  TRA     s:6944

     2395     6932    2         CASE(TOPBRDROPT) ;

     2396     6933    2             VLP$WINDOW.TOPBRDR# = BINBIT(BLK$->OUT$BLK.SUBLK$(0)->OUT$BLK.CODE,1);

   6933  1 000224   200004 473500                    LDP3    @VLP$,,AUTO
         1 000225   300000 474500                    LDP4    0,,PR3
         1 000226   100003 475500                    LDP5    3,,PR1
         1 000227   500000 236100                    LDQ     0,,PR5
         1 000230   777777 376007                    ANQ     -1,DL
         1 000231   000043 736000                    QLS     35
         1 000232   000001 772000                    QRL     1
         1 000233   400003 676100                    ERQ     3,,PR4
         1 000234   300000 376003                    ANQ     98304,DU
         1 000235   400003 656100                    ERSQ    3,,PR4
         1 000236   000274 710000 1                  TRA     s:6944

     2397     6934    2         CASE(VBRDRCHROPT) ;

     2398     6935    2             VLP$WINDOW.VBRDRCHR# = BLK$->OUT$BLK.SUBLK$(0)->P$S.TEXT ;

   6935  1 000237   200004 473500                    LDP3    @VLP$,,AUTO
         1 000240   300000 474500                    LDP4    0,,PR3
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:426  
         1 000241   100003 475500                    LDP5    3,,PR1
         1 000242   500004 236100                    LDQ     4,,PR5
         1 000243   000033 772000                    QRL     27
         1 000244   000000 621006                    EAX1    0,QL
         1 000245   040100 100540                    MLR     fill='040'O
         1 000246   500004 200011                    ADSC9   4,,PR5                   cn=1,n=*X1
         1 000247   400003 600001                    ADSC9   3,,PR4                   cn=3,n=1
         1 000250   000274 710000 1                  TRA     s:6944

     2399     6936    2         CASE(VBRDRSIZOPT) ;

     2400     6937    2             VLP$WINDOW.VBRDRSIZ# = J ;

   6937  1 000251   200004 473500                    LDP3    @VLP$,,AUTO
         1 000252   300000 474500                    LDP4    0,,PR3
         1 000253   200012 236100                    LDQ     J,,AUTO
         1 000254   000011 736000                    QLS     9
         1 000255   400003 676100                    ERQ     3,,PR4
         1 000256   017000 376007                    ANQ     7680,DL
         1 000257   400003 656100                    ERSQ    3,,PR4
         1 000260   000274 710000 1                  TRA     s:6944

     2401     6938    2         CASE(WLENGTHOPT) ;

     2402     6939    2             VLP$WINDOW.LENGTH# = J + %WINDOW_ABSVAL# ;

   6939  1 000261   200004 473500                    LDP3    @VLP$,,AUTO
         1 000262   300000 474500                    LDP4    0,,PR3
         1 000263   200012 721100                    LXL1    J,,AUTO
         1 000264   020000 622011                    EAX2    8192,X1
         1 000265   400001 742100                    STX2    1,,PR4
         1 000266   000274 710000 1                  TRA     s:6944

     2403     6940    2         CASE(WWIDTHOPT) ;

     2404     6941    2             VLP$WINDOW.WIDTH# = J + %WINDOW_ABSVAL# ;

PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:427  
   6941  1 000267   200004 473500                    LDP3    @VLP$,,AUTO
         1 000270   300000 474500                    LDP4    0,,PR3
         1 000271   200012 721100                    LXL1    J,,AUTO
         1 000272   020000 622011                    EAX2    8192,X1
         1 000273   400001 442100                    SXL2    1,,PR4

     2405     6942    2       END ; /* Do Case */

     2406     6943
     2407     6944    1       RETURN ;

   6944  1 000274   000000 702200 xent               TSX2  ! X66_ARET
     2408     6945
     2409     6946    1   END CXB$WINDOW_OPTS ;

PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:428  
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_ISUBS_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXB$WINDOW_OPTS.
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:429  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BLK$                      6-0-0/w PTR         r     1 @CPSL_PARAM
     5-0-0/w PTR         r     1 @GETCMD                    4-0-0/w PTR         r     1 @VLP$
    *0-0-0/w PTR         r     1 BLK$                      *0-0-0/w STRC(180)   r     1 CPSL_PARAM
    *0-0-0/d STRC(1512)  r     1 GETCMD                    12-0-0/w UBIN        r     1 J
    *0-0-0/w PTR         r     1 VLP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w ASTR(153)   r     1 P$S
     0-0-0/d STRC(288)   r     1 VLP$WINDOW


   Procedure CXB$WINDOW_OPTS requires 189 words for executable code.
   Procedure CXB$WINDOW_OPTS requires 16 words of local(AUTO) storage.

    No errors detected in file CXB$SUBR.:E05TSI    .
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:430  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:431  
          MINI XREF LISTING

BLK$
      6406**DCL        26--PROC     6772--IMP-PTR  6818--IMP-PTR  6898>>DOCASE   6908>>CALL     6911>>DOCASE
      6913>>ASSIGN   6915>>ASSIGN   6915>>ASSIGN   6917>>ASSIGN   6917>>ASSIGN   6921>>ASSIGN   6927>>ASSIGN
      6929>>ASSIGN   6931>>ASSIGN   6933>>ASSIGN   6935>>ASSIGN   6935>>ASSIGN
CPSL_CAMR_REC.ACSVEH_
      3454**DCL      3455--REDEF
CPSL_CAMR_REC.ALTKEYS_
      3460**DCL      3461--REDEF    3461--REDEF
CPSL_CAMR_REC.HDR_
      3459**DCL      3460--REDEF
CPSL_CAMR_REC.TAB_
      3458**DCL      3459--REDEF
CPSL_CAMR_REC.UHL_
      3452**DCL      3453--REDEF    3453--REDEF
CPSL_CAMR_REC.V.FSN#
      3492**DCL      3492--REDEF    3492--REDEF
CPSL_CAMR_REC.WSN_
      3458**DCL      3458--REDEF
CPSL_CFPT_CLOSE.SN_
      3519**DCL      3519--REDEF
CPSL_CFPT_CLOSE.UTL_
      3520**DCL      3520--REDEF
CPSL_CFPT_CLOSE.V.EXPIRE#
      3534**DCL      3534--REDEF
CPSL_CFPT_CLOSE.V.TYPE#
      3532**DCL      3532--REDEF
CPSL_CFPT_CLOSE.V.XTNSIZE#
      3529**DCL      3529--REDEF    3531--REDEF
CPSL_CFPT_OPEN.ACSVEH_
      3345**DCL      3346--REDEF
CPSL_CFPT_OPEN.ALTKEYS_
      3351**DCL      3352--REDEF    3352--REDEF
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:432  
CPSL_CFPT_OPEN.HDR_
      3350**DCL      3351--REDEF
CPSL_CFPT_OPEN.TAB_
      3349**DCL      3350--REDEF
CPSL_CFPT_OPEN.UHL_
      3343**DCL      3344--REDEF    3344--REDEF
CPSL_CFPT_OPEN.V.FSN#
      3383**DCL      3383--REDEF    3383--REDEF
CPSL_CFPT_OPEN.WSN_
      3349**DCL      3349--REDEF
CPSL_CFPT_READ.STATION_
      3558**DCL      3559--REDEF
CPSL_CFPT_READ.V.DVBYTE.REREAD#
      3570**DCL      3570--REDEF
CPSL_CFPT_READ.V.INDX#
      3568**DCL      3568--REDEF
CPSL_CFPT_WRITE.STATION_
      3596**DCL      3596--REDEF
CPSL_CFPT_WRITE.V.DVBYTE.VFC#
      3603**DCL      3603--REDEF
CPSL_CVLP_TRMCTL.BREAKCOUNT
      3987**DCL      3988--REDEF
CPSL_CVLP_WINDOW.FWINDOW#
      4083**DCL      4083--REDEF    4084--REDEF
CPSL_PARAM
      6747**DCL        26--PROC     6908<>CALL
CXX$WINDOW
      6765**DCL-ENT  6908--CALL
GETCMD
      6421**DCL        26--PROC     6908<>CALL
GETCMD.OUT$
      6426**DCL      6432--REDEF
J
      6896**DCL      6908<>CALL     6919>>ASSIGN   6923>>ASSIGN   6925>>ASSIGN   6937>>ASSIGN   6939>>ASSIGN
      6941>>ASSIGN
OUT$BLK
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:433  
      6772**DCL      6908<>CALL
OUT$BLK.CODE
      6780**DCL      6898>>DOCASE   6911>>DOCASE   6913>>ASSIGN   6921>>ASSIGN   6927>>ASSIGN   6929>>ASSIGN
      6931>>ASSIGN   6933>>ASSIGN
OUT$BLK.SUBLK$
      6805**DCL      6913>>ASSIGN   6915>>ASSIGN   6915>>ASSIGN   6917>>ASSIGN   6917>>ASSIGN   6921>>ASSIGN
      6927>>ASSIGN   6929>>ASSIGN   6931>>ASSIGN   6933>>ASSIGN   6935>>ASSIGN   6935>>ASSIGN
P$S.COUNT
      6841**DCL      6844--IMP-SIZ  6915>>ASSIGN   6917>>ASSIGN   6935>>ASSIGN
P$S.TEXT
      6844**DCL      6915>>ASSIGN   6917>>ASSIGN   6935>>ASSIGN
VLP$
      6407**DCL        26--PROC     6867--IMP-PTR  6913>>ASSIGN   6915>>ASSIGN   6917>>ASSIGN   6919>>ASSIGN
      6921>>ASSIGN   6923>>ASSIGN   6925>>ASSIGN   6927>>ASSIGN   6929>>ASSIGN   6931>>ASSIGN   6933>>ASSIGN
      6935>>ASSIGN   6937>>ASSIGN   6939>>ASSIGN   6941>>ASSIGN
VLP$WINDOW.BTMBRDR#
      6883**DCL      6913<<ASSIGN
VLP$WINDOW.FWINDOW#
      6867**DCL      6867--REDEF    6868--REDEF    6915<<ASSIGN
VLP$WINDOW.HBRDRCHR#
      6884**DCL      6917<<ASSIGN
VLP$WINDOW.HBRDRSIZ#
      6884**DCL      6919<<ASSIGN
VLP$WINDOW.LENGTH#
      6881**DCL      6939<<ASSIGN
VLP$WINDOW.LFTBRDR#
      6885**DCL      6921<<ASSIGN
VLP$WINDOW.MINLENGTH#
      6886**DCL      6923<<ASSIGN
VLP$WINDOW.MINWIDTH#
      6887**DCL      6925<<ASSIGN
VLP$WINDOW.POSITION#
      6881**DCL      6929<<ASSIGN
VLP$WINDOW.REMOVABLE#
      6888**DCL      6927<<ASSIGN
VLP$WINDOW.RHTBRDR#
PL6.E3A0      #005=CXB$WINDOW_OPTS File=CXB$SUBR.:E05TSI                         TUE 07/29/97 12:24 Page:434  
      6885**DCL      6931<<ASSIGN
VLP$WINDOW.TOPBRDR#
      6883**DCL      6933<<ASSIGN
VLP$WINDOW.VBRDRCHR#
      6886**DCL      6935<<ASSIGN
VLP$WINDOW.VBRDRSIZ#
      6885**DCL      6937<<ASSIGN
VLP$WINDOW.WIDTH#
      6881**DCL      6941<<ASSIGN
