/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
MACLIST: PROC MAIN;
/**/
%INCLUDE DA_FORMAT_R;
%INCLUDE DA_FORMAT_C;
%INCLUDE CP_6;
%INCLUDE CP_6_SUBS;
%INCLUDE B_ERRORS_C;
%INCLUDE B$JIT;
%INCLUDE XU_MACRO_C;
%INCLUDE MACLIST_C61;
/**/
DCL DAF$INIT ENTRY(1) ALTRET;
DCL DAF$WRITE EPTR SYMREF;
DCL DAF$CONTENTS ENTRY;
%INCLUDE XUR_ENTRY;
DCL XUU$OPEN ENTRY(1) ALTRET;
DCL XUU$READ ENTRY(2) ALTRET;
DCL XUU$CLOSE ENTRY(1) ALTRET;
/**/
DCL M$SI DCB;
DCL M$ME DCB;
DCL M$LO DCB;
DCL M$UI DCB;
DCL M$DO DCB;
DCL M$STDFILE DCB;
/**/
DCL B$JIT$ PTR SYMREF;
DCL MACLIST_OPT UBIN SYMREF;
/**/
DCL INBUF CHAR(512);
DCL 1 KEY ALIGNED,
      2 L UBIN BYTE UNAL,
      2 K UBIN(27) UNAL;
DCL 1 WILDNAME ALIGNED,
      2 L UBIN BYTE UNAL,
      2 C CHAR(31) UNAL;
DCL 1 OPENNAME ALIGNED,
      2 L UBIN BYTE UNAL,
      2 C CHAR(31) UNAL;
DCL M$SI$ PTR;
DCL M$ME$ PTR;
DCL M$LO$ PTR;
DCL M$UI$ PTR;
DCL M$STDFILE$ PTR;
DCL REC CHAR(RECL) BASED(REC$);
DCL REC$ PTR;
DCL RECL SBIN;
DCL 1 TC BASED CALIGNED,
      2 L UBIN BYTE UNAL,
      2 C CHAR(TC.L) UNAL;
DCL X SBIN;
DCL N1 SBIN;
DCL N2 SBIN;
DCL N3 SBIN;
DCL KFLAG UBIN;
DCL NRN UBIN;
DCL OUT$ PTR;
DCL P$ PTR;
DCL RCNT SBIN;
DCL SETUIFLG BIT(1) ALIGNED;
DCL STARFLAG BIT(1) ALIGNED;
DCL STAROK BIT(1) ALIGNED;
DCL CMT CHAR(3);
DCL STDFLAG BIT(1) ALIGNED;
/**/
%FPT_OPEN (FPTN=OPNSI,DCB=M$SI,TEST=YES,FUN=IN);
%FPT_OPEN (FPTN=OPNSTD,DCB=M$STDFILE,FUN=IN,ASN=FILE);
%FPT_OPEN (FPTN=SETUI,DCB=M$UI,SETDCB=YES,FUN=IN);
%FPT_OPEN (FPTN=OPNME,DCB=M$ME);
%FPT_READ (FPTN=RDSTD,DCB=M$STDFILE,BUF=STDBUF);
%FPT_WRITE (FPTN=WRTME,DCB=M$ME);
%FPT_FID (FPTN=STDFID,ASN=OPNSI.V.ASN#,NAME=SINAME,ACCT=SIACCT,
          PASS=SIPASS,SN=SISN,RESULTS=VLR_FID,TEXTFID=STDBUF);
%VLP_NAME (FPTN=SINAME);
%VLP_ACCT (FPTN=SIACCT);
%VLP_PASS (FPTN=SIPASS);
%VLP_SN   (FPTN=SISN,N=1);
%VLR_FID;
%FPT_TIME (SOURCE=CLOCK,DEST=EXT,DATE=DA_HDR.TITLE.DATE,TIME=DA_HDR.TITLE.TIME);
DCL B$TCB$ PTR SYMREF;
%B$TCB;
%B$ALT;
%F$DCB;
/**/
%PARSE$OUT (NAME=OUT,STCLASS="BASED(OUT$)");
%PARSE$SYM (NAME=SYM,STCLASS=BASED);
/**/
%REPORT (NAME=RPT,TITLEADR=TITLE,HEADER=NO,FOOTER=NO,CONTENTS=YES,WRAPTAB=20);
DCL 1 TITLE STATIC,
      2 L UBIN BYTE UNAL INIT(SIZEC(TITLE.C)),
      2 C CHAR(40);
DCL 1 DA_HDR STATIC SYMDEF,
      2 CTL,
        3 * UBIN(8) UNAL INIT(0),
        3 RESETPAGE BIT(1) INIT('0'B),
        3 * UBIN(5) UNAL INIT(0),
        3 HEADERHEIGHT UBIN(4) UNAL INIT(2),
        3 INDENT UBIN(9) UNAL INIT(1),
        3 COUNT UBIN(9) UNAL INIT(SIZEC(DA_HDR.TITLE)),
      2 TITLE_LEN UBIN(9) UNAL INIT(SIZEC(DA_HDR.TITLE)),
      2 TITLE,
        3 * CHAR(0) INIT(' '),
        3 TIME CHAR(0) INIT('23:59'),
        3 * CHAR(0) INIT(' '),
        3 DATE CHAR(0) INIT('JAN 01 ''78'),
        3 * CHAR(0) INIT(' '),
        3 TXT CHAR(40),
        3 * CHAR(0) INIT(' '),
        3 FID CHAR(20) INIT(' '),
        3 * CHAR(0) INIT('  Page  ');
DCL STDBUF CHAR(80) STATIC;
DCL LSTFMT CHAR(0) CONSTANT INIT('%N(%5D -%)%3P%N( %10A%)%5P %A');
DCL NOTFILE CHAR(0) CONSTANT INIT('M$SI must be assigned to a file.');
%XUU_PARAM (BASE=YES,UPDATE=YES,INCLUDE=NO,CLOSE_ALL=YES,
            OPT_UI=YES,BLANK_FILL=NO,SOURCE_OUT=NO);
%EJECT;
%SUB FOREVER="WHILE('1'B)";
%SUB NEVER="WHILE('0'B)";
%SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
%EJECT;
        M$SI$=DCBADDR(DCBNUM(M$SI));
        M$UI$=DCBADDR(DCBNUM(M$UI));
        M$ME$=DCBADDR(DCBNUM(M$ME));
        M$LO$=DCBADDR(DCBNUM(M$LO));
        M$STDFILE$=DCBADDR(DCBNUM(M$STDFILE));
        CALL M$TIME(FPT_TIME);
        REC$=ADDR(INBUF);
        CALL M$OPEN(OPNME);
        KFLAG=1;
        NRN=1;
        STARFLAG='1'B;
        STAROK='1'B;
        STDFLAG='0'B;
        CMT='*F*';
        IF B$JIT.CCDISP<B$JIT.CCARS THEN DO;
           CALL XUR$GETCMD(MACLIST_OPT,OUT$,,B$JIT.CCBUF,255) ALTRET(BADOPT);
           DO X=0 TO OUT.NSUBLKS-1;
              P$=OUT.SUBLK$(X);
              DO CASE(P$->OUT.CODE);
               CASE(%STAROPT);
                 IF P$->OUT.NSUBLKS=0 THEN
                    STARFLAG='0'B;
                 ELSE
                 CALL CONCAT(CMT,'*',P$->OUT.SUBLK$(0)->SYM.TEXT,'*');
               CASE(%NKOPT);
                 KFLAG=0;
                 NRN=0;
               CASE(%NRNOPT);
                 NRN=0;
               CASE(%STDOPT);
                 STDFLAG='1'B;
               END;
              END;
           END;
        SETUIFLG=(M$UI$->F$DCB.NAME#.L=0);
        IF STDFLAG THEN DO;
/**/
/* OPEN STANDARD FILE */
/**/
           OPNSTD.NAME_=VECTOR(M$SI$->F$DCB.NAME#);
           OPNSTD.ACCT_=VECTOR(M$SI$->F$DCB.ACCT#);
           OPNSTD.PASS_=VECTOR(M$SI$->F$DCB.PASS#);
           CALL M$OPEN(OPNSTD) ALTRET(BADERR);
           OPNSI.NAME_=VECTOR(SINAME);
           OPNSI.ACCT_=VECTOR(SIACCT);
           OPNSI.PASS_=VECTOR(SIPASS);
           OPNSI.SN_=VECTOR(SISN);
           WILDNAME.C='?';
           END;
        ELSE DO;
/**/
/* GET WILD NAME */
/**/
           CALL M$OPEN(OPNSI) WHENALTRETURN DO; END;
           IF M$SI$->F$DCB.ASN#~=%FILE# THEN DO;
              WRTME.BUF_=VECTOR(NOTFILE);
              CALL M$WRITE(WRTME);
              CALL M$XXX;
              END;
           WILDNAME=M$SI$->F$DCB.NAME#;
           IF WILDNAME.L=0 THEN DO;
              WILDNAME.L=1;
              WILDNAME.C='?';
              END;
           OPENNAME=WILDNAME;
           CALL INDEX(X,'?',OPENNAME.C) WHENRETURN DO;
              SUBSTR(OPENNAME.C,X,1)=BINASC(0);
              OPNSI.NAME_=VECTOR(OPENNAME);
              CALL M$OPEN(OPNSI) WHENALTRETURN DO; END;
              END;
           OPNSI.NAME_=VECTOR(NIL);
           OPNSI.V.OPER.NXTF#=%YES#;
           OPNSI.V.OPER.THISF#=%YES#;
           END;
        DA_FMT_TITLEX=POFFC(ADDR(DA_HDR.TITLE.TXT),ADDR(DA_HDR.TITLE));
        DA_FMT_TLEN=SIZEC(DA_HDR.TITLE.TXT);
        DA_HDR.CTL.RESETPAGE='1'B;
        RPT.WRAPTAB#=2+(11*KFLAG)+(7*NRN);
        DO FOREVER;                     /* FILE LOOP                          */
           IF STDFLAG THEN DO;
              STDBUF=' ';
              CALL M$READ(RDSTD) WHENALTRETURN DO;
                 IF B$ALT.ERR.CODE=%E$EOF THEN
                    GOTO ALLDONE;
                 ELSE
                    GOTO BADERR;
                 END;
              CALL M$FID(STDFID) ALTRET(BADERR);
              IF SIACCT.ACCT#=' ' THEN SIACCT.ACCT#=M$STDFILE$->F$DCB.ACCT#;
              CALL M$OPEN(OPNSI) WHENALTRETURN DO; END;
              END;
           ELSE DO;
              CALL M$OPEN(OPNSI) ALTRET(OPNERR);
              OPNSI.V.OPER.THISF#=%NO#;
              CALL WILDCOMP(WILDNAME,M$SI$->F$DCB.NAME#) ALTRET(NXTFILE);
              END;
           IF SETUIFLG THEN DO;
              SETUI.NAME_=VECTOR(M$SI$->F$DCB.NAME#);
              CALL M$OPEN(SETUI);
              END;
           XUU_PARAM.FLAGS.BASE#='1'B;
           XUU_PARAM.FLAGS.UP_DATE#=B$JIT.PRFLAGS.UI;
           CALL XUU$OPEN(XUU_PARAM) ALTRET(XUUERR);
           TITLE=M$SI$->F$DCB.NAME#;
           DA_HDR.TITLE.FID=TITLE.C;
           CALL DAF$INIT(RPT) ALTRET(DAFERR);
           DA_HDR.CTL.RESETPAGE=%NO#;
           WRTME.BUF_=VECTOR(M$SI$->F$DCB.NAME#.C);
           CALL M$WRITE(WRTME);
           RCNT=0;
           DO FOREVER;                  /* RECORD LOOP                        */
              CALL XUU$READ(XUU_PARAM,VECTOR(INBUF)) ALTRET(RDALT);
              RCNT=RCNT+1;
              RECL=XUU_PARAM.ARS;
              IF RECL=0 THEN DO;
                 RECL=1;
                 REC=' ';
                 END;
              IF STARFLAG THEN DO;
                 CALL INDEX(X,CMT,REC) WHENRETURN DO;
                    IF STAROK THEN DO;
                       CALL INDEX(N1,':',REC) WHENRETURN DO;
                          STAROK='0'B;
                          N1=N1+1;
                          DO WHILE(SUBSTR(REC,N1,1)=' ');
                             N1=N1+1;
                             END;
                          CALL INDEX(N2,' ',REC,N1);
                          CALL INDEX(N3,'.',REC,N1);
                          IF N3<N2 THEN N2=N3;
                          TITLE.L=N2-N1;
                          TITLE.C=SUBSTR(REC,N1,N2-N1);
                          CALL DAF$INIT(RPT);
                          WRTME.BUF_=VECTOR(REC);
                          CALL M$WRITE(WRTME);
                          END;
                       END;
                    END;
                 WHENALTRETURN DO;
                    STAROK='1'B;
                    END;
                 END;
              CALL DAF$WRITE(VECTOR(LSTFMT),
                             VECTOR(NRN),VECTOR(RCNT),
                             VECTOR(KFLAG),VECTOR(XUU_PARAM.ASCII_KEY),
                             VECTOR(REC));
              END;
/**/
RDALT:
           IF B$ALT.ERR.CODE~=%E$EOF THEN GOTO BADERR;
NXTFILE:   CALL XUU$CLOSE(XUU_PARAM);
           IF SUBSTR(WILDNAME.C,0,1)~='?' AND
             SUBSTR(WILDNAME.C,0,1)<SUBSTR(M$SI$->F$DCB.NAME#.C,0,1)
           THEN GOTO ALLDONE;
           END;
/**/
XUUERR:
        IF XUU_PARAM.SI_ERRCODE THEN
        CALL XUR$ERRMSG(XUU_PARAM.SI_ERRCODE,DCBNUM(M$SI));
        IF XUU_PARAM.UI_ERRCODE THEN
        CALL XUR$ERRMSG(XUU_PARAM.UI_ERRCODE,DCBNUM(M$UI));
        GOTO ALLDONE;
OPNERR:
        IF B$ALT.ERR.CODE~=%E$FDEOF THEN DO;
BADERR:    CALL XUR$ERRMSG(B$ALT.ERR,B$ALT.DCB#);
           END;
ALLDONE:
        CALL DAF$CONTENTS;
        CALL XUR$CLOSE_DCBS;
        RETURN;
/**/
DAFERR: CALL XUR$ERRMSG(DA_FMTERR,DAF_DCB#);
        CALL XUR$CLOSE_DCBS;
        RETURN;
/**/
BADOPT:
        CALL XUR$SETDCBS(DCBNUM(NIL),DCBNUM(NIL));
        CALL XUR$ERRPTR(,DCBNUM(M$DO));
        RETURN;
%EJECT;
WILDCOMP: PROC(WILDSTR,STR) ALTRET;
DCL 1 WILDSTR CALIGNED,
      2 L UBIN BYTE UNAL,
      2 C CHAR(WILDSTR.L);
DCL 1 STR CALIGNED,
      2 L UBIN BYTE UNAL,
      2 C CHAR(STR.L);
DCL WX UBIN;
DCL WXP UBIN;
DCL CX UBIN;
DCL CXP UBIN;
/**/
/**/
/**/
        WX=0;
        WXP=WILDSTR.L;
        CX=0;
        CXP=0;
        DO WHILE(WX<WILDSTR.L AND SUBSTR(WILDSTR.C,WX)~=' '
          OR CX<STR.L AND SUBSTR(STR.C,CX)~=' ');
           IF WX<WILDSTR.L AND SUBSTR(WILDSTR.C,WX,1)='?' THEN DO;
              WXP=WX;
              END;
           ELSE DO;
              IF WX=WXP+1 THEN CXP=CX;
              IF WX>=WILDSTR.L OR CX>=STR.L
                OR SUBSTR(WILDSTR.C,WX,1) ~= SUBSTR(STR.C,CX,1) THEN DO;
                 IF WXP=WILDSTR.L OR CXP=STR.L THEN ALTRETURN;
                 WX=WXP;
                 CX=CXP;
                 END;
              CX=CX+1;
              END;
           IF WX<WILDSTR.L THEN WX=WX+1;
           END;
        RETURN;
END WILDCOMP;
END MACLIST;
