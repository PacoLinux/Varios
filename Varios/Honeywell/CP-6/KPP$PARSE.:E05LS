VERSION E05

PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:1    
        1        1        /*M*     KPM$PARSE      PIGETTE COMMAND PARSER AND DISTRIBUTOR */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*     NAME:          KPP$PARSE
        8        8                 PURPOSE:       Parse commands to PIGETTE
        9        9                 DESCRIPTION:   After calling XUR$GETCMD to do all the
       10       10                                hard work of command parsing, call the appro-
       11       11                                priate subroutine to continue the work.
       12       12        */
       13       13        KPP$PARSE : PROC;
       14       14        /**/
       15       15        /*  Include files  */
       16       16        /**/
       17       17        %INCLUDE XU_MACRO_C;
       18     3123        %INCLUDE KP_DATA_R;
       19     4375        %INCLUDE XUH_MACRO_C;
       20     4459        %INCLUDE XU_PERR_C;
       21     4650        %INCLUDE XUR_ENTRY;                     /* XUR ENTRY DCLS                     */
       22     4682        %INCLUDE B_ERRORS_C;
       23     5809        /**/
       24     5810        /*  Entry definitions   */
       25     5811        /**/
       26     5812        %KP_ENTRIES (OMIT=KPP$PARSE);
       27     5918        /**/
       28     5919        /*  SYMREFS  */
       29     5920        /**/
       30     5921    1   DCL ROOT_NODE SBIN WORD SYMREF;
       31     5922        /**/
       32     5923        /*  STATIC  */
       33     5924        /**/
       34     5925        %VLP_ERRCODE (FPTN = ERR_CODE,
       35     5926                      STCLASS = STATIC);
       36     5971    1   DCL OUT$ REDEF ERR_CODE PTR;
       37     5972        %XUH_PARAM (NAME = XUH_PARAM,
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:2    
       38     5973                    STCLASS = STATIC);
       39     6034        /**/
       40     6035        /*  AUTO  */
       41     6036        /**/
       42     6037    1   DCL CMD_TYPE UBIN WORD;
       43     6038        /**/
       44     6039        /*  CONSTANT  */
       45     6040        /**/
       46     6041    1   DCL FALSE BIT(1) CONSTANT INIT( '0'B );
       47     6042        /**/
       48     6043        /*  BASED  */
       49     6044        /**/
       50     6045        %PARSE$OUT    ( NAME    = OUT$BLK,
       51     6046                        STCLASS = BASED );
       52     6091        %PARSE$SYM    ( NAME    = OUT$SYM,
       53     6092                        STCLASS = BASED );
       54     6130        /**/
       55     6131        /*  DCBs  */
       56     6132        /**/
       57     6133    1   DCL M$DO DCB;
       58     6134        /**/
       59     6135        /*  Call XUR$GETCMD to get the input text read and parsed  */
       60     6136        /**/
       61     6137    1           CALL XUR$GETCMD( ROOT_NODE, OUT$, KP_PROMPT ) ALTRET(BAD_PARSE);
       62     6138    1           CMD_TYPE = OUT$ -> OUT$BLK.CODE;
       63     6139    2   PARCEL: DO CASE( CMD_TYPE );
       64     6140        /**/
       65     6141    2            CASE( %KP_LIST );
       66     6142    2              CALL KPL$LIST( OUT$ );
       67     6143        /**/
       68     6144    2            CASE( %KP_VINIT );
       69     6145    2              CALL KPV$VINIT( OUT$ );
       70     6146        /**/
       71     6147    2            CASE( %KP_MOVE );
       72     6148    2              CALL KPS$SLURP( OUT$ );
       73     6149        /**/
       74     6150    2            CASE( %KP_USE );
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:3    
       75     6151    2              CALL KPU$USE( OUT$ );
       76     6152        /**/
       77     6153    2            CASE( %KP_CERTIFY );
       78     6154    2              CALL KPC$CERTIFY( OUT$ );
       79     6155        /**/
       80     6156    2            CASE( %KP_CERTDRV );
       81     6157    2              CALL KPC$CERTDRV( OUT$ );
       82     6158        /**/
       83     6159    2            CASE( %KP_CHECK );
       84     6160    2              CALL KPC$CHECK( OUT$ );
       85     6161        /**/
       86     6162    2            CASE( %KP_UNDUMP );
       87     6163    2              CALL KPD$UNDUMP( OUT$ );
       88     6164        /**/
       89     6165    2            CASE( %KP_END );
       90     6166    2   END_COMMAND: ;
       91     6167    2              KP_IN_GOOD_GRACE = FALSE;
       92     6168        /**/
       93     6169    2            CASE( %KP_BUILD );
       94     6170    2              CALL KPB$BUILD ( OUT$ );
       95     6171        /**/
       96     6172    2            CASE( %KP_CLONE );
       97     6173    2              CALL KPU$CLONE ( OUT$ );
       98     6174        /**/
       99     6175    2            END;
      100     6176    1           KP_DISK_ACTIVITY = %KP_DISK_INACTIVE#;
      101     6177        /**/
      102     6178    1           RETURN;
      103     6179        /**/
      104     6180    1   BAD_PARSE: ;
      105     6181    1           CALL XUR$ECHOIF (DCBNUM(M$DO));
      106     6182    1           IF ERR_CODE.ERR# = %E$SYNERR
      107     6183    1            THEN
      108     6184    1              CALL XUR$ERRPTR( , DCBNUM(M$DO) );
      109     6185    1           IF ERR_CODE.ERR# = %E$EOF
      110     6186    1            THEN
      111     6187    1              GOTO END_COMMAND;
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:4    
      112     6188    1           CALL KPE$ERRMSG (ERR_CODE);
      113     6189    1           RETURN;
      114     6190        /**/
      115     6191    1   END KPP$PARSE;

PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:5    
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   XUR_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KPP$PARSE.

   Procedure KPP$PARSE requires 118 words for executable code.
   Procedure KPP$PARSE requires 8 words of local(AUTO) storage.

    No errors detected in file KPP$PARSE.:E05TSI    .

PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:6    

 Object Unit name= KPP$PARSE                                  File name= KPP$PARSE.:E05TOU
 UTS= JUL 30 '97 01:20:52.56 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    60     74  KPP$PARSE
    2  RoData even  UTS      1      1  KPP$PARSE
    3   DCB   even  none     0      0  M$DO
    4   Proc  even  none   118    166  KPP$PARSE
    5  RoData even  none     3      3  KPP$PARSE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  KPP$PARSE
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:7    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       6 XUR$GETCMD
 yes     yes           Std       1 KPU$USE
         yes           Std       1 KPC$CERTDRV
         yes           Std       1 KPL$LIST
 yes     yes           Std       1 KPS$SLURP
         yes           Std       1 KPD$UNDUMP
         yes           Std       1 KPB$BUILD
 yes     yes           Std       1 KPE$ERRMSG
         yes           Std       1 KPV$VINIT
         yes           Std       1 KPC$CERTIFY
         yes           Std       1 KPC$CHECK
 yes     yes           Std       1 XUR$ECHOIF
         yes           Std       1 KPU$CLONE
 yes     yes           Std       2 XUR$ERRPTR
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KP_INBUF                              KP_RU_OUTBUF
     KP_IN_GOOD_GRACE                      KP_RU_KEY                             KP_DISK_ACTIVITY
r    KP_PROMPT                             ROOT_NODE                             M$DO
     B_VECTNIL
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:8    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:9    


        1        1        /*M*     KPM$PARSE      PIGETTE COMMAND PARSER AND DISTRIBUTOR */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*     NAME:          KPP$PARSE
        8        8                 PURPOSE:       Parse commands to PIGETTE
        9        9                 DESCRIPTION:   After calling XUR$GETCMD to do all the
       10       10                                hard work of command parsing, call the appro-
       11       11                                priate subroutine to continue the work.
       12       12        */
       13       13        KPP$PARSE : PROC;

     13  4 000000   000000 700200 xent  KPP$PARSE    TSX0  ! X66_AUTO_0
         4 000001   000010 000000                    ZERO    8,0

       14       14        /**/
       15       15        /*  Include files  */
       16       16        /**/
       17       17        %INCLUDE XU_MACRO_C;
       18     3123        %INCLUDE KP_DATA_R;
       19     4375        %INCLUDE XUH_MACRO_C;
       20     4459        %INCLUDE XU_PERR_C;
       21     4650        %INCLUDE XUR_ENTRY;                     /* XUR ENTRY DCLS                     */
       22     4682        %INCLUDE B_ERRORS_C;
       23     5809        /**/
       24     5810        /*  Entry definitions   */
       25     5811        /**/
       26     5812        %KP_ENTRIES (OMIT=KPP$PARSE);
       27     5918        /**/
       28     5919        /*  SYMREFS  */
       29     5920        /**/
       30     5921    1   DCL ROOT_NODE SBIN WORD SYMREF;
       31     5922        /**/
       32     5923        /*  STATIC  */
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:10   
       33     5924        /**/
       34     5925        %VLP_ERRCODE (FPTN = ERR_CODE,
       35     5926                      STCLASS = STATIC);
       36     5971    1   DCL OUT$ REDEF ERR_CODE PTR;
       37     5972        %XUH_PARAM (NAME = XUH_PARAM,
       38     5973                    STCLASS = STATIC);
       39     6034        /**/
       40     6035        /*  AUTO  */
       41     6036        /**/
       42     6037    1   DCL CMD_TYPE UBIN WORD;
       43     6038        /**/
       44     6039        /*  CONSTANT  */
       45     6040        /**/
       46     6041    1   DCL FALSE BIT(1) CONSTANT INIT( '0'B );
       47     6042        /**/
       48     6043        /*  BASED  */
       49     6044        /**/
       50     6045        %PARSE$OUT    ( NAME    = OUT$BLK,
       51     6046                        STCLASS = BASED );
       52     6091        %PARSE$SYM    ( NAME    = OUT$SYM,
       53     6092                        STCLASS = BASED );
       54     6130        /**/
       55     6131        /*  DCBs  */
       56     6132        /**/
       57     6133    1   DCL M$DO DCB;
       58     6134        /**/
       59     6135        /*  Call XUR$GETCMD to get the input text read and parsed  */
       60     6136        /**/
       61     6137    1           CALL XUR$GETCMD( ROOT_NODE, OUT$, KP_PROMPT ) ALTRET(BAD_PARSE);

   6137  4 000002   000000 630400 5                  EPPR0   0
         4 000003   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000004   000000 701000 xent               TSX1    XUR$GETCMD
         4 000005   000127 702000 4                  TSX2    BAD_PARSE

       62     6138    1           CMD_TYPE = OUT$ -> OUT$BLK.CODE;

PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:11   
   6138  4 000006   000000 470400 1                  LDP0    ERR_CODE
         4 000007   000000 236100                    LDQ     0,,PR0
         4 000010   777777 376007                    ANQ     -1,DL
         4 000011   200003 756100                    STQ     CMD_TYPE,,AUTO

       63     6139    2   PARCEL: DO CASE( CMD_TYPE );

   6139  4 000012   000022 116007       PARCEL       CMPQ    18,DL
         4 000013   000015 602006 4                  TNC     PARCEL+3,QL
         4 000014   000124 710000 4                  TRA     s:6176
         4 000015   000124 710000 4                  TRA     s:6176
         4 000016   000124 710000 4                  TRA     s:6176
         4 000017   000037 710000 4                  TRA     s:6142
         4 000020   000044 710000 4                  TRA     s:6145
         4 000021   000107 710000 4                  TRA     END_COMMAND
         4 000022   000051 710000 4                  TRA     s:6148
         4 000023   000124 710000 4                  TRA     s:6176
         4 000024   000124 710000 4                  TRA     s:6176
         4 000025   000113 710000 4                  TRA     s:6170
         4 000026   000124 710000 4                  TRA     s:6176
         4 000027   000124 710000 4                  TRA     s:6176
         4 000030   000124 710000 4                  TRA     s:6176
         4 000031   000056 710000 4                  TRA     s:6151
         4 000032   000063 710000 4                  TRA     s:6154
         4 000033   000070 710000 4                  TRA     s:6157
         4 000034   000075 710000 4                  TRA     s:6160
         4 000035   000102 710000 4                  TRA     s:6163
         4 000036   000120 710000 4                  TRA     s:6173

       64     6140        /**/
       65     6141    2            CASE( %KP_LIST );

       66     6142    2              CALL KPL$LIST( OUT$ );

   6142  4 000037   000001 630400 5                  EPPR0   1
         4 000040   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000041   000000 701000 xent               TSX1    KPL$LIST
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:12   
         4 000042   000000 011000                    NOP     0
         4 000043   000124 710000 4                  TRA     s:6176

       67     6143        /**/
       68     6144    2            CASE( %KP_VINIT );

       69     6145    2              CALL KPV$VINIT( OUT$ );

   6145  4 000044   000001 630400 5                  EPPR0   1
         4 000045   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000046   000000 701000 xent               TSX1    KPV$VINIT
         4 000047   000000 011000                    NOP     0
         4 000050   000124 710000 4                  TRA     s:6176

       70     6146        /**/
       71     6147    2            CASE( %KP_MOVE );

       72     6148    2              CALL KPS$SLURP( OUT$ );

   6148  4 000051   000001 630400 5                  EPPR0   1
         4 000052   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000053   000000 701000 xent               TSX1    KPS$SLURP
         4 000054   000000 011000                    NOP     0
         4 000055   000124 710000 4                  TRA     s:6176

       73     6149        /**/
       74     6150    2            CASE( %KP_USE );

       75     6151    2              CALL KPU$USE( OUT$ );

   6151  4 000056   000001 630400 5                  EPPR0   1
         4 000057   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000060   000000 701000 xent               TSX1    KPU$USE
         4 000061   000000 011000                    NOP     0
         4 000062   000124 710000 4                  TRA     s:6176

       76     6152        /**/
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:13   
       77     6153    2            CASE( %KP_CERTIFY );

       78     6154    2              CALL KPC$CERTIFY( OUT$ );

   6154  4 000063   000001 630400 5                  EPPR0   1
         4 000064   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000065   000000 701000 xent               TSX1    KPC$CERTIFY
         4 000066   000000 011000                    NOP     0
         4 000067   000124 710000 4                  TRA     s:6176

       79     6155        /**/
       80     6156    2            CASE( %KP_CERTDRV );

       81     6157    2              CALL KPC$CERTDRV( OUT$ );

   6157  4 000070   000001 630400 5                  EPPR0   1
         4 000071   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000072   000000 701000 xent               TSX1    KPC$CERTDRV
         4 000073   000000 011000                    NOP     0
         4 000074   000124 710000 4                  TRA     s:6176

       82     6158        /**/
       83     6159    2            CASE( %KP_CHECK );

       84     6160    2              CALL KPC$CHECK( OUT$ );

   6160  4 000075   000001 630400 5                  EPPR0   1
         4 000076   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000077   000000 701000 xent               TSX1    KPC$CHECK
         4 000100   000000 011000                    NOP     0
         4 000101   000124 710000 4                  TRA     s:6176

       85     6161        /**/
       86     6162    2            CASE( %KP_UNDUMP );

       87     6163    2              CALL KPD$UNDUMP( OUT$ );

PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:14   
   6163  4 000102   000001 630400 5                  EPPR0   1
         4 000103   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000104   000000 701000 xent               TSX1    KPD$UNDUMP
         4 000105   000000 011000                    NOP     0
         4 000106   000124 710000 4                  TRA     s:6176

       88     6164        /**/
       89     6165    2            CASE( %KP_END );

   6157  4 000107                       END_COMMAND  null
       90     6166    2   END_COMMAND: ;
       91     6167    2              KP_IN_GOOD_GRACE = FALSE;

   6167  4 000107   000000 236000 2                  LDQ     FALSE
         4 000110   400000 376003                    ANQ     -131072,DU
         4 000111   000000 756000 xsym               STQ     KP_IN_GOOD_GRACE
         4 000112   000124 710000 4                  TRA     s:6176

       92     6168        /**/
       93     6169    2            CASE( %KP_BUILD );

       94     6170    2              CALL KPB$BUILD ( OUT$ );

   6170  4 000113   000001 630400 5                  EPPR0   1
         4 000114   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000115   000000 701000 xent               TSX1    KPB$BUILD
         4 000116   000000 011000                    NOP     0
         4 000117   000124 710000 4                  TRA     s:6176

       95     6171        /**/
       96     6172    2            CASE( %KP_CLONE );

       97     6173    2              CALL KPU$CLONE ( OUT$ );

   6173  4 000120   000001 630400 5                  EPPR0   1
         4 000121   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000122   000000 701000 xent               TSX1    KPU$CLONE
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:15   
         4 000123   000000 011000                    NOP     0

       98     6174        /**/
       99     6175    2            END;

      100     6176    1           KP_DISK_ACTIVITY = %KP_DISK_INACTIVE#;

   6176  4 000124   000003 235007                    LDA     3,DL
         4 000125   000000 755000 xsym               STA     KP_DISK_ACTIVITY

      101     6177        /**/
      102     6178    1           RETURN;

   6178  4 000126   000000 702200 xent               TSX2  ! X66_ARET

   6176  4 000127                       BAD_PARSE    null
      103     6179        /**/
      104     6180    1   BAD_PARSE: ;
      105     6181    1           CALL XUR$ECHOIF (DCBNUM(M$DO));

   6181  4 000127   000000 236007 xsym               LDQ     M$DO,DL
         4 000130   200004 756100                    STQ     CMD_TYPE+1,,AUTO
         4 000131   200004 630500                    EPPR0   CMD_TYPE+1,,AUTO
         4 000132   200005 450500                    STP0    CMD_TYPE+2,,AUTO
         4 000133   200005 630500                    EPPR0   CMD_TYPE+2,,AUTO
         4 000134   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000135   000000 701000 xent               TSX1    XUR$ECHOIF
         4 000136   000000 011000                    NOP     0

      106     6182    1           IF ERR_CODE.ERR# = %E$SYNERR

   6182  4 000137   000000 236000 1                  LDQ     ERR_CODE
         4 000140   377770 376007                    ANQ     131064,DL
         4 000141   000010 116007                    CMPQ    8,DL
         4 000142   000155 601000 4                  TNZ     s:6185

      107     6183    1            THEN
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:16   
      108     6184    1              CALL XUR$ERRPTR( , DCBNUM(M$DO) );

   6184  4 000143   000000 236007 xsym               LDQ     M$DO,DL
         4 000144   200004 756100                    STQ     CMD_TYPE+1,,AUTO
         4 000145   200004 630500                    EPPR0   CMD_TYPE+1,,AUTO
         4 000146   200007 450500                    STP0    CMD_TYPE+4,,AUTO
         4 000147   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000150   200006 756100                    STQ     CMD_TYPE+3,,AUTO
         4 000151   200006 630500                    EPPR0   CMD_TYPE+3,,AUTO
         4 000152   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000153   000000 701000 xent               TSX1    XUR$ERRPTR
         4 000154   000000 011000                    NOP     0

      109     6185    1           IF ERR_CODE.ERR# = %E$EOF

   6185  4 000155   000000 236000 1                  LDQ     ERR_CODE
         4 000156   377770 376007                    ANQ     131064,DL
         4 000157   000060 116007                    CMPQ    48,DL
         4 000160   000107 600000 4                  TZE     END_COMMAND

      110     6186    1            THEN
      111     6187    1              GOTO END_COMMAND;
      112     6188    1           CALL KPE$ERRMSG (ERR_CODE);

   6188  4 000161   000001 630400 5                  EPPR0   1
         4 000162   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000163   000000 701000 xent               TSX1    KPE$ERRMSG
         4 000164   000000 011000                    NOP     0

      113     6189    1           RETURN;

   6189  4 000165   000000 702200 xent               TSX2  ! X66_ARET
      114     6190        /**/
      115     6191    1   END KPP$PARSE;

PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:17   
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   XUR_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KPP$PARSE.
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:18   

 **** Variables and constants ****

  ****  Section 001  Data  KPP$PARSE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 ERR_CODE                   0-0-0/w PTR         r     1 OUT$

  ****  Section 002 RoData KPP$PARSE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 FALSE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w UBIN        r     1 CMD_TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 KP_DISK_ACTIVITY           0-0-0/b BIT         r     1 KP_IN_GOOD_GRACE
     0-0-0/c STRC(144)   r     1 KP_PROMPT                  0-0-0/w SBIN        r     1 ROOT_NODE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$DO                       0-0-0/w STRC(144)   r     1 OUT$BLK
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:19   
     0-0-0/w ASTR(153)   r     1 OUT$SYM


   Procedure KPP$PARSE requires 118 words for executable code.
   Procedure KPP$PARSE requires 8 words of local(AUTO) storage.

    No errors detected in file KPP$PARSE.:E05TSI    .
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:20   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:21   
          MINI XREF LISTING

BAD_PARSE
      6176**LABEL    6137--CALLALT
CMD_TYPE
      6037**DCL      6138<<ASSIGN   6139>>DOCASE
END_COMMAND
      6157**LABEL    6187--GOTO
ERR_CODE
      5938**DCL      5971--REDEF    6188<>CALL
ERR_CODE.ERR#
      5968**DCL      6182>>IF       6185>>IF
FALSE
      6041**DCL      6167>>ASSIGN
KPB$BUILD
      5817**DCL-ENT  6170--CALL
KPC$CERTDRV
      5912**DCL-ENT  6157--CALL
KPC$CERTIFY
      5911**DCL-ENT  6154--CALL
KPC$CHECK
      5823**DCL-ENT  6160--CALL
KPD$UNDUMP
      5826**DCL-ENT  6163--CALL
KPE$ERRMSG
      5897**DCL-ENT  6188--CALL
KPL$LIST
      5850**DCL-ENT  6142--CALL
KPS$SLURP
      5856**DCL-ENT  6148--CALL
KPU$CLONE
      5862**DCL-ENT  6173--CALL
KPU$USE
      5908**DCL-ENT  6151--CALL
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:22   
KPV$VINIT
      5878**DCL-ENT  6145--CALL
KP_DISK_ACTIVITY
      3979**DCL      6176<<ASSIGN
KP_EXIT.V.STEPCC#
      4046**DCL      4046--REDEF
KP_INBUF
      3968**DCL      3968--REDEF
KP_IN_GOOD_GRACE
      3975**DCL      6167<<ASSIGN
KP_PROMPT
      4032**DCL      6137<>CALL
KP_RU_KEY
      3976**DCL      3977--REDEF
KP_RU_KEY.NODE
      3976**DCL      3976--REDEF
KP_RU_KEY.PAGE
      3977**DCL      3977--REDEF
KP_RU_OUTBUF
      3970**DCL      3970--REDEF
M$DO
      6133**DCL      6181<>CALL     6184<>CALL
OUT$
      5971**DCL      6137<>CALL     6138>>ASSIGN   6142<>CALL     6145<>CALL     6148<>CALL     6151<>CALL
      6154<>CALL     6157<>CALL     6160<>CALL     6163<>CALL     6170<>CALL     6173<>CALL
OUT$BLK.CODE
      6060**DCL      6138>>ASSIGN
OUT$SYM.COUNT
      6122**DCL      6125--IMP-SIZ
ROOT_NODE
      5921**DCL      6137<>CALL
XUR$ECHOIF
      4659**DCL-ENT  6181--CALL
XUR$ERRPTR
      4658**DCL-ENT  6184--CALL
XUR$GETCMD
PL6.E3A0      #001=KPP$PARSE File=KPP$PARSE.:E05TSI                              WED 07/30/97 01:20 Page:23   
      4657**DCL-ENT  6137--CALL
