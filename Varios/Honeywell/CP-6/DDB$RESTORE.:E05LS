VERSION E05

PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:1    
        1        1        /*M* DDB$RESTORE . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P*  NAME:     DDB$RESTORE
        9        9              PURPOSE:  TO RESTORE THE USER'S PROGRAM (I.E.,PUT BACK
       10       10                        INSTRUCTIONS WHICH WERE REPLACED BY DERAILS, ADJUST
       11       11                        MEMORY PROTECTION ON THE WHEN BREAKPOINTS).
       12       12                  IF XDELTA, THE MONITOR'S COME TO XDELTA FLAG (H_XDELTA)
       13       13                  IS RESET.  THE EXIT PATH WILL SET IT AGAIN IF NECESSARY.
       14       14                        */
       15       15        /*D*  NAME:     DDB$RESTORE
       16       16              CALL:     CALL DDB$RESTORE
       17       17              DESCRIPTION:  DDB$RESTORE RUNS THE FIXCOM TABLE LOOKING FOR
       18       18                        AT, ON CALL AND WHEN.  FOR AT AND ON CALL, THE
       19       19                        ORIGINAL INSTRUCTION IS MOVED TO THE POSITION SPEC-
       20       20                        IFIED IN THE DELTA COMMAND.
       21       21                  IF XDELTA, THE MONITOR'S COME TO XDELTA FLAG (H_XDELTA)
       22       22                  IS RESET.  THE EXIT PATH WILL SET IT AGAIN IF NECESSARY.
       23       23                        */
       24       24        DDB$RESTORE: PROC;
       25       25        %INCLUDE DD$BASED;
       26     1328        %AT_FIRST;
       27     1356        %WHEN_FIRST (NAME=WHEN, STCLASS="BASED(FATT$)");
       28     1393        %U$SE;
       29     1401        %ALL_ATTACH;
       30     1416        %HOST_INSTR(NAME=INSTR);
       31     1438        %INCLUDE DD_SUBS_C;
       32     1709        %INCLUDE B$OBJECT_C;
       33     5139        %B$TREE_TABLE(NODE_NAME="B$TREE_NODE(0:0)");
       34     5197    1   DCL CODE SBIN;
       35     5198    1   DCL FATT$ PTR;
       36     5199    1   DCL WHERE$ PTR;
       37     5200    1   DCL WHAT SBIN;
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:2    
       38     5201    1   DCL I UBIN;
       39     5202    1   DCL NODE UBIN;
       40     5203    1   DCL DRL$ PTR;
       41     5204    1   DCL BB$ PTR;
       42     5205    1   DCL SIZE UBIN;
       43     5206    1   DCL REM UBIN;
       44     5207    1   DCL UBIN36 UBIN BASED;
       45     5208    1   DCL INS SBIN BASED;
       46     5209        %INCLUDE XUH_MACRO_C;
       47     5293        %INCLUDE DD_SD_M;
       48     6629        %S_D;
       49     7947        %INCLUDE DD_ERR_C;
       50     8344        %INCLUDE CP_6;
       51     8425        %INCLUDE DD$DITEM;
       12+    8528             %LIST;
       13+    8529    1        DCL SDD$ PTR;
       14+    8530    1        DCL ZITEM$ PTR;
       15+    8531    1        DCL SDD_L6$ PTR;
       16+    8532    1        DCL ZITEM_L6$ PTR;
       52     9106        %FPT_SSC (FPTN=FPT_SSC, STCLASS=CONSTANT,
       53     9107                  FLAGS="'0'B");
       54     9123        %FPT_SSC (FPTN=FPT$SSC, STCLASS=AUTO);
       55     9139    1   DCL UIS$ PTR SYMREF;
       56     9140    1   DCL MIS$ PTR SYMREF;
       57     9141    1   DCL USE$ PTR SYMREF;
       58     9142    1   DCL D_XDELTA BIT(1) SYMREF;
       59     9143    1   DCL H_XDELTA UBIN SYMREF;
       60     9144    1   DCL DXB$CUSE ENTRY;
       61     9145    1   DCL DXB$UNODE ENTRY(1);
       62     9146    1   DCL DXA$VERIFY_APT ENTRY(1) ALTRET;
       63     9147    1   DCL DXB$USE ENTRY;
       64     9148    1   DCL DDQ$WRITE ENTRY(2);
       65     9149    1   DCL DDR$BINTXT ENTRY(4);
       66     9150    1   DCL DDR$MOVE ENTRY(4) ALTRET;
       67     9151    1   DCL DDC$PUTONE ENTRY(2) ALTRET;
       68     9152    1   DCL DDE$ERROR ENTRY;
       69     9153    1   DCL DUE$ERRMSG ENTRY;
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:3    
       70     9154    1   DCL DDB$WHENRESET ENTRY ALTRET;
       71     9155                                                /**/
       72     9156    1        IF D_XDELTA THEN
       73     9157    1             IF H_XDELTA ~= 0 THEN
       74     9158    1                  PINCRW(MIS$, H_XDELTA)->UBIN36 = 0;
              9158                           /* Reset it, DDA$DELTA or DDB$PLANT will set it if necessary */
       75     9159    1             ELSE ;
       76     9160    2        ELSE DO;
       77     9161    2             FPT$SSC = FPT_SSC;
       78     9162    2             FPT$SSC.V_ = VECTOR(FPT$SSC.V);
       79     9163    2           END;
       80     9164    2        DO I = 1 TO S_D.FIXLAST;
       81     9165    2             CODE = S_D.FIXCOM.CMD(I);
       82     9166    2             FATT$ = PINCRW(S_D.VARCOM$,S_D.FIXCOM.FAI(I));
       83     9167    3             IF D_XDELTA THEN DO;
       84     9168    4                  IF S_D.FIXCOM.USER(I)='0'B THEN DO;
       85     9169    4                       U$SE.TYPE = USE_MON; /* USE MON */
       86     9170    4                       U$SE.LS = 0;
       87     9171    4                       CALL DXB$USE;
       88     9172    4                       NODE = FATT$ -> AT_FIRST.NODE;
       89     9173    4                       IF NODE ~= S_D.UNODE.USENODE
       90     9174    4                       THEN CALL DXB$UNODE(NODE);
       91     9175    4                     END;
       92     9176    4                  ELSE DO;
       93     9177    4                       U$SE.TYPE = USE_USER@; /* USE_USER@*/
       94     9178    4                       U$SE.APT = FATT$->ALL_ATTACH.U.APT;
       95     9179    4                       CALL DXA$VERIFY_APT(U$SE.APT) ALTRET(BAD_APT);
       96     9180    4                       U$SE.LS = FATT$->ALL_ATTACH.U.LS;
       97     9181    4                       CALL DXB$USE;
       98     9182    4                     END;
       99     9183    3                END;
      100     9184    2             IF CODE = C_AT OR CODE = C_OC /* C_AT OR C_OC */
      101     9185    3             THEN DO;
      102     9186    3                  IF S_D.OVERLAID AND NOT D_XDELTA
      103     9187    4                  THEN DO;
      104     9188    4                       IF S_D.B$TREE$->B$TREE_NODE.FLGS.NOW_IN(FATT$->AT_FIRST.NODE)
      105     9189    4                       THEN S_D.FIXCOM.NOT_IN(I) = '0'B;
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:4    
      106     9190    5                       ELSE DO;
      107     9191    5                            S_D.FIXCOM.NOT_IN(I) = '1'B;
      108     9192    5                            GOTO ENDLOOP;  /* NOT IN, NOTHING ELSE TO DO */
      109     9193    5                          END;
      110     9194    4                     END;
      111     9195    3                  IF S_D.FIXCOM.INACTIVE(I) THEN GOTO ENDLOOP;
      112     9196    3                  IF S_D.FIXCOM.FPRG(I) THEN GOTO ENDLOOP;
      113     9197                            /* GO GET THE INSTRUCTION IN THE USER.  VERIFY THAT IT IS A
      114     9198                            DELTA DERAIL.  IF IT IS NOT, THEN KILL THE BREAKPOINT.  */
      115     9199    3                  WHERE$ = PINCRW(UIS$,S_D.FIXCOM.CDF(I));
      116     9200    3                  S_D.ACCESS = '1'B;
      117     9201    3                  REMEMBER S_FAULT IN S_D.REM_ACCESS;
      118     9202    3                  WHAT = WHERE$->INS;
      119     9203    3                  S_D.ACCESS = '0'B;
      120     9204    3                  DRL$ = ADDR(WHAT);
      121     9205    3                  IF (DRL$->INSTR.Y~=I) OR (DRL$->INSTR.OP~=T_DRL)
      122     9206    3                  THEN GOTO ENDLOOP;
              9206                           /* DON'T SET IT INACTIVE, BUT DON'T RESTORE IT EITHER */
      123     9207    4                  ELSE DO;
      124     9208    4                       CALL DDC$PUTONE(WHERE$,FATT$->AT_FIRST.ORIG_INSTR)
      125     9209    4                         ALTRET(BAD_PUT);
      126     9210    4                     END;
      127     9211    3                END;
      128     9212    2             ELSE IF CODE = C_WHEN
      129     9213    3                  THEN DO;
      130     9214    4                       IF S_D.OVERLAID THEN DO;
      131     9215    4                            IF S_D.B$TREE$->B$TREE_NODE.FLGS.NOW_IN(FATT$->AT_FIRST.
              9215                                     NODE)
      132     9216    4                            THEN S_D.FIXCOM.NOT_IN(I) = '0'B;
      133     9217    5                            ELSE DO;
      134     9218    5                                 S_D.FIXCOM.NOT_IN(I) = '1'B;
      135     9219    5                                 GOTO ENDLOOP; /* NOT IN, NOTHING ELSE TO DO */
      136     9220    5                               END;
      137     9221    4                          END;
      138     9222    3                       IF S_D.FIXCOM.INACTIVE(I) THEN GOTO ENDLOOP;
      139     9223    3                       FPT$SSC.V.VPNO# = WHEN.START_PAGE;
      140     9224    3                       FPT$SSC.V.NUMPGS# = 1+ WHEN.END_PAGE - WHEN.START_PAGE;
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:5    
      141     9225    3                       CALL M$SSC (FPT$SSC) ALTRET(OOPS);
      142     9226    3                     END;
      143     9227    2   ENDLOOP: END;
      144     9228    1   RETURNN:
      145     9229    1        CALL DXB$CUSE;                     /* RESTORE ORIGINAL 'USE' ENVIRONMENT */
      146     9230    1        CALL DXB$UNODE(S_D.UNODE.CURRENT);
      147     9231    1        RETURN;
      148     9232    1   BAD_APT: ;
      149     9233    1        S_D.ERROR = E@BAD_APT;             /* E@BAD_APT */
      150     9234    1        GOTO BAD_PUT;
      151     9235    1   S_FAULT: S_D.ACCESS = '0'B;
      152     9236    1        GOTO KILL_AT;
      153     9237    1   BAD_PUT: CALL DDE$ERROR;
      154     9238    1   KILL_AT: ;
      155     9239    1        IF S_D.STEP THEN GOTO ENDLOOP;
      156     9240    1        S_D.FIXCOM.INACTIVE(I) = '1'B;
      157     9241    1        S_D.OUTPUT = 'Breakpoint #';
      158     9242    1        BB$ = PINCRC(ADDR(S_D.OUTPUT),13);
      159     9243    1        CALL DDR$BINTXT(BB$, I, %UINT_FMT, SIZE);
      160     9244    1        BB$ = PINCRC(BB$, SIZE);
      161     9245    1        REM = LENGTHC( S_D.OUTPUT );
      162     9246    1        CALL DDR$MOVE(' set inactive by DELTA', 22, BB$, REM);
      163     9247    1        CALL DDQ$WRITE(ADDR(S_D.OUTPUT), POFFC(BB$, ADDR(S_D.OUTPUT)));
      164     9248    1        GOTO ENDLOOP;
      165     9249    1   OOPS:
      166     9250    1        CALL DUE$ERRMSG;
      167     9251    1   END DDB$RESTORE;

PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:6    
--  Include file information  --

   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDB$RESTORE.

   Procedure DDB$RESTORE requires 294 words for executable code.
   Procedure DDB$RESTORE requires 28 words of local(AUTO) storage.

    No errors detected in file DDB$RESTORE.:E05TSI    .

PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:7    

 Object Unit name= DDB$RESTORE                                File name= DDB$RESTORE.:E05TOU
 UTS= JUL 29 '97 13:46:22.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     13     15  DDB$RESTORE
    2   Proc  even  none   294    446  DDB$RESTORE
    3  RoData even  none     8     10  DDB$RESTORE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  DDB$RESTORE
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:8    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 DXB$USE
         yes           Std       1 DXB$UNODE
 yes     yes           Std       4 DDR$MOVE
 yes     yes           Std       2 DDC$PUTONE
         yes           Std       2 DDQ$WRITE
         yes           Std       0 DUE$ERRMSG
 yes     yes           Std       1 DXA$VERIFY_APT
         yes           Std       0 DDE$ERROR
         yes           Std       4 DDR$BINTXT
         yes           Std       0 DXB$CUSE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  M$UC                                  UIS$
     MIS$                                  USE$                                  D_XDELTA
     H_XDELTA                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:9    


        1        1        /*M* DDB$RESTORE . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P*  NAME:     DDB$RESTORE
        9        9              PURPOSE:  TO RESTORE THE USER'S PROGRAM (I.E.,PUT BACK
       10       10                        INSTRUCTIONS WHICH WERE REPLACED BY DERAILS, ADJUST
       11       11                        MEMORY PROTECTION ON THE WHEN BREAKPOINTS).
       12       12                  IF XDELTA, THE MONITOR'S COME TO XDELTA FLAG (H_XDELTA)
       13       13                  IS RESET.  THE EXIT PATH WILL SET IT AGAIN IF NECESSARY.
       14       14                        */
       15       15        /*D*  NAME:     DDB$RESTORE
       16       16              CALL:     CALL DDB$RESTORE
       17       17              DESCRIPTION:  DDB$RESTORE RUNS THE FIXCOM TABLE LOOKING FOR
       18       18                        AT, ON CALL AND WHEN.  FOR AT AND ON CALL, THE
       19       19                        ORIGINAL INSTRUCTION IS MOVED TO THE POSITION SPEC-
       20       20                        IFIED IN THE DELTA COMMAND.
       21       21                  IF XDELTA, THE MONITOR'S COME TO XDELTA FLAG (H_XDELTA)
       22       22                  IS RESET.  THE EXIT PATH WILL SET IT AGAIN IF NECESSARY.
       23       23                        */
       24       24        DDB$RESTORE: PROC;

     24  2 000000   000000 700200 xent  DDB$RESTORE  TSX0  ! X66_AUTO_0
         2 000001   000034 000000                    ZERO    28,0

       25       25        %INCLUDE DD$BASED;
       26     1328        %AT_FIRST;
       27     1356        %WHEN_FIRST (NAME=WHEN, STCLASS="BASED(FATT$)");
       28     1393        %U$SE;
       29     1401        %ALL_ATTACH;
       30     1416        %HOST_INSTR(NAME=INSTR);
       31     1438        %INCLUDE DD_SUBS_C;
       32     1709        %INCLUDE B$OBJECT_C;
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:10   
       33     5139        %B$TREE_TABLE(NODE_NAME="B$TREE_NODE(0:0)");
       34     5197    1   DCL CODE SBIN;
       35     5198    1   DCL FATT$ PTR;
       36     5199    1   DCL WHERE$ PTR;
       37     5200    1   DCL WHAT SBIN;
       38     5201    1   DCL I UBIN;
       39     5202    1   DCL NODE UBIN;
       40     5203    1   DCL DRL$ PTR;
       41     5204    1   DCL BB$ PTR;
       42     5205    1   DCL SIZE UBIN;
       43     5206    1   DCL REM UBIN;
       44     5207    1   DCL UBIN36 UBIN BASED;
       45     5208    1   DCL INS SBIN BASED;
       46     5209        %INCLUDE XUH_MACRO_C;
       47     5293        %INCLUDE DD_SD_M;
       48     6629        %S_D;
       49     7947        %INCLUDE DD_ERR_C;
       50     8344        %INCLUDE CP_6;
       51     8425        %INCLUDE DD$DITEM;
       12+    8528             %LIST;
       13+    8529    1        DCL SDD$ PTR;
       14+    8530    1        DCL ZITEM$ PTR;
       15+    8531    1        DCL SDD_L6$ PTR;
       16+    8532    1        DCL ZITEM_L6$ PTR;
       52     9106        %FPT_SSC (FPTN=FPT_SSC, STCLASS=CONSTANT,
       53     9107                  FLAGS="'0'B");
       54     9123        %FPT_SSC (FPTN=FPT$SSC, STCLASS=AUTO);
       55     9139    1   DCL UIS$ PTR SYMREF;
       56     9140    1   DCL MIS$ PTR SYMREF;
       57     9141    1   DCL USE$ PTR SYMREF;
       58     9142    1   DCL D_XDELTA BIT(1) SYMREF;
       59     9143    1   DCL H_XDELTA UBIN SYMREF;
       60     9144    1   DCL DXB$CUSE ENTRY;
       61     9145    1   DCL DXB$UNODE ENTRY(1);
       62     9146    1   DCL DXA$VERIFY_APT ENTRY(1) ALTRET;
       63     9147    1   DCL DXB$USE ENTRY;
       64     9148    1   DCL DDQ$WRITE ENTRY(2);
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:11   
       65     9149    1   DCL DDR$BINTXT ENTRY(4);
       66     9150    1   DCL DDR$MOVE ENTRY(4) ALTRET;
       67     9151    1   DCL DDC$PUTONE ENTRY(2) ALTRET;
       68     9152    1   DCL DDE$ERROR ENTRY;
       69     9153    1   DCL DUE$ERRMSG ENTRY;
       70     9154    1   DCL DDB$WHENRESET ENTRY ALTRET;
       71     9155                                                /**/
       72     9156    1        IF D_XDELTA THEN

   9156  2 000002   000000 234000 xsym               SZN     D_XDELTA
         2 000003   000011 605000 2                  TPL     s:9161

       73     9157    1             IF H_XDELTA ~= 0 THEN

   9157  2 000004   000000 235000 xsym               LDA     H_XDELTA
         2 000005   000021 600000 2                  TZE     s:9164

       74     9158    1                  PINCRW(MIS$, H_XDELTA)->UBIN36 = 0;
              9158                           /* Reset it, DDA$DELTA or DDB$PLANT will set it if necessary */

   9158  2 000006   000000 470400 xsym               LDP0    MIS$
         2 000007   000000 450105                    STZ     0,AL,PR0
         2 000010   000021 710000 2                  TRA     s:9164

       75     9159    1             ELSE ;
       76     9160    2        ELSE DO;

       77     9161    2             FPT$SSC = FPT_SSC;

   9161  2 000011   000100 100400                    MLR     fill='000'O
         2 000012   000000 000020 1                  ADSC9   FPT_SSC                  cn=0,n=16
         2 000013   200022 000020                    ADSC9   FPT$SSC,,AUTO            cn=0,n=16

       78     9162    2             FPT$SSC.V_ = VECTOR(FPT$SSC.V);

   9162  2 000014   000000 235000 3                  LDA     0
         2 000015   200026 452500                    STP2    FPT$SSC+4,,AUTO
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:12   
         2 000016   200026 236100                    LDQ     FPT$SSC+4,,AUTO
         2 000017   000024 036003                    ADLQ    20,DU
         2 000020   200022 757100                    STAQ    FPT$SSC,,AUTO

       79     9163    2           END;

       80     9164    2        DO I = 1 TO S_D.FIXLAST;

   9164  2 000021   000001 235007                    LDA     1,DL
         2 000022   200007 755100                    STA     I,,AUTO
         2 000023   000310 710000 2                  TRA     ENDLOOP+3

       81     9165    2             CODE = S_D.FIXCOM.CMD(I);

   9165  2 000024   200007 236100                    LDQ     I,,AUTO
         2 000025   000006 402007                    MPY     6,DL
         2 000026   000000 470400 xsym               LDP0    S_D$
         2 000027   001212 236106                    LDQ     650,QL,PR0
         2 000030   000033 772000                    QRL     27
         2 000031   200003 756100                    STQ     CODE,,AUTO

       82     9166    2             FATT$ = PINCRW(S_D.VARCOM$,S_D.FIXCOM.FAI(I));

   9166  2 000032   200007 236100                    LDQ     I,,AUTO
         2 000033   000006 402007                    MPY     6,DL
         2 000034   001214 720106                    LXL0    652,QL,PR0
         2 000035   004622 471500                    LDP1    2450,,PR0
         2 000036   100000 633510                    EPPR3   0,X0,PR1
         2 000037   200004 453500                    STP3    FATT$,,AUTO

       83     9167    3             IF D_XDELTA THEN DO;

   9167  2 000040   000000 234000 xsym               SZN     D_XDELTA
         2 000041   000117 605000 2                  TPL     s:9184

       84     9168    4                  IF S_D.FIXCOM.USER(I)='0'B THEN DO;

PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:13   
   9168  2 000042   001212 236106                    LDQ     650,QL,PR0
         2 000043   000001 316003                    CANQ    1,DU
         2 000044   000071 601000 2                  TNZ     s:9177

       85     9169    4                       U$SE.TYPE = USE_MON; /* USE MON */

   9169  2 000045   000000 474400 xsym               LDP4    USE$
         2 000046   400001 450100                    STZ     1,,PR4

       86     9170    4                       U$SE.LS = 0;

   9170  2 000047   400002 450100                    STZ     2,,PR4

       87     9171    4                       CALL DXB$USE;

   9171  2 000050   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000051   000000 701000 xent               TSX1    DXB$USE
         2 000052   000000 011000                    NOP     0

       88     9172    4                       NODE = FATT$ -> AT_FIRST.NODE;

   9172  2 000053   200004 470500                    LDP0    FATT$,,AUTO
         2 000054   000003 236100                    LDQ     3,,PR0
         2 000055   000022 772000                    QRL     18
         2 000056   200010 756100                    STQ     NODE,,AUTO

       89     9173    4                       IF NODE ~= S_D.UNODE.USENODE

   9173  2 000057   000000 471400 xsym               LDP1    S_D$
         2 000060   104760 116100                    CMPQ    2544,,PR1
         2 000061   000117 600000 2                  TZE     s:9184

       90     9174    4                       THEN CALL DXB$UNODE(NODE);

   9174  2 000062   200010 633500                    EPPR3   NODE,,AUTO
         2 000063   200026 453500                    STP3    FPT$SSC+4,,AUTO
         2 000064   200026 630500                    EPPR0   FPT$SSC+4,,AUTO
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:14   
         2 000065   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000066   000000 701000 xent               TSX1    DXB$UNODE
         2 000067   000000 011000                    NOP     0

       91     9175    4                     END;

   9175  2 000070   000117 710000 2                  TRA     s:9184

       92     9176    4                  ELSE DO;

       93     9177    4                       U$SE.TYPE = USE_USER@; /* USE_USER@*/

   9177  2 000071   000003 235007                    LDA     3,DL
         2 000072   000000 474400 xsym               LDP4    USE$
         2 000073   400001 755100                    STA     1,,PR4

       94     9178    4                       U$SE.APT = FATT$->ALL_ATTACH.U.APT;

   9178  2 000074   300001 236100                    LDQ     1,,PR3
         2 000075   000022 772000                    QRL     18
         2 000076   400003 756100                    STQ     3,,PR4

       95     9179    4                       CALL DXA$VERIFY_APT(U$SE.APT) ALTRET(BAD_APT);

   9179  2 000077   000000 236000 xsym               LDQ     USE$
         2 000100   000003 036003                    ADLQ    3,DU
         2 000101   200026 756100                    STQ     FPT$SSC+4,,AUTO
         2 000102   200026 630500                    EPPR0   FPT$SSC+4,,AUTO
         2 000103   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000104   000000 701000 xent               TSX1    DXA$VERIFY_APT
         2 000105   000330 702000 2                  TSX2    BAD_APT

       96     9180    4                       U$SE.LS = FATT$->ALL_ATTACH.U.LS;

   9180  2 000106   200004 470500                    LDP0    FATT$,,AUTO
         2 000107   000000 471400 xsym               LDP1    USE$
         2 000110   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:15   
         2 000111   000017 772000                    QRL     15
         2 000112   000007 376007                    ANQ     7,DL
         2 000113   100002 756100                    STQ     2,,PR1

       97     9181    4                       CALL DXB$USE;

   9181  2 000114   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000115   000000 701000 xent               TSX1    DXB$USE
         2 000116   000000 011000                    NOP     0

       98     9182    4                     END;

       99     9183    3                END;

      100     9184    2             IF CODE = C_AT OR CODE = C_OC /* C_AT OR C_OC */

   9184  2 000117   200003 235100                    LDA     CODE,,AUTO
         2 000120   000002 115007                    CMPA    2,DL
         2 000121   000124 600000 2                  TZE     s:9186
         2 000122   000037 115007                    CMPA    31,DL
         2 000123   000231 601000 2                  TNZ     s:9212

      101     9185    3             THEN DO;

      102     9186    3                  IF S_D.OVERLAID AND NOT D_XDELTA

   9186  2 000124   000000 470400 xsym               LDP0    S_D$
         2 000125   004764 234100                    SZN     2548,,PR0
         2 000126   000154 605000 2                  TPL     s:9195
         2 000127   000000 234000 xsym               SZN     D_XDELTA
         2 000130   000154 604000 2                  TMI     s:9195

      103     9187    4                  THEN DO;

      104     9188    4                       IF S_D.B$TREE$->B$TREE_NODE.FLGS.NOW_IN(FATT$->AT_FIRST.NODE)

   9188  2 000131   004767 471500                    LDP1    2551,,PR0
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:16   
         2 000132   200004 473500                    LDP3    FATT$,,AUTO
         2 000133   300003 236100                    LDQ     3,,PR3
         2 000134   000022 772000                    QRL     18
         2 000135   000006 402007                    MPY     6,DL
         2 000136   100001 234106                    SZN     1,QL,PR1
         2 000137   000146 605000 2                  TPL     s:9191

      105     9189    4                       THEN S_D.FIXCOM.NOT_IN(I) = '0'B;

   9189  2 000140   200007 236100                    LDQ     I,,AUTO
         2 000141   000006 402007                    MPY     6,DL
         2 000142   000000 620006                    EAX0    0,QL
         2 000143   000001 236000 3                  LDQ     1
         2 000144   001212 356110                    ANSQ    650,X0,PR0
         2 000145   000154 710000 2                  TRA     s:9195

      106     9190    5                       ELSE DO;

      107     9191    5                            S_D.FIXCOM.NOT_IN(I) = '1'B;

   9191  2 000146   200007 236100                    LDQ     I,,AUTO
         2 000147   000006 402007                    MPY     6,DL
         2 000150   000000 620006                    EAX0    0,QL
         2 000151   000100 236003                    LDQ     64,DU
         2 000152   001212 256110                    ORSQ    650,X0,PR0

      108     9192    5                            GOTO ENDLOOP;  /* NOT IN, NOTHING ELSE TO DO */

   9192  2 000153   000305 710000 2                  TRA     ENDLOOP

      109     9193    5                          END;
      110     9194    4                     END;
      111     9195    3                  IF S_D.FIXCOM.INACTIVE(I) THEN GOTO ENDLOOP;

   9195  2 000154   200007 236100                    LDQ     I,,AUTO
         2 000155   000006 402007                    MPY     6,DL
         2 000156   001212 236106                    LDQ     650,QL,PR0
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:17   
         2 000157   000400 316003                    CANQ    256,DU
         2 000160   000305 601000 2                  TNZ     ENDLOOP

      112     9196    3                  IF S_D.FIXCOM.FPRG(I) THEN GOTO ENDLOOP;

   9196  2 000161   200007 236100                    LDQ     I,,AUTO
         2 000162   000006 402007                    MPY     6,DL
         2 000163   001212 236106                    LDQ     650,QL,PR0
         2 000164   000002 316003                    CANQ    2,DU
         2 000165   000305 601000 2                  TNZ     ENDLOOP

      113     9197                            /* GO GET THE INSTRUCTION IN THE USER.  VERIFY THAT IT IS A
      114     9198                            DELTA DERAIL.  IF IT IS NOT, THEN KILL THE BREAKPOINT.  */
      115     9199    3                  WHERE$ = PINCRW(UIS$,S_D.FIXCOM.CDF(I));

   9199  2 000166   200007 236100                    LDQ     I,,AUTO
         2 000167   000006 402007                    MPY     6,DL
         2 000170   001213 720106                    LXL0    651,QL,PR0
         2 000171   000000 636010                    EAQ     0,X0
         2 000172   000000 036000 xsym               ADLQ    UIS$
         2 000173   200005 756100                    STQ     WHERE$,,AUTO

      116     9200    3                  S_D.ACCESS = '1'B;

   9200  2 000174   400000 236003                    LDQ     -131072,DU
         2 000175   000016 756100                    STQ     14,,PR0

      117     9201    3                  REMEMBER S_FAULT IN S_D.REM_ACCESS;

   9201  2 000176   000334 635000 2                  EAA     S_FAULT
         2 000177   000024 452500                    STP2    20,,PR0
         2 000200   000025 755100                    STA     21,,PR0

      118     9202    3                  WHAT = WHERE$->INS;

   9202  2 000201   200005 471500                    LDP1    WHERE$,,AUTO
         2 000202   100000 235100                    LDA     0,,PR1
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:18   
         2 000203   200006 755100                    STA     WHAT,,AUTO

      119     9203    3                  S_D.ACCESS = '0'B;

   9203  2 000204   000016 450100                    STZ     14,,PR0

      120     9204    3                  DRL$ = ADDR(WHAT);

   9204  2 000205   200006 633500                    EPPR3   WHAT,,AUTO
         2 000206   200011 453500                    STP3    DRL$,,AUTO

      121     9205    3                  IF (DRL$->INSTR.Y~=I) OR (DRL$->INSTR.OP~=T_DRL)

   9205  2 000207   300000 236100                    LDQ     0,,PR3
         2 000210   000022 772000                    QRL     18
         2 000211   200007 116100                    CMPQ    I,,AUTO
         2 000212   000305 601000 2                  TNZ     ENDLOOP
         2 000213   300000 236100                    LDQ     0,,PR3
         2 000214   777400 376007                    ANQ     -256,DL
         2 000215   002000 116007                    CMPQ    1024,DL
         2 000216   000305 601000 2                  TNZ     ENDLOOP

      122     9206    3                  THEN GOTO ENDLOOP;
              9206                           /* DON'T SET IT INACTIVE, BUT DON'T RESTORE IT EITHER */
      123     9207    4                  ELSE DO;

      124     9208    4                       CALL DDC$PUTONE(WHERE$,FATT$->AT_FIRST.ORIG_INSTR)

   9208  2 000217   200004 236100                    LDQ     FATT$,,AUTO
         2 000220   000002 036003                    ADLQ    2,DU
         2 000221   200027 756100                    STQ     FPT$SSC+5,,AUTO
         2 000222   200005 634500                    EPPR4   WHERE$,,AUTO
         2 000223   200026 454500                    STP4    FPT$SSC+4,,AUTO
         2 000224   200026 630500                    EPPR0   FPT$SSC+4,,AUTO
         2 000225   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000226   000000 701000 xent               TSX1    DDC$PUTONE
         2 000227   000337 702000 2                  TSX2    BAD_PUT
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:19   

      125     9209    4                         ALTRET(BAD_PUT);
      126     9210    4                     END;

      127     9211    3                END;

   9211  2 000230   000305 710000 2                  TRA     ENDLOOP

      128     9212    2             ELSE IF CODE = C_WHEN

   9212  2 000231   000103 115007                    CMPA    67,DL
         2 000232   000305 601000 2                  TNZ     ENDLOOP

      129     9213    3                  THEN DO;

      130     9214    4                       IF S_D.OVERLAID THEN DO;

   9214  2 000233   000000 470400 xsym               LDP0    S_D$
         2 000234   004764 234100                    SZN     2548,,PR0
         2 000235   000261 605000 2                  TPL     s:9222

      131     9215    4                            IF S_D.B$TREE$->B$TREE_NODE.FLGS.NOW_IN(FATT$->AT_FIRST.
              9215                                     NODE)

   9215  2 000236   004767 471500                    LDP1    2551,,PR0
         2 000237   200004 473500                    LDP3    FATT$,,AUTO
         2 000240   300003 236100                    LDQ     3,,PR3
         2 000241   000022 772000                    QRL     18
         2 000242   000006 402007                    MPY     6,DL
         2 000243   100001 234106                    SZN     1,QL,PR1
         2 000244   000253 605000 2                  TPL     s:9218

      132     9216    4                            THEN S_D.FIXCOM.NOT_IN(I) = '0'B;

   9216  2 000245   200007 236100                    LDQ     I,,AUTO
         2 000246   000006 402007                    MPY     6,DL
         2 000247   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:20   
         2 000250   000001 236000 3                  LDQ     1
         2 000251   001212 356110                    ANSQ    650,X0,PR0
         2 000252   000261 710000 2                  TRA     s:9222

      133     9217    5                            ELSE DO;

      134     9218    5                                 S_D.FIXCOM.NOT_IN(I) = '1'B;

   9218  2 000253   200007 236100                    LDQ     I,,AUTO
         2 000254   000006 402007                    MPY     6,DL
         2 000255   000000 620006                    EAX0    0,QL
         2 000256   000100 236003                    LDQ     64,DU
         2 000257   001212 256110                    ORSQ    650,X0,PR0

      135     9219    5                                 GOTO ENDLOOP; /* NOT IN, NOTHING ELSE TO DO */

   9219  2 000260   000305 710000 2                  TRA     ENDLOOP

      136     9220    5                               END;
      137     9221    4                          END;
      138     9222    3                       IF S_D.FIXCOM.INACTIVE(I) THEN GOTO ENDLOOP;

   9222  2 000261   200007 236100                    LDQ     I,,AUTO
         2 000262   000006 402007                    MPY     6,DL
         2 000263   001212 236106                    LDQ     650,QL,PR0
         2 000264   000400 316003                    CANQ    256,DU
         2 000265   000305 601000 2                  TNZ     ENDLOOP

      139     9223    3                       FPT$SSC.V.VPNO# = WHEN.START_PAGE;

   9223  2 000266   200004 471500                    LDP1    FATT$,,AUTO
         2 000267   100020 220100                    LDX0    16,,PR1
         2 000270   200025 440100                    SXL0    FPT$SSC+3,,AUTO

      140     9224    3                       FPT$SSC.V.NUMPGS# = 1+ WHEN.END_PAGE - WHEN.START_PAGE;

   9224  2 000271   100020 236100                    LDQ     16,,PR1
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:21   
         2 000272   000022 772000                    QRL     18
         2 000273   200026 756100                    STQ     FPT$SSC+4,,AUTO
         2 000274   100020 236100                    LDQ     16,,PR1
         2 000275   777777 376007                    ANQ     -1,DL
         2 000276   200026 136100                    SBLQ    FPT$SSC+4,,AUTO
         2 000277   000001 621006                    EAX1    1,QL
         2 000300   200025 741100                    STX1    FPT$SSC+3,,AUTO

      141     9225    3                       CALL M$SSC (FPT$SSC) ALTRET(OOPS);

   9225  2 000301   200022 630500                    EPPR0   FPT$SSC,,AUTO
         2 000302   430013 713400                    CLIMB   alt,+12299
         2 000303   400000 401760                    pmme    nvectors=1
         2 000304   000442 702000 2                  TSX2    OOPS

      142     9226    3                     END;

      143     9227    2   ENDLOOP: END;

   9227  2 000305   200007 235100       ENDLOOP      LDA     I,,AUTO
         2 000306   000001 035007                    ADLA    1,DL
         2 000307   200007 755100                    STA     I,,AUTO
         2 000310   000000 470400 xsym               LDP0    S_D$
         2 000311   200007 236100                    LDQ     I,,AUTO
         2 000312   000315 604000 2                  TMI     RETURNN
         2 000313   000047 116100                    CMPQ    39,,PR0
         2 000314   000024 604400 2                  TMOZ    s:9165

      144     9228    1   RETURNN:
      145     9229    1        CALL DXB$CUSE;                     /* RESTORE ORIGINAL 'USE' ENVIRONMENT */

   9229  2 000315   000002 631400 xsym  RETURNN      EPPR1   B_VECTNIL+2
         2 000316   000000 701000 xent               TSX1    DXB$CUSE
         2 000317   000000 011000                    NOP     0

      146     9230    1        CALL DXB$UNODE(S_D.UNODE.CURRENT);

PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:22   
   9230  2 000320   000000 236000 xsym               LDQ     S_D$
         2 000321   004757 036003                    ADLQ    2543,DU
         2 000322   200026 756100                    STQ     FPT$SSC+4,,AUTO
         2 000323   200026 630500                    EPPR0   FPT$SSC+4,,AUTO
         2 000324   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000325   000000 701000 xent               TSX1    DXB$UNODE
         2 000326   000000 011000                    NOP     0

      147     9231    1        RETURN;

   9231  2 000327   000000 702200 xent               TSX2  ! X66_ARET

   9230  2 000330                       BAD_APT      null
      148     9232    1   BAD_APT: ;
      149     9233    1        S_D.ERROR = E@BAD_APT;             /* E@BAD_APT */

   9233  2 000330   000061 235007                    LDA     49,DL
         2 000331   000000 470400 xsym               LDP0    S_D$
         2 000332   000013 755100                    STA     11,,PR0

      150     9234    1        GOTO BAD_PUT;

   9234  2 000333   000337 710000 2                  TRA     BAD_PUT

      151     9235    1   S_FAULT: S_D.ACCESS = '0'B;

   9235  2 000334   000000 470400 xsym  S_FAULT      LDP0    S_D$
         2 000335   000016 450100                    STZ     14,,PR0

      152     9236    1        GOTO KILL_AT;

   9236  2 000336   000342 710000 2                  TRA     KILL_AT

      153     9237    1   BAD_PUT: CALL DDE$ERROR;

   9237  2 000337   000002 631400 xsym  BAD_PUT      EPPR1   B_VECTNIL+2
         2 000340   000000 701000 xent               TSX1    DDE$ERROR
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:23   
         2 000341   000000 011000                    NOP     0

   9233  2 000342                       KILL_AT      null
      154     9238    1   KILL_AT: ;
      155     9239    1        IF S_D.STEP THEN GOTO ENDLOOP;

   9239  2 000342   000000 470400 xsym               LDP0    S_D$
         2 000343   000722 234100                    SZN     466,,PR0
         2 000344   000305 604000 2                  TMI     ENDLOOP

      156     9240    1        S_D.FIXCOM.INACTIVE(I) = '1'B;

   9240  2 000345   200007 236100                    LDQ     I,,AUTO
         2 000346   000006 402007                    MPY     6,DL
         2 000347   000000 620006                    EAX0    0,QL
         2 000350   000400 236003                    LDQ     256,DU
         2 000351   001212 256110                    ORSQ    650,X0,PR0

      157     9241    1        S_D.OUTPUT = 'Breakpoint #';

   9241  2 000352   040100 100400                    MLR     fill='040'O
         2 000353   000004 000014 1                  ADSC9   FPT_SSC+4                cn=0,n=12
         2 000354   005335 004000                    ADSC9   2781,,PR0                cn=0,n=2048

      158     9242    1        BB$ = PINCRC(ADDR(S_D.OUTPUT),13);

   9242  2 000355   000000 236000 xsym               LDQ     S_D$
         2 000356   000002 036000 3                  ADLQ    2
         2 000357   200012 756100                    STQ     BB$,,AUTO

      159     9243    1        CALL DDR$BINTXT(BB$, I, %UINT_FMT, SIZE);

   9243  2 000360   200013 631500                    EPPR1   SIZE,,AUTO
         2 000361   200031 451500                    STP1    FPT$SSC+7,,AUTO
         2 000362   000003 236000 3                  LDQ     3
         2 000363   200030 756100                    STQ     FPT$SSC+6,,AUTO
         2 000364   200007 633500                    EPPR3   I,,AUTO
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:24   
         2 000365   200027 453500                    STP3    FPT$SSC+5,,AUTO
         2 000366   200012 634500                    EPPR4   BB$,,AUTO
         2 000367   200026 454500                    STP4    FPT$SSC+4,,AUTO
         2 000370   200026 630500                    EPPR0   FPT$SSC+4,,AUTO
         2 000371   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000372   000000 701000 xent               TSX1    DDR$BINTXT
         2 000373   000000 011000                    NOP     0

      160     9244    1        BB$ = PINCRC(BB$, SIZE);

   9244  2 000374   200013 236100                    LDQ     SIZE,,AUTO
         2 000375   000020 736000                    QLS     16
         2 000376   200012 036100                    ADLQ    BB$,,AUTO
         2 000377   200012 756100                    STQ     BB$,,AUTO

      161     9245    1        REM = LENGTHC( S_D.OUTPUT );

   9245  2 000400   004000 235007                    LDA     2048,DL
         2 000401   200014 755100                    STA     REM,,AUTO

      162     9246    1        CALL DDR$MOVE(' set inactive by DELTA', 22, BB$, REM);

   9246  2 000402   200014 630500                    EPPR0   REM,,AUTO
         2 000403   200031 450500                    STP0    FPT$SSC+7,,AUTO
         2 000404   200012 631500                    EPPR1   BB$,,AUTO
         2 000405   200030 451500                    STP1    FPT$SSC+6,,AUTO
         2 000406   000006 237000 3                  LDAQ    6
         2 000407   200026 757100                    STAQ    FPT$SSC+4,,AUTO
         2 000410   200026 630500                    EPPR0   FPT$SSC+4,,AUTO
         2 000411   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000412   000000 701000 xent               TSX1    DDR$MOVE
         2 000413   000000 011000                    NOP     0

      163     9247    1        CALL DDQ$WRITE(ADDR(S_D.OUTPUT), POFFC(BB$, ADDR(S_D.OUTPUT)));

   9247  2 000414   000000 236000 xsym               LDQ     S_D$
         2 000415   005335 036003                    ADLQ    2781,DU
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:25   
         2 000416   000020 772000                    QRL     16
         2 000417   200026 756100                    STQ     FPT$SSC+4,,AUTO
         2 000420   200012 236100                    LDQ     BB$,,AUTO
         2 000421   000020 772000                    QRL     16
         2 000422   200026 136100                    SBLQ    FPT$SSC+4,,AUTO
         2 000423   200030 756100                    STQ     FPT$SSC+6,,AUTO
         2 000424   000000 236000 xsym               LDQ     S_D$
         2 000425   005335 036003                    ADLQ    2781,DU
         2 000426   200027 756100                    STQ     FPT$SSC+5,,AUTO
         2 000427   200030 235100                    LDA     FPT$SSC+6,,AUTO
         2 000430   200031 755100                    STA     FPT$SSC+7,,AUTO
         2 000431   200031 630500                    EPPR0   FPT$SSC+7,,AUTO
         2 000432   200033 450500                    STP0    FPT$SSC+9,,AUTO
         2 000433   200027 631500                    EPPR1   FPT$SSC+5,,AUTO
         2 000434   200032 451500                    STP1    FPT$SSC+8,,AUTO
         2 000435   200032 630500                    EPPR0   FPT$SSC+8,,AUTO
         2 000436   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000437   000000 701000 xent               TSX1    DDQ$WRITE
         2 000440   000000 011000                    NOP     0

      164     9248    1        GOTO ENDLOOP;

   9248  2 000441   000305 710000 2                  TRA     ENDLOOP

      165     9249    1   OOPS:
      166     9250    1        CALL DUE$ERRMSG;

   9250  2 000442   000002 631400 xsym  OOPS         EPPR1   B_VECTNIL+2
         2 000443   000000 701000 xent               TSX1    DUE$ERRMSG
         2 000444   000000 011000                    NOP     0

      167     9251    1   END DDB$RESTORE;

   9251  2 000445   000000 702200 xent               TSX2  ! X66_ARET

FPT_SSC
 Sect OctLoc
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:26   
   1     000   000001 777640   000002 006000   000000 000000   000000 000000    ................

(unnamed)
 Sect OctLoc
   1     004   102162 145141   153160 157151   156164 040043   040163 145164    Breakpoint # set
   1     010   040151 156141   143164 151166   145040 142171   040104 105114     inactive by DEL
   1     014   124101 040040                                                    TA

(unnamed)
 Sect OctLoc
   3     000   000001 777640   777677 777777   005340 200000   000004 006000    ................
   3     004   000000 000026   000000 000000   000007 006000   000004 006000    ................

PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:27   
--  Include file information  --

   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDB$RESTORE.

   Procedure DDB$RESTORE requires 294 words for executable code.
   Procedure DDB$RESTORE requires 28 words of local(AUTO) storage.

    No errors detected in file DDB$RESTORE.:E05TSI    .
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:28   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:29   
          MINI XREF LISTING

ALL_ATTACH.U.APT
      1408**DCL      9178>>ASSIGN
ALL_ATTACH.U.LS
      1409**DCL      9180>>ASSIGN
ALL_ATTACH.UNUSED
      1406**DCL      1407--REDEF    1411--REDEF
AT_FIRST.NODE
      1344**DCL      9172>>ASSIGN   9188>>IF       9215>>IF
AT_FIRST.ORIG_INSTR
      1342**DCL      9208<>CALL
AT_FIRST.UNUSED
      1333**DCL      1334--REDEF    1338--REDEF
B$TREE_NODE.FLGS.NOW_IN
      5162**DCL      9188>>IF       9215>>IF
BAD_APT
      9230**LABEL    9179--CALLALT
BAD_PUT
      9237**LABEL    9208--CALLALT  9234--GOTO
BB$
      5204**DCL      9242<<ASSIGN   9243<>CALL     9244<<ASSIGN   9244>>ASSIGN   9246<>CALL     9247>>CALL
CODE
      5197**DCL      9165<<ASSIGN   9184>>IF       9184>>IF       9212>>IF
DDC$PUTONE
      9151**DCL-ENT  9208--CALL
DDE$ERROR
      9152**DCL-ENT  9237--CALL
DDQ$WRITE
      9148**DCL-ENT  9247--CALL
DDR$BINTXT
      9149**DCL-ENT  9243--CALL
DDR$MOVE
      9150**DCL-ENT  9246--CALL
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:30   
DRL$
      5203**DCL      9204<<ASSIGN   9205>>IF       9205>>IF
DUE$ERRMSG
      9153**DCL-ENT  9250--CALL
DXA$VERIFY_APT
      9146**DCL-ENT  9179--CALL
DXB$CUSE
      9144**DCL-ENT  9229--CALL
DXB$UNODE
      9145**DCL-ENT  9174--CALL     9230--CALL
DXB$USE
      9147**DCL-ENT  9171--CALL     9181--CALL
D_XDELTA
      9142**DCL      9156>>IF       9167>>IF       9186>>IF
ENDLOOP
      9227**LABEL    9192--GOTO     9195--GOTO     9196--GOTO     9206--GOTO     9219--GOTO     9222--GOTO
      9239--GOTO     9248--GOTO
FATT$
      5198**DCL      1357--IMP-PTR  9166<<ASSIGN   9172>>ASSIGN   9178>>ASSIGN   9180>>ASSIGN   9188>>IF
      9208>>CALL     9215>>IF       9223>>ASSIGN   9224>>ASSIGN   9224>>ASSIGN
FPT$SSC
      9134**DCL      9161<<ASSIGN   9225<>CALL
FPT$SSC.V
      9134**DCL      9162--ASSIGN
FPT$SSC.V.NUMPGS#
      9136**DCL      9224<<ASSIGN
FPT$SSC.V.VPNO#
      9136**DCL      9223<<ASSIGN
FPT$SSC.V_
      9134**DCL      9162<<ASSIGN
FPT_SSC
      9118**DCL      9161>>ASSIGN
FPT_SSC.V
      9118**DCL      9118--DCLINIT
H_XDELTA
      9143**DCL      9157>>IF       9158>>ASSIGN
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:31   
I
      5201**DCL      9164<<DOINDEX  9165>>ASSIGN   9166>>ASSIGN   9168>>IF       9189>>ASSIGN   9191>>ASSIGN
      9195>>IF       9196>>IF       9199>>ASSIGN   9205>>IF       9216>>ASSIGN   9218>>ASSIGN   9222>>IF
      9240>>ASSIGN   9243<>CALL
INS
      5208**DCL      9202>>ASSIGN
INSTR.OP
      1427**DCL      9205>>IF
INSTR.TAG.TD
      1433**DCL      1434--REDEF
INSTR.TAGG
      1430**DCL      1431--REDEF
INSTR.Y
      1418**DCL      1419--REDEF    1422--REDEF    9205>>IF
KILL_AT
      9233**LABEL    9236--GOTO
M$SSC
      8392**DCL-ENT  9225--CALL
MIS$
      9140**DCL      9158>>ASSIGN
NODE
      5202**DCL      9172<<ASSIGN   9173>>IF       9174<>CALL
OOPS
      9250**LABEL    9225--CALLALT
REM
      5206**DCL      9245<<ASSIGN   9246<>CALL
SIZE
      5205**DCL      9243<>CALL     9244>>ASSIGN
S_D.ACCESS
      6668**DCL      9200<<ASSIGN   9203<<ASSIGN   9235<<ASSIGN
S_D.B$TREE$
      7301**DCL      9188>>IF       9215>>IF
S_D.CURRENT_CHANNEL
      7581**DCL      7583--REDEF
S_D.DEBUGA
      6733**DCL      6735--REDEF
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:32   
S_D.EIS
      7691**DCL      7720--REDEF
S_D.ERROR
      6662**DCL      9233<<ASSIGN
S_D.FIXCOM.CDF
      7097**DCL      9199>>ASSIGN
S_D.FIXCOM.CMD
      7089**DCL      9165>>ASSIGN
S_D.FIXCOM.FAI
      7099**DCL      9166>>ASSIGN
S_D.FIXCOM.FPRG
      7094**DCL      9196>>IF
S_D.FIXCOM.INACTIVE
      7090**DCL      9195>>IF       9222>>IF       9240<<ASSIGN
S_D.FIXCOM.NOT_IN
      7092**DCL      9189<<ASSIGN   9191<<ASSIGN   9216<<ASSIGN   9218<<ASSIGN
S_D.FIXCOM.USER
      7095**DCL      9168>>IF
S_D.FIXLAST
      6725**DCL      9164>>DOINDEX
S_D.HOST_MESSAGE_BUF_REMOTE
      7624**DCL      7625--REDEF    7639--REDEF
S_D.JDE
      7238**DCL      7239--REDEF
S_D.L$.VALUE
      6791**DCL      6797--REDEF    6805--REDEF    6808--REDEF    6811--REDEF    6814--REDEF
S_D.L$.VALUE.L
      6792**DCL      6793--REDEF    6794--REDEF
S_D.L6_MESSAGE_BUF
      7645**DCL      7647--REDEF
S_D.OUTPUT
      7611**DCL      7613--REDEF    9241<<ASSIGN   9242--ASSIGN   9245--ASSIGN   9247--CALL     9247--CALL
S_D.OVERLAID
      7295**DCL      9186>>IF       9214>>IF
S_D.REMOTE_MSG.FNCC
      7630**DCL      7631--REDEF
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:33   
S_D.REMOTE_MSG.STXC
      7626**DCL      7627--REDEF
S_D.REMOTE_MSG.SUBFNCC
      7634**DCL      7635--REDEF
S_D.REM_ACCESS
      6676**DCL      9201<<REMEMBR
S_D.STEP
      6915**DCL      9239>>IF
S_D.SV
      6690**DCL      6711--REDEF
S_D.UNODE.CURRENT
      7285**DCL      9230<>CALL
S_D.UNODE.USENODE
      7287**DCL      9173>>IF
S_D.VARCOM$
      7102**DCL      9166>>ASSIGN
S_D$
      7942**DCL      6638--IMP-PTR  9164>>DOINDEX  9165>>ASSIGN   9166>>ASSIGN   9166>>ASSIGN   9168>>IF
      9173>>IF       9186>>IF       9188>>IF       9189>>ASSIGN   9191>>ASSIGN   9195>>IF       9196>>IF
      9199>>ASSIGN   9200>>ASSIGN   9201>>REMEMBR  9203>>ASSIGN   9214>>IF       9215>>IF       9216>>ASSIGN
      9218>>ASSIGN   9222>>IF       9230>>CALL     9233>>ASSIGN   9235>>ASSIGN   9239>>IF       9240>>ASSIGN
      9241>>ASSIGN   9242>>ASSIGN   9247>>CALL     9247>>CALL
S_FAULT
      9235**LABEL    9201--REMEMBR
U$SE.APT
      1398**DCL      9178<<ASSIGN   9179<>CALL
U$SE.LS
      1397**DCL      9170<<ASSIGN   9180<<ASSIGN
U$SE.TYPE
      1396**DCL      9169<<ASSIGN   9177<<ASSIGN
UBIN36
      5207**DCL      9158<<ASSIGN
UIS$
      9139**DCL      9199>>ASSIGN
USE$
      9141**DCL      1394--IMP-PTR  9169>>ASSIGN   9170>>ASSIGN   9177>>ASSIGN   9178>>ASSIGN   9179>>CALL
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:34   
      9180>>ASSIGN
WHAT
      5200**DCL      9202<<ASSIGN   9204--ASSIGN
WHEN.END_PAGE
      1391**DCL      9224>>ASSIGN
WHEN.START_PAGE
      1390**DCL      9223>>ASSIGN   9224>>ASSIGN
WHEN.U.APT
      1363**DCL      1364--REDEF
WHEN.UNUSED
      1361**DCL      1362--REDEF
WHERE$
      5199**DCL      9199<<ASSIGN   9202>>ASSIGN   9208<>CALL
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:35   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:36   
              MINI UREF LISTING

B$TREE_HEADER    5140**DCL
DDB$RESTORE      24**PROC
DDB$WHENRESET    9154**DCL-ENT
M$ACCT    8370**DCL-ENT
M$ACTIVATE    8373**DCL-ENT
M$ALIB    8366**DCL-ENT
M$ASUSER    8368**DCL-ENT
M$ATTACH    8375**DCL-ENT
M$BADPP    8393**DCL-ENT
M$CGCTL    8374**DCL-ENT
M$CGINFO    8374**DCL-ENT
M$CHECK    8355**DCL-ENT
M$CHGUNIT    8413**DCL-ENT
M$CLOSE    8353**DCL-ENT
M$CLRSTK    8411**DCL-ENT
M$CMDVAR    8422**DCL-ENT
M$CONFIG    8383**DCL-ENT
M$CORRES    8358**DCL-ENT
M$CPEXIT    8367**DCL-ENT
M$CVM    8391**DCL-ENT
M$CVOL    8356**DCL-ENT
M$DCLFLD    8383**DCL-ENT
M$DEACTIVATE    8373**DCL-ENT
M$DELREC    8355**DCL-ENT
M$DEQ    8420**DCL-ENT
M$DETACH    8375**DCL-ENT
M$DEVICE    8357**DCL-ENT
M$DISPLAY    8420**DCL-ENT
M$DISPRES    8360**DCL-ENT
M$DLIB    8366**DCL-ENT
M$DRIBBLE    8383**DCL-ENT
M$DRTN    8411**DCL-ENT
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:37   
M$DSUSER    8368**DCL-ENT
M$ENQ    8419**DCL-ENT
M$EOM    8378**DCL-ENT
M$ERASE    8384**DCL-ENT
M$ERR    8365**DCL-ENT
M$ERRMSG    8416**DCL-ENT
M$EVENT    8408**DCL-ENT
M$EXHUME    8417**DCL-ENT
M$EXIT    8365**DCL-ENT
M$EXTEND    8357**DCL-ENT
M$FDP    8389**DCL-ENT
M$FDS    8388**DCL-ENT
M$FEBOOT    8381**DCL-ENT
M$FECTL    8382**DCL-ENT
M$FEDUMP    8381**DCL-ENT
M$FID    8416**DCL-ENT
M$FINDPROC    8370**DCL-ENT
M$FSUSER    8368**DCL-ENT
M$FVP    8390**DCL-ENT
M$FWCG    8374**DCL-ENT
M$GBPL    8394**DCL-ENT
M$GDDL    8390**DCL-ENT
M$GDP    8389**DCL-ENT
M$GDS    8388**DCL-ENT
M$GETDCB    8359**DCL-ENT
M$GETMOUSE    8399**DCL-ENT
M$GETPM    8400**DCL-ENT
M$GJOB    8418**DCL-ENT
M$GLINEATTR    8378**DCL-ENT
M$GOODPP    8393**DCL-ENT
M$GPLATEN    8386**DCL-ENT
M$GPROMPT    8385**DCL-ENT
M$GTRMATTR    8379**DCL-ENT
M$GTRMCTL    8377**DCL-ENT
M$GTRMTAB    8380**DCL-ENT
M$GVP    8389**DCL-ENT
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:38   
M$HELP    8416**DCL-ENT
M$INT    8408**DCL-ENT
M$INTRTN    8369**DCL-ENT
M$IOQ    8404**DCL-ENT
M$JOBSTATS    8418**DCL-ENT
M$KEYIN    8358**DCL-ENT
M$LDEV    8353**DCL-ENT
M$LDTRC    8366**DCL-ENT
M$LIMIT    8359**DCL-ENT
M$LINES    8358**DCL-ENT
M$LINK    8365**DCL-ENT
M$MADMUCK    8361**DCL-ENT
M$MAKUSER    8392**DCL-ENT
M$MBS    8360**DCL-ENT
M$MDFFLD    8384**DCL-ENT
M$MERC    8409**DCL-ENT
M$MERCS    8410**DCL-ENT
M$MIRROR    8404**DCL-ENT
M$MONINFO    8421**DCL-ENT
M$MPL    8394**DCL-ENT
M$NODEINFO    8385**DCL-ENT
M$NXTUSR    8419**DCL-ENT
M$OCMSG    8417**DCL-ENT
M$OLAY    8365**DCL-ENT
M$OPEN    8353**DCL-ENT
M$PAS    8394**DCL-ENT
M$PATHCON    8417**DCL-ENT
M$PDS    8388**DCL-ENT
M$PFIL    8355**DCL-ENT
M$PLATEN    8379**DCL-ENT
M$PRECORD    8357**DCL-ENT
M$PROCNAME    8370**DCL-ENT
M$PROFILE    8381**DCL-ENT
M$PROMPT    8377**DCL-ENT
M$RACST    8361**DCL-ENT
M$RDSYSLOG    8402**DCL-ENT
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:39   
M$READ    8354**DCL-ENT
M$RELDCB    8359**DCL-ENT
M$RELRES    8360**DCL-ENT
M$RELSTARF    8362**DCL-ENT
M$REM    8362**DCL-ENT
M$RENV    8409**DCL-ENT
M$REQUIRE    8361**DCL-ENT
M$RETRY    8410**DCL-ENT
M$RETRYS    8410**DCL-ENT
M$REW    8356**DCL-ENT
M$RLSFLD    8384**DCL-ENT
M$RPRIV    8412**DCL-ENT
M$RSPP    8391**DCL-ENT
M$RSWITCH    8413**DCL-ENT
M$RUE    8419**DCL-ENT
M$SAD    8392**DCL-ENT
M$SAVE    8368**DCL-ENT
M$SCON    8369**DCL-ENT
M$SCREECH    8367**DCL-ENT
M$SENV    8409**DCL-ENT
M$SETFMA    8353**DCL-ENT
M$SETFP    8382**DCL-ENT
M$SINPUT    8380**DCL-ENT
M$SLCFLD    8385**DCL-ENT
M$SMOUSE    8399**DCL-ENT
M$SMPRT    8391**DCL-ENT
M$SPRIV    8412**DCL-ENT
M$SSWITCH    8412**DCL-ENT
M$STATE    8421**DCL-ENT
M$STD    8393**DCL-ENT
M$STIMER    8407**DCL-ENT
M$STLPP    8390**DCL-ENT
M$STRAP    8407**DCL-ENT
M$STRMATTR    8379**DCL-ENT
M$STRMCTL    8377**DCL-ENT
M$STRMTAB    8380**DCL-ENT
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:40   
M$SYMBIO    8418**DCL-ENT
M$SYSCON    8404**DCL-ENT
M$SYSID    8422**DCL-ENT
M$TDCLOSE    8403**DCL-ENT
M$TDIO    8403**DCL-ENT
M$TDOPEN    8402**DCL-ENT
M$TDREQCPU    8403**DCL-ENT
M$TEMPWROC    8397**DCL-ENT
M$TIME    8420**DCL-ENT
M$TRAP    8407**DCL-ENT
M$TRMISC    8382**DCL-ENT
M$TRMPRG    8378**DCL-ENT
M$TRTN    8411**DCL-ENT
M$TRUNC    8354**DCL-ENT
M$TTIMER    8407**DCL-ENT
M$UC    8377**DCL
M$UMPL    8394**DCL-ENT
M$UNFID    8416**DCL-ENT
M$UNLATCH    8373**DCL-ENT
M$UNSHARE    8370**DCL-ENT
M$USRFIELD    8413**DCL-ENT
M$VIRTUAL    8388**DCL-ENT
M$WAIT    8411**DCL-ENT
M$WEOF    8356**DCL-ENT
M$WRITE    8354**DCL-ENT
M$WRSYSLOG    8402**DCL-ENT
M$XCON    8408**DCL-ENT
M$XCONRTN    8369**DCL-ENT
M$XEQTIME    8421**DCL-ENT
M$XFLUSH    8362**DCL-ENT
M$XMOUSE    8399**DCL-ENT
M$XXX    8365**DCL-ENT
M$YC    8367**DCL-ENT
RETURNN    9229**LABEL
SDD$    8529**DCL
SDD_L6$    8531**DCL
PL6.E3A0      #001=DDB$RESTORE File=DDB$RESTORE.:E05TSI                          TUE 07/29/97 13:46 Page:41   
ZITEM$    8530**DCL
ZITEM_L6$    8532**DCL
