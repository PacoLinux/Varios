/*M* WP6_IMPORTY - SECOND STEP IN IMPORTING WP6 FILES TO CAP */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
USCR :  PROC MAIN;
 
DCL M$SI DCB;
DCL M$OU DCB;
DCL I SBIN STATIC;
DCL SIZE SBIN STATIC;
 
DCL BUF CHAR(512) STATIC SYMDEF;
DCL OBUF CHAR(512) STATIC SYMDEF;
 
%INCLUDE CP_6;
 
%FPT_READ (FPTN=READ_SI,BUF=BUF,DCB=M$SI);
 
%FPT_WRITE (FPTN=WRITE_OU,DCB=M$OU,BUF=BUF);
 
%FPT_CLOSE (FPTN=CLOSE_OU,DISP=SAVE,DCB=M$OU);
 
%F$DCB;
 
TOP:    ;
 
        CALL READ;
        IF SUBSTR(BUF,0,4) ~= '.US '
          AND SUBSTR(BUF,0,4)~='.us '
        THEN DO;
           CALL WRITE;
           GOTO TOP;
           END;
 
TOP2:   ;
 
        CALL READ;
        IF SUBSTR(BUF,0,5) = '.NUS ' OR
          SUBSTR (BUF,0,5) = '.nus ' THEN
           GOTO TOP;
        IF SUBSTR(BUF,0,1) = '.'
        THEN
        DO;
           CALL WRITE;
           GOTO TOP2;
           END;
 
        DO I=0 TO SIZE-1;
           SUBSTR(OBUF,I*3,1)='_';
           SUBSTR(OBUF,I*3+1,1)=BINASC(8);
           SUBSTR(OBUF,I*3+2,1)=SUBSTR(BUF,I,1);
           END;
        IF SUBSTR(BUF,I,1)=',' OR SUBSTR(BUF,I,1)='.' OR
          SUBSTR(BUF,I,1)=';' OR SUBSTR(BUF,I,1)='!' OR
          SUBSTR(BUF,I,1)=':' OR SUBSTR(BUF,I,1)='?' THEN
        DO;
           SUBSTR(OBUF,I*3,1)=SUBSTR(BUF,I,1);
           SIZE=SIZE*3-2;
           END;
        ELSE
           SIZE=SIZE*3;
 
        BUF=OBUF;
        CALL WRITE;
        GOTO TOP2;
 
WRITE:  PROC;
        IF SIZE=0 THEN
        DO;
           BUF= ' ';
           WRITE_OU.BUF_.BOUND = 0;
           END;
        ELSE
           WRITE_OU.BUF_.BOUND = SIZE-1;
        WRITE_OU.BUF_.BUF$ = ADDR(BUF);
        CALL M$WRITE (WRITE_OU);
        RETURN;
END WRITE;
 
READ:   PROC;
        BUF=' ';
        CALL M$READ (READ_SI) WHENALTRETURN DO;
           CALL M$CLOSE(CLOSE_OU);
           CALL M$EXIT;
           END;
        SIZE=DCBADDR(DCBNUM(M$SI))->F$DCB.ARS#;
        RETURN;
END READ;
 
END USCR;
