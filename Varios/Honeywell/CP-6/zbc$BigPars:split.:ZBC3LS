

11:49 AUG 20 '97 zbc$BigPars.:ZBC3TSI                                      1    
    1      !File: pathlength.h
    2      #define PATHLENGTH 1024  /* max. length of path to file      */
    3
    4
    5      !File: errout.h
    6      #define   ERROUT      STDERR   /* file pointer for writing messages */
    7      #define   MAXERR_LINE 5  /* maximum number of error messages given
    8                   on the same input line.    */
    9
   10
   11      !File: idfsize.h
   12      #define   IDFSIZE  64 /* maximum significant length of an identifier */
   13
   14
   15      !File: numsize.h
   16      #define   NUMSIZE  256   /* maximum length of a numeric constant  */
   17
   18
   19      !File: nparams.h
   20      #define   NPARAMS 64  /* maximum number of parameters of macros */
   21
   22
   23      !File: ifdepth.h
   24      #define   IFDEPTH  256   /* maximum number of nested if-constructions */
   25
   26
   27      !File: maxincl.h
   28      #define   MAXINCL  20 /* maximum number of #include directories */
   29
   30
   31      !File: density.h
   32      #define   DENSITY  2  /* see switch.[ch] for an explanation   */
   33
   34
   35      !File: lapbuf.h
   36      #define   LAPBUF   4096  /* size of macro actual parameter buffer */
   37
11:49 AUG 20 '97 zbc$BigPars.:ZBC3TSI                                      2    
   38
   39      !File: strsize.h
   40      #define ISTRSIZE   32 /* minimum number of bytes allocated for
   41                   storing a string     */
   42      #define RSTRSIZE   8  /* step size in enlarging the memory for
   43                   the storage of a string    */
   44
   45
   46      !File: target_sizes.h
   47      #define MAXSIZE    8  /* the maximum of the SZ_* constants   */
   48
   49      /* target machine sizes  */
   50      #define   SZ_CHAR     (arith)1
   51      #define   SZ_SHORT (arith)4
   52      #define SZ_WORD    (arith)4
   53      #define   SZ_INT      (arith)4
   54      #define   SZ_LONG     (arith)4
   55      #ifndef NOFLOAT
   56      #define   SZ_FLOAT (arith)4
   57      #define   SZ_DOUBLE   (arith)8
   58      #endif NOFLOAT
   59      #define   SZ_POINTER  (arith)4
   60
   61      /* target machine alignment requirements   */
   62      #define   AL_CHAR     1
   63      #define   AL_SHORT SZ_SHORT
   64      #define AL_WORD    SZ_WORD
   65      #define   AL_INT      SZ_WORD
   66      #define   AL_LONG     SZ_WORD
   67      #ifndef NOFLOAT
   68      #define   AL_FLOAT SZ_WORD
   69      #define   AL_DOUBLE   SZ_DOUBLE
   70      #endif NOFLOAT
   71      #define   AL_POINTER  SZ_WORD
   72      #define AL_STRUCT  1
   73      #define AL_UNION   1
   74
11:49 AUG 20 '97 zbc$BigPars.:ZBC3TSI                                      3    
   75
   76      !File: botch_free.h
   77      #undef BOTCH_FREE  1  /* when defined, botch freed memory, as a check */
   78
   79
   80      !File: dataflow.h
   81      #define DATAFLOW   1  /* produce some compile-time xref   */
   82
   83
   84      !File: debug.h
   85      #define DEBUG      1  /* perform various self-tests    */
   86
   87
   88      !File: use_tmp.h
   89      #define USE_TMP    1  /* collect exa, exp, ina and inp commands
   90                   and let them precede the rest of
   91                   the generated compact code */
   92
   93
   94      !File: parbufsize.h
   95      #define PARBUFSIZE 1024
   96
   97
   98      !File: textsize.h
   99      #define ITEXTSIZE  8  /* 1st piece of memory for repl. text  */
  100      #define RTEXTSIZE  8  /* stepsize for enlarging repl.text */
  101
  102
  103      !File: inputtype.h
  104      #undef INP_READ_IN_ONE   1  /* read input file in one  */
  105
  106
  107      !File: nopp.h
  108      #undef NOPP     1  /* if NOT defined, use built-int preprocessor */
  109
  110
  111      !File: nobitfield.h
11:49 AUG 20 '97 zbc$BigPars.:ZBC3TSI                                      4    
  112      #undef NOBITFIELD  1  /* if NOT defined, implement bitfields */
  113
  114
  115      !File: spec_arith.h
  116      /* describes internal compiler arithmetics */
  117      #undef SPECIAL_ARITHMETICS  /* something different from native long */
  118
  119
  120      !File: static.h
  121      #define GSTATIC       /* for large global "static" arrays */
  122
  123
  124      !File: nofloat.h
  125      #undef NOFLOAT     1  /* if NOT defined, floats are implemented */
  126      #define FLOATOPT   1  /* if defined, optimize floats w/double arith */
  127
  128
  129      !File: noRoption.h
  130      #undef NOROPTION   1  /* if NOT defined, R option is implemented */
  131
  132
  133      !File: nocross.h
  134      #undef NOCROSS     1  /* if NOT defined, cross compiler */
  135
  136
  137
  138      !File: dataFirst.h
  139      #define DATAFIRST 1    /* Produce em code for data before functions */
  140
  141      #if DATAFIRST
  142      extern int EM_File_No;
  143      #endif
  144
  145
  146
  147
  148      !File: obufsize.h
11:49 AUG 20 '97 zbc$BigPars.:ZBC3TSI                                      5    
  149      #define OBUFSIZE   8192  /* output buffer size */
  150
  151
  152      !File: dobits.h
  153      #define DOBITS     1  /* use trick to reduce symboltable accesses */
  154
  155
  156      !File: line_prefix.h
  157      #define LINE_PREFIX   "#"   /* prefix for generated line directives,
  158                   either "#" or "#line"
  159                */
  160

