

CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=1  
        1         1             #ifndef NORCSID
        2         2             static char rcsid[] = "$Header: getline.c,v 2.3 87/03/10 01:38:49 ceriel Exp $
                               ";
        3         3             #endif
        4         4
        5         5             #include <stdio:h>
        6         6             #include "zbo$param:h"
        7         7             #include "zbo$types:h"
        8         8             #include "zbo$line:h"
        9         9             #include "zbo$lookup:h"
       10        10             #include "zbo$alloc:h"
       11        11             #include "zbo$proinf:h"
       12        12             #include "em_spec:h"
       13        13             #include "em_pseu:h"
       14        14             #include "em_flag:h"
       15        15             #include "em_mes:h"
       16        16             #include "zbo$ext:h"
       17        17
       18        18             /*
       19        19              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
       20        20              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
       21        21              *
       22        22              * Author: Hans van Staveren
       23        23              */
       24        24
       25        25
       26        26             static  short   tabval;         /* temp store for shorts */
       27        27             static  offset  tabval2;        /* temp store for offsets */
       28        28             static  char    string[IDL+1];  /* temp store for names */
       29        29
       30        30             /*
       31        31              * The next constants are close to sp_cend for fast switches
       32        32              */
       33        33             #define INST    256     /* instruction:         number in tabval */
       34        34             #define PSEU    257     /* pseudo:              number in tabval */
       35        35             #define ILBX    258     /* label:               number in tabval */
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=2  
       36        36             #define DLBX    259     /* symbol:              name in string[] */
       37        37             #define CSTX1   260     /* short constant:      stored in tabval */
       38        38             #define CSTX2   261     /* offset:              value in tabval2 */
       39        39             #define VALX1   262     /* symbol+short:        in string[] and tabval */
       40        40             #define VALX2   263     /* symbol+offset:       in string[] and tabval2 */
       41        41             #define ATEOF   264     /* bumped into end of file */
       42        42
       43        43             #define readbyte getchar
       44        44
       45        45             short readshort() {
       46        46    1         register int l_byte, h_byte;
       47        47    1
       48        48    1         l_byte = readbyte();
       49        49    1         h_byte = readbyte();
       50        50    1         if ( h_byte>=256 ) h_byte -= 512 ;
       51        51    1         return l_byte | (h_byte*512) ;
       52        52    1        }
       53        53
       54        54             #ifdef LONGOFF
       55        55             offset readoffset() {
       56        56    1         register long l;
       57        57    1         register int h_byte;
       58        58    1
       59        59    1         l = readbyte();
       60        60    1         l |= ((unsigned) readbyte())*512 ;
       61        61    1         l |= readbyte()*512L*512L ;
       62        62    1         h_byte = readbyte() ;
       63        63    1         if ( h_byte>=256 ) h_byte -= 512 ;
       64        64    1         return l | (h_byte*512L*512*512L) ;
       65        65    1        }
       66        66             #endif
       67        67
       68        68             draininput() {
       69        69    1
       70        70    1         /*
       71        71    1          * called when MES ERR is encountered.
       72        72    1          * Drain input in case it is a pipe.
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=3  
       73        73    1          */
       74        74    1
       75        75    1         while (getchar() != EOF)
       76        76    1            ;
       77        77    1        }
       78        78
       79        79             short getint() {
       80        80    1
       81        81    1         switch(table2()) {
       82        82    2         default: error("int expected");
       83        83    2         case CSTX1:
       84        84    2            return(tabval);
       85        85    2         }
       86        86    1        }
       87        87
       88        88             sym_p getsym(status) int status; {
       89        89    1
       90        90    1         switch(table2()) {
       91        91    2         default:
       92        92    2            error("symbol expected");
       93        93    2         case DLBX:
       94        94    2            return(symlookup(string,status,0));
       95        95    2         case sp_pnam:
       96        96    2            return(symlookup(string,status,SYMPRO));
       97        97    2         }
       98        98    1        }
       99        99
      100       100             offset getoff() {
      101       101    1
      102       102    1         switch (table2()) {
      103       103    2         default: error("offset expected");
      104       104    2         case CSTX1:
      105       105    2            return((offset) tabval);
      106       106    2        #ifdef LONGOFF
      107       107    2         case CSTX2:
      108       108    2            return(tabval2);
      109       109    2        #endif
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=4  
      110       110    2         }
      111       111    1        }
      112       112
      113       113             make_string(n) int n; {
      114       114    1
      115       115    1         sprintf(string,".%u",n);
      116       116    1        }
      117       117
      118       118             inident() {
      119       119    1         register n;
      120       120    1         register char *p = string;
      121       121    1         register c;
      122       122    1
      123       123    1         n = getint();
      124       124    1         while (n--) {
      125       125    2            c = readbyte();
      126       126    2            if (p<&string[IDL])
      127       127    2               *p++ = c;
      128       128    2         }
      129       129    1         *p++ = 0;
      130       130    1        }
      131       131
      132       132             int table3(n) int n; {
      133       133    1
      134       134    1         switch (n) {
      135       135    2         case sp_ilb1:   tabval = readbyte(); return(ILBX);
      136       136    2         case sp_ilb2:   tabval = readshort(); return(ILBX);
      137       137    2         case sp_dlb1:   make_string(readbyte()); return(DLBX);
      138       138    2         case sp_dlb2:   make_string(readshort()); return(DLBX);
      139       139    2         case sp_dnam:   inident(); return(DLBX);
      140       140    2         case sp_pnam:   inident(); return(n);
      141       141    2         case sp_cst2:   tabval = readshort(); return(CSTX1);
      142       142    2        #ifdef LONGOFF
      143       143    2         case sp_cst4:   tabval2 = readoffset(); return(CSTX2);
      144       144    2        #endif
      145       145    2         case sp_doff:   if (table2()!=DLBX) error("symbol expected");
      146       146    2               switch(table2()) {
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=5  
      147       147    3               default:        error("offset expected");
      148       148    3               case CSTX1:             return(VALX1);
      149       149    3        #ifdef LONGOFF
      150       150    3               case CSTX2:             return(VALX2);
      151       151    3        #endif
      152       152    3               }
      153       153    2         default:        return(n);
      154       154    2         }
      155       155    1        }
      156       156
      157       157             int table1() {
      158       158    1         register n;
      159       159    1
      160       160    1         n = readbyte();
      161       161    1         if (n == EOF)
      162       162    1            return(ATEOF);
      163       163    1         if ((n <= sp_lmnem) && (n >= sp_fmnem)) {
      164       164    2            tabval = n;
      165       165    2            return(INST);
      166       166    2         }
      167       167    1         if ((n <= sp_lpseu) && (n >= sp_fpseu)) {
      168       168    2            tabval = n;
      169       169    2            return(PSEU);
      170       170    2         }
      171       171    1         if ((n < sp_filb0 + sp_nilb0) && (n >= sp_filb0)) {
      172       172    2            tabval = n - sp_filb0;
      173       173    2            return(ILBX);
      174       174    2         }
      175       175    1         return(table3(n));
      176       176    1        }
      177       177
      178       178             int table2() {
      179       179    1         register n;
      180       180    1
      181       181    1         n = readbyte();
      182       182    1         if ((n < sp_fcst0 + sp_ncst0) && (n >= sp_fcst0)) {
      183       183    2            tabval = n - sp_zcst0;
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=6  
      184       184    2            return(CSTX1);
      185       185    2         }
      186       186    1         return(table3(n));
      187       187    1        }
      188       188
      189       189             getlines() {
      190       190    1         register line_p lnp;
      191       191    1         register instr;
      192       192    1         int i ;
      193       193    1
      194       194    1         curpro.mes16p = NULL ;
      195       195    1         curpro.lastline = NULL ;
      196       196    1         curpro.freg = NULL ;
      197       197    1         for ( i=0; i< NNUMHASH ; i++)
      198       198    1          curpro.numhash[ i ] = NULL ;
      199       199    1            for(;;) {
      200       200    2         linecount++;
      201       201    2         switch(table1()) {
      202       202    3         default:
      203       203    3            error("unknown instruction byte");
      204       204    3            /* NOTREACHED */
      205       205    3
      206       206    3         case ATEOF:
      207       207    3            if (prodepth!=0)
      208       208    3               error("procedure unterminated at eof");
      209       209    3            process();
      210       210    3            return;
      211       211    3         case INST:
      212       212    3            tstinpro();
      213       213    3            instr = tabval;
      214       214    3            break;
      215       215    3         case DLBX:
      216       216    3            lnp = newline(OPSYMBOL);
      217       217    3            lnp->l_instr = ps_sym;
      218       218    3            lnp->l_a.la_sp= symlookup(string,DEFINING,0);
      219       219    3            lnp->l_next = curpro.lastline;
      220       220    3            curpro.lastline = lnp;
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=7  
      221       221    3            continue;
      222       222    3         case ILBX:
      223       223    3            tstinpro();
      224       224    3            lnp = newline(OPNUMLAB);
      225       225    3            lnp->l_instr = op_lab;
      226       226    3            lnp->l_a.la_np = numlookup((unsigned) tabval);
      227       227    3            if (lnp->l_a.la_np->n_line != (line_p) 0)
      228       228    3               error("label %u multiple defined",(unsigned) tabval);
      229       229    3            lnp->l_a.la_np->n_line = lnp;
      230       230    3            lnp->l_next = curpro.lastline;
      231       231    3            curpro.lastline = lnp;
      232       232    3            continue;
      233       233    3         case PSEU:
      234       234    3            if(inpseudo(tabval))
      235       235    3               return;
      236       236    3            continue;
      237       237    3         }
      238       238    2
      239       239    2         /*
      240       240    2          * Now we have an instruction number in instr
      241       241    2          * There might be an operand, look for it
      242       242    2          */
      243       243    2
      244       244    2         if ((em_flag[instr-sp_fmnem]&EM_PAR)==PAR_NO) {
      245       245    3            lnp = newline(OPNO);
      246       246    3         } else switch(table2()) {
      247       247    3         default:
      248       248    3            error("unknown offset byte");
      249       249    3         case sp_cend:
      250       250    3            lnp = newline(OPNO);
      251       251    3            break;
      252       252    3         case CSTX1:
      253       253    3            if ((em_flag[instr-sp_fmnem]&EM_PAR)!= PAR_B) {
      254       254    4               if (CANMINI(tabval))
      255       255    4                  lnp = newline(tabval+Z_OPMINI);
      256       256    4               else {
      257       257    5                  lnp = newline(OPSHORT);
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=8  
      258       258    5                  lnp->l_a.la_short = tabval;
      259       259    5               }
      260       260    4            } else {
      261       261    4               lnp = newline(OPNUMLAB);
      262       262    4               lnp->l_a.la_np = numlookup((unsigned) tabval);
      263       263    4            }
      264       264    3            break;
      265       265    3        #ifdef LONGOFF
      266       266    3         case CSTX2:
      267       267    3            lnp = newline(OPOFFSET);
      268       268    3            lnp->l_a.la_offset = tabval2;
      269       269    3            break;
      270       270    3        #endif
      271       271    3         case ILBX:
      272       272    3            tstinpro();
      273       273    3            lnp = newline(OPNUMLAB);
      274       274    3            lnp->l_a.la_np = numlookup((unsigned) tabval);
      275       275    3            break;
      276       276    3         case DLBX:
      277       277    3            lnp = newline(OPSYMBOL);
      278       278    3            lnp->l_a.la_sp = symlookup(string,OCCURRING,0);
      279       279    3            break;
      280       280    3         case sp_pnam:
      281       281    3            lnp = newline(OPSYMBOL);
      282       282    3            lnp->l_a.la_sp = symlookup(string,OCCURRING,SYMPRO);
      283       283    3            break;
      284       284    3         case VALX1:
      285       285    3            lnp = newline(OPSVAL);
      286       286    3            lnp->l_a.la_sval.lasv_sp = symlookup(string,OCCURRING,0);
      287       287    3            lnp->l_a.la_sval.lasv_short = tabval;
      288       288    3            break;
      289       289    3        #ifdef LONGOFF
      290       290    3         case VALX2:
      291       291    3            lnp = newline(OPLVAL);
      292       292    3            lnp->l_a.la_lval.lalv_sp = symlookup(string,OCCURRING,0);
      293       293    3            lnp->l_a.la_lval.lalv_offset = tabval2;
      294       294    3            break;
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=9  
      295       295    3        #endif
      296       296    3         }
      297       297    2         lnp->l_instr = instr;
      298       298    2         lnp->l_next = curpro.lastline;
      299       299    2         curpro.lastline = lnp;
      300       300    2            }
      301       301    1        }
      302       302
      303       303             argstring(length,abp) offset length; register argb_p abp; {
      304       304    1
      305       305    1           abp->ab_next = NULL ;
      306       306    1         while (length--) {
      307       307    2            if (abp->ab_index == NARGBYTES)
      308       308    2           { abp = abp->ab_next = newargb();
      309       309    3             abp->ab_next = NULL; }
      310       310    2            abp->ab_contents[abp->ab_index++] = readbyte();
      311       311    2         }
      312       312    1        }
      313       313
      314       314             line_p  arglist(n) int n; {
      315       315    1         line_p  lnp;
      316       316    1         register arg_p ap,*app;
      317       317    1         bool moretocome;
      318       318    1         offset length;
      319       319    1
      320       320    1
      321       321    1         /*
      322       322    1          * creates an arglist with n elements
      323       323    1          * if n == 0 the arglist is variable and terminated by sp_cend
      324       324    1          */
      325       325    1
      326       326    1         lnp = newline(OPLIST);
      327       327    1         app = &lnp->l_a.la_arg;
      328       328    1         moretocome = TRUE;
      329       329    1         do {
      330       330    2            switch(table2()) {
      331       331    3            default:
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=10 
      332       332    3               error("unknown byte in arglist");
      333       333    3            case CSTX1:
      334       334    3               tabval2 = (offset) tabval;
      335       335    3            case CSTX2:
      336       336    3               *app = ap = newarg(ARGOFF);
      337       337    3           ap->a_next = NULL ;
      338       338    3               ap->a_a.a_offset = tabval2;
      339       339    3               app = &ap->a_next;
      340       340    3               break;
      341       341    3            case ILBX:
      342       342    3               tstinpro();
      343       343    3               *app = ap = newarg(ARGNUM);
      344       344    3           ap->a_next = NULL ;
      345       345    3               ap->a_a.a_np = numlookup((unsigned) tabval);
      346       346    3               ap->a_a.a_np->n_flags |= NUMDATA;
      347       347    3               app = &ap->a_next;
      348       348    3               break;
      349       349    3            case DLBX:
      350       350    3               *app = ap = newarg(ARGSYM);
      351       351    3           ap->a_next = NULL ;
      352       352    3               ap->a_a.a_sp = symlookup(string,OCCURRING,0);
      353       353    3               app = &ap->a_next;
      354       354    3               break;
      355       355    3            case sp_pnam:
      356       356    3               *app = ap = newarg(ARGSYM);
      357       357    3           ap->a_next = NULL ;
      358       358    3               ap->a_a.a_sp = symlookup(string,OCCURRING,SYMPRO);
      359       359    3               app = &ap->a_next;
      360       360    3               break;
      361       361    3            case VALX1:
      362       362    3               tabval2 = (offset) tabval;
      363       363    3            case VALX2:
      364       364    3               *app = ap = newarg(ARGVAL);
      365       365    3           ap->a_next = NULL ;
      366       366    3               ap->a_a.a_val.av_sp = symlookup(string,OCCURRING,0);
      367       367    3               ap->a_a.a_val.av_offset = tabval2;
      368       368    3               app = &ap->a_next;
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=11 
      369       369    3               break;
      370       370    3            case sp_scon:
      371       371    3               *app = ap = newarg(ARGSTR);
      372       372    3           ap->a_next = NULL ;
      373       373    3               length = getoff();
      374       374    3               argstring(length,&ap->a_a.a_string);
      375       375    3               app = &ap->a_next;
      376       376    3               break;
      377       377    3            case sp_icon:
      378       378    3               *app = ap = newarg(ARGICN);
      379       379    3               goto casecon;
      380       380    3            case sp_ucon:
      381       381    3               *app = ap = newarg(ARGUCN);
      382       382    3               goto casecon;
      383       383    3            case sp_fcon:
      384       384    3               *app = ap = newarg(ARGFCN);
      385       385    3            casecon:
      386       386    3               length = getint();
      387       387    3               ap->a_a.a_con.ac_length = (short) length;
      388       388    3           ap->a_next = NULL ;
      389       389    3               argstring(getoff(),&ap->a_a.a_con.ac_con);
      390       390    3               app = &ap->a_next;
      391       391    3               break;
      392       392    3            case sp_cend:
      393       393    3               moretocome = FALSE;
      394       394    3            }
      395       395    2            if (n && (--n) == 0)
      396       396    2               moretocome = FALSE;
      397       397    2         } while (moretocome);
      398       398    1         return(lnp);
      399       399    1        }
      400       400
      401       401             offset aoff(ap,n) register arg_p ap; {
      402       402    1
      403       403    1         while (n>0) {
      404       404    2            if (ap != (arg_p) 0)
      405       405    2               ap = ap->a_next;
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=12 
      406       406    2            n--;
      407       407    2         }
      408       408    1         if (ap == (arg_p) 0)
      409       409    1            error("too few parameters");
      410       410    1         if (ap->a_typ != ARGOFF)
      411       411    1            error("offset expected");
      412       412    1         return(ap->a_a.a_offset);
      413       413    1        }
      414       414
      415       415             int inpseudo(n) short n; {
      416       416    1         register line_p lnp,head,tail;
      417       417    1         short           n1,n2;
      418       418    1         proinf savearea;
      419       419    1        #ifdef PSEUBETWEEN
      420       420    1         static int pcount=0;
      421       421    1
      422       422    1         if (pcount++ >= PSEUBETWEEN && prodepth==0) {
      423       423    2            process();
      424       424    2            pcount=0;
      425       425    2         }
      426       426    1        #endif
      427       427    1
      428       428    1         switch(n) {
      429       429    2         default:
      430       430    2            error("unknown pseudo");
      431       431    2         case ps_bss:
      432       432    2         case ps_hol:
      433       433    2            lnp = arglist(3);
      434       434    2            break;
      435       435    2         case ps_rom:
      436       436    2         case ps_con:
      437       437    2            lnp = arglist(0);
      438       438    2            break;
      439       439    2         case ps_ina:
      440       440    2         case ps_inp:
      441       441    2         case ps_exa:
      442       442    2         case ps_exp:
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=13 
      443       443    2            lnp = newline(OPSYMBOL);
      444       444    2            lnp->l_a.la_sp = getsym(NOTHING);
      445       445    2            break;
      446       446    2         case ps_exc:
      447       447    2            n1 = getint(); n2 = getint();
      448       448    2            if (n1 != 0 && n2 != 0) {
      449       449    3               tail = curpro.lastline;
      450       450    3               while (--n2) tail = tail->l_next;
      451       451    3               head = tail;
      452       452    3               while (n1--) head = head->l_next;
      453       453    3               lnp = tail->l_next;
      454       454    3               tail->l_next = head->l_next;
      455       455    3               head->l_next = curpro.lastline;
      456       456    3               curpro.lastline = lnp;
      457       457    3            }
      458       458    2            lnp = newline(OPNO);
      459       459    2            break;
      460       460    2         case ps_mes:
      461       461    2            lnp = arglist(0);
      462       462    2            switch((int) aoff(lnp->l_a.la_arg,0)) {
      463       463    3            case ms_err:
      464       464    3               draininput();
      465       465    3               exit(8);
      466       466    3            case ms_opt:
      467       467    3               nflag = TRUE; break;
      468       468    3            case ms_emx:
      469       469    3               wordsize = aoff(lnp->l_a.la_arg,1);
      470       470    3               pointersize = aoff(lnp->l_a.la_arg,2);
      471       471    3        #ifndef LONGOFF
      472       472   *S*              if (wordsize>2)
      473       473   *S*                 error("This optimizer cannot handle wordsize>2");
      474       474   *S*       #endif
      475       475    3               break;
      476       476    3            case ms_gto:
      477       477    3               curpro.gtoproc=1;
      478       478    3               /* Treat as empty mes ms_reg */
      479       479    3            case ms_reg:
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=14 
      480       480    3               tstinpro();
      481       481    3               regvar(lnp->l_a.la_arg->a_next);
      482       482    3               oldline(lnp);
      483       483    3               lnp=newline(OPNO);
      484       484    3               n=ps_exc;   /* kludge to force out this line */
      485       485    3               break;
      486       486    3           case ms_fun:
      487       487    3             lnp->l_next = NULL ;
      488       488    3             lnp->l_instr = n ;
      489       489    3             curpro.mes16p = lnp ;
"zbo$getline:c.:ZBC3TSI", line 489: (warning) incompatible pointers in =
      490       490    3             return(0) ;
      491       491    3            }
      492       492    2            break;
      493       493    2         case ps_pro:
      494       494    2            if (prodepth>0)
      495       495    2               savearea = curpro;
      496       496    2            else
      497       497    2               process();
      498       498    2            curpro.symbol = getsym(DEFINING);
      499       499    2            switch(table2()) {
      500       500    3            case sp_cend:
      501       501    3               curpro.localbytes = (offset) -1;
      502       502    3               break;
      503       503    3            case CSTX1:
      504       504    3               tabval2 = (offset) tabval;
      505       505    3            case CSTX2:
      506       506    3               curpro.localbytes = tabval2;
      507       507    3               break;
      508       508    3            default:
      509       509    3               error("bad second arg of PRO");
      510       510    3            }
      511       511    2            prodepth++;
      512       512    2            curpro.gtoproc=0;
      513       513    2            if (prodepth>1) {
      514       514    3               register i;
      515       515    3
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=15 
      516       516    3            curpro.mes16p = (mes_p) 0;
      517       517    3               curpro.lastline = (line_p) 0;
      518       518    3               curpro.freg = (reg_p) 0;
      519       519    3               for(i=0;i<NNUMHASH;i++)
      520       520    3                  curpro.numhash[i] = (num_p) 0;
      521       521    3               getlines();
      522       522    3               curpro = savearea;
      523       523    3               prodepth--;
      524       524    3            }
      525       525    2            return(0);
      526       526    2         case ps_end:
      527       527    2            if (prodepth==0)
      528       528    2               error("END misplaced");
      529       529    2            switch(table2()) {
      530       530    3            case sp_cend:
      531       531    3               if (curpro.localbytes == (offset) -1)
      532       532    3                  error("bytes for locals still unknown");
      533       533    3               break;
      534       534    3            case CSTX1:
      535       535    3               tabval2 = (offset) tabval;
      536       536    3            case CSTX2:
      537       537    3               if (curpro.localbytes != (offset) -1 && curpro.localbytes != tabval2)
      538       538    3                  error("inconsistency in number of bytes for locals");
      539       539    3               curpro.localbytes = tabval2;
      540       540    3               break;
      541       541    3            }
      542       542    2            process();
      543       543    2            curpro.symbol = (sym_p) 0;
      544       544    2            if (prodepth==1) {
      545       545    3               prodepth=0;
      546       546    3        #ifdef PSEUBETWEEN
      547       547    3               pcount=0;
      548       548    3        #endif
      549       549    3               return(0);
      550       550    3            } else
      551       551    2               return(1);
      552       552    2         }
CC.C03    File=zbo$getline:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=16 
      553       553    1         lnp->l_instr = n;
      554       554    1         lnp->l_next = curpro.lastline;
      555       555    1         curpro.lastline = lnp;
      556       556    1         return(0);
      557       557    1        }
      558       558
      559       559             tstinpro() {
      560       560    1
      561       561    1         if (prodepth==0)
      562       562    1            error("This is not allowed outside a procedure");
      563       563    1        }
      564       564
---  Include file information  ---

   stdio:h.:LIBRARY. is referenced
   zbo$param:h.:ZBC3TOU. is referenced
   zbo$types:h.:ZBC3TOU. is referenced
   zbo$line:h.:ZBC3TOU. is referenced
   zbo$lookup:h.:ZBC3TOU. is referenced
   zbo$alloc:h.:ZBC3TOU. is referenced
   zbo$proinf:h.:ZBC3TOU. is referenced
   em_spec:h.:ZBC3TOU. is referenced
   em_pseu:h.:ZBC3TOU. is referenced
   em_flag:h.:ZBC3TOU. is referenced
   em_mes:h.:ZBC3TOU. is referenced
   zbo$ext:h.:ZBC3TOU. is referenced

1 warning was detected in the file zbo$getline:c.:ZBC3TSI
