

14:08 JUL 28 '97 AS_SUPER_C.:E05SI                                         1    
    1      /*M*  AS_SUPER_C:  BASED STRUCTURES FOR SUPER.      */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
    8            ECU=3,CSU=3,SDI=3                                           */
    9      /*  Warning - warning - warning - the addition of items to the
   10         AS_USERS structure is dangerous.  There are processors (super)
   11         tools (USERS.X) which use this structure and any change to its
   12         size will cause hassles.  This is supposed to be the final shape
   13         of this structure for C00.  If you must change it, please widely
   14         publicize that you are doing so.  The abduction of a * field is
   15         totally cool tho'.
   16      */
   17            %MACRO AS_USERS(STR_NAME=AS_USERS,
   18                          STCLASS=BASED,
   19                          LAST=";",
   20                          AL_PRIV = '0'B ) ;
   21      %LSET LISTSUB = '1'B;
   22      %LSET LISTEXP = '1'B;
   23      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   24      %IF (SUBSTR(STR,0,6)='STATIC') OR
   25          (SUBSTR(STR,0,8)='CONSTANT') OR
   26          (SUBSTR(STR,0,3)='EXT');
   27      %LSET INIT=CHARTEXT('INIT');
   28      %ELSE;
   29      %LSET INIT=CHARTEXT('/*');
   30      %ENDIF;
   31      /*
   32      */
   33      DCL 1 STR_NAME STCLASS,
   34             2 ACCT CHAR(8) %INIT(' ') %CHARTEXT('/**/'),
   35             2 NAME CHAR(12) %INIT(' ') %CHARTEXT('/**/'),
   36             2 NAT_LANG CHAR(1) %INIT(' ') %CHARTEXT('/**/'),            /* Native language */
   37             2 STEPACCNT BIT(1) UNAL %INIT('0'B) %CHARTEXT('/**/'),
14:08 JUL 28 '97 AS_SUPER_C.:E05SI                                         2    
   38             2 BATOK BIT(1) UNAL %INIT( '1'B ) %CHARTEXT('/**/'),
   39             2 * BIT(7) UNAL %INIT('0'B) %CHARTEXT('/**/'),
   40             2 BATNUM SBIN HALF UNAL %INIT(-1) %CHARTEXT('/**/'),
   41             2 BUDGET,
   42                3 MAXC SBIN %INIT(-1) %CHARTEXT('/**/'), /* 'MCHARGES' for user */
   43                3 ACCUM SBIN %INIT(0) %CHARTEXT('/**/'), /*Charges accumulated by user*/
   44                3 PMAXC SBIN %INIT(-1) %CHARTEXT('/**/'), /* Proj. admin. record only;
   45                                                           'MCHARGES for project */
   46                3 PROJ_ALLOWED REDEF PMAXC SBIN, /* Default project record only;
   47                                      maximum number of users allowed in this project
   48                                      and all sub-projects. */
   49                3 PACCUM SBIN %INIT(0) %CHARTEXT('/**/'), /* Proj. admin. record only;
   50                                                     charges accumulated by project */
   51                3 PROJ_CREATED REDEF PACCUM SBIN, /* Default project record only;
   52                                                number of users created in project */
   53                3 MACCT,
   54                   4 COUNT UBIN(9) UNAL %INIT(4) %CHARTEXT('/**/'),
   55                   4 ACCT CHAR(8) UNAL %INIT('NONE') %CHARTEXT('/**/'),
   56                   4 NAME CHAR(12) UNAL %INIT(' ') %CHARTEXT('/**/'),
   57                3 MACCT_ REDEF MACCT,
   58                   4 * UBIN BYTE UNAL,
   59                   4 TEXT CHAR(20) UNAL,
   60                3 BKACC BIT(1) UNAL %INIT('1'B) %CHARTEXT('/**/'),
   61                3 BUDLIM BIT(1) UNAL %INIT( '0'B ) %CHARTEXT('/**/'),
   62                3 PCHARGES BIT(1) UNAL %INIT( '1'B ) %CHARTEXT('/**/'),
   63                3 ICHARGES BIT(1) UNAL %INIT( '1'B ) %CHARTEXT('/**/'),
   64                3 BLINDACCTNG BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
   65                3 * BIT(4) %INIT('0'B)%CHARTEXT('/**/'),
   66                3 MAX_PROJECTS SBIN(18) UNAL %INIT(0) %CHARTEXT('/**/'),
   67                                        /* Proj. admin. record only;
   68                                           maximum number of sub-projects allowed. */
   69                3 SUB_PROJS REDEF MAX_PROJECTS SBIN(18) UNAL,
   70                                        /* Default project record only;
   71                                           number of sub-projects created. */
   72             2 BILL(0:3) CHAR(6) UNAL %INIT('1','1','1','1') %CHARTEXT('/**/'),
   73             2 KEY(0:71) BIT(1) UNAL %INIT('0'B*0) %CHARTEXT('/**/'),
   74             2 *      CHAR(23) %INIT(' ') %CHARTEXT('/**/'),
14:08 JUL 28 '97 AS_SUPER_C.:E05SI                                         3    
   75             2 OUTPUTPRIO UBIN(9) UNAL %INIT(7) %CHARTEXT('/**/'),
   76                                                            /* Services */
   77                                                            /*   Batch   = 0 ,
   78                                                                 ghost   = 1 ,
   79                                                                 on-line = 2,
   80                                                                 tp      = 3
   81                                                                             */
   82             2 MLO(0:3) UBIN WORD UNAL %INIT( 99999, 99999, 99999, 99999 ) %CHARTEXT('/**/'),
   83             2 DLO(0:3) UBIN WORD UNAL %INIT( 1000, 99999, 99999, 99999 ) %CHARTEXT('/**/'),
   84             2 MDO(0:3) UBIN WORD UNAL %INIT( 99999, 99999, 99999, 99999 ) %CHARTEXT('/**/'),
   85             2 DDO(0:3) UBIN WORD UNAL %INIT( 50, 99999, 99999, 99999 ) %CHARTEXT('/**/'),
   86             2 MPO(0:3) UBIN WORD UNAL %INIT( 99999, 99999, 99999, 99999 ) %CHARTEXT('/**/'),
   87             2 DPO(0:3) UBIN WORD UNAL %INIT( 100, 99999, 99999, 99999 ) %CHARTEXT('/**/'),
   88             2 MPDIS(0:3) UBIN WORD UNAL %INIT( 99999, 99999, 99999, 99999 ) %CHARTEXT('/**/'),
   89             2 DPDIS(0:3) UBIN WORD UNAL %INIT( 99999, 99999, 99999, 99999 ) %CHARTEXT('/**/'),
   90             2 MTDIS(0:3) UBIN WORD UNAL %INIT( 99999, 99999, 99999, 99999 ) %CHARTEXT('/**/'),
   91             2 DTDIS(0:3) UBIN WORD UNAL %INIT( 2000, 2000, 9999, 2000 ) %CHARTEXT('/**/'),
   92             2 MFPOOLS(0:3) UBIN BYTE UNAL %INIT( 31, 31, 31, 31 ) %CHARTEXT('/**/'),
   93             2 DFPOOLS(0:3) UBIN BYTE UNAL %INIT( 10, 10, 10, 10 ) %CHARTEXT('/**/'),
   94             2 MMPRIO(0:3) UBIN BYTE UNAL %INIT( 7, 7, 7, 7 ) %CHARTEXT('/**/'),
   95             2 DMPRIO(0:3) UBIN BYTE UNAL %INIT( 7, 7, 7, 7 ) %CHARTEXT('/**/'),
   96             2 *     CHAR(36)                          /* Peripheral */
   97                %INIT(' ')%CHARTEXT('/**/'),
   98             2 HPSN CHAR(6) %INIT('SYS') %CHARTEXT('/**/'),
   99             2 * UBIN(18) UNAL %INIT(0) %CHARTEXT('/**/'),
  100                                                                 /*   Command processor   */
  101             2 CPROC(0:3) ALIGNED,
  102                3 NAME,
  103                   4 CNT UBIN BYTE UNAL %INIT(4*0) %CHARTEXT('/**/'),
  104                   4 TEXT CHAR(31) UNAL %INIT('IBEX'*0) %CHARTEXT('/**/'),
  105                                                       /*   Last command processor   */
  106             2 LASTCPROC(0:3) ALIGNED,
  107                3 NAME,
  108                   4 CNT UBIN BYTE UNAL %INIT(0*0) %CHARTEXT('/**/'),
  109                   4 TEXT CHAR(31) UNAL %INIT(' '*0) %CHARTEXT('/**/'),
  110                                                            /*   Privileges   */
  111             2 PRIV (0:3) BIT(36) ALIGNED %INIT(AL_PRIV*0) %CHARTEXT('/**/'),
14:08 JUL 28 '97 AS_SUPER_C.:E05SI                                         4    
  112             2 PPRIV (0:3) BIT(36) ALIGNED %INIT('0'B*0) %CHARTEXT('/**/'),
  113                                                            /*   Batch   = 0 ,
  114                                                                 ghost   = 1 ,
  115                                                                 on-line = 2,
  116                                                                 tp      = 3
  117                                                                           */
  118             2 QUAN(0:3) SBIN HALF UNAL %INIT(0*0) %CHARTEXT('/**/'),
  119             2 *(0:3) UBIN HALF UNAL %INIT(0*0) %CHARTEXT('/**/'),
  120             2 PRIOB(0:3) SBIN BYTE UNAL %INIT(0*0) %CHARTEXT('/**/'),
  121             2 MEXP SBIN %INIT(-1) %CHARTEXT('/**/'),                  /* Expiration */
  122             2 DEXP SBIN %INIT(-1) %CHARTEXT('/**/'),                  /* Expiration */
  123             2 FLAGS ALIGNED,
  124                3 *  BIT(5) UNAL %INIT('0'B) %CHARTEXT('/**/'),
  125                3 STARSACC BIT(1) UNAL %INIT('0'B) %CHARTEXT('/**/'),   /* *S accounting */
  126                3 * BIT(30) UNAL %INIT('0'B) %CHARTEXT('/**/'),
  127             2 INSTUSE CHAR(16) %INIT(' ') %CHARTEXT('/**/'),            /* Installation use */
  128                                                            /*  Time  */
  129             2 MTIME(0:3) UBIN WORD UNAL %INIT( 59999400, 59999400, 59999400,59999400 ) %CHARTEXT('/**/'),
  130             2 DTIME(0:3) UBIN WORD UNAL %INIT( 60000,59999400,59999400,59999400 ) %CHARTEXT('/**/'),
  131                                                            /*  Memory  */
  132             2 MMEM(0:3) UBIN HALF UNAL %INIT( 511, 511, 511, 511 ) %CHARTEXT('/**/'),
  133             2 DMEM(0:3) UBIN HALF UNAL %INIT( 64, 256, 128, 256 ) %CHARTEXT('/**/'),
  134             2 PSDOL(0:7),
  135                3 PSDO_NAME CHAR(8) UNAL %INIT( ' '*0 ) %CHARTEXT('/**/'),
  136                3 BMAX UBIN HALF UNAL %INIT( 0*0 ) %CHARTEXT('/**/'),
  137                3 GMAX UBIN HALF UNAL %INIT( 0*0 ) %CHARTEXT('/**/'),
  138                3 OMAX UBIN HALF UNAL %INIT( 0*0 ) %CHARTEXT('/**/'),
  139                3 TMAX UBIN HALF UNAL %INIT( 0*0 ) %CHARTEXT('/**/'),
  140             2 TOT_TYPES UBIN HALF UNAL %INIT( 2 )%CHARTEXT('/**/') ,    /* Total res. Types */
  141             2 RESL( 0:7 ) UNAL ,     /* Resources */
  142                3 RNAME CHAR(2) UNAL %INIT( 'MT', 'DP', ' '*0)%CHARTEXT('/**/'),
  143                3 BMAX UBIN HALF UNAL %INIT( 4, 4, 0*0 )%CHARTEXT('/**/'),
  144                3 GMAX UBIN HALF UNAL %INIT( 4, 4, 0*0 )%CHARTEXT('/**/') ,
  145                3 OMAX UBIN HALF UNAL %INIT( 4, 4, 0*0 ) %CHARTEXT('/**/'),
  146                3 TMAX UBIN HALF UNAL %INIT( 4, 4, 0*0 ) %CHARTEXT('/**/'),
  147             2 SETUP_PERM(0:3) BIT(1) UNAL %INIT('0'B*0)%CHARTEXT('/**/'),
  148             2 BANNER_PERM (0:9) BIT (1) UNAL %INIT ('0'B*0)%CHARTEXT ('/**/'),
14:08 JUL 28 '97 AS_SUPER_C.:E05SI                                         5    
  149             2 PERM_BLOCK REDEF BANNER_PERM BIT (10),
  150             2 SETUP_FORCE(0:3) BIT(1) UNAL %INIT('0'B*0)%CHARTEXT('/**/'),
  151                  /* This bit marks if the setup can be bypassed with the
  152                     ns option during logon.
  153                  */
  154                                         /* Setup contains the index into the
  155                                            pool of text, it is referenced
  156                                            with the following text structure.
  157                                            An index of
  158                                            -1 implies that the setup command
  159                                            for that mode does not exist.  */
  160             2 SETUP(0:3) SBIN HALF UNAL %INIT(-1*0)%CHARTEXT('/**/'),
  161             2 BANNER (0:9) SBIN HALF UNAL %INIT (-1*0)%CHARTEXT ('/**/'),
  162             2 SETUP_CHRA ALIGNED,
  163                3 SIZE UBIN %INIT (0) %CHARTEXT ('/**/'),
  164                3 TXT CHAR (1024) %INIT (' ') %CHARTEXT ('/**/'),
  165                3 TXT_CHR (0:1023) REDEF TXT CHAR (1),
  166                3 TXT_UBIN (0:1023) REDEF TXT UBIN (9) UNAL,
  167                         /* At the third level- SIZE_ is the total size of
  168                            the used area in the pool of setup and banner
  169                            text items. SETUPMAX-SIZE_=free space remaining.
  170                            Txt is the area containing setup and banner
  171                            TXT_CHR and TXT_UBIN are ways of accessing the
  172                            text for those commands.                     */
  173             2 LAST_LOGON_TIME BIT(36) ALIGNED %INIT('0'B) %CHARTEXT('/**/'),
  174                         /* Uts of last successful logon, from slug. */
  175             2 BAD_LOGON_CNT UBIN HALF UNAL %INIT(0) %CHARTEXT('/**/'),
  176              /* Number of failed logon attempts logged since the last
  177                 system exit.                                           */
  178             2 RFUH1 UBIN HALF UNAL %INIT(0) %CHARTEXT('/**/'),
  179               /* Reserved for future use half word.  */
  180             2 LOGINS   (0:3) ,
  181                3 LAST_LOGON_TIME UBIN %INIT (0*0) %CHARTEXT ('/**/'),
  182                         /* Uts of last successful logon, from slug. */
  183                3 BAD_LOGON_CNT  UBIN  %INIT (0*0) %CHARTEXT ('/**/'),
  184               /* No. of failed logon attempts logged since the last
  185                  system exit.  */
14:08 JUL 28 '97 AS_SUPER_C.:E05SI                                         6    
  186             2  PASSWORD_CHANGE_TIME UBIN %INIT (0) %CHARTEXT ('/**/'),
  187               /* Uts of the last password change. Currently not used. */
  188             2  MAXENQ(0:3) UBIN (18) UNAL %INIT (0*0) %CHARTEXT ('/**/'),
  189               /* Maximum number of enq/deq packets for this user. */
  190             2  RFUW1  UBIN  %INIT (0) %CHARTEXT ('/**/'),
  191               /* Reserved for future use word. */
  192             2  RFUW2  UBIN  %INIT (0) %CHARTEXT ('/**/'),
  193             2  RFUW3  UBIN  %INIT (0) %CHARTEXT ('/**/'),
  194             2  RFUW4  UBIN  %INIT (0) %CHARTEXT ('/**/'),
  195             2  RFUW5  UBIN  %INIT (0) %CHARTEXT ('/**/')
  196      LAST
  197      %MEND ;
  198      %MACRO WILD_THING( NAME=WILD, STCLASS=AUTO );
  199      DCL 1 NAME ALIGNED STCLASS ,
  200             2 WILD BIT(1) UNAL ,
  201             2 * BIT(8) UNAL ,
  202             2 COUNT SBIN BYTE UNAL ,
  203             2 SPOT(0:11) ,
  204                3 LEN SBIN BYTE UNAL ,
  205                3 INDX SBIN BYTE UNAL ;
  206      %MEND;
  207      %MACRO MOVE_VLP( S_VLP=S_VLP, B$VLP=B$VLP, T_TYPE=T_TYPE ) ;
  208      %LSET LISTDIR='0'B;
  209      %LSET LISTEXP='1'B;
  210      %SPACE 1;
  211      PP$ -> PP$STRCT.TYPE = T_TYPE ;
  212      SIZE = LENGTHC( S_VLP ) ;
  213      PP$ -> PP$STRCT.SIZE = SIZE ;
  214      PP$ = PINCRC( PP$, 2 ) ;
  215      PP$ -> B$VLP = S_VLP ;
  216      PP$ = PINCRC( PP$, SIZE ) ;
  217      %MEND ;
  218                                                            /**/
  219
  220      %MACRO AS$PROJ_HEADER ( NAME=AS$PROJ_HEADER, STCLASS=BASED, LAST=";" );
  221      %LSET LISTDIR='0'B;
  222      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
14:08 JUL 28 '97 AS_SUPER_C.:E05SI                                         7    
  223      %IF (SUBSTR(STR,0,6)='STATIC') OR
  224          (SUBSTR(STR,0,8)='CONSTANT') OR
  225          (SUBSTR(STR,0,3)='EXT');
  226      %LSET INIT=CHARTEXT('INIT');
  227      %ELSE;
  228      %LSET INIT=CHARTEXT('/*');
  229      %ENDIF;
  230      DCL 1 NAME STCLASS ALIGNED,
  231                                                  /* Creator of project */
  232             2 CREATOR CHAR(20) ALIGNED %INIT (' ') %CHARTEXT('/**/'),
  233                                                  /* Can modify default attributes */
  234             2 MODIFY_ATTR BIT(1) UNAL %INIT ('1'B) %CHARTEXT('/**/'),
  235             2 PROJ_REMOVED BIT(1) UNAL %INIT ('0'B) %CHARTEXT('/**/'),
  236             2 * BIT(16) UNAL %INIT ('0'B) %CHARTEXT('/**/'),
  237             2 SUB_PROJ_ACCTS UBIN HALF UNAL %INIT (0) %CHARTEXT('/**/'),
  238                                                  /* Max. num granules this packset */
  239             2 MAX_NUM_GRANS UBIN WORD ALIGNED %INIT (0) %CHARTEXT('/**/'),
  240                                                  /* Granules given to users */
  241             2 GRANS_ACCUM SBIN WORD ALIGNED %INIT (0) %CHARTEXT('/**/'),
  242                                                  /* Skeleton for accounts */
  243             2 SKELETON CHAR(8) %INIT ('?') %CHARTEXT('/**/'),
  244                                                  /* Max. number of accounts on pack*/
  245             2 MAX_NUM_ACCTS UBIN WORD ALIGNED %INIT (0) %CHARTEXT('/**/'),
  246                                                  /* Number of accounts initialized */
  247             2 NUM_ACCTS SBIN WORD ALIGNED %INIT (0) %CHARTEXT('/**/') LAST
  248      %MEND;
  249      %MACRO AS$PROJ ( NAME=AS$PROJ, STCLASS=BASED );
  250      %AS$PROJ_HEADER( NAME=NAME, STCLASS=STCLASS, LAST="," );
  251             2 ATTRIBUTES ALIGNED,              /* Default attribute list */
  252                3 COUNT UBIN HALF UNAL,
  253                3 TEXT CHAR(NAME.ATTRIBUTES.COUNT);
  254      %MEND;
  255      %MACRO AS$PROJ_ACCT_LIST ( NAME=AS$PROJ_ACCT_LIST, STCLASS=BASED );
  256
  257      DCL 1 NAME(0:0) STCLASS ALIGNED ,
  258             2 ACCT CHAR(8),
  259             2 GRANS UBIN ALIGNED;
14:08 JUL 28 '97 AS_SUPER_C.:E05SI                                         8    
  260      %MEND;
  261
  262      %MACRO SUPER_TO_PIG( NAME=SUPER_TO_PIG, STCLASS=BASED,
  263                           SUBS(YES='1'B,NO='0'B)='1'B, VARY(YES='1'B,NO='0'B)='1'B);
  264
  265      DCL 1 NAME STCLASS ALIGNED ,
  266             2 TYPE UBIN BYTE UNAL ,       /* Type of transaction */
  267
  268      %IF SUBS='1'B;
  269      %EQU CREATE_ACCT   = 0;              /* Create an account       */
  270      %EQU MODIFY_ACCT   = 1;              /* Modify an account       */
  271      %EQU LIST_ACCT     = 2;              /* List an account         */
  272      %EQU VALIDATE_ATTR = 3;              /* Validate attribute list */
  273      %EQU DELETE_ACCT   = 4;              /* Delete an account       */
  274      %ENDIF;
  275
  276             2 PROJ BIT(1) UNAL,           /* '1'b => project administrator
  277                                              '0'b => system  adminstrator */
  278             2 WIDTH UBIN(8) UNAL ,       /* Width of output line */
  279             2 SUPER,                      /* Project or system administrator  */
  280                3 ACCT CHAR(8) UNAL ,      /* who is using super. */
  281                3 UNAME CHAR(12) UNAL ,
  282             2 RESUPER REDEF SUPER CHAR(20) ,
  283             2 PROJECT,                    /* Name of project */
  284                3 ACCT CHAR(8) UNAL,
  285                3 UNAME CHAR(12) UNAL,
  286             2 PROJECT_TEXT REDEF PROJECT CHAR(20),
  287             2 PACKSET CHAR(6) UNAL ,      /* Packset name */
  288             2 ACCT CHAR(8) UNAL ,         /* File management account */
  289             2 ATTR,
  290                3 COUNT UBIN HALF UNAL ,   /* Length of attribute list */
  291      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'     ');
  292      %IF (((SUBSTR(STR,0,5)='BASED') OR SUBSTR(STR,0,1)=' ') AND VARY='1'B);
  293                3 LIST CHAR(NAME.ATTR.COUNT);/* Attribute list */
  294      %ELSE;
  295                3 LIST CHAR(4800);         /* Attribute list */
  296      %ENDIF;
14:08 JUL 28 '97 AS_SUPER_C.:E05SI                                         9    
  297
  298      %MEND;
  299
  300      %MACRO PIG_TO_SUPER( NAME=PIG_TO_SUPER, STCLASS=BASED ) ;
  301
  302      DCL 1 NAME STCLASS ALIGNED,
  303             2 ERR UBIN ,                   /* 0 => transaction ok, else error code */
  304             2 COUNT UBIN HALF UNAL,
  305      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'     ');
  306      %IF ((SUBSTR(STR,0,5)='BASED') OR (SUBSTR(STR,0,1)=' '));
  307             2 TEXT(0:0) CHAR(1);
  308      %ELSE;
  309             2 TEXT(0:4095) CHAR(1);  /* Largest text super will accept */
  310      %ENDIF;
  311      %MEND;
  312      %MACRO AS_MOD_USER( NAME=AS_MOD_USER, STCLASS=" " );
  313
  314      DCL 1 NAME STCLASS ALIGNED,
  315             2 PASSWORD BIT(1),
  316             2 NAT_LANG BIT(1),
  317             2 STEPACCNT BIT(1),
  318             2 BATNUM BIT(1),
  319             2 STARSACC BIT(1),
  320             2 SETUP BIT(4),
  321             2 SETUP_A(0:3) REDEF SETUP BIT(1),
  322             2 PERM_BIT BIT(4),
  323             2 PERM_A(0:3) REDEF PERM_BIT BIT(1) ,
  324             2 FORCE_BIT BIT(4),
  325             2 FORCE_A(0:3) REDEF FORCE_BIT BIT(1) ,
  326             2 BANNER BIT (10),
  327             2 BANNER_A (0:9) REDEF BANNER BIT (1),
  328             2 BANNER_PERM BIT (10),
  329             2 BANNER_PERM_A (0:9) REDEF BANNER_PERM BIT (1),
  330             2 CPROC BIT(4),
  331             2 CPROC_A(0:3) REDEF CPROC BIT(1),
  332             2 LASTCPROC BIT(4),
  333             2 LASTCPROC_A(0:3) REDEF LASTCPROC BIT(1),
14:08 JUL 28 '97 AS_SUPER_C.:E05SI                                         10   
  334             2 BILL BIT(4),
  335             2 BILL_A(0:3) REDEF BILL BIT(1),
  336             2 WSN BIT(1),
  337             2 HSET BIT(1),
  338             2 PROFILE BIT(1),
  339             2 ACCESS BIT(5),
  340             2 ACCESS_A(0:4) REDEF ACCESS BIT(1),
  341             2 PRIV,
  342                3 * (0:%(36*4-1)) UBIN(2) UNAL,
  343             2 PRIV_A(0:%(36*4-1)) REDEF PRIV UBIN(2) UNAL,
  344             2 PPRIV,
  345                3 * (0:%(36*4-1)) UBIN(2) UNAL,
  346             2 PPRIV_A(0:%(36*4-1)) REDEF PPRIV UBIN(2) UNAL,
  347             2 QUAN BIT(4),
  348             2 QUAN_A(0:3) REDEF QUAN BIT(1),
  349             2 MAXENQ BIT(4),
  350             2 MAXENQ_A(0:3) REDEF MAXENQ BIT(1),
  351             2 PRIOB BIT(4),
  352             2 PRIOB_A(0:3) REDEF PRIOB BIT(1),
  353             2 BUDGET,
  354                3 PCHARGES BIT(1),
  355                3 ICHARGES BIT(1),
  356                3 BKACC BIT(1),
  357                3 BUDLIM BIT(1),
  358                3 BLINDACCTNG BIT(1),
  359                3 MAXC BIT(1),
  360                3 SIGN BIT(1),
  361                3 MACCT BIT(1),
  362                3 ACCUM BIT(1),
  363             2 LIMITS,
  364                3 OUTPUTPRIO BIT(1),
  365                3 EXPIRE,
  366                   4 MEXP BIT(1),
  367                   4 DEXP BIT(1),
  368                3 TIME BIT(8),
  369                3 TIME_A(0:3) REDEF TIME,
  370                   4 MTIME BIT(1),
14:08 JUL 28 '97 AS_SUPER_C.:E05SI                                         11   
  371                   4 DTIME BIT(1),
  372                3 MEM BIT(8),
  373                3 MEM_A(0:3) REDEF MEM,
  374                   4 MMEM BIT(1),
  375                   4 DMEM BIT(1),
  376                3 LO BIT(8),
  377                3 LO_A(0:3) REDEF LO,
  378                   4 MLO BIT(1),
  379                   4 DLO BIT(1),
  380                3 DO_ BIT(8),
  381                3 DO_A(0:3) REDEF DO_,
  382                   4 MDO BIT(1),
  383                   4 DDO BIT(1),
  384                3 PO BIT(8),
  385                3 PO_A(0:3) REDEF PO,
  386                   4 MPO BIT(1),
  387                   4 DPO BIT(1),
  388                3 PDIS BIT(8),
  389                3 PDIS_A(0:3) REDEF PDIS,
  390                   4 MPDIS BIT(1),
  391                   4 DPDIS BIT(1),
  392                3 TDIS BIT(8),
  393                3 TDIS_A(0:3) REDEF TDIS,
  394                   4 MTDIS BIT(1),
  395                   4 DTDIS BIT(1),
  396                3 FPOOLS BIT(8),
  397                3 FPOOLS_A(0:3) REDEF FPOOLS,
  398                   4 MFPOOLS BIT(1),
  399                   4 DFPOOLS BIT(1),
  400                3 MPRIO BIT(8),
  401                3 MPRIO_A(0:3) REDEF MPRIO,
  402                   4 MMPRIO BIT(1),
  403                   4 DMPRIO BIT(1),
  404             2 PSEUDO BIT(1),
  405             2 RESOURCE BIT(1),
  406             2 KEY,
  407                3 * (0:71) UBIN(2) UNAL,
14:08 JUL 28 '97 AS_SUPER_C.:E05SI                                         12   
  408             2 KEY_A(0:71) REDEF KEY UBIN(2) UNAL ,
  409             2 FACCOUNT BIT(1) UNAL ,
  410             2 FEBILL BIT(4),
  411             2 FEBILL_A(0:3) REDEF FEBILL BIT(1) ,
  412             2 FEMINTS BIT(4),
  413             2 FEMINTS_A(0:3) REDEF FEMINTS BIT(1) ,
  414             2 FEMFPRG BIT(1),
  415             2 FEPRIV,
  416                3 * (0:%(36*4-1)) UBIN(2) UNAL,
  417             2 FEPRIV_A(0:%(36*4-1)) REDEF FEPRIV UBIN(2) UNAL,
  418             2 FEPPRIV,
  419                3 * (0:%(36*4-1)) UBIN(2) UNAL,
  420             2 FEPPRIV_A(0:%(36*4-1)) REDEF FEPPRIV UBIN(2) UNAL,
  421             2 FEMTIME BIT(4),
  422             2 FEMTIME_A(0:3) REDEF FEMTIME BIT(1),
  423             2 FEMMEM BIT(4),
  424             2 FEMMEM_A(0:3) REDEF FEMMEM BIT(1),
  425             2 FEMACCTMEM BIT(1),
  426             2 FEDBACCN BIT(1),
  427             2 FECXTMEM BIT(8),
  428             2 FECXTMEM_A(0:7) REDEF FECXTMEM BIT(1),
  429             2 FEPSEUDO BIT(1) ,
  430             2 FERESOURCE BIT(1) ,
  431             2 FESTEPACCNT BIT(1),
  432             2 LAST_LOGON_TIME BIT (1);
  433
  434      %MEND;

