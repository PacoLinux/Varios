VERSION A02

PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:1    
        1        1        /*M*    XSL$SOCKET5             BSD4.3 Socket Library for CP-6, part 5  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=4,DCI=8,DTI=0,ENI=4,ECI=4,CSI=4,DIN=4,SDI=0 */
        8        8
        9        9        XSL$HALFCVT: PROC( NUM) NOAUTO;
       10       10
       11       11        %MACRO H9TO8( I=0);
       12       12                /* get i'th halfword */
       13       13            TEMP = HW( I);
       14       14                /* is it big enough to require conversion? */
       15       15            IF TEMP >= 256 THEN
       16       16                    /* expand one 16-of-18 halfword to two 8-of-9 bytes */
       17       17                HW( I) = TEMP + ( 256 * ( TEMP / 256));
       18       18        %MEND;
       19       19
       20       20        %MACRO H8TO9( I=0);
       21       21                /* get i'th halfword */
       22       22            TEMP = HW( I);
       23       23                /* is it big enough to require conversion? */
       24       24            IF TEMP >= 512 THEN DO;
       25       25                    /* compress two 8-of-9 bytes to one 16-of-18 halfword */
       26       26                TEMP = (TEMP + MOD( TEMP, 256)) / 2;
       27       27                IF TEMP > 32767 THEN
       28       28                        /* original value negative, so OR in bits to make negative */
       29       29                    TEMP = TEMP + %BITBIN( '600000'O );
       30       30                HW( I) = TEMP;
       31       31                END;
       32       32        %MEND;
       33       33
       34       34    1       DCL XSL_KEYBUF$ PTR CONSTANT SYMDEF INIT( ADDR( XSL_KEYBUF));
       35       35
       36       36            /* KEYBUF is in this module so that we can get halfway decent
       37       37               code out of PL6 when doing the 9-to-8 and 8-to-9 conversions. */
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:2    
       38       38    1       DCL XSL_KEYBUF CHAR(64) STATIC SYMDEF;
       39       39    1       DCL HW(0:31) REDEF XSL_KEYBUF UBIN HALF HALIGNED;
       40       40    1       DCL NUM SBIN;
       41       41    1       DCL TEMP UBIN;
       42       42
       43       43    1   XSL$H9TO8: ENTRY( NUM);
       44       44
       45       45            /* Convert first NUM halfwords of KEYBUF so M$WRITE won't lose bits. */
       46       46            /* Macro H9TO8 assumes these halfword values are non-negative. */
       47       47            /* No more than five halfwords need to be converted in a XSL$xxxRQS. */
       48       48            /* Halfword zero is msgCode, which is guaranteed small enough. */
       49       49    1       IF NUM < 3 THEN GOTO DO_2;
       50       50    1       ELSE IF NUM = 3 THEN GOTO DO_3;
       51       51    1           ELSE IF NUM = 4 THEN GOTO DO_4;
       52       52            %H9TO8( I=4);
       53       60    1   DO_4:;
       54       61            %H9TO8( I=3);
       55       69    1   DO_3:;
       56       70            %H9TO8( I=2);
       57       78    1   DO_2:;
       58       79            %H9TO8( I=1);
       59       87    1       RETURN;
       60       88
       61       89    1   XSL$H8TO9: ENTRY( NUM);
       62       90
       63       91            /* Convert first NUM halfwords of KEYBUF so hw integers look correct. */
       64       92            /* Macro H8TO9 assumes hw values are signed, so does sign extension. */
       65       93            /* No more than five halfwords need to be converted in a XSL$xxxRSP. */
       66       94            /* Halfword zero is msgCode, which is guaranteed small enough. */
       67       95    1       IF NUM < 3 THEN GOTO UNDO_2;
       68       96    1       ELSE IF NUM = 3 THEN GOTO UNDO_3;
       69       97    1           ELSE IF NUM = 4 THEN GOTO UNDO_4;
       70       98            %H8TO9( I=4);
       71      111    1   UNDO_4:;
       72      112            %H8TO9( I=3);
       73      125    1   UNDO_3:;
       74      126            %H8TO9( I=2);
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:3    
       75      139    1   UNDO_2:;
       76      140            %H8TO9( I=1);
       77      153    1       RETURN;
       78      154
       79      155    1   END XSL$HALFCVT;
       80      156        %EOD;

PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:4    
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure XSL$HALFCVT.

   Procedure XSL$HALFCVT requires 127 words for executable code.
   Procedure XSL$HALFCVT is declared NOAUTO and requires 20 words of local(STATIC) storage.

PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:5    

 Object Unit name= XSL$HALFCVT                                File name= XSL$SOCKET5.:TCA2TOU
 UTS= NOV 16 '97 14:32:14.40 SUN                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    20     24  XSL$HALFCVT
    1  RoData even  UTS      1      1  XSL$HALFCVT
    2   Proc  even  none   127    177  XSL$HALFCVT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  XSL$HALFCVT
     2      3                  yes      Std        1  XSL$H9TO8
     2     67                  yes      Std        1  XSL$H8TO9

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  XSL_KEYBUF$                        0      2  XSL_KEYBUF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_STATIC_1
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:6    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:7    


        1        1        /*M*    XSL$SOCKET5             BSD4.3 Socket Library for CP-6, part 5  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=4,DCI=8,DTI=0,ENI=4,ECI=4,CSI=4,DIN=4,SDI=0 */
        8        8
        9        9        XSL$HALFCVT: PROC( NUM) NOAUTO;

      9  2 000000   000000 700200 xent  XSL$HALFCVT  TSX0  ! X66_STATIC_1
         2 000001   000000 000001 0                  ZERO    0,1
         2 000002   000005 710000 2                  TRA     s:49

       10       10
       11       11        %MACRO H9TO8( I=0);
       12       12                /* get i'th halfword */
       13       13            TEMP = HW( I);
       14       14                /* is it big enough to require conversion? */
       15       15            IF TEMP >= 256 THEN
       16       16                    /* expand one 16-of-18 halfword to two 8-of-9 bytes */
       17       17                HW( I) = TEMP + ( 256 * ( TEMP / 256));
       18       18        %MEND;
       19       19
       20       20        %MACRO H8TO9( I=0);
       21       21                /* get i'th halfword */
       22       22            TEMP = HW( I);
       23       23                /* is it big enough to require conversion? */
       24       24            IF TEMP >= 512 THEN DO;
       25       25                    /* compress two 8-of-9 bytes to one 16-of-18 halfword */
       26       26                TEMP = (TEMP + MOD( TEMP, 256)) / 2;
       27       27                IF TEMP > 32767 THEN
       28       28                        /* original value negative, so OR in bits to make negative */
       29       29                    TEMP = TEMP + %BITBIN( '600000'O );
       30       30                HW( I) = TEMP;
       31       31                END;
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:8    
       32       32        %MEND;
       33       33
       34       34    1       DCL XSL_KEYBUF$ PTR CONSTANT SYMDEF INIT( ADDR( XSL_KEYBUF));
       35       35
       36       36            /* KEYBUF is in this module so that we can get halfway decent
       37       37               code out of PL6 when doing the 9-to-8 and 8-to-9 conversions. */
       38       38    1       DCL XSL_KEYBUF CHAR(64) STATIC SYMDEF;
       39       39    1       DCL HW(0:31) REDEF XSL_KEYBUF UBIN HALF HALIGNED;
       40       40    1       DCL NUM SBIN;
       41       41    1       DCL TEMP UBIN;
       42       42
       43       43    1   XSL$H9TO8: ENTRY( NUM);

     43  2 000003   000000 700200 xent  XSL$H9TO8    TSX0  ! X66_STATIC_1
         2 000004   000000 000001 0                  ZERO    0,1

       44       44
       45       45            /* Convert first NUM halfwords of KEYBUF so M$WRITE won't lose bits. */
       46       46            /* Macro H9TO8 assumes these halfword values are non-negative. */
       47       47            /* No more than five halfwords need to be converted in a XSL$xxxRQS. */
       48       48            /* Halfword zero is msgCode, which is guaranteed small enough. */
       49       49    1       IF NUM < 3 THEN GOTO DO_2;

     49  2 000005   000001 470400 0                  LDP0    @NUM
         2 000006   000000 235100                    LDA     0,,PR0
         2 000007   000003 115007                    CMPA    3,DL
         2 000010   000053 604000 2                  TMI     DO_2

       50       50    1       ELSE IF NUM = 3 THEN GOTO DO_3;

     50  2 000011   000040 600000 2                  TZE     DO_3

       51       51    1           ELSE IF NUM = 4 THEN GOTO DO_4;

     51  2 000012   000004 115007                    CMPA    4,DL
         2 000013   000026 600000 2                  TZE     DO_4

PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:9    
       52       52            %H9TO8( I=4);

     54  2 000014   000004 236000 0                  LDQ     XSL_KEYBUF+2
         2 000015   000022 772000                    QRL     18
         2 000016   000022 756000 0                  STQ     TEMP

     56  2 000017   000400 116007                    CMPQ    256,DL
         2 000020   000026 602000 2                  TNC     DO_4

     58  2 000021   000010 772000                    QRL     8
         2 000022   000010 736000                    QLS     8
         2 000023   000022 036000 0                  ADLQ    TEMP
         2 000024   000000 620006                    EAX0    0,QL
         2 000025   000004 740000 0                  STX0    XSL_KEYBUF+2

     56  2 000026                       DO_4         null
       53       60    1   DO_4:;
       54       61            %H9TO8( I=3);

     63  2 000026   000003 236000 0                  LDQ     XSL_KEYBUF+1
         2 000027   777777 376007                    ANQ     -1,DL
         2 000030   000022 756000 0                  STQ     TEMP

     65  2 000031   000400 116007                    CMPQ    256,DL
         2 000032   000040 602000 2                  TNC     DO_3

     67  2 000033   000010 772000                    QRL     8
         2 000034   000010 736000                    QLS     8
         2 000035   000022 036000 0                  ADLQ    TEMP
         2 000036   000000 620006                    EAX0    0,QL
         2 000037   000003 440000 0                  SXL0    XSL_KEYBUF+1

     65  2 000040                       DO_3         null
       55       69    1   DO_3:;
       56       70            %H9TO8( I=2);

     72  2 000040   000003 235000 0                  LDA     XSL_KEYBUF+1
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:10   
         2 000041   000022 771000                    ARL     18
         2 000042   000022 755000 0                  STA     TEMP

     74  2 000043   000400 115007                    CMPA    256,DL
         2 000044   000053 602000 2                  TNC     DO_2

     76  2 000045   000022 236000 0                  LDQ     TEMP
         2 000046   000010 772000                    QRL     8
         2 000047   000010 736000                    QLS     8
         2 000050   000022 036000 0                  ADLQ    TEMP
         2 000051   000000 620006                    EAX0    0,QL
         2 000052   000003 740000 0                  STX0    XSL_KEYBUF+1

     74  2 000053                       DO_2         null
       57       78    1   DO_2:;
       58       79            %H9TO8( I=1);

     81  2 000053   000002 236000 0                  LDQ     XSL_KEYBUF
         2 000054   777777 376007                    ANQ     -1,DL
         2 000055   000022 756000 0                  STQ     TEMP

     83  2 000056   000400 116007                    CMPQ    256,DL
         2 000057   000065 602000 2                  TNC     s:87

     85  2 000060   000010 772000                    QRL     8
         2 000061   000010 736000                    QLS     8
         2 000062   000022 036000 0                  ADLQ    TEMP
         2 000063   000000 620006                    EAX0    0,QL
         2 000064   000002 440000 0                  SXL0    XSL_KEYBUF

       59       87    1       RETURN;

     87  2 000065   000000 221200 0                  LDX1  ! 0
         2 000066   000001 702211                    TSX2  ! 1,X1

       60       88
       61       89    1   XSL$H8TO9: ENTRY( NUM);
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:11   

     89  2 000067   000000 700200 xent  XSL$H8TO9    TSX0  ! X66_STATIC_1
         2 000070   000000 000001 0                  ZERO    0,1

       62       90
       63       91            /* Convert first NUM halfwords of KEYBUF so hw integers look correct. */
       64       92            /* Macro H8TO9 assumes hw values are signed, so does sign extension. */
       65       93            /* No more than five halfwords need to be converted in a XSL$xxxRSP. */
       66       94            /* Halfword zero is msgCode, which is guaranteed small enough. */
       67       95    1       IF NUM < 3 THEN GOTO UNDO_2;

     95  2 000071   000001 470400 0                  LDP0    @NUM
         2 000072   000000 235100                    LDA     0,,PR0
         2 000073   000003 115007                    CMPA    3,DL
         2 000074   000156 604000 2                  TMI     UNDO_2

       68       96    1       ELSE IF NUM = 3 THEN GOTO UNDO_3;

     96  2 000075   000136 600000 2                  TZE     UNDO_3

       69       97    1           ELSE IF NUM = 4 THEN GOTO UNDO_4;

     97  2 000076   000004 115007                    CMPA    4,DL
         2 000077   000117 600000 2                  TZE     UNDO_4

       70       98            %H8TO9( I=4);

    100  2 000100   000004 236000 0                  LDQ     XSL_KEYBUF+2
         2 000101   000022 772000                    QRL     18
         2 000102   000022 756000 0                  STQ     TEMP

    102  2 000103   001000 116007                    CMPQ    512,DL
         2 000104   000117 602000 2                  TNC     UNDO_4

    104  2 000105   000377 376007                    ANQ     255,DL
         2 000106   000022 036000 0                  ADLQ    TEMP
         2 000107   000001 772000                    QRL     1
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:12   
         2 000110   000022 756000 0                  STQ     TEMP

    105  2 000111   100000 116007                    CMPQ    32768,DL
         2 000112   000115 602000 2                  TNC     s:108

    107  2 000113   600000 036007                    ADLQ    -65536,DL
         2 000114   000022 756000 0                  STQ     TEMP

    108  2 000115   000000 620006                    EAX0    0,QL
         2 000116   000004 740000 0                  STX0    XSL_KEYBUF+2

    102  2 000117                       UNDO_4       null
       71      111    1   UNDO_4:;
       72      112            %H8TO9( I=3);

    114  2 000117   000003 236000 0                  LDQ     XSL_KEYBUF+1
         2 000120   777777 376007                    ANQ     -1,DL
         2 000121   000022 756000 0                  STQ     TEMP

    116  2 000122   001000 116007                    CMPQ    512,DL
         2 000123   000136 602000 2                  TNC     UNDO_3

    118  2 000124   000377 376007                    ANQ     255,DL
         2 000125   000022 036000 0                  ADLQ    TEMP
         2 000126   000001 772000                    QRL     1
         2 000127   000022 756000 0                  STQ     TEMP

    119  2 000130   100000 116007                    CMPQ    32768,DL
         2 000131   000134 602000 2                  TNC     s:122

    121  2 000132   600000 036007                    ADLQ    -65536,DL
         2 000133   000022 756000 0                  STQ     TEMP

    122  2 000134   000000 620006                    EAX0    0,QL
         2 000135   000003 440000 0                  SXL0    XSL_KEYBUF+1

    116  2 000136                       UNDO_3       null
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:13   
       73      125    1   UNDO_3:;
       74      126            %H8TO9( I=2);

    128  2 000136   000003 235000 0                  LDA     XSL_KEYBUF+1
         2 000137   000022 771000                    ARL     18
         2 000140   000022 755000 0                  STA     TEMP

    130  2 000141   001000 115007                    CMPA    512,DL
         2 000142   000156 602000 2                  TNC     UNDO_2

    132  2 000143   000022 236000 0                  LDQ     TEMP
         2 000144   000377 376007                    ANQ     255,DL
         2 000145   000022 036000 0                  ADLQ    TEMP
         2 000146   000001 772000                    QRL     1
         2 000147   000022 756000 0                  STQ     TEMP

    133  2 000150   100000 116007                    CMPQ    32768,DL
         2 000151   000154 602000 2                  TNC     s:136

    135  2 000152   600000 036007                    ADLQ    -65536,DL
         2 000153   000022 756000 0                  STQ     TEMP

    136  2 000154   000000 620006                    EAX0    0,QL
         2 000155   000003 740000 0                  STX0    XSL_KEYBUF+1

    130  2 000156                       UNDO_2       null
       75      139    1   UNDO_2:;
       76      140            %H8TO9( I=1);

    142  2 000156   000002 236000 0                  LDQ     XSL_KEYBUF
         2 000157   777777 376007                    ANQ     -1,DL
         2 000160   000022 756000 0                  STQ     TEMP

    144  2 000161   001000 116007                    CMPQ    512,DL
         2 000162   000175 602000 2                  TNC     s:153

    146  2 000163   000377 376007                    ANQ     255,DL
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:14   
         2 000164   000022 036000 0                  ADLQ    TEMP
         2 000165   000001 772000                    QRL     1
         2 000166   000022 756000 0                  STQ     TEMP

    147  2 000167   100000 116007                    CMPQ    32768,DL
         2 000170   000173 602000 2                  TNC     s:150

    149  2 000171   600000 036007                    ADLQ    -65536,DL
         2 000172   000022 756000 0                  STQ     TEMP

    150  2 000173   000000 620006                    EAX0    0,QL
         2 000174   000002 440000 0                  SXL0    XSL_KEYBUF

       77      153    1       RETURN;

    153  2 000175   000000 221200 0                  LDX1  ! 0
         2 000176   000001 702211                    TSX2  ! 1,X1

XSL_KEYBUF
 Sect OctLoc
   0     002   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   1     000   000002 006000                                                    ....
       78      154
       79      155    1   END XSL$HALFCVT;
       80      156        %EOD;

PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:15   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure XSL$HALFCVT.
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:16   

 **** Variables and constants ****

  ****  Section 000  Data  XSL$HALFCVT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w PTR         r     1 @NUM                       2-0-0/h UBIN(18)    r     1 HW(0:31)
    *0-0-0/w SBIN        r     1 NUM                       22-0-0/w UBIN        r     1 TEMP
     2-0-0/c CHAR(64)    r     1 XSL_KEYBUF


   Procedure XSL$HALFCVT requires 127 words for executable code.
   Procedure XSL$HALFCVT is declared NOAUTO and requires 20 words of local(STATIC) storage.
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:17   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:18   
          MINI XREF LISTING

DO_2
        74**LABEL      49--GOTO
DO_3
        65**LABEL      50--GOTO
DO_4
        56**LABEL      51--GOTO
HW
        39**DCL        54>>ASSIGN     58<<ASSIGN     63>>ASSIGN     67<<ASSIGN     72>>ASSIGN     76<<ASSIGN
        81>>ASSIGN     85<<ASSIGN    100>>ASSIGN    108<<ASSIGN    114>>ASSIGN    122<<ASSIGN    128>>ASSIGN
       136<<ASSIGN    142>>ASSIGN    150<<ASSIGN
NUM
        40**DCL         9--PROC       43--ENTRY      49>>IF         50>>IF         51>>IF         89--ENTRY
        95>>IF         96>>IF         97>>IF
TEMP
        41**DCL        54<<ASSIGN     56>>IF         58>>ASSIGN     58>>ASSIGN     63<<ASSIGN     65>>IF
        67>>ASSIGN     67>>ASSIGN     72<<ASSIGN     74>>IF         76>>ASSIGN     76>>ASSIGN     81<<ASSIGN
        83>>IF         85>>ASSIGN     85>>ASSIGN    100<<ASSIGN    102>>IF        104<<ASSIGN    104>>ASSIGN
       104>>ASSIGN    105>>IF        107<<ASSIGN    107>>ASSIGN    108>>ASSIGN    114<<ASSIGN    116>>IF
       118<<ASSIGN    118>>ASSIGN    118>>ASSIGN    119>>IF        121<<ASSIGN    121>>ASSIGN    122>>ASSIGN
       128<<ASSIGN    130>>IF        132<<ASSIGN    132>>ASSIGN    132>>ASSIGN    133>>IF        135<<ASSIGN
       135>>ASSIGN    136>>ASSIGN    142<<ASSIGN    144>>IF        146<<ASSIGN    146>>ASSIGN    146>>ASSIGN
       147>>IF        149<<ASSIGN    149>>ASSIGN    150>>ASSIGN
UNDO_2
       130**LABEL      95--GOTO
UNDO_3
       116**LABEL      96--GOTO
UNDO_4
       102**LABEL      97--GOTO
XSL_KEYBUF
        38**DCL        34--DCLINIT    39--REDEF
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:19   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSL$HALFCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:20   
              MINI UREF LISTING

XSL$H8TO9      89**ENTRY
XSL$H9TO8      43**ENTRY
XSL$HALFCVT       9**PROC
XSL_KEYBUF$      34**DCL

PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:21   
       81        1        /*T***********************************************************/
       82        2        /*T*                                                         */
       83        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       84        4        /*T*                                                         */
       85        5        /*T***********************************************************/
       86        6        /*F* NAME: htonl() and XSL$HTONL  --  Convert Host to Network Long Integer
       87        7        ..::IT "Purpose:"
       88        8        .INL +4
       89        9        Converts a 36-bit unsigned integer to an unpacked 32-bit unsigned integer.
       90       10        ..::IT "C Usage:"
       91       11        .INL 4
       92       12        .FIF
       93       13        netlong = htonl( hostlong );
       94       14        ..::IT "PL6 Usage:"
       95       15        .INL 4
       96       16        .FIF
       97       17        CALL XSL$HTONL( netlong, hostlong );
       98       18        ..::IT "Parameters:"
       99       19        .INL 4
      100       20        .FIF
      101       21        hostlong    36-bit unsigned integer
      102       22        ..::IT "Result:"
      103       23        .INL 4
      104       24        .FIF
      105       25        netlong     unpacked 32-bit unsigned integer
      106       26        ..::IT "Description:"
      107       27        The htonl() function converts a long integer from host to network formats.
      108       28        On CP-6 systems, this means taking the low order 32 bits of the number
      109       29        and unpacking them into the low 8 bits of 4 successive 9-bit bytes.
      110       30        .SPB
      111       31        The hostlong parameter specifies the long integer to be converted.  If the
      112       32        number is too large to be converted, it is truncated without warning.
      113       33        ..::IT "Errors:"
      114       34        The htonl() function is always successful.  There are no errors reported.
      115       35        */
      116       36        /*F* NAME: htons() and XSL$HTONS  --  Convert Host to Network Short Integer
      117       37        ..::IT "Purpose:"
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:22   
      118       38        .INL +4
      119       39        Converts a 18-bit unsigned integer to an unpacked 16-bit unsigned integer.
      120       40        ..::IT "C Usage:"
      121       41        .INL 4
      122       42        .FIF
      123       43        netshort = htons( hostshort );
      124       44        ..::IT "PL6 Usage:"
      125       45        .INL 4
      126       46        .FIF
      127       47        CALL XSL$HTONS( netshort, hostshort );
      128       48        ..::IT "Parameters:"
      129       49        .INL 4
      130       50        .FIF
      131       51        hostshort   18-bit unsigned integer
      132       52        ..::IT "Result:"
      133       53        .INL 4
      134       54        .FIF
      135       55        netshort    unpacked 16-bit unsigned integer
      136       56        ..::IT "Description:"
      137       57        The htons() function converts a short integer from host to network formats.
      138       58        On CP-6 systems, this means taking the low order 16 bits of the number
      139       59        and unpacking them into the low 8 bits of 2 successive 9-bit bytes.
      140       60        .SPB
      141       61        The hostshort parameter specifies the short integer to be converted.  If the
      142       62        number is too large to be converted, it is truncated without warning.
      143       63        ..::IT "Errors:"
      144       64        The htons() function is always successful.  There are no errors reported.
      145       65        */
      146       66        /*F* NAME: ntohl() and XSL$NTOHL  --  Convert Network to Host Long Integer
      147       67        ..::IT "Purpose:"
      148       68        .INL +4
      149       69        Converts an unpacked 32-bit unsigned integer to a 36-bit unsigned integer.
      150       70        ..::IT "C Usage:"
      151       71        .INL 4
      152       72        .FIF
      153       73        hostlong = ntohl( netlong );
      154       74        ..::IT "PL6 Usage:"
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:23   
      155       75        .INL 4
      156       76        .FIF
      157       77        CALL XSL$NTOHL( hostlong, netlong );
      158       78        ..::IT "Parameters:"
      159       79        .INL 4
      160       80        .FIF
      161       81        netlong     unpacked 32-bit unsigned integer
      162       82        ..::IT "Result:"
      163       83        .INL 4
      164       84        .FIF
      165       85        hostlong    36-bit unsigned integer
      166       86        ..::IT "Description:"
      167       87        The ntohl() function converts a long integer from network to host formats.
      168       88        On CP-6 systems, this means taking the low 8 bits of 4 successive
      169       89        9-bit bytes and packing them into the low order 32 bits of a word.
      170       90        .SPB
      171       91        The netlong parameter specifies the unpacked long integer to be converted.
      172       92        ..::IT "Errors:"
      173       93        The htonl() function is always successful.  There are no errors reported.
      174       94        */
      175       95        /*F* NAME: ntohs() and XSL$NTOHS  --  Convert Network to Host Short Integer
      176       96        ..::IT "Purpose:"
      177       97        .INL +4
      178       98        Converts an unpacked 16-bit unsigned integer to a 18-bit unsigned integer.
      179       99        ..::IT "C Usage:"
      180      100        .INL 4
      181      101        .FIF
      182      102        hostshort = ntohs( netshort );
      183      103        ..::IT "PL6 Usage:"
      184      104        .INL 4
      185      105        .FIF
      186      106        CALL XSL$NTOHS( hostshort, netshort );
      187      107        ..::IT "Parameters:"
      188      108        .INL 4
      189      109        .FIF
      190      110        netshort    unpacked 16-bit unsigned integer
      191      111        ..::IT "Result:"
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:24   
      192      112        .INL 4
      193      113        .FIF
      194      114        hostshort   18-bit unsigned integer
      195      115        ..::IT "Description:"
      196      116        The ntohs() function converts a short integer from network to host formats.
      197      117        On CP-6 systems, this means taking the low 8 bits of 2 successive
      198      118        9-bit bytes and packing them into the low order 16 bits of a word.
      199      119        .SPB
      200      120        The netshort parameter specifies the unpacked short integer to be converted.
      201      121        ..::IT "Errors:"
      202      122        The htons() function is always successful.  There are no errors reported.
      203      123        */
      204      124        XSL$WORDCVT: PROC( RESULT, INPUT) NOAUTO;
      205      125
      206      126        %INCLUDE XSL_INTERNAL_M;
      207      377        %INCLUDE XSL_SOCKET_E;
      208      635        %INCLUDE XSL_SOCKET_M;
      209     1396
      210     1397        %XSL$NETSOCKADDR( FPTN=NETADDR);
      211     1423        %XSL$SOCKADDR( FPTN=HOSTADDR);
      212     1463        %XSL$SOCKADDR_IN( FPTN=INETADDR);
      213     1527
      214     1528    1       DCL INPUT UBIN;
      215     1529    1       DCL ITMP UBIN;
      216     1530    1       DCL 1 I3BYT REDEF ITMP,
      217     1531    1           2 * BIT(9),
      218     1532    1           2 N UBIN(27) CALIGNED;
      219     1533    1       DCL 1 I2BYT REDEF ITMP,
      220     1534    1           2 * BIT(18),
      221     1535    1           2 N UBIN(18) CALIGNED;
      222     1536    1       DCL 1 I1BYT REDEF ITMP,
      223     1537    1           2 * BIT(27),
      224     1538    1           2 N UBIN(9) CALIGNED;
      225     1539    1       DCL TMP$ REDEF ITMP PTR;
      226     1540    1       DCL RESULT SBIN;
      227     1541
      228     1542    1   XSL$HTONL: ENTRY( RESULT, INPUT);
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:25   
      229     1543
      230     1544            /* Coded obscurely to get reasonable code out of PL6.  Sorry. */
      231     1545    1       ITMP = INPUT + BITBIN ('777777777400'O & BINBIT(INPUT,36));
      232     1546    1       ITMP = ITMP + BITBIN ('7777774'O & BINBIT(ITMP,36));
      233     1547    1       RESULT = ITMP + BITBIN( '7774'O & BINBIT(ITMP,36));
      234     1548    1       RETURN;
      235     1549
      236     1550    1   XSL$HTONS: ENTRY( RESULT, INPUT);
      237     1551
      238     1552            /* Coded obscurely to get reasonable code out of PL6.  Sorry. */
      239     1553    1       ITMP = MOD (INPUT, 65536);
      240     1554    1       RESULT = ITMP + BITBIN( '000000177400'O & BINBIT(ITMP,36));
      241     1555    1       RETURN;
      242     1556
      243     1557    1   XSL$NTOHL: ENTRY( RESULT, INPUT);
      244     1558
      245     1559            /* Coded obscurely to get reasonable code out of PL6.  Sorry. */
      246     1560    1       ITMP = BITBIN( '377377377377'O & BINBIT(INPUT,36));
      247     1561    1       ITMP = ITMP + I1BYT.N;
      248     1562    1       ITMP = ITMP + I2BYT.N;
      249     1563    1       RESULT = (ITMP + I3BYT.N)/8;
      250     1564    1       RETURN;
      251     1565
      252     1566    1   XSL$NTOHS: ENTRY( RESULT, INPUT);
      253     1567
      254     1568            /* Coded obscurely to get reasonable code out of PL6.  Sorry. */
      255     1569    1       ITMP = BITBIN( '000000377377'O & BINBIT(INPUT,36));
      256     1570    1       RESULT = (ITMP + I1BYT.N)/2;
      257     1571    1       RETURN;
      258     1572
      259     1573    1   XSL$HTONADDR: ENTRY( RESULT, INPUT);
      260     1574
      261     1575        %SET RESULT = CHARTEXT('TMP$->NETADDR');
      262     1576        %SET INPUT = CHARTEXT('ADDR(INPUT)->HOSTADDR');
      263     1577        %SET INET = CHARTEXT('ADDR(INPUT)->INETADDR');
      264     1578
      265     1579    1       TMP$ = ADDR(RESULT); /* Move PTR to netaddr, because it's only HALIGNED */
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:26   
      266     1580    2       IF %INPUT.SA_FAMILY = %XSL_AF_INET THEN DO;
      267     1581    2           %RESULT = %INPUT.SA_DATA;
      268     1582    2           END;
      269     1583    1       ELSE
      270     1584    1           %RESULT.SA_DATA = %INPUT.SA_DATA;
      271     1585    1       %RESULT.SA_FAMILY = %INPUT.SA_FAMILY;
      272     1586    1       RETURN;
      273     1587
      274     1588    1   XSL$NTOHADDR: ENTRY( RESULT, INPUT);
      275     1589
      276     1590        %SET RESULT = CHARTEXT('ADDR(RESULT)->HOSTADDR');
      277     1591        %SET INPUT = CHARTEXT('TMP$->NETADDR');
      278     1592        %SET INET = CHARTEXT('ADDR(RESULT)->INETADDR');
      279     1593
      280     1594    1       TMP$ = ADDR(INPUT); /* Move PTR to netaddr, because it's only HALIGNED */
      281     1595    1       %RESULT.SA_FAMILY = %INPUT.SA_FAMILY;
      282     1596    2       IF %RESULT.SA_FAMILY = %XSL_AF_INET THEN DO;
      283     1597    2           %RESULT.SA_DATA = %INPUT;
      284     1598    2           END;
      285     1599    1       ELSE
      286     1600    1           %RESULT.SA_DATA = %INPUT.SA_DATA;
      287     1601    1       RETURN;
      288     1602
      289     1603    1   END XSL$WORDCVT;
      290     1604        %EOD;

PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:27   
--  Include file information  --

   XSL_SOCKET_M.:TCA2TOU  is referenced.
   XSL_SOCKET_E.:TCA2TOU  is referenced.
   XSL_INTERNAL_M.:TCA2TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure XSL$WORDCVT.

   Procedure XSL$WORDCVT requires 113 words for executable code.
   Procedure XSL$WORDCVT is declared NOAUTO and requires 4 words of local(STATIC) storage.

PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:28   

 Object Unit name= XSL$WORDCVT                                File name= XSL$SOCKET5.:TCA2TOU
 UTS= NOV 16 '97 14:32:27.76 SUN                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     4      4  XSL$WORDCVT
    1  RoData even  UTS      5      5  XSL$WORDCVT
    2   Proc  even  none   113    161  XSL$WORDCVT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  XSL$WORDCVT
     2      3                  yes      Std        2  XSL$HTONL
     2     25                  yes      Std        2  XSL$HTONS
     2     42                  yes      Std        2  XSL$NTOHL
     2     70                  yes      Std        2  XSL$NTOHS
     2    106                  yes      Std        2  XSL$HTONADDR
     2    134                  yes      Std        2  XSL$NTOHADDR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_STATIC_2
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:29   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:30   


       81        1        /*T***********************************************************/
       82        2        /*T*                                                         */
       83        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       84        4        /*T*                                                         */
       85        5        /*T***********************************************************/
       86        6        /*F* NAME: htonl() and XSL$HTONL  --  Convert Host to Network Long Integer
       87        7        ..::IT "Purpose:"
       88        8        .INL +4
       89        9        Converts a 36-bit unsigned integer to an unpacked 32-bit unsigned integer.
       90       10        ..::IT "C Usage:"
       91       11        .INL 4
       92       12        .FIF
       93       13        netlong = htonl( hostlong );
       94       14        ..::IT "PL6 Usage:"
       95       15        .INL 4
       96       16        .FIF
       97       17        CALL XSL$HTONL( netlong, hostlong );
       98       18        ..::IT "Parameters:"
       99       19        .INL 4
      100       20        .FIF
      101       21        hostlong    36-bit unsigned integer
      102       22        ..::IT "Result:"
      103       23        .INL 4
      104       24        .FIF
      105       25        netlong     unpacked 32-bit unsigned integer
      106       26        ..::IT "Description:"
      107       27        The htonl() function converts a long integer from host to network formats.
      108       28        On CP-6 systems, this means taking the low order 32 bits of the number
      109       29        and unpacking them into the low 8 bits of 4 successive 9-bit bytes.
      110       30        .SPB
      111       31        The hostlong parameter specifies the long integer to be converted.  If the
      112       32        number is too large to be converted, it is truncated without warning.
      113       33        ..::IT "Errors:"
      114       34        The htonl() function is always successful.  There are no errors reported.
      115       35        */
      116       36        /*F* NAME: htons() and XSL$HTONS  --  Convert Host to Network Short Integer
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:31   
      117       37        ..::IT "Purpose:"
      118       38        .INL +4
      119       39        Converts a 18-bit unsigned integer to an unpacked 16-bit unsigned integer.
      120       40        ..::IT "C Usage:"
      121       41        .INL 4
      122       42        .FIF
      123       43        netshort = htons( hostshort );
      124       44        ..::IT "PL6 Usage:"
      125       45        .INL 4
      126       46        .FIF
      127       47        CALL XSL$HTONS( netshort, hostshort );
      128       48        ..::IT "Parameters:"
      129       49        .INL 4
      130       50        .FIF
      131       51        hostshort   18-bit unsigned integer
      132       52        ..::IT "Result:"
      133       53        .INL 4
      134       54        .FIF
      135       55        netshort    unpacked 16-bit unsigned integer
      136       56        ..::IT "Description:"
      137       57        The htons() function converts a short integer from host to network formats.
      138       58        On CP-6 systems, this means taking the low order 16 bits of the number
      139       59        and unpacking them into the low 8 bits of 2 successive 9-bit bytes.
      140       60        .SPB
      141       61        The hostshort parameter specifies the short integer to be converted.  If the
      142       62        number is too large to be converted, it is truncated without warning.
      143       63        ..::IT "Errors:"
      144       64        The htons() function is always successful.  There are no errors reported.
      145       65        */
      146       66        /*F* NAME: ntohl() and XSL$NTOHL  --  Convert Network to Host Long Integer
      147       67        ..::IT "Purpose:"
      148       68        .INL +4
      149       69        Converts an unpacked 32-bit unsigned integer to a 36-bit unsigned integer.
      150       70        ..::IT "C Usage:"
      151       71        .INL 4
      152       72        .FIF
      153       73        hostlong = ntohl( netlong );
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:32   
      154       74        ..::IT "PL6 Usage:"
      155       75        .INL 4
      156       76        .FIF
      157       77        CALL XSL$NTOHL( hostlong, netlong );
      158       78        ..::IT "Parameters:"
      159       79        .INL 4
      160       80        .FIF
      161       81        netlong     unpacked 32-bit unsigned integer
      162       82        ..::IT "Result:"
      163       83        .INL 4
      164       84        .FIF
      165       85        hostlong    36-bit unsigned integer
      166       86        ..::IT "Description:"
      167       87        The ntohl() function converts a long integer from network to host formats.
      168       88        On CP-6 systems, this means taking the low 8 bits of 4 successive
      169       89        9-bit bytes and packing them into the low order 32 bits of a word.
      170       90        .SPB
      171       91        The netlong parameter specifies the unpacked long integer to be converted.
      172       92        ..::IT "Errors:"
      173       93        The htonl() function is always successful.  There are no errors reported.
      174       94        */
      175       95        /*F* NAME: ntohs() and XSL$NTOHS  --  Convert Network to Host Short Integer
      176       96        ..::IT "Purpose:"
      177       97        .INL +4
      178       98        Converts an unpacked 16-bit unsigned integer to a 18-bit unsigned integer.
      179       99        ..::IT "C Usage:"
      180      100        .INL 4
      181      101        .FIF
      182      102        hostshort = ntohs( netshort );
      183      103        ..::IT "PL6 Usage:"
      184      104        .INL 4
      185      105        .FIF
      186      106        CALL XSL$NTOHS( hostshort, netshort );
      187      107        ..::IT "Parameters:"
      188      108        .INL 4
      189      109        .FIF
      190      110        netshort    unpacked 16-bit unsigned integer
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:33   
      191      111        ..::IT "Result:"
      192      112        .INL 4
      193      113        .FIF
      194      114        hostshort   18-bit unsigned integer
      195      115        ..::IT "Description:"
      196      116        The ntohs() function converts a short integer from network to host formats.
      197      117        On CP-6 systems, this means taking the low 8 bits of 2 successive
      198      118        9-bit bytes and packing them into the low order 16 bits of a word.
      199      119        .SPB
      200      120        The netshort parameter specifies the unpacked short integer to be converted.
      201      121        ..::IT "Errors:"
      202      122        The htons() function is always successful.  There are no errors reported.
      203      123        */
      204      124        XSL$WORDCVT: PROC( RESULT, INPUT) NOAUTO;

    124  2 000000   000000 700200 xent  XSL$WORDCVT  TSX0  ! X66_STATIC_2
         2 000001   000000 000002 0                  ZERO    0,2
         2 000002   000005 710000 2                  TRA     s:1545

      205      125
      206      126        %INCLUDE XSL_INTERNAL_M;
      207      377        %INCLUDE XSL_SOCKET_E;
      208      635        %INCLUDE XSL_SOCKET_M;
      209     1396
      210     1397        %XSL$NETSOCKADDR( FPTN=NETADDR);
      211     1423        %XSL$SOCKADDR( FPTN=HOSTADDR);
      212     1463        %XSL$SOCKADDR_IN( FPTN=INETADDR);
      213     1527
      214     1528    1       DCL INPUT UBIN;
      215     1529    1       DCL ITMP UBIN;
      216     1530    1       DCL 1 I3BYT REDEF ITMP,
      217     1531    1           2 * BIT(9),
      218     1532    1           2 N UBIN(27) CALIGNED;
      219     1533    1       DCL 1 I2BYT REDEF ITMP,
      220     1534    1           2 * BIT(18),
      221     1535    1           2 N UBIN(18) CALIGNED;
      222     1536    1       DCL 1 I1BYT REDEF ITMP,
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:34   
      223     1537    1           2 * BIT(27),
      224     1538    1           2 N UBIN(9) CALIGNED;
      225     1539    1       DCL TMP$ REDEF ITMP PTR;
      226     1540    1       DCL RESULT SBIN;
      227     1541
      228     1542    1   XSL$HTONL: ENTRY( RESULT, INPUT);

   1542  2 000003   000000 700200 xent  XSL$HTONL    TSX0  ! X66_STATIC_2
         2 000004   000000 000002 0                  ZERO    0,2

      229     1543
      230     1544            /* Coded obscurely to get reasonable code out of PL6.  Sorry. */
      231     1545    1       ITMP = INPUT + BITBIN ('777777777400'O & BINBIT(INPUT,36));

   1545  2 000005   000002 470400 0                  LDP0    @INPUT
         2 000006   000000 236100                    LDQ     0,,PR0
         2 000007   000000 376000 1                  ANQ     0
         2 000010   000000 036100                    ADLQ    0,,PR0
         2 000011   000003 756000 0                  STQ     ITMP

      232     1546    1       ITMP = ITMP + BITBIN ('7777774'O & BINBIT(ITMP,36));

   1546  2 000012   000001 236000 1                  LDQ     1
         2 000013   000003 376000 0                  ANQ     ITMP
         2 000014   000003 036000 0                  ADLQ    ITMP
         2 000015   000003 756000 0                  STQ     ITMP

      233     1547    1       RESULT = ITMP + BITBIN( '7774'O & BINBIT(ITMP,36));

   1547  2 000016   000003 236000 0                  LDQ     ITMP
         2 000017   777400 376003                    ANQ     -256,DU
         2 000020   000003 036000 0                  ADLQ    ITMP
         2 000021   000001 471400 0                  LDP1    @RESULT
         2 000022   100000 756100                    STQ     0,,PR1

      234     1548    1       RETURN;

PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:35   
   1548  2 000023   000000 221200 0                  LDX1  ! 0
         2 000024   000001 702211                    TSX2  ! 1,X1

      235     1549
      236     1550    1   XSL$HTONS: ENTRY( RESULT, INPUT);

   1550  2 000025   000000 700200 xent  XSL$HTONS    TSX0  ! X66_STATIC_2
         2 000026   000000 000002 0                  ZERO    0,2

      237     1551
      238     1552            /* Coded obscurely to get reasonable code out of PL6.  Sorry. */
      239     1553    1       ITMP = MOD (INPUT, 65536);

   1553  2 000027   000002 470400 0                  LDP0    @INPUT
         2 000030   000000 236100                    LDQ     0,,PR0
         2 000031   177777 376007                    ANQ     65535,DL
         2 000032   000003 756000 0                  STQ     ITMP

      240     1554    1       RESULT = ITMP + BITBIN( '000000177400'O & BINBIT(ITMP,36));

   1554  2 000033   000003 236000 0                  LDQ     ITMP
         2 000034   000002 376000 1                  ANQ     2
         2 000035   000003 036000 0                  ADLQ    ITMP
         2 000036   000001 471400 0                  LDP1    @RESULT
         2 000037   100000 756100                    STQ     0,,PR1

      241     1555    1       RETURN;

   1555  2 000040   000000 221200 0                  LDX1  ! 0
         2 000041   000001 702211                    TSX2  ! 1,X1

      242     1556
      243     1557    1   XSL$NTOHL: ENTRY( RESULT, INPUT);

   1557  2 000042   000000 700200 xent  XSL$NTOHL    TSX0  ! X66_STATIC_2
         2 000043   000000 000002 0                  ZERO    0,2

PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:36   
      244     1558
      245     1559            /* Coded obscurely to get reasonable code out of PL6.  Sorry. */
      246     1560    1       ITMP = BITBIN( '377377377377'O & BINBIT(INPUT,36));

   1560  2 000044   000002 470400 0                  LDP0    @INPUT
         2 000045   000000 236100                    LDQ     0,,PR0
         2 000046   000003 376000 1                  ANQ     3
         2 000047   000003 756000 0                  STQ     ITMP

      247     1561    1       ITMP = ITMP + I1BYT.N;

   1561  2 000050   000003 236000 0                  LDQ     ITMP
         2 000051   000777 376007                    ANQ     511,DL
         2 000052   000003 036000 0                  ADLQ    ITMP
         2 000053   000003 756000 0                  STQ     ITMP

      248     1562    1       ITMP = ITMP + I2BYT.N;

   1562  2 000054   000003 236000 0                  LDQ     ITMP
         2 000055   777777 376007                    ANQ     -1,DL
         2 000056   000003 036000 0                  ADLQ    ITMP
         2 000057   000003 756000 0                  STQ     ITMP

      249     1563    1       RESULT = (ITMP + I3BYT.N)/8;

   1563  2 000060   000003 236000 0                  LDQ     ITMP
         2 000061   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 000062   000003 036000 0                  ADLQ    ITMP
         2 000063   000003 772000                    QRL     3
         2 000064   000001 471400 0                  LDP1    @RESULT
         2 000065   100000 756100                    STQ     0,,PR1

      250     1564    1       RETURN;

   1564  2 000066   000000 221200 0                  LDX1  ! 0
         2 000067   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:37   
      251     1565
      252     1566    1   XSL$NTOHS: ENTRY( RESULT, INPUT);

   1566  2 000070   000000 700200 xent  XSL$NTOHS    TSX0  ! X66_STATIC_2
         2 000071   000000 000002 0                  ZERO    0,2

      253     1567
      254     1568            /* Coded obscurely to get reasonable code out of PL6.  Sorry. */
      255     1569    1       ITMP = BITBIN( '000000377377'O & BINBIT(INPUT,36));

   1569  2 000072   000002 470400 0                  LDP0    @INPUT
         2 000073   000000 236100                    LDQ     0,,PR0
         2 000074   000004 376000 1                  ANQ     4
         2 000075   000003 756000 0                  STQ     ITMP

      256     1570    1       RESULT = (ITMP + I1BYT.N)/2;

   1570  2 000076   000003 236000 0                  LDQ     ITMP
         2 000077   000777 376007                    ANQ     511,DL
         2 000100   000003 036000 0                  ADLQ    ITMP
         2 000101   000001 772000                    QRL     1
         2 000102   000001 471400 0                  LDP1    @RESULT
         2 000103   100000 756100                    STQ     0,,PR1

      257     1571    1       RETURN;

   1571  2 000104   000000 221200 0                  LDX1  ! 0
         2 000105   000001 702211                    TSX2  ! 1,X1

      258     1572
      259     1573    1   XSL$HTONADDR: ENTRY( RESULT, INPUT);

   1573  2 000106   000000 700200 xent  XSL$HTONADDR TSX0  ! X66_STATIC_2
         2 000107   000000 000002 0                  ZERO    0,2

      260     1574
      261     1575        %SET RESULT = CHARTEXT('TMP$->NETADDR');
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:38   
      262     1576        %SET INPUT = CHARTEXT('ADDR(INPUT)->HOSTADDR');
      263     1577        %SET INET = CHARTEXT('ADDR(INPUT)->INETADDR');
      264     1578
      265     1579    1       TMP$ = ADDR(RESULT); /* Move PTR to netaddr, because it's only HALIGNED */

   1579  2 000110   000001 236000 0                  LDQ     @RESULT
         2 000111   000003 756000 0                  STQ     ITMP

      266     1580    2       IF %INPUT.SA_FAMILY = %XSL_AF_INET THEN DO;

   1580  2 000112   000002 470400 0                  LDP0    @INPUT
         2 000113   000000 235100                    LDA     0,,PR0
         2 000114   000002 115007                    CMPA    2,DL
         2 000115   000123 601000 2                  TNZ     s:1584

      267     1581    2           %RESULT = %INPUT.SA_DATA;

   1581  2 000116   000003 471400 0                  LDP1    ITMP
         2 000117   000100 100500                    MLR     fill='000'O
         2 000120   000001 000020                    ADSC9   1,,PR0                   cn=0,n=16
         2 000121   100000 000020                    ADSC9   0,,PR1                   cn=0,n=16

      268     1582    2           END;

   1582  2 000122   000127 710000 2                  TRA     s:1585

      269     1583    1       ELSE
      270     1584    1           %RESULT.SA_DATA = %INPUT.SA_DATA;

   1584  2 000123   000003 471400 0                  LDP1    ITMP
         2 000124   000100 100500                    MLR     fill='000'O
         2 000125   000001 000016                    ADSC9   1,,PR0                   cn=0,n=14
         2 000126   100000 400016                    ADSC9   0,,PR1                   cn=2,n=14

      271     1585    1       %RESULT.SA_FAMILY = %INPUT.SA_FAMILY;

   1585  2 000127   000100 101500                    MRL     fill='000'O
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:39   
         2 000130   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         2 000131   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

      272     1586    1       RETURN;

   1586  2 000132   000000 221200 0                  LDX1  ! 0
         2 000133   000001 702211                    TSX2  ! 1,X1

      273     1587
      274     1588    1   XSL$NTOHADDR: ENTRY( RESULT, INPUT);

   1588  2 000134   000000 700200 xent  XSL$NTOHADDR TSX0  ! X66_STATIC_2
         2 000135   000000 000002 0                  ZERO    0,2

      275     1589
      276     1590        %SET RESULT = CHARTEXT('ADDR(RESULT)->HOSTADDR');
      277     1591        %SET INPUT = CHARTEXT('TMP$->NETADDR');
      278     1592        %SET INET = CHARTEXT('ADDR(RESULT)->INETADDR');
      279     1593
      280     1594    1       TMP$ = ADDR(INPUT); /* Move PTR to netaddr, because it's only HALIGNED */

   1594  2 000136   000002 236000 0                  LDQ     @INPUT
         2 000137   000003 756000 0                  STQ     ITMP

      281     1595    1       %RESULT.SA_FAMILY = %INPUT.SA_FAMILY;

   1595  2 000140   000003 470400 0                  LDP0    ITMP
         2 000141   000001 471400 0                  LDP1    @RESULT
         2 000142   000100 101500                    MRL     fill='000'O
         2 000143   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 000144   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4

      282     1596    2       IF %RESULT.SA_FAMILY = %XSL_AF_INET THEN DO;

   1596  2 000145   100000 235100                    LDA     0,,PR1
         2 000146   000002 115007                    CMPA    2,DL
         2 000147   000154 601000 2                  TNZ     s:1600
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:40   

      283     1597    2           %RESULT.SA_DATA = %INPUT;

   1597  2 000150   000100 100500                    MLR     fill='000'O
         2 000151   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16
         2 000152   100001 000020                    ADSC9   1,,PR1                   cn=0,n=16

      284     1598    2           END;

   1598  2 000153   000157 710000 2                  TRA     s:1601

      285     1599    1       ELSE
      286     1600    1           %RESULT.SA_DATA = %INPUT.SA_DATA;

   1600  2 000154   000100 100500                    MLR     fill='000'O
         2 000155   000000 400016                    ADSC9   0,,PR0                   cn=2,n=14
         2 000156   100001 000020                    ADSC9   1,,PR1                   cn=0,n=16

      287     1601    1       RETURN;

   1601  2 000157   000000 221200 0                  LDX1  ! 0
         2 000160   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   1     000   777777 777400   777777 400000   000000 177400   377377 377377    ................
   1     004   000000 377377                                                    ....
      288     1602
      289     1603    1   END XSL$WORDCVT;
      290     1604        %EOD;

PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:41   
--  Include file information  --

   XSL_SOCKET_M.:TCA2TOU  is referenced.
   XSL_SOCKET_E.:TCA2TOU  is referenced.
   XSL_INTERNAL_M.:TCA2TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure XSL$WORDCVT.
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:42   

 **** Variables and constants ****

  ****  Section 000  Data  XSL$WORDCVT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w PTR         r     1 @INPUT                     1-0-0/w PTR         r     1 @RESULT
     3-0-0/w STRC        r     1 I1BYT                      3-0-0/w STRC        r     1 I2BYT
     3-0-0/w STRC        r     1 I3BYT                     *0-0-0/w UBIN        r     1 INPUT
     3-0-0/w UBIN        r     1 ITMP                      *0-0-0/w SBIN        r     1 RESULT
     3-0-0/w PTR         r     1 TMP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 HOSTADDR                   0-0-0/h STRC(144)   r     1 NETADDR


   Procedure XSL$WORDCVT requires 113 words for executable code.
   Procedure XSL$WORDCVT is declared NOAUTO and requires 4 words of local(STATIC) storage.
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:43   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:44   
          MINI XREF LISTING

HOSTADDR.SA_DATA
      1461**DCL      1581>>ASSIGN   1584>>ASSIGN   1597<<ASSIGN   1600<<ASSIGN
HOSTADDR.SA_FAMILY
      1454**DCL      1580>>IF       1585>>ASSIGN   1595<<ASSIGN   1596>>IF
I1BYT.N
      1538**DCL      1561>>ASSIGN   1570>>ASSIGN
I2BYT.N
      1535**DCL      1562>>ASSIGN
I3BYT.N
      1532**DCL      1563>>ASSIGN
INPUT
      1528**DCL       124--PROC     1542--ENTRY    1545>>ASSIGN   1545>>ASSIGN   1550--ENTRY    1553>>ASSIGN
      1557--ENTRY    1560>>ASSIGN   1566--ENTRY    1569>>ASSIGN   1573--ENTRY    1580--IF       1581--ASSIGN
      1584--ASSIGN   1585--ASSIGN   1588--ENTRY    1594--ASSIGN
ITMP
      1529**DCL      1530--REDEF    1533--REDEF    1536--REDEF    1539--REDEF    1545<<ASSIGN   1546<<ASSIGN
      1546>>ASSIGN   1546>>ASSIGN   1547>>ASSIGN   1547>>ASSIGN   1553<<ASSIGN   1554>>ASSIGN   1554>>ASSIGN
      1560<<ASSIGN   1561<<ASSIGN   1561>>ASSIGN   1562<<ASSIGN   1562>>ASSIGN   1563>>ASSIGN   1569<<ASSIGN
      1570>>ASSIGN
NETADDR
      1414**DCL      1581<<ASSIGN   1597>>ASSIGN
NETADDR.SA_DATA
      1421**DCL      1584<<ASSIGN   1600>>ASSIGN
NETADDR.SA_FAMILY
      1420**DCL      1585<<ASSIGN   1595>>ASSIGN
RESULT
      1540**DCL       124--PROC     1542--ENTRY    1547<<ASSIGN   1550--ENTRY    1554<<ASSIGN   1557--ENTRY
      1563<<ASSIGN   1566--ENTRY    1570<<ASSIGN   1573--ENTRY    1579--ASSIGN   1588--ENTRY    1595--ASSIGN
      1596--IF       1597--ASSIGN   1600--ASSIGN
TMP$
      1539**DCL      1579<<ASSIGN   1581>>ASSIGN   1584>>ASSIGN   1585>>ASSIGN   1594<<ASSIGN   1595>>ASSIGN
      1597>>ASSIGN   1600>>ASSIGN
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:45   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XSL$WORDCVT File=XSL$SOCKET5.:TCA2TSI                         SUN 11/16/97 14:32 Page:46   
              MINI UREF LISTING

INETADDR    1480**DCL
XSL$HTONADDR    1573**ENTRY
XSL$HTONL    1542**ENTRY
XSL$HTONS    1550**ENTRY
XSL$NTOHADDR    1588**ENTRY
XSL$NTOHL    1557**ENTRY
XSL$NTOHS    1566**ENTRY
XSL$WORDCVT     124**PROC

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:47   
      291        1        /*T***********************************************************/
      292        2        /*T*                                                         */
      293        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      294        4        /*T*                                                         */
      295        5        /*T***********************************************************/
      296        6
      297        7        /*F* NAME: inet_makeaddr() and XSL$INET_MAKEADDR  --  Make Internet Address
      298        8        ..::IT "Purpose:"
      299        9        .INL +4
      300       10        Combines a network number and local network address into an Internet address.
      301       11        ..::IT "C Usage:"
      302       12        .INL 4
      303       13        .FIF
      304       14        inaddr = inet_makeaddr( netnum, lnaddr );
      305       15        ..::IT "PL6 Usage:"
      306       16        .INL 4
      307       17        .FIF
      308       18        CALL XSL$INET_MAKEADDR( inaddr, netnum, lnaddr );
      309       19        ..::IT "Parameters:"
      310       20        .INL 4
      311       21        .FIF
      312       22        netnum      integer network number
      313       23
      314       24        lnaddr      integer local network address
      315       25        ..::IT "Result:"
      316       26        .INL 4
      317       27        .FIF
      318       28        inaddr      Internet address
      319       29        ..::IT "Description:"
      320       30        The inet_makeaddr() function combines a network number and a local network
      321       31        address to make an Internet address.
      322       32        .SPB
      323       33        The netnum parameter specifies the network number.
      324       34        .SPB
      325       35        The lnaddr parameter specifies the local network address.
      326       36        .SPB
      327       37        On return from the inet_makeaddr() function, the inaddr result contains the
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:48   
      328       38        constructed Internet address.
      329       39        ..::IT "Errors:"
      330       40        The inet_makeaddr() function always succeeds.  There are no error conditions.
      331       41        */
      332       42        /*F* NAME: inet_addr() and XSL$INET_ADDR  --  Convert String to Inet Address
      333       43        ..::IT "Purpose:"
      334       44        .INL +4
      335       45        Converts a character string in "dot notation" to an Internet address.
      336       46        ..::IT "C Usage:"
      337       47        .INL 4
      338       48        .FIF
      339       49        status = inet_addr( cp );
      340       50        ..::IT "PL6 Usage:"
      341       51        .INL 4
      342       52        .FIF
      343       53        CALL XSL$INET_ADDR( status, cp );
      344       54        ..::IT "Parameters:"
      345       55        .INL 4
      346       56        .FIF
      347       57        cp          pointer to character array
      348       58        ..::IT "Result:"
      349       59        .INL 4
      350       60        .FIF
      351       61        .CBA
      352       62        status      Internet address or error code stored in an unsigned integer.
      353       63        .CBF
      354       64        ..::IT "Description:"
      355       65        The inet_addr() function takes a character string representation of an
      356       66        Internet address and converts it to its binary representation suitable
      357       67        for use with other socket library functions.
      358       68        .SPB
      359       69        The cp parameter specifies the address of the character string to convert.
      360       70        The string must contain an Internet address in "dot notation", i.e., a
      361       71        sequence of one to four numeric values separated by dots.  Each numeric
      362       72        value can be in either hexadecimal, octal, or decimal notation.  A leading
      363       73        '0x' or '0X' implies hexadecimal; a leading '0' implies octal;
      364       74        otherwise decimal is implied.
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:49   
      365       75        .SPB
      366       76        If four values are given, they are assigned to the four bytes of result.
      367       77        .SPB
      368       78        If three values are given, the last value is treated as a 16-bit number
      369       79        unpacked into the last two bytes of result.
      370       80        .SPB
      371       81        If two values are given, the last value is treated as a 24-bit number
      372       82        unpacked into the last three bytes of result.
      373       83        .SPB
      374       84        If one value is given, it is treated as a 32-bit number and unpacked into
      375       85        the four bytes of result.
      376       86        .SPB
      377       87        If the inet_addr() function is successful, the status result contains the
      378       88        converted Internet address suitable for use by other socket library functions.
      379       89        .SPB
      380       90        If the inet_addr() function is unsuccessful, the status result contains
      381       91        EFAILURE or E$FAILURE.  The XSL$INET_ADDR procedure additionally ALTRETURNs
      382       92        if it is unsuccessful; it is otherwise identical to the inet_addr() function.
      383       93        ..::IT "Errors:"
      384       94        The status result contains EFAILURE or E$FAILURE if the conversion could
      385       95        not be performed.
      386       96        */
      387       97        /*F* NAME: inet_network() and XSL$INET_NETWORK  --  Convert String to Network
      388       98        ..::IT "Purpose:"
      389       99        .INL +4
      390      100        Converts a character string in "dot notation" to a network number.
      391      101        ..::IX "dot notation, conversion from"
      392      102        ..::IT "C Usage:"
      393      103        .INL 4
      394      104        .FIF
      395      105        status = inet_network( cp );
      396      106        ..::IT "PL6 Usage:"
      397      107        .INL 4
      398      108        .FIF
      399      109        CALL XSL$INET_NETWORK( status, cp );
      400      110        ..::IT "Parameters:"
      401      111        .INL 4
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:50   
      402      112        .FIF
      403      113        cp          pointer to character array
      404      114        ..::IT "Result:"
      405      115        .INL 4
      406      116        .FIF
      407      117        status      integer network number or error code
      408      118        ..::IT "Description:"
      409      119        The inet_network() function takes a character string representation of an
      410      120        Internet address and extracts the network number from it.
      411      121        .SPB
      412      122        The cp parameter specifies the address of the character string to process.
      413      123        The string must contain an Internet address in "dot notation", i.e., a
      414      124        sequence of one to four numeric values separated by dots.  Each numeric
      415      125        value can be in either hexadecimal, octal, or decimal notation.  A leading
      416      126        '0x' or '0X' implies hexadecimal; a leading '0' implies octal;
      417      127        otherwise decimal is implied.
      418      128        .SPB
      419      129        If the inet_network() function is successful, the status result contains the
      420      130        extracted network number suitable for use by other socket library functions.
      421      131        .SPB
      422      132        If the inet_network() function is unsuccessful, the status result contains
      423      133        EFAILURE or E$FAILURE.  The XSL$INET_NETWORK procedure additionally ALTRETURNs
      424      134        if it is unsuccessful; it is otherwise identical to the inet_network()
      425      135        function.
      426      136        ..::IT "Errors:"
      427      137        The status result contains EFAILURE or E$FAILURE if the conversion could
      428      138        not be performed.
      429      139        */
      430      140        /*F* NAME: inet_lnaof() and XSL$INET_LNAOF  --  Get Local Address from Internet Addr
               140        ess
      431      141        ..::IT "Purpose:"
      432      142        .INL +4
      433      143        Extracts the local network address from an Internet address.
      434      144        ..::IT "C Usage:"
      435      145        .INL 4
      436      146        .FIF
      437      147        lnaddr = inet_lnaof( inaddr );
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:51   
      438      148        ..::IT "PL6 Usage:"
      439      149        .INL 4
      440      150        .FIF
      441      151        CALL XSL$INET_LNAOF( lnaddr, inaddr );
      442      152        ..::IT "Parameters:"
      443      153        .INL 4
      444      154        .FIF
      445      155        inaddr      Internet address
      446      156        ..::IT "Result:"
      447      157        .INL 4
      448      158        .FIF
      449      159        lnaddr      integer local network address
      450      160        ..::IT "Description:"
      451      161        The inet_lnaof() function extracts the local network address from an Internet
      452      162        address.
      453      163        .SPB
      454      164        The inaddr parameter specifies the Internet address to process.
      455      165        .SPB
      456      166        On return from the inet_lnaof() function, the lnaddr result contains the
      457      167        extracted local network address.
      458      168        ..::IT "Errors:"
      459      169        The inet_lnaof() function always succeeds.  There are no error conditions.
      460      170        */
      461      171        /*F* NAME: inet_netof() and XSL$INET_NETOF  --  Get Network from Internet Address
      462      172        ..::IT "Purpose:"
      463      173        .INL +4
      464      174        Extracts the network number from an Internet address.
      465      175        ..::IT "C Usage:"
      466      176        .INL 4
      467      177        .FIF
      468      178        netnum = inet_netof( inaddr );
      469      179        ..::IT "PL6 Usage:"
      470      180        .INL 4
      471      181        .FIF
      472      182        CALL XSL$INET_NETOF( netnum, inaddr );
      473      183        ..::IT "Parameters:"
      474      184        .INL 4
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:52   
      475      185        .FIF
      476      186        inaddr      Internet address
      477      187        ..::IT "Result:"
      478      188        .INL 4
      479      189        .FIF
      480      190        netnum      integer network number
      481      191        ..::IT "Description:"
      482      192        The inet_netof() function extracts the network number from an Internet
      483      193        address.
      484      194        .SPB
      485      195        The inaddr parameter specifies the Internet address to process.
      486      196        .SPB
      487      197        On return from the inet_netof() function, the netnum result contains the
      488      198        extracted network number.
      489      199        ..::IT "Errors:"
      490      200        The inet_netof() function always succeeds.  There are no error conditions.
      491      201        */
      492      202        /*F* NAME: inet_ntoa() and XSL$INET_NTOA  --  Convert Inet Address to String
      493      203        ..::IT "Purpose:"
      494      204        .INL +4
      495      205        Converts an Internet address from binary representation to a character string.
      496      206        ..::IT "C Usage:"
      497      207        .INL 4
      498      208        .FIF
      499      209        cp = inet_ntoa( inaddr );
      500      210        ..::IT "PL6 Usage:"
      501      211        .INL 4
      502      212        .FIF
      503      213        CALL XSL$INET_NTOA( cp, inaddr );
      504      214        ..::IT "Parameters:"
      505      215        .INL 4
      506      216        .FIF
      507      217        inaddr      Internet address
      508      218        ..::IT "Result:"
      509      219        .INL 4
      510      220        .FIF
      511      221        cp          pointer to character array
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:53   
      512      222        ..::IT "Description:"
      513      223        The inet_ntoa() function converts an Internet address in binary to its
      514      224        character representation, which is a sequence of one to four decimal
      515      225        numbers separated by dots.
      516      226        ..::IX "dot notation, conversion to"
      517      227        .SPB
      518      228        The inaddr parameter specifies the Internet address to convert.
      519      229        .SPB
      520      230        On return from the inet_ntoa() function, the cp result points to a
      521      231        static buffer within the socket library that contains the converted string.
      522      232        ..::IT "Errors:"
      523      233        The inet_ntoa() function always succeeds.  There are no error conditions.
      524      234        */
      525      235        XSL$INET: PROC( RESULT, PARM1, PARM2) ALTRET;
      526      236        %INCLUDE XU_MACRO_C;
      527     3342            %P_PCB( STCLASS=STATIC, W=PARSEWORK, WSZ="SIZEW( PARSEWORK)", R=R_INET,
      528     3343                    C_LD='  ', C_TL='  ', CNTU=NO);
      529     3542            %PARSE$OUT( NAME=ITM, STCLASS="BASED( ITM$)");
      530     3587            %PARSE$SYM( NAME=SYM, STCLASS="BASED( SYM$)");
      531     3625        %INCLUDE XSL_PERR_C;
      532     3680        %INCLUDE XSL_NODES_E;
      533     3712        %INCLUDE XSL_INTERNAL_M;
      534     3963            %XSL_REFDATA;
      535     3966
      536     3967    1       DCL XSL$HTONL ENTRY(2);
      537     3968    1       DCL XSL_NODES ENTRY CONV(5);
      538     3969    1       DCL X$PARSE ENTRY(1) ALTRET;
      539     3970
      540     3971    1       DCL R_INET SBIN SYMREF;
      541     3972    1       DCL XSL_NETMASK SBIN SYMREF;
      542     3973
      543     3974    1       DCL B$PTR PTR BASED;
      544     3975    1       DCL BYTES CHAR( LEN) BASED;
      545     3976    1       DCL ENTRYFLAG SBIN;
      546     3977        %EQU INET_ADDR = 0;
      547     3978        %EQU INET_NETWORK = 1;
      548     3979    1       DCL I SBIN;
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:54   
      549     3980    1       DCL IDX SBIN;
      550     3981    1       DCL 1 INET,
      551     3982    1           2 BYTES(0:3) UBIN BYTE CALIGNED;
      552     3983    1       DCL ITM$ PTR;
      553     3984    1       DCL LEN SBIN;
      554     3985    1       DCL PARSEWORK(0:99) SBIN STATIC;
      555     3986    1       DCL RESULT SBIN;
      556     3987    1       DCL RESULT$ PTR;
      557     3988    1       DCL PARM1 SBIN;
      558     3989    1       DCL PARM1$ PTR;
      559     3990    1       DCL PARM2 SBIN;
      560     3991    1       DCL PARM2$ PTR;
      561     3992    1       DCL SYM$ PTR;
      562     3993    1       DCL TEMP UBIN;
      563     3994    1       DCL TMPBUF CHAR(16) STATIC;
      564     3995    1       DCL TMP(0:3) REDEF TMPBUF UBIN;
      565     3996
      566     3997            /* What is an Internet address?
      567     3998
      568     3999            On 32-bit systems, four consecutive bytes of 8 bits each.  For CP-6,
      569     4000            four consecutive bytes ignoring the high-order bit of each byte.
      570     4001            Commonly represented in text as a 'character string in dot notation',
      571     4002            which is just each byte as a decimal number, separated by dots.  E.g.,
      572     4003            128.35.0.0 and 192.9.200.2 are Internet addresses.
      573     4004
      574     4005            An Internet address consists of two parts, whose names vary depending
      575     4006            on the documentation.  I'll use the terms netid and hostid.  The netid
      576     4007            identifies the network and the hostid identifies the host on that
      577     4008            network.  The netid field can be 1, 2, or 3 bytes long.  The hostid field
      578     4009            can be 3, 2, or 1 bytes long, respectively.  The length of the netid and
      579     4010            hostid fields are determined by inspecting the high-order bits of the
      580     4011            Internet address, as follows.  (These are CP-6 Internet addresses.)
      581     4012
      582     4013            Class A address:
      583     4014            #-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#
      584     4015            |? 0 n n n n n n n ? h h h h h h h h ? h h h h h h h h ? h h h h h h h h|
      585     4016            #-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:55   
      586     4017            Internet addresses 0.0.0.0 thru 127.255.255.255.
      587     4018            Allows 126 networks with up to 16777214 hosts each.
      588     4019
      589     4020            Class B address:
      590     4021            #-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#
      591     4022            |? 1 0 n n n n n n ? n n n n n n n n ? h h h h h h h h ? h h h h h h h h|
      592     4023            #-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#
      593     4024            Internet addresses 128.0.0.0 thru 191.255.255.255.
      594     4025            Allows 16382 networks with up to 65534 hosts each.
      595     4026
      596     4027            Class C address:
      597     4028            #-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#
      598     4029            |? 1 1 0 n n n n n ? n n n n n n n n ? n n n n n n n n ? h h h h h h h h|
      599     4030            #-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#
      600     4031            Internet addresses 192.0.0.0 thru 223.255.255.255.
      601     4032            Allows 2097150 networks with up to 254 hosts each.
      602     4033
      603     4034            In practice, Class A and Class B networks are commonly divided up into
      604     4035            subnets, using a 'subnet mask' which is ANDed with the Internet address
      605     4036            to specify which bits define the netid.
      606     4037
      607     4038            The above should demonstrate the need for the procedures defined in this
      608     4039            module to extract netid and hostid fields from Internet addresses, combine
      609     4040            netid and hostid to construct an Internet address, and to convert an
      610     4041            Internet address between its internal and character string forms.
      611     4042            */
      612     4043
      613     4044    1   XSL$INET_MAKEADDR: ENTRY (RESULT, PARM1, PARM2) ALTRET;
      614     4045
      615     4046    1       TEMP = PARM1;
      616     4047    2       IF TEMP < 256 THEN DO;
      617     4048    2           RESULT = TEMP * 256 * 256 * 256;
      618     4049    2           TEMP = PARM2;
      619     4050    2           RESULT = TEMP + RESULT;
      620     4051    2           END;
      621     4052    2       ELSE IF TEMP < 65536 THEN DO;
      622     4053    2               RESULT = TEMP * 256 * 256;
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:56   
      623     4054    2               TEMP = PARM2;
      624     4055    2               RESULT = TEMP + RESULT;
      625     4056    2               END;
      626     4057    2           ELSE DO;
      627     4058    2               RESULT = TEMP * 256;
      628     4059    2               TEMP = PARM2;
      629     4060    2               RESULT = TEMP + RESULT;
      630     4061    2               END;
      631     4062    1       RETURN;
      632     4063
      633     4064    1   XSL$INET_ADDR: ENTRY( RESULT, PARM1) ALTRET;
      634     4065
      635     4066            /* convert char string PARM1 in dot notation to Internet address */
      636     4067    1       ENTRYFLAG = %INET_ADDR;
      637     4068    1   COMMON:
      638     4069    1       PARM1$ = ADDR( PARM1);
      639     4070    1       LEN = 36;  /* assume 36 bytes to start */
      640     4071            /* look for trailing NUL */
      641     4072    1       CALL INDEX( LEN, BINASC(0), PARM1$->BYTES)
      642     4073    2       WHENALTRETURN DO;
      643     4074                /* look for trailing blank */
      644     4075    2           CALL INDEX( LEN, ' ', PARM1$->BYTES) ALTRET( ERROR);
      645     4076    2           END;
      646     4077            /* now parse the string using the adjusted length */
      647     4078    1       P_PCB.TEXT$ = PARM1$;
      648     4079    1       P_PCB.NCHARS = LEN;
      649     4080    1       CALL X$PARSE( P_PCB) ALTRET( ERROR);
      650     4081    1       ITM$ = P_PCB.OUT$;
      651     4082
      652     4083    2       DO I = 0 TO ITM.NSUBLKS - 1;
      653     4084    2           SYM$ = ITM.SUBLK$( I);
      654     4085    3           DO CASE( SYM.CODE);
      655     4086    3               CASE( %HEX);
      656     4087    3                   CALL CHARHEX( TMP( I), SYM.COUNT);
      657     4088    3               CASE( %OCT);
      658     4089    3                   CALL CHAROCT( TMP( I), SYM.COUNT);
      659     4090    3               CASE( %DEC);
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:57   
      660     4091    3                   CALL CHARBIN( TMP( I), SYM.TEXT);
      661     4092    3               END;
      662     4093    2           IF TMP( I) > 255 THEN
      663     4094    2               GOTO ERROR;
      664     4095    2           END;
      665     4096    2       IF ENTRYFLAG = %INET_NETWORK THEN DO;
      666     4097    2           TEMP = 0;
      667     4098    3           DO I = 0 TO ITM.NSUBLKS - 1;
      668     4099    3               TEMP = ( TEMP * 256) + TMP( I);
      669     4100    3               END;
      670     4101    2           RESULT = TEMP;
      671     4102    2           RETURN;
      672     4103    2           END;
      673     4104    2       DO CASE( ITM.NSUBLKS);
      674     4105    2           CASE( 1);
      675     4106    2               INET.BYTES(0) = TMP(0) / 16777216;
      676     4107    2               INET.BYTES(1) = MOD( TMP(0), 16777216) / 65536;
      677     4108    2               INET.BYTES(2) = MOD( TMP(0), 65536) / 256;
      678     4109    2               INET.BYTES(3) = MOD( TMP(0), 256);
      679     4110    2           CASE( 2);
      680     4111    2               INET.BYTES(0) = TMP(0);
      681     4112    2               INET.BYTES(1) = TMP(1) / 65536;
      682     4113    2               INET.BYTES(2) = MOD( TMP(1), 65536) / 256;
      683     4114    2               INET.BYTES(3) = MOD( TMP(1), 256);
      684     4115    2           CASE( 3);
      685     4116    2               INET.BYTES(0) = TMP(0);
      686     4117    2               INET.BYTES(1) = TMP(1);
      687     4118    2               INET.BYTES(2) = TMP(2) / 256;
      688     4119    2               INET.BYTES(3) = MOD( TMP(2), 256);
      689     4120    2           CASE( 4);
      690     4121    2               INET.BYTES(0) = TMP(0);
      691     4122    2               INET.BYTES(1) = TMP(1);
      692     4123    2               INET.BYTES(2) = TMP(2);
      693     4124    2               INET.BYTES(3) = TMP(3);
      694     4125    2           END;
      695     4126    1       RESULT = BITBIN( INET);
      696     4127    1       RETURN;
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:58   
      697     4128    1   ERROR:
      698     4129    1       RESULT = %E$FAILURE;
      699     4130    1       ALTRETURN;
      700     4131
      701     4132    1   XSL$INET_NETWORK: ENTRY( RESULT, PARM1) ALTRET;
      702     4133
      703     4134            /* convert char string PARM1 in dot notation to netid */
      704     4135    1       ENTRYFLAG = %INET_NETWORK;
      705     4136    1       GOTO COMMON;
      706     4137
      707     4138    1   XSL$INET_LNAOF: ENTRY( RESULT, PARM1) ALTRET;
      708     4139
      709     4140            /* extract hostid from Internet address PARM1 */
      710     4141    2       IF XSL_NETMASK ~= -1 THEN DO;
      711     4142    2           TEMP = BITBIN( BINBIT( PARM1, 36) & ~BINBIT( XSL_NETMASK, 36));
      712     4143    2           CALL XSL$HTONL( RESULT, TEMP);
      713     4144    2           RETURN;
      714     4145    2           END;
      715     4146    1       INET = BINBIT( PARM1, 36);
      716     4147    1       TEMP = INET.BYTES(0);
      717     4148    1       IF TEMP >= 192 THEN
      718     4149    1           LEN = 3;
      719     4150    1       ELSE
      720     4151    1           IF TEMP >= 128 THEN
      721     4152    1               LEN = 2;
      722     4153    1           ELSE
      723     4154    1               LEN = 1;
      724     4155    1       TEMP = 0;
      725     4156    2       DO I = LEN TO 3;
      726     4157    2           TEMP = ( TEMP * 256) + INET.BYTES( I);
      727     4158    2           END;
      728     4159    1       RESULT = TEMP;
      729     4160    1       RETURN;
      730     4161
      731     4162    1   XSL$INET_NETOF: ENTRY( RESULT, PARM1) ALTRET;
      732     4163
      733     4164    1       INET = BINBIT( PARM1, 36);
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:59   
      734     4165    1       I = INET.BYTES(0);
      735     4166    1       I = I / 64;
      736     4167    2       DO CASE (I);
      737     4168    2           CASE (0,1);
      738     4169    2               RESULT = INET.BYTES(0);
      739     4170    2           CASE (2);
      740     4171    2               RESULT = INET.BYTES(0) * 256 +
      741     4172    2                 INET.BYTES(1);
      742     4173    2           CASE (3);
      743     4174    2               RESULT = INET.BYTES(0) * 256 * 256 +
      744     4175    2                 INET.BYTES(1) * 256 +
      745     4176    2                 INET.BYTES(2);
      746     4177    2           END;
      747     4178    1       RETURN;
      748     4179
      749     4180    1   XSL$INET_NTOA: ENTRY( RESULT, PARM1) ALTRET;
      750     4181
      751     4182            /* convert Internet address PARM1 to char string in dot notation */
      752     4183    1       INET = BINBIT( PARM1, 36);
      753     4184    1       IDX = 0;
      754     4185    2       DO I = 0 TO 3;
      755     4186    2           TEMP = INET.BYTES( I);
      756     4187    2           IF TEMP >= 100 THEN
      757     4188    2               LEN = 3;
      758     4189    2           ELSE
      759     4190    2               IF TEMP >= 10 THEN
      760     4191    2                   LEN = 2;
      761     4192    2               ELSE
      762     4193    2                   LEN = 1;
      763     4194    2           CALL BINCHAR( SUBSTR( TMPBUF, IDX, LEN), TEMP);
      764     4195    2           CALL INSERT( TMPBUF, IDX + LEN, 1, '.');
      765     4196    2           IDX = IDX + LEN + 1;
      766     4197    2           END;
      767     4198    1       CALL INSERT( TMPBUF, IDX - 1, 1, BINASC(0));
      768     4199    1       ADDR( RESULT)->B$PTR = ADDR( TMPBUF);
      769     4200    1       RETURN;
      770     4201
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:60   
      771     4202    1   CHARHEX: PROC( VALUE, TXTC);
      772     4203
      773     4204    2       DCL HEXCHARS CHAR(0) CONSTANT INIT( '0123456789ABCDEF');
      774     4205    2       DCL I SBIN;
      775     4206    2       DCL LEN SBIN;
      776     4207    2       DCL TEMP SBIN;
      777     4208    2       DCL 1 TXTC,
      778     4209    2           2 LEN UBIN BYTE CALIGNED,
      779     4210    2           2 TXT CHAR( TXTC.LEN) CALIGNED;
      780     4211    2       DCL VALUE UBIN;
      781     4212
      782     4213    2       VALUE = 0;
      783     4214    2       LEN = TXTC.LEN;
      784     4215    3       DO I = 0 TO LEN - 1;
      785     4216    3           TEMP = ASCBIN( SUBSTR( TXTC.TXT, I, 1));
      786     4217    3           IF TEMP >= 61 THEN TEMP = TEMP - 7;
      787     4218    3           VALUE = ( VALUE * 16) + TEMP - 48;
      788     4219    3           END;
      789     4220    2       RETURN;
      790     4221
      791     4222    2   CHAROCT: ENTRY( VALUE, TXTC);
      792     4223
      793     4224    2       VALUE = 0;
      794     4225    2       LEN = TXTC.LEN;
      795     4226    3       DO I = 0 TO LEN - 1;
      796     4227    3           VALUE = ( VALUE * 8) + ASCBIN( SUBSTR( TXTC.TXT, I, 1)) - 48;
      797     4228    3           END;
      798     4229    2       RETURN;
      799     4230
      800     4231    2   END CHARHEX;
      801     4232
      802     4233    1   END XSL$INET;
      803     4234        %EOD;

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:61   
--  Include file information  --

   XSL_INTERNAL_M.:TCA2TOU  is referenced.
   XSL_NODES_E.:TCA2TOU  is referenced.
   XSL_PERR_C.:TCA2TOU  is referenced.
   XU_MACRO_C.:LIBRARY  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure XSL$INET.

   Procedure XSL$INET requires 451 words for executable code.
   Procedure XSL$INET requires 28 words of local(AUTO) storage.

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:62   

 Object Unit name= XSL$INET                                   File name= XSL$SOCKET5.:TCA2TOU
 UTS= NOV 16 '97 14:32:52.20 SUN                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   118    166  XSL$INET
    1  RoData even  UTS      4      4  XSL$INET
    2   Proc  even  none   451    703  XSL$INET
    3  RoData even  none     5      5  XSL$INET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        3  XSL$INET
     2      3          yes     yes      Std        3  XSL$INET_MAKEADDR
     2     52          yes     yes      Std        2  XSL$INET_ADDR
     2    333          yes     yes      Std        2  XSL$INET_NETWORK
     2    340          yes     yes      Std        2  XSL$INET_LNAOF
     2    430          yes     yes      Std        2  XSL$INET_NETOF
     2    514          yes     yes      Std        2  XSL$INET_NTOA
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:63   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XSL$DATADEFS
         yes          ~proc      0 XSL_NODES
 yes     yes           Std       1 X$PARSE
         yes           Std       2 XSL$HTONL
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     R_INET                                XSL_NETMASK                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:64   


      291        1        /*T***********************************************************/
      292        2        /*T*                                                         */
      293        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      294        4        /*T*                                                         */
      295        5        /*T***********************************************************/
      296        6
      297        7        /*F* NAME: inet_makeaddr() and XSL$INET_MAKEADDR  --  Make Internet Address
      298        8        ..::IT "Purpose:"
      299        9        .INL +4
      300       10        Combines a network number and local network address into an Internet address.
      301       11        ..::IT "C Usage:"
      302       12        .INL 4
      303       13        .FIF
      304       14        inaddr = inet_makeaddr( netnum, lnaddr );
      305       15        ..::IT "PL6 Usage:"
      306       16        .INL 4
      307       17        .FIF
      308       18        CALL XSL$INET_MAKEADDR( inaddr, netnum, lnaddr );
      309       19        ..::IT "Parameters:"
      310       20        .INL 4
      311       21        .FIF
      312       22        netnum      integer network number
      313       23
      314       24        lnaddr      integer local network address
      315       25        ..::IT "Result:"
      316       26        .INL 4
      317       27        .FIF
      318       28        inaddr      Internet address
      319       29        ..::IT "Description:"
      320       30        The inet_makeaddr() function combines a network number and a local network
      321       31        address to make an Internet address.
      322       32        .SPB
      323       33        The netnum parameter specifies the network number.
      324       34        .SPB
      325       35        The lnaddr parameter specifies the local network address.
      326       36        .SPB
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:65   
      327       37        On return from the inet_makeaddr() function, the inaddr result contains the
      328       38        constructed Internet address.
      329       39        ..::IT "Errors:"
      330       40        The inet_makeaddr() function always succeeds.  There are no error conditions.
      331       41        */
      332       42        /*F* NAME: inet_addr() and XSL$INET_ADDR  --  Convert String to Inet Address
      333       43        ..::IT "Purpose:"
      334       44        .INL +4
      335       45        Converts a character string in "dot notation" to an Internet address.
      336       46        ..::IT "C Usage:"
      337       47        .INL 4
      338       48        .FIF
      339       49        status = inet_addr( cp );
      340       50        ..::IT "PL6 Usage:"
      341       51        .INL 4
      342       52        .FIF
      343       53        CALL XSL$INET_ADDR( status, cp );
      344       54        ..::IT "Parameters:"
      345       55        .INL 4
      346       56        .FIF
      347       57        cp          pointer to character array
      348       58        ..::IT "Result:"
      349       59        .INL 4
      350       60        .FIF
      351       61        .CBA
      352       62        status      Internet address or error code stored in an unsigned integer.
      353       63        .CBF
      354       64        ..::IT "Description:"
      355       65        The inet_addr() function takes a character string representation of an
      356       66        Internet address and converts it to its binary representation suitable
      357       67        for use with other socket library functions.
      358       68        .SPB
      359       69        The cp parameter specifies the address of the character string to convert.
      360       70        The string must contain an Internet address in "dot notation", i.e., a
      361       71        sequence of one to four numeric values separated by dots.  Each numeric
      362       72        value can be in either hexadecimal, octal, or decimal notation.  A leading
      363       73        '0x' or '0X' implies hexadecimal; a leading '0' implies octal;
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:66   
      364       74        otherwise decimal is implied.
      365       75        .SPB
      366       76        If four values are given, they are assigned to the four bytes of result.
      367       77        .SPB
      368       78        If three values are given, the last value is treated as a 16-bit number
      369       79        unpacked into the last two bytes of result.
      370       80        .SPB
      371       81        If two values are given, the last value is treated as a 24-bit number
      372       82        unpacked into the last three bytes of result.
      373       83        .SPB
      374       84        If one value is given, it is treated as a 32-bit number and unpacked into
      375       85        the four bytes of result.
      376       86        .SPB
      377       87        If the inet_addr() function is successful, the status result contains the
      378       88        converted Internet address suitable for use by other socket library functions.
      379       89        .SPB
      380       90        If the inet_addr() function is unsuccessful, the status result contains
      381       91        EFAILURE or E$FAILURE.  The XSL$INET_ADDR procedure additionally ALTRETURNs
      382       92        if it is unsuccessful; it is otherwise identical to the inet_addr() function.
      383       93        ..::IT "Errors:"
      384       94        The status result contains EFAILURE or E$FAILURE if the conversion could
      385       95        not be performed.
      386       96        */
      387       97        /*F* NAME: inet_network() and XSL$INET_NETWORK  --  Convert String to Network
      388       98        ..::IT "Purpose:"
      389       99        .INL +4
      390      100        Converts a character string in "dot notation" to a network number.
      391      101        ..::IX "dot notation, conversion from"
      392      102        ..::IT "C Usage:"
      393      103        .INL 4
      394      104        .FIF
      395      105        status = inet_network( cp );
      396      106        ..::IT "PL6 Usage:"
      397      107        .INL 4
      398      108        .FIF
      399      109        CALL XSL$INET_NETWORK( status, cp );
      400      110        ..::IT "Parameters:"
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:67   
      401      111        .INL 4
      402      112        .FIF
      403      113        cp          pointer to character array
      404      114        ..::IT "Result:"
      405      115        .INL 4
      406      116        .FIF
      407      117        status      integer network number or error code
      408      118        ..::IT "Description:"
      409      119        The inet_network() function takes a character string representation of an
      410      120        Internet address and extracts the network number from it.
      411      121        .SPB
      412      122        The cp parameter specifies the address of the character string to process.
      413      123        The string must contain an Internet address in "dot notation", i.e., a
      414      124        sequence of one to four numeric values separated by dots.  Each numeric
      415      125        value can be in either hexadecimal, octal, or decimal notation.  A leading
      416      126        '0x' or '0X' implies hexadecimal; a leading '0' implies octal;
      417      127        otherwise decimal is implied.
      418      128        .SPB
      419      129        If the inet_network() function is successful, the status result contains the
      420      130        extracted network number suitable for use by other socket library functions.
      421      131        .SPB
      422      132        If the inet_network() function is unsuccessful, the status result contains
      423      133        EFAILURE or E$FAILURE.  The XSL$INET_NETWORK procedure additionally ALTRETURNs
      424      134        if it is unsuccessful; it is otherwise identical to the inet_network()
      425      135        function.
      426      136        ..::IT "Errors:"
      427      137        The status result contains EFAILURE or E$FAILURE if the conversion could
      428      138        not be performed.
      429      139        */
      430      140        /*F* NAME: inet_lnaof() and XSL$INET_LNAOF  -- Get Local Address from Internet Addr
               140        ess
      431      141        ..::IT "Purpose:"
      432      142        .INL +4
      433      143        Extracts the local network address from an Internet address.
      434      144        ..::IT "C Usage:"
      435      145        .INL 4
      436      146        .FIF
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:68   
      437      147        lnaddr = inet_lnaof( inaddr );
      438      148        ..::IT "PL6 Usage:"
      439      149        .INL 4
      440      150        .FIF
      441      151        CALL XSL$INET_LNAOF( lnaddr, inaddr );
      442      152        ..::IT "Parameters:"
      443      153        .INL 4
      444      154        .FIF
      445      155        inaddr      Internet address
      446      156        ..::IT "Result:"
      447      157        .INL 4
      448      158        .FIF
      449      159        lnaddr      integer local network address
      450      160        ..::IT "Description:"
      451      161        The inet_lnaof() function extracts the local network address from an Internet
      452      162        address.
      453      163        .SPB
      454      164        The inaddr parameter specifies the Internet address to process.
      455      165        .SPB
      456      166        On return from the inet_lnaof() function, the lnaddr result contains the
      457      167        extracted local network address.
      458      168        ..::IT "Errors:"
      459      169        The inet_lnaof() function always succeeds.  There are no error conditions.
      460      170        */
      461      171        /*F* NAME: inet_netof() and XSL$INET_NETOF  --  Get Network from Internet Address
      462      172        ..::IT "Purpose:"
      463      173        .INL +4
      464      174        Extracts the network number from an Internet address.
      465      175        ..::IT "C Usage:"
      466      176        .INL 4
      467      177        .FIF
      468      178        netnum = inet_netof( inaddr );
      469      179        ..::IT "PL6 Usage:"
      470      180        .INL 4
      471      181        .FIF
      472      182        CALL XSL$INET_NETOF( netnum, inaddr );
      473      183        ..::IT "Parameters:"
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:69   
      474      184        .INL 4
      475      185        .FIF
      476      186        inaddr      Internet address
      477      187        ..::IT "Result:"
      478      188        .INL 4
      479      189        .FIF
      480      190        netnum      integer network number
      481      191        ..::IT "Description:"
      482      192        The inet_netof() function extracts the network number from an Internet
      483      193        address.
      484      194        .SPB
      485      195        The inaddr parameter specifies the Internet address to process.
      486      196        .SPB
      487      197        On return from the inet_netof() function, the netnum result contains the
      488      198        extracted network number.
      489      199        ..::IT "Errors:"
      490      200        The inet_netof() function always succeeds.  There are no error conditions.
      491      201        */
      492      202        /*F* NAME: inet_ntoa() and XSL$INET_NTOA  --  Convert Inet Address to String
      493      203        ..::IT "Purpose:"
      494      204        .INL +4
      495      205        Converts an Internet address from binary representation to a character string.
      496      206        ..::IT "C Usage:"
      497      207        .INL 4
      498      208        .FIF
      499      209        cp = inet_ntoa( inaddr );
      500      210        ..::IT "PL6 Usage:"
      501      211        .INL 4
      502      212        .FIF
      503      213        CALL XSL$INET_NTOA( cp, inaddr );
      504      214        ..::IT "Parameters:"
      505      215        .INL 4
      506      216        .FIF
      507      217        inaddr      Internet address
      508      218        ..::IT "Result:"
      509      219        .INL 4
      510      220        .FIF
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:70   
      511      221        cp          pointer to character array
      512      222        ..::IT "Description:"
      513      223        The inet_ntoa() function converts an Internet address in binary to its
      514      224        character representation, which is a sequence of one to four decimal
      515      225        numbers separated by dots.
      516      226        ..::IX "dot notation, conversion to"
      517      227        .SPB
      518      228        The inaddr parameter specifies the Internet address to convert.
      519      229        .SPB
      520      230        On return from the inet_ntoa() function, the cp result points to a
      521      231        static buffer within the socket library that contains the converted string.
      522      232        ..::IT "Errors:"
      523      233        The inet_ntoa() function always succeeds.  There are no error conditions.
      524      234        */
      525      235        XSL$INET: PROC( RESULT, PARM1, PARM2) ALTRET;

    235  2 000000   000000 700200 xent  XSL$INET     TSX0  ! X66_AUTO_3
         2 000001   000034 000003                    ZERO    28,3
         2 000002   000005 710000 2                  TRA     s:4046

      526      236        %INCLUDE XU_MACRO_C;
      527     3342            %P_PCB( STCLASS=STATIC, W=PARSEWORK, WSZ="SIZEW( PARSEWORK)", R=R_INET,
      528     3343                    C_LD='  ', C_TL='  ', CNTU=NO);
      529     3542            %PARSE$OUT( NAME=ITM, STCLASS="BASED( ITM$)");
      530     3587            %PARSE$SYM( NAME=SYM, STCLASS="BASED( SYM$)");
      531     3625        %INCLUDE XSL_PERR_C;
      532     3680        %INCLUDE XSL_NODES_E;
      533     3712        %INCLUDE XSL_INTERNAL_M;
      534     3963            %XSL_REFDATA;
      535     3966
      536     3967    1       DCL XSL$HTONL ENTRY(2);
      537     3968    1       DCL XSL_NODES ENTRY CONV(5);
      538     3969    1       DCL X$PARSE ENTRY(1) ALTRET;
      539     3970
      540     3971    1       DCL R_INET SBIN SYMREF;
      541     3972    1       DCL XSL_NETMASK SBIN SYMREF;
      542     3973
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:71   
      543     3974    1       DCL B$PTR PTR BASED;
      544     3975    1       DCL BYTES CHAR( LEN) BASED;
      545     3976    1       DCL ENTRYFLAG SBIN;
      546     3977        %EQU INET_ADDR = 0;
      547     3978        %EQU INET_NETWORK = 1;
      548     3979    1       DCL I SBIN;
      549     3980    1       DCL IDX SBIN;
      550     3981    1       DCL 1 INET,
      551     3982    1           2 BYTES(0:3) UBIN BYTE CALIGNED;
      552     3983    1       DCL ITM$ PTR;
      553     3984    1       DCL LEN SBIN;
      554     3985    1       DCL PARSEWORK(0:99) SBIN STATIC;
      555     3986    1       DCL RESULT SBIN;
      556     3987    1       DCL RESULT$ PTR;
      557     3988    1       DCL PARM1 SBIN;
      558     3989    1       DCL PARM1$ PTR;
      559     3990    1       DCL PARM2 SBIN;
      560     3991    1       DCL PARM2$ PTR;
      561     3992    1       DCL SYM$ PTR;
      562     3993    1       DCL TEMP UBIN;
      563     3994    1       DCL TMPBUF CHAR(16) STATIC;
      564     3995    1       DCL TMP(0:3) REDEF TMPBUF UBIN;
      565     3996
      566     3997            /* What is an Internet address?
      567     3998
      568     3999            On 32-bit systems, four consecutive bytes of 8 bits each.  For CP-6,
      569     4000            four consecutive bytes ignoring the high-order bit of each byte.
      570     4001            Commonly represented in text as a 'character string in dot notation',
      571     4002            which is just each byte as a decimal number, separated by dots.  E.g.,
      572     4003            128.35.0.0 and 192.9.200.2 are Internet addresses.
      573     4004
      574     4005            An Internet address consists of two parts, whose names vary depending
      575     4006            on the documentation.  I'll use the terms netid and hostid.  The netid
      576     4007            identifies the network and the hostid identifies the host on that
      577     4008            network.  The netid field can be 1, 2, or 3 bytes long.  The hostid field
      578     4009            can be 3, 2, or 1 bytes long, respectively.  The length of the netid and
      579     4010            hostid fields are determined by inspecting the high-order bits of the
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:72   
      580     4011            Internet address, as follows.  (These are CP-6 Internet addresses.)
      581     4012
      582     4013            Class A address:
      583     4014            #-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#
      584     4015            |? 0 n n n n n n n ? h h h h h h h h ? h h h h h h h h ? h h h h h h h h|
      585     4016            #-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#
      586     4017            Internet addresses 0.0.0.0 thru 127.255.255.255.
      587     4018            Allows 126 networks with up to 16777214 hosts each.
      588     4019
      589     4020            Class B address:
      590     4021            #-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#
      591     4022            |? 1 0 n n n n n n ? n n n n n n n n ? h h h h h h h h ? h h h h h h h h|
      592     4023            #-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#
      593     4024            Internet addresses 128.0.0.0 thru 191.255.255.255.
      594     4025            Allows 16382 networks with up to 65534 hosts each.
      595     4026
      596     4027            Class C address:
      597     4028            #-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#
      598     4029            |? 1 1 0 n n n n n ? n n n n n n n n ? n n n n n n n n ? h h h h h h h h|
      599     4030            #-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#-+-+-+-+-+-+-+-+-#
      600     4031            Internet addresses 192.0.0.0 thru 223.255.255.255.
      601     4032            Allows 2097150 networks with up to 254 hosts each.
      602     4033
      603     4034            In practice, Class A and Class B networks are commonly divided up into
      604     4035            subnets, using a 'subnet mask' which is ANDed with the Internet address
      605     4036            to specify which bits define the netid.
      606     4037
      607     4038            The above should demonstrate the need for the procedures defined in this
      608     4039            module to extract netid and hostid fields from Internet addresses, combine
      609     4040            netid and hostid to construct an Internet address, and to convert an
      610     4041            Internet address between its internal and character string forms.
      611     4042            */
      612     4043
      613     4044    1   XSL$INET_MAKEADDR: ENTRY (RESULT, PARM1, PARM2) ALTRET;

   4044  2 000003   000000 700200 xent  XSL$INET_MA* TSX0  ! X66_AUTO_3
         2 000004   000034 000003                    ZERO    28,3
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:73   

      614     4045
      615     4046    1       TEMP = PARM1;

   4046  2 000005   200004 470500                    LDP0    @PARM1,,AUTO
         2 000006   000000 235100                    LDA     0,,PR0
         2 000007   200020 755100                    STA     TEMP,,AUTO

      616     4047    2       IF TEMP < 256 THEN DO;

   4047  2 000010   000400 115007                    CMPA    256,DL
         2 000011   000024 603000 2                  TRC     s:4052

      617     4048    2           RESULT = TEMP * 256 * 256 * 256;

   4048  2 000012   000030 735000                    ALS     24
         2 000013   200003 471500                    LDP1    @RESULT,,AUTO
         2 000014   100000 755100                    STA     0,,PR1

      618     4049    2           TEMP = PARM2;

   4049  2 000015   200005 473500                    LDP3    @PARM2,,AUTO
         2 000016   300000 235100                    LDA     0,,PR3
         2 000017   200020 755100                    STA     TEMP,,AUTO

      619     4050    2           RESULT = TEMP + RESULT;

   4050  2 000020   200020 236100                    LDQ     TEMP,,AUTO
         2 000021   100000 036100                    ADLQ    0,,PR1
         2 000022   100000 756100                    STQ     0,,PR1

      620     4051    2           END;

   4051  2 000023   000051 710000 2                  TRA     s:4062

      621     4052    2       ELSE IF TEMP < 65536 THEN DO;

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:74   
   4052  2 000024   200000 115007                    CMPA    65536,DL
         2 000025   000040 603000 2                  TRC     s:4058

      622     4053    2               RESULT = TEMP * 256 * 256;

   4053  2 000026   000020 735000                    ALS     16
         2 000027   200003 471500                    LDP1    @RESULT,,AUTO
         2 000030   100000 755100                    STA     0,,PR1

      623     4054    2               TEMP = PARM2;

   4054  2 000031   200005 473500                    LDP3    @PARM2,,AUTO
         2 000032   300000 235100                    LDA     0,,PR3
         2 000033   200020 755100                    STA     TEMP,,AUTO

      624     4055    2               RESULT = TEMP + RESULT;

   4055  2 000034   200020 236100                    LDQ     TEMP,,AUTO
         2 000035   100000 036100                    ADLQ    0,,PR1
         2 000036   100000 756100                    STQ     0,,PR1

      625     4056    2               END;

   4056  2 000037   000051 710000 2                  TRA     s:4062

      626     4057    2           ELSE DO;

      627     4058    2               RESULT = TEMP * 256;

   4058  2 000040   000010 735000                    ALS     8
         2 000041   200003 471500                    LDP1    @RESULT,,AUTO
         2 000042   100000 755100                    STA     0,,PR1

      628     4059    2               TEMP = PARM2;

   4059  2 000043   200005 473500                    LDP3    @PARM2,,AUTO
         2 000044   300000 235100                    LDA     0,,PR3
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:75   
         2 000045   200020 755100                    STA     TEMP,,AUTO

      629     4060    2               RESULT = TEMP + RESULT;

   4060  2 000046   200020 236100                    LDQ     TEMP,,AUTO
         2 000047   100000 036100                    ADLQ    0,,PR1
         2 000050   100000 756100                    STQ     0,,PR1

      630     4061    2               END;

      631     4062    1       RETURN;

   4062  2 000051   000000 702200 xent               TSX2  ! X66_ARET

      632     4063
      633     4064    1   XSL$INET_ADDR: ENTRY( RESULT, PARM1) ALTRET;

   4064  2 000052   000000 700200 xent  XSL$INET_AD* TSX0  ! X66_AUTO_3
         2 000053   000034 000003                    ZERO    28,3

      634     4065
      635     4066            /* convert char string PARM1 in dot notation to Internet address */
      636     4067    1       ENTRYFLAG = %INET_ADDR;

   4067  2 000054   200006 450100                    STZ     ENTRYFLAG,,AUTO

      637     4068    1   COMMON:
      638     4069    1       PARM1$ = ADDR( PARM1);

   4069  2 000055   200004 236100       COMMON       LDQ     @PARM1,,AUTO
         2 000056   200015 756100                    STQ     PARM1$,,AUTO

      639     4070    1       LEN = 36;  /* assume 36 bytes to start */

   4070  2 000057   000044 235007                    LDA     36,DL
         2 000060   200013 755100                    STA     LEN,,AUTO

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:76   
      640     4071            /* look for trailing NUL */
      641     4072    1       CALL INDEX( LEN, BINASC(0), PARM1$->BYTES)

   4072  2 000061   200015 470500                    LDP0    PARM1$,,AUTO
         2 000062   000000 620005                    EAX0    0,AL
         2 000063   000000 124540                    SCM     mask='000'O
         2 000064   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 000065   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000066   200013 000100                    ARG     LEN,,AUTO
         2 000067   000071 606400 2                  TTN     s:4075
         2 000070   000100 710000 2                  TRA     s:4078

      642     4073    2       WHENALTRETURN DO;

      643     4074                /* look for trailing blank */
      644     4075    2           CALL INDEX( LEN, ' ', PARM1$->BYTES) ALTRET( ERROR);

   4075  2 000071   200015 470500                    LDP0    PARM1$,,AUTO
         2 000072   200013 720100                    LXL0    LEN,,AUTO
         2 000073   000000 124540                    SCM     mask='000'O
         2 000074   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 000075   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000076   200013 000100                    ARG     LEN,,AUTO
         2 000077   000327 606400 2                  TTN     ERROR

      645     4076    2           END;

      646     4077            /* now parse the string using the adjusted length */
      647     4078    1       P_PCB.TEXT$ = PARM1$;

   4078  2 000100   200015 236100                    LDQ     PARM1$,,AUTO
         2 000101   000000 756000 0                  STQ     P_PCB

      648     4079    1       P_PCB.NCHARS = LEN;

   4079  2 000102   200013 235100                    LDA     LEN,,AUTO
         2 000103   000011 755000 0                  STA     P_PCB+9
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:77   

      649     4080    1       CALL X$PARSE( P_PCB) ALTRET( ERROR);

   4080  2 000104   000001 630400 3                  EPPR0   1
         2 000105   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000106   000000 701000 xent               TSX1    X$PARSE
         2 000107   000327 702000 2                  TSX2    ERROR

      650     4081    1       ITM$ = P_PCB.OUT$;

   4081  2 000110   000003 236000 0                  LDQ     P_PCB+3
         2 000111   200012 756100                    STQ     ITM$,,AUTO

      651     4082
      652     4083    2       DO I = 0 TO ITM.NSUBLKS - 1;

   4083  2 000112   200007 450100                    STZ     I,,AUTO
         2 000113   000165 710000 2                  TRA     s:4095+1

      653     4084    2           SYM$ = ITM.SUBLK$( I);

   4084  2 000114   200012 470500                    LDP0    ITM$,,AUTO
         2 000115   200007 720100                    LXL0    I,,AUTO
         2 000116   000003 236110                    LDQ     3,X0,PR0
         2 000117   200017 756100                    STQ     SYM$,,AUTO

      654     4085    3           DO CASE( SYM.CODE);

   4085  2 000120   200017 471500                    LDP1    SYM$,,AUTO
         2 000121   100000 721100                    LXL1    0,,PR1
         2 000122   000005 101003                    CMPX1   5,DU
         2 000123   000125 602011 2                  TNC     s:4085+5,X1
         2 000124   000160 710000 2                  TRA     s:4093
         2 000125   000160 710000 2                  TRA     s:4093
         2 000126   000160 710000 2                  TRA     s:4093
         2 000127   000132 710000 2                  TRA     s:4087
         2 000130   000141 710000 2                  TRA     s:4089
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:78   
         2 000131   000150 710000 2                  TRA     s:4091

      655     4086    3               CASE( %HEX);

      656     4087    3                   CALL CHARHEX( TMP( I), SYM.COUNT);

   4087  2 000132   000004 036003                    ADLQ    4,DU
         2 000133   200024 756100                    STQ     @VALUE+1,,AUTO
         2 000134   000162 633410 0                  EPPR3   TMPBUF,X0
         2 000135   200023 453500                    STP3    TEMP+3,,AUTO
         2 000136   000577 701000 2                  TSX1    CHARHEX
         2 000137   000000 011000                    NOP     0
         2 000140   000160 710000 2                  TRA     s:4093

      657     4088    3               CASE( %OCT);

      658     4089    3                   CALL CHAROCT( TMP( I), SYM.COUNT);

   4089  2 000141   000004 036003                    ADLQ    4,DU
         2 000142   200024 756100                    STQ     @VALUE+1,,AUTO
         2 000143   000162 633410 0                  EPPR3   TMPBUF,X0
         2 000144   200023 453500                    STP3    TEMP+3,,AUTO
         2 000145   000643 701000 2                  TSX1    CHAROCT
         2 000146   000000 011000                    NOP     0
         2 000147   000160 710000 2                  TRA     s:4093

      659     4090    3               CASE( %DEC);

      660     4091    3                   CALL CHARBIN( TMP( I), SYM.TEXT);

   4091  2 000150   100004 236100                    LDQ     4,,PR1
         2 000151   000033 772000                    QRL     27
         2 000152   000000 622006                    EAX2    0,QL
         2 000153   000100 305540                    DTB
         2 000154   100004 230012                    NDSC9   4,,PR1                   cn=1,s=nosgn,sf=0,n=*X2
         2 000155   200030 000010                    NDSC9   TEMP+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000156   200031 235100                    LDA     TEMP+2,,AUTO
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:79   
         2 000157   000162 755010 0                  STA     TMPBUF,X0

      661     4092    3               END;

      662     4093    2           IF TMP( I) > 255 THEN

   4093  2 000160   200007 720100                    LXL0    I,,AUTO
         2 000161   000162 235010 0                  LDA     TMPBUF,X0
         2 000162   000400 115007                    CMPA    256,DL
         2 000163   000327 603000 2                  TRC     ERROR

      663     4094    2               GOTO ERROR;
      664     4095    2           END;

   4095  2 000164   200007 054100                    AOS     I,,AUTO
         2 000165   200012 470500                    LDP0    ITM$,,AUTO
         2 000166   000001 236100                    LDQ     1,,PR0
         2 000167   000022 772000                    QRL     18
         2 000170   200007 116100                    CMPQ    I,,AUTO
         2 000171   000114 605400 2                  TPNZ    s:4084

      665     4096    2       IF ENTRYFLAG = %INET_NETWORK THEN DO;

   4096  2 000172   200006 235100                    LDA     ENTRYFLAG,,AUTO
         2 000173   000001 115007                    CMPA    1,DL
         2 000174   000217 601000 2                  TNZ     s:4104

      666     4097    2           TEMP = 0;

   4097  2 000175   200020 450100                    STZ     TEMP,,AUTO

      667     4098    3           DO I = 0 TO ITM.NSUBLKS - 1;

   4098  2 000176   200007 450100                    STZ     I,,AUTO
         2 000177   000206 710000 2                  TRA     s:4100+1

      668     4099    3               TEMP = ( TEMP * 256) + TMP( I);
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:80   

   4099  2 000200   200007 720100                    LXL0    I,,AUTO
         2 000201   200020 236100                    LDQ     TEMP,,AUTO
         2 000202   000010 736000                    QLS     8
         2 000203   000162 036010 0                  ADLQ    TMPBUF,X0
         2 000204   200020 756100                    STQ     TEMP,,AUTO

      669     4100    3               END;

   4100  2 000205   200007 054100                    AOS     I,,AUTO
         2 000206   200012 470500                    LDP0    ITM$,,AUTO
         2 000207   000001 236100                    LDQ     1,,PR0
         2 000210   000022 772000                    QRL     18
         2 000211   200007 116100                    CMPQ    I,,AUTO
         2 000212   000200 605400 2                  TPNZ    s:4099

      670     4101    2           RESULT = TEMP;

   4101  2 000213   200020 235100                    LDA     TEMP,,AUTO
         2 000214   200003 471500                    LDP1    @RESULT,,AUTO
         2 000215   100000 755100                    STA     0,,PR1

      671     4102    2           RETURN;

   4102  2 000216   000000 702200 xent               TSX2  ! X66_ARET

      672     4103    2           END;
      673     4104    2       DO CASE( ITM.NSUBLKS);

   4104  2 000217   000001 220100                    LDX0    1,,PR0
         2 000220   000005 100003                    CMPX0   5,DU
         2 000221   000223 602010 2                  TNC     s:4104+4,X0
         2 000222   000323 710000 2                  TRA     s:4126
         2 000223   000323 710000 2                  TRA     s:4126
         2 000224   000230 710000 2                  TRA     s:4106
         2 000225   000252 710000 2                  TRA     s:4111
         2 000226   000272 710000 2                  TRA     s:4116
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:81   
         2 000227   000310 710000 2                  TRA     s:4121

      674     4105    2           CASE( 1);

      675     4106    2               INET.BYTES(0) = TMP(0) / 16777216;

   4106  2 000230   000162 236000 0                  LDQ     TMPBUF
         2 000231   000030 772000                    QRL     24
         2 000232   000033 736000                    QLS     27
         2 000233   200011 552140                    STBQ    INET,'40'O,AUTO

      676     4107    2               INET.BYTES(1) = MOD( TMP(0), 16777216) / 65536;

   4107  2 000234   000162 236000 0                  LDQ     TMPBUF
         2 000235   000002 376000 3                  ANQ     2
         2 000236   000020 772000                    QRL     16
         2 000237   000022 736000                    QLS     18
         2 000240   200011 552120                    STBQ    INET,'20'O,AUTO

      677     4108    2               INET.BYTES(2) = MOD( TMP(0), 65536) / 256;

   4108  2 000241   000162 236000 0                  LDQ     TMPBUF
         2 000242   177777 376007                    ANQ     65535,DL
         2 000243   000010 772000                    QRL     8
         2 000244   000011 736000                    QLS     9
         2 000245   200011 552110                    STBQ    INET,'10'O,AUTO

      678     4109    2               INET.BYTES(3) = MOD( TMP(0), 256);

   4109  2 000246   000162 236000 0                  LDQ     TMPBUF
         2 000247   000377 376007                    ANQ     255,DL
         2 000250   200011 552104                    STBQ    INET,'04'O,AUTO
         2 000251   000323 710000 2                  TRA     s:4126

      679     4110    2           CASE( 2);

      680     4111    2               INET.BYTES(0) = TMP(0);
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:82   

   4111  2 000252   000162 236000 0                  LDQ     TMPBUF
         2 000253   000033 736000                    QLS     27
         2 000254   200011 552140                    STBQ    INET,'40'O,AUTO

      681     4112    2               INET.BYTES(1) = TMP(1) / 65536;

   4112  2 000255   000163 236000 0                  LDQ     TMPBUF+1
         2 000256   000020 772000                    QRL     16
         2 000257   000022 736000                    QLS     18
         2 000260   200011 552120                    STBQ    INET,'20'O,AUTO

      682     4113    2               INET.BYTES(2) = MOD( TMP(1), 65536) / 256;

   4113  2 000261   000163 236000 0                  LDQ     TMPBUF+1
         2 000262   177777 376007                    ANQ     65535,DL
         2 000263   000010 772000                    QRL     8
         2 000264   000011 736000                    QLS     9
         2 000265   200011 552110                    STBQ    INET,'10'O,AUTO

      683     4114    2               INET.BYTES(3) = MOD( TMP(1), 256);

   4114  2 000266   000163 236000 0                  LDQ     TMPBUF+1
         2 000267   000377 376007                    ANQ     255,DL
         2 000270   200011 552104                    STBQ    INET,'04'O,AUTO
         2 000271   000323 710000 2                  TRA     s:4126

      684     4115    2           CASE( 3);

      685     4116    2               INET.BYTES(0) = TMP(0);

   4116  2 000272   000162 236000 0                  LDQ     TMPBUF
         2 000273   000033 736000                    QLS     27
         2 000274   200011 552140                    STBQ    INET,'40'O,AUTO

      686     4117    2               INET.BYTES(1) = TMP(1);

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:83   
   4117  2 000275   000163 236000 0                  LDQ     TMPBUF+1
         2 000276   000022 736000                    QLS     18
         2 000277   200011 552120                    STBQ    INET,'20'O,AUTO

      687     4118    2               INET.BYTES(2) = TMP(2) / 256;

   4118  2 000300   000164 236000 0                  LDQ     TMPBUF+2
         2 000301   000010 772000                    QRL     8
         2 000302   000011 736000                    QLS     9
         2 000303   200011 552110                    STBQ    INET,'10'O,AUTO

      688     4119    2               INET.BYTES(3) = MOD( TMP(2), 256);

   4119  2 000304   000164 236000 0                  LDQ     TMPBUF+2
         2 000305   000377 376007                    ANQ     255,DL
         2 000306   200011 552104                    STBQ    INET,'04'O,AUTO
         2 000307   000323 710000 2                  TRA     s:4126

      689     4120    2           CASE( 4);

      690     4121    2               INET.BYTES(0) = TMP(0);

   4121  2 000310   000162 236000 0                  LDQ     TMPBUF
         2 000311   000033 736000                    QLS     27
         2 000312   200011 552140                    STBQ    INET,'40'O,AUTO

      691     4122    2               INET.BYTES(1) = TMP(1);

   4122  2 000313   000163 236000 0                  LDQ     TMPBUF+1
         2 000314   000022 736000                    QLS     18
         2 000315   200011 552120                    STBQ    INET,'20'O,AUTO

      692     4123    2               INET.BYTES(2) = TMP(2);

   4123  2 000316   000164 236000 0                  LDQ     TMPBUF+2
         2 000317   000011 736000                    QLS     9
         2 000320   200011 552110                    STBQ    INET,'10'O,AUTO
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:84   

      693     4124    2               INET.BYTES(3) = TMP(3);

   4124  2 000321   000165 236000 0                  LDQ     TMPBUF+3
         2 000322   200011 552104                    STBQ    INET,'04'O,AUTO

      694     4125    2           END;

      695     4126    1       RESULT = BITBIN( INET);

   4126  2 000323   200011 236100                    LDQ     INET,,AUTO
         2 000324   200003 471500                    LDP1    @RESULT,,AUTO
         2 000325   100000 756100                    STQ     0,,PR1

      696     4127    1       RETURN;

   4127  2 000326   000000 702200 xent               TSX2  ! X66_ARET

      697     4128    1   ERROR:
      698     4129    1       RESULT = %E$FAILURE;

   4129  2 000327   000001 335007       ERROR        LCA     1,DL
         2 000330   200003 470500                    LDP0    @RESULT,,AUTO
         2 000331   000000 755100                    STA     0,,PR0

      699     4130    1       ALTRETURN;

   4130  2 000332   000000 702200 xent               TSX2  ! X66_AALT

      700     4131
      701     4132    1   XSL$INET_NETWORK: ENTRY( RESULT, PARM1) ALTRET;

   4132  2 000333   000000 700200 xent  XSL$INET_NE* TSX0  ! X66_AUTO_3
         2 000334   000034 000003                    ZERO    28,3

      702     4133
      703     4134            /* convert char string PARM1 in dot notation to netid */
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:85   
      704     4135    1       ENTRYFLAG = %INET_NETWORK;

   4135  2 000335   000001 235007                    LDA     1,DL
         2 000336   200006 755100                    STA     ENTRYFLAG,,AUTO

      705     4136    1       GOTO COMMON;

   4136  2 000337   000055 710000 2                  TRA     COMMON

      706     4137
      707     4138    1   XSL$INET_LNAOF: ENTRY( RESULT, PARM1) ALTRET;

   4138  2 000340   000000 700200 xent  XSL$INET_LN* TSX0  ! X66_AUTO_3
         2 000341   000034 000003                    ZERO    28,3

      708     4139
      709     4140            /* extract hostid from Internet address PARM1 */
      710     4141    2       IF XSL_NETMASK ~= -1 THEN DO;

   4141  2 000342   000000 235000 xsym               LDA     XSL_NETMASK
         2 000343   000027 115000 xsym               CMPA    B_VECTNIL+23
         2 000344   000363 600000 2                  TZE     s:4146

      711     4142    2           TEMP = BITBIN( BINBIT( PARM1, 36) & ~BINBIT( XSL_NETMASK, 36));

   4142  2 000345   000000 236000 xsym               LDQ     XSL_NETMASK
         2 000346   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 000347   200004 470500                    LDP0    @PARM1,,AUTO
         2 000350   000000 376100                    ANQ     0,,PR0
         2 000351   200020 756100                    STQ     TEMP,,AUTO

      712     4143    2           CALL XSL$HTONL( RESULT, TEMP);

   4143  2 000352   200020 631500                    EPPR1   TEMP,,AUTO
         2 000353   200031 451500                    STP1    TEMP+2,,AUTO
         2 000354   200003 236100                    LDQ     @RESULT,,AUTO
         2 000355   200030 756100                    STQ     TEMP+1,,AUTO
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:86   
         2 000356   200030 630500                    EPPR0   TEMP+1,,AUTO
         2 000357   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000360   000000 701000 xent               TSX1    XSL$HTONL
         2 000361   000000 011000                    NOP     0

      713     4144    2           RETURN;

   4144  2 000362   000000 702200 xent               TSX2  ! X66_ARET

      714     4145    2           END;
      715     4146    1       INET = BINBIT( PARM1, 36);

   4146  2 000363   200004 470500                    LDP0    @PARM1,,AUTO
         2 000364   000000 236100                    LDQ     0,,PR0
         2 000365   200011 756100                    STQ     INET,,AUTO

      716     4147    1       TEMP = INET.BYTES(0);

   4147  2 000366   200011 236100                    LDQ     INET,,AUTO
         2 000367   000033 772000                    QRL     27
         2 000370   200020 756100                    STQ     TEMP,,AUTO

      717     4148    1       IF TEMP >= 192 THEN

   4148  2 000371   000300 116007                    CMPQ    192,DL
         2 000372   000376 602000 2                  TNC     s:4151

      718     4149    1           LEN = 3;

   4149  2 000373   000003 235007                    LDA     3,DL
         2 000374   200013 755100                    STA     LEN,,AUTO
         2 000375   000405 710000 2                  TRA     s:4155

      719     4150    1       ELSE
      720     4151    1           IF TEMP >= 128 THEN

   4151  2 000376   000200 116007                    CMPQ    128,DL
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:87   
         2 000377   000403 602000 2                  TNC     s:4154

      721     4152    1               LEN = 2;

   4152  2 000400   000002 235007                    LDA     2,DL
         2 000401   200013 755100                    STA     LEN,,AUTO
         2 000402   000405 710000 2                  TRA     s:4155

      722     4153    1           ELSE
      723     4154    1               LEN = 1;

   4154  2 000403   000001 235007                    LDA     1,DL
         2 000404   200013 755100                    STA     LEN,,AUTO

      724     4155    1       TEMP = 0;

   4155  2 000405   200020 450100                    STZ     TEMP,,AUTO

      725     4156    2       DO I = LEN TO 3;

   4156  2 000406   200007 755100                    STA     I,,AUTO
         2 000407   000421 710000 2                  TRA     s:4158+1

      726     4157    2           TEMP = ( TEMP * 256) + INET.BYTES( I);

   4157  2 000410   200007 235100                    LDA     I,,AUTO
         2 000411   000100 101505                    MRL     fill='000'O
         2 000412   200011 000001                    ADSC9   INET,A,AUTO              cn=0,n=1
         2 000413   200030 000004                    ADSC9   TEMP+1,,AUTO             cn=0,n=4
         2 000414   200020 236100                    LDQ     TEMP,,AUTO
         2 000415   000010 736000                    QLS     8
         2 000416   200030 036100                    ADLQ    TEMP+1,,AUTO
         2 000417   200020 756100                    STQ     TEMP,,AUTO

      727     4158    2           END;

   4158  2 000420   200007 054100                    AOS     I,,AUTO
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:88   
         2 000421   200007 235100                    LDA     I,,AUTO
         2 000422   000003 115007                    CMPA    3,DL
         2 000423   000410 604400 2                  TMOZ    s:4157

      728     4159    1       RESULT = TEMP;

   4159  2 000424   200020 236100                    LDQ     TEMP,,AUTO
         2 000425   200003 470500                    LDP0    @RESULT,,AUTO
         2 000426   000000 756100                    STQ     0,,PR0

      729     4160    1       RETURN;

   4160  2 000427   000000 702200 xent               TSX2  ! X66_ARET

      730     4161
      731     4162    1   XSL$INET_NETOF: ENTRY( RESULT, PARM1) ALTRET;

   4162  2 000430   000000 700200 xent  XSL$INET_NE* TSX0  ! X66_AUTO_3
         2 000431   000034 000003                    ZERO    28,3

      732     4163
      733     4164    1       INET = BINBIT( PARM1, 36);

   4164  2 000432   200004 470500                    LDP0    @PARM1,,AUTO
         2 000433   000000 236100                    LDQ     0,,PR0
         2 000434   200011 756100                    STQ     INET,,AUTO

      734     4165    1       I = INET.BYTES(0);

   4165  2 000435   200011 236100                    LDQ     INET,,AUTO
         2 000436   000033 772000                    QRL     27
         2 000437   200007 756100                    STQ     I,,AUTO

      735     4166    1       I = I / 64;

   4166  2 000440   000100 506007                    DIV     64,DL
         2 000441   200007 756100                    STQ     I,,AUTO
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:89   

      736     4167    2       DO CASE (I);

   4167  2 000442   000004 116007                    CMPQ    4,DL
         2 000443   000445 602006 2                  TNC     s:4167+3,QL
         2 000444   000513 710000 2                  TRA     s:4178
         2 000445   000451 710000 2                  TRA     s:4169
         2 000446   000451 710000 2                  TRA     s:4169
         2 000447   000456 710000 2                  TRA     s:4171
         2 000450   000471 710000 2                  TRA     s:4174

      737     4168    2           CASE (0,1);

      738     4169    2               RESULT = INET.BYTES(0);

   4169  2 000451   200011 236100                    LDQ     INET,,AUTO
         2 000452   000033 772000                    QRL     27
         2 000453   200003 471500                    LDP1    @RESULT,,AUTO
         2 000454   100000 756100                    STQ     0,,PR1
         2 000455   000513 710000 2                  TRA     s:4178

      739     4170    2           CASE (2);

      740     4171    2               RESULT = INET.BYTES(0) * 256 +

   4171  2 000456   200011 236100                    LDQ     INET,,AUTO
         2 000457   000022 772000                    QRL     18
         2 000460   000777 376007                    ANQ     511,DL
         2 000461   200030 756100                    STQ     TEMP+1,,AUTO
         2 000462   200011 236100                    LDQ     INET,,AUTO
         2 000463   000023 772000                    QRL     19
         2 000464   377400 376007                    ANQ     130816,DL
         2 000465   200030 036100                    ADLQ    TEMP+1,,AUTO
         2 000466   200003 471500                    LDP1    @RESULT,,AUTO
         2 000467   100000 756100                    STQ     0,,PR1
         2 000470   000513 710000 2                  TRA     s:4178

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:90   
      741     4172    2                 INET.BYTES(1);
      742     4173    2           CASE (3);

      743     4174    2               RESULT = INET.BYTES(0) * 256 * 256 +

   4174  2 000471   200011 236100                    LDQ     INET,,AUTO
         2 000472   000022 772000                    QRL     18
         2 000473   000777 376007                    ANQ     511,DL
         2 000474   200030 756100                    STQ     TEMP+1,,AUTO
         2 000475   200011 236100                    LDQ     INET,,AUTO
         2 000476   000023 772000                    QRL     19
         2 000477   377400 376007                    ANQ     130816,DL
         2 000500   200030 036100                    ADLQ    TEMP+1,,AUTO
         2 000501   200031 756100                    STQ     TEMP+2,,AUTO
         2 000502   200011 236100                    LDQ     INET,,AUTO
         2 000503   000011 772000                    QRL     9
         2 000504   000777 376007                    ANQ     511,DL
         2 000505   200032 756100                    STQ     TEMP+3,,AUTO
         2 000506   200031 236100                    LDQ     TEMP+2,,AUTO
         2 000507   000010 736000                    QLS     8
         2 000510   200032 036100                    ADLQ    TEMP+3,,AUTO
         2 000511   200003 471500                    LDP1    @RESULT,,AUTO
         2 000512   100000 756100                    STQ     0,,PR1

      744     4175    2                 INET.BYTES(1) * 256 +
      745     4176    2                 INET.BYTES(2);
      746     4177    2           END;

      747     4178    1       RETURN;

   4178  2 000513   000000 702200 xent               TSX2  ! X66_ARET

      748     4179
      749     4180    1   XSL$INET_NTOA: ENTRY( RESULT, PARM1) ALTRET;

   4180  2 000514   000000 700200 xent  XSL$INET_NT* TSX0  ! X66_AUTO_3
         2 000515   000034 000003                    ZERO    28,3
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:91   

      750     4181
      751     4182            /* convert Internet address PARM1 to char string in dot notation */
      752     4183    1       INET = BINBIT( PARM1, 36);

   4183  2 000516   200004 470500                    LDP0    @PARM1,,AUTO
         2 000517   000000 236100                    LDQ     0,,PR0
         2 000520   200011 756100                    STQ     INET,,AUTO

      753     4184    1       IDX = 0;

   4184  2 000521   200010 450100                    STZ     IDX,,AUTO

      754     4185    2       DO I = 0 TO 3;

   4185  2 000522   200007 450100                    STZ     I,,AUTO

      755     4186    2           TEMP = INET.BYTES( I);

   4186  2 000523   200007 235100                    LDA     I,,AUTO
         2 000524   000100 101505                    MRL     fill='000'O
         2 000525   200011 000001                    ADSC9   INET,A,AUTO              cn=0,n=1
         2 000526   200020 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

      756     4187    2           IF TEMP >= 100 THEN

   4187  2 000527   200020 236100                    LDQ     TEMP,,AUTO
         2 000530   000144 116007                    CMPQ    100,DL
         2 000531   000535 602000 2                  TNC     s:4190

      757     4188    2               LEN = 3;

   4188  2 000532   000003 235007                    LDA     3,DL
         2 000533   200013 755100                    STA     LEN,,AUTO
         2 000534   000544 710000 2                  TRA     s:4194

      758     4189    2           ELSE
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:92   
      759     4190    2               IF TEMP >= 10 THEN

   4190  2 000535   000012 116007                    CMPQ    10,DL
         2 000536   000542 602000 2                  TNC     s:4193

      760     4191    2                   LEN = 2;

   4191  2 000537   000002 235007                    LDA     2,DL
         2 000540   200013 755100                    STA     LEN,,AUTO
         2 000541   000544 710000 2                  TRA     s:4194

      761     4192    2               ELSE
      762     4193    2                   LEN = 1;

   4193  2 000542   000001 235007                    LDA     1,DL
         2 000543   200013 755100                    STA     LEN,,AUTO

      763     4194    2           CALL BINCHAR( SUBSTR( TMPBUF, IDX, LEN), TEMP);

   4194  2 000544   000000 235003                    LDA     0,DU
         2 000545   200030 757100                    STAQ    TEMP+1,,AUTO
         2 000546   200013 720100                    LXL0    LEN,,AUTO
         2 000547   200010 235100                    LDA     IDX,,AUTO
         2 000550   000045 301500                    BTD
         2 000551   200030 000010                    NDSC9   TEMP+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000552   000162 030010 0                  NDSC9   TMPBUF,A                 cn=0,s=nosgn,sf=0,n=*X0

      764     4195    2           CALL INSERT( TMPBUF, IDX + LEN, 1, '.');

   4195  2 000553   200010 236100                    LDQ     IDX,,AUTO
         2 000554   200013 036100                    ADLQ    LEN,,AUTO
         2 000555   040006 100400                    MLR     fill='040'O
         2 000556   000003 000001 3                  ADSC9   3                        cn=0,n=1
         2 000557   000162 000001 0                  ADSC9   TMPBUF,Q                 cn=0,n=1

      765     4196    2           IDX = IDX + LEN + 1;

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:93   
   4196  2 000560   200010 236100                    LDQ     IDX,,AUTO
         2 000561   200013 036100                    ADLQ    LEN,,AUTO
         2 000562   000001 036007                    ADLQ    1,DL
         2 000563   200010 756100                    STQ     IDX,,AUTO

      766     4197    2           END;

   4197  2 000564   200007 054100                    AOS     I,,AUTO
         2 000565   200007 235100                    LDA     I,,AUTO
         2 000566   000003 115007                    CMPA    3,DL
         2 000567   000523 604400 2                  TMOZ    s:4186

      767     4198    1       CALL INSERT( TMPBUF, IDX - 1, 1, BINASC(0));

   4198  2 000570   040006 100400                    MLR     fill='040'O
         2 000571   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000572   000161 600001 0                  ADSC9   PARSEWORK+99,Q           cn=3,n=1

      768     4199    1       ADDR( RESULT)->B$PTR = ADDR( TMPBUF);

   4199  2 000573   000004 236000 3                  LDQ     4
         2 000574   200003 470500                    LDP0    @RESULT,,AUTO
         2 000575   000000 756100                    STQ     0,,PR0

      769     4200    1       RETURN;

   4200  2 000576   000000 702200 xent               TSX2  ! X66_ARET

      770     4201
      771     4202    1   CHARHEX: PROC( VALUE, TXTC);

   4202  2 000577   200022 741300       CHARHEX      STX1  ! TEMP+2,,AUTO

      772     4203
      773     4204    2       DCL HEXCHARS CHAR(0) CONSTANT INIT( '0123456789ABCDEF');
      774     4205    2       DCL I SBIN;
      775     4206    2       DCL LEN SBIN;
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:94   
      776     4207    2       DCL TEMP SBIN;
      777     4208    2       DCL 1 TXTC,
      778     4209    2           2 LEN UBIN BYTE CALIGNED,
      779     4210    2           2 TXT CHAR( TXTC.LEN) CALIGNED;
      780     4211    2       DCL VALUE UBIN;
      781     4212
      782     4213    2       VALUE = 0;

   4213  2 000600   200023 470500                    LDP0    @VALUE,,AUTO
         2 000601   000000 450100                    STZ     0,,PR0

      783     4214    2       LEN = TXTC.LEN;

   4214  2 000602   200024 471500                    LDP1    @TXTC,,AUTO
         2 000603   000100 101500                    MRL     fill='000'O
         2 000604   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000605   200026 000004                    ADSC9   LEN,,AUTO                cn=0,n=4

      784     4215    3       DO I = 0 TO LEN - 1;

   4215  2 000606   200025 450100                    STZ     I,,AUTO
         2 000607   000636 710000 2                  TRA     s:4219+1

      785     4216    3           TEMP = ASCBIN( SUBSTR( TXTC.TXT, I, 1));

   4216  2 000610   200024 470500                    LDP0    @TXTC,,AUTO
         2 000611   000100 101500                    MRL     fill='000'O
         2 000612   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000613   200030 000002                    ADSC9   TEMP+1,,AUTO             cn=0,n=2
         2 000614   200030 220100                    LDX0    TEMP+1,,AUTO
         2 000615   200025 235100                    LDA     I,,AUTO
         2 000616   000100 101505                    MRL     fill='000'O
         2 000617   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         2 000620   200031 000004                    ADSC9   TEMP+2,,AUTO             cn=0,n=4
         2 000621   200031 236100                    LDQ     TEMP+2,,AUTO
         2 000622   200027 756100                    STQ     TEMP,,AUTO

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:95   
      786     4217    3           IF TEMP >= 61 THEN TEMP = TEMP - 7;

   4217  2 000623   000075 116007                    CMPQ    61,DL
         2 000624   000627 604000 2                  TMI     s:4218

   4217  2 000625   000007 336007                    LCQ     7,DL
         2 000626   200027 056100                    ASQ     TEMP,,AUTO

      787     4218    3           VALUE = ( VALUE * 16) + TEMP - 48;

   4218  2 000627   200023 471500                    LDP1    @VALUE,,AUTO
         2 000630   100000 236100                    LDQ     0,,PR1
         2 000631   000004 736000                    QLS     4
         2 000632   200027 036100                    ADLQ    TEMP,,AUTO
         2 000633   000060 136007                    SBLQ    48,DL
         2 000634   100000 756100                    STQ     0,,PR1

      788     4219    3           END;

   4219  2 000635   200025 054100                    AOS     I,,AUTO
         2 000636   200025 236100                    LDQ     I,,AUTO
         2 000637   200026 116100                    CMPQ    LEN,,AUTO
         2 000640   000610 604000 2                  TMI     s:4216

      789     4220    2       RETURN;

   4220  2 000641   200022 221300                    LDX1  ! TEMP+2,,AUTO
         2 000642   000001 702211                    TSX2  ! 1,X1

      790     4221
      791     4222    2   CHAROCT: ENTRY( VALUE, TXTC);

   4222  2 000643   200022 741300       CHAROCT      STX1  ! TEMP+2,,AUTO

      792     4223
      793     4224    2       VALUE = 0;

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:96   
   4224  2 000644   200023 470500                    LDP0    @VALUE,,AUTO
         2 000645   000000 450100                    STZ     0,,PR0

      794     4225    2       LEN = TXTC.LEN;

   4225  2 000646   200024 471500                    LDP1    @TXTC,,AUTO
         2 000647   000100 101500                    MRL     fill='000'O
         2 000650   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000651   200026 000004                    ADSC9   LEN,,AUTO                cn=0,n=4

      795     4226    3       DO I = 0 TO LEN - 1;

   4226  2 000652   200025 450100                    STZ     I,,AUTO
         2 000653   000676 710000 2                  TRA     s:4228+1

      796     4227    3           VALUE = ( VALUE * 8) + ASCBIN( SUBSTR( TXTC.TXT, I, 1)) - 48;

   4227  2 000654   200024 470500                    LDP0    @TXTC,,AUTO
         2 000655   000100 101500                    MRL     fill='000'O
         2 000656   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000657   200030 000002                    ADSC9   TEMP+1,,AUTO             cn=0,n=2
         2 000660   200030 220100                    LDX0    TEMP+1,,AUTO
         2 000661   200025 235100                    LDA     I,,AUTO
         2 000662   000100 101505                    MRL     fill='000'O
         2 000663   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         2 000664   200031 000004                    ADSC9   TEMP+2,,AUTO             cn=0,n=4
         2 000665   200031 236100                    LDQ     TEMP+2,,AUTO
         2 000666   200032 756100                    STQ     TEMP+3,,AUTO
         2 000667   200023 471500                    LDP1    @VALUE,,AUTO
         2 000670   100000 236100                    LDQ     0,,PR1
         2 000671   000003 736000                    QLS     3
         2 000672   200032 036100                    ADLQ    TEMP+3,,AUTO
         2 000673   000060 136007                    SBLQ    48,DL
         2 000674   100000 756100                    STQ     0,,PR1

      797     4228    3           END;

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:97   
   4228  2 000675   200025 054100                    AOS     I,,AUTO
         2 000676   200025 236100                    LDQ     I,,AUTO
         2 000677   200026 116100                    CMPQ    LEN,,AUTO
         2 000700   000654 604000 2                  TMI     s:4227

      798     4229    2       RETURN;

   4229  2 000701   200022 221300                    LDX1  ! TEMP+2,,AUTO
         2 000702   000001 702211                    TSX2  ! 1,X1

P_PCB
 Sect OctLoc
   0     000   000000 006014   000000 006000   000016 006000   000000 006014    ................
   0     004   000000 000000   000144 400000   000000 000000   040040 040040    .....d......
   0     010   000000 040000   000000 000000   000000 000000   000000 006014    .. .............
   0     014   000000 006014   000000 000000                                    ........

PARSEWORK
 Sect OctLoc
   0     016   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   1     000   060061 062063   064065 066067   070071 101102   103104 105106    0123456789ABCDEF

(unnamed)
 Sect OctLoc
   3     000   000040 040040   000000 006000   000077 777777   056040 040040    .   .....?...
   3     004   000162 006000                                                    .r..
      799     4230
      800     4231    2   END CHARHEX;
      801     4232
      802     4233    1   END XSL$INET;
      803     4234        %EOD;

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:98   
--  Include file information  --

   XSL_INTERNAL_M.:TCA2TOU  is referenced.
   XSL_NODES_E.:TCA2TOU  is referenced.
   XSL_PERR_C.:TCA2TOU  is referenced.
   XU_MACRO_C.:LIBRARY  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure XSL$INET.
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:99   

 **** Variables and constants ****

  ****  Section 000  Data  XSL$INET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    16-0-0/w SBIN        r     1 PARSEWORK(0:99)
     0-0-0/w STRC(504)   r     1 P_PCB                    162-0-0/w UBIN        r     1 TMP(0:3)
   162-0-0/c CHAR(16)    r     1 TMPBUF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PARM1                     5-0-0/w PTR         r     1 @PARM2
     3-0-0/w PTR         r     1 @RESULT                   24-0-0/w PTR         r     1 @TXTC
    23-0-0/w PTR         r     1 @VALUE                     6-0-0/w SBIN        r     1 ENTRYFLAG
     7-0-0/w SBIN        r     1 I                         25-0-0/w SBIN        r     1 I
    10-0-0/w SBIN        r     1 IDX                       11-0-0/c STRC        r     1 INET
    12-0-0/w PTR         r     1 ITM$                      13-0-0/w SBIN        r     1 LEN
    26-0-0/w SBIN        r     1 LEN                       *0-0-0/w SBIN        r     1 PARM1
    15-0-0/w PTR         r     1 PARM1$                    *0-0-0/w SBIN        r     1 PARM2
    *0-0-0/w SBIN        r     1 RESULT                    17-0-0/w PTR         r     1 SYM$
    20-0-0/w UBIN        r     1 TEMP                      27-0-0/w SBIN        r     1 TEMP
    *0-0-0/c ASTR(9)     r     1 TXTC                      *0-0-0/w UBIN        r     1 VALUE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 R_INET                     0-0-0/w SBIN        r     1 XSL_NETMASK

  ****  BASED and DCB variables  ****

PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:100  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$PTR                      0-0-0/c ACHR        r     1 BYTES
     0-0-0/w STRC(144)   r     1 ITM                        0-0-0/w ASTR(153)   r     1 SYM


   Procedure XSL$INET requires 451 words for executable code.
   Procedure XSL$INET requires 28 words of local(AUTO) storage.
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:101  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:102  
          MINI XREF LISTING

B$PTR
      3974**DCL      4199<<ASSIGN
BYTES
      3975**DCL      4072>>CALLBLT  4075>>CALLBLT
CHARHEX
      4202**PROC     4087--CALL
CHAROCT IN PROCEDURE CHARHEX
      4222**ENTRY    4089--CALL
COMMON
      4069**LABEL    4136--GOTO
ENTRYFLAG
      3976**DCL      4067<<ASSIGN   4096>>IF       4135<<ASSIGN
ERROR
      4129**LABEL    4075--CALLALT  4080--CALLALT  4094--GOTO
I
      3979**DCL      4083<<DOINDEX  4084>>ASSIGN   4087>>CALL     4089>>CALL     4091>>CALLBLT  4093>>IF
      4098<<DOINDEX  4099>>ASSIGN   4156<<DOINDEX  4157>>ASSIGN   4165<<ASSIGN   4166<<ASSIGN   4166>>ASSIGN
      4167>>DOCASE   4185<<DOINDEX  4186>>ASSIGN
I IN PROCEDURE CHARHEX
      4205**DCL      4215<<DOINDEX  4216>>ASSIGN   4226<<DOINDEX  4227>>ASSIGN
IDX
      3980**DCL      4184<<ASSIGN   4194>>CALLBLT  4195>>CALLBLT  4196<<ASSIGN   4196>>ASSIGN   4198>>CALLBLT
INET
      3981**DCL      4126>>ASSIGN   4146<<ASSIGN   4164<<ASSIGN   4183<<ASSIGN
INET.BYTES
      3982**DCL      4106<<ASSIGN   4107<<ASSIGN   4108<<ASSIGN   4109<<ASSIGN   4111<<ASSIGN   4112<<ASSIGN
      4113<<ASSIGN   4114<<ASSIGN   4116<<ASSIGN   4117<<ASSIGN   4118<<ASSIGN   4119<<ASSIGN   4121<<ASSIGN
      4122<<ASSIGN   4123<<ASSIGN   4124<<ASSIGN   4147>>ASSIGN   4157>>ASSIGN   4165>>ASSIGN   4169>>ASSIGN
      4171>>ASSIGN   4171>>ASSIGN   4174>>ASSIGN   4174>>ASSIGN   4174>>ASSIGN   4186>>ASSIGN
ITM.NSUBLKS
      3560**DCL      4083>>DOINDEX  4098>>DOINDEX  4104>>DOCASE
ITM.SUBLK$
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:103  
      3581**DCL      4084>>ASSIGN
ITM$
      3983**DCL      3548--IMP-PTR  4081<<ASSIGN   4083>>DOINDEX  4084>>ASSIGN   4098>>DOINDEX  4104>>DOCASE
LEN
      3984**DCL      3975--IMP-SIZ  4070<<ASSIGN   4072<<CALLBLT  4072>>CALLBLT  4075<<CALLBLT  4075>>CALLBLT
      4079>>ASSIGN   4149<<ASSIGN   4152<<ASSIGN   4154<<ASSIGN   4156>>DOINDEX  4188<<ASSIGN   4191<<ASSIGN
      4193<<ASSIGN   4194>>CALLBLT  4195>>CALLBLT  4196>>ASSIGN
LEN IN PROCEDURE CHARHEX
      4206**DCL      4214<<ASSIGN   4215>>DOINDEX  4225<<ASSIGN   4226>>DOINDEX
PARM1
      3988**DCL       235--PROC     4044--ENTRY    4046>>ASSIGN   4064--ENTRY    4069--ASSIGN   4132--ENTRY
      4138--ENTRY    4142>>ASSIGN   4146>>ASSIGN   4162--ENTRY    4164>>ASSIGN   4180--ENTRY    4183>>ASSIGN
PARM1$
      3989**DCL      4069<<ASSIGN   4072>>CALLBLT  4075>>CALLBLT  4078>>ASSIGN
PARM2
      3990**DCL       235--PROC     4044--ENTRY    4049>>ASSIGN   4054>>ASSIGN   4059>>ASSIGN
PARSEWORK
      3985**DCL      3370--DCLINIT  3391--DCLINIT
P_PCB
      3361**DCL      4080<>CALL
P_PCB.NCHARS
      3508**DCL      4079<<ASSIGN
P_PCB.OUT$
      3374**DCL      4081>>ASSIGN
P_PCB.TEXT$
      3362**DCL      4078<<ASSIGN
RESULT
      3986**DCL       235--PROC     4044--ENTRY    4048<<ASSIGN   4050<<ASSIGN   4050>>ASSIGN   4053<<ASSIGN
      4055<<ASSIGN   4055>>ASSIGN   4058<<ASSIGN   4060<<ASSIGN   4060>>ASSIGN   4064--ENTRY    4101<<ASSIGN
      4126<<ASSIGN   4129<<ASSIGN   4132--ENTRY    4138--ENTRY    4143<>CALL     4159<<ASSIGN   4162--ENTRY
      4169<<ASSIGN   4171<<ASSIGN   4174<<ASSIGN   4180--ENTRY    4199--ASSIGN
R_INET
      3971**DCL      3366--DCLINIT
SYM.CODE
      3600**DCL      4085>>DOCASE
SYM.COUNT
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:104  
      3617**DCL      3620--IMP-SIZ  4087<>CALL     4089<>CALL     4091>>CALLBLT
SYM.TEXT
      3620**DCL      4091>>CALLBLT
SYM$
      3992**DCL      3594--IMP-PTR  4084<<ASSIGN   4085>>DOCASE   4087>>CALL     4089>>CALL     4091>>CALLBLT
      4091>>CALLBLT
TEMP
      3993**DCL      4046<<ASSIGN   4047>>IF       4048>>ASSIGN   4049<<ASSIGN   4050>>ASSIGN   4052>>IF
      4053>>ASSIGN   4054<<ASSIGN   4055>>ASSIGN   4058>>ASSIGN   4059<<ASSIGN   4060>>ASSIGN   4097<<ASSIGN
      4099<<ASSIGN   4099>>ASSIGN   4101>>ASSIGN   4142<<ASSIGN   4143<>CALL     4147<<ASSIGN   4148>>IF
      4151>>IF       4155<<ASSIGN   4157<<ASSIGN   4157>>ASSIGN   4159>>ASSIGN   4186<<ASSIGN   4187>>IF
      4190>>IF       4194>>CALLBLT
TEMP IN PROCEDURE CHARHEX
      4207**DCL      4216<<ASSIGN   4217>>IF       4217<<ASSIGN   4217>>ASSIGN   4218>>ASSIGN
TMP
      3995**DCL      4087<>CALL     4089<>CALL     4091<<CALLBLT  4093>>IF       4099>>ASSIGN   4106>>ASSIGN
      4107>>ASSIGN   4108>>ASSIGN   4109>>ASSIGN   4111>>ASSIGN   4112>>ASSIGN   4113>>ASSIGN   4114>>ASSIGN
      4116>>ASSIGN   4117>>ASSIGN   4118>>ASSIGN   4119>>ASSIGN   4121>>ASSIGN   4122>>ASSIGN   4123>>ASSIGN
      4124>>ASSIGN
TMPBUF
      3994**DCL      3995--REDEF    4194<<CALLBLT  4195<<CALLBLT  4198<<CALLBLT  4199--ASSIGN
TXTC IN PROCEDURE CHARHEX
      4208**DCL      4202--PROC     4222--ENTRY
TXTC.LEN IN PROCEDURE CHARHEX
      4209**DCL      4210--IMP-SIZ  4214>>ASSIGN   4216>>ASSIGN   4225>>ASSIGN   4227>>ASSIGN
TXTC.TXT IN PROCEDURE CHARHEX
      4210**DCL      4216>>ASSIGN   4227>>ASSIGN
VALUE IN PROCEDURE CHARHEX
      4211**DCL      4202--PROC     4213<<ASSIGN   4218<<ASSIGN   4218>>ASSIGN   4222--ENTRY    4224<<ASSIGN
      4227<<ASSIGN   4227>>ASSIGN
X$PARSE
      3969**DCL-ENT  4080--CALL
XSL$HTONL
      3967**DCL-ENT  4143--CALL
XSL_NETMASK
      3972**DCL      4141>>IF       4142>>ASSIGN
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:105  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XSL$INET File=XSL$SOCKET5.:TCA2TSI                            SUN 11/16/97 14:32 Page:106  
              MINI UREF LISTING

HEXCHARS IN PROCEDURE CHARHEX   4204**DCL
PARM2$    3991**DCL
RESULT$    3987**DCL
XSL$DATADEFS    3964**DCL-ENT
XSL$INET     235**PROC
XSL$INET_ADDR    4064**ENTRY
XSL$INET_LNAOF    4138**ENTRY
XSL$INET_MAKEADDR    4044**ENTRY
XSL$INET_NETOF    4162**ENTRY
XSL$INET_NETWORK    4132**ENTRY
XSL$INET_NTOA    4180**ENTRY
XSL_NODES    3968**DCL-ENT

PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:107  
      804        1        /*T***********************************************************/
      805        2        /*T*                                                         */
      806        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      807        4        /*T*                                                         */
      808        5        /*T***********************************************************/
      809        6        XSL$ROUTES: PROC( INADDR, SN) ALTRET;
      810        7        %INCLUDE CP_6;
      811       88            %F$DCB;
      812      145            %FPT_CLOSE( DCB=F$ROUTES, DISP=SAVE, STCLASS=CONSTANT);
      813      187            %FPT_PFIL( DCB=F$ROUTES, BOF=YES, STCLASS=CONSTANT);
      814      202            %FPT_READ( DCB=F$ROUTES, BUF=ROUTEBUF, STCLASS=CONSTANT);
      815      241            %M$DCB( DCBN=F$ROUTES, ASN=FILE, ACS=SEQUEN, FUN=IN,
      816      242                    ACCT=':SYS', NAME='etc:routes');
      817      316        %INCLUDE XSL_INTERNAL_M;
      818      567            %XSL_REFDATA;
      819      570
      820      571    1       DCL XSL$HTONL ENTRY(2);
      821      572    1       DCL XSL$INET_ADDR ENTRY(2) ALTRET;
      822      573    1       DCL XSL$INET_LNAOF ENTRY(2) ALTRET;
      823      574    1       DCL XSL$INET_NETOF ENTRY(2) ALTRET;
      824      575
      825      576    1       DCL XSL_NETMASK SBIN SYMREF;
      826      577    1       DCL XSL_SN CHAR(6) SYMREF;
      827      578
      828      579    1       DCL BEENHERE BIT(1) STATIC INIT( '0'B);
      829      580    1       DCL BLANK CHAR(1) CONSTANT INIT( ' ');
      830      581    1       DCL DFLTNF BIT(1);
      831      582    1       DCL HOSTID SBIN;
      832      583    1       DCL INADDR UBIN;
      833      584    1       DCL INBITS REDEF INADDR BIT(36);
      834      585    1       DCL INDX SBIN;
      835      586    1       DCL LEN SBIN;
      836      587    1       DCL MASKNF BIT(1);
      837      588    1       DCL NETWANTED SBIN;
      838      589    1       DCL NETFOUND SBIN;
      839      590    1       DCL NONBLANKUBN(0:127) UBIN BYTE CONSTANT INIT( 1*32, 0, 1*95) CALIGNED;
      840      591    1       DCL NONBLANKTBL(0:127) REDEF NONBLANKUBN CHAR(1) CALIGNED;
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:108  
      841      592    1       DCL ROUTEBUF CHAR(80) STATIC;
      842      593    1       DCL RTBITS BIT(36);
      843      594    1       DCL SN CHAR(6);
      844      595    1       DCL TEMP SBIN;
      845      596
      846      597    1       CALL M$PFIL( FPT_PFIL) ALTRET( DFLT);
      847      598    1       IF INADDR ~= 0 THEN GOTO LOOKUP;
      848      599    1       IF BEENHERE THEN
      849      600    1           GOTO OOPS;  /* must be un-inited lookup; force default SN */
      850      601    1       BEENHERE = '1'B;
      851      602    1       MASKNF = '1'B;
      852      603    1       DFLTNF = '1'B;
      853      604    2       DO WHILE( MASKNF | DFLTNF);
      854      605    2           CALL M$READ( FPT_READ) ALTRET( DONE);
      855      606    2           LEN = DCBADDR( DCBNUM( F$ROUTES))->F$DCB.ARS#;
      856      607    2           CALL INDEX( TEMP, '"', SUBSTR( ROUTEBUF, 0, LEN))
      857      608    3           WHENRETURN DO;
      858      609    3               LEN = TEMP;
      859      610    3               END;
      860      611    3           WHENALTRETURN DO;
      861      612    3               CALL INDEX( TEMP, '#', SUBSTR( ROUTEBUF, 0, LEN))
      862      613    4               WHENRETURN DO;
      863      614    4                   LEN = TEMP;
      864      615    4                   END;
      865      616    3               END;
      866      617    2           IF LEN <= 1 THEN
      867      618    2               GOTO MORE;
      868      619    2           SUBSTR( ROUTEBUF, LEN, 1) = BLANK;
      869      620    3           DO SELECT( SUBSTR( ROUTEBUF, 0, 8));
      870      621    3               SELECT( 'NETMASK ', 'netmask ');
      871      622    3               CALL SEARCH( INDX, TEMP, NONBLANKTBL, ROUTEBUF, 7) ALTRET( MORE);
      872      623    3               LEN = MINIMUM( 8, LEN - INDX);
      873      624    3               CALL CHARHEX( XSL_NETMASK, SUBSTR( ROUTEBUF, INDX, LEN)) ALTRET( MORE);
      874      625    3               MASKNF = '0'B;
      875      626    3               SELECT( 'DEFAULT ', 'default ');
      876      627    3               CALL SEARCH( INDX, TEMP, NONBLANKTBL, ROUTEBUF, 7) ALTRET( MORE);
      877      628    3               LEN = MINIMUM( 6, LEN - INDX);
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:109  
      878      629    3               XSL_SN = SUBSTR( ROUTEBUF, INDX, LEN);
      879      630    3               DFLTNF = '0'B;
      880      631    3               SELECT( ELSE);
      881      632    3               END;
      882      633    2   MORE:
      883      634    2           END;
      884      635    1   DONE:
      885      636    1       CALL M$CLOSE( FPT_CLOSE);
      886      637    1       RETURN;
      887      638    1   LOOKUP:
      888      639    1       CALL XSL$INET_NETOF( NETWANTED, INADDR);
      889      640    2       DO WHILE( '1'B);
      890      641    2           CALL M$READ( FPT_READ) ALTRET( OOPS);
      891      642    2           LEN = DCBADDR( DCBNUM( F$ROUTES))->F$DCB.ARS#;
      892      643    2           CALL INDEX( TEMP, '"', SUBSTR( ROUTEBUF, 0, LEN))
      893      644    3           WHENRETURN DO;
      894      645    3               LEN = TEMP;
      895      646    3               END;
      896      647    3           WHENALTRETURN DO;
      897      648    3               CALL INDEX( TEMP, '#', SUBSTR( ROUTEBUF, 0, LEN))
      898      649    4               WHENRETURN DO;
      899      650    4                   LEN = TEMP;
      900      651    4                   END;
      901      652    3               END;
      902      653    2           IF LEN <= 1 THEN
      903      654    2               GOTO NEXT;
      904      655    2           SUBSTR( ROUTEBUF, LEN, 1) = BLANK;
      905      656    2           CALL XSL$INET_ADDR( RTBITS, ROUTEBUF) ALTRET( NEXT);
      906      657    2           CALL XSL$INET_LNAOF( HOSTID, RTBITS);
      907      658    2           CALL XSL$INET_NETOF( NETFOUND, RTBITS);
      908      659    2           IF ( RTBITS = INBITS) OR
      909      660    2             RTBITS = ( BINBIT( XSL_NETMASK, 36) & INBITS) OR
      910      661    2             ( NETWANTED = NETFOUND AND
      911      662    3             ( BITBIN( RTBITS & ~BINBIT( XSL_NETMASK, 36)) = 0)) THEN DO;
      912      663    3               CALL INDEX( INDX, BLANK, ROUTEBUF) ALTRET( NEXT);
      913      664    3               CALL SEARCH( INDX, TEMP, NONBLANKTBL, ROUTEBUF, INDX) ALTRET( NEXT);
      914      665    3               LEN = MINIMUM( 6, LEN - INDX);
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:110  
      915      666    3               SN = SUBSTR( ROUTEBUF, INDX, LEN);
      916      667    3               GOTO DONE;
      917      668    3               END;
      918      669    2   NEXT:
      919      670    2           END;
      920      671    1   OOPS:
      921      672    1       CALL M$CLOSE( FPT_CLOSE);
      922      673    1   DFLT:
      923      674    1       ALTRETURN;
      924      675
      925      676    1   CHARHEX: PROC( VALUE, TXT) ALTRET;
      926      677
      927      678    2       DCL I SBIN;
      928      679    2       DCL TEMP SBIN;
      929      680    2       DCL VALUE UBIN;
      930      681    2       DCL TXT CHAR( LEN) CALIGNED;
      931      682
      932      683    2       VALUE = 0;
      933      684    3       DO I = 0 TO LEN - 1;
      934      685    3           TEMP = ASCBIN( SUBSTR( TXT, I, 1));
      935      686    3           IF TEMP >= 61 THEN TEMP = TEMP - 7;
      936      687    3           VALUE = ( VALUE * 16) + TEMP - 48;
      937      688    3           END;
      938      689    2       CALL XSL$HTONL( VALUE, VALUE);
      939      690    2       RETURN;
      940      691
      941      692    2   END CHARHEX;
      942      693
      943      694    1   END XSL$ROUTES;

PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:111  
--  Include file information  --

   XSL_INTERNAL_M.:TCA2TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure XSL$ROUTES.

   Procedure XSL$ROUTES requires 286 words for executable code.
   Procedure XSL$ROUTES requires 22 words of local(AUTO) storage.

    No errors detected in file XSL$SOCKET5.:TCA2TSI    .

PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:112  

 Object Unit name= XSL$ROUTES                                 File name= XSL$SOCKET5.:TCA2TOU
 UTS= NOV 16 '97 14:34:02.60 SUN                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     89    131  XSL$ROUTES
    2   DCB   even  none    98    142  F$ROUTES
    3   Data  even  none    21     25  XSL$ROUTES
    4   Proc  even  none   286    436  XSL$ROUTES
    5  RoData even  none     5      5  XSL$ROUTES

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        2  XSL$ROUTES

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XSL$DATADEFS
 yes     yes           Std       2 XSL$INET_NETOF
 yes     yes           Std       2 XSL$INET_LNAOF
 yes     yes           Std       2 XSL$INET_ADDR
         yes           Std       2 XSL$HTONL
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:113  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  F$ROUTES                              XSL_NETMASK
     XSL_SN                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:114  


      804        1        /*T***********************************************************/
      805        2        /*T*                                                         */
      806        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      807        4        /*T*                                                         */
      808        5        /*T***********************************************************/
      809        6        XSL$ROUTES: PROC( INADDR, SN) ALTRET;

      6  4 000000   000000 700200 xent  XSL$ROUTES   TSX0  ! X66_AUTO_2
         4 000001   000026 000002                    ZERO    22,2

      810        7        %INCLUDE CP_6;
      811       88            %F$DCB;
      812      145            %FPT_CLOSE( DCB=F$ROUTES, DISP=SAVE, STCLASS=CONSTANT);
      813      187            %FPT_PFIL( DCB=F$ROUTES, BOF=YES, STCLASS=CONSTANT);
      814      202            %FPT_READ( DCB=F$ROUTES, BUF=ROUTEBUF, STCLASS=CONSTANT);
      815      241            %M$DCB( DCBN=F$ROUTES, ASN=FILE, ACS=SEQUEN, FUN=IN,
      816      242                    ACCT=':SYS', NAME='etc:routes');
      817      316        %INCLUDE XSL_INTERNAL_M;
      818      567            %XSL_REFDATA;
      819      570
      820      571    1       DCL XSL$HTONL ENTRY(2);
      821      572    1       DCL XSL$INET_ADDR ENTRY(2) ALTRET;
      822      573    1       DCL XSL$INET_LNAOF ENTRY(2) ALTRET;
      823      574    1       DCL XSL$INET_NETOF ENTRY(2) ALTRET;
      824      575
      825      576    1       DCL XSL_NETMASK SBIN SYMREF;
      826      577    1       DCL XSL_SN CHAR(6) SYMREF;
      827      578
      828      579    1       DCL BEENHERE BIT(1) STATIC INIT( '0'B);
      829      580    1       DCL BLANK CHAR(1) CONSTANT INIT( ' ');
      830      581    1       DCL DFLTNF BIT(1);
      831      582    1       DCL HOSTID SBIN;
      832      583    1       DCL INADDR UBIN;
      833      584    1       DCL INBITS REDEF INADDR BIT(36);
      834      585    1       DCL INDX SBIN;
      835      586    1       DCL LEN SBIN;
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:115  
      836      587    1       DCL MASKNF BIT(1);
      837      588    1       DCL NETWANTED SBIN;
      838      589    1       DCL NETFOUND SBIN;
      839      590    1       DCL NONBLANKUBN(0:127) UBIN BYTE CONSTANT INIT( 1*32, 0, 1*95) CALIGNED;
      840      591    1       DCL NONBLANKTBL(0:127) REDEF NONBLANKUBN CHAR(1) CALIGNED;
      841      592    1       DCL ROUTEBUF CHAR(80) STATIC;
      842      593    1       DCL RTBITS BIT(36);
      843      594    1       DCL SN CHAR(6);
      844      595    1       DCL TEMP SBIN;
      845      596
      846      597    1       CALL M$PFIL( FPT_PFIL) ALTRET( DFLT);

    597  4 000002   000036 630400 1                  EPPR0   FPT_PFIL
         4 000003   440004 713400                    CLIMB   alt,+16388
         4 000004   400000 401760                    pmme    nvectors=1
         4 000005   000372 702000 4                  TSX2    DFLT

      847      598    1       IF INADDR ~= 0 THEN GOTO LOOKUP;

    598  4 000006   200003 470500                    LDP0    @INADDR,,AUTO
         4 000007   000000 235100                    LDA     0,,PR0
         4 000010   000206 601000 4                  TNZ     LOOKUP

      848      599    1       IF BEENHERE THEN

    599  4 000011   000000 234000 3                  SZN     BEENHERE
         4 000012   000367 604000 4                  TMI     OOPS

      849      600    1           GOTO OOPS;  /* must be un-inited lookup; force default SN */
      850      601    1       BEENHERE = '1'B;

    601  4 000013   400000 236003                    LDQ     -131072,DU
         4 000014   000000 756000 3                  STQ     BEENHERE

      851      602    1       MASKNF = '1'B;

    602  4 000015   200011 756100                    STQ     MASKNF,,AUTO
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:116  

      852      603    1       DFLTNF = '1'B;

    603  4 000016   200005 756100                    STQ     DFLTNF,,AUTO

      853      604    2       DO WHILE( MASKNF | DFLTNF);

    604  4 000017   000173 710000 4                  TRA     MORE

      854      605    2           CALL M$READ( FPT_READ) ALTRET( DONE);

    605  4 000020   000042 630400 1                  EPPR0   FPT_READ
         4 000021   440000 713400                    CLIMB   alt,read
         4 000022   401400 401760                    pmme    nvectors=4
         4 000023   000202 702000 4                  TSX2    DONE

      855      606    2           LEN = DCBADDR( DCBNUM( F$ROUTES))->F$DCB.ARS#;

    606  4 000024   000000 236007 xsym               LDQ     F$ROUTES,DL
         4 000025   000000 470400 5                  LDP0    0
         4 000026   000000 471500                    LDP1    0,,PR0
         4 000027   100000 473506                    LDP3    0,QL,PR1
         4 000030   300000 235100                    LDA     0,,PR3
         4 000031   200010 755100                    STA     LEN,,AUTO

      856      607    2           CALL INDEX( TEMP, '"', SUBSTR( ROUTEBUF, 0, LEN))

    607  4 000032   000000 620005                    EAX0    0,AL
         4 000033   000000 124440                    SCM     mask='000'O
         4 000034   000001 000010 3                  ADSC9   ROUTEBUF                 cn=0,n=*X0
         4 000035   000001 000001 5                  ADSC9   1                        cn=0,n=1
         4 000036   200015 000100                    ARG     TEMP,,AUTO
         4 000037   000043 606400 4                  TTN     s:612

      857      608    3           WHENRETURN DO;

      858      609    3               LEN = TEMP;
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:117  

    609  4 000040   200015 235100                    LDA     TEMP,,AUTO
         4 000041   200010 755100                    STA     LEN,,AUTO

      859      610    3               END;

    610  4 000042   000053 710000 4                  TRA     s:617

      860      611    3           WHENALTRETURN DO;

      861      612    3               CALL INDEX( TEMP, '#', SUBSTR( ROUTEBUF, 0, LEN))

    612  4 000043   200010 720100                    LXL0    LEN,,AUTO
         4 000044   000000 124440                    SCM     mask='000'O
         4 000045   000001 000010 3                  ADSC9   ROUTEBUF                 cn=0,n=*X0
         4 000046   000002 000001 5                  ADSC9   2                        cn=0,n=1
         4 000047   200015 000100                    ARG     TEMP,,AUTO
         4 000050   000053 606400 4                  TTN     s:617

      862      613    4               WHENRETURN DO;

      863      614    4                   LEN = TEMP;

    614  4 000051   200015 235100                    LDA     TEMP,,AUTO
         4 000052   200010 755100                    STA     LEN,,AUTO

      864      615    4                   END;

      865      616    3               END;

      866      617    2           IF LEN <= 1 THEN

    617  4 000053   200010 235100                    LDA     LEN,,AUTO
         4 000054   000001 115007                    CMPA    1,DL
         4 000055   000173 604400 4                  TMOZ    MORE

      867      618    2               GOTO MORE;
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:118  
      868      619    2           SUBSTR( ROUTEBUF, LEN, 1) = BLANK;

    619  4 000056   040005 100400                    MLR     fill='040'O
         4 000057   000060 000001 1                  ADSC9   BLANK                    cn=0,n=1
         4 000060   000001 000001 3                  ADSC9   ROUTEBUF,A               cn=0,n=1

      869      620    3           DO SELECT( SUBSTR( ROUTEBUF, 0, 8));

    620  4 000061   040000 106400                    CMPC    fill='040'O
         4 000062   000001 000010 3                  ADSC9   ROUTEBUF                 cn=0,n=8
         4 000063   000121 000010 1                  ADSC9   NONBLANKUBN+32           cn=0,n=8
         4 000064   000101 602000 4                  TNC     s:620+16
         4 000065   000106 600000 4                  TZE     s:622
         4 000066   040000 106400                    CMPC    fill='040'O
         4 000067   000001 000010 3                  ADSC9   ROUTEBUF                 cn=0,n=8
         4 000070   000123 000010 1                  ADSC9   NONBLANKUBN+34           cn=0,n=8
         4 000071   000074 602000 4                  TNC     s:620+11
         4 000072   000106 600000 4                  TZE     s:622
         4 000073   000173 710000 4                  TRA     MORE
         4 000074   040000 106400                    CMPC    fill='040'O
         4 000075   000001 000010 3                  ADSC9   ROUTEBUF                 cn=0,n=8
         4 000076   000125 000010 1                  ADSC9   NONBLANKUBN+36           cn=0,n=8
         4 000077   000173 601000 4                  TNZ     MORE
         4 000100   000142 710000 4                  TRA     s:627
         4 000101   040000 106400                    CMPC    fill='040'O
         4 000102   000001 000010 3                  ADSC9   ROUTEBUF                 cn=0,n=8
         4 000103   000127 000010 1                  ADSC9   NONBLANKUBN+38           cn=0,n=8
         4 000104   000173 601000 4                  TNZ     MORE
         4 000105   000142 710000 4                  TRA     s:627

      870      621    3               SELECT( 'NETMASK ', 'netmask ');

      871      622    3               CALL SEARCH( INDX, TEMP, NONBLANKTBL, ROUTEBUF, 7) ALTRET( MORE);

    622  4 000106   000000 164400                    TCT
         4 000107   000002 600111 3                  ADSC9   ROUTEBUF+1               cn=3,n=73
         4 000110   000061 000000 1                  ARG     NONBLANKUBN
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:119  
         4 000111   200007 000100                    ARG     INDX,,AUTO
         4 000112   200007 236100                    LDQ     INDX,,AUTO
         4 000113   000044 737000                    LLS     36
         4 000114   000033 771000                    ARL     27
         4 000115   200015 755100                    STA     TEMP,,AUTO
         4 000116   200007 551140                    STBA    INDX,'40'O,AUTO
         4 000117   000007 236007                    LDQ     7,DL
         4 000120   200007 056100                    ASQ     INDX,,AUTO
         4 000121   000173 606400 4                  TTN     MORE

      872      623    3               LEN = MINIMUM( 8, LEN - INDX);

    623  4 000122   200010 236100                    LDQ     LEN,,AUTO
         4 000123   200007 136100                    SBLQ    INDX,,AUTO
         4 000124   000010 116007                    CMPQ    8,DL
         4 000125   000127 604400 4                  TMOZ    s:623+5
         4 000126   000010 236007                    LDQ     8,DL
         4 000127   200010 756100                    STQ     LEN,,AUTO

      873      624    3               CALL CHARHEX( XSL_NETMASK, SUBSTR( ROUTEBUF, INDX, LEN)) ALTRET( MORE);

    624  4 000130   200007 236100                    LDQ     INDX,,AUTO
         4 000131   000020 736000                    QLS     16
         4 000132   000003 036000 5                  ADLQ    3
         4 000133   200020 756100                    STQ     @VALUE+1,,AUTO
         4 000134   000004 236000 5                  LDQ     4
         4 000135   200017 756100                    STQ     TEMP+2,,AUTO
         4 000136   000373 701000 4                  TSX1    CHARHEX
         4 000137   000173 702000 4                  TSX2    MORE

      874      625    3               MASKNF = '0'B;

    625  4 000140   200011 450100                    STZ     MASKNF,,AUTO
         4 000141   000173 710000 4                  TRA     MORE

      875      626    3               SELECT( 'DEFAULT ', 'default ');

PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:120  
      876      627    3               CALL SEARCH( INDX, TEMP, NONBLANKTBL, ROUTEBUF, 7) ALTRET( MORE);

    627  4 000142   000000 164400                    TCT
         4 000143   000002 600111 3                  ADSC9   ROUTEBUF+1               cn=3,n=73
         4 000144   000061 000000 1                  ARG     NONBLANKUBN
         4 000145   200007 000100                    ARG     INDX,,AUTO
         4 000146   200007 236100                    LDQ     INDX,,AUTO
         4 000147   000044 737000                    LLS     36
         4 000150   000033 771000                    ARL     27
         4 000151   200015 755100                    STA     TEMP,,AUTO
         4 000152   200007 551140                    STBA    INDX,'40'O,AUTO
         4 000153   000007 236007                    LDQ     7,DL
         4 000154   200007 056100                    ASQ     INDX,,AUTO
         4 000155   000173 606400 4                  TTN     MORE

      877      628    3               LEN = MINIMUM( 6, LEN - INDX);

    628  4 000156   200010 236100                    LDQ     LEN,,AUTO
         4 000157   200007 136100                    SBLQ    INDX,,AUTO
         4 000160   000006 116007                    CMPQ    6,DL
         4 000161   000163 604400 4                  TMOZ    s:628+5
         4 000162   000006 236007                    LDQ     6,DL
         4 000163   200010 756100                    STQ     LEN,,AUTO

      878      629    3               XSL_SN = SUBSTR( ROUTEBUF, INDX, LEN);

    629  4 000164   000000 620006                    EAX0    0,QL
         4 000165   200007 236100                    LDQ     INDX,,AUTO
         4 000166   040000 100446                    MLR     fill='040'O
         4 000167   000001 000010 3                  ADSC9   ROUTEBUF,Q               cn=0,n=*X0
         4 000170   000000 000006 xsym               ADSC9   XSL_SN                   cn=0,n=6

      879      630    3               DFLTNF = '0'B;

    630  4 000171   200005 450100                    STZ     DFLTNF,,AUTO
         4 000172   000173 710000 4                  TRA     MORE

PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:121  
      880      631    3               SELECT( ELSE);

      881      632    3               END;

      882      633    2   MORE:
      883      634    2           END;

    634  4 000173   200005 236100       MORE         LDQ     DFLTNF,,AUTO
         4 000174   400000 376003                    ANQ     -131072,DU
         4 000175   200024 756100                    STQ     TEMP+2,,AUTO
         4 000176   200011 236100                    LDQ     MASKNF,,AUTO
         4 000177   400000 376003                    ANQ     -131072,DU
         4 000200   200024 276100                    ORQ     TEMP+2,,AUTO
         4 000201   000020 601000 4                  TNZ     s:605

      884      635    1   DONE:
      885      636    1       CALL M$CLOSE( FPT_CLOSE);

    636  4 000202   000000 630400 1     DONE         EPPR0   FPT_CLOSE
         4 000203   050001 713400                    CLIMB   close
         4 000204   406000 401760                    pmme    nvectors=13

      886      637    1       RETURN;

    637  4 000205   000000 702200 xent               TSX2  ! X66_ARET

      887      638    1   LOOKUP:
      888      639    1       CALL XSL$INET_NETOF( NETWANTED, INADDR);

    639  4 000206   200003 236100       LOOKUP       LDQ     @INADDR,,AUTO
         4 000207   200025 756100                    STQ     TEMP+3,,AUTO
         4 000210   200012 631500                    EPPR1   NETWANTED,,AUTO
         4 000211   200024 451500                    STP1    TEMP+2,,AUTO
         4 000212   200024 630500                    EPPR0   TEMP+2,,AUTO
         4 000213   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000214   000000 701000 xent               TSX1    XSL$INET_NETOF
         4 000215   000000 011000                    NOP     0
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:122  

      889      640    2       DO WHILE( '1'B);

      890      641    2           CALL M$READ( FPT_READ) ALTRET( OOPS);

    641  4 000216   000042 630400 1                  EPPR0   FPT_READ
         4 000217   440000 713400                    CLIMB   alt,read
         4 000220   401400 401760                    pmme    nvectors=4
         4 000221   000367 702000 4                  TSX2    OOPS

      891      642    2           LEN = DCBADDR( DCBNUM( F$ROUTES))->F$DCB.ARS#;

    642  4 000222   000000 236007 xsym               LDQ     F$ROUTES,DL
         4 000223   000000 470400 5                  LDP0    0
         4 000224   000000 471500                    LDP1    0,,PR0
         4 000225   100000 473506                    LDP3    0,QL,PR1
         4 000226   300000 235100                    LDA     0,,PR3
         4 000227   200010 755100                    STA     LEN,,AUTO

      892      643    2           CALL INDEX( TEMP, '"', SUBSTR( ROUTEBUF, 0, LEN))

    643  4 000230   000000 620005                    EAX0    0,AL
         4 000231   000000 124440                    SCM     mask='000'O
         4 000232   000001 000010 3                  ADSC9   ROUTEBUF                 cn=0,n=*X0
         4 000233   000001 000001 5                  ADSC9   1                        cn=0,n=1
         4 000234   200015 000100                    ARG     TEMP,,AUTO
         4 000235   000241 606400 4                  TTN     s:648

      893      644    3           WHENRETURN DO;

      894      645    3               LEN = TEMP;

    645  4 000236   200015 235100                    LDA     TEMP,,AUTO
         4 000237   200010 755100                    STA     LEN,,AUTO

      895      646    3               END;

PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:123  
    646  4 000240   000251 710000 4                  TRA     s:653

      896      647    3           WHENALTRETURN DO;

      897      648    3               CALL INDEX( TEMP, '#', SUBSTR( ROUTEBUF, 0, LEN))

    648  4 000241   200010 720100                    LXL0    LEN,,AUTO
         4 000242   000000 124440                    SCM     mask='000'O
         4 000243   000001 000010 3                  ADSC9   ROUTEBUF                 cn=0,n=*X0
         4 000244   000002 000001 5                  ADSC9   2                        cn=0,n=1
         4 000245   200015 000100                    ARG     TEMP,,AUTO
         4 000246   000251 606400 4                  TTN     s:653

      898      649    4               WHENRETURN DO;

      899      650    4                   LEN = TEMP;

    650  4 000247   200015 235100                    LDA     TEMP,,AUTO
         4 000250   200010 755100                    STA     LEN,,AUTO

      900      651    4                   END;

      901      652    3               END;

      902      653    2           IF LEN <= 1 THEN

    653  4 000251   200010 235100                    LDA     LEN,,AUTO
         4 000252   000001 115007                    CMPA    1,DL
         4 000253   000366 604400 4                  TMOZ    NEXT

      903      654    2               GOTO NEXT;
      904      655    2           SUBSTR( ROUTEBUF, LEN, 1) = BLANK;

    655  4 000254   040005 100400                    MLR     fill='040'O
         4 000255   000060 000001 1                  ADSC9   BLANK                    cn=0,n=1
         4 000256   000001 000001 3                  ADSC9   ROUTEBUF,A               cn=0,n=1

PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:124  
      905      656    2           CALL XSL$INET_ADDR( RTBITS, ROUTEBUF) ALTRET( NEXT);

    656  4 000257   000003 236000 5                  LDQ     3
         4 000260   200025 756100                    STQ     TEMP+3,,AUTO
         4 000261   200014 630500                    EPPR0   RTBITS,,AUTO
         4 000262   200024 450500                    STP0    TEMP+2,,AUTO
         4 000263   200024 630500                    EPPR0   TEMP+2,,AUTO
         4 000264   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000265   000000 701000 xent               TSX1    XSL$INET_ADDR
         4 000266   000366 702000 4                  TSX2    NEXT

      906      657    2           CALL XSL$INET_LNAOF( HOSTID, RTBITS);

    657  4 000267   200014 630500                    EPPR0   RTBITS,,AUTO
         4 000270   200025 450500                    STP0    TEMP+3,,AUTO
         4 000271   200006 631500                    EPPR1   HOSTID,,AUTO
         4 000272   200024 451500                    STP1    TEMP+2,,AUTO
         4 000273   200024 630500                    EPPR0   TEMP+2,,AUTO
         4 000274   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000275   000000 701000 xent               TSX1    XSL$INET_LNAOF
         4 000276   000000 011000                    NOP     0

      907      658    2           CALL XSL$INET_NETOF( NETFOUND, RTBITS);

    658  4 000277   200014 630500                    EPPR0   RTBITS,,AUTO
         4 000300   200025 450500                    STP0    TEMP+3,,AUTO
         4 000301   200013 631500                    EPPR1   NETFOUND,,AUTO
         4 000302   200024 451500                    STP1    TEMP+2,,AUTO
         4 000303   200024 630500                    EPPR0   TEMP+2,,AUTO
         4 000304   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000305   000000 701000 xent               TSX1    XSL$INET_NETOF
         4 000306   000000 011000                    NOP     0

      908      659    2           IF ( RTBITS = INBITS) OR

    659  4 000307   200003 470500                    LDP0    @INADDR,,AUTO
         4 000310   200014 236100                    LDQ     RTBITS,,AUTO
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:125  
         4 000311   000000 116100                    CMPQ    0,,PR0
         4 000312   000326 600000 4                  TZE     s:663
         4 000313   000000 236000 xsym               LDQ     XSL_NETMASK
         4 000314   000000 376100                    ANQ     0,,PR0
         4 000315   200014 116100                    CMPQ    RTBITS,,AUTO
         4 000316   000326 600000 4                  TZE     s:663
         4 000317   200012 236100                    LDQ     NETWANTED,,AUTO
         4 000320   200013 116100                    CMPQ    NETFOUND,,AUTO
         4 000321   000366 601000 4                  TNZ     NEXT
         4 000322   000000 236000 xsym               LDQ     XSL_NETMASK
         4 000323   000027 676000 xsym               ERQ     B_VECTNIL+23
         4 000324   200014 376100                    ANQ     RTBITS,,AUTO
         4 000325   000366 601000 4                  TNZ     NEXT

      909      660    2             RTBITS = ( BINBIT( XSL_NETMASK, 36) & INBITS) OR
      910      661    2             ( NETWANTED = NETFOUND AND
      911      662    3             ( BITBIN( RTBITS & ~BINBIT( XSL_NETMASK, 36)) = 0)) THEN DO;

      912      663    3               CALL INDEX( INDX, BLANK, ROUTEBUF) ALTRET( NEXT);

    663  4 000326   000000 124400                    SCM     mask='000'O
         4 000327   000001 000120 3                  ADSC9   ROUTEBUF                 cn=0,n=80
         4 000330   000060 000001 1                  ADSC9   BLANK                    cn=0,n=1
         4 000331   200007 000100                    ARG     INDX,,AUTO
         4 000332   000366 606400 4                  TTN     NEXT

      913      664    3               CALL SEARCH( INDX, TEMP, NONBLANKTBL, ROUTEBUF, INDX) ALTRET( NEXT);

    664  4 000333   200007 720100                    LXL0    INDX,,AUTO
         4 000334   777657 620010                    EAX0    -81,X0
         4 000335   777777 660003                    ERX0    -1,DU
         4 000336   200007 236100                    LDQ     INDX,,AUTO
         4 000337   000000 164446                    TCT
         4 000340   000001 000010 3                  ADSC9   ROUTEBUF,Q               cn=0,n=*X0
         4 000341   000061 000000 1                  ARG     NONBLANKUBN
         4 000342   200007 000100                    ARG     INDX,,AUTO
         4 000343   200007 235100                    LDA     INDX,,AUTO
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:126  
         4 000344   000033 771000                    ARL     27
         4 000345   200015 755100                    STA     TEMP,,AUTO
         4 000346   200007 551140                    STBA    INDX,'40'O,AUTO
         4 000347   200007 056100                    ASQ     INDX,,AUTO
         4 000350   000366 606400 4                  TTN     NEXT

      914      665    3               LEN = MINIMUM( 6, LEN - INDX);

    665  4 000351   200010 236100                    LDQ     LEN,,AUTO
         4 000352   200007 136100                    SBLQ    INDX,,AUTO
         4 000353   000006 116007                    CMPQ    6,DL
         4 000354   000356 604400 4                  TMOZ    s:665+5
         4 000355   000006 236007                    LDQ     6,DL
         4 000356   200010 756100                    STQ     LEN,,AUTO

      915      666    3               SN = SUBSTR( ROUTEBUF, INDX, LEN);

    666  4 000357   000000 620006                    EAX0    0,QL
         4 000360   200007 236100                    LDQ     INDX,,AUTO
         4 000361   200004 471500                    LDP1    @SN,,AUTO
         4 000362   040100 100446                    MLR     fill='040'O
         4 000363   000001 000010 3                  ADSC9   ROUTEBUF,Q               cn=0,n=*X0
         4 000364   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6

      916      667    3               GOTO DONE;

    667  4 000365   000202 710000 4                  TRA     DONE

      917      668    3               END;
      918      669    2   NEXT:
      919      670    2           END;

    670  4 000366   000216 710000 4     NEXT         TRA     s:641

      920      671    1   OOPS:
      921      672    1       CALL M$CLOSE( FPT_CLOSE);

PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:127  
    672  4 000367   000000 630400 1     OOPS         EPPR0   FPT_CLOSE
         4 000370   050001 713400                    CLIMB   close
         4 000371   406000 401760                    pmme    nvectors=13

      922      673    1   DFLT:
      923      674    1       ALTRETURN;

    674  4 000372   000000 702200 xent  DFLT         TSX2  ! X66_AALT

      924      675
      925      676    1   CHARHEX: PROC( VALUE, TXT) ALTRET;

    676  4 000373   200016 741300       CHARHEX      STX1  ! TEMP+1,,AUTO

      926      677
      927      678    2       DCL I SBIN;
      928      679    2       DCL TEMP SBIN;
      929      680    2       DCL VALUE UBIN;
      930      681    2       DCL TXT CHAR( LEN) CALIGNED;
      931      682
      932      683    2       VALUE = 0;

    683  4 000374   200017 470500                    LDP0    @VALUE,,AUTO
         4 000375   000000 450100                    STZ     0,,PR0

      933      684    3       DO I = 0 TO LEN - 1;

    684  4 000376   200021 450100                    STZ     I,,AUTO
         4 000377   000422 710000 4                  TRA     s:688+1

      934      685    3           TEMP = ASCBIN( SUBSTR( TXT, I, 1));

    685  4 000400   200020 470500                    LDP0    @TXT,,AUTO
         4 000401   200021 235100                    LDA     I,,AUTO
         4 000402   000100 101505                    MRL     fill='000'O
         4 000403   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         4 000404   200024 000004                    ADSC9   TEMP+2,,AUTO             cn=0,n=4
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:128  
         4 000405   200024 236100                    LDQ     TEMP+2,,AUTO
         4 000406   200022 756100                    STQ     TEMP,,AUTO

      935      686    3           IF TEMP >= 61 THEN TEMP = TEMP - 7;

    686  4 000407   000075 116007                    CMPQ    61,DL
         4 000410   000413 604000 4                  TMI     s:687

    686  4 000411   000007 336007                    LCQ     7,DL
         4 000412   200022 056100                    ASQ     TEMP,,AUTO

      936      687    3           VALUE = ( VALUE * 16) + TEMP - 48;

    687  4 000413   200017 471500                    LDP1    @VALUE,,AUTO
         4 000414   100000 236100                    LDQ     0,,PR1
         4 000415   000004 736000                    QLS     4
         4 000416   200022 036100                    ADLQ    TEMP,,AUTO
         4 000417   000060 136007                    SBLQ    48,DL
         4 000420   100000 756100                    STQ     0,,PR1

      937      688    3           END;

    688  4 000421   200021 054100                    AOS     I,,AUTO
         4 000422   200021 236100                    LDQ     I,,AUTO
         4 000423   200010 116100                    CMPQ    LEN,,AUTO
         4 000424   000400 604000 4                  TMI     s:685

      938      689    2       CALL XSL$HTONL( VALUE, VALUE);

    689  4 000425   200017 236100                    LDQ     @VALUE,,AUTO
         4 000426   200017 235100                    LDA     @VALUE,,AUTO
         4 000427   200024 757100                    STAQ    TEMP+2,,AUTO
         4 000430   200024 630500                    EPPR0   TEMP+2,,AUTO
         4 000431   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000432   000000 701000 xent               TSX1    XSL$HTONL
         4 000433   000000 011000                    NOP     0

PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:129  
      939      690    2       RETURN;

    690  4 000434   200016 221300                    LDX1  ! TEMP+1,,AUTO
         4 000435   000001 702211                    TSX2  ! 1,X1

FPT_CLOSE
 Sect OctLoc
   1     000   000003 777640   000032 006000   000000 177640   000000 006014    ................
   1     004   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     030*  000000 177640   000000 006014   000000 000002   000000 000040    ...............
   1     034   000220 000000   000000 000000                                    ........

FPT_PFIL
 Sect OctLoc
   1     036   000001 777640   000040 006000   000000 400000   000000 000000    ..... ..........

FPT_READ
 Sect OctLoc
   1     042   000005 777640   000052 006000   000000 177640   000000 006014    .....*..........
   1     046   000023 777640   000001 006000   000000 177640   000000 006014    ................
   1     052   000000 400000   000000 000000   000000 000000   000000 000000    ................
   1     056   000000 000000   000000 000000                                    ........

BLANK
 Sect OctLoc
   1     060   040*** ******                                                     ...

NONBLANKUBN
 Sect OctLoc
   1     061   001001 001001   001001 001001   001001 001001   001001 001001    ................
   1     071*  000001 001001   001001 001001   001001 001001   001001 001001    ................
   1     075   001001 001001   001001 001001   001001 001001   001001 001001    ................
   1     115*  001001 001001   001001 001001   001001 001001   001001 001001    ................

(unnamed)
 Sect OctLoc
   1     121   116105 124115   101123 113040   156145 164155   141163 153040    NETMASK netmask
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:130  
   1     125   144145 146141   165154 164040   104105 106101   125114 124040    default DEFAULT

(unnamed)
 Sect OctLoc
   2     000   000000 000000   000000 000000   000000 000000   000000 000501    ................
   2     004   000000 000000   000000 000000   000000 006014   000000 006014    ................
   2     010   012145 164143   072162 157165   164145 163040   040040 040040    .etc:routes
   2     014   040040 040040   040040 040040   040040 040040   040040 040040
   2     020   072123 131123   040040 040040   040040 040040   040040 040040    :SYS
   2     024   040040 040040   040040 040040   115105 040040   040040 040040            ME
   2     030   040040 040040   000000 203015   000002 001000   000000 000000        ............
   2     034   000000 000000   000000 000000   000000 000001   000002 776003    ................
   2     040   001000 000000   000000 000002   000000 000000   000000 000000    ................
   2     044   000000 000111   040040 040040   000000 006014   000000 006014    ...I    ........
   2     050   000000 006014   000000 000000   000000 000000   000000 006014    ................
   2     054   000000 000000   000000 000000   000000 000000   000000 000000    ................
   2     060   000000 010000   000000 000000   000000 000000   000000 000000    ................
   2     064   000000 000020   000000 000000   000000 006014   000000 000000    ................
   2     070   000000 000000   000000 000000   000000 000000   000000 000000    ................
   2     074   000000 000000   000000 006014   000000 000000   000000 000000    ................
   2     100   000000 000000   000000 000000   000000 000000   000000 000000    ................
   2     104   ****** ******   ****** ******   000000 000000   ****** ******    ................
   2     110   000000 000000   000000 000000   000000 000000   000000 000000    ................
   2     124*  000000 000000   000000 000000   000000 000000   ****** ******    ................
   2     134*  ****** ******   ****** ******   ****** ******   000000 070707    ..............8.
   2     140   ****** ******   ****** ******                                    ........

BEENHERE
 Sect OctLoc
   3     000   0***** ******                                                    ....

ROUTEBUF
 Sect OctLoc
   3     001   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:131  
   5     000   000000 006003   042040 040040   043040 040040   000001 006000    ...."   #   ....
   5     004   000000 006000                                                    ....
      940      691
      941      692    2   END CHARHEX;
      942      693
      943      694    1   END XSL$ROUTES;

PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:132  
--  Include file information  --

   XSL_INTERNAL_M.:TCA2TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure XSL$ROUTES.
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:133  

 **** Variables and constants ****

  ****  Section 001 RoData XSL$ROUTES

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    60-0-0/c CHAR        r     1 BLANK                      0-0-0/d STRC(1080)  r     1 FPT_CLOSE
    36-0-0/d STRC(144)   r     1 FPT_PFIL                  42-0-0/d STRC(504)   r     1 FPT_READ
    61-0-0/c CHAR        r     1 NONBLANKTBL(0:127)
    61-0-0/c UBIN(9)     r     1 NONBLANKUBN(0:127)

  ****  Section 003  Data  XSL$ROUTES

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 BEENHERE                   1-0-0/c CHAR(80)    r     1 ROUTEBUF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @INADDR                    4-0-0/w PTR         r     1 @SN
    20-0-0/w PTR         r     1 @TXT                      17-0-0/w PTR         r     1 @VALUE
     5-0-0/b BIT         r     1 DFLTNF                     6-0-0/w SBIN        r     1 HOSTID
    21-0-0/w SBIN        r     1 I                         *0-0-0/w UBIN        r     1 INADDR
    *0-0-0/w BIT         r     1 INBITS                     7-0-0/w SBIN        r     1 INDX
    10-0-0/w SBIN        r     1 LEN                       11-0-0/b BIT         r     1 MASKNF
    13-0-0/w SBIN        r     1 NETFOUND                  12-0-0/w SBIN        r     1 NETWANTED
    14-0-0/b BIT         r     1 RTBITS                    *0-0-0/c CHAR(6)     r     1 SN
    15-0-0/w SBIN        r     1 TEMP                      22-0-0/w SBIN        r     1 TEMP
    *0-0-0/c ACHR        r     1 TXT                       *0-0-0/w UBIN        r     1 VALUE

  ****  SYMREF variables  ****

PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:134  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 XSL_NETMASK                0-0-0/c CHAR(6)     r     1 XSL_SN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/d ASTR(3528)  r     1 F$ROUTES


   Procedure XSL$ROUTES requires 286 words for executable code.
   Procedure XSL$ROUTES requires 22 words of local(AUTO) storage.

    No errors detected in file XSL$SOCKET5.:TCA2TSI    .
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:135  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:136  
          MINI XREF LISTING

BEENHERE
       579**DCL       599>>IF        601<<ASSIGN
BLANK
       580**DCL       619>>ASSIGN    655>>ASSIGN    663>>CALLBLT
CHARHEX
       676**PROC      624--CALL
DFLT
       674**LABEL     597--CALLALT
DFLTNF
       581**DCL       603<<ASSIGN    604>>DOWHILE   630<<ASSIGN
DONE
       636**LABEL     605--CALLALT   667--GOTO
F$DCB.ACTPOS
       121**DCL       121--REDEF
F$DCB.ARS#
        95**DCL        95--REDEF     606>>ASSIGN    642>>ASSIGN
F$DCB.ATTR
       114**DCL       115--REDEF
F$DCB.BORROW
       129**DCL       129--REDEF     129--REDEF     129--REDEF
F$DCB.DCBNAME.L
       143**DCL       143--IMP-SIZ
F$DCB.EOMCHAR#
        99**DCL        99--REDEF
F$DCB.FLDID
       124**DCL       124--REDEF
F$DCB.FORM$
       118**DCL       118--REDEF
F$DCB.FSECT
       134**DCL       134--REDEF
F$DCB.FSN#
       111**DCL       111--REDEF     111--REDEF     112--REDEF
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:137  
F$DCB.HEADER$
       117**DCL       117--REDEF
F$DCB.IXTNSIZE#
       115**DCL       115--REDEF
F$DCB.LASTSTA$
       104**DCL       104--REDEF
F$DCB.LVL
       130**DCL       130--REDEF
F$DCB.NAME#.C
       105**DCL       105--REDEF
F$DCB.NOEOF
       127**DCL       127--REDEF
F$DCB.NRECS#
       116**DCL       116--REDEF
F$DCB.NRECX
       135**DCL       135--REDEF
F$DCB.OHDR
       127**DCL       127--REDEF
F$DCB.ORG#
       110**DCL       110--REDEF
F$DCB.PRECNO
       133**DCL       133--REDEF
F$DCB.RCSZ
       139**DCL       139--REDEF
F$DCB.RES#
       106**DCL       106--REDEF
F$DCB.SETX
       118**DCL       118--REDEF
F$DCB.TAB$
       118**DCL       118--REDEF
F$DCB.TDA
       132**DCL       133--REDEF
F$DCB.WSN#
       106**DCL       106--REDEF
F$ROUTES
       243**DCL       606--ASSIGN    642--ASSIGN
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:138  
F$ROUTES.ACTPOS
       284**DCL       284--REDEF
F$ROUTES.ARS#
       243**DCL       243--REDEF
F$ROUTES.ATTR#
       273**DCL       273--REDEF     275--REDEF
F$ROUTES.BORROW
       295**DCL       295--REDEF     295--REDEF     295--REDEF
F$ROUTES.DCBNAME.L
       314**DCL       314--IMP-SIZ   606>>ASSIGN    642>>ASSIGN
F$ROUTES.EOMCHAR#
       250**DCL       251--REDEF
F$ROUTES.FLDID
       287**DCL       288--REDEF
F$ROUTES.FORM$
       279**DCL       279--REDEF
F$ROUTES.FSECT
       302**DCL       302--REDEF
F$ROUTES.FSN#
       269**DCL       269--REDEF     269--REDEF     270--REDEF
F$ROUTES.HEADER$
       278**DCL       279--REDEF
F$ROUTES.IXTNSIZE#
       275**DCL       276--REDEF
F$ROUTES.LASTSTA$
       259**DCL       259--REDEF
F$ROUTES.LVL
       296**DCL       296--REDEF
F$ROUTES.NAME#.C
       259**DCL       260--REDEF
F$ROUTES.NOEOF
       291**DCL       291--REDEF
F$ROUTES.NRECS#
       276**DCL       276--REDEF
F$ROUTES.NRECX
       303**DCL       303--REDEF
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:139  
F$ROUTES.OHDR
       292**DCL       292--REDEF
F$ROUTES.ORG#
       267**DCL       268--REDEF
F$ROUTES.PRECNO
       300**DCL       300--REDEF
F$ROUTES.RCSZ
       308**DCL       308--REDEF
F$ROUTES.RES#
       261**DCL       261--REDEF
F$ROUTES.SETX
       280**DCL       280--REDEF
F$ROUTES.TAB$
       279**DCL       279--REDEF
F$ROUTES.TDA
       299**DCL       300--REDEF
F$ROUTES.WSN#
       261**DCL       262--REDEF
FPT_CLOSE
       168**DCL       636<>CALL      672<>CALL
FPT_CLOSE.SN_
       168**DCL       168--REDEF
FPT_CLOSE.UTL_
       169**DCL       169--REDEF
FPT_CLOSE.V
       173**DCL       168--DCLINIT
FPT_CLOSE.V.EXPIRE#
       183**DCL       183--REDEF
FPT_CLOSE.V.TYPE#
       181**DCL       181--REDEF
FPT_CLOSE.V.XTNSIZE#
       178**DCL       178--REDEF     180--REDEF
FPT_PFIL
       198**DCL       597<>CALL
FPT_PFIL.V
       198**DCL       198--DCLINIT
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:140  
FPT_READ
       219**DCL       605<>CALL      641<>CALL
FPT_READ.STATION_
       222**DCL       223--REDEF
FPT_READ.V
       223**DCL       219--DCLINIT
FPT_READ.V.DVBYTE.REREAD#
       234**DCL       234--REDEF
FPT_READ.V.INDX#
       232**DCL       232--REDEF
HOSTID
       582**DCL       657<>CALL
I IN PROCEDURE CHARHEX
       678**DCL       684<<DOINDEX   685>>ASSIGN
INADDR
       583**DCL         6--PROC      584--REDEF     598>>IF        639<>CALL
INBITS
       584**DCL       659>>IF        659>>IF
INDX
       585**DCL       622<<CALLBLT   623>>ASSIGN    624>>CALL      627<<CALLBLT   628>>ASSIGN    629>>ASSIGN
       663<<CALLBLT   664<<CALLBLT   664>>CALLBLT   665>>ASSIGN    666>>ASSIGN
LEN
       586**DCL       606<<ASSIGN    607>>CALLBLT   609<<ASSIGN    612>>CALLBLT   614<<ASSIGN    617>>IF
       619>>ASSIGN    623<<ASSIGN    623>>ASSIGN    624>>CALL      628<<ASSIGN    628>>ASSIGN    629>>ASSIGN
       642<<ASSIGN    643>>CALLBLT   645<<ASSIGN    648>>CALLBLT   650<<ASSIGN    653>>IF        655>>ASSIGN
       665<<ASSIGN    665>>ASSIGN    666>>ASSIGN    681--IMP-SIZ   684>>DOINDEX   685>>ASSIGN
LOOKUP
       639**LABEL     598--GOTO
M$CLOSE
        16**DCL-ENT   636--CALL      672--CALL
M$PFIL
        18**DCL-ENT   597--CALL
M$READ
        17**DCL-ENT   605--CALL      641--CALL
MASKNF
       587**DCL       602<<ASSIGN    604>>DOWHILE   625<<ASSIGN
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:141  
MORE
       634**LABEL     618--GOTO      622--CALLALT   624--CALLALT   627--CALLALT
NETFOUND
       589**DCL       658<>CALL      659>>IF
NETWANTED
       588**DCL       639<>CALL      659>>IF
NEXT
       670**LABEL     654--GOTO      656--CALLALT   663--CALLALT   664--CALLALT
NONBLANKTBL
       591**DCL       622>>CALLBLT   627>>CALLBLT   664>>CALLBLT
NONBLANKUBN
       590**DCL       591--REDEF
OOPS
       672**LABEL     600--GOTO      641--CALLALT
ROUTEBUF
       592**DCL       221--DCLINIT   222--DCLINIT   607>>CALLBLT   612>>CALLBLT   619<<ASSIGN    620>>DOSELCT
       622>>CALLBLT   624<>CALL      627>>CALLBLT   629>>ASSIGN    643>>CALLBLT   648>>CALLBLT   655<<ASSIGN
       656<>CALL      663>>CALLBLT   664>>CALLBLT   666>>ASSIGN
RTBITS
       593**DCL       656<>CALL      657<>CALL      658<>CALL      659>>IF        659>>IF        659>>IF
SN
       594**DCL         6--PROC      666<<ASSIGN
TEMP
       595**DCL       607<<CALLBLT   609>>ASSIGN    612<<CALLBLT   614>>ASSIGN    622<<CALLBLT   627<<CALLBLT
       643<<CALLBLT   645>>ASSIGN    648<<CALLBLT   650>>ASSIGN    664<<CALLBLT
TEMP IN PROCEDURE CHARHEX
       679**DCL       685<<ASSIGN    686>>IF        686<<ASSIGN    686>>ASSIGN    687>>ASSIGN
TXT IN PROCEDURE CHARHEX
       681**DCL       676--PROC      685>>ASSIGN
VALUE IN PROCEDURE CHARHEX
       680**DCL       676--PROC      683<<ASSIGN    687<<ASSIGN    687>>ASSIGN    689<>CALL      689<>CALL
XSL$HTONL
       571**DCL-ENT   689--CALL
XSL$INET_ADDR
       572**DCL-ENT   656--CALL
XSL$INET_LNAOF
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:142  
       573**DCL-ENT   657--CALL
XSL$INET_NETOF
       574**DCL-ENT   639--CALL      658--CALL
XSL_NETMASK
       576**DCL       624<>CALL      659>>IF        659>>IF
XSL_SN
       577**DCL       629<<ASSIGN
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:143  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:144  
              MINI UREF LISTING

M$ACCT      33**DCL-ENT
M$ACTIVATE      36**DCL-ENT
M$ALIB      29**DCL-ENT
M$ASUSER      31**DCL-ENT
M$ATTACH      38**DCL-ENT
M$BADPP      56**DCL-ENT
M$CGCTL      37**DCL-ENT
M$CGINFO      37**DCL-ENT
M$CHECK      18**DCL-ENT
M$CHGUNIT      76**DCL-ENT
M$CLRSTK      74**DCL-ENT
M$CMDVAR      85**DCL-ENT
M$CONFIG      46**DCL-ENT
M$CORRES      21**DCL-ENT
M$CPEXIT      30**DCL-ENT
M$CVM      54**DCL-ENT
M$CVOL      19**DCL-ENT
M$DCLFLD      46**DCL-ENT
M$DEACTIVATE      36**DCL-ENT
M$DELREC      18**DCL-ENT
M$DEQ      83**DCL-ENT
M$DETACH      38**DCL-ENT
M$DEVICE      20**DCL-ENT
M$DISPLAY      83**DCL-ENT
M$DISPRES      23**DCL-ENT
M$DLIB      29**DCL-ENT
M$DRIBBLE      46**DCL-ENT
M$DRTN      74**DCL-ENT
M$DSUSER      31**DCL-ENT
M$ENQ      82**DCL-ENT
M$EOM      41**DCL-ENT
M$ERASE      47**DCL-ENT
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:145  
M$ERR      28**DCL-ENT
M$ERRMSG      79**DCL-ENT
M$EVENT      71**DCL-ENT
M$EXHUME      80**DCL-ENT
M$EXIT      28**DCL-ENT
M$EXTEND      20**DCL-ENT
M$FDP      52**DCL-ENT
M$FDS      51**DCL-ENT
M$FEBOOT      44**DCL-ENT
M$FECTL      45**DCL-ENT
M$FEDUMP      44**DCL-ENT
M$FID      79**DCL-ENT
M$FINDPROC      33**DCL-ENT
M$FSUSER      31**DCL-ENT
M$FVP      53**DCL-ENT
M$FWCG      37**DCL-ENT
M$GBPL      57**DCL-ENT
M$GDDL      53**DCL-ENT
M$GDP      52**DCL-ENT
M$GDS      51**DCL-ENT
M$GETDCB      22**DCL-ENT
M$GETMOUSE      62**DCL-ENT
M$GETPM      63**DCL-ENT
M$GJOB      81**DCL-ENT
M$GLINEATTR      41**DCL-ENT
M$GOODPP      56**DCL-ENT
M$GPLATEN      49**DCL-ENT
M$GPROMPT      48**DCL-ENT
M$GTRMATTR      42**DCL-ENT
M$GTRMCTL      40**DCL-ENT
M$GTRMTAB      43**DCL-ENT
M$GVP      52**DCL-ENT
M$HELP      79**DCL-ENT
M$INT      71**DCL-ENT
M$INTRTN      32**DCL-ENT
M$IOQ      67**DCL-ENT
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:146  
M$JOBSTATS      81**DCL-ENT
M$KEYIN      21**DCL-ENT
M$LDEV      16**DCL-ENT
M$LDTRC      29**DCL-ENT
M$LIMIT      22**DCL-ENT
M$LINES      21**DCL-ENT
M$LINK      28**DCL-ENT
M$MADMUCK      24**DCL-ENT
M$MAKUSER      55**DCL-ENT
M$MBS      23**DCL-ENT
M$MDFFLD      47**DCL-ENT
M$MERC      72**DCL-ENT
M$MERCS      73**DCL-ENT
M$MIRROR      67**DCL-ENT
M$MONINFO      84**DCL-ENT
M$MPL      57**DCL-ENT
M$NODEINFO      48**DCL-ENT
M$NXTUSR      82**DCL-ENT
M$OCMSG      80**DCL-ENT
M$OLAY      28**DCL-ENT
M$OPEN      16**DCL-ENT
M$PAS      57**DCL-ENT
M$PATHCON      80**DCL-ENT
M$PDS      51**DCL-ENT
M$PLATEN      42**DCL-ENT
M$PRECORD      20**DCL-ENT
M$PROCNAME      33**DCL-ENT
M$PROFILE      44**DCL-ENT
M$PROMPT      40**DCL-ENT
M$RACST      24**DCL-ENT
M$RDSYSLOG      65**DCL-ENT
M$RELDCB      22**DCL-ENT
M$RELRES      23**DCL-ENT
M$RELSTARF      25**DCL-ENT
M$REM      25**DCL-ENT
M$RENV      72**DCL-ENT
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:147  
M$REQUIRE      24**DCL-ENT
M$RETRY      73**DCL-ENT
M$RETRYS      73**DCL-ENT
M$REW      19**DCL-ENT
M$RLSFLD      47**DCL-ENT
M$RPRIV      75**DCL-ENT
M$RSPP      54**DCL-ENT
M$RSWITCH      76**DCL-ENT
M$RUE      82**DCL-ENT
M$SAD      55**DCL-ENT
M$SAVE      31**DCL-ENT
M$SCON      32**DCL-ENT
M$SCREECH      30**DCL-ENT
M$SENV      72**DCL-ENT
M$SETFMA      16**DCL-ENT
M$SETFP      45**DCL-ENT
M$SINPUT      43**DCL-ENT
M$SLCFLD      48**DCL-ENT
M$SMOUSE      62**DCL-ENT
M$SMPRT      54**DCL-ENT
M$SPRIV      75**DCL-ENT
M$SSC      55**DCL-ENT
M$SSWITCH      75**DCL-ENT
M$STATE      84**DCL-ENT
M$STD      56**DCL-ENT
M$STIMER      70**DCL-ENT
M$STLPP      53**DCL-ENT
M$STRAP      70**DCL-ENT
M$STRMATTR      42**DCL-ENT
M$STRMCTL      40**DCL-ENT
M$STRMTAB      43**DCL-ENT
M$SYMBIO      81**DCL-ENT
M$SYSCON      67**DCL-ENT
M$SYSID      85**DCL-ENT
M$TDCLOSE      66**DCL-ENT
M$TDIO      66**DCL-ENT
PL6.E3A0      #004=XSL$ROUTES File=XSL$SOCKET5.:TCA2TSI                          SUN 11/16/97 14:34 Page:148  
M$TDOPEN      65**DCL-ENT
M$TDREQCPU      66**DCL-ENT
M$TEMPWROC      60**DCL-ENT
M$TIME      83**DCL-ENT
M$TRAP      70**DCL-ENT
M$TRMISC      45**DCL-ENT
M$TRMPRG      41**DCL-ENT
M$TRTN      74**DCL-ENT
M$TRUNC      17**DCL-ENT
M$TTIMER      70**DCL-ENT
M$UC      40**DCL
M$UMPL      57**DCL-ENT
M$UNFID      79**DCL-ENT
M$UNLATCH      36**DCL-ENT
M$UNSHARE      33**DCL-ENT
M$USRFIELD      76**DCL-ENT
M$VIRTUAL      51**DCL-ENT
M$WAIT      74**DCL-ENT
M$WEOF      19**DCL-ENT
M$WRITE      17**DCL-ENT
M$WRSYSLOG      65**DCL-ENT
M$XCON      71**DCL-ENT
M$XCONRTN      32**DCL-ENT
M$XEQTIME      84**DCL-ENT
M$XFLUSH      25**DCL-ENT
M$XMOUSE      62**DCL-ENT
M$XXX      28**DCL-ENT
M$YC      30**DCL-ENT
XSL$DATADEFS     568**DCL-ENT
XSL$ROUTES       6**PROC
