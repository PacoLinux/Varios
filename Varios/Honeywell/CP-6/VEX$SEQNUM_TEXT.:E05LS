VERSION E05

PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:1    
        1        1        /*M*    VEX$SEQNUM_TEXT - TURN EDIT KEY INTO TEXT SEQUENCE NUMBER */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        VEX$SEQNUM_TEXT: PROC(SEQNUM,SUB_BUF);
        9        9        /**/
       10       10        /*F*     NAME:     VEX$SEQNUM_TEXT
       11       11                 PURPOSE:  TO CONVERT A EDIT KEY TO A PRINTABLE TEXT SEQUENCE
       12       12                           NUMBER.                                 */
       13       13        /**/
       14       14        /*D*     NAME:     VEX$SEQNUM_TEXT
       15       15                 PARAMETER: SEQNUM - THE EDIT KEY TO BE CONVERTED TO TEXT
       16       16                 DESCRIPTION: BINCHAR IS CALLED TO CONVERT FROM BINARY TO PRINTABLE
       17       17                           CHARACTERS AND THE DECIMAL POINT IS INSERTED
       18       18                           INTO THE TEXT IN SEQ_TEXT_BUF.          */
       19       19        /**/
       20       20        /**********************************************************************/
       21       21        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       22       22        /**********************************************************************/
       23       23    1   DCL SEQNUM UBIN(36);
       24       24    1   DCL 1 SUB_BUF,
       25       25    1         2 COUNT UBIN(9) UNAL,
       26       26    1         2 TEXT CHAR(31) UNAL;
       27       27        /**/
       28       28        /*****************************************************************/
       29       29        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       30       30        /*****************************************************************/
       31       31    1   DCL TEMP_TEXT CHAR(8);
       32       32    1   DCL INDX UBIN WORD AUTO;
       33       33        /**/
       34       34        /*********************************************************/
       35       35        /*     INCLUDE FILES * INCLUDE FILES * INCLUDE FILES     */
       36       36        /*********************************************************/
       37       37        %INCLUDE B_MICROPS_C;
PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:2    
       38      209        /**/
       39      210        /*****************************************************************/
       40      211        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       41      212        /*****************************************************************/
       42      213        /**/
       43      214        %INCLUDE VE_FLAGS_R;
       44      265        /**/
       45      266    1   DCL 1 SEQ_TEXT_BUF CHAR(9) SYMREF;
       46      267    1   DCL 1 SEQ_TEXT_ARRAY (0:8) REDEF SEQ_TEXT_BUF CHAR(1) UNAL;
       47      268    1   DCL Y003 UBIN(36) SYMREF;
       48      269        /**/
       49      270        /**********************************************************/
       50      271        /*      CONSTANT DATA * CONSTANT DATA * CONSTANT DATA     */
       51      272        /**********************************************************/
       52      273    1   DCL EDIT_MOPS(0:4) BIT(9) UNAL CONSTANT INIT(%MVZB4,%MVC1,%SES10,%INSB7,%MVC3);
       53      274    1   DCL CONSEC_MOPS(0:2) BIT(9) UNAL CONSTANT INIT(%INSM4,%MVZB4,%MVC1);
       54      275        /**/
       55      276        /*****************************************************************************/
       56      277        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       57      278        /*****************************************************************************/
       58      279        /**/
       59      280    2           IF FLAGS.BADKEY THEN DO ;
       60      281    2             SEQ_TEXT_BUF = '<Bad key> ' ;
       61      282    2             GOTO DO_SUB_BUF ;
       62      283    2             END ; /* THEN DO */
       63      284    1           CALL BINCHAR(TEMP_TEXT,SEQNUM-Y003);
       64      285        /**/
       65      286    1           IF (FLAGS.CONSEC_MODE)OR(FLAGS.REL_MODE) THEN CALL EDITCHAR(SEQ_TEXT_BUF,0,9
               286                    ,
       66      287    1                CONSEC_MOPS,TEMP_TEXT);
       67      288    1           ELSE CALL EDITCHAR(SEQ_TEXT_BUF,0,9,EDIT_MOPS,TEMP_TEXT);
       68      289    1   DO_SUB_BUF:
       69      290    2           IF (ADDR(SUB_BUF) ~= ADDR(NIL)) THEN DO;
       70      291    2              INDX = 0;
       71      292    3              DO WHILE((INDX < SIZEC(SEQ_TEXT_BUF)-1)AND
       72      293    3                   (SUBSTR(SEQ_TEXT_BUF,INDX,1) = ' '));
       73      294    3                 INDX = INDX + 1;
PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:3    
       74      295    3                 END;
       75      296    2              SUB_BUF.COUNT = SIZEC(SEQ_TEXT_BUF) - INDX;
       76      297    2              SUB_BUF.TEXT = SUBSTR(SEQ_TEXT_BUF,INDX,SIZEC(SEQ_TEXT_BUF)-INDX +1);
       77      298    2              END;
       78      299    1           RETURN;
       79      300    1   END;                                    /* END VEX$SEQNUM_TEXT                */

PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:4    
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$SEQNUM_TEXT.

   Procedure VEX$SEQNUM_TEXT requires 58 words for executable code.
   Procedure VEX$SEQNUM_TEXT requires 10 words of local(AUTO) storage.

    No errors detected in file VEX$SEQNUM_TEXT.:E05TSI    .

PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:5    

 Object Unit name= VEX$SEQNUM_TEXT                            File name= VEX$SEQNUM_TEXT.:E05TOU
 UTS= JUL 30 '97 07:16:27.44 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      6      6  VEX$SEQNUM_TEXT
    1   Proc  even  none    58     72  VEX$SEQNUM_TEXT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  VEX$SEQNUM_TEXT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FLAGS                                 SEQ_TEXT_BUF                          Y003
     B_VECTNIL
PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:6    


        1        1        /*M*    VEX$SEQNUM_TEXT - TURN EDIT KEY INTO TEXT SEQUENCE NUMBER */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        VEX$SEQNUM_TEXT: PROC(SEQNUM,SUB_BUF);

      8  1 000000   000000 700200 xent  VEX$SEQNUM_* TSX0  ! X66_AUTO_2
         1 000001   000012 000002                    ZERO    10,2

        9        9        /**/
       10       10        /*F*     NAME:     VEX$SEQNUM_TEXT
       11       11                 PURPOSE:  TO CONVERT A EDIT KEY TO A PRINTABLE TEXT SEQUENCE
       12       12                           NUMBER.                                 */
       13       13        /**/
       14       14        /*D*     NAME:     VEX$SEQNUM_TEXT
       15       15                 PARAMETER: SEQNUM - THE EDIT KEY TO BE CONVERTED TO TEXT
       16       16                 DESCRIPTION: BINCHAR IS CALLED TO CONVERT FROM BINARY TO PRINTABLE
       17       17                           CHARACTERS AND THE DECIMAL POINT IS INSERTED
       18       18                           INTO THE TEXT IN SEQ_TEXT_BUF.          */
       19       19        /**/
       20       20        /**********************************************************************/
       21       21        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       22       22        /**********************************************************************/
       23       23    1   DCL SEQNUM UBIN(36);
       24       24    1   DCL 1 SUB_BUF,
       25       25    1         2 COUNT UBIN(9) UNAL,
       26       26    1         2 TEXT CHAR(31) UNAL;
       27       27        /**/
       28       28        /*****************************************************************/
       29       29        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       30       30        /*****************************************************************/
       31       31    1   DCL TEMP_TEXT CHAR(8);
       32       32    1   DCL INDX UBIN WORD AUTO;
PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:7    
       33       33        /**/
       34       34        /*********************************************************/
       35       35        /*     INCLUDE FILES * INCLUDE FILES * INCLUDE FILES     */
       36       36        /*********************************************************/
       37       37        %INCLUDE B_MICROPS_C;
       38      209        /**/
       39      210        /*****************************************************************/
       40      211        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       41      212        /*****************************************************************/
       42      213        /**/
       43      214        %INCLUDE VE_FLAGS_R;
       44      265        /**/
       45      266    1   DCL 1 SEQ_TEXT_BUF CHAR(9) SYMREF;
       46      267    1   DCL 1 SEQ_TEXT_ARRAY (0:8) REDEF SEQ_TEXT_BUF CHAR(1) UNAL;
       47      268    1   DCL Y003 UBIN(36) SYMREF;
       48      269        /**/
       49      270        /**********************************************************/
       50      271        /*      CONSTANT DATA * CONSTANT DATA * CONSTANT DATA     */
       51      272        /**********************************************************/
       52      273    1   DCL EDIT_MOPS(0:4) BIT(9) UNAL CONSTANT INIT(%MVZB4,%MVC1,%SES10,%INSB7,%MVC3);
       53      274    1   DCL CONSEC_MOPS(0:2) BIT(9) UNAL CONSTANT INIT(%INSM4,%MVZB4,%MVC1);
       54      275        /**/
       55      276        /*****************************************************************************/
       56      277        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       57      278        /*****************************************************************************/
       58      279        /**/
       59      280    2           IF FLAGS.BADKEY THEN DO ;

    280  1 000002   000001 236000 xsym               LDQ     FLAGS+1
         1 000003   200000 316003                    CANQ    65536,DU
         1 000004   000011 600000 1                  TZE     s:284

       60      281    2             SEQ_TEXT_BUF = '<Bad key> ' ;

    281  1 000005   040000 100400                    MLR     fill='040'O
         1 000006   000003 000011 0                  ADSC9   CONSEC_MOPS+1            cn=0,n=9
         1 000007   000000 000011 xsym               ADSC9   SEQ_TEXT_BUF             cn=0,n=9
PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:8    

       61      282    2             GOTO DO_SUB_BUF ;

    282  1 000010   000036 710000 1                  TRA     DO_SUB_BUF

       62      283    2             END ; /* THEN DO */
       63      284    1           CALL BINCHAR(TEMP_TEXT,SEQNUM-Y003);

    284  1 000011   200003 470500                    LDP0    @SEQNUM,,AUTO
         1 000012   000000 236100                    LDQ     0,,PR0
         1 000013   000000 136000 xsym               SBLQ    Y003
         1 000014   200010 756100                    STQ     INDX+1,,AUTO
         1 000015   000100 301500                    BTD
         1 000016   200010 000004                    NDSC9   INDX+1,,AUTO             cn=0,s=lsgnf,sf=0,n=4
         1 000017   200005 030010                    NDSC9   TEMP_TEXT,,AUTO          cn=0,s=nosgn,sf=0,n=8

       64      285        /**/
       65      286    1          IF (FLAGS.CONSEC_MODE)OR(FLAGS.REL_MODE) THEN CALL EDITCHAR(SEQ_TEXT_BUF,0,9
               286                    ,

    286  1 000020   000000 236000 xsym               LDQ     FLAGS
         1 000021   002000 316003                    CANQ    1024,DU
         1 000022   000025 601000 1                  TNZ     s:286+5
         1 000023   400000 316007                    CANQ    -131072,DL
         1 000024   000032 600000 1                  TZE     s:288

    286  1 000025   000000 024500                    MVNE
         1 000026   200005 030010                    NDSC9   TEMP_TEXT,,AUTO          cn=0,s=nosgn,sf=0,n=8
         1 000027   000002 000003 0                  ADSC9   CONSEC_MOPS              cn=0,n=3
         1 000030   000000 000011 xsym               ADSC9   SEQ_TEXT_BUF             cn=0,n=9
         1 000031   000036 710000 1                  TRA     DO_SUB_BUF

       66      287    1                CONSEC_MOPS,TEMP_TEXT);
       67      288    1           ELSE CALL EDITCHAR(SEQ_TEXT_BUF,0,9,EDIT_MOPS,TEMP_TEXT);

    288  1 000032   000000 024500                    MVNE
         1 000033   200005 030010                    NDSC9   TEMP_TEXT,,AUTO          cn=0,s=nosgn,sf=0,n=8
PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:9    
         1 000034   000000 000005 0                  ADSC9   EDIT_MOPS                cn=0,n=5
         1 000035   000000 000011 xsym               ADSC9   SEQ_TEXT_BUF             cn=0,n=9

       68      289    1   DO_SUB_BUF:
       69      290    2           IF (ADDR(SUB_BUF) ~= ADDR(NIL)) THEN DO;

    290  1 000036   200004 236100       DO_SUB_BUF   LDQ     @SUB_BUF,,AUTO
         1 000037   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000040   000071 600000 1                  TZE     s:299

       70      291    2              INDX = 0;

    291  1 000041   200007 450100                    STZ     INDX,,AUTO

       71      292    3              DO WHILE((INDX < SIZEC(SEQ_TEXT_BUF)-1)AND

    292  1 000042   000046 710000 1                  TRA     s:295

       72      293    3                   (SUBSTR(SEQ_TEXT_BUF,INDX,1) = ' '));
       73      294    3                 INDX = INDX + 1;

    294  1 000043   200007 235100                    LDA     INDX,,AUTO
         1 000044   000001 035007                    ADLA    1,DL
         1 000045   200007 755100                    STA     INDX,,AUTO

       74      295    3                 END;

    295  1 000046   200007 235100                    LDA     INDX,,AUTO
         1 000047   000010 115007                    CMPA    8,DL
         1 000050   000055 603000 1                  TRC     s:296
         1 000051   040000 106405                    CMPC    fill='040'O
         1 000052   000000 000001 xsym               ADSC9   SEQ_TEXT_BUF,A           cn=0,n=1
         1 000053   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000054   000043 600000 1                  TZE     s:294

       75      296    2              SUB_BUF.COUNT = SIZEC(SEQ_TEXT_BUF) - INDX;

PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:10   
    296  1 000055   000011 236007                    LDQ     9,DL
         1 000056   200007 136100                    SBLQ    INDX,,AUTO
         1 000057   200010 756100                    STQ     INDX+1,,AUTO
         1 000060   200004 470500                    LDP0    @SUB_BUF,,AUTO
         1 000061   000100 101500                    MRL     fill='000'O
         1 000062   200010 000004                    ADSC9   INDX+1,,AUTO             cn=0,n=4
         1 000063   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

       76      297    2              SUB_BUF.TEXT = SUBSTR(SEQ_TEXT_BUF,INDX,SIZEC(SEQ_TEXT_BUF)-INDX +1);

    297  1 000064   777765 620005                    EAX0    -11,AL
         1 000065   777777 660003                    ERX0    -1,DU
         1 000066   040100 100445                    MLR     fill='040'O
         1 000067   000000 000010 xsym               ADSC9   SEQ_TEXT_BUF,A           cn=0,n=*X0
         1 000070   000000 200037                    ADSC9   0,,PR0                   cn=1,n=31

       77      298    2              END;

       78      299    1           RETURN;

    299  1 000071   000000 702200 xent               TSX2  ! X66_ARET
       79      300    1   END;                                    /* END VEX$SEQNUM_TEXT                */

PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:11   
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$SEQNUM_TEXT.
PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:12   

 **** Variables and constants ****

  ****  Section 000 RoData VEX$SEQNUM_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/b BIT (9)     r     1 CONSEC_MOPS(0:2)
     0-0-0/b BIT (9)     r     1 EDIT_MOPS(0:4)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SEQNUM                    4-0-0/w PTR         r     1 @SUB_BUF
     7-0-0/w UBIN        r     1 INDX                      *0-0-0/w UBIN        r     1 SEQNUM
    *0-0-0/c STRC(288)   r     1 SUB_BUF                    5-0-0/c CHAR(8)     r     1 TEMP_TEXT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC(72)    r     1 FLAGS                      0-0-0/c CHAR(9)     r     1 SEQ_TEXT_BUF
     0-0-0/w UBIN        r     1 Y003


   Procedure VEX$SEQNUM_TEXT requires 58 words for executable code.
   Procedure VEX$SEQNUM_TEXT requires 10 words of local(AUTO) storage.

    No errors detected in file VEX$SEQNUM_TEXT.:E05TSI    .
PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:13   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VEX$SEQNUM_TEXT File=VEX$SEQNUM_TEXT.:E05TSI                  WED 07/30/97 07:16 Page:14   
          MINI XREF LISTING

CONSEC_MOPS
       274**DCL       286>>CALLBLT
DO_SUB_BUF
       290**LABEL     282--GOTO
EDIT_MOPS
       273**DCL       288>>CALLBLT
FLAGS.BADKEY
       260**DCL       280>>IF
FLAGS.CONSEC_MODE
       230**DCL       286>>IF
FLAGS.REL_MODE
       241**DCL       286>>IF
INDX
        32**DCL       291<<ASSIGN    292>>DOWHILE   292>>DOWHILE   294<<ASSIGN    294>>ASSIGN    296>>ASSIGN
       297>>ASSIGN    297>>ASSIGN
SEQNUM
        23**DCL         8--PROC      284>>CALLBLT
SEQ_TEXT_BUF
       266**DCL       267--REDEF     281<<ASSIGN    286<<CALLBLT   288<<CALLBLT   292--DOWHILE   292>>DOWHILE
       296--ASSIGN    297>>ASSIGN    297--ASSIGN
SUB_BUF
        24**DCL         8--PROC      290--IF
SUB_BUF.COUNT
        25**DCL       296<<ASSIGN
SUB_BUF.TEXT
        26**DCL       297<<ASSIGN
TEMP_TEXT
        31**DCL       284<<CALLBLT   286>>CALLBLT   288>>CALLBLT
Y003
       268**DCL       284>>CALLBLT
