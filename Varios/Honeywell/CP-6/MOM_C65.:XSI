/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/* Equates for I/O cache granule types                                        */
       %EQU CTYP_MAD=0;
       %EQU CTYP_PAD=1;
       %EQU CTYP_GP=2;
       %EQU CTYP_FD=3;
       %EQU CTYP_FIT=4;
       %EQU CTYP_UL=5;  /* THIS MUST ALWAYS BE THE FIRST OF THE FILE TYPES    */
       %EQU CTYP_INDEX=6;
       %EQU CTYP_DATA=7;
       %EQU CTYP_REL=8;
       %EQU CTYP_CONSEC=9;
       %EQU CTYP_ELSE=10;
       %EQU CACHETYPES=11;
%MACRO HASH(SRDA=SRDA, SETX=SETX, HASH=HASH);
       HASH=BITBIN(BINBIT(SRDA+SETX, 36)&FMC_MASK)*4+1;
%MEND;
/* CACHE TABLE */
%MACRO FMC$CACHE(FPTN=FMC$CACHETBL, STCLASS="BASED(FMC_CACHE$)",
                 ARRAY(YES=1, NO=0)=1);
%IF ARRAY = 1;
       DCL 1 FPTN(0:0) STCLASS,
%ELSE;
       DCL 1 FPTN STCLASS,
%ENDIF;
            2 TYPE UBIN(9) CALIGNED,           /* GRAN TYPE                   */
            2 SRDA UBIN(27) CALIGNED,          /* DA OF GRAN                  */
            2 FLINK UBIN(18) HALIGNED,         /* FLINK OF UNUSED GRANS       */
            2 BLINK UBIN(18) HALIGNED,         /* BLINK OF UNUSED GRANS       */
            2 PAGE UBIN(18) HALIGNED,          /* PAGE# OF GRAN               */
            2 USECNT UBIN(18) HALIGNED,       /* NUM USERS ON THIS GRAN      */
            2 UPCOUNT UBIN ALIGNED,            /* NUMBER OF TIME UPDATED      */
            2 SETX UBIN(18) HALIGNED,         /* SETX OF GRAN                */
            2 USER UBIN(9) CALIGNED,           /* USER # OF 1ST WAITING USER  */
            2 FLAGS,
             3 * BIT(5) UNAL,
             3 IO BIT(1) UNAL,                 /* IO IN PROGRESS              */
             3 WAIT BIT(1) UNAL,               /* USERS ARE WAITING FOR IO    */
             3 ERR BIT(1) UNAL,                /* ERROR FOUND ON THIS PAGE    */
             3 BUFUP BIT(1) UNAL,              /* GRAN HAS BEEN UPDATED       */
            2 AGE UBIN(36) ALIGNED;            /* TIME OF LAST ACCESS         */
%MEND;
/* TABLE USED TO LINK UNUSED GRANS TOGETHER    */
%MACRO FMC$TYPTBL(FPTN=FMC$TYPTBL, STCLASS="BASED(FMC_TYPTBL$)");
       DCL 1 FPTN(0:%(%CACHETYPES-1)) STCLASS,
            2 OLDEST UBIN ALIGNED,
            2 NEWEST UBIN ALIGNED;
%MEND;
/* TABLE USED TO HOLD STATS                    */
%MACRO FMC$STATS(FPTN=FMC$STATS, STCLASS="BASED(FMC_STATS$)");
       DCL 1 FPTN STCLASS,
            2 HITZERO(0:%(%CACHETYPES-1)) SBIN,
            2 HITNONZERO(0:%(%CACHETYPES-1)) SBIN,
            2 FAILED(0:%(%CACHETYPES-1)) SBIN,
            2 ATTGET(0:%(%CACHETYPES-1)) SBIN,
            2 ATTPUT(0:%(%CACHETYPES-1)) SBIN,
            2 UNUSED(0:%(%CACHETYPES-1)) SBIN;
%MEND;
/*M* FM_CACHE_R */
/*M*  FM_CACHE_D - Data for the I/O cache */
DCL FMC_CACHE$ PTR SYMREF;DCL FMC_TYPTBL$ PTR SYMREF;DCL FMC_STATS$ PTR SYMREF;DCL FMC_CACHESIZ SBIN SYMREF;DCL FMC_CACHESIZN SBIN
SYMREF;DCL FMC_CACHEPGCNT SBIN SYMREF;DCL FMC$CACHEPGCNT SBIN BASED(FMC_CACHEPGCNT$);DCL FMC_CACHEPGCNT$ PTR SYMREF;DCL 1
FMC_CACHEPGCNT$R REDEF FMC_CACHEPGCNT$,2 * BIT(24),2 SID BIT(12);DCL FMC_LOCK BIT(72)SYMREF;DCL FMC_MASK BIT(36)SYMREF;DCL
FMC_MASKTBL(0:17)BIT(36)SYMREF READONLY;
/*M* FM_CNTRL_R */
/*M*   FM_CNTRL_D  -  File management control data */
DCL 1 FMC_LIMITS(0:%(%CACHETYPES-1))SYMREF,2 EXPIRE SBIN,2 UPLIMIT SBIN;DCL FM_WRCMP SBIN SYMREF;
/*M* MM_DATA_R */
/*M* Definitions for all data owned by Memory Management.          */
%INCLUDE M_INFO_C;
%INCLUDE MM$SYSGEN;
%INCLUDE B_STRINGS_C;
%INCLUDE MOM_C66;
DCL MM_LOCK BIT(72)SYMREF DALIGNED;DCL MM_CGLOCK BIT(72)SYMREF DALIGNED;DCL MM_FPPH SYMREF SBIN;DCL MM_FPPT SYMREF SBIN;DCL MM_FPPC
SYMREF SBIN;DCL MM_SPPH SYMREF SBIN;DCL MM_SPPT SYMREF SBIN;DCL MM_SPPC SYMREF SBIN;DCL MM_BPPH SYMREF SBIN;DCL MM_BPPT SYMREF SBIN;
DCL MM_BPPC SYMREF SBIN;DCL MM_SUSPECTS SYMREF SBIN;DCL MM_IN_TEST SYMREF SBIN;DCL MM_IOCC SYMREF SBIN;DCL MM_AUTO SYMREF SBIN;DCL
MM_AUTOINUSE SYMREF SBIN;DCL MM_SHAREDS SYMREF SBIN;DCL MM_SHAREDSUSE SYMREF SBIN;DCL MM_BYP$ PTR SYMREF READONLY;DCL 1 MM$BYP BASED
(MM_BYP$),2 FPPH SBIN,2 FPPT SBIN,2 FPPC SBIN,2 SPPH SBIN,2 SPPT SBIN,2 SPPC SBIN,2 BPPH SBIN,2 BPPT SBIN,2 BPPC SBIN,2 SUSPECTS
SBIN,2 IN_TEST SBIN,2 IOCC SBIN,2 AUTOP SBIN,2 AUTOINUSE SBIN,2 SHAREDS SBIN,2 SHAREDSUSE SBIN;DCL MM_PCORE SYMREF SBIN;DCL MM_GAPSZ
SYMREF SBIN;DCL MM_RSVP SYMREF SBIN;DCL MM_STLM SYMREF SBIN;DCL MM_RDS(0:7)SYMREF SBIN;DCL MM_DSMAX(0:7)UBIN BYTE SYMREF UNAL;DCL
MM_HELD SYMREF UBIN;DCL MM_AARD UBIN SYMREF;DCL MM_XDEL UBIN SYMREF;DCL MM_CHKFLG SYMREF BIT(1);DCL MM_SEGLO(0:%HIFIXEDSID)SYMREF
SBIN;DCL MM_SEGHI(0:%HIFIXEDSID)SYMREF SBIN;DCL MM_PWSQPGS(0:2)UBIN(18)SYMREF UNAL;DCL MM_NCWSQ SBIN SYMREF;DCL MM_NCQPGS SBIN
SYMREF;DCL 1 MM_FPMC SYMREF,2 RPN UBIN(18)UNAL,2 * UBIN(18)UNAL;DCL MM_CGQMAP_PGS UBIN WORD SYMREF;DCL MM_CGQRES_PGS UBIN WORD
SYMREF;DCL MM_CGQCXT_END UBIN WORD SYMREF;DCL MM_CGQPHS UBIN WORD SYMREF;DCL MM_CGQPHE UBIN WORD SYMREF;
%MM$CGQD(FPTN=MM_CGQD,STCLASS="SYMREF");
DCL 1 MM_CGTCNT SYMREF ALIGNED,2 DSBS SBIN WORD,2 PT SBIN WORD;DCL MM_SPTRNC SYMREF SBIN;DCL MM_IOTRNC SYMREF SBIN;DCL 1 MM$PPUT
(0:0)BASED ALIGNED,2 SUSPECT BIT(1),2 BAD BIT(1),2 IN_TEST BIT(1),2 FREE BIT(1),2 USER BIT(1),2 IO BIT(1),2 PRC BIT(1),2 STOLEN BIT
(1),2 COMM BIT(1),2 USER# UBIN(9)CALIGNED,2 PNUM REDEF USER# UBIN(9)CALIGNED,2 PPNO UBIN(18)HALIGNED;DCL 1 MM$VPPUT(0:0)BASED
ALIGNED,2 SUSPECT BIT(1),2 BAD BIT(1),2 IN_TEST BIT(1),2 FREE BIT(1),2 USER BIT(1),2 IO BIT(1),2 PRC BIT(1),2 STOLEN BIT(1),2 COMM
BIT(1),2 PPNO UBIN(27)UNAL;DCL 1 MM$VCB BASED,2 INITIALIZE BIT(1),2 NOFILE BIT(1),2 WRITE BIT(1),2 CREATE BIT(1),2 T,3 FRAGMENTED
BIT(1),3 SECTION BIT(1),2 * BIT(3),2 WSQ UBIN(9)CALIGNED,2 DCB# UBIN(9)CALIGNED,2 SEGNUM UBIN(9)CALIGNED,2 INITVALUE UBIN WORD
ALIGNED,2 MAXVP# UBIN ALIGNED,2 PPMAX UBIN HALF HALIGNED,2 PPMIN UBIN HALF HALIGNED,2 PTR$ PTR ALIGNED,2 WSPTD ALIGNED,3 BLKNO UBIN
HALF UNAL,3 Q BIT(2),3 P BIT(1),3 T BIT(2),3 * BIT(1),3 NBLKS UBIN(12)UNAL,2 HEAD SBIN ALIGNED,2 TAIL SBIN ALIGNED,2 MAXVP_WRITTEN
UBIN,2 PPC UBIN HALF HALIGNED,2 NPGTSECT UBIN HALF HALIGNED,2 NPGTPGS UBIN,2 UPGT# UBIN HALF UNAL,2 * UBIN HALF UNAL;
%MACRO MM$VIRTUAL_STATS(STCLASS=BASED);
DCL 1 MM$VIRTUAL_STATS STCLASS,2 READS# UBIN WORD,2 WRITES# UBIN WORD,2 FAULTS# UBIN WORD,2 MAXPGS# UBIN WORD,2 TRUNCS# UBIN WORD,2
*(0:2)UBIN WORD;
%MEND;
DCL MM_PTPTRS$(0:%B_CWSQMAX)PTR SYMREF READONLY;DCL MM_LSPTRS$(0:%USERWSQ)PTR SYMREF READONLY;DCL 1 MM$DESC(0:0)BASED DALIGNED,2
BOUND UBIN(20)UNAL,2 SUPER REDEF BOUND,3 BASE UBIN(10)UNAL,3 BOUND UBIN(10)UNAL,2 FLGS BIT(9),2 FLGS1 REDEF FLGS,3 * BIT(7),3
NOTEMPTY BIT(1),3 * BIT(1),2 WSR UBIN(3)UNAL,2 TYP UBIN(4)UNAL,2 BASE SBIN WORD;
%MACRO FINDMAP(WSQ=WSQ,P$=P$);
P$=MM_PTPTRS$(WSQ);
%MEND;
%MACRO FINDLS(WSQ=WSQ,P$=P$);
P$=MM_LSPTRS$(WSQ);
%MEND;
%MACRO MAP(P$=B$UPT$,VPNO=VPNO,PPNO=PPNO);
IF HW_WSQ0PT THEN P$->B$MAP.RPN(VPNO)=B$WSQ0PT$->B$MAP.RPN(PPNO);ELSE P$->B$MAP.RPN(VPNO)=PPNO;
%MEND;
%MACRO SAC(P$=B$UPT$,VPNO=VPNO,AC=AC);
P$->B$MAP.CTRL(VPNO)=AC;
%MEND;
%MACRO SSC(P$=B$UPT$,VPNO=VPNO,SC=SC);
P$->B$MAP.SCTRL(VPNO)=SC;
%MEND;
%MACRO GETDBASE(LS$=B$ULS$,SEGID=SEGID,DBASE=DBASE);
DBASE=LS$->MM$DESC.BASE(BITBIN((SEGID)&'1777'O));
%MEND;
%MACRO GETDBOUND(LS$=B$ULS$,SEGID=SEGID,DBOUND=DBOUND);
DBOUND=LS$->MM$DESC.BOUND(BITBIN((SEGID)&'1777'O));
%MEND;
%MACRO NOTNULL(LS$=B$ULS$,SEGID=SEGID);
LS$->MM$DESC.FLGS1.NOTEMPTY(BITBIN((SEGID)&'1777'O))
%MEND;
%MACRO SETNULL(LS$=B$ULS$,SEGID=SEGID);
LS$->MM$DESC.FLGS1.NOTEMPTY(BITBIN((SEGID)&'1777'O))='0'B;LS$->MM$DESC.BOUND(BITBIN((SEGID)&'1777'O))=0;
%MEND;
%MACRO SETNOTNULL(LS$=B$ULS$,SEGID=SEGID);
LS$->MM$DESC.FLGS1.NOTEMPTY(BITBIN((SEGID)&'1777'O))='1'B;
%MEND;
%MACRO SETFLG(LS$=B$ULS$,SEGID=SEGID,FLG=FLG);
LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O))=LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O))|(FLG);
%MEND;
%MACRO RSETFLG(LS$=B$ULS$,SEGID=SEGID,FLG=FLG);
LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O))=LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O))&~(FLG);
%MEND;
%MACRO GETFLG(LS$=B$ULS$,SEGID=SEGID,FLG=FLG);
FLG=LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O));
%MEND;
%MACRO SETDBASE(LS$=B$ULS$,SEGID=SEGID,DBASE=DBASE);
LS$->MM$DESC.BASE(BITBIN((SEGID)&'1777'O))=DBASE;
%MEND;
%MACRO SETDBOUND(LS$=B$ULS$,SEGID=SEGID,DBOUND=DBOUND);
LS$->MM$DESC.BOUND(BITBIN((SEGID)&'1777'O))=DBOUND;
%MEND;
