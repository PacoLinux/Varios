VERSION E05

PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:1    
        1        1        /*M*   MISC SCHEDULER ROUTINES                                         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   AND,DTI=3 */
        8        8        SSC$STIMR: PROC( NEW_STIMR);
        9        9
       10       10    1   DCL NEW_STIMR UBIN PARAM;
       11       11                                           /*0=SLAVE, 1=SERV, 2=MONX, 3=IDLE, 4=IOW*/
       12       12    1   DCL SSS$TIME ENTRY;
       13       13    1   DCL S_PNO SBIN SYMREF;
       14       14    1   DCL S_TIMR SBIN SYMREF;
       15       15    1   DCL S_INCTIME SBIN SYMREF;
       16       16    1   DCL S_UXTSCHD UBIN SYMREF;
       17       17    1   DCL S_USTSCHD UBIN SYMREF;
       18       18    1   DCL B$JIT$ PTR SYMREF;
       19       19        %PLIST;
       20       20        %INCLUDE S$JIT_C;
       21      451        %INCLUDE SS_SCHED_R;
       22      494        %INCLUDE SS_SCHED_C;
       23      727        %EJECT;
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:2    
       24      728                                           /*PUT PREV INTERVAL IN RIGHT POT, INIT NEXT*/
       25      729    2           DO INHIBIT;
       26      730    2              CALL COMMON;
       27      731    2              S_TIMR = NEW_STIMR;
       28      732    2              RETURN;
       29      733    2           END;
       30      734    1   SSC$SASYNC: ENTRY;
       31      735    2           DO INHIBIT;
       32      736    2              CALL COMMON;
       33      737    2              S_TIMR = 2;                  /*MONITOR EXECUTION*/
       34      738    2              RETURN;
       35      739    2           END;
       36      740    1   SSC$MON: ENTRY;
       37      741    2           DO INHIBIT;
       38      742    2              CALL COMMON;
       39      743    2              S_TIMR = 2;                  /*MONITOR EXECUTION*/
       40      744                                                /*ACCOUNT CPU TIME*/
       41      745    2              S_UXUSEC(S_PNO)=S_UXUSEC(S_PNO)+B$JIT.XTIME-S_UXTSCHD;
       42      746    2              S_USUSEC(S_PNO)=S_USUSEC(S_PNO)+B$JIT.STIME-S_USTSCHD;
       43      747    2              S_UXTSCHD = B$JIT.XTIME;
       44      748    2              S_USTSCHD = B$JIT.STIME;
       45      749    2              RETURN;
       46      750    2           END;
       47      751    1   SSC$IOW: ENTRY;
       48      752    2           DO INHIBIT;
       49      753    2              CALL COMMON;
       50      754    2              S_TIMR = 4;                  /*I/O WAIT*/
       51      755    2              RETURN;
       52      756    2           END;
       53      757    1   SSC$RESW: ENTRY;
       54      758    2           DO INHIBIT;
       55      759    2              CALL COMMON;
       56      760    2              S_TIMR = 5;                  /*RESOURCE WAIT*/
       57      761    2              RETURN;
       58      762    2           END;
       59      763    1   SSC$RESIOW: ENTRY;
       60      764    2           DO INHIBIT;
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:3    
       61      765    2              CALL COMMON;
       62      766    2              S_TIMR = 6;                  /*RESOURCE WAIT WITH I/O WAIT*/
       63      767    2              RETURN;
       64      768    2           END;
       65      769    1   SSC$STOPPED: ENTRY;
       66      770    2           DO INHIBIT;
       67      771    2              CALL COMMON;
       68      772    2              S_TIMR = 7;                  /*CPU STOPPED*/
       69      773    2              RETURN;
       70      774    2           END;
       71      775    1   SSC$IDLE: ENTRY;
       72      776    2           DO INHIBIT;
       73      777    2              CALL COMMON;
       74      778    2              S_TIMR = 3;                  /*IDLE*/
       75      779    2              RETURN;
       76      780    2           END;
       77      781    1   SSC$SLAVE: ENTRY;
       78      782    2           DO INHIBIT;
       79      783    2              CALL COMMON;
       80      784    2              S_TIMR = 0;                  /*SLAVE*/
       81      785    2              RETURN;
       82      786    2           END;
       83      787    1   SSC$SERV: ENTRY;
       84      788    2           DO INHIBIT;
       85      789    2              CALL COMMON;
       86      790    2              S_TIMR = 1;                  /*SERVICE*/
       87      791    2              RETURN;
       88      792    2           END;
       89      793    1   COMMON: PROC;
       90      794    3           DO INHIBIT;
       91      795    3              CALL SSS$TIME;
       92      796    4              DO CASE(S_TIMR);
       93      797    4               CASE(0);
       94      798    4                 B$JIT.XTIME=B$JIT.XTIME+S_INCTIME;
       95      799    4               CASE(1);
       96      800    4                 B$JIT.STIME=B$JIT.STIME+S_INCTIME;
       97      801    4               CASE(2);
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:4    
       98      802    4                 S_MXUSEC(S_PNO)=S_MXUSEC(S_PNO)+S_INCTIME;
       99      803    4               CASE(3);
      100      804    4                 S_MIDUSEC(S_PNO)=S_MIDUSEC(S_PNO)+S_INCTIME;
      101      805    4               CASE(4);
      102      806    4                 S_MIIUSEC(S_PNO)=S_MIIUSEC(S_PNO)+S_INCTIME;
      103      807    4               CASE(5);
      104      808    4                 S_MIRUSEC(S_PNO)=S_MIRUSEC(S_PNO)+S_INCTIME;
      105      809    4               CASE(6);
      106      810    4                 S_MIIRUSEC(S_PNO)=S_MIIRUSEC(S_PNO)+S_INCTIME;
      107      811    4              END;
      108      812    3              RETURN;
      109      813    3           END;                            /* END INHIBIT                        */
      110      814    2   END COMMON;
      111      815    1   END SSC$STIMR;
      112      816        %EOD;

PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:5    
--  Include file information  --

   SS_SCHED_C.:E05TOU  is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   S$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSC$STIMR.

   Procedure SSC$STIMR requires 147 words for executable code.
   Procedure SSC$STIMR requires 6 words of local(AUTO) storage.

PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:6    

 Object Unit name= SSC$STIMR                                  File name= SSC$SCHD.:E05TOU
 UTS= JUL 30 '97 05:56:39.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   147    223  SSC$STIMR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  SSC$STIMR
     0     11                  yes      Std        0  SSC$SASYNC
     0     21                  yes      Std        0  SSC$MON
     0     47                  yes      Std        0  SSC$IOW
     0     57                  yes      Std        0  SSC$RESW
     0     67                  yes      Std        0  SSC$RESIOW
     0     77                  yes      Std        0  SSC$STOPPED
     0    107                  yes      Std        0  SSC$IDLE
     0    117                  yes      Std        0  SSC$SLAVE
     0    126                  yes      Std        0  SSC$SERV

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 SSS$TIME
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     S_PNO                                 S_TIMR                                S_INCTIME
     S_UXTSCHD                             S_USTSCHD                             B$JIT$
     S_MXUSEC                              S_MIDUSEC                             S_MIIUSEC
     S_MIRUSEC                             S_MIIRUSEC                            S_UXUSEC
     S_USUSEC                              B_VECTNIL
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:8    


        1        1        /*M*   MISC SCHEDULER ROUTINES                                         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   AND,DTI=3 */
        8        8        SSC$STIMR: PROC( NEW_STIMR);

      8  0 000000   000000 700200 xent  SSC$STIMR    TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

        9        9
       10       10    1   DCL NEW_STIMR UBIN PARAM;
       11       11                                           /*0=SLAVE, 1=SERV, 2=MONX, 3=IDLE, 4=IOW*/
       12       12    1   DCL SSS$TIME ENTRY;
       13       13    1   DCL S_PNO SBIN SYMREF;
       14       14    1   DCL S_TIMR SBIN SYMREF;
       15       15    1   DCL S_INCTIME SBIN SYMREF;
       16       16    1   DCL S_UXTSCHD UBIN SYMREF;
       17       17    1   DCL S_USTSCHD UBIN SYMREF;
       18       18    1   DCL B$JIT$ PTR SYMREF;
       19       19        %PLIST;
       20       20        %INCLUDE S$JIT_C;
       21      451        %INCLUDE SS_SCHED_R;
       22      494        %INCLUDE SS_SCHED_C;
       23      727        %EJECT;
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:9    
       24      728                                           /*PUT PREV INTERVAL IN RIGHT POT, INIT NEXT*/
       25      729    2           DO INHIBIT;

       26      730    2              CALL COMMON;

    730  0 000002   000136 701200 0                  TSX1  ! COMMON
         0 000003   000000 011200                    NOP   ! 0

       27      731    2              S_TIMR = NEW_STIMR;

    731  0 000004   200003 470700                    LDP0  ! @NEW_STIMR,,AUTO
         0 000005   000000 235300                    LDA   ! 0,,PR0
         0 000006   000000 755200 xsym               STA   ! S_TIMR

       28      732    2              RETURN;

    732  0 000007   000000 702200 xent               TSX2  ! X66_ARET

       29      733    2           END;

    733  0 000010   000013 710000 0                  TRA     s:736

       30      734    1   SSC$SASYNC: ENTRY;

    734  0 000011   000000 700200 xent  SSC$SASYNC   TSX0  ! X66_AUTO_1
         0 000012   000006 000001                    ZERO    6,1

       31      735    2           DO INHIBIT;

       32      736    2              CALL COMMON;

    736  0 000013   000136 701200 0                  TSX1  ! COMMON
         0 000014   000000 011200                    NOP   ! 0

       33      737    2              S_TIMR = 2;                  /*MONITOR EXECUTION*/

    737  0 000015   000002 235207                    LDA   ! 2,DL
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:10   
         0 000016   000000 755200 xsym               STA   ! S_TIMR

       34      738    2              RETURN;

    738  0 000017   000000 702200 xent               TSX2  ! X66_ARET

       35      739    2           END;

    739  0 000020   000023 710000 0                  TRA     s:742

       36      740    1   SSC$MON: ENTRY;

    740  0 000021   000000 700200 xent  SSC$MON      TSX0  ! X66_AUTO_1
         0 000022   000006 000001                    ZERO    6,1

       37      741    2           DO INHIBIT;

       38      742    2              CALL COMMON;

    742  0 000023   000136 701200 0                  TSX1  ! COMMON
         0 000024   000000 011200                    NOP   ! 0

       39      743    2              S_TIMR = 2;                  /*MONITOR EXECUTION*/

    743  0 000025   000002 235207                    LDA   ! 2,DL
         0 000026   000000 755200 xsym               STA   ! S_TIMR

       40      744                                                /*ACCOUNT CPU TIME*/
       41      745    2              S_UXUSEC(S_PNO)=S_UXUSEC(S_PNO)+B$JIT.XTIME-S_UXTSCHD;

    745  0 000027   000000 470600 xsym               LDP0  ! B$JIT$
         0 000030   000000 720200 xsym               LXL0  ! S_PNO
         0 000031   000000 236210 xsym               LDQ   ! S_UXUSEC,X0
         0 000032   000262 036300                    ADLQ  ! 178,,PR0
         0 000033   000000 136200 xsym               SBLQ  ! S_UXTSCHD
         0 000034   000000 756210 xsym               STQ   ! S_UXUSEC,X0

PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:11   
       42      746    2              S_USUSEC(S_PNO)=S_USUSEC(S_PNO)+B$JIT.STIME-S_USTSCHD;

    746  0 000035   000000 236210 xsym               LDQ   ! S_USUSEC,X0
         0 000036   000261 036300                    ADLQ  ! 177,,PR0
         0 000037   000000 136200 xsym               SBLQ  ! S_USTSCHD
         0 000040   000000 756210 xsym               STQ   ! S_USUSEC,X0

       43      747    2              S_UXTSCHD = B$JIT.XTIME;

    747  0 000041   000262 235300                    LDA   ! 178,,PR0
         0 000042   000000 755200 xsym               STA   ! S_UXTSCHD

       44      748    2              S_USTSCHD = B$JIT.STIME;

    748  0 000043   000261 235300                    LDA   ! 177,,PR0
         0 000044   000000 755200 xsym               STA   ! S_USTSCHD

       45      749    2              RETURN;

    749  0 000045   000000 702200 xent               TSX2  ! X66_ARET

       46      750    2           END;

    750  0 000046   000051 710000 0                  TRA     s:753

       47      751    1   SSC$IOW: ENTRY;

    751  0 000047   000000 700200 xent  SSC$IOW      TSX0  ! X66_AUTO_1
         0 000050   000006 000001                    ZERO    6,1

       48      752    2           DO INHIBIT;

       49      753    2              CALL COMMON;

    753  0 000051   000136 701200 0                  TSX1  ! COMMON
         0 000052   000000 011200                    NOP   ! 0

PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:12   
       50      754    2              S_TIMR = 4;                  /*I/O WAIT*/

    754  0 000053   000004 235207                    LDA   ! 4,DL
         0 000054   000000 755200 xsym               STA   ! S_TIMR

       51      755    2              RETURN;

    755  0 000055   000000 702200 xent               TSX2  ! X66_ARET

       52      756    2           END;

    756  0 000056   000061 710000 0                  TRA     s:759

       53      757    1   SSC$RESW: ENTRY;

    757  0 000057   000000 700200 xent  SSC$RESW     TSX0  ! X66_AUTO_1
         0 000060   000006 000001                    ZERO    6,1

       54      758    2           DO INHIBIT;

       55      759    2              CALL COMMON;

    759  0 000061   000136 701200 0                  TSX1  ! COMMON
         0 000062   000000 011200                    NOP   ! 0

       56      760    2              S_TIMR = 5;                  /*RESOURCE WAIT*/

    760  0 000063   000005 235207                    LDA   ! 5,DL
         0 000064   000000 755200 xsym               STA   ! S_TIMR

       57      761    2              RETURN;

    761  0 000065   000000 702200 xent               TSX2  ! X66_ARET

       58      762    2           END;

    762  0 000066   000071 710000 0                  TRA     s:765
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:13   

       59      763    1   SSC$RESIOW: ENTRY;

    763  0 000067   000000 700200 xent  SSC$RESIOW   TSX0  ! X66_AUTO_1
         0 000070   000006 000001                    ZERO    6,1

       60      764    2           DO INHIBIT;

       61      765    2              CALL COMMON;

    765  0 000071   000136 701200 0                  TSX1  ! COMMON
         0 000072   000000 011200                    NOP   ! 0

       62      766    2              S_TIMR = 6;                  /*RESOURCE WAIT WITH I/O WAIT*/

    766  0 000073   000006 235207                    LDA   ! 6,DL
         0 000074   000000 755200 xsym               STA   ! S_TIMR

       63      767    2              RETURN;

    767  0 000075   000000 702200 xent               TSX2  ! X66_ARET

       64      768    2           END;

    768  0 000076   000101 710000 0                  TRA     s:771

       65      769    1   SSC$STOPPED: ENTRY;

    769  0 000077   000000 700200 xent  SSC$STOPPED  TSX0  ! X66_AUTO_1
         0 000100   000006 000001                    ZERO    6,1

       66      770    2           DO INHIBIT;

       67      771    2              CALL COMMON;

    771  0 000101   000136 701200 0                  TSX1  ! COMMON
         0 000102   000000 011200                    NOP   ! 0
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:14   

       68      772    2              S_TIMR = 7;                  /*CPU STOPPED*/

    772  0 000103   000007 235207                    LDA   ! 7,DL
         0 000104   000000 755200 xsym               STA   ! S_TIMR

       69      773    2              RETURN;

    773  0 000105   000000 702200 xent               TSX2  ! X66_ARET

       70      774    2           END;

    774  0 000106   000111 710000 0                  TRA     s:777

       71      775    1   SSC$IDLE: ENTRY;

    775  0 000107   000000 700200 xent  SSC$IDLE     TSX0  ! X66_AUTO_1
         0 000110   000006 000001                    ZERO    6,1

       72      776    2           DO INHIBIT;

       73      777    2              CALL COMMON;

    777  0 000111   000136 701200 0                  TSX1  ! COMMON
         0 000112   000000 011200                    NOP   ! 0

       74      778    2              S_TIMR = 3;                  /*IDLE*/

    778  0 000113   000003 235207                    LDA   ! 3,DL
         0 000114   000000 755200 xsym               STA   ! S_TIMR

       75      779    2              RETURN;

    779  0 000115   000000 702200 xent               TSX2  ! X66_ARET

       76      780    2           END;

PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:15   
    780  0 000116   000121 710000 0                  TRA     s:783

       77      781    1   SSC$SLAVE: ENTRY;

    781  0 000117   000000 700200 xent  SSC$SLAVE    TSX0  ! X66_AUTO_1
         0 000120   000006 000001                    ZERO    6,1

       78      782    2           DO INHIBIT;

       79      783    2              CALL COMMON;

    783  0 000121   000136 701200 0                  TSX1  ! COMMON
         0 000122   000000 011200                    NOP   ! 0

       80      784    2              S_TIMR = 0;                  /*SLAVE*/

    784  0 000123   000000 450200 xsym               STZ   ! S_TIMR

       81      785    2              RETURN;

    785  0 000124   000000 702200 xent               TSX2  ! X66_ARET

       82      786    2           END;

    786  0 000125   000130 710000 0                  TRA     s:789

       83      787    1   SSC$SERV: ENTRY;

    787  0 000126   000000 700200 xent  SSC$SERV     TSX0  ! X66_AUTO_1
         0 000127   000006 000001                    ZERO    6,1

       84      788    2           DO INHIBIT;

       85      789    2              CALL COMMON;

    789  0 000130   000136 701200 0                  TSX1  ! COMMON
         0 000131   000000 011200                    NOP   ! 0
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:16   

       86      790    2              S_TIMR = 1;                  /*SERVICE*/

    790  0 000132   000001 235207                    LDA   ! 1,DL
         0 000133   000000 755200 xsym               STA   ! S_TIMR

       87      791    2              RETURN;

    791  0 000134   000000 702200 xent               TSX2  ! X66_ARET

       88      792    2           END;

    792  0 000135   000222 710000 0                  TRA     s:815

       89      793    1   COMMON: PROC;

    793  0 000136   200004 741300       COMMON       STX1  ! @NEW_STIMR+1,,AUTO

       90      794    3           DO INHIBIT;

       91      795    3              CALL SSS$TIME;

    795  0 000137   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         0 000140   000000 701200 xent               TSX1  ! SSS$TIME
         0 000141   000000 011200                    NOP   ! 0

       92      796    4              DO CASE(S_TIMR);

    796  0 000142   000000 235200 xsym               LDA   ! S_TIMR
         0 000143   000007 115207                    CMPA  ! 7,DL
         0 000144   000146 602205 0                  TNC   ! s:796+4,AL
         0 000145   000217 710200 0                  TRA   ! s:812
         0 000146   000155 710200 0                  TRA   ! s:798
         0 000147   000162 710200 0                  TRA   ! s:800
         0 000150   000167 710200 0                  TRA   ! s:802
         0 000151   000174 710200 0                  TRA   ! s:804
         0 000152   000201 710200 0                  TRA   ! s:806
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:17   
         0 000153   000206 710200 0                  TRA   ! s:808
         0 000154   000213 710200 0                  TRA   ! s:810

       93      797    4               CASE(0);

       94      798    4                 B$JIT.XTIME=B$JIT.XTIME+S_INCTIME;

    798  0 000155   000000 470600 xsym               LDP0  ! B$JIT$
         0 000156   000262 236300                    LDQ   ! 178,,PR0
         0 000157   000000 036200 xsym               ADLQ  ! S_INCTIME
         0 000160   000262 756300                    STQ   ! 178,,PR0
         0 000161   000217 710200 0                  TRA   ! s:812

       95      799    4               CASE(1);

       96      800    4                 B$JIT.STIME=B$JIT.STIME+S_INCTIME;

    800  0 000162   000000 470600 xsym               LDP0  ! B$JIT$
         0 000163   000261 236300                    LDQ   ! 177,,PR0
         0 000164   000000 036200 xsym               ADLQ  ! S_INCTIME
         0 000165   000261 756300                    STQ   ! 177,,PR0
         0 000166   000217 710200 0                  TRA   ! s:812

       97      801    4               CASE(2);

       98      802    4                 S_MXUSEC(S_PNO)=S_MXUSEC(S_PNO)+S_INCTIME;

    802  0 000167   000000 720200 xsym               LXL0  ! S_PNO
         0 000170   000000 236210 xsym               LDQ   ! S_MXUSEC,X0
         0 000171   000000 036200 xsym               ADLQ  ! S_INCTIME
         0 000172   000000 756210 xsym               STQ   ! S_MXUSEC,X0
         0 000173   000217 710200 0                  TRA   ! s:812

       99      803    4               CASE(3);

      100      804    4                 S_MIDUSEC(S_PNO)=S_MIDUSEC(S_PNO)+S_INCTIME;

PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:18   
    804  0 000174   000000 720200 xsym               LXL0  ! S_PNO
         0 000175   000000 236210 xsym               LDQ   ! S_MIDUSEC,X0
         0 000176   000000 036200 xsym               ADLQ  ! S_INCTIME
         0 000177   000000 756210 xsym               STQ   ! S_MIDUSEC,X0
         0 000200   000217 710200 0                  TRA   ! s:812

      101      805    4               CASE(4);

      102      806    4                 S_MIIUSEC(S_PNO)=S_MIIUSEC(S_PNO)+S_INCTIME;

    806  0 000201   000000 720200 xsym               LXL0  ! S_PNO
         0 000202   000000 236210 xsym               LDQ   ! S_MIIUSEC,X0
         0 000203   000000 036200 xsym               ADLQ  ! S_INCTIME
         0 000204   000000 756210 xsym               STQ   ! S_MIIUSEC,X0
         0 000205   000217 710200 0                  TRA   ! s:812

      103      807    4               CASE(5);

      104      808    4                 S_MIRUSEC(S_PNO)=S_MIRUSEC(S_PNO)+S_INCTIME;

    808  0 000206   000000 720200 xsym               LXL0  ! S_PNO
         0 000207   000000 236210 xsym               LDQ   ! S_MIRUSEC,X0
         0 000210   000000 036200 xsym               ADLQ  ! S_INCTIME
         0 000211   000000 756210 xsym               STQ   ! S_MIRUSEC,X0
         0 000212   000217 710200 0                  TRA   ! s:812

      105      809    4               CASE(6);

      106      810    4                 S_MIIRUSEC(S_PNO)=S_MIIRUSEC(S_PNO)+S_INCTIME;

    810  0 000213   000000 720200 xsym               LXL0  ! S_PNO
         0 000214   000000 236210 xsym               LDQ   ! S_MIIRUSEC,X0
         0 000215   000000 036200 xsym               ADLQ  ! S_INCTIME
         0 000216   000000 756210 xsym               STQ   ! S_MIIRUSEC,X0

      107      811    4              END;

PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:19   
      108      812    3              RETURN;

    812  0 000217   200004 221300                    LDX1  ! @NEW_STIMR+1,,AUTO
         0 000220   000001 702211                    TSX2  ! 1,X1

      109      813    3           END;                            /* END INHIBIT                        */

      110      814    2   END COMMON;

    814  0 000221   000001 702211                    TSX2  ! 1,X1

      111      815    1   END SSC$STIMR;

    815  0 000222   000000 702200 xent               TSX2  ! X66_ARET
      112      816        %EOD;

PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:20   
--  Include file information  --

   SS_SCHED_C.:E05TOU  is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   S$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSC$STIMR.
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:21   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @NEW_STIMR                *0-0-0/w UBIN        r     1 NEW_STIMR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w SBIN        r     1 S_INCTIME
     0-0-0/w SBIN        r     1 S_MIDUSEC(0:7)
     0-0-0/w SBIN        r     1 S_MIIRUSEC(0:7)
     0-0-0/w SBIN        r     1 S_MIIUSEC(0:7)
     0-0-0/w SBIN        r     1 S_MIRUSEC(0:7)
     0-0-0/w SBIN        r     1 S_MXUSEC(0:7)
     0-0-0/w SBIN        r     1 S_PNO                      0-0-0/w SBIN        r     1 S_TIMR
     0-0-0/w UBIN        r     1 S_USTSCHD
     0-0-0/w SBIN        r     1 S_USUSEC(0:7)
     0-0-0/w UBIN        r     1 S_UXTSCHD
     0-0-0/w SBIN        r     1 S_UXUSEC(0:7)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT


   Procedure SSC$STIMR requires 147 words for executable code.
   Procedure SSC$STIMR requires 6 words of local(AUTO) storage.
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:22   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:23   
          MINI XREF LISTING

B$JIT.ERR.MID
       348**DCL       348--REDEF
B$JIT.PNR
       442**DCL       442--REDEF
B$JIT.STIME
       440**DCL       746>>ASSIGN    748>>ASSIGN    800<<ASSIGN    800>>ASSIGN
B$JIT.XTIME
       440**DCL       745>>ASSIGN    747>>ASSIGN    798<<ASSIGN    798>>ASSIGN
B$JIT$
        18**DCL       342--IMP-PTR   745>>ASSIGN    746>>ASSIGN    747>>ASSIGN    748>>ASSIGN    798>>ASSIGN
       798>>ASSIGN    800>>ASSIGN    800>>ASSIGN
COMMON
       793**PROC      730--CALL      736--CALL      742--CALL      753--CALL      759--CALL      765--CALL
       771--CALL      777--CALL      783--CALL      789--CALL
NEW_STIMR
        10**DCL         8--PROC      731>>ASSIGN
SSS$TIME
        12**DCL-ENT   795--CALL
S_INCTIME
        15**DCL       798>>ASSIGN    800>>ASSIGN    802>>ASSIGN    804>>ASSIGN    806>>ASSIGN    808>>ASSIGN
       810>>ASSIGN
S_MIDUSEC
       485**DCL       804<<ASSIGN    804>>ASSIGN
S_MIIRUSEC
       486**DCL       810<<ASSIGN    810>>ASSIGN
S_MIIUSEC
       485**DCL       806<<ASSIGN    806>>ASSIGN
S_MIRUSEC
       486**DCL       808<<ASSIGN    808>>ASSIGN
S_MXUSEC
       485**DCL       802<<ASSIGN    802>>ASSIGN
S_PNO
PL6.E3A0      #001=SSC$STIMR File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:56 Page:24   
        13**DCL       745>>ASSIGN    745>>ASSIGN    746>>ASSIGN    746>>ASSIGN    802>>ASSIGN    802>>ASSIGN
       804>>ASSIGN    804>>ASSIGN    806>>ASSIGN    806>>ASSIGN    808>>ASSIGN    808>>ASSIGN    810>>ASSIGN
       810>>ASSIGN
S_TIMR
        14**DCL       731<<ASSIGN    737<<ASSIGN    743<<ASSIGN    754<<ASSIGN    760<<ASSIGN    766<<ASSIGN
       772<<ASSIGN    778<<ASSIGN    784<<ASSIGN    790<<ASSIGN    796>>DOCASE
S_USTSCHD
        17**DCL       746>>ASSIGN    748<<ASSIGN
S_USUSEC
       486**DCL       746<<ASSIGN    746>>ASSIGN
S_UXTSCHD
        16**DCL       745>>ASSIGN    747<<ASSIGN
S_UXUSEC
       486**DCL       745<<ASSIGN    745>>ASSIGN

PL6.E3A0      #002=SSC$ACPENT File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:25   
      113        1        /*T***********************************************************/
      114        2        /*T*                                                         */
      115        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      116        4        /*T*                                                         */
      117        5        /*T***********************************************************/
      118        6        SSC$ACPENT: PROC;
      119        7    1   DCL   SSS$LTRD ENTRY(1);
      120        8    1   DCL   B$SDS1$ PTR SYMREF;               /* SPEC DSCR STORAGE POINTER          */
      121        9        /*                                                                    */
      122       10        %PLIST;
      123       11        %INCLUDE B_UHJMAC_C;
      124      340        %B_USDS (FPTN=B$SDS,STCLASS=BASED);
      125      392        /*                                                                    */
      126      393    1           CALL SSS$LTRD(B$SDS1$->B$SDS.ACPENT); /* GO TO IT                     */
      127      394    1           RETURN;                         /* SHOULD NEVER GET BACK HERE         */
      128      395    1   END;
      129      396        %EOD;

PL6.E3A0      #002=SSC$ACPENT File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:26   
--  Include file information  --

   B_UHJMAC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure SSC$ACPENT.

   Procedure SSC$ACPENT requires 10 words for executable code.
   Procedure SSC$ACPENT requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=SSC$ACPENT File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:27   

 Object Unit name= SSC$ACPENT                                 File name= SSC$SCHD.:E05TOU
 UTS= JUL 30 '97 05:56:45.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    10     12  SSC$ACPENT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  SSC$ACPENT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 SSS$LTRD
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$SDS1$                               B_VECTNIL
PL6.E3A0      #002=SSC$ACPENT File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:28   


      113        1        /*T***********************************************************/
      114        2        /*T*                                                         */
      115        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      116        4        /*T*                                                         */
      117        5        /*T***********************************************************/
      118        6        SSC$ACPENT: PROC;

      6  0 000000   000000 700200 xent  SSC$ACPENT   TSX0  ! X66_AUTO_0
         0 000001   000006 000000                    ZERO    6,0

      119        7    1   DCL   SSS$LTRD ENTRY(1);
      120        8    1   DCL   B$SDS1$ PTR SYMREF;               /* SPEC DSCR STORAGE POINTER          */
      121        9        /*                                                                    */
      122       10        %PLIST;
      123       11        %INCLUDE B_UHJMAC_C;
      124      340        %B_USDS (FPTN=B$SDS,STCLASS=BASED);
      125      392        /*                                                                    */
      126      393    1           CALL SSS$LTRD(B$SDS1$->B$SDS.ACPENT); /* GO TO IT                     */

    393  0 000002   000000 236000 xsym               LDQ     B$SDS1$
         0 000003   000006 036003                    ADLQ    6,DU
         0 000004   200004 756100                    STQ     4,,AUTO
         0 000005   200004 630500                    EPPR0   4,,AUTO
         0 000006   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000007   000000 701000 xent               TSX1    SSS$LTRD
         0 000010   000000 011000                    NOP     0

      127      394    1           RETURN;                         /* SHOULD NEVER GET BACK HERE         */

    394  0 000011   000000 702200 xent               TSX2  ! X66_ARET
      128      395    1   END;
      129      396        %EOD;

PL6.E3A0      #002=SSC$ACPENT File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:29   
--  Include file information  --

   B_UHJMAC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure SSC$ACPENT.
PL6.E3A0      #002=SSC$ACPENT File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:30   

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$SDS1$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(576)   r     1 B$SDS


   Procedure SSC$ACPENT requires 10 words for executable code.
   Procedure SSC$ACPENT requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=SSC$ACPENT File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:31   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=SSC$ACPENT File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:32   
          MINI XREF LISTING

B$SDS.ACPENT
       382**DCL       393<>CALL
B$SDS1$
         8**DCL       393>>CALL
SSS$LTRD
         7**DCL-ENT   393--CALL

PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:33   
      130        1        /*T***********************************************************/
      131        2        /*T*                                                         */
      132        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      133        4        /*T*                                                         */
      134        5        /*T***********************************************************/
      135        6        SSC$MONTIMR: PROC(INTERVAL,PROCENTRY,ARG);
      136        7        /*                                                                    */
      137        8        %INCLUDE SS_SCHED_C;
      138      241        %INCLUDE SS_SCHED_R;
      139      284        %INCLUDE B$USER;
      140      500        %B$USERREFS;
      141      504        %INCLUDE HF_LOCK_C;
      142      518        %INCLUDE XUD_UTS_M;
      143      600        %XUD$UTS_ENTRIES;
      144      632        %XUD_UTS_EQU;
      145      643        %EQU CSEC_TO_MICRO# = 10000;
      146      644    1   DCL   INTERVAL UBIN(36);                /* SLEEP TIME IN 10 MSEC UNITS        */
      147      645    1   DCL   PROCENTRY EPTR;                   /* WAKEUP PROCEDURE ENTRY             */
      148      646    1   DCL   ARG UBIN(36);                     /* WAKEUP PROC ARGUMENT               */
      149      647        /*                                                                    */
      150      648    1   DCL SSC_TMPROC(0:49) STATIC SYMDEF EPTR; /* WAKEUP PROC ENTRY TABLE           */
      151      649    1   DCL SSC_TMARG(0:49) STATIC SYMDEF UBIN; /* WAKEUP ARG                         */
      152      650    1   DCL   SSC_TMWU(0:49) STATIC SYMDEF UBIN INIT(BITBIN('777777777777'O),0*0);
      153      651    1   DCL   SSC_TMLNK(0:49) SBIN STATIC SYMDEF INIT(-1,2,3,4,5,6,7,8,9,10,
      154      652    1              11,12,13,14,15,16,17,18,19,20,
      155      653    1              21,22,23,24,25,26,27,28,29,30,
      156      654    1              31,32,33,34,35,36,37,38,39,40,
      157      655    1              41,42,43,44,45,46,47,48,49,-1);
      158      656    1   DCL SSC_TMHD SBIN STATIC SYMDEF INIT(0);
      159      657    1   DCL SSC_TMFREE SBIN STATIC SYMDEF INIT(1);
      160      658        /*                                                                    */
      161      659    1   DCL I SBIN;
      162      660    1   DCL   RTIME UBIN(36);
      163      661    1   DCL J SBIN;
      164      662    1   DCL K UBIN;
      165      663    1   DCL KS REDEF K SBIN;
      166      664    1   DCL KEPTR REDEF K EPTR;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:34   
      167      665    1   DCL   USR UBIN(9);
      168      666    1   DCL   S_PNO SBIN SYMREF;
      169      667    1   DCL   S_ACCTIME UBIN SYMREF;            /* TIME AT WHICH TO DO ACCOUNTING*/
      170      668    1   DCL 1 DATE STATIC,
      171      669    1         2 KIN# UBIN(18) UNAL INIT(4),
      172      670    1         2 CADDR UBIN(18) UNAL INIT(0),
      173      671    1         2 SYSID UBIN(18) UNAL INIT(0),
      174      672    1         2 MODE UBIN(18) UNAL INIT(0),
      175      673    1         2 WSN CHAR(8)  INIT('01/01/78');
      176      674    1   DCL   OCA$KMISC ENTRY(1) ALTRET;
      177      675    1   DCL   HFB$FLTREG ENTRY;
      178      676    1   DCL SSS$WUTIME ENTRY(1);
      179      677    1   DCL   SSS$CURTIME ENTRY(1);             /* GET CURRENT TIME IN 1/100 SECS     */
      180      678    1   DCL   SSS$CACHE ENTRY;
      181      679    1   DCL   SSS$CACHEBP ENTRY;
      182      680    1   DCL   SSS$LDT ENTRY(1);                 /* SET TIMER REGISTER                 */
      183      681    1   DCL   SSR$RUE ENTRY(4);
      184      682    1   DCL   SSW$CPUHUNG ENTRY(1);
      185      683    1   DCL   SC_MONTIMR ENTRY CONV(2,0);
      186      684        %EJECT;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:35   
      187      685        /*                SET MONITOR TIMER                                   */
      188      686        /*                                                                    */
      189      687                %LOCK (G#=S_TMRGATE);
      190      690    1           RTIME=INTERVAL;
      191      691    1           CALL SSS$WUTIME(RTIME);         /*DESIRED WAKEUP TIME*/
      192      692    1           CALL SSS$CACHEBP;
      193      693    1           K=SSC_TMFREE;
      194      694    1           IF KS >= 0 THEN
      195      695    1              SSC_TMFREE=SSC_TMLNK(K);
      196      696    1           ELSE
      197      697    1              CALL SC_MONTIMR;
      198      698        /*S*    SCREECH_CODE: SSC-S$MONTIMR
      199      699                TYPE: SCREECH
      200      700                MESSAGE: Monitor timer table overflow                         */
      201      701    1           J=-1;
      202      702    1           SSC_TMPROC(K)=PROCENTRY;
      203      703    1           SSC_TMARG(K)=ARG;
      204      704    1           SSC_TMWU(K)=RTIME;
      205      705    1           I=SSC_TMHD;
      206      706    2           DO WHILE (I>=0);
      207      707    2              IF RTIME<=SSC_TMWU(I)
      208      708    3              THEN DO;
      209      709    3   MONT1:           SSC_TMLNK(K)=I;
      210      710    3                    IF J<0 THEN
      211      711    3                       SSC_TMHD=K;
      212      712    3                    ELSE
      213      713    3                       SSC_TMLNK(J)=K;
      214      714                         %UNLOCK (G#=S_TMRGATE);
      215      717    3                    CALL SSS$CACHE;
      216      718    3                    RETURN;
      217      719    3                 END;
      218      720    2              J=I;
      219      721    2              I=SSC_TMLNK(I);
      220      722    2           END;
      221      723    1           GOTO MONT1;
      222      724        %EJECT;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:36   
      223      725        /*    SERVICE WAKEUP REQUESTS FROM MONITOR ROUTINES AND               */
      224      726        /*    WAKE UP SLEEPING USERS WHEN THEIR TIME EXPIRES                  */
      225      727    1   SSC$MONTIMRWU: ENTRY;
      226      728    1           CALL SSS$CURTIME(RTIME);        /* GET CURRENT TIME AS UTS            */
      227      729    1           IF S_ACCTIME < RTIME THEN       /* DO RESPONSE TIME EVERY MINUTE      */
      228      730    2              DO;
      229      731        /*                ACCOUNT MONITOR EXECUTION AND IDLE TIMES            */
      230      732    2                 S_UXEQTIME(S_PNO)=S_UXEQTIME(S_PNO)+S_UXUSEC(S_PNO)/10000;
      231      733    2                 S_UXUSEC(S_PNO)=MOD(S_UXUSEC(S_PNO),10000);
      232      734    2                 S_USRVTIME(S_PNO)=S_USRVTIME(S_PNO)+S_USUSEC(S_PNO)/10000;
      233      735    2                 S_USUSEC(S_PNO)=MOD(S_USUSEC(S_PNO),10000);
      234      736    3                 DO INHIBIT;
      235      737    3                    S_MXEQTIME(S_PNO)=S_MXEQTIME(S_PNO)+S_MXUSEC(S_PNO)/10000;
      236      738    3                    S_MXUSEC(S_PNO)=MOD(S_MXUSEC(S_PNO),10000);
      237      739    3                 END;
      238      740    2                 S_MIDLTIME(S_PNO)=S_MIDLTIME(S_PNO)+S_MIDUSEC(S_PNO)/10000;
      239      741    2                 S_MIDUSEC(S_PNO)=MOD(S_MIDUSEC(S_PNO),10000);
      240      742    2                 S_MIDLWIO(S_PNO)=S_MIDLWIO(S_PNO)+S_MIIUSEC(S_PNO)/10000;
      241      743    2                 S_MIIUSEC(S_PNO)=MOD(S_MIIUSEC(S_PNO),10000);
      242      744    2                 S_MIDLWRES(S_PNO)=S_MIDLWRES(S_PNO)+S_MIRUSEC(S_PNO)/10000;
      243      745    2                 S_MIRUSEC(S_PNO)=MOD(S_MIRUSEC(S_PNO),10000);
      244      746    2                 S_MIDLWRESIO(S_PNO)=S_MIDLWRESIO(S_PNO)+S_MIIRUSEC(S_PNO)/10000;
      245      747    2                 S_MIIRUSEC(S_PNO)=MOD(S_MIIRUSEC(S_PNO),10000);
      246      748    2                 CALL XUD$UTS_ADJ_25TH (S_ACCTIME, RTIME, %UTS_25TH_MIN#);
      247      749    2                 IF S_PNO = 0 AND RTIME > BITBIN('777773220400'O) THEN
      248      750    2                    CALL OCA$KMISC(DATE);
      249      751    2                 CALL HFB$FLTREG;
      250      752    2                 IF S_PNO = 0
      251      753    3                 THEN DO;
      252      754    3                       CALL SSS$CACHEBP;   /* CHECK FOR HUNG SLAVE IF ON MASTER  */
      253      755    4                       DO I = 1 TO S_NSCPU;
      254      756    4                          IF S_MPSTATE(I) = %SS_PAUSE# OR S_MPSTATE(I) =  %SS_RUN#
      255      757    5                          THEN DO;
      256      758    5                                J = S_MXEQTIME(I) * 10000 + S_MXUSEC(I);
      257      759    5                                IF S_PMUSECTIME(I) > 0
      258      760    6                                THEN DO;
      259      761    6                                      IF J = S_PMUSECTIME(I)
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:37   
      260      762    7                                      THEN DO;
      261      763    7                                            IF MOD(S_MIN_HUNG(I),5) = 0
      262      764    7                                            THEN CALL SSW$CPUHUNG(I);
      263      765    7                                            S_MIN_HUNG(I) = S_MIN_HUNG(I) + 1;
      264      766    7                                         END;
      265      767    6                                      ELSE S_MIN_HUNG(I) = 0;
      266      768    6                                   END;
      267      769    5                                S_PMUSECTIME(I) = J;
      268      770    5                             END;
      269      771    5                          ELSE DO;
      270      772    5                                S_PMUSECTIME(I) = 0;
      271      773    5                                S_MIN_HUNG(I) = 0;
      272      774    5                             END;
      273      775    4                       END;
      274      776    3                       CALL SSS$CACHE;
      275      777    3                    END;                   /* IF S_PNO = 0 THEN DO               */
      276      778    2              END;
      277      779    1           IF S_PNO ~= 0 THEN RETURN;      /* ACCOUNTING ONLY ON SLAVES*/
      278      780    2           DO WHILE (SSC_TMWU(SSC_TMHD)<=RTIME);
      279      781                   %LOCK (G#=S_TMRGATE);
      280      784    2              CALL SSS$CACHEBP;
      281      785    2              I=SSC_TMHD;
      282      786    2              KEPTR=SSC_TMPROC(I);
      283      787    2              SSC_TMHD=SSC_TMLNK(I);
      284      788    2              CALL SSS$CACHE;
      285      789                   %UNLOCK (G#=S_TMRGATE);
      286      792    2              CALL KEPTR(SSC_TMARG(I));
      287      793                   %LOCK (G#=S_TMRGATE);
      288      796    2              CALL SSS$CACHEBP;
      289      797    2              SSC_TMLNK(I)=SSC_TMFREE;
      290      798    2              SSC_TMFREE=I;
      291      799    2              CALL SSS$CACHE;
      292      800                   %UNLOCK (G#=S_TMRGATE);
      293      803    2           END;
      294      804    1   TMX1:   ;
      295      805                /* CACHE HAS BEEN CLEARED BEFORE WE GOT HERE
      296      806        */
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:38   
      297      807    1           I=S_HQ(%SS_SW);
      298      808    1           IF I ~= 0 AND B$USRT$->B$USER.MISC(I) <= RTIME THEN
      299      809    2              DO;
      300      810    2                 USR=I;
      301      811    2                 CALL SSR$RUE(%SS_WU,USR); /* HIS TIME HAS COME                  */
      302      812    2                 GOTO TMX1;                /* GET THE NEXT USER IN SLEEP QUEUE*/
      303      813    2              END;
      304      814    1   TMX2:   ;
      305      815    1           I=S_HQ(%SS_SQR);                /* LOOK FOR ENQUEUE USERS TO WAKE UP  */
      306      816    1           IF I ~= 0 AND B$USRT$->B$USER.MISC(I) <= RTIME THEN
      307      817    2              DO;
      308      818    2                 USR=I;
      309      819    2                 CALL SSR$RUE(%SS_NQR,USR);
      310      820    2                 GOTO TMX2;
      311      821    2              END;
      312      822    1           RETURN;
      313      823        %EJECT;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:39   
      314      824        /*         SET TIMER REGISTER TO LEAST POSSIBLE INTERVAL              */
      315      825    1   SSC$QTIMR: ENTRY(INTERVAL);
      316      826        /*                                                                    */
      317      827    1           I=INTERVAL;                     /* NEXT QUANTUN TIME (USECS)          */
      318      828    1           IF S_PNO = 0 THEN
      319      829    2              DO;
      320      830    2                 CALL SSS$CURTIME(RTIME);  /* GET CURRENT TIME IN 1/100 SEC      */
      321      831    2                 K=SSC_TMWU(SSC_TMHD);
      322      832    2                 CALL MINTIM;
      323      833    2                 CALL SSS$CACHEBP;
      324      834    2                 J=S_HQ(%SS_SW);      /* FIND MIN(INTERVAL,WAIT USER WU TIME)*/
      325      835    2                 CALL SSS$CACHE;
      326      836    2                 IF J ~= 0 THEN
      327      837    3                    DO;
      328      838    3                       K=B$USRT$->B$USER.MISC(J);
      329      839    3                       CALL MINTIM;
      330      840    3                    END;
      331      841    2                 CALL SSS$CACHEBP;
      332      842    2                 J=S_HQ(%SS_SQR);          /* FIND MIN(INTERVAL,ENQ USER WU TIME)*/
      333      843    2                 CALL SSS$CACHE;
      334      844    2                 IF J ~= 0 THEN
      335      845    3                    DO;
      336      846    3                       K=B$USRT$->B$USER.MISC(J);
      337      847    3                       CALL MINTIM;
      338      848    3                    END;
      339      849    2              END;
      340      850    1           CALL SSS$LDT(I);                /* SET TIMER REGISTER TO I USECS      */
      341      851    1           RETURN;
      342      852    1   MINTIM: PROC;
      343      853    2           IF K<=RTIME
      344      854    2           THEN I=1000;
      345      855    3           ELSE DO;
      346      856    4                 CALL XUD$UTS_DIFF (K, K, RTIME) WHENALTRETURN DO;
      347      857    4                       RETURN;
      348      858    4                    END;
      349      859    3                 K = K * %CSEC_TO_MICRO#;
      350      860    3                 IF KS<I THEN I=KS;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:40   
      351      861    3              END;
      352      862    2           RETURN;
      353      863    2   END MINTIM;
      354      864    1   END;
      355      865        %EOD;

PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:41   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
      No diagnostics issued in procedure SSC$MONTIMR.

   Procedure SSC$MONTIMR requires 388 words for executable code.
   Procedure SSC$MONTIMR requires 18 words of local(AUTO) storage.

PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:42   

 Object Unit name= SSC$MONTIMR                                File name= SSC$SCHD.:E05TOU
 UTS= JUL 30 '97 05:56:47.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   206    316  SSC$MONTIMR
    1  RoData even  UTS      1      1  SSC$MONTIMR
    2   Proc  even  none   388    604  SSC$MONTIMR
    3  RoData even  none     9     11  SSC$MONTIMR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        3  SSC$MONTIMR
     2    105                  yes      Std        0  SSC$MONTIMRWU
     2    456                  yes      Std        1  SSC$QTIMR

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  SSC_TMPROC                         0     62  SSC_TMARG
    0    144  SSC_TMWU                           0    226  SSC_TMLNK
    0    310  SSC_TMHD                           0    311  SSC_TMFREE
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:43   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       1 SSS$WUTIME
         yes           Std       0 SSS$CACHEBP
         yes           Std       1 HFC$UNLOCK
         yes           Std       1 SSW$CPUHUNG
         yes           Std       0 SSS$CACHE
 yes     yes           Std       3 XUD$UTS_ADJ_25TH
         yes           Std       0 HFB$FLTREG
         yes           Std       1 SSS$LDT
         yes           Std       1 SSS$CURTIME
 yes     yes           Std       1 OCA$KMISC
         yes           Std       4 SSR$RUE
 yes     yes           Std       3 XUD$UTS_DIFF
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_MONTIMR                            S_HQ                                  S_MPSTATE
     S_NSCPU                               S_UXEQTIME                            S_USRVTIME
     S_MXUSEC                              S_MIDUSEC                             S_MIIUSEC
     S_MIRUSEC                             S_MIIRUSEC                            S_UXUSEC
     S_USUSEC                              S_MXEQTIME                            S_MIDLTIME
     S_MIDLWIO                             S_MIDLWRES                            S_MIDLWRESIO
     S_PMUSECTIME                          S_MIN_HUNG                            S_TMRGATE
     B$USRT$                               S_PNO                                 S_ACCTIME
     B_VECTNIL
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:44   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:45   


      130        1        /*T***********************************************************/
      131        2        /*T*                                                         */
      132        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      133        4        /*T*                                                         */
      134        5        /*T***********************************************************/
      135        6        SSC$MONTIMR: PROC(INTERVAL,PROCENTRY,ARG);

      6  2 000000   000000 700200 xent  SSC$MONTIMR  TSX0  ! X66_AUTO_3
         2 000001   000022 000003                    ZERO    18,3

      136        7        /*                                                                    */
      137        8        %INCLUDE SS_SCHED_C;
      138      241        %INCLUDE SS_SCHED_R;
      139      284        %INCLUDE B$USER;
      140      500        %B$USERREFS;
      141      504        %INCLUDE HF_LOCK_C;
      142      518        %INCLUDE XUD_UTS_M;
      143      600        %XUD$UTS_ENTRIES;
      144      632        %XUD_UTS_EQU;
      145      643        %EQU CSEC_TO_MICRO# = 10000;
      146      644    1   DCL   INTERVAL UBIN(36);                /* SLEEP TIME IN 10 MSEC UNITS        */
      147      645    1   DCL   PROCENTRY EPTR;                   /* WAKEUP PROCEDURE ENTRY             */
      148      646    1   DCL   ARG UBIN(36);                     /* WAKEUP PROC ARGUMENT               */
      149      647        /*                                                                    */
      150      648    1   DCL SSC_TMPROC(0:49) STATIC SYMDEF EPTR; /* WAKEUP PROC ENTRY TABLE           */
      151      649    1   DCL SSC_TMARG(0:49) STATIC SYMDEF UBIN; /* WAKEUP ARG                         */
      152      650    1   DCL   SSC_TMWU(0:49) STATIC SYMDEF UBIN INIT(BITBIN('777777777777'O),0*0);
      153      651    1   DCL   SSC_TMLNK(0:49) SBIN STATIC SYMDEF INIT(-1,2,3,4,5,6,7,8,9,10,
      154      652    1              11,12,13,14,15,16,17,18,19,20,
      155      653    1              21,22,23,24,25,26,27,28,29,30,
      156      654    1              31,32,33,34,35,36,37,38,39,40,
      157      655    1              41,42,43,44,45,46,47,48,49,-1);
      158      656    1   DCL SSC_TMHD SBIN STATIC SYMDEF INIT(0);
      159      657    1   DCL SSC_TMFREE SBIN STATIC SYMDEF INIT(1);
      160      658        /*                                                                    */
      161      659    1   DCL I SBIN;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:46   
      162      660    1   DCL   RTIME UBIN(36);
      163      661    1   DCL J SBIN;
      164      662    1   DCL K UBIN;
      165      663    1   DCL KS REDEF K SBIN;
      166      664    1   DCL KEPTR REDEF K EPTR;
      167      665    1   DCL   USR UBIN(9);
      168      666    1   DCL   S_PNO SBIN SYMREF;
      169      667    1   DCL   S_ACCTIME UBIN SYMREF;            /* TIME AT WHICH TO DO ACCOUNTING*/
      170      668    1   DCL 1 DATE STATIC,
      171      669    1         2 KIN# UBIN(18) UNAL INIT(4),
      172      670    1         2 CADDR UBIN(18) UNAL INIT(0),
      173      671    1         2 SYSID UBIN(18) UNAL INIT(0),
      174      672    1         2 MODE UBIN(18) UNAL INIT(0),
      175      673    1         2 WSN CHAR(8)  INIT('01/01/78');
      176      674    1   DCL   OCA$KMISC ENTRY(1) ALTRET;
      177      675    1   DCL   HFB$FLTREG ENTRY;
      178      676    1   DCL SSS$WUTIME ENTRY(1);
      179      677    1   DCL   SSS$CURTIME ENTRY(1);             /* GET CURRENT TIME IN 1/100 SECS     */
      180      678    1   DCL   SSS$CACHE ENTRY;
      181      679    1   DCL   SSS$CACHEBP ENTRY;
      182      680    1   DCL   SSS$LDT ENTRY(1);                 /* SET TIMER REGISTER                 */
      183      681    1   DCL   SSR$RUE ENTRY(4);
      184      682    1   DCL   SSW$CPUHUNG ENTRY(1);
      185      683    1   DCL   SC_MONTIMR ENTRY CONV(2,0);
      186      684        %EJECT;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:47   
      187      685        /*                SET MONITOR TIMER                                   */
      188      686        /*                                                                    */
      189      687                %LOCK (G#=S_TMRGATE);

    688  2 000002   000000 630400 3                  EPPR0   0
         2 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000004   000000 701000 xent               TSX1    HFC$LOCK
         2 000005   000000 011000                    NOP     0

      190      690    1           RTIME=INTERVAL;

    690  2 000006   200003 470500                    LDP0    @INTERVAL,,AUTO
         2 000007   000000 235100                    LDA     0,,PR0
         2 000010   200007 755100                    STA     RTIME,,AUTO

      191      691    1           CALL SSS$WUTIME(RTIME);         /*DESIRED WAKEUP TIME*/

    691  2 000011   200007 631500                    EPPR1   RTIME,,AUTO
         2 000012   200016 451500                    STP1    USR+4,,AUTO
         2 000013   200016 630500                    EPPR0   USR+4,,AUTO
         2 000014   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000015   000000 701000 xent               TSX1    SSS$WUTIME
         2 000016   000000 011000                    NOP     0

      192      692    1           CALL SSS$CACHEBP;

    692  2 000017   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000020   000000 701000 xent               TSX1    SSS$CACHEBP
         2 000021   000000 011000                    NOP     0

      193      693    1           K=SSC_TMFREE;

    693  2 000022   000311 235000 0                  LDA     SSC_TMFREE
         2 000023   200011 755100                    STA     K,,AUTO

      194      694    1           IF KS >= 0 THEN

PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:48   
    694  2 000024   200011 236100                    LDQ     K,,AUTO
         2 000025   000031 604000 2                  TMI     s:697

      195      695    1              SSC_TMFREE=SSC_TMLNK(K);

    695  2 000026   000226 235005 0                  LDA     SSC_TMLNK,AL
         2 000027   000311 755000 0                  STA     SSC_TMFREE
         2 000030   000033 710000 2                  TRA     s:701

      196      696    1           ELSE
      197      697    1              CALL SC_MONTIMR;

    697  2 000031   000000 713400 xsym               CLIMB   SC_MONTIMR
         2 000032   000000 600000 xsid               climb   nvectors=         0

      198      698        /*S*    SCREECH_CODE: SSC-S$MONTIMR
      199      699                TYPE: SCREECH
      200      700                MESSAGE: Monitor timer table overflow                         */
      201      701    1           J=-1;

    701  2 000033   000001 335007                    LCA     1,DL
         2 000034   200010 755100                    STA     J,,AUTO

      202      702    1           SSC_TMPROC(K)=PROCENTRY;

    702  2 000035   200004 470500                    LDP0    @PROCENTRY,,AUTO
         2 000036   000000 236100                    LDQ     0,,PR0
         2 000037   200011 720100                    LXL0    K,,AUTO
         2 000040   000000 756010 0                  STQ     SSC_TMPROC,X0

      203      703    1           SSC_TMARG(K)=ARG;

    703  2 000041   200005 471500                    LDP1    @ARG,,AUTO
         2 000042   100000 235100                    LDA     0,,PR1
         2 000043   000062 755010 0                  STA     SSC_TMARG,X0

      204      704    1           SSC_TMWU(K)=RTIME;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:49   

    704  2 000044   200007 236100                    LDQ     RTIME,,AUTO
         2 000045   000144 756010 0                  STQ     SSC_TMWU,X0

      205      705    1           I=SSC_TMHD;

    705  2 000046   000310 235000 0                  LDA     SSC_TMHD
         2 000047   200006 755100                    STA     I,,AUTO

      206      706    2           DO WHILE (I>=0);

    706  2 000050   000104 604000 2                  TMI     s:723

      207      707    2              IF RTIME<=SSC_TMWU(I)

    707  2 000051   200006 720100                    LXL0    I,,AUTO
         2 000052   000144 236010 0                  LDQ     SSC_TMWU,X0
         2 000053   200007 116100                    CMPQ    RTIME,,AUTO
         2 000054   000077 602000 2                  TNC     s:720

      208      708    3              THEN DO;

      209      709    3   MONT1:           SSC_TMLNK(K)=I;

    709  2 000055   200011 720100       MONT1        LXL0    K,,AUTO
         2 000056   200006 235100                    LDA     I,,AUTO
         2 000057   000226 755010 0                  STA     SSC_TMLNK,X0

      210      710    3                    IF J<0 THEN

    710  2 000060   200010 236100                    LDQ     J,,AUTO
         2 000061   000065 605000 2                  TPL     s:713

      211      711    3                       SSC_TMHD=K;

    711  2 000062   200011 235100                    LDA     K,,AUTO
         2 000063   000310 755000 0                  STA     SSC_TMHD
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:50   
         2 000064   000067 710000 2                  TRA     s:715

      212      712    3                    ELSE
      213      713    3                       SSC_TMLNK(J)=K;

    713  2 000065   200011 235100                    LDA     K,,AUTO
         2 000066   000226 755006 0                  STA     SSC_TMLNK,QL

      214      714                         %UNLOCK (G#=S_TMRGATE);

    715  2 000067   000000 630400 3                  EPPR0   0
         2 000070   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000071   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000072   000000 011000                    NOP     0

      215      717    3                    CALL SSS$CACHE;

    717  2 000073   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000074   000000 701000 xent               TSX1    SSS$CACHE
         2 000075   000000 011000                    NOP     0

      216      718    3                    RETURN;

    718  2 000076   000000 702200 xent               TSX2  ! X66_ARET

      217      719    3                 END;
      218      720    2              J=I;

    720  2 000077   200006 235100                    LDA     I,,AUTO
         2 000100   200010 755100                    STA     J,,AUTO

      219      721    2              I=SSC_TMLNK(I);

    721  2 000101   000226 235010 0                  LDA     SSC_TMLNK,X0
         2 000102   200006 755100                    STA     I,,AUTO

      220      722    2           END;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:51   

    722  2 000103   000051 605000 2                  TPL     s:707

      221      723    1           GOTO MONT1;

    723  2 000104   000055 710000 2                  TRA     MONT1

      222      724        %EJECT;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:52   
      223      725        /*    SERVICE WAKEUP REQUESTS FROM MONITOR ROUTINES AND               */
      224      726        /*    WAKE UP SLEEPING USERS WHEN THEIR TIME EXPIRES                  */
      225      727    1   SSC$MONTIMRWU: ENTRY;

    727  2 000105   000000 700200 xent  SSC$MONTIMR* TSX0  ! X66_AUTO_3
         2 000106   000022 000003                    ZERO    18,3

      226      728    1           CALL SSS$CURTIME(RTIME);        /* GET CURRENT TIME AS UTS            */

    728  2 000107   200007 630500                    EPPR0   RTIME,,AUTO
         2 000110   200016 450500                    STP0    USR+4,,AUTO
         2 000111   200016 630500                    EPPR0   USR+4,,AUTO
         2 000112   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000113   000000 701000 xent               TSX1    SSS$CURTIME
         2 000114   000000 011000                    NOP     0

      227      729    1           IF S_ACCTIME < RTIME THEN       /* DO RESPONSE TIME EVERY MINUTE      */

    729  2 000115   000000 236000 xsym               LDQ     S_ACCTIME
         2 000116   200007 116100                    CMPQ    RTIME,,AUTO
         2 000117   000312 603000 2                  TRC     s:779

      228      730    2              DO;

      229      731        /*                ACCOUNT MONITOR EXECUTION AND IDLE TIMES            */
      230      732    2                 S_UXEQTIME(S_PNO)=S_UXEQTIME(S_PNO)+S_UXUSEC(S_PNO)/10000;

    732  2 000120   000000 720000 xsym               LXL0    S_PNO
         2 000121   000000 236010 xsym               LDQ     S_UXUSEC,X0
         2 000122   023420 506007                    DIV     10000,DL
         2 000123   000000 036010 xsym               ADLQ    S_UXEQTIME,X0
         2 000124   000000 756010 xsym               STQ     S_UXEQTIME,X0

      231      733    2                 S_UXUSEC(S_PNO)=MOD(S_UXUSEC(S_PNO),10000);

    733  2 000125   000000 236010 xsym               LDQ     S_UXUSEC,X0
         2 000126   023420 506007                    DIV     10000,DL
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:53   
         2 000127   000000 755010 xsym               STA     S_UXUSEC,X0

      232      734    2                 S_USRVTIME(S_PNO)=S_USRVTIME(S_PNO)+S_USUSEC(S_PNO)/10000;

    734  2 000130   000000 236010 xsym               LDQ     S_USUSEC,X0
         2 000131   023420 506007                    DIV     10000,DL
         2 000132   000000 036010 xsym               ADLQ    S_USRVTIME,X0
         2 000133   000000 756010 xsym               STQ     S_USRVTIME,X0

      233      735    2                 S_USUSEC(S_PNO)=MOD(S_USUSEC(S_PNO),10000);

    735  2 000134   000000 236010 xsym               LDQ     S_USUSEC,X0
         2 000135   023420 506007                    DIV     10000,DL
         2 000136   000000 755010 xsym               STA     S_USUSEC,X0

      234      736    3                 DO INHIBIT;

      235      737    3                    S_MXEQTIME(S_PNO)=S_MXEQTIME(S_PNO)+S_MXUSEC(S_PNO)/10000;

    737  2 000137   000000 236210 xsym               LDQ   ! S_MXUSEC,X0
         2 000140   023420 506207                    DIV   ! 10000,DL
         2 000141   000000 036210 xsym               ADLQ  ! S_MXEQTIME,X0
         2 000142   000000 756210 xsym               STQ   ! S_MXEQTIME,X0

      236      738    3                    S_MXUSEC(S_PNO)=MOD(S_MXUSEC(S_PNO),10000);

    738  2 000143   000000 236210 xsym               LDQ   ! S_MXUSEC,X0
         2 000144   023420 506207                    DIV   ! 10000,DL
         2 000145   000000 755210 xsym               STA   ! S_MXUSEC,X0

      237      739    3                 END;

      238      740    2                 S_MIDLTIME(S_PNO)=S_MIDLTIME(S_PNO)+S_MIDUSEC(S_PNO)/10000;

    740  2 000146   000000 236010 xsym               LDQ     S_MIDUSEC,X0
         2 000147   023420 506007                    DIV     10000,DL
         2 000150   000000 036010 xsym               ADLQ    S_MIDLTIME,X0
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:54   
         2 000151   000000 756010 xsym               STQ     S_MIDLTIME,X0

      239      741    2                 S_MIDUSEC(S_PNO)=MOD(S_MIDUSEC(S_PNO),10000);

    741  2 000152   000000 236010 xsym               LDQ     S_MIDUSEC,X0
         2 000153   023420 506007                    DIV     10000,DL
         2 000154   000000 755010 xsym               STA     S_MIDUSEC,X0

      240      742    2                 S_MIDLWIO(S_PNO)=S_MIDLWIO(S_PNO)+S_MIIUSEC(S_PNO)/10000;

    742  2 000155   000000 236010 xsym               LDQ     S_MIIUSEC,X0
         2 000156   023420 506007                    DIV     10000,DL
         2 000157   000000 036010 xsym               ADLQ    S_MIDLWIO,X0
         2 000160   000000 756010 xsym               STQ     S_MIDLWIO,X0

      241      743    2                 S_MIIUSEC(S_PNO)=MOD(S_MIIUSEC(S_PNO),10000);

    743  2 000161   000000 236010 xsym               LDQ     S_MIIUSEC,X0
         2 000162   023420 506007                    DIV     10000,DL
         2 000163   000000 755010 xsym               STA     S_MIIUSEC,X0

      242      744    2                 S_MIDLWRES(S_PNO)=S_MIDLWRES(S_PNO)+S_MIRUSEC(S_PNO)/10000;

    744  2 000164   000000 236010 xsym               LDQ     S_MIRUSEC,X0
         2 000165   023420 506007                    DIV     10000,DL
         2 000166   000000 036010 xsym               ADLQ    S_MIDLWRES,X0
         2 000167   000000 756010 xsym               STQ     S_MIDLWRES,X0

      243      745    2                 S_MIRUSEC(S_PNO)=MOD(S_MIRUSEC(S_PNO),10000);

    745  2 000170   000000 236010 xsym               LDQ     S_MIRUSEC,X0
         2 000171   023420 506007                    DIV     10000,DL
         2 000172   000000 755010 xsym               STA     S_MIRUSEC,X0

      244      746    2                 S_MIDLWRESIO(S_PNO)=S_MIDLWRESIO(S_PNO)+S_MIIRUSEC(S_PNO)/10000;

    746  2 000173   000000 236010 xsym               LDQ     S_MIIRUSEC,X0
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:55   
         2 000174   023420 506007                    DIV     10000,DL
         2 000175   000000 036010 xsym               ADLQ    S_MIDLWRESIO,X0
         2 000176   000000 756010 xsym               STQ     S_MIDLWRESIO,X0

      245      747    2                 S_MIIRUSEC(S_PNO)=MOD(S_MIIRUSEC(S_PNO),10000);

    747  2 000177   000000 236010 xsym               LDQ     S_MIIRUSEC,X0
         2 000200   023420 506007                    DIV     10000,DL
         2 000201   000000 755010 xsym               STA     S_MIIRUSEC,X0

      246      748    2                 CALL XUD$UTS_ADJ_25TH (S_ACCTIME, RTIME, %UTS_25TH_MIN#);

    748  2 000202   000002 236000 3                  LDQ     2
         2 000203   200020 756100                    STQ     USR+6,,AUTO
         2 000204   200007 630500                    EPPR0   RTIME,,AUTO
         2 000205   200017 450500                    STP0    USR+5,,AUTO
         2 000206   000003 236000 3                  LDQ     3
         2 000207   200016 756100                    STQ     USR+4,,AUTO
         2 000210   200016 630500                    EPPR0   USR+4,,AUTO
         2 000211   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000212   000000 701000 xent               TSX1    XUD$UTS_ADJ_25TH
         2 000213   000000 011000                    NOP     0

      247      749    2                 IF S_PNO = 0 AND RTIME > BITBIN('777773220400'O) THEN

    749  2 000214   000000 235000 xsym               LDA     S_PNO
         2 000215   000225 601000 2                  TNZ     s:751
         2 000216   000000 236000 1                  LDQ     0
         2 000217   200007 116100                    CMPQ    RTIME,,AUTO
         2 000220   000225 603000 2                  TRC     s:751

      248      750    2                    CALL OCA$KMISC(DATE);

    750  2 000221   000004 630400 3                  EPPR0   4
         2 000222   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000223   000000 701000 xent               TSX1    OCA$KMISC
         2 000224   000000 011000                    NOP     0
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:56   

      249      751    2                 CALL HFB$FLTREG;

    751  2 000225   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000226   000000 701000 xent               TSX1    HFB$FLTREG
         2 000227   000000 011000                    NOP     0

      250      752    2                 IF S_PNO = 0

    752  2 000230   000000 235000 xsym               LDA     S_PNO
         2 000231   000312 601000 2                  TNZ     s:779

      251      753    3                 THEN DO;

      252      754    3                       CALL SSS$CACHEBP;   /* CHECK FOR HUNG SLAVE IF ON MASTER  */

    754  2 000232   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000233   000000 701000 xent               TSX1    SSS$CACHEBP
         2 000234   000000 011000                    NOP     0

      253      755    4                       DO I = 1 TO S_NSCPU;

    755  2 000235   000001 235007                    LDA     1,DL
         2 000236   200006 755100                    STA     I,,AUTO
         2 000237   000303 710000 2                  TRA     s:775+1

      254      756    4                          IF S_MPSTATE(I) = %SS_PAUSE# OR S_MPSTATE(I) =  %SS_RUN#

    756  2 000240   200006 720100                    LXL0    I,,AUTO
         2 000241   000000 235010 xsym               LDA     S_MPSTATE,X0
         2 000242   000001 115007                    CMPA    1,DL
         2 000243   000246 600000 2                  TZE     s:758
         2 000244   000002 115007                    CMPA    2,DL
         2 000245   000300 601000 2                  TNZ     s:772

      255      757    5                          THEN DO;

PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:57   
      256      758    5                                J = S_MXEQTIME(I) * 10000 + S_MXUSEC(I);

    758  2 000246   000000 236010 xsym               LDQ     S_MXEQTIME,X0
         2 000247   023420 402007                    MPY     10000,DL
         2 000250   000000 036010 xsym               ADLQ    S_MXUSEC,X0
         2 000251   200010 756100                    STQ     J,,AUTO

      257      759    5                                IF S_PMUSECTIME(I) > 0

    759  2 000252   000000 235010 xsym               LDA     S_PMUSECTIME,X0
         2 000253   000275 604400 2                  TMOZ    s:769

      258      760    6                                THEN DO;

      259      761    6                                      IF J = S_PMUSECTIME(I)

    761  2 000254   000000 116010 xsym               CMPQ    S_PMUSECTIME,X0
         2 000255   000274 601000 2                  TNZ     s:767

      260      762    7                                      THEN DO;

      261      763    7                                            IF MOD(S_MIN_HUNG(I),5) = 0

    763  2 000256   000000 236010 xsym               LDQ     S_MIN_HUNG,X0
         2 000257   000005 506007                    DIV     5,DL
         2 000260   000044 733000                    LRS     36
         2 000261   000000 116003                    CMPQ    0,DU
         2 000262   000271 601000 2                  TNZ     s:765

      262      764    7                                            THEN CALL SSW$CPUHUNG(I);

    764  2 000263   200006 630500                    EPPR0   I,,AUTO
         2 000264   200016 450500                    STP0    USR+4,,AUTO
         2 000265   200016 630500                    EPPR0   USR+4,,AUTO
         2 000266   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000267   000000 701000 xent               TSX1    SSW$CPUHUNG
         2 000270   000000 011000                    NOP     0
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:58   

      263      765    7                                            S_MIN_HUNG(I) = S_MIN_HUNG(I) + 1;

    765  2 000271   200006 720100                    LXL0    I,,AUTO
         2 000272   000000 054010 xsym               AOS     S_MIN_HUNG,X0

      264      766    7                                         END;

    766  2 000273   000275 710000 2                  TRA     s:769

      265      767    6                                      ELSE S_MIN_HUNG(I) = 0;

    767  2 000274   000000 450010 xsym               STZ     S_MIN_HUNG,X0

      266      768    6                                   END;

      267      769    5                                S_PMUSECTIME(I) = J;

    769  2 000275   200010 235100                    LDA     J,,AUTO
         2 000276   000000 755010 xsym               STA     S_PMUSECTIME,X0

      268      770    5                             END;

    770  2 000277   000302 710000 2                  TRA     s:775

      269      771    5                          ELSE DO;

      270      772    5                                S_PMUSECTIME(I) = 0;

    772  2 000300   000000 450010 xsym               STZ     S_PMUSECTIME,X0

      271      773    5                                S_MIN_HUNG(I) = 0;

    773  2 000301   000000 450010 xsym               STZ     S_MIN_HUNG,X0

      272      774    5                             END;

PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:59   
      273      775    4                       END;

    775  2 000302   200006 054100                    AOS     I,,AUTO
         2 000303   000000 236000 xsym               LDQ     S_NSCPU
         2 000304   000240 604000 2                  TMI     s:756
         2 000305   200006 116100                    CMPQ    I,,AUTO
         2 000306   000240 605000 2                  TPL     s:756

      274      776    3                       CALL SSS$CACHE;

    776  2 000307   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000310   000000 701000 xent               TSX1    SSS$CACHE
         2 000311   000000 011000                    NOP     0

      275      777    3                    END;                   /* IF S_PNO = 0 THEN DO               */

      276      778    2              END;

      277      779    1           IF S_PNO ~= 0 THEN RETURN;      /* ACCOUNTING ONLY ON SLAVES*/

    779  2 000312   000000 235000 xsym               LDA     S_PNO
         2 000313   000315 600000 2                  TZE     s:780

    779  2 000314   000000 702200 xent               TSX2  ! X66_ARET

      278      780    2           DO WHILE (SSC_TMWU(SSC_TMHD)<=RTIME);

    780  2 000315   000310 720000 0                  LXL0    SSC_TMHD
         2 000316   200007 236100                    LDQ     RTIME,,AUTO
         2 000317   000144 116010 0                  CMPQ    SSC_TMWU,X0
         2 000320   000405 602000 2                  TNC     TMX1

      279      781                   %LOCK (G#=S_TMRGATE);

    782  2 000321   000000 630400 3                  EPPR0   0
         2 000322   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000323   000000 701000 xent               TSX1    HFC$LOCK
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:60   
         2 000324   000000 011000                    NOP     0

      280      784    2              CALL SSS$CACHEBP;

    784  2 000325   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000326   000000 701000 xent               TSX1    SSS$CACHEBP
         2 000327   000000 011000                    NOP     0

      281      785    2              I=SSC_TMHD;

    785  2 000330   000310 235000 0                  LDA     SSC_TMHD
         2 000331   200006 755100                    STA     I,,AUTO

      282      786    2              KEPTR=SSC_TMPROC(I);

    786  2 000332   000000 236005 0                  LDQ     SSC_TMPROC,AL
         2 000333   200011 756100                    STQ     K,,AUTO

      283      787    2              SSC_TMHD=SSC_TMLNK(I);

    787  2 000334   200006 720100                    LXL0    I,,AUTO
         2 000335   000226 235010 0                  LDA     SSC_TMLNK,X0
         2 000336   000310 755000 0                  STA     SSC_TMHD

      284      788    2              CALL SSS$CACHE;

    788  2 000337   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000340   000000 701000 xent               TSX1    SSS$CACHE
         2 000341   000000 011000                    NOP     0

      285      789                   %UNLOCK (G#=S_TMRGATE);

    790  2 000342   000000 630400 3                  EPPR0   0
         2 000343   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000344   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000345   000000 011000                    NOP     0

PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:61   
      286      792    2              CALL KEPTR(SSC_TMARG(I));

    792  2 000346   200006 720100                    LXL0    I,,AUTO
         2 000347   000062 630410 0                  EPPR0   SSC_TMARG,X0
         2 000350   200016 450500                    STP0    USR+4,,AUTO
         2 000351   200016 630500                    EPPR0   USR+4,,AUTO
         2 000352   200011 221100                    LDX1    K,,AUTO
         2 000353   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000354   000000 701011                    TSX1    0,X1
         2 000355   000000 011000                    NOP     0

      287      793                   %LOCK (G#=S_TMRGATE);

    794  2 000356   000000 630400 3                  EPPR0   0
         2 000357   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000360   000000 701000 xent               TSX1    HFC$LOCK
         2 000361   000000 011000                    NOP     0

      288      796    2              CALL SSS$CACHEBP;

    796  2 000362   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000363   000000 701000 xent               TSX1    SSS$CACHEBP
         2 000364   000000 011000                    NOP     0

      289      797    2              SSC_TMLNK(I)=SSC_TMFREE;

    797  2 000365   200006 720100                    LXL0    I,,AUTO
         2 000366   000311 235000 0                  LDA     SSC_TMFREE
         2 000367   000226 755010 0                  STA     SSC_TMLNK,X0

      290      798    2              SSC_TMFREE=I;

    798  2 000370   200006 236100                    LDQ     I,,AUTO
         2 000371   000311 756000 0                  STQ     SSC_TMFREE

      291      799    2              CALL SSS$CACHE;

PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:62   
    799  2 000372   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000373   000000 701000 xent               TSX1    SSS$CACHE
         2 000374   000000 011000                    NOP     0

      292      800                   %UNLOCK (G#=S_TMRGATE);

    801  2 000375   000000 630400 3                  EPPR0   0
         2 000376   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000377   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000400   000000 011000                    NOP     0

      293      803    2           END;

    803  2 000401   000310 720000 0                  LXL0    SSC_TMHD
         2 000402   200007 236100                    LDQ     RTIME,,AUTO
         2 000403   000144 116010 0                  CMPQ    SSC_TMWU,X0
         2 000404   000321 603000 2                  TRC     s:782

    796  2 000405                       TMX1         null
      294      804    1   TMX1:   ;
      295      805                /* CACHE HAS BEEN CLEARED BEFORE WE GOT HERE
      296      806        */
      297      807    1           I=S_HQ(%SS_SW);

    807  2 000405   000021 235000 xsym               LDA     S_HQ+17
         2 000406   200006 755100                    STA     I,,AUTO

      298      808    1           IF I ~= 0 AND B$USRT$->B$USER.MISC(I) <= RTIME THEN

    808  2 000407   000431 600000 2                  TZE     TMX2
         2 000410   000004 735000                    ALS     4
         2 000411   000000 470400 xsym               LDP0    B$USRT$
         2 000412   200007 236100                    LDQ     RTIME,,AUTO
         2 000413   000017 116105                    CMPQ    15,AL,PR0
         2 000414   000431 602000 2                  TNC     TMX2

      299      809    2              DO;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:63   

      300      810    2                 USR=I;

    810  2 000415   200006 235100                    LDA     I,,AUTO
         2 000416   000033 735000                    ALS     27
         2 000417   200012 755100                    STA     USR,,AUTO

      301      811    2                 CALL SSR$RUE(%SS_WU,USR); /* HIS TIME HAS COME                  */

    811  2 000420   200012 631500                    EPPR1   USR,,AUTO
         2 000421   200017 451500                    STP1    USR+5,,AUTO
         2 000422   000006 236000 3                  LDQ     6
         2 000423   200016 756100                    STQ     USR+4,,AUTO
         2 000424   200016 630500                    EPPR0   USR+4,,AUTO
         2 000425   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000426   000000 701000 xent               TSX1    SSR$RUE
         2 000427   000000 011000                    NOP     0

      302      812    2                 GOTO TMX1;                /* GET THE NEXT USER IN SLEEP QUEUE*/

    812  2 000430   000405 710000 2                  TRA     TMX1

    808  2 000431                       TMX2         null
      303      813    2              END;
      304      814    1   TMX2:   ;
      305      815    1           I=S_HQ(%SS_SQR);                /* LOOK FOR ENQUEUE USERS TO WAKE UP  */

    815  2 000431   000024 235000 xsym               LDA     S_HQ+20
         2 000432   200006 755100                    STA     I,,AUTO

      306      816    1           IF I ~= 0 AND B$USRT$->B$USER.MISC(I) <= RTIME THEN

    816  2 000433   000455 600000 2                  TZE     s:822
         2 000434   000004 735000                    ALS     4
         2 000435   000000 470400 xsym               LDP0    B$USRT$
         2 000436   200007 236100                    LDQ     RTIME,,AUTO
         2 000437   000017 116105                    CMPQ    15,AL,PR0
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:64   
         2 000440   000455 602000 2                  TNC     s:822

      307      817    2              DO;

      308      818    2                 USR=I;

    818  2 000441   200006 235100                    LDA     I,,AUTO
         2 000442   000033 735000                    ALS     27
         2 000443   200012 755100                    STA     USR,,AUTO

      309      819    2                 CALL SSR$RUE(%SS_NQR,USR);

    819  2 000444   200012 631500                    EPPR1   USR,,AUTO
         2 000445   200017 451500                    STP1    USR+5,,AUTO
         2 000446   000010 236000 3                  LDQ     8
         2 000447   200016 756100                    STQ     USR+4,,AUTO
         2 000450   200016 630500                    EPPR0   USR+4,,AUTO
         2 000451   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000452   000000 701000 xent               TSX1    SSR$RUE
         2 000453   000000 011000                    NOP     0

      310      820    2                 GOTO TMX2;

    820  2 000454   000431 710000 2                  TRA     TMX2

      311      821    2              END;
      312      822    1           RETURN;

    822  2 000455   000000 702200 xent               TSX2  ! X66_ARET

      313      823        %EJECT;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:65   
      314      824        /*         SET TIMER REGISTER TO LEAST POSSIBLE INTERVAL              */
      315      825    1   SSC$QTIMR: ENTRY(INTERVAL);

    825  2 000456   000000 700200 xent  SSC$QTIMR    TSX0  ! X66_AUTO_3
         2 000457   000022 000003                    ZERO    18,3

      316      826        /*                                                                    */
      317      827    1           I=INTERVAL;                     /* NEXT QUANTUN TIME (USECS)          */

    827  2 000460   200003 470500                    LDP0    @INTERVAL,,AUTO
         2 000461   000000 235100                    LDA     0,,PR0
         2 000462   200006 755100                    STA     I,,AUTO

      318      828    1           IF S_PNO = 0 THEN

    828  2 000463   000000 236000 xsym               LDQ     S_PNO
         2 000464   000540 601000 2                  TNZ     s:850

      319      829    2              DO;

      320      830    2                 CALL SSS$CURTIME(RTIME);  /* GET CURRENT TIME IN 1/100 SEC      */

    830  2 000465   200007 631500                    EPPR1   RTIME,,AUTO
         2 000466   200016 451500                    STP1    USR+4,,AUTO
         2 000467   200016 630500                    EPPR0   USR+4,,AUTO
         2 000470   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000471   000000 701000 xent               TSX1    SSS$CURTIME
         2 000472   000000 011000                    NOP     0

      321      831    2                 K=SSC_TMWU(SSC_TMHD);

    831  2 000473   000310 720000 0                  LXL0    SSC_TMHD
         2 000474   000144 235010 0                  LDA     SSC_TMWU,X0
         2 000475   200011 755100                    STA     K,,AUTO

      322      832    2                 CALL MINTIM;

PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:66   
    832  2 000476   000547 701000 2                  TSX1    MINTIM
         2 000477   000000 011000                    NOP     0

      323      833    2                 CALL SSS$CACHEBP;

    833  2 000500   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000501   000000 701000 xent               TSX1    SSS$CACHEBP
         2 000502   000000 011000                    NOP     0

      324      834    2                 J=S_HQ(%SS_SW);      /* FIND MIN(INTERVAL,WAIT USER WU TIME)*/

    834  2 000503   000021 235000 xsym               LDA     S_HQ+17
         2 000504   200010 755100                    STA     J,,AUTO

      325      835    2                 CALL SSS$CACHE;

    835  2 000505   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000506   000000 701000 xent               TSX1    SSS$CACHE
         2 000507   000000 011000                    NOP     0

      326      836    2                 IF J ~= 0 THEN

    836  2 000510   200010 235100                    LDA     J,,AUTO
         2 000511   000520 600000 2                  TZE     s:841

      327      837    3                    DO;

      328      838    3                       K=B$USRT$->B$USER.MISC(J);

    838  2 000512   000004 735000                    ALS     4
         2 000513   000000 470400 xsym               LDP0    B$USRT$
         2 000514   000017 235105                    LDA     15,AL,PR0
         2 000515   200011 755100                    STA     K,,AUTO

      329      839    3                       CALL MINTIM;

    839  2 000516   000547 701000 2                  TSX1    MINTIM
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:67   
         2 000517   000000 011000                    NOP     0

      330      840    3                    END;

      331      841    2                 CALL SSS$CACHEBP;

    841  2 000520   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000521   000000 701000 xent               TSX1    SSS$CACHEBP
         2 000522   000000 011000                    NOP     0

      332      842    2                 J=S_HQ(%SS_SQR);          /* FIND MIN(INTERVAL,ENQ USER WU TIME)*/

    842  2 000523   000024 235000 xsym               LDA     S_HQ+20
         2 000524   200010 755100                    STA     J,,AUTO

      333      843    2                 CALL SSS$CACHE;

    843  2 000525   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000526   000000 701000 xent               TSX1    SSS$CACHE
         2 000527   000000 011000                    NOP     0

      334      844    2                 IF J ~= 0 THEN

    844  2 000530   200010 235100                    LDA     J,,AUTO
         2 000531   000540 600000 2                  TZE     s:850

      335      845    3                    DO;

      336      846    3                       K=B$USRT$->B$USER.MISC(J);

    846  2 000532   000004 735000                    ALS     4
         2 000533   000000 470400 xsym               LDP0    B$USRT$
         2 000534   000017 235105                    LDA     15,AL,PR0
         2 000535   200011 755100                    STA     K,,AUTO

      337      847    3                       CALL MINTIM;

PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:68   
    847  2 000536   000547 701000 2                  TSX1    MINTIM
         2 000537   000000 011000                    NOP     0

      338      848    3                    END;

      339      849    2              END;

      340      850    1           CALL SSS$LDT(I);                /* SET TIMER REGISTER TO I USECS      */

    850  2 000540   200006 630500                    EPPR0   I,,AUTO
         2 000541   200016 450500                    STP0    USR+4,,AUTO
         2 000542   200016 630500                    EPPR0   USR+4,,AUTO
         2 000543   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000544   000000 701000 xent               TSX1    SSS$LDT
         2 000545   000000 011000                    NOP     0

      341      851    1           RETURN;

    851  2 000546   000000 702200 xent               TSX2  ! X66_ARET

      342      852    1   MINTIM: PROC;

    852  2 000547   200014 741300       MINTIM       STX1  ! USR+2,,AUTO

      343      853    2           IF K<=RTIME

    853  2 000550   200007 236100                    LDQ     RTIME,,AUTO
         2 000551   200011 116100                    CMPQ    K,,AUTO
         2 000552   000556 602000 2                  TNC     s:856

      344      854    2           THEN I=1000;

    854  2 000553   001750 235007                    LDA     1000,DL
         2 000554   200006 755100                    STA     I,,AUTO
         2 000555   000602 710000 2                  TRA     s:862

      345      855    3           ELSE DO;
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:69   

      346      856    4                 CALL XUD$UTS_DIFF (K, K, RTIME) WHENALTRETURN DO;

    856  2 000556   200007 630500                    EPPR0   RTIME,,AUTO
         2 000557   200020 450500                    STP0    USR+6,,AUTO
         2 000560   200011 631500                    EPPR1   K,,AUTO
         2 000561   200017 451500                    STP1    USR+5,,AUTO
         2 000562   200011 633500                    EPPR3   K,,AUTO
         2 000563   200016 453500                    STP3    USR+4,,AUTO
         2 000564   200016 630500                    EPPR0   USR+4,,AUTO
         2 000565   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000566   000000 701000 xent               TSX1    XUD$UTS_DIFF
         2 000567   000571 702000 2                  TSX2    s:857
         2 000570   000573 710000 2                  TRA     s:859

      347      857    4                       RETURN;

    857  2 000571   200014 221300                    LDX1  ! USR+2,,AUTO
         2 000572   000001 702211                    TSX2  ! 1,X1

      348      858    4                    END;
      349      859    3                 K = K * %CSEC_TO_MICRO#;

    859  2 000573   200011 236100                    LDQ     K,,AUTO
         2 000574   023420 402007                    MPY     10000,DL
         2 000575   200011 756100                    STQ     K,,AUTO

      350      860    3                 IF KS<I THEN I=KS;

    860  2 000576   200011 236100                    LDQ     K,,AUTO
         2 000577   200006 116100                    CMPQ    I,,AUTO
         2 000600   000602 605000 2                  TPL     s:862

    860  2 000601   200006 756100                    STQ     I,,AUTO

      351      861    3              END;

PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:70   
      352      862    2           RETURN;

    862  2 000602   200014 221300                    LDX1  ! USR+2,,AUTO
         2 000603   000001 702211                    TSX2  ! 1,X1

SSC_TMPROC
 Sect OctLoc
   0     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

SSC_TMARG
 Sect OctLoc
   0     062   ****** ******   ****** ******   ****** ******   ****** ******    ................

SSC_TMWU
 Sect OctLoc
   0     144   777777 777777   000000 000000   000000 000000   000000 000000    ................
   0     150   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     224*  000000 000000   000000 000000                                    ........

SSC_TMLNK
 Sect OctLoc
   0     226   777777 777777   000000 000002   000000 000003   000000 000004    ................
   0     232   000000 000005   000000 000006   000000 000007   000000 000010    ................
   0     236   000000 000011   000000 000012   000000 000013   000000 000014    ................
   0     242   000000 000015   000000 000016   000000 000017   000000 000020    ................
   0     246   000000 000021   000000 000022   000000 000023   000000 000024    ................
   0     252   000000 000025   000000 000026   000000 000027   000000 000030    ................
   0     256   000000 000031   000000 000032   000000 000033   000000 000034    ................
   0     262   000000 000035   000000 000036   000000 000037   000000 000040    ...............
   0     266   000000 000041   000000 000042   000000 000043   000000 000044    ...!..."...#...$
   0     272   000000 000045   000000 000046   000000 000047   000000 000050    ...%...&...'...(
   0     276   000000 000051   000000 000052   000000 000053   000000 000054    ...)...*...+...,
   0     302   000000 000055   000000 000056   000000 000057   000000 000060    ...-......./...0
   0     306   000000 000061   777777 777777                                    ...1....

SSC_TMHD
 Sect OctLoc
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:71   
   0     310   000000 000000                                                    ....

SSC_TMFREE
 Sect OctLoc
   0     311   000000 000001                                                    ....

DATE
 Sect OctLoc
   0     312   000004 000000   000000 000000   060061 057060   061057 067070    ........01/01/78

(unnamed)
 Sect OctLoc
   1     000   777773 220400                                                    ....

(unnamed)
 Sect OctLoc
   3     000   000000 006000   000000 002734   000001 006000   000000 006000    ................
   3     004   000312 006000   000000 000027   000005 006000   000000 000103    ...............C
   3     010   000007 006000                                                    ....
      353      863    2   END MINTIM;
      354      864    1   END;
      355      865        %EOD;

PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:72   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
      No diagnostics issued in procedure SSC$MONTIMR.
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:73   

 **** Variables and constants ****

  ****  Section 000  Data  SSC$MONTIMR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   312-0-0/c STRC(144)   r     1 DATE
    62-0-0/w UBIN        r     1 SSC_TMARG(0:49)
   311-0-0/w SBIN        r     1 SSC_TMFREE               310-0-0/w SBIN        r     1 SSC_TMHD
   226-0-0/w SBIN        r     1 SSC_TMLNK(0:49)
     0-0-0/w EPTR        r     1 SSC_TMPROC(0:49)
   144-0-0/w UBIN        r     1 SSC_TMWU(0:49)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @ARG                       3-0-0/w PTR         r     1 @INTERVAL
     4-0-0/w PTR         r     1 @PROCENTRY                *0-0-0/w UBIN        r     1 ARG
     6-0-0/w SBIN        r     1 I                         *0-0-0/w UBIN        r     1 INTERVAL
    10-0-0/w SBIN        r     1 J                         11-0-0/w UBIN        r     1 K
    11-0-0/w EPTR        r     1 KEPTR                     11-0-0/w SBIN        r     1 KS
    *0-0-0/w EPTR        r     1 PROCENTRY                  7-0-0/w UBIN        r     1 RTIME
    12-0-0/w UBIN(9)     r     1 USR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$USRT$                    0-0-0/w UBIN        r     1 S_ACCTIME
     0-0-0/w SBIN        r     1 S_HQ(0:8191)
     0-0-0/w SBIN        r     1 S_MIDLTIME(0:7)
     0-0-0/w SBIN        r     1 S_MIDLWIO(0:7)
     0-0-0/w SBIN        r     1 S_MIDLWRES(0:7)
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:74   
     0-0-0/w SBIN        r     1 S_MIDLWRESIO(0:7)
     0-0-0/w SBIN        r     1 S_MIDUSEC(0:7)
     0-0-0/w SBIN        r     1 S_MIIRUSEC(0:7)
     0-0-0/w SBIN        r     1 S_MIIUSEC(0:7)
     0-0-0/w SBIN        r     1 S_MIN_HUNG(0:7)
     0-0-0/w SBIN        r     1 S_MIRUSEC(0:7)
     0-0-0/w SBIN        r     1 S_MPSTATE(0:7)
     0-0-0/w SBIN        r     1 S_MXEQTIME(0:7)
     0-0-0/w SBIN        r     1 S_MXUSEC(0:7)
     0-0-0/w UBIN        r     1 S_NSCPU
     0-0-0/w SBIN        r     1 S_PMUSECTIME(0:7)
     0-0-0/w SBIN        r     1 S_PNO                      0-0-0/b BIT (72)    r     1 S_TMRGATE
     0-0-0/w SBIN        r     1 S_USRVTIME(0:7)
     0-0-0/w SBIN        r     1 S_USUSEC(0:7)
     0-0-0/w SBIN        r     1 S_UXEQTIME(0:7)
     0-0-0/w SBIN        r     1 S_UXUSEC(0:7)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(576)   r     1 B$USER(0:0)


   Procedure SSC$MONTIMR requires 388 words for executable code.
   Procedure SSC$MONTIMR requires 18 words of local(AUTO) storage.
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:75   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:76   
          MINI XREF LISTING

ARG
       646**DCL         6--PROC      703>>ASSIGN
B$DO.ECCINFO
       435**DCL       436--REDEF
B$U.MISC
       414**DCL       415--REDEF
B$USER.MISC
       490**DCL       491--REDEF     808>>IF        816>>IF        838>>ASSIGN    846>>ASSIGN
B$USRT$
       502**DCL       808>>IF        816>>IF        838>>ASSIGN    846>>ASSIGN
DATE
       668**DCL       750<>CALL
HFB$FLTREG
       675**DCL-ENT   751--CALL
HFC$LOCK
       517**DCL-ENT   688--CALL      782--CALL      794--CALL
HFC$UNLOCK
       517**DCL-ENT   715--CALL      790--CALL      801--CALL
I
       659**DCL       705<<ASSIGN    706>>DOWHILE   707>>IF        709>>ASSIGN    720>>ASSIGN    721<<ASSIGN
       721>>ASSIGN    755<<DOINDEX   756>>IF        756>>IF        758>>ASSIGN    758>>ASSIGN    759>>IF
       761>>IF        763>>IF        764<>CALL      765>>ASSIGN    765>>ASSIGN    767>>ASSIGN    769>>ASSIGN
       772>>ASSIGN    773>>ASSIGN    785<<ASSIGN    786>>ASSIGN    787>>ASSIGN    792>>CALL      797>>ASSIGN
       798>>ASSIGN    807<<ASSIGN    808>>IF        808>>IF        810>>ASSIGN    815<<ASSIGN    816>>IF
       816>>IF        818>>ASSIGN    827<<ASSIGN    850<>CALL      854<<ASSIGN    860>>IF        860<<ASSIGN
INTERVAL
       644**DCL         6--PROC      690>>ASSIGN    825--ENTRY     827>>ASSIGN
J
       661**DCL       701<<ASSIGN    710>>IF        713>>ASSIGN    720<<ASSIGN    758<<ASSIGN    761>>IF
       769>>ASSIGN    834<<ASSIGN    836>>IF        838>>ASSIGN    842<<ASSIGN    844>>IF        846>>ASSIGN
K
       662**DCL       663--REDEF     664--REDEF     693<<ASSIGN    695>>ASSIGN    702>>ASSIGN    703>>ASSIGN
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:77   
       704>>ASSIGN    709>>ASSIGN    711>>ASSIGN    713>>ASSIGN    831<<ASSIGN    838<<ASSIGN    846<<ASSIGN
       853>>IF        856<>CALL      856<>CALL      859<<ASSIGN    859>>ASSIGN
KEPTR
       664**DCL       786<<ASSIGN    792>>CALL
KS
       663**DCL       694>>IF        860>>IF        860>>ASSIGN
MINTIM
       852**PROC      832--CALL      839--CALL      847--CALL
MONT1
       709**LABEL     723--GOTO
OCA$KMISC
       674**DCL-ENT   750--CALL
PROCENTRY
       645**DCL         6--PROC      702>>ASSIGN
RTIME
       660**DCL       690<<ASSIGN    691<>CALL      704>>ASSIGN    707>>IF        728<>CALL      729>>IF
       748<>CALL      749>>IF        780>>DOWHILE   808>>IF        816>>IF        830<>CALL      853>>IF
       856<>CALL
SC_MONTIMR
       683**DCL-ENT   697--CALL
SSC_TMARG
       649**DCL       703<<ASSIGN    792<>CALL
SSC_TMFREE
       657**DCL       693>>ASSIGN    695<<ASSIGN    797>>ASSIGN    798<<ASSIGN
SSC_TMHD
       656**DCL       705>>ASSIGN    711<<ASSIGN    780>>DOWHILE   785>>ASSIGN    787<<ASSIGN    831>>ASSIGN
SSC_TMLNK
       651**DCL       695>>ASSIGN    709<<ASSIGN    713<<ASSIGN    721>>ASSIGN    787>>ASSIGN    797<<ASSIGN
SSC_TMPROC
       648**DCL       702<<ASSIGN    786>>ASSIGN
SSC_TMWU
       650**DCL       704<<ASSIGN    707>>IF        780>>DOWHILE   831>>ASSIGN
SSR$RUE
       681**DCL-ENT   811--CALL      819--CALL
SSS$CACHE
       678**DCL-ENT   717--CALL      776--CALL      788--CALL      799--CALL      835--CALL      843--CALL
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:78   
SSS$CACHEBP
       679**DCL-ENT   692--CALL      754--CALL      784--CALL      796--CALL      833--CALL      841--CALL
SSS$CURTIME
       677**DCL-ENT   728--CALL      830--CALL
SSS$LDT
       680**DCL-ENT   850--CALL
SSS$WUTIME
       676**DCL-ENT   691--CALL
SSW$CPUHUNG
       682**DCL-ENT   764--CALL
S_ACCTIME
       667**DCL       729>>IF        748<>CALL
S_HQ
       268**DCL       807>>ASSIGN    815>>ASSIGN    834>>ASSIGN    842>>ASSIGN
S_MIDLTIME
       277**DCL       740<<ASSIGN    740>>ASSIGN
S_MIDLWIO
       277**DCL       742<<ASSIGN    742>>ASSIGN
S_MIDLWRES
       277**DCL       744<<ASSIGN    744>>ASSIGN
S_MIDLWRESIO
       278**DCL       746<<ASSIGN    746>>ASSIGN
S_MIDUSEC
       275**DCL       740>>ASSIGN    741<<ASSIGN    741>>ASSIGN
S_MIIRUSEC
       276**DCL       746>>ASSIGN    747<<ASSIGN    747>>ASSIGN
S_MIIUSEC
       275**DCL       742>>ASSIGN    743<<ASSIGN    743>>ASSIGN
S_MIN_HUNG
       278**DCL       763>>IF        765<<ASSIGN    765>>ASSIGN    767<<ASSIGN    773<<ASSIGN
S_MIRUSEC
       276**DCL       744>>ASSIGN    745<<ASSIGN    745>>ASSIGN
S_MPSTATE
       270**DCL       756>>IF        756>>IF
S_MXEQTIME
       277**DCL       737<<ASSIGN    737>>ASSIGN    758>>ASSIGN
PL6.E3A0      #003=SSC$MONTIMR File=SSC$SCHD.:E05TSI                             WED 07/30/97 05:56 Page:79   
S_MXUSEC
       275**DCL       737>>ASSIGN    738<<ASSIGN    738>>ASSIGN    758>>ASSIGN
S_NSCPU
       271**DCL       755>>DOINDEX
S_PMUSECTIME
       278**DCL       759>>IF        761>>IF        769<<ASSIGN    772<<ASSIGN
S_PNO
       666**DCL       732>>ASSIGN    732>>ASSIGN    732>>ASSIGN    733>>ASSIGN    733>>ASSIGN    734>>ASSIGN
       734>>ASSIGN    734>>ASSIGN    735>>ASSIGN    735>>ASSIGN    737>>ASSIGN    737>>ASSIGN    737>>ASSIGN
       738>>ASSIGN    738>>ASSIGN    740>>ASSIGN    740>>ASSIGN    740>>ASSIGN    741>>ASSIGN    741>>ASSIGN
       742>>ASSIGN    742>>ASSIGN    742>>ASSIGN    743>>ASSIGN    743>>ASSIGN    744>>ASSIGN    744>>ASSIGN
       744>>ASSIGN    745>>ASSIGN    745>>ASSIGN    746>>ASSIGN    746>>ASSIGN    746>>ASSIGN    747>>ASSIGN
       747>>ASSIGN    749>>IF        752>>IF        779>>IF        828>>IF
S_TMRGATE
       282**DCL       688<>CALL      715<>CALL      782<>CALL      790<>CALL      794<>CALL      801<>CALL
S_USRVTIME
       275**DCL       734<<ASSIGN    734>>ASSIGN
S_USUSEC
       276**DCL       734>>ASSIGN    735<<ASSIGN    735>>ASSIGN
S_UXEQTIME
       274**DCL       732<<ASSIGN    732>>ASSIGN
S_UXUSEC
       276**DCL       732>>ASSIGN    733<<ASSIGN    733>>ASSIGN
TMX1
       796**LABEL     812--GOTO
TMX2
       808**LABEL     820--GOTO
USR
       665**DCL       810<<ASSIGN    811<>CALL      818<<ASSIGN    819<>CALL
XUD$UTS_ADJ_25TH
       625**DCL-ENT   748--CALL
XUD$UTS_DIFF
       601**DCL-ENT   856--CALL

PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:80   
      356        1        /*T***********************************************************/
      357        2        /*T*                                                         */
      358        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      359        4        /*T*                                                         */
      360        5        /*T***********************************************************/
      361        6        /*                                                                    */
      362        7        SSC$TSTATE: PROC(USER,STATE);
      363        8        /*                                                                    */
      364        9        %INCLUDE UM$CP6V_C;
      365      196        %INCLUDE B$USER;
      366      412        %B$USERREFS;
      367      416        %INCLUDE HF_LOCK_C;
      368      430        %INCLUDE SS_SCHED_C;
      369      663        %INCLUDE SS_SCHED_R;
      370      706        %FPT$STATE_V;
      371      709
      372      710    1   DCL   USER UBIN(9) CALIGNED;            /* USER NUMBER                        */
      373      711    1   DCL   STATE CHAR(4);                    /* STATE MNEMONIC                     */
      374      712    1   DCL OCZ$SID_UN ENTRY(4) ALTRET;
      375      713
      376      714    1   DCL VLR(0:3) UBIN BASED;
      377      715    1   DCL C(0:3) CHAR(4) BASED ALIGNED;
      378      716    1   DCL U UBIN;
      379      717    1   DCL SID UBIN HALF;
      380      718    1   DCL   A UBIN(36) BASED;
      381      719    1   DCL   B_MUAIS UBIN(36) SYMREF;
      382      720    1   DCL   P$ PTR;
      383      721    1   DCL TSTATE REDEF P$ CHAR(4);
      384      722    1   DCL B$PS0$ PTR SYMREF READONLY;
      385      723    1   DCL B$PS1$ PTR SYMREF READONLY;
      386      724        /*                                                                    */
      387      725        %S_STATE (FPTN=S);
      388      757        %S_RSTATE (FPTN=R);
      389      770        /*                                                                    */
      390      771        /*                                                                    */
      391      772        /*                                                                    */
      392      773        %EJECT;
PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:81   
      393      774    1           P$=ADDR(B$USRT$->B$USER(USER));
      394      775                %LOCK (G#=S_SCHDGATE);
      395      778    1           IF P$->B$U.US = %SS_SQR THEN
      396      779    1              TSTATE=R(P$->B$U.PRIO);
      397      780    1           ELSE
      398      781    1              TSTATE=S(P$->B$U.US);
      399      782    1           STATE=TSTATE;
      400      783                %UNLOCK (G#=S_SCHDGATE);
      401      786    1           RETURN;
      402      787        /*                                                                    */
      403      788        /*         RETURN USER STATE NUMBER SERVICE                           */
      404      789        /*                                                                    */
      405      790    1   SSC$STATE: ENTRY;
      406      791    1           SID=B$PS0$->FPT$STATE_V.SYSID;
      407      792    1           CALL OCZ$SID_UN (SID,U) ALTRET(NOONE);
      408      793    2           DO WHILE ('0'B);
      409      794    2   NOONE:     U=0;
      410      795    2           END;
      411      796    1           P$=ADDR(B$USRT$->B$USER(U));
      412      797    1           B$PS1$->VLR(0)=P$->B$U.US;
      413      798    1           IF B$PS1$->VLR(0) = %SS_SQR THEN
      414      799    1              B$PS1$->C(1)=R(P$->B$U.PRIO);
      415      800    1           ELSE
      416      801    1              B$PS1$->C(1)=S(B$PS1$->VLR(0));
      417      802    1           B$PS1$->VLR(2)=P$->B$U.MRT;
      418      803    1           B$PS1$->VLR(3)=P$->B$U.UTSUSED;
      419      804    1           RETURN;
      420      805    1   END;
      421      806        %EOD;

PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:82   
--  Include file information  --

   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   UM$CP6V_C.:E05TOU  is referenced.
      No diagnostics issued in procedure SSC$TSTATE.

   Procedure SSC$TSTATE requires 77 words for executable code.
   Procedure SSC$TSTATE requires 10 words of local(AUTO) storage.

PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:83   

 Object Unit name= SSC$TSTATE                                 File name= SSC$SCHD.:E05TOU
 UTS= JUL 30 '97 05:56:59.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     31     37  SSC$TSTATE
    1   Proc  even  none    77    115  SSC$TSTATE
    2  RoData even  none     1      1  SSC$TSTATE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  SSC$TSTATE
     1     46                  yes      Std        0  SSC$STATE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       4 OCZ$SID_UN
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:84   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$USRT$                               S_SCHDGATE                       r    B$PS0$
r    B$PS1$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:85   


      356        1        /*T***********************************************************/
      357        2        /*T*                                                         */
      358        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      359        4        /*T*                                                         */
      360        5        /*T***********************************************************/
      361        6        /*                                                                    */
      362        7        SSC$TSTATE: PROC(USER,STATE);

      7  1 000000   000000 700200 xent  SSC$TSTATE   TSX0  ! X66_AUTO_2
         1 000001   000012 000002                    ZERO    10,2

      363        8        /*                                                                    */
      364        9        %INCLUDE UM$CP6V_C;
      365      196        %INCLUDE B$USER;
      366      412        %B$USERREFS;
      367      416        %INCLUDE HF_LOCK_C;
      368      430        %INCLUDE SS_SCHED_C;
      369      663        %INCLUDE SS_SCHED_R;
      370      706        %FPT$STATE_V;
      371      709
      372      710    1   DCL   USER UBIN(9) CALIGNED;            /* USER NUMBER                        */
      373      711    1   DCL   STATE CHAR(4);                    /* STATE MNEMONIC                     */
      374      712    1   DCL OCZ$SID_UN ENTRY(4) ALTRET;
      375      713
      376      714    1   DCL VLR(0:3) UBIN BASED;
      377      715    1   DCL C(0:3) CHAR(4) BASED ALIGNED;
      378      716    1   DCL U UBIN;
      379      717    1   DCL SID UBIN HALF;
      380      718    1   DCL   A UBIN(36) BASED;
      381      719    1   DCL   B_MUAIS UBIN(36) SYMREF;
      382      720    1   DCL   P$ PTR;
      383      721    1   DCL TSTATE REDEF P$ CHAR(4);
      384      722    1   DCL B$PS0$ PTR SYMREF READONLY;
      385      723    1   DCL B$PS1$ PTR SYMREF READONLY;
      386      724        /*                                                                    */
      387      725        %S_STATE (FPTN=S);
PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:86   
      388      757        %S_RSTATE (FPTN=R);
      389      770        /*                                                                    */
      390      771        /*                                                                    */
      391      772        /*                                                                    */
      392      773        %EJECT;
PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:87   
      393      774    1           P$=ADDR(B$USRT$->B$USER(USER));

    774  1 000002   200003 470500                    LDP0    @USER,,AUTO
         1 000003   000100 101500                    MRL     fill='000'O
         1 000004   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000005   200010 000004                    ADSC9   P$+1,,AUTO               cn=0,n=4
         1 000006   200010 236100                    LDQ     P$+1,,AUTO
         1 000007   000004 736000                    QLS     4
         1 000010   000022 736000                    QLS     18
         1 000011   000000 036000 xsym               ADLQ    B$USRT$
         1 000012   200007 756100                    STQ     P$,,AUTO

      394      775                %LOCK (G#=S_SCHDGATE);

    776  1 000013   000000 630400 2                  EPPR0   0
         1 000014   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000015   000000 701000 xent               TSX1    HFC$LOCK
         1 000016   000000 011000                    NOP     0

      395      778    1           IF P$->B$U.US = %SS_SQR THEN

    778  1 000017   200007 470500                    LDP0    P$,,AUTO
         1 000020   000011 236100                    LDQ     9,,PR0
         1 000021   770000 376003                    ANQ     -4096,DU
         1 000022   240000 116003                    CMPQ    81920,DU
         1 000023   000031 601000 1                  TNZ     s:781

      396      779    1              TSTATE=R(P$->B$U.PRIO);

    779  1 000024   000011 220100                    LDX0    9,,PR0
         1 000025   000077 360003                    ANX0    63,DU
         1 000026   000031 236010 0                  LDQ     R,X0
         1 000027   200007 756100                    STQ     P$,,AUTO
         1 000030   000035 710000 1                  TRA     s:782

      397      780    1           ELSE
      398      781    1              TSTATE=S(P$->B$U.US);
PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:88   

    781  1 000031   000011 236100                    LDQ     9,,PR0
         1 000032   000036 772000                    QRL     30
         1 000033   000000 236006 0                  LDQ     S,QL
         1 000034   200007 756100                    STQ     P$,,AUTO

      399      782    1           STATE=TSTATE;

    782  1 000035   200004 470500                    LDP0    @STATE,,AUTO
         1 000036   040100 100500                    MLR     fill='040'O
         1 000037   200007 000004                    ADSC9   P$,,AUTO                 cn=0,n=4
         1 000040   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      400      783                %UNLOCK (G#=S_SCHDGATE);

    784  1 000041   000000 630400 2                  EPPR0   0
         1 000042   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000043   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000044   000000 011000                    NOP     0

      401      786    1           RETURN;

    786  1 000045   000000 702200 xent               TSX2  ! X66_ARET

      402      787        /*                                                                    */
      403      788        /*         RETURN USER STATE NUMBER SERVICE                           */
      404      789        /*                                                                    */
      405      790    1   SSC$STATE: ENTRY;

    790  1 000046   000000 700200 xent  SSC$STATE    TSX0  ! X66_AUTO_2
         1 000047   000012 000002                    ZERO    10,2

      406      791    1           SID=B$PS0$->FPT$STATE_V.SYSID;

    791  1 000050   000000 470400 xsym               LDP0    B$PS0$
         1 000051   000000 720100                    LXL0    0,,PR0
         1 000052   200006 740100                    STX0    SID,,AUTO
PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:89   

      407      792    1           CALL OCZ$SID_UN (SID,U) ALTRET(NOONE);

    792  1 000053   200005 631500                    EPPR1   U,,AUTO
         1 000054   200011 451500                    STP1    P$+2,,AUTO
         1 000055   200006 633500                    EPPR3   SID,,AUTO
         1 000056   200010 453500                    STP3    P$+1,,AUTO
         1 000057   200010 630500                    EPPR0   P$+1,,AUTO
         1 000060   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000061   000000 701000 xent               TSX1    OCZ$SID_UN
         1 000062   000064 702000 1                  TSX2    NOONE

      408      793    2           DO WHILE ('0'B);

    793  1 000063   000065 710000 1                  TRA     s:796

      409      794    2   NOONE:     U=0;

    794  1 000064   200005 450100       NOONE        STZ     U,,AUTO

      410      795    2           END;

      411      796    1           P$=ADDR(B$USRT$->B$USER(U));

    796  1 000065   200005 236100                    LDQ     U,,AUTO
         1 000066   000026 736000                    QLS     22
         1 000067   000000 036000 xsym               ADLQ    B$USRT$
         1 000070   200007 756100                    STQ     P$,,AUTO

      412      797    1           B$PS1$->VLR(0)=P$->B$U.US;

    797  1 000071   200007 470500                    LDP0    P$,,AUTO
         1 000072   000000 471400 xsym               LDP1    B$PS1$
         1 000073   000011 236100                    LDQ     9,,PR0
         1 000074   000036 772000                    QRL     30
         1 000075   100000 756100                    STQ     0,,PR1

PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:90   
      413      798    1           IF B$PS1$->VLR(0) = %SS_SQR THEN

    798  1 000076   000024 116007                    CMPQ    20,DL
         1 000077   000105 601000 1                  TNZ     s:801

      414      799    1              B$PS1$->C(1)=R(P$->B$U.PRIO);

    799  1 000100   000011 220100                    LDX0    9,,PR0
         1 000101   000077 360003                    ANX0    63,DU
         1 000102   000031 236010 0                  LDQ     R,X0
         1 000103   100001 756100                    STQ     1,,PR1
         1 000104   000110 710000 1                  TRA     s:802

      415      800    1           ELSE
      416      801    1              B$PS1$->C(1)=S(B$PS1$->VLR(0));

    801  1 000105   100000 720100                    LXL0    0,,PR1
         1 000106   000000 236010 0                  LDQ     S,X0
         1 000107   100001 756100                    STQ     1,,PR1

      417      802    1           B$PS1$->VLR(2)=P$->B$U.MRT;

    802  1 000110   000004 235100                    LDA     4,,PR0
         1 000111   100002 755100                    STA     2,,PR1

      418      803    1           B$PS1$->VLR(3)=P$->B$U.UTSUSED;

    803  1 000112   000005 235100                    LDA     5,,PR0
         1 000113   100003 755100                    STA     3,,PR1

      419      804    1           RETURN;

    804  1 000114   000000 702200 xent               TSX2  ! X66_ARET

S
 Sect OctLoc
   0     000   040040 040040   123103 061040   123103 062040   123103 063040        SC1 SC2 SC3
PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:91   
   0     004   123103 064040   123103 065040   123103 066040   123103 067040    SC4 SC5 SC6 SC7
   0     010   123103 070040   123103 071040   123103 061060   123103 061061    SC8 SC9 SC10SC11
   0     014   123103 125040   123103 117102   123111 117127   123111 117103    SCU SCOBSIOWSIOC
   0     020   123115 106040   123127 040040   123104 123103   123121 101040    SMF SW  SDSCSQA
   0     024   123121 122040   123124 111040   123121 103040   123103 127040    SQR STI SQC SCW
   0     030   123116 125114                                                    SNUL

R
 Sect OctLoc
   0     031   121122 103121   121122 115115   121122 116121   121122 111117    QRCQQRMMQRNQQRIO
   0     035   121122 101120   123121 122065                                    QRAPSQR5

(unnamed)
 Sect OctLoc
   2     000   000000 006000                                                    ....
      420      805    1   END;
      421      806        %EOD;

PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:92   
--  Include file information  --

   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   UM$CP6V_C.:E05TOU  is referenced.
      No diagnostics issued in procedure SSC$TSTATE.
PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:93   

 **** Variables and constants ****

  ****  Section 000 RoData SSC$TSTATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    31-0-0/c CHAR(4)     r     1 R(0:5)                     0-0-0/c CHAR(4)     r     1 S(0:24)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @STATE                     3-0-0/w PTR         r     1 @USER
     7-0-0/w PTR         r     1 P$                         6-0-0/w UBIN(18)    r     1 SID
    *0-0-0/c CHAR(4)     r     1 STATE                      7-0-0/w CHAR(4)     r     1 TSTATE
     5-0-0/w UBIN        r     1 U                         *0-0-0/c UBIN(9)     r     1 USER

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$PS0$                     0-0-0/w PTR         r     1 B$PS1$
     0-0-0/w PTR         r     1 B$USRT$                    0-0-0/b BIT (72)    r     1 S_SCHDGATE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(576)   r     1 B$U                        0-0-0/w STRC(576)   r     1 B$USER(0:0)
     0-0-0/w CHAR(4)     r     1 C(0:3)                     0-0-0/d STRC(72)    r     1 FPT$STATE_V
     0-0-0/w UBIN        r     1 VLR(0:3)

PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:94   

   Procedure SSC$TSTATE requires 77 words for executable code.
   Procedure SSC$TSTATE requires 10 words of local(AUTO) storage.
PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:95   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:96   
          MINI XREF LISTING

B$DO.ECCINFO
       347**DCL       348--REDEF
B$PS0$
       722**DCL       791>>ASSIGN
B$PS1$
       723**DCL       797>>ASSIGN    798>>IF        799>>ASSIGN    801>>ASSIGN    801>>ASSIGN    802>>ASSIGN
       803>>ASSIGN
B$U.MISC
       326**DCL       327--REDEF
B$U.MRT
       300**DCL       802>>ASSIGN
B$U.PRIO
       315**DCL       779>>ASSIGN    799>>ASSIGN
B$U.US
       313**DCL       778>>IF        781>>ASSIGN    797>>ASSIGN
B$U.UTSUSED
       301**DCL       803>>ASSIGN
B$USER
       371**DCL       774--ASSIGN    796--ASSIGN
B$USER.MISC
       402**DCL       403--REDEF
B$USRT$
       414**DCL       774>>ASSIGN    796>>ASSIGN
C
       715**DCL       799<<ASSIGN    801<<ASSIGN
FPT$STATE_V.SYSID
       707**DCL       791>>ASSIGN
HFC$LOCK
       429**DCL-ENT   776--CALL
HFC$UNLOCK
       429**DCL-ENT   784--CALL
NOONE
PL6.E3A0      #004=SSC$TSTATE File=SSC$SCHD.:E05TSI                              WED 07/30/97 05:56 Page:97   
       794**LABEL     792--CALLALT
OCZ$SID_UN
       712**DCL-ENT   792--CALL
P$
       720**DCL       721--REDEF     774<<ASSIGN    778>>IF        779>>ASSIGN    781>>ASSIGN    796<<ASSIGN
       797>>ASSIGN    799>>ASSIGN    802>>ASSIGN    803>>ASSIGN
R
       762**DCL       779>>ASSIGN    799>>ASSIGN
S
       730**DCL       781>>ASSIGN    801>>ASSIGN
SID
       717**DCL       791<<ASSIGN    792<>CALL
STATE
       711**DCL         7--PROC      782<<ASSIGN
S_SCHDGATE
       704**DCL       776<>CALL      784<>CALL
TSTATE
       721**DCL       779<<ASSIGN    781<<ASSIGN    782>>ASSIGN
U
       716**DCL       792<>CALL      794<<ASSIGN    796>>ASSIGN
USER
       710**DCL         7--PROC      774>>ASSIGN
VLR
       714**DCL       797<<ASSIGN    798>>IF        801>>ASSIGN    802<<ASSIGN    803<<ASSIGN

PL6.E3A0      #005=SSC$HWMON File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:57 Page:98   
      422        1        /*T***********************************************************/
      423        2        /*T*                                                         */
      424        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      425        4        /*T*                                                         */
      426        5        /*T***********************************************************/
      427        6        /*    PROCEDURE TO CHECK IF USER ASSOCIATED WITH PROCESSOR BEING MONITORED*/
      428        7        SSC$HWMON: PROC ALTRET;
      429        8        /*                                                                    */
      430        9        %INCLUDE SS_SCHED_R;
      431       52        %INCLUDE B$USER;
      432      268        %B$USERREFS;
      433      272        /*                                                                    */
      434      273    1           IF S$CU$->B$U.ACP = S_C10PR THEN ALTRETURN;
      435      274    1           IF S$CU$->B$U.APR = S_C10PR THEN ALTRETURN;
      436      275    1           IF S$CU$->B$U.DB = S_C10PR THEN ALTRETURN;
      437      276    1           IF S$CU$->B$U.ASL = S_C10PR THEN ALTRETURN;
      438      277    1           IF S$CU$->B$U.ASP = S_C10PR THEN ALTRETURN;
      439      278    1           RETURN;
      440      279    1   END;

PL6.E3A0      #005=SSC$HWMON File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:57 Page:99   
--  Include file information  --

   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSC$HWMON.

   Procedure SSC$HWMON requires 32 words for executable code.
   Procedure SSC$HWMON requires 4 words of local(AUTO) storage.

    No errors detected in file SSC$SCHD.:E05TSI    .

PL6.E3A0      #005=SSC$HWMON File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:57 Page:100  

 Object Unit name= SSC$HWMON                                  File name= SSC$SCHD.:E05TOU
 UTS= JUL 30 '97 05:57:04.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    32     40  SSC$HWMON

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  SSC$HWMON

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     S_C10PR                               S$CU$
PL6.E3A0      #005=SSC$HWMON File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:57 Page:101  


      422        1        /*T***********************************************************/
      423        2        /*T*                                                         */
      424        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      425        4        /*T*                                                         */
      426        5        /*T***********************************************************/
      427        6        /*    PROCEDURE TO CHECK IF USER ASSOCIATED WITH PROCESSOR BEING MONITORED*/
      428        7        SSC$HWMON: PROC ALTRET;

      7  0 000000   000000 700200 xent  SSC$HWMON    TSX0  ! X66_AUTO_0
         0 000001   000004 000000                    ZERO    4,0

      429        8        /*                                                                    */
      430        9        %INCLUDE SS_SCHED_R;
      431       52        %INCLUDE B$USER;
      432      268        %B$USERREFS;
      433      272        /*                                                                    */
      434      273    1           IF S$CU$->B$U.ACP = S_C10PR THEN ALTRETURN;

    273  0 000002   000000 470400 xsym               LDP0    S$CU$
         0 000003   000006 236100                    LDQ     6,,PR0
         0 000004   000022 772000                    QRL     18
         0 000005   000777 376007                    ANQ     511,DL
         0 000006   000000 116000 xsym               CMPQ    S_C10PR
         0 000007   000011 601000 0                  TNZ     s:274

    273  0 000010   000000 702200 xent               TSX2  ! X66_AALT

      435      274    1           IF S$CU$->B$U.APR = S_C10PR THEN ALTRETURN;

    274  0 000011   000007 236100                    LDQ     7,,PR0
         0 000012   000030 772000                    QRL     24
         0 000013   000000 116000 xsym               CMPQ    S_C10PR
         0 000014   000016 601000 0                  TNZ     s:275

    274  0 000015   000000 702200 xent               TSX2  ! X66_AALT

PL6.E3A0      #005=SSC$HWMON File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:57 Page:102  
      436      275    1           IF S$CU$->B$U.DB = S_C10PR THEN ALTRETURN;

    275  0 000016   000006 236100                    LDQ     6,,PR0
         0 000017   000011 772000                    QRL     9
         0 000020   000777 376007                    ANQ     511,DL
         0 000021   000000 116000 xsym               CMPQ    S_C10PR
         0 000022   000024 601000 0                  TNZ     s:276

    275  0 000023   000000 702200 xent               TSX2  ! X66_AALT

      437      276    1           IF S$CU$->B$U.ASL = S_C10PR THEN ALTRETURN;

    276  0 000024   000006 236100                    LDQ     6,,PR0
         0 000025   000777 376007                    ANQ     511,DL
         0 000026   000000 116000 xsym               CMPQ    S_C10PR
         0 000027   000031 601000 0                  TNZ     s:277

    276  0 000030   000000 702200 xent               TSX2  ! X66_AALT

      438      277    1           IF S$CU$->B$U.ASP = S_C10PR THEN ALTRETURN;

    277  0 000031   000007 236100                    LDQ     7,,PR0
         0 000032   000006 772000                    QRL     6
         0 000033   000077 376007                    ANQ     63,DL
         0 000034   000000 116000 xsym               CMPQ    S_C10PR
         0 000035   000037 601000 0                  TNZ     s:278

    277  0 000036   000000 702200 xent               TSX2  ! X66_AALT

      439      278    1           RETURN;

    278  0 000037   000000 702200 xent               TSX2  ! X66_ARET
      440      279    1   END;

PL6.E3A0      #005=SSC$HWMON File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:57 Page:103  
--  Include file information  --

   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSC$HWMON.
PL6.E3A0      #005=SSC$HWMON File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:57 Page:104  

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 S$CU$                      0-0-0/w UBIN        r     1 S_C10PR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(576)   r     1 B$U


   Procedure SSC$HWMON requires 32 words for executable code.
   Procedure SSC$HWMON requires 4 words of local(AUTO) storage.

    No errors detected in file SSC$SCHD.:E05TSI    .
PL6.E3A0      #005=SSC$HWMON File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:57 Page:105  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=SSC$HWMON File=SSC$SCHD.:E05TSI                               WED 07/30/97 05:57 Page:106  
          MINI XREF LISTING

B$DO.ECCINFO
       203**DCL       204--REDEF
B$U.ACP
       159**DCL       273>>IF
B$U.APR
       162**DCL       274>>IF
B$U.ASL
       161**DCL       276>>IF
B$U.ASP
       164**DCL       277>>IF
B$U.DB
       160**DCL       275>>IF
B$U.MISC
       182**DCL       183--REDEF
B$USER.MISC
       258**DCL       259--REDEF
S$CU$
       269**DCL       273>>IF        274>>IF        275>>IF        276>>IF        277>>IF
S_C10PR
        51**DCL       273>>IF        274>>IF        275>>IF        276>>IF        277>>IF
