VERSION E05

 11:15 07/29/97  FILE=CPA$ENTRY.:E05TSI                                                                  1    BMAP - B00     
                                         1  *M*  CPA$ENTRY - IBEX entry routine
                                         2  *T***********************************************************
                                         3  *T*                                                         *
                                         4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                         5  *T*                                                         *
                                         6  *T***********************************************************
                                         7  *F*  NAME: CPA$ENTRY
                                         8  *    PURPOSE: Contains IBEX's start address; upon entry
                                         9  *    either calls X66_MSTATIC to establish PL-6 AUTO stack or
                                        10  *    loads AUTO pointer to make existing stack look empty.
                                        11  *
 0 000000                               12           USE      CPA$ENTRY,1
             000000000002               13  AUTO     EQU      2
             000000000000               14  PR0      EQU      0
             000000000001               15  PR1      EQU      1
                                        16           ENTDEF   CPA$ENTRY
                                        17           SEGREF   AUTOSID
                                        18           SEGREF   JITSID
                                        19           SYMREF   SEG2$
                                        20           ENTREF   X66_MSTATIC
                                        21           ENTREF   CPA$IBEX
                                        22           ENTREF   CPA$INIT
                                        23  *
          (0)000000000000               24  CPA$ENTRY EQU     *
                                        25           INHIB    ON
   000000    004010 6342 07             26           LDI      =O4010,DL         SET HEX / OVRFL MASK
   000001  X 000000 4716 07             27           LDP1     AUTOSID,DL
   000002  X 000000 4706 07             28           LDP0     JITSID,DL
   000003    0 00000 2373 00            29           LDAQ     0,,PR0            SAVE FIRST 2 WORDS OF JIT
   000004    0 00000 0517 00            30           STD1     0,,PR0            STORE AUTO DESCRIPTOR
   000005    0 00000 7213 00            31           LXL1     0,,PR0            LOAD FLAGS
   000006    0 00000 7573 00            32           STAQ     0,,PR0            RESTORE JIT
   000007    100600 3612 03             33           ANX1     =O100600,DU       TEST READ,NOTEMPTY,PRESENT
   000010    100600 6612 03             34           ERX1     =O100600,DU
   000011 (0)000020 6002 00             35           TZE      NOTFIRST          YES, ALL SET, ASSUME VALID DESC
   000012  X 000000 7002 00             36           TSX0     X66_MSTATIC             SET UP FOR FIRST TIME
   000013    000000 000000              37           ZERO     0
 11:15 07/29/97  FILE=CPA$ENTRY.:E05TSI                                                                  2    BMAP - B00     
                                        38  *
                                        39  *    Call CPA$INIT to get and initialize SEG$2
                                        40  *    Also gets TRAP and BREAK control
                                        41  *
   000014    000000 6316 00             42           EPPR1    0
   000015  X 000000 7012 00             43           TSX1     CPA$INIT
   000016    000000 0112 00             44           NOP      0
                                        45  *
                                        46  *    Now call the IBEX driver ...
                                        47  *
   000017  X 000000 7102 00             48           TRA      CPA$IBEX          Go to IBEX. Get SEG$2
                                        49  *
                                        50  *    Already have the data segments, validate that SEG$2.LLDCB# is valid
                                        51  *
          (0)000000000020               52  NOTFIRST EQU      *
   000020  X 000000 4726 07             53           LDP      AUTO,AUTOSID,DL         POINT TO BASE OF AUTO
   000021    777773 2202 03             54           LDX0     -5,DU
   000022    2 00000 4403 00            55           SXL0     0,,AUTO                 SET CURR FRAME OFFSET
   000023    2 00004 5077 00            56           AWD      4,,AUTO                 POINT TO FIRST FRAME
   000024  X 000000 4706 00             57           LDP0     SEG2$                   POINT TO IBEX "STATIC"
   000025    0 00000 7203 00            58           LXL0     0,,PR0                  GET SEG$2.LLDCB#
   000026  X 000000 6002 00             59           TZE      CPA$IBEX                0 - OK, SO GOTO IBEX
   000027    013563 4716 07             60           LDP1     =06003,DL               VALIDATE LLDCB#, GET ROSEG$
   000030    1 00002 1003 00            61           CMPX0    2,,PR1                  COMPARE AGAINST ROSEG.NUMDCBS
   000031 (0)000045 6056 00             62           TPNZ     NOT_M$LL
   000032    1 00000 4717 00            63           LDP1     0,,PR1                  ROSEG.DCBPTRS$
   000033    1 00000 2363 10            64           LDQ      0,X0,PR1                LLDCB# POINTER
   000034    013576 1162 07             65           CMPQ     =06014,DL
   000035 (0)000045 6002 00             66           TZE      NOT_M$LL
   000036    1 00000 4717 10            67           LDP1     0,X0,PR1                LLDCB# POINTER
   000037    1 00214 2353 00            68           LDA      =0140,,PR1              F$DCB.DCBNAME
   000040    1 00215 2363 00            69           LDQ      =0141,,PR1
   000041 (0)000052 3772 00             70           ANAQ     M$LL_MASK
   000042 (0)000054 1172 00             71           CMPAQ    M$LL_CHECK              CHECK DCBNAME = M$LL
   000043 (0)000045 6012 00             72           TNZ      NOT_M$LL
   000044  X 000000 7102 00             73           TRA      CPA$IBEX          GO TO IBEX
                                        74  *
 11:15 07/29/97  FILE=CPA$ENTRY.:E05TSI                                                                  3    BMAP - B00     
                                        75  *    SEG$2.LLDCB# is invalid, so we need to clear it.
                                        76  *
          (0)000000000045               77  NOT_M$LL EQU      *
   000045    0 00000 2353 00            78           LDA      0,,PR0
   000046    777773 3752 03             79           ANA      =O777773,DU             CLEAR LLDCB# AND IBEX_OWNS_M$LL
   000047    0 00000 7553 00            80           STA      0,,PR0
   000050  X 000000 7102 00             81           TRA      CPA$IBEX          GO TO IBEX
                                        82  *
   000051    000000 0112 00             83           EVEN
   000052
   000052    777777777777               84  M$LL_MASK   OCT   777777777777,777000000000
   000053    777000000000
   000054    004115044144               85  M$LL_CHECK  OCT   004115044144,144000000000
   000055    144000000000
          (0)000000                     86           END      CPA$ENTRY

  CONTROL SECTION TABLE

   0 CODE   EVEN  000056 CPA$ENTRY
   1 RODATA EVEN  000000 LITERALS

 11:15 07/29/97  FILE=CPA$ENTRY.:E05TSI       SYMBOL TABLE                                               4    BMAP - B00     
 41000000 000000000002 AUTO           *13        53        55        56
 03601000 000000000000 AUTOSID        *17        27        53
 53101000 000000000000 CPA$ENTRY       16       *24        86
 03201001 000000000000 CPA$IBEX       *21        48        59        73        81
 03201002 000000000000 CPA$INIT       *22        43
 03601001 000000000000 JITSID         *18        28
 01101000 000000000054 M$LL_CHECK      71       *85
 01101000 000000000052 M$LL_MASK       70       *84
 41101000 000000000020 NOTFIRST        35       *52
 41101000 000000000045 NOT_M$LL        62        66        72       *77
 41000000 000000000000 PR0            *14        29        30        31        32        58        78
                                       80
 41000000 000000000001 PR1            *15        61        63        64        67        68        69
 03301000 000000000000 SEG2$          *19        57
 03201000 000000000000 X66_MSTATIC    *20        36

      14 SYMBOLS

       0 MACROS

    SYMBOL SPACE USED   206 WORDS
     MACRO SPACE USED     0 WORDS
   INPUT RECORDS READ   172
 STATEMENTS PROCESSED    71
         ELAPSED TIME  0:01.04
             CPU TIME     0.71 SEC.
        ASSEMBLY RATE  6000 STATEMENTS/CPU MIN.

      NO ERRORS

