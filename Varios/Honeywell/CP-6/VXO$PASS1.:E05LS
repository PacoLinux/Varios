VERSION E05

PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:1    
        1        1        /*M*  VXO$PASS1  -  driver module for pass 1 of LINK.     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CCC      */
        8        8
        9        9        VXO$PASS1: PROC;
       10       10        /*
       11       11                              Include files
       12       12        */
       13       13        %INCLUDE VX_SUBS_C;
       14      231        %INCLUDE VX_MACRO_C;
       15     1368        %INCLUDE B$OBJECT_C;
       16     4798        %INCLUDE VX_DATA_R;
       17     6417        %VX$NODE;

              6429    1   /*******************************************************************************
              6430    1   *                                                                              *
              6431    1   *                          VX$NODE                                                 *
              6432    1   *                                                                              *
              6433    1   *******************************************************************************/

              6449    1   DCL 1 VX$NODE      ALIGNED    BASED,
              6450    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
              6451    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
              6452    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
              6453    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
              6454    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
              6455                              to list of file nodes for this node            */
              6456    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
              6457    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
              6457                  /* Head pointer to shared library list */
              6458    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
              6458                  /* Head pointer to list of shared libraries
              6459                                          which have been mapped to included libraries */
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:2    
              6460    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
              6461    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
              6462    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
              6463    1         2 ADDR_START REDEF  ADDR_START_A,
              6464    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
              6465    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
              6466    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
              6467    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
              6468    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
              6469    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
              6470    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
              6471    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
              6472    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
              6473    1         2 START_PAGE# REDEF START_PAGE#_A,
              6474    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
              6475    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
              6476    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
              6477    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
              6478    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
              6479    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
              6480    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
              6481    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
              6482    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
              6482                  /* Starting pointer for common sections for this node */
              6483    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
              6483                  /* Stopping pointer for common sections for this node */
              6484    1         2 L_START,
              6485    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
              6486    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
              6487    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
              6488    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
              6489    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
              6490    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
              6491    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
              6492    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
              6493    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
              6494    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:3    
              6495    1         2 L_START_A$(0:9)     REDEF L_START PTR,
              6496    1         2 L_STOP,
              6497    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
              6498    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
              6499    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
              6500    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
              6501    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
              6502    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
              6503    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
              6504    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
              6505    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
              6506    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
              6507    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
              6508    1         2 L_SIZE,
              6509    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
              6510    1           3 DN      UBIN /*(0)*/, /* Def names                          */
              6511    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
              6512    1           3 SC      UBIN /*(0)*/, /* Sections                           */
              6513    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
              6514    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
              6515    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
              6516    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
              6517    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
              6518    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
              6519    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
              6520    1         2 L_PREV_SIZE,
              6521    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
              6522    1           3 DN      UBIN /*(0)*/, /* Def names                          */
              6523    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
              6524    1           3 SC      UBIN /*(0)*/, /* Sections                           */
              6525    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
              6526    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
              6527    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
              6528    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
              6529    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
              6530    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
              6531    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:4    
              6532    1         2 BIT_MAP                ALIGNED,
              6533    1           3 DATA                  ALIGNED,
              6534    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
              6535    1           3 RPROC                 ALIGNED,
              6536    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
              6537    1           3 ROS                   ALIGNED,
              6538    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
              6539    1         2 L_SC_START,
              6540    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
              6541    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
              6542    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
              6543    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
              6544    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
              6545    1         2 L_SC_STOP,
              6546    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
              6547    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
              6548    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
              6549    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
              6550    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
              6551    1         2 PROMOTE_HEAD,
              6552    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
              6553    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
              6554    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
              6555    1         2 PROMOTE_TAIL,
              6556    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
              6557    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
              6558    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
              6559    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
              6560    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
              6561    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
              6562    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
              6563    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       18     6567        %VX$LST;

              6580    1   /*******************************************************************************
              6581    1   *                                                                              *
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:5    
              6582    1   *                          VX$LST                                                 *
              6583    1   *                                                                              *
              6584    1   *******************************************************************************/

              6589    1   DCL 1 VX$LST                          ALIGNED BASED,
              6590    1         2 LINK$        PTR,               /* Link to next item                  */
              6591    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
              6592    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
              6593    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
              6594    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
              6595    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
              6596    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
              6597    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
              6598    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
              6599    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
              6600    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
              6601    1         2 P,
              6602    1           3 NAME_       ALIGNED,
              6603    1             4 BOUND      UBIN(20)  UNAL,
              6604    1             4 FLAGSV     UBIN(11)  UNAL,
              6605    1             4 *          BIT(5)    UNAL,
              6606    1             4 NAME$      PTR,
              6607    1           3 ACCT_       ALIGNED,
              6608    1             4 BOUND      UBIN(20)  UNAL,
              6609    1             4 FLAGSV     UBIN(11)  UNAL,
              6610    1             4 *          BIT(5)    UNAL,
              6611    1             4 ACCT$      PTR,
              6612    1           3 PASS_       ALIGNED,
              6613    1             4 BOUND      UBIN(20)  UNAL,
              6614    1             4 FLAGSV     UBIN(11)  UNAL,
              6615    1             4 *          BIT(5)    UNAL,
              6616    1             4 PASS$      PTR,
              6617    1           3 SN_         ALIGNED,
              6618    1             4 BOUND      UBIN(20)  UNAL,
              6619    1             4 FLAGSV     UBIN(11)  UNAL,
              6620    1             4 *          BIT(5)    UNAL,
              6621    1             4 SN$        PTR,
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:6    
              6622    1           3 WSN_        ALIGNED,
              6623    1             4 BOUND      UBIN(20)  UNAL,
              6624    1             4 FLAGSV     UBIN(11)  UNAL,
              6625    1             4 *          BIT(5)    UNAL,
              6626    1             4 WSN$       PTR,
              6627    1           3 B           ALIGNED,
              6628    1             4 RES        BIT(1)    UNAL,
              6629    1             4 ASN        BIT(1)    UNAL,
              6630    1             4 ACCT       BIT(1)    UNAL,
              6631    1             4 *          BIT(33)   UNAL,
              6632    1           3 RES         CHAR(4)   ALIGNED,
              6633    1           3 ASN         UBIN(36)  ALIGNED;
       19     6636        %T$C;

              6648    1   /*******************************************************************************
              6649    1   *                                                                              *
              6650    1   *                          T$C                                                 *
              6651    1   *                                                                              *
              6652    1   *******************************************************************************/

              6657    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
              6658    1         2 COUNT        UBIN( 9) UNAL,
              6659    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
              6660    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
              6661    1         2 COUNT        UBIN( 9) UNAL,
              6662    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       20     6665        %SET LISTMAC='1'B;
       21     6666        %SET LISTDIR='0'B;

              6675    1   /*******************************************************************************
              6676    1   *                                                                              *
              6677    1   *                          ENTRY                                                 *
              6678    1   *                                                                              *
              6679    1   *******************************************************************************/

              6684    1   DCL VXE$ERROR       ENTRY(4);
              6685    1   DCL VXE$ERR         ENTRY(3);
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:7    
              6686    1   DCL VXE$MERC        ENTRY;
              6687    1   DCL VXE$ERRMSG      ENTRY(3);
              6688    1   DCL VXR$READ        ENTRY( 3 );
              6689    1   DCL VXW$WRITE       ENTRY( 3 );
              6690    1   DCL VXW$WRITE_DO    ENTRY( 2 );
              6691    1   DCL VXD$B2C         ENTRY( 5 );
              6692    1   DCL VXD$C2B         ENTRY( 3 );
              6693    1   DCL VXA$GET         ENTRY( 3 );
              6694    1   DCL VXF$FREE        ENTRY( 3 );
              6695    1   DCL VXQ$SORT        ENTRY( 7 );
              6696    1   DCL VXY$YESNO       ENTRY( 1 );
       24     6698    1   DCL VXF$OPEN             ENTRY(3) ALTRET;
       25     6699    1   DCL VXO$PROC             ENTRY;
       26     6700    1   DCL VXO$PATCH            ENTRY;
       27     6701    1   DCL VXO$SPC              ENTRY;
       28     6702    1   DCL VXO$SATREF           ENTRY;
       29     6703    1   DCL VXO$CHKSET           ENTRY;
       30     6704    1   DCL VXO$DUPCHK           ENTRY;
       31     6705    1   DCL VXU$BUILD_VECTOR     ENTRY;

              6714    1   /*******************************************************************************
              6715    1   *                                                                              *
              6716    1   *                          UBIN                                                 *
              6717    1   *                                                                              *
              6718    1   *******************************************************************************/

              6723    1   DCL I          UBIN(36) ALIGNED AUTO;
              6724    1   DCL SI REDEF I SBIN WORD ALIGNED;
              6725    1   DCL J          UBIN(36) ALIGNED AUTO;
              6726    1   DCL SJ REDEF J SBIN WORD ALIGNED;
              6727    1   DCL K          UBIN(36) ALIGNED AUTO;
              6728    1   DCL SK REDEF K SBIN WORD ALIGNED;
              6729    1   DCL L          UBIN(36) ALIGNED AUTO;
              6730    1   DCL SL REDEF L    SBIN WORD ALIGNED;

PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:8    
       35     6733    1         VX_PASS = 1;
       36     6734    1         VX_STATE# = @LINKING;
       37     6735    1         VX_PHRASE.I.PASS = '1';
       38     6736        /*
       39     6737                          Begin pass 1
       40     6738        */
       41     6739        /**/
       42     6740    1         VX_CURR$ = VX_ROOT$;
       43     6741    1   NEXT: ;                                 /* Establish node for current process */
       44     6742    2         IF VX_DO_PASS1 = 1 THEN DO;
       45     6743    2             CALL VXO$PROC;
       46     6744                                /* Account space for this node name for tree table */
       47     6745    2             IF VX_CURR$ -> VX$NODE.HEAD$ -> VX$LST.TYPE = @OF
       48     6746    2               AND  VX_CURR$ -> VX$NODE.HEAD$ -> VX$LST.SUB_TYPE = @OF_LIST
       49     6747    2             THEN
       50     6748    2                 VX_TREE_NAME_POOL = VX_TREE_NAME_POOL +
       51     6749    2                   ( VX_CURR$ -> VX$NODE.HEAD$ -> VX$LST.OBJECT_NAME$ ->
       52     6750    2                   T$C.COUNT - 1 + @CHAR_WORD ) / @CHAR_WORD;
       53     6751    2             ELSE
       54     6752    2                 VX_TREE_NAME_POOL = VX_TREE_NAME_POOL +
       55     6753    2                   ( VX_CURR$ -> VX$NODE.HEAD$ -> VX$LST.P.NAME_.NAME$ ->
       56     6754    2                   T$C.COUNT + @CHAR_WORD ) / @CHAR_WORD;
       57     6755    2             CALL VXO$SATREF;
       58     6756    3             IF VX_CURR$ = VX_ROOT$ THEN DO;
       59     6757    4                 IF VX_ROOT$->VX$NODE.SON$ ~=ADDR(NIL) THEN DO;
       60     6758    4                     IF NOT VX_OD.NUM.IPATCH AND NOT VX_OD.SIN.SYSTEM THEN
       61     6759    4                         VX_O.NUM.IPATCH = VX_O.NUM.IPATCH + 1000;
       62     6760    4                     IF NOT VX_OD.NUM.DPATCH AND NOT VX_OD.SIN.SYSTEM THEN
       63     6761    4                         VX_O.NUM.DPATCH = VX_O.NUM.DPATCH + 100;
       64     6762    4                    END;
       65     6763    3                 IF VX_O.NUM.IPATCH > 0 OR VX_O.NUM.DPATCH > 0 THEN CALL VXO$PATCH;
       66     6764    3                 CALL VXO$SPC;
       67     6765    3                END;
       68     6766    2            END;
       69     6767    1         CALL VXO$CHKSET;
       70     6768    1         IF VX_OD.VECTOR_ THEN CALL VXU$BUILD_VECTOR;
       71     6769    2         IF VX_CURR$ -> VX$NODE.SON$ ~= ADDR(NIL) THEN DO; /* Move to eldest son */
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:9    
       72     6770    2             VX_CURR$ = VX_CURR$ -> VX$NODE.SON$;
       73     6771    2            END;
       74     6772    2         ELSE DO;
       75     6773    2   CLIMB:
       76     6774    2             CALL VXO$DUPCHK;
       77     6775    3             IF VX_CURR$ -> VX$NODE.BROTHER$ ~= ADDR(NIL) THEN DO;
       78     6776    3                 VX_CURR$ = VX_CURR$ -> VX$NODE.BROTHER$; /* Move to a brother */
       79     6777    3                END;
       80     6778    3             ELSE DO;                      /* Move to an ancestor */
       81     6779    3                 VX_CURR$ = VX_CURR$ -> VX$NODE.FATHER$; /* Move up */
       82     6780    3                 IF VX_CURR$ = ADDR(NIL) THEN GOTO DONE; /* Check if done */
       83     6781    3                 GOTO CLIMB;
       84     6782    3                END;
       85     6783    2            END;
       86     6784    1         GOTO NEXT;
       87     6785    1   DONE: ;                             /* Thru traversing; do post for pass 1 */
       88     6786    1   END VXO$PASS1;

PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:10   
--  Include file information  --

   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VXO$PASS1.

   Procedure VXO$PASS1 requires 104 words for executable code.
   Procedure VXO$PASS1 requires 8 words of local(AUTO) storage.

    No errors detected in file VXO$PASS1.:E05TSI    .

PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:11   

 Object Unit name= VXO$PASS1                                  File name= VXO$PASS1.:E05TOU
 UTS= JUL 30 '97 08:28:38.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   104    150  VXO$PASS1

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  VXO$PASS1

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 VXO$PROC
         yes           Std       0 VXO$SATREF
         yes           Std       0 VXO$SPC
         yes           Std       0 VXU$BUILD_VECTOR
         yes           Std       0 VXO$PATCH
         yes           Std       0 VXO$CHKSET
         yes           Std       0 VXO$DUPCHK
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:12   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VX_OU_HEAD                            VX_TREE_NAME_POOL                     VX_PASS
     VX_DO_PASS1                           VX_ROOT$                              VX_CURR$
     VX_ERRORS                             VX_O                                  VX_PHRASE
     VX_OD                                 VX_STATE#                             B_VECTNIL
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:13   


        1        1        /*M*  VXO$PASS1  -  driver module for pass 1 of LINK.     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CCC      */
        8        8
        9        9        VXO$PASS1: PROC;

      9  0 000000   000000 700200 xent  VXO$PASS1    TSX0  ! X66_AUTO_0
         0 000001   000010 000000                    ZERO    8,0

       10       10        /*
       11       11                              Include files
       12       12        */
       13       13        %INCLUDE VX_SUBS_C;
       14      231        %INCLUDE VX_MACRO_C;
       15     1368        %INCLUDE B$OBJECT_C;
       16     4798        %INCLUDE VX_DATA_R;
       17     6417        %VX$NODE;

              6429    1   /*******************************************************************************
              6430    1   *                                                                              *
              6431    1   *                          VX$NODE                                                *
              6432    1   *                                                                              *
              6433    1   *******************************************************************************/

              6449    1   DCL 1 VX$NODE      ALIGNED    BASED,
              6450    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
              6451    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
              6452    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
              6453    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
              6454    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
              6455                              to list of file nodes for this node            */
              6456    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:14   
              6457    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
              6457                  /* Head pointer to shared library list */
              6458    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
              6458                  /* Head pointer to list of shared libraries
              6459                                          which have been mapped to included libraries */
              6460    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
              6461    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
              6462    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
              6463    1         2 ADDR_START REDEF  ADDR_START_A,
              6464    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
              6465    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
              6466    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
              6467    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
              6468    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
              6469    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
              6470    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
              6471    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
              6472    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
              6473    1         2 START_PAGE# REDEF START_PAGE#_A,
              6474    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
              6475    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
              6476    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
              6477    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
              6478    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
              6479    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
              6480    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
              6481    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
              6482    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
              6482                  /* Starting pointer for common sections for this node */
              6483    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
              6483                  /* Stopping pointer for common sections for this node */
              6484    1         2 L_START,
              6485    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
              6486    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
              6487    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
              6488    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
              6489    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:15   
              6490    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
              6491    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
              6492    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
              6493    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
              6494    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
              6495    1         2 L_START_A$(0:9)     REDEF L_START PTR,
              6496    1         2 L_STOP,
              6497    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
              6498    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
              6499    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
              6500    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
              6501    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
              6502    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
              6503    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
              6504    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
              6505    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
              6506    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
              6507    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
              6508    1         2 L_SIZE,
              6509    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
              6510    1           3 DN      UBIN /*(0)*/, /* Def names                          */
              6511    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
              6512    1           3 SC      UBIN /*(0)*/, /* Sections                           */
              6513    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
              6514    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
              6515    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
              6516    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
              6517    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
              6518    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
              6519    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
              6520    1         2 L_PREV_SIZE,
              6521    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
              6522    1           3 DN      UBIN /*(0)*/, /* Def names                          */
              6523    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
              6524    1           3 SC      UBIN /*(0)*/, /* Sections                           */
              6525    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
              6526    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:16   
              6527    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
              6528    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
              6529    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
              6530    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
              6531    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
              6532    1         2 BIT_MAP                ALIGNED,
              6533    1           3 DATA                  ALIGNED,
              6534    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
              6535    1           3 RPROC                 ALIGNED,
              6536    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
              6537    1           3 ROS                   ALIGNED,
              6538    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
              6539    1         2 L_SC_START,
              6540    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
              6541    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
              6542    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
              6543    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
              6544    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
              6545    1         2 L_SC_STOP,
              6546    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
              6547    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
              6548    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
              6549    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
              6550    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
              6551    1         2 PROMOTE_HEAD,
              6552    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
              6553    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
              6554    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
              6555    1         2 PROMOTE_TAIL,
              6556    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
              6557    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
              6558    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
              6559    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
              6560    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
              6561    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
              6562    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
              6563    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:17   

       18     6567        %VX$LST;

              6580    1   /*******************************************************************************
              6581    1   *                                                                              *
              6582    1   *                          VX$LST                                                 *
              6583    1   *                                                                              *
              6584    1   *******************************************************************************/

              6589    1   DCL 1 VX$LST                          ALIGNED BASED,
              6590    1         2 LINK$        PTR,               /* Link to next item                  */
              6591    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
              6592    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
              6593    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
              6594    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
              6595    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
              6596    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
              6597    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
              6598    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
              6599    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
              6600    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
              6601    1         2 P,
              6602    1           3 NAME_       ALIGNED,
              6603    1             4 BOUND      UBIN(20)  UNAL,
              6604    1             4 FLAGSV     UBIN(11)  UNAL,
              6605    1             4 *          BIT(5)    UNAL,
              6606    1             4 NAME$      PTR,
              6607    1           3 ACCT_       ALIGNED,
              6608    1             4 BOUND      UBIN(20)  UNAL,
              6609    1             4 FLAGSV     UBIN(11)  UNAL,
              6610    1             4 *          BIT(5)    UNAL,
              6611    1             4 ACCT$      PTR,
              6612    1           3 PASS_       ALIGNED,
              6613    1             4 BOUND      UBIN(20)  UNAL,
              6614    1             4 FLAGSV     UBIN(11)  UNAL,
              6615    1             4 *          BIT(5)    UNAL,
              6616    1             4 PASS$      PTR,
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:18   
              6617    1           3 SN_         ALIGNED,
              6618    1             4 BOUND      UBIN(20)  UNAL,
              6619    1             4 FLAGSV     UBIN(11)  UNAL,
              6620    1             4 *          BIT(5)    UNAL,
              6621    1             4 SN$        PTR,
              6622    1           3 WSN_        ALIGNED,
              6623    1             4 BOUND      UBIN(20)  UNAL,
              6624    1             4 FLAGSV     UBIN(11)  UNAL,
              6625    1             4 *          BIT(5)    UNAL,
              6626    1             4 WSN$       PTR,
              6627    1           3 B           ALIGNED,
              6628    1             4 RES        BIT(1)    UNAL,
              6629    1             4 ASN        BIT(1)    UNAL,
              6630    1             4 ACCT       BIT(1)    UNAL,
              6631    1             4 *          BIT(33)   UNAL,
              6632    1           3 RES         CHAR(4)   ALIGNED,
              6633    1           3 ASN         UBIN(36)  ALIGNED;
       19     6636        %T$C;

              6648    1   /*******************************************************************************
              6649    1   *                                                                              *
              6650    1   *                          T$C                                                 *
              6651    1   *                                                                              *
              6652    1   *******************************************************************************/

              6657    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
              6658    1         2 COUNT        UBIN( 9) UNAL,
              6659    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
              6660    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
              6661    1         2 COUNT        UBIN( 9) UNAL,
              6662    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       20     6665        %SET LISTMAC='1'B;
       21     6666        %SET LISTDIR='0'B;

              6675    1   /*******************************************************************************
              6676    1   *                                                                              *
              6677    1   *                          ENTRY                                                 *
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:19   
              6678    1   *                                                                              *
              6679    1   *******************************************************************************/

              6684    1   DCL VXE$ERROR       ENTRY(4);
              6685    1   DCL VXE$ERR         ENTRY(3);
              6686    1   DCL VXE$MERC        ENTRY;
              6687    1   DCL VXE$ERRMSG      ENTRY(3);
              6688    1   DCL VXR$READ        ENTRY( 3 );
              6689    1   DCL VXW$WRITE       ENTRY( 3 );
              6690    1   DCL VXW$WRITE_DO    ENTRY( 2 );
              6691    1   DCL VXD$B2C         ENTRY( 5 );
              6692    1   DCL VXD$C2B         ENTRY( 3 );
              6693    1   DCL VXA$GET         ENTRY( 3 );
              6694    1   DCL VXF$FREE        ENTRY( 3 );
              6695    1   DCL VXQ$SORT        ENTRY( 7 );
              6696    1   DCL VXY$YESNO       ENTRY( 1 );
       24     6698    1   DCL VXF$OPEN             ENTRY(3) ALTRET;
       25     6699    1   DCL VXO$PROC             ENTRY;
       26     6700    1   DCL VXO$PATCH            ENTRY;
       27     6701    1   DCL VXO$SPC              ENTRY;
       28     6702    1   DCL VXO$SATREF           ENTRY;
       29     6703    1   DCL VXO$CHKSET           ENTRY;
       30     6704    1   DCL VXO$DUPCHK           ENTRY;
       31     6705    1   DCL VXU$BUILD_VECTOR     ENTRY;

              6714    1   /*******************************************************************************
              6715    1   *                                                                              *
              6716    1   *                          UBIN                                                 *
              6717    1   *                                                                              *
              6718    1   *******************************************************************************/

              6723    1   DCL I          UBIN(36) ALIGNED AUTO;
              6724    1   DCL SI REDEF I SBIN WORD ALIGNED;
              6725    1   DCL J          UBIN(36) ALIGNED AUTO;
              6726    1   DCL SJ REDEF J SBIN WORD ALIGNED;
              6727    1   DCL K          UBIN(36) ALIGNED AUTO;
              6728    1   DCL SK REDEF K SBIN WORD ALIGNED;
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:20   
              6729    1   DCL L          UBIN(36) ALIGNED AUTO;
              6730    1   DCL SL REDEF L    SBIN WORD ALIGNED;

PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:21   
       35     6733    1         VX_PASS = 1;

   6733  0 000002   000001 235007                    LDA     1,DL
         0 000003   000000 755000 xsym               STA     VX_PASS

       36     6734    1         VX_STATE# = @LINKING;

   6734  0 000004   000000 755000 xsym               STA     VX_STATE#

       37     6735    1         VX_PHRASE.I.PASS = '1';

   6735  0 000005   061000 236003                    LDQ     25088,DU
         0 000006   000003 552040 xsym               STBQ    VX_PHRASE+3,'40'O

       38     6736        /*
       39     6737                          Begin pass 1
       40     6738        */
       41     6739        /**/
       42     6740    1         VX_CURR$ = VX_ROOT$;

   6740  0 000007   000000 236000 xsym               LDQ     VX_ROOT$
         0 000010   000000 756000 xsym               STQ     VX_CURR$

   6740  0 000011                       NEXT         null
       43     6741    1   NEXT: ;                                 /* Establish node for current process */
       44     6742    2         IF VX_DO_PASS1 = 1 THEN DO;

   6742  0 000011   000000 235000 xsym               LDA     VX_DO_PASS1
         0 000012   000001 115007                    CMPA    1,DL
         0 000013   000111 601000 0                  TNZ     s:6767

       45     6743    2             CALL VXO$PROC;

   6743  0 000014   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000015   000000 701000 xent               TSX1    VXO$PROC
         0 000016   000000 011000                    NOP     0

PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:22   
       46     6744                                /* Account space for this node name for tree table */
       47     6745    2             IF VX_CURR$ -> VX$NODE.HEAD$ -> VX$LST.TYPE = @OF

   6745  0 000017   000000 470400 xsym               LDP0    VX_CURR$
         0 000020   000004 471500                    LDP1    4,,PR0
         0 000021   100001 220100                    LDX0    1,,PR1
         0 000022   000036 601000 0                  TNZ     s:6752
         0 000023   100001 721100                    LXL1    1,,PR1
         0 000024   000001 101003                    CMPX1   1,DU
         0 000025   000036 601000 0                  TNZ     s:6752

       48     6746    2               AND  VX_CURR$ -> VX$NODE.HEAD$ -> VX$LST.SUB_TYPE = @OF_LIST
       49     6747    2             THEN
       50     6748    2                 VX_TREE_NAME_POOL = VX_TREE_NAME_POOL +

   6748  0 000026   100002 473500                    LDP3    2,,PR1
         0 000027   300000 236100                    LDQ     0,,PR3
         0 000030   000033 772000                    QRL     27
         0 000031   000003 036007                    ADLQ    3,DL
         0 000032   000002 772000                    QRL     2
         0 000033   000000 036000 xsym               ADLQ    VX_TREE_NAME_POOL
         0 000034   000000 756000 xsym               STQ     VX_TREE_NAME_POOL
         0 000035   000045 710000 0                  TRA     s:6755

       51     6749    2                   ( VX_CURR$ -> VX$NODE.HEAD$ -> VX$LST.OBJECT_NAME$ ->
       52     6750    2                   T$C.COUNT - 1 + @CHAR_WORD ) / @CHAR_WORD;
       53     6751    2             ELSE
       54     6752    2                 VX_TREE_NAME_POOL = VX_TREE_NAME_POOL +

   6752  0 000036   100006 473500                    LDP3    6,,PR1
         0 000037   300000 236100                    LDQ     0,,PR3
         0 000040   000033 772000                    QRL     27
         0 000041   000004 036007                    ADLQ    4,DL
         0 000042   000002 772000                    QRL     2
         0 000043   000000 036000 xsym               ADLQ    VX_TREE_NAME_POOL
         0 000044   000000 756000 xsym               STQ     VX_TREE_NAME_POOL

PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:23   
       55     6753    2                   ( VX_CURR$ -> VX$NODE.HEAD$ -> VX$LST.P.NAME_.NAME$ ->
       56     6754    2                   T$C.COUNT + @CHAR_WORD ) / @CHAR_WORD;
       57     6755    2             CALL VXO$SATREF;

   6755  0 000045   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000046   000000 701000 xent               TSX1    VXO$SATREF
         0 000047   000000 011000                    NOP     0

       58     6756    3             IF VX_CURR$ = VX_ROOT$ THEN DO;

   6756  0 000050   000000 236000 xsym               LDQ     VX_CURR$
         0 000051   000000 116000 xsym               CMPQ    VX_ROOT$
         0 000052   000111 601000 0                  TNZ     s:6767

       59     6757    4                 IF VX_ROOT$->VX$NODE.SON$ ~=ADDR(NIL) THEN DO;

   6757  0 000053   000000 470400 xsym               LDP0    VX_ROOT$
         0 000054   000000 236100                    LDQ     0,,PR0
         0 000055   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000056   000077 600000 0                  TZE     s:6763

       60     6758    4                     IF NOT VX_OD.NUM.IPATCH AND NOT VX_OD.SIN.SYSTEM THEN

   6758  0 000057   000001 236000 xsym               LDQ     VX_OD+1
         0 000060   100000 316003                    CANQ    32768,DU
         0 000061   000067 601000 0                  TNZ     s:6760
         0 000062   000000 236000 xsym               LDQ     VX_OD
         0 000063   000200 316003                    CANQ    128,DU
         0 000064   000067 601000 0                  TNZ     s:6760

       61     6759    4                         VX_O.NUM.IPATCH = VX_O.NUM.IPATCH + 1000;

   6759  0 000065   001750 236007                    LDQ     1000,DL
         0 000066   000046 056000 xsym               ASQ     VX_O+38

       62     6760    4                     IF NOT VX_OD.NUM.DPATCH AND NOT VX_OD.SIN.SYSTEM THEN

PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:24   
   6760  0 000067   000001 236000 xsym               LDQ     VX_OD+1
         0 000070   200000 316003                    CANQ    65536,DU
         0 000071   000077 601000 0                  TNZ     s:6763
         0 000072   000000 236000 xsym               LDQ     VX_OD
         0 000073   000200 316003                    CANQ    128,DU
         0 000074   000077 601000 0                  TNZ     s:6763

       63     6761    4                         VX_O.NUM.DPATCH = VX_O.NUM.DPATCH + 100;

   6761  0 000075   000144 236007                    LDQ     100,DL
         0 000076   000045 056000 xsym               ASQ     VX_O+37

       64     6762    4                    END;

       65     6763    3                 IF VX_O.NUM.IPATCH > 0 OR VX_O.NUM.DPATCH > 0 THEN CALL VXO$PATCH;

   6763  0 000077   000046 235000 xsym               LDA     VX_O+38
         0 000100   000103 605400 0                  TPNZ    s:6763+4
         0 000101   000045 236000 xsym               LDQ     VX_O+37
         0 000102   000106 604400 0                  TMOZ    s:6764

   6763  0 000103   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000104   000000 701000 xent               TSX1    VXO$PATCH
         0 000105   000000 011000                    NOP     0

       66     6764    3                 CALL VXO$SPC;

   6764  0 000106   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000107   000000 701000 xent               TSX1    VXO$SPC
         0 000110   000000 011000                    NOP     0

       67     6765    3                END;

       68     6766    2            END;

       69     6767    1         CALL VXO$CHKSET;

PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:25   
   6767  0 000111   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000112   000000 701000 xent               TSX1    VXO$CHKSET
         0 000113   000000 011000                    NOP     0

       70     6768    1         IF VX_OD.VECTOR_ THEN CALL VXU$BUILD_VECTOR;

   6768  0 000114   000002 236000 xsym               LDQ     VX_OD+2
         0 000115   000177 316007                    CANQ    127,DL
         0 000116   000122 600000 0                  TZE     s:6769

   6768  0 000117   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000120   000000 701000 xent               TSX1    VXU$BUILD_VECTOR
         0 000121   000000 011000                    NOP     0

       71     6769    2         IF VX_CURR$ -> VX$NODE.SON$ ~= ADDR(NIL) THEN DO; /* Move to eldest son */

   6769  0 000122   000000 470400 xsym               LDP0    VX_CURR$
         0 000123   000000 236100                    LDQ     0,,PR0
         0 000124   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000125   000130 600000 0                  TZE     CLIMB

       72     6770    2             VX_CURR$ = VX_CURR$ -> VX$NODE.SON$;

   6770  0 000126   000000 756000 xsym               STQ     VX_CURR$

       73     6771    2            END;

   6771  0 000127   000146 710000 0                  TRA     s:6784

       74     6772    2         ELSE DO;

       75     6773    2   CLIMB:
       76     6774    2             CALL VXO$DUPCHK;

   6774  0 000130   000002 631400 xsym  CLIMB        EPPR1   B_VECTNIL+2
         0 000131   000000 701000 xent               TSX1    VXO$DUPCHK
         0 000132   000000 011000                    NOP     0
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:26   

       77     6775    3             IF VX_CURR$ -> VX$NODE.BROTHER$ ~= ADDR(NIL) THEN DO;

   6775  0 000133   000000 470400 xsym               LDP0    VX_CURR$
         0 000134   000001 236100                    LDQ     1,,PR0
         0 000135   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000136   000141 600000 0                  TZE     s:6779

       78     6776    3                 VX_CURR$ = VX_CURR$ -> VX$NODE.BROTHER$; /* Move to a brother */

   6776  0 000137   000000 756000 xsym               STQ     VX_CURR$

       79     6777    3                END;

   6777  0 000140   000146 710000 0                  TRA     s:6784

       80     6778    3             ELSE DO;                      /* Move to an ancestor */

       81     6779    3                 VX_CURR$ = VX_CURR$ -> VX$NODE.FATHER$; /* Move up */

   6779  0 000141   000002 236100                    LDQ     2,,PR0
         0 000142   000000 756000 xsym               STQ     VX_CURR$

       82     6780    3                 IF VX_CURR$ = ADDR(NIL) THEN GOTO DONE; /* Check if done */

   6780  0 000143   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000144   000147 600000 0                  TZE     DONE

       83     6781    3                 GOTO CLIMB;

   6781  0 000145   000130 710000 0                  TRA     CLIMB

       84     6782    3                END;
       85     6783    2            END;
       86     6784    1         GOTO NEXT;

   6784  0 000146   000011 710000 0                  TRA     NEXT
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:27   

   6776  0 000147                       DONE         null
       87     6785    1   DONE: ;                             /* Thru traversing; do post for pass 1 */
       88     6786    1   END VXO$PASS1;

   6786  0 000147   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:28   
--  Include file information  --

   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VXO$PASS1.
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:29   

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 VX_CURR$                   0-0-0/w UBIN        r     1 VX_DO_PASS1
     0-0-0/w STRC(4572)  r     1 VX_O                       0-0-0/b STRC(116)   r     1 VX_OD
     0-0-0/w UBIN        r     1 VX_PASS                    0-0-0/c STRC(216)   r     1 VX_PHRASE
     0-0-0/w PTR         r     1 VX_ROOT$                   0-0-0/w UBIN        r     1 VX_STATE#
     0-0-0/w UBIN        r     1 VX_TREE_NAME_POOL

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(9)     r     1 T$C                        0-0-0/c ASTR(9)     r     1 T$C_UNAL
     0-0-0/w STRC(648)   r     1 VX$LST                     0-0-0/w STRC(3672)  r     1 VX$NODE


   Procedure VXO$PASS1 requires 104 words for executable code.
   Procedure VXO$PASS1 requires 8 words of local(AUTO) storage.

    No errors detected in file VXO$PASS1.:E05TSI    .
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:30   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:31   
          MINI XREF LISTING

CLIMB
      6774**LABEL    6781--GOTO
DONE
      6776**LABEL    6780--GOTO
I
      6723**DCL      6724--REDEF
J
      6725**DCL      6726--REDEF
K
      6727**DCL      6728--REDEF
L
      6729**DCL      6730--REDEF
NEXT
      6740**LABEL    6784--GOTO
T$C.COUNT
      6658**DCL      6659--IMP-SIZ  6748>>ASSIGN   6752>>ASSIGN
T$C_UNAL.COUNT
      6661**DCL      6662--IMP-SIZ
VX$LST.OBJECT_NAME$
      6593**DCL      6594--REDEF    6748>>ASSIGN
VX$LST.P.NAME_.NAME$
      6606**DCL      6752>>ASSIGN
VX$LST.SC_HEAD$
      6595**DCL      6596--REDEF
VX$LST.SC_TAIL$
      6597**DCL      6598--REDEF
VX$LST.SUB_TYPE
      6592**DCL      6745>>IF
VX$LST.TYPE
      6591**DCL      6745>>IF
VX$NODE.ADDR_START_A
      6462**DCL      6463--REDEF
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:32   
VX$NODE.ADDR_STOP_A
      6467**DCL      6468--REDEF
VX$NODE.BROTHER$
      6451**DCL      6775>>IF       6776>>ASSIGN
VX$NODE.FATHER$
      6452**DCL      6779>>ASSIGN
VX$NODE.HEAD$
      6454**DCL      6745>>IF       6745>>IF       6748>>ASSIGN   6752>>ASSIGN
VX$NODE.L_PREV_SIZE
      6520**DCL      6531--REDEF
VX$NODE.L_SC_START
      6539**DCL      6544--REDEF
VX$NODE.L_SC_STOP
      6545**DCL      6550--REDEF
VX$NODE.L_SIZE
      6508**DCL      6519--REDEF
VX$NODE.L_START
      6484**DCL      6495--REDEF
VX$NODE.L_STOP
      6496**DCL      6507--REDEF
VX$NODE.PROMOTE_HEAD
      6551**DCL      6554--REDEF
VX$NODE.PROMOTE_TAIL
      6555**DCL      6558--REDEF
VX$NODE.SON$
      6450**DCL      6757>>IF       6769>>IF       6770>>ASSIGN
VX$NODE.START_PAGE#_A
      6472**DCL      6473--REDEF
VX$NODE.STOP_PAGE#_A
      6477**DCL      6478--REDEF
VXO$CHKSET
      6703**DCL-ENT  6767--CALL
VXO$DUPCHK
      6704**DCL-ENT  6774--CALL
VXO$PATCH
      6700**DCL-ENT  6763--CALL
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:33   
VXO$PROC
      6699**DCL-ENT  6743--CALL
VXO$SATREF
      6702**DCL-ENT  6755--CALL
VXO$SPC
      6701**DCL-ENT  6764--CALL
VXU$BUILD_VECTOR
      6705**DCL-ENT  6768--CALL
VX_BIAS.A
      5461**DCL      5462--REDEF
VX_CBUF.CHARS_A
      5395**DCL      5396--REDEF
VX_CURR$
      5430**DCL      6740<<ASSIGN   6745>>IF       6745>>IF       6748>>ASSIGN   6752>>ASSIGN   6756>>IF
      6769>>IF       6770<<ASSIGN   6770>>ASSIGN   6775>>IF       6776<<ASSIGN   6776>>ASSIGN   6779<<ASSIGN
      6779>>ASSIGN   6780>>IF
VX_DO_PASS1
      5412**DCL      6742>>IF
VX_EBUF.CHARS_A
      5984**DCL      5985--REDEF
VX_EFIELD1.CHARS
      5993**DCL      5994--REDEF
VX_EFIELD2.CHARS
      5997**DCL      5998--REDEF
VX_EFIELD3.CHARS
      6001**DCL      6002--REDEF
VX_EI_KEY_BUF.KEY
      6377**DCL      6378--REDEF
VX_ERRORS
      5438**DCL      5449--REDEF
VX_ERRORS.CONFLICT_A
      5444**DCL      5445--REDEF
VX_ERRORS.UNSAT_A
      5440**DCL      5441--REDEF
VX_O.ACCTN_A$
      5590**DCL      5591--REDEF
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:34   
VX_O.DCB_MATCH_A$
      5599**DCL      5600--REDEF
VX_O.DCB_MATCH_HIT_A
      5605**DCL      5606--REDEF
VX_O.FIDN_A$
      5584**DCL      5585--REDEF
VX_O.FID_A$
      5576**DCL      5577--REDEF
VX_O.INCLUDE_A$
      5596**DCL      5597--REDEF
VX_O.MAP_A
      5570**DCL      5571--REDEF
VX_O.NODCB_A
      5627**DCL      5628--REDEF
VX_O.NUM.DPATCH
      5526**DCL      6761<<ASSIGN   6761>>ASSIGN   6763>>IF
VX_O.NUM.IPATCH
      5527**DCL      6759<<ASSIGN   6759>>ASSIGN   6763>>IF
VX_O.NUM_A
      5515**DCL      5517--REDEF
VX_O.OPT_A
      5615**DCL      5616--REDEF
VX_O.PRIV_A
      5531**DCL      5533--REDEF
VX_O.SIN_A
      5484**DCL      5485--REDEF
VX_O.TCB_A
      5611**DCL      5612--REDEF
VX_OD.ACCTN_A$
      5788**DCL      5789--REDEF
VX_OD.DCB_MATCH_A$
      5797**DCL      5798--REDEF
VX_OD.FIDN_A$
      5782**DCL      5783--REDEF
VX_OD.FID_A$
      5774**DCL      5775--REDEF
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:35   
VX_OD.INCLUDE_A$
      5794**DCL      5795--REDEF
VX_OD.MAP_A
      5768**DCL      5769--REDEF
VX_OD.NODCB_A
      5812**DCL      5813--REDEF
VX_OD.NUM.DPATCH
      5725**DCL      6760>>IF
VX_OD.NUM.IPATCH
      5726**DCL      6758>>IF
VX_OD.NUM_A
      5715**DCL      5716--REDEF
VX_OD.PRIV_A
      5730**DCL      5731--REDEF
VX_OD.SIN.SYSTEM
      5696**DCL      6758>>IF       6760>>IF
VX_OD.SIN_A
      5684**DCL      5685--REDEF
VX_OD.VECTOR_
      5804**DCL      6768>>IF
VX_OD.VECTOR_A$
      5803**DCL      5804--REDEF
VX_OL.MAX_A
      5659**DCL      5661--REDEF
VX_OL.MIN_A
      5644**DCL      5645--REDEF
VX_ON.ACCTN_A$
      5933**DCL      5935--REDEF
VX_ON.DCB_MATCH_A$
      5944**DCL      5946--REDEF
VX_ON.FIDN_A$
      5926**DCL      5928--REDEF
VX_ON.FID_A$
      5917**DCL      5919--REDEF
VX_ON.INCLUDE_A$
      5940**DCL      5942--REDEF
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:36   
VX_ON.MAP_A
      5910**DCL      5912--REDEF
VX_ON.NODCB_A$
      5960**DCL      5961--REDEF
VX_ON.NUM_A
      5855**DCL      5857--REDEF
VX_ON.PRIV_A
      5871**DCL      5873--REDEF
VX_ON.SIN_A
      5823**DCL      5825--REDEF
VX_ON.VECTOR_A$
      5951**DCL      5952--REDEF
VX_OUHEAD.VERSION
      5270**DCL      5272--REDEF
VX_OU_HEAD
      5213**DCL      5252--REDEF
VX_OU_HEAD.REC_A
      5225**DCL      5228--REDEF
VX_PASS
      5411**DCL      6733<<ASSIGN
VX_PASS2_REF.OU.L_START
      6163**DCL      6168--REDEF
VX_PASS2_REF.OU.L_STOP
      6169**DCL      6174--REDEF
VX_PASS2_REF.OU.MAX
      6157**DCL      6162--REDEF
VX_PASS2_REF.OU.SIZE
      6175**DCL      6180--REDEF
VX_PASS2_REF.SAT.COUNT
      6202**DCL      6208--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
      6209**DCL      6215--REDEF
VX_PASS2_REF.SAT.L_START
      6188**DCL      6194--REDEF
VX_PASS2_REF.SAT.L_STOP
      6195**DCL      6201--REDEF
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:37   
VX_PASS2_REF.SAT.MAX
      6182**DCL      6187--REDEF
VX_PASS2_REF.UNSAT.L_START
      6250**DCL      6255--REDEF
VX_PASS2_REF.UNSAT.L_STOP
      6256**DCL      6261--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
      6262**DCL      6267--REDEF
VX_PASS2_REF.UNSAT.MAX
      6244**DCL      6249--REDEF
VX_PASS2_REF.UNSAT.PAGE#
      6274**DCL      6279--REDEF
VX_PASS2_REF.UNSAT.SIZE
      6268**DCL      6273--REDEF
VX_PHRASE.I.PASS
      5680**DCL      6735<<ASSIGN
VX_PHRASE.PHRASE
      5676**DCL      5678--REDEF
VX_PROGRAM_BIAS.A
      5454**DCL      5455--REDEF
VX_ROOT$
      5427**DCL      6740>>ASSIGN   6756>>IF       6757>>IF
VX_SPC.B$.MINE
      6345**DCL      6351--REDEF
VX_SPC.B$.NAME
      6324**DCL      6330--REDEF
VX_SPC.B$.SKIP
      6338**DCL      6344--REDEF
VX_SPC.B$.VALUE
      6331**DCL      6337--REDEF
VX_SPC.SEG.NAME
      6293**DCL      6299--REDEF
VX_SPC.SEG.VALUE
      6300**DCL      6306--REDEF
VX_STATE#
      6416**DCL      6734<<ASSIGN
PL6.E3A0      #001=VXO$PASS1 File=VXO$PASS1.:E05TSI                              WED 07/30/97 08:28 Page:38   
VX_TREE_NAME_POOL
      5381**DCL      6748<<ASSIGN   6748>>ASSIGN   6752<<ASSIGN   6752>>ASSIGN
VX_TSX0_OVERLAY.H
      6068**DCL      6071--REDEF
