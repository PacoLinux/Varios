VERSION E05

PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:1    
        1        1         /*M*    JPA$SUBR    Commonly used subroutines for PRESCAN */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8         /*F* NAME: JPA$CONTINUE    Continuation routine for PRESCAN */
        9        9        JPA$CONTINUE:
       10       10            PROC ( PARSE$PARAM );
       11       11         /***** Include files *****/
       12       12          %INCLUDE CP_6;
       13       93          %INCLUDE CP_6_SUBS;
       14      633          %INCLUDE CP_MACROS_C;
       15     1385          %INCLUDE JP_PERR_C;
       16     1403          %INCLUDE CP_SUBS_C;
       17     2320          %INCLUDE XU_MACRO_C;
       18     5426          %INCLUDE AS_SUPER_C;
       19     5861          %INCLUDE KL_SUPER_C;
       20     8763          %INCLUDE JP_MACRO_C;
       21     8918          %INCLUDE JP_DATA_R;
       22     9463         /***** Parameter *****/
       23     9464          %PARSE$PARAM (NAME = PARSE$PARAM,STCLASS = " ");
       24     9545    1     DCL CUR_RECNO SBIN SYMREF;
       25     9546         /***** Dcbs *****/
       26     9547          %JP_CONTINUE (STCLASS = SYMREF);
       27     9553         /***** Based data *****/
       28     9554          %P$PCB (NAME = P$PCB,STCLASS = BASED);
       29     9755    1     DCL CHAR$ONE CHAR(1) BASED;
       30     9756    1     DCL READ$BUF CHAR(%CPBUFFSIZE) BASED;
       31     9757         /***** Ptrs *****/
       32     9758    1     DCL BUF_PTR$ PTR AUTO;
       33     9759        /***** External routines *****/
       34     9760    1     DCL CXP$POSTERR ENTRY(5);
       35     9761        /***** Symref data *****/
       36     9762          %ERR_BLK (STCLASS="SYMREF");
       37     9787        /***** Error codes *****/
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:2    
       38     9788        %ERR_CODE (NAME=E_TMCONT,FCG#=PRESCANFCG,MID#='01'O,CODE#=%E$JPTMCONT,STCLASS=
              9788            CONSTANT);
       39     9808        /*E*    ERROR: JPA-E$JPTMCONT-0
       40     9809                MESSAGE: Too many continuations on this command for PRESCAN to handle.
       41     9810        */
       42     9811        %EJECT;
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:3    
       43     9812        /*
       44     9813             ***** If there is not space for the next record
       45     9814                   then get another page for continuation ...
       46     9815        */
       47     9816    1       IF PARSE$PARAM.CHARPOS+%CPBUFFSIZE >= 4095
       48     9817    1         OR JP_CONTINUE.REC_NUM > 49
       49     9818    1       THEN   /* Too many continuations */
       50     9819    2         DO;   /* Abort the parse */
       51     9820    2           PARSE$PARAM.PCB$ -> P$PCB.NCHARS = 0;
       52     9821    2           CALL CXP$POSTERR (ADDR(ERR_BLK),PARSE$PARAM.CHARPOS,E_TMCONT);
       53     9822    2           RETURN;
       54     9823    2         END;
       55     9824    1       ELSE
       56     9825    2         DO; /* Save pointer to start of each record */
       57     9826    2           JP_CONTINUE.REC_NUM = JP_CONTINUE.REC_NUM + 1;
       58     9827    2           JP_CONTINUE.CHARPOS(JP_CONTINUE.REC_NUM) = PARSE$PARAM.CHARPOS+1;
       59     9828    2         END;
       60     9829         /*
       61     9830             ***** Build the pointer to the beginning of the
       62     9831                   read buffer.  PARSE$PARAM.CHARPOS is off by one
       63     9832                   because of the leading bang ('!'). Take
       64     9833                   this into consideration in building the pointer ...
       65     9834         */
       66     9835    1       BUF_PTR$ = PINCRC(TEXT$,PARSE$PARAM.CHARPOS+2);
       67     9836    1       CALL INSERT (BUF_PTR$ -> READ$BUF,0,%CPBUFFSIZE,' ');
       68     9837    1       READ_CARD.BUF_.BUF$ = BUF_PTR$;
       69     9838    1       READ_CARD.BUF_.BOUND = %CPBUFFSIZE;
       70     9839    1       CALL M$READ(READ_CARD) ALTRET(E_M$READ);
       71     9840         /*
       72     9841             ***** If the first character read is a bang ('!')
       73     9842                   then overwrite it with a blank ...
       74     9843         */
       75     9844    1       IF BUF_PTR$ -> CHAR$ONE = '!'
       76     9845    1       THEN /* Overwrite */
       77     9846    1         BUF_PTR$ -> CHAR$ONE = ' ';
       78     9847         /*
       79     9848             ***** Store continuation information ...
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:4    
       80     9849         */
       81     9850    1       CUR_RECNO = CUR_RECNO + 1; /* Number of records read */
       82     9851    1       PARSE$PARAM.PCB$->P$PCB.NCHARS = PARSE$PARAM.CHARPOS+M$EI$->F$DCB.ARS#+1;
       83     9852    1       JP_CONTINUE.LEN(JP_CONTINUE.REC_NUM) =
       84     9853    1         M$EI$->F$DCB.ARS#;
       85     9854    1   E_M$READ:
       86     9855    1       RETURN;
       87     9856    1   END JPA$CONTINUE;
       88     9857        %EOD;

PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:5    
--  Include file information  --

   JP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JP_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   JP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPA$CONTINUE.

   Procedure JPA$CONTINUE requires 73 words for executable code.
   Procedure JPA$CONTINUE requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:6    

 Object Unit name= JPA$CONTINUE                               File name= JPA$SUBR.:E05TOU
 UTS= JUL 29 '97 23:33:17.32 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$CG
    2   DCB   even  none     0      0  M$EI
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$JOBSTAT
    5   DCB   even  none     0      0  M$HLP
    6   DCB   even  none     0      0  M$USERS
    7  RoData even  UTS      1      1  JPA$CONTINUE
    8   Proc  even  none    73    111  JPA$CONTINUE
    9  RoData even  none     3      3  JPA$CONTINUE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes            yes      Std        1  JPA$CONTINUE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 CXP$POSTERR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  READ_CARD                             M$EI$
r    B$TCB$                           r    TEXT$                                 M$CG
     M$EI                                  M$LO                                  M$JOBSTAT
     M$HLP                                 M$USERS                               ES$
     CUR_RECNO                             JP_CONTINUE                           ERR_BLK
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:8    


        1        1         /*M*    JPA$SUBR    Commonly used subroutines for PRESCAN */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8         /*F* NAME: JPA$CONTINUE    Continuation routine for PRESCAN */
        9        9        JPA$CONTINUE:
       10       10            PROC ( PARSE$PARAM );

     10  8 000000   000000 700200 xent  JPA$CONTINUE TSX0  ! X66_AUTO_1
         8 000001   000012 000001                    ZERO    10,1

       11       11         /***** Include files *****/
       12       12          %INCLUDE CP_6;
       13       93          %INCLUDE CP_6_SUBS;
       14      633          %INCLUDE CP_MACROS_C;
       15     1385          %INCLUDE JP_PERR_C;
       16     1403          %INCLUDE CP_SUBS_C;
       17     2320          %INCLUDE XU_MACRO_C;
       18     5426          %INCLUDE AS_SUPER_C;
       19     5861          %INCLUDE KL_SUPER_C;
       20     8763          %INCLUDE JP_MACRO_C;
       21     8918          %INCLUDE JP_DATA_R;
       22     9463         /***** Parameter *****/
       23     9464          %PARSE$PARAM (NAME = PARSE$PARAM,STCLASS = " ");
       24     9545    1     DCL CUR_RECNO SBIN SYMREF;
       25     9546         /***** Dcbs *****/
       26     9547          %JP_CONTINUE (STCLASS = SYMREF);
       27     9553         /***** Based data *****/
       28     9554          %P$PCB (NAME = P$PCB,STCLASS = BASED);
       29     9755    1     DCL CHAR$ONE CHAR(1) BASED;
       30     9756    1     DCL READ$BUF CHAR(%CPBUFFSIZE) BASED;
       31     9757         /***** Ptrs *****/
       32     9758    1     DCL BUF_PTR$ PTR AUTO;
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:9    
       33     9759        /***** External routines *****/
       34     9760    1     DCL CXP$POSTERR ENTRY(5);
       35     9761        /***** Symref data *****/
       36     9762          %ERR_BLK (STCLASS="SYMREF");
       37     9787        /***** Error codes *****/
       38     9788        %ERR_CODE (NAME=E_TMCONT,FCG#=PRESCANFCG,MID#='01'O,CODE#=%E$JPTMCONT,STCLASS=
              9788            CONSTANT);
       39     9808        /*E*    ERROR: JPA-E$JPTMCONT-0
       40     9809                MESSAGE: Too many continuations on this command for PRESCAN to handle.
       41     9810        */
       42     9811        %EJECT;
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:10   
       43     9812        /*
       44     9813             ***** If there is not space for the next record
       45     9814                   then get another page for continuation ...
       46     9815        */
       47     9816    1       IF PARSE$PARAM.CHARPOS+%CPBUFFSIZE >= 4095

   9816  8 000002   200003 470500                    LDP0    @PARSE$PARAM,,AUTO
         8 000003   000004 235100                    LDA     4,,PR0
         8 000004   007377 115007                    CMPA    3839,DL
         8 000005   000011 603000 8                  TRC     s:9820
         8 000006   000000 236000 xsym               LDQ     JP_CONTINUE
         8 000007   000061 116007                    CMPQ    49,DL
         8 000010   000031 604400 8                  TMOZ    s:9826

       48     9817    1         OR JP_CONTINUE.REC_NUM > 49
       49     9818    1       THEN   /* Too many continuations */
       50     9819    2         DO;   /* Abort the parse */

       51     9820    2           PARSE$PARAM.PCB$ -> P$PCB.NCHARS = 0;

   9820  8 000011   000005 471500                    LDP1    5,,PR0
         8 000012   100011 450100                    STZ     9,,PR1

       52     9821    2           CALL CXP$POSTERR (ADDR(ERR_BLK),PARSE$PARAM.CHARPOS,E_TMCONT);

   9821  8 000013   000000 236000 9                  LDQ     0
         8 000014   200006 756100                    STQ     BUF_PTR$+2,,AUTO
         8 000015   000001 236000 9                  LDQ     1
         8 000016   200011 756100                    STQ     BUF_PTR$+5,,AUTO
         8 000017   200003 236100                    LDQ     @PARSE$PARAM,,AUTO
         8 000020   000004 036003                    ADLQ    4,DU
         8 000021   200010 756100                    STQ     BUF_PTR$+4,,AUTO
         8 000022   200006 631500                    EPPR1   BUF_PTR$+2,,AUTO
         8 000023   200007 451500                    STP1    BUF_PTR$+3,,AUTO
         8 000024   200007 630500                    EPPR0   BUF_PTR$+3,,AUTO
         8 000025   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 000026   000000 701000 xent               TSX1    CXP$POSTERR
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:11   
         8 000027   000000 011000                    NOP     0

       53     9822    2           RETURN;

   9822  8 000030   000000 702200 xent               TSX2  ! X66_ARET

       54     9823    2         END;
       55     9824    1       ELSE
       56     9825    2         DO; /* Save pointer to start of each record */

       57     9826    2           JP_CONTINUE.REC_NUM = JP_CONTINUE.REC_NUM + 1;

   9826  8 000031   000000 054000 xsym               AOS     JP_CONTINUE

       58     9827    2           JP_CONTINUE.CHARPOS(JP_CONTINUE.REC_NUM) = PARSE$PARAM.CHARPOS+1;

   9827  8 000032   000004 236100                    LDQ     4,,PR0
         8 000033   000001 036007                    ADLQ    1,DL
         8 000034   200006 756100                    STQ     BUF_PTR$+2,,AUTO
         8 000035   000000 235000 xsym               LDA     JP_CONTINUE
         8 000036   000001 735000                    ALS     1
         8 000037   000005 101500                    MRL     fill='000'O
         8 000040   200006 000004                    ADSC9   BUF_PTR$+2,,AUTO         cn=0,n=4
         8 000041   000001 000002 xsym               ADSC9   JP_CONTINUE+1,A          cn=0,n=2

       59     9828    2         END;

       60     9829         /*
       61     9830             ***** Build the pointer to the beginning of the
       62     9831                   read buffer.  PARSE$PARAM.CHARPOS is off by one
       63     9832                   because of the leading bang ('!'). Take
       64     9833                   this into consideration in building the pointer ...
       65     9834         */
       66     9835    1       BUF_PTR$ = PINCRC(TEXT$,PARSE$PARAM.CHARPOS+2);

   9835  8 000042   000004 236100                    LDQ     4,,PR0
         8 000043   000020 736000                    QLS     16
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:12   
         8 000044   400000 036007                    ADLQ    -131072,DL
         8 000045   000000 036000 xsym               ADLQ    TEXT$
         8 000046   200004 756100                    STQ     BUF_PTR$,,AUTO

       67     9836    1       CALL INSERT (BUF_PTR$ -> READ$BUF,0,%CPBUFFSIZE,' ');

   9836  8 000047   200004 471500                    LDP1    BUF_PTR$,,AUTO
         8 000050   040100 100400                    MLR     fill='040'O
         8 000051   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         8 000052   100000 000400                    ADSC9   0,,PR1                   cn=0,n=256

       68     9837    1       READ_CARD.BUF_.BUF$ = BUF_PTR$;

   9837  8 000053   000005 756000 xsym               STQ     READ_CARD+5

       69     9838    1       READ_CARD.BUF_.BOUND = %CPBUFFSIZE;

   9838  8 000054   000004 236000 xsym               LDQ     READ_CARD+4
         8 000055   177777 376007                    ANQ     65535,DL
         8 000056   000100 276003                    ORQ     64,DU
         8 000057   000004 756000 xsym               STQ     READ_CARD+4

       70     9839    1       CALL M$READ(READ_CARD) ALTRET(E_M$READ);

   9839  8 000060   000000 630400 xsym               EPPR0   READ_CARD
         8 000061   440000 713400                    CLIMB   alt,read
         8 000062   401400 401760                    pmme    nvectors=4
         8 000063   000110 702000 8                  TSX2    E_M$READ

       71     9840         /*
       72     9841             ***** If the first character read is a bang ('!')
       73     9842                   then overwrite it with a blank ...
       74     9843         */
       75     9844    1       IF BUF_PTR$ -> CHAR$ONE = '!'

   9844  8 000064   200004 470500                    LDP0    BUF_PTR$,,AUTO
         8 000065   040000 106500                    CMPC    fill='040'O
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:13   
         8 000066   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         8 000067   000002 000001 9                  ADSC9   2                        cn=0,n=1
         8 000070   000074 601000 8                  TNZ     s:9850

       76     9845    1       THEN /* Overwrite */
       77     9846    1         BUF_PTR$ -> CHAR$ONE = ' ';

   9846  8 000071   040100 100400                    MLR     fill='040'O
         8 000072   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         8 000073   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

       78     9847         /*
       79     9848             ***** Store continuation information ...
       80     9849         */
       81     9850    1       CUR_RECNO = CUR_RECNO + 1; /* Number of records read */

   9850  8 000074   000000 054000 xsym               AOS     CUR_RECNO

       82     9851    1       PARSE$PARAM.PCB$->P$PCB.NCHARS = PARSE$PARAM.CHARPOS+M$EI$->F$DCB.ARS#+1;

   9851  8 000075   200003 471500                    LDP1    @PARSE$PARAM,,AUTO
         8 000076   100005 473500                    LDP3    5,,PR1
         8 000077   000000 474400 xsym               LDP4    M$EI$
         8 000100   100004 236100                    LDQ     4,,PR1
         8 000101   400000 036100                    ADLQ    0,,PR4
         8 000102   000001 036007                    ADLQ    1,DL
         8 000103   300011 756100                    STQ     9,,PR3

       83     9852    1       JP_CONTINUE.LEN(JP_CONTINUE.REC_NUM) =

   9852  8 000104   000000 235000 xsym               LDA     JP_CONTINUE
         8 000105   000005 101500                    MRL     fill='000'O
         8 000106   400000 000004                    ADSC9   0,,PR4                   cn=0,n=4
         8 000107   000032 000001 xsym               ADSC9   JP_CONTINUE+26,A         cn=0,n=1

       84     9853    1         M$EI$->F$DCB.ARS#;
       85     9854    1   E_M$READ:
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:14   
       86     9855    1       RETURN;

   9855  8 000110   000000 702200 xent  E_M$READ     TSX2  ! X66_ARET
       87     9856    1   END JPA$CONTINUE;
       88     9857        %EOD;

PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:15   
--  Include file information  --

   JP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JP_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   JP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPA$CONTINUE.
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:16   

 **** Variables and constants ****

  ****  Section 007 RoData JPA$CONTINUE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_TMCONT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PARSE$PARAM               4-0-0/w PTR         r     1 BUF_PTR$
    *0-0-0/w STRC(270)   r     1 PARSE$PARAM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w SBIN        r     1 CUR_RECNO
     0-0-0/w STRC(828)   r     1 ERR_BLK                    0-0-0/w PTR         r     1 ES$
     0-0-0/w STRC(1386)  r     1 JP_CONTINUE                0-0-0/w PTR         r     1 M$EI$
     0-0-0/d STRC(504)   r     1 READ_CARD                  0-0-0/w PTR         r     1 TEXT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 CHAR$ONE                   0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(504)   r     1 P$PCB                      0-0-0/c CHAR(256)   r     1 READ$BUF

PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:17   

   Procedure JPA$CONTINUE requires 73 words for executable code.
   Procedure JPA$CONTINUE requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:18   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:19   
          MINI XREF LISTING

AS_USERS.BANNER_PERM
      9222**DCL      9223--REDEF
AS_USERS.BUDGET.MACCT
      9127**DCL      9131--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      9140**DCL      9143--REDEF
AS_USERS.BUDGET.PACCUM
      9123**DCL      9125--REDEF
AS_USERS.BUDGET.PMAXC
      9118**DCL      9120--REDEF
AS_USERS.SETUP_CHRA.TXT
      9238**DCL      9239--REDEF    9240--REDEF
B$ALT.CODE
      9031**DCL      9031--REDEF    9032--REDEF    9032--REDEF
B$ALT.ERR.ERR#
      9033**DCL      9033--REDEF
B$ALT.EVID
      9032**DCL      9032--REDEF    9032--REDEF
B$TCB$
      9021**DCL      9027--IMP-PTR
BUF_PTR$
      9758**DCL      9835<<ASSIGN   9836>>CALLBLT  9837>>ASSIGN   9844>>IF       9846>>ASSIGN
CHAR$ONE
      9755**DCL      9844>>IF       9846<<ASSIGN
CUR_RECNO
      9545**DCL      9850<<ASSIGN   9850>>ASSIGN
CXP$POSTERR
      9760**DCL-ENT  9821--CALL
ERR_BLK
      9776**DCL      9821--CALL
ES$
      9456**DCL      9457--REDEF    9460--IMP-PTR
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:20   
E_M$READ
      9855**LABEL    9839--CALLALT
E_TMCONT
      9801**DCL      9821<>CALL
F$DCB.ACTPOS
      9070**DCL      9070--REDEF
F$DCB.ARS#
      9044**DCL      9044--REDEF    9851>>ASSIGN   9852>>ASSIGN
F$DCB.ATTR
      9063**DCL      9064--REDEF
F$DCB.BORROW
      9078**DCL      9078--REDEF    9078--REDEF    9078--REDEF
F$DCB.DCBNAME.L
      9092**DCL      9092--IMP-SIZ
F$DCB.EOMCHAR#
      9048**DCL      9048--REDEF
F$DCB.FLDID
      9073**DCL      9073--REDEF
F$DCB.FORM$
      9067**DCL      9067--REDEF
F$DCB.FSECT
      9083**DCL      9083--REDEF
F$DCB.FSN#
      9060**DCL      9060--REDEF    9060--REDEF    9061--REDEF
F$DCB.HEADER$
      9066**DCL      9066--REDEF
F$DCB.IXTNSIZE#
      9064**DCL      9064--REDEF
F$DCB.LASTSTA$
      9053**DCL      9053--REDEF
F$DCB.LVL
      9079**DCL      9079--REDEF
F$DCB.NAME#.C
      9054**DCL      9054--REDEF
F$DCB.NOEOF
      9076**DCL      9076--REDEF
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:21   
F$DCB.NRECS#
      9065**DCL      9065--REDEF
F$DCB.NRECX
      9084**DCL      9084--REDEF
F$DCB.OHDR
      9076**DCL      9076--REDEF
F$DCB.ORG#
      9059**DCL      9059--REDEF
F$DCB.PRECNO
      9082**DCL      9082--REDEF
F$DCB.RCSZ
      9088**DCL      9088--REDEF
F$DCB.RES#
      9055**DCL      9055--REDEF
F$DCB.SETX
      9067**DCL      9067--REDEF
F$DCB.TAB$
      9067**DCL      9067--REDEF
F$DCB.TDA
      9081**DCL      9082--REDEF
F$DCB.WSN#
      9055**DCL      9055--REDEF
JP_CONTINUE.CHARPOS
      9550**DCL      9827<<ASSIGN
JP_CONTINUE.LEN
      9551**DCL      9852<<ASSIGN
JP_CONTINUE.REC_NUM
      9549**DCL      9816>>IF       9826<<ASSIGN   9826>>ASSIGN   9827>>ASSIGN   9852>>ASSIGN
KL_DREC.PASSWORD
      9343**DCL      9347--REDEF
KL_DREC.RENAME
      9366**DCL      9367--REDEF
M$EI$
      9013**DCL      9851>>ASSIGN   9852>>ASSIGN
M$READ
        22**DCL-ENT  9839--CALL
PL6.E3A0      #001=JPA$CONTINUE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:33 Page:22   
P$PCB.NCHARS
      9720**DCL      9820<<ASSIGN   9851<<ASSIGN
PARSE$PARAM
      9483**DCL         9--PROC
PARSE$PARAM.CHARPOS
      9521**DCL      9816>>IF       9821<>CALL     9827>>ASSIGN   9835>>ASSIGN   9851>>ASSIGN
PARSE$PARAM.PCB$
      9527**DCL      9820>>ASSIGN   9851>>ASSIGN
READ$BUF
      9756**DCL      9836<<CALLBLT
READ_CARD
      8989**DCL      9839<>CALL
READ_CARD.BUF_.BOUND
      8991**DCL      9838<<ASSIGN
READ_CARD.BUF_.BUF$
      8992**DCL      9837<<ASSIGN
READ_CARD.STATION_
      8992**DCL      8993--REDEF
READ_CARD.V.DVBYTE.REREAD#
      9004**DCL      9004--REDEF
READ_CARD.V.INDX#
      9002**DCL      9002--REDEF
TEXT$
      9022**DCL      9835>>ASSIGN

PL6.E3A0      #002=JPA$GET_PAGE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:34 Page:23   
       89        1        /*T***********************************************************/
       90        2        /*T*                                                         */
       91        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       92        4        /*T*                                                         */
       93        5        /*T***********************************************************/
       94        6        /*F* NAME: JPA$GET_PAGE    Subroutine to get a page in specified data seg */
       95        7        JPA$GET_PAGE: PROC (SEG$,SEGSIZE);
       96        8        /***** Include files *****/
       97        9          %INCLUDE CP_6;
       98       90          %INCLUDE CP_6_SUBS;
       99      630        /***** Parameters *****/
      100      631    1     DCL SEG$ PTR;
      101      632    1     DCL SEGSIZE SBIN WORD;
      102      633        /***** Fpts *****/
      103      634          %FPT_GDS (FPTN = FPT_GDS,RESULTS = GDS_RESULTS,STCLASS = STATIC);
      104      650          %VLP_VECTOR (FPTN = GDS_RESULTS,STCLASS = STATIC);
      105      665        /***** External routines *****/
      106      666    1     DCL JPT$REPORT ENTRY(1);
      107      667        %EJECT;
PL6.E3A0      #002=JPA$GET_PAGE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:34 Page:24   
      108      668        /*
      109      669             ***** If SEGSIZE was specified on the call then use it.
      110      670                   Otherwise, use 1024 (one page) ...
      111      671        */
      112      672    1       IF ADDR(SEGSIZE) ~= ADDR(NIL)
      113      673    1       THEN
      114      674    1         FPT_GDS.V.SEGSIZE# = SEGSIZE;
      115      675    1       ELSE
      116      676    1         FPT_GDS.V.SEGSIZE# = 1024;
      117      677        /*
      118      678             ***** What data segment ?
      119      679        */
      120      680    1       GDS_RESULTS.PTR$ = SEG$;
      121      681        /**/
      122      682    1       CALL M$GDS (FPT_GDS) ALTRET(E_GDS);
      123      683    1       RETURN;
      124      684        /**/
      125      685    1   E_GDS:
      126      686    1       CALL JPT$REPORT;
      127      687    1       CALL M$XXX;
      128      688    1   END JPA$GET_PAGE;
      129      689        %EOD;

PL6.E3A0      #002=JPA$GET_PAGE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:34 Page:25   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPA$GET_PAGE.

   Procedure JPA$GET_PAGE requires 25 words for executable code.
   Procedure JPA$GET_PAGE requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=JPA$GET_PAGE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:34 Page:26   

 Object Unit name= JPA$GET_PAGE                               File name= JPA$SUBR.:E05TOU
 UTS= JUL 29 '97 23:34:44.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none     8     10  JPA$GET_PAGE
    2   Proc  even  none    25     31  JPA$GET_PAGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  JPA$GET_PAGE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 JPT$REPORT
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL
PL6.E3A0      #002=JPA$GET_PAGE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:34 Page:27   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=JPA$GET_PAGE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:34 Page:28   


       89        1        /*T***********************************************************/
       90        2        /*T*                                                         */
       91        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       92        4        /*T*                                                         */
       93        5        /*T***********************************************************/
       94        6        /*F* NAME: JPA$GET_PAGE    Subroutine to get a page in specified data seg */
       95        7        JPA$GET_PAGE: PROC (SEG$,SEGSIZE);

      7  2 000000   000000 700200 xent  JPA$GET_PAGE TSX0  ! X66_AUTO_2
         2 000001   000006 000002                    ZERO    6,2

       96        8        /***** Include files *****/
       97        9          %INCLUDE CP_6;
       98       90          %INCLUDE CP_6_SUBS;
       99      630        /***** Parameters *****/
      100      631    1     DCL SEG$ PTR;
      101      632    1     DCL SEGSIZE SBIN WORD;
      102      633        /***** Fpts *****/
      103      634          %FPT_GDS (FPTN = FPT_GDS,RESULTS = GDS_RESULTS,STCLASS = STATIC);
      104      650          %VLP_VECTOR (FPTN = GDS_RESULTS,STCLASS = STATIC);
      105      665        /***** External routines *****/
      106      666    1     DCL JPT$REPORT ENTRY(1);
      107      667        %EJECT;
PL6.E3A0      #002=JPA$GET_PAGE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:34 Page:29   
      108      668        /*
      109      669             ***** If SEGSIZE was specified on the call then use it.
      110      670                   Otherwise, use 1024 (one page) ...
      111      671        */
      112      672    1       IF ADDR(SEGSIZE) ~= ADDR(NIL)

    672  2 000002   200004 236100                    LDQ     @SEGSIZE,,AUTO
         2 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000004   000011 600000 2                  TZE     s:676

      113      673    1       THEN
      114      674    1         FPT_GDS.V.SEGSIZE# = SEGSIZE;

    674  2 000005   200004 470500                    LDP0    @SEGSIZE,,AUTO
         2 000006   000000 720100                    LXL0    0,,PR0
         2 000007   000004 440000 1                  SXL0    FPT_GDS+4
         2 000010   000013 710000 2                  TRA     s:680

      115      675    1       ELSE
      116      676    1         FPT_GDS.V.SEGSIZE# = 1024;

    676  2 000011   002000 220003                    LDX0    1024,DU
         2 000012   000004 440000 1                  SXL0    FPT_GDS+4

      117      677        /*
      118      678             ***** What data segment ?
      119      679        */
      120      680    1       GDS_RESULTS.PTR$ = SEG$;

    680  2 000013   200003 470500                    LDP0    @SEG$,,AUTO
         2 000014   000000 236100                    LDQ     0,,PR0
         2 000015   000007 756000 1                  STQ     GDS_RESULTS+1

      121      681        /**/
      122      682    1       CALL M$GDS (FPT_GDS) ALTRET(E_GDS);

    682  2 000016   000000 630400 1                  EPPR0   FPT_GDS
PL6.E3A0      #002=JPA$GET_PAGE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:34 Page:30   
         2 000017   430001 713400                    CLIMB   alt,gds
         2 000020   400400 401760                    pmme    nvectors=2
         2 000021   000023 702000 2                  TSX2    E_GDS

      123      683    1       RETURN;

    683  2 000022   000000 702200 xent               TSX2  ! X66_ARET

      124      684        /**/
      125      685    1   E_GDS:
      126      686    1       CALL JPT$REPORT;

    686  2 000023   000002 631400 xsym  E_GDS        EPPR1   B_VECTNIL+2
         2 000024   000000 701000 xent               TSX1    JPT$REPORT
         2 000025   000000 011000                    NOP     0

      127      687    1       CALL M$XXX;

    687  2 000026   000003 713400                    CLIMB   3
         2 000027   000000 401760                    pmme    nvectors=0

      128      688    1   END JPA$GET_PAGE;

    688  2 000030   000000 702200 xent               TSX2  ! X66_ARET
      129      689        %EOD;

PL6.E3A0      #002=JPA$GET_PAGE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:34 Page:31   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPA$GET_PAGE.
PL6.E3A0      #002=JPA$GET_PAGE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:34 Page:32   

 **** Variables and constants ****

  ****  Section 001  Data  JPA$GET_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(216)   r     1 FPT_GDS                    6-0-0/d STRC(72)    r     1 GDS_RESULTS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SEG$                      4-0-0/w PTR         r     1 @SEGSIZE
    *0-0-0/w PTR         r     1 SEG$                      *0-0-0/w SBIN        r     1 SEGSIZE


   Procedure JPA$GET_PAGE requires 25 words for executable code.
   Procedure JPA$GET_PAGE requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=JPA$GET_PAGE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:34 Page:33   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=JPA$GET_PAGE File=JPA$SUBR.:E05TSI                            TUE 07/29/97 23:34 Page:34   
          MINI XREF LISTING

E_GDS
       686**LABEL     682--CALLALT
FPT_GDS
       645**DCL       682<>CALL
FPT_GDS.V
       645**DCL       645--DCLINIT
FPT_GDS.V.SEGSIZE#
       648**DCL       674<<ASSIGN    676<<ASSIGN
GDS_RESULTS
       661**DCL       645--DCLINIT
GDS_RESULTS.PTR$
       663**DCL       680<<ASSIGN
GDS_RESULTS.W2
       662**DCL       663--REDEF
JPT$REPORT
       666**DCL-ENT   686--CALL
M$GDS
        53**DCL-ENT   682--CALL
M$XXX
        30**DCL-ENT   687--CALL
SEG$
       631**DCL         7--PROC      680>>ASSIGN
SEGSIZE
       632**DCL         7--PROC      672--IF        674>>ASSIGN

PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:35   
      130        1        /*T***********************************************************/
      131        2        /*T*                                                         */
      132        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      133        4        /*T*                                                         */
      134        5        /*T***********************************************************/
      135        6         /*F* NAME: JPA$GET_VAR    Subroutine to access COMMAND VARIABLES */
      136        7        JPA$GET_VAR: PROC (VAR_NAME,VALUE) ALTRET;
      137        8         /***** Include files *****/
      138        9          %INCLUDE B_ERRORS_C;
      139     1136          %INCLUDE CP_6;
      140     1217          %INCLUDE CP_6_SUBS;
      141     1757          %INCLUDE AS_SUPER_C;
      142     2192          %INCLUDE KL_SUPER_C;
      143     5094          %INCLUDE XU_MACRO_C;
      144     8200          %INCLUDE JP_DATA_R;
      145     8745         /***** Local variables *****/
      146     8746          %FPT_CMDVAR (FPTN = GET_VARS,FUN = FETCH,STCLASS = STATIC);
      147     8763          %VLP_NAME (FPTN = VAR_VALUE,LEN = 10,NAME = ' ',STCLASS = STATIC);
      148     8790         /***** Parameters *****/
      149     8791    1     DCL VALUE SBIN WORD;
      150     8792          %VLP_NAME (FPTN = VAR_NAME,LEN = 31,STCLASS = " ");
      151     8819        %EJECT;
PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:36   
      152     8820         /*
      153     8821             ***** Get the value of the specified COMMAND VARIABLE ...
      154     8822         */
      155     8823    1       GET_VARS.NAME_ = VECTOR(VAR_NAME);
      156     8824    1       GET_VARS.VALUE_ = VECTOR(VAR_VALUE);
      157     8825    1       VAR_VALUE.L# = SIZEC(VAR_VALUE.NAME#);
      158     8826    1       CALL M$CMDVAR (GET_VARS) ALTRET(E_GET);
      159     8827    1       CALL CHARBIN (VALUE,VAR_VALUE.NAME#);
      160     8828    1       RETURN;
      161     8829         /*
      162     8830             ***** If the specified COMMAND VARIABLE does not exist
      163     8831                   then assume a value of zero ...
      164     8832         */
      165     8833    1   E_GET:
      166     8834    1       IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NOTCMDNAME
      167     8835    1       THEN
      168     8836    2         DO;
      169     8837    2           VALUE = 0;
      170     8838    2           RETURN;
      171     8839    2         END;
      172     8840    1       ELSE /* Bad error */
      173     8841    1         ALTRETURN;
      174     8842    1   END JPA$GET_VAR;
      175     8843        %EOD;

PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:37   
--  Include file information  --

   JP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPA$GET_VAR.

   Procedure JPA$GET_VAR requires 28 words for executable code.
   Procedure JPA$GET_VAR requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:38   

 Object Unit name= JPA$GET_VAR                                File name= JPA$SUBR.:E05TOU
 UTS= JUL 29 '97 23:34:56.60 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$CG
    2   DCB   even  none     0      0  M$EI
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$JOBSTAT
    5   DCB   even  none     0      0  M$HLP
    6   DCB   even  none     0      0  M$USERS
    7   Data  even  none    17     21  JPA$GET_VAR
    8   Proc  even  none    28     34  JPA$GET_VAR
    9  RoData even  none     4      4  JPA$GET_VAR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes    yes     yes      Std        2  JPA$GET_VAR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:39   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$TCB$                                M$CG
     M$EI                                  M$LO                                  M$JOBSTAT
     M$HLP                                 M$USERS                               ES$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:40   


      130        1        /*T***********************************************************/
      131        2        /*T*                                                         */
      132        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      133        4        /*T*                                                         */
      134        5        /*T***********************************************************/
      135        6         /*F* NAME: JPA$GET_VAR    Subroutine to access COMMAND VARIABLES */
      136        7        JPA$GET_VAR: PROC (VAR_NAME,VALUE) ALTRET;

      7  8 000000   000000 700200 xent  JPA$GET_VAR  TSX0  ! X66_AUTO_2
         8 000001   000006 000002                    ZERO    6,2

      137        8         /***** Include files *****/
      138        9          %INCLUDE B_ERRORS_C;
      139     1136          %INCLUDE CP_6;
      140     1217          %INCLUDE CP_6_SUBS;
      141     1757          %INCLUDE AS_SUPER_C;
      142     2192          %INCLUDE KL_SUPER_C;
      143     5094          %INCLUDE XU_MACRO_C;
      144     8200          %INCLUDE JP_DATA_R;
      145     8745         /***** Local variables *****/
      146     8746          %FPT_CMDVAR (FPTN = GET_VARS,FUN = FETCH,STCLASS = STATIC);
      147     8763          %VLP_NAME (FPTN = VAR_VALUE,LEN = 10,NAME = ' ',STCLASS = STATIC);
      148     8790         /***** Parameters *****/
      149     8791    1     DCL VALUE SBIN WORD;
      150     8792          %VLP_NAME (FPTN = VAR_NAME,LEN = 31,STCLASS = " ");
      151     8819        %EJECT;
PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:41   
      152     8820         /*
      153     8821             ***** Get the value of the specified COMMAND VARIABLE ...
      154     8822         */
      155     8823    1       GET_VARS.NAME_ = VECTOR(VAR_NAME);

   8823  8 000002   000000 235000 9                  LDA     0
         8 000003   200003 236100                    LDQ     @VAR_NAME,,AUTO
         8 000004   000002 757000 7                  STAQ    GET_VARS+2

      156     8824    1       GET_VARS.VALUE_ = VECTOR(VAR_VALUE);

   8824  8 000005   000002 237000 9                  LDAQ    2
         8 000006   000004 757000 7                  STAQ    GET_VARS+4

      157     8825    1       VAR_VALUE.L# = SIZEC(VAR_VALUE.NAME#);

   8825  8 000007   012000 236003                    LDQ     5120,DU
         8 000010   000016 552040 7                  STBQ    VAR_VALUE,'40'O

      158     8826    1       CALL M$CMDVAR (GET_VARS) ALTRET(E_GET);

   8826  8 000011   000000 630400 7                  EPPR0   GET_VARS
         8 000012   420025 713400                    CLIMB   alt,+8213
         8 000013   402400 401760                    pmme    nvectors=6
         8 000014   000022 702000 8                  TSX2    E_GET

      159     8827    1       CALL CHARBIN (VALUE,VAR_VALUE.NAME#);

   8827  8 000015   200004 470500                    LDP0    @VALUE,,AUTO
         8 000016   000100 305400                    DTB
         8 000017   000016 230012 7                  NDSC9   VAR_VALUE                cn=1,s=nosgn,sf=0,n=10
         8 000020   000000 000004                    NDSC9   0,,PR0                   cn=0,s=lsgnf,sf=0,n=4

      160     8828    1       RETURN;

   8828  8 000021   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:42   
      161     8829         /*
      162     8830             ***** If the specified COMMAND VARIABLE does not exist
      163     8831                   then assume a value of zero ...
      164     8832         */
      165     8833    1   E_GET:
      166     8834    1       IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NOTCMDNAME

   8834  8 000022   000000 470400 xsym  E_GET        LDP0    B$TCB$
         8 000023   000000 471500                    LDP1    0,,PR0
         8 000024   100102 236100                    LDQ     66,,PR1
         8 000025   377770 376007                    ANQ     131064,DL
         8 000026   015050 116007                    CMPQ    6696,DL
         8 000027   000033 601000 8                  TNZ     s:8841

      167     8835    1       THEN
      168     8836    2         DO;

      169     8837    2           VALUE = 0;

   8837  8 000030   200004 473500                    LDP3    @VALUE,,AUTO
         8 000031   300000 450100                    STZ     0,,PR3

      170     8838    2           RETURN;

   8838  8 000032   000000 702200 xent               TSX2  ! X66_ARET

      171     8839    2         END;
      172     8840    1       ELSE /* Bad error */
      173     8841    1         ALTRETURN;

   8841  8 000033   000000 702200 xent               TSX2  ! X66_AALT
      174     8842    1   END JPA$GET_VAR;
      175     8843        %EOD;

PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:43   
--  Include file information  --

   JP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPA$GET_VAR.
PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:44   

 **** Variables and constants ****

  ****  Section 007  Data  JPA$GET_VAR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 GET_VARS                  16-0-0/c STRC(99)    r     1 VAR_VALUE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @VALUE                     3-0-0/w PTR         r     1 @VAR_NAME
    *0-0-0/w SBIN        r     1 VALUE                     *0-0-0/c STRC(288)   r     1 VAR_NAME

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 ES$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure JPA$GET_VAR requires 28 words for executable code.
   Procedure JPA$GET_VAR requires 6 words of local(AUTO) storage.
PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:45   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:46   
          MINI XREF LISTING

AS_USERS.BANNER_PERM
      8504**DCL      8505--REDEF
AS_USERS.BUDGET.MACCT
      8409**DCL      8413--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      8422**DCL      8425--REDEF
AS_USERS.BUDGET.PACCUM
      8405**DCL      8407--REDEF
AS_USERS.BUDGET.PMAXC
      8400**DCL      8402--REDEF
AS_USERS.SETUP_CHRA.TXT
      8520**DCL      8521--REDEF    8522--REDEF
B$ALT.CODE
      8313**DCL      8313--REDEF    8314--REDEF    8314--REDEF
B$ALT.ERR.CODE
      8315**DCL      8834>>IF
B$ALT.ERR.ERR#
      8315**DCL      8315--REDEF
B$ALT.EVID
      8314**DCL      8314--REDEF    8314--REDEF
B$TCB.ALT$
      8309**DCL      8834>>IF
B$TCB$
      8303**DCL      8309--IMP-PTR  8834>>IF
ES$
      8738**DCL      8739--REDEF    8742--IMP-PTR
E_GET
      8834**LABEL    8826--CALLALT
F$DCB.ACTPOS
      8352**DCL      8352--REDEF
F$DCB.ARS#
      8326**DCL      8326--REDEF
PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:47   
F$DCB.ATTR
      8345**DCL      8346--REDEF
F$DCB.BORROW
      8360**DCL      8360--REDEF    8360--REDEF    8360--REDEF
F$DCB.DCBNAME.L
      8374**DCL      8374--IMP-SIZ
F$DCB.EOMCHAR#
      8330**DCL      8330--REDEF
F$DCB.FLDID
      8355**DCL      8355--REDEF
F$DCB.FORM$
      8349**DCL      8349--REDEF
F$DCB.FSECT
      8365**DCL      8365--REDEF
F$DCB.FSN#
      8342**DCL      8342--REDEF    8342--REDEF    8343--REDEF
F$DCB.HEADER$
      8348**DCL      8348--REDEF
F$DCB.IXTNSIZE#
      8346**DCL      8346--REDEF
F$DCB.LASTSTA$
      8335**DCL      8335--REDEF
F$DCB.LVL
      8361**DCL      8361--REDEF
F$DCB.NAME#.C
      8336**DCL      8336--REDEF
F$DCB.NOEOF
      8358**DCL      8358--REDEF
F$DCB.NRECS#
      8347**DCL      8347--REDEF
F$DCB.NRECX
      8366**DCL      8366--REDEF
F$DCB.OHDR
      8358**DCL      8358--REDEF
F$DCB.ORG#
      8341**DCL      8341--REDEF
PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:48   
F$DCB.PRECNO
      8364**DCL      8364--REDEF
F$DCB.RCSZ
      8370**DCL      8370--REDEF
F$DCB.RES#
      8337**DCL      8337--REDEF
F$DCB.SETX
      8349**DCL      8349--REDEF
F$DCB.TAB$
      8349**DCL      8349--REDEF
F$DCB.TDA
      8363**DCL      8364--REDEF
F$DCB.WSN#
      8337**DCL      8337--REDEF
GET_VARS
      8757**DCL      8826<>CALL
GET_VARS.NAME_
      8757**DCL      8823<<ASSIGN
GET_VARS.V
      8759**DCL      8757--DCLINIT
GET_VARS.VALUE_
      8757**DCL      8824<<ASSIGN
KL_DREC.PASSWORD
      8625**DCL      8629--REDEF
KL_DREC.RENAME
      8648**DCL      8649--REDEF
M$CMDVAR
      1214**DCL-ENT  8826--CALL
READ_CARD.STATION_
      8274**DCL      8275--REDEF
READ_CARD.V.DVBYTE.REREAD#
      8286**DCL      8286--REDEF
READ_CARD.V.INDX#
      8284**DCL      8284--REDEF
VALUE
      8791**DCL         7--PROC     8827<<CALLBLT  8837<<ASSIGN
PL6.E3A0      #003=JPA$GET_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:34 Page:49   
VAR_NAME
      8817**DCL         7--PROC     8823--ASSIGN
VAR_VALUE
      8788**DCL      8824--ASSIGN
VAR_VALUE.L#
      8788**DCL      8825<<ASSIGN
VAR_VALUE.NAME#
      8788**DCL      8825--ASSIGN   8827>>CALLBLT

PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:50   
      176        1        /*T***********************************************************/
      177        2        /*T*                                                         */
      178        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      179        4        /*T*                                                         */
      180        5        /*T***********************************************************/
      181        6         /*F* NAME: JPA$PUT_VAR    Subroutine to access COMMAND VARIABLES */
      182        7        JPA$PUT_VAR: PROC (VAR_NAME,VALUE) ALTRET;
      183        8         /***** Include files *****/
      184        9          %INCLUDE CP_6;
      185       90          %INCLUDE CP_6_SUBS;
      186      630          %INCLUDE AS_SUPER_C;
      187     1065          %INCLUDE KL_SUPER_C;
      188     3967          %INCLUDE XU_MACRO_C;
      189     7073          %INCLUDE JP_DATA_R;
      190     7618         /***** Local variables *****/
      191     7619          %FPT_CMDVAR (FPTN = PUT_VARS,FUN = STORE,STCLASS = STATIC);
      192     7636          %VLP_NAME (FPTN = VAR_VALUE,LEN = 10,NAME=' ',STCLASS = STATIC);
      193     7663         /***** Parameters *****/
      194     7664    1     DCL VALUE SBIN WORD;
      195     7665          %VLP_NAME (FPTN = VAR_NAME,LEN = 31,STCLASS = " ");
      196     7692        %EJECT;
PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:51   
      197     7693         /*
      198     7694             ***** Store the value in the specified COMMAND VARIABLE ...
      199     7695         */
      200     7696    1       PUT_VARS.NAME_ = VECTOR(VAR_NAME);
      201     7697    1       PUT_VARS.VALUE_ = VECTOR(VAR_VALUE);
      202     7698    1       VAR_VALUE.L# = SIZEC(VAR_VALUE.NAME#);
      203     7699    1       CALL BINCHAR (VAR_VALUE.NAME#,VALUE);
      204     7700    1       CALL M$CMDVAR (PUT_VARS) ALTRET(E_PUT);
      205     7701    1       RETURN;
      206     7702         /*
      207     7703             ***** ERRORS ...
      208     7704         */
      209     7705    1   E_PUT:
      210     7706    1       ALTRETURN;
      211     7707    1   END JPA$PUT_VAR;

PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:52   
--  Include file information  --

   JP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPA$PUT_VAR.

   Procedure JPA$PUT_VAR requires 19 words for executable code.
   Procedure JPA$PUT_VAR requires 6 words of local(AUTO) storage.

    No errors detected in file JPA$SUBR.:E05TSI    .

PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:53   

 Object Unit name= JPA$PUT_VAR                                File name= JPA$SUBR.:E05TOU
 UTS= JUL 29 '97 23:35:46.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$CG
    2   DCB   even  none     0      0  M$EI
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$JOBSTAT
    5   DCB   even  none     0      0  M$HLP
    6   DCB   even  none     0      0  M$USERS
    7   Data  even  none    17     21  JPA$PUT_VAR
    8   Proc  even  none    19     23  JPA$PUT_VAR
    9  RoData even  none     4      4  JPA$PUT_VAR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes    yes     yes      Std        2  JPA$PUT_VAR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:54   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$TCB$                                M$CG
     M$EI                                  M$LO                                  M$JOBSTAT
     M$HLP                                 M$USERS                               ES$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:55   


      176        1        /*T***********************************************************/
      177        2        /*T*                                                         */
      178        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      179        4        /*T*                                                         */
      180        5        /*T***********************************************************/
      181        6         /*F* NAME: JPA$PUT_VAR    Subroutine to access COMMAND VARIABLES */
      182        7        JPA$PUT_VAR: PROC (VAR_NAME,VALUE) ALTRET;

      7  8 000000   000000 700200 xent  JPA$PUT_VAR  TSX0  ! X66_AUTO_2
         8 000001   000006 000002                    ZERO    6,2

      183        8         /***** Include files *****/
      184        9          %INCLUDE CP_6;
      185       90          %INCLUDE CP_6_SUBS;
      186      630          %INCLUDE AS_SUPER_C;
      187     1065          %INCLUDE KL_SUPER_C;
      188     3967          %INCLUDE XU_MACRO_C;
      189     7073          %INCLUDE JP_DATA_R;
      190     7618         /***** Local variables *****/
      191     7619          %FPT_CMDVAR (FPTN = PUT_VARS,FUN = STORE,STCLASS = STATIC);
      192     7636          %VLP_NAME (FPTN = VAR_VALUE,LEN = 10,NAME=' ',STCLASS = STATIC);
      193     7663         /***** Parameters *****/
      194     7664    1     DCL VALUE SBIN WORD;
      195     7665          %VLP_NAME (FPTN = VAR_NAME,LEN = 31,STCLASS = " ");
      196     7692        %EJECT;
PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:56   
      197     7693         /*
      198     7694             ***** Store the value in the specified COMMAND VARIABLE ...
      199     7695         */
      200     7696    1       PUT_VARS.NAME_ = VECTOR(VAR_NAME);

   7696  8 000002   000000 235000 9                  LDA     0
         8 000003   200003 236100                    LDQ     @VAR_NAME,,AUTO
         8 000004   000002 757000 7                  STAQ    PUT_VARS+2

      201     7697    1       PUT_VARS.VALUE_ = VECTOR(VAR_VALUE);

   7697  8 000005   000002 237000 9                  LDAQ    2
         8 000006   000004 757000 7                  STAQ    PUT_VARS+4

      202     7698    1       VAR_VALUE.L# = SIZEC(VAR_VALUE.NAME#);

   7698  8 000007   012000 236003                    LDQ     5120,DU
         8 000010   000016 552040 7                  STBQ    VAR_VALUE,'40'O

      203     7699    1       CALL BINCHAR (VAR_VALUE.NAME#,VALUE);

   7699  8 000011   200004 470500                    LDP0    @VALUE,,AUTO
         8 000012   000000 301500                    BTD
         8 000013   000000 000004                    NDSC9   0,,PR0                   cn=0,s=lsgnf,sf=0,n=4
         8 000014   000016 230012 7                  NDSC9   VAR_VALUE                cn=1,s=nosgn,sf=0,n=10

      204     7700    1       CALL M$CMDVAR (PUT_VARS) ALTRET(E_PUT);

   7700  8 000015   000000 630400 7                  EPPR0   PUT_VARS
         8 000016   420025 713400                    CLIMB   alt,+8213
         8 000017   402400 401760                    pmme    nvectors=6
         8 000020   000022 702000 8                  TSX2    E_PUT

      205     7701    1       RETURN;

   7701  8 000021   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:57   
      206     7702         /*
      207     7703             ***** ERRORS ...
      208     7704         */
      209     7705    1   E_PUT:
      210     7706    1       ALTRETURN;

   7706  8 000022   000000 702200 xent  E_PUT        TSX2  ! X66_AALT
      211     7707    1   END JPA$PUT_VAR;

PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:58   
--  Include file information  --

   JP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPA$PUT_VAR.
PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:59   

 **** Variables and constants ****

  ****  Section 007  Data  JPA$PUT_VAR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 PUT_VARS                  16-0-0/c STRC(99)    r     1 VAR_VALUE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @VALUE                     3-0-0/w PTR         r     1 @VAR_NAME
    *0-0-0/w SBIN        r     1 VALUE                     *0-0-0/c STRC(288)   r     1 VAR_NAME

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 ES$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure JPA$PUT_VAR requires 19 words for executable code.
   Procedure JPA$PUT_VAR requires 6 words of local(AUTO) storage.
PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:60   

    No errors detected in file JPA$SUBR.:E05TSI    .
PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:61   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:62   
          MINI XREF LISTING

AS_USERS.BANNER_PERM
      7377**DCL      7378--REDEF
AS_USERS.BUDGET.MACCT
      7282**DCL      7286--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      7295**DCL      7298--REDEF
AS_USERS.BUDGET.PACCUM
      7278**DCL      7280--REDEF
AS_USERS.BUDGET.PMAXC
      7273**DCL      7275--REDEF
AS_USERS.SETUP_CHRA.TXT
      7393**DCL      7394--REDEF    7395--REDEF
B$ALT.CODE
      7186**DCL      7186--REDEF    7187--REDEF    7187--REDEF
B$ALT.ERR.ERR#
      7188**DCL      7188--REDEF
B$ALT.EVID
      7187**DCL      7187--REDEF    7187--REDEF
B$TCB$
      7176**DCL      7182--IMP-PTR
ES$
      7611**DCL      7612--REDEF    7615--IMP-PTR
E_PUT
      7706**LABEL    7700--CALLALT
F$DCB.ACTPOS
      7225**DCL      7225--REDEF
F$DCB.ARS#
      7199**DCL      7199--REDEF
F$DCB.ATTR
      7218**DCL      7219--REDEF
F$DCB.BORROW
      7233**DCL      7233--REDEF    7233--REDEF    7233--REDEF
PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:63   
F$DCB.DCBNAME.L
      7247**DCL      7247--IMP-SIZ
F$DCB.EOMCHAR#
      7203**DCL      7203--REDEF
F$DCB.FLDID
      7228**DCL      7228--REDEF
F$DCB.FORM$
      7222**DCL      7222--REDEF
F$DCB.FSECT
      7238**DCL      7238--REDEF
F$DCB.FSN#
      7215**DCL      7215--REDEF    7215--REDEF    7216--REDEF
F$DCB.HEADER$
      7221**DCL      7221--REDEF
F$DCB.IXTNSIZE#
      7219**DCL      7219--REDEF
F$DCB.LASTSTA$
      7208**DCL      7208--REDEF
F$DCB.LVL
      7234**DCL      7234--REDEF
F$DCB.NAME#.C
      7209**DCL      7209--REDEF
F$DCB.NOEOF
      7231**DCL      7231--REDEF
F$DCB.NRECS#
      7220**DCL      7220--REDEF
F$DCB.NRECX
      7239**DCL      7239--REDEF
F$DCB.OHDR
      7231**DCL      7231--REDEF
F$DCB.ORG#
      7214**DCL      7214--REDEF
F$DCB.PRECNO
      7237**DCL      7237--REDEF
F$DCB.RCSZ
      7243**DCL      7243--REDEF
PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:64   
F$DCB.RES#
      7210**DCL      7210--REDEF
F$DCB.SETX
      7222**DCL      7222--REDEF
F$DCB.TAB$
      7222**DCL      7222--REDEF
F$DCB.TDA
      7236**DCL      7237--REDEF
F$DCB.WSN#
      7210**DCL      7210--REDEF
KL_DREC.PASSWORD
      7498**DCL      7502--REDEF
KL_DREC.RENAME
      7521**DCL      7522--REDEF
M$CMDVAR
        87**DCL-ENT  7700--CALL
PUT_VARS
      7630**DCL      7700<>CALL
PUT_VARS.NAME_
      7630**DCL      7696<<ASSIGN
PUT_VARS.V
      7632**DCL      7630--DCLINIT
PUT_VARS.VALUE_
      7630**DCL      7697<<ASSIGN
READ_CARD.STATION_
      7147**DCL      7148--REDEF
READ_CARD.V.DVBYTE.REREAD#
      7159**DCL      7159--REDEF
READ_CARD.V.INDX#
      7157**DCL      7157--REDEF
VALUE
      7664**DCL         7--PROC     7699>>CALLBLT
VAR_NAME
      7690**DCL         7--PROC     7696--ASSIGN
VAR_VALUE
      7661**DCL      7697--ASSIGN
PL6.E3A0      #004=JPA$PUT_VAR File=JPA$SUBR.:E05TSI                             TUE 07/29/97 23:35 Page:65   
VAR_VALUE.L#
      7661**DCL      7698<<ASSIGN
VAR_VALUE.NAME#
      7661**DCL      7698--ASSIGN   7699<<CALLBLT
