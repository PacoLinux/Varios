

09:21 AUG 09 '97 Z8E_STR_SUPP.:Z8A6SI                                      1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6      %MACRO @IDENT;
    7
    8          2 ID      UBIN HALF UNAL,    /* identification number */
    9          2 B       UNAL,
   10            3 ERROR   BIT (1),
   11            3 *       BIT (1),
   12            3 *       BIT (1),
   13            3 *       BIT (15) ,
   14
   15          2 ST$     PTR,               /* PTR TO ST ITEM (EG, SCALAR)*/
   16          2 ETT$    REDEF ST$ PTR,     /* Ptr to ETT triad          */
   17          2 DNT$    PTR,               /* PTR TO LEXIME ITEM (IN DNT)*/
   18          2 SYMBOL  SBIN WORD UNAL,    /* TERMINAL NUMBER (IE, RW#)  */
   19          2 COUNT   UBIN HALF UNAL,
   20          2 TYPE    UBIN HALF UNAL,    /* TYPE (EG, %TYI, %TYA, ETC) */
   21          2 LINE    UBIN WORD UNAL,    /* LINE# OF THIS OCCURANCE    */
   22          2 COLUMN  UBIN WORD UNAL,    /* COL # OF THIS OCCURANCE    */
   23          2 NEXT    PTR ;              /* Pointer to top of list     */
   24
   25      %MEND;
   26
   27      %MACRO @LIST;
   28
   29           2 * UBIN HALF UNAL,
   30           2 B UNAL,
   31             3 ERROR BIT(1),
   32             3 * BIT(17),
   33           2 TAIL$ PTR,
   34           2 COUNT SBIN WORD,
   35           2 *(0:3) UBIN WORD,
   36           2 HEAD$ PTR;
   37
09:21 AUG 09 '97 Z8E_STR_SUPP.:Z8A6SI                                      2    
   38      %MEND;
   39
   40
   41
   42      %MACRO NEW_STRING_PAIR ( @ID1$ = , @ID2$ = , @POINTER = );
   43
   44           DO;
   45             %NEW ( @TEMPLATE = STRING_PAIR, @POINTER = @POINTER );
   46
   47             STRING_PAIR.ID1$ = @ID1$;
   48             STRING_PAIR.ID2$ = @ID2$;
   49             STRING_PAIR.NEXT$ = ADDR(NIL);
   50           END;
   51
   52      %MEND;
   53
   54
   55
   56      DCL 1 IDENT_ALPHA_LIT_NO_ALL_LIST ALIGNED BASED(IDENT_ALPHA_LIT_NO_ALL_LIST$),
   57           %@LIST;
   58      DCL IDENT_ALPHA_LIT_NO_ALL_LIST$ PTR;
   59
   60      DCL 1 STRING_LIST ALIGNED BASED(STRING_LIST$),
   61           %@LIST;
   62      DCL STRING_LIST$ PTR;
   63
   64      DCL 1 STRING_DELIMITER ALIGNED BASED(STRING_DELIMITER$),
   65           %@IDENT;
   66      DCL STRING_DELIMITER$ PTR;
   67
   68      DCL 1 WITH_PTR_IDENT_OPT ALIGNED BASED(WITH_PTR_IDENT_OPT$),
   69           %@IDENT;
   70      DCL WITH_PTR_IDENT_OPT$ PTR;
   71
   72      DCL 1 IDENT_NO_REFMOD ALIGNED BASED(IDENT_NO_REFMOD$),
   73           %@IDENT;
   74      DCL IDENT_NO_REFMOD$ PTR;
09:21 AUG 09 '97 Z8E_STR_SUPP.:Z8A6SI                                      3    
   75
   76      DCL 1 IMPERATIVE_STRING ALIGNED BASED(IMPERATIVE_STRING$),
   77           2 ID3$     PTR,
   78           2 ID4$     PTR,
   79           2 ID1_ID2$ PTR,
   80           2 LINE     SBIN WORD,
   81           2 COLUMN   SBIN WORD,
   82           2 * (0:2)  SBIN WORD;
   83      DCL IMPERATIVE_STRING$ PTR;
   84
   85      DCL 1 IDENTIFIER ALIGNED BASED(IDENTIFIER$),
   86           %@IDENT;
   87      DCL IDENTIFIER$ PTR;
   88
   89      /* Heap templates */
   90
   91
   92      DCL 1 STRING_PAIR ALIGNED BASED(STRING_PAIR$),
   93            2 ID1$   PTR,
   94            2 ID2$   PTR,
   95            2 NEXT$  PTR;
   96      DCL STRING_PAIR$ PTR;
   97
   98      %EJECT;


