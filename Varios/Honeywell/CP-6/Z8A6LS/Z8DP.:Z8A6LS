VERSION A06

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:1    
        1        1        /*M* Z8DP$VALIDATE_PIC Validate a COBOL picture and generate MOPs for it.      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,DFC                                                                  */
        8        8
        9        9        /*P*        NAME:  Z8DP$VALIDATE_PIC
       10       10                 PURPOSE:  This module processes picture strings and produces
       11       11                           editing micro-operation strings from them.
       12       12                                                                                   *//*
       13       13             DESCRIPTION:  This module processes picture strings and produces
       14       14                           editing micro-operation strings from them.
       15       15                           In addition certain useful information about the
       16       16                           picture is also returned.
       17       17
       18       18                           This module and its include file (Z8D_PIC_PARM)
       19       19                           were copied from Jim Ramsey's account on August
       20       20                           3, 1981.  The original file names are ZES$VALIDATE_
       21       21                           PIC and ZE_PIC_PARMS_C.  The driver (tester) was
       22       22                           also copied from JWRIDP (TEST_PIC_SI).
       23       23
       24       24                           This module accepts as legal pictures all legal
       25       25                           COBOL-74 pictures, plus the following floating
       26       26                           point formats:
       27       27                                1) Floating numeric
       28       28                                   [S] [9's] V [9's] E S 9's
       29       29                                2) Floating numeric edited
       30       30                                   {+|-} [9's] . [9's] E + 9's
       31       31                                                                                   *//*
       32       32                           The "S" picture character may appear either as
       33       33                           the first or last character in a picture string.
       34       34                           Its position in the string, leading or trailing, is
       35       35                           part of the information reported to the caller.
       36       36                                                                                   *//*
       37       37                           A numeric picture will also produce a micro-opera-
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:2    
       38       38                           tion string.  The effect is as if the picture were
       39       39                           a numeric edited string with the "S" replaced by a
       40       40                           "+".
       41       41                                                                                   *//*
       42       42
       43       43
       44       44                           Finally, this module does not check to see if the
       45       45                           picture exceeds any of the arbitrary limits
       46       46                           specified in the formal COBOL definition.  The only
       47       47                           applicable limitation is that the maximum size of
       48       48                           the picture is 256 characters.
       49       49                                                                                   *//*
       50       50                           The details of the legal syntaxes of COBOL pictures
       51       51                           and the semantics of the EIS editing
       52       52                           micro-operations are not given here.  This
       53       53                           information is much too volumous to be included
       54       54                           here.  The reader should become familiar with
       55       55                           the material in the cited references.  This
       56       56                           material is a prerequisite to understanding the
       57       57                           operation of this procedure.
       58       58                                                                                   *//*
       59       59              REFERENCES:  CP-6 COBOL Reference (CE29) -- Section 6, the
       60       60                           topic "PICTURE CLAUSE", especially the table
       61       61                           entitled "PICTURE Character Precedence Chart".
       62       62                                                                                   *//*
       63       63                           DPS-8 Assembly Instructions (DH03) -- In Section
       64       64                           6, the descriptions of the "MVE" and "MVNE"
       65       65                           instructions and the sub-section entitled:
       66       66                           "Micro Operations for Edit Instructions MVE and
       67       67                           MVNE".
       68       68                                                                                   *//*
       69       69                           Other useful references.
       70       70                                                                                   *//*
       71       71                           CODASYL Journal of Development
       72       72                                                                                   *//*
       73       73                           The Programmer's Guide to COBOL
       74       74                                                                                     */
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:3    
       75       75                                               %SPACE 2;

       76       76        Z8DP$VALIDATE_PIC: PROC(PIC_STR,PIC_IN,PIC_OUT) ALTRET;
       77       77
       78       78        %EQU PHASE = 1;
       79       79
       80       80        %INCLUDE Z8A_DEFC;
       81      148        %INCLUDE Z8A_SUPP_MAC;
       82     2548        %INCLUDE Z8A_COMCOM;
       83     3198        %INCLUDE Z8A_ST;
       84     6857        %INCLUDE Z8A_LTS;
       85     8934        %INCLUDE Z8E_STACKS;
       86    11200        %INCLUDE Z8E_O1COM;
       87    11961
       88    11962                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:4    
       89    11963        /*I*        NAME:  ERR
       90    11964                 PURPOSE:  This macro sets up the error code and causes
       91    11965                           the appropriate error routine to be entered.
       92    11966                    CALL:  %ERR([CODE=error_code],[RTN=error_routine]);
       93    11967             DESCRIPTION:  The "error_code", if any, is put in the STATE
       94    11968                           variable.  If this invocation is in an internal
       95    11969                           procedure, indicated by "%_INTERNAL_PROC" equal
       96    11970                           to '1'B, then an ALTRETURN statement is generated.
       97    11971                           If this invocation is in the external procedure,
       98    11972                           then a GOTO the "error_routine" is generated.  The
       99    11973                           default "error_routine" is named ERR_ROUTINE.
      100    11974                  INPUTS:  %_INTERNAL_PROC
      101    11975                           error_code
      102    11976                           error_routine
      103    11977                 OUTPUTS:  STATE (set to error_code, if any)
      104    11978                                                                                     */
      105    11979
      106    11980        %MACRO  ERR (
      107    11981          CODE=,RTN=ERR_ROUTINE);
      108    11982        %IF LENGTHC(TEXTCHAR(CODE)) ~= 0;
      109    11983          DO;
      110    11984             STATE = CODE;
      111    11985          %IF _INTERNAL_PROC;
      112    11986             ALTRETURN;
      113    11987          %ELSE ;
      114    11988             GOTO RTN;
      115    11989          %ENDIF;
      116    11990             END;
      117    11991        %ELSE ;
      118    11992          %IF _INTERNAL_PROC;
      119    11993          ALTRETURN;
      120    11994          %ELSE ;
      121    11995          GOTO RTN;
      122    11996          %ENDIF;
      123    11997        %ENDIF;
      124    11998        %MEND;
      125    11999                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:5    
      126    12000        /*I*        NAME:  ASSIGN_MOP
      127    12001                 PURPOSE:  This macro generates statements to assign 1 or 2
      128    12002                           micro-operation (MOP) sequences to the output
      129    12003                           micro-operation string (PIC_OUT.MOPSTR).
      130    12004                    CALL:  %ASSIGN_MOP(
      131    12005                             OP1={INSM,ENF,SES,MVZB,MVZA,MFLS,MFLC,INSB,INSA,
      132    12006                                  INSN,INSP,IGN,MVC,MSES,MORS,LTE,CHT}
      133    12007                             N1={0 - 16}
      134    12008                             TBL1={B,ST,PL,MI,$,CM,PT,Z,any}
      135    12009                             CH1={1 or 8 character string}
      136    12010                             ES1={ON,OFF}
      137    12011                             BZ1={ON}
      138    12012                             SUP1={C | CS,S | SN}
      139    12013                                and similarly for OP2, N2, TBL2, CH2, ES2,
      140    12014                                BZ2, and SUP2.
      141    12015                                                                                   *//*
      142    12016                           The applicability of the various parameters depends
      143    12017                           on the value of OPx, as follows.
      144    12018                           OPx = ENF -- SUPx and BZx
      145    12019                           OPx = SES -- ESx and BZx
      146    12020                           OPx = INSB,INSA,INSN,INSP -- TBLx
      147    12021                           OPx = LTE -- TBLx and CHx
      148    12022                           OPx = CHT -- CHx
      149    12023                           OPx = INSM,MVZB,MVZA,MFLS,MFLC,IGN,MVC,MSES,MORS -- Nx
      150    12024             DESCRIPTION:  This macro generates statements to assign 1 or 2
      151    12025                           MOP sequences to the output MOP string.  It also
      152    12026                           does the bookeeping to see that the status of the
      153    12027                           micro operations is known.  Statements are
      154    12028                           generated to correctly update the length of the
      155    12029                           output MOP string, MOP_L.  Statements are
      156    12030                           generated to correctly set ES_ON to reflect the
      157    12031                           value of the significance indicator (ES).
      158    12032                           Statements are generated to note the position of
      159    12033                           the first MOP that can be used to turn blank
      160    12034                           when zero on (BZ_MOP).  Finally, statements are
      161    12035                           generated to keep track of what characters are
      162    12036                           in edit insertion table entries 1, 2, and 5.
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:6    
      163    12037                                                                                   *//*
      164    12038                           One or two micro operation sequences are assembled
      165    12039                           into a character string literal and that literal
      166    12040                           is appended to the current MOP string.
      167    12041                  INPUTS:  Other than the parameters as mentioned above:
      168    12042                           MOP_L_MAX -- max size of the output MOP string
      169    12043                           MOP_L -- current size of the output MOP string
      170    12044                           BZ_MOP
      171    12045                 OUTPUTS:  MOP_L
      172    12046                           ES_ON
      173    12047                           BZ_MOP
      174    12048                           TBL_1
      175    12049                           TBL_2
      176    12050                           TBL_5
      177    12051                           PIC_OUT.MOPSTR
      178    12052               INTERFACE:  none
      179    12053                                                                                     */
      180    12054
      181    12055        %MACRO ASSIGN_MOP(
      182    12056          OP1(INSM=1,ENF=2,SES=3,MVZB=4,MVZA=5,MFLS=6,MFLC=7,INSB=8,
      183    12057             INSA=9,INSN=10,INSP=11,IGN=12,MVC=13,MSES=14,MORS=15,
      184    12058             LTE=16,CHT=17)=0,
      185    12059          N1=0,
      186    12060          CURRENCY_SIGN(YES='1'B,NO='0'B)='0'B,
      187    12061          TBL1(B=1,ST=2,PL=3,MI=4,$=5,CM=6,PT=7,Z=8,ANY)=0,
      188    12062          CH1=,
      189    12063          ES1(ON=8,OFF=0)=0,
      190    12064          BZ1(ON=4)=0,
      191    12065          SUP1(C=8,CS=8,S=0,SN=0)=0,
      192    12066          OP2(INSM=1,ENF=2,SES=3,MVZB=4,MVZA=5,MFLS=6,MFLC=7,INSB=8,
      193    12067             INSA=9,INSN=10,INSP=11,IGN=12,MVC=13,MSES=14,MORS=15,
      194    12068             LTE=16,CHT=17)=0,
      195    12069          N2=0,
      196    12070          TBL2(B=1,ST=2,PL=3,MI=4,$=5,CM=6,PT=7,Z=8,ANY)=0,
      197    12071          CH2=,
      198    12072          ES2(ON=8,OFF=0)=0,
      199    12073          BZ2(ON=4)=0,
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:7    
      200    12074          SUP2(C=8,CS=8,S=0,SN=0)=0);
      201    12075
      202    12076          %LSET EIT = ' *+-$,.0';
      203    12077          %IF OP1 = 2;                       /*ENF*/
      204    12078             %LSET STR = BINASC(OP1*16+SUP1+BZ1);
      205    12079          %ELSEIF OP1 = 3;                   /*SES*/
      206    12080             %LSET STR = BINASC(OP1*16+ES1+BZ1);
      207    12081          %ELSEIF OP1 >= 8 AND OP1 <= 11;    /*INSB,INSA,INSN,INSP*/
      208    12082             %IF SUBSTR(TEXTCHAR(TBL1),0,1) = '''';
      209    12083                %LSET STR = CONCAT(BINASC(OP1*16),TBL1);
      210    12084             %ELSE ;
      211    12085                %LSET STR = BINASC(OP1*16+TBL1);
      212    12086             %ENDIF;
      213    12087          %ELSEIF OP1 = 16;                  /*LTE*/
      214    12088             %IF CURRENCY_SIGN;
      215    12089               %LSET STR = BINASC(OP1*16+TBL1);
      216    12090             %ELSE;
      217    12091               %LSET STR = CONCAT(BINASC(OP1*16+TBL1),CH1);
      218    12092             %ENDIF;
      219    12093          %ELSEIF OP1 = 17;                  /*CHT*/
      220    12094             %IF LENGTHC(CH1) >= 8;
      221    12095                %LSET STR = CONCAT(BINASC(OP1*16),SUBSTR(CH1,0,8));
      222    12096             %ELSE;
      223    12097                %LSET STR = CONCAT(BINASC(OP1*16),CH1,SUBSTR(EIT,LENGTHC(CH1)));
      224    12098             %ENDIF;
      225    12099          %ELSE ;                    /*INSM,MVZB,MVZA,MFLS,MFLC,IGN,MVC,MSES,MORS*/
      226    12100             %LSET STR = BINASC(OP1*16+MOD(N1,16));
      227    12101          %ENDIF;
      228    12102          %IF OP2 ~= 0;
      229    12103             %IF OP2 = 2;                     /*ENF*/
      230    12104                %LSET STR = CONCAT(STR,BINASC(OP2*16+SUP2+BZ2));
      231    12105             %ELSEIF OP2 = 3;                 /*SES*/
      232    12106                %LSET STR = CONCAT(STR,BINASC(OP2*16+ES2+BZ2));
      233    12107             %ELSEIF OP2 >= 8 AND OP2 <= 11;   /*INSB,INSA,INSN,INSP*/
      234    12108                %IF SUBSTR(TEXTCHAR(TBL2),0,1) = '''';
      235    12109                   %LSET STR = CONCAT(STR,BINASC(OP2*16),TBL2);
      236    12110                %ELSE ;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:8    
      237    12111                   %LSET STR = CONCAT(STR,BINASC(OP2*16+TBL2));
      238    12112                %ENDIF;
      239    12113             %ELSEIF OP2 = 16;                /*LTE*/
      240    12114                %LSET STR = CONCAT(STR,BINASC(OP2*16+TBL2),CH2);
      241    12115             %ELSEIF OP2 = 17;                /*CHT*/
      242    12116                %IF LENGTHC(CH2) >= 8;
      243    12117                   %LSET STR = CONCAT(STR,BINASC(OP2*16),SUBSTR(CH2,0,8));
      244    12118                %ELSE;
      245    12119                   %LSET STR = CONCAT(STR,BINASC(OP2*16),CH2,SUBSTR(EIT,LENGTHC(CH2)));
      246    12120                %ENDIF;
      247    12121             %ELSE ;                 /*INSM,MVZB,MVZA,MFLS,MFLC,IGN,MVC,MSES,MORS*/
      248    12122                %LSET STR = CONCAT(STR,BINASC(OP2*16+MOD(N2,16)));
      249    12123             %ENDIF;
      250    12124          %ENDIF;
      251    12125          DO;
      252    12126             MOP_L = MOP_L + %(LENGTHC(STR));
      253    12127             IF MOP_L >= MOP_L_MAX THEN
      254    12128                DO ;
      255    12129                  /* Added to accompany mops > 63 - 2/25/82 */
      256    12130                  MOP_L = 0 ;
      257    12131                  MOP_L_MAX = 0 ;
      258    12132                  RETURN ;
      259    12133                END ;
      260    12134             IF MOP_L ~= 0 THEN
      261    12135               DO ;
      262    12136                 %IF OP1 = 2 OR OP1 = 3 ;
      263    12137                    %IF OP1 = 3 AND ES1 = 0;
      264    12138                    ES_ON = '0'B;
      265    12139                    %ELSE;
      266    12140                    ES_ON = '1'B;
      267    12141                    %ENDIF;
      268    12142                    IF BZ_MOP = -1 THEN BZ_MOP = MOP_L - %(LENGTHC(STR));
      269    12143                 %ELSEIF OP2 = 2 OR OP2 = 3;
      270    12144                    %IF OP2 = 3 AND ES2 = 0;
      271    12145                    ES_ON = '0'B;
      272    12146                    %ELSE;
      273    12147                    ES_ON = '1'B;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:9    
      274    12148                    %ENDIF;
      275    12149                    IF BZ_MOP = -1 THEN BZ_MOP = MOP_L - 1;
      276    12150                 %ELSEIF OP1 = 16 ;
      277    12151                    %IF TBL1 = 1;
      278    12152                    TBL_1 = ASCBIN(CH1);
      279    12153                    %ELSEIF TBL1 = 2;
      280    12154                    TBL_2 = ASCBIN(CH1);
      281    12155                    %ELSEIF TBL1 = 5;
      282    12156                    TBL_5 = ASCBIN(CH1);
      283    12157                    %ENDIF;
      284    12158                 %ELSEIF OP2 = 16 ;
      285    12159                    %IF TBL2 = 1;
      286    12160                    TBL_1 = ASCBIN(CH2);
      287    12161                    %ELSEIF TBL2 = 2;
      288    12162                    TBL_2 = ASCBIN(CH2);
      289    12163                    %ELSEIF TBL2 = 5;
      290    12164                    TBL_5 = ASCBIN(CH2);
      291    12165                    %ENDIF;
      292    12166                 %ENDIF;
      293    12167                    SUBSTR(PIC_OUT.MOPSTR,MOP_L-%(LENGTHC(STR)),%(LENGTHC(STR))) = %STR;
      294    12168
      295    12169                    %IF OP1 = 16 AND CURRENCY_SIGN; /* LTE -- changed for currency sign */
      296    12170                      MOP_L = MOP_L + 1;
      297    12171                      SUBSTR (PIC_OUT.MOPSTR, MOP_L - 1, 1) = CH1;
      298    12172                    %ENDIF;
      299    12173                    END;
      300    12174               END ;
      301    12175        %MEND;
      302    12176                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:10   
      303    12177        /*I*        NAME:  GEN_TBL
      304    12178                 PURPOSE:  This macro generates scanning tables used while
      305    12179                           scanning the translated version of the input
      306    12180                           picture string.
      307    12181                    CALL:  %GEN_TBL(
      308    12182                             TBLN=table_name
      309    12183                             STCLASS=storage_class (CONSTANT)
      310    12184                             WIDTH=table_entry_width (BYTE)
      311    12185                             ASSUME=default_state_value
      312    12186                             XCR,XDB,XPT,XPL,XMI,X$,XZ,XST,XCM,XS,XP,XV,XE,X0,
      313    12187                             XSL,XX,X9,XB,XA,X#,XLP,XRP,X__,XNL=appropriate
      314    12188                                state value
      315    12189             DESCRIPTION:  This macro generates a declaration of a scanning
      316    12190                           table with appropriate state table entries filled
      317    12191                           in.  The ASSUME parameter indicates a value to be
      318    12192                           used for any unspecified states.
      319    12193                                                                                     */
      320    12194
      321    12195        %MACRO GEN_TBL (
      322    12196          TBLN=GEN_TBL, STCLASS=CONSTANT, WIDTH=BYTE, ASSUME=,
      323    12197          XCR=%DFLT_STATE, XDB=%DFLT_STATE, XPT=%DFLT_STATE, XPL=%DFLT_STATE,
      324    12198          XMI=%DFLT_STATE, X$ =%DFLT_STATE, XZ =%DFLT_STATE, XST=%DFLT_STATE,
      325    12199          XCM=%DFLT_STATE, XS =%DFLT_STATE, XP =%DFLT_STATE, XV =%DFLT_STATE,
      326    12200          XE =%DFLT_STATE, X0 =%DFLT_STATE, XSL=%DFLT_STATE, XX =%DFLT_STATE,
      327    12201          X9 =%DFLT_STATE, XB =%DFLT_STATE, XA =%DFLT_STATE, XN =%DFLT_STATE,
      328    12202          X# =%DFLT_STATE,
      329    12203          XLP=%DFLT_STATE, XRP=%DFLT_STATE, X__=%DFLT_STATE, XNL=%DFLT_STATE);
      330    12204          %IF LENGTHC(TEXTCHAR(ASSUME)) ~= 0 ;
      331    12205             %SET DFLT_STATE = %ASSUME;
      332    12206             %ENDIF;
      333    12207        DCL 1 TBLN STCLASS DALIGNED,2 S(0:24)  UBIN WIDTH UNAL INIT(
      334    12208         XCR,XDB,XPT,XPL,XMI,X$,XZ,XST,XCM,XS,XP,XV,XE,X0,XSL,XX,X9,XB,XA,XN,X#,XLP,XRP,X__,
             12208        XNL);
      335    12209          %MEND;
      336    12210                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:11   
      337    12211        /*I*        NAME:  ASSIGN_OP
      338    12212                 PURPOSE:  This macro generates a statement to assign the
      339    12213                           value of a MOP opcode to a variable.
      340    12214                    CALL:  %ASSIGN_OP(VAR=target_variable,OP=MOP_opcode);
      341    12215             DESCRIPTION:  This macro generates a statement to assign the
      342    12216                           value of a MOP opcode to a variable.  It's
      343    12217                           primarily useful as a way of hiding the actual
      344    12218                           values of the various opcodes.
      345    12219                                                                                     */
      346    12220
      347    12221        %MACRO ASSIGN_OP(
      348    12222          VAR=,
      349    12223          OP(INSM=1,ENF=2,SES=3,MVZB=4,MVZA=5,MFLS=6,MFLC=7,INSB=8,
      350    12224             INSA=9,INSN=10,INSP=11,IGN=12,MVC=13,MSES=14,MORS=15,
      351    12225             LTE=16,CHT=17)=0);
      352    12226          VAR = OP;
      353    12227        %MEND;
      354    12228                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:12   
      355    12229        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      356    12230         *                                                                           *
      357    12231         *                           P a r a m e t e r s                             *
      358    12232         *                                                                           *
      359    12233         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      360    12234
      361    12235        %INCLUDE Z8D_PIC_PARM;
      362    12341
      363    12342
      364    12343          %PIC_STR(LEN=PIC_IN.PIC_L);
      365    12347
      366    12348          %PIC_IN;
      367    12361
      368    12362          %PIC_OUT (STCLASS = " ") ;
      369    12435
      370    12436          %EQU COMMA = ',';
      371    12437          %EQU POINT = '.';
      372    12438                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:13   
      373    12439        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      374    12440         *                                                                           *
      375    12441         *                       E r r o r   M e s s a g e s                         *
      376    12442         *                                                                           *
      377    12443         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      378    12444
      379    12445        %INCLUDE Z8A_ERR_NUMS ;
      380    13209
      381    13210        /* EQU E_LO = 445; */
      382    13211
      383    13212        /* EQU E_ONLY_IN_REP = E_LO + 1; */
      384    13213        /*E*   ERROR: ZEX-00001-0
      385    13214             MESSAGE: This character belongs only in a repetition count.
      386    13215        */
      387    13216        /* EQU E_INVALID_CH = E_LO + 2; */
      388    13217        /*E*   ERROR: ZEX-00002-0
      389    13218             MESSAGE: This is not a legal picture character.
      390    13219        */
      391    13220        /* EQU E_END = E_LO + 3; */
      392    13221        /*E*   ERROR: ZEX-00003-0
      393    13222             MESSAGE: This picture ends in an unexpected manner.
      394    13223        */
      395    13224        /* EQU E_ZERO = E_LO + 4; */
      396    13225        /*E*   ERROR: ZEX-00004-0
      397    13226             MESSAGE: This is a zero length picture.
      398    13227        */
      399    13228        /* EQU E_PIC_L_MAX = E_LO + 5; */
      400    13229        /*E*   ERROR: ZEX-00005-0
      401    13230             MESSAGE: This picture is longer than the maximum allowed (256).
      402    13231        */
      403    13232        /* EQU E_IN_REP = E_LO + 6; */
      404    13233        /*E*   ERROR: ZEX-00006-0
      405    13234             MESSAGE: This character is illegal in a repetition count.
      406    13235        */
      407    13236        /* EQU E_0LEN_REP = E_LO + 7; */
      408    13237        /*E*   ERROR: ZEX-00007-0
      409    13238             MESSAGE: This repetition count is of zero length -- ().
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:14   
      410    13239        */
      411    13240                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:15   
      412    13241        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      413    13242         *                                                                           *
      414    13243         *                       E r r o r   M e s s a g e s (ctd.)                  *
      415    13244         *                                                                           *
      416    13245         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      417    13246
      418    13247        /* EQU E_0_REP = E_LO + 8; */
      419    13248        /*E*   ERROR: ZEX-00008-0
      420    13249             MESSAGE: A repetition count must be greater than zero.
      421    13250        */
      422    13251        /* EQU E_CRDB_ATEND = E_LO + 9; */
      423    13252        /*E*   ERROR: ZEX-00009-0
      424    13253             MESSAGE: CR or DB are legal only at the end of a picture.
      425    13254        */
      426    13255        /* EQU E_CRDB_NOT1ST = E_LO + 10; */
      427    13256        /*E*   ERROR: ZEX-00010-0
      428    13257             MESSAGE: CR or DB may not begin a picture.
      429    13258        */
      430    13259        /* EQU E_NO_E = E_LO + 11; */
      431    13260        /*E*   ERROR: ZEX-00011-0
      432    13261             MESSAGE: 'E' is not valid in this context.
      433    13262        */
      434    13263        /* EQU E_ONLY1_ = E_LO + 12; */
      435    13264        /*E*   ERROR: ZEX-00012-0
      436    13265             MESSAGE: This character can appear only once.
      437    13266        */
      438    13267        /* EQU E_NOTWITH_PTV = %E_LO + 13; */
      439    13268        /* EQU E_NOTWITH_V = E_NOTWITH_PTV; */
      440    13269        /*E*   ERROR: ZEX-00013-0
      441    13270             MESSAGE: 'V' and '.' cannot appear in the same picture.
      442    13271        */
      443    13272        /* EQU E_ONLY1SC = E_LO + 14; */
      444    13273        /*E*   ERROR: ZEX-00014-0
      445    13274             MESSAGE: Only one sign control symbol is permitted in a picture.
      446    13275        */
      447    13276                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:16   
      448    13277        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      449    13278         *                                                                           *
      450    13279         *                       E r r o r   M e s s a g e s (ctd.)                  *
      451    13280         *                                                                           *
      452    13281         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      453    13282
      454    13283        /* EQU E_ONLY1SUP = E_LO + 15; */
      455    13284        /*E*   ERROR: ZEX-00015-0
      456    13285             MESSAGE: Only one suppression type is permitted in a picture.
      457    13286        */
      458    13287        /* EQU E_NOTWITH_PTP = %E_LO + 16; */
      459    13288        /* EQU E_NOTWITH_P = E_NOTWITH_PTP; */
      460    13289        /*E*   ERROR: ZEX-00016-0
      461    13290             MESSAGE: 'P' and '.' cannot appear in the same picture.
      462    13291        */
      463    13292        /* EQU E_NOT_IN_EXRAD = %E_LO + 17; */
      464    13293        /*E*   ERROR: ZEX-00017-0
      465    13294             MESSAGE: This character is not legal in an exrad.
      466    13295        */
      467    13296        /* EQU E_EXRAD_LAST = %E_LO + 18; */
      468    13297        /*E*   ERROR: ZEX-00018-0
      469    13298             MESSAGE: The exrad must be the last portion of a floating picture.
      470    13299        */
      471    13300        /* EQU E_CONTEXT_ERR = %E_LO + 19; */
      472    13301        /*E*   ERROR: ZEX-00019-0
      473    13302             MESSAGE: This character is not legal in this context.
      474    13303        */
      475    13304        /* EQU E_NOT_IN_ANE = %E_LO + 20; */
      476    13305        /*E*   ERROR: ZEX-00020-0
      477    13306             MESSAGE: This character is not legal in an alphanumeric-edited picture.
      478    13307        */
      479    13308        /* EQU E_NOT_IN_N = %E_LO + 21; */
      480    13309        /*E*   ERROR: ZEX-00021-0
      481    13310             MESSAGE: This character is not legal in a numeric picture.
      482    13311        */
      483    13312                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:17   
      484    13313        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      485    13314         *                                                                           *
      486    13315         *                       E r r o r   M e s s a g e s (ctd.)                  *
      487    13316         *                                                                           *
      488    13317         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      489    13318
      490    13319        /* EQU E_NOT_IN_NE = %E_LO + 22; */
      491    13320        /*E*   ERROR: ZEX-00022-0
      492    13321             MESSAGE: This character is not legal in a numeric-edited picture.
      493    13322        */
      494    13323        /* EQU E_ONLY_IN_NE = %E_LO + 23; */
      495    13324        /*E*   ERROR: ZEX-00023-0
      496    13325             MESSAGE: This character is only legal in a numeric-edited picture.
      497    13326        */
      498    13327        /* EQU E_ONLY_IN_AN_ANE = %E_LO + 24; */
      499    13328        /*E*   ERROR: ZEX-00024-0
      500    13329             MESSAGE: This character is only legal in an alphanumeric or
      501    13330                      alphanumeric-edited picture.
      502    13331        */
      503    13332        /* EQU E_ONLY_IN_A__ = %E_LO + 25; */
      504    13333        /*E*   ERROR: ZEX-00025-0
      505    13334             MESSAGE: This character is only legal in an alpha-class picture.
      506    13335        */
      507    13336        /* EQU E_ONLY_IN_N = %E_LO + 26; */
      508    13337        /*E*   ERROR: ZEX-00026-0
      509    13338             MESSAGE: This character is only legal in a numeric picture.
      510    13339        */
      511    13340        /* EQU E_ONLY_IN_N_NE = %E_LO + 27; */
      512    13341        /*E*   ERROR: ZEX-00027-0
      513    13342             MESSAGE: This character is only legal in a numeric or numeric-edited picture.
      514    13343        */
      515    13344                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:18   
      516    13345        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      517    13346         *                                                                           *
      518    13347         *                       E r r o r   M e s s a g e s (ctd.)                  *
      519    13348         *                                                                           *
      520    13349         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      521    13350
      522    13351        /* EQU E_PM_NOT1ST = %E_LO + 28; */
      523    13352        /*E*   ERROR: ZEX-00028-0
      524    13353             MESSAGE: A leading +- must be the very first thing in a picture.
      525    13354        */
      526    13355        /* EQU E_S_NOT1ST = %E_LO + 29 ; */
      527    13356        /*E*   ERROR: ZEX-00029-0
      528    13357             MESSAGE: A leading S must be the very first thing in a picture.
      529    13358        */
      530    13359        /* EQU E_NOT_AFTER_P = %E_LO + 30; */
      531    13360        /*E*   ERROR: ZEX-00030-0
      532    13361             MESSAGE: V may not follow a sequence of leading P's.
      533    13362        */
      534    13363        /* EQU E_P_AFTER_V = %E_LO + 31 ; */
      535    13364        /*E*   ERROR: ZEX-00031-0
      536    13365             MESSAGE: Trailing P's may not follow a V.
      537    13366        */
      538    13367        /* EQU E_P_ATEND = %E_LO + 32 ; */
      539    13368        /*E*   ERROR: ZEX-00032-0
      540    13369             MESSAGE: This character may not follow a sequence of trailing P's.
      541    13370        */
      542    13371        /* EQU E_PL_EXRAD = %E_LO + 33 ; */
      543    13372        /*E*   ERROR: ZEX-00033-0
      544    13373             MESSAGE: A + is expected after the E in a numeric-floating-edited picture.
      545    13374        */
      546    13375        /* EQU E_S_EXRAD = %E_LO + 34 ; */
      547    13376        /*E*   ERROR: ZEX-00034-0
      548    13377             MESSAGE: An S is expected after the E in a numeric-floating picture.
      549    13378        */
      550    13379                                               %EJECT ;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:19   
      551    13380        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      552    13381         *                                                                           *
      553    13382         *                       E r r o r   M e s s a g e s (ctd.)                  *
      554    13383         *                                                                           *
      555    13384         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      556    13385
      557    13386        /* EQU E_NO_SUP = %E_LO + 35 ; */
      558    13387        /*E*   ERROR: ZEX-00035-0
      559    13388             MESSAGE: Suppression is not legal here.
      560    13389        */
      561    13390        /* EQU E_NOT_W_RSUP = %E_LO + 36 ; */
      562    13391        /*E*   ERROR: ZEX-00036-0
      563    13392             MESSAGE: 9's are not legal once suppresion continues past the decimal point.
      564    13393        */
      565    13394        /* EQU E_S_NOT_LAST = %E_LO + 37 ; */
      566    13395        /*E*   ERROR: ZEX-00037-0
      567    13396             MESSAGE: A trailing S must be the very last thing in a picture.
      568    13397        */
      569    13398        /* EQU E_PM_NOT_LAST = %E_LO + 38 ; */
      570    13399        /*E*   ERROR: ZEX-00038-0
      571    13400             MESSAGE: A trailing +- must be the very last thing in a picture.
      572    13401        */
      573    13402        /* EQU E_NO_DIGITS = %E_LO + 39 ; */
      574    13403        /*E*   ERROR: ZEX-00039-0
      575    13404             MESSAGE: This picture needs no source characters.
      576    13405        */
      577    13406        /* EQU E_INTERNAL_1 = %E_LO + 471 ; */
      578    13407        /*E*   ERROR: ZEX-00040-0
      579    13408             MESSAGE: <<<<<<<<<<  Internal Error 1  >>>>>>>>>>
      580    13409        */
      581    13410        /* EQU E_INTERNAL_2 = %E_LO + 472 ; */
      582    13411        /*E*   ERROR: ZEX-00041-0
      583    13412             MESSAGE: <<<<<<<<<<  Internal Error 2  >>>>>>>>>>
      584    13413        */
      585    13414        /* EQU E_NOMORE_MOPS = %E_LO + 473; */
      586    13415        /*E*   ERROR: ZEX-00028-0
      587    13416             MESSAGE: MOP string generation space has been exhausted.
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:20   
      588    13417        */
      589    13418                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:21   
      590    13419        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      591    13420         *                                                                           *
      592    13421         *                          S t a t e   C o d e s                            *
      593    13422         *                                                                           *
      594    13423         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      595    13424
      596    13425        %EQU _IGN            =  0;
      597    13426        %EQU _CR_DB          =  1;
      598    13427        %EQU _PT             =  2;
      599    13428        %EQU _1STPM          =  3;
      600    13429        %EQU _1ST$           =  4;
      601    13430        %EQU _1STSU          =  5;
      602    13431        %EQU _FX_CM          =  6;
      603    13432        %EQU _FX_0           =  7;
      604    13433        %EQU _FX_SL          =  8;
      605    13434        %EQU _ST_B           =  9;
      606    13435        %EQU _SU_CM          = 10;
      607    13436        %EQU _SU_0           = 11;
      608    13437        %EQU _SU_SL          = 12;
      609    13438        %EQU _LT_S           = 13;
      610    13439        %EQU _P              = 14;
      611    13440        %EQU _V              = 15;
      612    13441        %EQU _E              = 16;
      613    13442        %EQU _MOVCH          = 17;
      614    13443        %EQU _1ST9           = 18;
      615    13444        %EQU _B_             = 19;
      616    13445        %EQU _FIXPM          = 20;
      617    13446        %EQU _SUPPRESSION    = 21;
      618    13447        %EQU _RT_SUPPRESSION = 22;
      619    13448        %EQU _LT_9           = 23;
      620    13449        %EQU _EXRAD9         = 24;
      621    13450        %EQU _END            = 25;
      622    13451        %EQU _SCAN_END       =  1;
      623    13452        %EQU _SCAN_CNT       =  2;
      624    13453        %EQU _FIXED          =  1;
      625    13454        %EQU _FLOAT          =  2;
      626    13455                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:22   
      627    13456        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      628    13457         *                                                                           *
      629    13458         *                         S t a t e   T a b l e s                           *
      630    13459         *                                                                           *
      631    13460         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      632    13461
      633    13462    1   DCL  INIT_TBL(0:24)          UBIN WORD CONSTANT INIT(
      634    13463                           /*B* INIT_TBL the initial values for STATE_TBL             */
      635    13464    1           %_CR_DB,%_CR_DB,%_PT   ,%_1STPM,%_1STPM,%_1ST$ ,
      636    13465    1           %_1STSU,%_1STSU,%_FX_CM,%_LT_S ,%_P    ,%_V    ,
      637    13466    1           %E$E_NOT_IN_VALID_CONTEXT,%_FX_0 ,%_FX_SL,%_MOVCH,%_1ST9 ,%_B_   ,
      638    13467    1           %_MOVCH,
      639    13468    1           %_MOVCH,%E$ONLY_IN_REP_CNT,%E$ONLY_IN_REP_CNT,%E$ONLY_IN_REP_CNT,
      640    13469    1           %E$INVALID_CHARACTER,%_END);
      641    13470
      642    13471        %GEN_TBL(TBLN=SCAN_TBL1, STCLASS=STATIC, ASSUME=%_SCAN_END,
      643    13472          X# =%E$ONLY_IN_REP_CNT,
      644    13473          XLP=%_SCAN_CNT,
      645    13474          XRP=%E$ONLY_IN_REP_CNT,
      646    13475          X__=%E$INVALID_CHARACTER);
      647    13482                           /*B* SCAN_TBL1 scan off like characters and locate
      648    13483                               a '(' beginning a count field.                         */
      649    13484        %GEN_TBL(TBLN=SCAN_TBL2, ASSUME=%E$CHAR_ILLEGAL_IN_REP_CNT,
      650    13485          X0 =%_IGN,
      651    13486          X9 =%_IGN,
      652    13487          X# =%_IGN,
      653    13488          XRP=%_SCAN_END,
      654    13489          X__=%E$INVALID_CHARACTER,
      655    13490          XNL=%E$END_UNEXPECTED);
      656    13497                           /*B* SCAN_TBL2 scan off the replication factor.              */
      657    13498                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:23   
      658    13499        %GEN_TBL(TBLN=SPCL_SUP, STCLASS=STATIC, ASSUME=%_IGN,
      659    13500          XCR=%_FIXED,
      660    13501          XDB=%_FIXED,
      661    13502          XPT=%_FIXED,
      662    13503          XPL=%_FIXED,
      663    13504          XMI=%_FIXED,
      664    13505          X$ =%_FIXED,
      665    13506          XZ =%_FIXED,
      666    13507          XST=%_FIXED,
      667    13508          XE =%_FIXED);
      668    13515
      669    13516
      670    13517        %GEN_TBL(TBLN=EXRAD_ONLY, WIDTH=WORD, ASSUME=%E$INVALID_CHAR_IN_EXRAD,
      671    13518          X9 =%_EXRAD9,
      672    13519          X# =%E$ONLY_IN_REP_CNT,
      673    13520          XLP=%E$ONLY_IN_REP_CNT,
      674    13521          XRP=%E$ONLY_IN_REP_CNT,
      675    13522          X__=%E$INVALID_CHARACTER,
      676    13523          XNL=%E$EXRAD_MUST_BE_LAST);
      677    13530                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:24   
      678    13531                      /*       Distinguished Characters (the %X's)
      679    13532
      680    13533                                      Legal Picture Types
      681    13534                       Char  Name  A  AN  ANE  N  NE  NF  NFE  KANJI
      682    13535                        C    %XCR  |   |   |   |   x   |   |    |
      683    13536                        D    %XDB  |   |   |   |   x   |   |    |
      684    13537                        .    %XPT  |   |   |   |   x   |   x    |
      685    13538                        +    %XPL  |   |   |   |   x   |   x    |
      686    13539                        -    %XMI  |   |   |   |   x   |   x    |
      687    13540                        $    %X$   |   |   |   |   x   |   |    |
      688    13541                        Z    %XZ   |   |   |   |   x   |   |    |
      689    13542                        *    %XST  |   |   |   |   x   |   |    |
      690    13543                        ,    %XCM  |   |   |   |   x   |   |    |
      691    13544
      692    13545                        S    %XS   |   |   |   x   |   x   |    |
      693    13546
      694    13547                        P    %XP   |   |   |   x   x   |   |    |
      695    13548                        V    %XV   |   |   |   x   x   x   |    |
      696    13549
      697    13550                        E    %XE   |   |   |   |   |   x   x    |
      698    13551                        0    %X0   |   |   x   |   x   |   |    |
      699    13552                        /    %XSL  |   |   x   |   x   |   |    |
      700    13553
      701    13554                        X    %XX   |   x   x   |   |   |   |    |
      702    13555
      703    13556                        9    %X9   |   x   x   x   x   x   x    |
      704    13557
      705    13558                        B    %XB   x   |   x   |   x   |   |    |
      706    13559
      707    13560                        A    %XA   x   x   x   |   |   |   |    |
      708    13561
      709    13562                        N    %XN   |   |   |   |   |   |   |    x
      710    13563
      711    13564                       1-8   %X#
      712    13565                        (    %XLP
      713    13566                        )    %XRP
      714    13567                       o.w.  %X__
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:25   
      715    13568                       null  %XNL
      716    13569                                                                                      */
      717    13570        %SET LISTINC = '1'B;
      718    13571        %INCLUDE Z8D_PIC_TABL;
        1+   13572        /*T***********************************************************/
        2+   13573        /*T*                                                         */
        3+   13574        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+   13575        /*T*                                                         */
        5+   13576        /*T***********************************************************/
        6+   13577        /* Picture string XLATE table and %EQU's for indexes */
        7+   13578
        8+   13579        %EQU XCR =  0;
        9+   13580        %EQU XDB =  1;
       10+   13581        %EQU XPT =  2;
       11+   13582        %EQU XPL =  3;
       12+   13583        %EQU XMI =  4;
       13+   13584        %EQU X$  =  5;
       14+   13585        %EQU XZ  =  6;
       15+   13586        %EQU XST =  7;
       16+   13587        %EQU XCM =  8;
       17+   13588        %EQU XS  =  9;
       18+   13589        %EQU XP  = 10;
       19+   13590        %EQU XV  = 11;
       20+   13591        %EQU XE  = 12;
       21+   13592        %EQU X0  = 13;
       22+   13593        %EQU XSL = 14;
       23+   13594        %EQU XX  = 15;
       24+   13595        %EQU X9  = 16;
       25+   13596        %EQU XB  = 17;
       26+   13597        %EQU XA  = 18;
       27+   13598        %EQU XN  = 19;
       28+   13599        %EQU X#  = 20;
       29+   13600        %EQU XLP = 21;
       30+   13601        %EQU XRP = 22;
       31+   13602        %EQU X__ = 23;
       32+   13603        %EQU XNL = 24;
       33+   13604                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:26   
       34+   13605    1   DCL
       35+   13606    1     1  XLATE_TBL
       36+   13607                                     %IF INITIALIZE;
       38+   13609                                     %ELSE;
       39+   13610    1                                   DALIGNED SYMREF,
       40+   13611                                     %ENDIF;
       41+   13612                           /*B* XLATE_TBL the distinguished char translation table    */
       42+   13613    1        2  *(0:127)             UBIN BYTE UNAL
       43+   13614                                     %IF INITIALIZE;
       63+   13634                                      %ENDIF;
       64+   13635    1        ;
       65+   13636
       66+   13637    1   DCL PIC_XLATE_CH (0:127)  REDEF XLATE_TBL UBIN BYTE UNAL;
      719    13638        %SET LISTINC = '0'B;
      720    13639                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:27   
      721    13640        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      722    13641         *                                                                           *
      723    13642         *                      L o c a l   V a r i a b l e s                        *
      724    13643         *                                                                           *
      725    13644         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      726    13645
      727    13646        %EQU PIC_L_MAX = 256;
      728    13647                           /*B* PIC_L_MAX %EQU of the max legal length of a picture.  */
      729    13648    1   DCL  CH                      CHAR(%(PIC_L_MAX+1)) DALIGNED;
      730    13649                           /*B* CH is the string of translated (distinguished)
      731    13650                                characters.                                           */
      732    13651    1   DCL  S                       UBIN;
      733    13652                           /*B* S the current position in the pic string              */
      734    13653    1   DCL  CNT                     UBIN;
      735    13654                           /*B* CNT replication count                                 */
      736    13655    1   DCL  NEXT_S                  UBIN;
      737    13656                           /*B* NEXT_S the next position in the pic string            */
      738    13657    1   DCL  STATE_TBL(0:24)         UBIN WORD;
      739    13658                           /*B* STATE_TBL the current state table                     */
      740    13659    1   DCL
      741    13660    1     1  STATE_CLASS             REDEF STATE_TBL,
      742    13661    1        2  NE(0:8)              UBIN WORD, /* CR, ..., CM */
      743    13662    1        2  N                    UBIN WORD, /* S           */
      744    13663    1        2  N_NE(0:1)            UBIN WORD, /* P, V        */
      745    13664    1        2  *                    UBIN WORD, /* E           */
      746    13665    1        2  ANE_NE(0:1)          UBIN WORD, /* O, SL       */
      747    13666    1        2  AN_ANE               UBIN WORD, /* X           */
      748    13667    1        2  *                    UBIN WORD, /* 9           */
      749    13668    1        2  A_ANE_NE             UBIN WORD, /* B           */
      750    13669    1        2  A_AN_ANE             UBIN WORD, /* A           */
      751    13670    1        2  K                    UBIN WORD, /* N  [KANJI]  */
      752    13671    1        2  *(0:4)               UBIN WORD;
      753    13672    1   DCL  STATE                   UBIN;
      754    13673                           /*B* STATE the current state.                              */
      755    13674    1   DCL  MOP_L_MAX               UBIN WORD;
      756    13675                           /*B* MOP_L_MAX local copy of PIC_IN.MOP_L                  */
      757    13676    1   DCL  MOP_L                   UBIN WORD;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:28   
      758    13677                           /*B* MOP_L current length of mop string                    */
      759    13678    1   DCL
      760    13679    1     1  BITS(0:24)              ALIGNED CONSTANT,
      761    13680    1        2  REP_LEGAL            BIT(1) UNAL INIT(
      762    13681                           /*B* BITS.REP_LEGAL bit map for the legality of a
      763    13682                                replication count.                                    */
      764    13683    1     '0'B,'0'B,'0'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'0'B,'1'B,'0'B,
      765    13684    1     '0'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'0'B,'0'B,'0'B,'0'B,'0'B),
      766    13685    1        2  TYPE_CHECK           BIT(1) UNAL INIT(
      767    13686                           /*B* BITS.TYPE_CHECK bit map for the need to type check.   */
      768    13687    1     '1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,
      769    13688    1     '0'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'0'B,'0'B,'0'B,'0'B,'0'B);
      770    13689    1   DCL  CURR_CH                 UBIN;
      771    13690                           /*B* CURR_CH current character                             */
      772    13691    1   DCL  CONTINUE_SCAN           BIT(1) ALIGNED;
      773    13692                           /*B* CONTINUE_SCAN true/false continue multi-symbol scan   */
      774    13693    1   DCL  SCAN_X                  UBIN;
      775    13694                           /*B* SCAN_X index into CH during multi-symbol scan         */
      776    13695
      777    13696    1   DCL  I                       UBIN;
      778    13697    1   DCL  L                       UBIN;
      779    13698    1   DCL  CRDB4                   CHAR(4) ALIGNED;
      780    13699    1   DCL  CRDB4_BIT               REDEF CRDB4 BIT(36);
      781    13700    1   DCL  CR_DB(0:1)              CHAR(4) ALIGNED CONSTANT INIT('CR','DB');
      782    13701
      783    13702    1   DCL  DIGITS                  SBIN;
      784    13703    1   DCL  TDIGITS                 SBIN;
      785    13704    1   DCL  WIDTH                   SBIN;
      786    13705    1   DCL  LEFT                    SBIN;
      787    13706    1   DCL  SCALE                   SBIN;
      788    13707    1   DCL  ES_ON                   BIT(1);
      789    13708    1   DCL  ENF_NEEDED              BIT(1);
      790    13709
      791    13710    1   DCL  SUP                     UBIN;
      792    13711    1   DCL  BZ_MOP                  SBIN;
      793    13712                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:29   
      794    13713    1   DCL  TYPE                    UBIN;
      795    13714
      796    13715    1   DCL
      797    13716    1     1  POSS_TY                 ALIGNED,
      798    13717    1        2  K                    BIT(1) UNAL,  /* Kanji */
      799    13718    1        2  A                    BIT(1) UNAL,
      800    13719    1        2  AN                   BIT(1) UNAL,
      801    13720    1        2  ANE                  BIT(1) UNAL,
      802    13721    1        2  N                    BIT(1) UNAL,
      803    13722    1        2  NE                   BIT(1) UNAL,
      804    13723    1        2  NF                   BIT(1) UNAL,
      805    13724    1        2  NFE                  BIT(1) UNAL;
      806    13725        %EQU POSS_TY_NE      = '00000100'B;
      807    13726        %EQU POSS_TY_INIT    = '11111111'B;
      808    13727        %EQU POSS_TY_N_NF    = '00001010'B;
      809    13728        %EQU POSS_TY_N_NE    = '00001100'B;
      810    13729        %EQU POSS_TY_NF      = '00000010'B;
      811    13730        %EQU POSS_TY_FLT     = '00000011'B;
      812    13731    1   DCL  P_TEST_STR_INIT(0:4)    UBIN BYTE UNAL CONSTANT INIT(
      813    13732    1                                   %XS,%XV,%XPL,%XMI,%X$);
      814    13733    1   DCL  P_TEST_STR              REDEF P_TEST_STR_INIT CHAR(5);
      815    13734    1   DCL  TBL_1                   UBIN;
      816    13735    1   DCL  TBL_2                   UBIN;
      817    13736    1   DCL  TBL_5                   UBIN;
      818    13737    1   DCL  MOP_OP                  UBIN;
      819    13738    1   DCL
      820    13739    1     1  SUP_INS_MOP             ALIGNED,
      821    13740    1        2  OP                   UBIN(5) UNAL,
      822    13741    1        2  N                    UBIN(4) UNAL;
      823    13742        %EQU EIT_B  = 1;
      824    13743        %EQU EIT_ST = 2;
      825    13744        %EQU EIT_PL = 3;
      826    13745        %EQU EIT_MI = 4;
      827    13746        %EQU EIT_$  = 5;
      828    13747        %EQU EIT_CM = 6;
      829    13748        %EQU EIT_PT = 7;
      830    13749        %EQU EIT_0  = 8;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:30   
      831    13750                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:31   
      832    13751    1   DCL  EIS_TYPE                UBIN;
      833    13752
      834    13753        %EQU NO_LAST_OP = 64;
      835    13754    1   DCL  LAST_MOP_OP             UBIN;
      836    13755    1   DCL  LAST_MOP_L              UBIN;
      837    13756    1   DCL  LAST_MOP_N              UBIN;
      838    13757
      839    13758    1   DCL  PROC$                   PTR;
      840    13759
      841    13760        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      842    13761         *                                                                           *
      843    13762         *                  I n t e r n a l  P r o c e d u r e s                     *
      844    13763         *                                                                           *
      845    13764         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      846    13765
      847    13766        %SET LISTDIR = '0'B;
      848    13767
      849    13768
      850    13769
      852    13771          /* %SET _INTERNAL_PROC = '1'B; */

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:32   
      854    13773        /*I*        NAME:  TYPE_CHECK
      855    13774                 PURPOSE:  This procedure checks the current character
      856    13775                           (CURR_CH) to see if it is legal character given
      857    13776                           what is known of the possible legal picture types
      858    13777                           up to this point in the picture scan.
      859    13778                    CALL:  CALL TYPE_CHECK ALTRET(ERR_ROUTINE);
      860    13779             DESCRIPTION:  Each picture character is legal in only certain
      861    13780                           types of pictures.  There are seven such types--
      862    13781                           alphabetic, alphanumeric, alphanumeric-edited,
      863    13782                           numeric, numeric-edited, numeric-floating, and
      864    13783                           numeric-floating-edited.  For each picture
      865    13784                           character, there is a mask (in POSS_TY_MASK)
      866    13785                           which marks which picture types are legal for
      867    13786                           this character.  Starting with a mask of all
      868    13787                           1's in POSS_TY, the mask element of each picture
      869    13788                           character is ANDed with POSS_TY.  If the result
      870    13789                           is ever zero, then picture is in error.  By this
      871    13790                           means it is possible to determine that an "X" and
      872    13791                           decimal point may not be in the same picture.  In
      873    13792                           addition, if there is ever only one bit on in
      874    13793                           POSS_TY, then the picture type has been fully
      875    13794                           determined.
      876    13795                                                                                   *//*
      877    13796                           As succesive picture characters reduce the number
      878    13797                           of possible legal characters in the picture the
      879    13798                           state table is set with error state indications to
      880    13799                           so indicate.
      881    13800                  INPUTS:  CURR_CH
      882    13801                           POSS_TY
      883    13802                           TYPE
      884    13803                 OUTPUTS:  POSS_TY
      885    13804                           TYPE
      886    13805                           STATE_TBL
      887    13806               INTERFACE:  none
      888    13807                                                                                     */

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:33   
      890    13809    1     TYPE_CHECK: PROC ALTRET;
      891    13810    2     DCL
      892    13811    2        1  NEW_POSS_TY          ALIGNED,
      893    13812    2           2  K                 BIT(1) UNAL, /* 32 */
      894    13813    2           2  A                 BIT(1) UNAL, /* 16 */
      895    13814    2           2  AN                BIT(1) UNAL, /*  8 */
      896    13815    2           2  ANE               BIT(1) UNAL, /*  4 */
      897    13816    2           2  N                 BIT(1) UNAL, /*  2 */
      898    13817    2           2  NE                BIT(1) UNAL, /*  1 */
      899    13818    2           2  NF                BIT(1) UNAL,
      900    13819    2           2  NFE               BIT(1) UNAL;
      901    13820    2     DCL   POSS_TY#             REDEF NEW_POSS_TY UBIN(6) ALIGNED;
      902    13821    2     DCL   POSS_TY_MASK(0:19)   BIT(8) ALIGNED CONSTANT INIT(
      903    13822    2                                /* %XCR */ '00000100'B,
      904    13823    2                                /* %XDB */ '00000100'B,
      905    13824    2                                /* %XPT */ '00000101'B,
      906    13825    2                                /* %XPL */ '00000101'B,
      907    13826    2                                /* %XMI */ '00000101'B,
      908    13827    2                                /* %X$  */ '00000100'B,
      909    13828    2                                /* %XZ  */ '00000100'B,
      910    13829    2                                /* %XST */ '00000100'B,
      911    13830    2                                /* %XCM */ '00000100'B,
      912    13831    2                                /* %XS  */ '00001010'B,
      913    13832    2                                /* %XP  */ '00001100'B,
      914    13833    2                                /* %XV  */ '00001110'B,
      915    13834    2                                /* %XE  */ '00000011'B,
      916    13835    2                                /* %X0  */ '00010100'B,
      917    13836    2                                /* %XSL */ '00010100'B,
      918    13837    2                                /* %XX  */ '00110000'B,
      919    13838    2                                /* %X9  */ '00111111'B,
      920    13839    2                                /* %XB  */ '00010100'B,
      921    13840    2                                /* %XA  */ '01110000'B,
      922    13841    2                                /* %XN  */ '10000000'B);
      923    13842    2     DCL   POSS_TY_MASK74(0:19) BIT(8) ALIGNED CONSTANT INIT(
      924    13843    2                                /* %XCR */ '00000100'B,
      925    13844    2                                /* %XDB */ '00000100'B,
      926    13845    2                                /* %XPT */ '00000101'B,
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:34   
      927    13846    2                                /* %XPL */ '00000101'B,
      928    13847    2                                /* %XMI */ '00000101'B,
      929    13848    2                                /* %X$  */ '00000100'B,
      930    13849    2                                /* %XZ  */ '00000100'B,
      931    13850    2                                /* %XST */ '00000100'B,
      932    13851    2                                /* %XCM */ '00000100'B,
      933    13852    2                                /* %XS  */ '00001010'B,
      934    13853    2                                /* %XP  */ '00001100'B,
      935    13854    2                                /* %XV  */ '00001110'B,
      936    13855    2                                /* %XE  */ '00000011'B,
      937    13856    2                                /* %X0  */ '00010100'B,
      938    13857    2                                /* %XSL */ '00010100'B,
      939    13858    2                                /* %XX  */ '00110000'B,
      940    13859    2                                /* %X9  */ '00111111'B,
      941    13860    2                                /* %XB  */ '01010100'B, /* Diff for
      942    13861                                                Cobol74 - the second bit is
      943    13862                                                set meaning a "B" char is
      944    13863                                                legal as an alphabetic char */
      945    13864    2                                /* %XA  */ '01110000'B,
      946    13865    2                                /* %XN  */ '10000000'B);

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:35   
      948    13867    2     DCL   TY_ERR(0:8)          UBIN WORD CONSTANT INIT(
      949    13868    2                                   %E$CHAR_IN_WRONG_CONTEXT,
      950    13869    2                                   %E$CHAR_IN_WRONG_CONTEXT,
      951    13870    2                                   %E$CHAR_IN_WRONG_CONTEXT,
      952    13871    2                                   %E$CHAR_IN_WRONG_CONTEXT,
      953    13872    2                                   %E$ILL_CHAR_FOR_ANE_PIC,
      954    13873    2                                   %E$ILL_CHAR_FOR_N_PIC,
      955    13874    2                                   %E$ILL_CHAR_FOR_NE_PIC,
      956    13875    2                                   %E$INVALID_CHAR_IN_EXRAD,
      957    13876    2                                   %E$INVALID_CHAR_IN_EXRAD);
      958    13877    2     DCL   E_NOT_IN_N(0:8)      UBIN WORD CONSTANT INIT(%E$ILL_CHAR_FOR_N_PIC*0);
      959    13878    2     DCL   E_NOT_IN_ANE(0:8)    UBIN WORD CONSTANT INIT(%E$ILL_CHAR_FOR_ANE_PIC*0);
      960    13879    2     DCL   E_ONLY_IN_NE(0:8)    UBIN WORD CONSTANT INIT(%E$CHAR_ONLY_FOR_NE_PIC*0);
      961    13880
      962    13881    2        IF COMCOM.OB.COBOL_74 THEN
      963    13882    2          NEW_POSS_TY = POSS_TY & POSS_TY_MASK74(CURR_CH);
      964    13883    2        ELSE
      965    13884    2          NEW_POSS_TY = POSS_TY & POSS_TY_MASK(CURR_CH);
      966    13885    2        IF NEW_POSS_TY = '0'B THEN
      967    13886                %ERR(CODE="TY_ERR(TYPE)");
      968    13904    2        POSS_TY = NEW_POSS_TY;
      969    13905    3        IF TYPE = 0 THEN DO CASE(POSS_TY#);
      970    13906    3         CASE(0,7,15,23,31,63);
      971    13907                   /* DO NOTHING*/
      972    13908    3         CASE(1);
      973    13909    4           IF NOT POSS_TY.NFE THEN DO;
      974    13910    4              TYPE = %PIC_TY_NE;
      975    13911    4              STATE_TBL(%XE) = %E$ILL_CHAR_FOR_N_PIC;
      976    13912    4              END;
      977    13913    3           STATE_CLASS.N        = %E$ILL_CHAR_FOR_NE_PIC;
      978    13914    3           STATE_CLASS.AN_ANE   = %E$ILL_CHAR_FOR_NE_PIC;
      979    13915    3           STATE_CLASS.A_AN_ANE = %E$ILL_CHAR_FOR_NE_PIC;
      980    13916    3         CASE(2);
      981    13917    4           IF NOT POSS_TY.NF THEN DO;
      982    13918    4              TYPE = %PIC_TY_N;
      983    13919    4              STATE_TBL(%XE) = %E$ILL_CHAR_FOR_N_PIC;
      984    13920    4              END;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:36   
      985    13921    3           STATE_CLASS.NE       = E_NOT_IN_N;
      986    13922    3           STATE_CLASS.ANE_NE   = E_NOT_IN_N;
      987    13923    3           STATE_CLASS.AN_ANE   = %E$ILL_CHAR_FOR_N_PIC;
      988    13924    3           STATE_CLASS.A_ANE_NE = %E$ILL_CHAR_FOR_N_PIC;
      989    13925    3           STATE_CLASS.A_AN_ANE = %E$ILL_CHAR_FOR_N_PIC;
      990    13926    3         CASE(3);
      991    13927    3           STATE_CLASS.AN_ANE   = %E$CHAR_ONLY_FOR_AN_ANE_PIC;
      992    13928    3           STATE_CLASS.A_AN_ANE = %E$CHAR_ONLY_FOR_ALPHA;
      993    13929    3         CASE(4);
      994    13930    3           TYPE = %PIC_TY_ANE;
      995    13931    3           STATE_CLASS.NE       = E_NOT_IN_ANE;
      996    13932    3           STATE_CLASS.N        = %E$ILL_CHAR_FOR_ANE_PIC;
      997    13933    3           STATE_CLASS.N_NE     = E_NOT_IN_ANE;
      998    13934    3         CASE(5,13,21,29);
      999    13935    3           STATE_CLASS.N        = %E$CHAR_ONLY_FOR_N_PIC;
     1000    13936    3         CASE(6,14,22,30);
     1001    13937    3           STATE_CLASS.NE       = E_ONLY_IN_NE;
     1002    13938    3         CASE(12,20,28);
     1003    13939    3           STATE_CLASS.NE       = E_ONLY_IN_NE;
     1004    13940    3           STATE_CLASS.N        = %E$CHAR_ONLY_FOR_N_PIC;
     1005    13941    3           STATE_CLASS.N_NE(0)  = %E$CHAR_ONLY_FOR_N_NE_PIC;
     1006    13942    3           STATE_CLASS.N_NE(1)  = %E$CHAR_ONLY_FOR_N_NE_PIC;
     1007    13943    3         CASE(32); /* KANJI -- PIC N */
     1008    13944    3           TYPE = %PIC_TY_K;
     1009    13945    3         CASE(ELSE);
     1010    13946                %ERR(CODE=%E$BAD_PIC_TYPE);
     1011    13964    3         END; /*DO CASE*/
     1012    13965    2      END; /*TYPE_CHECK*/

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:37   
     1014    13967        /*I*        NAME:  N#_MOP
     1015    13968                 PURPOSE:  This procedure generates a suitable number of move
     1016    13969                           type micro-operations to move the requested number
     1017    13970                           of source characters.
     1018    13971                    CALL:  CALL N#_MOP ALTRET(ERR_ROUTINE);
     1019    13972             DESCRIPTION:  The micro operation to be done is in MOP_OP, and
     1020    13973                           the count of the number of source characters is in
     1021    13974                           CNT.  In addition, LAST_MOP_L, LAST_MOP_OP, and
     1022    13975                           LAST_MOP_N indicate the position, operation code,
     1023    13976                           and count used in the last MOP generated by this
     1024    13977                           procedure.  If LAST_MOP_L = MOP_L and LAST_MOP_OP
     1025    13978                           = MOP_OP,  then the new count can simply be added
     1026    13979                           into the last count.  For this reason, a picture
     1027    13980                           such as "X(3)9(6)X(3)" produces one MVC(12) MOP.
     1028    13981                  INPUTS:  MOP_OP
     1029    13982                           CNT
     1030    13983                           MOP_L
     1031    13984                           LAST_MOP_L
     1032    13985                           LAST_MOP_OP
     1033    13986                           LAST_MOP_N
     1034    13987                           MOP_L_MAX
     1035    13988                 OUTPUTS:  MOP_L
     1036    13989                           LAST_MOP_L
     1037    13990                           LAST_MOP_OP
     1038    13991                           LAST_MOP_N
     1039    13992                           PIC_OUT.MOPSTR
     1040    13993               INTERFACE:  none
     1041    13994                                                                                     */

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:38   
     1043    13996    1     N#_MOP: PROC ALTRET;
     1044    13997    2     DCL   N                    UBIN;
     1045    13998    2     DCL
     1046    13999    2        1  MOP_N#               ALIGNED,
     1047    14000    2           2  OP                UBIN(5) UNAL,
     1048    14001    2           2  N                 UBIN(4) UNAL;
     1049    14002
     1050    14003    2        MOP_N# = '0'B;
     1051    14004    2        MOP_N#.OP = MOP_OP;
     1052    14005    2        N = CNT;
     1053    14006    3        IF LAST_MOP_L = MOP_L AND LAST_MOP_OP = MOP_OP THEN DO;
     1054    14007    3           MOP_L = MOP_L - 1;
     1055    14008    3           N = N + LAST_MOP_N;
     1056    14009    3           END;
     1057    14010    3        DO WHILE(N>16);
     1058    14011    3           IF MOP_L >= MOP_L_MAX THEN
     1059    14012    4              DO ;
     1060    14013                     /* Added to accompany mops > 63 - 2/25/82 */
     1061    14014    4                MOP_L = 0 ;
     1062    14015    4                MOP_L_MAX = 0 ;
     1063    14016    4                RETURN ;
     1064    14017    4              END ;
     1065    14018    3           PIC_OUT.MOP(MOP_L) = MOP_N#;
     1066    14019    3           N = N - 16;
     1067    14020    3           MOP_L = MOP_L + 1;
     1068    14021    3           END;
     1069    14022    3        IF N ~= 0 THEN DO;
     1070    14023    3           IF MOP_L >= MOP_L_MAX THEN
     1071    14024    4              DO ;
     1072    14025                     /* Added to accompany mops > 63 - 2/25/82 */
     1073    14026    4                MOP_L = 0 ;
     1074    14027    4                MOP_L_MAX = 0 ;
     1075    14028    4                RETURN ;
     1076    14029    4              END ;
     1077    14030    3           MOP_N#.N = N;
     1078    14031    3           PIC_OUT.MOP(MOP_L) = MOP_N#;
     1079    14032    3           MOP_L = MOP_L + 1;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:39   
     1080    14033    3           LAST_MOP_L = MOP_L;
     1081    14034    3           LAST_MOP_OP = MOP_OP;
     1082    14035    3           LAST_MOP_N = N;
     1083    14036    3           END;
     1084    14037    2        ELSE
     1085    14038    2           LAST_MOP_OP = %NO_LAST_OP;
     1086    14039    2      END; /*N#_MOP*/

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:40   
     1088    14041        /*I*        NAME:  SUP_INSERTION
     1089    14042                 PURPOSE:  This procedure generates an insertion character
     1090    14043                           while in suppression mode.
     1091    14044                    CALL:  CALL SUP_INSERTION ALTRET(ERR_ROUTINE);
     1092    14045               INTERFACE:  none
     1093    14046             DESCRIPTION:  This procedure generates an insertion character
     1094    14047                           while in suppression mode.  Either an INSA or
     1095    14048                           INSB mop operation is used depending on the value
     1096    14049                           of SUP
     1097    14050                   INPUT:  SUP, SUP_INS_MOP, CNT
     1098    14051                  OUTPUT:  "CNT" INSA or INSB mops as appropriate
     1099    14052                 SCRATCH:  I
     1100    14053                                                                                     */
     1101    14054    1     SUP_INSERTION: PROC ALTRET;
     1102    14055    2        IF MOP_L + CNT >= MOP_L_MAX THEN
     1103    14056    3              DO ;
     1104    14057                     /* Added to accompany mops > 63 - 2/25/82 */
     1105    14058    3                MOP_L = 0 ;
     1106    14059    3                MOP_L_MAX = 0 ;
     1107    14060    3                RETURN ;
     1108    14061    3              END ;
     1109    14062    2        IF SUP = %XST THEN
     1110    14063                %ASSIGN_OP(VAR=SUP_INS_MOP.OP,OP=INSA);
     1111    14066    2        ELSE
     1112    14067                %ASSIGN_OP(VAR=SUP_INS_MOP.OP,OP=INSB);
     1113    14070    3        DO I = 0 TO CNT-1;
     1114    14071    3           PIC_OUT.MOP(MOP_L) = SUP_INS_MOP;
     1115    14072    3           MOP_L = MOP_L + 1;
     1116    14073    3           END;
     1117    14074    2      END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:41   
     1119    14076        /*I*        NAME:  SUP_START
     1120    14077                 PURPOSE:  This procedure begins suppression mode.
     1121    14078                    CALL:  CALL SUP_START ALTRET(ERR_ROUTINE);
     1122    14079               INTERFACE:  %ASSIGN_MOP
     1123    14080             DESCRIPTION:  This procedure begins suppression mode.  In this
     1124    14081                           mode leading zeros are replaced by blanks or
     1125    14082                           asterisks as appropriate.  Depending on the
     1126    14083                           value of CURR_CH the procedure ensures that TBL_1
     1127    14084                           or TBL_2 (blank and * respectively) have the proper
     1128    14085                           default value.  If suppression is on (ES_ON), it is
     1129    14086                           turned off.  Any of the above conditions may have
     1130    14087                           occurred while emitting a large number of insertion
     1131    14088                           characters prior to beginning suppression.
     1132    14089                   INPUT:  CURR_CH, TBL_1, TBL_2, ES_ON
     1133    14090                  OUTPUT:  STATE_TBL[ $, Z, *, 9, comma, 0, /]
     1134    14091                           Possibly some mops as detailed above.
     1135    14092                 SCRATCH:  ES_ON, TBL_1, TBL_2
     1136    14093                                                                                     */
     1137    14094    1     SUP_START: PROC ALTRET;
     1138    14095    3        IF MOP_L_MAX ~= 0 THEN DO;
     1139    14096    3           IF CURR_CH ~= %XST AND TBL_1 ~= ASCBIN(' ') THEN
     1140    14097                   %ASSIGN_MOP(OP1=LTE,TBL1=B,CH1=' ');
     1141    14197    3           IF CURR_CH = %XST AND TBL_2 ~= ASCBIN('*') THEN
     1142    14198                   %ASSIGN_MOP(OP1=LTE,TBL1=ST,CH1='*');
     1143    14298    3           IF CURR_CH = %XMI THEN
     1144    14299                   %ASSIGN_MOP(OP1=LTE,TBL1=PL,CH1=' ');
     1145    14399    3           IF ES_ON THEN
     1146    14400                   %ASSIGN_MOP(OP1=SES,ES1=OFF);
     1147    14500    3           END;
     1148    14501    2        STATE_TBL(%X$)  = %E$ONLY_ONE_SUPPRESS_TYPE;
     1149    14502    2        STATE_TBL(%XZ)  = %E$ONLY_ONE_SUPPRESS_TYPE;
     1150    14503    2        STATE_TBL(%XST) = %E$ONLY_ONE_SUPPRESS_TYPE;
     1151    14504    2        STATE_TBL(%X9)  = %_LT_9;
     1152    14505    2        STATE_TBL(%XCM) = %_SU_CM;
     1153    14506    2        STATE_TBL(%X0)  = %_SU_0;
     1154    14507    2        STATE_TBL(%XSL) = %_SU_SL;
     1155    14508    2      END;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:42   
     1156    14509        /*I*        NAME:  SUP_MOVE
     1157    14510                 PURPOSE:  This procedure generates mops to move digits in
     1158    14511                           suppression mode.
     1159    14512                    CALL:  CALL SUP_MOVE ALTRET(ERR_ROUTINE);
     1160    14513               INTERFACE:  N#_MOP
     1161    14514             DESCRIPTION:  This procedure generates mops to move digits in
     1162    14515                           suppression mode.  Depending on the value of
     1163    14516                           CURR_CH the correct mop-op is selected and
     1164    14517                           N#_MOP is called to do the actual generation.
     1165    14518                   INPUT:  CURR_CH, CNT
     1166    14519                  OUTPUT:  Generate mops (via N#_MOP)
     1167    14520                 SCRATCH:  DIGITS, TDIGITS, WIDTH
     1168    14521                                                                                     */
     1169    14522    1     SUP_MOVE: PROC ALTRET;
     1170    14523    2     DCL   SUP_MOVE_OPS(0:4)    UBIN CONSTANT INIT(
     1171    14524    2                                   /* +  MFLS */  6,
     1172    14525    2                                   /* -  MFLS */  6,
     1173    14526    2                                   /* $  MFLC */  7,
     1174    14527    2                                   /* Z  MVZB */  4,
     1175    14528    2                                   /* *  MVZA */  5);
     1177    14530          /* %EQU SUP_MOVE_OPS_BASE = XPL; */
     1178    14531    2        DIGITS = DIGITS + CNT;
     1179    14532    2        TDIGITS = TDIGITS + CNT;
     1180    14533    2        WIDTH = WIDTH + CNT;
     1181    14534    3        IF MOP_L_MAX ~= 0 THEN DO;
     1182    14535    3           MOP_OP = SUP_MOVE_OPS(CURR_CH-%SUP_MOVE_OPS_BASE);
     1183    14536    3           CALL N#_MOP ALTRET(SUP_MOVE_ERR);
     1184    14537    3           END;
     1185    14538    2        RETURN;
     1186    14539    2   SUP_MOVE_ERR: ;
     1187    14540    2        ALTRETURN;
     1188    14541    2      END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:43   
     1190    14543        /*I*        NAME:  TEST_ENF
     1191    14544                 PURPOSE:  This procedure checks to see if floating suppression
     1192    14545                           should be ended. If it does, it does it.
     1193    14546                    CALL:  CALL TEST_ENF ALTRET(ERR_ROUTINE);
     1194    14547               INTERFACE:  %ASSIGN_MOP
     1195    14548             DESCRIPTION:  This procedure checks ENF_NEEDED to see if an
     1196    14549                           ENF (end floating suppression) mop is needed.
     1197    14550                           If one is needed, it supplies the appropriate
     1198    14551                           kind and turns off ENF_NEEDED.
     1199    14552                   INPUT:  SUP
     1200    14553                  OUTPUT:  An END mov (possibly)
     1201    14554                 SCRATCH:  ENF_NEEDED, WIDTH
     1202    14555                                                                                     */
     1203    14556    1     TEST_ENF: PROC ALTRET;
     1204    14557    3        IF ENF_NEEDED THEN DO;
     1205    14558    3           ENF_NEEDED = '0'B;
     1206    14559    3           WIDTH = WIDTH + 1;
     1207    14560    3           IF MOP_L_MAX ~= 0 THEN
     1208    14561    3              IF SUP = %X$ THEN
     1209    14562                      %ASSIGN_MOP(OP1=ENF,SUP1=CS);
     1210    14662    3              ELSE
     1211    14663                      %ASSIGN_MOP(OP1=ENF,SUP1=SN);
     1212    14763    3           END;
     1213    14764    2      END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:44   
     1215    14766        /*I*        NAME:  EMIT_PM$
     1216    14767                 PURPOSE:  This procedure emits a single leading +, -, or $.
     1217    14768                    CALL:  CALL EMIT_PM$ ALTRET(ERR_ROUTINE);
     1218    14769               INTERFACE:  %ASSIGN_MOP
     1219    14770             DESCRIPTION:  This procedure emits a single leading +, - or $.
     1220    14771                   INPUT:  CURR_CH
     1221    14772                  OUTPUT:  An appropriate mop
     1222    14773                 SCRATCH:  WIDTH
     1223    14774                                                                                     */
     1224    14775    1     EMIT_PM$: PROC ALTRET;
     1226    14777          /* %EQU EMIT_PM$_BASE = XPL; */
     1227    14778    2        WIDTH = WIDTH + 1;
     1228    14779    3        IF MOP_L_MAX ~= 0 THEN DO CASE(CURR_CH - %EMIT_PM$_BASE);
     1229    14780    3         CASE(%(XPL-EMIT_PM$_BASE));
     1230    14781                %ASSIGN_MOP(OP1=ENF,SUP1=SN);
     1231    14881    3         CASE(%(XMI-EMIT_PM$_BASE));
     1232    14882                %ASSIGN_MOP(OP1=INSN,TBL1=MI);
     1233    14982    3         CASE(%(X$-EMIT_PM$_BASE));
     1234    14983                %ASSIGN_MOP(OP1=ENF,SUP1=CS);
     1235    15083    3         END;
     1236    15084    2      END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:45   
     1238    15086        /*I*        NAME:  MOVE_CHAR
     1239    15087                 PURPOSE:  This procedure generates mops to move digits
     1240    15088                           when suppression is not involved.
     1241    15089                    CALL:  CALL MOVE_CHAR ALTRET(ERR_ROUTINE);
     1242    15090               INTERFACE:  N#_MOP
     1243    15091             DESCRIPTION:  This procedure generates mops to move digits
     1244    15092                           when suppression is not involved.
     1245    15093                   INPUT:  CNT
     1246    15094                  OUTPUT:  Generate mops (via N#_MOP)
     1247    15095                 SCRATCH:  DIGITS, TDIGITS, WIDTH
     1248    15096                                                                                     */
     1249    15097    1     MOVE_CHAR: PROC ALTRET;
     1250    15098    2        DIGITS = DIGITS + CNT;
     1251    15099    2        TDIGITS = TDIGITS + CNT;
     1252    15100    2        WIDTH = WIDTH + CNT;
     1253    15101    3        IF MOP_L_MAX ~= 0 THEN DO;
     1254    15102                %ASSIGN_OP(VAR=MOP_OP,OP=MVC);
     1255    15105    3           CALL N#_MOP ALTRET(MOVE_CHAR_ERR);
     1256    15106    3           END;
     1257    15107    2        RETURN;
     1258    15108    2   MOVE_CHAR_ERR: ;
     1259    15109    2        ALTRETURN;
     1260    15110    2      END;

     1263    15113          /* %SET _INTERNAL_PROC = '0'B; */

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:46   
     1265    15115        /*D*        NAME:  Z8DP$VALIDATE_PIC
     1266    15116                    CALL:  CALL Z8DP$VALIDATE_PIC(PIC_STR,PIC_IN,PIC_OUT)
     1267    15117                              ALTRET(error_label);
     1268    15118               INTERFACE:  none
     1269    15119             DESCRIPTION:  This procedure scans picture strings and produces
     1270    15120                           editing micro-operation strings for them.  In
     1271    15121                           addition, certain useful information about the
     1272    15122                           picture is also returned.
     1273    15123                                                                                   *//*
     1274    15124                           The method of solution is a standard sort of
     1275    15125                           state transition algorithm.  In order to reduce
     1276    15126                           the size of the STATE_TBL, the input picture string
     1277    15127                           is first translated so that the number of different
     1278    15128                           inputs is reduced to just 24.  The table is modified
     1279    15129                           during the scanning process.  Elements of the table
     1280    15130                           are either state codes or error codes.  Error codes
     1281    15131                           have an extra %E_LO added to them so they can be
     1282    15132                           distinguished from real states.  For example if
     1283    15133                           an S is detected as the first character in the
     1284    15134                           string, then an error code is loaded into every
     1285    15135                           state which illegal for a numeric or numeric floating
     1286    15136                           picture.
     1287    15137                   INPUT:  PIC_STR -- the picture string.
     1288    15138                           PIC_IN.PIC_L  -- the length of PIC_STR
     1289    15139                           PIC_IN.MOP_L  -- the max length of PIC_OUT.MOP_STR
     1290    15140                              If .MOP_L is 0, the PIC_OUT.MOP_STR need not be
     1291    15141                              present.  The picture will be validated but no
     1292    15142                              mops will be generated.
     1293    15143                  OUTPUT:  PIC_OUT.WIDTH -- the width of the edited result.
     1294    15144                           PIC_OUT.SCALE -- the required scale factor of the
     1295    15145                              input number.  For floating point, this is the
     1296    15146                              number of digits to the right of the decimal
     1297    15147                              point in the mantissa (negated).
     1298    15148                           PIC_OUT.LEFT -- the number of digits to the left
     1299    15149                              of the decimal point.
     1300    15150
     1301    15151
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:47   
     1302    15152                           PIC_OUT.TYPE -- identifies the type of picture.
     1303    15153                              2) Alphabetic             6) Numeric Edited
     1304    15154                              3) Alphanumeric           7) Numeric Floating
     1305    15155                              4) Alphanumeric Edited    8) Numeric Floating Edited
     1306    15156                              5) Numeric                1) Kanji
     1307    15157                           PIC_OUT.ERROR -- error code
     1308    15158                           PIC_OUT.ERRCOL -- column number (relative to PIC_STR)
     1309    15159                              where the error was detected.
     1310    15160                           PIC_OUT.EXRAD -- number of digits in the exrad (if
     1311    15161                              any) i.e. the exponent portion of a float picture
     1312    15162                           PIC_OUT.EIS_TYPE -- the suggested EIS data type.
     1313    15163                              This is usefull if the caller wants to define
     1314    15164                              the type of a data item from its picture (COBOL
     1315    15165                              does this).
     1316    15166                              0) floating point       3) EIS unsigned
     1317    15167                              1) EIS leading signed   4) character
     1318    15168                              2) EIS trailing signed  5) EIS signed leading or trailing
     1319    15169                           PIC_OUT.MOP_L -- the length of the output MOP string
     1320    15170                           PIC_OUT.MOP_STR -- the MOP string.
     1321    15171                 SCRATCH: none (no interaction between calls).
     1322    15172                                                                                     */

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:48   
     1324    15174          /*D*  Initialization and parameter error detection.
     1325    15175          */
     1326    15176    1        PROC$ = O1COM.CURRENT_PROC$ -> PROC_.PROC_SUPP$;
     1327    15177
     1328    15178    1        S = 0;
     1329    15179    1        NEXT_S = 0;
     1330    15180
     1331    15181    1        IF PIC_IN.PIC_L = 0 THEN
     1332    15182                %ERR(CODE=%E$ZERO_LENGTH_PICTURE);
     1333    15200    1        IF PIC_IN.PIC_L > %PIC_L_MAX THEN
     1334    15201                %ERR(CODE=%E$PIC_LENGTH_MAX);
     1335    15219
     1336    15220    1        MOP_L_MAX = PIC_IN.MOP_L;
     1337    15221    1        CALL XLATE(CH,XLATE_TBL,PIC_STR);
     1338    15222    1        STATE_TBL = INIT_TBL;
     1339    15223    1        POSS_TY = %POSS_TY_INIT;
     1340    15224    1        SUP = 0;
     1341    15225    1        LAST_MOP_OP = %NO_LAST_OP;
     1342    15226    1        MOP_L = 0;
     1343    15227    1        DIGITS = 0;
     1344    15228    1        TDIGITS = 0;
     1345    15229    1        WIDTH = 0;
     1346    15230    1        LEFT = -1;
     1347    15231    1        SCALE = 0;
     1348    15232    1        ES_ON = '0'B;
     1349    15233    1        ENF_NEEDED = '0'B;
     1350    15234    1        BZ_MOP = -1;
     1351    15235
     1352    15236    1        IF PIC_IN.B.BLANK_WHEN_ZERO THEN
     1353    15237               %ASSIGN_MOP (OP1=SES, BZ1=ON);
     1354    15337
     1355    15338    1        TYPE = 0;
     1356    15339    1        PIC_OUT.B.ASTERISK_SUPRESS = FALSE;
     1357    15340    1        EIS_TYPE = %PIC_EIS_UNKNOWN;
     1358    15341    1        TBL_1 = ASCBIN(' ');
     1359    15342    1        TBL_2 = ASCBIN('*');
     1360    15343    1        TBL_5 = ASCBIN('$');
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:49   
     1361    15344
     1362    15345    1        IF O1COM.CURRENT_PROC$ -> PROC_.B.OBJECT_IS_COMMA THEN
     1363    15346    2          DO;
     1364    15347                 %ASSIGN_MOP (OP1  = LTE,
     1365    15348                              TBL1 = PT,
     1366    15349                              CH1  = %COMMA);
     1367    15449                 %ASSIGN_MOP (OP1  = LTE,
     1368    15450                              TBL1 = CM,
     1369    15451                              CH1  = %POINT);
     1370    15551    2          END;
     1371    15552
     1372    15553    1        IF PROC$ -> PROC_SUPP.CURRENCY_SIGN ~= '$' THEN
     1373    15554    2          DO;
     1374    15555                 %ASSIGN_MOP (OP1  = LTE,
     1375    15556                              TBL1 = $,
     1376    15557                              CURRENCY_SIGN = YES,
     1377    15558                              CH1  = "PROC$ -> PROC_SUPP.CURRENCY_SIGN");
     1378    15658    2          END;
     1379    15659

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:50   
     1381    15661    1   TOP_OF_PICTURE_SCAN: ;
     1382    15662          /*D*  TOP_OF_PICTURE_SCAN:
     1383    15663             Get the next character to be scanned.  If repetition is legal,
     1384    15664             scan off all like characters and replication counts.  Accumulate
     1385    15665             the effective number of the character found in CNT.  If type
     1386    15666             checking is needed, do it.  Define the current STATE and make
     1387    15667             the transition to that state.
     1388    15668          */
     1389    15669    1        S = NEXT_S;
     1390    15670    1        CURR_CH = ASCBIN(SUBSTR(CH,S,1));
     1391    15671    1        CNT = 0;
     1392    15672    2        IF BITS.REP_LEGAL(CURR_CH) THEN DO;
     1393    15673    2           CNT = 1;
     1394    15674    2           NEXT_S = S + 1;
     1395    15675    2           CONTINUE_SCAN = '1'B;
     1396    15676    2           SCAN_TBL1.S(CURR_CH) = %_IGN;
     1397    15677    3           DO WHILE(CONTINUE_SCAN);
     1398    15678    3              CONTINUE_SCAN = '0'B;
     1399    15679    3              CALL SEARCH(SCAN_X,STATE,SCAN_TBL1,CH,NEXT_S);
     1400    15680    3              CNT = CNT + (SCAN_X - NEXT_S);
     1401    15681    3              NEXT_S = SCAN_X;
     1402    15682    4              IF STATE = %_SCAN_CNT THEN DO;
     1403    15683    4                 NEXT_S = NEXT_S + 1;
     1404    15684    4                 CALL SEARCH(SCAN_X,STATE,SCAN_TBL2,CH,NEXT_S);
     1405    15685    5                 IF STATE = %_SCAN_END THEN DO;
     1406    15686    5                    L = SCAN_X - NEXT_S;
     1407    15687    5                    IF L = 0 THEN
     1408    15688                            %ERR(CODE=%E$ZERO_REP_COUNT_LENGTH,RTN=REP_ERR_RTN);
     1409    15706    5                    CALL CHARBIN(I,SUBSTR(PIC_STR,NEXT_S,L));
     1410    15707    5                    IF I = 0 THEN
     1411    15708                            %ERR(CODE=%E$REP_CNT_GTR_ZERO,RTN=REP_ERR_RTN);
     1412    15726    5                    CNT = CNT + I - 1;
     1413    15727    5                    CONTINUE_SCAN = '1'B;
     1414    15728    5                    NEXT_S = SCAN_X + 1;
     1415    15729    5                    END;
     1416    15730    4                 END;
     1417    15731    3              END;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:51   
     1418    15732    2           IF STATE ~= %_SCAN_END THEN
     1419    15733                   %ERR(RTN=REP_ERR_RTN);
     1420    15751    2           SCAN_TBL1.S(CURR_CH) = %_SCAN_END;
     1421    15752    2           END;
     1422    15753
     1423    15754    1        IF BITS.TYPE_CHECK(CURR_CH) THEN
     1424    15755    1           CALL TYPE_CHECK ALTRET(ERR_ROUTINE);
     1425    15756
     1426    15757    1        STATE = STATE_TBL(CURR_CH);

     1428    15759    2        DO CASE(STATE);

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:52   
     1430    15761    2         CASE(%_CR_DB);
     1431    15762          /*D* CASE(%_CR_DB)
     1432    15763             The letter 'C' or 'D' was detected.  These letters are only
     1433    15764             valid as parts of the 'CR' and 'DB' picture characters at the
     1434    15765             physical end of the picture.
     1435    15766          */
     1436    15767    2           IF S = 0 THEN
     1437    15768                   %ERR(CODE=%E$BEGINNING_CR_DB_ILL);
     1438    15786    2           IF TBL_1 ~= ASCBIN(' ') THEN
     1439    15787                  %ASSIGN_MOP (OP1 = LTE, TBL1 = 1, CH1 = ' ');
     1440    15887
     1441    15888    2           CRDB4 = SUBSTR(PIC_STR,S);
     1442    15889    2           CRDB4_BIT = CRDB4_BIT & '737737777777'O;
     1443    15890                                           /*force to upper case*/
     1444    15891    3           IF CRDB4 = CR_DB(CURR_CH) THEN DO;
     1445    15892    3              WIDTH = WIDTH + 2;
     1446    15893    3              IF MOP_L_MAX ~= 0 THEN
     1447    15894    3                 IF CURR_CH = %XCR THEN
     1448    15895                         %ASSIGN_MOP(OP1=INSN,TBL1='C',OP2=INSN,TBL2='R');
     1449    15995    3                 ELSE
     1450    15996                         %ASSIGN_MOP(OP1=INSN,TBL1='D',OP2=INSN,TBL2='B');
     1451    16096    3              EIS_TYPE = %PIC_EIS_LSTS;
     1452    16097    3              GOTO CLEAN_UP;
     1453    16098    3              END;
     1454    16099                /*ELSE* error !!!*/
     1455    16100    2           IF SUBSTR(CRDB4,1,1) ~= SUBSTR(CR_DB(CURR_CH),1,1) THEN
     1456    16101                   %ERR(CODE=%E$INVALID_CHARACTER);
     1457    16119                /*ELSE*/
     1458    16120                %ERR(CODE=%E$CR_DB_AT_END_ONLY);

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:53   
     1460    16139    2         CASE(%_PT);
     1461    16140          /*D* CASE(%_PT)
     1462    16141             A decimal point was detected.  Set the number of digits to the
     1463    16142             LEFT of the decimal point.  Increment WIDTH for the point itself.
     1464    16143             End floating suppression if necessary.  Generate mops to emit
     1465    16144             the decimal point.  Finally do some special state processing.
     1466    16145             If a single + was found the activate the 'E' state for float
     1467    16146             numeric edited pictures.  Set state table error codes to handle
     1468    16147             errors related to the interaction of 'V' vs '.', 'P' vs '.'.
     1469    16148             If floating suppression hasn't started, it is now invalid.  This
     1470    16149             means only a fixed trailing '+' or '-' is valid here.
     1471    16150          */
     1472    16151    2           LEFT = DIGITS;
     1473    16152    2           DIGITS = 0;
     1474    16153    2           WIDTH = WIDTH + 1;
     1475    16154    2           CALL TEST_ENF ALTRET(ERR_ROUTINE);
     1476    16155    2           IF MOP_L_MAX ~= 0 THEN
     1477    16156    2              IF SUP = %XST THEN
     1478    16157                      %ASSIGN_MOP(OP1=LTE,TBL1=1,CH1='.',OP2=INSM,N2=1);
     1479    16257    3              ELSE DO;
     1480    16258    3                 IF NOT ES_ON THEN
     1481    16259                         %ASSIGN_MOP(OP1=SES,ES1=ON);
     1482    16359                      %ASSIGN_MOP(OP1=INSB,TBL1=PT);
     1483    16459    3                 END;
     1484    16460    2           NEXT_S = S + 1;
     1485    16461    2           STATE_TBL(%XPT) = %E$CHAR_ONLY_APPEAR_ONCE;
     1486    16462    2           IF POSS_TY.NFE THEN
     1487    16463    2              IF STATE_TBL(%XPL) = %E$ONLY_ONE_SIGN_PER_PIC THEN
     1488    16464    2                 STATE_TBL(%XE) = %_E;
     1489    16465    3              ELSE DO;
     1490    16466    3                 STATE_TBL(%XE) = %E$ILL_CHAR_FOR_NE_PIC;
     1491    16467    3                 TYPE = %PIC_TY_NE;
     1492    16468    3                 POSS_TY = %POSS_TY_NE;
     1493    16469    3                 END;
     1494    16470    2           STATE_TBL(%XV)  = %E$V_AND_DOT_IN_SAME_PIC;
     1495    16471    2           STATE_TBL(%XP)  = %E$P_AND_DOT_IN_SAME_PIC;
     1496    16472    3           IF STATE_TBL(%XPL) = %_1STPM THEN DO;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:54   
     1497    16473    3              STATE_TBL(%XPL) = %_FIXPM;
     1498    16474    3              STATE_TBL(%XMI) = %_FIXPM;
     1499    16475    3              END;
     1500    16476    3           IF SUP ~= 0 THEN DO;
     1501    16477    3              IF SUP = %XST THEN
     1502    16478    3                STATE_TBL(%XST) = %_MOVCH;
     1503    16479    3              ELSE
     1504    16480    3                STATE_TBL(SUP) = %_RT_SUPPRESSION;
     1505    16481    3              END;
     1506    16482    3           ELSE DO;
     1507    16483    3              STATE_TBL(%X$)  = %E$SUPRESS_NOT_LEGAL_HERE;
     1508    16484    3              STATE_TBL(%XST) = %_MOVCH;
     1509    16485    3              STATE_TBL(%X9) = %_MOVCH;
     1510    16486    3              END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:55   
     1512    16488    2         CASE(%_1STPM);
     1513    16489          /*D* CASE(%_1STPM)
     1514    16490             An initial '+' or '-' has been found.  If CNT is > 1, then this
     1515    16491             is clearing floating sign suppression.  In this case suppression
     1516    16492             is started (which invalidate all other kinds of suppression).
     1517    16493             Mops are generated to move an appropriate number of characters.
     1518    16494             If CNT = 1, then this still may be floating suppression.  For
     1519    16495             example, '$,$$$,$$$'.  This case is detected with a special scan
     1520    16496             of the succeeding characters in the picture.  Appropriate action
     1521    16497             is taken depending on the result of the scan.
     1522    16498          */
     1523    16499    2           L = %XPL + %XMI - CURR_CH;
     1524    16500    2           CNT = CNT - 1;
     1525    16501    3           IF CNT ~= 0 THEN DO;
     1526    16502    3   ITS_FLOAT_PM: ;
     1527    16503    3              CALL SUP_START ALTRET(ERR_ROUTINE);
     1528    16504    3              IF CNT ~= 0 THEN
     1529    16505    3                 CALL SUP_MOVE ALTRET(ERR_ROUTINE);
     1530    16506    3              ENF_NEEDED = '1'B;
     1531    16507    3              STATE_TBL(CURR_CH) = %_SUPPRESSION;
     1532    16508    3              SUP = CURR_CH;
     1533    16509    3              STATE_TBL(%XE) = %E$ILL_CHAR_FOR_NE_PIC;
     1534    16510    3              TYPE = %PIC_TY_NE;
     1535    16511    3              POSS_TY = %POSS_TY_NE;
     1536    16512    3              EIS_TYPE = %PIC_EIS_LSTS;
     1537    16513    3              END;
     1538    16514    3           ELSE DO;
     1539    16515    3              SPCL_SUP.S(CURR_CH) = %_FLOAT;
     1540    16516    3              CALL SEARCH(I,STATE,SPCL_SUP,CH,NEXT_S);
     1541    16517    3              SPCL_SUP.S(CURR_CH) = %_FIXED;
     1542    16518    3              IF STATE = %_FLOAT THEN GOTO ITS_FLOAT_PM;
     1543    16519    3              IF S ~= 0 THEN
     1544    16520                      %ERR(CODE=%E$LDG_SIGN_MUST_BE_FIRST);
     1545    16538    3              CALL EMIT_PM$ ALTRET(ERR_ROUTINE);
     1546    16539    3              STATE_TBL(CURR_CH) = %E$ONLY_ONE_SIGN_PER_PIC;
     1547    16540    3              EIS_TYPE = %PIC_EIS_LS;
     1548    16541    3              END;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:56   
     1549    16542    2           STATE_TBL(%XCR) = %E$ONLY_ONE_SIGN_PER_PIC;
     1550    16543    2           STATE_TBL(%XDB) = %E$ONLY_ONE_SIGN_PER_PIC;
     1551    16544    2           STATE_TBL(L)    = %E$ONLY_ONE_SIGN_PER_PIC;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:57   
     1553    16546    2         CASE(%_1ST$);
     1554    16547          /*D* CASE(%_1ST$)
     1555    16548             An initial '$' has been found.  The logic here is identical to
     1556    16549             that in %_1STPM state except there are no implications about the
     1557    16550             sign control.
     1558    16551          */
     1559    16552    2           CNT = CNT - 1;
     1560    16553    3           IF CNT ~= 0 THEN DO;
     1561    16554    3   ITS_FLOAT_$: ;
     1562    16555    3              CALL SUP_START ALTRET(ERR_ROUTINE);
     1563    16556    3              IF CNT ~= 0 THEN
     1564    16557    3                 CALL SUP_MOVE ALTRET(ERR_ROUTINE);
     1565    16558    3              ENF_NEEDED = '1'B;
     1566    16559    3              STATE_TBL(%X$)  = %_SUPPRESSION;
     1567    16560    4              IF STATE_TBL(%XPL) = %_1STPM THEN DO;
     1568    16561    4                 STATE_TBL(%XPL) = %_FIXPM;
     1569    16562    4                 STATE_TBL(%XMI) = %_FIXPM;
     1570    16563    4                 END;
     1571    16564    3              SUP = %X$;
     1572    16565    3              END;
     1573    16566    3           ELSE DO;
     1574    16567    3              SPCL_SUP.S(%X$) = %_FLOAT;
     1575    16568    3              CALL SEARCH(I,STATE,SPCL_SUP,CH,NEXT_S);
     1576    16569    3              SPCL_SUP.S(%X$) = %_FIXED;
     1577    16570    3              IF STATE = %_FLOAT THEN GOTO ITS_FLOAT_$;
     1578    16571    3              IF ES_ON THEN
     1579    16572                        %ASSIGN_MOP(OP1=SES,ES1=OFF);
     1580    16672    3              CALL EMIT_PM$ ALTRET(ERR_ROUTINE);
     1581    16673    3              STATE_TBL(%X$)  = %E$CHAR_ONLY_APPEAR_ONCE;
     1582    16674    3              END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:58   
     1584    16676    2         CASE(%_1STSU);
     1585    16677          /*D* CASE(%_1STSU)
     1586    16678             An initial 'Z' or '*' has been found.  Setup the appropriate
     1587    16679             suppression bookeeping.  Note also that only fixed '+' or '-'
     1588    16680             are now legal.
     1589    16681          */
     1590    16682        /* V*   IF STATE_TBL(%XPT) = %E$CHAR_ONLY_APPEAR_ONCE THEN
     1591    16683                  DO;
     1592    16684                    STATE_TBL(%XZ) = %E$SUPRESS_NOT_LEGAL_HERE;
     1593    16685                    STATE_TBL(%XPL)= %_FIXPM;
     1594    16686                    STATE_TBL(%XMI)= %_FIXPM;
     1595    16687
     1596    16688                    CALL MOVE_CHAR ALTRET (ERR_ROUTINE);
     1597    16689                  END;
     1598    16690                ELSE
     1599    16691                  DO; */
     1600    16692    2               L = %XZ + %XST - CURR_CH;
     1601    16693    2               CALL SUP_START ALTRET(ERR_ROUTINE);
     1602    16694    2               CALL SUP_MOVE ALTRET(ERR_ROUTINE);
     1603    16695    2               STATE_TBL(CURR_CH) = %_SUPPRESSION;
     1604    16696    3               IF STATE_TBL(%XPL) = %_1STPM THEN DO;
     1605    16697    3                  STATE_TBL(%XPL) = %_FIXPM;
     1606    16698    3                  STATE_TBL(%XMI) = %_FIXPM;
     1607    16699    3                  END;
     1608    16700    2               IF CURR_CH = %XST THEN
     1609    16701    2                  STATE_TBL(%XB) = %_ST_B;
     1610    16702    2               SUP = CURR_CH;
     1611    16703        /* V*     END; */

     1613    16705    2         CASE(%_LT_S);
     1614    16706          /*D* CASE(%_LT_S)
     1615    16707             A 'S' which must be the first character of the picture has
     1616    16708             been found.
     1617    16709          */
     1618    16710    2           IF S ~= 0 THEN
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:59   
     1619    16711                   %ERR(CODE=%E$LDG_S_MUST_BE_FIRST);
     1620    16729    2           CURR_CH = %XPL;
     1621    16730    2           CALL EMIT_PM$ ALTRET(ERR_ROUTINE);
     1622    16731    2           CURR_CH = %XS;
     1623    16732    2           NEXT_S = S + 1;
     1624    16733    2           STATE_TBL(%XS) = %E$CHAR_ONLY_APPEAR_ONCE;
     1625    16734    2           EIS_TYPE = %PIC_EIS_LS;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:60   
     1627    16736    2         CASE(%_P);
     1628    16737          /*D* CASE(%_P)
     1629    16738             A 'P' has been found.  This state enforces the complicated
     1630    16739             rules related to 'P' in pictures.
     1631    16740          */
     1632    16741    2           CALL INDEX(I,SUBSTR(CH,0,1),P_TEST_STR);
     1633    16742    3           IF S = 0 OR (DIGITS = 0 AND I ~= 5) THEN DO;
     1634    16743    3              IF STATE_TBL(%XV) ~= %E$CHAR_ONLY_APPEAR_ONCE THEN
     1635    16744    3                 STATE_TBL(%XV) = %E$V_ILL_AFTER_LDG_P;
     1636    16745    3              SCALE = -CNT;
     1637    16746    3              LEFT = 0;
     1638    16747    4              IF STATE_TBL(%XPL) = %_1STPM THEN DO;
     1639    16748    4                 STATE_TBL(%XPL) = %_FIXPM;
     1640    16749    4                 STATE_TBL(%XMI) = %_FIXPM;
     1641    16750    4                 END;
     1642    16751    3              END;
     1643    16752    3           ELSE DO;
     1644    16753    3              IF STATE_TBL(%XV) = %E$CHAR_ONLY_APPEAR_ONCE THEN
     1645    16754                      %ERR(CODE=%E$TRL_P_ILL_AFTER_V);
     1646    16772    3              LEFT = DIGITS;
     1647    16773    3              DIGITS = 0;
     1648    16774    3              SCALE = CNT;
     1649    16775    3              STATE_TBL(%X$)  = %E$CHAR_ILL_AFTER_P;
     1650    16776    3              STATE_TBL(%XZ)  = %E$CHAR_ILL_AFTER_P;
     1651    16777    3              STATE_TBL(%XST) = %E$CHAR_ILL_AFTER_P;
     1652    16778    3              STATE_TBL(%XCM) = %E$CHAR_ILL_AFTER_P;
     1653    16779    3              STATE_TBL(%X0)  = %E$CHAR_ILL_AFTER_P;
     1654    16780    3              STATE_TBL(%XSL) = %E$CHAR_ILL_AFTER_P;
     1655    16781    3              STATE_TBL(%XB)  = %E$CHAR_ILL_AFTER_P;
     1656    16782    3              STATE_TBL(%X9)  = %E$CHAR_ILL_AFTER_P;
     1657    16783    3              END;
     1658    16784    2           IF POSS_TY.NE THEN
     1659    16785    2              STATE_TBL(%XPT) = %E$DOT_AND_P_IN_SAME_PIC;
     1660    16786    2           STATE_TBL(%XP)  = %E$CHAR_ONLY_APPEAR_ONCE;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:61   
     1662    16788    2         CASE(%_V);
     1663    16789          /*D* CASE(%_V)
     1664    16790             A 'V' was detected.  Set the number of digits to the LEFT of the
     1665    16791             decimal point.  Enable the 'E' state if a numeric float is
     1666    16792             possible.
     1667    16793          */
     1668    16794    2           LEFT = DIGITS;
     1669    16795    2           DIGITS = 0;
     1670    16796    2           NEXT_S = S + 1;
     1671    16797    2           IF POSS_TY.NE THEN
     1672    16798    2              STATE_TBL(%XPT) = %E$V_AND_DOT_IN_SAME_PIC;
     1673    16799    2           STATE_TBL(%XV)  = %E$CHAR_ONLY_APPEAR_ONCE;
     1674    16800    2           IF POSS_TY.NF THEN
     1675    16801    2              STATE_TBL(%XE) = %_E;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:62   
     1677    16803    2         CASE(%_E);
     1678    16804          /*D* CASE(%_E)
     1679    16805             A 'E' was detected.  This must be a float numeric or numeric
     1680    16806             edited picture.  Determine which it is.  Setup the STATE_TBL
     1681    16807             to scan off the EXRAD which must immediately follow.
     1682    16808          */
     1683    16809    2           NEXT_S = S + 2;
     1684    16810    2           S = S + 1;
     1685    16811    2           POSS_TY = POSS_TY & %POSS_TY_FLT;
     1686    16812    3           DO CASE(BITBIN(POSS_TY));
     1687    16813    3            CASE(0);
     1688    16814                   %ERR(CODE=%E$BAD_NUM_PIC_TYPE);
     1689    16832    3            CASE(1);
     1690    16833    3              TYPE = %PIC_TY_NFE;
     1691    16834    3              IF ASCBIN(SUBSTR(CH,S,1)) ~= %XPL THEN
     1692    16835                      %ERR(CODE=%E$PLUS_EXPECTED_AFTER_E);
     1693    16853    3            CASE(2,3);
     1694    16854    3              POSS_TY = %POSS_TY_NF;
     1695    16855    3              TYPE = %PIC_TY_NF;
     1696    16856    3              IF ASCBIN(SUBSTR(CH,S,1)) ~= %XS THEN
     1697    16857                      %ERR(CODE=%E$SIGN_EXPECTED_AFTER_E);
     1698    16875    3            END; /*DO CASE*/
     1699    16876    2           STATE_TBL = EXRAD_ONLY;
     1700    16877    2           SCALE = -DIGITS;
     1701    16878    2           DIGITS = 0;
     1702    16879    2           WIDTH = WIDTH + 1;
     1703    16880    3           IF MOP_L_MAX ~= 0 THEN DO;
     1704    16881    3              IF NOT ES_ON THEN
     1705    16882                      %ASSIGN_MOP(OP1=SES,ES1=ON);
     1706    16982                   %ASSIGN_MOP(OP1=INSB,TBL1='E');
     1707    17082    3              END;
     1708    17083    2           EIS_TYPE = %PIC_EIS_FLT;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:63   
     1710    17085    2         CASE(%_MOVCH);
     1711    17086          /*D* CASE(%_MOVCH)
     1712    17087             This is a catch-all state used for 'X', 'A', and for '9' when
     1713    17088             suppression is not an involved.
     1714    17089             It just move characters  (Mop op MVC).
     1715    17090          */
     1716    17091    2           IF CURR_CH = %XST THEN
     1717    17092    2             PIC_OUT.B.ASTERISK_SUPRESS = TRUE;
     1718    17093    2           ELSE
     1719    17094    2             PIC_OUT.B.ASTERISK_SUPRESS = FALSE;
     1720    17095
     1721    17096    2           CALL MOVE_CHAR ALTRET(ERR_ROUTINE);

     1723    17098    2         CASE(%_1ST9);
     1724    17099          /*D* CASE(%_1ST9)
     1725    17100             This state is entered when the first '9' is detected and
     1726    17101             a preceeding suppression character hasn't been detected.
     1727    17102             Suppression is now impossible.
     1728    17103          */
     1729    17104    2           IF STATE_TBL(%XS) = %_LT_S THEN
     1730    17105    2              STATE_TBL(%XS) = %_FIXPM;
     1731    17106    3           IF STATE_TBL(%XPL) = %_1STPM THEN DO;
     1732    17107    3              STATE_TBL(%XPL) = %_FIXPM;
     1733    17108    3              STATE_TBL(%XMI) = %_FIXPM;
     1734    17109    3              END;
     1735    17110    2           STATE_TBL(%X$)  = %E$SUPRESS_NOT_LEGAL_HERE;
     1736    17111    2           STATE_TBL(%XZ)  = %E$SUPRESS_NOT_LEGAL_HERE;
     1737    17112    2           STATE_TBL(%XST) = %E$SUPRESS_NOT_LEGAL_HERE;
     1738    17113    2           STATE_TBL(%X9)  = %_MOVCH;
     1739    17114    2           CALL MOVE_CHAR ALTRET(ERR_ROUTINE);

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:64   
     1741    17116    2         CASE(%_LT_9);
     1742    17117          /*D* CASE(%_LT_9)
     1743    17118             This state is entered when the first '9' is detected after
     1744    17119             encountering a suppression character.  Suppression ends here.
     1745    17120          */
     1746    17121    3           IF STATE_TBL(%XPL) ~= %_FIXPM THEN DO;
     1747    17122    3              STATE_TBL(%XPL) = %E$SUPRESS_NOT_LEGAL_HERE;
     1748    17123    3              STATE_TBL(%XMI) = %E$SUPRESS_NOT_LEGAL_HERE;
     1749    17124    3              END;
     1750    17125    2           STATE_TBL(%X$)  = %E$SUPRESS_NOT_LEGAL_HERE;
     1751    17126    2           STATE_TBL(%XZ)  = %E$SUPRESS_NOT_LEGAL_HERE;
     1752    17127    2           STATE_TBL(%XST) = %E$SUPRESS_NOT_LEGAL_HERE;
     1753    17128    2           STATE_TBL(%XCM) = %_FX_CM;
     1754    17129    2           STATE_TBL(%X0)  = %_FX_0;
     1755    17130    2           STATE_TBL(%XSL) = %_FX_SL;
     1756    17131    2           STATE_TBL(%XB)  = %_B_;
     1757    17132    2           CALL TEST_ENF ALTRET(ERR_ROUTINE);
     1758    17133    2           SUP = 0;
     1759    17134    2           STATE_TBL(%X9)  = %_MOVCH;
     1760    17135    2           CALL MOVE_CHAR ALTRET(ERR_ROUTINE);

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:65   
     1762    17137    2         CASE(%_B_);
     1763    17138          /*D* CASE(%_B_)
     1764    17139             A 'B' was found.  Note that 'B' is handled the same way whether
     1765    17140             in or out of suppression.  The exception is '*' suppression.
     1766    17141          */
     1767    17142    2           WIDTH = WIDTH + CNT;
     1768    17143    3           IF MOP_L_MAX ~= 0 THEN DO;
     1769    17144    3              IF TBL_1 ~= ASCBIN(' ') THEN
     1770    17145                      %ASSIGN_MOP(OP1=LTE,TBL1=B,CH1=' ');
     1771    17245                   %ASSIGN_OP(VAR=MOP_OP,OP=INSM);
     1772    17248    3              CALL N#_MOP ALTRET(ERR_ROUTINE);
     1773    17249    3              END;

     1775    17251    2         CASE(%_SU_CM);
     1776    17252          /*D* CASE(%_SU_CM)
     1777    17253             A ',' was detected while in suppression mode.
     1778    17254          */
     1779    17255    2           WIDTH = WIDTH + CNT;
     1780    17256    3           IF MOP_L_MAX ~= 0 THEN DO;
     1781    17257    3              SUP_INS_MOP.N = %EIT_CM;
     1782    17258    3              CALL SUP_INSERTION ALTRET(ERR_ROUTINE);
     1783    17259    3              END;

     1785    17261    2         CASE(%_SU_0);
     1786    17262          /*D* CASE(%_SU_0)
     1787    17263             A '0' was detected while in suppression mode.
     1788    17264          */
     1789    17265    2           WIDTH = WIDTH + CNT;
     1790    17266    3           IF MOP_L_MAX ~= 0 THEN DO;
     1791    17267    3              SUP_INS_MOP.N = %EIT_0;
     1792    17268    3              CALL SUP_INSERTION ALTRET(ERR_ROUTINE);
     1793    17269    3              END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:66   
     1795    17271    2         CASE(%_ST_B);
     1796    17272          /*D* CASE(%_ST_B)
     1797    17273             A 'B' was detected while in asterisk suppression mode.
     1798    17274          */
     1799    17275    2           WIDTH = WIDTH + CNT;
     1800    17276    3           IF MOP_L_MAX ~= 0 THEN DO;
     1801    17277    3              IF TBL_1 ~= ASCBIN(' ') THEN
     1802    17278                      %ASSIGN_MOP(OP1=LTE,TBL1=B,CH1=' ');
     1803    17378    3              SUP_INS_MOP.N = %EIT_B;
     1804    17379    3              CALL SUP_INSERTION ALTRET(ERR_ROUTINE);
     1805    17380    3              END;

     1807    17382    2         CASE(%_SU_SL);
     1808    17383          /*D* CASE(%_SU_SL)
     1809    17384             A '/' was detected while in suppression mode.
     1810    17385          */
     1811    17386    2           WIDTH = WIDTH + CNT;
     1812    17387    3           IF MOP_L_MAX ~= 0 THEN DO;
     1813    17388    4              IF SUP = %XST THEN DO;
     1814    17389    4                 SUP_INS_MOP.N = %EIT_$;
     1815    17390    4                 IF TBL_5 ~= ASCBIN('/') THEN
     1816    17391                         %ASSIGN_MOP(OP1=LTE,TBL1=5,CH1='/');
     1817    17491    4                 END;
     1818    17492    4              ELSE DO;
     1819    17493    4                 SUP_INS_MOP.N = %EIT_ST;
     1820    17494    4                 IF TBL_2 ~= ASCBIN('/') THEN
     1821    17495                         %ASSIGN_MOP(OP1=LTE,TBL1=2,CH1='/');
     1822    17595    4                 END;
     1823    17596    3              CALL SUP_INSERTION ALTRET(ERR_ROUTINE);
     1824    17597    3              END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:67   
     1826    17599    2         CASE(%_FX_CM);
     1827    17600          /*D* CASE(%_FX_CM)
     1828    17601             A ',' was detected while not in suppression mode.
     1829    17602          */
     1830    17603    2           WIDTH = WIDTH + CNT;
     1831    17604    3           IF MOP_L_MAX ~= 0 THEN DO;
     1832    17605    4              IF CNT <= 3 THEN DO;
     1833    17606    4                 IF NOT ES_ON THEN
     1834    17607                         %ASSIGN_MOP(OP1=SES,ES1=ON);
     1835    17707    5                 DO I = 0 TO CNT-1;
     1836    17708                         %ASSIGN_MOP(OP1=INSB,TBL1=CM);
     1837    17808    5                    END;
     1838    17809    4                 END;
     1839    17810    4              ELSE DO;
     1840    17811    4                 IF TBL_1 ~= ASCBIN(',') THEN
     1841    17812                         %ASSIGN_MOP(OP1=LTE,TBL1=1,CH1="','");
     1842    17912                      %ASSIGN_OP(VAR=MOP_OP,OP=INSM);
     1843    17915    4                 CALL N#_MOP ALTRET(ERR_ROUTINE);
     1844    17916    4                 END;
     1845    17917    3              END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:68   
     1847    17919    2         CASE(%_FX_0);
     1848    17920          /*D* CASE(%_FX_0)
     1849    17921             A '0' was detected while not in suppression mode.
     1850    17922          */
     1851    17923    2           WIDTH = WIDTH + CNT;
     1852    17924    3           IF MOP_L_MAX ~= 0 THEN DO;
     1853    17925    4              IF CNT <= 3 THEN DO;
     1854    17926    4                 IF NOT ES_ON THEN
     1855    17927                         %ASSIGN_MOP(OP1=SES,ES1=ON);
     1856    18027    5                 DO I = 0 TO CNT-1;
     1857    18028                         %ASSIGN_MOP(OP1=INSB,TBL1=Z);
     1858    18128    5                    END;
     1859    18129    4                 END;
     1860    18130    4              ELSE DO;
     1861    18131    4                 IF TBL_1 ~= ASCBIN('0') THEN
     1862    18132                         %ASSIGN_MOP(OP1=LTE,TBL1=1,CH1='0');
     1863    18232                      %ASSIGN_OP(VAR=MOP_OP,OP=INSM);
     1864    18235    4                 CALL N#_MOP ALTRET(ERR_ROUTINE);
     1865    18236    4                 END;
     1866    18237    3              END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:69   
     1868    18239    2         CASE(%_FX_SL);
     1869    18240          /*D* CASE(%_FX_SL)
     1870    18241             A '/' was detected while not in suppression mode.
     1871    18242          */
     1872    18243    2           WIDTH = WIDTH + CNT;
     1873    18244    3           IF MOP_L_MAX ~= 0 THEN DO;
     1874    18245    4              IF CNT <= 3 THEN DO;
     1875    18246    4                 IF TBL_2 ~= ASCBIN('/') THEN
     1876    18247                         %ASSIGN_MOP(OP1=LTE,TBL1=2,CH1='/');
     1877    18347    5                 DO I = 0 TO CNT-1;
     1878    18348                         %ASSIGN_MOP(OP1=INSA,TBL1=2);
     1879    18448    5                    END;
     1880    18449    4                 END;
     1881    18450    4              ELSE DO;
     1882    18451    4                 IF TBL_1 ~= ASCBIN('/') THEN
     1883    18452                         %ASSIGN_MOP(OP1=LTE,TBL1=1,CH1='/');
     1884    18552                      %ASSIGN_OP(VAR=MOP_OP,OP=INSM);
     1885    18555    4                 CALL N#_MOP ALTRET(ERR_ROUTINE);
     1886    18556    4                 END;
     1887    18557    3              END;

     1889    18559    2         CASE(%_SUPPRESSION);
     1890    18560          /*D* CASE(%_SUPPRESSION)
     1891    18561             The current suppression character was detected.
     1892    18562          */
     1893    18563    2           CALL SUP_MOVE  ALTRET(ERR_ROUTINE);

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:70   
     1895    18565    2         CASE(%_RT_SUPPRESSION);
     1896    18566          /*D* CASE(%_RT_SUPPRESSION)
     1897    18567             The first occurrence of the current suppression character
     1898    18568             to the right of the decimal point was detected.  Make '9'
     1899    18569             illegal and continue handling suppression characters.
     1900    18570          */
     1901    18571    2           STATE_TBL(SUP) = %_SUPPRESSION;
     1902    18572    2           IF COMCOM.OB.FIPS.LEVEL >= %HIGH_LEV THEN
     1903    18573    2             STATE_TBL(%X9) = %E$9_NOT_LEGAL_AFTER_DEC_PT;
     1904    18574    2           CALL SUP_MOVE ALTRET(ERR_ROUTINE);

     1906    18576    2         CASE(%_FIXPM);
     1907    18577          /*D* CASE(%_FIXPM)
     1908    18578             A trailing '+', '-', or 'S' was detected.
     1909    18579          */
     1910    18580    2           IF CURR_CH = %XS THEN
     1911    18581    2              NEXT_S = S + 1;
     1912    18582    2           IF CNT > 1 THEN
     1913    18583                   %ERR(CODE=%E$SUPRESS_NOT_LEGAL_HERE);
     1914    18601    2           IF ASCBIN(SUBSTR(CH,NEXT_S,1)) ~= %XNL THEN
     1915    18602    2              IF CURR_CH = %XS THEN
     1916    18603                      %ERR(CODE=%E$TRL_S_MUST_BE_LAST);
     1917    18621    2              ELSE
     1918    18622                      %ERR(CODE=%E$TRL_PLUS_OR_MINUS_LAST);
     1919    18640    2           IF TBL_1 ~= ASCBIN (' ') THEN
     1920    18641                  %ASSIGN_MOP (OP1 = LTE, TBL1 = 1, CH1 = ' ');
     1921    18741
     1922    18742    2           WIDTH = WIDTH + 1;
     1923    18743    2           IF MOP_L_MAX ~= 0 THEN
     1924    18744    2              IF CURR_CH = %XMI THEN
     1925    18745                      %ASSIGN_MOP(OP1=INSN,TBL1=MI);
     1926    18845    2              ELSE
     1927    18846                      %ASSIGN_MOP(OP1=SES,ES1=OFF,OP2=ENF,SUP2=SN);
     1928    18946    2           EIS_TYPE = %PIC_EIS_TS;
     1929    18947    2           GOTO CLEAN_UP;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:71   

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:72   
     1931    18949    2         CASE(%_EXRAD9);
     1932    18950          /*D* CASE(%_EXRAD9)
     1933    18951             The '9' of the exrad of a float picture has been detected.
     1934    18952          */
     1935    18953    2           IF ASCBIN(SUBSTR(CH,NEXT_S,1)) ~= %XNL THEN
     1936    18954                   %ERR(CODE=%E$EXRAD_MUST_BE_LAST);
     1937    18972    2           PIC_OUT.EXRAD_L = CNT;
     1938    18973    2           WIDTH = WIDTH + CNT + 1;
     1939    18974    2           GOTO CLEAN_UP;

     1941    18976    2         CASE(%_END);
     1942    18977          /*D* CASE(%_END)
     1943    18978             The normal end of the picture has been detected.  Make sure there
     1944    18979             are some digits.  End floating suppression if necessary.
     1945    18980             Indicate blank-when-zero if required.  Return information in
     1946    18981             PIC_OUT.
     1947    18982          */
     1948    18983    2           IF TDIGITS = 0 THEN
     1949    18984                   %ERR(CODE=%E$PIC_NEEDS_NO_SOURCE);
     1950    19002    2   CLEAN_UP: ;
     1951    19003    2           CALL TEST_ENF ALTRET(ERR_ROUTINE);
     1952    19004    2           IF (SUP ~= 0
     1953    19005    2           AND SUP ~= %XST
     1954    19006    2           AND MOP_L_MAX ~= 0) THEN
     1955    19007    2              IF BZ_MOP = -1 THEN
     1956    19008                      %ASSIGN_MOP(OP1=SES,BZ1=ON);
     1957    19108    2              ELSE
     1958    19109    2                 PIC_OUT.MOP(BZ_MOP) = PIC_OUT.MOP(BZ_MOP) | '004'O;
     1959    19110
     1960    19111    2           IF LEFT = -1 THEN
     1961    19112    2              LEFT = DIGITS;
     1962    19113    2           ELSE
     1963    19114    2              SCALE = SCALE - DIGITS;
     1964    19115    2           PIC_OUT.WIDTH = WIDTH;
     1965    19116    2           PIC_OUT.SCALE = SCALE;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:73   
     1966    19117    2           PIC_OUT.LEFT  = LEFT;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:74   
     1968    19119             /*D*  If TYPE is still zero, then apply some of the rules from
     1969    19120                the standard to determine which TYPE of picture this is.
     1970    19121             */
     1971    19122    2           IF TYPE = 0 THEN
     1972    19123    2              IF POSS_TY.A THEN
     1973    19124    3                DO;
     1974    19125    3                  IF COMCOM.OB.COBOL_74   AND POSS_TY.ANE  AND NOT POSS_TY.AN   THEN
     1975    19126    3                      TYPE = %PIC_TY_AE;
     1976    19127                           /*   This is cause the PIC ABA etc. in Cobol 74  */
     1977    19128                           /*   to be treated as edited for the blank insertion. */
     1978    19129
     1979    19130    3                  ELSE
     1980    19131    3                      TYPE = %PIC_TY_A;
     1981    19132    3                END;
     1982    19133    2              ELSE IF POSS_TY.N THEN
     1983    19134    2                 TYPE = %PIC_TY_N;
     1984    19135    2              ELSE IF POSS_TY.AN THEN
     1985    19136    2                 TYPE = %PIC_TY_AN;
     1986    19137    2              ELSE IF POSS_TY.NE THEN
     1987    19138    2                 TYPE = %PIC_TY_NE;
     1988    19139    2              ELSE
     1989    19140    2                 TYPE = %PIC_TY_ANE;
     1990    19141    2           PIC_OUT.TYPE = TYPE;
     1991    19142             /*D*  Determine the EIS_TYPE if we don't know already
     1992    19143             */
     1993    19144    2           IF EIS_TYPE = %PIC_EIS_UNKNOWN THEN
     1994    19145    2              IF TYPE <= %PIC_TY_ANE THEN
     1995    19146    2                 EIS_TYPE = %PIC_EIS_CH;
     1996    19147    2              ELSE
     1997    19148    2                 EIS_TYPE = %PIC_EIS_NS;
     1998    19149    2           PIC_OUT.EIS_TYPE = EIS_TYPE;
     1999    19150    2           PIC_OUT.MOP_L = MOP_L;
     2000    19151    2           RETURN;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:75   
     2002    19153    2         CASE(ELSE);
     2003    19154          /*D* CASE(ELSE -- i.e. illegal picture)
     2004    19155          */
     2005    19156                %ERR;
     2006    19174
     2007    19175    2         END; /*OF THE DO CASE*/
     2008    19176    1        GOTO TOP_OF_PICTURE_SCAN;

     2010    19178    1   ERR_ROUTINE: ;
     2011    19179    1        PIC_OUT.ERROR = STATE ;
     2012    19180    1        PIC_OUT.ERRCOL = S;
     2013    19181    1        ALTRETURN;

     2015    19183    1   REP_ERR_RTN: ;
     2016    19184    1        SCAN_TBL1.S(CURR_CH) = %_SCAN_END;
     2017    19185    1        PIC_OUT.ERROR = STATE ;
     2018    19186    1        PIC_OUT.ERRCOL = SCAN_X;
     2019    19187    1        ALTRETURN;
     2020    19188
     2021    19189    1   END; /*Z8DP$VALIDATE_PIC*/

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:76   
--  Include file information  --

   Z8D_PIC_TABL.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   Z8D_PIC_PARM.:Z8A6TOU  is referenced.
   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8DP$VALIDATE_PIC.

   Procedure Z8DP$VALIDATE_PIC requires 2121 words for executable code.
   Procedure Z8DP$VALIDATE_PIC requires 138 words of local(AUTO) storage.

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:77   

 Object Unit name= Z8DP$VALIDATE_PIC                          File name= Z8DP.:Z8A6TOU
 UTS= AUG 09 '97 11:16:29.28 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  ST$
    2  LblCom even  none     5      5  ST_
    3  LblCom even  none     1      1  LTS$
    4  LblCom even  none     5      5  LTS_
    5  LblCom even  none    90    132  LEX_SYMBOL
    6  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
    7  LblCom even  none    90    132  TEMP_LEX_SYMBOL
    8  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
    9  RoData even  UTS    186    272  Z8DP$VALIDATE_PIC
   10   Data  even  none    16     20  Z8DP$VALIDATE_PIC
   11   Proc  even  none  2121   4111  Z8DP$VALIDATE_PIC
   12  RoData even  none    18     22  Z8DP$VALIDATE_PIC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    11      0   yes    yes     yes      Std        3  Z8DP$VALIDATE_PIC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:78   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM                           r    LTS_STEP                              O1COM
     HIER_STK_PTR                          HIER_STK                              PAGE_FORMAT
     REP_STK_PTR                           REP_STK                               XLATE_TBL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:79   


        1        1        /*M* Z8DP$VALIDATE_PIC Validate a COBOL picture and generate MOPs for it.      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,DFC                                                                  */
        8        8
        9        9        /*P*        NAME:  Z8DP$VALIDATE_PIC
       10       10                 PURPOSE:  This module processes picture strings and produces
       11       11                           editing micro-operation strings from them.
       12       12                                                                                   *//*
       13       13             DESCRIPTION:  This module processes picture strings and produces
       14       14                           editing micro-operation strings from them.
       15       15                           In addition certain useful information about the
       16       16                           picture is also returned.
       17       17
       18       18                           This module and its include file (Z8D_PIC_PARM)
       19       19                           were copied from Jim Ramsey's account on August
       20       20                           3, 1981.  The original file names are ZES$VALIDATE_
       21       21                           PIC and ZE_PIC_PARMS_C.  The driver (tester) was
       22       22                           also copied from JWRIDP (TEST_PIC_SI).
       23       23
       24       24                           This module accepts as legal pictures all legal
       25       25                           COBOL-74 pictures, plus the following floating
       26       26                           point formats:
       27       27                                1) Floating numeric
       28       28                                   [S] [9's] V [9's] E S 9's
       29       29                                2) Floating numeric edited
       30       30                                   {+|-} [9's] . [9's] E + 9's
       31       31                                                                                   *//*
       32       32                           The "S" picture character may appear either as
       33       33                           the first or last character in a picture string.
       34       34                           Its position in the string, leading or trailing, is
       35       35                           part of the information reported to the caller.
       36       36                                                                                   *//*
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:80   
       37       37                           A numeric picture will also produce a micro-opera-
       38       38                           tion string.  The effect is as if the picture were
       39       39                           a numeric edited string with the "S" replaced by a
       40       40                           "+".
       41       41                                                                                   *//*
       42       42
       43       43
       44       44                           Finally, this module does not check to see if the
       45       45                           picture exceeds any of the arbitrary limits
       46       46                           specified in the formal COBOL definition.  The only
       47       47                           applicable limitation is that the maximum size of
       48       48                           the picture is 256 characters.
       49       49                                                                                   *//*
       50       50                           The details of the legal syntaxes of COBOL pictures
       51       51                           and the semantics of the EIS editing
       52       52                           micro-operations are not given here.  This
       53       53                           information is much too volumous to be included
       54       54                           here.  The reader should become familiar with
       55       55                           the material in the cited references.  This
       56       56                           material is a prerequisite to understanding the
       57       57                           operation of this procedure.
       58       58                                                                                   *//*
       59       59              REFERENCES:  CP-6 COBOL Reference (CE29) -- Section 6, the
       60       60                           topic "PICTURE CLAUSE", especially the table
       61       61                           entitled "PICTURE Character Precedence Chart".
       62       62                                                                                   *//*
       63       63                           DPS-8 Assembly Instructions (DH03) -- In Section
       64       64                           6, the descriptions of the "MVE" and "MVNE"
       65       65                           instructions and the sub-section entitled:
       66       66                           "Micro Operations for Edit Instructions MVE and
       67       67                           MVNE".
       68       68                                                                                   *//*
       69       69                           Other useful references.
       70       70                                                                                   *//*
       71       71                           CODASYL Journal of Development
       72       72                                                                                   *//*
       73       73                           The Programmer's Guide to COBOL
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:81   
       74       74                                                                                     */
       75       75                                               %SPACE 2;

       76       76        Z8DP$VALIDATE_PIC: PROC(PIC_STR,PIC_IN,PIC_OUT) ALTRET;

     76 11 000000   000000 700200 xent  Z8DP$VALIDA* TSX0  ! X66_AUTO_3
        11 000001   000212 000003                    ZERO    138,3
        11 000002   001075 710000 11                 TRA     s:15176

       77       77
       78       78        %EQU PHASE = 1;
       79       79
       80       80        %INCLUDE Z8A_DEFC;
       81      148        %INCLUDE Z8A_SUPP_MAC;
       82     2548        %INCLUDE Z8A_COMCOM;
       83     3198        %INCLUDE Z8A_ST;
       84     6857        %INCLUDE Z8A_LTS;
       85     8934        %INCLUDE Z8E_STACKS;
       86    11200        %INCLUDE Z8E_O1COM;
       87    11961
       88    11962                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:82   
       89    11963        /*I*        NAME:  ERR
       90    11964                 PURPOSE:  This macro sets up the error code and causes
       91    11965                           the appropriate error routine to be entered.
       92    11966                    CALL:  %ERR([CODE=error_code],[RTN=error_routine]);
       93    11967             DESCRIPTION:  The "error_code", if any, is put in the STATE
       94    11968                           variable.  If this invocation is in an internal
       95    11969                           procedure, indicated by "%_INTERNAL_PROC" equal
       96    11970                           to '1'B, then an ALTRETURN statement is generated.
       97    11971                           If this invocation is in the external procedure,
       98    11972                           then a GOTO the "error_routine" is generated.  The
       99    11973                           default "error_routine" is named ERR_ROUTINE.
      100    11974                  INPUTS:  %_INTERNAL_PROC
      101    11975                           error_code
      102    11976                           error_routine
      103    11977                 OUTPUTS:  STATE (set to error_code, if any)
      104    11978                                                                                     */
      105    11979
      106    11980        %MACRO  ERR (
      107    11981          CODE=,RTN=ERR_ROUTINE);
      108    11982        %IF LENGTHC(TEXTCHAR(CODE)) ~= 0;
      109    11983          DO;
      110    11984             STATE = CODE;
      111    11985          %IF _INTERNAL_PROC;
      112    11986             ALTRETURN;
      113    11987          %ELSE ;
      114    11988             GOTO RTN;
      115    11989          %ENDIF;
      116    11990             END;
      117    11991        %ELSE ;
      118    11992          %IF _INTERNAL_PROC;
      119    11993          ALTRETURN;
      120    11994          %ELSE ;
      121    11995          GOTO RTN;
      122    11996          %ENDIF;
      123    11997        %ENDIF;
      124    11998        %MEND;
      125    11999                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:83   
      126    12000        /*I*        NAME:  ASSIGN_MOP
      127    12001                 PURPOSE:  This macro generates statements to assign 1 or 2
      128    12002                           micro-operation (MOP) sequences to the output
      129    12003                           micro-operation string (PIC_OUT.MOPSTR).
      130    12004                    CALL:  %ASSIGN_MOP(
      131    12005                             OP1={INSM,ENF,SES,MVZB,MVZA,MFLS,MFLC,INSB,INSA,
      132    12006                                  INSN,INSP,IGN,MVC,MSES,MORS,LTE,CHT}
      133    12007                             N1={0 - 16}
      134    12008                             TBL1={B,ST,PL,MI,$,CM,PT,Z,any}
      135    12009                             CH1={1 or 8 character string}
      136    12010                             ES1={ON,OFF}
      137    12011                             BZ1={ON}
      138    12012                             SUP1={C | CS,S | SN}
      139    12013                                and similarly for OP2, N2, TBL2, CH2, ES2,
      140    12014                                BZ2, and SUP2.
      141    12015                                                                                   *//*
      142    12016                           The applicability of the various parameters depends
      143    12017                           on the value of OPx, as follows.
      144    12018                           OPx = ENF -- SUPx and BZx
      145    12019                           OPx = SES -- ESx and BZx
      146    12020                           OPx = INSB,INSA,INSN,INSP -- TBLx
      147    12021                           OPx = LTE -- TBLx and CHx
      148    12022                           OPx = CHT -- CHx
      149    12023                           OPx = INSM,MVZB,MVZA,MFLS,MFLC,IGN,MVC,MSES,MORS -- Nx
      150    12024             DESCRIPTION:  This macro generates statements to assign 1 or 2
      151    12025                           MOP sequences to the output MOP string.  It also
      152    12026                           does the bookeeping to see that the status of the
      153    12027                           micro operations is known.  Statements are
      154    12028                           generated to correctly update the length of the
      155    12029                           output MOP string, MOP_L.  Statements are
      156    12030                           generated to correctly set ES_ON to reflect the
      157    12031                           value of the significance indicator (ES).
      158    12032                           Statements are generated to note the position of
      159    12033                           the first MOP that can be used to turn blank
      160    12034                           when zero on (BZ_MOP).  Finally, statements are
      161    12035                           generated to keep track of what characters are
      162    12036                           in edit insertion table entries 1, 2, and 5.
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:84   
      163    12037                                                                                   *//*
      164    12038                           One or two micro operation sequences are assembled
      165    12039                           into a character string literal and that literal
      166    12040                           is appended to the current MOP string.
      167    12041                  INPUTS:  Other than the parameters as mentioned above:
      168    12042                           MOP_L_MAX -- max size of the output MOP string
      169    12043                           MOP_L -- current size of the output MOP string
      170    12044                           BZ_MOP
      171    12045                 OUTPUTS:  MOP_L
      172    12046                           ES_ON
      173    12047                           BZ_MOP
      174    12048                           TBL_1
      175    12049                           TBL_2
      176    12050                           TBL_5
      177    12051                           PIC_OUT.MOPSTR
      178    12052               INTERFACE:  none
      179    12053                                                                                     */
      180    12054
      181    12055        %MACRO ASSIGN_MOP(
      182    12056          OP1(INSM=1,ENF=2,SES=3,MVZB=4,MVZA=5,MFLS=6,MFLC=7,INSB=8,
      183    12057             INSA=9,INSN=10,INSP=11,IGN=12,MVC=13,MSES=14,MORS=15,
      184    12058             LTE=16,CHT=17)=0,
      185    12059          N1=0,
      186    12060          CURRENCY_SIGN(YES='1'B,NO='0'B)='0'B,
      187    12061          TBL1(B=1,ST=2,PL=3,MI=4,$=5,CM=6,PT=7,Z=8,ANY)=0,
      188    12062          CH1=,
      189    12063          ES1(ON=8,OFF=0)=0,
      190    12064          BZ1(ON=4)=0,
      191    12065          SUP1(C=8,CS=8,S=0,SN=0)=0,
      192    12066          OP2(INSM=1,ENF=2,SES=3,MVZB=4,MVZA=5,MFLS=6,MFLC=7,INSB=8,
      193    12067             INSA=9,INSN=10,INSP=11,IGN=12,MVC=13,MSES=14,MORS=15,
      194    12068             LTE=16,CHT=17)=0,
      195    12069          N2=0,
      196    12070          TBL2(B=1,ST=2,PL=3,MI=4,$=5,CM=6,PT=7,Z=8,ANY)=0,
      197    12071          CH2=,
      198    12072          ES2(ON=8,OFF=0)=0,
      199    12073          BZ2(ON=4)=0,
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:85   
      200    12074          SUP2(C=8,CS=8,S=0,SN=0)=0);
      201    12075
      202    12076          %LSET EIT = ' *+-$,.0';
      203    12077          %IF OP1 = 2;                       /*ENF*/
      204    12078             %LSET STR = BINASC(OP1*16+SUP1+BZ1);
      205    12079          %ELSEIF OP1 = 3;                   /*SES*/
      206    12080             %LSET STR = BINASC(OP1*16+ES1+BZ1);
      207    12081          %ELSEIF OP1 >= 8 AND OP1 <= 11;    /*INSB,INSA,INSN,INSP*/
      208    12082             %IF SUBSTR(TEXTCHAR(TBL1),0,1) = '''';
      209    12083                %LSET STR = CONCAT(BINASC(OP1*16),TBL1);
      210    12084             %ELSE ;
      211    12085                %LSET STR = BINASC(OP1*16+TBL1);
      212    12086             %ENDIF;
      213    12087          %ELSEIF OP1 = 16;                  /*LTE*/
      214    12088             %IF CURRENCY_SIGN;
      215    12089               %LSET STR = BINASC(OP1*16+TBL1);
      216    12090             %ELSE;
      217    12091               %LSET STR = CONCAT(BINASC(OP1*16+TBL1),CH1);
      218    12092             %ENDIF;
      219    12093          %ELSEIF OP1 = 17;                  /*CHT*/
      220    12094             %IF LENGTHC(CH1) >= 8;
      221    12095                %LSET STR = CONCAT(BINASC(OP1*16),SUBSTR(CH1,0,8));
      222    12096             %ELSE;
      223    12097                %LSET STR = CONCAT(BINASC(OP1*16),CH1,SUBSTR(EIT,LENGTHC(CH1)));
      224    12098             %ENDIF;
      225    12099          %ELSE ;                    /*INSM,MVZB,MVZA,MFLS,MFLC,IGN,MVC,MSES,MORS*/
      226    12100             %LSET STR = BINASC(OP1*16+MOD(N1,16));
      227    12101          %ENDIF;
      228    12102          %IF OP2 ~= 0;
      229    12103             %IF OP2 = 2;                     /*ENF*/
      230    12104                %LSET STR = CONCAT(STR,BINASC(OP2*16+SUP2+BZ2));
      231    12105             %ELSEIF OP2 = 3;                 /*SES*/
      232    12106                %LSET STR = CONCAT(STR,BINASC(OP2*16+ES2+BZ2));
      233    12107             %ELSEIF OP2 >= 8 AND OP2 <= 11;   /*INSB,INSA,INSN,INSP*/
      234    12108                %IF SUBSTR(TEXTCHAR(TBL2),0,1) = '''';
      235    12109                   %LSET STR = CONCAT(STR,BINASC(OP2*16),TBL2);
      236    12110                %ELSE ;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:86   
      237    12111                   %LSET STR = CONCAT(STR,BINASC(OP2*16+TBL2));
      238    12112                %ENDIF;
      239    12113             %ELSEIF OP2 = 16;                /*LTE*/
      240    12114                %LSET STR = CONCAT(STR,BINASC(OP2*16+TBL2),CH2);
      241    12115             %ELSEIF OP2 = 17;                /*CHT*/
      242    12116                %IF LENGTHC(CH2) >= 8;
      243    12117                   %LSET STR = CONCAT(STR,BINASC(OP2*16),SUBSTR(CH2,0,8));
      244    12118                %ELSE;
      245    12119                   %LSET STR = CONCAT(STR,BINASC(OP2*16),CH2,SUBSTR(EIT,LENGTHC(CH2)));
      246    12120                %ENDIF;
      247    12121             %ELSE ;                 /*INSM,MVZB,MVZA,MFLS,MFLC,IGN,MVC,MSES,MORS*/
      248    12122                %LSET STR = CONCAT(STR,BINASC(OP2*16+MOD(N2,16)));
      249    12123             %ENDIF;
      250    12124          %ENDIF;
      251    12125          DO;
      252    12126             MOP_L = MOP_L + %(LENGTHC(STR));
      253    12127             IF MOP_L >= MOP_L_MAX THEN
      254    12128                DO ;
      255    12129                  /* Added to accompany mops > 63 - 2/25/82 */
      256    12130                  MOP_L = 0 ;
      257    12131                  MOP_L_MAX = 0 ;
      258    12132                  RETURN ;
      259    12133                END ;
      260    12134             IF MOP_L ~= 0 THEN
      261    12135               DO ;
      262    12136                 %IF OP1 = 2 OR OP1 = 3 ;
      263    12137                    %IF OP1 = 3 AND ES1 = 0;
      264    12138                    ES_ON = '0'B;
      265    12139                    %ELSE;
      266    12140                    ES_ON = '1'B;
      267    12141                    %ENDIF;
      268    12142                    IF BZ_MOP = -1 THEN BZ_MOP = MOP_L - %(LENGTHC(STR));
      269    12143                 %ELSEIF OP2 = 2 OR OP2 = 3;
      270    12144                    %IF OP2 = 3 AND ES2 = 0;
      271    12145                    ES_ON = '0'B;
      272    12146                    %ELSE;
      273    12147                    ES_ON = '1'B;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:87   
      274    12148                    %ENDIF;
      275    12149                    IF BZ_MOP = -1 THEN BZ_MOP = MOP_L - 1;
      276    12150                 %ELSEIF OP1 = 16 ;
      277    12151                    %IF TBL1 = 1;
      278    12152                    TBL_1 = ASCBIN(CH1);
      279    12153                    %ELSEIF TBL1 = 2;
      280    12154                    TBL_2 = ASCBIN(CH1);
      281    12155                    %ELSEIF TBL1 = 5;
      282    12156                    TBL_5 = ASCBIN(CH1);
      283    12157                    %ENDIF;
      284    12158                 %ELSEIF OP2 = 16 ;
      285    12159                    %IF TBL2 = 1;
      286    12160                    TBL_1 = ASCBIN(CH2);
      287    12161                    %ELSEIF TBL2 = 2;
      288    12162                    TBL_2 = ASCBIN(CH2);
      289    12163                    %ELSEIF TBL2 = 5;
      290    12164                    TBL_5 = ASCBIN(CH2);
      291    12165                    %ENDIF;
      292    12166                 %ENDIF;
      293    12167                    SUBSTR(PIC_OUT.MOPSTR,MOP_L-%(LENGTHC(STR)),%(LENGTHC(STR))) = %STR;
      294    12168
      295    12169                    %IF OP1 = 16 AND CURRENCY_SIGN; /* LTE -- changed for currency sign */
      296    12170                      MOP_L = MOP_L + 1;
      297    12171                      SUBSTR (PIC_OUT.MOPSTR, MOP_L - 1, 1) = CH1;
      298    12172                    %ENDIF;
      299    12173                    END;
      300    12174               END ;
      301    12175        %MEND;
      302    12176                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:88   
      303    12177        /*I*        NAME:  GEN_TBL
      304    12178                 PURPOSE:  This macro generates scanning tables used while
      305    12179                           scanning the translated version of the input
      306    12180                           picture string.
      307    12181                    CALL:  %GEN_TBL(
      308    12182                             TBLN=table_name
      309    12183                             STCLASS=storage_class (CONSTANT)
      310    12184                             WIDTH=table_entry_width (BYTE)
      311    12185                             ASSUME=default_state_value
      312    12186                             XCR,XDB,XPT,XPL,XMI,X$,XZ,XST,XCM,XS,XP,XV,XE,X0,
      313    12187                             XSL,XX,X9,XB,XA,X#,XLP,XRP,X__,XNL=appropriate
      314    12188                                state value
      315    12189             DESCRIPTION:  This macro generates a declaration of a scanning
      316    12190                           table with appropriate state table entries filled
      317    12191                           in.  The ASSUME parameter indicates a value to be
      318    12192                           used for any unspecified states.
      319    12193                                                                                     */
      320    12194
      321    12195        %MACRO GEN_TBL (
      322    12196          TBLN=GEN_TBL, STCLASS=CONSTANT, WIDTH=BYTE, ASSUME=,
      323    12197          XCR=%DFLT_STATE, XDB=%DFLT_STATE, XPT=%DFLT_STATE, XPL=%DFLT_STATE,
      324    12198          XMI=%DFLT_STATE, X$ =%DFLT_STATE, XZ =%DFLT_STATE, XST=%DFLT_STATE,
      325    12199          XCM=%DFLT_STATE, XS =%DFLT_STATE, XP =%DFLT_STATE, XV =%DFLT_STATE,
      326    12200          XE =%DFLT_STATE, X0 =%DFLT_STATE, XSL=%DFLT_STATE, XX =%DFLT_STATE,
      327    12201          X9 =%DFLT_STATE, XB =%DFLT_STATE, XA =%DFLT_STATE, XN =%DFLT_STATE,
      328    12202          X# =%DFLT_STATE,
      329    12203          XLP=%DFLT_STATE, XRP=%DFLT_STATE, X__=%DFLT_STATE, XNL=%DFLT_STATE);
      330    12204          %IF LENGTHC(TEXTCHAR(ASSUME)) ~= 0 ;
      331    12205             %SET DFLT_STATE = %ASSUME;
      332    12206             %ENDIF;
      333    12207        DCL 1 TBLN STCLASS DALIGNED,2 S(0:24)  UBIN WIDTH UNAL INIT(
      334    12208        XCR,XDB,XPT,XPL,XMI,X$,XZ,XST,XCM,XS,XP,XV,XE,X0,XSL,XX,X9,XB,XA,XN,X#,XLP,XRP,X__,
             12208        XNL);
      335    12209          %MEND;
      336    12210                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:89   
      337    12211        /*I*        NAME:  ASSIGN_OP
      338    12212                 PURPOSE:  This macro generates a statement to assign the
      339    12213                           value of a MOP opcode to a variable.
      340    12214                    CALL:  %ASSIGN_OP(VAR=target_variable,OP=MOP_opcode);
      341    12215             DESCRIPTION:  This macro generates a statement to assign the
      342    12216                           value of a MOP opcode to a variable.  It's
      343    12217                           primarily useful as a way of hiding the actual
      344    12218                           values of the various opcodes.
      345    12219                                                                                     */
      346    12220
      347    12221        %MACRO ASSIGN_OP(
      348    12222          VAR=,
      349    12223          OP(INSM=1,ENF=2,SES=3,MVZB=4,MVZA=5,MFLS=6,MFLC=7,INSB=8,
      350    12224             INSA=9,INSN=10,INSP=11,IGN=12,MVC=13,MSES=14,MORS=15,
      351    12225             LTE=16,CHT=17)=0);
      352    12226          VAR = OP;
      353    12227        %MEND;
      354    12228                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:90   
      355    12229        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      356    12230         *                                                                           *
      357    12231         *                           P a r a m e t e r s                             *
      358    12232         *                                                                           *
      359    12233         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      360    12234
      361    12235        %INCLUDE Z8D_PIC_PARM;
      362    12341
      363    12342
      364    12343          %PIC_STR(LEN=PIC_IN.PIC_L);
      365    12347
      366    12348          %PIC_IN;
      367    12361
      368    12362          %PIC_OUT (STCLASS = " ") ;
      369    12435
      370    12436          %EQU COMMA = ',';
      371    12437          %EQU POINT = '.';
      372    12438                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:91   
      373    12439        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      374    12440         *                                                                           *
      375    12441         *                       E r r o r   M e s s a g e s                         *
      376    12442         *                                                                           *
      377    12443         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      378    12444
      379    12445        %INCLUDE Z8A_ERR_NUMS ;
      380    13209
      381    13210        /* EQU E_LO = 445; */
      382    13211
      383    13212        /* EQU E_ONLY_IN_REP = E_LO + 1; */
      384    13213        /*E*   ERROR: ZEX-00001-0
      385    13214             MESSAGE: This character belongs only in a repetition count.
      386    13215        */
      387    13216        /* EQU E_INVALID_CH = E_LO + 2; */
      388    13217        /*E*   ERROR: ZEX-00002-0
      389    13218             MESSAGE: This is not a legal picture character.
      390    13219        */
      391    13220        /* EQU E_END = E_LO + 3; */
      392    13221        /*E*   ERROR: ZEX-00003-0
      393    13222             MESSAGE: This picture ends in an unexpected manner.
      394    13223        */
      395    13224        /* EQU E_ZERO = E_LO + 4; */
      396    13225        /*E*   ERROR: ZEX-00004-0
      397    13226             MESSAGE: This is a zero length picture.
      398    13227        */
      399    13228        /* EQU E_PIC_L_MAX = E_LO + 5; */
      400    13229        /*E*   ERROR: ZEX-00005-0
      401    13230             MESSAGE: This picture is longer than the maximum allowed (256).
      402    13231        */
      403    13232        /* EQU E_IN_REP = E_LO + 6; */
      404    13233        /*E*   ERROR: ZEX-00006-0
      405    13234             MESSAGE: This character is illegal in a repetition count.
      406    13235        */
      407    13236        /* EQU E_0LEN_REP = E_LO + 7; */
      408    13237        /*E*   ERROR: ZEX-00007-0
      409    13238             MESSAGE: This repetition count is of zero length -- ().
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:92   
      410    13239        */
      411    13240                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:93   
      412    13241        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      413    13242         *                                                                           *
      414    13243         *                       E r r o r   M e s s a g e s (ctd.)                  *
      415    13244         *                                                                           *
      416    13245         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      417    13246
      418    13247        /* EQU E_0_REP = E_LO + 8; */
      419    13248        /*E*   ERROR: ZEX-00008-0
      420    13249             MESSAGE: A repetition count must be greater than zero.
      421    13250        */
      422    13251        /* EQU E_CRDB_ATEND = E_LO + 9; */
      423    13252        /*E*   ERROR: ZEX-00009-0
      424    13253             MESSAGE: CR or DB are legal only at the end of a picture.
      425    13254        */
      426    13255        /* EQU E_CRDB_NOT1ST = E_LO + 10; */
      427    13256        /*E*   ERROR: ZEX-00010-0
      428    13257             MESSAGE: CR or DB may not begin a picture.
      429    13258        */
      430    13259        /* EQU E_NO_E = E_LO + 11; */
      431    13260        /*E*   ERROR: ZEX-00011-0
      432    13261             MESSAGE: 'E' is not valid in this context.
      433    13262        */
      434    13263        /* EQU E_ONLY1_ = E_LO + 12; */
      435    13264        /*E*   ERROR: ZEX-00012-0
      436    13265             MESSAGE: This character can appear only once.
      437    13266        */
      438    13267        /* EQU E_NOTWITH_PTV = %E_LO + 13; */
      439    13268        /* EQU E_NOTWITH_V = E_NOTWITH_PTV; */
      440    13269        /*E*   ERROR: ZEX-00013-0
      441    13270             MESSAGE: 'V' and '.' cannot appear in the same picture.
      442    13271        */
      443    13272        /* EQU E_ONLY1SC = E_LO + 14; */
      444    13273        /*E*   ERROR: ZEX-00014-0
      445    13274             MESSAGE: Only one sign control symbol is permitted in a picture.
      446    13275        */
      447    13276                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:94   
      448    13277        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      449    13278         *                                                                           *
      450    13279         *                       E r r o r   M e s s a g e s (ctd.)                  *
      451    13280         *                                                                           *
      452    13281         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      453    13282
      454    13283        /* EQU E_ONLY1SUP = E_LO + 15; */
      455    13284        /*E*   ERROR: ZEX-00015-0
      456    13285             MESSAGE: Only one suppression type is permitted in a picture.
      457    13286        */
      458    13287        /* EQU E_NOTWITH_PTP = %E_LO + 16; */
      459    13288        /* EQU E_NOTWITH_P = E_NOTWITH_PTP; */
      460    13289        /*E*   ERROR: ZEX-00016-0
      461    13290             MESSAGE: 'P' and '.' cannot appear in the same picture.
      462    13291        */
      463    13292        /* EQU E_NOT_IN_EXRAD = %E_LO + 17; */
      464    13293        /*E*   ERROR: ZEX-00017-0
      465    13294             MESSAGE: This character is not legal in an exrad.
      466    13295        */
      467    13296        /* EQU E_EXRAD_LAST = %E_LO + 18; */
      468    13297        /*E*   ERROR: ZEX-00018-0
      469    13298             MESSAGE: The exrad must be the last portion of a floating picture.
      470    13299        */
      471    13300        /* EQU E_CONTEXT_ERR = %E_LO + 19; */
      472    13301        /*E*   ERROR: ZEX-00019-0
      473    13302             MESSAGE: This character is not legal in this context.
      474    13303        */
      475    13304        /* EQU E_NOT_IN_ANE = %E_LO + 20; */
      476    13305        /*E*   ERROR: ZEX-00020-0
      477    13306             MESSAGE: This character is not legal in an alphanumeric-edited picture.
      478    13307        */
      479    13308        /* EQU E_NOT_IN_N = %E_LO + 21; */
      480    13309        /*E*   ERROR: ZEX-00021-0
      481    13310             MESSAGE: This character is not legal in a numeric picture.
      482    13311        */
      483    13312                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:95   
      484    13313        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      485    13314         *                                                                           *
      486    13315         *                       E r r o r   M e s s a g e s (ctd.)                  *
      487    13316         *                                                                           *
      488    13317         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      489    13318
      490    13319        /* EQU E_NOT_IN_NE = %E_LO + 22; */
      491    13320        /*E*   ERROR: ZEX-00022-0
      492    13321             MESSAGE: This character is not legal in a numeric-edited picture.
      493    13322        */
      494    13323        /* EQU E_ONLY_IN_NE = %E_LO + 23; */
      495    13324        /*E*   ERROR: ZEX-00023-0
      496    13325             MESSAGE: This character is only legal in a numeric-edited picture.
      497    13326        */
      498    13327        /* EQU E_ONLY_IN_AN_ANE = %E_LO + 24; */
      499    13328        /*E*   ERROR: ZEX-00024-0
      500    13329             MESSAGE: This character is only legal in an alphanumeric or
      501    13330                      alphanumeric-edited picture.
      502    13331        */
      503    13332        /* EQU E_ONLY_IN_A__ = %E_LO + 25; */
      504    13333        /*E*   ERROR: ZEX-00025-0
      505    13334             MESSAGE: This character is only legal in an alpha-class picture.
      506    13335        */
      507    13336        /* EQU E_ONLY_IN_N = %E_LO + 26; */
      508    13337        /*E*   ERROR: ZEX-00026-0
      509    13338             MESSAGE: This character is only legal in a numeric picture.
      510    13339        */
      511    13340        /* EQU E_ONLY_IN_N_NE = %E_LO + 27; */
      512    13341        /*E*   ERROR: ZEX-00027-0
      513    13342             MESSAGE: This character is only legal in a numeric or numeric-edited picture.
      514    13343        */
      515    13344                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:96   
      516    13345        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      517    13346         *                                                                           *
      518    13347         *                       E r r o r   M e s s a g e s (ctd.)                  *
      519    13348         *                                                                           *
      520    13349         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      521    13350
      522    13351        /* EQU E_PM_NOT1ST = %E_LO + 28; */
      523    13352        /*E*   ERROR: ZEX-00028-0
      524    13353             MESSAGE: A leading +- must be the very first thing in a picture.
      525    13354        */
      526    13355        /* EQU E_S_NOT1ST = %E_LO + 29 ; */
      527    13356        /*E*   ERROR: ZEX-00029-0
      528    13357             MESSAGE: A leading S must be the very first thing in a picture.
      529    13358        */
      530    13359        /* EQU E_NOT_AFTER_P = %E_LO + 30; */
      531    13360        /*E*   ERROR: ZEX-00030-0
      532    13361             MESSAGE: V may not follow a sequence of leading P's.
      533    13362        */
      534    13363        /* EQU E_P_AFTER_V = %E_LO + 31 ; */
      535    13364        /*E*   ERROR: ZEX-00031-0
      536    13365             MESSAGE: Trailing P's may not follow a V.
      537    13366        */
      538    13367        /* EQU E_P_ATEND = %E_LO + 32 ; */
      539    13368        /*E*   ERROR: ZEX-00032-0
      540    13369             MESSAGE: This character may not follow a sequence of trailing P's.
      541    13370        */
      542    13371        /* EQU E_PL_EXRAD = %E_LO + 33 ; */
      543    13372        /*E*   ERROR: ZEX-00033-0
      544    13373             MESSAGE: A + is expected after the E in a numeric-floating-edited picture.
      545    13374        */
      546    13375        /* EQU E_S_EXRAD = %E_LO + 34 ; */
      547    13376        /*E*   ERROR: ZEX-00034-0
      548    13377             MESSAGE: An S is expected after the E in a numeric-floating picture.
      549    13378        */
      550    13379                                               %EJECT ;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:97   
      551    13380        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      552    13381         *                                                                           *
      553    13382         *                       E r r o r   M e s s a g e s (ctd.)                  *
      554    13383         *                                                                           *
      555    13384         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      556    13385
      557    13386        /* EQU E_NO_SUP = %E_LO + 35 ; */
      558    13387        /*E*   ERROR: ZEX-00035-0
      559    13388             MESSAGE: Suppression is not legal here.
      560    13389        */
      561    13390        /* EQU E_NOT_W_RSUP = %E_LO + 36 ; */
      562    13391        /*E*   ERROR: ZEX-00036-0
      563    13392             MESSAGE: 9's are not legal once suppresion continues past the decimal point.
      564    13393        */
      565    13394        /* EQU E_S_NOT_LAST = %E_LO + 37 ; */
      566    13395        /*E*   ERROR: ZEX-00037-0
      567    13396             MESSAGE: A trailing S must be the very last thing in a picture.
      568    13397        */
      569    13398        /* EQU E_PM_NOT_LAST = %E_LO + 38 ; */
      570    13399        /*E*   ERROR: ZEX-00038-0
      571    13400             MESSAGE: A trailing +- must be the very last thing in a picture.
      572    13401        */
      573    13402        /* EQU E_NO_DIGITS = %E_LO + 39 ; */
      574    13403        /*E*   ERROR: ZEX-00039-0
      575    13404             MESSAGE: This picture needs no source characters.
      576    13405        */
      577    13406        /* EQU E_INTERNAL_1 = %E_LO + 471 ; */
      578    13407        /*E*   ERROR: ZEX-00040-0
      579    13408             MESSAGE: <<<<<<<<<<  Internal Error 1  >>>>>>>>>>
      580    13409        */
      581    13410        /* EQU E_INTERNAL_2 = %E_LO + 472 ; */
      582    13411        /*E*   ERROR: ZEX-00041-0
      583    13412             MESSAGE: <<<<<<<<<<  Internal Error 2  >>>>>>>>>>
      584    13413        */
      585    13414        /* EQU E_NOMORE_MOPS = %E_LO + 473; */
      586    13415        /*E*   ERROR: ZEX-00028-0
      587    13416             MESSAGE: MOP string generation space has been exhausted.
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:98   
      588    13417        */
      589    13418                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:99   
      590    13419        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      591    13420         *                                                                           *
      592    13421         *                          S t a t e   C o d e s                            *
      593    13422         *                                                                           *
      594    13423         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      595    13424
      596    13425        %EQU _IGN            =  0;
      597    13426        %EQU _CR_DB          =  1;
      598    13427        %EQU _PT             =  2;
      599    13428        %EQU _1STPM          =  3;
      600    13429        %EQU _1ST$           =  4;
      601    13430        %EQU _1STSU          =  5;
      602    13431        %EQU _FX_CM          =  6;
      603    13432        %EQU _FX_0           =  7;
      604    13433        %EQU _FX_SL          =  8;
      605    13434        %EQU _ST_B           =  9;
      606    13435        %EQU _SU_CM          = 10;
      607    13436        %EQU _SU_0           = 11;
      608    13437        %EQU _SU_SL          = 12;
      609    13438        %EQU _LT_S           = 13;
      610    13439        %EQU _P              = 14;
      611    13440        %EQU _V              = 15;
      612    13441        %EQU _E              = 16;
      613    13442        %EQU _MOVCH          = 17;
      614    13443        %EQU _1ST9           = 18;
      615    13444        %EQU _B_             = 19;
      616    13445        %EQU _FIXPM          = 20;
      617    13446        %EQU _SUPPRESSION    = 21;
      618    13447        %EQU _RT_SUPPRESSION = 22;
      619    13448        %EQU _LT_9           = 23;
      620    13449        %EQU _EXRAD9         = 24;
      621    13450        %EQU _END            = 25;
      622    13451        %EQU _SCAN_END       =  1;
      623    13452        %EQU _SCAN_CNT       =  2;
      624    13453        %EQU _FIXED          =  1;
      625    13454        %EQU _FLOAT          =  2;
      626    13455                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:100  
      627    13456        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      628    13457         *                                                                           *
      629    13458         *                         S t a t e   T a b l e s                           *
      630    13459         *                                                                           *
      631    13460         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      632    13461
      633    13462    1   DCL  INIT_TBL(0:24)          UBIN WORD CONSTANT INIT(
      634    13463                           /*B* INIT_TBL the initial values for STATE_TBL             */
      635    13464    1           %_CR_DB,%_CR_DB,%_PT   ,%_1STPM,%_1STPM,%_1ST$ ,
      636    13465    1           %_1STSU,%_1STSU,%_FX_CM,%_LT_S ,%_P    ,%_V    ,
      637    13466    1           %E$E_NOT_IN_VALID_CONTEXT,%_FX_0 ,%_FX_SL,%_MOVCH,%_1ST9 ,%_B_   ,
      638    13467    1           %_MOVCH,
      639    13468    1           %_MOVCH,%E$ONLY_IN_REP_CNT,%E$ONLY_IN_REP_CNT,%E$ONLY_IN_REP_CNT,
      640    13469    1           %E$INVALID_CHARACTER,%_END);
      641    13470
      642    13471        %GEN_TBL(TBLN=SCAN_TBL1, STCLASS=STATIC, ASSUME=%_SCAN_END,
      643    13472          X# =%E$ONLY_IN_REP_CNT,
      644    13473          XLP=%_SCAN_CNT,
      645    13474          XRP=%E$ONLY_IN_REP_CNT,
      646    13475          X__=%E$INVALID_CHARACTER);
      647    13482                           /*B* SCAN_TBL1 scan off like characters and locate
      648    13483                               a '(' beginning a count field.                         */
      649    13484        %GEN_TBL(TBLN=SCAN_TBL2, ASSUME=%E$CHAR_ILLEGAL_IN_REP_CNT,
      650    13485          X0 =%_IGN,
      651    13486          X9 =%_IGN,
      652    13487          X# =%_IGN,
      653    13488          XRP=%_SCAN_END,
      654    13489          X__=%E$INVALID_CHARACTER,
      655    13490          XNL=%E$END_UNEXPECTED);
      656    13497                           /*B* SCAN_TBL2 scan off the replication factor.              */
      657    13498                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:101  
      658    13499        %GEN_TBL(TBLN=SPCL_SUP, STCLASS=STATIC, ASSUME=%_IGN,
      659    13500          XCR=%_FIXED,
      660    13501          XDB=%_FIXED,
      661    13502          XPT=%_FIXED,
      662    13503          XPL=%_FIXED,
      663    13504          XMI=%_FIXED,
      664    13505          X$ =%_FIXED,
      665    13506          XZ =%_FIXED,
      666    13507          XST=%_FIXED,
      667    13508          XE =%_FIXED);
      668    13515
      669    13516
      670    13517        %GEN_TBL(TBLN=EXRAD_ONLY, WIDTH=WORD, ASSUME=%E$INVALID_CHAR_IN_EXRAD,
      671    13518          X9 =%_EXRAD9,
      672    13519          X# =%E$ONLY_IN_REP_CNT,
      673    13520          XLP=%E$ONLY_IN_REP_CNT,
      674    13521          XRP=%E$ONLY_IN_REP_CNT,
      675    13522          X__=%E$INVALID_CHARACTER,
      676    13523          XNL=%E$EXRAD_MUST_BE_LAST);
      677    13530                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:102  
      678    13531                      /*       Distinguished Characters (the %X's)
      679    13532
      680    13533                                      Legal Picture Types
      681    13534                       Char  Name  A  AN  ANE  N  NE  NF  NFE  KANJI
      682    13535                        C    %XCR  |   |   |   |   x   |   |    |
      683    13536                        D    %XDB  |   |   |   |   x   |   |    |
      684    13537                        .    %XPT  |   |   |   |   x   |   x    |
      685    13538                        +    %XPL  |   |   |   |   x   |   x    |
      686    13539                        -    %XMI  |   |   |   |   x   |   x    |
      687    13540                        $    %X$   |   |   |   |   x   |   |    |
      688    13541                        Z    %XZ   |   |   |   |   x   |   |    |
      689    13542                        *    %XST  |   |   |   |   x   |   |    |
      690    13543                        ,    %XCM  |   |   |   |   x   |   |    |
      691    13544
      692    13545                        S    %XS   |   |   |   x   |   x   |    |
      693    13546
      694    13547                        P    %XP   |   |   |   x   x   |   |    |
      695    13548                        V    %XV   |   |   |   x   x   x   |    |
      696    13549
      697    13550                        E    %XE   |   |   |   |   |   x   x    |
      698    13551                        0    %X0   |   |   x   |   x   |   |    |
      699    13552                        /    %XSL  |   |   x   |   x   |   |    |
      700    13553
      701    13554                        X    %XX   |   x   x   |   |   |   |    |
      702    13555
      703    13556                        9    %X9   |   x   x   x   x   x   x    |
      704    13557
      705    13558                        B    %XB   x   |   x   |   x   |   |    |
      706    13559
      707    13560                        A    %XA   x   x   x   |   |   |   |    |
      708    13561
      709    13562                        N    %XN   |   |   |   |   |   |   |    x
      710    13563
      711    13564                       1-8   %X#
      712    13565                        (    %XLP
      713    13566                        )    %XRP
      714    13567                       o.w.  %X__
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:103  
      715    13568                       null  %XNL
      716    13569                                                                                      */
      717    13570        %SET LISTINC = '1'B;
      718    13571        %INCLUDE Z8D_PIC_TABL;
        1+   13572        /*T***********************************************************/
        2+   13573        /*T*                                                         */
        3+   13574        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+   13575        /*T*                                                         */
        5+   13576        /*T***********************************************************/
        6+   13577        /* Picture string XLATE table and %EQU's for indexes */
        7+   13578
        8+   13579        %EQU XCR =  0;
        9+   13580        %EQU XDB =  1;
       10+   13581        %EQU XPT =  2;
       11+   13582        %EQU XPL =  3;
       12+   13583        %EQU XMI =  4;
       13+   13584        %EQU X$  =  5;
       14+   13585        %EQU XZ  =  6;
       15+   13586        %EQU XST =  7;
       16+   13587        %EQU XCM =  8;
       17+   13588        %EQU XS  =  9;
       18+   13589        %EQU XP  = 10;
       19+   13590        %EQU XV  = 11;
       20+   13591        %EQU XE  = 12;
       21+   13592        %EQU X0  = 13;
       22+   13593        %EQU XSL = 14;
       23+   13594        %EQU XX  = 15;
       24+   13595        %EQU X9  = 16;
       25+   13596        %EQU XB  = 17;
       26+   13597        %EQU XA  = 18;
       27+   13598        %EQU XN  = 19;
       28+   13599        %EQU X#  = 20;
       29+   13600        %EQU XLP = 21;
       30+   13601        %EQU XRP = 22;
       31+   13602        %EQU X__ = 23;
       32+   13603        %EQU XNL = 24;
       33+   13604                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:104  
       34+   13605    1   DCL
       35+   13606    1     1  XLATE_TBL
       36+   13607                                     %IF INITIALIZE;
       38+   13609                                     %ELSE;
       39+   13610    1                                   DALIGNED SYMREF,
       40+   13611                                     %ENDIF;
       41+   13612                           /*B* XLATE_TBL the distinguished char translation table    */
       42+   13613    1        2  *(0:127)             UBIN BYTE UNAL
       43+   13614                                     %IF INITIALIZE;
       63+   13634                                      %ENDIF;
       64+   13635    1        ;
       65+   13636
       66+   13637    1   DCL PIC_XLATE_CH (0:127)  REDEF XLATE_TBL UBIN BYTE UNAL;
      719    13638        %SET LISTINC = '0'B;
      720    13639                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:105  
      721    13640        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      722    13641         *                                                                           *
      723    13642         *                      L o c a l   V a r i a b l e s                        *
      724    13643         *                                                                           *
      725    13644         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      726    13645
      727    13646        %EQU PIC_L_MAX = 256;
      728    13647                           /*B* PIC_L_MAX %EQU of the max legal length of a picture.  */
      729    13648    1   DCL  CH                      CHAR(%(PIC_L_MAX+1)) DALIGNED;
      730    13649                           /*B* CH is the string of translated (distinguished)
      731    13650                                characters.                                           */
      732    13651    1   DCL  S                       UBIN;
      733    13652                           /*B* S the current position in the pic string              */
      734    13653    1   DCL  CNT                     UBIN;
      735    13654                           /*B* CNT replication count                                 */
      736    13655    1   DCL  NEXT_S                  UBIN;
      737    13656                           /*B* NEXT_S the next position in the pic string            */
      738    13657    1   DCL  STATE_TBL(0:24)         UBIN WORD;
      739    13658                           /*B* STATE_TBL the current state table                     */
      740    13659    1   DCL
      741    13660    1     1  STATE_CLASS             REDEF STATE_TBL,
      742    13661    1        2  NE(0:8)              UBIN WORD, /* CR, ..., CM */
      743    13662    1        2  N                    UBIN WORD, /* S           */
      744    13663    1        2  N_NE(0:1)            UBIN WORD, /* P, V        */
      745    13664    1        2  *                    UBIN WORD, /* E           */
      746    13665    1        2  ANE_NE(0:1)          UBIN WORD, /* O, SL       */
      747    13666    1        2  AN_ANE               UBIN WORD, /* X           */
      748    13667    1        2  *                    UBIN WORD, /* 9           */
      749    13668    1        2  A_ANE_NE             UBIN WORD, /* B           */
      750    13669    1        2  A_AN_ANE             UBIN WORD, /* A           */
      751    13670    1        2  K                    UBIN WORD, /* N  [KANJI]  */
      752    13671    1        2  *(0:4)               UBIN WORD;
      753    13672    1   DCL  STATE                   UBIN;
      754    13673                           /*B* STATE the current state.                              */
      755    13674    1   DCL  MOP_L_MAX               UBIN WORD;
      756    13675                           /*B* MOP_L_MAX local copy of PIC_IN.MOP_L                  */
      757    13676    1   DCL  MOP_L                   UBIN WORD;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:106  
      758    13677                           /*B* MOP_L current length of mop string                    */
      759    13678    1   DCL
      760    13679    1     1  BITS(0:24)              ALIGNED CONSTANT,
      761    13680    1        2  REP_LEGAL            BIT(1) UNAL INIT(
      762    13681                           /*B* BITS.REP_LEGAL bit map for the legality of a
      763    13682                                replication count.                                    */
      764    13683    1     '0'B,'0'B,'0'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'0'B,'1'B,'0'B,
      765    13684    1     '0'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'0'B,'0'B,'0'B,'0'B,'0'B),
      766    13685    1        2  TYPE_CHECK           BIT(1) UNAL INIT(
      767    13686                           /*B* BITS.TYPE_CHECK bit map for the need to type check.   */
      768    13687    1     '1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,
      769    13688    1     '0'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'1'B,'0'B,'0'B,'0'B,'0'B,'0'B);
      770    13689    1   DCL  CURR_CH                 UBIN;
      771    13690                           /*B* CURR_CH current character                             */
      772    13691    1   DCL  CONTINUE_SCAN           BIT(1) ALIGNED;
      773    13692                           /*B* CONTINUE_SCAN true/false continue multi-symbol scan   */
      774    13693    1   DCL  SCAN_X                  UBIN;
      775    13694                           /*B* SCAN_X index into CH during multi-symbol scan         */
      776    13695
      777    13696    1   DCL  I                       UBIN;
      778    13697    1   DCL  L                       UBIN;
      779    13698    1   DCL  CRDB4                   CHAR(4) ALIGNED;
      780    13699    1   DCL  CRDB4_BIT               REDEF CRDB4 BIT(36);
      781    13700    1   DCL  CR_DB(0:1)              CHAR(4) ALIGNED CONSTANT INIT('CR','DB');
      782    13701
      783    13702    1   DCL  DIGITS                  SBIN;
      784    13703    1   DCL  TDIGITS                 SBIN;
      785    13704    1   DCL  WIDTH                   SBIN;
      786    13705    1   DCL  LEFT                    SBIN;
      787    13706    1   DCL  SCALE                   SBIN;
      788    13707    1   DCL  ES_ON                   BIT(1);
      789    13708    1   DCL  ENF_NEEDED              BIT(1);
      790    13709
      791    13710    1   DCL  SUP                     UBIN;
      792    13711    1   DCL  BZ_MOP                  SBIN;
      793    13712                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:107  
      794    13713    1   DCL  TYPE                    UBIN;
      795    13714
      796    13715    1   DCL
      797    13716    1     1  POSS_TY                 ALIGNED,
      798    13717    1        2  K                    BIT(1) UNAL,  /* Kanji */
      799    13718    1        2  A                    BIT(1) UNAL,
      800    13719    1        2  AN                   BIT(1) UNAL,
      801    13720    1        2  ANE                  BIT(1) UNAL,
      802    13721    1        2  N                    BIT(1) UNAL,
      803    13722    1        2  NE                   BIT(1) UNAL,
      804    13723    1        2  NF                   BIT(1) UNAL,
      805    13724    1        2  NFE                  BIT(1) UNAL;
      806    13725        %EQU POSS_TY_NE      = '00000100'B;
      807    13726        %EQU POSS_TY_INIT    = '11111111'B;
      808    13727        %EQU POSS_TY_N_NF    = '00001010'B;
      809    13728        %EQU POSS_TY_N_NE    = '00001100'B;
      810    13729        %EQU POSS_TY_NF      = '00000010'B;
      811    13730        %EQU POSS_TY_FLT     = '00000011'B;
      812    13731    1   DCL  P_TEST_STR_INIT(0:4)    UBIN BYTE UNAL CONSTANT INIT(
      813    13732    1                                   %XS,%XV,%XPL,%XMI,%X$);
      814    13733    1   DCL  P_TEST_STR              REDEF P_TEST_STR_INIT CHAR(5);
      815    13734    1   DCL  TBL_1                   UBIN;
      816    13735    1   DCL  TBL_2                   UBIN;
      817    13736    1   DCL  TBL_5                   UBIN;
      818    13737    1   DCL  MOP_OP                  UBIN;
      819    13738    1   DCL
      820    13739    1     1  SUP_INS_MOP             ALIGNED,
      821    13740    1        2  OP                   UBIN(5) UNAL,
      822    13741    1        2  N                    UBIN(4) UNAL;
      823    13742        %EQU EIT_B  = 1;
      824    13743        %EQU EIT_ST = 2;
      825    13744        %EQU EIT_PL = 3;
      826    13745        %EQU EIT_MI = 4;
      827    13746        %EQU EIT_$  = 5;
      828    13747        %EQU EIT_CM = 6;
      829    13748        %EQU EIT_PT = 7;
      830    13749        %EQU EIT_0  = 8;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:108  
      831    13750                                               %EJECT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:109  
      832    13751    1   DCL  EIS_TYPE                UBIN;
      833    13752
      834    13753        %EQU NO_LAST_OP = 64;
      835    13754    1   DCL  LAST_MOP_OP             UBIN;
      836    13755    1   DCL  LAST_MOP_L              UBIN;
      837    13756    1   DCL  LAST_MOP_N              UBIN;
      838    13757
      839    13758    1   DCL  PROC$                   PTR;
      840    13759
      841    13760        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      842    13761         *                                                                           *
      843    13762         *                  I n t e r n a l  P r o c e d u r e s                     *
      844    13763         *                                                                           *
      845    13764         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
      846    13765
      847    13766        %SET LISTDIR = '0'B;
      848    13767
      849    13768
      850    13769
      852    13771          /* %SET _INTERNAL_PROC = '1'B; */

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:110  
      854    13773        /*I*        NAME:  TYPE_CHECK
      855    13774                 PURPOSE:  This procedure checks the current character
      856    13775                           (CURR_CH) to see if it is legal character given
      857    13776                           what is known of the possible legal picture types
      858    13777                           up to this point in the picture scan.
      859    13778                    CALL:  CALL TYPE_CHECK ALTRET(ERR_ROUTINE);
      860    13779             DESCRIPTION:  Each picture character is legal in only certain
      861    13780                           types of pictures.  There are seven such types--
      862    13781                           alphabetic, alphanumeric, alphanumeric-edited,
      863    13782                           numeric, numeric-edited, numeric-floating, and
      864    13783                           numeric-floating-edited.  For each picture
      865    13784                           character, there is a mask (in POSS_TY_MASK)
      866    13785                           which marks which picture types are legal for
      867    13786                           this character.  Starting with a mask of all
      868    13787                           1's in POSS_TY, the mask element of each picture
      869    13788                           character is ANDed with POSS_TY.  If the result
      870    13789                           is ever zero, then picture is in error.  By this
      871    13790                           means it is possible to determine that an "X" and
      872    13791                           decimal point may not be in the same picture.  In
      873    13792                           addition, if there is ever only one bit on in
      874    13793                           POSS_TY, then the picture type has been fully
      875    13794                           determined.
      876    13795                                                                                   *//*
      877    13796                           As succesive picture characters reduce the number
      878    13797                           of possible legal characters in the picture the
      879    13798                           state table is set with error state indications to
      880    13799                           so indicate.
      881    13800                  INPUTS:  CURR_CH
      882    13801                           POSS_TY
      883    13802                           TYPE
      884    13803                 OUTPUTS:  POSS_TY
      885    13804                           TYPE
      886    13805                           STATE_TBL
      887    13806               INTERFACE:  none
      888    13807                                                                                     */

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:111  
      890    13809    1     TYPE_CHECK: PROC ALTRET;

  13809 11 000003   200202 741300       TYPE_CHECK   STX1  ! PROC$+1,,AUTO

      891    13810    2     DCL
      892    13811    2        1  NEW_POSS_TY          ALIGNED,
      893    13812    2           2  K                 BIT(1) UNAL, /* 32 */
      894    13813    2           2  A                 BIT(1) UNAL, /* 16 */
      895    13814    2           2  AN                BIT(1) UNAL, /*  8 */
      896    13815    2           2  ANE               BIT(1) UNAL, /*  4 */
      897    13816    2           2  N                 BIT(1) UNAL, /*  2 */
      898    13817    2           2  NE                BIT(1) UNAL, /*  1 */
      899    13818    2           2  NF                BIT(1) UNAL,
      900    13819    2           2  NFE               BIT(1) UNAL;
      901    13820    2     DCL   POSS_TY#             REDEF NEW_POSS_TY UBIN(6) ALIGNED;
      902    13821    2     DCL   POSS_TY_MASK(0:19)   BIT(8) ALIGNED CONSTANT INIT(
      903    13822    2                                /* %XCR */ '00000100'B,
      904    13823    2                                /* %XDB */ '00000100'B,
      905    13824    2                                /* %XPT */ '00000101'B,
      906    13825    2                                /* %XPL */ '00000101'B,
      907    13826    2                                /* %XMI */ '00000101'B,
      908    13827    2                                /* %X$  */ '00000100'B,
      909    13828    2                                /* %XZ  */ '00000100'B,
      910    13829    2                                /* %XST */ '00000100'B,
      911    13830    2                                /* %XCM */ '00000100'B,
      912    13831    2                                /* %XS  */ '00001010'B,
      913    13832    2                                /* %XP  */ '00001100'B,
      914    13833    2                                /* %XV  */ '00001110'B,
      915    13834    2                                /* %XE  */ '00000011'B,
      916    13835    2                                /* %X0  */ '00010100'B,
      917    13836    2                                /* %XSL */ '00010100'B,
      918    13837    2                                /* %XX  */ '00110000'B,
      919    13838    2                                /* %X9  */ '00111111'B,
      920    13839    2                                /* %XB  */ '00010100'B,
      921    13840    2                                /* %XA  */ '01110000'B,
      922    13841    2                                /* %XN  */ '10000000'B);
      923    13842    2     DCL   POSS_TY_MASK74(0:19) BIT(8) ALIGNED CONSTANT INIT(
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:112  
      924    13843    2                                /* %XCR */ '00000100'B,
      925    13844    2                                /* %XDB */ '00000100'B,
      926    13845    2                                /* %XPT */ '00000101'B,
      927    13846    2                                /* %XPL */ '00000101'B,
      928    13847    2                                /* %XMI */ '00000101'B,
      929    13848    2                                /* %X$  */ '00000100'B,
      930    13849    2                                /* %XZ  */ '00000100'B,
      931    13850    2                                /* %XST */ '00000100'B,
      932    13851    2                                /* %XCM */ '00000100'B,
      933    13852    2                                /* %XS  */ '00001010'B,
      934    13853    2                                /* %XP  */ '00001100'B,
      935    13854    2                                /* %XV  */ '00001110'B,
      936    13855    2                                /* %XE  */ '00000011'B,
      937    13856    2                                /* %X0  */ '00010100'B,
      938    13857    2                                /* %XSL */ '00010100'B,
      939    13858    2                                /* %XX  */ '00110000'B,
      940    13859    2                                /* %X9  */ '00111111'B,
      941    13860    2                                /* %XB  */ '01010100'B, /* Diff for
      942    13861                                                Cobol74 - the second bit is
      943    13862                                                set meaning a "B" char is
      944    13863                                                legal as an alphabetic char */
      945    13864    2                                /* %XA  */ '01110000'B,
      946    13865    2                                /* %XN  */ '10000000'B);

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:113  
      948    13867    2     DCL   TY_ERR(0:8)          UBIN WORD CONSTANT INIT(
      949    13868    2                                   %E$CHAR_IN_WRONG_CONTEXT,
      950    13869    2                                   %E$CHAR_IN_WRONG_CONTEXT,
      951    13870    2                                   %E$CHAR_IN_WRONG_CONTEXT,
      952    13871    2                                   %E$CHAR_IN_WRONG_CONTEXT,
      953    13872    2                                   %E$ILL_CHAR_FOR_ANE_PIC,
      954    13873    2                                   %E$ILL_CHAR_FOR_N_PIC,
      955    13874    2                                   %E$ILL_CHAR_FOR_NE_PIC,
      956    13875    2                                   %E$INVALID_CHAR_IN_EXRAD,
      957    13876    2                                   %E$INVALID_CHAR_IN_EXRAD);
      958    13877    2     DCL   E_NOT_IN_N(0:8)      UBIN WORD CONSTANT INIT(%E$ILL_CHAR_FOR_N_PIC*0);
      959    13878    2     DCL   E_NOT_IN_ANE(0:8)    UBIN WORD CONSTANT INIT(%E$ILL_CHAR_FOR_ANE_PIC*0);
      960    13879    2     DCL   E_ONLY_IN_NE(0:8)    UBIN WORD CONSTANT INIT(%E$CHAR_ONLY_FOR_NE_PIC*0);
      961    13880
      962    13881    2        IF COMCOM.OB.COBOL_74 THEN

  13881 11 000004   000015 234000 xsym               SZN     COMCOM+13
        11 000005   000021 605000 11                 TPL     s:13884

      963    13882    2          NEW_POSS_TY = POSS_TY & POSS_TY_MASK74(CURR_CH);

  13882 11 000006   200147 720100                    LXL0    CURR_CH,,AUTO
        11 000007   000155 236010 9                  LDQ     POSS_TY_MASK74,X0
        11 000010   776000 376003                    ANQ     -1024,DU
        11 000011   200210 756100                    STQ     MOP_N#+2,,AUTO
        11 000012   200167 236100                    LDQ     POSS_TY,,AUTO
        11 000013   776000 376003                    ANQ     -1024,DU
        11 000014   200210 376100                    ANQ     MOP_N#+2,,AUTO
        11 000015   200203 676100                    ERQ     NEW_POSS_TY,,AUTO
        11 000016   776000 376003                    ANQ     -1024,DU
        11 000017   200203 656100                    ERSQ    NEW_POSS_TY,,AUTO
        11 000020   000033 710000 11                 TRA     s:13885

      964    13883    2        ELSE
      965    13884    2          NEW_POSS_TY = POSS_TY & POSS_TY_MASK(CURR_CH);

  13884 11 000021   200147 720100                    LXL0    CURR_CH,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:114  
        11 000022   000131 236010 9                  LDQ     POSS_TY_MASK,X0
        11 000023   776000 376003                    ANQ     -1024,DU
        11 000024   200210 756100                    STQ     MOP_N#+2,,AUTO
        11 000025   200167 236100                    LDQ     POSS_TY,,AUTO
        11 000026   776000 376003                    ANQ     -1024,DU
        11 000027   200210 376100                    ANQ     MOP_N#+2,,AUTO
        11 000030   200203 676100                    ERQ     NEW_POSS_TY,,AUTO
        11 000031   776000 376003                    ANQ     -1024,DU
        11 000032   200203 656100                    ERSQ    NEW_POSS_TY,,AUTO

      966    13885    2        IF NEW_POSS_TY = '0'B THEN

  13885 11 000033   200203 236100                    LDQ     NEW_POSS_TY,,AUTO
        11 000034   776000 316003                    CANQ    -1024,DU
        11 000035   000042 601000 11                 TNZ     s:13904

      967    13886                %ERR(CODE="TY_ERR(TYPE)");

  13889 11 000036   200166 722100                    LXL2    TYPE,,AUTO
        11 000037   000201 235012 9                  LDA     TY_ERR,X2
        11 000040   200144 755100                    STA     STATE,,AUTO

  13891 11 000041   000000 702211                    TSX2  ! 0,X1

      968    13904    2        POSS_TY = NEW_POSS_TY;

  13904 11 000042   200203 236100                    LDQ     NEW_POSS_TY,,AUTO
        11 000043   776000 376003                    ANQ     -1024,DU
        11 000044   200167 756100                    STQ     POSS_TY,,AUTO

      969    13905    3        IF TYPE = 0 THEN DO CASE(POSS_TY#);

  13905 11 000045   200166 235100                    LDA     TYPE,,AUTO
        11 000046   000257 601000 11                 TNZ     s:13965

  13905 11 000047   200203 236100                    LDQ     NEW_POSS_TY,,AUTO
        11 000050   000036 772000                    QRL     30
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:115  
        11 000051   000100 116007                    CMPQ    64,DL
        11 000052   000054 602006 11                 TNC     s:13905+7,QL
        11 000053   000254 710000 11                 TRA     s:13949
        11 000054   000257 710000 11                 TRA     s:13965
        11 000055   000154 710000 11                 TRA     s:13909
        11 000056   000170 710000 11                 TRA     s:13917
        11 000057   000211 710000 11                 TRA     s:13927
        11 000060   000216 710000 11                 TRA     s:13930
        11 000061   000231 710000 11                 TRA     s:13935
        11 000062   000234 710000 11                 TRA     s:13937
        11 000063   000257 710000 11                 TRA     s:13965
        11 000064   000254 710000 11                 TRA     s:13949
        11 000065   000254 710000 11                 TRA     s:13949
        11 000066   000254 710000 11                 TRA     s:13949
        11 000067   000254 710000 11                 TRA     s:13949
        11 000070   000240 710000 11                 TRA     s:13939
        11 000071   000231 710000 11                 TRA     s:13935
        11 000072   000234 710000 11                 TRA     s:13937
        11 000073   000257 710000 11                 TRA     s:13965
        11 000074   000254 710000 11                 TRA     s:13949
        11 000075   000254 710000 11                 TRA     s:13949
        11 000076   000254 710000 11                 TRA     s:13949
        11 000077   000254 710000 11                 TRA     s:13949
        11 000100   000240 710000 11                 TRA     s:13939
        11 000101   000231 710000 11                 TRA     s:13935
        11 000102   000234 710000 11                 TRA     s:13937
        11 000103   000257 710000 11                 TRA     s:13965
        11 000104   000254 710000 11                 TRA     s:13949
        11 000105   000254 710000 11                 TRA     s:13949
        11 000106   000254 710000 11                 TRA     s:13949
        11 000107   000254 710000 11                 TRA     s:13949
        11 000110   000240 710000 11                 TRA     s:13939
        11 000111   000231 710000 11                 TRA     s:13935
        11 000112   000234 710000 11                 TRA     s:13937
        11 000113   000257 710000 11                 TRA     s:13965
        11 000114   000251 710000 11                 TRA     s:13944
        11 000115   000254 710000 11                 TRA     s:13949
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:116  
        11 000116   000254 710000 11                 TRA     s:13949
        11 000117   000254 710000 11                 TRA     s:13949
        11 000120   000254 710000 11                 TRA     s:13949
        11 000121   000254 710000 11                 TRA     s:13949
        11 000122   000254 710000 11                 TRA     s:13949
        11 000123   000254 710000 11                 TRA     s:13949
        11 000124   000254 710000 11                 TRA     s:13949
        11 000125   000254 710000 11                 TRA     s:13949
        11 000126   000254 710000 11                 TRA     s:13949
        11 000127   000254 710000 11                 TRA     s:13949
        11 000130   000254 710000 11                 TRA     s:13949
        11 000131   000254 710000 11                 TRA     s:13949
        11 000132   000254 710000 11                 TRA     s:13949
        11 000133   000254 710000 11                 TRA     s:13949
        11 000134   000254 710000 11                 TRA     s:13949
        11 000135   000254 710000 11                 TRA     s:13949
        11 000136   000254 710000 11                 TRA     s:13949
        11 000137   000254 710000 11                 TRA     s:13949
        11 000140   000254 710000 11                 TRA     s:13949
        11 000141   000254 710000 11                 TRA     s:13949
        11 000142   000254 710000 11                 TRA     s:13949
        11 000143   000254 710000 11                 TRA     s:13949
        11 000144   000254 710000 11                 TRA     s:13949
        11 000145   000254 710000 11                 TRA     s:13949
        11 000146   000254 710000 11                 TRA     s:13949
        11 000147   000254 710000 11                 TRA     s:13949
        11 000150   000254 710000 11                 TRA     s:13949
        11 000151   000254 710000 11                 TRA     s:13949
        11 000152   000254 710000 11                 TRA     s:13949
        11 000153   000257 710000 11                 TRA     s:13965

      970    13906    3         CASE(0,7,15,23,31,63);

      971    13907                   /* DO NOTHING*/
      972    13908    3         CASE(1);

      973    13909    4           IF NOT POSS_TY.NFE THEN DO;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:117  

  13909 11 000154   200167 236100                    LDQ     POSS_TY,,AUTO
        11 000155   002000 316003                    CANQ    1024,DU
        11 000156   000163 601000 11                 TNZ     s:13913

      974    13910    4              TYPE = %PIC_TY_NE;

  13910 11 000157   000006 235007                    LDA     6,DL
        11 000160   200166 755100                    STA     TYPE,,AUTO

      975    13911    4              STATE_TBL(%XE) = %E$ILL_CHAR_FOR_N_PIC;

  13911 11 000161   000724 235007                    LDA     468,DL
        11 000162   200127 755100                    STA     STATE_TBL+12,,AUTO

      976    13912    4              END;

      977    13913    3           STATE_CLASS.N        = %E$ILL_CHAR_FOR_NE_PIC;

  13913 11 000163   000725 235007                    LDA     469,DL
        11 000164   200124 755100                    STA     STATE_TBL+9,,AUTO

      978    13914    3           STATE_CLASS.AN_ANE   = %E$ILL_CHAR_FOR_NE_PIC;

  13914 11 000165   200132 755100                    STA     STATE_TBL+15,,AUTO

      979    13915    3           STATE_CLASS.A_AN_ANE = %E$ILL_CHAR_FOR_NE_PIC;

  13915 11 000166   200135 755100                    STA     STATE_TBL+18,,AUTO
        11 000167   000257 710000 11                 TRA     s:13965

      980    13916    3         CASE(2);

      981    13917    4           IF NOT POSS_TY.NF THEN DO;

  13917 11 000170   200167 236100                    LDQ     POSS_TY,,AUTO
        11 000171   004000 316003                    CANQ    2048,DU
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:118  
        11 000172   000177 601000 11                 TNZ     s:13921

      982    13918    4              TYPE = %PIC_TY_N;

  13918 11 000173   000005 235007                    LDA     5,DL
        11 000174   200166 755100                    STA     TYPE,,AUTO

      983    13919    4              STATE_TBL(%XE) = %E$ILL_CHAR_FOR_N_PIC;

  13919 11 000175   000724 235007                    LDA     468,DL
        11 000176   200127 755100                    STA     STATE_TBL+12,,AUTO

      984    13920    4              END;

      985    13921    3           STATE_CLASS.NE       = E_NOT_IN_N;

  13921 11 000177   000100 100400                    MLR     fill='000'O
        11 000200   000212 000044 9                  ADSC9   E_NOT_IN_N               cn=0,n=36
        11 000201   200113 000044                    ADSC9   STATE_TBL,,AUTO          cn=0,n=36

      986    13922    3           STATE_CLASS.ANE_NE   = E_NOT_IN_N;

  13922 11 000202   000212 237000 9                  LDAQ    E_NOT_IN_N
        11 000203   200130 757100                    STAQ    STATE_TBL+13,,AUTO

      987    13923    3           STATE_CLASS.AN_ANE   = %E$ILL_CHAR_FOR_N_PIC;

  13923 11 000204   000724 235007                    LDA     468,DL
        11 000205   200132 755100                    STA     STATE_TBL+15,,AUTO

      988    13924    3           STATE_CLASS.A_ANE_NE = %E$ILL_CHAR_FOR_N_PIC;

  13924 11 000206   200134 755100                    STA     STATE_TBL+17,,AUTO

      989    13925    3           STATE_CLASS.A_AN_ANE = %E$ILL_CHAR_FOR_N_PIC;

  13925 11 000207   200135 755100                    STA     STATE_TBL+18,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:119  
        11 000210   000257 710000 11                 TRA     s:13965

      990    13926    3         CASE(3);

      991    13927    3           STATE_CLASS.AN_ANE   = %E$CHAR_ONLY_FOR_AN_ANE_PIC;

  13927 11 000211   000727 235007                    LDA     471,DL
        11 000212   200132 755100                    STA     STATE_TBL+15,,AUTO

      992    13928    3           STATE_CLASS.A_AN_ANE = %E$CHAR_ONLY_FOR_ALPHA;

  13928 11 000213   000730 235007                    LDA     472,DL
        11 000214   200135 755100                    STA     STATE_TBL+18,,AUTO
        11 000215   000257 710000 11                 TRA     s:13965

      993    13929    3         CASE(4);

      994    13930    3           TYPE = %PIC_TY_ANE;

  13930 11 000216   000004 235007                    LDA     4,DL
        11 000217   200166 755100                    STA     TYPE,,AUTO

      995    13931    3           STATE_CLASS.NE       = E_NOT_IN_ANE;

  13931 11 000220   000100 100400                    MLR     fill='000'O
        11 000221   000223 000044 9                  ADSC9   E_NOT_IN_ANE             cn=0,n=36
        11 000222   200113 000044                    ADSC9   STATE_TBL,,AUTO          cn=0,n=36

      996    13932    3           STATE_CLASS.N        = %E$ILL_CHAR_FOR_ANE_PIC;

  13932 11 000223   000723 235007                    LDA     467,DL
        11 000224   200124 755100                    STA     STATE_TBL+9,,AUTO

      997    13933    3           STATE_CLASS.N_NE     = E_NOT_IN_ANE;

  13933 11 000225   000100 100400                    MLR     fill='000'O
        11 000226   000223 000010 9                  ADSC9   E_NOT_IN_ANE             cn=0,n=8
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:120  
        11 000227   200125 000010                    ADSC9   STATE_TBL+10,,AUTO       cn=0,n=8
        11 000230   000257 710000 11                 TRA     s:13965

      998    13934    3         CASE(5,13,21,29);

      999    13935    3           STATE_CLASS.N        = %E$CHAR_ONLY_FOR_N_PIC;

  13935 11 000231   000731 235007                    LDA     473,DL
        11 000232   200124 755100                    STA     STATE_TBL+9,,AUTO
        11 000233   000257 710000 11                 TRA     s:13965

     1000    13936    3         CASE(6,14,22,30);

     1001    13937    3           STATE_CLASS.NE       = E_ONLY_IN_NE;

  13937 11 000234   000100 100400                    MLR     fill='000'O
        11 000235   000234 000044 9                  ADSC9   E_ONLY_IN_NE             cn=0,n=36
        11 000236   200113 000044                    ADSC9   STATE_TBL,,AUTO          cn=0,n=36
        11 000237   000257 710000 11                 TRA     s:13965

     1002    13938    3         CASE(12,20,28);

     1003    13939    3           STATE_CLASS.NE       = E_ONLY_IN_NE;

  13939 11 000240   000100 100400                    MLR     fill='000'O
        11 000241   000234 000044 9                  ADSC9   E_ONLY_IN_NE             cn=0,n=36
        11 000242   200113 000044                    ADSC9   STATE_TBL,,AUTO          cn=0,n=36

     1004    13940    3           STATE_CLASS.N        = %E$CHAR_ONLY_FOR_N_PIC;

  13940 11 000243   000731 235007                    LDA     473,DL
        11 000244   200124 755100                    STA     STATE_TBL+9,,AUTO

     1005    13941    3           STATE_CLASS.N_NE(0)  = %E$CHAR_ONLY_FOR_N_NE_PIC;

  13941 11 000245   000732 235007                    LDA     474,DL
        11 000246   200125 755100                    STA     STATE_TBL+10,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:121  

     1006    13942    3           STATE_CLASS.N_NE(1)  = %E$CHAR_ONLY_FOR_N_NE_PIC;

  13942 11 000247   200126 755100                    STA     STATE_TBL+11,,AUTO
        11 000250   000257 710000 11                 TRA     s:13965

     1007    13943    3         CASE(32); /* KANJI -- PIC N */

     1008    13944    3           TYPE = %PIC_TY_K;

  13944 11 000251   000001 235007                    LDA     1,DL
        11 000252   200166 755100                    STA     TYPE,,AUTO
        11 000253   000257 710000 11                 TRA     s:13965

     1009    13945    3         CASE(ELSE);

     1010    13946                %ERR(CODE=%E$BAD_PIC_TYPE);

  13949 11 000254   001624 235007                    LDA     916,DL
        11 000255   200144 755100                    STA     STATE,,AUTO

  13951 11 000256   000000 702211                    TSX2  ! 0,X1

     1011    13964    3         END; /*DO CASE*/

     1012    13965    2      END; /*TYPE_CHECK*/

  13965 11 000257   000001 702211                    TSX2  ! 1,X1


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:122  
     1014    13967        /*I*        NAME:  N#_MOP
     1015    13968                 PURPOSE:  This procedure generates a suitable number of move
     1016    13969                           type micro-operations to move the requested number
     1017    13970                           of source characters.
     1018    13971                    CALL:  CALL N#_MOP ALTRET(ERR_ROUTINE);
     1019    13972             DESCRIPTION:  The micro operation to be done is in MOP_OP, and
     1020    13973                           the count of the number of source characters is in
     1021    13974                           CNT.  In addition, LAST_MOP_L, LAST_MOP_OP, and
     1022    13975                           LAST_MOP_N indicate the position, operation code,
     1023    13976                           and count used in the last MOP generated by this
     1024    13977                           procedure.  If LAST_MOP_L = MOP_L and LAST_MOP_OP
     1025    13978                           = MOP_OP,  then the new count can simply be added
     1026    13979                           into the last count.  For this reason, a picture
     1027    13980                           such as "X(3)9(6)X(3)" produces one MVC(12) MOP.
     1028    13981                  INPUTS:  MOP_OP
     1029    13982                           CNT
     1030    13983                           MOP_L
     1031    13984                           LAST_MOP_L
     1032    13985                           LAST_MOP_OP
     1033    13986                           LAST_MOP_N
     1034    13987                           MOP_L_MAX
     1035    13988                 OUTPUTS:  MOP_L
     1036    13989                           LAST_MOP_L
     1037    13990                           LAST_MOP_OP
     1038    13991                           LAST_MOP_N
     1039    13992                           PIC_OUT.MOPSTR
     1040    13993               INTERFACE:  none
     1041    13994                                                                                     */

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:123  
     1043    13996    1     N#_MOP: PROC ALTRET;

  13996 11 000260   200204 741300       N#_MOP       STX1  ! NEW_POSS_TY+1,,AUTO

     1044    13997    2     DCL   N                    UBIN;
     1045    13998    2     DCL
     1046    13999    2        1  MOP_N#               ALIGNED,
     1047    14000    2           2  OP                UBIN(5) UNAL,
     1048    14001    2           2  N                 UBIN(4) UNAL;
     1049    14002
     1050    14003    2        MOP_N# = '0'B;

  14003 11 000261   200206 450100                    STZ     MOP_N#,,AUTO

     1051    14004    2        MOP_N#.OP = MOP_OP;

  14004 11 000262   200173 236100                    LDQ     MOP_OP,,AUTO
        11 000263   000037 736000                    QLS     31
        11 000264   200206 676100                    ERQ     MOP_N#,,AUTO
        11 000265   760000 376003                    ANQ     -8192,DU
        11 000266   200206 656100                    ERSQ    MOP_N#,,AUTO

     1052    14005    2        N = CNT;

  14005 11 000267   200111 235100                    LDA     CNT,,AUTO
        11 000270   200205 755100                    STA     N,,AUTO

     1053    14006    3        IF LAST_MOP_L = MOP_L AND LAST_MOP_OP = MOP_OP THEN DO;

  14006 11 000271   200177 236100                    LDQ     LAST_MOP_L,,AUTO
        11 000272   200146 116100                    CMPQ    MOP_L,,AUTO
        11 000273   000305 601000 11                 TNZ     s:14010
        11 000274   200176 236100                    LDQ     LAST_MOP_OP,,AUTO
        11 000275   200173 116100                    CMPQ    MOP_OP,,AUTO
        11 000276   000305 601000 11                 TNZ     s:14010

     1054    14007    3           MOP_L = MOP_L - 1;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:124  

  14007 11 000277   200146 235100                    LDA     MOP_L,,AUTO
        11 000300   000001 135007                    SBLA    1,DL
        11 000301   200146 755100                    STA     MOP_L,,AUTO

     1055    14008    3           N = N + LAST_MOP_N;

  14008 11 000302   200205 236100                    LDQ     N,,AUTO
        11 000303   200200 036100                    ADLQ    LAST_MOP_N,,AUTO
        11 000304   200205 756100                    STQ     N,,AUTO

     1056    14009    3           END;

     1057    14010    3        DO WHILE(N>16);

  14010 11 000305   200205 235100                    LDA     N,,AUTO
        11 000306   000021 115007                    CMPA    17,DL
        11 000307   000332 602000 11                 TNC     s:14022

     1058    14011    3           IF MOP_L >= MOP_L_MAX THEN

  14011 11 000310   200146 236100                    LDQ     MOP_L,,AUTO
        11 000311   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 000312   000317 602000 11                 TNC     s:14018

     1059    14012    4              DO ;

     1060    14013                     /* Added to accompany mops > 63 - 2/25/82 */
     1061    14014    4                MOP_L = 0 ;

  14014 11 000313   200146 450100                    STZ     MOP_L,,AUTO

     1062    14015    4                MOP_L_MAX = 0 ;

  14015 11 000314   200145 450100                    STZ     MOP_L_MAX,,AUTO

     1063    14016    4                RETURN ;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:125  

  14016 11 000315   200204 221300                    LDX1  ! NEW_POSS_TY+1,,AUTO
        11 000316   000001 702211                    TSX2  ! 1,X1

     1064    14017    4              END ;
     1065    14018    3           PIC_OUT.MOP(MOP_L) = MOP_N#;

  14018 11 000317   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 000320   000106 100500                    MLR     fill='000'O
        11 000321   200206 000001                    ADSC9   MOP_N#,,AUTO             cn=0,n=1
        11 000322   000006 000001                    ADSC9   6,Q,PR0                  cn=0,n=1

     1066    14019    3           N = N - 16;

  14019 11 000323   200205 235100                    LDA     N,,AUTO
        11 000324   000020 135007                    SBLA    16,DL
        11 000325   200205 755100                    STA     N,,AUTO

     1067    14020    3           MOP_L = MOP_L + 1;

  14020 11 000326   000001 036007                    ADLQ    1,DL
        11 000327   200146 756100                    STQ     MOP_L,,AUTO

     1068    14021    3           END;

  14021 11 000330   000021 115007                    CMPA    17,DL
        11 000331   000310 603000 11                 TRC     s:14011

     1069    14022    3        IF N ~= 0 THEN DO;

  14022 11 000332   000000 115003                    CMPA    0,DU
        11 000333   000365 600000 11                 TZE     s:14038

     1070    14023    3           IF MOP_L >= MOP_L_MAX THEN

  14023 11 000334   200146 236100                    LDQ     MOP_L,,AUTO
        11 000335   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:126  
        11 000336   000343 602000 11                 TNC     s:14030

     1071    14024    4              DO ;

     1072    14025                     /* Added to accompany mops > 63 - 2/25/82 */
     1073    14026    4                MOP_L = 0 ;

  14026 11 000337   200146 450100                    STZ     MOP_L,,AUTO

     1074    14027    4                MOP_L_MAX = 0 ;

  14027 11 000340   200145 450100                    STZ     MOP_L_MAX,,AUTO

     1075    14028    4                RETURN ;

  14028 11 000341   200204 221300                    LDX1  ! NEW_POSS_TY+1,,AUTO
        11 000342   000001 702211                    TSX2  ! 1,X1

     1076    14029    4              END ;
     1077    14030    3           MOP_N#.N = N;

  14030 11 000343   200205 236100                    LDQ     N,,AUTO
        11 000344   000033 736000                    QLS     27
        11 000345   200206 676100                    ERQ     MOP_N#,,AUTO
        11 000346   017000 376003                    ANQ     7680,DU
        11 000347   200206 656100                    ERSQ    MOP_N#,,AUTO

     1078    14031    3           PIC_OUT.MOP(MOP_L) = MOP_N#;

  14031 11 000350   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 000351   200146 236100                    LDQ     MOP_L,,AUTO
        11 000352   000106 100500                    MLR     fill='000'O
        11 000353   200206 000001                    ADSC9   MOP_N#,,AUTO             cn=0,n=1
        11 000354   000006 000001                    ADSC9   6,Q,PR0                  cn=0,n=1

     1079    14032    3           MOP_L = MOP_L + 1;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:127  
  14032 11 000355   000001 036007                    ADLQ    1,DL
        11 000356   200146 756100                    STQ     MOP_L,,AUTO

     1080    14033    3           LAST_MOP_L = MOP_L;

  14033 11 000357   200177 756100                    STQ     LAST_MOP_L,,AUTO

     1081    14034    3           LAST_MOP_OP = MOP_OP;

  14034 11 000360   200173 235100                    LDA     MOP_OP,,AUTO
        11 000361   200176 755100                    STA     LAST_MOP_OP,,AUTO

     1082    14035    3           LAST_MOP_N = N;

  14035 11 000362   200205 235100                    LDA     N,,AUTO
        11 000363   200200 755100                    STA     LAST_MOP_N,,AUTO

     1083    14036    3           END;

  14036 11 000364   000367 710000 11                 TRA     s:14039

     1084    14037    2        ELSE
     1085    14038    2           LAST_MOP_OP = %NO_LAST_OP;

  14038 11 000365   000100 236007                    LDQ     64,DL
        11 000366   200176 756100                    STQ     LAST_MOP_OP,,AUTO

     1086    14039    2      END; /*N#_MOP*/

  14039 11 000367   200204 221300                    LDX1  ! NEW_POSS_TY+1,,AUTO
        11 000370   000001 702211                    TSX2  ! 1,X1


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:128  
     1088    14041        /*I*        NAME:  SUP_INSERTION
     1089    14042                 PURPOSE:  This procedure generates an insertion character
     1090    14043                           while in suppression mode.
     1091    14044                    CALL:  CALL SUP_INSERTION ALTRET(ERR_ROUTINE);
     1092    14045               INTERFACE:  none
     1093    14046             DESCRIPTION:  This procedure generates an insertion character
     1094    14047                           while in suppression mode.  Either an INSA or
     1095    14048                           INSB mop operation is used depending on the value
     1096    14049                           of SUP
     1097    14050                   INPUT:  SUP, SUP_INS_MOP, CNT
     1098    14051                  OUTPUT:  "CNT" INSA or INSB mops as appropriate
     1099    14052                 SCRATCH:  I
     1100    14053                                                                                     */
     1101    14054    1     SUP_INSERTION: PROC ALTRET;

  14054 11 000371   200202 741300       SUP_INSERTI* STX1  ! PROC$+1,,AUTO

     1102    14055    2        IF MOP_L + CNT >= MOP_L_MAX THEN

  14055 11 000372   200146 236100                    LDQ     MOP_L,,AUTO
        11 000373   200111 036100                    ADLQ    CNT,,AUTO
        11 000374   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 000375   000401 602000 11                 TNC     s:14062

     1103    14056    3              DO ;

     1104    14057                     /* Added to accompany mops > 63 - 2/25/82 */
     1105    14058    3                MOP_L = 0 ;

  14058 11 000376   200146 450100                    STZ     MOP_L,,AUTO

     1106    14059    3                MOP_L_MAX = 0 ;

  14059 11 000377   200145 450100                    STZ     MOP_L_MAX,,AUTO

     1107    14060    3                RETURN ;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:129  
  14060 11 000400   000001 702211                    TSX2  ! 1,X1

     1108    14061    3              END ;
     1109    14062    2        IF SUP = %XST THEN

  14062 11 000401   200164 235100                    LDA     SUP,,AUTO
        11 000402   000007 115007                    CMPA    7,DL
        11 000403   000411 601000 11                 TNZ     s:14068

     1110    14063                %ASSIGN_OP(VAR=SUP_INS_MOP.OP,OP=INSA);

  14064 11 000404   200174 236100                    LDQ     SUP_INS_MOP,,AUTO
        11 000405   000000 376000 12                 ANQ     0
        11 000406   220000 276003                    ORQ     73728,DU
        11 000407   200174 756100                    STQ     SUP_INS_MOP,,AUTO
        11 000410   000415 710000 11                 TRA     s:14070

     1111    14066    2        ELSE
     1112    14067                %ASSIGN_OP(VAR=SUP_INS_MOP.OP,OP=INSB);

  14068 11 000411   200174 236100                    LDQ     SUP_INS_MOP,,AUTO
        11 000412   000000 376000 12                 ANQ     0
        11 000413   200000 276003                    ORQ     65536,DU
        11 000414   200174 756100                    STQ     SUP_INS_MOP,,AUTO

     1113    14070    3        DO I = 0 TO CNT-1;

  14070 11 000415   200152 450100                    STZ     I,,AUTO
        11 000416   000431 710000 11                 TRA     s:14073+3

     1114    14071    3           PIC_OUT.MOP(MOP_L) = SUP_INS_MOP;

  14071 11 000417   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 000420   200146 235100                    LDA     MOP_L,,AUTO
        11 000421   000105 100500                    MLR     fill='000'O
        11 000422   200174 000001                    ADSC9   SUP_INS_MOP,,AUTO        cn=0,n=1
        11 000423   000006 000001                    ADSC9   6,A,PR0                  cn=0,n=1
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:130  

     1115    14072    3           MOP_L = MOP_L + 1;

  14072 11 000424   000001 035007                    ADLA    1,DL
        11 000425   200146 755100                    STA     MOP_L,,AUTO

     1116    14073    3           END;

  14073 11 000426   200152 236100                    LDQ     I,,AUTO
        11 000427   000001 036007                    ADLQ    1,DL
        11 000430   200152 756100                    STQ     I,,AUTO
        11 000431   200152 236100                    LDQ     I,,AUTO
        11 000432   200111 116100                    CMPQ    CNT,,AUTO
        11 000433   000417 602000 11                 TNC     s:14071

     1117    14074    2      END;

  14074 11 000434   200202 221300                    LDX1  ! PROC$+1,,AUTO
        11 000435   000001 702211                    TSX2  ! 1,X1


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:131  
     1119    14076        /*I*        NAME:  SUP_START
     1120    14077                 PURPOSE:  This procedure begins suppression mode.
     1121    14078                    CALL:  CALL SUP_START ALTRET(ERR_ROUTINE);
     1122    14079               INTERFACE:  %ASSIGN_MOP
     1123    14080             DESCRIPTION:  This procedure begins suppression mode.  In this
     1124    14081                           mode leading zeros are replaced by blanks or
     1125    14082                           asterisks as appropriate.  Depending on the
     1126    14083                           value of CURR_CH the procedure ensures that TBL_1
     1127    14084                           or TBL_2 (blank and * respectively) have the proper
     1128    14085                           default value.  If suppression is on (ES_ON), it is
     1129    14086                           turned off.  Any of the above conditions may have
     1130    14087                           occurred while emitting a large number of insertion
     1131    14088                           characters prior to beginning suppression.
     1132    14089                   INPUT:  CURR_CH, TBL_1, TBL_2, ES_ON
     1133    14090                  OUTPUT:  STATE_TBL[ $, Z, *, 9, comma, 0, /]
     1134    14091                           Possibly some mops as detailed above.
     1135    14092                 SCRATCH:  ES_ON, TBL_1, TBL_2
     1136    14093                                                                                     */
     1137    14094    1     SUP_START: PROC ALTRET;

  14094 11 000436   200202 741300       SUP_START    STX1  ! PROC$+1,,AUTO

     1138    14095    3        IF MOP_L_MAX ~= 0 THEN DO;

  14095 11 000437   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 000440   000572 600000 11                 TZE     s:14501

     1139    14096    3           IF CURR_CH ~= %XST AND TBL_1 ~= ASCBIN(' ') THEN

  14096 11 000441   200147 236100                    LDQ     CURR_CH,,AUTO
        11 000442   000007 116007                    CMPQ    7,DL
        11 000443   000470 600000 11                 TZE     s:14197
        11 000444   200170 235100                    LDA     TBL_1,,AUTO
        11 000445   000040 115007                    CMPA    32,DL
        11 000446   000470 600000 11                 TZE     s:14197

     1140    14097                   %ASSIGN_MOP(OP1=LTE,TBL1=B,CH1=' ');
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:132  

  14148 11 000447   200146 235100                    LDA     MOP_L,,AUTO
        11 000450   000002 035007                    ADLA    2,DL
        11 000451   200146 755100                    STA     MOP_L,,AUTO

  14149 11 000452   200146 236100                    LDQ     MOP_L,,AUTO
        11 000453   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 000454   000460 602000 11                 TNC     s:14156

  14152 11 000455   200146 450100                    STZ     MOP_L,,AUTO

  14153 11 000456   200145 450100                    STZ     MOP_L_MAX,,AUTO

  14154 11 000457   000001 702211                    TSX2  ! 1,X1

  14156 11 000460   000000 116003                    CMPQ    0,DU
        11 000461   000470 600000 11                 TZE     s:14197

  14174 11 000462   000040 235007                    LDA     32,DL
        11 000463   200170 755100                    STA     TBL_1,,AUTO

  14189 11 000464   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 000465   040106 100400                    MLR     fill='040'O
        11 000466   000252 000002 9                  ADSC9   SUP_MOVE_OPS+5           cn=0,n=2
        11 000467   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1141    14197    3           IF CURR_CH = %XST AND TBL_2 ~= ASCBIN('*') THEN

  14197 11 000470   200147 235100                    LDA     CURR_CH,,AUTO
        11 000471   000007 115007                    CMPA    7,DL
        11 000472   000520 601000 11                 TNZ     s:14298
        11 000473   200171 236100                    LDQ     TBL_2,,AUTO
        11 000474   000052 116007                    CMPQ    42,DL
        11 000475   000520 600000 11                 TZE     s:14298

     1142    14198                   %ASSIGN_MOP(OP1=LTE,TBL1=ST,CH1='*');

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:133  
  14249 11 000476   200146 235100                    LDA     MOP_L,,AUTO
        11 000477   000002 035007                    ADLA    2,DL
        11 000500   200146 755100                    STA     MOP_L,,AUTO

  14250 11 000501   200146 236100                    LDQ     MOP_L,,AUTO
        11 000502   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 000503   000510 602000 11                 TNC     s:14257

  14253 11 000504   200146 450100                    STZ     MOP_L,,AUTO

  14254 11 000505   200145 450100                    STZ     MOP_L_MAX,,AUTO

  14255 11 000506   200202 221300                    LDX1  ! PROC$+1,,AUTO
        11 000507   000001 702211                    TSX2  ! 1,X1

  14257 11 000510   000000 116003                    CMPQ    0,DU
        11 000511   000520 600000 11                 TZE     s:14298

  14277 11 000512   000052 235007                    LDA     42,DL
        11 000513   200171 755100                    STA     TBL_2,,AUTO

  14290 11 000514   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 000515   040106 100400                    MLR     fill='040'O
        11 000516   000253 000002 9                  ADSC9   SUP_MOVE_OPS+6           cn=0,n=2
        11 000517   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1143    14298    3           IF CURR_CH = %XMI THEN

  14298 11 000520   200147 235100                    LDA     CURR_CH,,AUTO
        11 000521   000004 115007                    CMPA    4,DL
        11 000522   000542 601000 11                 TNZ     s:14399

     1144    14299                   %ASSIGN_MOP(OP1=LTE,TBL1=PL,CH1=' ');

  14350 11 000523   200146 236100                    LDQ     MOP_L,,AUTO
        11 000524   000002 036007                    ADLQ    2,DL
        11 000525   200146 756100                    STQ     MOP_L,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:134  

  14351 11 000526   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 000527   000534 602000 11                 TNC     s:14358

  14354 11 000530   200146 450100                    STZ     MOP_L,,AUTO

  14355 11 000531   200145 450100                    STZ     MOP_L_MAX,,AUTO

  14356 11 000532   200202 221300                    LDX1  ! PROC$+1,,AUTO
        11 000533   000001 702211                    TSX2  ! 1,X1

  14358 11 000534   000000 116003                    CMPQ    0,DU
        11 000535   000542 600000 11                 TZE     s:14399

  14391 11 000536   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 000537   040106 100400                    MLR     fill='040'O
        11 000540   000254 000002 9                  ADSC9   SUP_MOVE_OPS+7           cn=0,n=2
        11 000541   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1145    14399    3           IF ES_ON THEN

  14399 11 000542   200162 234100                    SZN     ES_ON,,AUTO
        11 000543   000572 605000 11                 TPL     s:14501

     1146    14400                   %ASSIGN_MOP(OP1=SES,ES1=OFF);

  14451 11 000544   200146 236100                    LDQ     MOP_L,,AUTO
        11 000545   000001 036007                    ADLQ    1,DL
        11 000546   200146 756100                    STQ     MOP_L,,AUTO

  14452 11 000547   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 000550   000555 602000 11                 TNC     s:14459

  14455 11 000551   200146 450100                    STZ     MOP_L,,AUTO

  14456 11 000552   200145 450100                    STZ     MOP_L_MAX,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:135  
  14457 11 000553   200202 221300                    LDX1  ! PROC$+1,,AUTO
        11 000554   000001 702211                    TSX2  ! 1,X1

  14459 11 000555   000000 116003                    CMPQ    0,DU
        11 000556   000572 600000 11                 TZE     s:14501

  14463 11 000557   200162 450100                    STZ     ES_ON,,AUTO

  14467 11 000560   200165 235100                    LDA     BZ_MOP,,AUTO
        11 000561   000001 115000 12                 CMPA    1
        11 000562   000565 601000 11                 TNZ     s:14492

  14467 11 000563   000001 136007                    SBLQ    1,DL
        11 000564   200165 756100                    STQ     BZ_MOP,,AUTO

  14492 11 000565   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 000566   200146 235100                    LDA     MOP_L,,AUTO
        11 000567   040105 100400                    MLR     fill='040'O
        11 000570   000002 000001 12                 ADSC9   2                        cn=0,n=1
        11 000571   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

     1147    14500    3           END;

     1148    14501    2        STATE_TBL(%X$)  = %E$ONLY_ONE_SUPPRESS_TYPE;

  14501 11 000572   000715 235007                    LDA     461,DL
        11 000573   200120 755100                    STA     STATE_TBL+5,,AUTO

     1149    14502    2        STATE_TBL(%XZ)  = %E$ONLY_ONE_SUPPRESS_TYPE;

  14502 11 000574   200121 755100                    STA     STATE_TBL+6,,AUTO

     1150    14503    2        STATE_TBL(%XST) = %E$ONLY_ONE_SUPPRESS_TYPE;

  14503 11 000575   200122 755100                    STA     STATE_TBL+7,,AUTO

     1151    14504    2        STATE_TBL(%X9)  = %_LT_9;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:136  

  14504 11 000576   000027 236007                    LDQ     23,DL
        11 000577   200133 756100                    STQ     STATE_TBL+16,,AUTO

     1152    14505    2        STATE_TBL(%XCM) = %_SU_CM;

  14505 11 000600   000012 235007                    LDA     10,DL
        11 000601   200123 755100                    STA     STATE_TBL+8,,AUTO

     1153    14506    2        STATE_TBL(%X0)  = %_SU_0;

  14506 11 000602   000013 235007                    LDA     11,DL
        11 000603   200130 755100                    STA     STATE_TBL+13,,AUTO

     1154    14507    2        STATE_TBL(%XSL) = %_SU_SL;

  14507 11 000604   000014 235007                    LDA     12,DL
        11 000605   200131 755100                    STA     STATE_TBL+14,,AUTO

     1155    14508    2      END;

  14508 11 000606   200202 221300                    LDX1  ! PROC$+1,,AUTO
        11 000607   000001 702211                    TSX2  ! 1,X1

     1156    14509        /*I*        NAME:  SUP_MOVE
     1157    14510                 PURPOSE:  This procedure generates mops to move digits in
     1158    14511                           suppression mode.
     1159    14512                    CALL:  CALL SUP_MOVE ALTRET(ERR_ROUTINE);
     1160    14513               INTERFACE:  N#_MOP
     1161    14514             DESCRIPTION:  This procedure generates mops to move digits in
     1162    14515                           suppression mode.  Depending on the value of
     1163    14516                           CURR_CH the correct mop-op is selected and
     1164    14517                           N#_MOP is called to do the actual generation.
     1165    14518                   INPUT:  CURR_CH, CNT
     1166    14519                  OUTPUT:  Generate mops (via N#_MOP)
     1167    14520                 SCRATCH:  DIGITS, TDIGITS, WIDTH
     1168    14521                                                                                     */
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:137  
     1169    14522    1     SUP_MOVE: PROC ALTRET;

  14522 11 000610   200202 741300       SUP_MOVE     STX1  ! PROC$+1,,AUTO

     1170    14523    2     DCL   SUP_MOVE_OPS(0:4)    UBIN CONSTANT INIT(
     1171    14524    2                                   /* +  MFLS */  6,
     1172    14525    2                                   /* -  MFLS */  6,
     1173    14526    2                                   /* $  MFLC */  7,
     1174    14527    2                                   /* Z  MVZB */  4,
     1175    14528    2                                   /* *  MVZA */  5);
     1177    14530          /* %EQU SUP_MOVE_OPS_BASE = XPL; */
     1178    14531    2        DIGITS = DIGITS + CNT;

  14531 11 000611   200155 236100                    LDQ     DIGITS,,AUTO
        11 000612   200111 036100                    ADLQ    CNT,,AUTO
        11 000613   200155 756100                    STQ     DIGITS,,AUTO

     1179    14532    2        TDIGITS = TDIGITS + CNT;

  14532 11 000614   200156 236100                    LDQ     TDIGITS,,AUTO
        11 000615   200111 036100                    ADLQ    CNT,,AUTO
        11 000616   200156 756100                    STQ     TDIGITS,,AUTO

     1180    14533    2        WIDTH = WIDTH + CNT;

  14533 11 000617   200157 236100                    LDQ     WIDTH,,AUTO
        11 000620   200111 036100                    ADLQ    CNT,,AUTO
        11 000621   200157 756100                    STQ     WIDTH,,AUTO

     1181    14534    3        IF MOP_L_MAX ~= 0 THEN DO;

  14534 11 000622   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 000623   000631 600000 11                 TZE     s:14538

     1182    14535    3           MOP_OP = SUP_MOVE_OPS(CURR_CH-%SUP_MOVE_OPS_BASE);

  14535 11 000624   200147 720100                    LXL0    CURR_CH,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:138  
        11 000625   000242 235010 9                  LDA     E_ONLY_IN_NE+6,X0
        11 000626   200173 755100                    STA     MOP_OP,,AUTO

     1183    14536    3           CALL N#_MOP ALTRET(SUP_MOVE_ERR);

  14536 11 000627   000260 701000 11                 TSX1    N#_MOP
        11 000630   000633 702000 11                 TSX2    SUP_MOVE_ERR

     1184    14537    3           END;

     1185    14538    2        RETURN;

  14538 11 000631   200202 221300                    LDX1  ! PROC$+1,,AUTO
        11 000632   000001 702211                    TSX2  ! 1,X1

  14534 11 000633                       SUP_MOVE_ERR null
     1186    14539    2   SUP_MOVE_ERR: ;
     1187    14540    2        ALTRETURN;

  14540 11 000633   200202 221300                    LDX1  ! PROC$+1,,AUTO
        11 000634   000000 702211                    TSX2  ! 0,X1

     1188    14541    2      END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:139  
     1190    14543        /*I*        NAME:  TEST_ENF
     1191    14544                 PURPOSE:  This procedure checks to see if floating suppression
     1192    14545                           should be ended. If it does, it does it.
     1193    14546                    CALL:  CALL TEST_ENF ALTRET(ERR_ROUTINE);
     1194    14547               INTERFACE:  %ASSIGN_MOP
     1195    14548             DESCRIPTION:  This procedure checks ENF_NEEDED to see if an
     1196    14549                           ENF (end floating suppression) mop is needed.
     1197    14550                           If one is needed, it supplies the appropriate
     1198    14551                           kind and turns off ENF_NEEDED.
     1199    14552                   INPUT:  SUP
     1200    14553                  OUTPUT:  An END mov (possibly)
     1201    14554                 SCRATCH:  ENF_NEEDED, WIDTH
     1202    14555                                                                                     */
     1203    14556    1     TEST_ENF: PROC ALTRET;

  14556 11 000635   200202 741300       TEST_ENF     STX1  ! PROC$+1,,AUTO

     1204    14557    3        IF ENF_NEEDED THEN DO;

  14557 11 000636   200163 234100                    SZN     ENF_NEEDED,,AUTO
        11 000637   000730 605000 11                 TPL     s:14764

     1205    14558    3           ENF_NEEDED = '0'B;

  14558 11 000640   200163 450100                    STZ     ENF_NEEDED,,AUTO

     1206    14559    3           WIDTH = WIDTH + 1;

  14559 11 000641   200157 054100                    AOS     WIDTH,,AUTO

     1207    14560    3           IF MOP_L_MAX ~= 0 THEN

  14560 11 000642   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 000643   000730 600000 11                 TZE     s:14764

     1208    14561    3              IF SUP = %X$ THEN

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:140  
  14561 11 000644   200164 236100                    LDQ     SUP,,AUTO
        11 000645   000005 116007                    CMPQ    5,DL
        11 000646   000700 601000 11                 TNZ     s:14714

     1209    14562                      %ASSIGN_MOP(OP1=ENF,SUP1=CS);

  14613 11 000647   200146 235100                    LDA     MOP_L,,AUTO
        11 000650   000001 035007                    ADLA    1,DL
        11 000651   200146 755100                    STA     MOP_L,,AUTO

  14614 11 000652   200146 236100                    LDQ     MOP_L,,AUTO
        11 000653   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 000654   000660 602000 11                 TNC     s:14621

  14617 11 000655   200146 450100                    STZ     MOP_L,,AUTO

  14618 11 000656   200145 450100                    STZ     MOP_L_MAX,,AUTO

  14619 11 000657   000001 702211                    TSX2  ! 1,X1

  14621 11 000660   000000 116003                    CMPQ    0,DU
        11 000661   000730 600000 11                 TZE     s:14764

  14627 11 000662   400000 236003                    LDQ     -131072,DU
        11 000663   200162 756100                    STQ     ES_ON,,AUTO

  14629 11 000664   200165 235100                    LDA     BZ_MOP,,AUTO
        11 000665   000001 115000 12                 CMPA    1
        11 000666   000672 601000 11                 TNZ     s:14654

  14629 11 000667   200146 235100                    LDA     MOP_L,,AUTO
        11 000670   000001 135007                    SBLA    1,DL
        11 000671   200165 755100                    STA     BZ_MOP,,AUTO

  14654 11 000672   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 000673   200146 235100                    LDA     MOP_L,,AUTO
        11 000674   040105 100400                    MLR     fill='040'O
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:141  
        11 000675   000003 000001 12                 ADSC9   3                        cn=0,n=1
        11 000676   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

  14660 11 000677   000730 710000 11                 TRA     s:14764

     1210    14662    3              ELSE
     1211    14663                      %ASSIGN_MOP(OP1=ENF,SUP1=SN);

  14714 11 000700   200146 235100                    LDA     MOP_L,,AUTO
        11 000701   000001 035007                    ADLA    1,DL
        11 000702   200146 755100                    STA     MOP_L,,AUTO

  14715 11 000703   200146 236100                    LDQ     MOP_L,,AUTO
        11 000704   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 000705   000711 602000 11                 TNC     s:14722

  14718 11 000706   200146 450100                    STZ     MOP_L,,AUTO

  14719 11 000707   200145 450100                    STZ     MOP_L_MAX,,AUTO

  14720 11 000710   000001 702211                    TSX2  ! 1,X1

  14722 11 000711   000000 116003                    CMPQ    0,DU
        11 000712   000730 600000 11                 TZE     s:14764

  14728 11 000713   400000 236003                    LDQ     -131072,DU
        11 000714   200162 756100                    STQ     ES_ON,,AUTO

  14730 11 000715   200165 235100                    LDA     BZ_MOP,,AUTO
        11 000716   000001 115000 12                 CMPA    1
        11 000717   000723 601000 11                 TNZ     s:14755

  14730 11 000720   200146 235100                    LDA     MOP_L,,AUTO
        11 000721   000001 135007                    SBLA    1,DL
        11 000722   200165 755100                    STA     BZ_MOP,,AUTO

  14755 11 000723   200005 470500                    LDP0    @PIC_OUT,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:142  
        11 000724   200146 235100                    LDA     MOP_L,,AUTO
        11 000725   040105 100400                    MLR     fill='040'O
        11 000726   000004 000001 12                 ADSC9   4                        cn=0,n=1
        11 000727   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

     1212    14763    3           END;

     1213    14764    2      END;

  14764 11 000730   200202 221300                    LDX1  ! PROC$+1,,AUTO
        11 000731   000001 702211                    TSX2  ! 1,X1


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:143  
     1215    14766        /*I*        NAME:  EMIT_PM$
     1216    14767                 PURPOSE:  This procedure emits a single leading +, -, or $.
     1217    14768                    CALL:  CALL EMIT_PM$ ALTRET(ERR_ROUTINE);
     1218    14769               INTERFACE:  %ASSIGN_MOP
     1219    14770             DESCRIPTION:  This procedure emits a single leading +, - or $.
     1220    14771                   INPUT:  CURR_CH
     1221    14772                  OUTPUT:  An appropriate mop
     1222    14773                 SCRATCH:  WIDTH
     1223    14774                                                                                     */
     1224    14775    1     EMIT_PM$: PROC ALTRET;

  14775 11 000732   200202 741300       EMIT_PM$     STX1  ! PROC$+1,,AUTO

     1226    14777          /* %EQU EMIT_PM$_BASE = XPL; */
     1227    14778    2        WIDTH = WIDTH + 1;

  14778 11 000733   200157 054100                    AOS     WIDTH,,AUTO

     1228    14779    3        IF MOP_L_MAX ~= 0 THEN DO CASE(CURR_CH - %EMIT_PM$_BASE);

  14779 11 000734   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 000735   001047 600000 11                 TZE     s:15084

  14779 11 000736   200147 236100                    LDQ     CURR_CH,,AUTO
        11 000737   000003 136007                    SBLQ    3,DL
        11 000740   000003 116007                    CMPQ    3,DL
        11 000741   000743 602006 11                 TNC     s:14779+7,QL
        11 000742   001047 710000 11                 TRA     s:15084
        11 000743   000746 710000 11                 TRA     s:14832
        11 000744   000777 710000 11                 TRA     s:14933
        11 000745   001017 710000 11                 TRA     s:15034

     1229    14780    3         CASE(%(XPL-EMIT_PM$_BASE));

     1230    14781                %ASSIGN_MOP(OP1=ENF,SUP1=SN);

  14832 11 000746   200146 235100                    LDA     MOP_L,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:144  
        11 000747   000001 035007                    ADLA    1,DL
        11 000750   200146 755100                    STA     MOP_L,,AUTO

  14833 11 000751   200146 236100                    LDQ     MOP_L,,AUTO
        11 000752   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 000753   000757 602000 11                 TNC     s:14840

  14836 11 000754   200146 450100                    STZ     MOP_L,,AUTO

  14837 11 000755   200145 450100                    STZ     MOP_L_MAX,,AUTO

  14838 11 000756   000001 702211                    TSX2  ! 1,X1

  14840 11 000757   000000 116003                    CMPQ    0,DU
        11 000760   001047 600000 11                 TZE     s:15084

  14846 11 000761   400000 236003                    LDQ     -131072,DU
        11 000762   200162 756100                    STQ     ES_ON,,AUTO

  14848 11 000763   200165 235100                    LDA     BZ_MOP,,AUTO
        11 000764   000001 115000 12                 CMPA    1
        11 000765   000771 601000 11                 TNZ     s:14873

  14848 11 000766   200146 235100                    LDA     MOP_L,,AUTO
        11 000767   000001 135007                    SBLA    1,DL
        11 000770   200165 755100                    STA     BZ_MOP,,AUTO

  14873 11 000771   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 000772   200146 235100                    LDA     MOP_L,,AUTO
        11 000773   040105 100400                    MLR     fill='040'O
        11 000774   000004 000001 12                 ADSC9   4                        cn=0,n=1
        11 000775   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

  14879 11 000776   001047 710000 11                 TRA     s:15084

     1231    14881    3         CASE(%(XMI-EMIT_PM$_BASE));

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:145  
     1232    14882                %ASSIGN_MOP(OP1=INSN,TBL1=MI);

  14933 11 000777   200146 235100                    LDA     MOP_L,,AUTO
        11 001000   000001 035007                    ADLA    1,DL
        11 001001   200146 755100                    STA     MOP_L,,AUTO

  14934 11 001002   200146 236100                    LDQ     MOP_L,,AUTO
        11 001003   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 001004   001010 602000 11                 TNC     s:14941

  14937 11 001005   200146 450100                    STZ     MOP_L,,AUTO

  14938 11 001006   200145 450100                    STZ     MOP_L_MAX,,AUTO

  14939 11 001007   000001 702211                    TSX2  ! 1,X1

  14941 11 001010   000000 116003                    CMPQ    0,DU
        11 001011   001047 600000 11                 TZE     s:15084

  14974 11 001012   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 001013   040106 100400                    MLR     fill='040'O
        11 001014   000005 000001 12                 ADSC9   5                        cn=0,n=1
        11 001015   000005 600001                    ADSC9   5,Q,PR0                  cn=3,n=1

  14980 11 001016   001047 710000 11                 TRA     s:15084

     1233    14982    3         CASE(%(X$-EMIT_PM$_BASE));

     1234    14983                %ASSIGN_MOP(OP1=ENF,SUP1=CS);

  15034 11 001017   200146 235100                    LDA     MOP_L,,AUTO
        11 001020   000001 035007                    ADLA    1,DL
        11 001021   200146 755100                    STA     MOP_L,,AUTO

  15035 11 001022   200146 236100                    LDQ     MOP_L,,AUTO
        11 001023   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 001024   001030 602000 11                 TNC     s:15042
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:146  

  15038 11 001025   200146 450100                    STZ     MOP_L,,AUTO

  15039 11 001026   200145 450100                    STZ     MOP_L_MAX,,AUTO

  15040 11 001027   000001 702211                    TSX2  ! 1,X1

  15042 11 001030   000000 116003                    CMPQ    0,DU
        11 001031   001047 600000 11                 TZE     s:15084

  15048 11 001032   400000 236003                    LDQ     -131072,DU
        11 001033   200162 756100                    STQ     ES_ON,,AUTO

  15050 11 001034   200165 235100                    LDA     BZ_MOP,,AUTO
        11 001035   000001 115000 12                 CMPA    1
        11 001036   001042 601000 11                 TNZ     s:15075

  15050 11 001037   200146 235100                    LDA     MOP_L,,AUTO
        11 001040   000001 135007                    SBLA    1,DL
        11 001041   200165 755100                    STA     BZ_MOP,,AUTO

  15075 11 001042   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 001043   200146 235100                    LDA     MOP_L,,AUTO
        11 001044   040105 100400                    MLR     fill='040'O
        11 001045   000003 000001 12                 ADSC9   3                        cn=0,n=1
        11 001046   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

     1235    15083    3         END;

     1236    15084    2      END;

  15084 11 001047   200202 221300                    LDX1  ! PROC$+1,,AUTO
        11 001050   000001 702211                    TSX2  ! 1,X1


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:147  
     1238    15086        /*I*        NAME:  MOVE_CHAR
     1239    15087                 PURPOSE:  This procedure generates mops to move digits
     1240    15088                           when suppression is not involved.
     1241    15089                    CALL:  CALL MOVE_CHAR ALTRET(ERR_ROUTINE);
     1242    15090               INTERFACE:  N#_MOP
     1243    15091             DESCRIPTION:  This procedure generates mops to move digits
     1244    15092                           when suppression is not involved.
     1245    15093                   INPUT:  CNT
     1246    15094                  OUTPUT:  Generate mops (via N#_MOP)
     1247    15095                 SCRATCH:  DIGITS, TDIGITS, WIDTH
     1248    15096                                                                                     */
     1249    15097    1     MOVE_CHAR: PROC ALTRET;

  15097 11 001051   200202 741300       MOVE_CHAR    STX1  ! PROC$+1,,AUTO

     1250    15098    2        DIGITS = DIGITS + CNT;

  15098 11 001052   200155 236100                    LDQ     DIGITS,,AUTO
        11 001053   200111 036100                    ADLQ    CNT,,AUTO
        11 001054   200155 756100                    STQ     DIGITS,,AUTO

     1251    15099    2        TDIGITS = TDIGITS + CNT;

  15099 11 001055   200156 236100                    LDQ     TDIGITS,,AUTO
        11 001056   200111 036100                    ADLQ    CNT,,AUTO
        11 001057   200156 756100                    STQ     TDIGITS,,AUTO

     1252    15100    2        WIDTH = WIDTH + CNT;

  15100 11 001060   200157 236100                    LDQ     WIDTH,,AUTO
        11 001061   200111 036100                    ADLQ    CNT,,AUTO
        11 001062   200157 756100                    STQ     WIDTH,,AUTO

     1253    15101    3        IF MOP_L_MAX ~= 0 THEN DO;

  15101 11 001063   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 001064   001071 600000 11                 TZE     s:15107
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:148  

     1254    15102                %ASSIGN_OP(VAR=MOP_OP,OP=MVC);

  15103 11 001065   000015 235007                    LDA     13,DL
        11 001066   200173 755100                    STA     MOP_OP,,AUTO

     1255    15105    3           CALL N#_MOP ALTRET(MOVE_CHAR_ERR);

  15105 11 001067   000260 701000 11                 TSX1    N#_MOP
        11 001070   001073 702000 11                 TSX2    MOVE_CHAR_ERR

     1256    15106    3           END;

     1257    15107    2        RETURN;

  15107 11 001071   200202 221300                    LDX1  ! PROC$+1,,AUTO
        11 001072   000001 702211                    TSX2  ! 1,X1

  15101 11 001073                       MOVE_CHAR_E* null
     1258    15108    2   MOVE_CHAR_ERR: ;
     1259    15109    2        ALTRETURN;

  15109 11 001073   200202 221300                    LDX1  ! PROC$+1,,AUTO
        11 001074   000000 702211                    TSX2  ! 0,X1

     1260    15110    2      END;

     1263    15113          /* %SET _INTERNAL_PROC = '0'B; */

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:149  
     1265    15115        /*D*        NAME:  Z8DP$VALIDATE_PIC
     1266    15116                    CALL:  CALL Z8DP$VALIDATE_PIC(PIC_STR,PIC_IN,PIC_OUT)
     1267    15117                              ALTRET(error_label);
     1268    15118               INTERFACE:  none
     1269    15119             DESCRIPTION:  This procedure scans picture strings and produces
     1270    15120                           editing micro-operation strings for them.  In
     1271    15121                           addition, certain useful information about the
     1272    15122                           picture is also returned.
     1273    15123                                                                                   *//*
     1274    15124                           The method of solution is a standard sort of
     1275    15125                           state transition algorithm.  In order to reduce
     1276    15126                           the size of the STATE_TBL, the input picture string
     1277    15127                           is first translated so that the number of different
     1278    15128                           inputs is reduced to just 24.  The table is modified
     1279    15129                           during the scanning process.  Elements of the table
     1280    15130                           are either state codes or error codes.  Error codes
     1281    15131                           have an extra %E_LO added to them so they can be
     1282    15132                           distinguished from real states.  For example if
     1283    15133                           an S is detected as the first character in the
     1284    15134                           string, then an error code is loaded into every
     1285    15135                           state which illegal for a numeric or numeric floating
     1286    15136                           picture.
     1287    15137                   INPUT:  PIC_STR -- the picture string.
     1288    15138                           PIC_IN.PIC_L  -- the length of PIC_STR
     1289    15139                           PIC_IN.MOP_L  -- the max length of PIC_OUT.MOP_STR
     1290    15140                              If .MOP_L is 0, the PIC_OUT.MOP_STR need not be
     1291    15141                              present.  The picture will be validated but no
     1292    15142                              mops will be generated.
     1293    15143                  OUTPUT:  PIC_OUT.WIDTH -- the width of the edited result.
     1294    15144                           PIC_OUT.SCALE -- the required scale factor of the
     1295    15145                              input number.  For floating point, this is the
     1296    15146                              number of digits to the right of the decimal
     1297    15147                              point in the mantissa (negated).
     1298    15148                           PIC_OUT.LEFT -- the number of digits to the left
     1299    15149                              of the decimal point.
     1300    15150
     1301    15151
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:150  
     1302    15152                           PIC_OUT.TYPE -- identifies the type of picture.
     1303    15153                              2) Alphabetic             6) Numeric Edited
     1304    15154                              3) Alphanumeric           7) Numeric Floating
     1305    15155                              4) Alphanumeric Edited    8) Numeric Floating Edited
     1306    15156                              5) Numeric                1) Kanji
     1307    15157                           PIC_OUT.ERROR -- error code
     1308    15158                           PIC_OUT.ERRCOL -- column number (relative to PIC_STR)
     1309    15159                              where the error was detected.
     1310    15160                           PIC_OUT.EXRAD -- number of digits in the exrad (if
     1311    15161                              any) i.e. the exponent portion of a float picture
     1312    15162                           PIC_OUT.EIS_TYPE -- the suggested EIS data type.
     1313    15163                              This is usefull if the caller wants to define
     1314    15164                              the type of a data item from its picture (COBOL
     1315    15165                              does this).
     1316    15166                              0) floating point       3) EIS unsigned
     1317    15167                              1) EIS leading signed   4) character
     1318    15168                              2) EIS trailing signed  5) EIS signed leading or trailing
     1319    15169                           PIC_OUT.MOP_L -- the length of the output MOP string
     1320    15170                           PIC_OUT.MOP_STR -- the MOP string.
     1321    15171                 SCRATCH: none (no interaction between calls).
     1322    15172                                                                                     */

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:151  
     1324    15174          /*D*  Initialization and parameter error detection.
     1325    15175          */
     1326    15176    1        PROC$ = O1COM.CURRENT_PROC$ -> PROC_.PROC_SUPP$;

  15176 11 001075   000057 470400 xsym               LDP0    O1COM+47
        11 001076   000001 236100                    LDQ     1,,PR0
        11 001077   200201 756100                    STQ     PROC$,,AUTO

     1327    15177
     1328    15178    1        S = 0;

  15178 11 001100   200110 450100                    STZ     S,,AUTO

     1329    15179    1        NEXT_S = 0;

  15179 11 001101   200112 450100                    STZ     NEXT_S,,AUTO

     1330    15180
     1331    15181    1        IF PIC_IN.PIC_L = 0 THEN

  15181 11 001102   200004 471500                    LDP1    @PIC_IN,,AUTO
        11 001103   100000 220100                    LDX0    0,,PR1
        11 001104   001110 601000 11                 TNZ     s:15200

     1332    15182                %ERR(CODE=%E$ZERO_LENGTH_PICTURE);

  15185 11 001105   000701 235007                    LDA     449,DL
        11 001106   200144 755100                    STA     STATE,,AUTO

  15189 11 001107   004072 710000 11                 TRA     ERR_ROUTINE

     1333    15200    1        IF PIC_IN.PIC_L > %PIC_L_MAX THEN

  15200 11 001110   000401 100003                    CMPX0   257,DU
        11 001111   001115 602000 11                 TNC     s:15220

     1334    15201                %ERR(CODE=%E$PIC_LENGTH_MAX);
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:152  

  15204 11 001112   000702 235007                    LDA     450,DL
        11 001113   200144 755100                    STA     STATE,,AUTO

  15208 11 001114   004072 710000 11                 TRA     ERR_ROUTINE

     1335    15219
     1336    15220    1        MOP_L_MAX = PIC_IN.MOP_L;

  15220 11 001115   100000 236100                    LDQ     0,,PR1
        11 001116   777777 376007                    ANQ     -1,DL
        11 001117   200145 756100                    STQ     MOP_L_MAX,,AUTO

     1337    15221    1        CALL XLATE(CH,XLATE_TBL,PIC_STR);

  15221 11 001120   200003 473500                    LDP3    @PIC_STR,,AUTO
        11 001121   040100 160540                    MVT     fill='040'O
        11 001122   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
        11 001123   200006 000401                    ADSC9   CH,,AUTO                 cn=0,n=257
        11 001124   000000 000000 xsym               ARG     XLATE_TBL

     1338    15222    1        STATE_TBL = INIT_TBL;

  15222 11 001125   000100 100400                    MLR     fill='000'O
        11 001126   000000 000144 9                  ADSC9   INIT_TBL                 cn=0,n=100
        11 001127   200113 000144                    ADSC9   STATE_TBL,,AUTO          cn=0,n=100

     1339    15223    1        POSS_TY = %POSS_TY_INIT;

  15223 11 001130   776000 236003                    LDQ     -1024,DU
        11 001131   200167 756100                    STQ     POSS_TY,,AUTO

     1340    15224    1        SUP = 0;

  15224 11 001132   200164 450100                    STZ     SUP,,AUTO

     1341    15225    1        LAST_MOP_OP = %NO_LAST_OP;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:153  

  15225 11 001133   000100 235007                    LDA     64,DL
        11 001134   200176 755100                    STA     LAST_MOP_OP,,AUTO

     1342    15226    1        MOP_L = 0;

  15226 11 001135   200146 450100                    STZ     MOP_L,,AUTO

     1343    15227    1        DIGITS = 0;

  15227 11 001136   200155 450100                    STZ     DIGITS,,AUTO

     1344    15228    1        TDIGITS = 0;

  15228 11 001137   200156 450100                    STZ     TDIGITS,,AUTO

     1345    15229    1        WIDTH = 0;

  15229 11 001140   200157 450100                    STZ     WIDTH,,AUTO

     1346    15230    1        LEFT = -1;

  15230 11 001141   000001 335007                    LCA     1,DL
        11 001142   200160 755100                    STA     LEFT,,AUTO

     1347    15231    1        SCALE = 0;

  15231 11 001143   200161 450100                    STZ     SCALE,,AUTO

     1348    15232    1        ES_ON = '0'B;

  15232 11 001144   200162 450100                    STZ     ES_ON,,AUTO

     1349    15233    1        ENF_NEEDED = '0'B;

  15233 11 001145   200163 450100                    STZ     ENF_NEEDED,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:154  
     1350    15234    1        BZ_MOP = -1;

  15234 11 001146   200165 755100                    STA     BZ_MOP,,AUTO

     1351    15235
     1352    15236    1        IF PIC_IN.B.BLANK_WHEN_ZERO THEN

  15236 11 001147   100001 234100                    SZN     1,,PR1
        11 001150   001177 605000 11                 TPL     s:15338

     1353    15237               %ASSIGN_MOP (OP1=SES, BZ1=ON);

  15288 11 001151   200146 235100                    LDA     MOP_L,,AUTO
        11 001152   000001 035007                    ADLA    1,DL
        11 001153   200146 755100                    STA     MOP_L,,AUTO

  15289 11 001154   200146 236100                    LDQ     MOP_L,,AUTO
        11 001155   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 001156   001162 602000 11                 TNC     s:15296

  15292 11 001157   200146 450100                    STZ     MOP_L,,AUTO

  15293 11 001160   200145 450100                    STZ     MOP_L_MAX,,AUTO

  15294 11 001161   000000 702200 xent               TSX2  ! X66_ARET

  15296 11 001162   000000 116003                    CMPQ    0,DU
        11 001163   001177 600000 11                 TZE     s:15338

  15300 11 001164   200162 450100                    STZ     ES_ON,,AUTO

  15304 11 001165   200165 235100                    LDA     BZ_MOP,,AUTO
        11 001166   000001 115000 12                 CMPA    1
        11 001167   001172 601000 11                 TNZ     s:15329

  15304 11 001170   000001 136007                    SBLQ    1,DL
        11 001171   200165 756100                    STQ     BZ_MOP,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:155  

  15329 11 001172   200005 474500                    LDP4    @PIC_OUT,,AUTO
        11 001173   200146 235100                    LDA     MOP_L,,AUTO
        11 001174   040105 100400                    MLR     fill='040'O
        11 001175   000006 000001 12                 ADSC9   6                        cn=0,n=1
        11 001176   400005 600001                    ADSC9   5,A,PR4                  cn=3,n=1

     1354    15337
     1355    15338    1        TYPE = 0;

  15338 11 001177   200166 450100                    STZ     TYPE,,AUTO

     1356    15339    1        PIC_OUT.B.ASTERISK_SUPRESS = FALSE;

  15339 11 001200   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 001201   000007 236000 12                 LDQ     7
        11 001202   000002 356100                    ANSQ    2,,PR0

     1357    15340    1        EIS_TYPE = %PIC_EIS_UNKNOWN;

  15340 11 001203   000006 235007                    LDA     6,DL
        11 001204   200175 755100                    STA     EIS_TYPE,,AUTO

     1358    15341    1        TBL_1 = ASCBIN(' ');

  15341 11 001205   000040 235007                    LDA     32,DL
        11 001206   200170 755100                    STA     TBL_1,,AUTO

     1359    15342    1        TBL_2 = ASCBIN('*');

  15342 11 001207   000052 235007                    LDA     42,DL
        11 001210   200171 755100                    STA     TBL_2,,AUTO

     1360    15343    1        TBL_5 = ASCBIN('$');

  15343 11 001211   000044 235007                    LDA     36,DL
        11 001212   200172 755100                    STA     TBL_5,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:156  

     1361    15344
     1362    15345    1        IF O1COM.CURRENT_PROC$ -> PROC_.B.OBJECT_IS_COMMA THEN

  15345 11 001213   000057 474400 xsym               LDP4    O1COM+47
        11 001214   400003 236100                    LDQ     3,,PR4
        11 001215   002000 316003                    CANQ    1024,DU
        11 001216   001251 600000 11                 TZE     s:15553

     1363    15346    2          DO;

     1364    15347                 %ASSIGN_MOP (OP1  = LTE,
     1365    15348                              TBL1 = PT,
     1366    15349                              CH1  = %COMMA);

  15400 11 001217   200146 235100                    LDA     MOP_L,,AUTO
        11 001220   000002 035007                    ADLA    2,DL
        11 001221   200146 755100                    STA     MOP_L,,AUTO

  15401 11 001222   200146 236100                    LDQ     MOP_L,,AUTO
        11 001223   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 001224   001230 602000 11                 TNC     s:15408

  15404 11 001225   200146 450100                    STZ     MOP_L,,AUTO

  15405 11 001226   200145 450100                    STZ     MOP_L_MAX,,AUTO

  15406 11 001227   000000 702200 xent               TSX2  ! X66_ARET

  15408 11 001230   000000 116003                    CMPQ    0,DU
        11 001231   001235 600000 11                 TZE     s:15502

  15441 11 001232   040106 100400                    MLR     fill='040'O
        11 001233   000255 000002 9                  ADSC9   SUP_MOVE_OPS+8           cn=0,n=2
        11 001234   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1367    15449                 %ASSIGN_MOP (OP1  = LTE,
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:157  
     1368    15450                              TBL1 = CM,
     1369    15451                              CH1  = %POINT);

  15502 11 001235   000002 036007                    ADLQ    2,DL
        11 001236   200146 756100                    STQ     MOP_L,,AUTO

  15503 11 001237   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 001240   001244 602000 11                 TNC     s:15510

  15506 11 001241   200146 450100                    STZ     MOP_L,,AUTO

  15507 11 001242   200145 450100                    STZ     MOP_L_MAX,,AUTO

  15508 11 001243   000000 702200 xent               TSX2  ! X66_ARET

  15510 11 001244   000000 116003                    CMPQ    0,DU
        11 001245   001251 600000 11                 TZE     s:15553

  15543 11 001246   040106 100400                    MLR     fill='040'O
        11 001247   000256 000002 9                  ADSC9   SUP_MOVE_OPS+9           cn=0,n=2
        11 001250   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1370    15551    2          END;

     1371    15552
     1372    15553    1        IF PROC$ -> PROC_SUPP.CURRENCY_SIGN ~= '$' THEN

  15553 11 001251   200201 474500                    LDP4    PROC$,,AUTO
        11 001252   400001 236100                    LDQ     1,,PR4
        11 001253   777000 376003                    ANQ     -512,DU
        11 001254   044000 116003                    CMPQ    18432,DU
        11 001255   001304 600000 11                 TZE     TOP_OF_PICTURE_SCAN

     1373    15554    2          DO;

     1374    15555                 %ASSIGN_MOP (OP1  = LTE,
     1375    15556                              TBL1 = $,
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:158  
     1376    15557                              CURRENCY_SIGN = YES,
     1377    15558                              CH1  = "PROC$ -> PROC_SUPP.CURRENCY_SIGN");

  15609 11 001256   200146 235100                    LDA     MOP_L,,AUTO
        11 001257   000001 035007                    ADLA    1,DL
        11 001260   200146 755100                    STA     MOP_L,,AUTO

  15610 11 001261   200146 236100                    LDQ     MOP_L,,AUTO
        11 001262   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 001263   001267 602000 11                 TNC     s:15617

  15613 11 001264   200146 450100                    STZ     MOP_L,,AUTO

  15614 11 001265   200145 450100                    STZ     MOP_L_MAX,,AUTO

  15615 11 001266   000000 702200 xent               TSX2  ! X66_ARET

  15617 11 001267   000000 116003                    CMPQ    0,DU
        11 001270   001304 600000 11                 TZE     TOP_OF_PICTURE_SCAN

  15639 11 001271   400001 236100                    LDQ     1,,PR4
        11 001272   000033 772000                    QRL     27
        11 001273   200172 756100                    STQ     TBL_5,,AUTO

  15650 11 001274   040105 100400                    MLR     fill='040'O
        11 001275   000010 000001 12                 ADSC9   8                        cn=0,n=1
        11 001276   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

  15652 11 001277   000001 035007                    ADLA    1,DL
        11 001300   200146 755100                    STA     MOP_L,,AUTO

  15653 11 001301   040105 100500                    MLR     fill='040'O
        11 001302   400001 000001                    ADSC9   1,,PR4                   cn=0,n=1
        11 001303   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

     1378    15658    2          END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:159  
     1379    15659

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:160  
     1381    15661    1   TOP_OF_PICTURE_SCAN: ;

  15661 11 001304                       TOP_OF_PICT* null
     1382    15662          /*D*  TOP_OF_PICTURE_SCAN:
     1383    15663             Get the next character to be scanned.  If repetition is legal,
     1384    15664             scan off all like characters and replication counts.  Accumulate
     1385    15665             the effective number of the character found in CNT.  If type
     1386    15666             checking is needed, do it.  Define the current STATE and make
     1387    15667             the transition to that state.
     1388    15668          */
     1389    15669    1        S = NEXT_S;

  15669 11 001304   200112 235100                    LDA     NEXT_S,,AUTO
        11 001305   200110 755100                    STA     S,,AUTO

     1390    15670    1        CURR_CH = ASCBIN(SUBSTR(CH,S,1));

  15670 11 001306   000100 101505                    MRL     fill='000'O
        11 001307   200006 000001                    ADSC9   CH,A,AUTO                cn=0,n=1
        11 001310   200210 000004                    ADSC9   MOP_N#+2,,AUTO           cn=0,n=4
        11 001311   200210 236100                    LDQ     MOP_N#+2,,AUTO
        11 001312   200147 756100                    STQ     CURR_CH,,AUTO

     1391    15671    1        CNT = 0;

  15671 11 001313   200111 450100                    STZ     CNT,,AUTO

     1392    15672    2        IF BITS.REP_LEGAL(CURR_CH) THEN DO;

  15672 11 001314   000074 234006 9                  SZN     BITS,QL
        11 001315   001451 605000 11                 TPL     s:15754

     1393    15673    2           CNT = 1;

  15673 11 001316   000001 236007                    LDQ     1,DL
        11 001317   200111 756100                    STQ     CNT,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:161  
     1394    15674    2           NEXT_S = S + 1;

  15674 11 001320   000001 035007                    ADLA    1,DL
        11 001321   200112 755100                    STA     NEXT_S,,AUTO

     1395    15675    2           CONTINUE_SCAN = '1'B;

  15675 11 001322   400000 236003                    LDQ     -131072,DU
        11 001323   200150 756100                    STQ     CONTINUE_SCAN,,AUTO

     1396    15676    2           SCAN_TBL1.S(CURR_CH) = %_IGN;

  15676 11 001324   200147 235100                    LDA     CURR_CH,,AUTO
        11 001325   000005 101400                    MRL     fill='000'O
        11 001326   000011 000004 12                 ADSC9   9                        cn=0,n=4
        11 001327   000000 000001 10                 ADSC9   SCAN_TBL1,A              cn=0,n=1

     1397    15677    3           DO WHILE(CONTINUE_SCAN);

  15677 11 001330   200150 234100                    SZN     CONTINUE_SCAN,,AUTO
        11 001331   001442 605000 11                 TPL     s:15732

     1398    15678    3              CONTINUE_SCAN = '0'B;

  15678 11 001332   200150 450100                    STZ     CONTINUE_SCAN,,AUTO

     1399    15679    3              CALL SEARCH(SCAN_X,STATE,SCAN_TBL1,CH,NEXT_S);

  15679 11 001333   200112 720100                    LXL0    NEXT_S,,AUTO
        11 001334   777376 620010                    EAX0    -258,X0
        11 001335   777777 660003                    ERX0    -1,DU
        11 001336   200112 236100                    LDQ     NEXT_S,,AUTO
        11 001337   000000 164546                    TCT
        11 001340   200006 000010                    ADSC9   CH,Q,AUTO                cn=0,n=*X0
        11 001341   000000 000000 10                 ARG     SCAN_TBL1
        11 001342   200151 000100                    ARG     SCAN_X,,AUTO
        11 001343   200151 235100                    LDA     SCAN_X,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:162  
        11 001344   000033 771000                    ARL     27
        11 001345   200144 755100                    STA     STATE,,AUTO
        11 001346   200151 551140                    STBA    SCAN_X,'40'O,AUTO
        11 001347   200151 056100                    ASQ     SCAN_X,,AUTO

     1400    15680    3              CNT = CNT + (SCAN_X - NEXT_S);

  15680 11 001350   200151 236100                    LDQ     SCAN_X,,AUTO
        11 001351   200112 136100                    SBLQ    NEXT_S,,AUTO
        11 001352   200111 036100                    ADLQ    CNT,,AUTO
        11 001353   200111 756100                    STQ     CNT,,AUTO

     1401    15681    3              NEXT_S = SCAN_X;

  15681 11 001354   200151 235100                    LDA     SCAN_X,,AUTO
        11 001355   200112 755100                    STA     NEXT_S,,AUTO

     1402    15682    4              IF STATE = %_SCAN_CNT THEN DO;

  15682 11 001356   200144 235100                    LDA     STATE,,AUTO
        11 001357   000002 115007                    CMPA    2,DL
        11 001360   001440 601000 11                 TNZ     s:15731

     1403    15683    4                 NEXT_S = NEXT_S + 1;

  15683 11 001361   200112 235100                    LDA     NEXT_S,,AUTO
        11 001362   000001 035007                    ADLA    1,DL
        11 001363   200112 755100                    STA     NEXT_S,,AUTO

     1404    15684    4                 CALL SEARCH(SCAN_X,STATE,SCAN_TBL2,CH,NEXT_S);

  15684 11 001364   777376 620005                    EAX0    -258,AL
        11 001365   777777 660003                    ERX0    -1,DU
        11 001366   200112 236100                    LDQ     NEXT_S,,AUTO
        11 001367   000000 164546                    TCT
        11 001370   200006 000010                    ADSC9   CH,Q,AUTO                cn=0,n=*X0
        11 001371   000032 000000 9                  ARG     SCAN_TBL2
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:163  
        11 001372   200151 000100                    ARG     SCAN_X,,AUTO
        11 001373   200151 235100                    LDA     SCAN_X,,AUTO
        11 001374   000033 771000                    ARL     27
        11 001375   200144 755100                    STA     STATE,,AUTO
        11 001376   200151 551140                    STBA    SCAN_X,'40'O,AUTO
        11 001377   200151 056100                    ASQ     SCAN_X,,AUTO

     1405    15685    5                 IF STATE = %_SCAN_END THEN DO;

  15685 11 001400   000001 115007                    CMPA    1,DL
        11 001401   001440 601000 11                 TNZ     s:15731

     1406    15686    5                    L = SCAN_X - NEXT_S;

  15686 11 001402   200151 236100                    LDQ     SCAN_X,,AUTO
        11 001403   200112 136100                    SBLQ    NEXT_S,,AUTO
        11 001404   200153 756100                    STQ     L,,AUTO

     1407    15687    5                    IF L = 0 THEN

  15687 11 001405   001411 601000 11                 TNZ     s:15706

     1408    15688                            %ERR(CODE=%E$ZERO_REP_COUNT_LENGTH,RTN=REP_ERR_RTN);

  15691 11 001406   000704 235007                    LDA     452,DL
        11 001407   200144 755100                    STA     STATE,,AUTO

  15695 11 001410   004100 710000 11                 TRA     REP_ERR_RTN

     1409    15706    5                    CALL CHARBIN(I,SUBSTR(PIC_STR,NEXT_S,L));

  15706 11 001411   200004 470500                    LDP0    @PIC_IN,,AUTO
        11 001412   000000 221100                    LDX1    0,,PR0
        11 001413   200003 471500                    LDP1    @PIC_STR,,AUTO
        11 001414   000000 622006                    EAX2    0,QL
        11 001415   200112 236100                    LDQ     NEXT_S,,AUTO
        11 001416   000100 305546                    DTB
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:164  
        11 001417   100000 030012                    NDSC9   0,Q,PR1                  cn=0,s=nosgn,sf=0,n=*X2
        11 001420   200210 000010                    NDSC9   MOP_N#+2,,AUTO           cn=0,s=lsgnf,sf=0,n=8
        11 001421   200211 235100                    LDA     MOP_N#+3,,AUTO
        11 001422   200152 755100                    STA     I,,AUTO

     1410    15707    5                    IF I = 0 THEN

  15707 11 001423   001427 601000 11                 TNZ     s:15726

     1411    15708                            %ERR(CODE=%E$REP_CNT_GTR_ZERO,RTN=REP_ERR_RTN);

  15711 11 001424   000705 235007                    LDA     453,DL
        11 001425   200144 755100                    STA     STATE,,AUTO

  15715 11 001426   004100 710000 11                 TRA     REP_ERR_RTN

     1412    15726    5                    CNT = CNT + I - 1;

  15726 11 001427   200111 236100                    LDQ     CNT,,AUTO
        11 001430   200152 036100                    ADLQ    I,,AUTO
        11 001431   000001 136007                    SBLQ    1,DL
        11 001432   200111 756100                    STQ     CNT,,AUTO

     1413    15727    5                    CONTINUE_SCAN = '1'B;

  15727 11 001433   400000 236003                    LDQ     -131072,DU
        11 001434   200150 756100                    STQ     CONTINUE_SCAN,,AUTO

     1414    15728    5                    NEXT_S = SCAN_X + 1;

  15728 11 001435   200151 235100                    LDA     SCAN_X,,AUTO
        11 001436   000001 035007                    ADLA    1,DL
        11 001437   200112 755100                    STA     NEXT_S,,AUTO

     1415    15729    5                    END;

     1416    15730    4                 END;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:165  

     1417    15731    3              END;

  15731 11 001440   200150 234100                    SZN     CONTINUE_SCAN,,AUTO
        11 001441   001332 604000 11                 TMI     s:15678

     1418    15732    2           IF STATE ~= %_SCAN_END THEN

  15732 11 001442   200144 235100                    LDA     STATE,,AUTO
        11 001443   000001 115007                    CMPA    1,DL
        11 001444   004100 601000 11                 TNZ     REP_ERR_RTN

     1419    15733                   %ERR(RTN=REP_ERR_RTN);
     1420    15751    2           SCAN_TBL1.S(CURR_CH) = %_SCAN_END;

  15751 11 001445   200147 236100                    LDQ     CURR_CH,,AUTO
        11 001446   000006 101400                    MRL     fill='000'O
        11 001447   000012 000004 12                 ADSC9   10                       cn=0,n=4
        11 001450   000000 000001 10                 ADSC9   SCAN_TBL1,Q              cn=0,n=1

     1421    15752    2           END;

     1422    15753
     1423    15754    1        IF BITS.TYPE_CHECK(CURR_CH) THEN

  15754 11 001451   200147 720100                    LXL0    CURR_CH,,AUTO
        11 001452   000074 236010 9                  LDQ     BITS,X0
        11 001453   200000 316003                    CANQ    65536,DU
        11 001454   001457 600000 11                 TZE     s:15757

     1424    15755    1           CALL TYPE_CHECK ALTRET(ERR_ROUTINE);

  15755 11 001455   000003 701000 11                 TSX1    TYPE_CHECK
        11 001456   004072 702000 11                 TSX2    ERR_ROUTINE

     1425    15756
     1426    15757    1        STATE = STATE_TBL(CURR_CH);
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:166  

  15757 11 001457   200147 720100                    LXL0    CURR_CH,,AUTO
        11 001460   200113 235110                    LDA     STATE_TBL,X0,AUTO
        11 001461   200144 755100                    STA     STATE,,AUTO


     1428    15759    2        DO CASE(STATE);

  15759 11 001462   000032 115007                    CMPA    26,DL
        11 001463   001465 602005 11                 TNC     s:15759+3,AL
        11 001464   004070 710000 11                 TRA     s:19170
        11 001465   004070 710000 11                 TRA     s:19170
        11 001466   001517 710000 11                 TRA     s:15767
        11 001467   001653 710000 11                 TRA     s:16151
        11 001470   002040 710000 11                 TRA     s:16499
        11 001471   002147 710000 11                 TRA     s:16552
        11 001472   002256 710000 11                 TRA     s:16692
        11 001473   003122 710000 11                 TRA     s:17603
        11 001474   003245 710000 11                 TRA     s:17923
        11 001475   003370 710000 11                 TRA     s:18243
        11 001476   002766 710000 11                 TRA     s:17275
        11 001477   002736 710000 11                 TRA     s:17255
        11 001500   002752 710000 11                 TRA     s:17265
        11 001501   003026 710000 11                 TRA     s:17386
        11 001502   002305 710000 11                 TRA     s:16710
        11 001503   002330 710000 11                 TRA     s:16741
        11 001504   002417 710000 11                 TRA     s:16794
        11 001505   002441 710000 11                 TRA     s:16809
        11 001506   002605 710000 11                 TRA     s:17091
        11 001507   002622 710000 11                 TRA     s:17104
        11 001510   002700 710000 11                 TRA     s:17142
        11 001511   003522 710000 11                 TRA     s:18580
        11 001512   003505 710000 11                 TRA     s:18563
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:167  
        11 001513   003510 710000 11                 TRA     s:18571
        11 001514   002646 710000 11                 TRA     s:17121
        11 001515   003661 710000 11                 TRA     s:18953
        11 001516   003703 710000 11                 TRA     s:18983


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:168  
     1430    15761    2         CASE(%_CR_DB);

     1431    15762          /*D* CASE(%_CR_DB)
     1432    15763             The letter 'C' or 'D' was detected.  These letters are only
     1433    15764             valid as parts of the 'CR' and 'DB' picture characters at the
     1434    15765             physical end of the picture.
     1435    15766          */
     1436    15767    2           IF S = 0 THEN

  15767 11 001517   200110 236100                    LDQ     S,,AUTO
        11 001520   001524 601000 11                 TNZ     s:15786

     1437    15768                   %ERR(CODE=%E$BEGINNING_CR_DB_ILL);

  15771 11 001521   000707 235007                    LDA     455,DL
        11 001522   200144 755100                    STA     STATE,,AUTO

  15775 11 001523   004072 710000 11                 TRA     ERR_ROUTINE

     1438    15786    2           IF TBL_1 ~= ASCBIN(' ') THEN

  15786 11 001524   200170 235100                    LDA     TBL_1,,AUTO
        11 001525   000040 115007                    CMPA    32,DL
        11 001526   001550 600000 11                 TZE     s:15888

     1439    15787                  %ASSIGN_MOP (OP1 = LTE, TBL1 = 1, CH1 = ' ');

  15838 11 001527   200146 235100                    LDA     MOP_L,,AUTO
        11 001530   000002 035007                    ADLA    2,DL
        11 001531   200146 755100                    STA     MOP_L,,AUTO

  15839 11 001532   200146 236100                    LDQ     MOP_L,,AUTO
        11 001533   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 001534   001540 602000 11                 TNC     s:15846

  15842 11 001535   200146 450100                    STZ     MOP_L,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:169  
  15843 11 001536   200145 450100                    STZ     MOP_L_MAX,,AUTO

  15844 11 001537   000000 702200 xent               TSX2  ! X66_ARET

  15846 11 001540   000000 116003                    CMPQ    0,DU
        11 001541   001550 600000 11                 TZE     s:15888

  15864 11 001542   000040 235007                    LDA     32,DL
        11 001543   200170 755100                    STA     TBL_1,,AUTO

  15879 11 001544   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 001545   040106 100400                    MLR     fill='040'O
        11 001546   000252 000002 9                  ADSC9   SUP_MOVE_OPS+5           cn=0,n=2
        11 001547   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1440    15887
     1441    15888    2           CRDB4 = SUBSTR(PIC_STR,S);

  15888 11 001550   200004 470500                    LDP0    @PIC_IN,,AUTO
        11 001551   000000 221100                    LDX1    0,,PR0
        11 001552   000000 636011                    EAQ     0,X1
        11 001553   000022 772000                    QRL     18
        11 001554   200110 136100                    SBLQ    S,,AUTO
        11 001555   200003 471500                    LDP1    @PIC_STR,,AUTO
        11 001556   000000 622006                    EAX2    0,QL
        11 001557   200110 235100                    LDA     S,,AUTO
        11 001560   040100 100545                    MLR     fill='040'O
        11 001561   100000 000012                    ADSC9   0,A,PR1                  cn=0,n=*X2
        11 001562   200154 000004                    ADSC9   CRDB4,,AUTO              cn=0,n=4

     1442    15889    2           CRDB4_BIT = CRDB4_BIT & '737737777777'O;

  15889 11 001563   200154 236100                    LDQ     CRDB4,,AUTO
        11 001564   000257 376000 9                  ANQ     SUP_MOVE_OPS+10
        11 001565   200154 756100                    STQ     CRDB4,,AUTO

     1443    15890                                           /*force to upper case*/
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:170  
     1444    15891    3           IF CRDB4 = CR_DB(CURR_CH) THEN DO;

  15891 11 001566   200154 236100                    LDQ     CRDB4,,AUTO
        11 001567   000125 116010 9                  CMPQ    CR_DB,X0
        11 001570   001641 601000 11                 TNZ     s:16100

     1445    15892    3              WIDTH = WIDTH + 2;

  15892 11 001571   000002 236007                    LDQ     2,DL
        11 001572   200157 056100                    ASQ     WIDTH,,AUTO

     1446    15893    3              IF MOP_L_MAX ~= 0 THEN

  15893 11 001573   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 001574   001636 600000 11                 TZE     s:16096

     1447    15894    3                 IF CURR_CH = %XCR THEN

  15894 11 001575   200147 235100                    LDA     CURR_CH,,AUTO
        11 001576   001617 601000 11                 TNZ     s:16047

     1448    15895                         %ASSIGN_MOP(OP1=INSN,TBL1='C',OP2=INSN,TBL2='R');

  15946 11 001577   200146 235100                    LDA     MOP_L,,AUTO
        11 001600   000004 035007                    ADLA    4,DL
        11 001601   200146 755100                    STA     MOP_L,,AUTO

  15947 11 001602   200146 236100                    LDQ     MOP_L,,AUTO
        11 001603   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 001604   001610 602000 11                 TNC     s:15954

  15950 11 001605   200146 450100                    STZ     MOP_L,,AUTO

  15951 11 001606   200145 450100                    STZ     MOP_L_MAX,,AUTO

  15952 11 001607   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:171  
  15954 11 001610   000000 116003                    CMPQ    0,DU
        11 001611   001636 600000 11                 TZE     s:16096

  15987 11 001612   200005 473500                    LDP3    @PIC_OUT,,AUTO
        11 001613   040106 100400                    MLR     fill='040'O
        11 001614   000260 000004 9                  ADSC9   SUP_MOVE_OPS+11          cn=0,n=4
        11 001615   300005 000004                    ADSC9   5,Q,PR3                  cn=0,n=4

  15993 11 001616   001636 710000 11                 TRA     s:16096

     1449    15995    3                 ELSE
     1450    15996                         %ASSIGN_MOP(OP1=INSN,TBL1='D',OP2=INSN,TBL2='B');

  16047 11 001617   200146 235100                    LDA     MOP_L,,AUTO
        11 001620   000004 035007                    ADLA    4,DL
        11 001621   200146 755100                    STA     MOP_L,,AUTO

  16048 11 001622   200146 236100                    LDQ     MOP_L,,AUTO
        11 001623   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 001624   001630 602000 11                 TNC     s:16055

  16051 11 001625   200146 450100                    STZ     MOP_L,,AUTO

  16052 11 001626   200145 450100                    STZ     MOP_L_MAX,,AUTO

  16053 11 001627   000000 702200 xent               TSX2  ! X66_ARET

  16055 11 001630   000000 116003                    CMPQ    0,DU
        11 001631   001636 600000 11                 TZE     s:16096

  16088 11 001632   200005 473500                    LDP3    @PIC_OUT,,AUTO
        11 001633   040106 100400                    MLR     fill='040'O
        11 001634   000261 000004 9                  ADSC9   SUP_MOVE_OPS+12          cn=0,n=4
        11 001635   300005 000004                    ADSC9   5,Q,PR3                  cn=0,n=4

     1451    16096    3              EIS_TYPE = %PIC_EIS_LSTS;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:172  
  16096 11 001636   000005 235007                    LDA     5,DL
        11 001637   200175 755100                    STA     EIS_TYPE,,AUTO

     1452    16097    3              GOTO CLEAN_UP;

  16097 11 001640   003710 710000 11                 TRA     CLEAN_UP

     1453    16098    3              END;
     1454    16099                /*ELSE* error !!!*/
     1455    16100    2           IF SUBSTR(CRDB4,1,1) ~= SUBSTR(CR_DB(CURR_CH),1,1) THEN

  16100 11 001641   200154 236100                    LDQ     CRDB4,,AUTO
        11 001642   000125 676010 9                  ERQ     CR_DB,X0
        11 001643   000777 376003                    ANQ     511,DU
        11 001644   001650 600000 11                 TZE     s:16123

     1456    16101                   %ERR(CODE=%E$INVALID_CHARACTER);

  16104 11 001645   000677 236007                    LDQ     447,DL
        11 001646   200144 756100                    STQ     STATE,,AUTO

  16108 11 001647   004072 710000 11                 TRA     ERR_ROUTINE

     1457    16119                /*ELSE*/
     1458    16120                %ERR(CODE=%E$CR_DB_AT_END_ONLY);

  16123 11 001650   000706 236007                    LDQ     454,DL
        11 001651   200144 756100                    STQ     STATE,,AUTO

  16127 11 001652   004072 710000 11                 TRA     ERR_ROUTINE


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:173  
     1460    16139    2         CASE(%_PT);

     1461    16140          /*D* CASE(%_PT)
     1462    16141             A decimal point was detected.  Set the number of digits to the
     1463    16142             LEFT of the decimal point.  Increment WIDTH for the point itself.
     1464    16143             End floating suppression if necessary.  Generate mops to emit
     1465    16144             the decimal point.  Finally do some special state processing.
     1466    16145             If a single + was found the activate the 'E' state for float
     1467    16146             numeric edited pictures.  Set state table error codes to handle
     1468    16147             errors related to the interaction of 'V' vs '.', 'P' vs '.'.
     1469    16148             If floating suppression hasn't started, it is now invalid.  This
     1470    16149             means only a fixed trailing '+' or '-' is valid here.
     1471    16150          */
     1472    16151    2           LEFT = DIGITS;

  16151 11 001653   200155 236100                    LDQ     DIGITS,,AUTO
        11 001654   200160 756100                    STQ     LEFT,,AUTO

     1473    16152    2           DIGITS = 0;

  16152 11 001655   200155 450100                    STZ     DIGITS,,AUTO

     1474    16153    2           WIDTH = WIDTH + 1;

  16153 11 001656   200157 054100                    AOS     WIDTH,,AUTO

     1475    16154    2           CALL TEST_ENF ALTRET(ERR_ROUTINE);

  16154 11 001657   000635 701000 11                 TSX1    TEST_ENF
        11 001660   004072 702000 11                 TSX2    ERR_ROUTINE

     1476    16155    2           IF MOP_L_MAX ~= 0 THEN

  16155 11 001661   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 001662   001761 600000 11                 TZE     s:16460

     1477    16156    2              IF SUP = %XST THEN
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:174  

  16156 11 001663   200164 236100                    LDQ     SUP,,AUTO
        11 001664   000007 116007                    CMPQ    7,DL
        11 001665   001710 601000 11                 TNZ     s:16258

     1478    16157                      %ASSIGN_MOP(OP1=LTE,TBL1=1,CH1='.',OP2=INSM,N2=1);

  16208 11 001666   200146 235100                    LDA     MOP_L,,AUTO
        11 001667   000003 035007                    ADLA    3,DL
        11 001670   200146 755100                    STA     MOP_L,,AUTO

  16209 11 001671   200146 236100                    LDQ     MOP_L,,AUTO
        11 001672   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 001673   001677 602000 11                 TNC     s:16216

  16212 11 001674   200146 450100                    STZ     MOP_L,,AUTO

  16213 11 001675   200145 450100                    STZ     MOP_L_MAX,,AUTO

  16214 11 001676   000000 702200 xent               TSX2  ! X66_ARET

  16216 11 001677   000000 116003                    CMPQ    0,DU
        11 001700   001761 600000 11                 TZE     s:16460

  16234 11 001701   000056 235007                    LDA     46,DL
        11 001702   200170 755100                    STA     TBL_1,,AUTO

  16249 11 001703   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 001704   040106 100400                    MLR     fill='040'O
        11 001705   000262 000003 9                  ADSC9   SUP_MOVE_OPS+13          cn=0,n=3
        11 001706   000005 200003                    ADSC9   5,Q,PR0                  cn=1,n=3

  16255 11 001707   001761 710000 11                 TRA     s:16460

     1479    16257    3              ELSE DO;

     1480    16258    3                 IF NOT ES_ON THEN
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:175  

  16258 11 001710   200162 234100                    SZN     ES_ON,,AUTO
        11 001711   001742 604000 11                 TMI     s:16410

     1481    16259                         %ASSIGN_MOP(OP1=SES,ES1=ON);

  16310 11 001712   200146 235100                    LDA     MOP_L,,AUTO
        11 001713   000001 035007                    ADLA    1,DL
        11 001714   200146 755100                    STA     MOP_L,,AUTO

  16311 11 001715   200146 236100                    LDQ     MOP_L,,AUTO
        11 001716   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 001717   001723 602000 11                 TNC     s:16318

  16314 11 001720   200146 450100                    STZ     MOP_L,,AUTO

  16315 11 001721   200145 450100                    STZ     MOP_L_MAX,,AUTO

  16316 11 001722   000000 702200 xent               TSX2  ! X66_ARET

  16318 11 001723   000000 116003                    CMPQ    0,DU
        11 001724   001742 600000 11                 TZE     s:16410

  16324 11 001725   400000 236003                    LDQ     -131072,DU
        11 001726   200162 756100                    STQ     ES_ON,,AUTO

  16326 11 001727   200165 235100                    LDA     BZ_MOP,,AUTO
        11 001730   000001 115000 12                 CMPA    1
        11 001731   001735 601000 11                 TNZ     s:16351

  16326 11 001732   200146 235100                    LDA     MOP_L,,AUTO
        11 001733   000001 135007                    SBLA    1,DL
        11 001734   200165 755100                    STA     BZ_MOP,,AUTO

  16351 11 001735   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 001736   200146 235100                    LDA     MOP_L,,AUTO
        11 001737   040105 100400                    MLR     fill='040'O
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:176  
        11 001740   000013 000001 12                 ADSC9   11                       cn=0,n=1
        11 001741   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

     1482    16359                      %ASSIGN_MOP(OP1=INSB,TBL1=PT);

  16410 11 001742   200146 235100                    LDA     MOP_L,,AUTO
        11 001743   000001 035007                    ADLA    1,DL
        11 001744   200146 755100                    STA     MOP_L,,AUTO

  16411 11 001745   200146 236100                    LDQ     MOP_L,,AUTO
        11 001746   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 001747   001753 602000 11                 TNC     s:16418

  16414 11 001750   200146 450100                    STZ     MOP_L,,AUTO

  16415 11 001751   200145 450100                    STZ     MOP_L_MAX,,AUTO

  16416 11 001752   000000 702200 xent               TSX2  ! X66_ARET

  16418 11 001753   000000 116003                    CMPQ    0,DU
        11 001754   001761 600000 11                 TZE     s:16460

  16451 11 001755   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 001756   040106 100400                    MLR     fill='040'O
        11 001757   000014 000001 12                 ADSC9   12                       cn=0,n=1
        11 001760   000005 600001                    ADSC9   5,Q,PR0                  cn=3,n=1

     1483    16459    3                 END;

     1484    16460    2           NEXT_S = S + 1;

  16460 11 001761   200110 235100                    LDA     S,,AUTO
        11 001762   000001 035007                    ADLA    1,DL
        11 001763   200112 755100                    STA     NEXT_S,,AUTO

     1485    16461    2           STATE_TBL(%XPT) = %E$CHAR_ONLY_APPEAR_ONCE;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:177  
  16461 11 001764   000711 236007                    LDQ     457,DL
        11 001765   200115 756100                    STQ     STATE_TBL+2,,AUTO

     1486    16462    2           IF POSS_TY.NFE THEN

  16462 11 001766   200167 236100                    LDQ     POSS_TY,,AUTO
        11 001767   002000 316003                    CANQ    1024,DU
        11 001770   002005 600000 11                 TZE     s:16470

     1487    16463    2              IF STATE_TBL(%XPL) = %E$ONLY_ONE_SIGN_PER_PIC THEN

  16463 11 001771   200116 235100                    LDA     STATE_TBL+3,,AUTO
        11 001772   000714 115007                    CMPA    460,DL
        11 001773   001777 601000 11                 TNZ     s:16466

     1488    16464    2                 STATE_TBL(%XE) = %_E;

  16464 11 001774   000020 235007                    LDA     16,DL
        11 001775   200127 755100                    STA     STATE_TBL+12,,AUTO
        11 001776   002005 710000 11                 TRA     s:16470

     1489    16465    3              ELSE DO;

     1490    16466    3                 STATE_TBL(%XE) = %E$ILL_CHAR_FOR_NE_PIC;

  16466 11 001777   000725 235007                    LDA     469,DL
        11 002000   200127 755100                    STA     STATE_TBL+12,,AUTO

     1491    16467    3                 TYPE = %PIC_TY_NE;

  16467 11 002001   000006 235007                    LDA     6,DL
        11 002002   200166 755100                    STA     TYPE,,AUTO

     1492    16468    3                 POSS_TY = %POSS_TY_NE;

  16468 11 002003   010000 236003                    LDQ     4096,DU
        11 002004   200167 756100                    STQ     POSS_TY,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:178  

     1493    16469    3                 END;

     1494    16470    2           STATE_TBL(%XV)  = %E$V_AND_DOT_IN_SAME_PIC;

  16470 11 002005   000712 235007                    LDA     458,DL
        11 002006   200126 755100                    STA     STATE_TBL+11,,AUTO

     1495    16471    2           STATE_TBL(%XP)  = %E$P_AND_DOT_IN_SAME_PIC;

  16471 11 002007   000716 235007                    LDA     462,DL
        11 002010   200125 755100                    STA     STATE_TBL+10,,AUTO

     1496    16472    3           IF STATE_TBL(%XPL) = %_1STPM THEN DO;

  16472 11 002011   200116 235100                    LDA     STATE_TBL+3,,AUTO
        11 002012   000003 115007                    CMPA    3,DL
        11 002013   002017 601000 11                 TNZ     s:16476

     1497    16473    3              STATE_TBL(%XPL) = %_FIXPM;

  16473 11 002014   000024 235007                    LDA     20,DL
        11 002015   200116 755100                    STA     STATE_TBL+3,,AUTO

     1498    16474    3              STATE_TBL(%XMI) = %_FIXPM;

  16474 11 002016   200117 755100                    STA     STATE_TBL+4,,AUTO

     1499    16475    3              END;

     1500    16476    3           IF SUP ~= 0 THEN DO;

  16476 11 002017   200164 235100                    LDA     SUP,,AUTO
        11 002020   002032 600000 11                 TZE     s:16483

     1501    16477    3              IF SUP = %XST THEN

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:179  
  16477 11 002021   000007 115007                    CMPA    7,DL
        11 002022   002026 601000 11                 TNZ     s:16480

     1502    16478    3                STATE_TBL(%XST) = %_MOVCH;

  16478 11 002023   000021 235007                    LDA     17,DL
        11 002024   200122 755100                    STA     STATE_TBL+7,,AUTO
        11 002025   004071 710000 11                 TRA     s:19176

     1503    16479    3              ELSE
     1504    16480    3                STATE_TBL(SUP) = %_RT_SUPPRESSION;

  16480 11 002026   000026 235007                    LDA     22,DL
        11 002027   200164 720100                    LXL0    SUP,,AUTO
        11 002030   200113 755110                    STA     STATE_TBL,X0,AUTO

     1505    16481    3              END;

  16481 11 002031   004071 710000 11                 TRA     s:19176

     1506    16482    3           ELSE DO;

     1507    16483    3              STATE_TBL(%X$)  = %E$SUPRESS_NOT_LEGAL_HERE;

  16483 11 002032   000742 235007                    LDA     482,DL
        11 002033   200120 755100                    STA     STATE_TBL+5,,AUTO

     1508    16484    3              STATE_TBL(%XST) = %_MOVCH;

  16484 11 002034   000021 235007                    LDA     17,DL
        11 002035   200122 755100                    STA     STATE_TBL+7,,AUTO

     1509    16485    3              STATE_TBL(%X9) = %_MOVCH;

  16485 11 002036   200133 755100                    STA     STATE_TBL+16,,AUTO

     1510    16486    3              END;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:180  

  16486 11 002037   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:181  
     1512    16488    2         CASE(%_1STPM);

     1513    16489          /*D* CASE(%_1STPM)
     1514    16490             An initial '+' or '-' has been found.  If CNT is > 1, then this
     1515    16491             is clearing floating sign suppression.  In this case suppression
     1516    16492             is started (which invalidate all other kinds of suppression).
     1517    16493             Mops are generated to move an appropriate number of characters.
     1518    16494             If CNT = 1, then this still may be floating suppression.  For
     1519    16495             example, '$,$$$,$$$'.  This case is detected with a special scan
     1520    16496             of the succeeding characters in the picture.  Appropriate action
     1521    16497             is taken depending on the result of the scan.
     1522    16498          */
     1523    16499    2           L = %XPL + %XMI - CURR_CH;

  16499 11 002040   000007 236007                    LDQ     7,DL
        11 002041   200147 136100                    SBLQ    CURR_CH,,AUTO
        11 002042   200153 756100                    STQ     L,,AUTO

     1524    16500    2           CNT = CNT - 1;

  16500 11 002043   200111 235100                    LDA     CNT,,AUTO
        11 002044   000001 135007                    SBLA    1,DL
        11 002045   200111 755100                    STA     CNT,,AUTO

     1525    16501    3           IF CNT ~= 0 THEN DO;

  16501 11 002046   002075 600000 11                 TZE     s:16515

     1526    16502    3   ITS_FLOAT_PM: ;

  16502 11 002047                       ITS_FLOAT_PM null
     1527    16503    3              CALL SUP_START ALTRET(ERR_ROUTINE);

  16503 11 002047   000436 701000 11                 TSX1    SUP_START
        11 002050   004072 702000 11                 TSX2    ERR_ROUTINE

     1528    16504    3              IF CNT ~= 0 THEN
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:182  

  16504 11 002051   200111 235100                    LDA     CNT,,AUTO
        11 002052   002055 600000 11                 TZE     s:16506

     1529    16505    3                 CALL SUP_MOVE ALTRET(ERR_ROUTINE);

  16505 11 002053   000610 701000 11                 TSX1    SUP_MOVE
        11 002054   004072 702000 11                 TSX2    ERR_ROUTINE

     1530    16506    3              ENF_NEEDED = '1'B;

  16506 11 002055   400000 236003                    LDQ     -131072,DU
        11 002056   200163 756100                    STQ     ENF_NEEDED,,AUTO

     1531    16507    3              STATE_TBL(CURR_CH) = %_SUPPRESSION;

  16507 11 002057   000025 235007                    LDA     21,DL
        11 002060   200147 720100                    LXL0    CURR_CH,,AUTO
        11 002061   200113 755110                    STA     STATE_TBL,X0,AUTO

     1532    16508    3              SUP = CURR_CH;

  16508 11 002062   200147 235100                    LDA     CURR_CH,,AUTO
        11 002063   200164 755100                    STA     SUP,,AUTO

     1533    16509    3              STATE_TBL(%XE) = %E$ILL_CHAR_FOR_NE_PIC;

  16509 11 002064   000725 235007                    LDA     469,DL
        11 002065   200127 755100                    STA     STATE_TBL+12,,AUTO

     1534    16510    3              TYPE = %PIC_TY_NE;

  16510 11 002066   000006 235007                    LDA     6,DL
        11 002067   200166 755100                    STA     TYPE,,AUTO

     1535    16511    3              POSS_TY = %POSS_TY_NE;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:183  
  16511 11 002070   010000 236003                    LDQ     4096,DU
        11 002071   200167 756100                    STQ     POSS_TY,,AUTO

     1536    16512    3              EIS_TYPE = %PIC_EIS_LSTS;

  16512 11 002072   000005 235007                    LDA     5,DL
        11 002073   200175 755100                    STA     EIS_TYPE,,AUTO

     1537    16513    3              END;

  16513 11 002074   002141 710000 11                 TRA     s:16542

     1538    16514    3           ELSE DO;

     1539    16515    3              SPCL_SUP.S(CURR_CH) = %_FLOAT;

  16515 11 002075   200147 235100                    LDA     CURR_CH,,AUTO
        11 002076   000005 101400                    MRL     fill='000'O
        11 002077   000015 000004 12                 ADSC9   13                       cn=0,n=4
        11 002100   000010 000001 10                 ADSC9   SPCL_SUP,A               cn=0,n=1

     1540    16516    3              CALL SEARCH(I,STATE,SPCL_SUP,CH,NEXT_S);

  16516 11 002101   200112 721100                    LXL1    NEXT_S,,AUTO
        11 002102   777376 621011                    EAX1    -258,X1
        11 002103   777777 661003                    ERX1    -1,DU
        11 002104   200112 236100                    LDQ     NEXT_S,,AUTO
        11 002105   000000 164546                    TCT
        11 002106   200006 000011                    ADSC9   CH,Q,AUTO                cn=0,n=*X1
        11 002107   000010 000000 10                 ARG     SPCL_SUP
        11 002110   200152 000100                    ARG     I,,AUTO
        11 002111   200152 235100                    LDA     I,,AUTO
        11 002112   000033 771000                    ARL     27
        11 002113   200144 755100                    STA     STATE,,AUTO
        11 002114   200152 551140                    STBA    I,'40'O,AUTO
        11 002115   200152 056100                    ASQ     I,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:184  
     1541    16517    3              SPCL_SUP.S(CURR_CH) = %_FIXED;

  16517 11 002116   200147 235100                    LDA     CURR_CH,,AUTO
        11 002117   000005 101400                    MRL     fill='000'O
        11 002120   000012 000004 12                 ADSC9   10                       cn=0,n=4
        11 002121   000010 000001 10                 ADSC9   SPCL_SUP,A               cn=0,n=1

     1542    16518    3              IF STATE = %_FLOAT THEN GOTO ITS_FLOAT_PM;

  16518 11 002122   200144 235100                    LDA     STATE,,AUTO
        11 002123   000002 115007                    CMPA    2,DL
        11 002124   002047 600000 11                 TZE     ITS_FLOAT_PM

     1543    16519    3              IF S ~= 0 THEN

  16519 11 002125   200110 235100                    LDA     S,,AUTO
        11 002126   002132 600000 11                 TZE     s:16538

     1544    16520                      %ERR(CODE=%E$LDG_SIGN_MUST_BE_FIRST);

  16523 11 002127   000733 235007                    LDA     475,DL
        11 002130   200144 755100                    STA     STATE,,AUTO

  16527 11 002131   004072 710000 11                 TRA     ERR_ROUTINE

     1545    16538    3              CALL EMIT_PM$ ALTRET(ERR_ROUTINE);

  16538 11 002132   000732 701000 11                 TSX1    EMIT_PM$
        11 002133   004072 702000 11                 TSX2    ERR_ROUTINE

     1546    16539    3              STATE_TBL(CURR_CH) = %E$ONLY_ONE_SIGN_PER_PIC;

  16539 11 002134   000714 235007                    LDA     460,DL
        11 002135   200147 720100                    LXL0    CURR_CH,,AUTO
        11 002136   200113 755110                    STA     STATE_TBL,X0,AUTO

     1547    16540    3              EIS_TYPE = %PIC_EIS_LS;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:185  

  16540 11 002137   000001 236007                    LDQ     1,DL
        11 002140   200175 756100                    STQ     EIS_TYPE,,AUTO

     1548    16541    3              END;

     1549    16542    2           STATE_TBL(%XCR) = %E$ONLY_ONE_SIGN_PER_PIC;

  16542 11 002141   000714 235007                    LDA     460,DL
        11 002142   200113 755100                    STA     STATE_TBL,,AUTO

     1550    16543    2           STATE_TBL(%XDB) = %E$ONLY_ONE_SIGN_PER_PIC;

  16543 11 002143   200114 755100                    STA     STATE_TBL+1,,AUTO

     1551    16544    2           STATE_TBL(L)    = %E$ONLY_ONE_SIGN_PER_PIC;

  16544 11 002144   200153 721100                    LXL1    L,,AUTO
        11 002145   200113 755111                    STA     STATE_TBL,X1,AUTO
        11 002146   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:186  
     1553    16546    2         CASE(%_1ST$);

     1554    16547          /*D* CASE(%_1ST$)
     1555    16548             An initial '$' has been found.  The logic here is identical to
     1556    16549             that in %_1STPM state except there are no implications about the
     1557    16550             sign control.
     1558    16551          */
     1559    16552    2           CNT = CNT - 1;

  16552 11 002147   200111 236100                    LDQ     CNT,,AUTO
        11 002150   000001 136007                    SBLQ    1,DL
        11 002151   200111 756100                    STQ     CNT,,AUTO

     1560    16553    3           IF CNT ~= 0 THEN DO;

  16553 11 002152   002176 600000 11                 TZE     s:16567

  16552 11 002153                       ITS_FLOAT_$  null
     1561    16554    3   ITS_FLOAT_$: ;
     1562    16555    3              CALL SUP_START ALTRET(ERR_ROUTINE);

  16555 11 002153   000436 701000 11                 TSX1    SUP_START
        11 002154   004072 702000 11                 TSX2    ERR_ROUTINE

     1563    16556    3              IF CNT ~= 0 THEN

  16556 11 002155   200111 235100                    LDA     CNT,,AUTO
        11 002156   002161 600000 11                 TZE     s:16558

     1564    16557    3                 CALL SUP_MOVE ALTRET(ERR_ROUTINE);

  16557 11 002157   000610 701000 11                 TSX1    SUP_MOVE
        11 002160   004072 702000 11                 TSX2    ERR_ROUTINE

     1565    16558    3              ENF_NEEDED = '1'B;

  16558 11 002161   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:187  
        11 002162   200163 756100                    STQ     ENF_NEEDED,,AUTO

     1566    16559    3              STATE_TBL(%X$)  = %_SUPPRESSION;

  16559 11 002163   000025 235007                    LDA     21,DL
        11 002164   200120 755100                    STA     STATE_TBL+5,,AUTO

     1567    16560    4              IF STATE_TBL(%XPL) = %_1STPM THEN DO;

  16560 11 002165   200116 235100                    LDA     STATE_TBL+3,,AUTO
        11 002166   000003 115007                    CMPA    3,DL
        11 002167   002173 601000 11                 TNZ     s:16564

     1568    16561    4                 STATE_TBL(%XPL) = %_FIXPM;

  16561 11 002170   000024 235007                    LDA     20,DL
        11 002171   200116 755100                    STA     STATE_TBL+3,,AUTO

     1569    16562    4                 STATE_TBL(%XMI) = %_FIXPM;

  16562 11 002172   200117 755100                    STA     STATE_TBL+4,,AUTO

     1570    16563    4                 END;

     1571    16564    3              SUP = %X$;

  16564 11 002173   000005 235007                    LDA     5,DL
        11 002174   200164 755100                    STA     SUP,,AUTO

     1572    16565    3              END;

  16565 11 002175   004071 710000 11                 TRA     s:19176

     1573    16566    3           ELSE DO;

     1574    16567    3              SPCL_SUP.S(%X$) = %_FLOAT;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:188  
  16567 11 002176   000002 236003                    LDQ     2,DU
        11 002177   000011 552020 10                 STBQ    SPCL_SUP+1,'20'O

     1575    16568    3              CALL SEARCH(I,STATE,SPCL_SUP,CH,NEXT_S);

  16568 11 002200   200112 721100                    LXL1    NEXT_S,,AUTO
        11 002201   777376 621011                    EAX1    -258,X1
        11 002202   777777 661003                    ERX1    -1,DU
        11 002203   200112 236100                    LDQ     NEXT_S,,AUTO
        11 002204   000000 164546                    TCT
        11 002205   200006 000011                    ADSC9   CH,Q,AUTO                cn=0,n=*X1
        11 002206   000010 000000 10                 ARG     SPCL_SUP
        11 002207   200152 000100                    ARG     I,,AUTO
        11 002210   200152 235100                    LDA     I,,AUTO
        11 002211   000033 771000                    ARL     27
        11 002212   200144 755100                    STA     STATE,,AUTO
        11 002213   200152 551140                    STBA    I,'40'O,AUTO
        11 002214   200152 056100                    ASQ     I,,AUTO

     1576    16569    3              SPCL_SUP.S(%X$) = %_FIXED;

  16569 11 002215   000001 236003                    LDQ     1,DU
        11 002216   000011 552020 10                 STBQ    SPCL_SUP+1,'20'O

     1577    16570    3              IF STATE = %_FLOAT THEN GOTO ITS_FLOAT_$;

  16570 11 002217   000002 115007                    CMPA    2,DL
        11 002220   002153 600000 11                 TZE     ITS_FLOAT_$

     1578    16571    3              IF ES_ON THEN

  16571 11 002221   200162 234100                    SZN     ES_ON,,AUTO
        11 002222   002251 605000 11                 TPL     s:16672

     1579    16572                        %ASSIGN_MOP(OP1=SES,ES1=OFF);

  16623 11 002223   200146 235100                    LDA     MOP_L,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:189  
        11 002224   000001 035007                    ADLA    1,DL
        11 002225   200146 755100                    STA     MOP_L,,AUTO

  16624 11 002226   200146 236100                    LDQ     MOP_L,,AUTO
        11 002227   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 002230   002234 602000 11                 TNC     s:16631

  16627 11 002231   200146 450100                    STZ     MOP_L,,AUTO

  16628 11 002232   200145 450100                    STZ     MOP_L_MAX,,AUTO

  16629 11 002233   000000 702200 xent               TSX2  ! X66_ARET

  16631 11 002234   000000 116003                    CMPQ    0,DU
        11 002235   002251 600000 11                 TZE     s:16672

  16635 11 002236   200162 450100                    STZ     ES_ON,,AUTO

  16639 11 002237   200165 235100                    LDA     BZ_MOP,,AUTO
        11 002240   000001 115000 12                 CMPA    1
        11 002241   002244 601000 11                 TNZ     s:16664

  16639 11 002242   000001 136007                    SBLQ    1,DL
        11 002243   200165 756100                    STQ     BZ_MOP,,AUTO

  16664 11 002244   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 002245   200146 235100                    LDA     MOP_L,,AUTO
        11 002246   040105 100400                    MLR     fill='040'O
        11 002247   000002 000001 12                 ADSC9   2                        cn=0,n=1
        11 002250   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

     1580    16672    3              CALL EMIT_PM$ ALTRET(ERR_ROUTINE);

  16672 11 002251   000732 701000 11                 TSX1    EMIT_PM$
        11 002252   004072 702000 11                 TSX2    ERR_ROUTINE

     1581    16673    3              STATE_TBL(%X$)  = %E$CHAR_ONLY_APPEAR_ONCE;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:190  

  16673 11 002253   000711 235007                    LDA     457,DL
        11 002254   200120 755100                    STA     STATE_TBL+5,,AUTO

     1582    16674    3              END;

  16674 11 002255   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:191  
     1584    16676    2         CASE(%_1STSU);

     1585    16677          /*D* CASE(%_1STSU)
     1586    16678             An initial 'Z' or '*' has been found.  Setup the appropriate
     1587    16679             suppression bookeeping.  Note also that only fixed '+' or '-'
     1588    16680             are now legal.
     1589    16681          */
     1590    16682        /* V*   IF STATE_TBL(%XPT) = %E$CHAR_ONLY_APPEAR_ONCE THEN
     1591    16683                  DO;
     1592    16684                    STATE_TBL(%XZ) = %E$SUPRESS_NOT_LEGAL_HERE;
     1593    16685                    STATE_TBL(%XPL)= %_FIXPM;
     1594    16686                    STATE_TBL(%XMI)= %_FIXPM;
     1595    16687
     1596    16688                    CALL MOVE_CHAR ALTRET (ERR_ROUTINE);
     1597    16689                  END;
     1598    16690                ELSE
     1599    16691                  DO; */
     1600    16692    2               L = %XZ + %XST - CURR_CH;

  16692 11 002256   000015 236007                    LDQ     13,DL
        11 002257   200147 136100                    SBLQ    CURR_CH,,AUTO
        11 002260   200153 756100                    STQ     L,,AUTO

     1601    16693    2               CALL SUP_START ALTRET(ERR_ROUTINE);

  16693 11 002261   000436 701000 11                 TSX1    SUP_START
        11 002262   004072 702000 11                 TSX2    ERR_ROUTINE

     1602    16694    2               CALL SUP_MOVE ALTRET(ERR_ROUTINE);

  16694 11 002263   000610 701000 11                 TSX1    SUP_MOVE
        11 002264   004072 702000 11                 TSX2    ERR_ROUTINE

     1603    16695    2               STATE_TBL(CURR_CH) = %_SUPPRESSION;

  16695 11 002265   000025 235007                    LDA     21,DL
        11 002266   200147 720100                    LXL0    CURR_CH,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:192  
        11 002267   200113 755110                    STA     STATE_TBL,X0,AUTO

     1604    16696    3               IF STATE_TBL(%XPL) = %_1STPM THEN DO;

  16696 11 002270   200116 236100                    LDQ     STATE_TBL+3,,AUTO
        11 002271   000003 116007                    CMPQ    3,DL
        11 002272   002276 601000 11                 TNZ     s:16700

     1605    16697    3                  STATE_TBL(%XPL) = %_FIXPM;

  16697 11 002273   000024 235007                    LDA     20,DL
        11 002274   200116 755100                    STA     STATE_TBL+3,,AUTO

     1606    16698    3                  STATE_TBL(%XMI) = %_FIXPM;

  16698 11 002275   200117 755100                    STA     STATE_TBL+4,,AUTO

     1607    16699    3                  END;

     1608    16700    2               IF CURR_CH = %XST THEN

  16700 11 002276   200147 235100                    LDA     CURR_CH,,AUTO
        11 002277   000007 115007                    CMPA    7,DL
        11 002300   002303 601000 11                 TNZ     s:16702

     1609    16701    2                  STATE_TBL(%XB) = %_ST_B;

  16701 11 002301   000011 236007                    LDQ     9,DL
        11 002302   200134 756100                    STQ     STATE_TBL+17,,AUTO

     1610    16702    2               SUP = CURR_CH;

  16702 11 002303   200164 755100                    STA     SUP,,AUTO
        11 002304   004071 710000 11                 TRA     s:19176

     1611    16703        /* V*     END; */

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:193  
     1613    16705    2         CASE(%_LT_S);

     1614    16706          /*D* CASE(%_LT_S)
     1615    16707             A 'S' which must be the first character of the picture has
     1616    16708             been found.
     1617    16709          */
     1618    16710    2           IF S ~= 0 THEN

  16710 11 002305   200110 236100                    LDQ     S,,AUTO
        11 002306   002312 600000 11                 TZE     s:16729

     1619    16711                   %ERR(CODE=%E$LDG_S_MUST_BE_FIRST);

  16714 11 002307   000734 235007                    LDA     476,DL
        11 002310   200144 755100                    STA     STATE,,AUTO

  16718 11 002311   004072 710000 11                 TRA     ERR_ROUTINE

     1620    16729    2           CURR_CH = %XPL;

  16729 11 002312   000003 235007                    LDA     3,DL
        11 002313   200147 755100                    STA     CURR_CH,,AUTO

     1621    16730    2           CALL EMIT_PM$ ALTRET(ERR_ROUTINE);

  16730 11 002314   000732 701000 11                 TSX1    EMIT_PM$
        11 002315   004072 702000 11                 TSX2    ERR_ROUTINE

     1622    16731    2           CURR_CH = %XS;

  16731 11 002316   000011 235007                    LDA     9,DL
        11 002317   200147 755100                    STA     CURR_CH,,AUTO

     1623    16732    2           NEXT_S = S + 1;

  16732 11 002320   200110 236100                    LDQ     S,,AUTO
        11 002321   000001 036007                    ADLQ    1,DL
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:194  
        11 002322   200112 756100                    STQ     NEXT_S,,AUTO

     1624    16733    2           STATE_TBL(%XS) = %E$CHAR_ONLY_APPEAR_ONCE;

  16733 11 002323   000711 235007                    LDA     457,DL
        11 002324   200124 755100                    STA     STATE_TBL+9,,AUTO

     1625    16734    2           EIS_TYPE = %PIC_EIS_LS;

  16734 11 002325   000001 235007                    LDA     1,DL
        11 002326   200175 755100                    STA     EIS_TYPE,,AUTO
        11 002327   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:195  
     1627    16736    2         CASE(%_P);

     1628    16737          /*D* CASE(%_P)
     1629    16738             A 'P' has been found.  This state enforces the complicated
     1630    16739             rules related to 'P' in pictures.
     1631    16740          */
     1632    16741    2           CALL INDEX(I,SUBSTR(CH,0,1),P_TEST_STR);

  16741 11 002330   000100 124400                    SCM     mask='000'O
        11 002331   000127 000005 9                  ADSC9   P_TEST_STR_INIT          cn=0,n=5
        11 002332   200006 000001                    ADSC9   CH,,AUTO                 cn=0,n=1
        11 002333   200152 000100                    ARG     I,,AUTO

     1633    16742    3           IF S = 0 OR (DIGITS = 0 AND I ~= 5) THEN DO;

  16742 11 002334   200110 236100                    LDQ     S,,AUTO
        11 002335   002343 600000 11                 TZE     s:16743
        11 002336   200155 235100                    LDA     DIGITS,,AUTO
        11 002337   002363 601000 11                 TNZ     s:16753
        11 002340   200152 235100                    LDA     I,,AUTO
        11 002341   000005 115007                    CMPA    5,DL
        11 002342   002363 600000 11                 TZE     s:16753

     1634    16743    3              IF STATE_TBL(%XV) ~= %E$CHAR_ONLY_APPEAR_ONCE THEN

  16743 11 002343   200126 235100                    LDA     STATE_TBL+11,,AUTO
        11 002344   000711 115007                    CMPA    457,DL
        11 002345   002350 600000 11                 TZE     s:16745

     1635    16744    3                 STATE_TBL(%XV) = %E$V_ILL_AFTER_LDG_P;

  16744 11 002346   000735 235007                    LDA     477,DL
        11 002347   200126 755100                    STA     STATE_TBL+11,,AUTO

     1636    16745    3              SCALE = -CNT;

  16745 11 002350   000000 235003                    LDA     0,DU
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:196  
        11 002351   200111 135100                    SBLA    CNT,,AUTO
        11 002352   200161 755100                    STA     SCALE,,AUTO

     1637    16746    3              LEFT = 0;

  16746 11 002353   200160 450100                    STZ     LEFT,,AUTO

     1638    16747    4              IF STATE_TBL(%XPL) = %_1STPM THEN DO;

  16747 11 002354   200116 235100                    LDA     STATE_TBL+3,,AUTO
        11 002355   000003 115007                    CMPA    3,DL
        11 002356   002407 601000 11                 TNZ     s:16784

     1639    16748    4                 STATE_TBL(%XPL) = %_FIXPM;

  16748 11 002357   000024 235007                    LDA     20,DL
        11 002360   200116 755100                    STA     STATE_TBL+3,,AUTO

     1640    16749    4                 STATE_TBL(%XMI) = %_FIXPM;

  16749 11 002361   200117 755100                    STA     STATE_TBL+4,,AUTO

     1641    16750    4                 END;

     1642    16751    3              END;

  16751 11 002362   002407 710000 11                 TRA     s:16784

     1643    16752    3           ELSE DO;

     1644    16753    3              IF STATE_TBL(%XV) = %E$CHAR_ONLY_APPEAR_ONCE THEN

  16753 11 002363   200126 235100                    LDA     STATE_TBL+11,,AUTO
        11 002364   000711 115007                    CMPA    457,DL
        11 002365   002371 601000 11                 TNZ     s:16772

     1645    16754                      %ERR(CODE=%E$TRL_P_ILL_AFTER_V);
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:197  

  16757 11 002366   000736 235007                    LDA     478,DL
        11 002367   200144 755100                    STA     STATE,,AUTO

  16761 11 002370   004072 710000 11                 TRA     ERR_ROUTINE

     1646    16772    3              LEFT = DIGITS;

  16772 11 002371   200155 235100                    LDA     DIGITS,,AUTO
        11 002372   200160 755100                    STA     LEFT,,AUTO

     1647    16773    3              DIGITS = 0;

  16773 11 002373   200155 450100                    STZ     DIGITS,,AUTO

     1648    16774    3              SCALE = CNT;

  16774 11 002374   200111 235100                    LDA     CNT,,AUTO
        11 002375   200161 755100                    STA     SCALE,,AUTO

     1649    16775    3              STATE_TBL(%X$)  = %E$CHAR_ILL_AFTER_P;

  16775 11 002376   000737 235007                    LDA     479,DL
        11 002377   200120 755100                    STA     STATE_TBL+5,,AUTO

     1650    16776    3              STATE_TBL(%XZ)  = %E$CHAR_ILL_AFTER_P;

  16776 11 002400   200121 755100                    STA     STATE_TBL+6,,AUTO

     1651    16777    3              STATE_TBL(%XST) = %E$CHAR_ILL_AFTER_P;

  16777 11 002401   200122 755100                    STA     STATE_TBL+7,,AUTO

     1652    16778    3              STATE_TBL(%XCM) = %E$CHAR_ILL_AFTER_P;

  16778 11 002402   200123 755100                    STA     STATE_TBL+8,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:198  
     1653    16779    3              STATE_TBL(%X0)  = %E$CHAR_ILL_AFTER_P;

  16779 11 002403   200130 755100                    STA     STATE_TBL+13,,AUTO

     1654    16780    3              STATE_TBL(%XSL) = %E$CHAR_ILL_AFTER_P;

  16780 11 002404   200131 755100                    STA     STATE_TBL+14,,AUTO

     1655    16781    3              STATE_TBL(%XB)  = %E$CHAR_ILL_AFTER_P;

  16781 11 002405   200134 755100                    STA     STATE_TBL+17,,AUTO

     1656    16782    3              STATE_TBL(%X9)  = %E$CHAR_ILL_AFTER_P;

  16782 11 002406   200133 755100                    STA     STATE_TBL+16,,AUTO

     1657    16783    3              END;

     1658    16784    2           IF POSS_TY.NE THEN

  16784 11 002407   200167 236100                    LDQ     POSS_TY,,AUTO
        11 002410   010000 316003                    CANQ    4096,DU
        11 002411   002414 600000 11                 TZE     s:16786

     1659    16785    2              STATE_TBL(%XPT) = %E$DOT_AND_P_IN_SAME_PIC;

  16785 11 002412   000717 235007                    LDA     463,DL
        11 002413   200115 755100                    STA     STATE_TBL+2,,AUTO

     1660    16786    2           STATE_TBL(%XP)  = %E$CHAR_ONLY_APPEAR_ONCE;

  16786 11 002414   000711 235007                    LDA     457,DL
        11 002415   200125 755100                    STA     STATE_TBL+10,,AUTO
        11 002416   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:199  
     1662    16788    2         CASE(%_V);

     1663    16789          /*D* CASE(%_V)
     1664    16790             A 'V' was detected.  Set the number of digits to the LEFT of the
     1665    16791             decimal point.  Enable the 'E' state if a numeric float is
     1666    16792             possible.
     1667    16793          */
     1668    16794    2           LEFT = DIGITS;

  16794 11 002417   200155 236100                    LDQ     DIGITS,,AUTO
        11 002420   200160 756100                    STQ     LEFT,,AUTO

     1669    16795    2           DIGITS = 0;

  16795 11 002421   200155 450100                    STZ     DIGITS,,AUTO

     1670    16796    2           NEXT_S = S + 1;

  16796 11 002422   200110 235100                    LDA     S,,AUTO
        11 002423   000001 035007                    ADLA    1,DL
        11 002424   200112 755100                    STA     NEXT_S,,AUTO

     1671    16797    2           IF POSS_TY.NE THEN

  16797 11 002425   200167 236100                    LDQ     POSS_TY,,AUTO
        11 002426   010000 316003                    CANQ    4096,DU
        11 002427   002432 600000 11                 TZE     s:16799

     1672    16798    2              STATE_TBL(%XPT) = %E$V_AND_DOT_IN_SAME_PIC;

  16798 11 002430   000712 235007                    LDA     458,DL
        11 002431   200115 755100                    STA     STATE_TBL+2,,AUTO

     1673    16799    2           STATE_TBL(%XV)  = %E$CHAR_ONLY_APPEAR_ONCE;

  16799 11 002432   000711 235007                    LDA     457,DL
        11 002433   200126 755100                    STA     STATE_TBL+11,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:200  

     1674    16800    2           IF POSS_TY.NF THEN

  16800 11 002434   004000 316003                    CANQ    2048,DU
        11 002435   004071 600000 11                 TZE     s:19176

     1675    16801    2              STATE_TBL(%XE) = %_E;

  16801 11 002436   000020 235007                    LDA     16,DL
        11 002437   200127 755100                    STA     STATE_TBL+12,,AUTO
        11 002440   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:201  
     1677    16803    2         CASE(%_E);

     1678    16804          /*D* CASE(%_E)
     1679    16805             A 'E' was detected.  This must be a float numeric or numeric
     1680    16806             edited picture.  Determine which it is.  Setup the STATE_TBL
     1681    16807             to scan off the EXRAD which must immediately follow.
     1682    16808          */
     1683    16809    2           NEXT_S = S + 2;

  16809 11 002441   200110 236100                    LDQ     S,,AUTO
        11 002442   000002 036007                    ADLQ    2,DL
        11 002443   200112 756100                    STQ     NEXT_S,,AUTO

     1684    16810    2           S = S + 1;

  16810 11 002444   200110 235100                    LDA     S,,AUTO
        11 002445   000001 035007                    ADLA    1,DL
        11 002446   200110 755100                    STA     S,,AUTO

     1685    16811    2           POSS_TY = POSS_TY & %POSS_TY_FLT;

  16811 11 002447   200167 236100                    LDQ     POSS_TY,,AUTO
        11 002450   776000 376003                    ANQ     -1024,DU
        11 002451   006000 376003                    ANQ     3072,DU
        11 002452   200167 756100                    STQ     POSS_TY,,AUTO

     1686    16812    3           DO CASE(BITBIN(POSS_TY));

  16812 11 002453   200167 236100                    LDQ     POSS_TY,,AUTO
        11 002454   000034 772000                    QRL     28
        11 002455   000004 116007                    CMPQ    4,DL
        11 002456   002460 602006 11                 TNC     s:16812+5,QL
        11 002457   002521 710000 11                 TRA     s:16876
        11 002460   002464 710000 11                 TRA     s:16817
        11 002461   002467 710000 11                 TRA     s:16833
        11 002462   002503 710000 11                 TRA     s:16854
        11 002463   002503 710000 11                 TRA     s:16854
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:202  

     1687    16813    3            CASE(0);

     1688    16814                   %ERR(CODE=%E$BAD_NUM_PIC_TYPE);

  16817 11 002464   001625 235007                    LDA     917,DL
        11 002465   200144 755100                    STA     STATE,,AUTO

  16821 11 002466   004072 710000 11                 TRA     ERR_ROUTINE

     1689    16832    3            CASE(1);

     1690    16833    3              TYPE = %PIC_TY_NFE;

  16833 11 002467   000010 235007                    LDA     8,DL
        11 002470   200166 755100                    STA     TYPE,,AUTO

     1691    16834    3              IF ASCBIN(SUBSTR(CH,S,1)) ~= %XPL THEN

  16834 11 002471   200110 235100                    LDA     S,,AUTO
        11 002472   000100 101505                    MRL     fill='000'O
        11 002473   200006 000001                    ADSC9   CH,A,AUTO                cn=0,n=1
        11 002474   200210 000004                    ADSC9   MOP_N#+2,,AUTO           cn=0,n=4
        11 002475   200210 236100                    LDQ     MOP_N#+2,,AUTO
        11 002476   000003 116007                    CMPQ    3,DL
        11 002477   002521 600000 11                 TZE     s:16876

     1692    16835                      %ERR(CODE=%E$PLUS_EXPECTED_AFTER_E);

  16838 11 002500   000740 236007                    LDQ     480,DL
        11 002501   200144 756100                    STQ     STATE,,AUTO

  16842 11 002502   004072 710000 11                 TRA     ERR_ROUTINE

     1693    16853    3            CASE(2,3);

     1694    16854    3              POSS_TY = %POSS_TY_NF;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:203  

  16854 11 002503   004000 236003                    LDQ     2048,DU
        11 002504   200167 756100                    STQ     POSS_TY,,AUTO

     1695    16855    3              TYPE = %PIC_TY_NF;

  16855 11 002505   000007 235007                    LDA     7,DL
        11 002506   200166 755100                    STA     TYPE,,AUTO

     1696    16856    3              IF ASCBIN(SUBSTR(CH,S,1)) ~= %XS THEN

  16856 11 002507   200110 235100                    LDA     S,,AUTO
        11 002510   000100 101505                    MRL     fill='000'O
        11 002511   200006 000001                    ADSC9   CH,A,AUTO                cn=0,n=1
        11 002512   200210 000004                    ADSC9   MOP_N#+2,,AUTO           cn=0,n=4
        11 002513   200210 236100                    LDQ     MOP_N#+2,,AUTO
        11 002514   000011 116007                    CMPQ    9,DL
        11 002515   002521 600000 11                 TZE     s:16876

     1697    16857                      %ERR(CODE=%E$SIGN_EXPECTED_AFTER_E);

  16860 11 002516   000741 236007                    LDQ     481,DL
        11 002517   200144 756100                    STQ     STATE,,AUTO

  16864 11 002520   004072 710000 11                 TRA     ERR_ROUTINE

     1698    16875    3            END; /*DO CASE*/

     1699    16876    2           STATE_TBL = EXRAD_ONLY;

  16876 11 002521   000100 100400                    MLR     fill='000'O
        11 002522   000042 000144 9                  ADSC9   EXRAD_ONLY               cn=0,n=100
        11 002523   200113 000144                    ADSC9   STATE_TBL,,AUTO          cn=0,n=100

     1700    16877    2           SCALE = -DIGITS;

  16877 11 002524   200155 336100                    LCQ     DIGITS,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:204  
        11 002525   200161 756100                    STQ     SCALE,,AUTO

     1701    16878    2           DIGITS = 0;

  16878 11 002526   200155 450100                    STZ     DIGITS,,AUTO

     1702    16879    2           WIDTH = WIDTH + 1;

  16879 11 002527   200157 054100                    AOS     WIDTH,,AUTO

     1703    16880    3           IF MOP_L_MAX ~= 0 THEN DO;

  16880 11 002530   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 002531   002603 600000 11                 TZE     s:17083

     1704    16881    3              IF NOT ES_ON THEN

  16881 11 002532   200162 234100                    SZN     ES_ON,,AUTO
        11 002533   002564 604000 11                 TMI     s:17033

     1705    16882                      %ASSIGN_MOP(OP1=SES,ES1=ON);

  16933 11 002534   200146 235100                    LDA     MOP_L,,AUTO
        11 002535   000001 035007                    ADLA    1,DL
        11 002536   200146 755100                    STA     MOP_L,,AUTO

  16934 11 002537   200146 236100                    LDQ     MOP_L,,AUTO
        11 002540   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 002541   002545 602000 11                 TNC     s:16941

  16937 11 002542   200146 450100                    STZ     MOP_L,,AUTO

  16938 11 002543   200145 450100                    STZ     MOP_L_MAX,,AUTO

  16939 11 002544   000000 702200 xent               TSX2  ! X66_ARET

  16941 11 002545   000000 116003                    CMPQ    0,DU
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:205  
        11 002546   002564 600000 11                 TZE     s:17033

  16947 11 002547   400000 236003                    LDQ     -131072,DU
        11 002550   200162 756100                    STQ     ES_ON,,AUTO

  16949 11 002551   200165 235100                    LDA     BZ_MOP,,AUTO
        11 002552   000001 115000 12                 CMPA    1
        11 002553   002557 601000 11                 TNZ     s:16974

  16949 11 002554   200146 235100                    LDA     MOP_L,,AUTO
        11 002555   000001 135007                    SBLA    1,DL
        11 002556   200165 755100                    STA     BZ_MOP,,AUTO

  16974 11 002557   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 002560   200146 235100                    LDA     MOP_L,,AUTO
        11 002561   040105 100400                    MLR     fill='040'O
        11 002562   000013 000001 12                 ADSC9   11                       cn=0,n=1
        11 002563   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

     1706    16982                   %ASSIGN_MOP(OP1=INSB,TBL1='E');

  17033 11 002564   200146 235100                    LDA     MOP_L,,AUTO
        11 002565   000002 035007                    ADLA    2,DL
        11 002566   200146 755100                    STA     MOP_L,,AUTO

  17034 11 002567   200146 236100                    LDQ     MOP_L,,AUTO
        11 002570   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 002571   002575 602000 11                 TNC     s:17041

  17037 11 002572   200146 450100                    STZ     MOP_L,,AUTO

  17038 11 002573   200145 450100                    STZ     MOP_L_MAX,,AUTO

  17039 11 002574   000000 702200 xent               TSX2  ! X66_ARET

  17041 11 002575   000000 116003                    CMPQ    0,DU
        11 002576   002603 600000 11                 TZE     s:17083
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:206  

  17074 11 002577   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 002600   040106 100400                    MLR     fill='040'O
        11 002601   000263 000002 9                  ADSC9   SUP_MOVE_OPS+14          cn=0,n=2
        11 002602   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1707    17082    3              END;

     1708    17083    2           EIS_TYPE = %PIC_EIS_FLT;

  17083 11 002603   200175 450100                    STZ     EIS_TYPE,,AUTO
        11 002604   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:207  
     1710    17085    2         CASE(%_MOVCH);

     1711    17086          /*D* CASE(%_MOVCH)
     1712    17087             This is a catch-all state used for 'X', 'A', and for '9' when
     1713    17088             suppression is not an involved.
     1714    17089             It just move characters  (Mop op MVC).
     1715    17090          */
     1716    17091    2           IF CURR_CH = %XST THEN

  17091 11 002605   200147 236100                    LDQ     CURR_CH,,AUTO
        11 002606   000007 116007                    CMPQ    7,DL
        11 002607   002614 601000 11                 TNZ     s:17094

     1717    17092    2             PIC_OUT.B.ASTERISK_SUPRESS = TRUE;

  17092 11 002610   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 002611   400000 236007                    LDQ     -131072,DL
        11 002612   000002 256100                    ORSQ    2,,PR0
        11 002613   002617 710000 11                 TRA     s:17096

     1718    17093    2           ELSE
     1719    17094    2             PIC_OUT.B.ASTERISK_SUPRESS = FALSE;

  17094 11 002614   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 002615   000007 236000 12                 LDQ     7
        11 002616   000002 356100                    ANSQ    2,,PR0

     1720    17095
     1721    17096    2           CALL MOVE_CHAR ALTRET(ERR_ROUTINE);

  17096 11 002617   001051 701000 11                 TSX1    MOVE_CHAR
        11 002620   004072 702000 11                 TSX2    ERR_ROUTINE
        11 002621   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:208  
     1723    17098    2         CASE(%_1ST9);

     1724    17099          /*D* CASE(%_1ST9)
     1725    17100             This state is entered when the first '9' is detected and
     1726    17101             a preceeding suppression character hasn't been detected.
     1727    17102             Suppression is now impossible.
     1728    17103          */
     1729    17104    2           IF STATE_TBL(%XS) = %_LT_S THEN

  17104 11 002622   200124 236100                    LDQ     STATE_TBL+9,,AUTO
        11 002623   000015 116007                    CMPQ    13,DL
        11 002624   002627 601000 11                 TNZ     s:17106

     1730    17105    2              STATE_TBL(%XS) = %_FIXPM;

  17105 11 002625   000024 235007                    LDA     20,DL
        11 002626   200124 755100                    STA     STATE_TBL+9,,AUTO

     1731    17106    3           IF STATE_TBL(%XPL) = %_1STPM THEN DO;

  17106 11 002627   200116 235100                    LDA     STATE_TBL+3,,AUTO
        11 002630   000003 115007                    CMPA    3,DL
        11 002631   002635 601000 11                 TNZ     s:17110

     1732    17107    3              STATE_TBL(%XPL) = %_FIXPM;

  17107 11 002632   000024 236007                    LDQ     20,DL
        11 002633   200116 756100                    STQ     STATE_TBL+3,,AUTO

     1733    17108    3              STATE_TBL(%XMI) = %_FIXPM;

  17108 11 002634   200117 756100                    STQ     STATE_TBL+4,,AUTO

     1734    17109    3              END;

     1735    17110    2           STATE_TBL(%X$)  = %E$SUPRESS_NOT_LEGAL_HERE;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:209  
  17110 11 002635   000742 235007                    LDA     482,DL
        11 002636   200120 755100                    STA     STATE_TBL+5,,AUTO

     1736    17111    2           STATE_TBL(%XZ)  = %E$SUPRESS_NOT_LEGAL_HERE;

  17111 11 002637   200121 755100                    STA     STATE_TBL+6,,AUTO

     1737    17112    2           STATE_TBL(%XST) = %E$SUPRESS_NOT_LEGAL_HERE;

  17112 11 002640   200122 755100                    STA     STATE_TBL+7,,AUTO

     1738    17113    2           STATE_TBL(%X9)  = %_MOVCH;

  17113 11 002641   000021 236007                    LDQ     17,DL
        11 002642   200133 756100                    STQ     STATE_TBL+16,,AUTO

     1739    17114    2           CALL MOVE_CHAR ALTRET(ERR_ROUTINE);

  17114 11 002643   001051 701000 11                 TSX1    MOVE_CHAR
        11 002644   004072 702000 11                 TSX2    ERR_ROUTINE
        11 002645   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:210  
     1741    17116    2         CASE(%_LT_9);

     1742    17117          /*D* CASE(%_LT_9)
     1743    17118             This state is entered when the first '9' is detected after
     1744    17119             encountering a suppression character.  Suppression ends here.
     1745    17120          */
     1746    17121    3           IF STATE_TBL(%XPL) ~= %_FIXPM THEN DO;

  17121 11 002646   200116 236100                    LDQ     STATE_TBL+3,,AUTO
        11 002647   000024 116007                    CMPQ    20,DL
        11 002650   002654 600000 11                 TZE     s:17125

     1747    17122    3              STATE_TBL(%XPL) = %E$SUPRESS_NOT_LEGAL_HERE;

  17122 11 002651   000742 235007                    LDA     482,DL
        11 002652   200116 755100                    STA     STATE_TBL+3,,AUTO

     1748    17123    3              STATE_TBL(%XMI) = %E$SUPRESS_NOT_LEGAL_HERE;

  17123 11 002653   200117 755100                    STA     STATE_TBL+4,,AUTO

     1749    17124    3              END;

     1750    17125    2           STATE_TBL(%X$)  = %E$SUPRESS_NOT_LEGAL_HERE;

  17125 11 002654   000742 235007                    LDA     482,DL
        11 002655   200120 755100                    STA     STATE_TBL+5,,AUTO

     1751    17126    2           STATE_TBL(%XZ)  = %E$SUPRESS_NOT_LEGAL_HERE;

  17126 11 002656   200121 755100                    STA     STATE_TBL+6,,AUTO

     1752    17127    2           STATE_TBL(%XST) = %E$SUPRESS_NOT_LEGAL_HERE;

  17127 11 002657   200122 755100                    STA     STATE_TBL+7,,AUTO

     1753    17128    2           STATE_TBL(%XCM) = %_FX_CM;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:211  

  17128 11 002660   000006 236007                    LDQ     6,DL
        11 002661   200123 756100                    STQ     STATE_TBL+8,,AUTO

     1754    17129    2           STATE_TBL(%X0)  = %_FX_0;

  17129 11 002662   000007 235007                    LDA     7,DL
        11 002663   200130 755100                    STA     STATE_TBL+13,,AUTO

     1755    17130    2           STATE_TBL(%XSL) = %_FX_SL;

  17130 11 002664   000010 235007                    LDA     8,DL
        11 002665   200131 755100                    STA     STATE_TBL+14,,AUTO

     1756    17131    2           STATE_TBL(%XB)  = %_B_;

  17131 11 002666   000023 235007                    LDA     19,DL
        11 002667   200134 755100                    STA     STATE_TBL+17,,AUTO

     1757    17132    2           CALL TEST_ENF ALTRET(ERR_ROUTINE);

  17132 11 002670   000635 701000 11                 TSX1    TEST_ENF
        11 002671   004072 702000 11                 TSX2    ERR_ROUTINE

     1758    17133    2           SUP = 0;

  17133 11 002672   200164 450100                    STZ     SUP,,AUTO

     1759    17134    2           STATE_TBL(%X9)  = %_MOVCH;

  17134 11 002673   000021 235007                    LDA     17,DL
        11 002674   200133 755100                    STA     STATE_TBL+16,,AUTO

     1760    17135    2           CALL MOVE_CHAR ALTRET(ERR_ROUTINE);

  17135 11 002675   001051 701000 11                 TSX1    MOVE_CHAR
        11 002676   004072 702000 11                 TSX2    ERR_ROUTINE
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:212  
        11 002677   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:213  
     1762    17137    2         CASE(%_B_);

     1763    17138          /*D* CASE(%_B_)
     1764    17139             A 'B' was found.  Note that 'B' is handled the same way whether
     1765    17140             in or out of suppression.  The exception is '*' suppression.
     1766    17141          */
     1767    17142    2           WIDTH = WIDTH + CNT;

  17142 11 002700   200157 236100                    LDQ     WIDTH,,AUTO
        11 002701   200111 036100                    ADLQ    CNT,,AUTO
        11 002702   200157 756100                    STQ     WIDTH,,AUTO

     1768    17143    3           IF MOP_L_MAX ~= 0 THEN DO;

  17143 11 002703   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 002704   004071 600000 11                 TZE     s:19176

     1769    17144    3              IF TBL_1 ~= ASCBIN(' ') THEN

  17144 11 002705   200170 235100                    LDA     TBL_1,,AUTO
        11 002706   000040 115007                    CMPA    32,DL
        11 002707   002731 600000 11                 TZE     s:17246

     1770    17145                      %ASSIGN_MOP(OP1=LTE,TBL1=B,CH1=' ');

  17196 11 002710   200146 235100                    LDA     MOP_L,,AUTO
        11 002711   000002 035007                    ADLA    2,DL
        11 002712   200146 755100                    STA     MOP_L,,AUTO

  17197 11 002713   200146 236100                    LDQ     MOP_L,,AUTO
        11 002714   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 002715   002721 602000 11                 TNC     s:17204

  17200 11 002716   200146 450100                    STZ     MOP_L,,AUTO

  17201 11 002717   200145 450100                    STZ     MOP_L_MAX,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:214  
  17202 11 002720   000000 702200 xent               TSX2  ! X66_ARET

  17204 11 002721   000000 116003                    CMPQ    0,DU
        11 002722   002731 600000 11                 TZE     s:17246

  17222 11 002723   000040 235007                    LDA     32,DL
        11 002724   200170 755100                    STA     TBL_1,,AUTO

  17237 11 002725   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 002726   040106 100400                    MLR     fill='040'O
        11 002727   000252 000002 9                  ADSC9   SUP_MOVE_OPS+5           cn=0,n=2
        11 002730   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1771    17245                   %ASSIGN_OP(VAR=MOP_OP,OP=INSM);

  17246 11 002731   000001 235007                    LDA     1,DL
        11 002732   200173 755100                    STA     MOP_OP,,AUTO

     1772    17248    3              CALL N#_MOP ALTRET(ERR_ROUTINE);

  17248 11 002733   000260 701000 11                 TSX1    N#_MOP
        11 002734   004072 702000 11                 TSX2    ERR_ROUTINE

     1773    17249    3              END;

  17249 11 002735   004071 710000 11                 TRA     s:19176


     1775    17251    2         CASE(%_SU_CM);

     1776    17252          /*D* CASE(%_SU_CM)
     1777    17253             A ',' was detected while in suppression mode.
     1778    17254          */
     1779    17255    2           WIDTH = WIDTH + CNT;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:215  
  17255 11 002736   200157 236100                    LDQ     WIDTH,,AUTO
        11 002737   200111 036100                    ADLQ    CNT,,AUTO
        11 002740   200157 756100                    STQ     WIDTH,,AUTO

     1780    17256    3           IF MOP_L_MAX ~= 0 THEN DO;

  17256 11 002741   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 002742   004071 600000 11                 TZE     s:19176

     1781    17257    3              SUP_INS_MOP.N = %EIT_CM;

  17257 11 002743   200174 236100                    LDQ     SUP_INS_MOP,,AUTO
        11 002744   000016 376000 12                 ANQ     14
        11 002745   006000 276003                    ORQ     3072,DU
        11 002746   200174 756100                    STQ     SUP_INS_MOP,,AUTO

     1782    17258    3              CALL SUP_INSERTION ALTRET(ERR_ROUTINE);

  17258 11 002747   000371 701000 11                 TSX1    SUP_INSERTION
        11 002750   004072 702000 11                 TSX2    ERR_ROUTINE

     1783    17259    3              END;

  17259 11 002751   004071 710000 11                 TRA     s:19176


     1785    17261    2         CASE(%_SU_0);

     1786    17262          /*D* CASE(%_SU_0)
     1787    17263             A '0' was detected while in suppression mode.
     1788    17264          */
     1789    17265    2           WIDTH = WIDTH + CNT;

  17265 11 002752   200157 236100                    LDQ     WIDTH,,AUTO
        11 002753   200111 036100                    ADLQ    CNT,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:216  
        11 002754   200157 756100                    STQ     WIDTH,,AUTO

     1790    17266    3           IF MOP_L_MAX ~= 0 THEN DO;

  17266 11 002755   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 002756   004071 600000 11                 TZE     s:19176

     1791    17267    3              SUP_INS_MOP.N = %EIT_0;

  17267 11 002757   200174 236100                    LDQ     SUP_INS_MOP,,AUTO
        11 002760   000016 376000 12                 ANQ     14
        11 002761   010000 276003                    ORQ     4096,DU
        11 002762   200174 756100                    STQ     SUP_INS_MOP,,AUTO

     1792    17268    3              CALL SUP_INSERTION ALTRET(ERR_ROUTINE);

  17268 11 002763   000371 701000 11                 TSX1    SUP_INSERTION
        11 002764   004072 702000 11                 TSX2    ERR_ROUTINE

     1793    17269    3              END;

  17269 11 002765   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:217  
     1795    17271    2         CASE(%_ST_B);

     1796    17272          /*D* CASE(%_ST_B)
     1797    17273             A 'B' was detected while in asterisk suppression mode.
     1798    17274          */
     1799    17275    2           WIDTH = WIDTH + CNT;

  17275 11 002766   200157 236100                    LDQ     WIDTH,,AUTO
        11 002767   200111 036100                    ADLQ    CNT,,AUTO
        11 002770   200157 756100                    STQ     WIDTH,,AUTO

     1800    17276    3           IF MOP_L_MAX ~= 0 THEN DO;

  17276 11 002771   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 002772   004071 600000 11                 TZE     s:19176

     1801    17277    3              IF TBL_1 ~= ASCBIN(' ') THEN

  17277 11 002773   200170 235100                    LDA     TBL_1,,AUTO
        11 002774   000040 115007                    CMPA    32,DL
        11 002775   003017 600000 11                 TZE     s:17378

     1802    17278                      %ASSIGN_MOP(OP1=LTE,TBL1=B,CH1=' ');

  17329 11 002776   200146 235100                    LDA     MOP_L,,AUTO
        11 002777   000002 035007                    ADLA    2,DL
        11 003000   200146 755100                    STA     MOP_L,,AUTO

  17330 11 003001   200146 236100                    LDQ     MOP_L,,AUTO
        11 003002   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003003   003007 602000 11                 TNC     s:17337

  17333 11 003004   200146 450100                    STZ     MOP_L,,AUTO

  17334 11 003005   200145 450100                    STZ     MOP_L_MAX,,AUTO

  17335 11 003006   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:218  

  17337 11 003007   000000 116003                    CMPQ    0,DU
        11 003010   003017 600000 11                 TZE     s:17378

  17355 11 003011   000040 235007                    LDA     32,DL
        11 003012   200170 755100                    STA     TBL_1,,AUTO

  17370 11 003013   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003014   040106 100400                    MLR     fill='040'O
        11 003015   000252 000002 9                  ADSC9   SUP_MOVE_OPS+5           cn=0,n=2
        11 003016   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1803    17378    3              SUP_INS_MOP.N = %EIT_B;

  17378 11 003017   200174 236100                    LDQ     SUP_INS_MOP,,AUTO
        11 003020   000016 376000 12                 ANQ     14
        11 003021   001000 276003                    ORQ     512,DU
        11 003022   200174 756100                    STQ     SUP_INS_MOP,,AUTO

     1804    17379    3              CALL SUP_INSERTION ALTRET(ERR_ROUTINE);

  17379 11 003023   000371 701000 11                 TSX1    SUP_INSERTION
        11 003024   004072 702000 11                 TSX2    ERR_ROUTINE

     1805    17380    3              END;

  17380 11 003025   004071 710000 11                 TRA     s:19176


     1807    17382    2         CASE(%_SU_SL);

     1808    17383          /*D* CASE(%_SU_SL)
     1809    17384             A '/' was detected while in suppression mode.
     1810    17385          */
     1811    17386    2           WIDTH = WIDTH + CNT;
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:219  

  17386 11 003026   200157 236100                    LDQ     WIDTH,,AUTO
        11 003027   200111 036100                    ADLQ    CNT,,AUTO
        11 003030   200157 756100                    STQ     WIDTH,,AUTO

     1812    17387    3           IF MOP_L_MAX ~= 0 THEN DO;

  17387 11 003031   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 003032   004071 600000 11                 TZE     s:19176

     1813    17388    4              IF SUP = %XST THEN DO;

  17388 11 003033   200164 235100                    LDA     SUP,,AUTO
        11 003034   000007 115007                    CMPA    7,DL
        11 003035   003067 601000 11                 TNZ     s:17493

     1814    17389    4                 SUP_INS_MOP.N = %EIT_$;

  17389 11 003036   200174 236100                    LDQ     SUP_INS_MOP,,AUTO
        11 003037   000016 376000 12                 ANQ     14
        11 003040   005000 276003                    ORQ     2560,DU
        11 003041   200174 756100                    STQ     SUP_INS_MOP,,AUTO

     1815    17390    4                 IF TBL_5 ~= ASCBIN('/') THEN

  17390 11 003042   200172 235100                    LDA     TBL_5,,AUTO
        11 003043   000057 115007                    CMPA    47,DL
        11 003044   003117 600000 11                 TZE     s:17596

     1816    17391                         %ASSIGN_MOP(OP1=LTE,TBL1=5,CH1='/');

  17442 11 003045   200146 235100                    LDA     MOP_L,,AUTO
        11 003046   000002 035007                    ADLA    2,DL
        11 003047   200146 755100                    STA     MOP_L,,AUTO

  17443 11 003050   200146 236100                    LDQ     MOP_L,,AUTO
        11 003051   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:220  
        11 003052   003056 602000 11                 TNC     s:17450

  17446 11 003053   200146 450100                    STZ     MOP_L,,AUTO

  17447 11 003054   200145 450100                    STZ     MOP_L_MAX,,AUTO

  17448 11 003055   000000 702200 xent               TSX2  ! X66_ARET

  17450 11 003056   000000 116003                    CMPQ    0,DU
        11 003057   003117 600000 11                 TZE     s:17596

  17472 11 003060   000057 235007                    LDA     47,DL
        11 003061   200172 755100                    STA     TBL_5,,AUTO

  17483 11 003062   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003063   040106 100400                    MLR     fill='040'O
        11 003064   000264 000002 9                  ADSC9   SUP_MOVE_OPS+15          cn=0,n=2
        11 003065   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1817    17491    4                 END;

  17491 11 003066   003117 710000 11                 TRA     s:17596

     1818    17492    4              ELSE DO;

     1819    17493    4                 SUP_INS_MOP.N = %EIT_ST;

  17493 11 003067   200174 236100                    LDQ     SUP_INS_MOP,,AUTO
        11 003070   000016 376000 12                 ANQ     14
        11 003071   002000 276003                    ORQ     1024,DU
        11 003072   200174 756100                    STQ     SUP_INS_MOP,,AUTO

     1820    17494    4                 IF TBL_2 ~= ASCBIN('/') THEN

  17494 11 003073   200171 235100                    LDA     TBL_2,,AUTO
        11 003074   000057 115007                    CMPA    47,DL
        11 003075   003117 600000 11                 TZE     s:17596
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:221  

     1821    17495                         %ASSIGN_MOP(OP1=LTE,TBL1=2,CH1='/');

  17546 11 003076   200146 235100                    LDA     MOP_L,,AUTO
        11 003077   000002 035007                    ADLA    2,DL
        11 003100   200146 755100                    STA     MOP_L,,AUTO

  17547 11 003101   200146 236100                    LDQ     MOP_L,,AUTO
        11 003102   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003103   003107 602000 11                 TNC     s:17554

  17550 11 003104   200146 450100                    STZ     MOP_L,,AUTO

  17551 11 003105   200145 450100                    STZ     MOP_L_MAX,,AUTO

  17552 11 003106   000000 702200 xent               TSX2  ! X66_ARET

  17554 11 003107   000000 116003                    CMPQ    0,DU
        11 003110   003117 600000 11                 TZE     s:17596

  17574 11 003111   000057 235007                    LDA     47,DL
        11 003112   200171 755100                    STA     TBL_2,,AUTO

  17587 11 003113   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003114   040106 100400                    MLR     fill='040'O
        11 003115   000265 000002 9                  ADSC9   SUP_MOVE_OPS+16          cn=0,n=2
        11 003116   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1822    17595    4                 END;

     1823    17596    3              CALL SUP_INSERTION ALTRET(ERR_ROUTINE);

  17596 11 003117   000371 701000 11                 TSX1    SUP_INSERTION
        11 003120   004072 702000 11                 TSX2    ERR_ROUTINE

     1824    17597    3              END;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:222  
  17597 11 003121   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:223  
     1826    17599    2         CASE(%_FX_CM);

     1827    17600          /*D* CASE(%_FX_CM)
     1828    17601             A ',' was detected while not in suppression mode.
     1829    17602          */
     1830    17603    2           WIDTH = WIDTH + CNT;

  17603 11 003122   200157 236100                    LDQ     WIDTH,,AUTO
        11 003123   200111 036100                    ADLQ    CNT,,AUTO
        11 003124   200157 756100                    STQ     WIDTH,,AUTO

     1831    17604    3           IF MOP_L_MAX ~= 0 THEN DO;

  17604 11 003125   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 003126   004071 600000 11                 TZE     s:19176

     1832    17605    4              IF CNT <= 3 THEN DO;

  17605 11 003127   200111 235100                    LDA     CNT,,AUTO
        11 003130   000004 115007                    CMPA    4,DL
        11 003131   003214 603000 11                 TRC     s:17811

     1833    17606    4                 IF NOT ES_ON THEN

  17606 11 003132   200162 234100                    SZN     ES_ON,,AUTO
        11 003133   003164 604000 11                 TMI     s:17707

     1834    17607                         %ASSIGN_MOP(OP1=SES,ES1=ON);

  17658 11 003134   200146 235100                    LDA     MOP_L,,AUTO
        11 003135   000001 035007                    ADLA    1,DL
        11 003136   200146 755100                    STA     MOP_L,,AUTO

  17659 11 003137   200146 236100                    LDQ     MOP_L,,AUTO
        11 003140   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003141   003145 602000 11                 TNC     s:17666

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:224  
  17662 11 003142   200146 450100                    STZ     MOP_L,,AUTO

  17663 11 003143   200145 450100                    STZ     MOP_L_MAX,,AUTO

  17664 11 003144   000000 702200 xent               TSX2  ! X66_ARET

  17666 11 003145   000000 116003                    CMPQ    0,DU
        11 003146   003164 600000 11                 TZE     s:17707

  17672 11 003147   400000 236003                    LDQ     -131072,DU
        11 003150   200162 756100                    STQ     ES_ON,,AUTO

  17674 11 003151   200165 235100                    LDA     BZ_MOP,,AUTO
        11 003152   000001 115000 12                 CMPA    1
        11 003153   003157 601000 11                 TNZ     s:17699

  17674 11 003154   200146 235100                    LDA     MOP_L,,AUTO
        11 003155   000001 135007                    SBLA    1,DL
        11 003156   200165 755100                    STA     BZ_MOP,,AUTO

  17699 11 003157   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003160   200146 235100                    LDA     MOP_L,,AUTO
        11 003161   040105 100400                    MLR     fill='040'O
        11 003162   000013 000001 12                 ADSC9   11                       cn=0,n=1
        11 003163   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

     1835    17707    5                 DO I = 0 TO CNT-1;

  17707 11 003164   200152 450100                    STZ     I,,AUTO
        11 003165   003210 710000 11                 TRA     s:17808+3

     1836    17708                         %ASSIGN_MOP(OP1=INSB,TBL1=CM);

  17759 11 003166   200146 235100                    LDA     MOP_L,,AUTO
        11 003167   000001 035007                    ADLA    1,DL
        11 003170   200146 755100                    STA     MOP_L,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:225  
  17760 11 003171   200146 236100                    LDQ     MOP_L,,AUTO
        11 003172   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003173   003177 602000 11                 TNC     s:17767

  17763 11 003174   200146 450100                    STZ     MOP_L,,AUTO

  17764 11 003175   200145 450100                    STZ     MOP_L_MAX,,AUTO

  17765 11 003176   000000 702200 xent               TSX2  ! X66_ARET

  17767 11 003177   000000 116003                    CMPQ    0,DU
        11 003200   003205 600000 11                 TZE     s:17808

  17800 11 003201   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003202   040106 100400                    MLR     fill='040'O
        11 003203   000017 000001 12                 ADSC9   15                       cn=0,n=1
        11 003204   000005 600001                    ADSC9   5,Q,PR0                  cn=3,n=1

     1837    17808    5                    END;

  17808 11 003205   200152 235100                    LDA     I,,AUTO
        11 003206   000001 035007                    ADLA    1,DL
        11 003207   200152 755100                    STA     I,,AUTO
        11 003210   200152 236100                    LDQ     I,,AUTO
        11 003211   200111 116100                    CMPQ    CNT,,AUTO
        11 003212   003166 602000 11                 TNC     s:17759

     1838    17809    4                 END;

  17809 11 003213   004071 710000 11                 TRA     s:19176

     1839    17810    4              ELSE DO;

     1840    17811    4                 IF TBL_1 ~= ASCBIN(',') THEN

  17811 11 003214   200170 235100                    LDA     TBL_1,,AUTO
        11 003215   000054 115007                    CMPA    44,DL
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:226  
        11 003216   003240 600000 11                 TZE     s:17913

     1841    17812                         %ASSIGN_MOP(OP1=LTE,TBL1=1,CH1="','");

  17863 11 003217   200146 235100                    LDA     MOP_L,,AUTO
        11 003220   000002 035007                    ADLA    2,DL
        11 003221   200146 755100                    STA     MOP_L,,AUTO

  17864 11 003222   200146 236100                    LDQ     MOP_L,,AUTO
        11 003223   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003224   003230 602000 11                 TNC     s:17871

  17867 11 003225   200146 450100                    STZ     MOP_L,,AUTO

  17868 11 003226   200145 450100                    STZ     MOP_L_MAX,,AUTO

  17869 11 003227   000000 702200 xent               TSX2  ! X66_ARET

  17871 11 003230   000000 116003                    CMPQ    0,DU
        11 003231   003240 600000 11                 TZE     s:17913

  17889 11 003232   000054 235007                    LDA     44,DL
        11 003233   200170 755100                    STA     TBL_1,,AUTO

  17904 11 003234   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003235   040106 100400                    MLR     fill='040'O
        11 003236   000266 000002 9                  ADSC9   SUP_MOVE_OPS+17          cn=0,n=2
        11 003237   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1842    17912                      %ASSIGN_OP(VAR=MOP_OP,OP=INSM);

  17913 11 003240   000001 235007                    LDA     1,DL
        11 003241   200173 755100                    STA     MOP_OP,,AUTO

     1843    17915    4                 CALL N#_MOP ALTRET(ERR_ROUTINE);

  17915 11 003242   000260 701000 11                 TSX1    N#_MOP
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:227  
        11 003243   004072 702000 11                 TSX2    ERR_ROUTINE

     1844    17916    4                 END;

     1845    17917    3              END;

  17917 11 003244   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:228  
     1847    17919    2         CASE(%_FX_0);

     1848    17920          /*D* CASE(%_FX_0)
     1849    17921             A '0' was detected while not in suppression mode.
     1850    17922          */
     1851    17923    2           WIDTH = WIDTH + CNT;

  17923 11 003245   200157 236100                    LDQ     WIDTH,,AUTO
        11 003246   200111 036100                    ADLQ    CNT,,AUTO
        11 003247   200157 756100                    STQ     WIDTH,,AUTO

     1852    17924    3           IF MOP_L_MAX ~= 0 THEN DO;

  17924 11 003250   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 003251   004071 600000 11                 TZE     s:19176

     1853    17925    4              IF CNT <= 3 THEN DO;

  17925 11 003252   200111 235100                    LDA     CNT,,AUTO
        11 003253   000004 115007                    CMPA    4,DL
        11 003254   003337 603000 11                 TRC     s:18131

     1854    17926    4                 IF NOT ES_ON THEN

  17926 11 003255   200162 234100                    SZN     ES_ON,,AUTO
        11 003256   003307 604000 11                 TMI     s:18027

     1855    17927                         %ASSIGN_MOP(OP1=SES,ES1=ON);

  17978 11 003257   200146 235100                    LDA     MOP_L,,AUTO
        11 003260   000001 035007                    ADLA    1,DL
        11 003261   200146 755100                    STA     MOP_L,,AUTO

  17979 11 003262   200146 236100                    LDQ     MOP_L,,AUTO
        11 003263   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003264   003270 602000 11                 TNC     s:17986

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:229  
  17982 11 003265   200146 450100                    STZ     MOP_L,,AUTO

  17983 11 003266   200145 450100                    STZ     MOP_L_MAX,,AUTO

  17984 11 003267   000000 702200 xent               TSX2  ! X66_ARET

  17986 11 003270   000000 116003                    CMPQ    0,DU
        11 003271   003307 600000 11                 TZE     s:18027

  17992 11 003272   400000 236003                    LDQ     -131072,DU
        11 003273   200162 756100                    STQ     ES_ON,,AUTO

  17994 11 003274   200165 235100                    LDA     BZ_MOP,,AUTO
        11 003275   000001 115000 12                 CMPA    1
        11 003276   003302 601000 11                 TNZ     s:18019

  17994 11 003277   200146 235100                    LDA     MOP_L,,AUTO
        11 003300   000001 135007                    SBLA    1,DL
        11 003301   200165 755100                    STA     BZ_MOP,,AUTO

  18019 11 003302   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003303   200146 235100                    LDA     MOP_L,,AUTO
        11 003304   040105 100400                    MLR     fill='040'O
        11 003305   000013 000001 12                 ADSC9   11                       cn=0,n=1
        11 003306   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

     1856    18027    5                 DO I = 0 TO CNT-1;

  18027 11 003307   200152 450100                    STZ     I,,AUTO
        11 003310   003333 710000 11                 TRA     s:18128+3

     1857    18028                         %ASSIGN_MOP(OP1=INSB,TBL1=Z);

  18079 11 003311   200146 235100                    LDA     MOP_L,,AUTO
        11 003312   000001 035007                    ADLA    1,DL
        11 003313   200146 755100                    STA     MOP_L,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:230  
  18080 11 003314   200146 236100                    LDQ     MOP_L,,AUTO
        11 003315   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003316   003322 602000 11                 TNC     s:18087

  18083 11 003317   200146 450100                    STZ     MOP_L,,AUTO

  18084 11 003320   200145 450100                    STZ     MOP_L_MAX,,AUTO

  18085 11 003321   000000 702200 xent               TSX2  ! X66_ARET

  18087 11 003322   000000 116003                    CMPQ    0,DU
        11 003323   003330 600000 11                 TZE     s:18128

  18120 11 003324   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003325   040106 100400                    MLR     fill='040'O
        11 003326   000020 000001 12                 ADSC9   16                       cn=0,n=1
        11 003327   000005 600001                    ADSC9   5,Q,PR0                  cn=3,n=1

     1858    18128    5                    END;

  18128 11 003330   200152 235100                    LDA     I,,AUTO
        11 003331   000001 035007                    ADLA    1,DL
        11 003332   200152 755100                    STA     I,,AUTO
        11 003333   200152 236100                    LDQ     I,,AUTO
        11 003334   200111 116100                    CMPQ    CNT,,AUTO
        11 003335   003311 602000 11                 TNC     s:18079

     1859    18129    4                 END;

  18129 11 003336   004071 710000 11                 TRA     s:19176

     1860    18130    4              ELSE DO;

     1861    18131    4                 IF TBL_1 ~= ASCBIN('0') THEN

  18131 11 003337   200170 235100                    LDA     TBL_1,,AUTO
        11 003340   000060 115007                    CMPA    48,DL
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:231  
        11 003341   003363 600000 11                 TZE     s:18233

     1862    18132                         %ASSIGN_MOP(OP1=LTE,TBL1=1,CH1='0');

  18183 11 003342   200146 235100                    LDA     MOP_L,,AUTO
        11 003343   000002 035007                    ADLA    2,DL
        11 003344   200146 755100                    STA     MOP_L,,AUTO

  18184 11 003345   200146 236100                    LDQ     MOP_L,,AUTO
        11 003346   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003347   003353 602000 11                 TNC     s:18191

  18187 11 003350   200146 450100                    STZ     MOP_L,,AUTO

  18188 11 003351   200145 450100                    STZ     MOP_L_MAX,,AUTO

  18189 11 003352   000000 702200 xent               TSX2  ! X66_ARET

  18191 11 003353   000000 116003                    CMPQ    0,DU
        11 003354   003363 600000 11                 TZE     s:18233

  18209 11 003355   000060 235007                    LDA     48,DL
        11 003356   200170 755100                    STA     TBL_1,,AUTO

  18224 11 003357   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003360   040106 100400                    MLR     fill='040'O
        11 003361   000267 000002 9                  ADSC9   SUP_MOVE_OPS+18          cn=0,n=2
        11 003362   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1863    18232                      %ASSIGN_OP(VAR=MOP_OP,OP=INSM);

  18233 11 003363   000001 235007                    LDA     1,DL
        11 003364   200173 755100                    STA     MOP_OP,,AUTO

     1864    18235    4                 CALL N#_MOP ALTRET(ERR_ROUTINE);

  18235 11 003365   000260 701000 11                 TSX1    N#_MOP
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:232  
        11 003366   004072 702000 11                 TSX2    ERR_ROUTINE

     1865    18236    4                 END;

     1866    18237    3              END;

  18237 11 003367   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:233  
     1868    18239    2         CASE(%_FX_SL);

     1869    18240          /*D* CASE(%_FX_SL)
     1870    18241             A '/' was detected while not in suppression mode.
     1871    18242          */
     1872    18243    2           WIDTH = WIDTH + CNT;

  18243 11 003370   200157 236100                    LDQ     WIDTH,,AUTO
        11 003371   200111 036100                    ADLQ    CNT,,AUTO
        11 003372   200157 756100                    STQ     WIDTH,,AUTO

     1873    18244    3           IF MOP_L_MAX ~= 0 THEN DO;

  18244 11 003373   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 003374   004071 600000 11                 TZE     s:19176

     1874    18245    4              IF CNT <= 3 THEN DO;

  18245 11 003375   200111 235100                    LDA     CNT,,AUTO
        11 003376   000004 115007                    CMPA    4,DL
        11 003377   003454 603000 11                 TRC     s:18451

     1875    18246    4                 IF TBL_2 ~= ASCBIN('/') THEN

  18246 11 003400   200171 235100                    LDA     TBL_2,,AUTO
        11 003401   000057 115007                    CMPA    47,DL
        11 003402   003424 600000 11                 TZE     s:18347

     1876    18247                         %ASSIGN_MOP(OP1=LTE,TBL1=2,CH1='/');

  18298 11 003403   200146 235100                    LDA     MOP_L,,AUTO
        11 003404   000002 035007                    ADLA    2,DL
        11 003405   200146 755100                    STA     MOP_L,,AUTO

  18299 11 003406   200146 236100                    LDQ     MOP_L,,AUTO
        11 003407   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003410   003414 602000 11                 TNC     s:18306
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:234  

  18302 11 003411   200146 450100                    STZ     MOP_L,,AUTO

  18303 11 003412   200145 450100                    STZ     MOP_L_MAX,,AUTO

  18304 11 003413   000000 702200 xent               TSX2  ! X66_ARET

  18306 11 003414   000000 116003                    CMPQ    0,DU
        11 003415   003424 600000 11                 TZE     s:18347

  18326 11 003416   000057 235007                    LDA     47,DL
        11 003417   200171 755100                    STA     TBL_2,,AUTO

  18339 11 003420   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003421   040106 100400                    MLR     fill='040'O
        11 003422   000265 000002 9                  ADSC9   SUP_MOVE_OPS+16          cn=0,n=2
        11 003423   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1877    18347    5                 DO I = 0 TO CNT-1;

  18347 11 003424   200152 450100                    STZ     I,,AUTO
        11 003425   003450 710000 11                 TRA     s:18448+3

     1878    18348                         %ASSIGN_MOP(OP1=INSA,TBL1=2);

  18399 11 003426   200146 235100                    LDA     MOP_L,,AUTO
        11 003427   000001 035007                    ADLA    1,DL
        11 003430   200146 755100                    STA     MOP_L,,AUTO

  18400 11 003431   200146 236100                    LDQ     MOP_L,,AUTO
        11 003432   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003433   003437 602000 11                 TNC     s:18407

  18403 11 003434   200146 450100                    STZ     MOP_L,,AUTO

  18404 11 003435   200145 450100                    STZ     MOP_L_MAX,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:235  
  18405 11 003436   000000 702200 xent               TSX2  ! X66_ARET

  18407 11 003437   000000 116003                    CMPQ    0,DU
        11 003440   003445 600000 11                 TZE     s:18448

  18440 11 003441   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003442   040106 100400                    MLR     fill='040'O
        11 003443   000021 000001 12                 ADSC9   17                       cn=0,n=1
        11 003444   000005 600001                    ADSC9   5,Q,PR0                  cn=3,n=1

     1879    18448    5                    END;

  18448 11 003445   200152 235100                    LDA     I,,AUTO
        11 003446   000001 035007                    ADLA    1,DL
        11 003447   200152 755100                    STA     I,,AUTO
        11 003450   200152 236100                    LDQ     I,,AUTO
        11 003451   200111 116100                    CMPQ    CNT,,AUTO
        11 003452   003426 602000 11                 TNC     s:18399

     1880    18449    4                 END;

  18449 11 003453   004071 710000 11                 TRA     s:19176

     1881    18450    4              ELSE DO;

     1882    18451    4                 IF TBL_1 ~= ASCBIN('/') THEN

  18451 11 003454   200170 235100                    LDA     TBL_1,,AUTO
        11 003455   000057 115007                    CMPA    47,DL
        11 003456   003500 600000 11                 TZE     s:18553

     1883    18452                         %ASSIGN_MOP(OP1=LTE,TBL1=1,CH1='/');

  18503 11 003457   200146 235100                    LDA     MOP_L,,AUTO
        11 003460   000002 035007                    ADLA    2,DL
        11 003461   200146 755100                    STA     MOP_L,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:236  
  18504 11 003462   200146 236100                    LDQ     MOP_L,,AUTO
        11 003463   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003464   003470 602000 11                 TNC     s:18511

  18507 11 003465   200146 450100                    STZ     MOP_L,,AUTO

  18508 11 003466   200145 450100                    STZ     MOP_L_MAX,,AUTO

  18509 11 003467   000000 702200 xent               TSX2  ! X66_ARET

  18511 11 003470   000000 116003                    CMPQ    0,DU
        11 003471   003500 600000 11                 TZE     s:18553

  18529 11 003472   000057 235007                    LDA     47,DL
        11 003473   200170 755100                    STA     TBL_1,,AUTO

  18544 11 003474   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003475   040106 100400                    MLR     fill='040'O
        11 003476   000270 000002 9                  ADSC9   SUP_MOVE_OPS+19          cn=0,n=2
        11 003477   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1884    18552                      %ASSIGN_OP(VAR=MOP_OP,OP=INSM);

  18553 11 003500   000001 235007                    LDA     1,DL
        11 003501   200173 755100                    STA     MOP_OP,,AUTO

     1885    18555    4                 CALL N#_MOP ALTRET(ERR_ROUTINE);

  18555 11 003502   000260 701000 11                 TSX1    N#_MOP
        11 003503   004072 702000 11                 TSX2    ERR_ROUTINE

     1886    18556    4                 END;

     1887    18557    3              END;

  18557 11 003504   004071 710000 11                 TRA     s:19176

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:237  

     1889    18559    2         CASE(%_SUPPRESSION);

     1890    18560          /*D* CASE(%_SUPPRESSION)
     1891    18561             The current suppression character was detected.
     1892    18562          */
     1893    18563    2           CALL SUP_MOVE  ALTRET(ERR_ROUTINE);

  18563 11 003505   000610 701000 11                 TSX1    SUP_MOVE
        11 003506   004072 702000 11                 TSX2    ERR_ROUTINE
        11 003507   004071 710000 11                 TRA     s:19176


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:238  
     1895    18565    2         CASE(%_RT_SUPPRESSION);

     1896    18566          /*D* CASE(%_RT_SUPPRESSION)
     1897    18567             The first occurrence of the current suppression character
     1898    18568             to the right of the decimal point was detected.  Make '9'
     1899    18569             illegal and continue handling suppression characters.
     1900    18570          */
     1901    18571    2           STATE_TBL(SUP) = %_SUPPRESSION;

  18571 11 003510   000025 236007                    LDQ     21,DL
        11 003511   200164 721100                    LXL1    SUP,,AUTO
        11 003512   200113 756111                    STQ     STATE_TBL,X1,AUTO

     1902    18572    2           IF COMCOM.OB.FIPS.LEVEL >= %HIGH_LEV THEN

  18572 11 003513   000036 722000 xsym               LXL2    COMCOM+30
        11 003514   003517 604400 11                 TMOZ    s:18574

     1903    18573    2             STATE_TBL(%X9) = %E$9_NOT_LEGAL_AFTER_DEC_PT;

  18573 11 003515   000335 235007                    LDA     221,DL
        11 003516   200133 755100                    STA     STATE_TBL+16,,AUTO

     1904    18574    2           CALL SUP_MOVE ALTRET(ERR_ROUTINE);

  18574 11 003517   000610 701000 11                 TSX1    SUP_MOVE
        11 003520   004072 702000 11                 TSX2    ERR_ROUTINE
        11 003521   004071 710000 11                 TRA     s:19176


     1906    18576    2         CASE(%_FIXPM);

     1907    18577          /*D* CASE(%_FIXPM)
     1908    18578             A trailing '+', '-', or 'S' was detected.
     1909    18579          */
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:239  
     1910    18580    2           IF CURR_CH = %XS THEN

  18580 11 003522   200147 236100                    LDQ     CURR_CH,,AUTO
        11 003523   000011 116007                    CMPQ    9,DL
        11 003524   003530 601000 11                 TNZ     s:18582

     1911    18581    2              NEXT_S = S + 1;

  18581 11 003525   200110 235100                    LDA     S,,AUTO
        11 003526   000001 035007                    ADLA    1,DL
        11 003527   200112 755100                    STA     NEXT_S,,AUTO

     1912    18582    2           IF CNT > 1 THEN

  18582 11 003530   200111 235100                    LDA     CNT,,AUTO
        11 003531   000002 115007                    CMPA    2,DL
        11 003532   003536 602000 11                 TNC     s:18601

     1913    18583                   %ERR(CODE=%E$SUPRESS_NOT_LEGAL_HERE);

  18586 11 003533   000742 235007                    LDA     482,DL
        11 003534   200144 755100                    STA     STATE,,AUTO

  18590 11 003535   004072 710000 11                 TRA     ERR_ROUTINE

     1914    18601    2           IF ASCBIN(SUBSTR(CH,NEXT_S,1)) ~= %XNL THEN

  18601 11 003536   200112 235100                    LDA     NEXT_S,,AUTO
        11 003537   000100 101505                    MRL     fill='000'O
        11 003540   200006 000001                    ADSC9   CH,A,AUTO                cn=0,n=1
        11 003541   200210 000004                    ADSC9   MOP_N#+2,,AUTO           cn=0,n=4
        11 003542   200210 236100                    LDQ     MOP_N#+2,,AUTO
        11 003543   000030 116007                    CMPQ    24,DL
        11 003544   003556 600000 11                 TZE     s:18640

     1915    18602    2              IF CURR_CH = %XS THEN

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:240  
  18602 11 003545   200147 236100                    LDQ     CURR_CH,,AUTO
        11 003546   000011 116007                    CMPQ    9,DL
        11 003547   003553 601000 11                 TNZ     s:18625

     1916    18603                      %ERR(CODE=%E$TRL_S_MUST_BE_LAST);

  18606 11 003550   000744 235007                    LDA     484,DL
        11 003551   200144 755100                    STA     STATE,,AUTO

  18610 11 003552   004072 710000 11                 TRA     ERR_ROUTINE

     1917    18621    2              ELSE
     1918    18622                      %ERR(CODE=%E$TRL_PLUS_OR_MINUS_LAST);

  18625 11 003553   000745 235007                    LDA     485,DL
        11 003554   200144 755100                    STA     STATE,,AUTO

  18629 11 003555   004072 710000 11                 TRA     ERR_ROUTINE

     1919    18640    2           IF TBL_1 ~= ASCBIN (' ') THEN

  18640 11 003556   200170 235100                    LDA     TBL_1,,AUTO
        11 003557   000040 115007                    CMPA    32,DL
        11 003560   003602 600000 11                 TZE     s:18742

     1920    18641                  %ASSIGN_MOP (OP1 = LTE, TBL1 = 1, CH1 = ' ');

  18692 11 003561   200146 235100                    LDA     MOP_L,,AUTO
        11 003562   000002 035007                    ADLA    2,DL
        11 003563   200146 755100                    STA     MOP_L,,AUTO

  18693 11 003564   200146 236100                    LDQ     MOP_L,,AUTO
        11 003565   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003566   003572 602000 11                 TNC     s:18700

  18696 11 003567   200146 450100                    STZ     MOP_L,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:241  
  18697 11 003570   200145 450100                    STZ     MOP_L_MAX,,AUTO

  18698 11 003571   000000 702200 xent               TSX2  ! X66_ARET

  18700 11 003572   000000 116003                    CMPQ    0,DU
        11 003573   003602 600000 11                 TZE     s:18742

  18718 11 003574   000040 235007                    LDA     32,DL
        11 003575   200170 755100                    STA     TBL_1,,AUTO

  18733 11 003576   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003577   040106 100400                    MLR     fill='040'O
        11 003600   000252 000002 9                  ADSC9   SUP_MOVE_OPS+5           cn=0,n=2
        11 003601   000005 400002                    ADSC9   5,Q,PR0                  cn=2,n=2

     1921    18741
     1922    18742    2           WIDTH = WIDTH + 1;

  18742 11 003602   200157 054100                    AOS     WIDTH,,AUTO

     1923    18743    2           IF MOP_L_MAX ~= 0 THEN

  18743 11 003603   200145 235100                    LDA     MOP_L_MAX,,AUTO
        11 003604   003656 600000 11                 TZE     s:18946

     1924    18744    2              IF CURR_CH = %XMI THEN

  18744 11 003605   200147 236100                    LDQ     CURR_CH,,AUTO
        11 003606   000004 116007                    CMPQ    4,DL
        11 003607   003630 601000 11                 TNZ     s:18897

     1925    18745                      %ASSIGN_MOP(OP1=INSN,TBL1=MI);

  18796 11 003610   200146 235100                    LDA     MOP_L,,AUTO
        11 003611   000001 035007                    ADLA    1,DL
        11 003612   200146 755100                    STA     MOP_L,,AUTO

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:242  
  18797 11 003613   200146 236100                    LDQ     MOP_L,,AUTO
        11 003614   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003615   003621 602000 11                 TNC     s:18804

  18800 11 003616   200146 450100                    STZ     MOP_L,,AUTO

  18801 11 003617   200145 450100                    STZ     MOP_L_MAX,,AUTO

  18802 11 003620   000000 702200 xent               TSX2  ! X66_ARET

  18804 11 003621   000000 116003                    CMPQ    0,DU
        11 003622   003656 600000 11                 TZE     s:18946

  18837 11 003623   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003624   040106 100400                    MLR     fill='040'O
        11 003625   000005 000001 12                 ADSC9   5                        cn=0,n=1
        11 003626   000005 600001                    ADSC9   5,Q,PR0                  cn=3,n=1

  18843 11 003627   003656 710000 11                 TRA     s:18946

     1926    18845    2              ELSE
     1927    18846                      %ASSIGN_MOP(OP1=SES,ES1=OFF,OP2=ENF,SUP2=SN);

  18897 11 003630   200146 235100                    LDA     MOP_L,,AUTO
        11 003631   000002 035007                    ADLA    2,DL
        11 003632   200146 755100                    STA     MOP_L,,AUTO

  18898 11 003633   200146 236100                    LDQ     MOP_L,,AUTO
        11 003634   200145 116100                    CMPQ    MOP_L_MAX,,AUTO
        11 003635   003641 602000 11                 TNC     s:18905

  18901 11 003636   200146 450100                    STZ     MOP_L,,AUTO

  18902 11 003637   200145 450100                    STZ     MOP_L_MAX,,AUTO

  18903 11 003640   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:243  
  18905 11 003641   000000 116003                    CMPQ    0,DU
        11 003642   003656 600000 11                 TZE     s:18946

  18909 11 003643   200162 450100                    STZ     ES_ON,,AUTO

  18913 11 003644   200165 235100                    LDA     BZ_MOP,,AUTO
        11 003645   000001 115000 12                 CMPA    1
        11 003646   003651 601000 11                 TNZ     s:18938

  18913 11 003647   000002 136007                    SBLQ    2,DL
        11 003650   200165 756100                    STQ     BZ_MOP,,AUTO

  18938 11 003651   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003652   200146 235100                    LDA     MOP_L,,AUTO
        11 003653   040105 100400                    MLR     fill='040'O
        11 003654   000271 000002 9                  ADSC9   SUP_MOVE_OPS+20          cn=0,n=2
        11 003655   000005 400002                    ADSC9   5,A,PR0                  cn=2,n=2

     1928    18946    2           EIS_TYPE = %PIC_EIS_TS;

  18946 11 003656   000002 235007                    LDA     2,DL
        11 003657   200175 755100                    STA     EIS_TYPE,,AUTO

     1929    18947    2           GOTO CLEAN_UP;

  18947 11 003660   003710 710000 11                 TRA     CLEAN_UP


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:244  
     1931    18949    2         CASE(%_EXRAD9);

     1932    18950          /*D* CASE(%_EXRAD9)
     1933    18951             The '9' of the exrad of a float picture has been detected.
     1934    18952          */
     1935    18953    2           IF ASCBIN(SUBSTR(CH,NEXT_S,1)) ~= %XNL THEN

  18953 11 003661   200112 236100                    LDQ     NEXT_S,,AUTO
        11 003662   000100 101506                    MRL     fill='000'O
        11 003663   200006 000001                    ADSC9   CH,Q,AUTO                cn=0,n=1
        11 003664   200210 000004                    ADSC9   MOP_N#+2,,AUTO           cn=0,n=4
        11 003665   200210 236100                    LDQ     MOP_N#+2,,AUTO
        11 003666   000030 116007                    CMPQ    24,DL
        11 003667   003673 600000 11                 TZE     s:18972

     1936    18954                   %ERR(CODE=%E$EXRAD_MUST_BE_LAST);

  18957 11 003670   000721 236007                    LDQ     465,DL
        11 003671   200144 756100                    STQ     STATE,,AUTO

  18961 11 003672   004072 710000 11                 TRA     ERR_ROUTINE

     1937    18972    2           PIC_OUT.EXRAD_L = CNT;

  18972 11 003673   200111 721100                    LXL1    CNT,,AUTO
        11 003674   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003675   000004 441100                    SXL1    4,,PR0

     1938    18973    2           WIDTH = WIDTH + CNT + 1;

  18973 11 003676   200157 236100                    LDQ     WIDTH,,AUTO
        11 003677   200111 036100                    ADLQ    CNT,,AUTO
        11 003700   000001 036007                    ADLQ    1,DL
        11 003701   200157 756100                    STQ     WIDTH,,AUTO

     1939    18974    2           GOTO CLEAN_UP;

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:245  
  18974 11 003702   003710 710000 11                 TRA     CLEAN_UP


     1941    18976    2         CASE(%_END);

     1942    18977          /*D* CASE(%_END)
     1943    18978             The normal end of the picture has been detected.  Make sure there
     1944    18979             are some digits.  End floating suppression if necessary.
     1945    18980             Indicate blank-when-zero if required.  Return information in
     1946    18981             PIC_OUT.
     1947    18982          */
     1948    18983    2           IF TDIGITS = 0 THEN

  18983 11 003703   200156 236100                    LDQ     TDIGITS,,AUTO
        11 003704   003710 601000 11                 TNZ     CLEAN_UP

     1949    18984                   %ERR(CODE=%E$PIC_NEEDS_NO_SOURCE);

  18987 11 003705   000746 235007                    LDA     486,DL
        11 003706   200144 755100                    STA     STATE,,AUTO

  18991 11 003707   004072 710000 11                 TRA     ERR_ROUTINE

  18983 11 003710                       CLEAN_UP     null
     1950    19002    2   CLEAN_UP: ;
     1951    19003    2           CALL TEST_ENF ALTRET(ERR_ROUTINE);

  19003 11 003710   000635 701000 11                 TSX1    TEST_ENF
        11 003711   004072 702000 11                 TSX2    ERR_ROUTINE

     1952    19004    2           IF (SUP ~= 0

  19004 11 003712   200164 235100                    LDA     SUP,,AUTO
        11 003713   003765 600000 11                 TZE     s:19111
        11 003714   000007 115007                    CMPA    7,DL
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:246  
        11 003715   003765 600000 11                 TZE     s:19111
        11 003716   200145 236100                    LDQ     MOP_L_MAX,,AUTO
        11 003717   003765 600000 11                 TZE     s:19111

     1953    19005    2           AND SUP ~= %XST
     1954    19006    2           AND MOP_L_MAX ~= 0) THEN
     1955    19007    2              IF BZ_MOP = -1 THEN

  19007 11 003720   200165 235100                    LDA     BZ_MOP,,AUTO
        11 003721   000001 115000 12                 CMPA    1
        11 003722   003753 601000 11                 TNZ     s:19109

     1956    19008                      %ASSIGN_MOP(OP1=SES,BZ1=ON);

  19059 11 003723   200146 235100                    LDA     MOP_L,,AUTO
        11 003724   000001 035007                    ADLA    1,DL
        11 003725   200146 755100                    STA     MOP_L,,AUTO

  19060 11 003726   200146 116100                    CMPQ    MOP_L,,AUTO
        11 003727   003731 600000 11                 TZE     s:19063
        11 003730   003734 603000 11                 TRC     s:19067

  19063 11 003731   200146 450100                    STZ     MOP_L,,AUTO

  19064 11 003732   200145 450100                    STZ     MOP_L_MAX,,AUTO

  19065 11 003733   000000 702200 xent               TSX2  ! X66_ARET

  19067 11 003734   000000 115003                    CMPA    0,DU
        11 003735   003765 600000 11                 TZE     s:19111

  19071 11 003736   200162 450100                    STZ     ES_ON,,AUTO

  19075 11 003737   200165 235100                    LDA     BZ_MOP,,AUTO
        11 003740   000001 115000 12                 CMPA    1
        11 003741   003745 601000 11                 TNZ     s:19100

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:247  
  19075 11 003742   200146 235100                    LDA     MOP_L,,AUTO
        11 003743   000001 135007                    SBLA    1,DL
        11 003744   200165 755100                    STA     BZ_MOP,,AUTO

  19100 11 003745   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003746   200146 235100                    LDA     MOP_L,,AUTO
        11 003747   040105 100400                    MLR     fill='040'O
        11 003750   000006 000001 12                 ADSC9   6                        cn=0,n=1
        11 003751   000005 600001                    ADSC9   5,A,PR0                  cn=3,n=1

  19106 11 003752   003765 710000 11                 TRA     s:19111

     1957    19108    2              ELSE
     1958    19109    2                 PIC_OUT.MOP(BZ_MOP) = PIC_OUT.MOP(BZ_MOP) | '004'O;

  19109 11 003753   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 003754   000100 100505                    MLR     fill='000'O
        11 003755   000006 000001                    ADSC9   6,A,PR0                  cn=0,n=1
        11 003756   200210 000004                    ADSC9   MOP_N#+2,,AUTO           cn=0,n=4
        11 003757   200210 236100                    LDQ     MOP_N#+2,,AUTO
        11 003760   004000 276003                    ORQ     2048,DU
        11 003761   200211 756100                    STQ     MOP_N#+3,,AUTO
        11 003762   000105 100500                    MLR     fill='000'O
        11 003763   200211 000004                    ADSC9   MOP_N#+3,,AUTO           cn=0,n=4
        11 003764   000006 000001                    ADSC9   6,A,PR0                  cn=0,n=1

     1959    19110
     1960    19111    2           IF LEFT = -1 THEN

  19111 11 003765   200160 235100                    LDA     LEFT,,AUTO
        11 003766   000001 115000 12                 CMPA    1
        11 003767   003773 601000 11                 TNZ     s:19114

     1961    19112    2              LEFT = DIGITS;

  19112 11 003770   200155 236100                    LDQ     DIGITS,,AUTO
        11 003771   200160 756100                    STQ     LEFT,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:248  
        11 003772   003776 710000 11                 TRA     s:19115

     1962    19113    2           ELSE
     1963    19114    2              SCALE = SCALE - DIGITS;

  19114 11 003773   200161 236100                    LDQ     SCALE,,AUTO
        11 003774   200155 136100                    SBLQ    DIGITS,,AUTO
        11 003775   200161 756100                    STQ     SCALE,,AUTO

     1964    19115    2           PIC_OUT.WIDTH = WIDTH;

  19115 11 003776   200157 235100                    LDA     WIDTH,,AUTO
        11 003777   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 004000   000000 755100                    STA     0,,PR0

     1965    19116    2           PIC_OUT.SCALE = SCALE;

  19116 11 004001   200161 720100                    LXL0    SCALE,,AUTO
        11 004002   000001 740100                    STX0    1,,PR0

     1966    19117    2           PIC_OUT.LEFT  = LEFT;

  19117 11 004003   200160 721100                    LXL1    LEFT,,AUTO
        11 004004   000001 441100                    SXL1    1,,PR0


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:249  
     1968    19119             /*D*  If TYPE is still zero, then apply some of the rules from
     1969    19120                the standard to determine which TYPE of picture this is.
     1970    19121             */
     1971    19122    2           IF TYPE = 0 THEN

  19122 11 004005   200166 236100                    LDQ     TYPE,,AUTO
        11 004006   004046 601000 11                 TNZ     s:19141

     1972    19123    2              IF POSS_TY.A THEN

  19123 11 004007   200167 236100                    LDQ     POSS_TY,,AUTO
        11 004010   200000 316003                    CANQ    65536,DU
        11 004011   004025 600000 11                 TZE     s:19133

     1973    19124    3                DO;

     1974    19125    3                  IF COMCOM.OB.COBOL_74   AND POSS_TY.ANE  AND NOT POSS_TY.AN   THEN

  19125 11 004012   000015 234000 xsym               SZN     COMCOM+13
        11 004013   004022 605000 11                 TPL     s:19131
        11 004014   040000 316003                    CANQ    16384,DU
        11 004015   004022 600000 11                 TZE     s:19131
        11 004016   100000 316003                    CANQ    32768,DU
        11 004017   004022 601000 11                 TNZ     s:19131

     1975    19126    3                      TYPE = %PIC_TY_AE;

  19126 11 004020   200166 450100                    STZ     TYPE,,AUTO
        11 004021   004046 710000 11                 TRA     s:19141

     1976    19127                           /*   This is cause the PIC ABA etc. in Cobol 74  */
     1977    19128                           /*   to be treated as edited for the blank insertion. */
     1978    19129
     1979    19130    3                  ELSE
     1980    19131    3                      TYPE = %PIC_TY_A;

  19131 11 004022   000002 235007                    LDA     2,DL
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:250  
        11 004023   200166 755100                    STA     TYPE,,AUTO

     1981    19132    3                END;

  19132 11 004024   004046 710000 11                 TRA     s:19141

     1982    19133    2              ELSE IF POSS_TY.N THEN

  19133 11 004025   020000 316003                    CANQ    8192,DU
        11 004026   004032 600000 11                 TZE     s:19135

     1983    19134    2                 TYPE = %PIC_TY_N;

  19134 11 004027   000005 235007                    LDA     5,DL
        11 004030   200166 755100                    STA     TYPE,,AUTO
        11 004031   004046 710000 11                 TRA     s:19141

     1984    19135    2              ELSE IF POSS_TY.AN THEN

  19135 11 004032   100000 316003                    CANQ    32768,DU
        11 004033   004037 600000 11                 TZE     s:19137

     1985    19136    2                 TYPE = %PIC_TY_AN;

  19136 11 004034   000003 235007                    LDA     3,DL
        11 004035   200166 755100                    STA     TYPE,,AUTO
        11 004036   004046 710000 11                 TRA     s:19141

     1986    19137    2              ELSE IF POSS_TY.NE THEN

  19137 11 004037   010000 316003                    CANQ    4096,DU
        11 004040   004044 600000 11                 TZE     s:19140

     1987    19138    2                 TYPE = %PIC_TY_NE;

  19138 11 004041   000006 235007                    LDA     6,DL
        11 004042   200166 755100                    STA     TYPE,,AUTO
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:251  
        11 004043   004046 710000 11                 TRA     s:19141

     1988    19139    2              ELSE
     1989    19140    2                 TYPE = %PIC_TY_ANE;

  19140 11 004044   000004 235007                    LDA     4,DL
        11 004045   200166 755100                    STA     TYPE,,AUTO

     1990    19141    2           PIC_OUT.TYPE = TYPE;

  19141 11 004046   200166 722100                    LXL2    TYPE,,AUTO
        11 004047   000002 742100                    STX2    2,,PR0

     1991    19142             /*D*  Determine the EIS_TYPE if we don't know already
     1992    19143             */
     1993    19144    2           IF EIS_TYPE = %PIC_EIS_UNKNOWN THEN

  19144 11 004050   200175 235100                    LDA     EIS_TYPE,,AUTO
        11 004051   000006 115007                    CMPA    6,DL
        11 004052   004063 601000 11                 TNZ     s:19149

     1994    19145    2              IF TYPE <= %PIC_TY_ANE THEN

  19145 11 004053   200166 236100                    LDQ     TYPE,,AUTO
        11 004054   000005 116007                    CMPQ    5,DL
        11 004055   004061 603000 11                 TRC     s:19148

     1995    19146    2                 EIS_TYPE = %PIC_EIS_CH;

  19146 11 004056   000004 235007                    LDA     4,DL
        11 004057   200175 755100                    STA     EIS_TYPE,,AUTO
        11 004060   004063 710000 11                 TRA     s:19149

     1996    19147    2              ELSE
     1997    19148    2                 EIS_TYPE = %PIC_EIS_NS;

  19148 11 004061   000003 235007                    LDA     3,DL
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:252  
        11 004062   200175 755100                    STA     EIS_TYPE,,AUTO

     1998    19149    2           PIC_OUT.EIS_TYPE = EIS_TYPE;

  19149 11 004063   000000 623005                    EAX3    0,AL
        11 004064   000005 743100                    STX3    5,,PR0

     1999    19150    2           PIC_OUT.MOP_L = MOP_L;

  19150 11 004065   200146 724100                    LXL4    MOP_L,,AUTO
        11 004066   000005 444100                    SXL4    5,,PR0

     2000    19151    2           RETURN;

  19151 11 004067   000000 702200 xent               TSX2  ! X66_ARET


PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:253  
     2002    19153    2         CASE(ELSE);

     2003    19154          /*D* CASE(ELSE -- i.e. illegal picture)
     2004    19155          */
     2005    19156                %ERR;

  19170 11 004070   004072 710000 11                 TRA     ERR_ROUTINE

     2006    19174
     2007    19175    2         END; /*OF THE DO CASE*/

     2008    19176    1        GOTO TOP_OF_PICTURE_SCAN;

  19176 11 004071   001304 710000 11                 TRA     TOP_OF_PICTURE_SCAN

  19153 11 004072                       ERR_ROUTINE  null

     2010    19178    1   ERR_ROUTINE: ;
     2011    19179    1        PIC_OUT.ERROR = STATE ;

  19179 11 004072   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 004073   200144 235100                    LDA     STATE,,AUTO
        11 004074   000003 755100                    STA     3,,PR0

     2012    19180    1        PIC_OUT.ERRCOL = S;

  19180 11 004075   200110 720100                    LXL0    S,,AUTO
        11 004076   000004 740100                    STX0    4,,PR0

     2013    19181    1        ALTRETURN;

  19181 11 004077   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:254  

  19180 11 004100                       REP_ERR_RTN  null

     2015    19183    1   REP_ERR_RTN: ;
     2016    19184    1        SCAN_TBL1.S(CURR_CH) = %_SCAN_END;

  19184 11 004100   200147 236100                    LDQ     CURR_CH,,AUTO
        11 004101   000006 101400                    MRL     fill='000'O
        11 004102   000012 000004 12                 ADSC9   10                       cn=0,n=4
        11 004103   000000 000001 10                 ADSC9   SCAN_TBL1,Q              cn=0,n=1

     2017    19185    1        PIC_OUT.ERROR = STATE ;

  19185 11 004104   200005 470500                    LDP0    @PIC_OUT,,AUTO
        11 004105   000003 755100                    STA     3,,PR0

     2018    19186    1        PIC_OUT.ERRCOL = SCAN_X;

  19186 11 004106   200151 720100                    LXL0    SCAN_X,,AUTO
        11 004107   000004 740100                    STX0    4,,PR0

     2019    19187    1        ALTRETURN;

  19187 11 004110   000000 702200 xent               TSX2  ! X66_AALT
     2020    19188
     2021    19189    1   END; /*Z8DP$VALIDATE_PIC*/

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:255  
--  Include file information  --

   Z8D_PIC_TABL.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   Z8D_PIC_PARM.:Z8A6TOU  is referenced.
   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8DP$VALIDATE_PIC.
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:256  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 002 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 003 LblCom LTS$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LONG_ITEM$                 0-0-0/w PTR         r     1 LTS$

  ****  Section 004 LblCom LTS_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 LTS_

PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:257  
  ****  Section 005 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 006 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 007 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 008 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Section 009 RoData Z8DP$VALIDATE_PIC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    74-0-0/w STRC(2)     r     1 BITS(0:24)               125-0-0/w CHAR(4)     r     1 CR_DB(0:1)
    42-0-0/d STRC(900)   r     1 EXRAD_ONLY
   223-0-0/w UBIN        r     1 E_NOT_IN_ANE(0:8)
   212-0-0/w UBIN        r     1 E_NOT_IN_N(0:8)
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:258  
   234-0-0/w UBIN        r     1 E_ONLY_IN_NE(0:8)
     0-0-0/w UBIN        r     1 INIT_TBL(0:24)
   131-0-0/w BIT (8)     r     1 POSS_TY_MASK(0:19)
   155-0-0/w BIT (8)     r     1 POSS_TY_MASK74(0:19)
   127-0-0/c CHAR(5)     r     1 P_TEST_STR
   127-0-0/b UBIN(9)     r     1 P_TEST_STR_INIT(0:4)
    32-0-0/d STRC(225)   r     1 SCAN_TBL2
   245-0-0/w UBIN        r     1 SUP_MOVE_OPS(0:4)
   201-0-0/w UBIN        r     1 TY_ERR(0:8)

  ****  Section 010  Data  Z8DP$VALIDATE_PIC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(225)   r     1 SCAN_TBL1                 10-0-0/d STRC(225)   r     1 SPCL_SUP

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PIC_IN                    5-0-0/w PTR         r     1 @PIC_OUT
     3-0-0/w PTR         r     1 @PIC_STR                 165-0-0/w SBIN        r     1 BZ_MOP
     6-0-0/d CHAR(257)   r     1 CH                       111-0-0/w UBIN        r     1 CNT
   150-0-0/w BIT         r     1 CONTINUE_SCAN            154-0-0/w CHAR(4)     r     1 CRDB4
   154-0-0/w BIT         r     1 CRDB4_BIT                147-0-0/w UBIN        r     1 CURR_CH
   155-0-0/w SBIN        r     1 DIGITS                   175-0-0/w UBIN        r     1 EIS_TYPE
   163-0-0/b BIT         r     1 ENF_NEEDED               162-0-0/b BIT         r     1 ES_ON
   152-0-0/w UBIN        r     1 I                        153-0-0/w UBIN        r     1 L
   177-0-0/w UBIN        r     1 LAST_MOP_L               200-0-0/w UBIN        r     1 LAST_MOP_N
   176-0-0/w UBIN        r     1 LAST_MOP_OP              160-0-0/w SBIN        r     1 LEFT
   146-0-0/w UBIN        r     1 MOP_L                    145-0-0/w UBIN        r     1 MOP_L_MAX
   206-0-0/w STRC(9)     r     1 MOP_N#                   173-0-0/w UBIN        r     1 MOP_OP
   205-0-0/w UBIN        r     1 N                        203-0-0/w STRC(8)     r     1 NEW_POSS_TY
   112-0-0/w UBIN        r     1 NEXT_S                    *0-0-0/w STRC(72)    r     1 PIC_IN
    *0-0-0/w STRC(792)   r     1 PIC_OUT                   *0-0-0/c ACHR        r     1 PIC_STR
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:259  
   167-0-0/w STRC(8)     r     1 POSS_TY                  203-0-0/w UBIN(6)     r     1 POSS_TY#
   201-0-0/w PTR         r     1 PROC$                    110-0-0/w UBIN        r     1 S
   161-0-0/w SBIN        r     1 SCALE                    151-0-0/w UBIN        r     1 SCAN_X
   144-0-0/w UBIN        r     1 STATE                    113-0-0/w STRC(900)   r     1 STATE_CLASS
   113-0-0/w UBIN        r     1 STATE_TBL(0:24)
   164-0-0/w UBIN        r     1 SUP                      174-0-0/w STRC(9)     r     1 SUP_INS_MOP
   170-0-0/w UBIN        r     1 TBL_1                    171-0-0/w UBIN        r     1 TBL_2
   172-0-0/w UBIN        r     1 TBL_5                    156-0-0/w SBIN        r     1 TDIGITS
   166-0-0/w UBIN        r     1 TYPE                     157-0-0/w SBIN        r     1 WIDTH

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM
     0-0-0/w STRC(180)         1 HIER_STK(0:50)
     0-0-0/w SBIN              1 HIER_STK_PTR
     0-0-0/w UBIN              1 LTS_STEP(0:37)
     0-0-0/d STRC(11580) r     1 O1COM                      0-0-0/w STRC(144)         1 PAGE_FORMAT
     0-0-0/d UBIN(9)           1 PIC_XLATE_CH(0:127)
     0-0-0/w STRC(153)         1 REP_STK(0:50)              0-0-0/w SBIN              1 REP_STK_PTR
     0-0-0/d STRC(1152)  r     1 XLATE_TBL

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w STRC(396)         1 ALPHABET
     0-0-0/w STRC(144)         1 ALTER_LTS                  0-0-0/w STRC(3672)        1 ALT_KEY
     0-0-0/w STRC(36864)       1 ARGLIST                    0-0-0/w STRC(396)         1 ARRAY
     0-0-0/w STRC(180)         1 ARRAY_PRESET_LTS           0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BASE_LTS                   0-0-0/w STRC(288)         1 BINARY_OP
     0-0-0/w STRC(396)         1 BLOCK                      0-0-0/w STRC(144)         1 BT
     0-0-0/w STRC(288)         1 CALL_STMT                  0-0-0/w STRC(396)         1 CD
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:260  
     0-0-0/w STRC(288)         1 CD_LTS                     0-0-0/w CHAR(4096)        1 CHARS
     0-0-0/w STRC(396)         1 CLASS                      0-0-0/w STRC(288)         1 COMPUTE_STMT
     0-0-0/w STRC(396)         1 CONDITION                  0-0-0/w STRC(396)         1 CONST
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(540)         1 CONTROL_NAME_LTS
     0-0-0/w STRC(1872)        1 COPY_FILE                  0-0-0/w STRC(396)         1 DB
     0-0-0/w STRC(396)         1 DCB_                       0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER
     0-0-0/w STRC(252)         1 DEFERED_ID_TREE            0-0-0/w STRC(288)         1 DEFERED_QUAL_ID
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(108)         1 DEPENDING_SIZE
     0-0-0/w STRC(5472)        1 DIMS                       0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w STRC(216)         1 DML_REC
     0-0-0/w STRC(73836)       1 EVALUATE                   0-0-0/w STRC(396)         1 FD
     0-0-0/w STRC(1692)        1 FILE_LTS                   0-0-0/w STRC(288)         1 ILS_LIST
     0-0-0/w STRC(108)         1 INDEXES                    0-0-0/w STRC(360)         1 INIT_LTS
     0-0-0/w STRC(288)         1 INSPECT_1_STMT             0-0-0/w STRC(288)         1 INSPECT_2_STMT
     0-0-0/w STRC(288)         1 INSPECT_4_STMT             0-0-0/w STRC(396)         1 INTDEF
     0-0-0/w STRC(180)         1 IO_RESTORE_CHAIN           0-0-0/w STRC(144)         1 KEY
     0-0-0/w STRC(396)         1 LABEL                      0-0-0/w STRC(288)         1 LA_ITEM
     0-0-0/w STRC(36864)       1 LCNST                      0-0-0/w STRC(72)          1 LONG
     0-0-0/w STRC              1 LTS                        0-0-0/w STRC(360)         1 LTSS
     0-0-0/w STRC(36936)       1 LTS_PTR_ARRAY              0-0-0/w STRC(504)         1 LX_CD_INPUT
     0-0-0/w STRC(324)         1 LX_CD_I_O                  0-0-0/w STRC(396)         1 LX_CD_OUTPUT
     0-0-0/w STRC(288)         1 LX_ETT_ITEM                0-0-0/w STRC(288)         1 LX_ITEM
     0-0-0/w STRC(288)         1 LX_LARGE                   0-0-0/w STRC(288)         1 LX_LIST
     0-0-0/w STRC(1224)        1 LX_REC_DECL                0-0-0/w STRC(864)         1 LX_REPORT_REC
     0-0-0/w STRC(288)         1 LX_TERMINAL                0-0-0/w STRC(396)         1 MNEMONIC
     0-0-0/w STRC(288)         1 MULTIPLY_STMT              0-0-0/w STRC(144)         1 NEL
     0-0-0/w STRC(216)         1 OPEN_LTS                   0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(396)         1 PARA                       0-0-0/w STRC(144)         1 PRIME
     0-0-0/w STRC(396)   r     1 PROC_                      0-0-0/w STRC(396)         1 PROC_DEF
     0-0-0/w STRC(900)   r     1 PROC_SUPP                  0-0-0/w STRC(396)         1 RD
     0-0-0/w STRC(288)         1 READ_STMT                  0-0-0/w STRC(216)         1 REF
     0-0-0/w STRC(108)         1 RENAMES                    0-0-0/w STRC(720)         1 REPORT_01_LTS
     0-0-0/w STRC(432)         1 REPORT_ELEM_LTS            0-0-0/w STRC(252)         1 REPORT_GRP_LTS
     0-0-0/w STRC(1332)        1 REPORT_LTS                 0-0-0/w STRC(288)         1 REWRITE_STMT
     0-0-0/w STRC(144)         1 RVA_LTS                    0-0-0/w STRC(396)         1 SCALAR
PL6.E3A0      #001=Z8DP$VALIDATE_PIC File=Z8DP.:Z8A6TSI                          SAT 08/09/97 11:16 Page:261  
     0-0-0/w STRC(396)         1 SD                         0-0-0/w STRC(396)         1 SECTION
     0-0-0/w STRC(396)         1 SEGMENT                    0-0-0/w STRC(360)         1 SEGMENT_LTS
     0-0-0/w STRC(396)         1 ST                         0-0-0/w STRC(288)         1 START_STMT
     0-0-0/w STRC(252)         1 STRING_STMT                0-0-0/w STRC(288)         1 SUBTRACT_STMT
     0-0-0/w STRC(252)         1 SUM_LTS                    0-0-0/w STRC(396)         1 SWITCH
     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR              0-0-0/w STRC(396)         1 SYMDEF_
     0-0-0/w STRC(396)         1 SYMREF_                    0-0-0/w STRC(396)         1 TEMP
     0-0-0/w STRC(288)         1 UNARY_OP                   0-0-0/w STRC(288)         1 UNSTRING_STMT
     0-0-0/d STRC(612)         1 USE                        0-0-0/w STRC(252)         1 USE_SUPP
     0-0-0/w STRC(396)         1 VARIABLE                   0-0-0/w STRC(288)         1 WRITE_STMT


   Procedure Z8DP$VALIDATE_PIC requires 2121 words for executable code.
   Procedure Z8DP$VALIDATE_PIC requires 138 words of local(AUTO) storage.

PL6.E3A0      #002=Z8DP$CURRENCY_SIGN File=Z8DP.:Z8A6TSI                         SAT 08/09/97 11:20 Page:262  
     2023        1        /*T***********************************************************/
     2024        2        /*T*                                                         */
     2025        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2026        4        /*T*                                                         */
     2027        5        /*T***********************************************************/
     2028        6        Z8DP$CURRENCY_SIGN: PROC (NEW_SIGN);
     2029        7
     2030        8        %EQU PHASE = 1;
     2031        9
     2032       10        %INCLUDE Z8A_DEFC;
     2033       78        %INCLUDE Z8A_SUPP_MAC;
     2034     2478        %INCLUDE Z8A_ST;
     2035     6137        %INCLUDE Z8A_LTS;
     2036     8214        %INCLUDE Z8E_STACKS;
     2037    10480        %INCLUDE Z8E_O1COM;
     2038    11241
     2039    11242        %INCLUDE Z8D_PIC_TABL;
     2040    11309
     2041    11310        %EQU CURRENCY_SIGN = 36;
     2042    11311
     2043    11312    1   DCL NEW_SIGN           CHAR (1);
     2044    11313
     2045    11314
     2046    11315    1      PIC_XLATE_CH (ASCBIN (NEW_SIGN)) = %X$;
     2047    11316
     2048    11317    1      O1COM.CURRENT_PROC$ -> PROC_.B.CURRENCY_SIGN = TRUE;
     2049    11318    1      O1COM.CURRENT_PROC$ -> PROC_.PROC_SUPP$ ->
     2050    11319    1      PROC_SUPP.CURRENCY_SIGN = NEW_SIGN;
     2051    11320
     2052    11321    1   END Z8DP$CURRENCY_SIGN;
     2053    11322        %EOD;

PL6.E3A0      #002=Z8DP$CURRENCY_SIGN File=Z8DP.:Z8A6TSI                         SAT 08/09/97 11:20 Page:263  
--  Include file information  --

   Z8D_PIC_TABL.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8DP$CURRENCY_SIGN.

   Procedure Z8DP$CURRENCY_SIGN requires 19 words for executable code.
   Procedure Z8DP$CURRENCY_SIGN requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=Z8DP$CURRENCY_SIGN File=Z8DP.:Z8A6TSI                         SAT 08/09/97 11:20 Page:264  

 Object Unit name= Z8DP$CURRENCY_SIGN                         File name= Z8DP.:Z8A6TOU
 UTS= AUG 09 '97 11:20:36.04 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  ST$
    2  LblCom even  none     5      5  ST_
    3  LblCom even  none     1      1  LTS$
    4  LblCom even  none     5      5  LTS_
    5  LblCom even  none    90    132  LEX_SYMBOL
    6  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
    7  LblCom even  none    90    132  TEMP_LEX_SYMBOL
    8  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
    9   Proc  even  none    19     23  Z8DP$CURRENCY_SIGN
   10  RoData even  none     1      1  Z8DP$CURRENCY_SIGN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     9      0   yes            yes      Std        1  Z8DP$CURRENCY_SIGN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
PL6.E3A0      #002=Z8DP$CURRENCY_SIGN File=Z8DP.:Z8A6TSI                         SAT 08/09/97 11:20 Page:265  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    LTS_STEP                              O1COM                                 HIER_STK_PTR
     HIER_STK                              PAGE_FORMAT                           REP_STK_PTR
     REP_STK                               XLATE_TBL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=Z8DP$CURRENCY_SIGN File=Z8DP.:Z8A6TSI                         SAT 08/09/97 11:20 Page:266  


     2023        1        /*T***********************************************************/
     2024        2        /*T*                                                         */
     2025        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2026        4        /*T*                                                         */
     2027        5        /*T***********************************************************/
     2028        6        Z8DP$CURRENCY_SIGN: PROC (NEW_SIGN);

      6  9 000000   000000 700200 xent  Z8DP$CURREN* TSX0  ! X66_AUTO_1
         9 000001   000006 000001                    ZERO    6,1

     2029        7
     2030        8        %EQU PHASE = 1;
     2031        9
     2032       10        %INCLUDE Z8A_DEFC;
     2033       78        %INCLUDE Z8A_SUPP_MAC;
     2034     2478        %INCLUDE Z8A_ST;
     2035     6137        %INCLUDE Z8A_LTS;
     2036     8214        %INCLUDE Z8E_STACKS;
     2037    10480        %INCLUDE Z8E_O1COM;
     2038    11241
     2039    11242        %INCLUDE Z8D_PIC_TABL;
     2040    11309
     2041    11310        %EQU CURRENCY_SIGN = 36;
     2042    11311
     2043    11312    1   DCL NEW_SIGN           CHAR (1);
     2044    11313
     2045    11314
     2046    11315    1      PIC_XLATE_CH (ASCBIN (NEW_SIGN)) = %X$;

  11315  9 000002   200003 470500                    LDP0    @NEW_SIGN,,AUTO
         9 000003   000100 101500                    MRL     fill='000'O
         9 000004   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 000005   200004 000004                    ADSC9   @NEW_SIGN+1,,AUTO        cn=0,n=4
         9 000006   200004 236100                    LDQ     @NEW_SIGN+1,,AUTO
         9 000007   000006 101400                    MRL     fill='000'O
         9 000010   000000 000004 10                 ADSC9   0                        cn=0,n=4
PL6.E3A0      #002=Z8DP$CURRENCY_SIGN File=Z8DP.:Z8A6TSI                         SAT 08/09/97 11:20 Page:267  
         9 000011   000000 000001 xsym               ADSC9   XLATE_TBL,Q              cn=0,n=1

     2047    11316
     2048    11317    1      O1COM.CURRENT_PROC$ -> PROC_.B.CURRENCY_SIGN = TRUE;

  11317  9 000012   000057 471400 xsym               LDP1    O1COM+47
         9 000013   004000 236003                    LDQ     2048,DU
         9 000014   100003 256100                    ORSQ    3,,PR1

     2049    11318    1      O1COM.CURRENT_PROC$ -> PROC_.PROC_SUPP$ ->

  11318  9 000015   000057 471400 xsym               LDP1    O1COM+47
         9 000016   100001 473500                    LDP3    1,,PR1
         9 000017   040100 100500                    MLR     fill='040'O
         9 000020   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 000021   300001 000001                    ADSC9   1,,PR3                   cn=0,n=1

     2050    11319    1      PROC_SUPP.CURRENCY_SIGN = NEW_SIGN;
     2051    11320
     2052    11321    1   END Z8DP$CURRENCY_SIGN;

  11321  9 000022   000000 702200 xent               TSX2  ! X66_ARET
     2053    11322        %EOD;

PL6.E3A0      #002=Z8DP$CURRENCY_SIGN File=Z8DP.:Z8A6TSI                         SAT 08/09/97 11:20 Page:268  
--  Include file information  --

   Z8D_PIC_TABL.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8DP$CURRENCY_SIGN.
PL6.E3A0      #002=Z8DP$CURRENCY_SIGN File=Z8DP.:Z8A6TSI                         SAT 08/09/97 11:20 Page:269  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 002 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 003 LblCom LTS$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LONG_ITEM$                 0-0-0/w PTR         r     1 LTS$

  ****  Section 004 LblCom LTS_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 LTS_

PL6.E3A0      #002=Z8DP$CURRENCY_SIGN File=Z8DP.:Z8A6TSI                         SAT 08/09/97 11:20 Page:270  
  ****  Section 005 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 006 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 007 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 008 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @NEW_SIGN                 *0-0-0/c CHAR        r     1 NEW_SIGN

  ****  SYMREF variables  ****

PL6.E3A0      #002=Z8DP$CURRENCY_SIGN File=Z8DP.:Z8A6TSI                         SAT 08/09/97 11:20 Page:271  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 HIER_STK(0:50)
     0-0-0/w SBIN              1 HIER_STK_PTR
     0-0-0/w UBIN              1 LTS_STEP(0:37)
     0-0-0/d STRC(11580) r     1 O1COM                      0-0-0/w STRC(144)         1 PAGE_FORMAT
     0-0-0/d UBIN(9)     r     1 PIC_XLATE_CH(0:127)
     0-0-0/w STRC(153)         1 REP_STK(0:50)              0-0-0/w SBIN              1 REP_STK_PTR
     0-0-0/d STRC(1152)  r     1 XLATE_TBL

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w STRC(396)         1 ALPHABET
     0-0-0/w STRC(144)         1 ALTER_LTS                  0-0-0/w STRC(3672)        1 ALT_KEY
     0-0-0/w STRC(36864)       1 ARGLIST                    0-0-0/w STRC(396)         1 ARRAY
     0-0-0/w STRC(180)         1 ARRAY_PRESET_LTS           0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BASE_LTS                   0-0-0/w STRC(288)         1 BINARY_OP
     0-0-0/w STRC(396)         1 BLOCK                      0-0-0/w STRC(144)         1 BT
     0-0-0/w STRC(288)         1 CALL_STMT                  0-0-0/w STRC(396)         1 CD
     0-0-0/w STRC(288)         1 CD_LTS                     0-0-0/w CHAR(4096)        1 CHARS
     0-0-0/w STRC(396)         1 CLASS                      0-0-0/w STRC(288)         1 COMPUTE_STMT
     0-0-0/w STRC(396)         1 CONDITION                  0-0-0/w STRC(396)         1 CONST
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(540)         1 CONTROL_NAME_LTS
     0-0-0/w STRC(1872)        1 COPY_FILE                  0-0-0/w STRC(396)         1 DB
     0-0-0/w STRC(396)         1 DCB_                       0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER
     0-0-0/w STRC(252)         1 DEFERED_ID_TREE            0-0-0/w STRC(288)         1 DEFERED_QUAL_ID
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(108)         1 DEPENDING_SIZE
     0-0-0/w STRC(5472)        1 DIMS                       0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w STRC(216)         1 DML_REC
     0-0-0/w STRC(73836)       1 EVALUATE                   0-0-0/w STRC(396)         1 FD
PL6.E3A0      #002=Z8DP$CURRENCY_SIGN File=Z8DP.:Z8A6TSI                         SAT 08/09/97 11:20 Page:272  
     0-0-0/w STRC(1692)        1 FILE_LTS                   0-0-0/w STRC(288)         1 ILS_LIST
     0-0-0/w STRC(108)         1 INDEXES                    0-0-0/w STRC(360)         1 INIT_LTS
     0-0-0/w STRC(288)         1 INSPECT_1_STMT             0-0-0/w STRC(288)         1 INSPECT_2_STMT
     0-0-0/w STRC(288)         1 INSPECT_4_STMT             0-0-0/w STRC(396)         1 INTDEF
     0-0-0/w STRC(180)         1 IO_RESTORE_CHAIN           0-0-0/w STRC(144)         1 KEY
     0-0-0/w STRC(396)         1 LABEL                      0-0-0/w STRC(288)         1 LA_ITEM
     0-0-0/w STRC(36864)       1 LCNST                      0-0-0/w STRC(72)          1 LONG
     0-0-0/w STRC              1 LTS                        0-0-0/w STRC(360)         1 LTSS
     0-0-0/w STRC(36936)       1 LTS_PTR_ARRAY              0-0-0/w STRC(504)         1 LX_CD_INPUT
     0-0-0/w STRC(324)         1 LX_CD_I_O                  0-0-0/w STRC(396)         1 LX_CD_OUTPUT
     0-0-0/w STRC(288)         1 LX_ETT_ITEM                0-0-0/w STRC(288)         1 LX_ITEM
     0-0-0/w STRC(288)         1 LX_LARGE                   0-0-0/w STRC(288)         1 LX_LIST
     0-0-0/w STRC(1224)        1 LX_REC_DECL                0-0-0/w STRC(864)         1 LX_REPORT_REC
     0-0-0/w STRC(288)         1 LX_TERMINAL                0-0-0/w STRC(396)         1 MNEMONIC
     0-0-0/w STRC(288)         1 MULTIPLY_STMT              0-0-0/w STRC(144)         1 NEL
     0-0-0/w STRC(216)         1 OPEN_LTS                   0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(396)         1 PARA                       0-0-0/w STRC(144)         1 PRIME
     0-0-0/w STRC(396)   r     1 PROC_                      0-0-0/w STRC(396)         1 PROC_DEF
     0-0-0/w STRC(900)   r     1 PROC_SUPP                  0-0-0/w STRC(396)         1 RD
     0-0-0/w STRC(288)         1 READ_STMT                  0-0-0/w STRC(216)         1 REF
     0-0-0/w STRC(108)         1 RENAMES                    0-0-0/w STRC(720)         1 REPORT_01_LTS
     0-0-0/w STRC(432)         1 REPORT_ELEM_LTS            0-0-0/w STRC(252)         1 REPORT_GRP_LTS
     0-0-0/w STRC(1332)        1 REPORT_LTS                 0-0-0/w STRC(288)         1 REWRITE_STMT
     0-0-0/w STRC(144)         1 RVA_LTS                    0-0-0/w STRC(396)         1 SCALAR
     0-0-0/w STRC(396)         1 SD                         0-0-0/w STRC(396)         1 SECTION
     0-0-0/w STRC(396)         1 SEGMENT                    0-0-0/w STRC(360)         1 SEGMENT_LTS
     0-0-0/w STRC(396)         1 ST                         0-0-0/w STRC(288)         1 START_STMT
     0-0-0/w STRC(252)         1 STRING_STMT                0-0-0/w STRC(288)         1 SUBTRACT_STMT
     0-0-0/w STRC(252)         1 SUM_LTS                    0-0-0/w STRC(396)         1 SWITCH
     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR              0-0-0/w STRC(396)         1 SYMDEF_
     0-0-0/w STRC(396)         1 SYMREF_                    0-0-0/w STRC(396)         1 TEMP
     0-0-0/w STRC(288)         1 UNARY_OP                   0-0-0/w STRC(288)         1 UNSTRING_STMT
     0-0-0/d STRC(612)         1 USE                        0-0-0/w STRC(252)         1 USE_SUPP
     0-0-0/w STRC(396)         1 VARIABLE                   0-0-0/w STRC(288)         1 WRITE_STMT

PL6.E3A0      #002=Z8DP$CURRENCY_SIGN File=Z8DP.:Z8A6TSI                         SAT 08/09/97 11:20 Page:273  

   Procedure Z8DP$CURRENCY_SIGN requires 19 words for executable code.
   Procedure Z8DP$CURRENCY_SIGN requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=Z8DP$COMMA_DECIMAL_POINT File=Z8DP.:Z8A6TSI                   SAT 08/09/97 11:22 Page:274  
     2054        1        /*T***********************************************************/
     2055        2        /*T*                                                         */
     2056        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2057        4        /*T*                                                         */
     2058        5        /*T***********************************************************/
     2059        6        Z8DP$COMMA_DECIMAL_POINT: PROC;
     2060        7
     2061        8        %EQU PHASE = 1;
     2062        9
     2063       10        %INCLUDE Z8A_DEFC;
     2064       78        %INCLUDE Z8A_COMCOM;
     2065      728        %INCLUDE Z8A_SUPP_MAC;
     2066     3128        %INCLUDE Z8A_ST;
     2067     6787        %INCLUDE Z8E_STACKS;
     2068     9053        %INCLUDE Z8E_O1COM;
     2069     9814
     2070     9815        %INCLUDE Z8D_PIC_TABL;
     2071     9882
     2072     9883        %EQU DEC_POINT = 46;
     2073     9884        %EQU COMMA_    = 44;
     2074     9885
     2075     9886    1      O1COM.CURRENT_PROC$ -> PROC_.B.OBJECT_IS_COMMA  = TRUE;
     2076     9887    1      GOTO   TABLE_SWITCH;
     2077     9888
     2078     9889    1   Z8DP$COMMA_DECIMAL_TABLE_SWITCH:   ENTRY;
     2079     9890
     2080     9891    1     TABLE_SWITCH:
     2081     9892
     2082     9893    1      PIC_XLATE_CH (%DEC_POINT) = %XCM;
     2083     9894    1      PIC_XLATE_CH (%COMMA_)    = %XPT;
     2084     9895
     2085     9896    1      O1COM.CURRENT_PROC$ -> PROC_.B.COMMA_IS_DECIMAL = TRUE;
     2086     9897    1      COMCOM.COMMA_DECIMAL_PRESENT = TRUE;
     2087     9898
     2088     9899
     2089     9900    1   END Z8DP$COMMA_DECIMAL_POINT;

PL6.E3A0      #003=Z8DP$COMMA_DECIMAL_POINT File=Z8DP.:Z8A6TSI                   SAT 08/09/97 11:22 Page:275  
--  Include file information  --

   Z8D_PIC_TABL.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8DP$COMMA_DECIMAL_POINT.

   Procedure Z8DP$COMMA_DECIMAL_POINT requires 18 words for executable code.
   Procedure Z8DP$COMMA_DECIMAL_POINT requires 4 words of local(AUTO) storage.

    No errors detected in file Z8DP.:Z8A6TSI    .

PL6.E3A0      #003=Z8DP$COMMA_DECIMAL_POINT File=Z8DP.:Z8A6TSI                   SAT 08/09/97 11:22 Page:276  

 Object Unit name= Z8DP$COMMA_DECIMAL_POINT                   File name= Z8DP.:Z8A6TOU
 UTS= AUG 09 '97 11:22:03.20 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  ST$
    2  LblCom even  none     5      5  ST_
    3  LblCom even  none    90    132  LEX_SYMBOL
    4  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
    5  LblCom even  none    90    132  TEMP_LEX_SYMBOL
    6  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
    7   Proc  even  none    18     22  Z8DP$COMMA_DECIMAL_POINT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes            yes      Std        0  Z8DP$COMMA_DECIMAL_POINT
     7      6                  yes      Std        0  Z8DP$COMMA_DECIMAL_TABLE_SWITCH

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
PL6.E3A0      #003=Z8DP$COMMA_DECIMAL_POINT File=Z8DP.:Z8A6TSI                   SAT 08/09/97 11:22 Page:277  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM                                O1COM                                 HIER_STK_PTR
     HIER_STK                              PAGE_FORMAT                           REP_STK_PTR
     REP_STK                               XLATE_TBL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #003=Z8DP$COMMA_DECIMAL_POINT File=Z8DP.:Z8A6TSI                   SAT 08/09/97 11:22 Page:278  


     2054        1        /*T***********************************************************/
     2055        2        /*T*                                                         */
     2056        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2057        4        /*T*                                                         */
     2058        5        /*T***********************************************************/
     2059        6        Z8DP$COMMA_DECIMAL_POINT: PROC;

      6  7 000000   000000 700200 xent  Z8DP$COMMA_* TSX0  ! X66_AUTO_0
         7 000001   000004 000000                    ZERO    4,0

     2060        7
     2061        8        %EQU PHASE = 1;
     2062        9
     2063       10        %INCLUDE Z8A_DEFC;
     2064       78        %INCLUDE Z8A_COMCOM;
     2065      728        %INCLUDE Z8A_SUPP_MAC;
     2066     3128        %INCLUDE Z8A_ST;
     2067     6787        %INCLUDE Z8E_STACKS;
     2068     9053        %INCLUDE Z8E_O1COM;
     2069     9814
     2070     9815        %INCLUDE Z8D_PIC_TABL;
     2071     9882
     2072     9883        %EQU DEC_POINT = 46;
     2073     9884        %EQU COMMA_    = 44;
     2074     9885
     2075     9886    1      O1COM.CURRENT_PROC$ -> PROC_.B.OBJECT_IS_COMMA  = TRUE;

   9886  7 000002   000057 470400 xsym               LDP0    O1COM+47
         7 000003   002000 236003                    LDQ     1024,DU
         7 000004   000003 256100                    ORSQ    3,,PR0

     2076     9887    1      GOTO   TABLE_SWITCH;

   9887  7 000005   000010 710000 7                  TRA     TABLE_SWITCH

     2077     9888
PL6.E3A0      #003=Z8DP$COMMA_DECIMAL_POINT File=Z8DP.:Z8A6TSI                   SAT 08/09/97 11:22 Page:279  
     2078     9889    1   Z8DP$COMMA_DECIMAL_TABLE_SWITCH:   ENTRY;

   9889  7 000006   000000 700200 xent  Z8DP$COMMA_* TSX0  ! X66_AUTO_0
         7 000007   000004 000000                    ZERO    4,0

     2079     9890
     2080     9891    1     TABLE_SWITCH:
     2081     9892
     2082     9893    1      PIC_XLATE_CH (%DEC_POINT) = %XCM;

   9893  7 000010   010000 236007       TABLE_SWITCH LDQ     4096,DL
         7 000011   000013 552010 xsym               STBQ    XLATE_TBL+11,'10'O

     2083     9894    1      PIC_XLATE_CH (%COMMA_)    = %XPT;

   9894  7 000012   002000 236003                    LDQ     1024,DU
         7 000013   000013 552040 xsym               STBQ    XLATE_TBL+11,'40'O

     2084     9895
     2085     9896    1      O1COM.CURRENT_PROC$ -> PROC_.B.COMMA_IS_DECIMAL = TRUE;

   9896  7 000014   000057 470400 xsym               LDP0    O1COM+47
         7 000015   010000 236003                    LDQ     4096,DU
         7 000016   000003 256100                    ORSQ    3,,PR0

     2086     9897    1      COMCOM.COMMA_DECIMAL_PRESENT = TRUE;

   9897  7 000017   400000 236003                    LDQ     -131072,DU
         7 000020   000471 756000 xsym               STQ     COMCOM+313

     2087     9898
     2088     9899
     2089     9900    1   END Z8DP$COMMA_DECIMAL_POINT;

   9900  7 000021   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #003=Z8DP$COMMA_DECIMAL_POINT File=Z8DP.:Z8A6TSI                   SAT 08/09/97 11:22 Page:280  
--  Include file information  --

   Z8D_PIC_TABL.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8DP$COMMA_DECIMAL_POINT.
PL6.E3A0      #003=Z8DP$COMMA_DECIMAL_POINT File=Z8DP.:Z8A6TSI                   SAT 08/09/97 11:22 Page:281  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 002 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 003 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 004 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

PL6.E3A0      #003=Z8DP$COMMA_DECIMAL_POINT File=Z8DP.:Z8A6TSI                   SAT 08/09/97 11:22 Page:282  
  ****  Section 005 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 006 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM
     0-0-0/w STRC(180)         1 HIER_STK(0:50)
     0-0-0/w SBIN              1 HIER_STK_PTR               0-0-0/d STRC(11580) r     1 O1COM
     0-0-0/w STRC(144)         1 PAGE_FORMAT
     0-0-0/d UBIN(9)     r     1 PIC_XLATE_CH(0:127)
     0-0-0/w STRC(153)         1 REP_STK(0:50)              0-0-0/w SBIN              1 REP_STK_PTR
     0-0-0/d STRC(1152)  r     1 XLATE_TBL

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w STRC(396)         1 ALPHABET
     0-0-0/w STRC(396)         1 ARRAY                      0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BINARY_OP                  0-0-0/w STRC(396)         1 BLOCK
     0-0-0/w STRC(288)         1 CALL_STMT                  0-0-0/w STRC(396)         1 CD
PL6.E3A0      #003=Z8DP$COMMA_DECIMAL_POINT File=Z8DP.:Z8A6TSI                   SAT 08/09/97 11:22 Page:283  
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(396)         1 CLASS
     0-0-0/w STRC(288)         1 COMPUTE_STMT               0-0-0/w STRC(396)         1 CONDITION
     0-0-0/w STRC(396)         1 CONST                      0-0-0/w STRC(72)          1 CONT
     0-0-0/w STRC(396)         1 DB                         0-0-0/w STRC(396)         1 DCB_
     0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER         0-0-0/w STRC(252)         1 DEFERED_ID_TREE
     0-0-0/w STRC(288)         1 DEFERED_QUAL_ID            0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w STRC(396)         1 FD
     0-0-0/w STRC(288)         1 ILS_LIST                   0-0-0/w STRC(288)         1 INSPECT_1_STMT
     0-0-0/w STRC(288)         1 INSPECT_2_STMT             0-0-0/w STRC(288)         1 INSPECT_4_STMT
     0-0-0/w STRC(396)         1 INTDEF                     0-0-0/w STRC(396)         1 LABEL
     0-0-0/w STRC(288)         1 LA_ITEM                    0-0-0/w STRC(504)         1 LX_CD_INPUT
     0-0-0/w STRC(324)         1 LX_CD_I_O                  0-0-0/w STRC(396)         1 LX_CD_OUTPUT
     0-0-0/w STRC(288)         1 LX_ETT_ITEM                0-0-0/w STRC(288)         1 LX_ITEM
     0-0-0/w STRC(288)         1 LX_LARGE                   0-0-0/w STRC(288)         1 LX_LIST
     0-0-0/w STRC(1224)        1 LX_REC_DECL                0-0-0/w STRC(864)         1 LX_REPORT_REC
     0-0-0/w STRC(288)         1 LX_TERMINAL                0-0-0/w STRC(396)         1 MNEMONIC
     0-0-0/w STRC(288)         1 MULTIPLY_STMT              0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(396)         1 PARA                       0-0-0/w STRC(396)   r     1 PROC_
     0-0-0/w STRC(396)         1 PROC_DEF                   0-0-0/w STRC(396)         1 RD
     0-0-0/w STRC(288)         1 READ_STMT                  0-0-0/w STRC(288)         1 REWRITE_STMT
     0-0-0/w STRC(396)         1 SCALAR                     0-0-0/w STRC(396)         1 SD
     0-0-0/w STRC(396)         1 SECTION                    0-0-0/w STRC(396)         1 SEGMENT
     0-0-0/w STRC(396)         1 ST                         0-0-0/w STRC(288)         1 START_STMT
     0-0-0/w STRC(252)         1 STRING_STMT                0-0-0/w STRC(288)         1 SUBTRACT_STMT
     0-0-0/w STRC(396)         1 SWITCH                     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR
     0-0-0/w STRC(396)         1 SYMDEF_                    0-0-0/w STRC(396)         1 SYMREF_
     0-0-0/w STRC(396)         1 TEMP                       0-0-0/w STRC(288)         1 UNARY_OP
     0-0-0/w STRC(288)         1 UNSTRING_STMT              0-0-0/w STRC(396)         1 VARIABLE
     0-0-0/w STRC(288)         1 WRITE_STMT


   Procedure Z8DP$COMMA_DECIMAL_POINT requires 18 words for executable code.
   Procedure Z8DP$COMMA_DECIMAL_POINT requires 4 words of local(AUTO) storage.
PL6.E3A0      #003=Z8DP$COMMA_DECIMAL_POINT File=Z8DP.:Z8A6TSI                   SAT 08/09/97 11:22 Page:284  

    No errors detected in file Z8DP.:Z8A6TSI    .
