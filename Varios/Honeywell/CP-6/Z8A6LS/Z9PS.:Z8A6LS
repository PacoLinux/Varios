VERSION A06

PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:1    
        1        1         /*M* Z9PS System dependent module for PCA scanner and utilities */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7         /*P*
        8        8              NAME: Z9PS
        9        9              PURPOSE:
       10       10                   System dependent module for the PCA scanner.
       11       11                   This procedure sets up the CP6 break handling, it outputs
       12       12                   a salutation line and it gets the time and date for the
       13       13                   listing headers.
       14       14              DESCRIPTION:
       15       15                   Call CP6 system utilities to get the time and date
       16       16                   for the salutation line and the listing header.
       17       17                   Output the salutation line. Call a CP6 moniter routine
       18       18                   to set up break handling. This module also has the
       19       19                   IO utilities from parsergen and the options processor.
       20       20         */
       21       21         START : PROC;
       22       22         /*D*
       23       23              NAME: START
       24       24              CALL:
       25       25                   CALL START;
       26       26              INTERFACE:
       27       27                   M$WRITE, M$TIME, M$UNFID
       28       28              INPUT:
       29       29                   None.
       30       30              OUTPUT:
       31       31                   Salutation line to M$ME.
       32       32              DESCRIPTION:
       33       33                   This procedure sets up the break handling info for CP6
       34       34                   and outputs the salutation to the terminal and sets up
       35       35                   the header line with the date, time and file name of source.
       36       36         */
       37       37         %INCLUDE Z8P_SCAN_EXT;
PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:2    
       38      226         %INCLUDE Z8A_SYS_FILE;
       39     6501    1    DCL TIME CHAR(11) STATIC;
       40     6502    1    DCL DATE CHAR (10) STATIC;
       41     6503    1    DCL DAY CHAR(3) STATIC;
       42     6504    1    DCL INFILE CHAR(20) STATIC;
       43     6505         %IF GCOS;
       44     6506 C       DCL Z9P0$ASSEMBLER_ID CHAR(36) AREAREF READONLY;
       45     6507 C       DCL M$CORRES ENTRY (1) ALTRET;
       46     6508         %ENDIF;
       47     6509
       48     6510         %IF CP6;
       49     6511    1    DCL HANDLE_BREAK ENTRY ASYNC;
       50     6512    1    DCL M$ME DCB;
       51     6513    1    DCL B$JIT$ PTR SYMREF;
       52     6514         %ENDIF;
       53     6515    1    DCL B$TCB$ PTR SYMREF;
       54     6516    1    DCL BUFFER CHAR(80);
       55     6517
       56     6518         %FPT_CORRES (FPTN=CORS, DCB1=%M$DO, DCB2=%M$LO);
       57     6532         %IF CP6;
       58     6533
       59     6534         %FPT_INT(UENTRY=HANDLE_BREAK);
       60     6548         %ENDIF;
       61     6549         %B$TCB (STCLASS = "BASED(B$TCB$)");
       62     6552         %FPT_TIME(FPTN=TIME_FPT,DATE=DATE,TIME=TIME,DAY=DAY,DEST=EXT);
       63     6571         %FPT_UNFID(TEXTFID=INFILE,FPTN=UNFID,DCB=%M$SI);
       64     6589         %FPT_WRITE(FPTN=WRITEME,DCB=%M$ME,VFC=NO);
       65     6620
       66     6621    1    CALL M$TIME(TIME_FPT);
       67     6622    1    CALL M$UNFID(UNFID);
       68     6623
       69     6624         %IF GCOS;
       70     6625 C       CALL CONCAT(HEADER_LINE1,Z9P0$ASSEMBLER_ID,'FILE=');
       71     6626         %ENDIF;
       72     6627         %IF CP6;
       73     6628    1    HEADER_LINE1 =  'PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=';
       74     6629         %ENDIF;
PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:3    
       75     6630    1    CALL INSERT(HEADER_LINE1,41,,INFILE,DAY,' ',DATE,' ',TIME);
       76     6631    1    CALL INSERT(HEADER_LINE1,89,,'PAGE');
       77     6632
       78     6633         %IF CP6;
       79     6634    1    CALL M$INT(FPT_INT);
       80     6635
       81     6636    1    CALL CONCAT(BUFFER,' PCA for COBOL85 A05 here at  ',TIME,' ',DAY,
       82     6637    1                ' ',DATE);
       83     6638    1    WRITEME.BUF_ = VECTOR(BUFFER);
       84     6639    1    CALL M$WRITE(WRITEME);
       85     6640         %ENDIF;
       86     6641
       87     6642                /* Skip DO file if same as LO & LISTIN is specified */
       88     6643    1           CALL M$CORRES (CORS) ALTRET (SAME_FILE);
       89     6644    1           IF %SUCCESSFUL_CALL  THEN
       90     6645    1             DO_REQ = '1'B;
       91     6646    1           ELSE
       92     6647    1             SAME_FILE:
       93     6648    1                 DO_REQ = '0'B;
       94     6649
       95     6650    1    END START;
       96     6651         %EOD;

PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:4    
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure START.

   Procedure START requires 65 words for executable code.
   Procedure START requires 26 words of local(AUTO) storage.

PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:5    

 Object Unit name= START                                      File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:47:01.84 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  OUT_DCBN
    1  LblCom even  none     1      1  SAVE_OUT_DCBN
    2  LblCom even  none     1      1  SAVE_DCBN2
    3   DCB   even  none     0      0  M$OU
    4   DCB   even  none     0      0  M$SO
    5   DCB   even  none     0      0  M$LO
    6   DCB   even  none     0      0  M$SI
    7   DCB   even  none     0      0  M$UI
    8   DCB   even  none     0      0  M$DO
    9  LblCom even  none     1      1  ERR_SEV
   10  LblCom even  none     1      1  OPTIONS
   11  LblCom even  none     1      1  DO_REQ
   12  LblCom even  none    26     32  OPTIONS_TEXT
   13  LblCom even  none   128    200  INSTR
   14  LblCom even  none     1      1  INSTR_LISTED
   15  LblCom even  none     1      1  INSTR_LEN
   16  LblCom even  none     1      1  INSTR_INDX
   17  LblCom even  none     1      1  EOF_FLAG
   18  LblCom even  none     5      5  KEY_REC
   19  LblCom even  none     1      1  LINES_OUT
   20  LblCom even  none    25     31  HEADER_LINE1
   21  LblCom even  none    25     31  HEADER_LINE3
   22  LblCom even  none    25     31  HEADER_LINE2
   23  LblCom even  none     1      1  MAX_LINES_PER_PAGE
   24  LblCom even  none    28     34  LINE
   25  LblCom even  none     1      1  LINELEN
   26  LblCom even  none     1      1  PHASE
   27  LblCom even  none     1      1  ERROR_COUNT
   28   DCB   even  none     0      0  M$UC
PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:6    
   29   Data  even  none    66    102  START
   30   DCB   even  none     0      0  M$ME
   31  RoData even  UTS     20     24  START
   32   Proc  even  none    65    101  START
   33  RoData even  none     1      1  START

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    32      0   yes            yes      Std        0  START

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          Async      0 HANDLE_BREAK
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI                                  M$DO
     M$UC                                  M$ME                                  B$JIT$
     B$TCB$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:7    


        1        1         /*M* Z9PS System dependent module for PCA scanner and utilities */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7         /*P*
        8        8              NAME: Z9PS
        9        9              PURPOSE:
       10       10                   System dependent module for the PCA scanner.
       11       11                   This procedure sets up the CP6 break handling, it outputs
       12       12                   a salutation line and it gets the time and date for the
       13       13                   listing headers.
       14       14              DESCRIPTION:
       15       15                   Call CP6 system utilities to get the time and date
       16       16                   for the salutation line and the listing header.
       17       17                   Output the salutation line. Call a CP6 moniter routine
       18       18                   to set up break handling. This module also has the
       19       19                   IO utilities from parsergen and the options processor.
       20       20         */
       21       21         START : PROC;

     21 32 000000   000000 700200 xent  START        TSX0  ! X66_AUTO_0
        32 000001   000032 000000                    ZERO    26,0

       22       22         /*D*
       23       23              NAME: START
       24       24              CALL:
       25       25                   CALL START;
       26       26              INTERFACE:
       27       27                   M$WRITE, M$TIME, M$UNFID
       28       28              INPUT:
       29       29                   None.
       30       30              OUTPUT:
       31       31                   Salutation line to M$ME.
       32       32              DESCRIPTION:
PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:8    
       33       33                   This procedure sets up the break handling info for CP6
       34       34                   and outputs the salutation to the terminal and sets up
       35       35                   the header line with the date, time and file name of source.
       36       36         */
       37       37         %INCLUDE Z8P_SCAN_EXT;
       38      226         %INCLUDE Z8A_SYS_FILE;
       39     6501    1    DCL TIME CHAR(11) STATIC;
       40     6502    1    DCL DATE CHAR (10) STATIC;
       41     6503    1    DCL DAY CHAR(3) STATIC;
       42     6504    1    DCL INFILE CHAR(20) STATIC;
       43     6505         %IF GCOS;
       44     6506 C       DCL Z9P0$ASSEMBLER_ID CHAR(36) AREAREF READONLY;
       45     6507 C       DCL M$CORRES ENTRY (1) ALTRET;
       46     6508         %ENDIF;
       47     6509
       48     6510         %IF CP6;
       49     6511    1    DCL HANDLE_BREAK ENTRY ASYNC;
       50     6512    1    DCL M$ME DCB;
       51     6513    1    DCL B$JIT$ PTR SYMREF;
       52     6514         %ENDIF;
       53     6515    1    DCL B$TCB$ PTR SYMREF;
       54     6516    1    DCL BUFFER CHAR(80);
       55     6517
       56     6518         %FPT_CORRES (FPTN=CORS, DCB1=%M$DO, DCB2=%M$LO);
       57     6532         %IF CP6;
       58     6533
       59     6534         %FPT_INT(UENTRY=HANDLE_BREAK);
       60     6548         %ENDIF;
       61     6549         %B$TCB (STCLASS = "BASED(B$TCB$)");
       62     6552         %FPT_TIME(FPTN=TIME_FPT,DATE=DATE,TIME=TIME,DAY=DAY,DEST=EXT);
       63     6571         %FPT_UNFID(TEXTFID=INFILE,FPTN=UNFID,DCB=%M$SI);
       64     6589         %FPT_WRITE(FPTN=WRITEME,DCB=%M$ME,VFC=NO);
       65     6620
       66     6621    1    CALL M$TIME(TIME_FPT);

   6621 32 000002   000024 630400 29                 EPPR0   TIME_FPT
        32 000003   020004 713400                    CLIMB   8196
PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:9    
        32 000004   402000 401760                    pmme    nvectors=5

       67     6622    1    CALL M$UNFID(UNFID);

   6622 32 000005   000040 630400 29                 EPPR0   UNFID
        32 000006   020021 713400                    CLIMB   8209
        32 000007   404400 401760                    pmme    nvectors=10

       68     6623
       69     6624         %IF GCOS;
       70     6625 C       CALL CONCAT(HEADER_LINE1,Z9P0$ASSEMBLER_ID,'FILE=');
       71     6626         %ENDIF;
       72     6627         %IF CP6;
       73     6628    1    HEADER_LINE1 =  'PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=';

   6628 32 000010   040000 100400                    MLR     fill='040'O
        32 000011   000000 000051 31                 ADSC9   0                        cn=0,n=41
        32 000012   000000 000144 20                 ADSC9   HEADER_LINE1             cn=0,n=100

       74     6629         %ENDIF;
       75     6630    1    CALL INSERT(HEADER_LINE1,41,,INFILE,DAY,' ',DATE,' ',TIME);

   6630 32 000013   040000 100400                    MLR     fill='040'O
        32 000014   000007 000024 29                 ADSC9   INFILE                   cn=0,n=20
        32 000015   000012 200024 20                 ADSC9   HEADER_LINE1+10          cn=1,n=20
        32 000016   000006 236000 29                 LDQ     DAY
        32 000017   000011 772000                    QRL     9
        32 000020   000017 552034 20                 STBQ    HEADER_LINE1+15,'34'O
        32 000021   040000 236003                    LDQ     16384,DU
        32 000022   000020 552040 20                 STBQ    HEADER_LINE1+16,'40'O
        32 000023   040000 100400                    MLR     fill='040'O
        32 000024   000003 000012 29                 ADSC9   DATE                     cn=0,n=10
        32 000025   000020 200012 20                 ADSC9   HEADER_LINE1+16          cn=1,n=10
        32 000026   000040 236007                    LDQ     32,DL
        32 000027   000022 552004 20                 STBQ    HEADER_LINE1+18,'04'O
        32 000030   040000 100400                    MLR     fill='040'O
        32 000031   000000 000013 29                 ADSC9   TIME                     cn=0,n=11
PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:10   
        32 000032   000023 000030 20                 ADSC9   HEADER_LINE1+19          cn=0,n=24

       76     6631    1    CALL INSERT(HEADER_LINE1,89,,'PAGE');

   6631 32 000033   040000 100400                    MLR     fill='040'O
        32 000034   000013 000004 31                 ADSC9   11                       cn=0,n=4
        32 000035   000026 200013 20                 ADSC9   HEADER_LINE1+22          cn=1,n=11

       77     6632
       78     6633         %IF CP6;
       79     6634    1    CALL M$INT(FPT_INT);

   6634 32 000036   000020 630400 29                 EPPR0   FPT_INT
        32 000037   010002 713400                    CLIMB   4098
        32 000040   400000 401760                    pmme    nvectors=1

       80     6635
       81     6636    1    CALL CONCAT(BUFFER,' PCA for COBOL85 A05 here at  ',TIME,' ',DAY,

   6636 32 000041   040100 100400                    MLR     fill='040'O
        32 000042   000014 000036 31                 ADSC9   12                       cn=0,n=30
        32 000043   200003 000036                    ADSC9   BUFFER,,AUTO             cn=0,n=30
        32 000044   040100 100400                    MLR     fill='040'O
        32 000045   000000 000013 29                 ADSC9   TIME                     cn=0,n=11
        32 000046   200012 400013                    ADSC9   BUFFER+7,,AUTO           cn=2,n=11
        32 000047   000040 236003                    LDQ     32,DU
        32 000050   200015 552120                    STBQ    BUFFER+10,'20'O,AUTO
        32 000051   040100 100400                    MLR     fill='040'O
        32 000052   000006 000003 29                 ADSC9   DAY                      cn=0,n=3
        32 000053   200015 400003                    ADSC9   BUFFER+10,,AUTO          cn=2,n=3
        32 000054   200016 552120                    STBQ    BUFFER+11,'20'O,AUTO
        32 000055   040100 100400                    MLR     fill='040'O
        32 000056   000003 000012 29                 ADSC9   DATE                     cn=0,n=10
        32 000057   200016 400042                    ADSC9   BUFFER+11,,AUTO          cn=2,n=34

       82     6637    1                ' ',DATE);
       83     6638    1    WRITEME.BUF_ = VECTOR(BUFFER);
PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:11   

   6638 32 000060   000000 235000 33                 LDA     0
        32 000061   200030 452500                    STP2    BUFFER+21,,AUTO
        32 000062   200030 236100                    LDQ     BUFFER+21,,AUTO
        32 000063   000003 036003                    ADLQ    3,DU
        32 000064   000072 757000 29                 STAQ    WRITEME+4

       84     6639    1    CALL M$WRITE(WRITEME);

   6639 32 000065   000066 630400 29                 EPPR0   WRITEME
        32 000066   040001 713400                    CLIMB   write
        32 000067   401400 401760                    pmme    nvectors=4

       85     6640         %ENDIF;
       86     6641
       87     6642                /* Skip DO file if same as LO & LISTIN is specified */
       88     6643    1           CALL M$CORRES (CORS) ALTRET (SAME_FILE);

   6643 32 000070   000014 630400 29                 EPPR0   CORS
        32 000071   460000 713400                    CLIMB   alt,+24576
        32 000072   400000 401760                    pmme    nvectors=1
        32 000073   000077 702000 32                 TSX2    SAME_FILE

       89     6644    1           IF %SUCCESSFUL_CALL  THEN

       90     6645    1             DO_REQ = '1'B;

   6645 32 000074   400000 236003                    LDQ     -131072,DU
        32 000075   000000 756000 11                 STQ     DO_REQ
        32 000076   000100 710000 32                 TRA     s:6650

       91     6646    1           ELSE
       92     6647    1             SAME_FILE:
       93     6648    1                 DO_REQ = '0'B;

   6648 32 000077   000000 450000 11    SAME_FILE    STZ     DO_REQ

PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:12   
       94     6649
       95     6650    1    END START;

   6650 32 000100   000000 702200 xent               TSX2  ! X66_ARET
       96     6651         %EOD;

PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:13   
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure START.
PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:14   

 **** Variables and constants ****

  ****  Section 000 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 001 LblCom SAVE_OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_OUT_DCBN

  ****  Section 002 LblCom SAVE_DCBN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_DCBN2

  ****  Section 009 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 010 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)

PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:15   
  ****  Section 011 LblCom DO_REQ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 DO_REQ

  ****  Section 012 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 013 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 014 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 015 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 016 LblCom INSTR_INDX

PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:16   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 017 LblCom EOF_FLAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 018 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(20)          1 KEY_REC

  ****  Section 019 LblCom LINES_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINES_OUT

  ****  Section 020 LblCom HEADER_LINE1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)   r     1 HEADER_LINE1

  ****  Section 021 LblCom HEADER_LINE3

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:17   

     0-0-0/c CHAR(100)         1 HEADER_LINE3

  ****  Section 022 LblCom HEADER_LINE2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE2

  ****  Section 023 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 MAX_LINES_PER_PAGE

  ****  Section 024 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 025 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINELEN

  ****  Section 026 LblCom PHASE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PHASE
PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:18   

  ****  Section 027 LblCom ERROR_COUNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERROR_COUNT

  ****  Section 029  Data  START

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    14-0-0/d STRC(144)   r     1 CORS                       3-0-0/c CHAR(10)    r     1 DATE
     6-0-0/c CHAR(3)     r     1 DAY                       20-0-0/d STRC(144)   r     1 FPT_INT
     7-0-0/c CHAR(20)    r     1 INFILE                     0-0-0/c CHAR(11)    r     1 TIME
    24-0-0/d STRC(432)   r     1 TIME_FPT                  40-0-0/d STRC(792)   r     1 UNFID
    66-0-0/d STRC(432)   r     1 WRITEME

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/c CHAR(80)    r     1 BUFFER

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=START File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:47 Page:19   

     0-0-0/w STRC(144)         1 B$TCB                      0-0-0N  NULL        r     1 M$DO
     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$ME
     0-0-0N  NULL        r     1 M$OU                       0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$SO                       0-0-0N  NULL        r     1 M$UC
     0-0-0N  NULL        r     1 M$UI


   Procedure START requires 65 words for executable code.
   Procedure START requires 26 words of local(AUTO) storage.

PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:20   
       97        1        /*T***********************************************************/
       98        2        /*T*                                                         */
       99        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      100        4        /*T*                                                         */
      101        5        /*T***********************************************************/
      102        6         DIAG:   PROC(SEV,MSG1,MSG2,MSG3,MSG4,MSG5);
      103        7
      104        8         /*D*
      105        9                NAME: DIAG
      106       10             PURPOSE: PRINT A DIAGNOSTIC MESSAGE TO THE USER.
      107       11         */
      108       12
      109       13
      110       14
      111       15    1    DCL FORCE_LIST ENTRY;
      112       16    1    DCL FLUSH      ENTRY;
      113       17
      114       18         %INCLUDE Z8P_SCAN_EXT;
      115      207         %INCLUDE Z8A_SYS_FILE;
      116     6482         %DCBPTR;
      117     6492
      118     6493    1    DCL SEV SBIN;
      119     6494    1    DCL OCT_NUM CHAR(6);
      120     6495
      121     6496
      122     6497    1    DCL M$   PTR;
      123     6498         %VLP_TEXTC(FPTN=MSG,STCLASS="BASED(M$)");
      124     6513
      125     6514         %VLP_TEXTC(FPTN=MISSMSG,TEXT=' missing message ');
      126     6529
      127     6530    1    DCL I SBIN;
      128     6531
      129     6532         %VLP_TEXTC(FPTN=MSG1,STCLASS=);
      130     6547         %VLP_TEXTC(FPTN=MSG2,STCLASS=);
      131     6562         %VLP_TEXTC(FPTN=MSG3,STCLASS=);
      132     6577         %VLP_TEXTC(FPTN=MSG4,STCLASS=);
      133     6592         %VLP_TEXTC(FPTN=MSG5,STCLASS=);
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:21   
      134     6607    1    DCL BUFFER CHAR(140);
      135     6608    1    DCL START_POS SBIN;
      136     6609    1    DCL LEN SBIN;
      137     6610
      138     6611    1            ERROR_COUNT = ERROR_COUNT + 1;
      139     6612    1            START_POS = 10;
      140     6613
      141     6614    1            OUT_DCBN = Z8PS$M$LO#;
      142     6615    1            IF ERR_SEV < SEV THEN
      143     6616    1               ERR_SEV=SEV;
      144     6617    1            CALL FORCE_LIST;
      145     6618    1            LINELEN=0;
      146     6619    1            BUFFER = SUBSTR(KEY_REC,0,10);
      147     6620    2            DO I= 1 TO 5;
      148     6621    3               DO CASE(I);
      149     6622    3                CASE(1);
      150     6623    3                  M$=ADDR(MSG1);
      151     6624    3                CASE(2);
      152     6625    3                  M$=ADDR(MSG2);
      153     6626    3                CASE(3);
      154     6627    3                  M$=ADDR(MSG3);
      155     6628    3                CASE(4);
      156     6629    3                  M$=ADDR(MSG4);
      157     6630    3                CASE(5);
      158     6631    3                  M$=ADDR(MSG5);
      159     6632    3                END;
      160     6633
      161     6634    2               IF M$~=ADDR(NIL) THEN
      162     6635    3               DO;
      163     6636    4                  IF MSG.L# = 0 THEN DO;
      164     6637    4                     M$=ADDR(MISSMSG);
      165     6638    4                     END;
      166     6639
      167     6640    3                  IF LINELEN+MSG.L#>LENGTHC(LINE) THEN
      168     6641    4                  DO;
      169     6642    4                     CALL INSERT(BUFFER,START_POS,,SUBSTR(LINE,START_POS,LINELEN -
              6642                              START_POS));
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:22   
      170     6643    4                     CALL OUTPUT(LINE,LINELEN);
      171     6644                          %OUTSTR_DO;
      172     6661    4                     START_POS = 0;
      173     6662    4                     END;
      174     6663    3                  CALL INSERT(LINE,LINELEN,MSG.L#,MSG.TEXT#);
      175     6664    3                  LINELEN=LINELEN+MSG.L#;
      176     6665    3                  END;
      177     6666    2               END /* DO I=1 TO 5 */;
      178     6667
      179     6668    1            CALL INSERT(BUFFER,START_POS,,SUBSTR(LINE,START_POS,LINELEN - START_POS));
      180     6669    1            CALL FLUSH;
      181     6670                 %OUTSTR_DO;
      182     6687
      183     6688    1            IF ERR_SEV>=15 THEN
      184     6689    1               CALL M$ERR;
      185     6690
      186     6691
      187     6692    1    END;
      188     6693         %EOD;

PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:23   
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DIAG.

   Procedure DIAG requires 163 words for executable code.
   Procedure DIAG requires 52 words of local(AUTO) storage.

PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:24   

 Object Unit name= DIAG                                       File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:47:44.68 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  OUT_DCBN
    1  LblCom even  none     1      1  SAVE_OUT_DCBN
    2  LblCom even  none     1      1  SAVE_DCBN2
    3   DCB   even  none     0      0  M$OU
    4   DCB   even  none     0      0  M$SO
    5   DCB   even  none     0      0  M$LO
    6   DCB   even  none     0      0  M$SI
    7   DCB   even  none     0      0  M$UI
    8   DCB   even  none     0      0  M$DO
    9  LblCom even  none     1      1  ERR_SEV
   10  LblCom even  none     1      1  OPTIONS
   11  LblCom even  none     1      1  DO_REQ
   12  LblCom even  none    26     32  OPTIONS_TEXT
   13  LblCom even  none   128    200  INSTR
   14  LblCom even  none     1      1  INSTR_LISTED
   15  LblCom even  none     1      1  INSTR_LEN
   16  LblCom even  none     1      1  INSTR_INDX
   17  LblCom even  none     1      1  EOF_FLAG
   18  LblCom even  none     5      5  KEY_REC
   19  LblCom even  none     1      1  LINES_OUT
   20  LblCom even  none    25     31  HEADER_LINE1
   21  LblCom even  none    25     31  HEADER_LINE3
   22  LblCom even  none    25     31  HEADER_LINE2
   23  LblCom even  none     1      1  MAX_LINES_PER_PAGE
   24  LblCom even  none    28     34  LINE
   25  LblCom even  none     1      1  LINELEN
   26  LblCom even  none     1      1  PHASE
   27  LblCom even  none     1      1  ERROR_COUNT
   28   DCB   even  none     0      0  M$UC
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:25   
   29  RoData even  UTS      5      5  DIAG
   30   Proc  even  none   163    243  DIAG
   31  RoData even  none     6      6  DIAG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    30      0   yes            yes      Std        6  DIAG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 FORCE_LIST
         yes           Std       0 FLUSH
         yes           Std       2 OUTPUT
                       nStd      0 X66_AUTO_N
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI                                  M$DO
     M$UC                                  Z8PS$M$OU$                            Z8PS$M$LO$
     Z8PS$M$DO$                            Z8PS$M$SO$                            Z8PS$M$OU#
     Z8PS$M$LO#                            Z8PS$M$DO#                            Z8PS$M$SO#
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:26   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:27   


       97        1        /*T***********************************************************/
       98        2        /*T*                                                         */
       99        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      100        4        /*T*                                                         */
      101        5        /*T***********************************************************/
      102        6         DIAG:   PROC(SEV,MSG1,MSG2,MSG3,MSG4,MSG5);

      6 30 000000   000000 700200 xent  DIAG         TSX0  ! X66_AUTO_N
        30 000001   000064 000006                    ZERO    52,6

      103        7
      104        8         /*D*
      105        9                NAME: DIAG
      106       10             PURPOSE: PRINT A DIAGNOSTIC MESSAGE TO THE USER.
      107       11         */
      108       12
      109       13
      110       14
      111       15    1    DCL FORCE_LIST ENTRY;
      112       16    1    DCL FLUSH      ENTRY;
      113       17
      114       18         %INCLUDE Z8P_SCAN_EXT;
      115      207         %INCLUDE Z8A_SYS_FILE;
      116     6482         %DCBPTR;
      117     6492
      118     6493    1    DCL SEV SBIN;
      119     6494    1    DCL OCT_NUM CHAR(6);
      120     6495
      121     6496
      122     6497    1    DCL M$   PTR;
      123     6498         %VLP_TEXTC(FPTN=MSG,STCLASS="BASED(M$)");
      124     6513
      125     6514         %VLP_TEXTC(FPTN=MISSMSG,TEXT=' missing message ');
      126     6529
      127     6530    1    DCL I SBIN;
      128     6531
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:28   
      129     6532         %VLP_TEXTC(FPTN=MSG1,STCLASS=);
      130     6547         %VLP_TEXTC(FPTN=MSG2,STCLASS=);
      131     6562         %VLP_TEXTC(FPTN=MSG3,STCLASS=);
      132     6577         %VLP_TEXTC(FPTN=MSG4,STCLASS=);
      133     6592         %VLP_TEXTC(FPTN=MSG5,STCLASS=);
      134     6607    1    DCL BUFFER CHAR(140);
      135     6608    1    DCL START_POS SBIN;
      136     6609    1    DCL LEN SBIN;
      137     6610
      138     6611    1            ERROR_COUNT = ERROR_COUNT + 1;

   6611 30 000002   000000 054000 27                 AOS     ERROR_COUNT

      139     6612    1            START_POS = 10;

   6612 30 000003   000012 235007                    LDA     10,DL
        30 000004   200060 755100                    STA     START_POS,,AUTO

      140     6613
      141     6614    1            OUT_DCBN = Z8PS$M$LO#;

   6614 30 000005   000000 236000 xsym               LDQ     Z8PS$M$LO#
        30 000006   000000 756000 0                  STQ     OUT_DCBN

      142     6615    1            IF ERR_SEV < SEV THEN

   6615 30 000007   200003 470500                    LDP0    @SEV,,AUTO
        30 000010   000000 236000 9                  LDQ     ERR_SEV
        30 000011   000000 116100                    CMPQ    0,,PR0
        30 000012   000015 605000 30                 TPL     s:6617

      143     6616    1               ERR_SEV=SEV;

   6616 30 000013   000000 235100                    LDA     0,,PR0
        30 000014   000000 755000 9                  STA     ERR_SEV

      144     6617    1            CALL FORCE_LIST;
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:29   

   6617 30 000015   000000 631400 31                 EPPR1   0
        30 000016   000000 701000 xent               TSX1    FORCE_LIST
        30 000017   000000 011000                    NOP     0

      145     6618    1            LINELEN=0;

   6618 30 000020   000000 450000 25                 STZ     LINELEN

      146     6619    1            BUFFER = SUBSTR(KEY_REC,0,10);

   6619 30 000021   040100 100400                    MLR     fill='040'O
        30 000022   000000 000012 18                 ADSC9   KEY_REC                  cn=0,n=10
        30 000023   200015 000214                    ADSC9   BUFFER,,AUTO             cn=0,n=140

      147     6620    2            DO I= 1 TO 5;

   6620 30 000024   000001 235007                    LDA     1,DL
        30 000025   200014 755100                    STA     I,,AUTO

      148     6621    3               DO CASE(I);

   6621 30 000026   200014 235100                    LDA     I,,AUTO
        30 000027   000006 115007                    CMPA    6,DL
        30 000030   000032 602005 30                 TNC     s:6621+4,AL
        30 000031   000056 710000 30                 TRA     s:6634
        30 000032   000056 710000 30                 TRA     s:6634
        30 000033   000040 710000 30                 TRA     s:6623
        30 000034   000043 710000 30                 TRA     s:6625
        30 000035   000046 710000 30                 TRA     s:6627
        30 000036   000051 710000 30                 TRA     s:6629
        30 000037   000054 710000 30                 TRA     s:6631

      149     6622    3                CASE(1);

      150     6623    3                  M$=ADDR(MSG1);

PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:30   
   6623 30 000040   200004 236100                    LDQ     @MSG1,,AUTO
        30 000041   200013 756100                    STQ     M$,,AUTO
        30 000042   000056 710000 30                 TRA     s:6634

      151     6624    3                CASE(2);

      152     6625    3                  M$=ADDR(MSG2);

   6625 30 000043   200005 236100                    LDQ     @MSG2,,AUTO
        30 000044   200013 756100                    STQ     M$,,AUTO
        30 000045   000056 710000 30                 TRA     s:6634

      153     6626    3                CASE(3);

      154     6627    3                  M$=ADDR(MSG3);

   6627 30 000046   200006 236100                    LDQ     @MSG3,,AUTO
        30 000047   200013 756100                    STQ     M$,,AUTO
        30 000050   000056 710000 30                 TRA     s:6634

      155     6628    3                CASE(4);

      156     6629    3                  M$=ADDR(MSG4);

   6629 30 000051   200007 236100                    LDQ     @MSG4,,AUTO
        30 000052   200013 756100                    STQ     M$,,AUTO
        30 000053   000056 710000 30                 TRA     s:6634

      157     6630    3                CASE(5);

      158     6631    3                  M$=ADDR(MSG5);

   6631 30 000054   200010 236100                    LDQ     @MSG5,,AUTO
        30 000055   200013 756100                    STQ     M$,,AUTO

      159     6632    3                END;

PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:31   
      160     6633
      161     6634    2               IF M$~=ADDR(NIL) THEN

   6634 30 000056   200013 236100                    LDQ     M$,,AUTO
        30 000057   000001 116000 31                 CMPQ    1
        30 000060   000170 600000 30                 TZE     s:6666

      162     6635    3               DO;

      163     6636    4                  IF MSG.L# = 0 THEN DO;

   6636 30 000061   200013 470500                    LDP0    M$,,AUTO
        30 000062   000100 101500                    MRL     fill='000'O
        30 000063   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        30 000064   200062 000004                    ADSC9   LEN+1,,AUTO              cn=0,n=4
        30 000065   200062 236100                    LDQ     LEN+1,,AUTO
        30 000066   000000 116003                    CMPQ    0,DU
        30 000067   000072 601000 30                 TNZ     s:6640

      164     6637    4                     M$=ADDR(MISSMSG);

   6637 30 000070   000002 236000 31                 LDQ     2
        30 000071   200013 756100                    STQ     M$,,AUTO

      165     6638    4                     END;

      166     6639
      167     6640    3                  IF LINELEN+MSG.L#>LENGTHC(LINE) THEN

   6640 30 000072   200013 470500                    LDP0    M$,,AUTO
        30 000073   000100 101500                    MRL     fill='000'O
        30 000074   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        30 000075   200062 000004                    ADSC9   LEN+1,,AUTO              cn=0,n=4
        30 000076   200062 236100                    LDQ     LEN+1,,AUTO
        30 000077   000000 036000 25                 ADLQ    LINELEN
        30 000100   000155 116007                    CMPQ    109,DL
        30 000101   000145 604400 30                 TMOZ    s:6663
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:32   

      168     6641    4                  DO;

      169     6642    4                     CALL INSERT(BUFFER,START_POS,,SUBSTR(LINE,START_POS,LINELEN -
              6642                              START_POS));

   6642 30 000102   000000 236000 25                 LDQ     LINELEN
        30 000103   200060 136100                    SBLQ    START_POS,,AUTO
        30 000104   200060 720100                    LXL0    START_POS,,AUTO
        30 000105   777563 620010                    EAX0    -141,X0
        30 000106   777777 660003                    ERX0    -1,DU
        30 000107   000000 621006                    EAX1    0,QL
        30 000110   200060 236100                    LDQ     START_POS,,AUTO
        30 000111   040146 100446                    MLR     fill='040'O
        30 000112   000000 000011 24                 ADSC9   LINE,Q                   cn=0,n=*X1
        30 000113   200015 000010                    ADSC9   BUFFER,Q,AUTO            cn=0,n=*X0

      170     6643    4                     CALL OUTPUT(LINE,LINELEN);

   6643 30 000114   000004 630400 31                 EPPR0   4
        30 000115   000003 631400 31                 EPPR1   3
        30 000116   000000 701000 xent               TSX1    OUTPUT
        30 000117   000000 011000                    NOP     0

      171     6644                          %OUTSTR_DO;

   6645 30 000120   000000 234000 11                 SZN     DO_REQ
        30 000121   000144 605000 30                 TPL     s:6661

   6648 30 000122   000000 235000 0                  LDA     OUT_DCBN
        30 000123   000000 755000 2                  STA     SAVE_DCBN2

   6651 30 000124   000000 236000 xsym               LDQ     Z8PS$M$DO#
        30 000125   000000 756000 0                  STQ     OUT_DCBN

   6653 30 000126   000214 235007                    LDA     140,DL
        30 000127   200061 755100                    STA     LEN,,AUTO
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:33   

   6654 30 000130   200061 630500                    EPPR0   LEN,,AUTO
        30 000131   200063 450500                    STP0    LEN+2,,AUTO
        30 000132   200015 631500                    EPPR1   BUFFER,,AUTO
        30 000133   200062 451500                    STP1    LEN+1,,AUTO
        30 000134   200062 630500                    EPPR0   LEN+1,,AUTO
        30 000135   000003 631400 31                 EPPR1   3
        30 000136   000000 701000 xent               TSX1    OUTPUT
        30 000137   000000 011000                    NOP     0

   6655 30 000140   000214 235007                    LDA     140,DL
        30 000141   200061 755100                    STA     LEN,,AUTO

   6657 30 000142   000000 236000 2                  LDQ     SAVE_DCBN2
        30 000143   000000 756000 0                  STQ     OUT_DCBN

      172     6661    4                     START_POS = 0;

   6661 30 000144   200060 450100                    STZ     START_POS,,AUTO

      173     6662    4                     END;

      174     6663    3                  CALL INSERT(LINE,LINELEN,MSG.L#,MSG.TEXT#);

   6663 30 000145   200013 470500                    LDP0    M$,,AUTO
        30 000146   000100 101500                    MRL     fill='000'O
        30 000147   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        30 000150   200062 000002                    ADSC9   LEN+1,,AUTO              cn=0,n=2
        30 000151   200062 220100                    LDX0    LEN+1,,AUTO
        30 000152   000100 101500                    MRL     fill='000'O
        30 000153   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        30 000154   200063 000002                    ADSC9   LEN+2,,AUTO              cn=0,n=2
        30 000155   200063 221100                    LDX1    LEN+2,,AUTO
        30 000156   000000 235000 25                 LDA     LINELEN
        30 000157   040045 100540                    MLR     fill='040'O
        30 000160   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
        30 000161   000000 000011 24                 ADSC9   LINE,A                   cn=0,n=*X1
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:34   

      175     6664    3                  LINELEN=LINELEN+MSG.L#;

   6664 30 000162   000100 101500                    MRL     fill='000'O
        30 000163   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        30 000164   200062 000004                    ADSC9   LEN+1,,AUTO              cn=0,n=4
        30 000165   200062 236100                    LDQ     LEN+1,,AUTO
        30 000166   000000 036000 25                 ADLQ    LINELEN
        30 000167   000000 756000 25                 STQ     LINELEN

      176     6665    3                  END;

      177     6666    2               END /* DO I=1 TO 5 */;

   6666 30 000170   200014 054100                    AOS     I,,AUTO
        30 000171   200014 235100                    LDA     I,,AUTO
        30 000172   000005 115007                    CMPA    5,DL
        30 000173   000026 604400 30                 TMOZ    s:6621

      178     6667
      179     6668    1            CALL INSERT(BUFFER,START_POS,,SUBSTR(LINE,START_POS,LINELEN - START_POS));

   6668 30 000174   000000 236000 25                 LDQ     LINELEN
        30 000175   200060 136100                    SBLQ    START_POS,,AUTO
        30 000176   200060 720100                    LXL0    START_POS,,AUTO
        30 000177   777563 620010                    EAX0    -141,X0
        30 000200   777777 660003                    ERX0    -1,DU
        30 000201   000000 621006                    EAX1    0,QL
        30 000202   200060 236100                    LDQ     START_POS,,AUTO
        30 000203   040146 100446                    MLR     fill='040'O
        30 000204   000000 000011 24                 ADSC9   LINE,Q                   cn=0,n=*X1
        30 000205   200015 000010                    ADSC9   BUFFER,Q,AUTO            cn=0,n=*X0

      180     6669    1            CALL FLUSH;

   6669 30 000206   000000 631400 31                 EPPR1   0
        30 000207   000000 701000 xent               TSX1    FLUSH
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:35   
        30 000210   000000 011000                    NOP     0

      181     6670                 %OUTSTR_DO;

   6671 30 000211   000000 234000 11                 SZN     DO_REQ
        30 000212   000235 605000 30                 TPL     s:6688

   6674 30 000213   000000 235000 0                  LDA     OUT_DCBN
        30 000214   000000 755000 2                  STA     SAVE_DCBN2

   6677 30 000215   000000 236000 xsym               LDQ     Z8PS$M$DO#
        30 000216   000000 756000 0                  STQ     OUT_DCBN

   6679 30 000217   000214 235007                    LDA     140,DL
        30 000220   200061 755100                    STA     LEN,,AUTO

   6680 30 000221   200061 630500                    EPPR0   LEN,,AUTO
        30 000222   200063 450500                    STP0    LEN+2,,AUTO
        30 000223   200015 631500                    EPPR1   BUFFER,,AUTO
        30 000224   200062 451500                    STP1    LEN+1,,AUTO
        30 000225   200062 630500                    EPPR0   LEN+1,,AUTO
        30 000226   000003 631400 31                 EPPR1   3
        30 000227   000000 701000 xent               TSX1    OUTPUT
        30 000230   000000 011000                    NOP     0

   6681 30 000231   000214 235007                    LDA     140,DL
        30 000232   200061 755100                    STA     LEN,,AUTO

   6683 30 000233   000000 236000 2                  LDQ     SAVE_DCBN2
        30 000234   000000 756000 0                  STQ     OUT_DCBN

      182     6687
      183     6688    1            IF ERR_SEV>=15 THEN

   6688 30 000235   000000 235000 9                  LDA     ERR_SEV
        30 000236   000017 115007                    CMPA    15,DL
        30 000237   000242 604000 30                 TMI     s:6692
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:36   

      184     6689    1               CALL M$ERR;

   6689 30 000240   000002 713400                    CLIMB   err
        30 000241   000000 401760                    pmme    nvectors=0

      185     6690
      186     6691
      187     6692    1    END;

   6692 30 000242   000000 702200 xent               TSX2  ! X66_ARET
      188     6693         %EOD;

PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:37   
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DIAG.
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:38   

 **** Variables and constants ****

  ****  Section 000 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 OUT_DCBN

  ****  Section 001 LblCom SAVE_OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_OUT_DCBN

  ****  Section 002 LblCom SAVE_DCBN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SAVE_DCBN2

  ****  Section 009 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 ERR_SEV

  ****  Section 010 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)

PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:39   
  ****  Section 011 LblCom DO_REQ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 DO_REQ

  ****  Section 012 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 013 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 014 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 015 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 016 LblCom INSTR_INDX

PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:40   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 017 LblCom EOF_FLAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 018 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(20)    r     1 KEY_REC

  ****  Section 019 LblCom LINES_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINES_OUT

  ****  Section 020 LblCom HEADER_LINE1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE1

  ****  Section 021 LblCom HEADER_LINE3

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:41   

     0-0-0/c CHAR(100)         1 HEADER_LINE3

  ****  Section 022 LblCom HEADER_LINE2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE2

  ****  Section 023 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 MAX_LINES_PER_PAGE

  ****  Section 024 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)   r     1 LINE

  ****  Section 025 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 LINELEN

  ****  Section 026 LblCom PHASE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PHASE
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:42   

  ****  Section 027 LblCom ERROR_COUNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 ERROR_COUNT

  ****  Section 029 RoData DIAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(162)   r     1 MISSMSG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @MSG1                      5-0-0/w PTR         r     1 @MSG2
     6-0-0/w PTR         r     1 @MSG3                      7-0-0/w PTR         r     1 @MSG4
    10-0-0/w PTR         r     1 @MSG5                      3-0-0/w PTR         r     1 @SEV
    15-0-0/c CHAR(140)   r     1 BUFFER                    14-0-0/w SBIN        r     1 I
    61-0-0/w SBIN        r     1 LEN                       13-0-0/w PTR         r     1 M$
    *0-0-0/c ASTR(9)     r     1 MSG1                      *0-0-0/c ASTR(9)     r     1 MSG2
    *0-0-0/c ASTR(9)     r     1 MSG3                      *0-0-0/c ASTR(9)     r     1 MSG4
    *0-0-0/c ASTR(9)     r     1 MSG5                      11-0-0/c CHAR(6)           1 OCT_NUM
    *0-0-0/w SBIN        r     1 SEV                       60-0-0/w SBIN        r     1 START_POS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 Z8PS$M$DO#                 0-0-0/w PTR               1 Z8PS$M$DO$
     0-0-0/w UBIN        r     1 Z8PS$M$LO#                 0-0-0/w PTR               1 Z8PS$M$LO$
PL6.E3A0      #002=DIAG File=Z9PS.:Z8A6TSI                                       SAT 08/09/97 09:47 Page:43   
     0-0-0/w UBIN              1 Z8PS$M$OU#                 0-0-0/w PTR               1 Z8PS$M$OU$
     0-0-0/w UBIN              1 Z8PS$M$SO#                 0-0-0/w PTR               1 Z8PS$M$SO$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$DO                       0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OU                       0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$SO                       0-0-0N  NULL        r     1 M$UC
     0-0-0N  NULL        r     1 M$UI                       0-0-0/c ASTR(9)     r     1 MSG


   Procedure DIAG requires 163 words for executable code.
   Procedure DIAG requires 52 words of local(AUTO) storage.

PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:44   
      189        1        /*T***********************************************************/
      190        2        /*T*                                                         */
      191        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      192        4        /*T*                                                         */
      193        5        /*T***********************************************************/
      194        6         GETNEW: PROC(NEW$,NEWLEN);
      195        7
      196        8         /*D*
      197        9                NAME: GETNEW
      198       10             PURPOSE:
      199       11
      200       12
      201       13            GET NEWLEN WORDS OF MEMORY & RETURN A POINTER TO THE WORDS IN
      202       14            NEW$. NEW$ IS ADDR(NIL) IF MEMORY IS EXHAUSTED */
      203       15
      204       16    1    DCL NEW$ PTR;
      205       17    1    DCL NEWLEN UBIN;
      206       18
      207       19         %INCLUDE Z8A_SYS_FILE;
      208     6294         %IF CP6;
      209     6295         %INCLUDE B_SEGIDS_C;
      210     6834
      211     6835         %VLR_GDS(FPTN=GDS_VECTOR,STCLASS=STATIC);
      212     6863         %ENDIF;
      213     6864         %IF GCOS;
      214     6865 C       %VLR_GDS(FPTN=GDS_VECTOR,STCLASS=STATIC,LOGSIZE=261120,REALSIZE=8192);
      215     6866         %ENDIF;
      216     6867
      217     6868    1    DCL FREEMEM$ PTR STATIC INIT(ADDR(NIL));
      218     6869    1    DCL FREEMEMS$ PTR STATIC INIT(ADDR(NIL));
      219     6870    1    DCL FREEMEM UBIN STATIC INIT(0); /* NUMBER OF WORDS FREE */
      220     6871         %IF CP6;
      221     6872    1    DCL WORDS_GOTTEN UBIN STATIC INIT(0);
      222     6873    1    DCL MAX_WORDS_IN_DS3 UBIN CONSTANT INIT(110000);
      223     6874         %ENDIF;
      224     6875    1    DCL BNDB BIT(36);
      225     6876    1    DCL BNDS REDEF BNDB SBIN;
PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:45   
      226     6877    1    DCL OFFS SBIN;
      227     6878         %IF CP6;
      228     6879    1    DCL GDS BIT(1) STATIC INIT('1'B);
      229     6880         %ENDIF;
      230     6881
      231     6882         %FPT_GDS(RESULTS=GDS_VECTOR,SEGSIZE=1024,STCLASS=CONSTANT);
      232     6898         %IF CP6;
      233     6899         %FPT_GDP(RESULTS=GDS_VECTOR,STCLASS=CONSTANT,PAGES=1);
      234     6913         %ENDIF;
      235     6914         %VLP_TEXTC(FPTN=GONE_MSG,TEXT=' ERROR => Memory has just been exhausted');
      236     6929
      237     6930    1    DCL DIAG ENTRY(6);
      238     6931    1            BNDS=0;
      239     6932    1            GOTO BND_SET;
      240     6933
      241     6934    1    MEM_TRUNC: ENTRY (NEW$,NEWLEN);
      242     6935
      243     6936         /*D*
      244     6937                NAME: MEM_TRUNC
      245     6938             PURPOSE:
      246     6939
      247     6940            The original call to GETNEW just specified
      248     6941            how much memory to make available. Now some
      249     6942            is not going to be used. Adjust FREEMEM$
      250     6943            and FREEMEM accordingly.
      251     6944          */
      252     6945    1            FREEMEM=FREEMEM+POFFW(FREEMEM$,NEW$);
      253     6946    1            FREEMEM$=NEW$;
      254     6947    1            IF ADDR(NEWLEN)=ADDR(NIL) THEN
      255     6948    1               RETURN;
      256     6949
      257     6950    1            BNDS=0;
      258     6951    1            GOTO BND_SET;
      259     6952
      260     6953
      261     6954    1    GETNEW2 : ENTRY(NEW$,NEWLEN);
      262     6955         /* DOUBLEWORD BOUND VERSION OF GETNEW */
PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:46   
      263     6956    1            BNDS=1;
      264     6957
      265     6958    1    BND_SET:;
      266     6959    2            DO WHILE (FREEMEM<NEWLEN+BNDS);
      267     6960         %IF CP6;
      268     6961    3              IF GDS THEN DO;
      269     6962    3               IF WORDS_GOTTEN>=MAX_WORDS_IN_DS3 THEN
      270     6963    3                  GOTO GDS_GONE;
      271     6964    3               IF GDS_VECTOR.VECT.PTR$ = ADDR (NIL)
      272     6965    3                 THEN GDS_VECTOR.VECT.W2.SEGID# = %DS3SID;
      273     6966         %ENDIF;
      274     6967    3                  CALL M$GDS(FPT_GDS) ALTRET(GDS_GONE);
      275     6968         %IF CP6;
      276     6969    3              END;
      277     6970    2               ELSE
      278     6971    2                  CALL M$GDP(FPT_GDP) ALTRET(ISR_GONE);
      279     6972    2               WORDS_GOTTEN=WORDS_GOTTEN+1024;
      280     6973         %ENDIF;
      281     6974    2               FREEMEM=FREEMEM+1024;
      282     6975    2               IF FREEMEM$=ADDR(NIL) THEN
      283     6976    3               DO;
      284     6977    3                  FREEMEM$=GDS_VECTOR.VECT.PTR$;
      285     6978    3                  FREEMEMS$=GDS_VECTOR.VECT.PTR$;
      286     6979    3                  END;
      287     6980    2               END;
      288     6981
      289     6982    1            OFFS=BITBIN(BINBIT(POFFW(FREEMEM$,FREEMEMS$),36)&BNDB);
      290     6983    1            OFFS=BITBIN(BINBIT(1+BNDS-OFFS,36)&BNDB);
      291     6984    1            FREEMEM$=PINCRW(FREEMEM$,OFFS);
      292     6985    1            NEW$=FREEMEM$;
      293     6986    1            FREEMEM$=PINCRW(FREEMEM$,NEWLEN);
      294     6987    1            FREEMEM=FREEMEM-NEWLEN-OFFS;
      295     6988
      296     6989    1            RETURN;
      297     6990    1    GDS_GONE: ;
      298     6991         %IF CP6;
      299     6992          /* Just ran out of dynamic segment space, try for ISR */
PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:47   
      300     6993    1            GDS='0'B;
      301     6994    1            FREEMEM$=ADDR(NIL);
      302     6995    1            FREEMEM=0;
      303     6996    1            GOTO BND_SET;
      304     6997
      305     6998    1    ISR_GONE: ;
      306     6999         %ENDIF;
      307     7000                                  /* Completely out of memory!!  */
      308     7001    1            CALL DIAG(15,'ERROR => Memory has just been exhausted%%');
      309     7002    1            NEW$=ADDR(NIL); /* dont expect to get back from DIAG */
      310     7003    1    END GETNEW;
      311     7004         %EOD;

PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:48   
--  Include file information  --

   B_SEGIDS_C.:LIB_E04  is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure GETNEW.

   Procedure GETNEW requires 106 words for executable code.
   Procedure GETNEW requires 10 words of local(AUTO) storage.

PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:49   

 Object Unit name= GETNEW                                     File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:48:23.16 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none     9     11  GETNEW
    2  RoData even  UTS     36     44  GETNEW
    3   Proc  even  none   106    152  GETNEW
    4  RoData even  none     5      5  GETNEW

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        2  GETNEW
     3      4                  yes      Std        2  MEM_TRUNC
     3     27                  yes      Std        2  GETNEW2

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       6 DIAG
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:50   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:51   


      189        1        /*T***********************************************************/
      190        2        /*T*                                                         */
      191        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      192        4        /*T*                                                         */
      193        5        /*T***********************************************************/
      194        6         GETNEW: PROC(NEW$,NEWLEN);

      6  3 000000   000000 700200 xent  GETNEW       TSX0  ! X66_AUTO_2
         3 000001   000012 000002                    ZERO    10,2

      195        7
      196        8         /*D*
      197        9                NAME: GETNEW
      198       10             PURPOSE:
      199       11
      200       12
      201       13            GET NEWLEN WORDS OF MEMORY & RETURN A POINTER TO THE WORDS IN
      202       14            NEW$. NEW$ IS ADDR(NIL) IF MEMORY IS EXHAUSTED */
      203       15
      204       16    1    DCL NEW$ PTR;
      205       17    1    DCL NEWLEN UBIN;
      206       18
      207       19         %INCLUDE Z8A_SYS_FILE;
      208     6294         %IF CP6;
      209     6295         %INCLUDE B_SEGIDS_C;
      210     6834
      211     6835         %VLR_GDS(FPTN=GDS_VECTOR,STCLASS=STATIC);
      212     6863         %ENDIF;
      213     6864         %IF GCOS;
      214     6865 C       %VLR_GDS(FPTN=GDS_VECTOR,STCLASS=STATIC,LOGSIZE=261120,REALSIZE=8192);
      215     6866         %ENDIF;
      216     6867
      217     6868    1    DCL FREEMEM$ PTR STATIC INIT(ADDR(NIL));
      218     6869    1    DCL FREEMEMS$ PTR STATIC INIT(ADDR(NIL));
      219     6870    1    DCL FREEMEM UBIN STATIC INIT(0); /* NUMBER OF WORDS FREE */
      220     6871         %IF CP6;
PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:52   
      221     6872    1    DCL WORDS_GOTTEN UBIN STATIC INIT(0);
      222     6873    1    DCL MAX_WORDS_IN_DS3 UBIN CONSTANT INIT(110000);
      223     6874         %ENDIF;
      224     6875    1    DCL BNDB BIT(36);
      225     6876    1    DCL BNDS REDEF BNDB SBIN;
      226     6877    1    DCL OFFS SBIN;
      227     6878         %IF CP6;
      228     6879    1    DCL GDS BIT(1) STATIC INIT('1'B);
      229     6880         %ENDIF;
      230     6881
      231     6882         %FPT_GDS(RESULTS=GDS_VECTOR,SEGSIZE=1024,STCLASS=CONSTANT);
      232     6898         %IF CP6;
      233     6899         %FPT_GDP(RESULTS=GDS_VECTOR,STCLASS=CONSTANT,PAGES=1);
      234     6913         %ENDIF;
      235     6914         %VLP_TEXTC(FPTN=GONE_MSG,TEXT=' ERROR => Memory has just been exhausted');
      236     6929
      237     6930    1    DCL DIAG ENTRY(6);
      238     6931    1            BNDS=0;

   6931  3 000002   200005 450100                    STZ     BNDB,,AUTO

      239     6932    1            GOTO BND_SET;

   6932  3 000003   000033 710000 3                  TRA     BND_SET

      240     6933
      241     6934    1    MEM_TRUNC: ENTRY (NEW$,NEWLEN);

   6934  3 000004   000000 700200 xent  MEM_TRUNC    TSX0  ! X66_AUTO_2
         3 000005   000012 000002                    ZERO    10,2

      242     6935
      243     6936         /*D*
      244     6937                NAME: MEM_TRUNC
      245     6938             PURPOSE:
      246     6939
      247     6940            The original call to GETNEW just specified
PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:53   
      248     6941            how much memory to make available. Now some
      249     6942            is not going to be used. Adjust FREEMEM$
      250     6943            and FREEMEM accordingly.
      251     6944          */
      252     6945    1            FREEMEM=FREEMEM+POFFW(FREEMEM$,NEW$);

   6945  3 000006   200003 470500                    LDP0    @NEW$,,AUTO
         3 000007   000000 236100                    LDQ     0,,PR0
         3 000010   000022 772000                    QRL     18
         3 000011   200010 756100                    STQ     OFFS+2,,AUTO
         3 000012   000004 236000 1                  LDQ     FREEMEM$
         3 000013   000022 772000                    QRL     18
         3 000014   200010 136100                    SBLQ    OFFS+2,,AUTO
         3 000015   000006 036000 1                  ADLQ    FREEMEM
         3 000016   000006 756000 1                  STQ     FREEMEM

      253     6946    1            FREEMEM$=NEW$;

   6946  3 000017   000000 236100                    LDQ     0,,PR0
         3 000020   000004 756000 1                  STQ     FREEMEM$

      254     6947    1            IF ADDR(NEWLEN)=ADDR(NIL) THEN

   6947  3 000021   200004 236100                    LDQ     @NEWLEN,,AUTO
         3 000022   000000 116000 4                  CMPQ    0
         3 000023   000025 601000 3                  TNZ     s:6950

      255     6948    1               RETURN;

   6948  3 000024   000000 702200 xent               TSX2  ! X66_ARET

      256     6949
      257     6950    1            BNDS=0;

   6950  3 000025   200005 450100                    STZ     BNDB,,AUTO

      258     6951    1            GOTO BND_SET;
PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:54   

   6951  3 000026   000033 710000 3                  TRA     BND_SET

      259     6952
      260     6953
      261     6954    1    GETNEW2 : ENTRY(NEW$,NEWLEN);

   6954  3 000027   000000 700200 xent  GETNEW2      TSX0  ! X66_AUTO_2
         3 000030   000012 000002                    ZERO    10,2

      262     6955         /* DOUBLEWORD BOUND VERSION OF GETNEW */
      263     6956    1            BNDS=1;

   6956  3 000031   000001 235007                    LDA     1,DL
         3 000032   200005 755100                    STA     BNDB,,AUTO

   6956  3 000033                       BND_SET      null
      264     6957
      265     6958    1    BND_SET:;
      266     6959    2            DO WHILE (FREEMEM<NEWLEN+BNDS);

   6959  3 000033   000073 710000 3                  TRA     s:6980

      267     6960         %IF CP6;
      268     6961    3              IF GDS THEN DO;

   6961  3 000034   000010 234000 1                  SZN     GDS
         3 000035   000053 605000 3                  TPL     s:6971

      269     6962    3               IF WORDS_GOTTEN>=MAX_WORDS_IN_DS3 THEN

   6962  3 000036   000007 236000 1                  LDQ     WORDS_GOTTEN
         3 000037   000000 116000 2                  CMPQ    MAX_WORDS_IN_DS3
         3 000040   000135 603000 3                  TRC     GDS_GONE

      270     6963    3                  GOTO GDS_GONE;
      271     6964    3               IF GDS_VECTOR.VECT.PTR$ = ADDR (NIL)
PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:55   

   6964  3 000041   000001 236000 1                  LDQ     GDS_VECTOR+1
         3 000042   000000 116000 4                  CMPQ    0
         3 000043   000046 601000 3                  TNZ     s:6967

      272     6965    3                 THEN GDS_VECTOR.VECT.W2.SEGID# = %DS3SID;

   6965  3 000044   006006 236007                    LDQ     3078,DL
         3 000045   000001 752003 1                  STCQ    GDS_VECTOR+1,'03'O

      273     6966         %ENDIF;
      274     6967    3                  CALL M$GDS(FPT_GDS) ALTRET(GDS_GONE);

   6967  3 000046   000002 630400 2                  EPPR0   FPT_GDS
         3 000047   430001 713400                    CLIMB   alt,gds
         3 000050   400400 401760                    pmme    nvectors=2
         3 000051   000135 702000 3                  TSX2    GDS_GONE

      275     6968         %IF CP6;
      276     6969    3              END;

   6969  3 000052   000057 710000 3                  TRA     s:6972

      277     6970    2               ELSE
      278     6971    2                  CALL M$GDP(FPT_GDP) ALTRET(ISR_GONE);

   6971  3 000053   000010 630400 2                  EPPR0   FPT_GDP
         3 000054   430003 713400                    CLIMB   alt,+12291
         3 000055   400400 401760                    pmme    nvectors=2
         3 000056   000142 702000 3                  TSX2    ISR_GONE

      279     6972    2               WORDS_GOTTEN=WORDS_GOTTEN+1024;

   6972  3 000057   000007 235000 1                  LDA     WORDS_GOTTEN
         3 000060   002000 035007                    ADLA    1024,DL
         3 000061   000007 755000 1                  STA     WORDS_GOTTEN

PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:56   
      280     6973         %ENDIF;
      281     6974    2               FREEMEM=FREEMEM+1024;

   6974  3 000062   000006 236000 1                  LDQ     FREEMEM
         3 000063   002000 036007                    ADLQ    1024,DL
         3 000064   000006 756000 1                  STQ     FREEMEM

      282     6975    2               IF FREEMEM$=ADDR(NIL) THEN

   6975  3 000065   000004 236000 1                  LDQ     FREEMEM$
         3 000066   000000 116000 4                  CMPQ    0
         3 000067   000073 601000 3                  TNZ     s:6980

      283     6976    3               DO;

      284     6977    3                  FREEMEM$=GDS_VECTOR.VECT.PTR$;

   6977  3 000070   000001 236000 1                  LDQ     GDS_VECTOR+1
         3 000071   000004 756000 1                  STQ     FREEMEM$

      285     6978    3                  FREEMEMS$=GDS_VECTOR.VECT.PTR$;

   6978  3 000072   000005 756000 1                  STQ     FREEMEMS$

      286     6979    3                  END;

      287     6980    2               END;

   6980  3 000073   200004 470500                    LDP0    @NEWLEN,,AUTO
         3 000074   000000 236100                    LDQ     0,,PR0
         3 000075   200005 036100                    ADLQ    BNDB,,AUTO
         3 000076   000102 604000 3                  TMI     s:6982
         3 000077   000006 116000 1                  CMPQ    FREEMEM
         3 000100   000102 600000 3                  TZE     s:6982
         3 000101   000034 603000 3                  TRC     s:6961

      288     6981
PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:57   
      289     6982    1            OFFS=BITBIN(BINBIT(POFFW(FREEMEM$,FREEMEMS$),36)&BNDB);

   6982  3 000102   000005 235000 1                  LDA     FREEMEMS$
         3 000103   000022 771000                    ARL     18
         3 000104   200010 755100                    STA     OFFS+2,,AUTO
         3 000105   000004 236000 1                  LDQ     FREEMEM$
         3 000106   000022 772000                    QRL     18
         3 000107   200010 136100                    SBLQ    OFFS+2,,AUTO
         3 000110   200005 376100                    ANQ     BNDB,,AUTO
         3 000111   200006 756100                    STQ     OFFS,,AUTO

      290     6983    1            OFFS=BITBIN(BINBIT(1+BNDS-OFFS,36)&BNDB);

   6983  3 000112   200005 236100                    LDQ     BNDB,,AUTO
         3 000113   200006 136100                    SBLQ    OFFS,,AUTO
         3 000114   000001 036007                    ADLQ    1,DL
         3 000115   200005 376100                    ANQ     BNDB,,AUTO
         3 000116   200006 756100                    STQ     OFFS,,AUTO

      291     6984    1            FREEMEM$=PINCRW(FREEMEM$,OFFS);

   6984  3 000117   000022 736000                    QLS     18
         3 000120   000004 036000 1                  ADLQ    FREEMEM$
         3 000121   000004 756000 1                  STQ     FREEMEM$

      292     6985    1            NEW$=FREEMEM$;

   6985  3 000122   200003 471500                    LDP1    @NEW$,,AUTO
         3 000123   100000 756100                    STQ     0,,PR1

      293     6986    1            FREEMEM$=PINCRW(FREEMEM$,NEWLEN);

   6986  3 000124   000000 720100                    LXL0    0,,PR0
         3 000125   000000 636010                    EAQ     0,X0
         3 000126   000004 036000 1                  ADLQ    FREEMEM$
         3 000127   000004 756000 1                  STQ     FREEMEM$

PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:58   
      294     6987    1            FREEMEM=FREEMEM-NEWLEN-OFFS;

   6987  3 000130   000006 236000 1                  LDQ     FREEMEM
         3 000131   000000 136100                    SBLQ    0,,PR0
         3 000132   200006 136100                    SBLQ    OFFS,,AUTO
         3 000133   000006 756000 1                  STQ     FREEMEM

      295     6988
      296     6989    1            RETURN;

   6989  3 000134   000000 702200 xent               TSX2  ! X66_ARET

   6987  3 000135                       GDS_GONE     null
      297     6990    1    GDS_GONE: ;
      298     6991         %IF CP6;
      299     6992          /* Just ran out of dynamic segment space, try for ISR */
      300     6993    1            GDS='0'B;

   6993  3 000135   000010 450000 1                  STZ     GDS

      301     6994    1            FREEMEM$=ADDR(NIL);

   6994  3 000136   000000 236000 4                  LDQ     0
         3 000137   000004 756000 1                  STQ     FREEMEM$

      302     6995    1            FREEMEM=0;

   6995  3 000140   000006 450000 1                  STZ     FREEMEM

      303     6996    1            GOTO BND_SET;

   6996  3 000141   000033 710000 3                  TRA     BND_SET

   6995  3 000142                       ISR_GONE     null
      304     6997
      305     6998    1    ISR_GONE: ;
      306     6999         %ENDIF;
PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:59   
      307     7000                                  /* Completely out of memory!!  */
      308     7001    1            CALL DIAG(15,'ERROR => Memory has just been exhausted%%');

   7001  3 000142   000003 630400 4                  EPPR0   3
         3 000143   000001 631400 4                  EPPR1   1
         3 000144   000000 701000 xent               TSX1    DIAG
         3 000145   000000 011000                    NOP     0

      309     7002    1            NEW$=ADDR(NIL); /* dont expect to get back from DIAG */

   7002  3 000146   000000 236000 4                  LDQ     0
         3 000147   200003 470500                    LDP0    @NEW$,,AUTO
         3 000150   000000 756100                    STQ     0,,PR0

      310     7003    1    END GETNEW;

   7003  3 000151   000000 702200 xent               TSX2  ! X66_ARET
      311     7004         %EOD;

PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:60   
--  Include file information  --

   B_SEGIDS_C.:LIB_E04  is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure GETNEW.
PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:61   

 **** Variables and constants ****

  ****  Section 001  Data  GETNEW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w UBIN        r     1 FREEMEM                    4-0-0/w PTR         r     1 FREEMEM$
     5-0-0/w PTR         r     1 FREEMEMS$                 10-0-0/b BIT         r     1 GDS
     0-0-0/d STRC(144)   r     1 GDS_VECTOR                 7-0-0/w UBIN        r     1 WORDS_GOTTEN

  ****  Section 002 RoData GETNEW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/d STRC(216)   r     1 FPT_GDP                    2-0-0/d STRC(216)   r     1 FPT_GDS
    16-0-0/c STRC(369)         1 GONE_MSG                   0-0-0/w UBIN        r     1 MAX_WORDS_IN_DS3

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @NEW$                      4-0-0/w PTR         r     1 @NEWLEN
     5-0-0/b BIT         r     1 BNDB                       5-0-0/w SBIN        r     1 BNDS
    *0-0-0/w PTR         r     1 NEW$                      *0-0-0/w UBIN        r     1 NEWLEN
     6-0-0/w SBIN        r     1 OFFS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$UC

PL6.E3A0      #003=GETNEW File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:48 Page:62   

   Procedure GETNEW requires 106 words for executable code.
   Procedure GETNEW requires 10 words of local(AUTO) storage.

PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:63   
      312        1         /*M* IO => INPUT/OUTPUT ROUTINES */
      313        2        /*T***********************************************************/
      314        3        /*T*                                                         */
      315        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      316        5        /*T*                                                         */
      317        6        /*T***********************************************************/
      318        7
      319        8
      320        9
      321       10
      322       11
      323       12
      324       13         OPEN_INPUT : PROC;
      325       14
      326       15         /*D*
      327       16                NAME: OPEN_INPUT
      328       17             PURPOSE:
      329       18
      330       19            Open the input file and check for the output file
      331       20            option defaults in the JIT.
      332       21         */
      333       22
      334       23         %INCLUDE Z8A_SYS_FILE;
      335     6298         %INCLUDE XU_MACRO_C;
      336     9392         %IF CP6;
      337     9393         %INCLUDE XU_PERR_C;
      338     9584         %INCLUDE B$JIT;
      339    10187         %ENDIF;
      340    10188         %INCLUDE Z8P_SCAN_EXT;
      341    10377         %IF GCOS;
      342    10378 C       %INCLUDE BDIAG8SPT;
      343    10379 C       %INCLUDE BDIAG8SUBS;
      344    10380 C
      345    10381 C       %GCOS8_ENTRIES;
      346    10382         %ENDIF;
      347    10383
      348    10384    1    DCL XUU$OPEN ENTRY(1) ALTRET;
PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:64   
      349    10385    1    DCL DIAG ENTRY(6);
      350    10386         %IF CP6;
      351    10387    1    DCL B$JIT$ PTR SYMREF;
      352    10388         %ENDIF;
      353    10389         %VLP_TEXTC(FPTN=SI_MSG,TEXT=' ERROR => Missing input file.');
      354    10404         %VLP_TEXTC(FPTN=UI_MSG,TEXT=' ERROR => Bad update file.');
      355    10419         %XUU_PARAM(BASE=YES);
      356    10854         %IF GCOS;
      357    10855 C       %SPT_FILE_INFO(SPTN=CHECK_UI,FILECODE='A*');
      358    10856 C       %SPT_FILE_INFO(SPTN=CHECK_OU,FILECODE='*S');
      359    10857 C
      360    10858 C                  CALL S$FILE_INFO(CHECK_UI);
      361    10859 C                  XUU_PARAM.FLAGS.UP_DATE# = CHECK_UI.R.PRESENT;
      362    10860 C                  CALL S$FILE_INFO(CHECK_OU);
      363    10861 C                  OPTIONS(OU_OPT)=CHECK_OU.R.PRESENT;
      364    10862         %ENDIF;
      365    10863         %IF CP6;
      366    10864    1               XUU_PARAM.FLAGS.UP_DATE#=B$JIT.PRFLAGS.UI|OPTIONS(UI_OPT);
      367    10865    1               OPTIONS(OU_OPT)=OPTIONS(OU_OPT)|B$JIT.PRFLAGS.OU;
      368    10866         %ENDIF;
      369    10867    1               OPTIONS(ERROR_TABLE_OPT) = OPTIONS(OU_OPT);
      370    10868
      371    10869    1               XUU_PARAM.UI_ERRCODE='0'B;
      372    10870    1               XUU_PARAM.SI_ERRCODE='0'B;
      373    10871
      374    10872    1               CALL XUU$OPEN(XUU_PARAM) ALTRET(XUU_OPEN_1);
      375    10873
      376    10874    2               DO WHILE('0'B);
      377    10875    2    XUU_OPEN_1:   ;
      378    10876
      379    10877    2                  IF XUU_PARAM.SI_ERRCODE~='0'B THEN
      380    10878    2                     CALL DIAG(15,SI_MSG);
      381    10879
      382    10880    2                  IF XUU_PARAM.UI_ERRCODE~='0'B THEN
      383    10881    2                     CALL DIAG(15,UI_MSG);
      384    10882
      385    10883    2                  END;
PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:65   
      386    10884
      387    10885
      388    10886    1    END OPEN_INPUT;
      389    10887         %EOD;

PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:66   
--  Include file information  --

   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:LIB_E04  is referenced.
   B$JIT.:LIB_E04  cannot be made into a system file and is referenced.
   XU_PERR_C.:LIB_E04  is referenced.
   XU_MACRO_C.:LIB_E04  is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure OPEN_INPUT.

   Procedure OPEN_INPUT requires 52 words for executable code.
   Procedure OPEN_INPUT requires 6 words of local(AUTO) storage.

PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:67   

 Object Unit name= OPEN_INPUT                                 File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:48:48.24 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none     1      1  OUT_DCBN
    2  LblCom even  none     1      1  SAVE_OUT_DCBN
    3  LblCom even  none     1      1  SAVE_DCBN2
    4   DCB   even  none     0      0  M$OU
    5   DCB   even  none     0      0  M$SO
    6   DCB   even  none     0      0  M$LO
    7   DCB   even  none     0      0  M$SI
    8   DCB   even  none     0      0  M$UI
    9   DCB   even  none     0      0  M$DO
   10  LblCom even  none     1      1  ERR_SEV
   11  LblCom even  none     1      1  OPTIONS
   12  LblCom even  none     1      1  DO_REQ
   13  LblCom even  none    26     32  OPTIONS_TEXT
   14  LblCom even  none   128    200  INSTR
   15  LblCom even  none     1      1  INSTR_LISTED
   16  LblCom even  none     1      1  INSTR_LEN
   17  LblCom even  none     1      1  INSTR_INDX
   18  LblCom even  none     1      1  EOF_FLAG
   19  LblCom even  none     5      5  KEY_REC
   20  LblCom even  none     1      1  LINES_OUT
   21  LblCom even  none    25     31  HEADER_LINE1
   22  LblCom even  none    25     31  HEADER_LINE3
   23  LblCom even  none    25     31  HEADER_LINE2
   24  LblCom even  none     1      1  MAX_LINES_PER_PAGE
   25  LblCom even  none    28     34  LINE
   26  LblCom even  none     1      1  LINELEN
   27  LblCom even  none     1      1  PHASE
   28  LblCom even  none     1      1  ERROR_COUNT
PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:68   
   29  RoData even  UTS     15     17  OPEN_INPUT
   30   Data  even  none    14     16  OPEN_INPUT
   31   Proc  even  none    52     64  OPEN_INPUT
   32  RoData even  none     8     10  OPEN_INPUT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    31      0   yes            yes      Std        0  OPEN_INPUT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 XUU$OPEN
         yes           Std       6 DIAG
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$OU                                  M$SO
     M$LO                                  M$SI                                  M$UI
     M$DO                                  B$JIT$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:69   


      312        1         /*M* IO => INPUT/OUTPUT ROUTINES */
      313        2        /*T***********************************************************/
      314        3        /*T*                                                         */
      315        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      316        5        /*T*                                                         */
      317        6        /*T***********************************************************/
      318        7
      319        8
      320        9
      321       10
      322       11
      323       12
      324       13         OPEN_INPUT : PROC;

     13 31 000000   000000 700200 xent  OPEN_INPUT   TSX0  ! X66_AUTO_0
        31 000001   000006 000000                    ZERO    6,0

      325       14
      326       15         /*D*
      327       16                NAME: OPEN_INPUT
      328       17             PURPOSE:
      329       18
      330       19            Open the input file and check for the output file
      331       20            option defaults in the JIT.
      332       21         */
      333       22
      334       23         %INCLUDE Z8A_SYS_FILE;
      335     6298         %INCLUDE XU_MACRO_C;
      336     9392         %IF CP6;
      337     9393         %INCLUDE XU_PERR_C;
      338     9584         %INCLUDE B$JIT;
      339    10187         %ENDIF;
      340    10188         %INCLUDE Z8P_SCAN_EXT;
      341    10377         %IF GCOS;
      342    10378 C       %INCLUDE BDIAG8SPT;
      343    10379 C       %INCLUDE BDIAG8SUBS;
PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:70   
      344    10380 C
      345    10381 C       %GCOS8_ENTRIES;
      346    10382         %ENDIF;
      347    10383
      348    10384    1    DCL XUU$OPEN ENTRY(1) ALTRET;
      349    10385    1    DCL DIAG ENTRY(6);
      350    10386         %IF CP6;
      351    10387    1    DCL B$JIT$ PTR SYMREF;
      352    10388         %ENDIF;
      353    10389         %VLP_TEXTC(FPTN=SI_MSG,TEXT=' ERROR => Missing input file.');
      354    10404         %VLP_TEXTC(FPTN=UI_MSG,TEXT=' ERROR => Bad update file.');
      355    10419         %XUU_PARAM(BASE=YES);
      356    10854         %IF GCOS;
      357    10855 C       %SPT_FILE_INFO(SPTN=CHECK_UI,FILECODE='A*');
      358    10856 C       %SPT_FILE_INFO(SPTN=CHECK_OU,FILECODE='*S');
      359    10857 C
      360    10858 C                  CALL S$FILE_INFO(CHECK_UI);
      361    10859 C                  XUU_PARAM.FLAGS.UP_DATE# = CHECK_UI.R.PRESENT;
      362    10860 C                  CALL S$FILE_INFO(CHECK_OU);
      363    10861 C                  OPTIONS(OU_OPT)=CHECK_OU.R.PRESENT;
      364    10862         %ENDIF;
      365    10863         %IF CP6;
      366    10864    1               XUU_PARAM.FLAGS.UP_DATE#=B$JIT.PRFLAGS.UI|OPTIONS(UI_OPT);

  10864 31 000002   000000 236000 11                 LDQ     OPTIONS
        31 000003   000006 736000                    QLS     6
        31 000004   400000 376003                    ANQ     -131072,DU
        31 000005   200004 756100                    STQ     4,,AUTO
        31 000006   000000 470400 xsym               LDP0    B$JIT$
        31 000007   000030 236100                    LDQ     24,,PR0
        31 000010   000001 736000                    QLS     1
        31 000011   400000 376003                    ANQ     -131072,DU
        31 000012   200004 276100                    ORQ     4,,AUTO
        31 000013   000001 772000                    QRL     1
        31 000014   000000 676000 30                 ERQ     XUU_PARAM
        31 000015   200000 376003                    ANQ     65536,DU
        31 000016   000000 656000 30                 ERSQ    XUU_PARAM
PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:71   

      367    10865    1               OPTIONS(OU_OPT)=OPTIONS(OU_OPT)|B$JIT.PRFLAGS.OU;

  10865 31 000017   000030 236100                    LDQ     24,,PR0
        31 000020   000002 736000                    QLS     2
        31 000021   400000 376003                    ANQ     -131072,DU
        31 000022   200004 756100                    STQ     4,,AUTO
        31 000023   000000 236000 11                 LDQ     OPTIONS
        31 000024   000002 736000                    QLS     2
        31 000025   400000 376003                    ANQ     -131072,DU
        31 000026   200004 276100                    ORQ     4,,AUTO
        31 000027   000002 772000                    QRL     2
        31 000030   000000 676000 11                 ERQ     OPTIONS
        31 000031   100000 376003                    ANQ     32768,DU
        31 000032   000000 656000 11                 ERSQ    OPTIONS

      368    10866         %ENDIF;
      369    10867    1               OPTIONS(ERROR_TABLE_OPT) = OPTIONS(OU_OPT);

  10867 31 000033   000000 236000 11                 LDQ     OPTIONS
        31 000034   000011 772000                    QRL     9
        31 000035   000000 676000 11                 ERQ     OPTIONS
        31 000036   000100 376003                    ANQ     64,DU
        31 000037   000000 656000 11                 ERSQ    OPTIONS

      370    10868
      371    10869    1               XUU_PARAM.UI_ERRCODE='0'B;

  10869 31 000040   000002 450000 30                 STZ     XUU_PARAM+2

      372    10870    1               XUU_PARAM.SI_ERRCODE='0'B;

  10870 31 000041   000001 450000 30                 STZ     XUU_PARAM+1

      373    10871
      374    10872    1               CALL XUU$OPEN(XUU_PARAM) ALTRET(XUU_OPEN_1);

PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:72   
  10872 31 000042   000001 630400 32                 EPPR0   1
        31 000043   000000 631400 32                 EPPR1   0
        31 000044   000000 701000 xent               TSX1    XUU$OPEN
        31 000045   000047 702000 31                 TSX2    XUU_OPEN_1

      375    10873
      376    10874    2               DO WHILE('0'B);

  10874 31 000046   000063 710000 31                 TRA     s:10886

  10872 31 000047                       XUU_OPEN_1   null
      377    10875    2    XUU_OPEN_1:   ;
      378    10876
      379    10877    2                  IF XUU_PARAM.SI_ERRCODE~='0'B THEN

  10877 31 000047   000001 235000 30                 LDA     XUU_PARAM+1
        31 000050   000055 600000 31                 TZE     s:10880

      380    10878    2                     CALL DIAG(15,SI_MSG);

  10878 31 000051   000004 630400 32                 EPPR0   4
        31 000052   000002 631400 32                 EPPR1   2
        31 000053   000000 701000 xent               TSX1    DIAG
        31 000054   000000 011000                    NOP     0

      381    10879
      382    10880    2                  IF XUU_PARAM.UI_ERRCODE~='0'B THEN

  10880 31 000055   000002 235000 30                 LDA     XUU_PARAM+2
        31 000056   000063 600000 31                 TZE     s:10886

      383    10881    2                     CALL DIAG(15,UI_MSG);

  10881 31 000057   000006 630400 32                 EPPR0   6
        31 000060   000002 631400 32                 EPPR1   2
        31 000061   000000 701000 xent               TSX1    DIAG
        31 000062   000000 011000                    NOP     0
PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:73   

      384    10882
      385    10883    2                  END;

      386    10884
      387    10885
      388    10886    1    END OPEN_INPUT;

  10886 31 000063   000000 702200 xent               TSX2  ! X66_ARET
      389    10887         %EOD;

PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:74   
--  Include file information  --

   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:LIB_E04  is referenced.
   B$JIT.:LIB_E04  cannot be made into a system file and is referenced.
   XU_PERR_C.:LIB_E04  is referenced.
   XU_MACRO_C.:LIB_E04  is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure OPEN_INPUT.
PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:75   

 **** Variables and constants ****

  ****  Section 001 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 002 LblCom SAVE_OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_OUT_DCBN

  ****  Section 003 LblCom SAVE_DCBN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_DCBN2

  ****  Section 010 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 011 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 OPTIONS(0:25)

PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:76   
  ****  Section 012 LblCom DO_REQ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 DO_REQ

  ****  Section 013 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 014 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 015 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 016 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 017 LblCom INSTR_INDX

PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:77   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 018 LblCom EOF_FLAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 019 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(20)          1 KEY_REC

  ****  Section 020 LblCom LINES_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINES_OUT

  ****  Section 021 LblCom HEADER_LINE1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE1

  ****  Section 022 LblCom HEADER_LINE3

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:78   

     0-0-0/c CHAR(100)         1 HEADER_LINE3

  ****  Section 023 LblCom HEADER_LINE2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE2

  ****  Section 024 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 MAX_LINES_PER_PAGE

  ****  Section 025 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 026 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINELEN

  ****  Section 027 LblCom PHASE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PHASE
PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:79   

  ****  Section 028 LblCom ERROR_COUNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERROR_COUNT

  ****  Section 029 RoData OPEN_INPUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(270)   r     1 SI_MSG                    10-0-0/c STRC(243)   r     1 UI_MSG

  ****  Section 030  Data  OPEN_INPUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(504)   r     1 XUU_PARAM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0N  NULL        r     1 M$DO
     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$OU
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$SO
PL6.E3A0      #004=OPEN_INPUT File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:48 Page:80   
     0-0-0N  NULL        r     1 M$UC                       0-0-0N  NULL        r     1 M$UI


   Procedure OPEN_INPUT requires 52 words for executable code.
   Procedure OPEN_INPUT requires 6 words of local(AUTO) storage.

PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:81   
      390        1        /*T***********************************************************/
      391        2        /*T*                                                         */
      392        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      393        4        /*T*                                                         */
      394        5        /*T***********************************************************/
      395        6         INPUT:  PROC(STR,LEN,ASCII_KEY) NOAUTO;
      396        7
      397        8         /*D*
      398        9                NAME: INPUT
      399       10             PURPOSE: RETURN THE NEXT INPUT LINE FROM THE INPUT FILE.
      400       11                      LEN = 0 DESIGNATES END OF FILE.
      401       12         */
      402       13
      403       14         %INCLUDE Z8A_SYS_FILE;
      404     6289
      405     6290    1    DCL STR CHAR(512);
      406     6291    1    DCL LEN UBIN;
      407     6292    1    DCL ASCII_KEY CHAR(20);
      408     6293
      409     6294         /* RETURN IN STR THE NEXT INPUT LINE.
      410     6295            LEN=0 IF END OF FILE FOUND.
      411     6296            RECNO IS THE MONITORS RECORD NUMBER */
      412     6297
      413     6298         %INCLUDE XU_MACRO_C;
      414     9392         %INCLUDE Z8P_SCAN_EXT;
      415     9581
      416     9582         %IF GCOS;
      417     9583 C       /*N* GCOS G04 release, delete this conditional code */
      418     9584 C       DCL XUU$READ   ENTRY(3) ALTRET;
      419     9585         %ENDIF;
      420     9586         %IF CP6;
      421     9587         /*N* End of code to be deleted */
      422     9588    1    DCL XUU$READ   ENTRY(2) ALTRET;
      423     9589         /*N* Also delete the following %ENDIF */
      424     9590         %ENDIF;
      425     9591
      426     9592         %XUU_PARAM(BASE=YES);
PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:82   
      427    10027
      428    10028
      429    10029         /*N* GCOS G04 release, delete the following code */
      430    10030         %IF GCOS;
      431    10031 C               CALL XUU$READ(XUU_PARAM,VECTOR(STR),0)
      432    10032         %ENDIF;
      433    10033         %IF CP6;
      434    10034         /*N* End of code to be deleted */
      435    10035    1            CALL XUU$READ(XUU_PARAM,VECTOR(STR))
      436    10036         /*N* Also delete the following %ENDIF */
      437    10037         %ENDIF;
      438    10038    1              ALTRET( READ_ALT);
      439    10039
      440    10040    1            ASCII_KEY=XUU_PARAM.ASCII_KEY;
      441    10041
      442    10042    1            LEN=XUU_PARAM.ARS;
      443    10043
      444    10044    1            RETURN;
      445    10045    1    READ_ALT:;
      446    10046    1            LEN=0;
      447    10047
      448    10048    1    END INPUT;
      449    10049         %EOD;

PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:83   
--  Include file information  --

   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:LIB_E04  is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure INPUT.

   Procedure INPUT requires 27 words for executable code.
   Procedure INPUT is declared NOAUTO and requires 22 words of local(STATIC) storage.

PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:84   

 Object Unit name= INPUT                                      File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:49:21.36 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    22     26  INPUT
    1   DCB   even  none     0      0  M$UC
    2  LblCom even  none     1      1  OUT_DCBN
    3  LblCom even  none     1      1  SAVE_OUT_DCBN
    4  LblCom even  none     1      1  SAVE_DCBN2
    5   DCB   even  none     0      0  M$OU
    6   DCB   even  none     0      0  M$SO
    7   DCB   even  none     0      0  M$LO
    8   DCB   even  none     0      0  M$SI
    9   DCB   even  none     0      0  M$UI
   10   DCB   even  none     0      0  M$DO
   11  LblCom even  none     1      1  ERR_SEV
   12  LblCom even  none     1      1  OPTIONS
   13  LblCom even  none     1      1  DO_REQ
   14  LblCom even  none    26     32  OPTIONS_TEXT
   15  LblCom even  none   128    200  INSTR
   16  LblCom even  none     1      1  INSTR_LISTED
   17  LblCom even  none     1      1  INSTR_LEN
   18  LblCom even  none     1      1  INSTR_INDX
   19  LblCom even  none     1      1  EOF_FLAG
   20  LblCom even  none     5      5  KEY_REC
   21  LblCom even  none     1      1  LINES_OUT
   22  LblCom even  none    25     31  HEADER_LINE1
   23  LblCom even  none    25     31  HEADER_LINE3
   24  LblCom even  none    25     31  HEADER_LINE2
   25  LblCom even  none     1      1  MAX_LINES_PER_PAGE
   26  LblCom even  none    28     34  LINE
   27  LblCom even  none     1      1  LINELEN
   28  LblCom even  none     1      1  PHASE
PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:85   
   29  LblCom even  none     1      1  ERROR_COUNT
   30   Proc  even  none    27     33  INPUT
   31  RoData even  none     3      3  INPUT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    30      0   yes            yes      Std        3  INPUT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XUU$READ
                       nStd      0 X66_STATIC_3

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$OU                                  M$SO
     M$LO                                  M$SI                                  M$UI
     M$DO

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:86   


      390        1        /*T***********************************************************/
      391        2        /*T*                                                         */
      392        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      393        4        /*T*                                                         */
      394        5        /*T***********************************************************/
      395        6         INPUT:  PROC(STR,LEN,ASCII_KEY) NOAUTO;

      6 30 000000   000000 700200 xent  INPUT        TSX0  ! X66_STATIC_3
        30 000001   000000 000003 0                  ZERO    0,3

      396        7
      397        8         /*D*
      398        9                NAME: INPUT
      399       10             PURPOSE: RETURN THE NEXT INPUT LINE FROM THE INPUT FILE.
      400       11                      LEN = 0 DESIGNATES END OF FILE.
      401       12         */
      402       13
      403       14         %INCLUDE Z8A_SYS_FILE;
      404     6289
      405     6290    1    DCL STR CHAR(512);
      406     6291    1    DCL LEN UBIN;
      407     6292    1    DCL ASCII_KEY CHAR(20);
      408     6293
      409     6294         /* RETURN IN STR THE NEXT INPUT LINE.
      410     6295            LEN=0 IF END OF FILE FOUND.
      411     6296            RECNO IS THE MONITORS RECORD NUMBER */
      412     6297
      413     6298         %INCLUDE XU_MACRO_C;
      414     9392         %INCLUDE Z8P_SCAN_EXT;
      415     9581
      416     9582         %IF GCOS;
      417     9583 C       /*N* GCOS G04 release, delete this conditional code */
      418     9584 C       DCL XUU$READ   ENTRY(3) ALTRET;
      419     9585         %ENDIF;
      420     9586         %IF CP6;
      421     9587         /*N* End of code to be deleted */
PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:87   
      422     9588    1    DCL XUU$READ   ENTRY(2) ALTRET;
      423     9589         /*N* Also delete the following %ENDIF */
      424     9590         %ENDIF;
      425     9591
      426     9592         %XUU_PARAM(BASE=YES);
      427    10027
      428    10028
      429    10029         /*N* GCOS G04 release, delete the following code */
      430    10030         %IF GCOS;
      431    10031 C               CALL XUU$READ(XUU_PARAM,VECTOR(STR),0)
      432    10032         %ENDIF;
      433    10033         %IF CP6;
      434    10034         /*N* End of code to be deleted */
      435    10035    1            CALL XUU$READ(XUU_PARAM,VECTOR(STR))

  10035 30 000002   000000 235000 31                 LDA     0
        30 000003   000001 236000 0                  LDQ     @STR
        30 000004   000022 757000 0                  STAQ    XUU_PARAM+14
        30 000005   000022 630400 0                  EPPR0   XUU_PARAM+14
        30 000006   000025 450400 0                  STP0    XUU_PARAM+17
        30 000007   000002 236000 31                 LDQ     2
        30 000010   000024 756000 0                  STQ     XUU_PARAM+16
        30 000011   000024 630400 0                  EPPR0   XUU_PARAM+16
        30 000012   000001 631400 31                 EPPR1   1
        30 000013   000000 701000 xent               TSX1    XUU$READ
        30 000014   000027 702000 30                 TSX2    READ_ALT

      436    10036         /*N* Also delete the following %ENDIF */
      437    10037         %ENDIF;
      438    10038    1              ALTRET( READ_ALT);
      439    10039
      440    10040    1            ASCII_KEY=XUU_PARAM.ASCII_KEY;

  10040 30 000015   000003 470400 0                  LDP0    @ASCII_KEY
        30 000016   040100 100400                    MLR     fill='040'O
        30 000017   000007 000012 0                  ADSC9   XUU_PARAM+3              cn=0,n=10
        30 000020   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20
PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:88   

      441    10041
      442    10042    1            LEN=XUU_PARAM.ARS;

  10042 30 000021   000002 471400 0                  LDP1    @LEN
        30 000022   000004 236000 0                  LDQ     XUU_PARAM
        30 000023   000777 376007                    ANQ     511,DL
        30 000024   100000 756100                    STQ     0,,PR1

      443    10043
      444    10044    1            RETURN;

  10044 30 000025   000000 221200 0                  LDX1  ! 0
        30 000026   000001 702211                    TSX2  ! 1,X1

  10042 30 000027                       READ_ALT     null
      445    10045    1    READ_ALT:;
      446    10046    1            LEN=0;

  10046 30 000027   000002 470400 0                  LDP0    @LEN
        30 000030   000000 450100                    STZ     0,,PR0

      447    10047
      448    10048    1    END INPUT;

  10048 30 000031   000000 221200 0                  LDX1  ! 0
        30 000032   000001 702211                    TSX2  ! 1,X1
      449    10049         %EOD;

PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:89   
--  Include file information  --

   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:LIB_E04  is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure INPUT.
PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:90   

 **** Variables and constants ****

  ****  Section 000  Data  INPUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ASCII_KEY                 2-0-0/w PTR         r     1 @LEN
     1-0-0/w PTR         r     1 @STR                      *0-0-0/c CHAR(20)    r     1 ASCII_KEY
    *0-0-0/w UBIN        r     1 LEN                       *0-0-0/c CHAR(512)   r     1 STR
     4-0-0/w STRC(504)   r     1 XUU_PARAM

  ****  Section 002 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 003 LblCom SAVE_OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_OUT_DCBN

  ****  Section 004 LblCom SAVE_DCBN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_DCBN2

  ****  Section 011 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:91   

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 012 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)

  ****  Section 013 LblCom DO_REQ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 DO_REQ

  ****  Section 014 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 015 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 016 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED
PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:92   

  ****  Section 017 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 018 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 019 LblCom EOF_FLAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 020 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(20)          1 KEY_REC

  ****  Section 021 LblCom LINES_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINES_OUT

  ****  Section 022 LblCom HEADER_LINE1
PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:93   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE1

  ****  Section 023 LblCom HEADER_LINE3

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE3

  ****  Section 024 LblCom HEADER_LINE2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE2

  ****  Section 025 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 MAX_LINES_PER_PAGE

  ****  Section 026 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 027 LblCom LINELEN

  ****  Scalars and arrays  ****
PL6.E3A0      #005=INPUT File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:94   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINELEN

  ****  Section 028 LblCom PHASE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PHASE

  ****  Section 029 LblCom ERROR_COUNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERROR_COUNT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$DO                       0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OU                       0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$SO                       0-0-0N  NULL        r     1 M$UC
     0-0-0N  NULL        r     1 M$UI


   Procedure INPUT requires 27 words for executable code.
   Procedure INPUT is declared NOAUTO and requires 22 words of local(STATIC) storage.

PL6.E3A0      #006=OUTPUT File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:49 Page:95   
      450        1        /*T***********************************************************/
      451        2        /*T*                                                         */
      452        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      453        4        /*T*                                                         */
      454        5        /*T***********************************************************/
      455        6         OUTPUT: PROC(BUFFER,LEN) NOAUTO;
      456        7
      457        8         /*D*
      458        9                NAME: OUTPUT
      459       10             PURPOSE: WRITE THE BUFFER TO THE CURRENT OUTPUT FILE.
      460       11         */
      461       12
      462       13
      463       14    1    DCL LEN UBIN;
      464       15    1    DCL BUFFER CHAR(LEN);
      465       16
      466       17
      467       18         %SUB LS_OPT = 0;
      468       19         %INCLUDE Z8A_SYS_FILE;
      469     6294         %INCLUDE Z9P_IO_EXT;
      470     6355         %DCBPTR;
      471     6365         %SUB BOOLEAN="BIT(1)";
      472     6366
      473     6367    1    DCL HANDLE_LISTING ENTRY;
      474     6368    1    DCL OPTIONS (0:25) BOOLEAN EXT;
      475     6369    1    DCL MSG CHAR(0) CONSTANT INIT('*** ALTRETURN on WRITE');
      476     6370         %IF GCOS;
      477     6371 C       DCL DO_REQ BOOLEAN EXT;
      478     6372         %ENDIF;
      479     6373
      480     6374         %FPT_WRITE;
      481     6405
      482     6406    1            IF LEN>0 THEN
      483     6407    2            DO;
      484     6408    2               IF OUT_DCBN = Z8PS$M$LO# AND OPTIONS(LS_OPT) THEN
      485     6409    2                 CALL HANDLE_LISTING;
      486     6410    2               FPT_WRITE.V.DCB# = OUT_DCBN;
PL6.E3A0      #006=OUTPUT File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:49 Page:96   
      487     6411    2               FPT_WRITE.BUF_=VECTOR(BUFFER);
      488     6412
      489     6413    2               CALL M$WRITE(FPT_WRITE) ALTRET (SOMEBODY_BLEW_IT);
      490     6414    2               END;
      491     6415
      492     6416    1            LEN = 0;
      493     6417    1            RETURN;
      494     6418
      495     6419    1    SOMEBODY_BLEW_IT:
      496     6420         %IF CP6;
      497     6421    1            CALL M$MERC;
      498     6422         %ENDIF;
      499     6423         %IF GCOS;
      500     6424 C               FPT_WRITE.BUF_=VECTOR(MSG);
      501     6425 C               FPT_WRITE.V.DCB#=Z8PS$M$LO#;
      502     6426 C               CALL M$WRITE(FPT_WRITE) ALTRET(BAD_NEWS);
      503     6427 C               IF DO_REQ THEN DO;
      504     6428 C                 FPT_WRITE.V.DCB#=Z8PS$M$DO#;
      505     6429 C                 CALL M$WRITE(FPT_WRITE) ALTRET(BAD_NEWS);
      506     6430 C               END;
      507     6431 C               LEN=0;
      508     6432 C               RETURN;
      509     6433 C       BAD_NEWS:
      510     6434 C               CALL M$ERR;
      511     6435         %ENDIF;
      512     6436
      513     6437    1    END OUTPUT;
      514     6438         %EOD;

PL6.E3A0      #006=OUTPUT File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:49 Page:97   
--  Include file information  --

   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure OUTPUT.

   Procedure OUTPUT requires 35 words for executable code.
   Procedure OUTPUT is declared NOAUTO and requires 16 words of local(STATIC) storage.

PL6.E3A0      #006=OUTPUT File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:49 Page:98   

 Object Unit name= OUTPUT                                     File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:49:34.00 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    16     20  OUTPUT
    1   DCB   even  none     0      0  M$UC
    2  LblCom even  none     1      1  OUT_DCBN
    3  LblCom even  none     1      1  SAVE_OUT_DCBN
    4  LblCom even  none     1      1  SAVE_DCBN2
    5   DCB   even  none     0      0  M$OU
    6   DCB   even  none     0      0  M$SO
    7   DCB   even  none     0      0  M$LO
    8   DCB   even  none     0      0  M$SI
    9   DCB   even  none     0      0  M$UI
   10   DCB   even  none     0      0  M$DO
   11  LblCom even  none     1      1  OPTIONS
   12  RoData even  UTS      6      6  OUTPUT
   13   Proc  even  none    35     43  OUTPUT
   14  RoData even  none     1      1  OUTPUT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    13      0   yes            yes      Std        2  OUTPUT
PL6.E3A0      #006=OUTPUT File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:49 Page:99   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 HANDLE_LISTING
                       nStd      0 X66_STATIC_2

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$OU                                  M$SO
     M$LO                                  M$SI                                  M$UI
     M$DO                                  Z8PS$M$OU$                            Z8PS$M$LO$
     Z8PS$M$DO$                            Z8PS$M$SO$                            Z8PS$M$OU#
     Z8PS$M$LO#                            Z8PS$M$DO#                            Z8PS$M$SO#

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #006=OUTPUT File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:49 Page:100  


      450        1        /*T***********************************************************/
      451        2        /*T*                                                         */
      452        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      453        4        /*T*                                                         */
      454        5        /*T***********************************************************/
      455        6         OUTPUT: PROC(BUFFER,LEN) NOAUTO;

      6 13 000000   000000 700200 xent  OUTPUT       TSX0  ! X66_STATIC_2
        13 000001   000000 000002 0                  ZERO    0,2

      456        7
      457        8         /*D*
      458        9                NAME: OUTPUT
      459       10             PURPOSE: WRITE THE BUFFER TO THE CURRENT OUTPUT FILE.
      460       11         */
      461       12
      462       13
      463       14    1    DCL LEN UBIN;
      464       15    1    DCL BUFFER CHAR(LEN);
      465       16
      466       17
      467       18         %SUB LS_OPT = 0;
      468       19         %INCLUDE Z8A_SYS_FILE;
      469     6294         %INCLUDE Z9P_IO_EXT;
      470     6355         %DCBPTR;
      471     6365         %SUB BOOLEAN="BIT(1)";
      472     6366
      473     6367    1    DCL HANDLE_LISTING ENTRY;
      474     6368    1    DCL OPTIONS (0:25) BOOLEAN EXT;
      475     6369    1    DCL MSG CHAR(0) CONSTANT INIT('*** ALTRETURN on WRITE');
      476     6370         %IF GCOS;
      477     6371 C       DCL DO_REQ BOOLEAN EXT;
      478     6372         %ENDIF;
      479     6373
      480     6374         %FPT_WRITE;
      481     6405
PL6.E3A0      #006=OUTPUT File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:49 Page:101  
      482     6406    1            IF LEN>0 THEN

   6406 13 000002   000002 470400 0                  LDP0    @LEN
        13 000003   000000 235100                    LDA     0,,PR0
        13 000004   000033 600000 13                 TZE     s:6416

      483     6407    2            DO;

      484     6408    2               IF OUT_DCBN = Z8PS$M$LO# AND OPTIONS(LS_OPT) THEN

   6408 13 000005   000000 236000 2                  LDQ     OUT_DCBN
        13 000006   000016 604000 13                 TMI     s:6410
        13 000007   000000 116000 xsym               CMPQ    Z8PS$M$LO#
        13 000010   000016 601000 13                 TNZ     s:6410
        13 000011   000000 234000 11                 SZN     OPTIONS
        13 000012   000016 605000 13                 TPL     s:6410

      485     6409    2                 CALL HANDLE_LISTING;

   6409 13 000013   000000 631400 14                 EPPR1   0
        13 000014   000000 701000 xent               TSX1    HANDLE_LISTING
        13 000015   000000 011000                    NOP     0

      486     6410    2               FPT_WRITE.V.DCB# = OUT_DCBN;

   6410 13 000016   000000 720000 2                  LXL0    OUT_DCBN
        13 000017   000014 740000 0                  STX0    FPT_WRITE+8

      487     6411    2               FPT_WRITE.BUF_=VECTOR(BUFFER);

   6411 13 000020   000002 470400 0                  LDP0    @LEN
        13 000021   000000 721100                    LXL1    0,,PR0
        13 000022   000000 635011                    EAA     0,X1
        13 000023   000002 771000                    ARL     2
        13 000024   000140 135007                    SBLA    96,DL
        13 000025   000001 236000 0                  LDQ     @BUFFER
        13 000026   000010 757000 0                  STAQ    FPT_WRITE+4
PL6.E3A0      #006=OUTPUT File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:49 Page:102  

      488     6412
      489     6413    2               CALL M$WRITE(FPT_WRITE) ALTRET (SOMEBODY_BLEW_IT);

   6413 13 000027   000004 630400 0                  EPPR0   FPT_WRITE
        13 000030   440001 713400                    CLIMB   alt,write
        13 000031   401400 401760                    pmme    nvectors=4
        13 000032   000037 702000 13                 TSX2    SOMEBODY_BLEW_IT

      490     6414    2               END;

      491     6415
      492     6416    1            LEN = 0;

   6416 13 000033   000002 470400 0                  LDP0    @LEN
        13 000034   000000 450100                    STZ     0,,PR0

      493     6417    1            RETURN;

   6417 13 000035   000000 221200 0                  LDX1  ! 0
        13 000036   000001 702211                    TSX2  ! 1,X1

      494     6418
      495     6419    1    SOMEBODY_BLEW_IT:
      496     6420         %IF CP6;
      497     6421    1            CALL M$MERC;

   6421 13 000037   010007 713400       SOMEBODY_BL* CLIMB   4103
        13 000040   000000 401760                    pmme    nvectors=0

      498     6422         %ENDIF;
      499     6423         %IF GCOS;
      500     6424 C               FPT_WRITE.BUF_=VECTOR(MSG);
      501     6425 C               FPT_WRITE.V.DCB#=Z8PS$M$LO#;
      502     6426 C               CALL M$WRITE(FPT_WRITE) ALTRET(BAD_NEWS);
      503     6427 C               IF DO_REQ THEN DO;
      504     6428 C                 FPT_WRITE.V.DCB#=Z8PS$M$DO#;
PL6.E3A0      #006=OUTPUT File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:49 Page:103  
      505     6429 C                 CALL M$WRITE(FPT_WRITE) ALTRET(BAD_NEWS);
      506     6430 C               END;
      507     6431 C               LEN=0;
      508     6432 C               RETURN;
      509     6433 C       BAD_NEWS:
      510     6434 C               CALL M$ERR;
      511     6435         %ENDIF;
      512     6436
      513     6437    1    END OUTPUT;

   6437 13 000041   000000 221200 0                  LDX1  ! 0
        13 000042   000001 702211                    TSX2  ! 1,X1
      514     6438         %EOD;

PL6.E3A0      #006=OUTPUT File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:49 Page:104  
--  Include file information  --

   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure OUTPUT.
PL6.E3A0      #006=OUTPUT File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:49 Page:105  

 **** Variables and constants ****

  ****  Section 000  Data  OUTPUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w PTR         r     1 @BUFFER                    2-0-0/w PTR         r     1 @LEN
    *0-0-0/c ACHR        r     1 BUFFER                     4-0-0/d STRC(432)   r     1 FPT_WRITE
    *0-0-0/w UBIN        r     1 LEN

  ****  Section 002 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 OUT_DCBN

  ****  Section 003 LblCom SAVE_OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_OUT_DCBN

  ****  Section 004 LblCom SAVE_DCBN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_DCBN2

  ****  Section 011 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #006=OUTPUT File=Z9PS.:Z8A6TSI                                     SAT 08/09/97 09:49 Page:106  
     0-0-0/b BIT         r     1 OPTIONS(0:25)

  ****  Section 012 RoData OUTPUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(22)          1 MSG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 Z8PS$M$DO#                 0-0-0/w PTR               1 Z8PS$M$DO$
     0-0-0/w UBIN        r     1 Z8PS$M$LO#                 0-0-0/w PTR               1 Z8PS$M$LO$
     0-0-0/w UBIN              1 Z8PS$M$OU#                 0-0-0/w PTR               1 Z8PS$M$OU$
     0-0-0/w UBIN              1 Z8PS$M$SO#                 0-0-0/w PTR               1 Z8PS$M$SO$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$DO                       0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OU                       0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$SO                       0-0-0N  NULL        r     1 M$UC
     0-0-0N  NULL        r     1 M$UI


   Procedure OUTPUT requires 35 words for executable code.
   Procedure OUTPUT is declared NOAUTO and requires 16 words of local(STATIC) storage.

PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:107  
      515        1        /*T***********************************************************/
      516        2        /*T*                                                         */
      517        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      518        4        /*T*                                                         */
      519        5        /*T***********************************************************/
      520        6         OUT_STR:PROC(STR,LEN) NOAUTO;
      521        7
      522        8         /*D*
      523        9                NAME: OUT_STR
      524       10             PURPOSE: APPEND A STRING ONTO THE CURRENT OUTPUT LINE.
      525       11                      IF THE STRING EXCEEDS THE LINE LENGTH,
      526       12                      PRINT THE LINE.
      527       13         */
      528       14
      529       15
      530       16    1    DCL STR CHAR(LEN);
      531       17    1    DCL LEN SBIN;
      532       18
      533       19         %INCLUDE Z8P_SCAN_EXT;
      534      208
      535      209    1    DCL FLUSH ENTRY;
      536      210
      537      211    1            IF LEN+LINELEN>TEXTLIMIT THEN
      538      212    2              DO;
      539      213    2                CALL FLUSH;
      540      214    2                CALL INSERT(LINE, LINELEN, 20, '                    ');
      541      215    2                LINELEN = LINELEN + 20;
      542      216    2              END;
      543      217
      544      218    1            IF LINELEN + LEN > TEXTLIMIT THEN
      545      219    2              DO;
      546      220    2                CALL OUTPUT(STR, LEN);
      547      221    2                LINELEN = 0;
      548      222    2              END;
      549      223    1            ELSE
      550      224    2              DO;
      551      225    2                CALL INSERT(LINE,LINELEN,LEN,STR);
PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:108  
      552      226    2                LINELEN=LINELEN+LEN;
      553      227    2              END;
      554      228
      555      229    1    END OUT_STR;
      556      230         %EOD;

PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:109  
--  Include file information  --

   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure OUT_STR.

   Procedure OUT_STR requires 40 words for executable code.
   Procedure OUT_STR is declared NOAUTO and requires 6 words of local(STATIC) storage.

PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:110  

 Object Unit name= OUT_STR                                    File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:49:43.72 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     6      6  OUT_STR
    1  LblCom even  none     1      1  OUT_DCBN
    2  LblCom even  none     1      1  SAVE_OUT_DCBN
    3  LblCom even  none     1      1  SAVE_DCBN2
    4   DCB   even  none     0      0  M$OU
    5   DCB   even  none     0      0  M$SO
    6   DCB   even  none     0      0  M$LO
    7   DCB   even  none     0      0  M$SI
    8   DCB   even  none     0      0  M$UI
    9   DCB   even  none     0      0  M$DO
   10  LblCom even  none     1      1  ERR_SEV
   11  LblCom even  none     1      1  OPTIONS
   12  LblCom even  none     1      1  DO_REQ
   13  LblCom even  none    26     32  OPTIONS_TEXT
   14  LblCom even  none   128    200  INSTR
   15  LblCom even  none     1      1  INSTR_LISTED
   16  LblCom even  none     1      1  INSTR_LEN
   17  LblCom even  none     1      1  INSTR_INDX
   18  LblCom even  none     1      1  EOF_FLAG
   19  LblCom even  none     5      5  KEY_REC
   20  LblCom even  none     1      1  LINES_OUT
   21  LblCom even  none    25     31  HEADER_LINE1
   22  LblCom even  none    25     31  HEADER_LINE3
   23  LblCom even  none    25     31  HEADER_LINE2
   24  LblCom even  none     1      1  MAX_LINES_PER_PAGE
   25  LblCom even  none    28     34  LINE
   26  LblCom even  none     1      1  LINELEN
   27  LblCom even  none     1      1  PHASE
   28  LblCom even  none     1      1  ERROR_COUNT
PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:111  
   29  RoData even  UTS      5      5  OUT_STR
   30   Proc  even  none    40     50  OUT_STR
   31  RoData even  none     2      2  OUT_STR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    30      0   yes            yes      Std        2  OUT_STR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 FLUSH
         yes           Std       2 OUTPUT
                       nStd      0 X66_STATIC_2

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI                                  M$DO
PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:112  


      515        1        /*T***********************************************************/
      516        2        /*T*                                                         */
      517        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      518        4        /*T*                                                         */
      519        5        /*T***********************************************************/
      520        6         OUT_STR:PROC(STR,LEN) NOAUTO;

      6 30 000000   000000 700200 xent  OUT_STR      TSX0  ! X66_STATIC_2
        30 000001   000000 000002 0                  ZERO    0,2

      521        7
      522        8         /*D*
      523        9                NAME: OUT_STR
      524       10             PURPOSE: APPEND A STRING ONTO THE CURRENT OUTPUT LINE.
      525       11                      IF THE STRING EXCEEDS THE LINE LENGTH,
      526       12                      PRINT THE LINE.
      527       13         */
      528       14
      529       15
      530       16    1    DCL STR CHAR(LEN);
      531       17    1    DCL LEN SBIN;
      532       18
      533       19         %INCLUDE Z8P_SCAN_EXT;
      534      208
      535      209    1    DCL FLUSH ENTRY;
      536      210
      537      211    1            IF LEN+LINELEN>TEXTLIMIT THEN

    211 30 000002   000002 470400 0                  LDP0    @LEN
        30 000003   000000 236100                    LDQ     0,,PR0
        30 000004   000000 036000 26                 ADLQ    LINELEN
        30 000005   000155 116007                    CMPQ    109,DL
        30 000006   000020 604400 30                 TMOZ    s:218

      538      212    2              DO;

PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:113  
      539      213    2                CALL FLUSH;

    213 30 000007   000000 631400 31                 EPPR1   0
        30 000010   000000 701000 xent               TSX1    FLUSH
        30 000011   000000 011000                    NOP     0

      540      214    2                CALL INSERT(LINE, LINELEN, 20, '                    ');

    214 30 000012   000000 235000 26                 LDA     LINELEN
        30 000013   040005 100400                    MLR     fill='040'O
        30 000014   000000 000024 29                 ADSC9   0                        cn=0,n=20
        30 000015   000000 000024 25                 ADSC9   LINE,A                   cn=0,n=20

      541      215    2                LINELEN = LINELEN + 20;

    215 30 000016   000024 236007                    LDQ     20,DL
        30 000017   000000 056000 26                 ASQ     LINELEN

      542      216    2              END;

      543      217
      544      218    1            IF LINELEN + LEN > TEXTLIMIT THEN

    218 30 000020   000002 470400 0                  LDP0    @LEN
        30 000021   000000 236000 26                 LDQ     LINELEN
        30 000022   000000 036100                    ADLQ    0,,PR0
        30 000023   000155 116007                    CMPQ    109,DL
        30 000024   000033 604400 30                 TMOZ    s:225

      545      219    2              DO;

      546      220    2                CALL OUTPUT(STR, LEN);

    220 30 000025   000001 630400 0                  EPPR0   @STR
        30 000026   000001 631400 31                 EPPR1   1
        30 000027   000000 701000 xent               TSX1    OUTPUT
        30 000030   000000 011000                    NOP     0
PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:114  

      547      221    2                LINELEN = 0;

    221 30 000031   000000 450000 26                 STZ     LINELEN

      548      222    2              END;

    222 30 000032   000046 710000 30                 TRA     s:229

      549      223    1            ELSE
      550      224    2              DO;

      551      225    2                CALL INSERT(LINE,LINELEN,LEN,STR);

    225 30 000033   000000 720100                    LXL0    0,,PR0
        30 000034   000004 740000 0                  STX0    @LEN+2
        30 000035   000001 471400 0                  LDP1    @STR
        30 000036   000004 221000 0                  LDX1    @LEN+2
        30 000037   000000 235000 26                 LDA     LINELEN
        30 000040   040045 100540                    MLR     fill='040'O
        30 000041   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
        30 000042   000000 000010 25                 ADSC9   LINE,A                   cn=0,n=*X0

      552      226    2                LINELEN=LINELEN+LEN;

    226 30 000043   000000 236000 26                 LDQ     LINELEN
        30 000044   000000 036100                    ADLQ    0,,PR0
        30 000045   000000 756000 26                 STQ     LINELEN

      553      227    2              END;

      554      228
      555      229    1    END OUT_STR;

    229 30 000046   000000 221200 0                  LDX1  ! 0
        30 000047   000001 702211                    TSX2  ! 1,X1
      556      230         %EOD;
PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:115  

PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:116  
--  Include file information  --

   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure OUT_STR.
PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:117  

 **** Variables and constants ****

  ****  Section 000  Data  OUT_STR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w PTR         r     1 @LEN                       1-0-0/w PTR         r     1 @STR
    *0-0-0/w SBIN        r     1 LEN                       *0-0-0/c ACHR        r     1 STR

  ****  Section 001 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 002 LblCom SAVE_OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_OUT_DCBN

  ****  Section 003 LblCom SAVE_DCBN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_DCBN2

  ****  Section 010 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV
PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:118  

  ****  Section 011 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)

  ****  Section 012 LblCom DO_REQ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 DO_REQ

  ****  Section 013 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 014 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 015 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 016 LblCom INSTR_LEN
PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:119  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 017 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 018 LblCom EOF_FLAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 019 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(20)          1 KEY_REC

  ****  Section 020 LblCom LINES_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINES_OUT

  ****  Section 021 LblCom HEADER_LINE1

  ****  Scalars and arrays  ****
PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:120  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE1

  ****  Section 022 LblCom HEADER_LINE3

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE3

  ****  Section 023 LblCom HEADER_LINE2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE2

  ****  Section 024 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 MAX_LINES_PER_PAGE

  ****  Section 025 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)   r     1 LINE

  ****  Section 026 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #007=OUT_STR File=Z9PS.:Z8A6TSI                                    SAT 08/09/97 09:49 Page:121  
     0-0-0/w SBIN        r     1 LINELEN

  ****  Section 027 LblCom PHASE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PHASE

  ****  Section 028 LblCom ERROR_COUNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERROR_COUNT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$DO                       0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OU                       0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$SO                       0-0-0N  NULL        r     1 M$UI


   Procedure OUT_STR requires 40 words for executable code.
   Procedure OUT_STR is declared NOAUTO and requires 6 words of local(STATIC) storage.

PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:122  
      557        1        /*T***********************************************************/
      558        2        /*T*                                                         */
      559        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      560        4        /*T*                                                         */
      561        5        /*T***********************************************************/
      562        6         FLUSH:  PROC NOAUTO;
      563        7
      564        8         /*D*
      565        9                NAME: FLUSH
      566       10             PURPOSE: WRITE THE OUTPUT LINE TO THE CURRENT
      567       11                      OUTPUT FILE.
      568       12         */
      569       13
      570       14
      571       15         %INCLUDE Z8P_SCAN_EXT;
      572      204         %INCLUDE Z8A_SYS_FILE;
      573     6479         %DCBPTR;
      574     6489    1    DCL HANDLE_LISTING ENTRY;
      575     6490
      576     6491         %FPT_WRITE(FPTN=OUT_FPT);
      577     6522
      578     6523    1            IF LINELEN>0 THEN
      579     6524    2            DO;
      580     6525    2               IF OUT_DCBN = Z8PS$M$LO# AND OPTIONS(LS_OPT) THEN
      581     6526    2                  CALL HANDLE_LISTING;
      582     6527    2               OUT_FPT.V.DCB#=OUT_DCBN;
      583     6528    2               OUT_FPT.BUF_=VECTOR(SUBSTR(LINE,0,LINELEN));
      584     6529    2               CALL M$WRITE(OUT_FPT);
      585     6530    2               END;
      586     6531    1            LINELEN=0;
      587     6532
      588     6533    1    END FLUSH;
      589     6534         %EOD;

PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:123  
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLUSH.

   Procedure FLUSH requires 25 words for executable code.
   Procedure FLUSH is declared NOAUTO and requires 14 words of local(STATIC) storage.

PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:124  

 Object Unit name= FLUSH                                      File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:49:46.04 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    14     16  FLUSH
    1  LblCom even  none     1      1  OUT_DCBN
    2  LblCom even  none     1      1  SAVE_OUT_DCBN
    3  LblCom even  none     1      1  SAVE_DCBN2
    4   DCB   even  none     0      0  M$OU
    5   DCB   even  none     0      0  M$SO
    6   DCB   even  none     0      0  M$LO
    7   DCB   even  none     0      0  M$SI
    8   DCB   even  none     0      0  M$UI
    9   DCB   even  none     0      0  M$DO
   10  LblCom even  none     1      1  ERR_SEV
   11  LblCom even  none     1      1  OPTIONS
   12  LblCom even  none     1      1  DO_REQ
   13  LblCom even  none    26     32  OPTIONS_TEXT
   14  LblCom even  none   128    200  INSTR
   15  LblCom even  none     1      1  INSTR_LISTED
   16  LblCom even  none     1      1  INSTR_LEN
   17  LblCom even  none     1      1  INSTR_INDX
   18  LblCom even  none     1      1  EOF_FLAG
   19  LblCom even  none     5      5  KEY_REC
   20  LblCom even  none     1      1  LINES_OUT
   21  LblCom even  none    25     31  HEADER_LINE1
   22  LblCom even  none    25     31  HEADER_LINE3
   23  LblCom even  none    25     31  HEADER_LINE2
   24  LblCom even  none     1      1  MAX_LINES_PER_PAGE
   25  LblCom even  none    28     34  LINE
   26  LblCom even  none     1      1  LINELEN
   27  LblCom even  none     1      1  PHASE
   28  LblCom even  none     1      1  ERROR_COUNT
PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:125  
   29   DCB   even  none     0      0  M$UC
   30   Proc  even  none    25     31  FLUSH
   31  RoData even  none     2      2  FLUSH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    30      0   yes            yes      Std        0  FLUSH

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 HANDLE_LISTING

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI                                  M$DO
     M$UC                                  Z8PS$M$OU$                            Z8PS$M$LO$
     Z8PS$M$DO$                            Z8PS$M$SO$                            Z8PS$M$OU#
     Z8PS$M$LO#                            Z8PS$M$DO#                            Z8PS$M$SO#

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:126  


      557        1        /*T***********************************************************/
      558        2        /*T*                                                         */
      559        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      560        4        /*T*                                                         */
      561        5        /*T***********************************************************/
      562        6         FLUSH:  PROC NOAUTO;

      6 30 000000   000000 741200 0     FLUSH        STX1  ! 0

      563        7
      564        8         /*D*
      565        9                NAME: FLUSH
      566       10             PURPOSE: WRITE THE OUTPUT LINE TO THE CURRENT
      567       11                      OUTPUT FILE.
      568       12         */
      569       13
      570       14
      571       15         %INCLUDE Z8P_SCAN_EXT;
      572      204         %INCLUDE Z8A_SYS_FILE;
      573     6479         %DCBPTR;
      574     6489    1    DCL HANDLE_LISTING ENTRY;
      575     6490
      576     6491         %FPT_WRITE(FPTN=OUT_FPT);
      577     6522
      578     6523    1            IF LINELEN>0 THEN

   6523 30 000001   000000 235000 26                 LDA     LINELEN
        30 000002   000026 604400 30                 TMOZ    s:6531

      579     6524    2            DO;

      580     6525    2               IF OUT_DCBN = Z8PS$M$LO# AND OPTIONS(LS_OPT) THEN

   6525 30 000003   000000 236000 1                  LDQ     OUT_DCBN
        30 000004   000014 604000 30                 TMI     s:6527
        30 000005   000000 116000 xsym               CMPQ    Z8PS$M$LO#
PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:127  
        30 000006   000014 601000 30                 TNZ     s:6527
        30 000007   000000 234000 11                 SZN     OPTIONS
        30 000010   000014 605000 30                 TPL     s:6527

      581     6526    2                  CALL HANDLE_LISTING;

   6526 30 000011   000000 631400 31                 EPPR1   0
        30 000012   000000 701000 xent               TSX1    HANDLE_LISTING
        30 000013   000000 011000                    NOP     0

      582     6527    2               OUT_FPT.V.DCB#=OUT_DCBN;

   6527 30 000014   000000 720000 1                  LXL0    OUT_DCBN
        30 000015   000012 740000 0                  STX0    OUT_FPT+8

      583     6528    2               OUT_FPT.BUF_=VECTOR(SUBSTR(LINE,0,LINELEN));

   6528 30 000016   000000 235000 26                 LDA     LINELEN
        30 000017   000020 735000                    ALS     16
        30 000020   000140 135007                    SBLA    96,DL
        30 000021   000001 236000 31                 LDQ     1
        30 000022   000006 757000 0                  STAQ    OUT_FPT+4

      584     6529    2               CALL M$WRITE(OUT_FPT);

   6529 30 000023   000002 630400 0                  EPPR0   OUT_FPT
        30 000024   040001 713400                    CLIMB   write
        30 000025   401400 401760                    pmme    nvectors=4

      585     6530    2               END;

      586     6531    1            LINELEN=0;

   6531 30 000026   000000 450000 26                 STZ     LINELEN

      587     6532
      588     6533    1    END FLUSH;
PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:128  

   6533 30 000027   000000 221200 0                  LDX1  ! 0
        30 000030   000001 702211                    TSX2  ! 1,X1
      589     6534         %EOD;

PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:129  
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLUSH.
PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:130  

 **** Variables and constants ****

  ****  Section 000  Data  FLUSH

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/d STRC(432)   r     1 OUT_FPT

  ****  Section 001 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 OUT_DCBN

  ****  Section 002 LblCom SAVE_OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_OUT_DCBN

  ****  Section 003 LblCom SAVE_DCBN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_DCBN2

  ****  Section 010 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:131  
  ****  Section 011 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 OPTIONS(0:25)

  ****  Section 012 LblCom DO_REQ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 DO_REQ

  ****  Section 013 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 014 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 015 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 016 LblCom INSTR_LEN

PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:132  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 017 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 018 LblCom EOF_FLAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 019 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(20)          1 KEY_REC

  ****  Section 020 LblCom LINES_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINES_OUT

  ****  Section 021 LblCom HEADER_LINE1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:133  

     0-0-0/c CHAR(100)         1 HEADER_LINE1

  ****  Section 022 LblCom HEADER_LINE3

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE3

  ****  Section 023 LblCom HEADER_LINE2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE2

  ****  Section 024 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 MAX_LINES_PER_PAGE

  ****  Section 025 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)   r     1 LINE

  ****  Section 026 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 LINELEN
PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:134  

  ****  Section 027 LblCom PHASE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PHASE

  ****  Section 028 LblCom ERROR_COUNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERROR_COUNT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 Z8PS$M$DO#                 0-0-0/w PTR               1 Z8PS$M$DO$
     0-0-0/w UBIN        r     1 Z8PS$M$LO#                 0-0-0/w PTR               1 Z8PS$M$LO$
     0-0-0/w UBIN              1 Z8PS$M$OU#                 0-0-0/w PTR               1 Z8PS$M$OU$
     0-0-0/w UBIN              1 Z8PS$M$SO#                 0-0-0/w PTR               1 Z8PS$M$SO$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$DO                       0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OU                       0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$SO                       0-0-0N  NULL        r     1 M$UC
     0-0-0N  NULL        r     1 M$UI

PL6.E3A0      #008=FLUSH File=Z9PS.:Z8A6TSI                                      SAT 08/09/97 09:49 Page:135  

   Procedure FLUSH requires 25 words for executable code.
   Procedure FLUSH is declared NOAUTO and requires 14 words of local(STATIC) storage.

PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:136  
      590        1        /*T***********************************************************/
      591        2        /*T*                                                         */
      592        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      593        4        /*T*                                                         */
      594        5        /*T***********************************************************/
      595        6         COMMAND_LINE_OPTIONS:PROC;
      596        7
      597        8         %INCLUDE Z8A_SYS_FILE;
      598     6283
      599     6284         %INCLUDE Z8P_SCAN_EXT;
      600     6473         %IF GCOS;
      601     6474 C       %SUB SO_OPT=16;
      602     6475 C       %DCBPTR;
      603     6476 C       %F$DCB;
      604     6477         %ENDIF;
      605     6478
      606     6479         %IF CP6;
      607     6480         /* PICK UP B$JIT TO GET CONTROL COMMAND BUFFER */
      608     6481    1    DCL B$JIT$ PTR SYMREF;
      609     6482         %INCLUDE B$JIT;
      610     7085         %ENDIF;
      611     7086         %IF GCOS;
      612     7087 C       %INCLUDE BB_IZWI_OPT; /* Temporary for ZVU package */
      613     7088         %ENDIF;
      614     7089
      615     7090    1    DCL DIAG ENTRY(6);
      616     7091
      617     7092
      618     7093         /* SCANS OPTIONS */
      619     7094    1    DCL I SBIN;
      620     7095         %IF CP6;
      621     7096    1    DCL J SBIN;
      622     7097    1    DCL K SBIN;
      623     7098    1    DCL OPTCHR CHAR(4);
      624     7099    1    DCL C CHAR(1);
      625     7100    1    DCL LEVEL BOOLEAN;
      626     7101
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:137  
      627     7102         %FPT_OPEN(FPTN=DELETE_SO,DCB=%M$SO,FUN=UPDATE,DELETE=YES);
      628     7211         %FPT_OPEN(FPTN=OPEN_SO,DCB=%M$SO,FUN=CREATE);
      629     7320         %VLP_TEXTC(FPTN=OPTCHR_ERR,TEXT='    ',STCLASS=STATIC);
      630     7335         %VLP_TEXTC(FPTN=BAD_OPT,TEXT=' ERROR => Illegal command line option: ');
      631     7350
      632     7351    1    SKIP_BLANKS:PROC;
      633     7352         /* ADVANCE INSTR_INDX TO NEXT NON-BLANK CHARACTER  */
      634     7353
      635     7354    2    DCL JUNK1 UBIN;
      636     7355    2    DCL START SBIN;
      637     7356
      638     7357    2    DCL SEARCH_TAB(0:127) CHAR(1) UNAL CONSTANT
      639     7358
      640     7359    2      INIT(%BINASC(511)*32,%BINASC(0),%BINASC(511)*0);
      641     7360
      642     7361    2            START=INSTR_INDX;
      643     7362
      644     7363    2            CALL SEARCH(INSTR_INDX,JUNK1,SEARCH_TAB(0),
      645     7364    2              SUBSTR(INSTRCHR,0,INSTR_LEN),START);
      646     7365
      647     7366    3            DO WHILE (  (INSTR_INDX < INSTR_LEN)
      648     7367    3              AND (INSTR(INSTR_INDX)=' ') );
      649     7368    3               INSTR_INDX=INSTR_INDX+1;
      650     7369    3               END;
      651     7370    2    END SKIP_BLANKS;
      652     7371
      653     7372
      654     7373    1            CALL M$OPEN(DELETE_SO) ALTRET(IGNORE_DELETE_ERR);
      655     7374                 /* Normally the file does not already exist and the ALTRET
      656     7375                    is taken. */
      657     7376    1    IGNORE_DELETE_ERR:
      658     7377    1            CALL M$OPEN(OPEN_SO);
      659     7378
      660     7379
      661     7380         /* LOOK FOR ( WHICH BEGINS OPTION LINE */
      662     7381
      663     7382    1            INSTRCHR=SUBSTR(B$JIT.CCBUF,0,B$JIT.CCARS);
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:138  
      664     7383    1            INSTR_INDX=0;
      665     7384    1            INSTR_LEN=B$JIT.CCARS;
      666     7385
      667     7386    1            CALL INDEX(INSTR_INDX,'(',SUBSTR(INSTRCHR,0,INSTR_LEN))
      668     7387    1              ALTRET(NOTHING);
      669     7388    1            INSTR_INDX=INSTR_INDX+1;
      670     7389
      671     7390    1            I=I+1;
      672     7391
      673     7392    2            DO WHILE(INSTR_INDX<INSTR_LEN);
      674     7393
      675     7394    2               CALL SKIP_BLANKS;
      676     7395
      677     7396    2               LEVEL=TRUE;
      678     7397
      679     7398    2               IF INSTR_INDX>=INSTR_LEN THEN
      680     7399    2                  GOTO NOTHING;
      681     7400
      682     7401    2               IF SUBSTR(INSTRCHR,INSTR_INDX,1)='N' THEN
      683     7402    3               DO;
      684     7403    3                  LEVEL=FALSE;
      685     7404    3                  INSTR_INDX=INSTR_INDX+1;
      686     7405    3                  END;
      687     7406
      688     7407    2               IF INSTR_INDX>INSTR_LEN THEN
      689     7408    2                  GOTO NOTHING;
      690     7409
      691     7410    2               OPTCHR=' ';
      692     7411    2               I=0;
      693     7412    3               DO WHILE(I<4);
      694     7413    3                  C=SUBSTR(INSTRCHR,INSTR_INDX,1);
      695     7414    3                  INSTR_INDX=INSTR_INDX+1;
      696     7415    3                  IF C=')' THEN
      697     7416    3                     I=4;
      698     7417    3                  ELSE
      699     7418    3                     IF C=',' THEN
      700     7419    3                        I=4;
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:139  
      701     7420    3                     ELSE
      702     7421    4                     DO;
      703     7422    4                        CALL INSERT(OPTCHR,I,1,C);
      704     7423    4                        IF INSTR_INDX>=INSTR_LEN THEN
      705     7424    4                           I=4;
      706     7425    4                        END;
      707     7426    3                  I=I+1;
      708     7427    3                  END;
      709     7428    2               I = LENGTHW(OPTIONS_TEXT);
      710     7429    3               DO UNTIL (I=0) OR (OPTIONS_TEXT(I) = OPTCHR);
      711     7430    3                 I = I - 1;
      712     7431    3               END;
      713     7432    2               IF OPTIONS_TEXT(I)=OPTCHR THEN
      714     7433    3                 DO;
      715     7434    3                  OPTIONS(I)=LEVEL;
      716     7435    3                  IF NOT LEVEL AND (OPTIONS_TEXT(I) = 'LS') THEN
      717     7436    3                     OPTIONS(XREF_OPT) = FALSE;
      718     7437    3                 END;
      719     7438    2               ELSE
      720     7439    3                 DO;
      721     7440    3                   OPTCHR_ERR.TEXT# = OPTCHR;
      722     7441    3                   CALL DIAG(6,BAD_OPT,OPTCHR_ERR);
      723     7442    3                 END;
      724     7443    2               END;
      725     7444         %ENDIF;
      726     7445         %IF GCOS;
      727     7446 C       DCL OPTNAME CHAR(8);
      728     7447 C       %FPT_OPEN(FPTN=OPEN_OPTION,DCB=%M$OPTION);
      729     7448 C       %FPT_READ(FPTN=READ_OPTION,DCB=%M$OPTION);
      730     7449 C       %FPT_CLOSE(FPTN=CLOSE_OPTION,DCB=%M$OPTION);
      731     7450 C       DCL OPTION_KEYWORD_FOUND BOOLEAN;
      732     7451 C       %OPTION(STCLASS=STATIC SYMDEF);
      733     7452 C       /* Temporary for ZVU package */
      734     7453 C       %FPT_OPEN(FPTN=OPEN_OU,DCB=%M$OU);
      735     7454 C       %FPT_OPEN(FPTN=OPEN_SO,DCB=%M$SO);
      736     7455 C
      737     7456 C       DCL P$PROG_SWITCH_WORD(0:35) BOOLEAN SYMREF;
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:140  
      738     7457 C
      739     7458 C               OPTIONS(LS_OPT)=P$PROG_SWITCH_WORD(10);
      740     7459 C               OPTIONS(XREF_OPT)=P$PROG_SWITCH_WORD(2);
      741     7460 C               CALL M$OPEN(OPEN_SO)
      742     7461 C                   WHENRETURN DO;
      743     7462 C                     OPTIONS(SO_OPT)=TRUE;
      744     7463 C                   END;
      745     7464 C                   WHENALTRETURN DO;
      746     7465 C                     OPTIONS(SO_OPT)=FALSE;
      747     7466 C                   END;
      748     7467 C               CALL M$OPEN(OPEN_OU)
      749     7468 C                   WHENALTRETURN DO;
      750     7469 C                     OPTIONS(OU_OPT)=FALSE;
      751     7470 C                   END;
      752     7471 C               CALL M$OPEN(OPEN_OPTION) ALTRET(NOTHING);
      753     7472 C               OPTION_KEYWORD_FOUND=FALSE;
      754     7473 C               DO UNTIL FALSE;
      755     7474 C       READ_ETC_CARD:
      756     7475 C                 CALL M$READ(READ_OPTION) ALTRET(CLOSE_DSTAR);
      757     7476 C                 INSTR_LEN=Z8PS$M$OPTION$->F$DCB.ARS#;
      758     7477 C                 IF NOT OPTION_KEYWORD_FOUND THEN DO;
      759     7478 C                   CALL INDEX(I,'OPTION',SUBSTR(INSTRCHR,0,INSTR_LEN))
      760     7479 C                       ALTRET(READ_ETC_CARD);
      761     7480 C                   CALL INDEX(INSTR_INDX,'=',SUBSTR(INSTRCHR,0,INSTR_LEN),I);
      762     7481 C                   OPTION_KEYWORD_FOUND=TRUE;
      763     7482 C                 END;
      764     7483 C                 ELSE INSTR_INDX=14; /* Tab past "$      ETC" */
      765     7484 C                 DO WHILE INSTR_INDX < INSTR_LEN-1;
      766     7485 C                   INSTR_INDX=INSTR_INDX+1;
      767     7486 C                   CALL INDEX(I,',',SUBSTR(INSTRCHR,0,INSTR_LEN),INSTR_INDX);
      768     7487 C                   OPTNAME=SUBSTR(INSTRCHR,INSTR_INDX,I-INSTR_INDX);
      769     7488 C                   DO SELECT(OPTNAME);
      770     7489 C                     SELECT('COMDK');
      771     7490 C                       OPTIONS(SO_OPT)=TRUE;
      772     7491 C                     SELECT('DECK');
      773     7492 C                       OPTIONS(OU_OPT)=TRUE;
      774     7493 C                     SELECT('DUMP','NDUMP');
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:141  
      775     7494 C                       /* Handled automatically by the system */
      776     7495 C                     SELECT('LSTIN');
      777     7496 C                       OPTIONS(LS_OPT)=TRUE;
      778     7497 C                     SELECT('NCOMDK');
      779     7498 C                       OPTIONS(SO_OPT)=FALSE;
      780     7499 C                     SELECT('NDECK');
      781     7500 C                       OPTIONS(OU_OPT)=FALSE;
      782     7501 C                     SELECT('NLSTIN');
      783     7502 C                       OPTIONS(LS_OPT)=FALSE;
      784     7503 C                     SELECT('NXREF');
      785     7504 C                       OPTIONS(XREF_OPT)=FALSE;
      786     7505 C                     SELECT('XREF');
      787     7506 C                       OPTIONS(XREF_OPT)=TRUE;
      788     7507 C                   END;
      789     7508 C                   INSTR_INDX=I;
      790     7509 C                 END;
      791     7510 C               END;
      792     7511 C       CLOSE_DSTAR:
      793     7512 C               CALL M$CLOSE(CLOSE_OPTION);
      794     7513 C               ZWI$OPTION.LS=OPTIONS(LS_OPT);
      795     7514 C               ZWI$OPTION.OU=OPTIONS(OU_OPT);
      796     7515 C               ZWI$OPTION.DO_LO_SAME=~DO_REQ;
      797     7516         %ENDIF;
      798     7517    1    NOTHING:;
      799     7518    1    END COMMAND_LINE_OPTIONS;
      800     7519         %EOD;

PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:142  
--  Include file information  --

   B$JIT_C.:LIB_E04  is referenced.
   B$JIT.:LIB_E04  cannot be made into a system file and is referenced.
   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure COMMAND_LINE_OPTIONS.

   Procedure COMMAND_LINE_OPTIONS requires 153 words for executable code.
   Procedure COMMAND_LINE_OPTIONS requires 16 words of local(AUTO) storage.

PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:143  

 Object Unit name= COMMAND_LINE_OPTIONS                       File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:49:56.16 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none     1      1  OUT_DCBN
    2  LblCom even  none     1      1  SAVE_OUT_DCBN
    3  LblCom even  none     1      1  SAVE_DCBN2
    4   DCB   even  none     0      0  M$OU
    5   DCB   even  none     0      0  M$SO
    6   DCB   even  none     0      0  M$LO
    7   DCB   even  none     0      0  M$SI
    8   DCB   even  none     0      0  M$UI
    9   DCB   even  none     0      0  M$DO
   10  LblCom even  none     1      1  ERR_SEV
   11  LblCom even  none     1      1  OPTIONS
   12  LblCom even  none     1      1  DO_REQ
   13  LblCom even  none    26     32  OPTIONS_TEXT
   14  LblCom even  none   128    200  INSTR
   15  LblCom even  none     1      1  INSTR_LISTED
   16  LblCom even  none     1      1  INSTR_LEN
   17  LblCom even  none     1      1  INSTR_INDX
   18  LblCom even  none     1      1  EOF_FLAG
   19  LblCom even  none     5      5  KEY_REC
   20  LblCom even  none     1      1  LINES_OUT
   21  LblCom even  none    25     31  HEADER_LINE1
   22  LblCom even  none    25     31  HEADER_LINE3
   23  LblCom even  none    25     31  HEADER_LINE2
   24  LblCom even  none     1      1  MAX_LINES_PER_PAGE
   25  LblCom even  none    28     34  LINE
   26  LblCom even  none     1      1  LINELEN
   27  LblCom even  none     1      1  PHASE
   28  LblCom even  none     1      1  ERROR_COUNT
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:144  
   29   Data  even  none   118    166  COMMAND_LINE_OPTIONS
   30  RoData even  UTS     43     53  COMMAND_LINE_OPTIONS
   31   Proc  even  none   153    231  COMMAND_LINE_OPTIONS
   32  RoData even  none     9     11  COMMAND_LINE_OPTIONS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    31      0   yes            yes      Std        0  COMMAND_LINE_OPTIONS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       6 DIAG
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$OU                                  M$SO
     M$LO                                  M$SI                                  M$UI
     M$DO                                  B$JIT$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:145  


      590        1        /*T***********************************************************/
      591        2        /*T*                                                         */
      592        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      593        4        /*T*                                                         */
      594        5        /*T***********************************************************/
      595        6         COMMAND_LINE_OPTIONS:PROC;

      6 31 000000   000000 700200 xent  COMMAND_LIN* TSX0  ! X66_AUTO_0
        31 000001   000020 000000                    ZERO    16,0
        31 000002   000037 710000 31                 TRA     s:7373

      596        7
      597        8         %INCLUDE Z8A_SYS_FILE;
      598     6283
      599     6284         %INCLUDE Z8P_SCAN_EXT;
      600     6473         %IF GCOS;
      601     6474 C       %SUB SO_OPT=16;
      602     6475 C       %DCBPTR;
      603     6476 C       %F$DCB;
      604     6477         %ENDIF;
      605     6478
      606     6479         %IF CP6;
      607     6480         /* PICK UP B$JIT TO GET CONTROL COMMAND BUFFER */
      608     6481    1    DCL B$JIT$ PTR SYMREF;
      609     6482         %INCLUDE B$JIT;
      610     7085         %ENDIF;
      611     7086         %IF GCOS;
      612     7087 C       %INCLUDE BB_IZWI_OPT; /* Temporary for ZVU package */
      613     7088         %ENDIF;
      614     7089
      615     7090    1    DCL DIAG ENTRY(6);
      616     7091
      617     7092
      618     7093         /* SCANS OPTIONS */
      619     7094    1    DCL I SBIN;
      620     7095         %IF CP6;
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:146  
      621     7096    1    DCL J SBIN;
      622     7097    1    DCL K SBIN;
      623     7098    1    DCL OPTCHR CHAR(4);
      624     7099    1    DCL C CHAR(1);
      625     7100    1    DCL LEVEL BOOLEAN;
      626     7101
      627     7102         %FPT_OPEN(FPTN=DELETE_SO,DCB=%M$SO,FUN=UPDATE,DELETE=YES);
      628     7211         %FPT_OPEN(FPTN=OPEN_SO,DCB=%M$SO,FUN=CREATE);
      629     7320         %VLP_TEXTC(FPTN=OPTCHR_ERR,TEXT='    ',STCLASS=STATIC);
      630     7335         %VLP_TEXTC(FPTN=BAD_OPT,TEXT=' ERROR => Illegal command line option: ');
      631     7350
      632     7351    1    SKIP_BLANKS:PROC;

   7351 31 000003   200012 741300       SKIP_BLANKS  STX1  ! LEVEL+2,,AUTO

      633     7352         /* ADVANCE INSTR_INDX TO NEXT NON-BLANK CHARACTER  */
      634     7353
      635     7354    2    DCL JUNK1 UBIN;
      636     7355    2    DCL START SBIN;
      637     7356
      638     7357    2    DCL SEARCH_TAB(0:127) CHAR(1) UNAL CONSTANT
      639     7358
      640     7359    2      INIT(%BINASC(511)*32,%BINASC(0),%BINASC(511)*0);
      641     7360
      642     7361    2            START=INSTR_INDX;

   7361 31 000004   000000 235000 17                 LDA     INSTR_INDX
        31 000005   200014 755100                    STA     START,,AUTO

      643     7362
      644     7363    2            CALL SEARCH(INSTR_INDX,JUNK1,SEARCH_TAB(0),

   7363 31 000006   000000 236000 16                 LDQ     INSTR_LEN
        31 000007   200014 136100                    SBLQ    START,,AUTO
        31 000010   200016 756100                    STQ     START+2,,AUTO
        31 000011   200014 236100                    LDQ     START,,AUTO
        31 000012   200016 720100                    LXL0    START+2,,AUTO
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:147  
        31 000013   000000 164446                    TCT
        31 000014   000000 000010 14                 ADSC9   INSTR,Q                  cn=0,n=*X0
        31 000015   000012 000000 30                 ARG     SEARCH_TAB
        31 000016   000000 000000 17                 ARG     INSTR_INDX
        31 000017   000000 235000 17                 LDA     INSTR_INDX
        31 000020   000033 771000                    ARL     27
        31 000021   200013 755100                    STA     JUNK1,,AUTO
        31 000022   000000 551040 17                 STBA    INSTR_INDX,'40'O
        31 000023   000000 056000 17                 ASQ     INSTR_INDX

      645     7364    2              SUBSTR(INSTRCHR,0,INSTR_LEN),START);
      646     7365
      647     7366    3            DO WHILE (  (INSTR_INDX < INSTR_LEN)

   7366 31 000024   000026 710000 31                 TRA     s:7369

      648     7367    3              AND (INSTR(INSTR_INDX)=' ') );
      649     7368    3               INSTR_INDX=INSTR_INDX+1;

   7368 31 000025   000000 054000 17                 AOS     INSTR_INDX

      650     7369    3               END;

   7369 31 000026   000000 236000 17                 LDQ     INSTR_INDX
        31 000027   000000 116000 16                 CMPQ    INSTR_LEN
        31 000030   000035 605000 31                 TPL     s:7370
        31 000031   040000 106406                    CMPC    fill='040'O
        31 000032   000000 000001 14                 ADSC9   INSTR,Q                  cn=0,n=1
        31 000033   000000 000001 32                 ADSC9   0                        cn=0,n=1
        31 000034   000025 600000 31                 TZE     s:7368

      651     7370    2    END SKIP_BLANKS;

   7370 31 000035   200012 221300                    LDX1  ! LEVEL+2,,AUTO
        31 000036   000001 702211                    TSX2  ! 1,X1

      652     7371
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:148  
      653     7372
      654     7373    1            CALL M$OPEN(DELETE_SO) ALTRET(IGNORE_DELETE_ERR);

   7373 31 000037   000000 630400 29                 EPPR0   DELETE_SO
        31 000040   450000 713400                    CLIMB   alt,open
        31 000041   410400 401760                    pmme    nvectors=18
        31 000042   000043 702000 31                 TSX2    IGNORE_DELETE_ERR

      655     7374                 /* Normally the file does not already exist and the ALTRET
      656     7375                    is taken. */
      657     7376    1    IGNORE_DELETE_ERR:
      658     7377    1            CALL M$OPEN(OPEN_SO);

   7377 31 000043   000072 630400 29    IGNORE_DELE* EPPR0   OPEN_SO
        31 000044   050000 713400                    CLIMB   open
        31 000045   410400 401760                    pmme    nvectors=18

      659     7378
      660     7379
      661     7380         /* LOOK FOR ( WHICH BEGINS OPTION LINE */
      662     7381
      663     7382    1            INSTRCHR=SUBSTR(B$JIT.CCBUF,0,B$JIT.CCARS);

   7382 31 000046   000000 470400 xsym               LDP0    B$JIT$
        31 000047   000032 220100                    LDX0    26,,PR0
        31 000050   040000 100540                    MLR     fill='040'O
        31 000051   000033 000010                    ADSC9   27,,PR0                  cn=0,n=*X0
        31 000052   000000 001000 14                 ADSC9   INSTR                    cn=0,n=512

      664     7383    1            INSTR_INDX=0;

   7383 31 000053   000000 450000 17                 STZ     INSTR_INDX

      665     7384    1            INSTR_LEN=B$JIT.CCARS;

   7384 31 000054   000032 236100                    LDQ     26,,PR0
        31 000055   000022 732000                    QRS     18
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:149  
        31 000056   000000 756000 16                 STQ     INSTR_LEN

      666     7385
      667     7386    1            CALL INDEX(INSTR_INDX,'(',SUBSTR(INSTRCHR,0,INSTR_LEN))

   7386 31 000057   000000 620006                    EAX0    0,QL
        31 000060   000000 124440                    SCM     mask='000'O
        31 000061   000000 000010 14                 ADSC9   INSTR                    cn=0,n=*X0
        31 000062   000001 000001 32                 ADSC9   1                        cn=0,n=1
        31 000063   000000 000000 17                 ARG     INSTR_INDX
        31 000064   000230 606400 31                 TTN     NOTHING

      668     7387    1              ALTRET(NOTHING);
      669     7388    1            INSTR_INDX=INSTR_INDX+1;

   7388 31 000065   000000 054000 17                 AOS     INSTR_INDX

      670     7389
      671     7390    1            I=I+1;

   7390 31 000066   200003 054100                    AOS     I,,AUTO

      672     7391
      673     7392    2            DO WHILE(INSTR_INDX<INSTR_LEN);

   7392 31 000067   000000 236000 17                 LDQ     INSTR_INDX
        31 000070   000000 116000 16                 CMPQ    INSTR_LEN
        31 000071   000230 605000 31                 TPL     NOTHING

      674     7393
      675     7394    2               CALL SKIP_BLANKS;

   7394 31 000072   000003 701000 31                 TSX1    SKIP_BLANKS
        31 000073   000000 011000                    NOP     0

      676     7395
      677     7396    2               LEVEL=TRUE;
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:150  

   7396 31 000074   400000 236003                    LDQ     -131072,DU
        31 000075   200010 756100                    STQ     LEVEL,,AUTO

      678     7397
      679     7398    2               IF INSTR_INDX>=INSTR_LEN THEN

   7398 31 000076   000000 236000 17                 LDQ     INSTR_INDX
        31 000077   000000 116000 16                 CMPQ    INSTR_LEN
        31 000100   000230 605000 31                 TPL     NOTHING

      680     7399    2                  GOTO NOTHING;
      681     7400
      682     7401    2               IF SUBSTR(INSTRCHR,INSTR_INDX,1)='N' THEN

   7401 31 000101   040000 106406                    CMPC    fill='040'O
        31 000102   000000 000001 14                 ADSC9   INSTR,Q                  cn=0,n=1
        31 000103   000002 000001 32                 ADSC9   2                        cn=0,n=1
        31 000104   000107 601000 31                 TNZ     s:7407

      683     7402    3               DO;

      684     7403    3                  LEVEL=FALSE;

   7403 31 000105   200010 450100                    STZ     LEVEL,,AUTO

      685     7404    3                  INSTR_INDX=INSTR_INDX+1;

   7404 31 000106   000000 054000 17                 AOS     INSTR_INDX

      686     7405    3                  END;

      687     7406
      688     7407    2               IF INSTR_INDX>INSTR_LEN THEN

   7407 31 000107   000000 236000 17                 LDQ     INSTR_INDX
        31 000110   000000 116000 16                 CMPQ    INSTR_LEN
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:151  
        31 000111   000230 605400 31                 TPNZ    NOTHING

      689     7408    2                  GOTO NOTHING;
      690     7409
      691     7410    2               OPTCHR=' ';

   7410 31 000112   000000 236000 32                 LDQ     0
        31 000113   200006 756100                    STQ     OPTCHR,,AUTO

      692     7411    2               I=0;

   7411 31 000114   200003 450100                    STZ     I,,AUTO

      693     7412    3               DO WHILE(I<4);

   7412 31 000115   200003 235100                    LDA     I,,AUTO
        31 000116   000004 115007                    CMPA    4,DL
        31 000117   000160 605000 31                 TPL     s:7428

      694     7413    3                  C=SUBSTR(INSTRCHR,INSTR_INDX,1);

   7413 31 000120   000000 235000 17                 LDA     INSTR_INDX
        31 000121   040100 100405                    MLR     fill='040'O
        31 000122   000000 000001 14                 ADSC9   INSTR,A                  cn=0,n=1
        31 000123   200007 000001                    ADSC9   C,,AUTO                  cn=0,n=1

      695     7414    3                  INSTR_INDX=INSTR_INDX+1;

   7414 31 000124   000000 054000 17                 AOS     INSTR_INDX

      696     7415    3                  IF C=')' THEN

   7415 31 000125   200007 236100                    LDQ     C,,AUTO
        31 000126   777000 376003                    ANQ     -512,DU
        31 000127   051000 116003                    CMPQ    20992,DU
        31 000130   000134 601000 31                 TNZ     s:7418

PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:152  
      697     7416    3                     I=4;

   7416 31 000131   000004 235007                    LDA     4,DL
        31 000132   200003 755100                    STA     I,,AUTO
        31 000133   000154 710000 31                 TRA     s:7426

      698     7417    3                  ELSE
      699     7418    3                     IF C=',' THEN

   7418 31 000134   200007 236100                    LDQ     C,,AUTO
        31 000135   777000 376003                    ANQ     -512,DU
        31 000136   054000 116003                    CMPQ    22528,DU
        31 000137   000143 601000 31                 TNZ     s:7422

      700     7419    3                        I=4;

   7419 31 000140   000004 235007                    LDA     4,DL
        31 000141   200003 755100                    STA     I,,AUTO
        31 000142   000154 710000 31                 TRA     s:7426

      701     7420    3                     ELSE
      702     7421    4                     DO;

      703     7422    4                        CALL INSERT(OPTCHR,I,1,C);

   7422 31 000143   200003 235100                    LDA     I,,AUTO
        31 000144   040105 100500                    MLR     fill='040'O
        31 000145   200007 000001                    ADSC9   C,,AUTO                  cn=0,n=1
        31 000146   200006 000001                    ADSC9   OPTCHR,A,AUTO            cn=0,n=1

      704     7423    4                        IF INSTR_INDX>=INSTR_LEN THEN

   7423 31 000147   000000 236000 17                 LDQ     INSTR_INDX
        31 000150   000000 116000 16                 CMPQ    INSTR_LEN
        31 000151   000154 604000 31                 TMI     s:7426

      705     7424    4                           I=4;
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:153  

   7424 31 000152   000004 235007                    LDA     4,DL
        31 000153   200003 755100                    STA     I,,AUTO

      706     7425    4                        END;

      707     7426    3                  I=I+1;

   7426 31 000154   200003 054100                    AOS     I,,AUTO

      708     7427    3                  END;

   7427 31 000155   200003 235100                    LDA     I,,AUTO
        31 000156   000004 115007                    CMPA    4,DL
        31 000157   000120 604000 31                 TMI     s:7413

      709     7428    2               I = LENGTHW(OPTIONS_TEXT);

   7428 31 000160   000032 236007                    LDQ     26,DL
        31 000161   200003 756100                    STQ     I,,AUTO

      710     7429    3               DO UNTIL (I=0) OR (OPTIONS_TEXT(I) = OPTCHR);

      711     7430    3                 I = I - 1;

   7430 31 000162   000001 336007                    LCQ     1,DL
        31 000163   200003 056100                    ASQ     I,,AUTO

      712     7431    3               END;

   7431 31 000164   000171 600000 31                 TZE     s:7432
        31 000165   200003 720100                    LXL0    I,,AUTO
        31 000166   000000 236010 13                 LDQ     OPTIONS_TEXT,X0
        31 000167   200006 116100                    CMPQ    OPTCHR,,AUTO
        31 000170   000162 601000 31                 TNZ     s:7430

      713     7432    2               IF OPTIONS_TEXT(I)=OPTCHR THEN
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:154  

   7432 31 000171   200003 720100                    LXL0    I,,AUTO
        31 000172   000000 236010 13                 LDQ     OPTIONS_TEXT,X0
        31 000173   200006 116100                    CMPQ    OPTCHR,,AUTO
        31 000174   000216 601000 31                 TNZ     s:7440

      714     7433    3                 DO;

      715     7434    3                  OPTIONS(I)=LEVEL;

   7434 31 000175   200003 235100                    LDA     I,,AUTO
        31 000176   000200 605000 31                 TPL     s:7434+3
        31 000177   000044 035003                    ADLA    36,DU
        31 000200   003005 060500                    CSL     bolr='003'O
        31 000201   200010 000001                    BDSC    LEVEL,,AUTO              by=0,bit=0,n=1
        31 000202   000000 000001 11                 BDSC    OPTIONS,A                by=0,bit=0,n=1

      716     7435    3                  IF NOT LEVEL AND (OPTIONS_TEXT(I) = 'LS') THEN

   7435 31 000203   200010 234100                    SZN     LEVEL,,AUTO
        31 000204   000225 604000 31                 TMI     s:7443
        31 000205   200003 235100                    LDA     I,,AUTO
        31 000206   000002 735000                    ALS     2
        31 000207   040000 106405                    CMPC    fill='040'O
        31 000210   000000 000004 13                 ADSC9   OPTIONS_TEXT,A           cn=0,n=4
        31 000211   000052 000002 30                 ADSC9   SEARCH_TAB+32            cn=0,n=2
        31 000212   000225 601000 31                 TNZ     s:7443

      717     7436    3                     OPTIONS(XREF_OPT) = FALSE;

   7436 31 000213   000003 236000 32                 LDQ     3
        31 000214   000000 356000 11                 ANSQ    OPTIONS

      718     7437    3                 END;

   7437 31 000215   000225 710000 31                 TRA     s:7443

PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:155  
      719     7438    2               ELSE
      720     7439    3                 DO;

      721     7440    3                   OPTCHR_ERR.TEXT# = OPTCHR;

   7440 31 000216   040000 100500                    MLR     fill='040'O
        31 000217   200006 000004                    ADSC9   OPTCHR,,AUTO             cn=0,n=4
        31 000220   000164 200004 29                 ADSC9   OPTCHR_ERR               cn=1,n=4

      722     7441    3                   CALL DIAG(6,BAD_OPT,OPTCHR_ERR);

   7441 31 000221   000006 630400 32                 EPPR0   6
        31 000222   000004 631400 32                 EPPR1   4
        31 000223   000000 701000 xent               TSX1    DIAG
        31 000224   000000 011000                    NOP     0

      723     7442    3                 END;

      724     7443    2               END;

   7443 31 000225   000000 236000 17                 LDQ     INSTR_INDX
        31 000226   000000 116000 16                 CMPQ    INSTR_LEN
        31 000227   000072 604000 31                 TMI     s:7394

   7437 31 000230                       NOTHING      null
      725     7444         %ENDIF;
      726     7445         %IF GCOS;
      727     7446 C       DCL OPTNAME CHAR(8);
      728     7447 C       %FPT_OPEN(FPTN=OPEN_OPTION,DCB=%M$OPTION);
      729     7448 C       %FPT_READ(FPTN=READ_OPTION,DCB=%M$OPTION);
      730     7449 C       %FPT_CLOSE(FPTN=CLOSE_OPTION,DCB=%M$OPTION);
      731     7450 C       DCL OPTION_KEYWORD_FOUND BOOLEAN;
      732     7451 C       %OPTION(STCLASS=STATIC SYMDEF);
      733     7452 C       /* Temporary for ZVU package */
      734     7453 C       %FPT_OPEN(FPTN=OPEN_OU,DCB=%M$OU);
      735     7454 C       %FPT_OPEN(FPTN=OPEN_SO,DCB=%M$SO);
      736     7455 C
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:156  
      737     7456 C       DCL P$PROG_SWITCH_WORD(0:35) BOOLEAN SYMREF;
      738     7457 C
      739     7458 C               OPTIONS(LS_OPT)=P$PROG_SWITCH_WORD(10);
      740     7459 C               OPTIONS(XREF_OPT)=P$PROG_SWITCH_WORD(2);
      741     7460 C               CALL M$OPEN(OPEN_SO)
      742     7461 C                   WHENRETURN DO;
      743     7462 C                     OPTIONS(SO_OPT)=TRUE;
      744     7463 C                   END;
      745     7464 C                   WHENALTRETURN DO;
      746     7465 C                     OPTIONS(SO_OPT)=FALSE;
      747     7466 C                   END;
      748     7467 C               CALL M$OPEN(OPEN_OU)
      749     7468 C                   WHENALTRETURN DO;
      750     7469 C                     OPTIONS(OU_OPT)=FALSE;
      751     7470 C                   END;
      752     7471 C               CALL M$OPEN(OPEN_OPTION) ALTRET(NOTHING);
      753     7472 C               OPTION_KEYWORD_FOUND=FALSE;
      754     7473 C               DO UNTIL FALSE;
      755     7474 C       READ_ETC_CARD:
      756     7475 C                 CALL M$READ(READ_OPTION) ALTRET(CLOSE_DSTAR);
      757     7476 C                 INSTR_LEN=Z8PS$M$OPTION$->F$DCB.ARS#;
      758     7477 C                 IF NOT OPTION_KEYWORD_FOUND THEN DO;
      759     7478 C                   CALL INDEX(I,'OPTION',SUBSTR(INSTRCHR,0,INSTR_LEN))
      760     7479 C                       ALTRET(READ_ETC_CARD);
      761     7480 C                   CALL INDEX(INSTR_INDX,'=',SUBSTR(INSTRCHR,0,INSTR_LEN),I);
      762     7481 C                   OPTION_KEYWORD_FOUND=TRUE;
      763     7482 C                 END;
      764     7483 C                 ELSE INSTR_INDX=14; /* Tab past "$      ETC" */
      765     7484 C                 DO WHILE INSTR_INDX < INSTR_LEN-1;
      766     7485 C                   INSTR_INDX=INSTR_INDX+1;
      767     7486 C                   CALL INDEX(I,',',SUBSTR(INSTRCHR,0,INSTR_LEN),INSTR_INDX);
      768     7487 C                   OPTNAME=SUBSTR(INSTRCHR,INSTR_INDX,I-INSTR_INDX);
      769     7488 C                   DO SELECT(OPTNAME);
      770     7489 C                     SELECT('COMDK');
      771     7490 C                       OPTIONS(SO_OPT)=TRUE;
      772     7491 C                     SELECT('DECK');
      773     7492 C                       OPTIONS(OU_OPT)=TRUE;
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:157  
      774     7493 C                     SELECT('DUMP','NDUMP');
      775     7494 C                       /* Handled automatically by the system */
      776     7495 C                     SELECT('LSTIN');
      777     7496 C                       OPTIONS(LS_OPT)=TRUE;
      778     7497 C                     SELECT('NCOMDK');
      779     7498 C                       OPTIONS(SO_OPT)=FALSE;
      780     7499 C                     SELECT('NDECK');
      781     7500 C                       OPTIONS(OU_OPT)=FALSE;
      782     7501 C                     SELECT('NLSTIN');
      783     7502 C                       OPTIONS(LS_OPT)=FALSE;
      784     7503 C                     SELECT('NXREF');
      785     7504 C                       OPTIONS(XREF_OPT)=FALSE;
      786     7505 C                     SELECT('XREF');
      787     7506 C                       OPTIONS(XREF_OPT)=TRUE;
      788     7507 C                   END;
      789     7508 C                   INSTR_INDX=I;
      790     7509 C                 END;
      791     7510 C               END;
      792     7511 C       CLOSE_DSTAR:
      793     7512 C               CALL M$CLOSE(CLOSE_OPTION);
      794     7513 C               ZWI$OPTION.LS=OPTIONS(LS_OPT);
      795     7514 C               ZWI$OPTION.OU=OPTIONS(OU_OPT);
      796     7515 C               ZWI$OPTION.DO_LO_SAME=~DO_REQ;
      797     7516         %ENDIF;
      798     7517    1    NOTHING:;
      799     7518    1    END COMMAND_LINE_OPTIONS;

   7518 31 000230   000000 702200 xent               TSX2  ! X66_ARET
      800     7519         %EOD;

PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:158  
--  Include file information  --

   B$JIT_C.:LIB_E04  is referenced.
   B$JIT.:LIB_E04  cannot be made into a system file and is referenced.
   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure COMMAND_LINE_OPTIONS.
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:159  

 **** Variables and constants ****

  ****  Section 001 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 002 LblCom SAVE_OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_OUT_DCBN

  ****  Section 003 LblCom SAVE_DCBN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_DCBN2

  ****  Section 010 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 011 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 OPTIONS(0:25)

PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:160  
  ****  Section 012 LblCom DO_REQ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 DO_REQ

  ****  Section 013 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)     r     1 OPTIONS_TEXT(0:25)

  ****  Section 014 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 INSTR(0:511)               0-0-0/c CHAR(512)   r     1 INSTRCHR

  ****  Section 015 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 016 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 INSTR_LEN

  ****  Section 017 LblCom INSTR_INDX

PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:161  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 INSTR_INDX

  ****  Section 018 LblCom EOF_FLAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 019 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(20)          1 KEY_REC

  ****  Section 020 LblCom LINES_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINES_OUT

  ****  Section 021 LblCom HEADER_LINE1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE1

  ****  Section 022 LblCom HEADER_LINE3

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:162  

     0-0-0/c CHAR(100)         1 HEADER_LINE3

  ****  Section 023 LblCom HEADER_LINE2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE2

  ****  Section 024 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 MAX_LINES_PER_PAGE

  ****  Section 025 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 026 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINELEN

  ****  Section 027 LblCom PHASE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PHASE
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:163  

  ****  Section 028 LblCom ERROR_COUNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERROR_COUNT

  ****  Section 029  Data  COMMAND_LINE_OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2088)  r     1 DELETE_SO                 72-0-0/d STRC(2088)  r     1 OPEN_SO
   164-0-0/c STRC(45)    r     1 OPTCHR_ERR

  ****  Section 030 RoData COMMAND_LINE_OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(360)   r     1 BAD_OPT
    12-0-0/c CHAR        r     1 SEARCH_TAB(0:127)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/c CHAR        r     1 C                          3-0-0/w SBIN        r     1 I
     4-0-0/w SBIN              1 J                         13-0-0/w UBIN        r     1 JUNK1
     5-0-0/w SBIN              1 K                         10-0-0/b BIT         r     1 LEVEL
     6-0-0/c CHAR(4)     r     1 OPTCHR                    14-0-0/w SBIN        r     1 START

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #009=COMMAND_LINE_OPTIONS File=Z9PS.:Z8A6TSI                       SAT 08/09/97 09:49 Page:164  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0N  NULL        r     1 M$DO
     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$OU
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$SO
     0-0-0N  NULL        r     1 M$UC                       0-0-0N  NULL        r     1 M$UI


   Procedure COMMAND_LINE_OPTIONS requires 153 words for executable code.
   Procedure COMMAND_LINE_OPTIONS requires 16 words of local(AUTO) storage.

PL6.E3A0      #010=HANDLE_LISTING File=Z9PS.:Z8A6TSI                             SAT 08/09/97 09:50 Page:165  
      801        1        /*T***********************************************************/
      802        2        /*T*                                                         */
      803        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      804        4        /*T*                                                         */
      805        5        /*T***********************************************************/
      806        6         HANDLE_LISTING : PROC NOAUTO;
      807        7         /*D*
      808        8               NAME: HANDLE_LISTING
      809        9               DESCRITION: This procedure is called when information
      810       10                 about the listing needs to be updated.
      811       11         */
      812       12
      813       13    1        DCL EJECT_PAGE ENTRY;
      814       14    1        DCL OUTPUT_HEADER ENTRY;
      815       15
      816       16    1        DCL LINES_OUT SBIN WORD EXT;
      817       17    1        DCL MAX_LINES_PER_PAGE UBIN EXT;
      818       18
      819       19    1        LINES_OUT = LINES_OUT + 1;
      820       20    1        IF LINES_OUT >= MAX_LINES_PER_PAGE THEN
      821       21    2          DO;
      822       22    2            CALL EJECT_PAGE;
      823       23    2            CALL OUTPUT_HEADER;
      824       24    2          END;
      825       25    1    END HANDLE_LISTING;
      826       26         %EOD;

PL6.E3A0      #010=HANDLE_LISTING File=Z9PS.:Z8A6TSI                             SAT 08/09/97 09:50 Page:166  
      No diagnostics issued in procedure HANDLE_LISTING.

   Procedure HANDLE_LISTING requires 14 words for executable code.
   Procedure HANDLE_LISTING is declared NOAUTO and requires 2 words of local(STATIC) storage.

PL6.E3A0      #010=HANDLE_LISTING File=Z9PS.:Z8A6TSI                             SAT 08/09/97 09:50 Page:167  

 Object Unit name= HANDLE_LISTING                             File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:50:13.80 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     2      2  HANDLE_LISTING
    1  LblCom even  none     1      1  LINES_OUT
    2  LblCom even  none     1      1  MAX_LINES_PER_PAGE
    3   Proc  even  none    14     16  HANDLE_LISTING
    4  RoData even  none     1      1  HANDLE_LISTING

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  HANDLE_LISTING

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 EJECT_PAGE
         yes           Std       0 OUTPUT_HEADER
PL6.E3A0      #010=HANDLE_LISTING File=Z9PS.:Z8A6TSI                             SAT 08/09/97 09:50 Page:168  


      801        1        /*T***********************************************************/
      802        2        /*T*                                                         */
      803        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      804        4        /*T*                                                         */
      805        5        /*T***********************************************************/
      806        6         HANDLE_LISTING : PROC NOAUTO;

      6  3 000000   000000 741200 0     HANDLE_LIST* STX1  ! 0

      807        7         /*D*
      808        8               NAME: HANDLE_LISTING
      809        9               DESCRITION: This procedure is called when information
      810       10                 about the listing needs to be updated.
      811       11         */
      812       12
      813       13    1        DCL EJECT_PAGE ENTRY;
      814       14    1        DCL OUTPUT_HEADER ENTRY;
      815       15
      816       16    1        DCL LINES_OUT SBIN WORD EXT;
      817       17    1        DCL MAX_LINES_PER_PAGE UBIN EXT;
      818       18
      819       19    1        LINES_OUT = LINES_OUT + 1;

     19  3 000001   000000 054000 1                  AOS     LINES_OUT

      820       20    1        IF LINES_OUT >= MAX_LINES_PER_PAGE THEN

     20  3 000002   000000 236000 1                  LDQ     LINES_OUT
         3 000003   000014 604000 3                  TMI     s:25
         3 000004   000000 116000 2                  CMPQ    MAX_LINES_PER_PAGE
         3 000005   000014 602000 3                  TNC     s:25

      821       21    2          DO;

      822       22    2            CALL EJECT_PAGE;

PL6.E3A0      #010=HANDLE_LISTING File=Z9PS.:Z8A6TSI                             SAT 08/09/97 09:50 Page:169  
     22  3 000006   000000 631400 4                  EPPR1   0
         3 000007   000000 701000 xent               TSX1    EJECT_PAGE
         3 000010   000000 011000                    NOP     0

      823       23    2            CALL OUTPUT_HEADER;

     23  3 000011   000000 631400 4                  EPPR1   0
         3 000012   000000 701000 xent               TSX1    OUTPUT_HEADER
         3 000013   000000 011000                    NOP     0

      824       24    2          END;

      825       25    1    END HANDLE_LISTING;

     25  3 000014   000000 221200 0                  LDX1  ! 0
         3 000015   000001 702211                    TSX2  ! 1,X1
      826       26         %EOD;

PL6.E3A0      #010=HANDLE_LISTING File=Z9PS.:Z8A6TSI                             SAT 08/09/97 09:50 Page:170  
      No diagnostics issued in procedure HANDLE_LISTING.
PL6.E3A0      #010=HANDLE_LISTING File=Z9PS.:Z8A6TSI                             SAT 08/09/97 09:50 Page:171  

 **** Variables and constants ****

  ****  Section 001 LblCom LINES_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 LINES_OUT

  ****  Section 002 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 MAX_LINES_PER_PAGE


   Procedure HANDLE_LISTING requires 14 words for executable code.
   Procedure HANDLE_LISTING is declared NOAUTO and requires 2 words of local(STATIC) storage.

PL6.E3A0      #011=OUTPUT_HEADER File=Z9PS.:Z8A6TSI                              SAT 08/09/97 09:50 Page:172  
      827        1        /*T***********************************************************/
      828        2        /*T*                                                         */
      829        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      830        4        /*T*                                                         */
      831        5        /*T***********************************************************/
      832        6         OUTPUT_HEADER :  PROC NOAUTO;
      833        7         /*D*
      834        8               NAME: OUTPUT_HEADER
      835        9               DESCRIPTION: Output the page header to the listing file.
      836       10         */
      837       11         %INCLUDE Z8A_SYS_FILE;
      838     6286
      839     6287    1        DCL PAGE_NUM SBIN WORD STATIC INIT(1);
      840     6288    1        DCL BLANK_ZERO ENTRY(2);
      841     6289
      842     6290    1        DCL TEXT CHAR(4);
      843     6291    1        DCL LINES_OUT SBIN WORD EXT;
      844     6292    1        DCL HEADER_LINE1 CHAR(100) EXT;
      845     6293    1        DCL HEADER_LINE2 CHAR(100) EXT;
      846     6294    1        DCL HEADER_LINE3 CHAR(100) EXT;
      847     6295    1        DCL OUT_DCBN SBIN EXT;
      848     6296             %FPT_WRITE(FPTN=LINEOUT);
      849     6327
      850     6328    1        LINEOUT.V.DCB# = OUT_DCBN;
      851     6329
      852     6330    1        CALL BINCHAR(TEXT,PAGE_NUM);
      853     6331    1        CALL BLANK_ZERO(ADDR(TEXT),4);
      854     6332    1        CALL INSERT(HEADER_LINE1,94,,TEXT);
      855     6333
      856     6334    1        LINEOUT.BUF_ = VECTOR(HEADER_LINE1);
      857     6335    1        CALL M$WRITE(LINEOUT);
      858     6336    1        LINEOUT.BUF_ = VECTOR(HEADER_LINE2);
      859     6337    1        CALL M$WRITE(LINEOUT);
      860     6338    1        LINEOUT.BUF_ = VECTOR(HEADER_LINE3);
      861     6339    1        CALL M$WRITE(LINEOUT);
      862     6340
      863     6341    1        LINES_OUT = LINES_OUT + 4;
PL6.E3A0      #011=OUTPUT_HEADER File=Z9PS.:Z8A6TSI                              SAT 08/09/97 09:50 Page:173  
      864     6342    1        PAGE_NUM = PAGE_NUM + 1;
      865     6343    1    END OUTPUT_HEADER;
      866     6344         %EOD;

PL6.E3A0      #011=OUTPUT_HEADER File=Z9PS.:Z8A6TSI                              SAT 08/09/97 09:50 Page:174  
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure OUTPUT_HEADER.

   Procedure OUTPUT_HEADER requires 39 words for executable code.
   Procedure OUTPUT_HEADER is declared NOAUTO and requires 20 words of local(STATIC) storage.

PL6.E3A0      #011=OUTPUT_HEADER File=Z9PS.:Z8A6TSI                              SAT 08/09/97 09:50 Page:175  

 Object Unit name= OUTPUT_HEADER                              File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:50:14.96 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    20     24  OUTPUT_HEADER
    1   DCB   even  none     0      0  M$UC
    2  LblCom even  none     1      1  LINES_OUT
    3  LblCom even  none    25     31  HEADER_LINE1
    4  LblCom even  none    25     31  HEADER_LINE2
    5  LblCom even  none    25     31  HEADER_LINE3
    6  LblCom even  none     1      1  OUT_DCBN
    7   Proc  even  none    39     47  OUTPUT_HEADER
    8  RoData even  none    10     12  OUTPUT_HEADER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes            yes      Std        0  OUTPUT_HEADER

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 BLANK_ZERO
PL6.E3A0      #011=OUTPUT_HEADER File=Z9PS.:Z8A6TSI                              SAT 08/09/97 09:50 Page:176  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #011=OUTPUT_HEADER File=Z9PS.:Z8A6TSI                              SAT 08/09/97 09:50 Page:177  


      827        1        /*T***********************************************************/
      828        2        /*T*                                                         */
      829        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      830        4        /*T*                                                         */
      831        5        /*T***********************************************************/
      832        6         OUTPUT_HEADER :  PROC NOAUTO;

      6  7 000000   000000 741200 0     OUTPUT_HEAD* STX1  ! 0

      833        7         /*D*
      834        8               NAME: OUTPUT_HEADER
      835        9               DESCRIPTION: Output the page header to the listing file.
      836       10         */
      837       11         %INCLUDE Z8A_SYS_FILE;
      838     6286
      839     6287    1        DCL PAGE_NUM SBIN WORD STATIC INIT(1);
      840     6288    1        DCL BLANK_ZERO ENTRY(2);
      841     6289
      842     6290    1        DCL TEXT CHAR(4);
      843     6291    1        DCL LINES_OUT SBIN WORD EXT;
      844     6292    1        DCL HEADER_LINE1 CHAR(100) EXT;
      845     6293    1        DCL HEADER_LINE2 CHAR(100) EXT;
      846     6294    1        DCL HEADER_LINE3 CHAR(100) EXT;
      847     6295    1        DCL OUT_DCBN SBIN EXT;
      848     6296             %FPT_WRITE(FPTN=LINEOUT);
      849     6327
      850     6328    1        LINEOUT.V.DCB# = OUT_DCBN;

   6328  7 000001   000000 720000 6                  LXL0    OUT_DCBN
         7 000002   000014 740000 0                  STX0    LINEOUT+8

      851     6329
      852     6330    1        CALL BINCHAR(TEXT,PAGE_NUM);

   6330  7 000003   000000 301400                    BTD
         7 000004   000001 000004 0                  NDSC9   PAGE_NUM                 cn=0,s=lsgnf,sf=0,n=4
PL6.E3A0      #011=OUTPUT_HEADER File=Z9PS.:Z8A6TSI                              SAT 08/09/97 09:50 Page:178  
         7 000005   000002 030004 0                  NDSC9   TEXT                     cn=0,s=nosgn,sf=0,n=4

      853     6331    1        CALL BLANK_ZERO(ADDR(TEXT),4);

   6331  7 000006   000001 236000 8                  LDQ     1
         7 000007   000020 756000 0                  STQ     LINEOUT+12
         7 000010   000003 236000 8                  LDQ     3
         7 000011   000023 756000 0                  STQ     LINEOUT+15
         7 000012   000020 630400 0                  EPPR0   LINEOUT+12
         7 000013   000022 450400 0                  STP0    LINEOUT+14
         7 000014   000022 630400 0                  EPPR0   LINEOUT+14
         7 000015   000000 631400 8                  EPPR1   0
         7 000016   000000 701000 xent               TSX1    BLANK_ZERO
         7 000017   000000 011000                    NOP     0

      854     6332    1        CALL INSERT(HEADER_LINE1,94,,TEXT);

   6332  7 000020   040000 100400                    MLR     fill='040'O
         7 000021   000002 000004 0                  ADSC9   TEXT                     cn=0,n=4
         7 000022   000027 400006 3                  ADSC9   HEADER_LINE1+23          cn=2,n=6

      855     6333
      856     6334    1        LINEOUT.BUF_ = VECTOR(HEADER_LINE1);

   6334  7 000023   000004 237000 8                  LDAQ    4
         7 000024   000010 757000 0                  STAQ    LINEOUT+4

      857     6335    1        CALL M$WRITE(LINEOUT);

   6335  7 000025   000004 630400 0                  EPPR0   LINEOUT
         7 000026   040001 713400                    CLIMB   write
         7 000027   401400 401760                    pmme    nvectors=4

      858     6336    1        LINEOUT.BUF_ = VECTOR(HEADER_LINE2);

   6336  7 000030   000006 237000 8                  LDAQ    6
         7 000031   000010 757000 0                  STAQ    LINEOUT+4
PL6.E3A0      #011=OUTPUT_HEADER File=Z9PS.:Z8A6TSI                              SAT 08/09/97 09:50 Page:179  

      859     6337    1        CALL M$WRITE(LINEOUT);

   6337  7 000032   000004 630400 0                  EPPR0   LINEOUT
         7 000033   040001 713400                    CLIMB   write
         7 000034   401400 401760                    pmme    nvectors=4

      860     6338    1        LINEOUT.BUF_ = VECTOR(HEADER_LINE3);

   6338  7 000035   000010 237000 8                  LDAQ    8
         7 000036   000010 757000 0                  STAQ    LINEOUT+4

      861     6339    1        CALL M$WRITE(LINEOUT);

   6339  7 000037   000004 630400 0                  EPPR0   LINEOUT
         7 000040   040001 713400                    CLIMB   write
         7 000041   401400 401760                    pmme    nvectors=4

      862     6340
      863     6341    1        LINES_OUT = LINES_OUT + 4;

   6341  7 000042   000004 236007                    LDQ     4,DL
         7 000043   000000 056000 2                  ASQ     LINES_OUT

      864     6342    1        PAGE_NUM = PAGE_NUM + 1;

   6342  7 000044   000001 054000 0                  AOS     PAGE_NUM

      865     6343    1    END OUTPUT_HEADER;

   6343  7 000045   000000 221200 0                  LDX1  ! 0
         7 000046   000001 702211                    TSX2  ! 1,X1
      866     6344         %EOD;

PL6.E3A0      #011=OUTPUT_HEADER File=Z9PS.:Z8A6TSI                              SAT 08/09/97 09:50 Page:180  
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure OUTPUT_HEADER.
PL6.E3A0      #011=OUTPUT_HEADER File=Z9PS.:Z8A6TSI                              SAT 08/09/97 09:50 Page:181  

 **** Variables and constants ****

  ****  Section 000  Data  OUTPUT_HEADER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/d STRC(432)   r     1 LINEOUT                    1-0-0/w SBIN        r     1 PAGE_NUM
     2-0-0/c CHAR(4)     r     1 TEXT

  ****  Section 002 LblCom LINES_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 LINES_OUT

  ****  Section 003 LblCom HEADER_LINE1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)   r     1 HEADER_LINE1

  ****  Section 004 LblCom HEADER_LINE2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)   r     1 HEADER_LINE2

  ****  Section 005 LblCom HEADER_LINE3

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)   r     1 HEADER_LINE3
PL6.E3A0      #011=OUTPUT_HEADER File=Z9PS.:Z8A6TSI                              SAT 08/09/97 09:50 Page:182  

  ****  Section 006 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 OUT_DCBN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$UC


   Procedure OUTPUT_HEADER requires 39 words for executable code.
   Procedure OUTPUT_HEADER is declared NOAUTO and requires 20 words of local(STATIC) storage.

PL6.E3A0      #012=EJECT_PAGE File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:50 Page:183  
      867        1        /*T***********************************************************/
      868        2        /*T*                                                         */
      869        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      870        4        /*T*                                                         */
      871        5        /*T***********************************************************/
      872        6
      873        7         EJECT_PAGE : PROC NOAUTO;
      874        8
      875        9         /*D*
      876       10               NAME: EJECT_PAGE
      877       11               DESCRIPTION: Output a page eject to M$LO.
      878       12         */
      879       13
      880       14         %INCLUDE Z8A_SYS_FILE;
      881     6289    1        DCL PAGE_CONTROL CHAR(1) CONSTANT INIT('P');
      882     6290    1        DCL LINES_OUT SBIN WORD EXT;
      883     6291         %IF CP6;
      884     6292    1        DCL M$LO DCB;
      885     6293         %ENDIF;
      886     6294
      887     6295             %FPT_WRITE(FPTN=WRITE_LO_PAGE,VFC=YES,DCB=%M$LO,BUF=PAGE_CONTROL,STCLASS=
              6295                 CONSTANT);
      888     6326
      889     6327    1        CALL M$WRITE(WRITE_LO_PAGE);
      890     6328    1        LINES_OUT = 0;
      891     6329    1    END EJECT_PAGE;
      892     6330        %EOD;

PL6.E3A0      #012=EJECT_PAGE File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:50 Page:184  
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure EJECT_PAGE.

   Procedure EJECT_PAGE requires 7 words for executable code.
   Procedure EJECT_PAGE is declared NOAUTO and requires 2 words of local(STATIC) storage.

PL6.E3A0      #012=EJECT_PAGE File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:50 Page:185  

 Object Unit name= EJECT_PAGE                                 File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:50:24.24 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     2      2  EJECT_PAGE
    1   DCB   even  none     0      0  M$UC
    2  RoData even  UTS     14     16  EJECT_PAGE
    3  LblCom even  none     1      1  LINES_OUT
    4   DCB   even  none     0      0  M$LO
    5   Proc  even  none     7      7  EJECT_PAGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        0  EJECT_PAGE

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #012=EJECT_PAGE File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:50 Page:186  


      867        1        /*T***********************************************************/
      868        2        /*T*                                                         */
      869        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      870        4        /*T*                                                         */
      871        5        /*T***********************************************************/
      872        6
      873        7         EJECT_PAGE : PROC NOAUTO;

      7  5 000000   000000 741200 0     EJECT_PAGE   STX1  ! 0

      874        8
      875        9         /*D*
      876       10               NAME: EJECT_PAGE
      877       11               DESCRIPTION: Output a page eject to M$LO.
      878       12         */
      879       13
      880       14         %INCLUDE Z8A_SYS_FILE;
      881     6289    1        DCL PAGE_CONTROL CHAR(1) CONSTANT INIT('P');
      882     6290    1        DCL LINES_OUT SBIN WORD EXT;
      883     6291         %IF CP6;
      884     6292    1        DCL M$LO DCB;
      885     6293         %ENDIF;
      886     6294
      887     6295             %FPT_WRITE(FPTN=WRITE_LO_PAGE,VFC=YES,DCB=%M$LO,BUF=PAGE_CONTROL,STCLASS=
              6295                 CONSTANT);
      888     6326
      889     6327    1        CALL M$WRITE(WRITE_LO_PAGE);

   6327  5 000001   000002 630400 2                  EPPR0   WRITE_LO_PAGE
         5 000002   040001 713400                    CLIMB   write
         5 000003   401400 401760                    pmme    nvectors=4

      890     6328    1        LINES_OUT = 0;

   6328  5 000004   000000 450000 3                  STZ     LINES_OUT

PL6.E3A0      #012=EJECT_PAGE File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:50 Page:187  
      891     6329    1    END EJECT_PAGE;

   6329  5 000005   000000 221200 0                  LDX1  ! 0
         5 000006   000001 702211                    TSX2  ! 1,X1
      892     6330        %EOD;

PL6.E3A0      #012=EJECT_PAGE File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:50 Page:188  
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure EJECT_PAGE.
PL6.E3A0      #012=EJECT_PAGE File=Z9PS.:Z8A6TSI                                 SAT 08/09/97 09:50 Page:189  

 **** Variables and constants ****

  ****  Section 002 RoData EJECT_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 PAGE_CONTROL               2-0-0/d STRC(432)   r     1 WRITE_LO_PAGE

  ****  Section 003 LblCom LINES_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 LINES_OUT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$UC


   Procedure EJECT_PAGE requires 7 words for executable code.
   Procedure EJECT_PAGE is declared NOAUTO and requires 2 words of local(STATIC) storage.

PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:190  
      893        1        /*T***********************************************************/
      894        2        /*T*                                                         */
      895        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      896        4        /*T*                                                         */
      897        5        /*T***********************************************************/
      898        6        /*------------*/
      899        7          HANDLE_BREAK :  PROC  ASYNC NOAUTO;
      900        8        /*------------*/
      901        9
      902       10    1   DCL B$TCB$        PTR SYMREF;
      903       11    1   DCL BREAK_IN_PROGRESS BIT(1) ALIGNED STATIC INIT('0'B);
      904       12    1   DCL BUFFER        CHAR(80);
      905       13    1   DCL LEN           SBIN;
      906       14    1   DCL M$ME          DCB;
      907       15    1   DCL CHAR_NUM      CHAR(8);
      908       16
      909       17        %INCLUDE Z8P_SCAN_EXT;
      910      206        %INCLUDE CP_6;
      911     5766        %INCLUDE CP_6_SUBS;
      912     6306
      913     6307        %FPT_TRMPRG( RSTBRK = YES );
      914     6336        %FPT_WRITE( FPTN = WRITEME, DCB = M$ME, VFC = NO );
      915     6367
      916     6368    2   DO INHIBIT;
      917     6369    2     IF BREAK_IN_PROGRESS THEN
      918     6370    2       RETURN;
      919     6371    2     BREAK_IN_PROGRESS = '1'B;
      920     6372    2   END;
      921     6373
      922     6374    1   CALL M$SENV ALTRET( SKIP_IF_SENV_ERROR );
      923     6375
      924     6376    1   CALL BINCHAR( CHAR_NUM, ERROR_COUNT );
      925     6377    1   CALL BLANK_ZERO( ADDR(CHAR_NUM), 8 );
      926     6378
      927     6379    2   DO CASE( PHASE );
      928     6380
      929     6381    2     CASE( %PARSING );
PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:191  
      930     6382
      931     6383    2       CALL CONCAT( BUFFER, 'Parsing RecNo = ', SUBSTR( KEY_REC, 0, 10),
      932     6384    2               '#Diag = ', CHAR_NUM );
      933     6385
      934     6386    2     CASE( %GEN_XR );
      935     6387
      936     6388    2       CALL CONCAT( BUFFER, 'Generating the XREF, #Diag = ', CHAR_NUM );
      937     6389
      938     6390    2     CASE( %OUT_LABEL );
      939     6391
      940     6392    2       CALL CONCAT( BUFFER, 'Initializing the scanner, #Diag = ', CHAR_NUM );
      941     6393
      942     6394    2     CASE( %OUT_PEPD );
      943     6395
      944     6396    2       CALL CONCAT( BUFFER, 'Outputting the PEPD initialization, #Diag = ',
      945     6397    2               CHAR_NUM );
      946     6398
      947     6399    2     CASE( %WRAP_UP );
      948     6400
      949     6401    2       CALL CONCAT( BUFFER, 'Wrapping up, #Diag = ', CHAR_NUM );
      950     6402
      951     6403    2   END;   /*   CASE PHASE   */
      952     6404
      953     6405    1   WRITEME.BUF_ = VECTOR( BUFFER );
      954     6406    1   CALL M$RENV ALTRET( IGNORE_RENV_ERROR );
      955     6407
      956     6408    1   IGNORE_RENV_ERROR: ;
      957     6409    1   SKIP_IF_SENV_ERROR: ;
      958     6410
      959     6411    2   DO INHIBIT;
      960     6412    2     BREAK_IN_PROGRESS = '0'B;
      961     6413    2     RETURN;
      962     6414    2   END;
      963     6415
      964     6416    1   END HANDLE_BREAK;

PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:192  
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure HANDLE_BREAK.

   Procedure HANDLE_BREAK requires 81 words for executable code.
   Procedure HANDLE_BREAK is declared NOAUTO and requires 50 words of local(STATIC) storage.

    No errors detected in file Z9PS.:Z8A6TSI    .

PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:193  

 Object Unit name= HANDLE_BREAK                               File name= Z9PS.:Z8A6TOU
 UTS= AUG 09 '97 09:50:32.96 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    50     62  HANDLE_BREAK
    1   DCB   even  none     0      0  M$ME
    2  LblCom even  none     1      1  OUT_DCBN
    3  LblCom even  none     1      1  SAVE_OUT_DCBN
    4  LblCom even  none     1      1  SAVE_DCBN2
    5   DCB   even  none     0      0  M$OU
    6   DCB   even  none     0      0  M$SO
    7   DCB   even  none     0      0  M$LO
    8   DCB   even  none     0      0  M$SI
    9   DCB   even  none     0      0  M$UI
   10   DCB   even  none     0      0  M$DO
   11  LblCom even  none     1      1  ERR_SEV
   12  LblCom even  none     1      1  OPTIONS
   13  LblCom even  none     1      1  DO_REQ
   14  LblCom even  none    26     32  OPTIONS_TEXT
   15  LblCom even  none   128    200  INSTR
   16  LblCom even  none     1      1  INSTR_LISTED
   17  LblCom even  none     1      1  INSTR_LEN
   18  LblCom even  none     1      1  INSTR_INDX
   19  LblCom even  none     1      1  EOF_FLAG
   20  LblCom even  none     5      5  KEY_REC
   21  LblCom even  none     1      1  LINES_OUT
   22  LblCom even  none    25     31  HEADER_LINE1
   23  LblCom even  none    25     31  HEADER_LINE3
   24  LblCom even  none    25     31  HEADER_LINE2
   25  LblCom even  none     1      1  MAX_LINES_PER_PAGE
   26  LblCom even  none    28     34  LINE
   27  LblCom even  none     1      1  LINELEN
   28  LblCom even  none     1      1  PHASE
PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:194  
   29  LblCom even  none     1      1  ERROR_COUNT
   30   DCB   even  none     0      0  M$UC
   31  RoData even  UTS     40     50  HANDLE_BREAK
   32   Proc  even  none    81    121  HANDLE_BREAK
   33  RoData even  none     6      6  HANDLE_BREAK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    32      0   yes            yes     Async       0  HANDLE_BREAK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 BLANK_ZERO
                       nStd      0 X66_ASTATIC
                       nStd      0 X66_ASRET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$TCB$                                M$ME                                  M$OU
     M$SO                                  M$LO                                  M$SI
     M$UI                                  M$DO                                  M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:195  


      893        1        /*T***********************************************************/
      894        2        /*T*                                                         */
      895        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      896        4        /*T*                                                         */
      897        5        /*T***********************************************************/
      898        6        /*------------*/
      899        7          HANDLE_BREAK :  PROC  ASYNC NOAUTO;

      7 32 000000   000000 700200 xent  HANDLE_BREAK TSX0  ! X66_ASTATIC
        32 000001   000000 000000 0                  ZERO    0,0

      900        8        /*------------*/
      901        9
      902       10    1   DCL B$TCB$        PTR SYMREF;
      903       11    1   DCL BREAK_IN_PROGRESS BIT(1) ALIGNED STATIC INIT('0'B);
      904       12    1   DCL BUFFER        CHAR(80);
      905       13    1   DCL LEN           SBIN;
      906       14    1   DCL M$ME          DCB;
      907       15    1   DCL CHAR_NUM      CHAR(8);
      908       16
      909       17        %INCLUDE Z8P_SCAN_EXT;
      910      206        %INCLUDE CP_6;
      911     5766        %INCLUDE CP_6_SUBS;
      912     6306
      913     6307        %FPT_TRMPRG( RSTBRK = YES );
      914     6336        %FPT_WRITE( FPTN = WRITEME, DCB = M$ME, VFC = NO );
      915     6367
      916     6368    2   DO INHIBIT;

      917     6369    2     IF BREAK_IN_PROGRESS THEN

   6369 32 000002   000001 234200 0                  SZN   ! BREAK_IN_PROGRESS
        32 000003   000005 605200 32                 TPL   ! s:6371

      918     6370    2       RETURN;

PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:196  
   6370 32 000004   000000 702200 xent               TSX2  ! X66_ASRET

      919     6371    2     BREAK_IN_PROGRESS = '1'B;

   6371 32 000005   400000 236203                    LDQ   ! -131072,DU
        32 000006   000001 756200 0                  STQ   ! BREAK_IN_PROGRESS

      920     6372    2   END;

      921     6373
      922     6374    1   CALL M$SENV ALTRET( SKIP_IF_SENV_ERROR );

   6374 32 000007   410011 713400                    CLIMB   alt,+4105
        32 000010   000000 401760                    pmme    nvectors=0
        32 000011   000116 702000 32                 TSX2    IGNORE_RENV_ERROR

      923     6375
      924     6376    1   CALL BINCHAR( CHAR_NUM, ERROR_COUNT );

   6376 32 000012   000000 301400                    BTD
        32 000013   000000 000004 29                 NDSC9   ERROR_COUNT              cn=0,s=lsgnf,sf=0,n=4
        32 000014   000027 030010 0                  NDSC9   CHAR_NUM                 cn=0,s=nosgn,sf=0,n=8

      925     6377    1   CALL BLANK_ZERO( ADDR(CHAR_NUM), 8 );

   6377 32 000015   000001 236000 33                 LDQ     1
        32 000016   000056 756000 0                  STQ     WRITEME+12
        32 000017   000003 236000 33                 LDQ     3
        32 000020   000061 756000 0                  STQ     WRITEME+15
        32 000021   000056 630400 0                  EPPR0   WRITEME+12
        32 000022   000060 450400 0                  STP0    WRITEME+14
        32 000023   000060 630400 0                  EPPR0   WRITEME+14
        32 000024   000000 631400 33                 EPPR1   0
        32 000025   000000 701000 xent               TSX1    BLANK_ZERO
        32 000026   000000 011000                    NOP     0

      926     6378
PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:197  
      927     6379    2   DO CASE( PHASE );

   6379 32 000027   000000 235000 28                 LDA     PHASE
        32 000030   000006 115007                    CMPA    6,DL
        32 000031   000033 602005 32                 TNC     s:6379+4,AL
        32 000032   000111 710000 32                 TRA     s:6405
        32 000033   000111 710000 32                 TRA     s:6405
        32 000034   000041 710000 32                 TRA     s:6383
        32 000035   000065 710000 32                 TRA     s:6392
        32 000036   000056 710000 32                 TRA     s:6388
        32 000037   000074 710000 32                 TRA     s:6396
        32 000040   000103 710000 32                 TRA     s:6401

      928     6380
      929     6381    2     CASE( %PARSING );

      930     6382
      931     6383    2       CALL CONCAT( BUFFER, 'Parsing RecNo = ', SUBSTR( KEY_REC, 0, 10),

   6383 32 000041   040000 100400                    MLR     fill='040'O
        32 000042   000000 000020 31                 ADSC9   0                        cn=0,n=16
        32 000043   000002 000020 0                  ADSC9   BUFFER                   cn=0,n=16
        32 000044   040000 100400                    MLR     fill='040'O
        32 000045   000000 000012 20                 ADSC9   KEY_REC                  cn=0,n=10
        32 000046   000006 000012 0                  ADSC9   BUFFER+4                 cn=0,n=10
        32 000047   040000 100400                    MLR     fill='040'O
        32 000050   000004 000010 31                 ADSC9   4                        cn=0,n=8
        32 000051   000010 400010 0                  ADSC9   BUFFER+6                 cn=2,n=8
        32 000052   040000 100400                    MLR     fill='040'O
        32 000053   000027 000010 0                  ADSC9   CHAR_NUM                 cn=0,n=8
        32 000054   000012 400056 0                  ADSC9   BUFFER+8                 cn=2,n=46
        32 000055   000111 710000 32                 TRA     s:6405

      932     6384    2               '#Diag = ', CHAR_NUM );
      933     6385
      934     6386    2     CASE( %GEN_XR );

PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:198  
      935     6387
      936     6388    2       CALL CONCAT( BUFFER, 'Generating the XREF, #Diag = ', CHAR_NUM );

   6388 32 000056   040000 100400                    MLR     fill='040'O
        32 000057   000006 000035 31                 ADSC9   6                        cn=0,n=29
        32 000060   000002 000035 0                  ADSC9   BUFFER                   cn=0,n=29
        32 000061   040000 100400                    MLR     fill='040'O
        32 000062   000027 000010 0                  ADSC9   CHAR_NUM                 cn=0,n=8
        32 000063   000011 200063 0                  ADSC9   BUFFER+7                 cn=1,n=51
        32 000064   000111 710000 32                 TRA     s:6405

      937     6389
      938     6390    2     CASE( %OUT_LABEL );

      939     6391
      940     6392    2       CALL CONCAT( BUFFER, 'Initializing the scanner, #Diag = ', CHAR_NUM );

   6392 32 000065   040000 100400                    MLR     fill='040'O
        32 000066   000016 000042 31                 ADSC9   14                       cn=0,n=34
        32 000067   000002 000042 0                  ADSC9   BUFFER                   cn=0,n=34
        32 000070   040000 100400                    MLR     fill='040'O
        32 000071   000027 000010 0                  ADSC9   CHAR_NUM                 cn=0,n=8
        32 000072   000012 400056 0                  ADSC9   BUFFER+8                 cn=2,n=46
        32 000073   000111 710000 32                 TRA     s:6405

      941     6393
      942     6394    2     CASE( %OUT_PEPD );

      943     6395
      944     6396    2       CALL CONCAT( BUFFER, 'Outputting the PEPD initialization, #Diag = ',

   6396 32 000074   040000 100400                    MLR     fill='040'O
        32 000075   000027 000054 31                 ADSC9   23                       cn=0,n=44
        32 000076   000002 000054 0                  ADSC9   BUFFER                   cn=0,n=44
        32 000077   040000 100400                    MLR     fill='040'O
        32 000100   000027 000010 0                  ADSC9   CHAR_NUM                 cn=0,n=8
        32 000101   000015 000044 0                  ADSC9   BUFFER+11                cn=0,n=36
PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:199  
        32 000102   000111 710000 32                 TRA     s:6405

      945     6397    2               CHAR_NUM );
      946     6398
      947     6399    2     CASE( %WRAP_UP );

      948     6400
      949     6401    2       CALL CONCAT( BUFFER, 'Wrapping up, #Diag = ', CHAR_NUM );

   6401 32 000103   040000 100400                    MLR     fill='040'O
        32 000104   000042 000025 31                 ADSC9   34                       cn=0,n=21
        32 000105   000002 000025 0                  ADSC9   BUFFER                   cn=0,n=21
        32 000106   040000 100400                    MLR     fill='040'O
        32 000107   000027 000010 0                  ADSC9   CHAR_NUM                 cn=0,n=8
        32 000110   000007 200073 0                  ADSC9   BUFFER+5                 cn=1,n=59

      950     6402
      951     6403    2   END;   /*   CASE PHASE   */

      952     6404
      953     6405    1   WRITEME.BUF_ = VECTOR( BUFFER );

   6405 32 000111   000004 237000 33                 LDAQ    4
        32 000112   000046 757000 0                  STAQ    WRITEME+4

      954     6406    1   CALL M$RENV ALTRET( IGNORE_RENV_ERROR );

   6406 32 000113   410016 713400                    CLIMB   alt,+4110
        32 000114   000000 401760                    pmme    nvectors=0
        32 000115   000116 702000 32                 TSX2    IGNORE_RENV_ERROR

   6405 32 000116                       IGNORE_RENV* null
   6405 32 000116                       SKIP_IF_SEN* null
      955     6407
      956     6408    1   IGNORE_RENV_ERROR: ;
      957     6409    1   SKIP_IF_SENV_ERROR: ;
      958     6410
PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:200  
      959     6411    2   DO INHIBIT;

      960     6412    2     BREAK_IN_PROGRESS = '0'B;

   6412 32 000116   000001 450200 0                  STZ   ! BREAK_IN_PROGRESS

      961     6413    2     RETURN;

   6413 32 000117   000000 702200 xent               TSX2  ! X66_ASRET

      962     6414    2   END;

      963     6415
      964     6416    1   END HANDLE_BREAK;

   6416 32 000120   000000 702200 xent               TSX2  ! X66_ASRET

PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:201  
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9P_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8P_SCAN_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure HANDLE_BREAK.
PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:202  

 **** Variables and constants ****

  ****  Section 000  Data  HANDLE_BREAK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w BIT         r     1 BREAK_IN_PROGRESS          2-0-0/c CHAR(80)    r     1 BUFFER
    27-0-0/c CHAR(8)     r     1 CHAR_NUM                  32-0-0/d STRC(288)   r     1 FPT_TRMPRG
    26-0-0/w SBIN              1 LEN                       42-0-0/d STRC(432)   r     1 WRITEME

  ****  Section 002 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 003 LblCom SAVE_OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_OUT_DCBN

  ****  Section 004 LblCom SAVE_DCBN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SAVE_DCBN2

  ****  Section 011 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:203  
     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 012 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)

  ****  Section 013 LblCom DO_REQ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 DO_REQ

  ****  Section 014 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 015 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 016 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:204  
  ****  Section 017 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 018 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 019 LblCom EOF_FLAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 020 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(20)    r     1 KEY_REC

  ****  Section 021 LblCom LINES_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINES_OUT

  ****  Section 022 LblCom HEADER_LINE1

PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:205  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE1

  ****  Section 023 LblCom HEADER_LINE3

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE3

  ****  Section 024 LblCom HEADER_LINE2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)         1 HEADER_LINE2

  ****  Section 025 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 MAX_LINES_PER_PAGE

  ****  Section 026 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 027 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:206  

     0-0-0/w SBIN              1 LINELEN

  ****  Section 028 LblCom PHASE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 PHASE

  ****  Section 029 LblCom ERROR_COUNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 ERROR_COUNT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 B$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$DO                       0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$ME                       0-0-0N  NULL        r     1 M$OU
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$SO
     0-0-0N  NULL        r     1 M$UC                       0-0-0N  NULL        r     1 M$UI


   Procedure HANDLE_BREAK requires 81 words for executable code.
PL6.E3A0      #013=HANDLE_BREAK File=Z9PS.:Z8A6TSI                               SAT 08/09/97 09:50 Page:207  
   Procedure HANDLE_BREAK is declared NOAUTO and requires 50 words of local(STATIC) storage.

    No errors detected in file Z9PS.:Z8A6TSI    .
