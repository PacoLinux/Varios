VERSION A06
PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE    1
      ESN       ISN       TEXT

        1    000000 BEGIN_PROGRAM Z9HP$PC_DEP_INIT
        2    000000    PSD 3
        3    000000 {*M* Z9HP - System dependent pseudocode module.
        4    000000  *P*
        5    000000      NAME: Z9HP
        6    000000      PURPOSE:
        7    000000           Pseudocode module that drives generation of system dependent
        8    000000           code bursts.
        9    000000      DESCRIPTION:
       10    000000           This module drives code generation of system dependent
       11    000000           code bursts.  It must be assembled by the PseudoCode
       12    000000           Assembler, whose output is  compiled by PL6
       13    000000           to create an object unit. See Z8PD$PCA_DOCUMENT
       14    000000           for information on how the PCA works.  Each ETT or ILL
       15    000000           item that can generate system dependent code has
       16    000000           a START directive in this module, with a label that
       17    000000           corresponds to the item's name.  Following the start
       18    000000           directive is the pseudo code for the item.
       19    000000      REFERENCE:
       20    000000           Z8PD$PCA_DOCUMENT
       21    000000 }
       22    000000 PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE    2
      ESN       ISN       TEXT

       23    000000 ENTER_PL6
       24    000000 %EQU PHASE = 4;
       25    000000 %INCLUDE Z8A_DEFC;
       26    000000 %INCLUDE Z8A_SUPP_MAC;
       27    000000 %INCLUDE Z8A_ILL;
       28    000000 %INCLUDE Z8A_ETT;
       29    000000 %INCLUDE Z8A_COMCOM;
       30    000000 %INCLUDE Z8A_TYPES;
       31    000000 %INCLUDE Z8H_PCOM;
       32    000000 %INCLUDE Z8H_RAT;
       33    000000 %SET INITIALIZE = '1'B;
       34    000000 %INCLUDE Z8H_DEP;
       35    000000 %SET INITIALIZE = '0'B;
       36    000000 %INCLUDE Z8H_DIRECT;
       37    000000 %INCLUDE Z8H_TEMP;
       38    000000 %INCLUDE Z8A_LIBRARY;
       39    000000 ENTER_PCA
       40    000000 PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE    3
      ESN       ISN       TEXT

       41    000000 EXII  START   PEPD
       42    000000        LIB    OP_EXII,YOPND
       43    000002        JMP     EX
       44    000003 EXQI  START   PEPD
       45    000003        LIB    OP_EXQI,YOPND
       46    000005        JMP     EX
       47    000006 EXQQ  START   PEPD
       48    000006        LIB    OP_EXQQ,YOPND
       49    000010        JMP     EX
       50    000011 EXRI  START   PEPD
       51    000011        LIB    OP_EXRI,YOPND
       52    000013        JMP     EX
       53    000014 EXRR  START   PEPD
       54    000014        LIB    OP_EXRR,YOPND
       55    000016        {JMP     EX}
       56    000016
       57    000016 EX     NULL
       58    000016        ALLOTD  VOPND
       59    000020
       60    000020        ALLOT   NEXT,TYI,XOPND,12,9,FRESH
       61    000022        DECCNT  XOPND
       62    000024
       63    000024        ADDRESS LOP,XOPND(0)
       64    000026        ADDRESS ROP,XOPND(1)
       65    000030        ADDRESS VOPND,XOPND(2)
       66    000032
       67    000032        MOVE    COMCOM(ARGS3),PCOM(ZOPND)
       68    000034
       69    000034        GOSUB   CALLSQ
       70    000035
       71    000035        DECCNT  LOP
       72    000037        DECCNT  ROP
       73    000041

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE    4
      ESN       ISN       TEXT

       74    000041        ATTACH  VOPND
       75    000043        QUIT
       76    000044        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE    5
      ESN       ISN       TEXT

       77    000044 EXDI  START   PEPD
       78    000044        WALK    LOP
       79    000046
       80    000046        ALLOTD  POPND
       81    000050        INCCNT  POPND
       82    000052
       83    000052        INCCNT  LOP
       84    000054
       85    000054        ORGE    DATA
       86    000056        NEWLAB  QOPND
       87    000060        DEFLAB  QOPND
       88    000062        DESCR   LOP,NDSC
       89    000064        DESCR   POPND,NDSC
       90    000066        ORGE    PROC
       91    000070
       92    000070        ALLOT   NEXT,TYI,XOPND,16,9,FRESH
       93    000072        DECCNT  XOPND
       94    000074
       95    000074        ADDRESS LOP,XOPND(0)
       96    000076        ADDRESS ROP,XOPND(1)
       97    000100        ADDRESS POPND,XOPND(2)
       98    000102        ADDRESS QOPND,XOPND(3)
       99    000104
      100    000104        MOVE    COMCOM(ARGS4),PCOM(ZOPND)
      101    000106        LIB    OP_EXDI,YOPND
      102    000110
      103    000110        GOSUB   CALLSQ
      104    000111
      105    000111        ATTACH  POPND
      106    000113
      107    000113        DECCNT  LOP
      108    000115        DECCNT  ROP
      109    000117        DECCNT  QOPND

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE    6
      ESN       ISN       TEXT

      110    000121        QUIT
      111    000122        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE    7
      ESN       ISN       TEXT

      112    000122 STOPL START   PEPD
      113    000122        MOVE    COMCOM(ARGS0),PCOM(ZOPND)
      114    000124        LIB     OP_STOPL,YOPND
      115    000126        ASSIGN  ALLREGS,FREE
      116    000130        GOSUB   CALL0
      117    000131        QUIT
      118    000132        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE    8
      ESN       ISN       TEXT

      119    000132 STOP  START   PEPD
      120    000132        LIB    OP_STOP,YOPND
      121    000134        ASSIGN  ALLREGS,FREE
      122    000136        GOSUB   CALLX0
      123    000137        QUIT
      124    000140        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE    9
      ESN       ISN       TEXT

      125    000140 EXIT_PROG START PEPD
      126    000140
      127    000140        ASSIGN  ALLREGS,FREE
      128    000142
      129    000142        CASE    EABS,SOPND,KOPND
      130    000144                  {EABS - JMPDV index
      131    000144                   SOPND - Points to Pseudo Stack
      132    000144                   KOPND - Points to CSIB
      133    000144                   OABS  - Contains option bits }
      134    000144
      135    000144        JMPDV   EABS,1
      136    000146        JMP     $EXIT_OPTZ
      137    000147        JMP     $EXIT_MANAGED
      138    000150
      139    000150 $EXIT_MANAGED  NULL
      140    000150        WALK    SOPND
      141    000152        WALK    KOPND
      142    000154
      143    000154        GENI    EPPR0,KOPND
      144    000156
      145    000156        LIB     OP_EXIT,YOPND
      146    000160        WALK    YOPND
      147    000162        GENI    TSX1,YOPND                 {/*#31255*/}
      148    000164        GENI    (NOP 0,DL)
      149    000166
      150    000166        GENI    LDX1,SOPND                 {/*#31255*/}
      151    000170
      152    000170        GENI    (TSX2 1,1)                 {/*#31255*/}
      153    000172        GENI    (NOP 0,DL)
      154    000174        QUIT
      155    000175
      156    000175 $EXIT_OPTZ     NULL
      157    000175        GENI    LDX1,SOPND

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   10
      ESN       ISN       TEXT

      158    000177        GENI    (TSX2 1,1)
      159    000201        QUIT
      160    000202        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   11
      ESN       ISN       TEXT

      161    000202 ENTRY START   PEPD
      162    000202        ASSIGN  ALLREGS,FREE
      163    000204        CASE    EABS,EOPND,NABS,KOPND,SOPND
      164    000206                { EABS - JMPDV index
      165    000206                  EOPND - Points to system entry operator
      166    000206                  NABS  - Number of arguments
      167    000206                  KOPND - Points to CSIB
      168    000206                  SOPND - Points to Pseudo Stack }
      169    000206
      170    000206        JMPDV   EABS,4
      171    000210        JMP     $MAIN
      172    000211        JMP     $SUBENT_UNMANAGED
      173    000212        JMP     $SUBENT_UNMANAGED_NO_DEFLAB
      174    000213        JMP     $SUBENT_MANAGED
      175    000214        JMP     $SUBENT_MANAGED_NO_DEFLAB
      176    000215
      177    000215 $MAIN  NULL
      178    000215        DEFLAB  LOP
      179    000217        LIB     OP_MAIN,YOPND
      180    000221        GOSUB   CALLX0
      181    000222        CASE    GABS              { Get options into GABS }
      182    000224        GENI    (NOP 0,DL)
      183    000226        QUIT
      184    000227
      185    000227 $SUBENT_UNMANAGED  NULL
      186    000227        DEFLAB  LOP
      187    000231 $SUBENT_UNMANAGED_NO_DEFLAB  NULL
      188    000231        WALK    EOPND
      189    000233        WALK    SOPND
      190    000235
      191    000235        JMPDV   CABS,1
      192    000237        JMP     $NO_CHECK1
      193    000240        WALK    KOPND

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   12
      ESN       ISN       TEXT

      194    000242 $NO_CHECK1 NULL
      195    000242        GENI    TSX0,EOPND
      196    000244        MOVE    PCOM(NABS),PCOM(GABS)
      197    000246        GENI    ZERO,SOPND
      198    000250        JMP     $PARAM_CHECK
      199    000251
      200    000251 $SUBENT_MANAGED NULL
      201    000251        DEFLAB  LOP
      202    000253 $SUBENT_MANAGED_NO_DEFLAB NULL
      203    000253        WALK    EOPND
      204    000255        WALK    SOPND
      205    000257        WALK    KOPND
      206    000261
      207    000261        JMPDV   CABS,1
      208    000263        JMP     $NO_CHECK
      209    000264
      210    000264        ALLOT   NEXT,TYI,JOPND,4,9,FRESH
      211    000266        INCCNT  JOPND,2
      212    000270        GENI    STP1,JOPND
      213    000272        INCCNT  KOPND
      214    000274
      215    000274 $NO_CHECK NULL
      216    000274        GENI    TSX0,EOPND
      217    000276        MOVE    PCOM(NABS),PCOM(GABS)
      218    000300        GENI    ZERO,SOPND
      219    000302        JMPDV   DABS,1
      220    000304        JMP     $NO_REM
      221    000305        ALLOT   EVEN,TYI,ROPND,8,9,FRESH
      222    000307        GENI    STP2,ROPND
      223    000311        GENI    EAA,POPND
      224    000313        MOVE    DECIMAL(1),PCOM(PABS)
      225    000315        OFFSET  ROPND,PABS,POPND
      226    000317        GENI    STA,POPND
      227    000321        GENI    EPPR1,ROPND

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   13
      ESN       ISN       TEXT

      228    000323 $NO_REM NULL
      229    000323        GENI    EPPR0,KOPND
      230    000325        LIB     OP_SUBENT,YOPND
      231    000327        GOSUB   CALLX0
      232    000330
      233    000330 $PARAM_CHECK NULL
      234    000330
      235    000330        JMPDV   CABS,1
      236    000332        QUIT
      237    000333
      238    000333        ALLOT   NEXT,TYI,TOPND,12,9,FRESH
      239    000335        DECCNT  TOPND
      240    000337
      241    000337        ADDRESS ROP,TOPND(0)
      242    000341        DECCNT  ROP
      243    000343
      244    000343        MOVE    DECIMAL(1),PCOM(OABS)
      245    000345        OFFSET  TOPND,OABS,OOPND
      246    000347        GENI    LDA,JOPND
      247    000351        GENI    STA,OOPND
      248    000353
      249    000353        AD      DECIMAL(1),PCOM(OABS)
      250    000355        OFFSET  TOPND,OABS,OOPND
      251    000357        GENI    EPPR0,KOPND
      252    000361        GENI    STP0,OOPND
      253    000363
      254    000363        GENI    EPPR0,TOPND
      255    000365
      256    000365        GENI    (LDA 3,DU)
      257    000367        GENI    (ADA 3,DL)
      258    000371        GENI    STA,JOPND
      259    000373        GENI    EPPR1,JOPND
      260    000375
      261    000375        LIB     OP_PARAMETER_CHECK,YOPND

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   14
      ESN       ISN       TEXT

      262    000377        WALK    YOPND
      263    000401        GENI    TSX1,YOPND
      264    000403        LIB     OP_CALL_ERROR,YOPND
      265    000405        WALK    YOPND
      266    000407        GENI    TSX1,YOPND
      267    000411        QUIT
      268    000412        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   15
      ESN       ISN       TEXT

      269    000412 USE_ENTRY START PEPD
      270    000412
      271    000412        ALLOT   NEXT,TYA,YOPND,4,9,FRESH
      272    000414
      273    000414        CASE    YOPND,DABS,NABS,POPND,RABS {Refresh Globally allocated Ptr Regs
      274    000416                                 and save location of return for USE_END}
      275    000416
      276    000416        JMPDV   NABS,3
      277    000420        JMP     $USE_PROC
      278    000421        JMP     $DB_EXCEPT_PROC
      279    000422        JMP     $USE_PROC
      280    000423        JMP     $USE_PROC
      281    000424
      282    000424 $USE_PROC NULL
      283    000424        GENI    STX1,YOPND
      284    000426        JMP     $GLOBAL_CHECK
      285    000427
      286    000427 $DB_EXCEPT_PROC NULL
      287    000427        GENI    STX0,YOPND
      288    000431        JMPDV   RABS,1           {DML or report writer}
      289    000433        JMP     $GLOBAL_CHECK    {Report writer}
      290    000434        LIB     OP_IENTRY,XOPND  {DML USE proc}
      291    000436        WALK    XOPND
      292    000440        GENI    EPPR0,ROP        {DML interface area PTR}
      293    000442        GENI    TSX1,XOPND
      294    000444        GENI    NOP
      295    000446 $GLOBAL_CHECK NULL
      296    000446        JMPDV   DABS,1
      297    000450        QUIT                     {Local USE procedure}
      298    000451        NEWLAB  XOPND            {GLOBAL}
      299    000453        GENI    TRA,XOPND
      300    000455        NEWLAB  KOPND
      301    000457        DEFLAB  KOPND

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   16
      ESN       ISN       TEXT

      302    000461        GENI    TSX7,POPND
      303    000463        GENI    (TRA 1,1)
      304    000465        DEFLAB  XOPND
      305    000467        ALLOT   NEXT,TYP,TOPND,4,9,FRESH
                   1
 ERROR =>   Syntax error: TYP is incorrect and has been replaced by TYD
      306    000471        ASSIGN  PR,FREE
      307    000473        MAPT    PR,OPMOD,2
      308    000475        GENI    EPPR0,KOPND
      309    000477        GENI    STP0,TOPND
      310    000501        DECCNT  KOPND
      311    000503        GENI    EPPR0,TOPND
      312    000505        ORGE    DATA
      313    000507        NEWLAB  NOPND
      314    000511        DEFLAB  NOPND
      315    000513        GENI    (ZERO 2,0)
      316    000515        ORGE    PROC
      317    000517        GENI    EPPR1,NOPND
      318    000521        LIB     OP_UENTRY,XOPND
      319    000523        WALK    XOPND
      320    000525        GENI    TSX1,XOPND
      321    000527        GENI    NOP
      322    000531        QUIT
      323    000532
      324    000532        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   17
      ESN       ISN       TEXT

      325    000532 HDEP    START  DEP
      326    000532
      327    000532 { Interpretation of HDEP is initiated by Z8HC$SPECIAL_CASES to
      328    000532   reload a pointer register after a procedure call has been
      329    000532   generated.  }
      330    000532
      331    000532         MAPT   PR(STAR),OPMOD
      332    000534         GENI   LDP0,*
      333    000536
      334    000536         CASE                   {Adjust Pointer if necessary}
      335    000540
      336    000540         QUIT
      337    000541         PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   18
      ESN       ISN       TEXT

      338    000541 USE_END  START PEPD
      339    000541
      340    000541         CASE    YOPND,DABS,NABS,ROPND {Get location of temp where ret is stored}
      341    000543
      342    000543         JMPDV   DABS,1
      343    000545         JMP     $LOCAL
      344    000546         LIB     OP_UEXIT,XOPND
      345    000550         WALK    XOPND
      346    000552         GENI    TSX1,XOPND
      347    000554         GENI    NOP
      348    000556 $LOCAL  NULL
      349    000556
      350    000556         JMPDV  NABS,3
      351    000560         JMP    $USE_PROC
      352    000561         JMP    $DB_EXCEPT_PROC
      353    000562         JMP    $USE_PROC
      354    000563         JMP    $USE_PROC
      355    000564
      356    000564 $USE_PROC NULL
      357    000564         GENI    LDX1,YOPND
      358    000566         GENI    (TRA 0,1)
      359    000570
      360    000570         QUIT
      361    000571
      362    000571 $DB_EXCEPT_PROC NULL
      363    000571         JMPDV   RABS,1
      364    000573         JMP     $RW_USE               {Report writer USE proc}
      365    000574         LIB     OP_IEXIT,XOPND        {DML USE proc}
      366    000576         WALK    XOPND
      367    000600         GENI    EPPR0,ROPND
      368    000602         GENI    TSX1,XOPND
      369    000604         GENI    NOP
      370    000606 $RW_USE NULL

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   19
      ESN       ISN       TEXT

      371    000606         GENI   LDX0,YOPND
      372    000610         GENI   (TRA 0,0)
      373    000612
      374    000612         QUIT
      375    000613         PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   20
      ESN       ISN       TEXT

      376    000613 CMPC   START   PEPD
      377    000613        WALK2
      378    000615
      379    000615        ALLOT   NEXT,TYI,XOPND,4,9
      380    000617        DECCNT  XOPND
      381    000621        DEFER
      382    000623        GENI    (TCT)
      383    000625        GENI    ADSC9,LOP
      384    000627        WRAPUP
      385    000631
      386    000631        CASE    DABS
      387    000633        JMPDV   DABS,1
      388    000635        JMP     $ROP_IS_CONSTANT
      389    000636        JMP     $ROP_IS_NOT_CONSTANT
      390    000637
      391    000637 $ROP_IS_CONSTANT NULL
      392    000637        GENI    (VFD 18/2),ROP        {Constant will use IC relative}
      393    000641        JMP     $CONTINUE             {addr., so we need an offset}
      394    000642
      395    000642 $ROP_IS_NOT_CONSTANT NULL
      396    000642        GENI    ARG,ROP
      397    000644
      398    000644 $CONTINUE      NULL
      399    000644        GENI    ARG,XOPND
      400    000646
      401    000646        ASSIGN  IND,USED
      402    000650        QUIT
      403    000651        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   21
      ESN       ISN       TEXT

      404    000651 ACCEP START   PEPD
      405    000651        MOVE    ILL(CODE),PCOM(CABS)
      406    000653        AND     OCTAL(000000777777),PCOM(CABS)
      407    000655
      408    000655        ALLOT   NEXT,TYI,JOPND,4,9,FRESH
      409    000657        DECCNT  JOPND
      410    000661
      411    000661        MOVE    DECIMAL(1),PCOM(OABS)
      412    000663        MOVIND  ILL(ROP),PCOM(ZOPND),OABS
      413    000665
      414    000665        ADDRESS ZOPND,JOPND(0)
      415    000667
      416    000667        DECCNT  ZOPND
      417    000671
      418    000671        ALLOT   NEXT,TYI,XOPND,8,9,FRESH
      419    000673        DECCNT  XOPND
      420    000675
      421    000675        ADDRESS JOPND,XOPND(0)
      422    000677        ADDRESS LOP,XOPND(1)
      423    000701
      424    000701        DECCNT  LOP
      425    000703        DECCNT  JOPND
      426    000705
      427    000705        MOVE    COMCOM(ARGS2),PCOM(ZOPND)
      428    000707
      429    000707        JMPDV   CABS,5
      430    000711        JMP     $ACCEP0
      431    000712        JMP     $ACCEP1
      432    000713        JMP     $ACCEP2
      433    000714        JMP     $ACCEP3
      434    000715        JMP     $ACCEP4
      435    000716        JMP     $ACCEP5
      436    000717

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   22
      ESN       ISN       TEXT

      437    000717 $ACCEP0 NULL
      438    000717        LIB    OP_ACDATE,YOPND
      439    000721        JMP     $ACCEPC                   { JUMP TO CALL }
      440    000722
      441    000722 $ACCEP1 NULL
      442    000722        LIB    OP_ACDAY,YOPND
      443    000724        JMP     $ACCEPC                   { JUMP TO CALL }
      444    000725
      445    000725 $ACCEP2 NULL
      446    000725        LIB    OP_ACTIME,YOPND
      447    000727        JMP     $ACCEPC                   { JUMP TO CALL }
      448    000730
      449    000730 $ACCEP3 NULL
      450    000730        LIB    OP_ACDOW,YOPND
      451    000732        JMP     $ACCEPC
      452    000733
      453    000733 $ACCEP4 NULL
      454    000733        LIB    OP_SYSIN,YOPND
      455    000735        JMP     $ACCEPC
      456    000736
      457    000736 $ACCEP5 NULL
      458    000736        LIB    OP_ACCONS,YOPND
      459    000740
      460    000740 $ACCEPC NULL
      461    000740        GOSUB   CALLSQ
      462    000741        QUIT
      463    000742        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   23
      ESN       ISN       TEXT

      464    000742 DISPL START   PEPD
      465    000742        CASE    DABS,OABS
      466    000744                {DABS  - Number of arguments
      467    000744                 OABS  - Set to zero  }
      468    000744
      469    000744        ALLOTD  JOPND
      470    000746        DECCNT  JOPND
      471    000750
      472    000750 $DLOOP  NULL
      473    000750        AD      DECIMAL(1),PCOM(OABS)
      474    000752        MOVIND  ILL(ROP),PCOM(ZOPND),OABS
      475    000754        OFFSET  JOPND,OABS,TOPND
      476    000756        ADDRESS ZOPND,TOPND(-1)
      477    000760        DECCNT  TOPND
      478    000762        BCT     PCOM(DABS),$DLOOP
      479    000764
      480    000764        ALLOT   NEXT,TYI,XOPND,8,9,FRESH
      481    000766        DECCNT  XOPND
      482    000770
      483    000770        ADDRESS JOPND,XOPND(0)
      484    000772        ADDRESS LOP,XOPND(1)
      485    000774
      486    000774        MOVE    ILL(CODE),PCOM(CABS)
      487    000776        AND     OCTAL(000000777777),PCOM(CABS)
      488    001000
      489    001000        JMPDV   CABS,2
      490    001002        JMP     $DISPL0
      491    001003        JMP     $DISPL1
      492    001004        JMP     $DISPL2
      493    001005
      494    001005 $DISPL0 NULL
      495    001005        LIB    OP_SYSOUT,YOPND
      496    001007        JMP     $DI_

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   24
      ESN       ISN       TEXT

      497    001010
      498    001010 $DISPL1 NULL
      499    001010        LIB    OP_SYSONO,YOPND
      500    001012        JMP     $DI_
      501    001013
      502    001013 $DISPL2 NULL
      503    001013        LIB    OP_CONSOL,YOPND
      504    001015
      505    001015 $DI_   NULL
      506    001015        MOVE    COMCOM(ARGS2),PCOM(ZOPND)
      507    001017        GOSUB   CALLSQ
      508    001020
      509    001020        DECCNT  JOPND
      510    001022        DECCNT  LOP
      511    001024
      512    001024        CASE                  {DECCNT arglist}
      513    001026        QUIT
      514    001027        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   25
      ESN       ISN       TEXT

      515    001027 MVDR  START   PEPD
      516    001027        LIB    OP_CVDR,YOPND
      517    001031        JMP     MV
      518    001032
      519    001032 MVDQ  START   PEPD
      520    001032        LIB    OP_CVDQ,YOPND
      521    001034        JMP     MV
      522    001035
      523    001035 MVQD  START   PEPD
      524    001035       CASE    XABS
      525    001037
      526    001037       JMPDV   XABS,1
      527    001041       JMP     $QD_ROUND
      528    001042
      529    001042       LIB     OP_CVQDT,YOPND
      530    001044       JMP     MV
      531    001045
      532    001045 $QD_ROUND     NULL
      533    001045        LIB    OP_CVQD,YOPND
      534    001047        JMP    MV
      535    001050
      536    001050 MVRD  START   PEPD
      537    001050       CASE    XABS
      538    001052
      539    001052       JMPDV   XABS,1
      540    001054       JMP     $RD_ROUND
      541    001055
      542    001055       LIB     OP_CVRDT,YOPND
      543    001057       JMP     MV
      544    001060
      545    001060 $RD_ROUND     NULL
      546    001060        LIB    OP_CVRD,YOPND
      547    001062

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   26
      ESN       ISN       TEXT

      548    001062
      549    001062 MV    NULL
      550    001062        WALK2
      551    001064
      552    001064        CASE    JOPND,ROPND,SOPND
      553    001066        GOSUB   CVCSEQ                   { GENERATE CALLING SEQUENCE }
      554    001067        QUIT
      555    001070        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   27
      ESN       ISN       TEXT

      556    001070 CVOD4 START    PEPD
      557    001070
      558    001070        WALK    LOP
      559    001072        ALLOTD  IOPND                   {Intermediate TEMP or
      560    001074                                         result if ELS}
      561    001074        CASE    LOP,OOPND,TABS,IABS,XOPND
      562    001076
      563    001076        MOVE    COMCOM(ELS),PCOM(EABS)
      564    001100        JMPDV   EABS,1
      565    001102        JMP     $NON_ELS
      566    001103       {JMP     $ELS}
      567    001103
      568    001103 {$ELS  NULL}
      569    001103        JMPDV   IABS,1
      570    001105        JMP     $EBCDIC_ELS
      571    001106       {JMP     $ASCII_ELS}
      572    001106 {$ASCII_ELS NULL}
      573    001106        MOVE    OCTAL(400000000000),PCOM(GABS)   {Set EA bit for ASCII}
      574    001110 $EBCDIC_ELS NULL
      575    001110        DEFER
      576    001112        GENI    MVNX
      577    001114        GENI    NDSC9,LOP
      578    001116        GENI    NDSC9,IOPND
      579    001120        WRAPUP
      580    001122
      581    001122        ATTACH  IOPND
      582    001124        QUIT
      583    001125
      584    001125 $NON_ELS   NULL
      585    001125
      586    001125        ALLOTD  NOPND
      587    001127
      588    001127        JMPDV   IABS,1           {Operand type}

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   28
      ESN       ISN       TEXT

      589    001131        JMP     $EBCDIC
      590    001132        JMP     $DEC
      591    001133 $EBCDIC NULL
      592    001133        ALLOTD  OOPND
      593    001135        LIB     OP_EBCDIC_TO_ASCII,ZOPND
      594    001137        WALK    ZOPND
      595    001141
      596    001141        DEFER
      597    001143        GENI    (MVT (0,0,0,N),(0,0,0,N))
      598    001145        GENI    ADSC9,XOPND
      599    001147        GENI    ADSC9,OOPND
      600    001151        GENI    ARG,ZOPND
      601    001153        WRAPUP
      602    001155
      603    001155 $DEC   NULL
      604    001155
      605    001155        LIB     OP_ASCII_TO_GBCD,ZOPND
      606    001157        WALK    ZOPND
      607    001161
      608    001161        DEFER
      609    001163        GENI    (MVT (0,0,0,N),(0,0,0,N))
      610    001165        GENI    ADSC9,OOPND
      611    001167        GENI    ADSC9,IOPND
      612    001171        WRAPUP
      613    001173
      614    001173        GENI    ARG,ZOPND
      615    001175
      616    001175        CASE    NOPND,XOPND
      617    001177
      618    001177        DECCNT  LOP
      619    001201
      620    001201        JMPDV   TABS,1
      621    001203        JMP     $CVODL
      622    001204        JMP     $CVODT

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   29
      ESN       ISN       TEXT

      623    001205
      624    001205
      625    001205 $CVODL  NULL
      626    001205        DEFER
      627    001207        GENI    (MRL (0,0,0,N),(0,0,0,N),400)  {Bit 0 of Fill = '1'b}
      628    001211        GENI    ADSC9,IOPND
      629    001213        GENI    ADSC9,XOPND
      630    001215        WRAPUP
      631    001217        ATTACH  NOPND
      632    001221        QUIT
      633    001222
      634    001222 $CVODT  NULL
      635    001222        DEFER
      636    001224        GENI    (MLR (0,0,0,N),(0,0,0,N),400)  {Bit 0 of Fill = '1'b}
      637    001226        GENI    ADSC9,IOPND
      638    001230        GENI    ADSC9,XOPND
      639    001232        WRAPUP
      640    001234        ATTACH  NOPND
      641    001236        QUIT
      642    001237        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   30
      ESN       ISN       TEXT

      643    001237 CVDRR START   PEPD
      644    001237        LIB    OP_CVDR,YOPND
      645    001241        JMP    CV
      646    001242
      647    001242 CVDQR START   PEPD
      648    001242        LIB    OP_CVDQ,YOPND
      649    001244        JMP    CV
      650    001245
      651    001245 CVQD4 START   PEPD
      652    001245 CVQD9 START   PEPD
      653    001245        LIB    OP_CVQD,YOPND
      654    001247        JMP    CV
      655    001250
      656    001250 CVRD4 START   PEPD
      657    001250 CVRD9 START   PEPD
      658    001250        LIB    OP_CVRD,YOPND
      659    001252
      660    001252 CV     NULL
      661    001252        WALK    LOP
      662    001254
      663    001254        ALLOTD  ROPND
      664    001256
      665    001256        CASE    ROPND,JOPND,IABS,YOPND
      666    001260
      667    001260        GOSUB   CVCSEQ                  { Generate calling sequence }
      668    001261        ATTACH  ROPND
      669    001263        QUIT
      670    001264        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   31
      ESN       ISN       TEXT

      671    001264 CVCSEQ NULL                            { Calling sequence generator_ }
      672    001264
      673    001264
      674    001264        ORGE    DATA
      675    001266        NEWLAB  QOPND
      676    001270        DEFLAB  QOPND
      677    001272
      678    001272        DESCR   JOPND,NDSC
      679    001274        ORGE    PROC
      680    001276
      681    001276        ALLOT   NEXT,TYI,XOPND,12,9,FRESH
      682    001300        DECCNT  XOPND
      683    001302
      684    001302        ADDRESS SOPND,XOPND(0)
      685    001304        ADDRESS ROPND,XOPND(1)
      686    001306        ADDRESS QOPND,XOPND(2)
      687    001310
      688    001310        MOVE    COMCOM(ARGS3),PCOM(ZOPND)
      689    001312
      690    001312        GOSUB   CALLSQ
      691    001313
      692    001313        DECCNT  SOPND
      693    001315        DECCNT  ROPND
      694    001317        DECCNT  QOPND
      695    001321        RTN
      696    001322        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   32
      ESN       ISN       TEXT

      697    001322 CVT     START   PEPD
      698    001322        WALK2
      699    001324
      700    001324        ALLOTD  VOPND
      701    001326
      702    001326        MOVE    COMCOM(FILL),PCOM(GABS)
      703    001330        DEFER
      704    001332        GENI    (MVT ,,000)
      705    001334        GENI    ADSC9,LOP
      706    001336        GENI    ADSC9,VOPND
      707    001340        WRAPUP
      708    001342        GENI    (VFD 18/3),ROP       {VFD is needed to adjust offset to table.
      709    001344                                     In an eis inst, a offset to an operand
      710    001344                                     is relative to the first word of the inst.}
      711    001344
      712    001344        ATTACH  VOPND
      713    001346        QUIT
      714    001347        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   33
      ESN       ISN       TEXT

      715    001347 EXDD  START   PEPD
      716    001347        WALK2
      717    001351
      718    001351        ALLOTD  POPND
      719    001353        INCCNT  POPND
      720    001355
      721    001355        INCCNT  LOP
      722    001357        INCCNT  ROP
      723    001361
      724    001361        ORGE    DATA
      725    001363        NEWLAB  QOPND
      726    001365        DEFLAB  QOPND
      727    001367        DESCR   LOP,NDSC
      728    001371        DESCR   ROP,NDSC
      729    001373        DESCR   POPND,NDSC
      730    001375        ORGE    PROC
      731    001377
      732    001377        ALLOT   NEXT,TYI,XOPND,16,9,FRESH
      733    001401        DECCNT  XOPND
      734    001403
      735    001403        ADDRESS LOP,XOPND(0)
      736    001405        ADDRESS ROP,XOPND(1)
      737    001407        ADDRESS POPND,XOPND(2)
      738    001411        ADDRESS QOPND,XOPND(3)
      739    001413
      740    001413        MOVE    COMCOM(ARGS4),PCOM(ZOPND)
      741    001415        LIB    OP_EXDD,YOPND
      742    001417
      743    001417        GOSUB   CALLSQ
      744    001420
      745    001420        DECCNT  LOP
      746    001422        DECCNT  ROP
      747    001424        DECCNT  QOPND

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   34
      ESN       ISN       TEXT

      748    001426
      749    001426        ATTACH  POPND
      750    001430
      751    001430        QUIT
      752    001431        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   35
      ESN       ISN       TEXT

      753    001431 MVAN  START    PEPD
      754    001431        WALK2
      755    001433
      756    001433        MOVE    COMCOM(FILL),PCOM(GABS)
      757    001435        DEFER
      758    001437        GENI    (MLR ,,000,0)           {BLANK FILL}
      759    001441        GENI    ADSC9,ROP
      760    001443        GENI    ADSC9,LOP
      761    001445        WRAPUP
      762    001447        CASE                            {If LOP group, spoil regs}
      763    001451        QUIT
      764    001452
      765    001452        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   36
      ESN       ISN       TEXT

      766    001452 MVDDD START   PEPD
      767    001452        ALLOT   NEXT,TYI,XOPND,12,9,FRESH
      768    001454        DECCNT  XOPND
      769    001456
      770    001456        ADDRESS LOP,XOPND(0)
      771    001460        ADDRESS TO,XOPND(1)
      772    001462        ADDRESS ROP,XOPND(2)
      773    001464
      774    001464        MOVE    COMCOM(ARGS3),PCOM(ZOPND)
      775    001466        LIB    OP_MVDDD,YOPND
      776    001470
      777    001470        GOSUB   CALLSQ
      778    001471
      779    001471        DECCNT  LOP
      780    001473        DECCNT  TO
      781    001475        DECCNT  ROP
      782    001477
      783    001477        QUIT
      784    001500        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   37
      ESN       ISN       TEXT

      785    001500 MVEAL  START   PEPD
      786    001500
      787    001500 { Move alphanumeric edited greater than 63 digits }
      788    001500
      789    001500        MOVE    ILL(DESCR_),PCOM(EOPND)
      790    001502
      791    001502        ALLOT   NEXT,TYI,XOPND,16,9,FRESH
      792    001504        DECCNT  XOPND
      793    001506
      794    001506        ADDRESS LOP,XOPND(0)
      795    001510        ADDRESS TO,XOPND(1)
      796    001512        ADDRESS ROP,XOPND(2)
      797    001514        ADDRESS EOPND,XOPND(3)
      798    001516
      799    001516        MOVE    COMCOM(ARGS4),PCOM(ZOPND)
      800    001520        LIB     OP_MVEAL,YOPND
      801    001522
      802    001522        GOSUB   CALLSQ
      803    001523
      804    001523        DECCNT  LOP
      805    001525        DECCNT  ROP
      806    001527        DECCNT  TO
      807    001531        DECCNT  EOPND
      808    001533        QUIT
      809    001534        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   38
      ESN       ISN       TEXT

      810    001534 CVDDD START   PEPD
      811    001534        WALK    LOP
      812    001536
      813    001536        INCCNT  LOP,2
      814    001540
      815    001540        ALLOTD  POPND
      816    001542
      817    001542        ORGE    DATA
      818    001544        NEWLAB  QOPND
      819    001546        DEFLAB  QOPND
      820    001550        DESCR   LOP,NDSC
      821    001552        DESCR   LOP,ADSC
      822    001554        DESCR   POPND,NDSC
      823    001556        ORGE    PROC
      824    001560
      825    001560        CASE    SOPND                 {Make const for currency sign}
      826    001562
      827    001562        ALLOT   NEXT,TYI,XOPND,16,9,FRESH
      828    001564        DECCNT  XOPND
      829    001566
      830    001566        ADDRESS LOP,XOPND(0)
      831    001570        ADDRESS POPND,XOPND(1)
      832    001572        ADDRESS QOPND,XOPND(2)
      833    001574        ADDRESS SOPND,XOPND(3)
      834    001576
      835    001576        MOVE    COMCOM(ARGS4),PCOM(ZOPND)
      836    001600        LIB    OP_MVDDD,YOPND
      837    001602
      838    001602        GOSUB   CALLSQ
      839    001603
      840    001603        DECCNT  QOPND
      841    001605        DECCNT  LOP
      842    001607        DECCNT  SOPND

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   39
      ESN       ISN       TEXT

      843    001611        ATTACH  POPND
      844    001613        QUIT
      845    001614        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   40
      ESN       ISN       TEXT

      846    001614 ESC   START   PEPD
      847    001614
      848    001614        REF_
      849    001616        QUIT
      850    001617 PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   41
      ESN       ISN       TEXT

      851    001617 ARGP   START  PEPD
      852    001617
      853    001617        CASE
      854    001621        REF_
      855    001623        ASSIGN  PR,FREE
      856    001625        MAPT    PR,OPMOD
      857    001627        INCCNT  *
      858    001631        GENI    LDP0,*
      859    001633        ASSIGN  PR,USED
      860    001635
      861    001635        CASE
      862    001637        QUIT
      863    001640 PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   42
      ESN       ISN       TEXT

      864    001640 GDEP  START   DEP
      865    001640 { Interpretation of GDEP is initiated by Z8HC$SPECIAL_CASES,
      866    001640   to load a pointer register, and assign it global }
      867    001640
      868    001640        REF_
      869    001642        ASSIGN  PR,FREE
      870    001644        MAPT    PR,OPMOD
      871    001646        INCCNT  *                          { Don't screw up count for load }
      872    001650        GENI    LDP0,*                      { GENERATE OFF OF CURRENT TRIAD }
      873    001652        ASSIGN  PR,USED
      874    001654        ASSIGN  PR,GLOBAL
      875    001656
      876    001656        CASE                  {Adjust pointer if necessary}
      877    001660        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   43
      ESN       ISN       TEXT

      878    001660 RDEP  START   DEP
      879    001660 { Interpretation of RDEP is initiated by Z8HR$CODE_GENERATOR
      880    001660   to assign pointer register 2 as dedicated }
      881    001660
      882    001660        ASSIGN  PR(2),DEDIC
      883    001662        QUIT
      884    001663        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   44
      ESN       ISN       TEXT

      885    001663 TDEP   START    DEP
      886    001663
      887    001663 {Handle checking of external switches: CHECK ON.
      888    001663  Interpretation of TDEP is initiated from Z8HC$SPECIAL_CASES
      889    001663  by a GO item with a check on code. }
      890    001663
      891    001663        ALLOT   NEXT,TYI,XOPND,4,9,FRESH
      892    001665        DECCNT  XOPND
      893    001667
      894    001667        ADDRESS ROP,XOPND(0)
      895    001671
      896    001671        MOVE    COMCOM(ARGS1),PCOM(ZOPND)
      897    001673        LIB     OP_CHKON,YOPND
      898    001675
      899    001675
      900    001675        GOSUB   CHK_SWITCH_CALLSQ
      901    001676
      902    001676        DECCNT  ROP
      903    001700
      904    001700        QUIT
      905    001701        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   45
      ESN       ISN       TEXT

      906    001701 UDEP   START    DEP
      907    001701
      908    001701 {Handle checking of external switches: CHECK OFF.
      909    001701  Interpretation of UDEP is initiated from Z8HC$SPECIAL_CASES
      910    001701  by a GO item with a check off code. }
      911    001701
      912    001701        ALLOT   NEXT,TYI,XOPND,4,9,FRESH
      913    001703        DECCNT  XOPND
      914    001705
      915    001705        ADDRESS ROP,XOPND(0)
      916    001707
      917    001707        MOVE    COMCOM(ARGS1),PCOM(ZOPND)
      918    001711        LIB     OP_CHKOFF,YOPND
      919    001713
      920    001713
      921    001713        GOSUB   CHK_SWITCH_CALLSQ
      922    001714
      923    001714        DECCNT  ROP
      924    001716        QUIT
      925    001717        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   46
      ESN       ISN       TEXT

      926    001717 P_A_PRESET  START PEPD
      927    001717
      928    001717        ORGS    TO
      929    001721        CASE
      930    001723        ORGS    RESET
      931    001725
      932    001725        QUIT
      933    001726        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   47
      ESN       ISN       TEXT

      934    001726 CHK_SWITCH_CALLSQ NULL
      935    001726
      936    001726 {Generate a calling sequence that allows for an altreturn.
      937    001726  If altreturn tranfer to code following calling sequence.
      938    001726  If normal return transfer to label given in lop of pill. }
      939    001726
      940    001726        ASSIGN  ALLREGS,FREE
      941    001730        ASSIGN  PR(0),DEDIC
      942    001732        GENI    EPPR0,XOPND
      943    001734
      944    001734        WALK    ZOPND
      945    001736        GENI    EPPR1,ZOPND
      946    001740        WALK    YOPND
      947    001742        GENI    TSX1,YOPND
      948    001744
      949    001744        GENI    (TRA 2,IC)        {Set up altreturn code}
      950    001746        GENI    TRA,LOP
      951    001750
      952    001750        ASSIGN  PR(0),DEMAND
      953    001752        RTN
      954    001753        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   48
      ESN       ISN       TEXT

      955    001753 ON_SWITCH START
      956    001753
      957    001753 { Set external switch on }
      958    001753
      959    001753        ALLOT   NEXT,TYI,XOPND,4,9,FRESH
      960    001755        DECCNT  XOPND
      961    001757
      962    001757        ADDRESS LOP,XOPND(0)
      963    001761
      964    001761        MOVE    COMCOM(ARGS1),PCOM(ZOPND)
      965    001763        LIB     OP_SETON,YOPND
      966    001765
      967    001765        GOSUB   CALLSQ
      968    001766
      969    001766        DECCNT  LOP
      970    001770        QUIT
      971    001771        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   49
      ESN       ISN       TEXT

      972    001771 OFF_SWITCH START
      973    001771
      974    001771 { Set external switch off }
      975    001771
      976    001771        ALLOT   NEXT,TYI,XOPND,4,9,FRESH
      977    001773        DECCNT  XOPND
      978    001775
      979    001775        ADDRESS LOP,XOPND(0)
      980    001777
      981    001777        MOVE    COMCOM(ARGS1),PCOM(ZOPND)
      982    002001        LIB     OP_SETOFF,YOPND
      983    002003
      984    002003        GOSUB   CALLSQ
      985    002004
      986    002004        DECCNT  LOP
      987    002006
      988    002006        QUIT
      989    002007        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   50
      ESN       ISN       TEXT

      990    002007 OS_CALL START PEPD
      991    002007          {Generalized procedure call through the operator segement}
      992    002007
      993    002007        GOSUB   SET_UP_ARGLIST        {DABS,OABS,EABS,MABS,NABS,WABS}
      994    002010
      995    002010        MOVE    ILL(CODE),PCOM(CABS)       {Put OS_CALL.CODE into CABS}
      996    002012        AND     OCTAL(000000777777),PCOM(CABS)
      997    002014        LIB      PCOM(CABS),YOPND
      998    002016
      999    002016        MOVE     ILL(ROP),PCOM(ZOPND)      {Rop points to # of args}
     1000    002020
     1001    002020 $CHECK_ALTRET NULL
     1002    002020        JMPDV    EABS,1
     1003    002022        JMP      $CALLSEQ
     1004    002023        JMP      $CALLSEQ_ALT
     1005    002024
     1006    002024 $CALLSEQ NULL
     1007    002024        GOSUB    CALLSQ
     1008    002025        CASE                          {Deccnt members of arglist}
     1009    002027        QUIT
     1010    002030
     1011    002030 $CALLSEQ_ALT  NULL
     1012    002030        GOSUB    CALLSQ_ALT
     1013    002031        CASE                          {Deccnt members of arglist}
     1014    002033        QUIT
     1015    002034        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   51
      ESN       ISN       TEXT

     1016    002034 SET_UP_ARGLIST  NULL
     1017    002034        WALK    ROP
     1018    002036
     1019    002036        CASE    DABS,EABS,OABS  {DABS = NUMBER-OF-ARGS
     1020    002040                                 OABS = 0
     1021    002040                                 EABS = ALTRET?
     1022    002040                                 WABS = NIL ARGLIST? }
     1023    002040
     1024    002040
     1025    002040        JMPDV   WABS,1           {Return if arglist is nil}
     1026    002042        RTN                      { WABS=0 means nil arglist }
     1027    002043
     1028    002043
     1029    002043        ALLOTD  XOPND
     1030    002045        DECCNT  XOPND
     1031    002047
     1032    002047 $CALL_LOOP NULL                {Build list of ptrs for arglist}
     1033    002047        AD      DECIMAL(1),PCOM(OABS)
     1034    002051        MOVIND  ILL(LOP),PCOM(ZOPND),OABS
     1035    002053        OFFSET  XOPND,OABS,TOPND
     1036    002055        ADDRESS ZOPND,TOPND(-1)
     1037    002057        DECCNT  ZOPND
     1038    002061        DECCNT  TOPND
     1039    002063        BCT     PCOM(DABS),$CALL_LOOP
     1040    002065
     1041    002065        RTN
     1042    002066        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   52
      ESN       ISN       TEXT

     1043    002066 CALLSQ NULL
     1044    002066 {Generate a normal calling sequence.  All registers are
     1045    002066  freed when entered at CALLSQ, they are assumed to be
     1046    002066  freed if entered from CALL0 or CALLX0. }
     1047    002066
     1048    002066        ASSIGN  ALLREGS,FREE
     1049    002070        ASSIGN  PR(0),DEDIC
     1050    002072        GENI    EPPR0,XOPND              { Ptr block }
     1051    002074
     1052    002074 CALL0  NULL
     1053    002074        WALK    ZOPND                    { # of args_ }
     1054    002076        GENI    EPPR1,ZOPND
     1055    002100 CALLX0 NULL
     1056    002100        WALK    YOPND
     1057    002102        GENI    TSX1,YOPND              { Offset into operator segment }
     1058    002104
     1059    002104        LIB     OP_CALL_ERROR,TOPND     { Error occurs if caller does }
     1060    002106        WALK    TOPND                   { altret, but no altret given }
     1061    002110        GENI    TSX1,TOPND
     1062    002112
     1063    002112        ASSIGN  PR(0),DEMAND
     1064    002114        RTN
     1065    002115        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   53
      ESN       ISN       TEXT

     1066    002115 CALLSQ_ALT NULL
     1067    002115
     1068    002115 {Generate a calling sequence that allows for an altreturn. }
     1069    002115
     1070    002115        ASSIGN  ALLREGS,FREE
     1071    002117        ASSIGN  PR(0),DEDIC
     1072    002121        GENI    EPPR0,XOPND
     1073    002123
     1074    002123        WALK    ZOPND
     1075    002125        GENI    EPPR1,ZOPND
     1076    002127        WALK    YOPND
     1077    002131        GENI    TSX1,YOPND
     1078    002133
     1079    002133        MOVE     ILL(ALTRET$),PCOM(ROPND)
     1080    002135        GENI    TRA,ROPND
     1081    002137
     1082    002137        ASSIGN  PR(0),DEMAND
     1083    002141        RTN
     1084    002142        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   54
      ESN       ISN       TEXT

     1085    002142 USER_CALL START PEPD
     1086    002142          {User subroutine call}
     1087    002142
     1088    002142        GOSUB    SET_UP_ARGLIST      {DABS,OABS,EABS,MABS,NABS,WABS}
     1089    002143
     1090    002143        MOVE     ILL(ROP),PCOM(ZOPND)  {ROP points to # of args}
     1091    002145
     1092    002145        ASSIGN  ALLREGS,FREE
     1093    002147
     1094    002147        JMPDV   WABS,1
     1095    002151        JMP     USER_CALLSQ_NOARGS       { WABS = 0 means no args }
     1096    002152       {JMP     USER_CALL_SQ}
     1097    002152
     1098    002152 USER_CALLSQ NULL
     1099    002152        ASSIGN  PR(0),DEDIC
     1100    002154        GENI    EPPR0,XOPND              { Ptr block }
     1101    002156
     1102    002156
     1103    002156 USER_CALLSQ_NOARGS NULL
     1104    002156        WALK    ZOPND                    { # of args_ }
     1105    002160        GENI    EPPR1,ZOPND
     1106    002162
     1107    002162        MOVE    ILL(DESTINATION$),PCOM(EOPND)
     1108    002164        GENI    TSX1,EOPND              { Transfer to user subroutine }
     1109    002166
     1110    002166        JMPDV    EABS,1             {Is there an altreturn?}
     1111    002170        JMP      $NO_ALTRET
     1112    002171       {JMP      $ALTRET}
     1113    002171
     1114    002171 $ALTRET NULL
     1115    002171        MOVE     ILL(ALTRET$),PCOM(ROPND)
     1116    002173        GENI     TRA,ROPND
     1117    002175        CASE                    {Deccnt all members of the arglist}

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   55
      ESN       ISN       TEXT

     1118    002177        QUIT
     1119    002200
     1120    002200 $NO_ALTRET      NULL
     1121    002200        LIB      OP_CALL_ERROR,TOPND   {Error occurs if call}
     1122    002202        WALK     TOPND                 {altret occurs, but no}
     1123    002204        GENI     TSX1,TOPND            {destination was given}
     1124    002206
     1125    002206        CASE                     {Deccnt all members of the arglist}
     1126    002210        QUIT
     1127    002211        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   56
      ESN       ISN       TEXT

     1128    002211        QUIT
     1129    002212 PATCH_SPACE NULL
     1130    002212        QUIT
     1131    002213        QUIT
     1132    002214        QUIT
     1133    002215        QUIT
     1134    002216        QUIT
     1135    002217        QUIT
     1136    002220        QUIT
     1137    002221        QUIT
     1138    002222        QUIT
     1139    002223        QUIT
     1140    002224        QUIT
     1141    002225        QUIT
     1142    002226        QUIT
     1143    002227        QUIT
     1144    002230        QUIT
     1145    002231        QUIT
     1146    002232        QUIT
     1147    002233        QUIT
     1148    002234        QUIT
     1149    002235        QUIT
     1150    002236        QUIT
     1151    002237        QUIT
     1152    002240        QUIT
     1153    002241        QUIT
     1154    002242        QUIT
     1155    002243        QUIT
     1156    002244        QUIT
     1157    002245        QUIT
     1158    002246        QUIT
     1159    002247        QUIT
     1160    002250        QUIT

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   57
      ESN       ISN       TEXT

     1161    002251        QUIT
     1162    002252        QUIT
     1163    002253        QUIT
     1164    002254        QUIT
     1165    002255        QUIT
     1166    002256        QUIT
     1167    002257        QUIT
     1168    002260        QUIT
     1169    002261        QUIT
     1170    002262        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   58
      ESN       ISN       TEXT

     1171    002262 ADDR   START   PEPD
     1172    002262
     1173    002262        {generate EPPRn for address of data item}
     1174    002262
     1175    002262        WALK    LOP
     1176    002264        ASSIGN  PR,FREE
     1177    002266        ADDRESS LOP,PR(0)
     1178    002270        DECCNT  LOP
     1179    002272        ASSIGN  PR,USED
     1180    002274        QUIT
     1181    002275        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   59
      ESN       ISN       TEXT

     1182    002275 MVPP   START   PEPD
     1183    002275        WALK2
     1184    002277
     1185    002277        {For pointer data items movement}
     1186    002277
     1187    002277        CASE    XABS
     1188    002301
     1189    002301        JMPDV   XABS,7
     1190    002303        JMP     $MVPP0      {Lop ARGP PR, Rop %ADDR not in temp}
     1191    002304        JMP     $MVPP1      {Lop ARGP PR, Rop storage}
     1192    002305        JMP     $MVPP2      {Lop storage, Rop PR}
     1193    002306        JMP     $MVPP3      {Lop storage, Rop ARGP PR}
     1194    002307        JMP     $MVPPAA     {Alias}
     1195    002310        JMP     $MVPPSQ     {Lop storage, Rop ARQ    }
     1196    002311        JMP     $MVPPSA     {Lop storage, Rop ARA    }
     1197    002312        JMP     $MVPPSS     {Lop storage, Rop storage}
     1198    002313
     1199    002313 $MVPP0  NULL
     1200    002313        ALLOT   NEXT,TYI,XOPND,4,9
     1201    002315        MAPT    PR(ROP),OPMOD
     1202    002317        GENI    STP0,XOPND
     1203    002321        MAPT    PR(STAR),OPMOD,2
     1204    002323        GENI    LDP0,XOPND
     1205    002325        GENI    STP0,LOP
     1206    002327        CASE
     1207    002331        DECCNT  ROP
     1208    002333        QUIT
     1209    002334
     1210    002334 $MVPP1  NULL
     1211    002334        MAPT    PR(STAR),OPMOD,2
     1212    002336        GENI    LDP0,ROP
     1213    002340        GENI    STP0,LOP
     1214    002342        CASE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   60
      ESN       ISN       TEXT

     1215    002344        QUIT
     1216    002345
     1217    002345 $MVPP2  NULL
     1218    002345        MAPT    PR(ROP),OPMOD
     1219    002347        GENI    STP0,LOP
     1220    002351        CASE
     1221    002353        DECCNT  ROP
     1222    002355        QUIT
     1223    002356
     1224    002356 $MVPP3  NULL
     1225    002356        MAPT    PR(STAR),OPMOD
     1226    002360        GENI    STP0,LOP
     1227    002362        CASE
     1228    002364        DECCNT  ROP
     1229    002366        QUIT
     1230    002367
     1231    002367 $MVPPAA NULL
     1232    002367        DECCNT  LOP
     1233    002371        DECCNT  ROP
     1234    002373        QUIT
     1235    002374
     1236    002374 $MVPPSQ NULL
     1237    002374        DECCNT  ROP
     1238    002376        GENI    STQ,LOP
     1239    002400        ASSIGN  AR(Q),USED
     1240    002402        CASE
     1241    002404        QUIT
     1242    002405
     1243    002405 $MVPPSA NULL
     1244    002405        DECCNT  ROP
     1245    002407        GENI    STA,LOP
     1246    002411        ASSIGN  AR(A),USED
     1247    002413        CASE
     1248    002415        QUIT

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   61
      ESN       ISN       TEXT

     1249    002416
     1250    002416 $MVPPSS NULL
     1251    002416        FAVOR   ROP,AR
     1252    002420        ASSIGN  AR,FREE
     1253    002422        MAPT    AR,OPMOD,2
     1254    002424        GENI    LDA,ROP
     1255    002426        GENI    STA,LOP
     1256    002430        ASSIGN  AR,USED
     1257    002432        CASE
     1258    002434        QUIT
     1259    002435        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   62
      ESN       ISN       TEXT

     1260    002435 MVT    START   PEPD
     1261    002435        WALK3
     1262    002437        MOVE    COMCOM(FILL),PCOM(GABS)
     1263    002441
     1264    002441        DEFER
     1265    002443        GENI    (MVT ,,000)
     1266    002445        GENI    ADSC9,LOP
     1267    002447        GENI    ADSC9,TO
     1268    002451        WRAPUP
     1269    002453
     1270    002453        GENI    (VFD 18/3),ROP      {VFD is needed to adjust offset to table.
     1271    002455                                    In an eis inst, a offset to an operand
     1272    002455                                    is relative to the first word of the inst.}
     1273    002455        QUIT
     1274    002456        PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   63
      ESN       ISN       TEXT

     1275    002456  CVDF   START   PEPD
     1276    002456  CVDO   START   PEPD
     1277    002456         WALK    LOP
     1278    002460
     1279    002460         ALLOTD  IOPND
     1280    002462         CASE    LOPND,UOPND,NOPND,OOPND,TABS,EOPND,EABS
     1281    002464        {ETC     IABS,FABS,SOPND,SOPND}
     1282    002464
     1283    002464         MOVE    COMCOM(ELS),PCOM(FABS)
     1284    002466         JMPDV   FABS,1
     1285    002470         JMP     $NON_ELS
     1286    002471        {JMP     $ELS}
     1287    002471
     1288    002471  {$ELS  NULL}
     1289    002471         JMPDV   EABS,1
     1290    002473         JMP     $DONT_NEED_MVN
     1291    002474        {JMP     $NEED_MVN}
     1292    002474
     1293    002474  {$NEED_MVN NULL}
     1294    002474         DEFER
     1295    002476         GENI    (MVN ,,000)
     1296    002500         GENI    NDSC9,LOP
     1297    002502         GENI    NDSC4,EOPND
     1298    002504         WRAPUP
     1299    002506
     1300    002506         JMPDV   IABS,2
     1301    002510         JMP     $NS_EBCDIC                      {Unsigned to EBCDIC}
     1302    002511         JMP     $NS_ASCII                       {Unsigned to ASCII}
     1303    002512         MOVE    OCTAL(200000000000),PCOM(GABS)  {Unsigned to EBCDIC unsigned}
     1304    002514         JMP     $NS_EBCDIC
     1305    002515  $NS_ASCII NULL
     1306    002515         MOVE    OCTAL(400000000000),PCOM(GABS)  {ASCII, CS bit on}
     1307    002517  $NS_EBCDIC     NULL

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   64
      ESN       ISN       TEXT

     1308    002517         DEFER
     1309    002521         GENI    (MVNX)
     1310    002523         GENI    NDSC4,EOPND
     1311    002525         GENI    NDSC9,IOPND
     1312    002527         WRAPUP
     1313    002531         ATTACH  IOPND
     1314    002533         QUIT
     1315    002534
     1316    002534  $DONT_NEED_MVN NULL
     1317    002534
     1318    002534         JMPDV   IABS,2
     1319    002536         JMP     $EBCDIC                         {Unsigned to EBCDIC}
     1320    002537         JMP     $ASCII                          {Unsigned to ASCII}
     1321    002540         MOVE    OCTAL(200000000000),PCOM(GABS)  {Unsigned to EBCDIC unsigned}
     1322    002542         JMP     $EBCDIC
     1323    002543  $ASCII NULL
     1324    002543         MOVE    OCTAL(400000000000),PCOM(GABS)  {ASCII, CS bit on}
     1325    002545  $EBCDIC NULL
     1326    002545         DEFER
     1327    002547         GENI    (MVNX)
     1328    002551         GENI    NDSC9,LOP
     1329    002553         GENI    NDSC9,IOPND
     1330    002555         WRAPUP
     1331    002557         ATTACH  IOPND
     1332    002561         QUIT
     1333    002562
     1334    002562
     1335    002562  $NON_ELS  NULL
     1336    002562         INCCNT  LOP
     1337    002564
     1338    002564         JMPDV   TABS,1
     1339    002566         JMP     $LEAD
     1340    002567         JMP     $TRAIL
     1341    002570

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   65
      ESN       ISN       TEXT

     1342    002570  $LEAD NULL
     1343    002570         LIB     OP_DECIMAL_TO_OPUNCH_LEAD,TOPND
     1344    002572         JMP     $CVDO0
     1345    002573
     1346    002573  $TRAIL NULL
     1347    002573         LIB     OP_DECIMAL_TO_OPUNCH_TRAIL,TOPND
     1348    002575        {JMP     $CVDO0}
     1349    002575
     1350    002575  $CVDO0 NULL
     1351    002575         DEFER
     1352    002577         GENI    (MVN (0,0,0,N),(0,0,0,N))
     1353    002601         GENI    NDSC9,LOP
     1354    002603         GENI    NDSC9,UOPND
     1355    002605         WRAPUP
     1356    002607
     1357    002607         DEFER
     1358    002611         GENI    (MVN (0,0,0,N),(0,0,0,N))
     1359    002613         GENI    NDSC9,LOP
     1360    002615         GENI    NDSC9,NOPND             {Nosign LOP}
     1361    002617         WRAPUP
     1362    002621
     1363    002621         ASSIGN  AR(AQ),FREE
     1364    002623         GENI    LDAQ,LOPND          {Sign and high or low digit}
     1365    002625         GENI    (ANA 15,DL)
     1366    002627         GENI    (QRL 13)
     1367    002631
     1368    002631         WALK    TOPND
     1369    002633
     1370    002633         ALLOT   NEXT,TYI,SOPND,4,9
     1371    002635
     1372    002635         JMPDV   JABS,1
     1373    002637         JMP     $CVDOL
     1374    002640         JMP     $CVDOT
     1375    002641

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   66
      ESN       ISN       TEXT

     1376    002641  $CVDOL NULL
     1377    002641         GENI     (LDA 0,QU*),TOPND
     1378    002643         JMP      $END
     1379    002644
     1380    002644  $CVDOT NULL
     1381    002644         GENI     (LDA 0,AL*),TOPND
     1382    002646
     1383    002646  $END   NULL
     1384    002646
     1385    002646         GENI    STA,SOPND
     1386    002650         WALK    OOPND
     1387    002652
     1388    002652         DEFER
     1389    002654         GENI    (MRL (0,0,0,N),(0,0,0,N))
     1390    002656         GENI    ADSC9,SOPND
     1391    002660         GENI    ADSC9,OOPND
     1392    002662         WRAPUP
     1393    002664         JMPDV   IABS,2
     1394    002666         JMP     $EBCDIC1       {EBCDIC, need MVT}
     1395    002667         JMP     $ASCII1        {ASCII, don't need MVT}
     1396    002670        {JMP     $EBCDIC1}      {EBCDIC no sign, need MVT}
     1397    002670  $EBCDIC1 NULL
     1398    002670         LIB     OP_ASCII_TO_EBCDIC,TOPND
     1399    002672         WALK    TOPND
     1400    002674         DEFER
     1401    002676         GENI    (MVT ,,100)    {Use EBCDIC space}
     1402    002700         GENI    ADSC9,YOPND
     1403    002702         GENI    ADSC9,YOPND
     1404    002704         WRAPUP
     1405    002706         GENI    (VFD 18/3),TOPND
     1406    002710  $ASCII1 NULL
     1407    002710         ATTACH  IOPND
     1408    002712         QUIT
     1409    002713         PAGE

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   67
      ESN       ISN       TEXT

     1410    002713 END_PROGRAM

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   68
CROSS REFERENCE FOR LABEL DEFINITIONS AND REFERENCES
SYMBOL                        TYPE  DEFINED          REFERENCES

    Types are: ** = PEPD entry, UD = undefined.

ACCEP                          **      651    651
ADDR                           **     2262   2262
ARGP                           **     1617   1617
CALL0                                 2074    130   2074
CALLSQ                                2066     34    110    740   1017   1312   1417   1470   1522
                                             1602   1765   2003   2024   2066
CALLSQ_ALT                            2115   2030   2115
CALLX0                                2100    136    221    327   2100
CHK_SWITCH_CALLSQ                     1726   1675   1713   1726
CMPC                           **      613    613
CV                                    1252   1241   1244   1247   1252
CVCSEQ                                1264   1066   1260   1264
CVDDD                          **     1534   1534
CVDF                           **     2456   2456
CVDO                           **     2456   2456
CVDQR                          **     1242   1242
CVDRR                          **     1237   1237
CVOD4                          **     1070   1070
CVQD4                          **     1245   1245
CVQD9                          **     1245   1245
CVRD4                          **     1250   1250
CVRD9                          **     1250   1250
CVT                            **     1322   1322
DISPL                          **      742    742
ENTRY                          **      202    202
ESC                            **     1614   1614
EX                                      16      2      5     10     13     16
EXDD                           **     1347   1347
EXDI                           **       44     44
EXII                           **        0      0

PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   69
CROSS REFERENCE FOR LABEL DEFINITIONS AND REFERENCES
SYMBOL                        TYPE  DEFINED          REFERENCES
EXIT_PROG                      **      140    140
EXQI                           **        3      3
EXQQ                           **        6      6
EXRI                           **       11     11
EXRR                           **       14     14
GDEP                           **     1640   1640
HDEP                           **      532    532
MV                                    1062   1031   1034   1044   1047   1057   1062
MVAN                           **     1431   1431
MVDDD                          **     1452   1452
MVDQ                           **     1032   1032
MVDR                           **     1027   1027
MVEAL                          **     1500   1500
MVPP                           **     2275   2275
MVQD                           **     1035   1035
MVRD                           **     1050   1050
MVT                            **     2435   2435
OFF_SWITCH                     **     1771   1771
ON_SWITCH                      **     1753   1753
OS_CALL                        **     2007   2007
PATCH_SPACE                           2212   2212
P_A_PRESET                     **     1717   1717
RDEP                           **     1660   1660
SET_UP_ARGLIST                        2034   2007   2034   2142
STOP                           **      132    132
STOPL                          **      122    122
TDEP                           **     1663   1663
UDEP                           **     1701   1701
USER_CALL                      **     2142   2142
USER_CALLSQ                           2152   2152
USER_CALLSQ_NOARGS                    2156   2151   2156
USE_END                        **      541    541
USE_ENTRY                      **      412    412


PSEUDO CODE ASSEMBLER FOR COBOL85   FILE=Z9HP.:Z8A6TSI       SAT AUG 09 '97 13:56:30.16  PAGE   70
CROSS REFERENCE FOR LABEL DEFINITIONS AND REFERENCES
SYMBOL                        TYPE  DEFINED          REFERENCES
One error was found.

PL6.E3A0      #001=Z9HP$PC_DEP_INIT File=*OU                                     SAT 08/09/97 13:57 Page:1    

PL6.E3A0      #001=Z9HP$PC_DEP_INIT File=*OU                                     SAT 08/09/97 13:57 Page:2    
--  Include file information  --

   *LABEL_DEFS  is referenced.
   Z8A_LIBRARY.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8H_TEMP.:Z8A6TOU  is referenced.
   Z8H_DIRECT.:Z8A6TOU  is referenced.
   Z8H_DEP.:Z8A6TOU  is referenced.
   Z8H_RAT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8H_PCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ILL.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure Z9HP$PC_DEP_INIT.

   Procedure Z9HP$PC_DEP_INIT requires 150 words for executable code.
   Procedure Z9HP$PC_DEP_INIT requires 68 words of local(AUTO) storage.

    No errors detected in file *OU    .

