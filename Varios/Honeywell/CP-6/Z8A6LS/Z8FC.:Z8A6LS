VERSION A06

PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:1    
        1        1        /*M*  Z8FC$S_A_UPDATE  Recursive, calculates SA's under an 01 structure.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8               NAME:  Z8FC$S_A_UPDATE
        9        9             AUTHOR:  Greg Myers
       10       10            PURPOSE:  Calculate the SA fields of interior members of an 01 structure.
       11       11                      Then procedure is called recursively to calculate the 02's,03's
       12       12                      etc.
       13       13        */
       14       14
       15       15        /*D*
       16       16               NAME:  Z8FC$S_A_UPDATE
       17       17               CALL:  CALL Z8FC$S_A_UPDATE(QUAL$);
       18       18          INTERFACE:  This procedure calls itself as it is recursive.
       19       19
       20       20              INPUT:  QUAL$ -- Ptr to QUAL item in QLT.
       21       21                      The QLT and ST are accessed.
       22       22             OUTPUT:  ST.SA -- Storage address.
       23       23
       24       24        DESCRIPTION:  This procedure checks the item to see if it is ELEMENTARY or not.
       25       25                      If it isn't, the SA field is calculated for the son and its
       26       26                      brother but if the son is non-ELEMENTARY, Z8FC$S_A_UPDATE is
       27       27                      called.
       28       28        */
       29       29        %EJECT ;
PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:2    
       30       30        Z8FC$S_A_UPDATE: PROC (QUAL$) ; /* RECURSIVE */
       31       31        %EQU PHASE = 2 ;
       32       32
       33       33        %INCLUDE Z8A_DEFC ;
       34      101        %INCLUDE Z8A_SUPP_MAC ;
       35     2501        %INCLUDE Z8A_ERR_NUMS ;
       36     3265        %INCLUDE Z8A_ST ;
       37     6924        %INCLUDE Z8A_QLT ;
       38     7030        %INCLUDE Z8A_LTS ;
       39     9107        %INCLUDE Z8A_COMCOM ;
       40     9757        %INCLUDE Z8A_TYPES ;
       41     9931        %INCLUDE Z8F_O2COM ;
       42    10041
       43    10042    1   DCL   QUAL$    PTR ;
       44    10043    1   DCL   SYM$     PTR AUTO ; /* PTR TO ST ITEM */
       45    10044    1   DCL   SIZE     UBIN WORD AUTO ;
       46    10045    1   DCL   NEXT$    PTR AUTO ;
       47    10046    1   DCL   Z8AE$ERROR ENTRY (12) ;
       48    10047
       49    10048        %EJECT ;
PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:3    
       50    10049        /*V*
       51    10050            CALCULATE_SA -- Loop thru all of the sons of a structure calculating the
       52    10051                            storage location of each.  This is done by adding the
       53    10052                            offset of the item within the 01 structure to the storage
       54    10053                            location of the 01 item.  Z8FC is called if the son is
       55    10054                            nonelementary to calculate the storage locations
       56    10055                            of the variables under the son.  If the item is a renames
       57    10056                            entry then there is no son but QLT.SON is redefined so it
       58    10057                            can't be checked for an address of NIL.
       59    10058        */
       60    10059
       61    10060    1          IF QUAL$->QLT.ST$->VARIABLE.TYPE ~= %TYA THEN
       62    10061    2            DO ;
       63    10062    2              COMCOM.CURRENT.LINE = QUAL$->QLT.ST$->VARIABLE.LINE_NO ;
       64    10063    2              COMCOM.CURRENT.COLUMN = 0 ;
       65    10064    2              CALL Z8AE$ERROR (%E$BAD_STRUCTURE_TYPE) ;
       66    10065    2            END;
       67    10066
       68    10067    1          IF QUAL$->QLT.B.RENAMES THEN
       69    10068    1            NEXT$ = ADDR(NIL) ;
       70    10069    1          ELSE
       71    10070    1            NEXT$ = QUAL$->QLT.SON ;
       72    10071
       73    10072    2          DO WHILE (NEXT$ ~= ADDR(NIL)) ;
       74    10073    2            SYM$ = NEXT$->QLT.ST$ ;
       75    10074    2            IF SYM$->VARIABLE.COUNT = 1
       76    10075    2              THEN SYM$->VARIABLE.COUNT = O2COM.WORK_STOR_BLKNUM ; /* MSDATA */
       77    10076    3            DO CASE (SYM$->ST.ID) ;
       78    10077    3              CASE(
       79    10078        %ST_ITEMS_WITH_STORAGE ;
       80    10090    3                ) ;
       81    10091                            /* No storage is allocated for conditions, e.g. */
       82    10092    3                SYM$->VARIABLE.SA = SYM$->VARIABLE.SA + O2COM.POPS_SA ;
       83    10093
       84    10094    3                IF SYM$->VARIABLE.B.ELEMENTARY   THEN
       85    10095    3                  ;  /* No SON, No recursive call  */
       86    10096    3                ELSE   /* SON is non-ELEMENTARY */
PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:4    
       87    10097    4                  DO ;
       88    10098    4                    CALL Z8FC$S_A_UPDATE (NEXT$) ;
       89    10099    4                  END ;
       90    10100    3            END ;
       91    10101
       92    10102    2            NEXT$ = NEXT$->QLT.BROTHER ;
       93    10103    2          END ;
       94    10104    1   END Z8FC$S_A_UPDATE ;

PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:5    
--  Include file information  --

   Z8F_O2COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8FC$S_A_UPDATE.

   Procedure Z8FC$S_A_UPDATE requires 92 words for executable code.
   Procedure Z8FC$S_A_UPDATE requires 10 words of local(AUTO) storage.

    No errors detected in file Z8FC.:Z8A6TSI    .

PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:6    

 Object Unit name= Z8FC$S_A_UPDATE                            File name= Z8FC.:Z8A6TOU
 UTS= AUG 09 '97 13:04:39.00 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  ST$
    2  LblCom even  none     5      5  ST_
    3  LblCom even  none     1      1  QLT$
    4  LblCom even  none     1      1  PREV_01_QLT$
    5  LblCom even  none     5      5  QLT_
    6  LblCom even  none     1      1  LTS$
    7  LblCom even  none     5      5  LTS_
    8  LblCom even  none    12     14  O2COM
    9   Proc  even  none    92    134  Z8FC$S_A_UPDATE
   10  RoData even  none     4      4  Z8FC$S_A_UPDATE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     9      0   yes            yes      Std        1  Z8FC$S_A_UPDATE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std      12 Z8AE$ERROR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    LTS_STEP                              COMCOM

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:8    


        1        1        /*M*  Z8FC$S_A_UPDATE  Recursive, calculates SA's under an 01 structure.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8               NAME:  Z8FC$S_A_UPDATE
        9        9             AUTHOR:  Greg Myers
       10       10            PURPOSE:  Calculate the SA fields of interior members of an 01 structure.
       11       11                      Then procedure is called recursively to calculate the 02's,03's
       12       12                      etc.
       13       13        */
       14       14
       15       15        /*D*
       16       16               NAME:  Z8FC$S_A_UPDATE
       17       17               CALL:  CALL Z8FC$S_A_UPDATE(QUAL$);
       18       18          INTERFACE:  This procedure calls itself as it is recursive.
       19       19
       20       20              INPUT:  QUAL$ -- Ptr to QUAL item in QLT.
       21       21                      The QLT and ST are accessed.
       22       22             OUTPUT:  ST.SA -- Storage address.
       23       23
       24       24        DESCRIPTION:  This procedure checks the item to see if it is ELEMENTARY or not.
       25       25                      If it isn't, the SA field is calculated for the son and its
       26       26                      brother but if the son is non-ELEMENTARY, Z8FC$S_A_UPDATE is
       27       27                      called.
       28       28        */
       29       29        %EJECT ;
PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:9    
       30       30        Z8FC$S_A_UPDATE: PROC (QUAL$) ; /* RECURSIVE */

     30  9 000000   000000 700200 xent  Z8FC$S_A_UP* TSX0  ! X66_AUTO_1
         9 000001   000012 000001                    ZERO    10,1

       31       31        %EQU PHASE = 2 ;
       32       32
       33       33        %INCLUDE Z8A_DEFC ;
       34      101        %INCLUDE Z8A_SUPP_MAC ;
       35     2501        %INCLUDE Z8A_ERR_NUMS ;
       36     3265        %INCLUDE Z8A_ST ;
       37     6924        %INCLUDE Z8A_QLT ;
       38     7030        %INCLUDE Z8A_LTS ;
       39     9107        %INCLUDE Z8A_COMCOM ;
       40     9757        %INCLUDE Z8A_TYPES ;
       41     9931        %INCLUDE Z8F_O2COM ;
       42    10041
       43    10042    1   DCL   QUAL$    PTR ;
       44    10043    1   DCL   SYM$     PTR AUTO ; /* PTR TO ST ITEM */
       45    10044    1   DCL   SIZE     UBIN WORD AUTO ;
       46    10045    1   DCL   NEXT$    PTR AUTO ;
       47    10046    1   DCL   Z8AE$ERROR ENTRY (12) ;
       48    10047
       49    10048        %EJECT ;
PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:10   
       50    10049        /*V*
       51    10050            CALCULATE_SA -- Loop thru all of the sons of a structure calculating the
       52    10051                            storage location of each.  This is done by adding the
       53    10052                            offset of the item within the 01 structure to the storage
       54    10053                            location of the 01 item.  Z8FC is called if the son is
       55    10054                            nonelementary to calculate the storage locations
       56    10055                            of the variables under the son.  If the item is a renames
       57    10056                            entry then there is no son but QLT.SON is redefined so it
       58    10057                            can't be checked for an address of NIL.
       59    10058        */
       60    10059
       61    10060    1          IF QUAL$->QLT.ST$->VARIABLE.TYPE ~= %TYA THEN

  10060  9 000002   200003 470500                    LDP0    @QUAL$,,AUTO
         9 000003   000000 471500                    LDP1    0,,PR0
         9 000004   100004 473500                    LDP3    4,,PR1
         9 000005   300002 220100                    LDX0    2,,PR3
         9 000006   000010 100003                    CMPX0   8,DU
         9 000007   000020 600000 9                  TZE     s:10067

       62    10061    2            DO ;

       63    10062    2              COMCOM.CURRENT.LINE = QUAL$->QLT.ST$->VARIABLE.LINE_NO ;

  10062  9 000010   300002 236100                    LDQ     2,,PR3
         9 000011   777777 376007                    ANQ     -1,DL
         9 000012   000133 756000 xsym               STQ     COMCOM+91

       64    10063    2              COMCOM.CURRENT.COLUMN = 0 ;

  10063  9 000013   000134 450000 xsym               STZ     COMCOM+92

       65    10064    2              CALL Z8AE$ERROR (%E$BAD_STRUCTURE_TYPE) ;

  10064  9 000014   000002 630400 10                 EPPR0   2
         9 000015   000000 631400 10                 EPPR1   0
         9 000016   000000 701000 xent               TSX1    Z8AE$ERROR
PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:11   
         9 000017   000000 011000                    NOP     0

       66    10065    2            END;

       67    10066
       68    10067    1          IF QUAL$->QLT.B.RENAMES THEN

  10067  9 000020   200003 470500                    LDP0    @QUAL$,,AUTO
         9 000021   000000 471500                    LDP1    0,,PR0
         9 000022   100000 236100                    LDQ     0,,PR1
         9 000023   040000 316007                    CANQ    16384,DL
         9 000024   000030 600000 9                  TZE     s:10070

       69    10068    1            NEXT$ = ADDR(NIL) ;

  10068  9 000025   000003 236000 10                 LDQ     3
         9 000026   200006 756100                    STQ     NEXT$,,AUTO
         9 000027   000032 710000 9                  TRA     s:10072

       70    10069    1          ELSE
       71    10070    1            NEXT$ = QUAL$->QLT.SON ;

  10070  9 000030   100003 236100                    LDQ     3,,PR1
         9 000031   200006 756100                    STQ     NEXT$,,AUTO

       72    10071
       73    10072    2          DO WHILE (NEXT$ ~= ADDR(NIL)) ;

  10072  9 000032   000131 710000 9                  TRA     s:10103

       74    10073    2            SYM$ = NEXT$->QLT.ST$ ;

  10073  9 000033   200006 470500                    LDP0    NEXT$,,AUTO
         9 000034   000004 236100                    LDQ     4,,PR0
         9 000035   200004 756100                    STQ     SYM$,,AUTO

       75    10074    2            IF SYM$->VARIABLE.COUNT = 1
PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:12   

  10074  9 000036   200004 471500                    LDP1    SYM$,,AUTO
         9 000037   100000 236100                    LDQ     0,,PR1
         9 000040   000777 376007                    ANQ     511,DL
         9 000041   000001 116007                    CMPQ    1,DL
         9 000042   000045 601000 9                  TNZ     s:10076

       76    10075    2              THEN SYM$->VARIABLE.COUNT = O2COM.WORK_STOR_BLKNUM ; /* MSDATA */

  10075  9 000043   000012 236000 8                  LDQ     O2COM+10
         9 000044   100000 552104                    STBQ    0,'04'O,PR1

       77    10076    3            DO CASE (SYM$->ST.ID) ;

  10076  9 000045   100000 236100                    LDQ     0,,PR1
         9 000046   000022 772000                    QRL     18
         9 000047   000751 136007                    SBLQ    489,DL
         9 000050   000035 116007                    CMPQ    29,DL
         9 000051   000053 602006 9                  TNC     s:10076+6,QL
         9 000052   000126 710000 9                  TRA     s:10102
         9 000053   000110 710000 9                  TRA     s:10092
         9 000054   000126 710000 9                  TRA     s:10102
         9 000055   000126 710000 9                  TRA     s:10102
         9 000056   000126 710000 9                  TRA     s:10102
         9 000057   000126 710000 9                  TRA     s:10102
         9 000060   000126 710000 9                  TRA     s:10102
         9 000061   000126 710000 9                  TRA     s:10102
         9 000062   000110 710000 9                  TRA     s:10092
         9 000063   000126 710000 9                  TRA     s:10102
         9 000064   000126 710000 9                  TRA     s:10102
         9 000065   000126 710000 9                  TRA     s:10102
         9 000066   000126 710000 9                  TRA     s:10102
         9 000067   000110 710000 9                  TRA     s:10092
         9 000070   000110 710000 9                  TRA     s:10092
         9 000071   000110 710000 9                  TRA     s:10092
         9 000072   000126 710000 9                  TRA     s:10102
         9 000073   000126 710000 9                  TRA     s:10102
PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:13   
         9 000074   000126 710000 9                  TRA     s:10102
         9 000075   000126 710000 9                  TRA     s:10102
         9 000076   000126 710000 9                  TRA     s:10102
         9 000077   000126 710000 9                  TRA     s:10102
         9 000100   000126 710000 9                  TRA     s:10102
         9 000101   000110 710000 9                  TRA     s:10092
         9 000102   000126 710000 9                  TRA     s:10102
         9 000103   000126 710000 9                  TRA     s:10102
         9 000104   000110 710000 9                  TRA     s:10092
         9 000105   000110 710000 9                  TRA     s:10092
         9 000106   000110 710000 9                  TRA     s:10092
         9 000107   000110 710000 9                  TRA     s:10092

       78    10077    3              CASE(

       79    10078        %ST_ITEMS_WITH_STORAGE ;
       80    10090    3                ) ;
       81    10091                            /* No storage is allocated for conditions, e.g. */
       82    10092    3                SYM$->VARIABLE.SA = SYM$->VARIABLE.SA + O2COM.POPS_SA ;

  10092  9 000110   100001 236100                    LDQ     1,,PR1
         9 000111   000022 772000                    QRL     18
         9 000112   000000 036000 8                  ADLQ    O2COM
         9 000113   000000 620006                    EAX0    0,QL
         9 000114   100001 740100                    STX0    1,,PR1

       83    10093
       84    10094    3                IF SYM$->VARIABLE.B.ELEMENTARY   THEN

  10094  9 000115   100003 236100                    LDQ     3,,PR1
         9 000116   010000 316003                    CANQ    4096,DU
         9 000117   000126 601000 9                  TNZ     s:10102

       85    10095    3                  ;  /* No SON, No recursive call  */
       86    10096    3                ELSE   /* SON is non-ELEMENTARY */
       87    10097    4                  DO ;

PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:14   
       88    10098    4                    CALL Z8FC$S_A_UPDATE (NEXT$) ;

  10098  9 000120   200006 630500                    EPPR0   NEXT$,,AUTO
         9 000121   200010 450500                    STP0    NEXT$+2,,AUTO
         9 000122   200010 630500                    EPPR0   NEXT$+2,,AUTO
         9 000123   000000 631400 10                 EPPR1   0
         9 000124   000000 701000 9                  TSX1    s:30
         9 000125   000000 011000                    NOP     0

       89    10099    4                  END ;

       90    10100    3            END ;

       91    10101
       92    10102    2            NEXT$ = NEXT$->QLT.BROTHER ;

  10102  9 000126   200006 470500                    LDP0    NEXT$,,AUTO
         9 000127   000002 236100                    LDQ     2,,PR0
         9 000130   200006 756100                    STQ     NEXT$,,AUTO

       93    10103    2          END ;

  10103  9 000131   000003 116000 10                 CMPQ    3
         9 000132   000033 601000 9                  TNZ     s:10073

       94    10104    1   END Z8FC$S_A_UPDATE ;

  10104  9 000133   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:15   
--  Include file information  --

   Z8F_O2COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8FC$S_A_UPDATE.
PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:16   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 002 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 003 LblCom QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 QLT$

  ****  Section 004 LblCom PREV_01_QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 PREV_01_QLT$

PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:17   
  ****  Section 005 LblCom QLT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 QLT_

  ****  Section 006 LblCom LTS$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LONG_ITEM$                 0-0-0/w PTR         r     1 LTS$

  ****  Section 007 LblCom LTS_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 LTS_

  ****  Section 008 LblCom O2COM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(432)   r     1 O2COM

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @QUAL$                     6-0-0/w PTR         r     1 NEXT$
    *0-0-0/w PTR         r     1 QUAL$                      5-0-0/w UBIN              1 SIZE
     4-0-0/w PTR         r     1 SYM$

PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:18   
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM
     0-0-0/w UBIN              1 LTS_STEP(0:37)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(396)         1 ALPHABET                   0-0-0/w STRC(144)         1 ALTER_LTS
     0-0-0/w STRC(3672)        1 ALT_KEY                    0-0-0/w STRC(36864)       1 ARGLIST
     0-0-0/w STRC(396)         1 ARRAY                      0-0-0/w STRC(180)         1 ARRAY_PRESET_LTS
     0-0-0/w STRC(288)         1 BASE_LTS                   0-0-0/w STRC(396)         1 BLOCK
     0-0-0/w STRC(144)         1 BT                         0-0-0/w STRC(396)         1 CD
     0-0-0/w STRC(288)         1 CD_LTS                     0-0-0/w CHAR(4096)        1 CHARS
     0-0-0/w STRC(396)         1 CLASS                      0-0-0/w STRC(396)         1 CONDITION
     0-0-0/w STRC(396)         1 CONST                      0-0-0/w STRC(72)          1 CONT
     0-0-0/w STRC(540)         1 CONTROL_NAME_LTS           0-0-0/w STRC(1872)        1 COPY_FILE
     0-0-0/w STRC(396)         1 DB                         0-0-0/w STRC(396)         1 DCB_
     0-0-0/w STRC(108)         1 DEPENDING_SIZE             0-0-0/w STRC(5472)        1 DIMS
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w STRC(216)         1 DML_REC
     0-0-0/w STRC(73836)       1 EVALUATE                   0-0-0/w STRC(396)         1 FD
     0-0-0/w STRC(1692)        1 FILE_LTS                   0-0-0/w STRC(108)         1 INDEXES
     0-0-0/w STRC(360)         1 INIT_LTS                   0-0-0/w STRC(396)         1 INTDEF
     0-0-0/w STRC(180)         1 IO_RESTORE_CHAIN           0-0-0/w STRC(144)         1 KEY
     0-0-0/w STRC(396)         1 LABEL                      0-0-0/w STRC(36864)       1 LCNST
     0-0-0/w STRC(72)          1 LONG                       0-0-0/w STRC              1 LTS
     0-0-0/w STRC(360)         1 LTSS                       0-0-0/w STRC(36936)       1 LTS_PTR_ARRAY
     0-0-0/w STRC(396)         1 MNEMONIC                   0-0-0/w STRC(144)         1 NEL
     0-0-0/w STRC(216)         1 OPEN_LTS                   0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(396)         1 PARA                       0-0-0/w STRC(144)         1 PRIME
     0-0-0/w STRC(396)         1 PROC_                      0-0-0/w STRC(396)         1 PROC_DEF
     0-0-0/w STRC(900)         1 PROC_SUPP                  0-0-0/w STRC(216)   r     1 QLT
PL6.E3A0      #001=Z8FC$S_A_UPDATE File=Z8FC.:Z8A6TSI                            SAT 08/09/97 13:04 Page:19   
     0-0-0/w STRC(396)         1 RD                         0-0-0/w STRC(216)         1 REF
     0-0-0/w STRC(108)         1 RENAMES                    0-0-0/w STRC(720)         1 REPORT_01_LTS
     0-0-0/w STRC(432)         1 REPORT_ELEM_LTS            0-0-0/w STRC(252)         1 REPORT_GRP_LTS
     0-0-0/w STRC(1332)        1 REPORT_LTS                 0-0-0/w STRC(144)         1 RVA_LTS
     0-0-0/w STRC(396)         1 SCALAR                     0-0-0/w STRC(396)         1 SD
     0-0-0/w STRC(396)         1 SECTION                    0-0-0/w STRC(396)         1 SEGMENT
     0-0-0/w STRC(360)         1 SEGMENT_LTS                0-0-0/w STRC(396)   r     1 ST
     0-0-0/w STRC(252)         1 SUM_LTS                    0-0-0/w STRC(396)         1 SWITCH
     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR              0-0-0/w STRC(396)         1 SYMDEF_
     0-0-0/w STRC(396)         1 SYMREF_                    0-0-0/w STRC(396)         1 TEMP
     0-0-0/d STRC(612)         1 USE                        0-0-0/w STRC(252)         1 USE_SUPP
     0-0-0/w STRC(396)   r     1 VARIABLE


   Procedure Z8FC$S_A_UPDATE requires 92 words for executable code.
   Procedure Z8FC$S_A_UPDATE requires 10 words of local(AUTO) storage.

    No errors detected in file Z8FC.:Z8A6TSI    .
