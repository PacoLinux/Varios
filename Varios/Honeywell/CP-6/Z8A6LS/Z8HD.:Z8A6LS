VERSION A06

PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:1    
        1        1        /*M* Z8HD$DOCUMENT - Code Generator General Overview                    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        Z8HD$DOCUMENT:PROC NOAUTO;
        9        9
       10       10        /*P*
       11       11               NAME: Z8HD$DOCUMENT
       12       12            PURPOSE: Explains the major portions of the Code Generator:
       13       13                     Register Management, System Dependent code bursts, etc.
       14       14
       15       15        */
       16       16
       17       17        /*F*
       18       18
       19       19
       20       20
       21       21            NAME:  PURPOSE
       22       22
       23       23              The Generator phase provides the code and related information
       24       24            neccessary to produce a relocatable binary object deck.
       25       25            The Generator produces this information in the form of
       26       26            an OBJ table (reference the section in this module entitled
       27       27            "OBJ TABLE FORMAT"), that the Annotator phase then reads and
       28       28            augments in order to create the actual object deck.
       29       29
       30       30              Among the services that the Generator must provide in order
       31       31            that this information can accurately be created are the following::
       32       32
       33       33
       34       34              1). Register Management.
       35       35              2). Temporary storage allocation.
       36       36              3). Code bursts driven by front-end information as well as
       37       37                  directive tables that are part of the Generator.
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:2    
       38       38              4). The ability to generate code specific to the system
       39       39                  that the compiler was packaged for.
       40       40
       41       41
       42       42        */
       43       43        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:3    
       44       44        /*F*
       45       45
       46       46           NAME: METHOD
       47       47
       48       48              The executable portion of the COBOL-80 Code Generator is
       49       49            implemented primarily in PL6.  There also exists, as part of the
       50       50            Generator design, non-executable directive tables (hereafter
       51       51            referred to as "pseudo-code"), which are written as input to
       52       52            to the pseudo-code assembler (PCA).  These PCA modules
       53       53            contain the high level logic of the Generater, and comprise
       54       54            the bulk of this phase.
       55       55
       56       56              All of the modules and their relationships are provided in the
       57       57            following diagram::
       58       58
       59       59
       60       60                                             ----------
       61       61                                             !        !
       62       62                                             V        !
       63       63                             --------------------     !
       64       64                             |                  |     !
       65       65                             | Z8HI$BURST       |------
       66       66                             |  (PL6 recursive) |
       67       67        Z8HR$CODE_GENERATOR  |                  |------> Z9AU (GMAP executable)
       68       68                     ------->|                  |
       69       69                             |                  |------> Z8HC$SPECIAL_CASES (PL6)
       70       70                             |                  |
       71       71                             --------------------
       72       72                              !!              !!
       73       73                              !!              !!
       74       74                              !!              !!
       75       75                              VV              VV
       76       76                             Z8HP            Z9HP   (Both are PCA non-executable)
       77       77
       78       78
       79       79
       80       80        Z8HP,Z9HP        -     Pseudo-code modules.  Directs sequence of
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:4    
       81       81                               Generator functions.  Treated as data by module
       82       82                               Z8HI$BURST.  A sample Pseudo-code burst follows:
       83       83
       84       84
       85       85                                         FAVOR   ROP,AR
       86       86                                         ASSIGN  AR,FREE
       87       87                                         MAPT    FREE,OPMOD
       88       88                                         GENI    LDA,ROP
       89       89                                         ASSIGN  AR,USED,ROP
       90       90                                         MAPT    FREE,OPMOD
       91       91                                         GENI    ASA,LOP
       92       92                                         QUIT
       93       93
       94       94
       95       95                               All directives take up two words, except support
       96       96                               actions that take up one or two words.
       97       97                               Refer to the Section entitled "PSEUDO-CODE DIRECTIVES"
       98       98                               and to Z8PD$PCA_DOCUMENT for PCA information.
       99       99
      100      100        Z8HR$CODE_GENERATOR  - Code Generator root.  Does initialization and
      101      101                               calls Z8HI$BURST for each ILL item sequentially.
      102      102                               Refer to the section entitled "FORMAT OF GENERATOR INPUT."
      103      103
      104      104        Z8HI$BURST           - Interprets Pseudo-code resident in modules
      105      105                               Z8HP, Z9HP until a QUIT directive is encountered.
      106      106                               The starting pseudo-code address and module are
      107      107                               passed via a PEPD (Pseudo-code Entry Point Descriptor)
      108      108                               word.  Refer to section "PSEUDO-CODE DIRECTIVES."
      109      109
      110      110                               The basic structure of the interpreter follows:
      111      111
      112      112                                 ic = pseudo_code_module(pepd.module) + pepd.offset;
      113      113
      114      114                                 DO WHILE('1'b);
      115      115                 support_actions:  DO CASE(action);
      116      116                                     CASE(halt);
      117      117                                       return;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:5    
      118      118                                     CASE(jmp);
      119      119                                     CASE(else);
      120      120                 generation_actions:   DO CASE(action);
      121      121                                         CASE(assign);
      122      122                                         CASE(mapt);
      123      123                                         CASE(walk);
      124      124                                           CALL Z8HI$BURST(pepd(id));
      125      125                                       END; ( generation actions )
      126      126                                       ic = ic + 2;
      127      127                                   END; ( support actions )
      128      128                                 END;
      129      129
      130      130
      131      131        Z8HC$SPECIAL_CASES   - Any function that cannot be performed by existing
      132      132                               Pseudo-code should use the CASE directive.
      133      133                               Z8HC$SPECIAL_CASES is driven by the ID of the
      134      134                               current triad, and should return codes in PCOM
      135      135                               variables for later use (JMPDV directive).
      136      136
      137      137        Z9AU                 - The executable GMAP module.  Performs functions
      138      138                               related only to the OFF ETT triad, and is not
      139      139                               easily explained in generalities.  Refer to
      140      140                               module Z9AU for a more specific explaination.
      141      141
      142      142        */
      143      143        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:6    
      144      144        /*F*
      145      145
      146      146             NAME: FORMAT_OF_GENERATOR_INPUT
      147      147          CHAPTER: TABLES.
      148      148
      149      149
      150      150              The basic intermediate language that the Generator is given to
      151      151            produce code is in the form of binary trees.  Not all nodes of the tree
      152      152            look the same, nor do they contain the same information; rather the
      153      153            nodes which make up these trees can represent either the root, body,
      154      154            or leaf nodes of the tree.  The node that an item represents determines
      155      155            into which physical table an item will be placed upon its creation in the
      156      156            front-end.  A brief description of these 3 tables is right here::
      157      157
      158      158
      159      159               ILL   - Internal Language List.  This table represents an encoded
      160      160                       version of the COBOL Procedure Division statements. This table
      161      161                       is accessed sequentially by the Generator.  These nodes
      162      162                       are the root nodes of each tree.
      163      163
      164      164               ETT   - Expression Triad Table.  This table represents an encoded
      165      165                       version of all expressions encountered in the procedure
      166      166                       division - arithmetic, character, relational, etc.  This
      167      167                       table is accessed by the Generator in a random manner
      168      168                       via pointers present in ILL, and other ETT items.  These
      169      169                       items constitute the body of the trees.
      170      170
      171      171               ST    - Symbol Table.  This table is comprised of items representing
      172      172                       encoded versions of data names, file names, labels, etc.
      173      173                       They are accessed randomly via pointers in ETT items, and
      174      174                       sometimes in ILL items.
      175      175
      176      176
      177      177              Here is an example of a tree that would be constructed for a typical
      178      178            COBOL source statement.  Please realize that this is a general
      179      179            example, only describing node positions within the tree.  For this
      180      180            reason, a portion of the body of the tree has been removed to avoid
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:7    
      181      181            confusing detail.
      182      182
      183      183
      184      184                              COMPUTE W(I) = X + Y * Z.
      185      185
      186      186
      187      187                                    MVII
      188      188                                    -  -
      189      189                                   -    -
      190      190                                  -      -
      191      191                                 -        -
      192      192                                -          -
      193      193                             SSOP          ADI
      194      194                             -  -          -  -
      195      195                            -    -        -    -
      196      196                           -      -      -      -
      197      197                          OFF  SCALAR  SCALAR   MPI
      198      198                          - -    (I)     (X)    - -
      199      199                         -   -                 -   -
      200      200                        -     -               -     -
      201      201                      ARRAY  ropcon         SCALAR  SCALAR
      202      202                       (W)                    (Y)     (Z)
      203      203
      204      204
      205      205            ILL items
      206      206            === =====
      207      207
      208      208             MVII         (MoVe Integer to Integer)
      209      209
      210      210            ETT items
      211      211            === =====
      212      212
      213      213             SSOP         (apply SubScript OPerand as tag)
      214      214             OFF          (apply OFFset)
      215      215             ADI          (ADd Integers)
      216      216             MPI          (MultiPly Integers)
      217      217
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:8    
      218      218            ST  items
      219      219            ==  =====
      220      220
      221      221             SCALAR       (simple data item)
      222      222             ARRAY        (table data item that requires subscript)
      223      223
      224      224            note:  ropcon stands for "constant ROP", and can represent shift factor,
      225      225                   offset magnitude, etc.
      226      226
      227      227        */
      228      228        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:9    
      229      229        /*F*
      230      230
      231      231               NAME: FORMAT_OF_GENERATOR_INPUT_CONT
      232      232            CHAPTER: ITEM FIELDS.
      233      233
      234      234
      235      235
      236      236            ILL items
      237      237            === =====
      238      238
      239      239
      240      240            A typical ILL item looks like this::
      241      241
      242      242             ILL                           WALIGNED
      243      243             0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
      244      244            I-----------------I-----------------I-----------------I-----------------I
      245      245           0!ID                                 !CODE                               !W
      246      246            I-----------------I-----------------I-----------------I-----------------I
      247      247           1!LOP                                                                    !
      248      248            I-----------------I-----------------I-----------------I-----------------I
      249      249           2!ROP                                                                    !
      250      250            I-----------------I-----------------I-----------------I-----------------I
      251      251           3!TO_                                                                    !
      252      252            I-----------------I-----------------I-----------------I-----------------I
      253      253
      254      254
      255      255              There are variations, but they are deviations from the norm.
      256      256              Some of these fields have the same offsets as fields within ETT items,
      257      257            so even though a statement such as  X = ETT.LOP  may look as if it
      258      258            only accesses ETT items, It may just as easily be referencing an
      259      259            ILL item field.
      260      260
      261      261
      262      262               ID    - A code that distinguishes this node from other nodes.  Examples
      263      263                       of ILL IDs are MVII, AD3D, END, MVIH.
      264      264
      265      265               CODE  - Optional field that usually will indicate special attributes
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:10   
      266      266                       of operands within the item (LOP, ROP, TO_).
      267      267
      268      268               LOP   - Left OPerand.  Always a pointer, usually points to ETT items,
      269      269                       but can also point to ST items.  In simple non-EIS move
      270      270                       operations, this field will point to the recieving data item.
      271      271
      272      272               ROP   - Right OPerand.  Most of the time, this is a pointer, when
      273      273                       it is not, it is referenced by the variable ROPCON.  In
      274      274                       simple non-EIS move operations, this field will point to the
      275      275                       sending data item or expression.
      276      276
      277      277               TO    - Optional field that points to the recieving data item in
      278      278                       moves involving EIS instructions (AD3D, DV3D, etc.).
      279      279
      280      280
      281      281            ETT items
      282      282            === =====
      283      283
      284      284
      285      285            All ETT items will look like this:
      286      286
      287      287
      288      288        LEVEL 2   LEVEL 3   LEVEL 4        0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6
               288         7 8 0 1 2 3 4 5 6 7 8
      289      289                   I-----------------I-----------------I-----------------I-----------------I
      290      290                 0!ID                                 !COUNT                              !W
      291      291                   I-----------------I-----------------I-----------------I-----------------I
      292      292                  1!LOP                                                                    !
      293      293                   I-----------------I-----------------I-----------------I-----------------I
      294      294                  2!ROP                                                                    !
      295      295                   I-----------------I-----------------I-----------------I-----------------I
      296      296                  2!ROPCON                                                                 !
      297      297                   I-----------------I-----------------I-----------------I-----------------I
      298      298        NDSC                TN           2!SA                                 !CN   !@!S  !S
               298        F         !N          !B
      299      299                   I-----------------I-----------------I-----------------I-----------------I
      300      300        ADSC                MBZ          2!SA                                 !CN   !TA !@!N
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:11   
               300                              !B
      301      301                   I-----------------I-----------------I-----------------I-----------------I
      302      302        OFFSET                           2!VALUE                              !TYPE
               302                              !B
      303      303                   I-----------------I-----------------I-----------------I-----------------I
      304      304        SIZE                             2!VALUE                              !TYPE
               304                              !B
      305      305                   I-----------------I-----------------I-----------------I-----------------I
      306      306        DESC                             2!SA                                 !DESCL
               306                              !B
      307      307                   I-----------------I-----------------I-----------------I-----------------I
      308      308        FILL_CHAR                        2!SYMBOL           !*
               308                              !C
      309      309                   I-----------------I-----------------I-----------------I-----------------I
      310      310                  3!REF$                                                                   !
      311      311                   I-----------------I-----------------I-----------------I-----------------I
      312      312                  3!NEXT$                                                                  !
      313      313                   I-----------------I-----------------I-----------------I-----------------I
      314      314                  3!EVALP$                                                                 !
      315      315                   I-----------------I-----------------I-----------------I-----------------I
      316      316                  4!CMP_SC                             !. . . . . . . . . . . . . . . . . .!
      317      317                   I-----------------I-----------------I-----------------I-----------------I
      318      318                  4!STATE                              !CMP_NI                             !
      319      319                   I-----------------I-----------------I-----------------I-----------------I
      320      320        B                   POOLABLE     4!. . . . . . . . . . . . . . . . . .!*
               320                            !@!B
      321      321                   I-----------------I-----------------I-----------------I-----------------I
      322      322
      323      323
      324      324                ID       - A code that distinguishes this item from any other item,
      325      325                           reguardless of what table it is in.  Examples of ETT IDs are
      326      326                           ADI, SBD, FISS, ESC, BASE, etc.
      327      327
      328      328                STATE -    Used by the Generator to reflect the state of triad evaluation.
      329      329                           For example:    COMPUTE A = B + C.
      330      330
      331      331                                                  MVII
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:12   
      332      332                                                  -  -
      333      333                                                 -    -
      334      334                                                -      -
      335      335                                               -        -
      336      336                                              A         ADI
      337      337                                                        - -
      338      338                                                       -   -
      339      339                                                      -     -
      340      340                                                     -       -
      341      341                                                    B         C
      342      342
      343      343
      344      344                           The ADI triad causes generation of the following code:
      345      345
      346      346                                      LDQ     B
      347      347                                      ADQ     C
      348      348
      349      349                           At this point, we mark the STATE of the ADI triad as
      350      350                           being "Q-register contained" or "%ARQ contained."  Now
      351      351                           any subsequent reference to the sub-expression "A + B"
      352      352                           will be able to use register Q, and as you will learn later,
      353      353                           this is an ideal triad state.
      354      354
      355      355                COUNT    - A place for the Generator to store information supplied
      356      356                           by the front-end, indicating how many times this expression
      357      357                           will be referenced before any data items within the
      358      358                           expression are redefined.
      359      359
      360      360                LOP      - Same as LOP of ILL item.
      361      361
      362      362                ROP      - Same as for ROP of ILL, except that there is no such thing
      363      363                           as a ROPCON in an ILL item.
      364      364
      365      365                REF$     - Points to additional information about the triad.
      366      366                           Can *only* point to REF LTS items. A REF$ field of
      367      367                           NIL means that this triad is *not* storage contained.
      368      368
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:13   
      369      369
      370      370
      371      371
      372      372             ST Items
      373      373             == =====
      374      374
      375      375
      376      376             ST items contain *much* more fields than are used by the generator
      377      377             Fields to be concerned with are the SA, and the different forms
      378      378             of descriptors.
      379      379
      380      380             Because of the over complexity of the ST, I would 'DRAW' it here.
      381      381
      382      382        */
      383      383        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:14   
      384      384             %SET PHASE = 4;
      385      385             %INCLUDE Z8A_DEFC;
      386      453             %SET LISTINC = '1'B;
      387      454             %SET LISTMAC = '1'B;
      388      455
      389      456             %INCLUDE Z8H_CODE;
        1+     457        /*T***********************************************************/
        2+     458        /*T*                                                         */
        3+     459        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+     460        /*T*                                                         */
        5+     461        /*T***********************************************************/
        6+     462        /*
        7+     463             Z8H_CODE
        8+     464
        9+     465            This include file contains the declarations for structures
       10+     466        used in creating code bursts.
       11+     467        */
       12+     468    1        DCL 1 INST_WORD AUTO,
       13+     469    1              2 SA UBIN(18) UNAL,
       14+     470    1              2 Y REDEF SA,
       15+     471    1                3 AR# UBIN(3) UNAL,
       16+     472    1                3 * UBIN(15) UNAL,
       17+     473
       18+     474    1              2 ELS REDEF SA,
       19+     475    1                3 *       UBIN(14) UNAL,
       20+     476    1                3 RECR    UBIN(4) UNAL,
       21+     477
       22+     478    1              2 LOW,
       23+     479    1                3 OP_CODE UBIN(9) UNAL,
       24+     480    1                3 CODE REDEF OP_CODE,
       25+     481    1                  4 OP UBIN(6) UNAL,
       26+     482    1                  4 REG UBIN(3) UNAL,
       27+     483    1                3 EIS BOOLEAN,
       28+     484    1                3 * BIT(1) UNAL,
       29+     485    1                3 MF,
       30+     486    1                  4 AR BOOLEAN,
       31+     487    1                  4 RL BOOLEAN,
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:15   
       32+     488    1                  4 IND BOOLEAN,
       33+     489    1                  4 TAG UBIN(4) UNAL,
       34+     490    1              2 BDSC REDEF LOW,
       35+     491    1                3 C UBIN(2) UNAL,
       36+     492    1                3 B UBIN(4) UNAL,
       37+     493    1                3 N UBIN(12) UNAL,
       38+     494    1              2 ADSC REDEF LOW,
       39+     495    1                3 CN UBIN(3) UNAL,
       40+     496    1                3 TA BIT(2) UNAL,
       41+     497    1                3 MBZ2 BIT(1) UNAL,
       42+     498    1                3 N UBIN(12) UNAL,
       43+     499    1              2 NDSC REDEF LOW,
       44+     500    1                3 CN UBIN(3) UNAL,
       45+     501    1                3 TN BIT(1) UNAL,
       46+     502    1                3 S  BIT(2) UNAL,
       47+     503    1                3 SF SBIN(6) UNAL,
       48+     504    1                3 N UBIN(6) UNAL,
       49+     505
       50+     506    1              2 SDSC  REDEF LOW,
       51+     507    1                3 CN        UBIN(3) UNAL,
       52+     508    1                3 E         BOOLEAN,
       53+     509    1                3 TS        BOOLEAN,
       54+     510    1                3 *         UBIN(9) UNAL,
       55+     511    1                3 N         UBIN(4) UNAL;
       56+     512
       57+     513    1        DCL 1 MOD_KEY STATIC,
       58+     514    1              2 KEY SBIN WORD UNAL INIT(0),
       59+     515    1              2 B REDEF KEY,
       60+     516    1                3 *              UBIN(27) UNAL,
       61+     517    1                3 SEGID_REL_UPPER BOOLEAN,
       62+     518    1                3 SEGID_REL_LOW  BOOLEAN,
       63+     519    1                3 BOTH_REL       BOOLEAN,
       64+     520    1                3 HALF_REL       BOOLEAN,
       65+     521    1                3 RESOLVE_ADDRESS BOOLEAN,
       66+     522    1                3 ETC            BOOLEAN,
       67+     523    1                3 BUFFER         BOOLEAN,
       68+     524    1                3 WORD_REL       BOOLEAN,
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:16   
       69+     525    1                3 IC             BOOLEAN;
       70+     526
       71+     527
       72+     528    1        DCL 1 DEFER_BUFFER(0:3) AUTO ALIGNED,
       73+     529    1               2 ID UBIN HALF UNAL,
       74+     530    1               2 KEY UBIN(9) UNAL,
       75+     531    1               2 B REDEF KEY,
       76+     532    1                    3 * BIT(5) UNAL,
       77+     533    1                    3 ETC    BOOLEAN,
       78+     534    1                    3 BUFFER BOOLEAN,
       79+     535    1                    3 REL BOOLEAN,
       80+     536    1                    3 IC BOOLEAN,
       81+     537    1               2 * UBIN(9) UNAL,
       82+     538    1               2 OFFSET SBIN WORD UNAL,
       83+     539    1               2 ST$    PTR,
       84+     540    1               2 INST_WORD,
       85+     541    1                 3 SA UBIN HALF UNAL,
       86+     542    1                 3 Y REDEF SA,
       87+     543    1                   4 AR# UBIN(3) UNAL,
       88+     544    1                   4 * UBIN(15) UNAL,
       89+     545    1                 3 OP_CODE UBIN(9) UNAL,
       90+     546    1                 3 EIS BOOLEAN,
       91+     547    1                 3 * BIT(1) UNAL,
       92+     548    1                 3 MF,
       93+     549    1                   4 AR BOOLEAN,
       94+     550    1                   4 RL BOOLEAN,
       95+     551    1                   4 IND BOOLEAN,
       96+     552    1                   4 TAG UBIN(4) UNAL,
       97+     553    1               2 MW REDEF INST_WORD,
       98+     554    1                  3 P BIT(1) UNAL,
       99+     555    1                  3 * BIT(1) UNAL,
      100+     556    1                  3 MF3,
      101+     557    1                     4 AR BOOLEAN,
      102+     558    1                     4 RL BOOLEAN,
      103+     559    1                     4 ID BOOLEAN,
      104+     560    1                     4 TAG UBIN(4) UNAL,
      105+     561    1                  3 * BIT(2) UNAL,
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:17   
      106+     562    1                  3 MF2,
      107+     563    1                     4 AR BOOLEAN,
      108+     564    1                     4 RL BOOLEAN,
      109+     565    1                     4 ID BOOLEAN,
      110+     566    1                     4 TAG UBIN(4) UNAL,
      111+     567    1                  3 * BIT(11) UNAL,
      112+     568    1                  3 MF1,
      113+     569    1                     4 AR BOOLEAN,
      114+     570    1                     4 RL BOOLEAN,
      115+     571    1                     4 ID BOOLEAN,
      116+     572    1                     4 TAG UBIN(4) UNAL,
      117+     573    1               2 DECCNT_NODE$ PTR;
      118+     574
      119+     575    1        DCL DEFER_BUFFER_IDX SBIN WORD AUTO;
      120+     576    1        DCL DEFER BOOLEAN AUTO;
      121+     577
      122+     578    1        DCL CURRENT_BLOCK$ PTR EXT;
      123+     579    1        DCL OLD_CURRENT_BLOCK$ PTR;  /* FOR ORGS */
      124+     580    1        DCL ROOT_PROC_BLOCK$  PTR EXT;
      125+     581    1        DCL SEG_NO#           SBIN WORD;
      126+     582
      127+     583             %EQU DU = 03;
      128+     584             %EQU DL = 07;
      129+     585        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:18   
      390      586             %INCLUDE Z8H_DEP;
        1+     587        /*T***********************************************************/
        2+     588        /*T*                                                         */
        3+     589        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+     590        /*T*                                                         */
        5+     591        /*T***********************************************************/
        6+     592        /*
        7+     593
        8+     594             Z8H_DEP
        9+     595
       10+     596            This include file contains the declaration of the DEP structure.
       11+     597        DEP is used in a manner similar to the PEPD array.  DEP
       12+     598        entries contain offsets into pseudo-code modules.  The
       13+     599        DEP table is needed when a pseudo-code support routine
       14+     600        wants to execute some pseudo-code that is independent of
       15+     601        any specific ILL or ETT item.  The DEP table is initialize by
       16+     602        the pseudo-code assembler (PCA).  See Z8PD$PCA_DOCUMENT for
       17+     603        details on the PCA.
       18+     604        */
       19+     605             %IF NOT INITIALIZE;
       20+     606
       21+     607    1          DCL 1 DEP EXT,
       22+     608    1                 2 ADEP UBIN WORD UNAL,
       23+     609    1                 2 BDEP UBIN WORD UNAL,
       24+     610    1                 2 CDEP UBIN WORD UNAL,
       25+     611    1                 2 DDEP UBIN WORD UNAL,
       26+     612    1                 2 EDEP UBIN WORD UNAL,
       27+     613    1                 2 FDEP UBIN WORD UNAL,
       28+     614    1                 2 GDEP UBIN WORD UNAL,
       29+     615    1                 2 HDEP UBIN WORD UNAL,
       30+     616    1                 2 IDEP UBIN WORD UNAL,
       31+     617    1                 2 JDEP UBIN WORD UNAL,
       32+     618    1                 2 KDEP UBIN WORD UNAL,
       33+     619    1                 2 LDEP UBIN WORD UNAL,
       34+     620    1                 2 MDEP UBIN WORD UNAL,
       35+     621    1                 2 NDEP UBIN WORD UNAL,
       36+     622    1                 2 ODEP UBIN WORD UNAL,
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:19   
       37+     623    1                 2 PDEP UBIN WORD UNAL,
       38+     624    1                 2 QDEP UBIN WORD UNAL,
       39+     625    1                 2 RDEP UBIN WORD UNAL,
       40+     626    1                 2 SDEP UBIN WORD UNAL,
       41+     627    1                 2 TDEP UBIN WORD UNAL,
       42+     628    1                 2 UDEP UBIN WORD UNAL,
       43+     629    1                 2 VDEP UBIN WORD UNAL,
       44+     630    1                 2 WDEP UBIN WORD UNAL,
       45+     631    1                 2 XDEP UBIN WORD UNAL,
       46+     632    1                 2 YDEP UBIN WORD UNAL,
       47+     633    1                 2 ZDEP UBIN WORD UNAL,
       48+     634    1                 2 XRDEP(0:7) UBIN WORD UNAL,
       49+     635    1                 2 ARDEP(0:1) UBIN WORD UNAL,
       50+     636    1                 2 EADEP UBIN WORD UNAL,
       51+     637    1                 2 AQDEP UBIN WORD UNAL,
       52+     638    1                 2 EAQDEP UBIN WORD UNAL,
       53+     639    1                 2 INDDEP UBIN WORD UNAL,
       54+     640    1                 2 PRDEP (0:7) UBIN WORD UNAL;
       55+     641             %ENDIF;
       56+     642
       57+     643
       58+     644             %EQU ADEP = 00;
       59+     645             %EQU BDEP = 01;
       60+     646             %EQU CDEP = 02;
       61+     647             %EQU DDEP = 03;
       62+     648             %EQU EDEP = 04;
       63+     649             %EQU FDEP = 05;
       64+     650             %EQU GDEP = 06;
       65+     651             %EQU HDEP = 07;
       66+     652             %EQU IDEP = 08;
       67+     653             %EQU JDEP = 09;
       68+     654             %EQU KDEP = 10;
       69+     655             %EQU LDEP = 11;
       70+     656             %EQU MDEP = 12;
       71+     657             %EQU NDEP = 13;
       72+     658             %EQU ODEP = 14;
       73+     659             %EQU PDEP = 15;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:20   
       74+     660             %EQU QDEP = 16;
       75+     661             %EQU RDEP = 17;
       76+     662             %EQU SDEP = 18;
       77+     663             %EQU TDEP = 19;
       78+     664             %EQU UDEP = 20;
       79+     665             %EQU VDEP = 21;
       80+     666             %EQU WDEP = 22;
       81+     667             %EQU XDEP = 23;
       82+     668             %EQU YDEP = 24;
       83+     669             %EQU ZDEP = 25;
       84+     670             %EQU XRDEP0 = 26;
       85+     671             %EQU XRDEP1 = 27;
       86+     672             %EQU XRDEP2 = 28;
       87+     673             %EQU XRDEP3 = 29;
       88+     674             %EQU XRDEP4 = 30;
       89+     675             %EQU XRDEP5 = 31;
       90+     676             %EQU XRDEP6 = 32;
       91+     677             %EQU XRDEP7 = 33;
       92+     678             %EQU ARDEPA = 34;
       93+     679             %EQU ARDEPQ = 35;
       94+     680             %EQU EADEP = 36;
       95+     681             %EQU AQDEP = 37;
       96+     682             %EQU EAQDEP = 38;
       97+     683             %EQU INDDEP = 39;
       98+     684             %EQU PRDEP0 = 40;
       99+     685             %EQU PRDEP1 = 41;
      100+     686             %EQU PRDEP2 = 42;
      101+     687             %EQU PRDEP3 = 43;
      102+     688             %EQU PRDEP4 = 44;
      103+     689             %EQU PRDEP5 = 45;
      104+     690             %EQU PRDEP6 = 46;
      105+     691             %EQU PRDEP7 = 47;
      106+     692        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:21   
      391      693             %INCLUDE Z8H_DIRECT;
        1+     694        /*T***********************************************************/
        2+     695        /*T*                                                         */
        3+     696        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+     697        /*T*                                                         */
        5+     698        /*T***********************************************************/
        6+     699        /*
        7+     700                  Z8H_DIRECT
        8+     701
        9+     702            An include file that contains EQU's for pseudo-code
       10+     703        directive values and directive operands.
       11+     704        */
       12+     705        %EQU QUIT   =     0 ;
       13+     706        %EQU JMP    =     1 ;
       14+     707        %EQU JMPDV  =     2 ;
       15+     708        %EQU GOSUB  =     4 ;
       16+     709        %EQU RTN    =     5 ;
       17+     710        %EQU IFITIS =     6 ;
       18+     711        %EQU EQLR   =     7 ;
       19+     712        %EQU IFID   =     8 ;
       20+     713        %EQU BCT    =     9 ;
       21+     714        %EQU WALK   =     10;
       22+     715        %EQU ASSIGN =     11;
       23+     716        %EQU ALLOTD =     12;
       24+     717        %EQU BURST  =     13;
       25+     718        %EQU REF_   =     14;
       26+     719        %EQU STORE  =     15;
       27+     720        %EQU GENI   =     16;
       28+     721        %EQU MAPT   =     17;
       29+     722        %EQU DSTATE =     18;
       30+     723        %EQU WALK2  =     19;
       31+     724        %EQU WALK3  =     20;
       32+     725        %EQU DECCNT =     21;
       33+     726        %EQU CASE   =     22;
       34+     727        %EQU DEFER  =     24;
       35+     728        %EQU WRAPUP =     25;
       36+     729        %EQU MOVE   =     26;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:22   
       37+     730        %EQU MOVIND =     27;
       38+     731        %EQU AND    =     28;
       39+     732        %EQU ALLOT  =     29;
       40+     733        %EQU OR     =     30;
       41+     734        %EQU AD     =     31;
       42+     735        %EQU SHIFTL =     32;
       43+     736        %EQU SHIFTR =     33;
       44+     737        %EQU NEWLAB =     34;
       45+     738        %EQU DEFLAB =     35;
       46+     739        %EQU ORGS   =     36;
       47+     740        %EQU FAVOR  =     37;
       48+     741        %EQU OFFSET =     38;
       49+     742        %EQU LIB    =     39;
       50+     743        %EQU INCCNT =     40;
       51+     744        %EQU APPLY  =     41;
       52+     745        %EQU ORGE   =     42;
       53+     746        %EQU ATTACH =     43;
       54+     747        %EQU ADDRESS =    44;
       55+     748        %EQU DESCR  =     46;
       56+     749
       57+     750
       58+     751        %EQU OPMOD  =     0 ;
       59+     752        %EQU TAGMOD =     1 ;
       60+     753        %EQU LENMOD =     2 ;
       61+     754        %EQU RECR   =     3 ;
       62+     755        %EQU TRAMOD =     4 ;
       63+     756        %EQU LOPROP =     0 ;
       64+     757        %EQU LOP    =     1 ;
       65+     758        %EQU ROP    =     2 ;
       66+     759        %EQU TO     =     3 ;
       67+     760        %EQU TYI5   =     0 ;
       68+     761        %EQU TYI17  =     1 ;
       69+     762        %EQU TYR2   =     2 ;
       70+     763        %EQU TYR4   =     3 ;
       71+     764        %EQU TYQ2   =     4 ;
       72+     765        %EQU TYQ4   =     5 ;
       73+     766        %EQU TYI4   =     6 ;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:23   
       74+     767        %EQU TYI16  =     7 ;
       75+     768        %EQU TYH2   =     8 ;
       76+     769        %EQU TYH4   =     9 ;
       77+     770        %EQU IND2   =     10;
       78+     771        %EQU TYP25  =     11;
       79+     772        %EQU NONE   =     0 ;
       80+     773        %EQU PSI1   =     1 ;
       81+     774        %EQU PSI2   =     2 ;
       82+     775        %EQU PSD    =     3 ;
       83+     776        %EQU CODE   =     0 ;
       84+     777        %EQU EVEX   =     4 ;
       85+     778        %EQU SUBENT =     7 ;
       86+     779        %EQU RESET  =     27;
       87+     780        %EQU NDSC   =     1 ;
       88+     781        %EQU ADSC   =     0 ;
       89+     782        %EQU BRANCH$ =     1 ;
       90+     783        %EQU ALTRET$ =     4 ;
       91+     784        %EQU SYMREF$ =     5 ;
       92+     785        %EQU DESTINATION$ = 5;
       93+     786        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:24   
      392      787             %INCLUDE Z8H_EXT;
        1+     788        /*T***********************************************************/
        2+     789        /*T*                                                         */
        3+     790        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+     791        /*T*                                                         */
        5+     792        /*T***********************************************************/
        6+     793        /*                                                           */
        7+     794        /*   This was Z8H_COUNTS                                     */
        8+     795        /*                                                           */
        9+     796    1        DCL NUMBER_OF_PRIMES SBIN WORD EXT INIT(0);
       10+     797    1        DCL NUMBER_OF_TEMPS SBIN WORD EXT INIT(0);
       11+     798    1        DCL NUMBER_OF_REFS SBIN WORD EXT INIT(0);
       12+     799
       13+     800        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:25   
       14+     801
       15+     802    1        DCL GENERATING_PTRS BOOLEAN EXT INIT(FALSE);
       16+     803
       17+     804    1        DCL USE_PROC_RETURN EXT PTR;
       18+     805
       19+     806    1        DCL CURRENT_SCOPE$ PTR EXT INIT(ADDR(NIL));
       20+     807
       21+     808        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:26   
       22+     809        /*                                                           */
       23+     810        /*   This was Z8H_HEADS                                      */
       24+     811        /*                                                           */
       25+     812        /*
       26+     813
       27+     814            This include file contains declarations of linked list
       28+     815        head pointers used by phase 4.  Most of the lists are
       29+     816        used in pooling items.
       30+     817        */
       31+     818    1        DCL HEAD_REF$        PTR EXT INIT(ADDR(NIL));
       32+     819    1        DCL HEAD_TEMP$       PTR EXT INIT(ADDR(NIL));
       33+     820    1        DCL CONST$           PTR EXT INIT(ADDR(NIL));
       34+     821    1        DCL HEAD_PRIMES$     PTR EXT INIT(ADDR(NIL));
       35+     822
       36+     823        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:27   
       37+     824        /*                                                           */
       38+     825        /*   This was Z8H_LOOP_LEV                                   */
       39+     826        /*                                                           */
       40+     827    1        DCL CUR_LOOP_LEVEL SBIN WORD EXT INIT(0);
       41+     828
       42+     829        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:28   
       43+     830        /*                                                           */
       44+     831        /*   This was Z8H_PEPD                                       */
       45+     832        /*                                                           */
       46+     833    1        DCL 1 PEPD(0:1) ALIGNED EXT,
       47+     834    1              2 OFFSET UBIN HALF UNAL,
       48+     835    1              2 IDEAL  UBIN(9)   UNAL,
       49+     836    1              2 MODULE UBIN(9)   UNAL;
       50+     837        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:29   
      393      838             %INCLUDE Z8H_MOAS;
        1+     839        /*T***********************************************************/
        2+     840        /*T*                                                         */
        3+     841        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+     842        /*T*                                                         */
        5+     843        /*T***********************************************************/
        6+     844        /*
        7+     845             Z8H_MOAS
        8+     846
        9+     847            This include file contains EQUs of constants used by
       10+     848        the pseudo-code utility directives (MOVE OR AND SHIFTL SHIFTR).
       11+     849        */
       12+     850        %EQU CONST_CONST   = 00;
       13+     851        %EQU CONST_COMCOM  = 01;
       14+     852        %EQU CONST_ILL     = 02;
       15+     853        %EQU CONST_SYSSM   = 03;
       16+     854        %EQU CONST_ABS     = 04;
       17+     855        %EQU CONST_OPND    = 05;
       18+     856        %EQU COMCOM_CONST  = 06;
       19+     857        %EQU COMCOM_COMCOM = 07;
       20+     858        %EQU COMCOM_ILL    = 08;
       21+     859        %EQU COMCOM_SYSSM  = 09;
       22+     860        %EQU COMCOM_ABS    = 10;
       23+     861        %EQU COMCOM_OPND   = 11;
       24+     862        %EQU ILL_CONST     = 12;
       25+     863        %EQU ILL_COMCOM    = 13;
       26+     864        %EQU ILL_ILL       = 14;
       27+     865        %EQU ILL_SYSSM     = 15;
       28+     866        %EQU ILL_ABS       = 16;
       29+     867        %EQU ILL_OPND      = 17;
       30+     868        %EQU SYSSM_CONST   = 18;
       31+     869        %EQU SYSSM_COMCOM  = 19;
       32+     870        %EQU SYSSM_ILL     = 20;
       33+     871        %EQU SYSSM_SYSSM   = 21;
       34+     872        %EQU SYSSM_ABS     = 22;
       35+     873        %EQU SYSSM_OPND    = 23;
       36+     874        %EQU ABS_CONST     = 24;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:30   
       37+     875        %EQU ABS_COMCOM    = 25;
       38+     876        %EQU ABS_ILL       = 26;
       39+     877        %EQU ABS_SYSSM     = 27;
       40+     878        %EQU ABS_ABS       = 28;
       41+     879        %EQU ABS_OPND      = 29;
       42+     880        %EQU OPND_CONST    = 30;
       43+     881        %EQU OPND_COMCOM   = 31;
       44+     882        %EQU OPND_ILL      = 32;
       45+     883        %EQU OPND_SYSSM    = 33;
       46+     884        %EQU OPND_ABS      = 34;
       47+     885        %EQU OPND_OPND     = 35;
       48+     886        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:31   
      394      887             %INCLUDE Z8H_OPCODES;
        1+     888        /*T***********************************************************/
        2+     889        /*T*                                                         */
        3+     890        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+     891        /*T*                                                         */
        5+     892        /*T***********************************************************/
        6+     893        %EQU ARG_OP   = BITBIN('000'O);
        7+     894        %EQU MME_OP   = BITBIN('001'O);
        8+     895        %EQU DRL_OP   = BITBIN('002'O);
        9+     896        %EQU NOP_OP   = BITBIN('011'O);
       10+     897        %EQU CIOC_OP  = BITBIN('015'O);
       11+     898        %EQU ADLX_OP  = BITBIN('02'O);
       12+     899        %EQU ADLX0_OP = BITBIN('020'O);
       13+     900        %EQU ADLX1_OP = BITBIN('021'O);
       14+     901        %EQU ADLX2_OP = BITBIN('022'O);
       15+     902        %EQU ADLX3_OP = BITBIN('023'O);
       16+     903        %EQU ADLX4_OP = BITBIN('024'O);
       17+     904        %EQU ADLX5_OP = BITBIN('025'O);
       18+     905        %EQU ADLX6_OP = BITBIN('026'O);
       19+     906        %EQU ADLX7_OP = BITBIN('027'O);
       20+     907        %EQU LDQC_OP  = BITBIN('032'O);
       21+     908        %EQU ADL_OP   = BITBIN('033'O);
       22+     909        %EQU LDAC_OP  = BITBIN('034'O);
       23+     910        %EQU ADLA_OP  = BITBIN('035'O);
       24+     911        %EQU ADLQ_OP  = BITBIN('036'O);
       25+     912        %EQU ADLAQ_OP = BITBIN('037'O);
       26+     913        %EQU ASX_OP   = BITBIN('04'O);
       27+     914        %EQU ASX0_OP  = BITBIN('040'O);
       28+     915        %EQU ASX1_OP  = BITBIN('041'O);
       29+     916        %EQU ASX2_OP  = BITBIN('042'O);
       30+     917        %EQU ASX3_OP  = BITBIN('043'O);
       31+     918        %EQU ASX4_OP  = BITBIN('044'O);
       32+     919        %EQU ASX5_OP  = BITBIN('045'O);
       33+     920        %EQU ASX6_OP  = BITBIN('046'O);
       34+     921        %EQU ASX7_OP  = BITBIN('047'O);
       35+     922        %EQU AOS_OP   = BITBIN('054'O);
       36+     923        %EQU ASA_OP   = BITBIN('055'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:32   
       37+     924        %EQU ASQ_OP   = BITBIN('056'O);
       38+     925        %EQU SSCR_OP  = BITBIN('057'O);
       39+     926        %EQU ADX_OP   = BITBIN('06'O);
       40+     927        %EQU ADX0_OP  = BITBIN('060'O);
       41+     928        %EQU ADX1_OP  = BITBIN('061'O);
       42+     929        %EQU ADX2_OP  = BITBIN('062'O);
       43+     930        %EQU ADX3_OP  = BITBIN('063'O);
       44+     931        %EQU ADX4_OP  = BITBIN('064'O);
       45+     932        %EQU ADX5_OP  = BITBIN('065'O);
       46+     933        %EQU ADX6_OP  = BITBIN('066'O);
       47+     934        %EQU ADX7_OP  = BITBIN('067'O);
       48+     935        %EQU AWCA_OP  = BITBIN('071'O);
       49+     936        %EQU AWCQ_OP  = BITBIN('072'O);
       50+     937        %EQU LREG_OP  = BITBIN('073'O);
       51+     938        %EQU ADA_OP   = BITBIN('075'O);
       52+     939        %EQU ADQ_OP   = BITBIN('076'O);
       53+     940        %EQU ADAQ_OP  = BITBIN('077'O);
       54+     941        %EQU CMPX_OP  = BITBIN('10'O);
       55+     942        %EQU CMPX0_OP = BITBIN('100'O);
       56+     943        %EQU CMPX1_OP = BITBIN('101'O);
       57+     944        %EQU CMPX2_OP = BITBIN('102'O);
       58+     945        %EQU CMPX3_OP = BITBIN('103'O);
       59+     946        %EQU CMPX4_OP = BITBIN('104'O);
       60+     947        %EQU CMPX5_OP = BITBIN('105'O);
       61+     948        %EQU CMPX6_OP = BITBIN('106'O);
       62+     949        %EQU CMPX7_OP = BITBIN('107'O);
       63+     950        %EQU CWL_OP   = BITBIN('111'O);
       64+     951        %EQU CMPA_OP  = BITBIN('115'O);
       65+     952        %EQU CMPQ_OP  = BITBIN('116'O);
       66+     953        %EQU CMPAQ_OP = BITBIN('117'O);
       67+     954        %EQU SBLX_OP  = BITBIN('12'O);
       68+     955        %EQU SBLX0_OP = BITBIN('120'O);
       69+     956        %EQU SBLX1_OP = BITBIN('101'O);
       70+     957        %EQU SBLX2_OP = BITBIN('122'O);
       71+     958        %EQU SBLX3_OP = BITBIN('123'O);
       72+     959        %EQU SBLX4_OP = BITBIN('124'O);
       73+     960        %EQU SBLX5_OP = BITBIN('125'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:33   
       74+     961        %EQU SBLX6_OP = BITBIN('126'O);
       75+     962        %EQU SBLX7_OP = BITBIN('127'O);
       76+     963        %EQU SBLA_OP  = BITBIN('135'O);
       77+     964        %EQU SBLQ_OP  = BITBIN('136'O);
       78+     965        %EQU SBLAQ_OP = BITBIN('137'O);
       79+     966        %EQU SSX_OP   = BITBIN('14'O);
       80+     967        %EQU SSX0_OP  = BITBIN('140'O);
       81+     968        %EQU SSX1_OP  = BITBIN('141'O);
       82+     969        %EQU SSX2_OP  = BITBIN('142'O);
       83+     970        %EQU SSX3_OP  = BITBIN('143'O);
       84+     971        %EQU SSX4_OP  = BITBIN('144'O);
       85+     972        %EQU SSX5_OP  = BITBIN('145'O);
       86+     973        %EQU SSX6_OP  = BITBIN('146'O);
       87+     974        %EQU SSX7_OP  = BITBIN('147'O);
       88+     975        %EQU SSA_OP   = BITBIN('155'O);
       89+     976        %EQU SSQ_OP   = BITBIN('156'O);
       90+     977        %EQU SBX_OP   = BITBIN('16'O);
       91+     978        %EQU SBX0_OP  = BITBIN('160'O);
       92+     979        %EQU SBX1_OP  = BITBIN('161'O);
       93+     980        %EQU SBX2_OP  = BITBIN('162'O);
       94+     981        %EQU SBX3_OP  = BITBIN('163'O);
       95+     982        %EQU SBX4_OP  = BITBIN('164'O);
       96+     983        %EQU SBX5_OP  = BITBIN('165'O);
       97+     984        %EQU SBX6_OP  = BITBIN('166'O);
       98+     985        %EQU SBX7_OP  = BITBIN('167'O);
       99+     986        %EQU SWCA_OP  = BITBIN('171'O);
      100+     987        %EQU SWCQ_OP  = BITBIN('172'O);
      101+     988        %EQU SBA_OP   = BITBIN('175'O);
      102+     989        %EQU SBQ_OP   = BITBIN('176'O);
      103+     990        %EQU SBAQ_OP  = BITBIN('177'O);
      104+     991        %EQU CNAX_OP  = BITBIN('20'O);
      105+     992        %EQU CNAX0_OP = BITBIN('200'O);
      106+     993        %EQU CNAX1_OP = BITBIN('201'O);
      107+     994        %EQU CNAX2_OP = BITBIN('202'O);
      108+     995        %EQU CNAX3_OP = BITBIN('203'O);
      109+     996        %EQU CNAX4_OP = BITBIN('204'O);
      110+     997        %EQU CNAX5_OP = BITBIN('205'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:34   
      111+     998        %EQU CNAX6_OP = BITBIN('206'O);
      112+     999        %EQU CNAX7_OP = BITBIN('207'O);
      113+    1000        %EQU CMK_OP   = BITBIN('211'O);
      114+    1001        %EQU SZNC_OP  = BITBIN('214'O);
      115+    1002        %EQU CNAA_OP  = BITBIN('215'O);
      116+    1003        %EQU CNAQ_OP  = BITBIN('216'O);
      117+    1004        %EQU CNAAQ_OP = BITBIN('217'O);
      118+    1005        %EQU LDX_OP   = BITBIN('22'O);
      119+    1006        %EQU LDX0_OP  = BITBIN('220'O);
      120+    1007        %EQU LDX1_OP  = BITBIN('221'O);
      121+    1008        %EQU LDX2_OP  = BITBIN('222'O);
      122+    1009        %EQU LDX3_OP  = BITBIN('223'O);
      123+    1010        %EQU LDX4_OP  = BITBIN('224'O);
      124+    1011        %EQU LDX5_OP  = BITBIN('225'O);
      125+    1012        %EQU LDX6_OP  = BITBIN('226'O);
      126+    1013        %EQU LDX7_OP  = BITBIN('227'O);
      127+    1014        %EQU LBAR_OP  = BITBIN('230'O);
      128+    1015        %EQU RMCM_OP  = BITBIN('233'O);
      129+    1016        %EQU SZN_OP   = BITBIN('234'O);
      130+    1017        %EQU LDA_OP   = BITBIN('235'O);
      131+    1018        %EQU LDQ_OP   = BITBIN('236'O);
      132+    1019        %EQU LDAQ_OP  = BITBIN('237'O);
      133+    1020        %EQU ORSX_OP  = BITBIN('24'O);
      134+    1021        %EQU ORSX0_OP = BITBIN('240'O);
      135+    1022        %EQU ORSX1_OP = BITBIN('241'O);
      136+    1023        %EQU ORSX2_OP = BITBIN('242'O);
      137+    1024        %EQU ORSX3_OP = BITBIN('243'O);
      138+    1025        %EQU ORSX4_OP = BITBIN('244'O);
      139+    1026        %EQU ORSX5_OP = BITBIN('245'O);
      140+    1027        %EQU ORSX6_OP = BITBIN('246'O);
      141+    1028        %EQU ORSX7_OP = BITBIN('247'O);
      142+    1029        %EQU ORSA_OP  = BITBIN('255'O);
      143+    1030        %EQU ORSQ_OP  = BITBIN('256'O);
      144+    1031        %EQU ORX_OP   = BITBIN('26'O);
      145+    1032        %EQU ORX0_OP  = BITBIN('260'O);
      146+    1033        %EQU ORX1_OP  = BITBIN('261'O);
      147+    1034        %EQU ORX2_OP  = BITBIN('262'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:35   
      148+    1035        %EQU ORX3_OP  = BITBIN('263'O);
      149+    1036        %EQU ORX4_OP  = BITBIN('264'O);
      150+    1037        %EQU ORX5_OP  = BITBIN('265'O);
      151+    1038        %EQU ORX6_OP  = BITBIN('266'O);
      152+    1039        %EQU ORX7_OP  = BITBIN('267'O);
      153+    1040        %EQU ORA_OP   = BITBIN('275'O);
      154+    1041        %EQU ORQ_OP   = BITBIN('276'O);
      155+    1042        %EQU ORAQ_OP  = BITBIN('277'O);
      156+    1043        %EQU CANX_OP  = BITBIN('30'O);
      157+    1044        %EQU CANX0_OP = BITBIN('300'O);
      158+    1045        %EQU CANX1_OP = BITBIN('301'O);
      159+    1046        %EQU CANX2_OP = BITBIN('302'O);
      160+    1047        %EQU CANX3_OP = BITBIN('303'O);
      161+    1048        %EQU CANX4_OP = BITBIN('304'O);
      162+    1049        %EQU CANX5_OP = BITBIN('305'O);
      163+    1050        %EQU CANX6_OP = BITBIN('306'O);
      164+    1051        %EQU CANX7_OP = BITBIN('307'O);
      165+    1052        %EQU CANA_OP  = BITBIN('315'O);
      166+    1053        %EQU CANQ_OP  = BITBIN('316'O);
      167+    1054        %EQU CANAQ_OP = BITBIN('317'O);
      168+    1055        %EQU LCX_OP   = BITBIN('32'O);
      169+    1056        %EQU LCX0_OP  = BITBIN('320'O);
      170+    1057        %EQU LCX1_OP  = BITBIN('321'O);
      171+    1058        %EQU LCX2_OP  = BITBIN('322'O);
      172+    1059        %EQU LCX3_OP  = BITBIN('323'O);
      173+    1060        %EQU LCX4_OP  = BITBIN('324'O);
      174+    1061        %EQU LCX5_OP  = BITBIN('325'O);
      175+    1062        %EQU LCX6_OP  = BITBIN('326'O);
      176+    1063        %EQU LCX7_OP  = BITBIN('327'O);
      177+    1064        %EQU LCA_OP   = BITBIN('335'O);
      178+    1065        %EQU LCQ_OP   = BITBIN('336'O);
      179+    1066        %EQU LCAQ_OP  = BITBIN('337'O);
      180+    1067        %EQU ANSX_OP  = BITBIN('34'O);
      181+    1068        %EQU ANSX0_OP = BITBIN('340'O);
      182+    1069        %EQU ANSX1_OP = BITBIN('341'O);
      183+    1070        %EQU ANSX2_OP = BITBIN('342'O);
      184+    1071        %EQU ANSX3_OP = BITBIN('343'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:36   
      185+    1072        %EQU ANSX4_OP = BITBIN('344'O);
      186+    1073        %EQU ANSX5_OP = BITBIN('345'O);
      187+    1074        %EQU ANSX6_OP = BITBIN('346'O);
      188+    1075        %EQU ANSX7_OP = BITBIN('347'O);
      189+    1076        %EQU ANSA_OP  = BITBIN('355'O);
      190+    1077        %EQU ANSQ_OP  = BITBIN('356'O);
      191+    1078        %EQU ANX_OP   = BITBIN('36'O);
      192+    1079        %EQU ANX0_OP  = BITBIN('360'O);
      193+    1080        %EQU ANX1_OP  = BITBIN('361'O);
      194+    1081        %EQU ANX2_OP  = BITBIN('362'O);
      195+    1082        %EQU ANX3_OP  = BITBIN('363'O);
      196+    1083        %EQU ANX4_OP  = BITBIN('364'O);
      197+    1084        %EQU ANX5_OP  = BITBIN('365'O);
      198+    1085        %EQU ANX6_OP  = BITBIN('366'O);
      199+    1086        %EQU ANX7_OP  = BITBIN('367'O);
      200+    1087        %EQU ANA_OP   = BITBIN('375'O);
      201+    1088        %EQU ANQ_OP   = BITBIN('376'O);
      202+    1089        %EQU ANAQ_OP  = BITBIN('377'O);
      203+    1090        %EQU MPF_OP   = BITBIN('401'O);
      204+    1091        %EQU MPY_OP   = BITBIN('402'O);
      205+    1092        %EQU CMG_OP   = BITBIN('405'O);
      206+    1093        %EQU LDE_OP   = BITBIN('411'O);
      207+    1094        %EQU RSCR_OP  = BITBIN('413'O);
      208+    1095        %EQU ADE_OP   = BITBIN('415'O);
      209+    1096        %EQU UFM_OP   = BITBIN('421'O);
      210+    1097        %EQU DUFM_OP  = BITBIN('423'O);
      211+    1098        %EQU FCMG_OP  = BITBIN('425'O);
      212+    1099        %EQU DFCMG_OP = BITBIN('427'O);
      213+    1100        %EQU FSZN_OP  = BITBIN('430'O);
      214+    1101        %EQU FLD_OP   = BITBIN('431'O);
      215+    1102        %EQU DFLD_OP  = BITBIN('433'O);
      216+    1103        %EQU UFA_OP   = BITBIN('435'O);
      217+    1104        %EQU DUFA_OP  = BITBIN('437'O);
      218+    1105        %EQU SXL0_OP  = BITBIN('440'O);
      219+    1106        %EQU SXL1_OP  = BITBIN('441'O);
      220+    1107        %EQU SXL2_OP  = BITBIN('442'O);
      221+    1108        %EQU SXL3_OP  = BITBIN('443'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:37   
      222+    1109        %EQU SXL4_OP  = BITBIN('444'O);
      223+    1110        %EQU SXL5_OP  = BITBIN('445'O);
      224+    1111        %EQU SXL6_OP  = BITBIN('446'O);
      225+    1112        %EQU SXL7_OP  = BITBIN('447'O);
      226+    1113        %EQU STZ_OP   = BITBIN('450'O);
      227+    1114        %EQU SMIC_OP  = BITBIN('451'O);
      228+    1115        %EQU SCPR_OP  = BITBIN('452'O);
      229+    1116        %EQU STT_OP   = BITBIN('454'O);
      230+    1117        %EQU FST_OP   = BITBIN('455'O);
      231+    1118        %EQU STE_OP   = BITBIN('456'O);
      232+    1119        %EQU DFST_OP  = BITBIN('457'O);
      233+    1120        %EQU FMP_OP   = BITBIN('461'O);
      234+    1121        %EQU DFMP_OP  = BITBIN('463'O);
      235+    1122        %EQU FSTR_OP  = BITBIN('470'O);
      236+    1123        %EQU FRD_OP   = BITBIN('471'O);
      237+    1124        %EQU DFSTR_OP = BITBIN('472'O);
      238+    1125        %EQU DFRD_OP  = BITBIN('473'O);
      239+    1126        %EQU FAD_OP   = BITBIN('475'O);
      240+    1127        %EQU DFAD_OP  = BITBIN('477'O);
      241+    1128        %EQU RPL_OP   = BITBIN('500'O);
      242+    1129        %EQU BCD_OP   = BITBIN('505'O);
      243+    1130        %EQU DIV_OP   = BITBIN('506'O);
      244+    1131        %EQU DVF_OP   = BITBIN('507'O);
      245+    1132        %EQU FNEG_OP  = BITBIN('513'O);
      246+    1133        %EQU FCMP_OP  = BITBIN('515'O);
      247+    1134        %EQU DFCMP_OP = BITBIN('517'O);
      248+    1135        %EQU RPT_OP   = BITBIN('520'O);
      249+    1136        %EQU FDI_OP   = BITBIN('525'O);
      250+    1137        %EQU DFDI_OP  = BITBIN('527'O);
      251+    1138        %EQU NEG_OP   = BITBIN('531'O);
      252+    1139        %EQU NEGL_OP  = BITBIN('533'O);
      253+    1140        %EQU UFS_OP   = BITBIN('535'O);
      254+    1141        %EQU DUFS_OP  = BITBIN('537'O);
      255+    1142        %EQU SBAR_OP  = BITBIN('550'O);
      256+    1143        %EQU STBA_OP  = BITBIN('551'O);
      257+    1144        %EQU STBQ_OP  = BITBIN('552'O);
      258+    1145        %EQU SMCM_OP  = BITBIN('553'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:38   
      259+    1146        %EQU STC1_OP  = BITBIN('554'O);
      260+    1147        %EQU RPD_OP   = BITBIN('560'O);
      261+    1148        %EQU FDV_OP   = BITBIN('565'O);
      262+    1149        %EQU DFDV_OP  = BITBIN('567'O);
      263+    1150        %EQU FNO_OP   = BITBIN('573'O);
      264+    1151        %EQU FSB_OP   = BITBIN('575'O);
      265+    1152        %EQU DFSB_OP  = BITBIN('577'O);
      266+    1153        %EQU TZE_OP   = BITBIN('600'O);
      267+    1154        %EQU TNZ_OP   = BITBIN('601'O);
      268+    1155        %EQU TNC_OP   = BITBIN('602'O);
      269+    1156        %EQU TRC_OP   = BITBIN('603'O);
      270+    1157        %EQU TMI_OP   = BITBIN('604'O);
      271+    1158        %EQU TPL_OP   = BITBIN('605'O);
      272+    1159        %EQU TTF_OP   = BITBIN('607'O);
      273+    1160        %EQU TEO_OP   = BITBIN('614'O);
      274+    1161        %EQU TEU_OP   = BITBIN('615'O);
      275+    1162        %EQU DIS_OP   = BITBIN('616'O);
      276+    1163        %EQU TOV_OP   = BITBIN('617'O);
      277+    1164        %EQU EAX_OP   = BITBIN('62'O);
      278+    1165        %EQU EAX0_OP  = BITBIN('620'O);
      279+    1166        %EQU EAX1_OP  = BITBIN('621'O);
      280+    1167        %EQU EAX2_OP  = BITBIN('622'O);
      281+    1168        %EQU EAX3_OP  = BITBIN('623'O);
      282+    1169        %EQU EAX4_OP  = BITBIN('624'O);
      283+    1170        %EQU EAX5_OP  = BITBIN('625'O);
      284+    1171        %EQU EAX6_OP  = BITBIN('626'O);
      285+    1172        %EQU EAX7_OP  = BITBIN('627'O);
      286+    1173        %EQU RET_OP   = BITBIN('630'O);
      287+    1174        %EQU LDI_OP   = BITBIN('634'O);
      288+    1175        %EQU EAA_OP   = BITBIN('635'O);
      289+    1176        %EQU EAQ_OP   = BITBIN('636'O);
      290+    1177        %EQU LDT_OP   = BITBIN('637'O);
      291+    1178        %EQU ERSX_OP  = BITBIN('64'O);
      292+    1179        %EQU ERSX0_OP = BITBIN('640'O);
      293+    1180        %EQU ERSX1_OP = BITBIN('641'O);
      294+    1181        %EQU ERSX2_OP = BITBIN('642'O);
      295+    1182        %EQU ERSX3_OP = BITBIN('643'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:39   
      296+    1183        %EQU ERSX4_OP = BITBIN('644'O);
      297+    1184        %EQU ERSX5_OP = BITBIN('645'O);
      298+    1185        %EQU ERSX6_OP = BITBIN('646'O);
      299+    1186        %EQU ERSX7_OP = BITBIN('647'O);
      300+    1187        %EQU ERSA_OP  = BITBIN('655'O);
      301+    1188        %EQU ERSQ_OP  = BITBIN('656'O);
      302+    1189        %EQU ERX_OP   = BITBIN('66'O);
      303+    1190        %EQU ERX0_OP  = BITBIN('660'O);
      304+    1191        %EQU ERX1_OP  = BITBIN('661'O);
      305+    1192        %EQU ERX2_OP  = BITBIN('662'O);
      306+    1193        %EQU ERX3_OP  = BITBIN('663'O);
      307+    1194        %EQU ERX4_OP  = BITBIN('664'O);
      308+    1195        %EQU ERX5_OP  = BITBIN('665'O);
      309+    1196        %EQU ERX6_OP  = BITBIN('666'O);
      310+    1197        %EQU ERX7_OP  = BITBIN('667'O);
      311+    1198        %EQU LCPR_OP  = BITBIN('674'O);
      312+    1199        %EQU ERA_OP   = BITBIN('675'O);
      313+    1200        %EQU ERQ_OP   = BITBIN('676'O);
      314+    1201        %EQU ERAQ_OP  = BITBIN('677'O);
      315+    1202        %EQU TSX_OP   = BITBIN('70'O);
      316+    1203        %EQU TSX0_OP  = BITBIN('700'O);
      317+    1204        %EQU TSX1_OP  = BITBIN('701'O);
      318+    1205        %EQU TSX2_OP  = BITBIN('702'O);
      319+    1206        %EQU TSX3_OP  = BITBIN('703'O);
      320+    1207        %EQU TSX4_OP  = BITBIN('704'O);
      321+    1208        %EQU TSX5_OP  = BITBIN('705'O);
      322+    1209        %EQU TSX6_OP  = BITBIN('706'O);
      323+    1210        %EQU TSX7_OP  = BITBIN('707'O);
      324+    1211        %EQU TRA_OP   = BITBIN('710'O);
      325+    1212        %EQU TSS_OP   = BITBIN('715'O);
      326+    1213        %EQU XEC_OP   = BITBIN('716'O);
      327+    1214        %EQU XED_OP   = BITBIN('717'O);
      328+    1215        %EQU LXL_OP   = BITBIN('72'O);
      329+    1216        %EQU LXL0_OP  = BITBIN('720'O);
      330+    1217        %EQU LXL1_OP  = BITBIN('721'O);
      331+    1218        %EQU LXL2_OP  = BITBIN('722'O);
      332+    1219        %EQU LXL3_OP  = BITBIN('723'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:40   
      333+    1220        %EQU LXL4_OP  = BITBIN('724'O);
      334+    1221        %EQU LXL5_OP  = BITBIN('725'O);
      335+    1222        %EQU LXL6_OP  = BITBIN('726'O);
      336+    1223        %EQU LXL7_OP  = BITBIN('727'O);
      337+    1224        %EQU ARS_OP   = BITBIN('731'O);
      338+    1225        %EQU QRS_OP   = BITBIN('732'O);
      339+    1226        %EQU LRS_OP   = BITBIN('733'O);
      340+    1227        %EQU ALS_OP   = BITBIN('735'O);
      341+    1228        %EQU QLS_OP   = BITBIN('736'O);
      342+    1229        %EQU LLS_OP   = BITBIN('737'O);
      343+    1230        %EQU STXO_OP  = BITBIN('740'O);
      344+    1231        %EQU STX1_OP  = BITBIN('741'O);
      345+    1232        %EQU STX2_OP  = BITBIN('742'O);
      346+    1233        %EQU STX3_OP  = BITBIN('743'O);
      347+    1234        %EQU STX4_OP  = BITBIN('744'O);
      348+    1235        %EQU STX5_OP  = BITBIN('745'O);
      349+    1236        %EQU STX6_OP  = BITBIN('746'O);
      350+    1237        %EQU STX7_OP  = BITBIN('747'O);
      351+    1238        %EQU STC2_OP  = BITBIN('750'O);
      352+    1239        %EQU STCA_OP  = BITBIN('751'O);
      353+    1240        %EQU STCQ_OP  = BITBIN('752'O);
      354+    1241        %EQU SREG_OP  = BITBIN('753'O);
      355+    1242        %EQU STI_OP   = BITBIN('754'O);
      356+    1243        %EQU STA_OP   = BITBIN('755'O);
      357+    1244        %EQU STQ_OP   = BITBIN('756'O);
      358+    1245        %EQU STAQ_OP  = BITBIN('757'O);
      359+    1246        %EQU ARL_OP   = BITBIN('771'O);
      360+    1247        %EQU QRL_OP   = BITBIN('772'O);
      361+    1248        %EQU LRL_OP   = BITBIN('773'O);
      362+    1249        %EQU GTB_OP   = BITBIN('774'O);
      363+    1250        %EQU ALR_OP   = BITBIN('775'O);
      364+    1251        %EQU QLR_OP   = BITBIN('776'O);
      365+    1252        %EQU LLR_OP   = BITBIN('777'O);
      366+    1253
      367+    1254        /*/   E I S  Opcodes   /*/
      368+    1255
      369+    1256        %EQU MVE_OP   = BITBIN('020'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:41   
      370+    1257        %EQU MVNE_OP  = BITBIN('024'O);
      371+    1258        %EQU CSL_OP   = BITBIN('060'O);
      372+    1259        %EQU CSR_OP   = BITBIN('061'O);
      373+    1260        %EQU SZTL_OP  = BITBIN('064'O);
      374+    1261        %EQU SZTR_OP  = BITBIN('065'O);
      375+    1262        %EQU CMPB_OP  = BITBIN('066'O);
      376+    1263        %EQU MLR_OP   = BITBIN('100'O);
      377+    1264        %EQU MRL_OP   = BITBIN('101'O);
      378+    1265        %EQU CMPC_OP  = BITBIN('106'O);
      379+    1266        %EQU SCD_OP   = BITBIN('120'O);
      380+    1267        %EQU SCDR_OP  = BITBIN('121'O);
      381+    1268        %EQU SCM_OP   = BITBIN('124'O);
      382+    1269        %EQU SCMR_OP  = BITBIN('125'O);
      383+    1270        %EQU MVT_OP   = BITBIN('160'O);
      384+    1271        %EQU TCT_OP   = BITBIN('164'O);
      385+    1272        %EQU TCTR_OP  = BITBIN('165'O);
      386+    1273        %EQU AD2D_OP  = BITBIN('202'O);
      387+    1274        %EQU SB2D_OP  = BITBIN('203'O);
      388+    1275        %EQU MP2D_OP  = BITBIN('206'O);
      389+    1276        %EQU DV2D_OP  = BITBIN('207'O);
      390+    1277        %EQU AD3D_OP  = BITBIN('222'O);
      391+    1278        %EQU SB3D_OP  = BITBIN('223'O);
      392+    1279        %EQU MP3D_OP  = BITBIN('226'O);
      393+    1280        %EQU DV3D_OP  = BITBIN('227'O);
      394+    1281        %EQU AD2DX_OP = BITBIN('242'O);
      395+    1282        %EQU SB2DX_OP = BITBIN('243'O);
      396+    1283        %EQU MP2DX_OP = BITBIN('246'O);
      397+    1284        %EQU DV2DX_OP = BITBIN('247'O);
      398+    1285        %EQU AD3DX_OP = BITBIN('262'O);
      399+    1286        %EQU SB3DX_OP = BITBIN('263'O);
      400+    1287        %EQU MP3DX_OP = BITBIN('266'O);
      401+    1288        %EQU DV3DX_OP = BITBIN('267'O);
      402+    1289        %EQU MVN_OP   = BITBIN('300'O);
      403+    1290        %EQU MVNX_OP  = BITBIN('340'O);
      404+    1291        %EQU BTD_OP   = BITBIN('301'O);
      405+    1292        %EQU CMPN_OP  = BITBIN('303'O);
      406+    1293        %EQU CMPNX_OP = BITBIN('343'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:42   
      407+    1294        %EQU DTB_OP   = BITBIN('305'O);
      408+    1295        %EQU MTR_OP   = BITBIN('361'O);
      409+    1296        %EQU MTM_OP   = BITBIN('365'O);
      410+    1297        %EQU SAREG_OP = BITBIN('443'O);
      411+    1298        %EQU SPL_OP   = BITBIN('447'O);
      412+    1299        %EQU STP0_OP  = BITBIN('450'O);
      413+    1300        %EQU STP1_OP  = BITBIN('451'O);
      414+    1301        %EQU STP2_OP  = BITBIN('452'O);
      415+    1302        %EQU STP3_OP  = BITBIN('453'O);
      416+    1303        %EQU STP4_OP  = BITBIN('454'O);
      417+    1304        %EQU STP5_OP  = BITBIN('455'O);
      418+    1305        %EQU STP6_OP  = BITBIN('456'O);
      419+    1306        %EQU STP7_OP  = BITBIN('457'O);
      420+    1307        %EQU LAREG_OP = BITBIN('463'O);
      421+    1308        %EQU LPL_OP   = BITBIN('467'O);
      422+    1309        %EQU LDP0_OP  = BITBIN('470'O);
      423+    1310        %EQU LDP1_OP  = BITBIN('471'O);
      424+    1311        %EQU LDP2_OP  = BITBIN('472'O);
      425+    1312        %EQU LDP3_OP  = BITBIN('473'O);
      426+    1313        %EQU LDP4_OP  = BITBIN('474'O);
      427+    1314        %EQU LDP5_OP  = BITBIN('475'O);
      428+    1315        %EQU LDP6_OP  = BITBIN('476'O);
      429+    1316        %EQU LDP7_OP  = BITBIN('477'O);
      430+    1317        %EQU A9BD_OP  = BITBIN('500'O);
      431+    1318        %EQU A6BD_OP  = BITBIN('501'O);
      432+    1319        %EQU A4BD_OP  = BITBIN('502'O);
      433+    1320        %EQU ABD_OP   = BITBIN('503'O);
      434+    1321        %EQU AWD_OP   = BITBIN('507'O);
      435+    1322        %EQU S9BD_OP  = BITBIN('520'O);
      436+    1323        %EQU S6BD_OP  = BITBIN('521'O);
      437+    1324        %EQU S4BD_OP  = BITBIN('522'O);
      438+    1325        %EQU SBD_OP   = BITBIN('523'O);
      439+    1326        %EQU SWD_OP   = BITBIN('527'O);
      440+    1327        %EQU ARA0_OP  = BITBIN('540'O);
      441+    1328        %EQU ARA1_OP  = BITBIN('541'O);
      442+    1329        %EQU ARA2_OP  = BITBIN('542'O);
      443+    1330        %EQU ARA3_OP  = BITBIN('543'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:43   
      444+    1331        %EQU ARA4_OP  = BITBIN('544'O);
      445+    1332        %EQU ARA5_OP  = BITBIN('545'O);
      446+    1333        %EQU ARA6_OP  = BITBIN('546'O);
      447+    1334        %EQU ARA7_OP  = BITBIN('547'O);
      448+    1335        %EQU AAR0_OP  = BITBIN('560'O);
      449+    1336        %EQU AAR1_OP  = BITBIN('561'O);
      450+    1337        %EQU AAR2_OP  = BITBIN('562'O);
      451+    1338        %EQU AAR3_OP  = BITBIN('563'O);
      452+    1339        %EQU AAR4_OP  = BITBIN('564'O);
      453+    1340        %EQU AAR5_OP  = BITBIN('565'O);
      454+    1341        %EQU AAR6_OP  = BITBIN('566'O);
      455+    1342        %EQU AAR7_OP  = BITBIN('567'O);
      456+    1343        %EQU TRTN_OP  = BITBIN('600'O);
      457+    1344        %EQU TRTF_OP  = BITBIN('601'O);
      458+    1345        %EQU TMOZ_OP  = BITBIN('604'O);
      459+    1346        %EQU TPNZ_OP  = BITBIN('605'O);
      460+    1347        %EQU TTN_OP   = BITBIN('606'O);
      461+    1348        %EQU EPPR_OP  = BITBIN('63'O);
      462+    1349        %EQU EPPR0_OP = BITBIN('630'O);
      463+    1350        %EQU EPPR1_OP = BITBIN('631'O);
      464+    1351        %EQU EPPR2_OP = BITBIN('632'O);
      465+    1352        %EQU EPPR3_OP = BITBIN('633'O);
      466+    1353        %EQU EPPR4_OP = BITBIN('634'O);
      467+    1354        %EQU EPPR5_OP = BITBIN('635'O);
      468+    1355        %EQU EPPR6_OP = BITBIN('636'O);
      469+    1356        %EQU EPPR7_OP = BITBIN('637'O);
      470+    1357        %EQU ARN0_OP  = BITBIN('640'O);
      471+    1358        %EQU ARN1_OP  = BITBIN('641'O);
      472+    1359        %EQU ARN2_OP  = BITBIN('642'O);
      473+    1360        %EQU ARN3_OP  = BITBIN('643'O);
      474+    1361        %EQU ARN4_OP  = BITBIN('644'O);
      475+    1362        %EQU ARN5_OP  = BITBIN('645'O);
      476+    1363        %EQU ARN6_OP  = BITBIN('646'O);
      477+    1364        %EQU ARN7_OP  = BITBIN('647'O);
      478+    1365        %EQU NAR0_OP  = BITBIN('660'O);
      479+    1366        %EQU NAR1_OP  = BITBIN('661'O);
      480+    1367        %EQU NAR2_OP  = BITBIN('662'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:44   
      481+    1368        %EQU NAR3_OP  = BITBIN('663'O);
      482+    1369        %EQU NAR4_OP  = BITBIN('664'O);
      483+    1370        %EQU NAR5_OP  = BITBIN('665'O);
      484+    1371        %EQU NAR6_OP  = BITBIN('666'O);
      485+    1372        %EQU NAR7_OP  = BITBIN('667'O);
      486+    1373        %EQU SAR0_OP  = BITBIN('740'O);
      487+    1374        %EQU SAR1_OP  = BITBIN('741'O);
      488+    1375        %EQU SAR2_OP  = BITBIN('742'O);
      489+    1376        %EQU SAR3_OP  = BITBIN('743'O);
      490+    1377        %EQU SAR4_OP  = BITBIN('744'O);
      491+    1378        %EQU SAR5_OP  = BITBIN('745'O);
      492+    1379        %EQU SAR6_OP  = BITBIN('746'O);
      493+    1380        %EQU SAR7_OP  = BITBIN('747'O);
      494+    1381        %EQU LAR0_OP  = BITBIN('760'O);
      495+    1382        %EQU LAR1_OP  = BITBIN('761'O);
      496+    1383        %EQU LAR2_OP  = BITBIN('762'O);
      497+    1384        %EQU LAR3_OP  = BITBIN('763'O);
      498+    1385        %EQU LAR4_OP  = BITBIN('764'O);
      499+    1386        %EQU LAR5_OP  = BITBIN('765'O);
      500+    1387        %EQU LAR6_OP  = BITBIN('766'O);
      501+    1388        %EQU LAR7_OP  = BITBIN('767'O);
      502+    1389        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:45   
      395     1390             %INCLUDE Z8H_PASSES;
        1+    1391        /*T***********************************************************/
        2+    1392        /*T*                                                         */
        3+    1393        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    1394        /*T*                                                         */
        5+    1395        /*T***********************************************************/
        6+    1396             %EQU FIRST_PASS = 0;
        7+    1397             %EQU SECOND_PASS = FIRST_PASS + 1;
        8+    1398             %EQU THIRD_PASS = SECOND_PASS + 1;
        9+    1399             %EQU FOURTH_PASS = THIRD_PASS + 1;
       10+    1400
       11+    1401        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:46   
      396     1402             %INCLUDE Z8H_PCOM;
        1+    1403        /*T***********************************************************/
        2+    1404        /*T*                                                         */
        3+    1405        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    1406        /*T*                                                         */
        5+    1407        /*T***********************************************************/
        6+    1408        /*
        7+    1409             Z8H_PCOM
        8+    1410
        9+    1411            This include file contains declarations of structures
       10+    1412        used to communicate information between pseudo-code and
       11+    1413        pseudo-code support routines.  The major structure is
       12+    1414        PCOM.  It is in automatic storage, so that each level
       13+    1415        of the tree walk throught the IL has its own set of
       14+    1416        scratch variables.  PCOM has both absolute and pointer
       15+    1417        components.  SUPP_DATA is ORed onto every instruction
       16+    1418        emitted by the GENI directive, so it can be used to
       17+    1419        modify instructions in pseudo-code.
       18+    1420        */
       19+    1421    1        DCL 1 PCOM,
       20+    1422    1               2 AABS SBIN WORD UNAL,
       21+    1423    1               2 BABS SBIN WORD UNAL,
       22+    1424    1               2 CABS SBIN WORD UNAL,
       23+    1425    1               2 DABS SBIN WORD UNAL,
       24+    1426    1               2 EABS SBIN WORD UNAL,
       25+    1427    1               2 FABS SBIN WORD UNAL,
       26+    1428    1               2 GABS SBIN WORD UNAL,
       27+    1429    1               2 CHAR_GABS REDEF GABS CHAR(4) UNAL,
       28+    1430    1               2 HALVED_GABS REDEF GABS,
       29+    1431    1                  3 UPPER SBIN HALF UNAL,
       30+    1432    1                  3 LOWER SBIN HALF UNAL,
       31+    1433    1               2 HABS SBIN WORD UNAL,
       32+    1434    1               2 IABS SBIN WORD UNAL,
       33+    1435    1               2 JABS SBIN WORD UNAL,
       34+    1436    1               2 KABS SBIN WORD UNAL,
       35+    1437    1               2 LABS SBIN WORD UNAL,
       36+    1438    1               2 MABS SBIN WORD UNAL,
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:47   
       37+    1439    1               2 NABS SBIN WORD UNAL,
       38+    1440    1               2 OABS SBIN WORD UNAL,
       39+    1441    1               2 PABS SBIN WORD UNAL,
       40+    1442    1               2 QABS SBIN WORD UNAL,
       41+    1443    1               2 RABS SBIN WORD UNAL,
       42+    1444    1               2 SABS SBIN WORD UNAL,
       43+    1445    1               2 TABS SBIN WORD UNAL,
       44+    1446    1               2 UABS SBIN WORD UNAL,
       45+    1447    1               2 VABS SBIN WORD UNAL,
       46+    1448    1               2 WABS SBIN WORD UNAL,
       47+    1449    1               2 XABS SBIN WORD UNAL,
       48+    1450    1               2 YABS SBIN WORD UNAL,
       49+    1451    1               2 ZABS SBIN WORD UNAL,
       50+    1452
       51+    1453    1               2 *(0:3) PTR,
       52+    1454    1               2 EOPND PTR,
       53+    1455    1               2 FOPND PTR,
       54+    1456    1               2 GOPND PTR,
       55+    1457    1               2 HOPND PTR,
       56+    1458    1               2 IOPND PTR,
       57+    1459    1               2 JOPND PTR,
       58+    1460    1               2 KOPND PTR,
       59+    1461    1               2 LOPND PTR,
       60+    1462    1               2 MOPND PTR,
       61+    1463    1               2 NOPND PTR,
       62+    1464    1               2 OOPND PTR,
       63+    1465    1               2 POPND PTR,
       64+    1466    1               2 QOPND PTR,
       65+    1467    1               2 ROPND PTR,
       66+    1468    1               2 SOPND PTR,
       67+    1469    1               2 TOPND PTR,
       68+    1470    1               2 UOPND PTR,
       69+    1471    1               2 VOPND PTR,
       70+    1472    1               2 WOPND PTR,
       71+    1473    1               2 XOPND PTR,
       72+    1474    1               2 YOPND PTR,
       73+    1475    1               2 ZOPND PTR;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:48   
       74+    1476
       75+    1477    1        DCL 1 PCOM_ REDEF PCOM,
       76+    1478    1               2 ABS(0:25) UBIN WORD UNAL,
       77+    1479    1               2 OPND(0:25) PTR;
       78+    1480
       79+    1481
       80+    1482
       81+    1483    1        DCL 1 SUPP_DATA EXT,
       82+    1484    1               2 WRD SBIN WORD UNAL INIT(0),
       83+    1485    1               2 CHR REDEF WRD CHAR(4) UNAL,
       84+    1486    1               2 INST REDEF WRD,
       85+    1487    1                  3 SA UBIN(18) UNAL,
       86+    1488    1                  3 Y REDEF SA,
       87+    1489    1                     4 ARF UBIN(3) UNAL,
       88+    1490    1                     4 SA  UBIN(15) UNAL,
       89+    1491    1                  3 OP_CODE UBIN(9) UNAL,
       90+    1492    1                  3 EIS BOOLEAN,
       91+    1493    1                  3 * BIT(1) UNAL,
       92+    1494    1                  3 MF,
       93+    1495    1                     4 AR BOOLEAN,
       94+    1496    1                     4 RL BOOLEAN,
       95+    1497    1                     4 ID BOOLEAN,
       96+    1498    1                     4 TAG UBIN(4) UNAL;
       97+    1499
       98+    1500        %EQU PCOM   =     001;
       99+    1501        %EQU AABS   =     000;
      100+    1502        %EQU BABS   =     001;
      101+    1503        %EQU CABS   =     002;
      102+    1504        %EQU DABS   =     003;
      103+    1505        %EQU EABS   =     004;
      104+    1506        %EQU FABS   =     005;
      105+    1507        %EQU GABS   =     006;
      106+    1508        %EQU HABS   =     007;
      107+    1509        %EQU IABS   =     008;
      108+    1510        %EQU JABS   =     009;
      109+    1511        %EQU KABS   =     010;
      110+    1512        %EQU LABS   =     011;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:49   
      111+    1513        %EQU MABS   =     012;
      112+    1514        %EQU NABS   =     013;
      113+    1515        %EQU OABS   =     014;
      114+    1516        %EQU PABS   =     015;
      115+    1517        %EQU QABS   =     016;
      116+    1518        %EQU RABS   =     017;
      117+    1519        %EQU SABS   =     018;
      118+    1520        %EQU TABS   =     019;
      119+    1521        %EQU UABS   =     020;
      120+    1522        %EQU VABS   =     021;
      121+    1523        %EQU WABS   =     022;
      122+    1524        %EQU XABS   =     023;
      123+    1525        %EQU YABS   =     024;
      124+    1526        %EQU ZABS   =     025;
      125+    1527
      126+    1528        %EQU EOPND  =     004;
      127+    1529        %EQU FOPND  =     005;
      128+    1530        %EQU GOPND  =     006;
      129+    1531        %EQU HOPND  =     007;
      130+    1532        %EQU IOPND  =     008;
      131+    1533        %EQU JOPND  =     009;
      132+    1534        %EQU KOPND  =     010;
      133+    1535        %EQU LOPND  =     011;
      134+    1536        %EQU MOPND  =     012;
      135+    1537        %EQU NOPND  =     013;
      136+    1538        %EQU OOPND  =     014;
      137+    1539        %EQU POPND  =     015;
      138+    1540        %EQU QOPND  =     016;
      139+    1541        %EQU ROPND  =     017;
      140+    1542        %EQU SOPND  =     018;
      141+    1543        %EQU TOPND  =     019;
      142+    1544        %EQU UOPND  =     020;
      143+    1545        %EQU VOPND  =     021;
      144+    1546        %EQU WOPND  =     022;
      145+    1547        %EQU XOPND  =     023;
      146+    1548        %EQU YOPND  =     024;
      147+    1549        %EQU ZOPND  =     025;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:50   
      148+    1550        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:51   
      397     1551             %INCLUDE Z8H_RAT;
        1+    1552        /*T***********************************************************/
        2+    1553        /*T*                                                         */
        3+    1554        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    1555        /*T*                                                         */
        5+    1556        /*T***********************************************************/
        6+    1557        /*
        7+    1558                  Z8H_RAT
        8+    1559
        9+    1560             This include file contains the declaration for the
       10+    1561        register assignment table(RAT) and it contains the EQUs that
       11+    1562        define constants used when refering to registers,
       12+    1563        register states and assignment types.
       13+    1564        */
       14+    1565    1        DCL 1 RAT(0:27) EXT,
       15+    1566    1               2 PRIMES PTR INIT(ADDR(NIL)*28),
       16+    1567    1               2 B,
       17+    1568    1                  3 * BOOLEAN INIT(FALSE*28),
       18+    1569    1                  3 GREATER_256K BOOLEAN INIT(FALSE*28),
       19+    1570    1                  3 FAVORED BOOLEAN INIT(FALSE*28),
       20+    1571    1                  3 DIRTY_ARQ BOOLEAN INIT(FALSE*28),
       21+    1572    1                  3 * BIT(14) UNAL INIT(FALSE*28),
       22+    1573    1               2 AWAITING SBIN HALF UNAL INIT(0*28),
       23+    1574    1               2 COUNT SBIN WORD UNAL INIT(0*28),
       24+    1575    1               2 CLASS SBIN WORD UNAL INIT(0*28);
       25+    1576
       26+    1577
       27+    1578
       28+    1579
       29+    1580    1        DCL REGID UBIN WORD AUTO;
       30+    1581    1        DCL LAST_USED UBIN WORD AUTO;
       31+    1582    1        DCL LAST_FREED UBIN WORD AUTO;
       32+    1583
       33+    1584    1        DCL AORQ BOOLEAN AUTO;
       34+    1585
       35+    1586        %EQU PR0    =     20;
       36+    1587        %EQU PR1    =     21;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:52   
       37+    1588        %EQU PR2    =     22;
       38+    1589        %EQU PR3    =     23;
       39+    1590        %EQU PR4    =     24;
       40+    1591        %EQU PR5    =     25;
       41+    1592        %EQU PR6    =     26;
       42+    1593        %EQU PR7    =     27;
       43+    1594        %EQU PR     =     28;
       44+    1595        %EQU ARLOP  =     31;
       45+    1596        %EQU XRLOP  =     32;
       46+    1597        %EQU PRLOP  =     33;
       47+    1598        %EQU ARROP  =     34;
       48+    1599        %EQU XRROP  =     35;
       49+    1600        %EQU PRROP  =     36;
       50+    1601        %EQU ARSTAR = 37;
       51+    1602        %EQU XRSTAR = 38;
       52+    1603        %EQU PRSTAR = 39;
       53+    1604        %EQU XRIOPND = 40; /*#37128*/
       54+    1605        %EQU XRROPND = 41;
       55+    1606        %EQU ARTO   =     42;
       56+    1607        %EQU XR0    =     8 ;
       57+    1608        %EQU XR1    =     9 ;
       58+    1609        %EQU XR2    =     10;
       59+    1610        %EQU XR3    =     11;
       60+    1611        %EQU XR4    =     12;
       61+    1612        %EQU XR5    =     13;
       62+    1613        %EQU XR6    =     14;
       63+    1614        %EQU XR7    =     15;
       64+    1615        %EQU XR     =     16;
       65+    1616        %EQU AR     =     4 ;
       66+    1617        %EQU IND    =     3 ;
       67+    1618        %EQU ARA    =     5 ;
       68+    1619        %EQU ARQ    =     6 ;
       69+    1620        %EQU ARAQ   =     7 ;
       70+    1621        %EQU AREA   =     17;
       71+    1622        %EQU AREAQ  =     18;
       72+    1623        %EQU ALLREGS =    43;
       73+    1624        %EQU DEMAND =     0 ;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:53   
       74+    1625        %EQU GLOBAL =     1 ;
       75+    1626        %EQU DEDIC  =     2 ;
       76+    1627        %EQU FREE   =     26;
       77+    1628        %EQU USED   =     27;
       78+    1629        %EQU FREEAR = 26;
       79+    1630        %EQU FREEXR = 27;
       80+    1631        %EQU FREEPR = 28;
       81+    1632        %EQU PGLOBL =     7 ;
       82+    1633        %EQU PRPOPND = 27;
       83+    1634        %EQU PROOPND = 26;
       84+    1635        %EQU PRNOPND = 25;
       85+    1636        %EQU PRQOPND = 24;
       86+    1637        %EQU PRMOPND = 23;
       87+    1638        %EQU ARROPND = 44;
       88+    1639        %EQU PRTO    = 45;
       89+    1640        %EQU XRTO    = 46;
       90+    1641        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:54   
      398     1642             %INCLUDE Z9A_FLAGS;
        1+    1643        /*M* EXC_FLAGS - CHOOSE CP-6 MODE FOR COMPILATIONS. */
        2+    1644        /*T***********************************************************/
        3+    1645        /*T*                                                         */
        4+    1646        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+    1647        /*T*                                                         */
        6+    1648        /*T***********************************************************/
        7+    1649
        8+    1650        /*X* DDA */
        9+    1651
       10+    1652        %EQU GCOS='0'B;
       11+    1653        %EQU CP6='1'B;
       12+    1654        %EQU STACK_HEADER_SIZE=3;
       13+    1655        %EQU EASEE='0'B;
      399     1656             %INCLUDE Z8H_SUPPORT;
        1+    1657        /*T***********************************************************/
        2+    1658        /*T*                                                         */
        3+    1659        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    1660        /*T*                                                         */
        5+    1661        /*T***********************************************************/
        6+    1662        /*
        7+    1663             Z8H_SUPPORT
        8+    1664
        9+    1665            This include file contains definitions of macros
       10+    1666        used by phase 4. It also contains some EQUs for common
       11+    1667        constants.
       12+    1668        */
       13+    1669        %MACRO LOP_ROP_TO(RESULT=OPND,OP=PC.OPND1,TRIAD=PILL);
       14+    1670
       15+    1671             DO CASE(OP);
       16+    1672
       17+    1673               CASE(0);
       18+    1674                 RESULT = TRIAD;
       19+    1675               CASE(%LOP);
       20+    1676                 RESULT = TRIAD -> ILL.LOP;
       21+    1677               CASE(%ROP);
       22+    1678                 RESULT = TRIAD -> ILL.ROP;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:55   
       23+    1679               CASE(%TO);
       24+    1680                 RESULT = TRIAD -> ILL.TO_;
       25+    1681               CASE(ELSE);
       26+    1682                 RESULT = PCOM_.OPND(OP);
       27+    1683             END /* Case */;
       28+    1684
       29+    1685        %MEND;
       30+    1686
       31+    1687
       32+    1688
       33+    1689        %MACRO SWITCH_RAT_INFO(@FROM=,@TO=);
       34+    1690
       35+    1691             DO;
       36+    1692               CALL Z8HG$FREE_REGISTER(BINBIT(@TO,36));
       37+    1693               I = @FROM;
       38+    1694               IF I ~= %UNEVAL_T THEN
       39+    1695                 DO;
       40+    1696                   RAT(@TO) = RAT(I);
       41+    1697
       42+    1698                   P$ = RAT.PRIMES(I);
       43+    1699
       44+    1700                   DO UNTIL(P$ = ADDR(NIL));
       45+    1701                     P$ -> PRIME.TRIAD -> ETT.STATE = @TO;
       46+    1702                     P$ = P$ -> PRIME.NEXT;
       47+    1703                   END;
       48+    1704
       49+    1705                   RAT.PRIMES(I) = ADDR(NIL);
       50+    1706                   RAT.AWAITING(I) = 0;
       51+    1707                   RAT.COUNT(I) = 0;
       52+    1708                   RAT.B(I) = '0'O;
       53+    1709
       54+    1710                 END;
       55+    1711             END;
       56+    1712
       57+    1713        %MEND;
       58+    1714
       59+    1715
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:56   
       60+    1716
       61+    1717        %MACRO STORAGE_CHECK(THE_STATE=,TRIAD=);
       62+    1718
       63+    1719             IF  PILL -> ETT.ID ~= %SSOP  /*#28637*/
       64+    1720             AND PILL -> ETT.ID ~= %SIZ
       65+    1721             AND PILL -> ETT.ID ~= %REFMOD THEN
       66+    1722               IF THE_STATE = 2 /*/ XR /*/ THEN
       67+    1723                 IF TRIAD -> ETT.REF$ ~= ADDR(NIL) THEN
       68+    1724                   DO;
       69+    1725                     CALL Z8HG$FREE_REGISTER(BINBIT(TRIAD -> ETT.STATE,36));
       70+    1726                     THE_STATE = 3; /*/ ST /*/
       71+    1727                   END;
       72+    1728
       73+    1729        %MEND;
       74+    1730
       75+    1731
       76+    1732
       77+    1733        %MACRO ABSOLUTE_SA(TRIAD=, RTN=);
       78+    1734
       79+    1735             DO;
       80+    1736               P$ = TRIAD -> ETT.REF$;
       81+    1737
       82+    1738               %IF USING_HALF_WORD_RELOCATION;
       83+    1739                 /* REF.SA  is THE absolute SA */
       84+    1740                 RTN = P$ -> REF.SA;
       85+    1741               %ELSE;
       86+    1742                 RTN = P$ -> REF.SA + P$ -> REF.ST$ -> ST.SA / %#16K * %#16K;
       87+    1743               %ENDIF;
       88+    1744             END;
       89+    1745
       90+    1746        %MEND;
       91+    1747
       92+    1748
       93+    1749
       94+    1750        %MACRO IMPLIED_REF(REF$=REF$, CNT=);
       95+    1751
       96+    1752        DO;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:57   
       97+    1753          IF REF$ -> REF.SSOP_TAG$ ~= ADDR(NIL) THEN
       98+    1754            CALL Z8HU$INCCNT(REF$ -> REF.SSOP_TAG$, BINBIT(CNT, 36));
       99+    1755
      100+    1756          IF REF$ -> REF.SIZ_TAG$ ~= ADDR(NIL) THEN
      101+    1757            CALL Z8HU$INCCNT(REF$ -> REF.SIZ_TAG$, BINBIT(CNT, 36));
      102+    1758
      103+    1759          IF REF$ -> REF.ST$ -> ST.ID = %TEMP THEN
      104+    1760            REF$ -> REF.ST$ -> TEMP.REFERENCES = REF$ -> REF.ST$ -> TEMP.REFERENCES
      105+    1761                                               + CNT;
      106+    1762          ELSE
      107+    1763            IF REF$ -> REF.PR_TAG$ ~= ADDR(NIL) THEN
      108+    1764              CALL Z8HU$INCCNT(REF$ -> REF.PR_TAG$, BINBIT(CNT, 36));
      109+    1765        END;
      110+    1766
      111+    1767        %MEND;
      112+    1768
      113+    1769
      114+    1770
      115+    1771        %MACRO WALK_LOP_ROP;
      116+    1772
      117+    1773             IF PILL -> ETT.LOP -> ETT.ID <= %LAST_REFERENCE_TRIAD
      118+    1774             AND PILL -> ETT.ROP -> ETT.ID > %LAST_REFERENCE_TRIAD THEN
      119+    1775               DO;
      120+    1776                 CALL Z8HU$WALK(PILL -> ETT.ROP);
      121+    1777                 CALL Z8HU$WALK(PILL -> ETT.LOP);
      122+    1778               END;
      123+    1779             ELSE
      124+    1780               DO;
      125+    1781                 CALL Z8HU$WALK(PILL -> ETT.LOP);
      126+    1782                 CALL Z8HU$WALK(PILL -> ETT.ROP);
      127+    1783                 /* It is possible that the LOP might not be evaluated
      128+    1784                    any more. */
      129+    1785                 CALL Z8HU$WALK(PILL -> ETT.LOP);
      130+    1786               END;
      131+    1787
      132+    1788        %MEND;
      133+    1789
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:58   
      134+    1790
      135+    1791
      136+    1792        %MACRO #OFF# ( @FROM = ,
      137+    1793                       @TO   = ,
      138+    1794                       @VALUE= ,
      139+    1795                       @TYPE = );
      140+    1796
      141+    1797             DO;
      142+    1798               %NEW_ETT( @ID     = %OFF, @POINTER = @TO ,
      143+    1799                         @LOP    = @FROM ,
      144+    1800                         @POOLABLE = YES );
      145+    1801
      146+    1802               @TO -> ETT.OFFSET.VALUE = @VALUE;
      147+    1803               @TO -> ETT.OFFSET.TYPE = @TYPE;
      148+    1804
      149+    1805               CALL Z8HU$INCCNT(@FROM,1);
      150+    1806               CALL Z8HU$WALK(@TO);
      151+    1807             END;
      152+    1808
      153+    1809        %MEND;
      154+    1810
      155+    1811
      156+    1812
      157+    1813        %MACRO #DNA# ( @FROM = ,
      158+    1814                       @TO   = );
      159+    1815
      160+    1816             DO;
      161+    1817               J  = @FROM -> ETT.REF$ -> REF.NDSC.N;
      162+    1818
      163+    1819               %NEW_ETT( @ID      = %DNA, @POINTER = @TO ,
      164+    1820                         @LOP     = @FROM ,
      165+    1821                         @ROPCON  = J,
      166+    1822                         @POOLABLE= YES );
      167+    1823
      168+    1824               CALL Z8HU$INCCNT(@FROM,1);
      169+    1825               CALL Z8HU$WALK(@TO);
      170+    1826
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:59   
      171+    1827               IF @FROM -> ETT.REF$ -> REF.NDSC.TN = %NDSC4 AND
      172+    1828                   @FROM -> ETT.REF$ -> REF.ST$ -> VARIABLE.TYPE ~= %TYF THEN
      173+    1829                 @TO -> ETT.REF$ -> REF.ADSC.TA = %ADSC4;
      174+    1830               ELSE
      175+    1831                 @TO -> ETT.REF$ -> REF.ADSC.TA = %ADSC9;
      176+    1832             END;
      177+    1833
      178+    1834        %MEND;
      179+    1835
      180+    1836
      181+    1837
      182+    1838        %MACRO #DAN# ( @FROM = ,
      183+    1839                       @TO   = );
      184+    1840
      185+    1841             DO;
      186+    1842               %NEW_ETT( @ID       = %DAN, @POINTER = @TO ,
      187+    1843                         @LOP      = @FROM ,
      188+    1844                         @POOLABLE = YES );
      189+    1845
      190+    1846               CALL Z8HU$INCCNT(@FROM,1);
      191+    1847               CALL Z8HU$WALK(@TO);
      192+    1848             END;
      193+    1849
      194+    1850        %MEND;
      195+    1851
      196+    1852
      197+    1853
      198+    1854        %MACRO #DESC#_ADSC ( @FROM  = ,
      199+    1855                             @TO    = ,
      200+    1856                             @TA    = ,
      201+    1857                             @LENGTH= ,
      202+    1858                             @CN    = );
      203+    1859
      204+    1860             DO;
      205+    1861               %NEW_ETT( @ID       = %DESC, @POINTER = @TO ,
      206+    1862                         @LOP      = @FROM ,
      207+    1863                         @POOLABLE = YES );
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:60   
      208+    1864
      209+    1865               @TO -> ETT.DESC.SA = @FROM -> ETT.REF$ -> REF.SA;
      210+    1866
      211+    1867
      212+    1868               %LSET TEMP@@@ =  CHARTEXT(CONCAT(TEXTCHAR(@FROM), '-> ETT.REF$ -> REF'));
      213+    1869
      214+    1870               %UNPACK_ADSC ( @DESC   = "%TEMP@@@" ,
      215+    1871                              @SA     = SA ,
      216+    1872                              @LENGTH = LENGTH ,
      217+    1873                              @CN     = CN ,
      218+    1874                              @TA     = TA );
      219+    1875
      220+    1876
      221+    1877               %IF (TEXTCHAR(@LENGTH) ~= '');
      222+    1878                 LENGTH = @LENGTH;
      223+    1879               %ENDIF;
      224+    1880
      225+    1881               %IF (TEXTCHAR(@TA) ~= '');
      226+    1882                 TA = @TA;
      227+    1883               %ENDIF;
      228+    1884
      229+    1885               %IF (TEXTCHAR(@CN) ~= '');
      230+    1886                 CN = @CN;
      231+    1887               %ENDIF;
      232+    1888
      233+    1889               %LSET TEMP@@@ = CHARTEXT(CONCAT(TEXTCHAR(@TO),' -> ETT.DESC'));
      234+    1890
      235+    1891
      236+    1892               %PACK_ADSC ( @DESC    = "%TEMP@@@" ,
      237+    1893                            @SA      = SA ,
      238+    1894                            @LENGTH  = LENGTH ,
      239+    1895                            @CN      = CN ,
      240+    1896                            @TA      = TA );
      241+    1897
      242+    1898               CALL Z8HU$INCCNT(@FROM, 1);
      243+    1899               CALL Z8HU$WALK(@TO);
      244+    1900             END;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:61   
      245+    1901
      246+    1902        %MEND;
      247+    1903
      248+    1904
      249+    1905
      250+    1906        %MACRO #DESC#_NDSC ( @FROM  = ,
      251+    1907                             @TO    = ,
      252+    1908                             @LENGTH= ,
      253+    1909                             @CN    = ,
      254+    1910                             @TN    = ,
      255+    1911                             @SCALE = ,
      256+    1912                             @SIGN  = );
      257+    1913
      258+    1914             DO;
      259+    1915               %NEW_ETT ( @ID       = %DESC, @POINTER = @TO ,
      260+    1916                          @LOP      = @FROM ,
      261+    1917                          @POOLABLE = YES );
      262+    1918
      263+    1919               @TO -> ETT.DESC.SA = @FROM -> ETT.REF$ -> REF.SA;
      264+    1920
      265+    1921               %LSET TEMP@@@ = CHARTEXT(CONCAT(TEXTCHAR(@FROM), '->ETT.REF$->REF'));
      266+    1922
      267+    1923               %UNPACK_NDSC ( @DESC    = "%TEMP@@@" ,
      268+    1924                              @SA      = SA ,
      269+    1925                              @LENGTH  = LENGTH ,
      270+    1926                              @CN      = CN ,
      271+    1927                              @TN      = TN ,
      272+    1928                              @SCALE   = SCALE ,
      273+    1929                              @SIGN    = SIGN );
      274+    1930
      275+    1931               %IF (TEXTCHAR(@LENGTH) ~= '');
      276+    1932                 LENGTH = @LENGTH;
      277+    1933               %ENDIF;
      278+    1934
      279+    1935               %IF (TEXTCHAR(@CN) ~= '');
      280+    1936                 CN = @CN;
      281+    1937               %ENDIF;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:62   
      282+    1938
      283+    1939               %IF (TEXTCHAR(@TN) ~= '');
      284+    1940                 TN = @TN;
      285+    1941               %ENDIF;
      286+    1942
      287+    1943               %IF (TEXTCHAR(@SCALE) ~= '');
      288+    1944                 SCALE = @SCALE;
      289+    1945               %ENDIF;
      290+    1946
      291+    1947               %IF (TEXTCHAR(@SIGN) ~= '');
      292+    1948                 SIGN = @SIGN;
      293+    1949               %ENDIF;
      294+    1950
      295+    1951
      296+    1952               %LSET TEMP@@@ = CHARTEXT(CONCAT(TEXTCHAR(@TO),'->ETT.DESC'));
      297+    1953
      298+    1954               %PACK_NDSC ( @DESC   = "%TEMP@@@" ,
      299+    1955                            @SA     = SA ,
      300+    1956                            @LENGTH = LENGTH ,
      301+    1957                            @CN     = CN ,
      302+    1958                            @TN     = TN ,
      303+    1959                            @SCALE  = SCALE ,
      304+    1960                            @SIGN   = SIGN );
      305+    1961
      306+    1962               CALL Z8HU$INCCNT(@FROM, 1);
      307+    1963               CALL Z8HU$WALK(@TO);
      308+    1964             END;
      309+    1965
      310+    1966        %MEND;
      311+    1967
      312+    1968
      313+    1969        %MACRO UNFAVOR;
      314+    1970             DO;
      315+    1971               RAT.B.FAVORED(%ARA) = FALSE;
      316+    1972               RAT.B.FAVORED(%ARQ) = FALSE;
      317+    1973             END;
      318+    1974        %MEND;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:63   
      319+    1975
      320+    1976
      321+    1977
      322+    1978
      323+    1979        %MACRO SWAP_RELATIONAL(OP_CODE=PCOM.XABS);
      324+    1980               DO ;
      325+    1981
      326+    1982                 DO CASE(OP_CODE) ;
      327+    1983
      328+    1984                   CASE(%GO_LESS_THAN_ARITH) ;
      329+    1985                     OP_CODE = %GO_GREATER_THAN_ARITH ;
      330+    1986
      331+    1987                   CASE(%GO_LESS_THAN_ALPHA) ;
      332+    1988                     OP_CODE = %GO_GREATER_THAN_ALPHA ;
      333+    1989
      334+    1990                   CASE(%GO_GREATER_THAN_ARITH) ;
      335+    1991                     OP_CODE = %GO_LESS_THAN_ARITH ;
      336+    1992
      337+    1993                   CASE(%GO_GREATER_THAN_ALPHA) ;
      338+    1994                     OP_CODE = %GO_LESS_THAN_ALPHA ;
      339+    1995
      340+    1996                   CASE(%GO_LESS_THAN_OR_EQUAL_ARITH) ;
      341+    1997                     OP_CODE = %GO_GREATER_THAN_OR_EQUAL_ARITH ;
      342+    1998
      343+    1999                   CASE(%GO_LESS_THAN_OR_EQUAL_ALPHA) ;
      344+    2000                     OP_CODE = %GO_GREATER_THAN_OR_EQUAL_ALPHA ;
      345+    2001
      346+    2002                   CASE(%GO_GREATER_THAN_OR_EQUAL_ARITH) ;
      347+    2003                     OP_CODE = %GO_LESS_THAN_OR_EQUAL_ARITH ;
      348+    2004
      349+    2005                   CASE(%GO_GREATER_THAN_OR_EQUAL_ALPHA) ;
      350+    2006                     OP_CODE = %GO_LESS_THAN_OR_EQUAL_ALPHA ;
      351+    2007
      352+    2008                   CASE(%GO_EQUAL) ;
      353+    2009                     /* No swap needed */
      354+    2010
      355+    2011                   CASE(%GO_NOT_EQUAL) ;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:64   
      356+    2012                     /* No swap needed */
      357+    2013
      358+    2014                 END ;
      359+    2015
      360+    2016               END ;
      361+    2017        %MEND ;
      362+    2018
      363+    2019
      364+    2020        %MACRO CONVERT_DESC_FOR_DPS88;
      365+    2021
      366+    2022             DO;
      367+    2023               IF DEFER_BUFFER.INST_WORD.OP_CODE(0) = %MVT_OP THEN
      368+    2024                 DO;
      369+    2025                   CALL Z8AU$TYPE_DESCRIPTOR (NODE$, TYPE_DESC);
      370+    2026                   /* This is necessary because although the descriptor in the
      371+    2027                      REF item is correct, there is nothing in the REF item
      372+    2028                      that gives any indication of if the string is numeric or
      373+    2029                      non-numeric; if numeric, the scale factor and MBZ2
      374+    2030                      fields must be zeroed out, but otherwise they are OK. One
      375+    2031                      can usually tell be looking at the ST item, yet not
      376+    2032                      always, for there can already have been a type conversion;
      377+    2033                      the LOP of a CVT item can be another CVT item. */
      378+    2034                   DO CASE(ST$$ -> ST.TYPE);
      379+    2035                     CASE(%TYD, %TYO, %TYF);
      380+    2036                       INST_WORD.NDSC.SF = 0;
      381+    2037                       INST_WORD.ADSC.MBZ2 = FALSE;
      382+    2038                       INST_WORD.ADSC.TA = %ADSC9; /* May be needed for %TYF */
      383+    2039
      384+    2040                     CASE(%TYC);
      385+    2041                       INST_WORD.NDSC.SF = 0;
      386+    2042                       INST_WORD.ADSC.MBZ2 = FALSE;
      387+    2043                       INST_WORD.ADSC.TA = %ADSC6;
      388+    2044
      389+    2045                     CASE(%TYB);
      390+    2046                       INST_WORD.ADSC.TA = %ADSC6;
      391+    2047                   END; /* CASE (TYPE) */
      392+    2048                 END; /* MVT */
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:65   
      393+    2049
      394+    2050               ELSE IF COMCOM.OB.ELS   THEN
      395+    2051                 DO CASE (DEFER_BUFFER.INST_WORD.OP_CODE(0));
      396+    2052
      397+    2053                   CASE( %AD2DX_OP, %AD3DX_OP,
      398+    2054                         %SB2DX_OP, %SB3DX_OP,
      399+    2055                         %MP2DX_OP, %MP3DX_OP,
      400+    2056                         %MVNX_OP, %CMPNX_OP,
      401+    2057                         %DV2DX_OP, %DV3DX_OP );
      402+    2058                     IF (ST$$ -> ST.TYPE = %TYO AND ST$$ -> ST.NDSC.TN = %NDSC9) OR
      403+    2059                        (ST$$ -> ST.TYPE = %TYF AND ST$$ -> ST.NDSC.TN = %NDSC4) THEN
      404+    2060                       DO; /* Overpunched operand */
      405+    2061                         INST_WORD.NDSC.TN = %NDSC9; /* Needed if EBCDIC */
      406+    2062                         DO CASE(BITBIN(ST$$ -> ST.NDSC.S));
      407+    2063
      408+    2064                           CASE(%BITBIN(LEADING_SIGN));
      409+    2065                             INST_WORD.NDSC.S = %OVP_LEADING_SIGN;
      410+    2066
      411+    2067                           CASE(%BITBIN(TRAILING_SIGN));
      412+    2068                             INST_WORD.NDSC.S = %OVP_TRAILING_SIGN;
      413+    2069
      414+    2070                           CASE(%BITBIN(FLOATING_POINT_LEADING_SIGN),
      415+    2071                                %BITBIN(NO_SIGN));
      416+    2072                             CALL Z8AE$ERROR(%E$UNEXPECTED_CASE);
      417+    2073                         END; /*CASE (TYPE)*/
      418+    2074                       END;
      419+    2075                   CASE(ELSE);
      420+    2076                     /* NULL */
      421+    2077                 END; /*CASE (OP_CODE)*/
      422+    2078             END;
      423+    2079        %MEND;
      424+    2080
      425+    2081
      426+    2082        %EQU UNEVAL_T = 000;
      427+    2083        %EQU REF_T    = 004;
      428+    2084        %EQU USING_HALF_WORD_RELOCATION = '1'B;
      429+    2085
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:66   
      430+    2086        %IF CP6;
      431+    2087
      432+    2088         %EQU STACK_HEADER = 1;
      433+    2089
      434+    2090        %ELSE;
      438+    2094        %ENDIF;
      439+    2095
      440+    2096        %EQU HALF_WORD_REL = 0;
      441+    2097        %EQU LDP      = 2;
      442+    2098        %EQU ON_ESC_LIST = 1;
      443+    2099        %EQU NOT_ON_ESC_LIST = 3;
      444+    2100        %EQU LIB_CALL = 4;
      445+    2101        %EQU BASEP = 5;
      446+    2102
      447+    2103        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:67   
      400     2104             %INCLUDE Z8H_TEMP;
        1+    2105        /*T***********************************************************/
        2+    2106        /*T*                                                         */
        3+    2107        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    2108        /*T*                                                         */
        5+    2109        /*T***********************************************************/
        6+    2110             %EQU NINE_BIT  = 9;
        7+    2111             %EQU SIX_BIT   = 6;
        8+    2112             %EQU FOUR_BIT  = 4;
        9+    2113
       10+    2114
       11+    2115             %EQU MAX_LENGTH= 20;
       12+    2116
       13+    2117             %EQU A = 0;
       14+    2118             %EQU N = 1;
       15+    2119
       16+    2120             %EQU NO_ATTACH = 0;
       17+    2121
       18+    2122             %EQU EVEN    = 02;
       19+    2123             %EQU ODD     = 01;
       20+    2124             %EQU NEXT    = 00;
       21+    2125
       22+    2126             %EQU STALE   = 00;
       23+    2127             %EQU FRESH   = 01;
       24+    2128             %EQU PURE    = 03;
       25+    2129
       26+    2130             %EQU HEX = 1;
       27+    2131             %EQU FILL = 2;
       28+    2132             %EQU DPS88 = 3;
       29+    2133             %EQU ELS  = 4;
       30+    2134
       31+    2135             %EQU AONE = 1;
       32+    2136             %EQU ARGS0 = 2;
       33+    2137             %EQU ARGS1 = 3;
       34+    2138             %EQU ARGS2 = 4;
       35+    2139             %EQU ARGS3 = 5;
       36+    2140             %EQU ARGS4 = 6;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:68   
       37+    2141             %EQU DECZIP = 7;
       38+    2142             %EQU DECONE = 8;
       39+    2143             %EQU HALF_REL = 9;
       40+    2144             %EQU E_L_WORD = 10;
       41+    2145
       42+    2146             %EQU LABEL = 1;
       43+    2147             %EQU REMAIN = 4;
       44+    2148             %EQU TIMES = 7;
       45+    2149             %EQU DESCR_ = 4;
       46+    2150
       47+    2151
      401     2152
      402     2153    1        RETURN;
      403     2154    1   END Z8HD$DOCUMENT;

PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:69   
--  Include file information  --

   Z8H_TEMP.:Z8A6TOU  is referenced.
   Z8H_SUPPORT.:Z8A6TOU  is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8H_RAT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8H_PCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8H_PASSES.:Z8A6TOU  is referenced.
   Z8H_OPCODES.:Z8A6TOU  is referenced.
   Z8H_MOAS.:Z8A6TOU  is referenced.
   Z8H_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8H_DIRECT.:Z8A6TOU  is referenced.
   Z8H_DEP.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8H_CODE.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8HD$DOCUMENT.

   Procedure Z8HD$DOCUMENT requires 3 words for executable code.
   Procedure Z8HD$DOCUMENT is declared NOAUTO and requires 84 words of local(STATIC) storage.

    No errors detected in file Z8HD.:Z8A6TSI    .

PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:70   

 Object Unit name= Z8HD$DOCUMENT                              File name= Z8HD.:Z8A6TOU
 UTS= AUG 09 '97 13:17:18.16 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    84    124  Z8HD$DOCUMENT
    1  LblCom even  none     1      1  ITERATION
    2  LblCom even  none     1      1  CURRENT_BLOCK$
    3  LblCom even  none     1      1  ROOT_PROC_BLOCK$
    4  LblCom even  none    48     60  DEP
    5  LblCom even  none     1      1  NUMBER_OF_PRIMES
    6  LblCom even  none     1      1  NUMBER_OF_TEMPS
    7  LblCom even  none     1      1  NUMBER_OF_REFS
    8  LblCom even  none     1      1  GENERATING_PTRS
    9  LblCom even  none     1      1  USE_PROC_RETURN
   10  LblCom even  none     1      1  CURRENT_SCOPE$
   11  LblCom even  none     1      1  HEAD_REF$
   12  LblCom even  none     1      1  HEAD_TEMP$
   13  LblCom even  none     1      1  CONST$
   14  LblCom even  none     1      1  HEAD_PRIMES$
   15  LblCom even  none     1      1  CUR_LOOP_LEVEL
   16  LblCom even  none     2      2  PEPD
   17  LblCom even  none     1      1  SUPP_DATA
   18  LblCom even  none   112    160  RAT
   19   Proc  even  none     3      3  Z8HD$DOCUMENT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    19      0   yes            yes      Std        0  Z8HD$DOCUMENT
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:71   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:72   


        1        1        /*M* Z8HD$DOCUMENT - Code Generator General Overview                    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        Z8HD$DOCUMENT:PROC NOAUTO;

      8 19 000000   000000 741200 0     Z8HD$DOCUME* STX1  ! 0

        9        9
       10       10        /*P*
       11       11               NAME: Z8HD$DOCUMENT
       12       12            PURPOSE: Explains the major portions of the Code Generator:
       13       13                     Register Management, System Dependent code bursts, etc.
       14       14
       15       15        */
       16       16
       17       17        /*F*
       18       18
       19       19
       20       20
       21       21            NAME:  PURPOSE
       22       22
       23       23              The Generator phase provides the code and related information
       24       24            neccessary to produce a relocatable binary object deck.
       25       25            The Generator produces this information in the form of
       26       26            an OBJ table (reference the section in this module entitled
       27       27            "OBJ TABLE FORMAT"), that the Annotator phase then reads and
       28       28            augments in order to create the actual object deck.
       29       29
       30       30              Among the services that the Generator must provide in order
       31       31            that this information can accurately be created are the following::
       32       32
       33       33
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:73   
       34       34              1). Register Management.
       35       35              2). Temporary storage allocation.
       36       36              3). Code bursts driven by front-end information as well as
       37       37                  directive tables that are part of the Generator.
       38       38              4). The ability to generate code specific to the system
       39       39                  that the compiler was packaged for.
       40       40
       41       41
       42       42        */
       43       43        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:74   
       44       44        /*F*
       45       45
       46       46           NAME: METHOD
       47       47
       48       48              The executable portion of the COBOL-80 Code Generator is
       49       49            implemented primarily in PL6.  There also exists, as part of the
       50       50            Generator design, non-executable directive tables (hereafter
       51       51            referred to as "pseudo-code"), which are written as input to
       52       52            to the pseudo-code assembler (PCA).  These PCA modules
       53       53            contain the high level logic of the Generater, and comprise
       54       54            the bulk of this phase.
       55       55
       56       56              All of the modules and their relationships are provided in the
       57       57            following diagram::
       58       58
       59       59
       60       60                                             ----------
       61       61                                             !        !
       62       62                                             V        !
       63       63                             --------------------     !
       64       64                             |                  |     !
       65       65                             | Z8HI$BURST       |------
       66       66                             |  (PL6 recursive) |
       67       67        Z8HR$CODE_GENERATOR  |                  |------> Z9AU (GMAP executable)
       68       68                     ------->|                  |
       69       69                             |                  |------> Z8HC$SPECIAL_CASES (PL6)
       70       70                             |                  |
       71       71                             --------------------
       72       72                              !!              !!
       73       73                              !!              !!
       74       74                              !!              !!
       75       75                              VV              VV
       76       76                             Z8HP            Z9HP   (Both are PCA non-executable)
       77       77
       78       78
       79       79
       80       80        Z8HP,Z9HP        -     Pseudo-code modules.  Directs sequence of
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:75   
       81       81                               Generator functions.  Treated as data by module
       82       82                               Z8HI$BURST.  A sample Pseudo-code burst follows:
       83       83
       84       84
       85       85                                         FAVOR   ROP,AR
       86       86                                         ASSIGN  AR,FREE
       87       87                                         MAPT    FREE,OPMOD
       88       88                                         GENI    LDA,ROP
       89       89                                         ASSIGN  AR,USED,ROP
       90       90                                         MAPT    FREE,OPMOD
       91       91                                         GENI    ASA,LOP
       92       92                                         QUIT
       93       93
       94       94
       95       95                               All directives take up two words, except support
       96       96                               actions that take up one or two words.
       97       97                               Refer to the Section entitled "PSEUDO-CODE DIRECTIVES"
       98       98                               and to Z8PD$PCA_DOCUMENT for PCA information.
       99       99
      100      100        Z8HR$CODE_GENERATOR  - Code Generator root.  Does initialization and
      101      101                               calls Z8HI$BURST for each ILL item sequentially.
      102      102                               Refer to the section entitled "FORMAT OF GENERATOR INPUT."
      103      103
      104      104        Z8HI$BURST           - Interprets Pseudo-code resident in modules
      105      105                               Z8HP, Z9HP until a QUIT directive is encountered.
      106      106                               The starting pseudo-code address and module are
      107      107                               passed via a PEPD (Pseudo-code Entry Point Descriptor)
      108      108                               word.  Refer to section "PSEUDO-CODE DIRECTIVES."
      109      109
      110      110                               The basic structure of the interpreter follows:
      111      111
      112      112                                 ic = pseudo_code_module(pepd.module) + pepd.offset;
      113      113
      114      114                                 DO WHILE('1'b);
      115      115                 support_actions:  DO CASE(action);
      116      116                                     CASE(halt);
      117      117                                       return;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:76   
      118      118                                     CASE(jmp);
      119      119                                     CASE(else);
      120      120                 generation_actions:   DO CASE(action);
      121      121                                         CASE(assign);
      122      122                                         CASE(mapt);
      123      123                                         CASE(walk);
      124      124                                           CALL Z8HI$BURST(pepd(id));
      125      125                                       END; ( generation actions )
      126      126                                       ic = ic + 2;
      127      127                                   END; ( support actions )
      128      128                                 END;
      129      129
      130      130
      131      131        Z8HC$SPECIAL_CASES   - Any function that cannot be performed by existing
      132      132                               Pseudo-code should use the CASE directive.
      133      133                               Z8HC$SPECIAL_CASES is driven by the ID of the
      134      134                               current triad, and should return codes in PCOM
      135      135                               variables for later use (JMPDV directive).
      136      136
      137      137        Z9AU                 - The executable GMAP module.  Performs functions
      138      138                               related only to the OFF ETT triad, and is not
      139      139                               easily explained in generalities.  Refer to
      140      140                               module Z9AU for a more specific explaination.
      141      141
      142      142        */
      143      143        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:77   
      144      144        /*F*
      145      145
      146      146             NAME: FORMAT_OF_GENERATOR_INPUT
      147      147          CHAPTER: TABLES.
      148      148
      149      149
      150      150              The basic intermediate language that the Generator is given to
      151      151            produce code is in the form of binary trees.  Not all nodes of the tree
      152      152            look the same, nor do they contain the same information; rather the
      153      153            nodes which make up these trees can represent either the root, body,
      154      154            or leaf nodes of the tree.  The node that an item represents determines
      155      155            into which physical table an item will be placed upon its creation in the
      156      156            front-end.  A brief description of these 3 tables is right here::
      157      157
      158      158
      159      159               ILL   - Internal Language List.  This table represents an encoded
      160      160                       version of the COBOL Procedure Division statements. This table
      161      161                       is accessed sequentially by the Generator.  These nodes
      162      162                       are the root nodes of each tree.
      163      163
      164      164               ETT   - Expression Triad Table.  This table represents an encoded
      165      165                       version of all expressions encountered in the procedure
      166      166                       division - arithmetic, character, relational, etc.  This
      167      167                       table is accessed by the Generator in a random manner
      168      168                       via pointers present in ILL, and other ETT items.  These
      169      169                       items constitute the body of the trees.
      170      170
      171      171               ST    - Symbol Table.  This table is comprised of items representing
      172      172                       encoded versions of data names, file names, labels, etc.
      173      173                       They are accessed randomly via pointers in ETT items, and
      174      174                       sometimes in ILL items.
      175      175
      176      176
      177      177              Here is an example of a tree that would be constructed for a typical
      178      178            COBOL source statement.  Please realize that this is a general
      179      179            example, only describing node positions within the tree.  For this
      180      180            reason, a portion of the body of the tree has been removed to avoid
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:78   
      181      181            confusing detail.
      182      182
      183      183
      184      184                              COMPUTE W(I) = X + Y * Z.
      185      185
      186      186
      187      187                                    MVII
      188      188                                    -  -
      189      189                                   -    -
      190      190                                  -      -
      191      191                                 -        -
      192      192                                -          -
      193      193                             SSOP          ADI
      194      194                             -  -          -  -
      195      195                            -    -        -    -
      196      196                           -      -      -      -
      197      197                          OFF  SCALAR  SCALAR   MPI
      198      198                          - -    (I)     (X)    - -
      199      199                         -   -                 -   -
      200      200                        -     -               -     -
      201      201                      ARRAY  ropcon         SCALAR  SCALAR
      202      202                       (W)                    (Y)     (Z)
      203      203
      204      204
      205      205            ILL items
      206      206            === =====
      207      207
      208      208             MVII         (MoVe Integer to Integer)
      209      209
      210      210            ETT items
      211      211            === =====
      212      212
      213      213             SSOP         (apply SubScript OPerand as tag)
      214      214             OFF          (apply OFFset)
      215      215             ADI          (ADd Integers)
      216      216             MPI          (MultiPly Integers)
      217      217
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:79   
      218      218            ST  items
      219      219            ==  =====
      220      220
      221      221             SCALAR       (simple data item)
      222      222             ARRAY        (table data item that requires subscript)
      223      223
      224      224            note:  ropcon stands for "constant ROP", and can represent shift factor,
      225      225                   offset magnitude, etc.
      226      226
      227      227        */
      228      228        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:80   
      229      229        /*F*
      230      230
      231      231               NAME: FORMAT_OF_GENERATOR_INPUT_CONT
      232      232            CHAPTER: ITEM FIELDS.
      233      233
      234      234
      235      235
      236      236            ILL items
      237      237            === =====
      238      238
      239      239
      240      240            A typical ILL item looks like this::
      241      241
      242      242             ILL                           WALIGNED
      243      243             0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
      244      244            I-----------------I-----------------I-----------------I-----------------I
      245      245           0!ID                                 !CODE                               !W
      246      246            I-----------------I-----------------I-----------------I-----------------I
      247      247           1!LOP                                                                    !
      248      248            I-----------------I-----------------I-----------------I-----------------I
      249      249           2!ROP                                                                    !
      250      250            I-----------------I-----------------I-----------------I-----------------I
      251      251           3!TO_                                                                    !
      252      252            I-----------------I-----------------I-----------------I-----------------I
      253      253
      254      254
      255      255              There are variations, but they are deviations from the norm.
      256      256              Some of these fields have the same offsets as fields within ETT items,
      257      257            so even though a statement such as  X = ETT.LOP  may look as if it
      258      258            only accesses ETT items, It may just as easily be referencing an
      259      259            ILL item field.
      260      260
      261      261
      262      262               ID    - A code that distinguishes this node from other nodes.  Examples
      263      263                       of ILL IDs are MVII, AD3D, END, MVIH.
      264      264
      265      265               CODE  - Optional field that usually will indicate special attributes
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:81   
      266      266                       of operands within the item (LOP, ROP, TO_).
      267      267
      268      268               LOP   - Left OPerand.  Always a pointer, usually points to ETT items,
      269      269                       but can also point to ST items.  In simple non-EIS move
      270      270                       operations, this field will point to the recieving data item.
      271      271
      272      272               ROP   - Right OPerand.  Most of the time, this is a pointer, when
      273      273                       it is not, it is referenced by the variable ROPCON.  In
      274      274                       simple non-EIS move operations, this field will point to the
      275      275                       sending data item or expression.
      276      276
      277      277               TO    - Optional field that points to the recieving data item in
      278      278                       moves involving EIS instructions (AD3D, DV3D, etc.).
      279      279
      280      280
      281      281            ETT items
      282      282            === =====
      283      283
      284      284
      285      285            All ETT items will look like this:
      286      286
      287      287
      288      288        LEVEL 2   LEVEL 3   LEVEL 4       0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6
               288         7 8 0 1 2 3 4 5 6 7 8
      289      289                  I-----------------I-----------------I-----------------I-----------------I
      290      290                 0!ID                                 !COUNT                             !W
      291      291                  I-----------------I-----------------I-----------------I-----------------I
      292      292                  1!LOP                                                                   !
      293      293                  I-----------------I-----------------I-----------------I-----------------I
      294      294                  2!ROP                                                                   !
      295      295                  I-----------------I-----------------I-----------------I-----------------I
      296      296                  2!ROPCON                                                                !
      297      297                  I-----------------I-----------------I-----------------I-----------------I
      298      298        NDSC                TN           2!SA                                 !CN   !@!S !S
               298        F         !N          !B
      299      299                  I-----------------I-----------------I-----------------I-----------------I
      300      300        ADSC                MBZ          2!SA                                 !CN  !TA !@!N
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:82   
               300                              !B
      301      301                  I-----------------I-----------------I-----------------I-----------------I
      302      302        OFFSET                           2!VALUE                              !TYPE
               302                              !B
      303      303                  I-----------------I-----------------I-----------------I-----------------I
      304      304        SIZE                             2!VALUE                              !TYPE
               304                              !B
      305      305                  I-----------------I-----------------I-----------------I-----------------I
      306      306        DESC                             2!SA                                 !DESCL
               306                              !B
      307      307                  I-----------------I-----------------I-----------------I-----------------I
      308      308        FILL_CHAR                        2!SYMBOL           !*
               308                              !C
      309      309                  I-----------------I-----------------I-----------------I-----------------I
      310      310                  3!REF$                                                                  !
      311      311                  I-----------------I-----------------I-----------------I-----------------I
      312      312                  3!NEXT$                                                                 !
      313      313                  I-----------------I-----------------I-----------------I-----------------I
      314      314                  3!EVALP$                                                                !
      315      315                  I-----------------I-----------------I-----------------I-----------------I
      316      316                  4!CMP_SC                            !. . . . . . . . . . . . . . . . . .!
      317      317                  I-----------------I-----------------I-----------------I-----------------I
      318      318                  4!STATE                              !CMP_NI                            !
      319      319                  I-----------------I-----------------I-----------------I-----------------I
      320      320        B                   POOLABLE     4!. . . . . . . . . . . . . . . . . .!*
               320                            !@!B
      321      321                  I-----------------I-----------------I-----------------I-----------------I
      322      322
      323      323
      324      324                ID       - A code that distinguishes this item from any other item,
      325      325                           reguardless of what table it is in.  Examples of ETT IDs are
      326      326                           ADI, SBD, FISS, ESC, BASE, etc.
      327      327
      328      328                STATE -    Used by the Generator to reflect the state of triad evaluation.
      329      329                           For example:    COMPUTE A = B + C.
      330      330
      331      331                                                  MVII
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:83   
      332      332                                                  -  -
      333      333                                                 -    -
      334      334                                                -      -
      335      335                                               -        -
      336      336                                              A         ADI
      337      337                                                        - -
      338      338                                                       -   -
      339      339                                                      -     -
      340      340                                                     -       -
      341      341                                                    B         C
      342      342
      343      343
      344      344                           The ADI triad causes generation of the following code:
      345      345
      346      346                                      LDQ     B
      347      347                                      ADQ     C
      348      348
      349      349                           At this point, we mark the STATE of the ADI triad as
      350      350                           being "Q-register contained" or "%ARQ contained."  Now
      351      351                           any subsequent reference to the sub-expression "A + B"
      352      352                           will be able to use register Q, and as you will learn later,
      353      353                           this is an ideal triad state.
      354      354
      355      355                COUNT    - A place for the Generator to store information supplied
      356      356                           by the front-end, indicating how many times this expression
      357      357                           will be referenced before any data items within the
      358      358                           expression are redefined.
      359      359
      360      360                LOP      - Same as LOP of ILL item.
      361      361
      362      362                ROP      - Same as for ROP of ILL, except that there is no such thing
      363      363                           as a ROPCON in an ILL item.
      364      364
      365      365                REF$     - Points to additional information about the triad.
      366      366                           Can *only* point to REF LTS items. A REF$ field of
      367      367                           NIL means that this triad is *not* storage contained.
      368      368
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:84   
      369      369
      370      370
      371      371
      372      372             ST Items
      373      373             == =====
      374      374
      375      375
      376      376             ST items contain *much* more fields than are used by the generator
      377      377             Fields to be concerned with are the SA, and the different forms
      378      378             of descriptors.
      379      379
      380      380             Because of the over complexity of the ST, I would 'DRAW' it here.
      381      381
      382      382        */
      383      383        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:85   
      384      384             %SET PHASE = 4;
      385      385             %INCLUDE Z8A_DEFC;
      386      453             %SET LISTINC = '1'B;
      387      454             %SET LISTMAC = '1'B;
      388      455
      389      456             %INCLUDE Z8H_CODE;
        1+     457        /*T***********************************************************/
        2+     458        /*T*                                                         */
        3+     459        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+     460        /*T*                                                         */
        5+     461        /*T***********************************************************/
        6+     462        /*
        7+     463             Z8H_CODE
        8+     464
        9+     465            This include file contains the declarations for structures
       10+     466        used in creating code bursts.
       11+     467        */
       12+     468    1        DCL 1 INST_WORD AUTO,
       13+     469    1              2 SA UBIN(18) UNAL,
       14+     470    1              2 Y REDEF SA,
       15+     471    1                3 AR# UBIN(3) UNAL,
       16+     472    1                3 * UBIN(15) UNAL,
       17+     473
       18+     474    1              2 ELS REDEF SA,
       19+     475    1                3 *       UBIN(14) UNAL,
       20+     476    1                3 RECR    UBIN(4) UNAL,
       21+     477
       22+     478    1              2 LOW,
       23+     479    1                3 OP_CODE UBIN(9) UNAL,
       24+     480    1                3 CODE REDEF OP_CODE,
       25+     481    1                  4 OP UBIN(6) UNAL,
       26+     482    1                  4 REG UBIN(3) UNAL,
       27+     483    1                3 EIS BOOLEAN,
       28+     484    1                3 * BIT(1) UNAL,
       29+     485    1                3 MF,
       30+     486    1                  4 AR BOOLEAN,
       31+     487    1                  4 RL BOOLEAN,
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:86   
       32+     488    1                  4 IND BOOLEAN,
       33+     489    1                  4 TAG UBIN(4) UNAL,
       34+     490    1              2 BDSC REDEF LOW,
       35+     491    1                3 C UBIN(2) UNAL,
       36+     492    1                3 B UBIN(4) UNAL,
       37+     493    1                3 N UBIN(12) UNAL,
       38+     494    1              2 ADSC REDEF LOW,
       39+     495    1                3 CN UBIN(3) UNAL,
       40+     496    1                3 TA BIT(2) UNAL,
       41+     497    1                3 MBZ2 BIT(1) UNAL,
       42+     498    1                3 N UBIN(12) UNAL,
       43+     499    1              2 NDSC REDEF LOW,
       44+     500    1                3 CN UBIN(3) UNAL,
       45+     501    1                3 TN BIT(1) UNAL,
       46+     502    1                3 S  BIT(2) UNAL,
       47+     503    1                3 SF SBIN(6) UNAL,
       48+     504    1                3 N UBIN(6) UNAL,
       49+     505
       50+     506    1              2 SDSC  REDEF LOW,
       51+     507    1                3 CN        UBIN(3) UNAL,
       52+     508    1                3 E         BOOLEAN,
       53+     509    1                3 TS        BOOLEAN,
       54+     510    1                3 *         UBIN(9) UNAL,
       55+     511    1                3 N         UBIN(4) UNAL;
       56+     512
       57+     513    1        DCL 1 MOD_KEY STATIC,
       58+     514    1              2 KEY SBIN WORD UNAL INIT(0),
       59+     515    1              2 B REDEF KEY,
       60+     516    1                3 *              UBIN(27) UNAL,
       61+     517    1                3 SEGID_REL_UPPER BOOLEAN,
       62+     518    1                3 SEGID_REL_LOW  BOOLEAN,
       63+     519    1                3 BOTH_REL       BOOLEAN,
       64+     520    1                3 HALF_REL       BOOLEAN,
       65+     521    1                3 RESOLVE_ADDRESS BOOLEAN,
       66+     522    1                3 ETC            BOOLEAN,
       67+     523    1                3 BUFFER         BOOLEAN,
       68+     524    1                3 WORD_REL       BOOLEAN,
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:87   
       69+     525    1                3 IC             BOOLEAN;
       70+     526
       71+     527
       72+     528    1        DCL 1 DEFER_BUFFER(0:3) AUTO ALIGNED,
       73+     529    1               2 ID UBIN HALF UNAL,
       74+     530    1               2 KEY UBIN(9) UNAL,
       75+     531    1               2 B REDEF KEY,
       76+     532    1                    3 * BIT(5) UNAL,
       77+     533    1                    3 ETC    BOOLEAN,
       78+     534    1                    3 BUFFER BOOLEAN,
       79+     535    1                    3 REL BOOLEAN,
       80+     536    1                    3 IC BOOLEAN,
       81+     537    1               2 * UBIN(9) UNAL,
       82+     538    1               2 OFFSET SBIN WORD UNAL,
       83+     539    1               2 ST$    PTR,
       84+     540    1               2 INST_WORD,
       85+     541    1                 3 SA UBIN HALF UNAL,
       86+     542    1                 3 Y REDEF SA,
       87+     543    1                   4 AR# UBIN(3) UNAL,
       88+     544    1                   4 * UBIN(15) UNAL,
       89+     545    1                 3 OP_CODE UBIN(9) UNAL,
       90+     546    1                 3 EIS BOOLEAN,
       91+     547    1                 3 * BIT(1) UNAL,
       92+     548    1                 3 MF,
       93+     549    1                   4 AR BOOLEAN,
       94+     550    1                   4 RL BOOLEAN,
       95+     551    1                   4 IND BOOLEAN,
       96+     552    1                   4 TAG UBIN(4) UNAL,
       97+     553    1               2 MW REDEF INST_WORD,
       98+     554    1                  3 P BIT(1) UNAL,
       99+     555    1                  3 * BIT(1) UNAL,
      100+     556    1                  3 MF3,
      101+     557    1                     4 AR BOOLEAN,
      102+     558    1                     4 RL BOOLEAN,
      103+     559    1                     4 ID BOOLEAN,
      104+     560    1                     4 TAG UBIN(4) UNAL,
      105+     561    1                  3 * BIT(2) UNAL,
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:88   
      106+     562    1                  3 MF2,
      107+     563    1                     4 AR BOOLEAN,
      108+     564    1                     4 RL BOOLEAN,
      109+     565    1                     4 ID BOOLEAN,
      110+     566    1                     4 TAG UBIN(4) UNAL,
      111+     567    1                  3 * BIT(11) UNAL,
      112+     568    1                  3 MF1,
      113+     569    1                     4 AR BOOLEAN,
      114+     570    1                     4 RL BOOLEAN,
      115+     571    1                     4 ID BOOLEAN,
      116+     572    1                     4 TAG UBIN(4) UNAL,
      117+     573    1               2 DECCNT_NODE$ PTR;
      118+     574
      119+     575    1        DCL DEFER_BUFFER_IDX SBIN WORD AUTO;
      120+     576    1        DCL DEFER BOOLEAN AUTO;
      121+     577
      122+     578    1        DCL CURRENT_BLOCK$ PTR EXT;
      123+     579    1        DCL OLD_CURRENT_BLOCK$ PTR;  /* FOR ORGS */
      124+     580    1        DCL ROOT_PROC_BLOCK$  PTR EXT;
      125+     581    1        DCL SEG_NO#           SBIN WORD;
      126+     582
      127+     583             %EQU DU = 03;
      128+     584             %EQU DL = 07;
      129+     585        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:89   
      390      586             %INCLUDE Z8H_DEP;
        1+     587        /*T***********************************************************/
        2+     588        /*T*                                                         */
        3+     589        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+     590        /*T*                                                         */
        5+     591        /*T***********************************************************/
        6+     592        /*
        7+     593
        8+     594             Z8H_DEP
        9+     595
       10+     596            This include file contains the declaration of the DEP structure.
       11+     597        DEP is used in a manner similar to the PEPD array.  DEP
       12+     598        entries contain offsets into pseudo-code modules.  The
       13+     599        DEP table is needed when a pseudo-code support routine
       14+     600        wants to execute some pseudo-code that is independent of
       15+     601        any specific ILL or ETT item.  The DEP table is initialize by
       16+     602        the pseudo-code assembler (PCA).  See Z8PD$PCA_DOCUMENT for
       17+     603        details on the PCA.
       18+     604        */
       19+     605             %IF NOT INITIALIZE;
       20+     606
       21+     607    1          DCL 1 DEP EXT,
       22+     608    1                 2 ADEP UBIN WORD UNAL,
       23+     609    1                 2 BDEP UBIN WORD UNAL,
       24+     610    1                 2 CDEP UBIN WORD UNAL,
       25+     611    1                 2 DDEP UBIN WORD UNAL,
       26+     612    1                 2 EDEP UBIN WORD UNAL,
       27+     613    1                 2 FDEP UBIN WORD UNAL,
       28+     614    1                 2 GDEP UBIN WORD UNAL,
       29+     615    1                 2 HDEP UBIN WORD UNAL,
       30+     616    1                 2 IDEP UBIN WORD UNAL,
       31+     617    1                 2 JDEP UBIN WORD UNAL,
       32+     618    1                 2 KDEP UBIN WORD UNAL,
       33+     619    1                 2 LDEP UBIN WORD UNAL,
       34+     620    1                 2 MDEP UBIN WORD UNAL,
       35+     621    1                 2 NDEP UBIN WORD UNAL,
       36+     622    1                 2 ODEP UBIN WORD UNAL,
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:90   
       37+     623    1                 2 PDEP UBIN WORD UNAL,
       38+     624    1                 2 QDEP UBIN WORD UNAL,
       39+     625    1                 2 RDEP UBIN WORD UNAL,
       40+     626    1                 2 SDEP UBIN WORD UNAL,
       41+     627    1                 2 TDEP UBIN WORD UNAL,
       42+     628    1                 2 UDEP UBIN WORD UNAL,
       43+     629    1                 2 VDEP UBIN WORD UNAL,
       44+     630    1                 2 WDEP UBIN WORD UNAL,
       45+     631    1                 2 XDEP UBIN WORD UNAL,
       46+     632    1                 2 YDEP UBIN WORD UNAL,
       47+     633    1                 2 ZDEP UBIN WORD UNAL,
       48+     634    1                 2 XRDEP(0:7) UBIN WORD UNAL,
       49+     635    1                 2 ARDEP(0:1) UBIN WORD UNAL,
       50+     636    1                 2 EADEP UBIN WORD UNAL,
       51+     637    1                 2 AQDEP UBIN WORD UNAL,
       52+     638    1                 2 EAQDEP UBIN WORD UNAL,
       53+     639    1                 2 INDDEP UBIN WORD UNAL,
       54+     640    1                 2 PRDEP (0:7) UBIN WORD UNAL;
       55+     641             %ENDIF;
       56+     642
       57+     643
       58+     644             %EQU ADEP = 00;
       59+     645             %EQU BDEP = 01;
       60+     646             %EQU CDEP = 02;
       61+     647             %EQU DDEP = 03;
       62+     648             %EQU EDEP = 04;
       63+     649             %EQU FDEP = 05;
       64+     650             %EQU GDEP = 06;
       65+     651             %EQU HDEP = 07;
       66+     652             %EQU IDEP = 08;
       67+     653             %EQU JDEP = 09;
       68+     654             %EQU KDEP = 10;
       69+     655             %EQU LDEP = 11;
       70+     656             %EQU MDEP = 12;
       71+     657             %EQU NDEP = 13;
       72+     658             %EQU ODEP = 14;
       73+     659             %EQU PDEP = 15;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:91   
       74+     660             %EQU QDEP = 16;
       75+     661             %EQU RDEP = 17;
       76+     662             %EQU SDEP = 18;
       77+     663             %EQU TDEP = 19;
       78+     664             %EQU UDEP = 20;
       79+     665             %EQU VDEP = 21;
       80+     666             %EQU WDEP = 22;
       81+     667             %EQU XDEP = 23;
       82+     668             %EQU YDEP = 24;
       83+     669             %EQU ZDEP = 25;
       84+     670             %EQU XRDEP0 = 26;
       85+     671             %EQU XRDEP1 = 27;
       86+     672             %EQU XRDEP2 = 28;
       87+     673             %EQU XRDEP3 = 29;
       88+     674             %EQU XRDEP4 = 30;
       89+     675             %EQU XRDEP5 = 31;
       90+     676             %EQU XRDEP6 = 32;
       91+     677             %EQU XRDEP7 = 33;
       92+     678             %EQU ARDEPA = 34;
       93+     679             %EQU ARDEPQ = 35;
       94+     680             %EQU EADEP = 36;
       95+     681             %EQU AQDEP = 37;
       96+     682             %EQU EAQDEP = 38;
       97+     683             %EQU INDDEP = 39;
       98+     684             %EQU PRDEP0 = 40;
       99+     685             %EQU PRDEP1 = 41;
      100+     686             %EQU PRDEP2 = 42;
      101+     687             %EQU PRDEP3 = 43;
      102+     688             %EQU PRDEP4 = 44;
      103+     689             %EQU PRDEP5 = 45;
      104+     690             %EQU PRDEP6 = 46;
      105+     691             %EQU PRDEP7 = 47;
      106+     692        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:92   
      391      693             %INCLUDE Z8H_DIRECT;
        1+     694        /*T***********************************************************/
        2+     695        /*T*                                                         */
        3+     696        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+     697        /*T*                                                         */
        5+     698        /*T***********************************************************/
        6+     699        /*
        7+     700                  Z8H_DIRECT
        8+     701
        9+     702            An include file that contains EQU's for pseudo-code
       10+     703        directive values and directive operands.
       11+     704        */
       12+     705        %EQU QUIT   =     0 ;
       13+     706        %EQU JMP    =     1 ;
       14+     707        %EQU JMPDV  =     2 ;
       15+     708        %EQU GOSUB  =     4 ;
       16+     709        %EQU RTN    =     5 ;
       17+     710        %EQU IFITIS =     6 ;
       18+     711        %EQU EQLR   =     7 ;
       19+     712        %EQU IFID   =     8 ;
       20+     713        %EQU BCT    =     9 ;
       21+     714        %EQU WALK   =     10;
       22+     715        %EQU ASSIGN =     11;
       23+     716        %EQU ALLOTD =     12;
       24+     717        %EQU BURST  =     13;
       25+     718        %EQU REF_   =     14;
       26+     719        %EQU STORE  =     15;
       27+     720        %EQU GENI   =     16;
       28+     721        %EQU MAPT   =     17;
       29+     722        %EQU DSTATE =     18;
       30+     723        %EQU WALK2  =     19;
       31+     724        %EQU WALK3  =     20;
       32+     725        %EQU DECCNT =     21;
       33+     726        %EQU CASE   =     22;
       34+     727        %EQU DEFER  =     24;
       35+     728        %EQU WRAPUP =     25;
       36+     729        %EQU MOVE   =     26;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:93   
       37+     730        %EQU MOVIND =     27;
       38+     731        %EQU AND    =     28;
       39+     732        %EQU ALLOT  =     29;
       40+     733        %EQU OR     =     30;
       41+     734        %EQU AD     =     31;
       42+     735        %EQU SHIFTL =     32;
       43+     736        %EQU SHIFTR =     33;
       44+     737        %EQU NEWLAB =     34;
       45+     738        %EQU DEFLAB =     35;
       46+     739        %EQU ORGS   =     36;
       47+     740        %EQU FAVOR  =     37;
       48+     741        %EQU OFFSET =     38;
       49+     742        %EQU LIB    =     39;
       50+     743        %EQU INCCNT =     40;
       51+     744        %EQU APPLY  =     41;
       52+     745        %EQU ORGE   =     42;
       53+     746        %EQU ATTACH =     43;
       54+     747        %EQU ADDRESS =    44;
       55+     748        %EQU DESCR  =     46;
       56+     749
       57+     750
       58+     751        %EQU OPMOD  =     0 ;
       59+     752        %EQU TAGMOD =     1 ;
       60+     753        %EQU LENMOD =     2 ;
       61+     754        %EQU RECR   =     3 ;
       62+     755        %EQU TRAMOD =     4 ;
       63+     756        %EQU LOPROP =     0 ;
       64+     757        %EQU LOP    =     1 ;
       65+     758        %EQU ROP    =     2 ;
       66+     759        %EQU TO     =     3 ;
       67+     760        %EQU TYI5   =     0 ;
       68+     761        %EQU TYI17  =     1 ;
       69+     762        %EQU TYR2   =     2 ;
       70+     763        %EQU TYR4   =     3 ;
       71+     764        %EQU TYQ2   =     4 ;
       72+     765        %EQU TYQ4   =     5 ;
       73+     766        %EQU TYI4   =     6 ;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:94   
       74+     767        %EQU TYI16  =     7 ;
       75+     768        %EQU TYH2   =     8 ;
       76+     769        %EQU TYH4   =     9 ;
       77+     770        %EQU IND2   =     10;
       78+     771        %EQU TYP25  =     11;
       79+     772        %EQU NONE   =     0 ;
       80+     773        %EQU PSI1   =     1 ;
       81+     774        %EQU PSI2   =     2 ;
       82+     775        %EQU PSD    =     3 ;
       83+     776        %EQU CODE   =     0 ;
       84+     777        %EQU EVEX   =     4 ;
       85+     778        %EQU SUBENT =     7 ;
       86+     779        %EQU RESET  =     27;
       87+     780        %EQU NDSC   =     1 ;
       88+     781        %EQU ADSC   =     0 ;
       89+     782        %EQU BRANCH$ =     1 ;
       90+     783        %EQU ALTRET$ =     4 ;
       91+     784        %EQU SYMREF$ =     5 ;
       92+     785        %EQU DESTINATION$ = 5;
       93+     786        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:95   
      392      787             %INCLUDE Z8H_EXT;
        1+     788        /*T***********************************************************/
        2+     789        /*T*                                                         */
        3+     790        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+     791        /*T*                                                         */
        5+     792        /*T***********************************************************/
        6+     793        /*                                                           */
        7+     794        /*   This was Z8H_COUNTS                                     */
        8+     795        /*                                                           */
        9+     796    1        DCL NUMBER_OF_PRIMES SBIN WORD EXT INIT(0);
       10+     797    1        DCL NUMBER_OF_TEMPS SBIN WORD EXT INIT(0);
       11+     798    1        DCL NUMBER_OF_REFS SBIN WORD EXT INIT(0);
       12+     799
       13+     800        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:96   
       14+     801
       15+     802    1        DCL GENERATING_PTRS BOOLEAN EXT INIT(FALSE);
       16+     803
       17+     804    1        DCL USE_PROC_RETURN EXT PTR;
       18+     805
       19+     806    1        DCL CURRENT_SCOPE$ PTR EXT INIT(ADDR(NIL));
       20+     807
       21+     808        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:97   
       22+     809        /*                                                           */
       23+     810        /*   This was Z8H_HEADS                                      */
       24+     811        /*                                                           */
       25+     812        /*
       26+     813
       27+     814            This include file contains declarations of linked list
       28+     815        head pointers used by phase 4.  Most of the lists are
       29+     816        used in pooling items.
       30+     817        */
       31+     818    1        DCL HEAD_REF$        PTR EXT INIT(ADDR(NIL));
       32+     819    1        DCL HEAD_TEMP$       PTR EXT INIT(ADDR(NIL));
       33+     820    1        DCL CONST$           PTR EXT INIT(ADDR(NIL));
       34+     821    1        DCL HEAD_PRIMES$     PTR EXT INIT(ADDR(NIL));
       35+     822
       36+     823        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:98   
       37+     824        /*                                                           */
       38+     825        /*   This was Z8H_LOOP_LEV                                   */
       39+     826        /*                                                           */
       40+     827    1        DCL CUR_LOOP_LEVEL SBIN WORD EXT INIT(0);
       41+     828
       42+     829        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:99   
       43+     830        /*                                                           */
       44+     831        /*   This was Z8H_PEPD                                       */
       45+     832        /*                                                           */
       46+     833    1        DCL 1 PEPD(0:1) ALIGNED EXT,
       47+     834    1              2 OFFSET UBIN HALF UNAL,
       48+     835    1              2 IDEAL  UBIN(9)   UNAL,
       49+     836    1              2 MODULE UBIN(9)   UNAL;
       50+     837        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:100  
      393      838             %INCLUDE Z8H_MOAS;
        1+     839        /*T***********************************************************/
        2+     840        /*T*                                                         */
        3+     841        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+     842        /*T*                                                         */
        5+     843        /*T***********************************************************/
        6+     844        /*
        7+     845             Z8H_MOAS
        8+     846
        9+     847            This include file contains EQUs of constants used by
       10+     848        the pseudo-code utility directives (MOVE OR AND SHIFTL SHIFTR).
       11+     849        */
       12+     850        %EQU CONST_CONST   = 00;
       13+     851        %EQU CONST_COMCOM  = 01;
       14+     852        %EQU CONST_ILL     = 02;
       15+     853        %EQU CONST_SYSSM   = 03;
       16+     854        %EQU CONST_ABS     = 04;
       17+     855        %EQU CONST_OPND    = 05;
       18+     856        %EQU COMCOM_CONST  = 06;
       19+     857        %EQU COMCOM_COMCOM = 07;
       20+     858        %EQU COMCOM_ILL    = 08;
       21+     859        %EQU COMCOM_SYSSM  = 09;
       22+     860        %EQU COMCOM_ABS    = 10;
       23+     861        %EQU COMCOM_OPND   = 11;
       24+     862        %EQU ILL_CONST     = 12;
       25+     863        %EQU ILL_COMCOM    = 13;
       26+     864        %EQU ILL_ILL       = 14;
       27+     865        %EQU ILL_SYSSM     = 15;
       28+     866        %EQU ILL_ABS       = 16;
       29+     867        %EQU ILL_OPND      = 17;
       30+     868        %EQU SYSSM_CONST   = 18;
       31+     869        %EQU SYSSM_COMCOM  = 19;
       32+     870        %EQU SYSSM_ILL     = 20;
       33+     871        %EQU SYSSM_SYSSM   = 21;
       34+     872        %EQU SYSSM_ABS     = 22;
       35+     873        %EQU SYSSM_OPND    = 23;
       36+     874        %EQU ABS_CONST     = 24;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:101  
       37+     875        %EQU ABS_COMCOM    = 25;
       38+     876        %EQU ABS_ILL       = 26;
       39+     877        %EQU ABS_SYSSM     = 27;
       40+     878        %EQU ABS_ABS       = 28;
       41+     879        %EQU ABS_OPND      = 29;
       42+     880        %EQU OPND_CONST    = 30;
       43+     881        %EQU OPND_COMCOM   = 31;
       44+     882        %EQU OPND_ILL      = 32;
       45+     883        %EQU OPND_SYSSM    = 33;
       46+     884        %EQU OPND_ABS      = 34;
       47+     885        %EQU OPND_OPND     = 35;
       48+     886        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:102  
      394      887             %INCLUDE Z8H_OPCODES;
        1+     888        /*T***********************************************************/
        2+     889        /*T*                                                         */
        3+     890        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+     891        /*T*                                                         */
        5+     892        /*T***********************************************************/
        6+     893        %EQU ARG_OP   = BITBIN('000'O);
        7+     894        %EQU MME_OP   = BITBIN('001'O);
        8+     895        %EQU DRL_OP   = BITBIN('002'O);
        9+     896        %EQU NOP_OP   = BITBIN('011'O);
       10+     897        %EQU CIOC_OP  = BITBIN('015'O);
       11+     898        %EQU ADLX_OP  = BITBIN('02'O);
       12+     899        %EQU ADLX0_OP = BITBIN('020'O);
       13+     900        %EQU ADLX1_OP = BITBIN('021'O);
       14+     901        %EQU ADLX2_OP = BITBIN('022'O);
       15+     902        %EQU ADLX3_OP = BITBIN('023'O);
       16+     903        %EQU ADLX4_OP = BITBIN('024'O);
       17+     904        %EQU ADLX5_OP = BITBIN('025'O);
       18+     905        %EQU ADLX6_OP = BITBIN('026'O);
       19+     906        %EQU ADLX7_OP = BITBIN('027'O);
       20+     907        %EQU LDQC_OP  = BITBIN('032'O);
       21+     908        %EQU ADL_OP   = BITBIN('033'O);
       22+     909        %EQU LDAC_OP  = BITBIN('034'O);
       23+     910        %EQU ADLA_OP  = BITBIN('035'O);
       24+     911        %EQU ADLQ_OP  = BITBIN('036'O);
       25+     912        %EQU ADLAQ_OP = BITBIN('037'O);
       26+     913        %EQU ASX_OP   = BITBIN('04'O);
       27+     914        %EQU ASX0_OP  = BITBIN('040'O);
       28+     915        %EQU ASX1_OP  = BITBIN('041'O);
       29+     916        %EQU ASX2_OP  = BITBIN('042'O);
       30+     917        %EQU ASX3_OP  = BITBIN('043'O);
       31+     918        %EQU ASX4_OP  = BITBIN('044'O);
       32+     919        %EQU ASX5_OP  = BITBIN('045'O);
       33+     920        %EQU ASX6_OP  = BITBIN('046'O);
       34+     921        %EQU ASX7_OP  = BITBIN('047'O);
       35+     922        %EQU AOS_OP   = BITBIN('054'O);
       36+     923        %EQU ASA_OP   = BITBIN('055'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:103  
       37+     924        %EQU ASQ_OP   = BITBIN('056'O);
       38+     925        %EQU SSCR_OP  = BITBIN('057'O);
       39+     926        %EQU ADX_OP   = BITBIN('06'O);
       40+     927        %EQU ADX0_OP  = BITBIN('060'O);
       41+     928        %EQU ADX1_OP  = BITBIN('061'O);
       42+     929        %EQU ADX2_OP  = BITBIN('062'O);
       43+     930        %EQU ADX3_OP  = BITBIN('063'O);
       44+     931        %EQU ADX4_OP  = BITBIN('064'O);
       45+     932        %EQU ADX5_OP  = BITBIN('065'O);
       46+     933        %EQU ADX6_OP  = BITBIN('066'O);
       47+     934        %EQU ADX7_OP  = BITBIN('067'O);
       48+     935        %EQU AWCA_OP  = BITBIN('071'O);
       49+     936        %EQU AWCQ_OP  = BITBIN('072'O);
       50+     937        %EQU LREG_OP  = BITBIN('073'O);
       51+     938        %EQU ADA_OP   = BITBIN('075'O);
       52+     939        %EQU ADQ_OP   = BITBIN('076'O);
       53+     940        %EQU ADAQ_OP  = BITBIN('077'O);
       54+     941        %EQU CMPX_OP  = BITBIN('10'O);
       55+     942        %EQU CMPX0_OP = BITBIN('100'O);
       56+     943        %EQU CMPX1_OP = BITBIN('101'O);
       57+     944        %EQU CMPX2_OP = BITBIN('102'O);
       58+     945        %EQU CMPX3_OP = BITBIN('103'O);
       59+     946        %EQU CMPX4_OP = BITBIN('104'O);
       60+     947        %EQU CMPX5_OP = BITBIN('105'O);
       61+     948        %EQU CMPX6_OP = BITBIN('106'O);
       62+     949        %EQU CMPX7_OP = BITBIN('107'O);
       63+     950        %EQU CWL_OP   = BITBIN('111'O);
       64+     951        %EQU CMPA_OP  = BITBIN('115'O);
       65+     952        %EQU CMPQ_OP  = BITBIN('116'O);
       66+     953        %EQU CMPAQ_OP = BITBIN('117'O);
       67+     954        %EQU SBLX_OP  = BITBIN('12'O);
       68+     955        %EQU SBLX0_OP = BITBIN('120'O);
       69+     956        %EQU SBLX1_OP = BITBIN('101'O);
       70+     957        %EQU SBLX2_OP = BITBIN('122'O);
       71+     958        %EQU SBLX3_OP = BITBIN('123'O);
       72+     959        %EQU SBLX4_OP = BITBIN('124'O);
       73+     960        %EQU SBLX5_OP = BITBIN('125'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:104  
       74+     961        %EQU SBLX6_OP = BITBIN('126'O);
       75+     962        %EQU SBLX7_OP = BITBIN('127'O);
       76+     963        %EQU SBLA_OP  = BITBIN('135'O);
       77+     964        %EQU SBLQ_OP  = BITBIN('136'O);
       78+     965        %EQU SBLAQ_OP = BITBIN('137'O);
       79+     966        %EQU SSX_OP   = BITBIN('14'O);
       80+     967        %EQU SSX0_OP  = BITBIN('140'O);
       81+     968        %EQU SSX1_OP  = BITBIN('141'O);
       82+     969        %EQU SSX2_OP  = BITBIN('142'O);
       83+     970        %EQU SSX3_OP  = BITBIN('143'O);
       84+     971        %EQU SSX4_OP  = BITBIN('144'O);
       85+     972        %EQU SSX5_OP  = BITBIN('145'O);
       86+     973        %EQU SSX6_OP  = BITBIN('146'O);
       87+     974        %EQU SSX7_OP  = BITBIN('147'O);
       88+     975        %EQU SSA_OP   = BITBIN('155'O);
       89+     976        %EQU SSQ_OP   = BITBIN('156'O);
       90+     977        %EQU SBX_OP   = BITBIN('16'O);
       91+     978        %EQU SBX0_OP  = BITBIN('160'O);
       92+     979        %EQU SBX1_OP  = BITBIN('161'O);
       93+     980        %EQU SBX2_OP  = BITBIN('162'O);
       94+     981        %EQU SBX3_OP  = BITBIN('163'O);
       95+     982        %EQU SBX4_OP  = BITBIN('164'O);
       96+     983        %EQU SBX5_OP  = BITBIN('165'O);
       97+     984        %EQU SBX6_OP  = BITBIN('166'O);
       98+     985        %EQU SBX7_OP  = BITBIN('167'O);
       99+     986        %EQU SWCA_OP  = BITBIN('171'O);
      100+     987        %EQU SWCQ_OP  = BITBIN('172'O);
      101+     988        %EQU SBA_OP   = BITBIN('175'O);
      102+     989        %EQU SBQ_OP   = BITBIN('176'O);
      103+     990        %EQU SBAQ_OP  = BITBIN('177'O);
      104+     991        %EQU CNAX_OP  = BITBIN('20'O);
      105+     992        %EQU CNAX0_OP = BITBIN('200'O);
      106+     993        %EQU CNAX1_OP = BITBIN('201'O);
      107+     994        %EQU CNAX2_OP = BITBIN('202'O);
      108+     995        %EQU CNAX3_OP = BITBIN('203'O);
      109+     996        %EQU CNAX4_OP = BITBIN('204'O);
      110+     997        %EQU CNAX5_OP = BITBIN('205'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:105  
      111+     998        %EQU CNAX6_OP = BITBIN('206'O);
      112+     999        %EQU CNAX7_OP = BITBIN('207'O);
      113+    1000        %EQU CMK_OP   = BITBIN('211'O);
      114+    1001        %EQU SZNC_OP  = BITBIN('214'O);
      115+    1002        %EQU CNAA_OP  = BITBIN('215'O);
      116+    1003        %EQU CNAQ_OP  = BITBIN('216'O);
      117+    1004        %EQU CNAAQ_OP = BITBIN('217'O);
      118+    1005        %EQU LDX_OP   = BITBIN('22'O);
      119+    1006        %EQU LDX0_OP  = BITBIN('220'O);
      120+    1007        %EQU LDX1_OP  = BITBIN('221'O);
      121+    1008        %EQU LDX2_OP  = BITBIN('222'O);
      122+    1009        %EQU LDX3_OP  = BITBIN('223'O);
      123+    1010        %EQU LDX4_OP  = BITBIN('224'O);
      124+    1011        %EQU LDX5_OP  = BITBIN('225'O);
      125+    1012        %EQU LDX6_OP  = BITBIN('226'O);
      126+    1013        %EQU LDX7_OP  = BITBIN('227'O);
      127+    1014        %EQU LBAR_OP  = BITBIN('230'O);
      128+    1015        %EQU RMCM_OP  = BITBIN('233'O);
      129+    1016        %EQU SZN_OP   = BITBIN('234'O);
      130+    1017        %EQU LDA_OP   = BITBIN('235'O);
      131+    1018        %EQU LDQ_OP   = BITBIN('236'O);
      132+    1019        %EQU LDAQ_OP  = BITBIN('237'O);
      133+    1020        %EQU ORSX_OP  = BITBIN('24'O);
      134+    1021        %EQU ORSX0_OP = BITBIN('240'O);
      135+    1022        %EQU ORSX1_OP = BITBIN('241'O);
      136+    1023        %EQU ORSX2_OP = BITBIN('242'O);
      137+    1024        %EQU ORSX3_OP = BITBIN('243'O);
      138+    1025        %EQU ORSX4_OP = BITBIN('244'O);
      139+    1026        %EQU ORSX5_OP = BITBIN('245'O);
      140+    1027        %EQU ORSX6_OP = BITBIN('246'O);
      141+    1028        %EQU ORSX7_OP = BITBIN('247'O);
      142+    1029        %EQU ORSA_OP  = BITBIN('255'O);
      143+    1030        %EQU ORSQ_OP  = BITBIN('256'O);
      144+    1031        %EQU ORX_OP   = BITBIN('26'O);
      145+    1032        %EQU ORX0_OP  = BITBIN('260'O);
      146+    1033        %EQU ORX1_OP  = BITBIN('261'O);
      147+    1034        %EQU ORX2_OP  = BITBIN('262'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:106  
      148+    1035        %EQU ORX3_OP  = BITBIN('263'O);
      149+    1036        %EQU ORX4_OP  = BITBIN('264'O);
      150+    1037        %EQU ORX5_OP  = BITBIN('265'O);
      151+    1038        %EQU ORX6_OP  = BITBIN('266'O);
      152+    1039        %EQU ORX7_OP  = BITBIN('267'O);
      153+    1040        %EQU ORA_OP   = BITBIN('275'O);
      154+    1041        %EQU ORQ_OP   = BITBIN('276'O);
      155+    1042        %EQU ORAQ_OP  = BITBIN('277'O);
      156+    1043        %EQU CANX_OP  = BITBIN('30'O);
      157+    1044        %EQU CANX0_OP = BITBIN('300'O);
      158+    1045        %EQU CANX1_OP = BITBIN('301'O);
      159+    1046        %EQU CANX2_OP = BITBIN('302'O);
      160+    1047        %EQU CANX3_OP = BITBIN('303'O);
      161+    1048        %EQU CANX4_OP = BITBIN('304'O);
      162+    1049        %EQU CANX5_OP = BITBIN('305'O);
      163+    1050        %EQU CANX6_OP = BITBIN('306'O);
      164+    1051        %EQU CANX7_OP = BITBIN('307'O);
      165+    1052        %EQU CANA_OP  = BITBIN('315'O);
      166+    1053        %EQU CANQ_OP  = BITBIN('316'O);
      167+    1054        %EQU CANAQ_OP = BITBIN('317'O);
      168+    1055        %EQU LCX_OP   = BITBIN('32'O);
      169+    1056        %EQU LCX0_OP  = BITBIN('320'O);
      170+    1057        %EQU LCX1_OP  = BITBIN('321'O);
      171+    1058        %EQU LCX2_OP  = BITBIN('322'O);
      172+    1059        %EQU LCX3_OP  = BITBIN('323'O);
      173+    1060        %EQU LCX4_OP  = BITBIN('324'O);
      174+    1061        %EQU LCX5_OP  = BITBIN('325'O);
      175+    1062        %EQU LCX6_OP  = BITBIN('326'O);
      176+    1063        %EQU LCX7_OP  = BITBIN('327'O);
      177+    1064        %EQU LCA_OP   = BITBIN('335'O);
      178+    1065        %EQU LCQ_OP   = BITBIN('336'O);
      179+    1066        %EQU LCAQ_OP  = BITBIN('337'O);
      180+    1067        %EQU ANSX_OP  = BITBIN('34'O);
      181+    1068        %EQU ANSX0_OP = BITBIN('340'O);
      182+    1069        %EQU ANSX1_OP = BITBIN('341'O);
      183+    1070        %EQU ANSX2_OP = BITBIN('342'O);
      184+    1071        %EQU ANSX3_OP = BITBIN('343'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:107  
      185+    1072        %EQU ANSX4_OP = BITBIN('344'O);
      186+    1073        %EQU ANSX5_OP = BITBIN('345'O);
      187+    1074        %EQU ANSX6_OP = BITBIN('346'O);
      188+    1075        %EQU ANSX7_OP = BITBIN('347'O);
      189+    1076        %EQU ANSA_OP  = BITBIN('355'O);
      190+    1077        %EQU ANSQ_OP  = BITBIN('356'O);
      191+    1078        %EQU ANX_OP   = BITBIN('36'O);
      192+    1079        %EQU ANX0_OP  = BITBIN('360'O);
      193+    1080        %EQU ANX1_OP  = BITBIN('361'O);
      194+    1081        %EQU ANX2_OP  = BITBIN('362'O);
      195+    1082        %EQU ANX3_OP  = BITBIN('363'O);
      196+    1083        %EQU ANX4_OP  = BITBIN('364'O);
      197+    1084        %EQU ANX5_OP  = BITBIN('365'O);
      198+    1085        %EQU ANX6_OP  = BITBIN('366'O);
      199+    1086        %EQU ANX7_OP  = BITBIN('367'O);
      200+    1087        %EQU ANA_OP   = BITBIN('375'O);
      201+    1088        %EQU ANQ_OP   = BITBIN('376'O);
      202+    1089        %EQU ANAQ_OP  = BITBIN('377'O);
      203+    1090        %EQU MPF_OP   = BITBIN('401'O);
      204+    1091        %EQU MPY_OP   = BITBIN('402'O);
      205+    1092        %EQU CMG_OP   = BITBIN('405'O);
      206+    1093        %EQU LDE_OP   = BITBIN('411'O);
      207+    1094        %EQU RSCR_OP  = BITBIN('413'O);
      208+    1095        %EQU ADE_OP   = BITBIN('415'O);
      209+    1096        %EQU UFM_OP   = BITBIN('421'O);
      210+    1097        %EQU DUFM_OP  = BITBIN('423'O);
      211+    1098        %EQU FCMG_OP  = BITBIN('425'O);
      212+    1099        %EQU DFCMG_OP = BITBIN('427'O);
      213+    1100        %EQU FSZN_OP  = BITBIN('430'O);
      214+    1101        %EQU FLD_OP   = BITBIN('431'O);
      215+    1102        %EQU DFLD_OP  = BITBIN('433'O);
      216+    1103        %EQU UFA_OP   = BITBIN('435'O);
      217+    1104        %EQU DUFA_OP  = BITBIN('437'O);
      218+    1105        %EQU SXL0_OP  = BITBIN('440'O);
      219+    1106        %EQU SXL1_OP  = BITBIN('441'O);
      220+    1107        %EQU SXL2_OP  = BITBIN('442'O);
      221+    1108        %EQU SXL3_OP  = BITBIN('443'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:108  
      222+    1109        %EQU SXL4_OP  = BITBIN('444'O);
      223+    1110        %EQU SXL5_OP  = BITBIN('445'O);
      224+    1111        %EQU SXL6_OP  = BITBIN('446'O);
      225+    1112        %EQU SXL7_OP  = BITBIN('447'O);
      226+    1113        %EQU STZ_OP   = BITBIN('450'O);
      227+    1114        %EQU SMIC_OP  = BITBIN('451'O);
      228+    1115        %EQU SCPR_OP  = BITBIN('452'O);
      229+    1116        %EQU STT_OP   = BITBIN('454'O);
      230+    1117        %EQU FST_OP   = BITBIN('455'O);
      231+    1118        %EQU STE_OP   = BITBIN('456'O);
      232+    1119        %EQU DFST_OP  = BITBIN('457'O);
      233+    1120        %EQU FMP_OP   = BITBIN('461'O);
      234+    1121        %EQU DFMP_OP  = BITBIN('463'O);
      235+    1122        %EQU FSTR_OP  = BITBIN('470'O);
      236+    1123        %EQU FRD_OP   = BITBIN('471'O);
      237+    1124        %EQU DFSTR_OP = BITBIN('472'O);
      238+    1125        %EQU DFRD_OP  = BITBIN('473'O);
      239+    1126        %EQU FAD_OP   = BITBIN('475'O);
      240+    1127        %EQU DFAD_OP  = BITBIN('477'O);
      241+    1128        %EQU RPL_OP   = BITBIN('500'O);
      242+    1129        %EQU BCD_OP   = BITBIN('505'O);
      243+    1130        %EQU DIV_OP   = BITBIN('506'O);
      244+    1131        %EQU DVF_OP   = BITBIN('507'O);
      245+    1132        %EQU FNEG_OP  = BITBIN('513'O);
      246+    1133        %EQU FCMP_OP  = BITBIN('515'O);
      247+    1134        %EQU DFCMP_OP = BITBIN('517'O);
      248+    1135        %EQU RPT_OP   = BITBIN('520'O);
      249+    1136        %EQU FDI_OP   = BITBIN('525'O);
      250+    1137        %EQU DFDI_OP  = BITBIN('527'O);
      251+    1138        %EQU NEG_OP   = BITBIN('531'O);
      252+    1139        %EQU NEGL_OP  = BITBIN('533'O);
      253+    1140        %EQU UFS_OP   = BITBIN('535'O);
      254+    1141        %EQU DUFS_OP  = BITBIN('537'O);
      255+    1142        %EQU SBAR_OP  = BITBIN('550'O);
      256+    1143        %EQU STBA_OP  = BITBIN('551'O);
      257+    1144        %EQU STBQ_OP  = BITBIN('552'O);
      258+    1145        %EQU SMCM_OP  = BITBIN('553'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:109  
      259+    1146        %EQU STC1_OP  = BITBIN('554'O);
      260+    1147        %EQU RPD_OP   = BITBIN('560'O);
      261+    1148        %EQU FDV_OP   = BITBIN('565'O);
      262+    1149        %EQU DFDV_OP  = BITBIN('567'O);
      263+    1150        %EQU FNO_OP   = BITBIN('573'O);
      264+    1151        %EQU FSB_OP   = BITBIN('575'O);
      265+    1152        %EQU DFSB_OP  = BITBIN('577'O);
      266+    1153        %EQU TZE_OP   = BITBIN('600'O);
      267+    1154        %EQU TNZ_OP   = BITBIN('601'O);
      268+    1155        %EQU TNC_OP   = BITBIN('602'O);
      269+    1156        %EQU TRC_OP   = BITBIN('603'O);
      270+    1157        %EQU TMI_OP   = BITBIN('604'O);
      271+    1158        %EQU TPL_OP   = BITBIN('605'O);
      272+    1159        %EQU TTF_OP   = BITBIN('607'O);
      273+    1160        %EQU TEO_OP   = BITBIN('614'O);
      274+    1161        %EQU TEU_OP   = BITBIN('615'O);
      275+    1162        %EQU DIS_OP   = BITBIN('616'O);
      276+    1163        %EQU TOV_OP   = BITBIN('617'O);
      277+    1164        %EQU EAX_OP   = BITBIN('62'O);
      278+    1165        %EQU EAX0_OP  = BITBIN('620'O);
      279+    1166        %EQU EAX1_OP  = BITBIN('621'O);
      280+    1167        %EQU EAX2_OP  = BITBIN('622'O);
      281+    1168        %EQU EAX3_OP  = BITBIN('623'O);
      282+    1169        %EQU EAX4_OP  = BITBIN('624'O);
      283+    1170        %EQU EAX5_OP  = BITBIN('625'O);
      284+    1171        %EQU EAX6_OP  = BITBIN('626'O);
      285+    1172        %EQU EAX7_OP  = BITBIN('627'O);
      286+    1173        %EQU RET_OP   = BITBIN('630'O);
      287+    1174        %EQU LDI_OP   = BITBIN('634'O);
      288+    1175        %EQU EAA_OP   = BITBIN('635'O);
      289+    1176        %EQU EAQ_OP   = BITBIN('636'O);
      290+    1177        %EQU LDT_OP   = BITBIN('637'O);
      291+    1178        %EQU ERSX_OP  = BITBIN('64'O);
      292+    1179        %EQU ERSX0_OP = BITBIN('640'O);
      293+    1180        %EQU ERSX1_OP = BITBIN('641'O);
      294+    1181        %EQU ERSX2_OP = BITBIN('642'O);
      295+    1182        %EQU ERSX3_OP = BITBIN('643'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:110  
      296+    1183        %EQU ERSX4_OP = BITBIN('644'O);
      297+    1184        %EQU ERSX5_OP = BITBIN('645'O);
      298+    1185        %EQU ERSX6_OP = BITBIN('646'O);
      299+    1186        %EQU ERSX7_OP = BITBIN('647'O);
      300+    1187        %EQU ERSA_OP  = BITBIN('655'O);
      301+    1188        %EQU ERSQ_OP  = BITBIN('656'O);
      302+    1189        %EQU ERX_OP   = BITBIN('66'O);
      303+    1190        %EQU ERX0_OP  = BITBIN('660'O);
      304+    1191        %EQU ERX1_OP  = BITBIN('661'O);
      305+    1192        %EQU ERX2_OP  = BITBIN('662'O);
      306+    1193        %EQU ERX3_OP  = BITBIN('663'O);
      307+    1194        %EQU ERX4_OP  = BITBIN('664'O);
      308+    1195        %EQU ERX5_OP  = BITBIN('665'O);
      309+    1196        %EQU ERX6_OP  = BITBIN('666'O);
      310+    1197        %EQU ERX7_OP  = BITBIN('667'O);
      311+    1198        %EQU LCPR_OP  = BITBIN('674'O);
      312+    1199        %EQU ERA_OP   = BITBIN('675'O);
      313+    1200        %EQU ERQ_OP   = BITBIN('676'O);
      314+    1201        %EQU ERAQ_OP  = BITBIN('677'O);
      315+    1202        %EQU TSX_OP   = BITBIN('70'O);
      316+    1203        %EQU TSX0_OP  = BITBIN('700'O);
      317+    1204        %EQU TSX1_OP  = BITBIN('701'O);
      318+    1205        %EQU TSX2_OP  = BITBIN('702'O);
      319+    1206        %EQU TSX3_OP  = BITBIN('703'O);
      320+    1207        %EQU TSX4_OP  = BITBIN('704'O);
      321+    1208        %EQU TSX5_OP  = BITBIN('705'O);
      322+    1209        %EQU TSX6_OP  = BITBIN('706'O);
      323+    1210        %EQU TSX7_OP  = BITBIN('707'O);
      324+    1211        %EQU TRA_OP   = BITBIN('710'O);
      325+    1212        %EQU TSS_OP   = BITBIN('715'O);
      326+    1213        %EQU XEC_OP   = BITBIN('716'O);
      327+    1214        %EQU XED_OP   = BITBIN('717'O);
      328+    1215        %EQU LXL_OP   = BITBIN('72'O);
      329+    1216        %EQU LXL0_OP  = BITBIN('720'O);
      330+    1217        %EQU LXL1_OP  = BITBIN('721'O);
      331+    1218        %EQU LXL2_OP  = BITBIN('722'O);
      332+    1219        %EQU LXL3_OP  = BITBIN('723'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:111  
      333+    1220        %EQU LXL4_OP  = BITBIN('724'O);
      334+    1221        %EQU LXL5_OP  = BITBIN('725'O);
      335+    1222        %EQU LXL6_OP  = BITBIN('726'O);
      336+    1223        %EQU LXL7_OP  = BITBIN('727'O);
      337+    1224        %EQU ARS_OP   = BITBIN('731'O);
      338+    1225        %EQU QRS_OP   = BITBIN('732'O);
      339+    1226        %EQU LRS_OP   = BITBIN('733'O);
      340+    1227        %EQU ALS_OP   = BITBIN('735'O);
      341+    1228        %EQU QLS_OP   = BITBIN('736'O);
      342+    1229        %EQU LLS_OP   = BITBIN('737'O);
      343+    1230        %EQU STXO_OP  = BITBIN('740'O);
      344+    1231        %EQU STX1_OP  = BITBIN('741'O);
      345+    1232        %EQU STX2_OP  = BITBIN('742'O);
      346+    1233        %EQU STX3_OP  = BITBIN('743'O);
      347+    1234        %EQU STX4_OP  = BITBIN('744'O);
      348+    1235        %EQU STX5_OP  = BITBIN('745'O);
      349+    1236        %EQU STX6_OP  = BITBIN('746'O);
      350+    1237        %EQU STX7_OP  = BITBIN('747'O);
      351+    1238        %EQU STC2_OP  = BITBIN('750'O);
      352+    1239        %EQU STCA_OP  = BITBIN('751'O);
      353+    1240        %EQU STCQ_OP  = BITBIN('752'O);
      354+    1241        %EQU SREG_OP  = BITBIN('753'O);
      355+    1242        %EQU STI_OP   = BITBIN('754'O);
      356+    1243        %EQU STA_OP   = BITBIN('755'O);
      357+    1244        %EQU STQ_OP   = BITBIN('756'O);
      358+    1245        %EQU STAQ_OP  = BITBIN('757'O);
      359+    1246        %EQU ARL_OP   = BITBIN('771'O);
      360+    1247        %EQU QRL_OP   = BITBIN('772'O);
      361+    1248        %EQU LRL_OP   = BITBIN('773'O);
      362+    1249        %EQU GTB_OP   = BITBIN('774'O);
      363+    1250        %EQU ALR_OP   = BITBIN('775'O);
      364+    1251        %EQU QLR_OP   = BITBIN('776'O);
      365+    1252        %EQU LLR_OP   = BITBIN('777'O);
      366+    1253
      367+    1254        /*/   E I S  Opcodes   /*/
      368+    1255
      369+    1256        %EQU MVE_OP   = BITBIN('020'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:112  
      370+    1257        %EQU MVNE_OP  = BITBIN('024'O);
      371+    1258        %EQU CSL_OP   = BITBIN('060'O);
      372+    1259        %EQU CSR_OP   = BITBIN('061'O);
      373+    1260        %EQU SZTL_OP  = BITBIN('064'O);
      374+    1261        %EQU SZTR_OP  = BITBIN('065'O);
      375+    1262        %EQU CMPB_OP  = BITBIN('066'O);
      376+    1263        %EQU MLR_OP   = BITBIN('100'O);
      377+    1264        %EQU MRL_OP   = BITBIN('101'O);
      378+    1265        %EQU CMPC_OP  = BITBIN('106'O);
      379+    1266        %EQU SCD_OP   = BITBIN('120'O);
      380+    1267        %EQU SCDR_OP  = BITBIN('121'O);
      381+    1268        %EQU SCM_OP   = BITBIN('124'O);
      382+    1269        %EQU SCMR_OP  = BITBIN('125'O);
      383+    1270        %EQU MVT_OP   = BITBIN('160'O);
      384+    1271        %EQU TCT_OP   = BITBIN('164'O);
      385+    1272        %EQU TCTR_OP  = BITBIN('165'O);
      386+    1273        %EQU AD2D_OP  = BITBIN('202'O);
      387+    1274        %EQU SB2D_OP  = BITBIN('203'O);
      388+    1275        %EQU MP2D_OP  = BITBIN('206'O);
      389+    1276        %EQU DV2D_OP  = BITBIN('207'O);
      390+    1277        %EQU AD3D_OP  = BITBIN('222'O);
      391+    1278        %EQU SB3D_OP  = BITBIN('223'O);
      392+    1279        %EQU MP3D_OP  = BITBIN('226'O);
      393+    1280        %EQU DV3D_OP  = BITBIN('227'O);
      394+    1281        %EQU AD2DX_OP = BITBIN('242'O);
      395+    1282        %EQU SB2DX_OP = BITBIN('243'O);
      396+    1283        %EQU MP2DX_OP = BITBIN('246'O);
      397+    1284        %EQU DV2DX_OP = BITBIN('247'O);
      398+    1285        %EQU AD3DX_OP = BITBIN('262'O);
      399+    1286        %EQU SB3DX_OP = BITBIN('263'O);
      400+    1287        %EQU MP3DX_OP = BITBIN('266'O);
      401+    1288        %EQU DV3DX_OP = BITBIN('267'O);
      402+    1289        %EQU MVN_OP   = BITBIN('300'O);
      403+    1290        %EQU MVNX_OP  = BITBIN('340'O);
      404+    1291        %EQU BTD_OP   = BITBIN('301'O);
      405+    1292        %EQU CMPN_OP  = BITBIN('303'O);
      406+    1293        %EQU CMPNX_OP = BITBIN('343'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:113  
      407+    1294        %EQU DTB_OP   = BITBIN('305'O);
      408+    1295        %EQU MTR_OP   = BITBIN('361'O);
      409+    1296        %EQU MTM_OP   = BITBIN('365'O);
      410+    1297        %EQU SAREG_OP = BITBIN('443'O);
      411+    1298        %EQU SPL_OP   = BITBIN('447'O);
      412+    1299        %EQU STP0_OP  = BITBIN('450'O);
      413+    1300        %EQU STP1_OP  = BITBIN('451'O);
      414+    1301        %EQU STP2_OP  = BITBIN('452'O);
      415+    1302        %EQU STP3_OP  = BITBIN('453'O);
      416+    1303        %EQU STP4_OP  = BITBIN('454'O);
      417+    1304        %EQU STP5_OP  = BITBIN('455'O);
      418+    1305        %EQU STP6_OP  = BITBIN('456'O);
      419+    1306        %EQU STP7_OP  = BITBIN('457'O);
      420+    1307        %EQU LAREG_OP = BITBIN('463'O);
      421+    1308        %EQU LPL_OP   = BITBIN('467'O);
      422+    1309        %EQU LDP0_OP  = BITBIN('470'O);
      423+    1310        %EQU LDP1_OP  = BITBIN('471'O);
      424+    1311        %EQU LDP2_OP  = BITBIN('472'O);
      425+    1312        %EQU LDP3_OP  = BITBIN('473'O);
      426+    1313        %EQU LDP4_OP  = BITBIN('474'O);
      427+    1314        %EQU LDP5_OP  = BITBIN('475'O);
      428+    1315        %EQU LDP6_OP  = BITBIN('476'O);
      429+    1316        %EQU LDP7_OP  = BITBIN('477'O);
      430+    1317        %EQU A9BD_OP  = BITBIN('500'O);
      431+    1318        %EQU A6BD_OP  = BITBIN('501'O);
      432+    1319        %EQU A4BD_OP  = BITBIN('502'O);
      433+    1320        %EQU ABD_OP   = BITBIN('503'O);
      434+    1321        %EQU AWD_OP   = BITBIN('507'O);
      435+    1322        %EQU S9BD_OP  = BITBIN('520'O);
      436+    1323        %EQU S6BD_OP  = BITBIN('521'O);
      437+    1324        %EQU S4BD_OP  = BITBIN('522'O);
      438+    1325        %EQU SBD_OP   = BITBIN('523'O);
      439+    1326        %EQU SWD_OP   = BITBIN('527'O);
      440+    1327        %EQU ARA0_OP  = BITBIN('540'O);
      441+    1328        %EQU ARA1_OP  = BITBIN('541'O);
      442+    1329        %EQU ARA2_OP  = BITBIN('542'O);
      443+    1330        %EQU ARA3_OP  = BITBIN('543'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:114  
      444+    1331        %EQU ARA4_OP  = BITBIN('544'O);
      445+    1332        %EQU ARA5_OP  = BITBIN('545'O);
      446+    1333        %EQU ARA6_OP  = BITBIN('546'O);
      447+    1334        %EQU ARA7_OP  = BITBIN('547'O);
      448+    1335        %EQU AAR0_OP  = BITBIN('560'O);
      449+    1336        %EQU AAR1_OP  = BITBIN('561'O);
      450+    1337        %EQU AAR2_OP  = BITBIN('562'O);
      451+    1338        %EQU AAR3_OP  = BITBIN('563'O);
      452+    1339        %EQU AAR4_OP  = BITBIN('564'O);
      453+    1340        %EQU AAR5_OP  = BITBIN('565'O);
      454+    1341        %EQU AAR6_OP  = BITBIN('566'O);
      455+    1342        %EQU AAR7_OP  = BITBIN('567'O);
      456+    1343        %EQU TRTN_OP  = BITBIN('600'O);
      457+    1344        %EQU TRTF_OP  = BITBIN('601'O);
      458+    1345        %EQU TMOZ_OP  = BITBIN('604'O);
      459+    1346        %EQU TPNZ_OP  = BITBIN('605'O);
      460+    1347        %EQU TTN_OP   = BITBIN('606'O);
      461+    1348        %EQU EPPR_OP  = BITBIN('63'O);
      462+    1349        %EQU EPPR0_OP = BITBIN('630'O);
      463+    1350        %EQU EPPR1_OP = BITBIN('631'O);
      464+    1351        %EQU EPPR2_OP = BITBIN('632'O);
      465+    1352        %EQU EPPR3_OP = BITBIN('633'O);
      466+    1353        %EQU EPPR4_OP = BITBIN('634'O);
      467+    1354        %EQU EPPR5_OP = BITBIN('635'O);
      468+    1355        %EQU EPPR6_OP = BITBIN('636'O);
      469+    1356        %EQU EPPR7_OP = BITBIN('637'O);
      470+    1357        %EQU ARN0_OP  = BITBIN('640'O);
      471+    1358        %EQU ARN1_OP  = BITBIN('641'O);
      472+    1359        %EQU ARN2_OP  = BITBIN('642'O);
      473+    1360        %EQU ARN3_OP  = BITBIN('643'O);
      474+    1361        %EQU ARN4_OP  = BITBIN('644'O);
      475+    1362        %EQU ARN5_OP  = BITBIN('645'O);
      476+    1363        %EQU ARN6_OP  = BITBIN('646'O);
      477+    1364        %EQU ARN7_OP  = BITBIN('647'O);
      478+    1365        %EQU NAR0_OP  = BITBIN('660'O);
      479+    1366        %EQU NAR1_OP  = BITBIN('661'O);
      480+    1367        %EQU NAR2_OP  = BITBIN('662'O);
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:115  
      481+    1368        %EQU NAR3_OP  = BITBIN('663'O);
      482+    1369        %EQU NAR4_OP  = BITBIN('664'O);
      483+    1370        %EQU NAR5_OP  = BITBIN('665'O);
      484+    1371        %EQU NAR6_OP  = BITBIN('666'O);
      485+    1372        %EQU NAR7_OP  = BITBIN('667'O);
      486+    1373        %EQU SAR0_OP  = BITBIN('740'O);
      487+    1374        %EQU SAR1_OP  = BITBIN('741'O);
      488+    1375        %EQU SAR2_OP  = BITBIN('742'O);
      489+    1376        %EQU SAR3_OP  = BITBIN('743'O);
      490+    1377        %EQU SAR4_OP  = BITBIN('744'O);
      491+    1378        %EQU SAR5_OP  = BITBIN('745'O);
      492+    1379        %EQU SAR6_OP  = BITBIN('746'O);
      493+    1380        %EQU SAR7_OP  = BITBIN('747'O);
      494+    1381        %EQU LAR0_OP  = BITBIN('760'O);
      495+    1382        %EQU LAR1_OP  = BITBIN('761'O);
      496+    1383        %EQU LAR2_OP  = BITBIN('762'O);
      497+    1384        %EQU LAR3_OP  = BITBIN('763'O);
      498+    1385        %EQU LAR4_OP  = BITBIN('764'O);
      499+    1386        %EQU LAR5_OP  = BITBIN('765'O);
      500+    1387        %EQU LAR6_OP  = BITBIN('766'O);
      501+    1388        %EQU LAR7_OP  = BITBIN('767'O);
      502+    1389        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:116  
      395     1390             %INCLUDE Z8H_PASSES;
        1+    1391        /*T***********************************************************/
        2+    1392        /*T*                                                         */
        3+    1393        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    1394        /*T*                                                         */
        5+    1395        /*T***********************************************************/
        6+    1396             %EQU FIRST_PASS = 0;
        7+    1397             %EQU SECOND_PASS = FIRST_PASS + 1;
        8+    1398             %EQU THIRD_PASS = SECOND_PASS + 1;
        9+    1399             %EQU FOURTH_PASS = THIRD_PASS + 1;
       10+    1400
       11+    1401        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:117  
      396     1402             %INCLUDE Z8H_PCOM;
        1+    1403        /*T***********************************************************/
        2+    1404        /*T*                                                         */
        3+    1405        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    1406        /*T*                                                         */
        5+    1407        /*T***********************************************************/
        6+    1408        /*
        7+    1409             Z8H_PCOM
        8+    1410
        9+    1411            This include file contains declarations of structures
       10+    1412        used to communicate information between pseudo-code and
       11+    1413        pseudo-code support routines.  The major structure is
       12+    1414        PCOM.  It is in automatic storage, so that each level
       13+    1415        of the tree walk throught the IL has its own set of
       14+    1416        scratch variables.  PCOM has both absolute and pointer
       15+    1417        components.  SUPP_DATA is ORed onto every instruction
       16+    1418        emitted by the GENI directive, so it can be used to
       17+    1419        modify instructions in pseudo-code.
       18+    1420        */
       19+    1421    1        DCL 1 PCOM,
       20+    1422    1               2 AABS SBIN WORD UNAL,
       21+    1423    1               2 BABS SBIN WORD UNAL,
       22+    1424    1               2 CABS SBIN WORD UNAL,
       23+    1425    1               2 DABS SBIN WORD UNAL,
       24+    1426    1               2 EABS SBIN WORD UNAL,
       25+    1427    1               2 FABS SBIN WORD UNAL,
       26+    1428    1               2 GABS SBIN WORD UNAL,
       27+    1429    1               2 CHAR_GABS REDEF GABS CHAR(4) UNAL,
       28+    1430    1               2 HALVED_GABS REDEF GABS,
       29+    1431    1                  3 UPPER SBIN HALF UNAL,
       30+    1432    1                  3 LOWER SBIN HALF UNAL,
       31+    1433    1               2 HABS SBIN WORD UNAL,
       32+    1434    1               2 IABS SBIN WORD UNAL,
       33+    1435    1               2 JABS SBIN WORD UNAL,
       34+    1436    1               2 KABS SBIN WORD UNAL,
       35+    1437    1               2 LABS SBIN WORD UNAL,
       36+    1438    1               2 MABS SBIN WORD UNAL,
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:118  
       37+    1439    1               2 NABS SBIN WORD UNAL,
       38+    1440    1               2 OABS SBIN WORD UNAL,
       39+    1441    1               2 PABS SBIN WORD UNAL,
       40+    1442    1               2 QABS SBIN WORD UNAL,
       41+    1443    1               2 RABS SBIN WORD UNAL,
       42+    1444    1               2 SABS SBIN WORD UNAL,
       43+    1445    1               2 TABS SBIN WORD UNAL,
       44+    1446    1               2 UABS SBIN WORD UNAL,
       45+    1447    1               2 VABS SBIN WORD UNAL,
       46+    1448    1               2 WABS SBIN WORD UNAL,
       47+    1449    1               2 XABS SBIN WORD UNAL,
       48+    1450    1               2 YABS SBIN WORD UNAL,
       49+    1451    1               2 ZABS SBIN WORD UNAL,
       50+    1452
       51+    1453    1               2 *(0:3) PTR,
       52+    1454    1               2 EOPND PTR,
       53+    1455    1               2 FOPND PTR,
       54+    1456    1               2 GOPND PTR,
       55+    1457    1               2 HOPND PTR,
       56+    1458    1               2 IOPND PTR,
       57+    1459    1               2 JOPND PTR,
       58+    1460    1               2 KOPND PTR,
       59+    1461    1               2 LOPND PTR,
       60+    1462    1               2 MOPND PTR,
       61+    1463    1               2 NOPND PTR,
       62+    1464    1               2 OOPND PTR,
       63+    1465    1               2 POPND PTR,
       64+    1466    1               2 QOPND PTR,
       65+    1467    1               2 ROPND PTR,
       66+    1468    1               2 SOPND PTR,
       67+    1469    1               2 TOPND PTR,
       68+    1470    1               2 UOPND PTR,
       69+    1471    1               2 VOPND PTR,
       70+    1472    1               2 WOPND PTR,
       71+    1473    1               2 XOPND PTR,
       72+    1474    1               2 YOPND PTR,
       73+    1475    1               2 ZOPND PTR;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:119  
       74+    1476
       75+    1477    1        DCL 1 PCOM_ REDEF PCOM,
       76+    1478    1               2 ABS(0:25) UBIN WORD UNAL,
       77+    1479    1               2 OPND(0:25) PTR;
       78+    1480
       79+    1481
       80+    1482
       81+    1483    1        DCL 1 SUPP_DATA EXT,
       82+    1484    1               2 WRD SBIN WORD UNAL INIT(0),
       83+    1485    1               2 CHR REDEF WRD CHAR(4) UNAL,
       84+    1486    1               2 INST REDEF WRD,
       85+    1487    1                  3 SA UBIN(18) UNAL,
       86+    1488    1                  3 Y REDEF SA,
       87+    1489    1                     4 ARF UBIN(3) UNAL,
       88+    1490    1                     4 SA  UBIN(15) UNAL,
       89+    1491    1                  3 OP_CODE UBIN(9) UNAL,
       90+    1492    1                  3 EIS BOOLEAN,
       91+    1493    1                  3 * BIT(1) UNAL,
       92+    1494    1                  3 MF,
       93+    1495    1                     4 AR BOOLEAN,
       94+    1496    1                     4 RL BOOLEAN,
       95+    1497    1                     4 ID BOOLEAN,
       96+    1498    1                     4 TAG UBIN(4) UNAL;
       97+    1499
       98+    1500        %EQU PCOM   =     001;
       99+    1501        %EQU AABS   =     000;
      100+    1502        %EQU BABS   =     001;
      101+    1503        %EQU CABS   =     002;
      102+    1504        %EQU DABS   =     003;
      103+    1505        %EQU EABS   =     004;
      104+    1506        %EQU FABS   =     005;
      105+    1507        %EQU GABS   =     006;
      106+    1508        %EQU HABS   =     007;
      107+    1509        %EQU IABS   =     008;
      108+    1510        %EQU JABS   =     009;
      109+    1511        %EQU KABS   =     010;
      110+    1512        %EQU LABS   =     011;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:120  
      111+    1513        %EQU MABS   =     012;
      112+    1514        %EQU NABS   =     013;
      113+    1515        %EQU OABS   =     014;
      114+    1516        %EQU PABS   =     015;
      115+    1517        %EQU QABS   =     016;
      116+    1518        %EQU RABS   =     017;
      117+    1519        %EQU SABS   =     018;
      118+    1520        %EQU TABS   =     019;
      119+    1521        %EQU UABS   =     020;
      120+    1522        %EQU VABS   =     021;
      121+    1523        %EQU WABS   =     022;
      122+    1524        %EQU XABS   =     023;
      123+    1525        %EQU YABS   =     024;
      124+    1526        %EQU ZABS   =     025;
      125+    1527
      126+    1528        %EQU EOPND  =     004;
      127+    1529        %EQU FOPND  =     005;
      128+    1530        %EQU GOPND  =     006;
      129+    1531        %EQU HOPND  =     007;
      130+    1532        %EQU IOPND  =     008;
      131+    1533        %EQU JOPND  =     009;
      132+    1534        %EQU KOPND  =     010;
      133+    1535        %EQU LOPND  =     011;
      134+    1536        %EQU MOPND  =     012;
      135+    1537        %EQU NOPND  =     013;
      136+    1538        %EQU OOPND  =     014;
      137+    1539        %EQU POPND  =     015;
      138+    1540        %EQU QOPND  =     016;
      139+    1541        %EQU ROPND  =     017;
      140+    1542        %EQU SOPND  =     018;
      141+    1543        %EQU TOPND  =     019;
      142+    1544        %EQU UOPND  =     020;
      143+    1545        %EQU VOPND  =     021;
      144+    1546        %EQU WOPND  =     022;
      145+    1547        %EQU XOPND  =     023;
      146+    1548        %EQU YOPND  =     024;
      147+    1549        %EQU ZOPND  =     025;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:121  
      148+    1550        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:122  
      397     1551             %INCLUDE Z8H_RAT;
        1+    1552        /*T***********************************************************/
        2+    1553        /*T*                                                         */
        3+    1554        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    1555        /*T*                                                         */
        5+    1556        /*T***********************************************************/
        6+    1557        /*
        7+    1558                  Z8H_RAT
        8+    1559
        9+    1560             This include file contains the declaration for the
       10+    1561        register assignment table(RAT) and it contains the EQUs that
       11+    1562        define constants used when refering to registers,
       12+    1563        register states and assignment types.
       13+    1564        */
       14+    1565    1        DCL 1 RAT(0:27) EXT,
       15+    1566    1               2 PRIMES PTR INIT(ADDR(NIL)*28),
       16+    1567    1               2 B,
       17+    1568    1                  3 * BOOLEAN INIT(FALSE*28),
       18+    1569    1                  3 GREATER_256K BOOLEAN INIT(FALSE*28),
       19+    1570    1                  3 FAVORED BOOLEAN INIT(FALSE*28),
       20+    1571    1                  3 DIRTY_ARQ BOOLEAN INIT(FALSE*28),
       21+    1572    1                  3 * BIT(14) UNAL INIT(FALSE*28),
       22+    1573    1               2 AWAITING SBIN HALF UNAL INIT(0*28),
       23+    1574    1               2 COUNT SBIN WORD UNAL INIT(0*28),
       24+    1575    1               2 CLASS SBIN WORD UNAL INIT(0*28);
       25+    1576
       26+    1577
       27+    1578
       28+    1579
       29+    1580    1        DCL REGID UBIN WORD AUTO;
       30+    1581    1        DCL LAST_USED UBIN WORD AUTO;
       31+    1582    1        DCL LAST_FREED UBIN WORD AUTO;
       32+    1583
       33+    1584    1        DCL AORQ BOOLEAN AUTO;
       34+    1585
       35+    1586        %EQU PR0    =     20;
       36+    1587        %EQU PR1    =     21;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:123  
       37+    1588        %EQU PR2    =     22;
       38+    1589        %EQU PR3    =     23;
       39+    1590        %EQU PR4    =     24;
       40+    1591        %EQU PR5    =     25;
       41+    1592        %EQU PR6    =     26;
       42+    1593        %EQU PR7    =     27;
       43+    1594        %EQU PR     =     28;
       44+    1595        %EQU ARLOP  =     31;
       45+    1596        %EQU XRLOP  =     32;
       46+    1597        %EQU PRLOP  =     33;
       47+    1598        %EQU ARROP  =     34;
       48+    1599        %EQU XRROP  =     35;
       49+    1600        %EQU PRROP  =     36;
       50+    1601        %EQU ARSTAR = 37;
       51+    1602        %EQU XRSTAR = 38;
       52+    1603        %EQU PRSTAR = 39;
       53+    1604        %EQU XRIOPND = 40; /*#37128*/
       54+    1605        %EQU XRROPND = 41;
       55+    1606        %EQU ARTO   =     42;
       56+    1607        %EQU XR0    =     8 ;
       57+    1608        %EQU XR1    =     9 ;
       58+    1609        %EQU XR2    =     10;
       59+    1610        %EQU XR3    =     11;
       60+    1611        %EQU XR4    =     12;
       61+    1612        %EQU XR5    =     13;
       62+    1613        %EQU XR6    =     14;
       63+    1614        %EQU XR7    =     15;
       64+    1615        %EQU XR     =     16;
       65+    1616        %EQU AR     =     4 ;
       66+    1617        %EQU IND    =     3 ;
       67+    1618        %EQU ARA    =     5 ;
       68+    1619        %EQU ARQ    =     6 ;
       69+    1620        %EQU ARAQ   =     7 ;
       70+    1621        %EQU AREA   =     17;
       71+    1622        %EQU AREAQ  =     18;
       72+    1623        %EQU ALLREGS =    43;
       73+    1624        %EQU DEMAND =     0 ;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:124  
       74+    1625        %EQU GLOBAL =     1 ;
       75+    1626        %EQU DEDIC  =     2 ;
       76+    1627        %EQU FREE   =     26;
       77+    1628        %EQU USED   =     27;
       78+    1629        %EQU FREEAR = 26;
       79+    1630        %EQU FREEXR = 27;
       80+    1631        %EQU FREEPR = 28;
       81+    1632        %EQU PGLOBL =     7 ;
       82+    1633        %EQU PRPOPND = 27;
       83+    1634        %EQU PROOPND = 26;
       84+    1635        %EQU PRNOPND = 25;
       85+    1636        %EQU PRQOPND = 24;
       86+    1637        %EQU PRMOPND = 23;
       87+    1638        %EQU ARROPND = 44;
       88+    1639        %EQU PRTO    = 45;
       89+    1640        %EQU XRTO    = 46;
       90+    1641        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:125  
      398     1642             %INCLUDE Z9A_FLAGS;
        1+    1643        /*M* EXC_FLAGS - CHOOSE CP-6 MODE FOR COMPILATIONS. */
        2+    1644        /*T***********************************************************/
        3+    1645        /*T*                                                         */
        4+    1646        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+    1647        /*T*                                                         */
        6+    1648        /*T***********************************************************/
        7+    1649
        8+    1650        /*X* DDA */
        9+    1651
       10+    1652        %EQU GCOS='0'B;
       11+    1653        %EQU CP6='1'B;
       12+    1654        %EQU STACK_HEADER_SIZE=3;
       13+    1655        %EQU EASEE='0'B;
      399     1656             %INCLUDE Z8H_SUPPORT;
        1+    1657        /*T***********************************************************/
        2+    1658        /*T*                                                         */
        3+    1659        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    1660        /*T*                                                         */
        5+    1661        /*T***********************************************************/
        6+    1662        /*
        7+    1663             Z8H_SUPPORT
        8+    1664
        9+    1665            This include file contains definitions of macros
       10+    1666        used by phase 4. It also contains some EQUs for common
       11+    1667        constants.
       12+    1668        */
       13+    1669        %MACRO LOP_ROP_TO(RESULT=OPND,OP=PC.OPND1,TRIAD=PILL);
       14+    1670
       15+    1671             DO CASE(OP);
       16+    1672
       17+    1673               CASE(0);
       18+    1674                 RESULT = TRIAD;
       19+    1675               CASE(%LOP);
       20+    1676                 RESULT = TRIAD -> ILL.LOP;
       21+    1677               CASE(%ROP);
       22+    1678                 RESULT = TRIAD -> ILL.ROP;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:126  
       23+    1679               CASE(%TO);
       24+    1680                 RESULT = TRIAD -> ILL.TO_;
       25+    1681               CASE(ELSE);
       26+    1682                 RESULT = PCOM_.OPND(OP);
       27+    1683             END /* Case */;
       28+    1684
       29+    1685        %MEND;
       30+    1686
       31+    1687
       32+    1688
       33+    1689        %MACRO SWITCH_RAT_INFO(@FROM=,@TO=);
       34+    1690
       35+    1691             DO;
       36+    1692               CALL Z8HG$FREE_REGISTER(BINBIT(@TO,36));
       37+    1693               I = @FROM;
       38+    1694               IF I ~= %UNEVAL_T THEN
       39+    1695                 DO;
       40+    1696                   RAT(@TO) = RAT(I);
       41+    1697
       42+    1698                   P$ = RAT.PRIMES(I);
       43+    1699
       44+    1700                   DO UNTIL(P$ = ADDR(NIL));
       45+    1701                     P$ -> PRIME.TRIAD -> ETT.STATE = @TO;
       46+    1702                     P$ = P$ -> PRIME.NEXT;
       47+    1703                   END;
       48+    1704
       49+    1705                   RAT.PRIMES(I) = ADDR(NIL);
       50+    1706                   RAT.AWAITING(I) = 0;
       51+    1707                   RAT.COUNT(I) = 0;
       52+    1708                   RAT.B(I) = '0'O;
       53+    1709
       54+    1710                 END;
       55+    1711             END;
       56+    1712
       57+    1713        %MEND;
       58+    1714
       59+    1715
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:127  
       60+    1716
       61+    1717        %MACRO STORAGE_CHECK(THE_STATE=,TRIAD=);
       62+    1718
       63+    1719             IF  PILL -> ETT.ID ~= %SSOP  /*#28637*/
       64+    1720             AND PILL -> ETT.ID ~= %SIZ
       65+    1721             AND PILL -> ETT.ID ~= %REFMOD THEN
       66+    1722               IF THE_STATE = 2 /*/ XR /*/ THEN
       67+    1723                 IF TRIAD -> ETT.REF$ ~= ADDR(NIL) THEN
       68+    1724                   DO;
       69+    1725                     CALL Z8HG$FREE_REGISTER(BINBIT(TRIAD -> ETT.STATE,36));
       70+    1726                     THE_STATE = 3; /*/ ST /*/
       71+    1727                   END;
       72+    1728
       73+    1729        %MEND;
       74+    1730
       75+    1731
       76+    1732
       77+    1733        %MACRO ABSOLUTE_SA(TRIAD=, RTN=);
       78+    1734
       79+    1735             DO;
       80+    1736               P$ = TRIAD -> ETT.REF$;
       81+    1737
       82+    1738               %IF USING_HALF_WORD_RELOCATION;
       83+    1739                 /* REF.SA  is THE absolute SA */
       84+    1740                 RTN = P$ -> REF.SA;
       85+    1741               %ELSE;
       86+    1742                 RTN = P$ -> REF.SA + P$ -> REF.ST$ -> ST.SA / %#16K * %#16K;
       87+    1743               %ENDIF;
       88+    1744             END;
       89+    1745
       90+    1746        %MEND;
       91+    1747
       92+    1748
       93+    1749
       94+    1750        %MACRO IMPLIED_REF(REF$=REF$, CNT=);
       95+    1751
       96+    1752        DO;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:128  
       97+    1753          IF REF$ -> REF.SSOP_TAG$ ~= ADDR(NIL) THEN
       98+    1754            CALL Z8HU$INCCNT(REF$ -> REF.SSOP_TAG$, BINBIT(CNT, 36));
       99+    1755
      100+    1756          IF REF$ -> REF.SIZ_TAG$ ~= ADDR(NIL) THEN
      101+    1757            CALL Z8HU$INCCNT(REF$ -> REF.SIZ_TAG$, BINBIT(CNT, 36));
      102+    1758
      103+    1759          IF REF$ -> REF.ST$ -> ST.ID = %TEMP THEN
      104+    1760            REF$ -> REF.ST$ -> TEMP.REFERENCES = REF$ -> REF.ST$ -> TEMP.REFERENCES
      105+    1761                                               + CNT;
      106+    1762          ELSE
      107+    1763            IF REF$ -> REF.PR_TAG$ ~= ADDR(NIL) THEN
      108+    1764              CALL Z8HU$INCCNT(REF$ -> REF.PR_TAG$, BINBIT(CNT, 36));
      109+    1765        END;
      110+    1766
      111+    1767        %MEND;
      112+    1768
      113+    1769
      114+    1770
      115+    1771        %MACRO WALK_LOP_ROP;
      116+    1772
      117+    1773             IF PILL -> ETT.LOP -> ETT.ID <= %LAST_REFERENCE_TRIAD
      118+    1774             AND PILL -> ETT.ROP -> ETT.ID > %LAST_REFERENCE_TRIAD THEN
      119+    1775               DO;
      120+    1776                 CALL Z8HU$WALK(PILL -> ETT.ROP);
      121+    1777                 CALL Z8HU$WALK(PILL -> ETT.LOP);
      122+    1778               END;
      123+    1779             ELSE
      124+    1780               DO;
      125+    1781                 CALL Z8HU$WALK(PILL -> ETT.LOP);
      126+    1782                 CALL Z8HU$WALK(PILL -> ETT.ROP);
      127+    1783                 /* It is possible that the LOP might not be evaluated
      128+    1784                    any more. */
      129+    1785                 CALL Z8HU$WALK(PILL -> ETT.LOP);
      130+    1786               END;
      131+    1787
      132+    1788        %MEND;
      133+    1789
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:129  
      134+    1790
      135+    1791
      136+    1792        %MACRO #OFF# ( @FROM = ,
      137+    1793                       @TO   = ,
      138+    1794                       @VALUE= ,
      139+    1795                       @TYPE = );
      140+    1796
      141+    1797             DO;
      142+    1798               %NEW_ETT( @ID     = %OFF, @POINTER = @TO ,
      143+    1799                         @LOP    = @FROM ,
      144+    1800                         @POOLABLE = YES );
      145+    1801
      146+    1802               @TO -> ETT.OFFSET.VALUE = @VALUE;
      147+    1803               @TO -> ETT.OFFSET.TYPE = @TYPE;
      148+    1804
      149+    1805               CALL Z8HU$INCCNT(@FROM,1);
      150+    1806               CALL Z8HU$WALK(@TO);
      151+    1807             END;
      152+    1808
      153+    1809        %MEND;
      154+    1810
      155+    1811
      156+    1812
      157+    1813        %MACRO #DNA# ( @FROM = ,
      158+    1814                       @TO   = );
      159+    1815
      160+    1816             DO;
      161+    1817               J  = @FROM -> ETT.REF$ -> REF.NDSC.N;
      162+    1818
      163+    1819               %NEW_ETT( @ID      = %DNA, @POINTER = @TO ,
      164+    1820                         @LOP     = @FROM ,
      165+    1821                         @ROPCON  = J,
      166+    1822                         @POOLABLE= YES );
      167+    1823
      168+    1824               CALL Z8HU$INCCNT(@FROM,1);
      169+    1825               CALL Z8HU$WALK(@TO);
      170+    1826
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:130  
      171+    1827               IF @FROM -> ETT.REF$ -> REF.NDSC.TN = %NDSC4 AND
      172+    1828                   @FROM -> ETT.REF$ -> REF.ST$ -> VARIABLE.TYPE ~= %TYF THEN
      173+    1829                 @TO -> ETT.REF$ -> REF.ADSC.TA = %ADSC4;
      174+    1830               ELSE
      175+    1831                 @TO -> ETT.REF$ -> REF.ADSC.TA = %ADSC9;
      176+    1832             END;
      177+    1833
      178+    1834        %MEND;
      179+    1835
      180+    1836
      181+    1837
      182+    1838        %MACRO #DAN# ( @FROM = ,
      183+    1839                       @TO   = );
      184+    1840
      185+    1841             DO;
      186+    1842               %NEW_ETT( @ID       = %DAN, @POINTER = @TO ,
      187+    1843                         @LOP      = @FROM ,
      188+    1844                         @POOLABLE = YES );
      189+    1845
      190+    1846               CALL Z8HU$INCCNT(@FROM,1);
      191+    1847               CALL Z8HU$WALK(@TO);
      192+    1848             END;
      193+    1849
      194+    1850        %MEND;
      195+    1851
      196+    1852
      197+    1853
      198+    1854        %MACRO #DESC#_ADSC ( @FROM  = ,
      199+    1855                             @TO    = ,
      200+    1856                             @TA    = ,
      201+    1857                             @LENGTH= ,
      202+    1858                             @CN    = );
      203+    1859
      204+    1860             DO;
      205+    1861               %NEW_ETT( @ID       = %DESC, @POINTER = @TO ,
      206+    1862                         @LOP      = @FROM ,
      207+    1863                         @POOLABLE = YES );
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:131  
      208+    1864
      209+    1865               @TO -> ETT.DESC.SA = @FROM -> ETT.REF$ -> REF.SA;
      210+    1866
      211+    1867
      212+    1868               %LSET TEMP@@@ =  CHARTEXT(CONCAT(TEXTCHAR(@FROM), '-> ETT.REF$ -> REF'));
      213+    1869
      214+    1870               %UNPACK_ADSC ( @DESC   = "%TEMP@@@" ,
      215+    1871                              @SA     = SA ,
      216+    1872                              @LENGTH = LENGTH ,
      217+    1873                              @CN     = CN ,
      218+    1874                              @TA     = TA );
      219+    1875
      220+    1876
      221+    1877               %IF (TEXTCHAR(@LENGTH) ~= '');
      222+    1878                 LENGTH = @LENGTH;
      223+    1879               %ENDIF;
      224+    1880
      225+    1881               %IF (TEXTCHAR(@TA) ~= '');
      226+    1882                 TA = @TA;
      227+    1883               %ENDIF;
      228+    1884
      229+    1885               %IF (TEXTCHAR(@CN) ~= '');
      230+    1886                 CN = @CN;
      231+    1887               %ENDIF;
      232+    1888
      233+    1889               %LSET TEMP@@@ = CHARTEXT(CONCAT(TEXTCHAR(@TO),' -> ETT.DESC'));
      234+    1890
      235+    1891
      236+    1892               %PACK_ADSC ( @DESC    = "%TEMP@@@" ,
      237+    1893                            @SA      = SA ,
      238+    1894                            @LENGTH  = LENGTH ,
      239+    1895                            @CN      = CN ,
      240+    1896                            @TA      = TA );
      241+    1897
      242+    1898               CALL Z8HU$INCCNT(@FROM, 1);
      243+    1899               CALL Z8HU$WALK(@TO);
      244+    1900             END;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:132  
      245+    1901
      246+    1902        %MEND;
      247+    1903
      248+    1904
      249+    1905
      250+    1906        %MACRO #DESC#_NDSC ( @FROM  = ,
      251+    1907                             @TO    = ,
      252+    1908                             @LENGTH= ,
      253+    1909                             @CN    = ,
      254+    1910                             @TN    = ,
      255+    1911                             @SCALE = ,
      256+    1912                             @SIGN  = );
      257+    1913
      258+    1914             DO;
      259+    1915               %NEW_ETT ( @ID       = %DESC, @POINTER = @TO ,
      260+    1916                          @LOP      = @FROM ,
      261+    1917                          @POOLABLE = YES );
      262+    1918
      263+    1919               @TO -> ETT.DESC.SA = @FROM -> ETT.REF$ -> REF.SA;
      264+    1920
      265+    1921               %LSET TEMP@@@ = CHARTEXT(CONCAT(TEXTCHAR(@FROM), '->ETT.REF$->REF'));
      266+    1922
      267+    1923               %UNPACK_NDSC ( @DESC    = "%TEMP@@@" ,
      268+    1924                              @SA      = SA ,
      269+    1925                              @LENGTH  = LENGTH ,
      270+    1926                              @CN      = CN ,
      271+    1927                              @TN      = TN ,
      272+    1928                              @SCALE   = SCALE ,
      273+    1929                              @SIGN    = SIGN );
      274+    1930
      275+    1931               %IF (TEXTCHAR(@LENGTH) ~= '');
      276+    1932                 LENGTH = @LENGTH;
      277+    1933               %ENDIF;
      278+    1934
      279+    1935               %IF (TEXTCHAR(@CN) ~= '');
      280+    1936                 CN = @CN;
      281+    1937               %ENDIF;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:133  
      282+    1938
      283+    1939               %IF (TEXTCHAR(@TN) ~= '');
      284+    1940                 TN = @TN;
      285+    1941               %ENDIF;
      286+    1942
      287+    1943               %IF (TEXTCHAR(@SCALE) ~= '');
      288+    1944                 SCALE = @SCALE;
      289+    1945               %ENDIF;
      290+    1946
      291+    1947               %IF (TEXTCHAR(@SIGN) ~= '');
      292+    1948                 SIGN = @SIGN;
      293+    1949               %ENDIF;
      294+    1950
      295+    1951
      296+    1952               %LSET TEMP@@@ = CHARTEXT(CONCAT(TEXTCHAR(@TO),'->ETT.DESC'));
      297+    1953
      298+    1954               %PACK_NDSC ( @DESC   = "%TEMP@@@" ,
      299+    1955                            @SA     = SA ,
      300+    1956                            @LENGTH = LENGTH ,
      301+    1957                            @CN     = CN ,
      302+    1958                            @TN     = TN ,
      303+    1959                            @SCALE  = SCALE ,
      304+    1960                            @SIGN   = SIGN );
      305+    1961
      306+    1962               CALL Z8HU$INCCNT(@FROM, 1);
      307+    1963               CALL Z8HU$WALK(@TO);
      308+    1964             END;
      309+    1965
      310+    1966        %MEND;
      311+    1967
      312+    1968
      313+    1969        %MACRO UNFAVOR;
      314+    1970             DO;
      315+    1971               RAT.B.FAVORED(%ARA) = FALSE;
      316+    1972               RAT.B.FAVORED(%ARQ) = FALSE;
      317+    1973             END;
      318+    1974        %MEND;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:134  
      319+    1975
      320+    1976
      321+    1977
      322+    1978
      323+    1979        %MACRO SWAP_RELATIONAL(OP_CODE=PCOM.XABS);
      324+    1980               DO ;
      325+    1981
      326+    1982                 DO CASE(OP_CODE) ;
      327+    1983
      328+    1984                   CASE(%GO_LESS_THAN_ARITH) ;
      329+    1985                     OP_CODE = %GO_GREATER_THAN_ARITH ;
      330+    1986
      331+    1987                   CASE(%GO_LESS_THAN_ALPHA) ;
      332+    1988                     OP_CODE = %GO_GREATER_THAN_ALPHA ;
      333+    1989
      334+    1990                   CASE(%GO_GREATER_THAN_ARITH) ;
      335+    1991                     OP_CODE = %GO_LESS_THAN_ARITH ;
      336+    1992
      337+    1993                   CASE(%GO_GREATER_THAN_ALPHA) ;
      338+    1994                     OP_CODE = %GO_LESS_THAN_ALPHA ;
      339+    1995
      340+    1996                   CASE(%GO_LESS_THAN_OR_EQUAL_ARITH) ;
      341+    1997                     OP_CODE = %GO_GREATER_THAN_OR_EQUAL_ARITH ;
      342+    1998
      343+    1999                   CASE(%GO_LESS_THAN_OR_EQUAL_ALPHA) ;
      344+    2000                     OP_CODE = %GO_GREATER_THAN_OR_EQUAL_ALPHA ;
      345+    2001
      346+    2002                   CASE(%GO_GREATER_THAN_OR_EQUAL_ARITH) ;
      347+    2003                     OP_CODE = %GO_LESS_THAN_OR_EQUAL_ARITH ;
      348+    2004
      349+    2005                   CASE(%GO_GREATER_THAN_OR_EQUAL_ALPHA) ;
      350+    2006                     OP_CODE = %GO_LESS_THAN_OR_EQUAL_ALPHA ;
      351+    2007
      352+    2008                   CASE(%GO_EQUAL) ;
      353+    2009                     /* No swap needed */
      354+    2010
      355+    2011                   CASE(%GO_NOT_EQUAL) ;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:135  
      356+    2012                     /* No swap needed */
      357+    2013
      358+    2014                 END ;
      359+    2015
      360+    2016               END ;
      361+    2017        %MEND ;
      362+    2018
      363+    2019
      364+    2020        %MACRO CONVERT_DESC_FOR_DPS88;
      365+    2021
      366+    2022             DO;
      367+    2023               IF DEFER_BUFFER.INST_WORD.OP_CODE(0) = %MVT_OP THEN
      368+    2024                 DO;
      369+    2025                   CALL Z8AU$TYPE_DESCRIPTOR (NODE$, TYPE_DESC);
      370+    2026                   /* This is necessary because although the descriptor in the
      371+    2027                      REF item is correct, there is nothing in the REF item
      372+    2028                      that gives any indication of if the string is numeric or
      373+    2029                      non-numeric; if numeric, the scale factor and MBZ2
      374+    2030                      fields must be zeroed out, but otherwise they are OK. One
      375+    2031                      can usually tell be looking at the ST item, yet not
      376+    2032                      always, for there can already have been a type conversion;
      377+    2033                      the LOP of a CVT item can be another CVT item. */
      378+    2034                   DO CASE(ST$$ -> ST.TYPE);
      379+    2035                     CASE(%TYD, %TYO, %TYF);
      380+    2036                       INST_WORD.NDSC.SF = 0;
      381+    2037                       INST_WORD.ADSC.MBZ2 = FALSE;
      382+    2038                       INST_WORD.ADSC.TA = %ADSC9; /* May be needed for %TYF */
      383+    2039
      384+    2040                     CASE(%TYC);
      385+    2041                       INST_WORD.NDSC.SF = 0;
      386+    2042                       INST_WORD.ADSC.MBZ2 = FALSE;
      387+    2043                       INST_WORD.ADSC.TA = %ADSC6;
      388+    2044
      389+    2045                     CASE(%TYB);
      390+    2046                       INST_WORD.ADSC.TA = %ADSC6;
      391+    2047                   END; /* CASE (TYPE) */
      392+    2048                 END; /* MVT */
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:136  
      393+    2049
      394+    2050               ELSE IF COMCOM.OB.ELS   THEN
      395+    2051                 DO CASE (DEFER_BUFFER.INST_WORD.OP_CODE(0));
      396+    2052
      397+    2053                   CASE( %AD2DX_OP, %AD3DX_OP,
      398+    2054                         %SB2DX_OP, %SB3DX_OP,
      399+    2055                         %MP2DX_OP, %MP3DX_OP,
      400+    2056                         %MVNX_OP, %CMPNX_OP,
      401+    2057                         %DV2DX_OP, %DV3DX_OP );
      402+    2058                     IF (ST$$ -> ST.TYPE = %TYO AND ST$$ -> ST.NDSC.TN = %NDSC9) OR
      403+    2059                        (ST$$ -> ST.TYPE = %TYF AND ST$$ -> ST.NDSC.TN = %NDSC4) THEN
      404+    2060                       DO; /* Overpunched operand */
      405+    2061                         INST_WORD.NDSC.TN = %NDSC9; /* Needed if EBCDIC */
      406+    2062                         DO CASE(BITBIN(ST$$ -> ST.NDSC.S));
      407+    2063
      408+    2064                           CASE(%BITBIN(LEADING_SIGN));
      409+    2065                             INST_WORD.NDSC.S = %OVP_LEADING_SIGN;
      410+    2066
      411+    2067                           CASE(%BITBIN(TRAILING_SIGN));
      412+    2068                             INST_WORD.NDSC.S = %OVP_TRAILING_SIGN;
      413+    2069
      414+    2070                           CASE(%BITBIN(FLOATING_POINT_LEADING_SIGN),
      415+    2071                                %BITBIN(NO_SIGN));
      416+    2072                             CALL Z8AE$ERROR(%E$UNEXPECTED_CASE);
      417+    2073                         END; /*CASE (TYPE)*/
      418+    2074                       END;
      419+    2075                   CASE(ELSE);
      420+    2076                     /* NULL */
      421+    2077                 END; /*CASE (OP_CODE)*/
      422+    2078             END;
      423+    2079        %MEND;
      424+    2080
      425+    2081
      426+    2082        %EQU UNEVAL_T = 000;
      427+    2083        %EQU REF_T    = 004;
      428+    2084        %EQU USING_HALF_WORD_RELOCATION = '1'B;
      429+    2085
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:137  
      430+    2086        %IF CP6;
      431+    2087
      432+    2088         %EQU STACK_HEADER = 1;
      433+    2089
      434+    2090        %ELSE;
      438+    2094        %ENDIF;
      439+    2095
      440+    2096        %EQU HALF_WORD_REL = 0;
      441+    2097        %EQU LDP      = 2;
      442+    2098        %EQU ON_ESC_LIST = 1;
      443+    2099        %EQU NOT_ON_ESC_LIST = 3;
      444+    2100        %EQU LIB_CALL = 4;
      445+    2101        %EQU BASEP = 5;
      446+    2102
      447+    2103        %EJECT;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:138  
      400     2104             %INCLUDE Z8H_TEMP;
        1+    2105        /*T***********************************************************/
        2+    2106        /*T*                                                         */
        3+    2107        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    2108        /*T*                                                         */
        5+    2109        /*T***********************************************************/
        6+    2110             %EQU NINE_BIT  = 9;
        7+    2111             %EQU SIX_BIT   = 6;
        8+    2112             %EQU FOUR_BIT  = 4;
        9+    2113
       10+    2114
       11+    2115             %EQU MAX_LENGTH= 20;
       12+    2116
       13+    2117             %EQU A = 0;
       14+    2118             %EQU N = 1;
       15+    2119
       16+    2120             %EQU NO_ATTACH = 0;
       17+    2121
       18+    2122             %EQU EVEN    = 02;
       19+    2123             %EQU ODD     = 01;
       20+    2124             %EQU NEXT    = 00;
       21+    2125
       22+    2126             %EQU STALE   = 00;
       23+    2127             %EQU FRESH   = 01;
       24+    2128             %EQU PURE    = 03;
       25+    2129
       26+    2130             %EQU HEX = 1;
       27+    2131             %EQU FILL = 2;
       28+    2132             %EQU DPS88 = 3;
       29+    2133             %EQU ELS  = 4;
       30+    2134
       31+    2135             %EQU AONE = 1;
       32+    2136             %EQU ARGS0 = 2;
       33+    2137             %EQU ARGS1 = 3;
       34+    2138             %EQU ARGS2 = 4;
       35+    2139             %EQU ARGS3 = 5;
       36+    2140             %EQU ARGS4 = 6;
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:139  
       37+    2141             %EQU DECZIP = 7;
       38+    2142             %EQU DECONE = 8;
       39+    2143             %EQU HALF_REL = 9;
       40+    2144             %EQU E_L_WORD = 10;
       41+    2145
       42+    2146             %EQU LABEL = 1;
       43+    2147             %EQU REMAIN = 4;
       44+    2148             %EQU TIMES = 7;
       45+    2149             %EQU DESCR_ = 4;
       46+    2150
       47+    2151
      401     2152
      402     2153    1        RETURN;

   2153 19 000001   000000 221200 0                  LDX1  ! 0
        19 000002   000001 702211                    TSX2  ! 1,X1
      403     2154    1   END Z8HD$DOCUMENT;

PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:140  
--  Include file information  --

   Z8H_TEMP.:Z8A6TOU  is referenced.
   Z8H_SUPPORT.:Z8A6TOU  is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8H_RAT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8H_PCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8H_PASSES.:Z8A6TOU  is referenced.
   Z8H_OPCODES.:Z8A6TOU  is referenced.
   Z8H_MOAS.:Z8A6TOU  is referenced.
   Z8H_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8H_DIRECT.:Z8A6TOU  is referenced.
   Z8H_DEP.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8H_CODE.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8HD$DOCUMENT.
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:141  

 **** Variables and constants ****

  ****  Section 000  Data  Z8HD$DOCUMENT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   122-0-0/b BIT               1 AORQ                      30-0-0/b BIT               1 DEFER
     3-0-0/w STRC(180)         1 DEFER_BUFFER(0:3)
    27-0-0/w SBIN              1 DEFER_BUFFER_IDX           1-0-0/b STRC              1 INST_WORD
   121-0-0/w UBIN              1 LAST_FREED               120-0-0/w UBIN              1 LAST_USED
     2-0-0/b STRC              1 MOD_KEY                   31-0-0/w PTR               1 OLD_CURRENT_BLOCK$
    33-0-0/w STRC(1872)        1 PCOM                      33-0-0/w STRC(1872)        1 PCOM_
   117-0-0/w UBIN              1 REGID                     32-0-0/w SBIN              1 SEG_NO#

  ****  Section 001 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 002 LblCom CURRENT_BLOCK$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 CURRENT_BLOCK$

  ****  Section 003 LblCom ROOT_PROC_BLOCK$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ROOT_PROC_BLOCK$

  ****  Section 004 LblCom DEP
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:142  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC(1728)        1 DEP

  ****  Section 005 LblCom NUMBER_OF_PRIMES

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NUMBER_OF_PRIMES

  ****  Section 006 LblCom NUMBER_OF_TEMPS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NUMBER_OF_TEMPS

  ****  Section 007 LblCom NUMBER_OF_REFS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NUMBER_OF_REFS

  ****  Section 008 LblCom GENERATING_PTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 GENERATING_PTRS

  ****  Section 009 LblCom USE_PROC_RETURN

  ****  Scalars and arrays  ****
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:143  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 USE_PROC_RETURN

  ****  Section 010 LblCom CURRENT_SCOPE$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 CURRENT_SCOPE$

  ****  Section 011 LblCom HEAD_REF$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAD_REF$

  ****  Section 012 LblCom HEAD_TEMP$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAD_TEMP$

  ****  Section 013 LblCom CONST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 CONST$

  ****  Section 014 LblCom HEAD_PRIMES$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:144  
     0-0-0/w PTR               1 HEAD_PRIMES$

  ****  Section 015 LblCom CUR_LOOP_LEVEL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 CUR_LOOP_LEVEL

  ****  Section 016 LblCom PEPD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC              1 PEPD(0:1)

  ****  Section 017 LblCom SUPP_DATA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC              1 SUPP_DATA

  ****  Section 018 LblCom RAT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)         1 RAT(0:27)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(72)          1 CONT
     0-0-0/w STRC(36864)       1 PAGE
PL6.E3A0      #001=Z8HD$DOCUMENT File=Z8HD.:Z8A6TSI                              SAT 08/09/97 13:17 Page:145  


   Procedure Z8HD$DOCUMENT requires 3 words for executable code.
   Procedure Z8HD$DOCUMENT is declared NOAUTO and requires 84 words of local(STATIC) storage.

    No errors detected in file Z8HD.:Z8A6TSI    .
