

09:09 AUG 09 '97 LR_ERR_EXT.:Z8A6SI                                        1    
    1      /*M* ERRREC_EXT => INCLUDE FILE FOR ERROR CORRECTION EXTERNAL DATA */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7
    8
    9
   10      DCL 1 STRING ALIGNED BASED,
   11            2 LEN_IN_H UBIN HALF HALIGNED,
   12            2 TOK(0:0) SBIN HALF HALIGNED;
   13
   14      DCL 1 STRINGCHR ALIGNED BASED,
   15            2 LEN_IN_H UBIN HALF HALIGNED,
   16            2 TOKCHR CHAR(STRINGCHR.LEN_IN_H) UNAL;
   17
   18      %EQU MAX_GARBAGE_SIZE = 100;
   19
   20      DCL GARBAGE (0:%MAX_GARBAGE_SIZE) PTR EXT INIT(ADDR(NIL),ADDR(NIL)*%MAX_GARBAGE_SIZE);
   21
   22      DCL 1 CELL ALIGNED BASED,
   23            2 LINK PTR,
   24            2 LEN_IN_W UBIN WORD;
   25
   26      DCL AMT_GARBAGE SBIN WORD EXT INIT(0);  /* Amount of garbage available for reuse */
   27
   28
   29      %MACRO APPEND_STRING (S1=, S2=);
   30
   31      /* Append string S1 onto the end of string S2.
   32         The storage for the string S2 must already have been reserved.
   33      */
   34
   35         DO;
   36          SUBSTR (S2 -> STRINGCHR.TOKCHR,
   37                  S2 -> STRINGCHR.LEN_IN_H * 2,
09:09 AUG 09 '97 LR_ERR_EXT.:Z8A6SI                                        2    
   38                  S1 -> STRINGCHR.LEN_IN_H * 2)
   39            = SUBSTR (S1 -> STRINGCHR.TOKCHR,
   40                       0,
   41                       S1 -> STRINGCHR.LEN_IN_H * 2);
   42          S2->STRING.LEN_IN_H = S1->STRING.LEN_IN_H + S2->STRING.LEN_IN_H;
   43        END;
   44
   45      %MEND;
   46
   47
   48
   49      DCL LEAST_COST_STRING (0:NR_SYMS_MAX) PTR EXT;
   50
   51
   52
   53      DCL LEAST_COST_PREFIX (0:NR_SYMS_MAX) PTR EXT;
   54
   55      DCL 1 PREFIX ALIGNED BASED,
   56            2 LEN_IN_H UBIN HALF HALIGNED,
   57            2 TERM SBIN HALF HALIGNED,
   58            2 LINK     PTR ALIGNED,
   59            2 TOK(0:0) SBIN HALF HALIGNED;  /* INDEX TO LEAST_COST_STRING */
   60
   61      DCL 1 PREFIXCHR ALIGNED BASED,
   62            2 LEN_IN_H UBIN HALF HALIGNED,
   63            2 TERM SBIN HALF HALIGNED,
   64            2 LINK PTR ALIGNED,
   65            2 TOKCHR CHAR(PREFIXCHR.LEN_IN_H) UNAL;
   66
   67      DCL 1 CURRE (0:NR_SYMS_MAX) EXT,
   68            2 COST SBIN HALF DALIGNED,
   69            2 PROD SBIN HALF HALIGNED,
   70            2 INDX SBIN HALF HALIGNED,
   71            2 EXPANDED BOOLEAN HALIGNED;
   72
   73
   74
09:09 AUG 09 '97 LR_ERR_EXT.:Z8A6SI                                        3    
   75      DCL LCP_INDX(0:NR_SYMS_MAX) SBIN HALF HALIGNED EXT;
   76
   77      DCL COM_STRSP_LEN SBIN WORD EXT;
   78
   79      DCL COM_SEARCH_STRING PTR EXT;
   80      DCL COM_SEARCH_STRING_LEN SBIN WORD EXT;
   81      DCL CSEARCH_STRING CHAR(COM_SEARCH_STRING_LEN) BASED(COM_SEARCH_STRING);
   82
   83      %EQU MAX_STRSP_LEN = 50000;
   84      %EQU MAX_STRSP_LEN_H = MAX_STRSP_LEN / 2 - 1;
   85
   86      DCL COM_STRING_SPACE_LEN SBIN WORD EXT INIT(%MAX_STRSP_LEN);
   87      DCL COM_STRING_SPACE_H(0:%MAX_STRSP_LEN_H) SBIN HALF HALIGNED EXT;
   88      DCL COM_STRING_SPACE$ PTR EXT INIT(ADDR(COM_STRING_SPACE_H));
   89      DCL COM_STRING_SPACE CHAR(COM_STRING_SPACE_LEN) BASED(COM_STRING_SPACE$);
   90
   91      DCL COM_STRING_PTR PTR EXT INIT(ADDR(COM_STRING_SPACE_H));
   92      DCL COM_STRINGS CHAR(COM_STRSP_LEN) BASED(COM_STRING_PTR);
   93      DCL COM_STRING_INDX SBIN WORD EXT;
   94
   95      DCL LCP_TABLE_LEN SBIN WORD EXT INIT(0);
   96
   97
   98      DCL 1 STATE_ITEM_INDEX (0:%NR_CONFIG_MAX) EXT,
   99            2 BASIS  SBIN HALF HALIGNED,
  100            2 CLOSURE SBIN HALF HALIGNED;
  101
  102      %EQU PATH_LEN_MAX = NR_CONFIG_MAX * 8;
  103      %EQU PATH_LEN_MAX_C = (PATH_LEN_MAX + 1)*4;
  104
  105      DCL 1 PATH (0:%PATH_LEN_MAX) EXT,
  106            2 INDX  SBIN HALF HALIGNED,
  107            2 LEN   SBIN HALF HALIGNED;
  108
  109      DCL PATH_STRINGS_LEN SBIN WORD EXT INIT(%PATH_LEN_MAX_C);
  110      DCL PATH_ADDR$ PTR EXT INIT(ADDR(PATH));
  111      DCL PATH_STRINGS CHAR(PATH_STRINGS_LEN) BASED(PATH_ADDR$);
09:09 AUG 09 '97 LR_ERR_EXT.:Z8A6SI                                        4    
  112
  113      DCL PATH_TABLE_LEN SBIN WORD EXT;
  114
  115
  116      DCL EDGECOST (0:%NR_ELEM_MAX) SBIN WORD EXT;
  117
  118      DCL ITEM_TABLE_LEN SBIN WORD EXT;
  119
  120      DCL 1 ORDERED_ITEM(0:%NR_ELEM_MAX) EXT,
  121            2 E SBIN HALF HALIGNED,   /* ELEM */
  122            2 I SBIN HALF HALIGNED;  /* ITEM IN ELEM */
  123
  124      DCL NEIGHBOR (0:%NR_ELEM_MAX) SBIN WORD EXT;  /* INDEX INTO C_SET_B.ELEM */
  125
  126      DCL 1 PATH_INFO EXT,
  127            2 DEST (0:%NR_ELEM_MAX) SBIN ALIGNED,
  128            2 COST (0:%NR_ELEM_MAX) SBIN ALIGNED;
  129
  130      DCL CHOSEN (0:%NR_ELEM_MAX) BOOLEAN ALIGNED EXT;
  131
  132      DCL REACHED (0:%NR_ELEM_MAX) BOOLEAN UNAL EXT;
  133
  134      DCL EXP_PATH_INDX SBIN WORD EXT;
  135
  136
  137
  138
  139      DCL OUT_STR ENTRY(2);
  140      DCL OUT_DEC ENTRY(1);
  141      DCL FLUSH ENTRY;
  142      DCL DIAG ENTRY(6);

