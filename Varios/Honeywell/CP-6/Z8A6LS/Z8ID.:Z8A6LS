VERSION A06

PL6.E3A0      #001=Z8ID$DOCUMENTATION File=Z8ID.:Z8A6TSI                         SAT 08/09/97 13:27 Page:1    
        1        1        /*M* Z8ID Annotator System Independent Design Documentation */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9
       10       10        /*P*
       11       11               NAME: Z8ID
       12       12            PURPOSE: To contain documentation and macro expansion for the Annotator
       13       13                       in a convenient place for review.
       14       14        */
       15       15
       16       16        Z8ID$DOCUMENTATION: PROC;
       17       17
       18       18        /*D*
       19       19               NAME: Z8ID$DOCUMENTATION
       20       20        DESCRIPTION::
       21       21
       22       22                   COBOL85 ANNOTATOR SYSTEM INDEPENDENT DESIGN NOTES
       23       23                   ==================================================
       24       24
       25       25        UPDATED:
       26       26                   3/31/81 LS
       27       27
       28       28
       29       29        SOURCE INPUT
       30       30        -------------
       31       31
       32       32        In order to produce output containing source lines, including
       33       33        LSTIN, LSTOU, and error messages, the Annotator  needs to have
       34       34        access to the source input.  The access must include source lines
       35       35        "copied" from other files, lines with "replaced" information,
       36       36        as well as lines read from the primary file.  This additional
       37       37        reading of the preprocessed source must be possible for every
PL6.E3A0      #001=Z8ID$DOCUMENTATION File=Z8ID.:Z8A6TSI                         SAT 08/09/97 13:27 Page:2    
       38       38        compilation, since error message handling requires that the
       39       39        offending source line be printed, including errors that were detected
       40       40        long after the line was originally read.
       41       41
       42       42        The proposed interface between the  Annotator and the compiler
       43       43        front end to reread source lines are the routines
       44       44        PREPARE_EXPANDED_SOURCE and GET_EXPANDED_SOURCE_LINE.
       45       45        PREPARE_EXPANDED_SOURCE is called at the beginning of the
       46       46        Annotator phase in order to perform initialization before
       47       47        repetitively calling GET_EXPANDED_SOURCE_LINE.  GET_EXPANDED_SOURCE_LINE
       48       48        is similar to GET_NEXT_SOURCE_LINE used by the front end to
       49       49        sequentially read source input the first time during compilation.
       50       50        The difference is that GET_EXPANDED_SOURCE_LINE returns
       51       51        the source lines expanded by any copies and replaces done to the original
       52       52        text.
       53       53
       54       54        GET_EXPANDED_SOURCE_LINE returns the following information in
       55       55        static storage:
       56       56
       57       57             EXPSRC_READ_PARAMETERS.PSRC =>
       58       58
       59       59                      Pointer to the line
       60       60
       61       61             EXPSRC_READ_PARAMETERS.LSRC =>
       62       62
       63       63                      SBIN WORD Length of the line.
       64       64
       65       65             EXPSRC_READ_PARAMETERS.ESN =>
       66       66
       67       67                      CHAR(12) external line number returned by XUU$READ.
       68       68
       69       69             EXPSRC_READ_PARAMETERS.ISN =>
       70       70
       71       71                      SBIN WORD internal line number for use in cross
       72       72                      referencing LSTIN source line and errors, XREF, etc
       73       73
       74       74             EXPSRC_READ_PARAMETERS.COPY_LINE =>
PL6.E3A0      #001=Z8ID$DOCUMENTATION File=Z8ID.:Z8A6TSI                         SAT 08/09/97 13:27 Page:3    
       75       75
       76       76                      BIT(1) boolean variable specifying whether the source
       77       77                      line came from an "copy" file.
       78       78
       79       79             EXPSRC_READ_PARAMETER.UPDATE_LINE =>
       80       80
       81       81                      BIT(1) boolean variable specifying whether the source
       82       82                      came from an "update" file.
       83       83
       84       84             EXPSRC_READ_PARAMETER.IDS_LINE =>
       85       85
       86       86                      BIT (1) boolean variable specifying whether the
       87       87                      source line came from an "IDS" schema file.
       88       88
       89       89             EXPSRC_READ_PARAMETER.REP_LINE =>
       90       90
       91       91                      BIT (1) boolean variable specifying whether the
       92       92                      source line contained any replaced tokens.
       93       93
       94       94             ALTRET => will be taken by GET_EXPANDED_SOURCE_LINE
       95       95                          upon EOF of source information.
       96       96
       97       97
       98       98        The routine GET_NEXT_SOURCE_LINE, used by the front end, performs
       99       99        other functions besides reading source input.  Depending on the
      100      100        compiler options selected, updates may be merged with source input,
      101      101        "include" files will be automatically nested and read, and updated
      102      102        source output will be generated.  It is the responsibility of
      103      103        this routine to perform its tasks in an efficient manner.  In
      104      104        particular, in the case of no copy or replaces and no updates
      105      105        with a readable primary source file, no intermediate copy of the
      106      106        expanded source input need by created for the routine
      107      107        GET_EXPANDED_SOURCE_LINE, since the source input file
      108      108        may be reread directly more efficiently than creating the
      109      109        intermediate file.
      110      110
      111      111        For the case where COBOL replaces are being performed,
PL6.E3A0      #001=Z8ID$DOCUMENTATION File=Z8ID.:Z8A6TSI                         SAT 08/09/97 13:27 Page:4    
      112      112        GET_EXPANDED_SOURCE_LINE returns to the annotator the "preprocessed"
      113      113        source input, the source expanded by copies and replaces.  This
      114      114        source is used to produce the LSTIN and LSTOU listings with a
      115      115        associated error messages.  Once again for efficiency
      116      116        purposes, it is possible to have GET_NEXT_SOURCE_LINE interact with
      117      117        GET_EXPANDED_SOURCE_LINE  to perform the minimum amount of I/O,
      118      118        depending on whether the copy or replaces are used,
      119      119        and whether the primary source file is rereadable.
      120      120
      121      121        */
      122      122
      123      123
      124      124    1   END /* Z8ID */;

PL6.E3A0      #001=Z8ID$DOCUMENTATION File=Z8ID.:Z8A6TSI                         SAT 08/09/97 13:27 Page:5    
      No diagnostics issued in procedure Z8ID$DOCUMENTATION.

   No code generated for procedure Z8ID$DOCUMENTATION .
   Procedure Z8ID$DOCUMENTATION requires 4 words of local(AUTO) storage.

    No errors detected in file Z8ID.:Z8A6TSI    .

PL6.E3A0      #001=Z8ID$DOCUMENTATION File=Z8ID.:Z8A6TSI                         SAT 08/09/97 13:27 Page:6    

 Object Unit name= Z8ID$DOCUMENTATION                         File name= Z8ID.:Z8A6TOU
 UTS= AUG 09 '97 13:27:16.52 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none     0      0  Z8ID$DOCUMENTATION

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes     ~proc       0  Z8ID$DOCUMENTATION
PL6.E3A0      #001=Z8ID$DOCUMENTATION File=Z8ID.:Z8A6TSI                         SAT 08/09/97 13:27 Page:7    

        1        1        /*M* Z8ID Annotator System Independent Design Documentation */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9
       10       10        /*P*
       11       11               NAME: Z8ID
       12       12            PURPOSE: To contain documentation and macro expansion for the Annotator
       13       13                       in a convenient place for review.
       14       14        */
       15       15
       16       16        Z8ID$DOCUMENTATION: PROC;
       17       17
       18       18        /*D*
       19       19               NAME: Z8ID$DOCUMENTATION
       20       20        DESCRIPTION::
       21       21
       22       22                   COBOL85 ANNOTATOR SYSTEM INDEPENDENT DESIGN NOTES
       23       23                   ==================================================
       24       24
       25       25        UPDATED:
       26       26                   3/31/81 LS
       27       27
       28       28
       29       29        SOURCE INPUT
       30       30        -------------
       31       31
       32       32        In order to produce output containing source lines, including
       33       33        LSTIN, LSTOU, and error messages, the Annotator  needs to have
       34       34        access to the source input.  The access must include source lines
       35       35        "copied" from other files, lines with "replaced" information,
       36       36        as well as lines read from the primary file.  This additional
       37       37        reading of the preprocessed source must be possible for every
PL6.E3A0      #001=Z8ID$DOCUMENTATION File=Z8ID.:Z8A6TSI                         SAT 08/09/97 13:27 Page:8    
       38       38        compilation, since error message handling requires that the
       39       39        offending source line be printed, including errors that were detected
       40       40        long after the line was originally read.
       41       41
       42       42        The proposed interface between the  Annotator and the compiler
       43       43        front end to reread source lines are the routines
       44       44        PREPARE_EXPANDED_SOURCE and GET_EXPANDED_SOURCE_LINE.
       45       45        PREPARE_EXPANDED_SOURCE is called at the beginning of the
       46       46        Annotator phase in order to perform initialization before
       47       47        repetitively calling GET_EXPANDED_SOURCE_LINE.  GET_EXPANDED_SOURCE_LINE
       48       48        is similar to GET_NEXT_SOURCE_LINE used by the front end to
       49       49        sequentially read source input the first time during compilation.
       50       50        The difference is that GET_EXPANDED_SOURCE_LINE returns
       51       51        the source lines expanded by any copies and replaces done to the original
       52       52        text.
       53       53
       54       54        GET_EXPANDED_SOURCE_LINE returns the following information in
       55       55        static storage:
       56       56
       57       57             EXPSRC_READ_PARAMETERS.PSRC =>
       58       58
       59       59                      Pointer to the line
       60       60
       61       61             EXPSRC_READ_PARAMETERS.LSRC =>
       62       62
       63       63                      SBIN WORD Length of the line.
       64       64
       65       65             EXPSRC_READ_PARAMETERS.ESN =>
       66       66
       67       67                      CHAR(12) external line number returned by XUU$READ.
       68       68
       69       69             EXPSRC_READ_PARAMETERS.ISN =>
       70       70
       71       71                      SBIN WORD internal line number for use in cross
       72       72                      referencing LSTIN source line and errors, XREF, etc
       73       73
       74       74             EXPSRC_READ_PARAMETERS.COPY_LINE =>
PL6.E3A0      #001=Z8ID$DOCUMENTATION File=Z8ID.:Z8A6TSI                         SAT 08/09/97 13:27 Page:9    
       75       75
       76       76                      BIT(1) boolean variable specifying whether the source
       77       77                      line came from an "copy" file.
       78       78
       79       79             EXPSRC_READ_PARAMETER.UPDATE_LINE =>
       80       80
       81       81                      BIT(1) boolean variable specifying whether the source
       82       82                      came from an "update" file.
       83       83
       84       84             EXPSRC_READ_PARAMETER.IDS_LINE =>
       85       85
       86       86                      BIT (1) boolean variable specifying whether the
       87       87                      source line came from an "IDS" schema file.
       88       88
       89       89             EXPSRC_READ_PARAMETER.REP_LINE =>
       90       90
       91       91                      BIT (1) boolean variable specifying whether the
       92       92                      source line contained any replaced tokens.
       93       93
       94       94             ALTRET => will be taken by GET_EXPANDED_SOURCE_LINE
       95       95                          upon EOF of source information.
       96       96
       97       97
       98       98        The routine GET_NEXT_SOURCE_LINE, used by the front end, performs
       99       99        other functions besides reading source input.  Depending on the
      100      100        compiler options selected, updates may be merged with source input,
      101      101        "include" files will be automatically nested and read, and updated
      102      102        source output will be generated.  It is the responsibility of
      103      103        this routine to perform its tasks in an efficient manner.  In
      104      104        particular, in the case of no copy or replaces and no updates
      105      105        with a readable primary source file, no intermediate copy of the
      106      106        expanded source input need by created for the routine
      107      107        GET_EXPANDED_SOURCE_LINE, since the source input file
      108      108        may be reread directly more efficiently than creating the
      109      109        intermediate file.
      110      110
      111      111        For the case where COBOL replaces are being performed,
PL6.E3A0      #001=Z8ID$DOCUMENTATION File=Z8ID.:Z8A6TSI                         SAT 08/09/97 13:27 Page:10   
      112      112        GET_EXPANDED_SOURCE_LINE returns to the annotator the "preprocessed"
      113      113        source input, the source expanded by copies and replaces.  This
      114      114        source is used to produce the LSTIN and LSTOU listings with a
      115      115        associated error messages.  Once again for efficiency
      116      116        purposes, it is possible to have GET_NEXT_SOURCE_LINE interact with
      117      117        GET_EXPANDED_SOURCE_LINE  to perform the minimum amount of I/O,
      118      118        depending on whether the copy or replaces are used,
      119      119        and whether the primary source file is rereadable.
      120      120
      121      121        */
      122      122
      123      123
      124      124    1   END /* Z8ID */;

PL6.E3A0      #001=Z8ID$DOCUMENTATION File=Z8ID.:Z8A6TSI                         SAT 08/09/97 13:27 Page:11   
      No diagnostics issued in procedure Z8ID$DOCUMENTATION.
PL6.E3A0      #001=Z8ID$DOCUMENTATION File=Z8ID.:Z8A6TSI                         SAT 08/09/97 13:27 Page:12   

 **** Variables and constants ****


   No code generated for procedure Z8ID$DOCUMENTATION .
   Procedure Z8ID$DOCUMENTATION requires 4 words of local(AUTO) storage.

    No errors detected in file Z8ID.:Z8A6TSI    .
