VERSION A06

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        Z8DC$SIZE_CALC: PROC (QUAL$,MAX_BOUND) ; /* RECURSIVE */
        7        7
        8        8        /*M* Z8DC$SIZE_CALC  Recursive, calculates size of variable     */
        9        9
       10       10        /*P*
       11       11               NAME:  Z8DC$SIZE_CALC
       12       12             AUTHOR:  Greg Myers
       13       13            PURPOSE:  Calculates size of 01 structure and sets the SA field.
       14       14                      This is called recursively to calculate 02's, 03's, etc.
       15       15        */
       16       16
       17       17        /*D*
       18       18               NAME:  Z8DC$SIZE_CALC
       19       19               CALL:  CALL Z8DC$SIZE_CALC (QUAL$,MAX_BOUND);
       20       20          INTERFACE:  This routine only calls itself as it is recursive.
       21       21
       22       22              INPUT:      QUAL$  pointer to QLT entry for top level of structure.
       23       23                      MAX_BOUND  maximum alignment boundary for group item.
       24       24                      The Symbol Table, LTS, and QLT are accessed.
       25       25             OUTPUT:  QUAL$ -> QLT.ST$ -> VARIABLE.ADSC.N  Length of structure
       26       26                      QUAL$ -> QLT.ST$ -> VARIABLE.SA      Word position for storage address
       27       27                      QUAL$ -> QLT.ST$ -> VARIABLE.ADSC.CN Byte position within word
       28       28                      Computes ST.SA and ST.NDSC.n for all ELEMENTARY sons
       29       29            SCRATCH:  LTS$
       30       30                      O1COM.NEXT_SA
       31       31                      O1COM.NEXT_BYTE
       32       32                      O1COM.NEXT_HALF_BYTE
       33       33                      O1COM.NEXT_CHAR (CHAR refers to BCD characters)
       34       34                      O1COM.LAST_ITEM_GBCD
       35       35
       36       36        DESCRIPTION:  This procedure uses a case statement to align each data item
       37       37                      to its correct boundary.  It calculates the size of the
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:2    
       38       38                      variable and its son using the type of item and size of its
       39       39                      dimensions.  Storage allocation variables (O1COM.NEXT_SA)
       40       40                      are incremented and are checked for boundary conditions.
       41       41                      The size is raised to the nearest multiple of its maximum
       42       42                      interior alignment: ie. double word,half_word, etc.,
       43       43                      with the minimum boundary type being a byte.  The size of the
       44       44                      item is then stored in ST.ADSC.N unless it is greater than 4095
       45       45                      bytes then it is stored in LONG.LENGTH.
       46       46
       47       47        */
       48       48        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:3    
       49       49        /*V*
       50       50            INCLUDE_AND_EQU'S -- The include files and preprocessor variables
       51       51                                 are set up here.
       52       52        */
       53       53
       54       54        %EQU PHASE = 1 ;
       55       55
       56       56        %INCLUDE Z8A_DEFC ;
       57      124        %INCLUDE Z8A_SUPP_MAC ;
       58     2524        %INCLUDE Z8A_ERR_NUMS ;
       59     3288        %INCLUDE Z8A_ST ;
       60     6947        %INCLUDE Z8A_QLT ;
       61     7053        %INCLUDE Z8A_LTS ;
       62     9130        %INCLUDE Z8A_COMCOM ;
       63     9780        %INCLUDE Z8A_MKCN;
       64     9797        %INCLUDE Z8A_ETT;
       65    10098        %INCLUDE Z8A_TYPES;
       66    10272        %INCLUDE Z8E_STACKS;
       67    12538        %INCLUDE Z8E_O1COM ;
       68    13299
       69    13300        %EQU BYTE_STORAGE_LIMIT = %(#256K * 4) ; /* Storage limit in bytes */
       70    13301        %EQU ST_STORAGE_LIMIT = BITBIN('007777'O) ;
             13301            /* Symbol table  ADSC.N or NDSC.N size limitation */
       71    13302        %EQU CHARS_PER_WORD = 6 ;
       72    13303        %EQU BYTE = 1 ;
       73    13304        %EQU NON_DOUBLE_WORD_ALIGNED = 1 ;
       74    13305        %EQU HALF_BYTE_VAR = TRUE ;
       75    13306        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:4    
       76    13307    1   DCL   QUAL$         PTR ;
       77    13308    1   DCL   CONDITION$    PTR;
       78    13309    1   DCL   MAX_BOUND     SBIN HALF ; /* Maximum boundary requirement */
       79    13310    1   DCL   MAX_BOUND_SON SBIN HALF AUTO ;  /* Used for recursive call */
       80    13311    1   DCL   MAX_BOUND1    SBIN WORD AUTO ;  /* MAX_BOUND in bits */
       81    13312    1   DCL   SYM$          PTR AUTO ;       /* Ptr to ST item */
       82    13313    1   DCL   SIZE          SBIN WORD AUTO ;
       83    13314    1   DCL   NEXT$         PTR AUTO ;
       84    13315    1   DCL   MY_SIZE       UBIN WORD AUTO ;
       85    13316    1   DCL   MY_SIZE1      UBIN WORD AUTO ;
       86    13317    1   DCL   LAST_DIM      SBIN WORD AUTO ;
       87    13318    1   DCL   DEP_SIZE      SBIN WORD;            /*#32767*/
       88    13319    1   DCL   DIGIT_POS     SBIN HALF AUTO ;  /* Digit pos in word   */
       89    13320    1   DCL   DIGIT_POS_IN_BITS SBIN WORD ;
       90    13321    1   DCL   FILLER_SIZE   UBIN WORD AUTO ;  /* Amount of filler in bits */
       91    13322    1   DCL   FIRST_ELEM$   PTR AUTO ;        /* Pointer to first ELEMENTARY element */
       92    13323    1   DCL   OBJECT_ST$   PTR AUTO ;        /* Ptr to object of REDEFINES         */
       93    13324    1   DCL   SUBJECT_QLT$ PTR ;
       94    13325    1   DCL   SUBJECT_ST$  PTR ;
       95    13326    1   DCL   LAST_SA         SBIN WORD;     /*#35497*/
       96    13327    1   DCL   LAST_BYTE       UBIN WORD;     /*#35497*/
       97    13328    1   DCL   LAST_HALF_BYTE  UBIN WORD;     /*#35497*/
       98    13329    1   DCL   LAST_CHAR       UBIN WORD ;
       99    13330    1   DCL   LAST_ITEM_GBCD  BOOLEAN ;
      100    13331    1   DCL   REDEF_OBJ_SIZE        SBIN WORD AUTO ;
             13331            /* Size of object of REDEFINES        */
      101    13332    1   DCL   REDEF_OBJ_SIZE2       SBIN WORD AUTO ;
      102    13333    1   DCL   REDEF_OBJ_FILLER_SIZE SBIN WORD AUTO;
      103    13334    1   DCL   REDEF_FINAL_SA        SBIN WORD AUTO ; /* Ending word pos for REDEFINES    */
      104    13335    1   DCL   REDEF_FINAL_BYTE      SBIN WORD AUTO ; /* Ending byte pos for REDEFINES    */
      105    13336    1   DCL   REDEF_FINAL_HALF_BYTE SBIN WORD AUTO ; /* Ending digit pos for REDEFINES   */
      106    13337    1   DCL   REDEF_FINAL_CHAR      SBIN WORD AUTO ;
             13337            /* Ending character pos for REDEFINES */
      107    13338    1   DCL   REDEF_FINAL_ITEM_GBCD BOOLEAN   AUTO ; /* REDEFINES end with GBCD */
      108    13339    1   DCL   REDEF_OBJ_SA          SBIN WORD AUTO ;
             13339            /* Ending word pos for object of REDEFINES  */
      109    13340    1   DCL   REDEF_OBJ_BYTE        SBIN WORD AUTO ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:5    
             13340            /* Ending byte pos for object of REDEFINES  */
      110    13341    1   DCL   REDEF_OBJ_HALF_BYTE   SBIN WORD AUTO ;
             13341            /* Ending digit pos for object of REDEFINES */
      111    13342    1   DCL   REDEF_OBJ_CHAR        SBIN WORD AUTO ;
             13342            /* Ending char pos for REDEFINES object */
      112    13343    1   DCL   REDEF_OBJ_ITEM_GBCD   BOOLEAN   AUTO ; /* REDEFINES object end with GBCD */
      113    13344    1   DCL   NEG6                  SBIN      CONSTANT INIT (-6) ;
      114    13345    1   DCL   Z8AE$ERROR            ENTRY (12) ;
             13345            /* Call for error message for REDEFINES    */
      115    13346    1   DCL   Z8AU$LENGTH_ETT       ENTRY (2);
      116    13347    1   DCL   Z8DO$LINK_WITH_LTS    ENTRY (2);
      117    13348    1   DCL   Z8AC$MAKE_CONST       ENTRY (1);
      118    13349    1   DCL   Z8AF$FORME            ENTRY (4);
      119    13350
      120    13351        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:6    
      121    13352        /*V*
      122    13353            ALIGNMENT_MACROS -- These macros are used to increment storage counters
      123    13354                                to certain boundaries (double-word, word, half-word,
      124    13355                                or byte).  This is done to satisfy storage alignment
      125    13356                                requirements.  Filler is incremented to account for the
      126    13357                                storage used to align the variable.
      127    13358
      128    13359                                MAX_BOUND is set to the alignment so that the outer
      129    13360                                structure can be set to a size divisible by the
      130    13361                                MAX_BOUND.
      131    13362
      132    13363                                EXAMPLE:
      133    13364                                   O1 A.
      134    13365                                      02 B OCCURS 5 TIMES.
      135    13366                                         03 C USAGE IS COMP-12.
      136    13367                                         03 D USAGE IS COMP-6.
      137    13368
      138    13369                                The MAX_BOUND would be set to double word alignment
      139    13370                                due to COMP-12 but the length required by C and D is
      140    13371                                3 words.  B is incremented to a size of 4 words so
      141    13372                                that it will have a span of 4 words and C is ensured
      142    13373                                of being double word aligned independent of its
      143    13374                                subscript.
      144    13375        */
      145    13376        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:7    
      146    13377          %MACRO NEXT_DOUBLE_WORD ;
      147    13378                 DO ;
      148    13379                   IF O1COM.LAST_ITEM_GBCD THEN
      149    13380                     DO ;
      150    13381                       IF O1COM.NEXT_CHAR ~= 0 THEN
      151    13382                         DO ;
      152    13383                           FILLER_SIZE = FILLER_SIZE + 36 + O1COM.NEXT_CHAR * NEG6 ;
      153    13384                           O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      154    13385                           O1COM.NEXT_CHAR = 0 ;
      155    13386                         END ;
      156    13387                     END ;
      157    13388                   ELSE IF O1COM.NEXT_BYTE ~= 0 OR O1COM.NEXT_HALF_BYTE ~= 0 THEN
      158    13389                     DO ;
      159    13390                       DIGIT_POS = O1COM.NEXT_BYTE * 9 + O1COM.NEXT_HALF_BYTE * 5 ;
      160    13391                       FILLER_SIZE = FILLER_SIZE + 36 - DIGIT_POS ;
      161    13392                       O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      162    13393                     END ;
      163    13394                   O1COM.NEXT_BYTE = 0 ;
      164    13395                   O1COM.NEXT_HALF_BYTE = 0 ;
      165    13396
      166    13397                   IF MOD(O1COM.NEXT_SA,2) = %NON_DOUBLE_WORD_ALIGNED THEN
      167    13398                     DO ;
      168    13399                       O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      169    13400                       FILLER_SIZE = FILLER_SIZE + 36 ;
      170    13401                     END ;
      171    13402
      172    13403                   MAX_BOUND = %(BYTE * 8) ;
      173    13404                 END ;
      174    13405          %MEND ;
      175    13406
      176    13407          %MACRO NEXT_WORD ;
      177    13408                 DO ;
      178    13409                   IF O1COM.LAST_ITEM_GBCD THEN
      179    13410                     DO ;
      180    13411                       IF O1COM.NEXT_CHAR ~= 0 THEN
      181    13412                         DO ;
      182    13413                           FILLER_SIZE = FILLER_SIZE + 36 + O1COM.NEXT_CHAR * NEG6 ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:8    
      183    13414                           O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      184    13415                           O1COM.NEXT_CHAR = 0 ;
      185    13416                         END ;
      186    13417                     END ;
      187    13418                   ELSE IF O1COM.NEXT_BYTE ~= 0 OR O1COM.NEXT_HALF_BYTE ~= 0 THEN
      188    13419                     DO ;
      189    13420                       DIGIT_POS = O1COM.NEXT_BYTE * 9 + O1COM.NEXT_HALF_BYTE * 5 ;
      190    13421                       FILLER_SIZE = FILLER_SIZE + 36 - DIGIT_POS ;
      191    13422                       O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      192    13423                     END ;
      193    13424                   O1COM.NEXT_BYTE = 0 ;
      194    13425                   O1COM.NEXT_HALF_BYTE = 0 ;
      195    13426
      196    13427                   IF MAX_BOUND < %(BYTE * 4) THEN
      197    13428                     MAX_BOUND = %(BYTE * 4) ;
      198    13429                 END ;
      199    13430          %MEND ;
      200    13431        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:9    
      201    13432          %MACRO NEXT_HALF_WORD ;
      202    13433                 DO ;
      203    13434                   IF O1COM.LAST_ITEM_GBCD THEN
      204    13435                     DO CASE (O1COM.NEXT_CHAR) ;
      205    13436                       CASE (0,3) ;
      206    13437                         /* Already at half word or full word */
      207    13438                       CASE (1,2) ;
      208    13439                         FILLER_SIZE = FILLER_SIZE + 18 + O1COM.NEXT_CHAR * NEG6 ;
      209    13440                         O1COM.NEXT_CHAR = 3 ;
      210    13441                       CASE (4,5) ;
      211    13442                         FILLER_SIZE = FILLER_SIZE + 36 + O1COM.NEXT_CHAR * NEG6 ;
      212    13443                         O1COM.NEXT_CHAR = 0 ;
      213    13444                         O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      214    13445                     END ; /* CASE */
      215    13446                   ELSE
      216    13447                     DO ;
      217    13448                       DIGIT_POS = O1COM.NEXT_BYTE * 2 + O1COM.NEXT_HALF_BYTE ;
      218    13449                       DIGIT_POS_IN_BITS = O1COM.NEXT_BYTE * 9 + O1COM.NEXT_HALF_BYTE * 5 ;
      219    13450
      220    13451                       DO CASE (DIGIT_POS) ;
      221    13452                         CASE (0,4) ;
      222    13453                           /* ALREADY AT HALF WORD OR FULL WORD */
      223    13454                         CASE (1,2,3) ;  /* FILLER UNTIL AT HALF WORD */
      224    13455                           O1COM.NEXT_BYTE = 2 ;
      225    13456                           O1COM.NEXT_HALF_BYTE = 0 ;
      226    13457                           FILLER_SIZE = FILLER_SIZE + 18 - DIGIT_POS_IN_BITS ;
      227    13458                         CASE (5,6,7) ;  /* FILLER UNTIL AT WORD */
      228    13459                           O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      229    13460                           O1COM.NEXT_BYTE = 0 ;
      230    13461                           O1COM.NEXT_HALF_BYTE = 0 ;
      231    13462                           FILLER_SIZE = FILLER_SIZE + 36 - DIGIT_POS_IN_BITS ;
      232    13463                       END ;
      233    13464                   END ;
      234    13465
      235    13466                   IF MAX_BOUND < %(BYTE * 2) THEN
      236    13467                     MAX_BOUND = %(BYTE * 2) ;
      237    13468
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:10   
      238    13469                 END ;
      239    13470          %MEND ;
      240    13471
      241    13472          %MACRO NEXT_BYTE ;
      242    13473                 DO ;
      243    13474                   IF O1COM.LAST_ITEM_GBCD THEN
      244    13475                     DO ;
      245    13476                       DO CASE (O1COM.NEXT_CHAR) ;
      246    13477                         CASE (0) ;
      247    13478                           O1COM.NEXT_BYTE = 0 ;
      248    13479                         CASE (1) ;
      249    13480                           O1COM.NEXT_BYTE = 1 ;
      250    13481                           FILLER_SIZE = FILLER_SIZE + 3 ;
      251    13482                         CASE (2) ;
      252    13483                           O1COM.NEXT_BYTE = 2 ;
      253    13484                           FILLER_SIZE = FILLER_SIZE + 6 ;
      254    13485                         CASE (3) ;
      255    13486                           O1COM.NEXT_BYTE = 2 ;
      256    13487                         CASE (4) ;
      257    13488                           O1COM.NEXT_BYTE = 3 ;
      258    13489                           FILLER_SIZE = FILLER_SIZE + 3 ;
      259    13490                         CASE (5) ;
      260    13491                           O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      261    13492                           O1COM.NEXT_BYTE = 0 ;
      262    13493                           O1COM.NEXT_HALF_BYTE = 0 ;
      263    13494                           FILLER_SIZE = FILLER_SIZE + 6 ;
      264    13495                       END ;
      265    13496                       O1COM.NEXT_HALF_BYTE = 0 ;
      266    13497                     END ;
      267    13498                   ELSE IF O1COM.NEXT_HALF_BYTE = 1 THEN
      268    13499                     DO ;
      269    13500                       FILLER_SIZE = FILLER_SIZE + 4 ;
      270    13501                       O1COM.NEXT_BYTE = O1COM.NEXT_BYTE + 1 ;
      271    13502                       O1COM.NEXT_HALF_BYTE = 0 ;
      272    13503                       O1COM.NEXT_SA = O1COM.NEXT_SA + O1COM.NEXT_BYTE / 4 ;
      273    13504                       O1COM.NEXT_BYTE = MOD (O1COM.NEXT_BYTE,4) ;
      274    13505                     END ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:11   
      275    13506                 END ;
      276    13507          %MEND ;
      277    13508
      278    13509          %MACRO NEXT_CHAR ;
      279    13510                 DO ; /* Position to next BCD character boundary */
      280    13511                   IF NOT O1COM.LAST_ITEM_GBCD THEN
      281    13512                     DO ;
      282    13513                       DIGIT_POS = O1COM.NEXT_BYTE * 2 + O1COM.NEXT_HALF_BYTE ;
      283    13514                       DO CASE (DIGIT_POS) ;
      284    13515                         CASE (0) ;
      285    13516                           O1COM.NEXT_CHAR = 0 ;
      286    13517                         CASE (1) ;
      287    13518                           O1COM.NEXT_CHAR = 1 ;
      288    13519                           FILLER_SIZE = FILLER_SIZE + 1 ;
      289    13520                         CASE (2) ;
      290    13521                           O1COM.NEXT_CHAR = 2 ;
      291    13522                           FILLER_SIZE = FILLER_SIZE + 3 ;
      292    13523                         CASE (3) ;
      293    13524                           O1COM.NEXT_CHAR = 3 ;
      294    13525                           FILLER_SIZE = FILLER_SIZE + 4 ;
      295    13526                         CASE (4) ;
      296    13527                           O1COM.NEXT_CHAR = 3 ;
      297    13528                         CASE (5) ;
      298    13529                           O1COM.NEXT_CHAR = 4 ;
      299    13530                           FILLER_SIZE = FILLER_SIZE + 1 ;
      300    13531                         CASE (6) ;
      301    13532                           O1COM.NEXT_CHAR = 5 ;
      302    13533                           FILLER_SIZE = FILLER_SIZE + 3 ;
      303    13534                         CASE (7) ;
      304    13535                           O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      305    13536                           O1COM.NEXT_CHAR = 0 ;
      306    13537                           FILLER_SIZE = FILLER_SIZE + 4 ;
      307    13538                       END ;
      308    13539                     END ;
      309    13540                 END ;
      310    13541          %MEND ;
      311    13542
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:12   
      312    13543          %MACRO NEXT_HALF_BYTE ;
      313    13544                 DO ; /* Position to next packed decimal digit boundary */
      314    13545                   IF O1COM.LAST_ITEM_GBCD THEN
      315    13546                     DO CASE (O1COM.NEXT_CHAR) ;
      316    13547                       CASE (0) ;
      317    13548                         O1COM.NEXT_BYTE = 0 ;
      318    13549                         O1COM.NEXT_HALF_BYTE = 0 ;
      319    13550                       CASE (1) ;
      320    13551                         O1COM.NEXT_BYTE = 1 ;
      321    13552                         O1COM.NEXT_HALF_BYTE = 0 ;
      322    13553                         FILLER_SIZE = FILLER_SIZE + 3 ;
      323    13554                       CASE (2) ;
      324    13555                         O1COM.NEXT_BYTE = 1 ;
      325    13556                         O1COM.NEXT_HALF_BYTE = 1 ;
      326    13557                         FILLER_SIZE = FILLER_SIZE + 2 ;
      327    13558                       CASE (3) ;
      328    13559                         O1COM.NEXT_BYTE = 2 ;
      329    13560                         O1COM.NEXT_HALF_BYTE = 0 ;
      330    13561                       CASE (4) ;
      331    13562                         O1COM.NEXT_BYTE = 3 ;
      332    13563                         O1COM.NEXT_HALF_BYTE = 0 ;
      333    13564                         FILLER_SIZE = FILLER_SIZE + 3 ;
      334    13565                       CASE (5) ;
      335    13566                         O1COM.NEXT_BYTE = 3 ;
      336    13567                         O1COM.NEXT_HALF_BYTE = 1 ;
      337    13568                         FILLER_SIZE = FILLER_SIZE + 2 ;
      338    13569                     END ;
      339    13570                 END ;
      340    13571          %MEND ;
      341    13572        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:13   
      342    13573    1   STRUCTURE_SIZE_CHECK: PROC (SIZE_VALUE, SYM$) ;
      343    13574
      344    13575
      345    13576        /*I*
      346    13577               NAME:  STRUCTURE_SIZE_CHECK
      347    13578               CALL:  CALL STRUCTURE_SIZE_CHECK(SIZE_VALUE) ;
      348    13579
      349    13580              INPUT:  SIZE_VALUE -- Size of variable to be checked and stored.
      350    13581             OUTPUT:  The symbol table entry is updated to contain the size.
      351    13582
      352    13583        DESCRIPTION:  This procedure receives the size of the data item.  The size is
      353    13584                      checked to see if it will fit in the ST.ADSC.N field.  If it will
      354    13585                      the size is stored there otherwise a LONG item will be created
      355    13586                      in the LTS table.  The LONG item is then linked directly to the
      356    13587                      ST by ST.LTS$ or indirectly through LTSS.LONG$.
      357    13588
      358    13589                      Size <= 4095 bytes.
      359    13590                           ST$ -> VARIABLE.ADSC.N = SIZE_VALUE
      360    13591
      361    13592                      Size > 4095 bytes, no prior LTS items created(ST.LTS$=ADDR(NIL))
      362    13593                           ST$ -> VARIABLE.LTS$ -> LONG.LENGTH = SIZE_VALUE
      363    13594
      364    13595                      Size > 4095 bytes, prior LTS items(ST.LTS$~=ADDR(NIL))
      365    13596                           ST$ -> VARIABLE.LTS$ -> LTSS.LONG$ -> LONG.LENGTH= SIZE_VALUE
      366    13597
      367    13598        */
      368    13599
      369    13600    2   DCL NEW_LONG$          PTR;
      370    13601    2   DCL SIZE_VALUE         UBIN WORD ; /* Size of variable to be checked */
      371    13602    2   DCL SYM$               PTR;
      372    13603
      373    13604        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:14   
      374    13605    2          IF SYM$ -> VARIABLE.B.NON_STORAGE THEN
      375    13606    2              RETURN;
      376    13607
      377    13608    2          IF SIZE_VALUE <= %ST_STORAGE_LIMIT THEN
      378    13609    2            SYM$ -> VARIABLE.ADSC.N = SIZE_VALUE ;
      379    13610    2          ELSE    /* SIZE > 4095, Must be stored in LONG.LENGTH */
      380    13611    3            DO ;
      381    13612    3              SYM$ -> SCALAR.B.LENGTH_4096 = TRUE;
      382    13613
      383    13614                   %NEW_LONG (@POINTER = NEW_LONG$,
      384    13615                              @LENGTH  = SIZE_VALUE);
      385    13707
      386    13708    3              CALL Z8DO$LINK_WITH_LTS (SYM$ -> VARIABLE.LTS$, NEW_LONG$);
      387    13709
      388    13710    3              IF SIZE_VALUE > %(BYTE_STORAGE_LIMIT / 8) THEN
      389    13711    3                SYM$ -> VARIABLE.B.GREATER_256K = TRUE;
      390    13712
      391    13713    3            END ;
      392    13714    2   END STRUCTURE_SIZE_CHECK ;
      393    13715        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:15   
      394    13716    1   SET_RENAMES_ITEM: PROC (SYM$);
      395    13717
      396    13718        /*I*
      397    13719               NAME:  SET_RENAMES_ITEM
      398    13720               CALL:  CALL SET_RENAMES_ITEM ;
      399    13721
      400    13722              INPUT:  SYM$ -- pointer to ST  entry for Renames variable.
      401    13723                      NEXT$ - pointer to QLT entry for Renames variable.
      402    13724             OUTPUT:  The Rename variable's descriptor is set up ie. ADSC.N, ADSC.CN.
      403    13725            SCRATCH:  LTS$ -- Used to point to RENAMES item in LTS table.
      404    13726
      405    13727        DESCRIPTION:  This procedure sets up the RENAMES variable.  It flags errors
      406    13728                      involving variable occurs clauses as neither the beginning or
      407    13729                      ending data name of the RENAMES clause may contain one.
      408    13730
      409    13731                      If the RENAMES clause contains no THROUGH phrase ie. (A RENAMES B)
      410    13732                      then the descriptor for A is copied directly from B and the
      411    13733                      RENAMES clause is handled like a REDEFINES.
      412    13734
      413    13735                      If a THROUGH clause exists, the beginning and ending data items
      414    13736                      are checked to see if the clause starts or ends on a digit
      415    13737                      boundary.  If it does then a warning is flagged because some
      416    13738                      garbage data may be contained in the RENAMES variable.
      417    13739                      This is because the RENAMES variable is of type TYA and TYA's
      418    13740                      require byte alignment and their length is in terms of bytes.
      419    13741        */
      420    13742        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:16   
      421    13743        /*B*
      422    13744            RENAMES_VARS
      423    13745               START_BYTE_POS -- The byte position of the starting data item in the
      424    13746                                 Renames clause.
      425    13747               END_BYTE_POS   -- The byte position of the ending data item in the
      426    13748                                 Renames clause.
      427    13749               END_ST_SIZE    -- The size of the ending data entry in the Renames
      428    13750                                 clause.
      429    13751        */
      430    13752
      431    13753    2   DCL  SYM$           PTR;
      432    13754    2   DCL  START_BYTE_POS UBIN WORD ;
      433    13755    2   DCL  END_BYTE_POS   UBIN WORD ;
      434    13756    2   DCL  START_ST$      PTR;
      435    13757    2   DCL  START_CN       SBIN WORD;
      436    13758    2   DCL  END_ST$        PTR;
      437    13759    2   DCL  END_CN         SBIN WORD;
      438    13760    2   DCL  END_ST_SIZE    UBIN WORD ;
      439    13761    2   DCL  LTS$$          PTR;
      440    13762        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:17   
      441    13763        /*V*
      442    13764            PRESET_RENAMES -- The pointer is set to the RENAMES entry in the LTS
      443    13765                              which contains pointers to the start and end subjects.
      444    13766        */
      445    13767
      446    13768    2      LTS$$ = NEXT$ -> QLT.RENAMES_LTS$ ;
      447    13769
      448    13770    2      START_ST$ = LTS$$ -> RENAMES.START_ST$;
      449    13771    2      END_ST$   = LTS$$ -> RENAMES.END_ST$;
      450    13772
      451    13773    2      IF START_ST$ -> VARIABLE.B.OCCURS_DEPENDING THEN
      452    13774    2        CALL Z8AE$ERROR (%E$RENAMES_VAR_OCCR_ERR,
      453    13775    2                         BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      454    13776    2                         1,
      455    13777    2                         START_ST$ -> VARIABLE.DNT$);
      456    13778
      457    13779        /*V*
      458    13780            RENAMES_NON_THRU -- There is no thru phrase so the RENAMES is handled
      459    13781                                like a REDEFINES with the descriptor copied from the
      460    13782                                start item.
      461    13783        */
      462    13784
      463    13785    2      IF END_ST$ = ADDR(NIL) THEN
      464    13786    3        DO ;
      465    13787    3          SYM$ -> VARIABLE.SA = START_ST$ -> VARIABLE.SA ;
      466    13788    3          SYM$ -> VARIABLE.NDSC = START_ST$ -> VARIABLE.NDSC ;
      467    13789    3        END ;
      468    13790        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:18   
      469    13791        /*V*
      470    13792            RENAMES_THRU_PHRASE -- The starting and ending positions are checked for
      471    13793                                   digit boundaries. The descriptor is set up with
      472    13794                                   the character offset and SA copied from the
      473    13795                                   starting data item.  The size is calculated and
      474    13796                                   stored after being check for length maximums.
      475    13797
      476    13798        */
      477    13799        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:19   
      478    13800    2      ELSE
      479    13801    3        DO ;
      480    13802    3          SYM$ -> VARIABLE.SA = START_ST$ -> VARIABLE.SA;
      481    13803
      482    13804               %GET_CN   (@ST$ = START_ST$,
      483    13805                          @ST1$ = START_ST$,
      484    13806                          @RTN = START_CN);
      485    13817
      486    13818               %GET_CN   (@ST$ = END_ST$,
      487    13819                          @ST1$ = END_ST$,
      488    13820                          @RTN = END_CN);
      489    13831
      490    13832    3          IF START_ST$ -> VARIABLE.TYPE = %TYD
      491    13833    3          AND START_ST$ -> VARIABLE.NDSC.TN = %NDSC4 THEN
      492    13834    4            DO;
      493    13835    4              SYM$ -> VARIABLE.ADSC.CN = START_CN / 2;
      494    13836
      495    13837    4              IF MOD (START_CN, %DIGITS_PER_BYTE) ~= 0 THEN
      496    13838    4                CALL Z8AE$ERROR (%E$RENAMES_DIGIT_BOUND_WARN,
      497    13839    4                                 BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      498    13840    4                                 0,
      499    13841    4                                 START_ST$ -> VARIABLE.DNT$);
      500    13842    4            END;
      501    13843    3          ELSE IF START_ST$ -> VARIABLE.TYPE = %TYB OR
      502    13844    3              START_ST$ -> VARIABLE.TYPE = %TYC THEN
      503    13845    4            DO ;
      504    13846    4              SYM$ -> VARIABLE.ADSC.CN = START_CN * 2 / 3 ;
      505    13847    4              IF MOD (START_CN, 3) ~= 0 THEN
      506    13848    4                CALL Z8AE$ERROR (%E$RENAMES_DIGIT_BOUND_WARN,
      507    13849    4                                 BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      508    13850    4                                 0,
      509    13851    4                                 START_ST$ -> VARIABLE.DNT$);
      510    13852    4              IF START_CN > 2
             13852                   /* Convert BCD character position to packed decimal character position */
      511    13853    4                THEN START_CN = START_CN + 1 ;
      512    13854    4            END ;
      513    13855    3          ELSE
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:20   
      514    13856    4            DO;
      515    13857    4              SYM$ -> VARIABLE.ADSC.CN = START_CN;
      516    13858    4              START_CN = START_CN * 2;
      517    13859    4            END;
      518    13860
      519    13861               /* Digit units */
      520    13862    3          START_BYTE_POS = SYM$ -> VARIABLE.SA * 8 + START_CN;
      521    13863
      522    13864    3          IF END_ST$ -> VARIABLE.TYPE = %TYD
      523    13865    3          AND END_ST$ -> VARIABLE.NDSC.TN = %NDSC4 THEN
      524    13866    4            DO;
      525    13867    4              END_BYTE_POS = END_ST$ -> VARIABLE.SA * 8 + END_CN;
      526    13868
      527    13869    4              END_ST_SIZE = END_ST$ -> VARIABLE.NDSC.N;
      528    13870
      529    13871    4              IF MOD ((END_ST_SIZE + END_BYTE_POS), %DIGITS_PER_BYTE) ~= 0 THEN
      530    13872    4                CALL Z8AE$ERROR (%E$RENAMES_DIGIT_BOUND_WARN,
      531    13873    4                                 BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      532    13874    4                                 0,
      533    13875    4                                 END_ST$ -> VARIABLE.DNT$);
      534    13876
      535    13877    4              CALL STRUCTURE_SIZE_CHECK (((END_ST_SIZE + END_BYTE_POS + 1) / 2) -
      536    13878    4                                         (START_BYTE_POS / 2), SYM$);
      537    13879    4            END;
      538    13880    3          ELSE IF END_ST$ -> VARIABLE.TYPE = %TYB OR
      539    13881    3              END_ST$ -> VARIABLE.TYPE = %TYC THEN
      540    13882    4            DO ;
      541    13883    4              END_BYTE_POS = END_ST$ -> VARIABLE.SA * 6 + END_CN ;
      542    13884
      543    13885    4              IF END_ST$ -> VARIABLE.TYPE = %TYB THEN
      544    13886                     %GET_ADSC_LEN (ST$ = END_ST$,
      545    13887                                    RTN = END_ST_SIZE) ;
      546    13898    4              ELSE /* %TYC */
      547    13899    4                END_ST_SIZE = END_ST$ -> VARIABLE.NDSC.N;
      548    13900
      549    13901    4              IF MOD ((END_ST_SIZE + END_BYTE_POS), %(CHARS_PER_WORD / 2)) ~= 0 THEN
      550    13902    4                CALL Z8AE$ERROR (%E$RENAMES_DIGIT_BOUND_WARN,
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:21   
      551    13903    4                                 BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      552    13904    4                                 0,
      553    13905    4                                 END_ST$ -> VARIABLE.DNT$) ;
      554    13906    4              CALL STRUCTURE_SIZE_CHECK ((END_ST_SIZE + END_BYTE_POS + 1) * 2 / 3
      555    13907    4                  - START_BYTE_POS / 2, SYM$) ;
      556    13908    4            END ;
      557    13909    3          ELSE
      558    13910    4            DO;
      559    13911    4              END_BYTE_POS = END_ST$ -> VARIABLE.SA * 4 + END_CN;
      560    13912
      561    13913    5              DO CASE (END_ST$ -> VARIABLE.TYPE) ;
      562    13914    5                CASE (%TYA, %TYN, %TYE) ;
      563    13915                       %GET_ADSC_LEN (ST$ = END_ST$,
      564    13916                                      RTN = END_ST_SIZE);
      565    13927    5                CASE (ELSE) ;
      566    13928    5                  END_ST_SIZE = END_ST$ -> VARIABLE.NDSC.N;
      567    13929    5              END ;
      568    13930
      569    13931    4              CALL STRUCTURE_SIZE_CHECK (END_ST_SIZE + END_BYTE_POS -
      570    13932    4                                         (START_BYTE_POS / 2), SYM$);
      571    13933    4            END;
      572    13934
      573    13935    3        END ;
      574    13936
      575    13937    2   END SET_RENAMES_ITEM ;
      576    13938        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:22   
      577    13939    1   NEW_DEPENDING_SIZE: PROC (CURRENT_SIZE, DIMS$, SYM$, RETURN$);
      578    13940
      579    13941    2   DCL CURRENT_SIZE              SBIN WORD;
      580    13942    2   DCL DIMS$                     PTR;
      581    13943    2   DCL SYM$               PTR;
      582    13944    2   DCL RETURN$                   PTR;
      583    13945
      584    13946    2   DCL CURRENT_SIZE$             PTR;
      585    13947    2   DCL ITEM_SIZE$                 PTR;
      586    13948    2   DCL DN2$                      PTR;
      587    13949    2   DCL SIZE$                     PTR;
      588    13950    2   DCL NEW_DEP$                  PTR;
      589    13951
      590    13952    2      MKCN.CON = CURRENT_SIZE;
      591    13953    2      CALL Z8AC$MAKE_CONST (CURRENT_SIZE$);
      592    13954
      593    13955    2      CALL Z8AU$LENGTH_ETT (SYM$, ITEM_SIZE$);
      594    13956
      595    13957    2      DN2$ = DIMS$ -> DIMS.DN2;
      596    13958
      597    13959    2      CALL Z8AF$FORME    (%MPI, DN2$, ITEM_SIZE$, DN2$);
      598    13960
      599    13961    2      IF SYM$ -> VARIABLE.TYPE = %TYD
      600    13962    2      AND SYM$ -> VARIABLE.NDSC.TN = %NDSC4 THEN
      601    13963    2        CALL Z8AF$FORME  (%DVI2, DN2$, 1, DN2$);
      602    13964
      603    13965    2      CALL Z8AF$FORME    (%ADI, DN2$, CURRENT_SIZE$, SIZE$);
      604    13966
      605    13967           %NEW_DEPENDING_SIZE (@POINTER = NEW_DEP$,
      606    13968                                @SIZE    = CURRENT_SIZE,
      607    13969                                @DIMS$   = DIMS$,
      608    13970                                @SIZE$   = SIZE$);
      609    14064
      610    14065    2      CALL Z8DO$LINK_WITH_LTS (RETURN$, NEW_DEP$);
      611    14066
      612    14067
      613    14068    2   END NEW_DEPENDING_SIZE;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:23   
      614    14069        %EJECT;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:24   
      615    14070    1   ADD_TO_DEPENDING_SIZE: PROC (CURRENT_SIZE, DEPEND_ST$, RETURN$);
      616    14071
      617    14072    2   DCL CURRENT_SIZE              SBIN WORD;
      618    14073    2   DCL DEPEND_ST$                PTR;
      619    14074    2   DCL RETURN$                   PTR;
      620    14075
      621    14076    2   DCL SIZE$                     PTR;
      622    14077    2   DCL DEPEND_SIZE$              PTR;
      623    14078    2   DCL NEW_DPS$                  PTR;
      624    14079    2   DCL NEW_SIZE$                 PTR;
      625    14080
      626    14081           %GET_LTS (@ID       = %DEPENDING_SIZE,
      627    14082                     @ST$      = DEPEND_ST$,
      628    14083                     @RETURN$  = DEPEND_SIZE$);
      629    14126
      630    14127    2      MKCN.CON = CURRENT_SIZE;
      631    14128    2      CALL Z8AC$MAKE_CONST (SIZE$);
      632    14129
      633    14130    2      CALL Z8AF$FORME (%ADI, DEPEND_SIZE$ -> DEPENDING_SIZE.SIZE$, SIZE$, NEW_SIZE$);
      634    14131
      635    14132           %NEW_DEPENDING_SIZE (@POINTER = NEW_DPS$,
      636    14133                                @SIZE    = DEPEND_SIZE$ -> DEPENDING_SIZE.MIN_SIZE,
      637    14134                                @DIMS$   = DEPEND_SIZE$ -> DEPENDING_SIZE.DIMS$,
      638    14135                                @SIZE$   = NEW_SIZE$);
      639    14229
      640    14230    2      CALL Z8DO$LINK_WITH_LTS (RETURN$, NEW_DPS$);
      641    14231
      642    14232    2   END ADD_TO_DEPENDING_SIZE;
      643    14233        %EJECT;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:25   
      644    14234    1   LINAGE_COUNT_KLUDGE: PROC (SIZE, SYM$);
      645    14235
      646    14236    2        DCL SIZE          SBIN;
      647    14237    2        DCL SYM$          PTR;
      648    14238    2        DCL QLT$$         PTR;
      649    14239
      650    14240
      651    14241    2        QLT$$ = SYM$ -> VARIABLE.QLT$ -> QLT.SON;
      652    14242
      653    14243    3        DO WHILE (QLT$$ -> QLT.BROTHER ~= ADDR(NIL));
      654    14244    3          QLT$$ = QLT$$ -> QLT.BROTHER;
      655    14245    3        END; /* While */
      656    14246
      657    14247    2        IF NOT QLT$$ -> QLT.ST$ -> VARIABLE.B.REDEF_SUB
      658    14248    2        AND NOT QLT$$ -> QLT.ST$ -> VARIABLE.B.REDEF_OBJ THEN
      659    14249    2          CALL STRUCTURE_SIZE_CHECK (SIZE - 4,
      660    14250    2                                     SYM$ -> VARIABLE.QLT$ ->
      661    14251    2                                     QLT.SON -> QLT.ST$);
      662    14252    2        ELSE
      663    14253    2          CALL STRUCTURE_SIZE_CHECK (SIZE,
      664    14254    2                                     SYM$ -> VARIABLE.QLT$ ->
      665    14255    2                                     QLT.SON -> QLT.ST$);
      666    14256
      667    14257    2   END LINAGE_COUNT_KLUDGE;
      668    14258        %EJECT;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:26   
      669    14259    1   REDEF_SIZE_CHECKS: PROC (SYM$);
      670    14260
      671    14261    2        DCL SYM$          PTR;
      672    14262    2        DCL DIFF          SBIN;
      673    14263             /*
      674    14264               DCL ALL SORTS OF GLOBAL DATA SUCH AS REDEF_?
      675    14265             */
      676    14266
      677    14267        /*V*
      678    14268            REDEF_FINAL_SIZE -- Check to make sure that the size of the object of
      679    14269                                the REDEFINES is greater than or equal to each subject.
      680    14270                                The final positioning (SA,BYTE,HALF_BYTE) may be
      681    14271                                greater due to filler but a warning is flagged.
      682    14272
      683    14273                                If we are encountering the object of the redefines,
      684    14274                                the object's location counters are assigned so that
      685    14275                                warnings will be caught when the subject exceeds those
      686    14276                                location counters.  Also the final location counters
      687    14277                                are set to the storage counters, these may be modified
      688    14278                                by the subjects.
      689    14279
      690    14280                                If we are looking at a subject entry then we check to
      691    14281                                see if the size exceeds the object item.  If this
      692    14282                                occurs, a fatal error is flagged.  If the size with
      693    14283                                filler exceeds the object item a warning is printed.
      694    14284                                The final storage counts may be altered if the subject
      695    14285                                exceeds them.
      696    14286
      697    14287                                When we have encountered the final item redefining
      698    14288                                the object we assign the next available locations
      699    14289                                to the maximum storage used by any of the items.
      700    14290        */
      701    14291        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:27   
      702    14292    2        IF SYM$ -> VARIABLE.B.REDEF_OBJ THEN
      703    14293    3          DO ;
      704    14294    3            REDEF_OBJ_SIZE         = MY_SIZE1 ;
      705    14295    3            REDEF_FINAL_SA         = O1COM.NEXT_SA ;
      706    14296    3            REDEF_OBJ_SA           = O1COM.NEXT_SA ;
      707    14297    3            REDEF_FINAL_ITEM_GBCD  = O1COM.LAST_ITEM_GBCD ;
      708    14298    3            REDEF_OBJ_ITEM_GBCD    = O1COM.LAST_ITEM_GBCD ;
      709    14299    3            REDEF_OBJ_FILLER_SIZE  = FILLER_SIZE ;
      710    14300    3            IF O1COM.LAST_ITEM_GBCD THEN
      711    14301    4              DO ;
      712    14302    4                REDEF_FINAL_CHAR       = O1COM.NEXT_CHAR ;
      713    14303    4                REDEF_OBJ_CHAR         = O1COM.NEXT_CHAR ;
      714    14304    4              END ;
      715    14305    3            ELSE
      716    14306    4              DO ;
      717    14307    4                REDEF_FINAL_BYTE       = O1COM.NEXT_BYTE ;
      718    14308    4                REDEF_FINAL_HALF_BYTE  = O1COM.NEXT_HALF_BYTE ;
      719    14309    4                REDEF_OBJ_BYTE         = O1COM.NEXT_BYTE ;
      720    14310    4                REDEF_OBJ_HALF_BYTE    = O1COM.NEXT_HALF_BYTE ;
      721    14311    4              END ;
      722    14312    3            IF SYM$ -> VARIABLE.TYPE = %TYB OR SYM$ -> VARIABLE.TYPE = %TYC
      723    14313    3              THEN REDEF_OBJ_SIZE2     = REDEF_OBJ_SIZE * 6 ;
      724    14314    3              ELSE REDEF_OBJ_SIZE2     = REDEF_OBJ_SIZE * 9 ;
      725    14315    3          END ; /* REDEF_OBJ */
      726    14316    2        ELSE
      727    14317    3          DO ;
      728    14318    3            IF SYM$ -> VARIABLE.B.REDEF_SUB THEN
      729    14319    4              DO ;
      730    14320    4                IF MY_SIZE > REDEF_OBJ_SIZE2 THEN
      731    14321    5                  DO ;
      732    14322
      733    14323    6                    DO CASE (SYM$ -> VARIABLE.QLT$ -> QLT.FATHER ->
      734    14324    6                             QLT.ST$ -> ST.ID);
      735    14325    6                      CASE ( %CD,
      736    14326                                 %SET_OF_FILE_DESCRIPTIONS;
      737    14331    6                            );
      738    14332    6                        /* All Ok */;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:28   
      739    14333
      740    14334    6                      CASE (ELSE);
      741    14335    6                        IF SYM$ -> VARIABLE.B.COMPILER_CREATED = '0'B AND
      742    14336    6                            (SYM$ -> VARIABLE.QLT$ -> QLT.FATHER -> QLT.FATHER = ADDR (
             14336                                     NIL) OR
      743    14337    6                             SYM$ -> VARIABLE.QLT$ -> QLT.FATHER -> QLT.FATHER ->
      744    14338    6                                 QLT.ST$ -> ST.ID ~= %CD) THEN
      745    14339    6                          CALL Z8AE$ERROR (%E$REDEFINES_OVERFLOW,
      746    14340    6                                         BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      747    14341    6                                         0,
      748    14342    6                                         SYM$ -> VARIABLE.DNT$,
      749    14343    6                                         OBJECT_ST$ -> VARIABLE.DNT$);
      750    14344
      751    14345    6                    END; /* Case */
      752    14346
      753    14347    5                    DIFF = MY_SIZE + FILLER_SIZE
      754    14348    5                         - REDEF_OBJ_SIZE2 - REDEF_OBJ_FILLER_SIZE ;
      755    14349
      756    14350    5                    IF DIFF > 0 THEN
      757    14351    6                      DO;
      758    14352    6                        SIZE = SIZE + DIFF ;
      759    14353    6                        IF O1COM.LAST_ITEM_GBCD THEN
      760    14354    7                          DO ;
      761    14355    7                            DIFF = (DIFF + 5) / 6 ;
      762    14356    7                            REDEF_OBJ_SIZE = REDEF_OBJ_SIZE + DIFF ;
      763    14357    7                            REDEF_FINAL_CHAR = REDEF_FINAL_CHAR + DIFF ;
      764    14358    7                            IF REDEF_FINAL_CHAR > 6 THEN
      765    14359    8                              DO ;
      766    14360    8                                REDEF_FINAL_SA = REDEF_FINAL_SA + REDEF_FINAL_CHAR / 6
             14360                                         ;
      767    14361    8                                REDEF_FINAL_CHAR = MOD (REDEF_FINAL_CHAR, 6) ;
      768    14362    8                              END ;
      769    14363    7                          END ;
      770    14364    6                        ELSE
      771    14365    7                          DO ;
      772    14366    7                            DIFF = (DIFF + 8) / 9 ;
      773    14367    7                            REDEF_OBJ_SIZE = REDEF_OBJ_SIZE + DIFF;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:29   
      774    14368    7                            REDEF_FINAL_BYTE = REDEF_FINAL_BYTE + DIFF;
      775    14369
      776    14370    7                            IF REDEF_FINAL_BYTE > 4 THEN
      777    14371    8                              DO;
      778    14372    8                                REDEF_FINAL_SA = REDEF_FINAL_SA +
      779    14373    8                                                 REDEF_FINAL_BYTE / 4;
      780    14374    8                                REDEF_FINAL_BYTE = MOD (REDEF_FINAL_BYTE, 4);
      781    14375    8                              END;
      782    14376    7                          END ;
      783    14377    6                      END; /* DIFF > 0 */
      784    14378
      785    14379    5                  END ; /* MY_SIZE > REDEF_OBJ_SIZE2 */
      786    14380    4                ELSE
      787    14381    5                  DO ; /* MY_SIZE <= REDEF_OBJ_SIZE2 */
      788    14382        /*BUMMER* -- Many complications are needed here because of the
      789    14383                     possibility that the subject and/or the object may
      790    14384                     end with a data item of type USAGE GBCD. */
      791    14385    5                    IF ((O1COM.NEXT_SA > REDEF_OBJ_SA) OR
      792    14386    5                        (O1COM.NEXT_SA = REDEF_OBJ_SA AND
      793    14387    5                         ((O1COM.LAST_ITEM_GBCD AND REDEF_OBJ_ITEM_GBCD AND
      794    14388    5                           O1COM.NEXT_CHAR > REDEF_OBJ_CHAR) OR
      795    14389    5                          (O1COM.LAST_ITEM_GBCD AND NOT REDEF_OBJ_ITEM_GBCD AND
      796    14390    5                           O1COM.NEXT_CHAR * 6 > REDEF_OBJ_HALF_BYTE * 5 +
             14390                                    REDEF_OBJ_BYTE * 9) OR
      797    14391    5                          (NOT O1COM.LAST_ITEM_GBCD AND REDEF_OBJ_ITEM_GBCD AND
      798    14392    5                           O1COM.NEXT_HALF_BYTE * 5 + O1COM.NEXT_BYTE * 9 >
             14392                                    REDEF_OBJ_CHAR * 6) OR
      799    14393    5                          (NOT O1COM.LAST_ITEM_GBCD AND NOT REDEF_OBJ_ITEM_GBCD AND
      800    14394    5                           (O1COM.NEXT_BYTE > REDEF_OBJ_BYTE OR (O1COM.NEXT_BYTE =
             14394                                    REDEF_OBJ_BYTE AND
      801    14395    5                            O1COM.NEXT_HALF_BYTE > REDEF_OBJ_HALF_BYTE)))))) THEN
      802    14396    6                      DO ;
      803    14397
      804    14398    7                        DO CASE (SYM$ -> VARIABLE.QLT$ -> QLT.FATHER ->
      805    14399    7                                 QLT.ST$ -> ST.ID);
      806    14400    7                          CASE (
      807    14401                                     %SET_OF_FILE_DESCRIPTIONS;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:30   
      808    14406    7                                );
      809    14407    7                            /* All Ok */;
      810    14408
      811    14409    7                          CASE (ELSE);
      812    14410    7                            CALL Z8AE$ERROR (%E$REDEF_SIZE_WARN,
      813    14411    7                                             BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      814    14412    7                                             0,
      815    14413    7                                             SYM$ -> VARIABLE.DNT$,
      816    14414    7                                             OBJECT_ST$ -> VARIABLE.DNT$);
      817    14415
      818    14416    7                        END; /* Case */
      819    14417
      820    14418    6                        IF O1COM.LAST_ITEM_GBCD THEN
      821    14419    7                          DO ;
      822    14420    7                            IF ((O1COM.NEXT_SA > REDEF_FINAL_SA)
      823    14421    7                                OR (O1COM.NEXT_SA = REDEF_FINAL_SA
      824    14422    7                                   AND ((REDEF_FINAL_ITEM_GBCD AND O1COM.NEXT_CHAR >
             14422                                            REDEF_FINAL_CHAR)
      825    14423    7                                        OR (NOT REDEF_FINAL_ITEM_GBCD
      826    14424    7                                           AND O1COM.NEXT_CHAR * 6 >
      827    14425    7                                               REDEF_FINAL_HALF_BYTE * 5 +
             14425                                                        REDEF_FINAL_BYTE * 9)))) THEN
      828    14426    8                              DO ;
      829    14427    8                                REDEF_FINAL_SA = O1COM.NEXT_SA ;
      830    14428    8                                REDEF_FINAL_CHAR = O1COM.NEXT_CHAR ;
      831    14429    8                                REDEF_FINAL_ITEM_GBCD = TRUE ;
      832    14430    8                              END ;
      833    14431    7                          END ;
      834    14432    6                        ELSE
      835    14433    6                          IF ((O1COM.NEXT_SA > REDEF_FINAL_SA)
      836    14434    6                              OR (O1COM.NEXT_SA = REDEF_FINAL_SA
      837    14435    6                                AND ((REDEF_FINAL_ITEM_GBCD AND
      838    14436    6                                      O1COM.NEXT_HALF_BYTE * 5 + O1COM.NEXT_BYTE * 9 >
      839    14437    6                                        REDEF_FINAL_CHAR * 6)
      840    14438    6                                     OR (NOT REDEF_FINAL_ITEM_GBCD
      841    14439    6                                         AND (O1COM.NEXT_BYTE > REDEF_FINAL_BYTE
      842    14440    6                                              OR (O1COM.NEXT_BYTE = REDEF_FINAL_BYTE
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:31   
      843    14441    6                                                  AND O1COM.NEXT_HALF_BYTE >
      844    14442    6                                                      REDEF_FINAL_HALF_BYTE)))))) THEN
      845    14443    7                            DO ;
      846    14444    7                              REDEF_FINAL_SA        = O1COM.NEXT_SA ;
      847    14445    7                              REDEF_FINAL_BYTE      = O1COM.NEXT_BYTE ;
      848    14446    7                              REDEF_FINAL_HALF_BYTE = O1COM.NEXT_HALF_BYTE ;
      849    14447    7                              REDEF_FINAL_ITEM_GBCD = FALSE ;
      850    14448    7                            END ;
      851    14449    6                      END ;
      852    14450
      853    14451    5                  END ; /* MY_SIZE <= REDEF_OBJ_SIZE2 */
      854    14452
      855    14453    4                  IF NEXT$ -> QLT.BROTHER ~= ADDR(NIL) THEN
      856    14454    4                    IF NOT (NEXT$ -> QLT.BROTHER -> QLT.ST$ -> VARIABLE.B.REDEF_SUB)
             14454                             THEN
      857    14455    5                      DO ;
      858    14456    5                        O1COM.NEXT_SA        = REDEF_FINAL_SA ;
      859    14457    5                        O1COM.NEXT_BYTE      = REDEF_FINAL_BYTE ;
      860    14458    5                        O1COM.NEXT_HALF_BYTE = REDEF_FINAL_HALF_BYTE ;
      861    14459    5                        O1COM.NEXT_CHAR = REDEF_FINAL_CHAR ;
      862    14460    5                        O1COM.LAST_ITEM_GBCD = REDEF_FINAL_ITEM_GBCD ;
      863    14461    5                      END ;
      864    14462
      865    14463    4                END ; /* REDEF_SUB */
      866    14464
      867    14465    3            END ;
      868    14466    2   END REDEF_SIZE_CHECKS;
      869    14467        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:32   
      870    14468    1   CHECK_FOR_DEPENDING: PROC (SIZE, QUAL$, SYM$);
      871    14469
      872    14470    2   DCL QUAL$              PTR;
      873    14471    2   DCL SYM$               PTR;
      874    14472    2   DCL SIZE               SBIN WORD;
      875    14473    2   DCL LTS$$              PTR;
      876    14474
      877    14475    2      IF NEXT$ -> QLT.B.OCCURS THEN
      878    14476    3        DO;
      879    14477               %GET_LTS (@ID    = %DIMS,
      880    14478                         @ST$   = SYM$,
      881    14479                         @RETURN$= LTS$$);
      882    14522
      883    14523    3          IF LTS$$ -> DIMS.DN2 ~= ADDR(NIL) THEN
      884    14524    4            DO;
      885    14525    4              CALL NEW_DEPENDING_SIZE (SIZE,
      886    14526    4                                       LTS$$,
      887    14527    4                                       SYM$,
      888    14528    4                                       QUAL$ -> QLT.ST$ ->
      889    14529    4                                       VARIABLE.LTS$);
      890    14530                   %FISH (TRIAD = LTS$$ -> DIMS.DN2,
      891    14531                          RTN   = LTS$$ -> DIMS.DN2);
      892    14539    4            END;
      893    14540    3        END;
      894    14541    2      ELSE
      895    14542    2        IF SYM$ -> VARIABLE.B.OCCURS_DEPENDING THEN
      896    14543    2          CALL ADD_TO_DEPENDING_SIZE (SIZE,
      897    14544    2                                      SYM$,
      898    14545    2                                      QUAL$ -> QLT.ST$ ->
      899    14546    2                                      VARIABLE.LTS$);
      900    14547
      901    14548    2   END CHECK_FOR_DEPENDING;
      902    14549        %EJECT;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:33   
      903    14550    1   GET_FIRST_ELEM: PROC (QLT$$);
      904    14551
      905    14552    2        DCL QLT$$         PTR;
      906    14553    2        DCL BRO$$         PTR;
      907    14554
      908    14555
      909    14556    2   SRCH:
      910    14557    3        DO WHILE (QLT$$ ~= ADDR(NIL));
      911    14558    4          DO CASE (QLT$$ -> QLT.ST$ -> ST.ID);
      912    14559
      913    14560    4            CASE (
      914    14561                       %ST_ITEMS_WITH_STORAGE;
      915    14573    4                 );
      916    14574    4              IF QLT$$ -> QLT.ST$ -> VARIABLE.B.ELEMENTARY THEN
      917    14575    4                RETURN;
      918    14576    4              ELSE
      919    14577    4                QLT$$ = QLT$$ -> QLT.SON;
      920    14578
      921    14579    4            CASE (ELSE);
      922    14580    4              BRO$$ = QLT$$;
      923    14581
      924    14582    5   BRO_SRCH:  DO WHILE (BRO$$ ~= ADDR(NIL));
      925    14583    6                DO CASE (BRO$$ -> QLT.ST$ -> ST.ID);
      926    14584
      927    14585    6                  CASE (
      928    14586                             %ST_ITEMS_WITH_STORAGE;
      929    14598    6                       );
      930    14599    6                    QLT$$ = BRO$$;
      931    14600    6                    EXIT BRO_SRCH;
      932    14601
      933    14602    6                  CASE (ELSE);
      934    14603    6                    BRO$$ = BRO$$ -> QLT.BROTHER;
      935    14604
      936    14605    6                END; /* Case */
      937    14606    5              END; /* While */
      938    14607
      939    14608    4              IF BRO$$ = ADDR(NIL) THEN
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:34   
      940    14609    5                DO;
      941    14610    5                  CALL Z8AE$ERROR (%E$UNEXPECTED_CASE);
      942    14611    5                  RETURN;
      943    14612    5                END;
      944    14613
      945    14614    4          END; /* Case */
      946    14615    3        END; /* While */
      947    14616
      948    14617    2   END GET_FIRST_ELEM;
      949    14618        %EJECT;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:35   
      950    14619    1   CALC_SIZE: PROC (QUAL$);
      951    14620
      952    14621    2        DCL QUAL$                PTR;
      953    14622
      954    14623        /*V*
      955    14624            Z8DC_LOOP_PRESET -- The variables are set up to go through the loop.
      956    14625                                If the data item passed as the parameter is elementary
      957    14626                                then nothing is done as the size is already set.  This
      958    14627                                won't happen but the IF statement is used for clarity.
      959    14628                                The size of the structure is preset to zero and the
      960    14629                                QLT pointer to the immediate son is assigned(NEXT$).
      961    14630                                The maximum boundary alignment is set to byte as a group
      962    14631                                item requires byte alignment.
      963    14632
      964    14633                                The loop is started and the symbol table pointer is
      965    14634                                assigned for the data item. If the item has a renames
      966    14635                                clause then a procedure is called to handle the clause.
      967    14636        */
      968    14637    2          IF QUAL$ -> QLT.ST$ -> VARIABLE.B.ELEMENTARY THEN
      969    14638    2            /* Size already set */ ;
      970    14639    2          ELSE  /* non-ELEMENTARY */
      971    14640    3            DO ;
      972    14641    3              SIZE = 0 ;
      973    14642    3              NEXT$ = QUAL$ -> QLT.SON ;
      974    14643    3              MAX_BOUND = %BYTE ;
      975    14644    3              MAX_BOUND_SON = 0 ;
      976    14645
      977    14646    4              DO WHILE (NEXT$ ~= ADDR(NIL)) ;
      978    14647    4                SYM$ = NEXT$ -> QLT.ST$ ;
      979    14648    4                SYM$ -> VARIABLE.COUNT = QUAL$ -> QLT.ST$ -> VARIABLE.COUNT;
      980    14649
      981    14650
      982    14651    5                IF NEXT$ -> QLT.LEVEL_NO ~= 88 THEN DO ;
      983    14652
      984    14653    5                  SYM$ -> VARIABLE.B.EXTERNAL = QUAL$ -> QLT.ST$ -> VARIABLE.B.EXTERNAL
             14653                           ;
      985    14654    5                  SYM$ -> VARIABLE.B.LINKAGE = QUAL$ -> QLT.ST$ -> VARIABLE.B.LINKAGE;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:36   
      986    14655    5                  SYM$ -> VARIABLE.B.GLOBAL = QUAL$ -> QLT.ST$ -> VARIABLE.B.GLOBAL;
      987    14656
      988    14657    5                  IF NEXT$ -> QLT.B.RENAMES THEN
      989    14658    5                    CALL SET_RENAMES_ITEM (SYM$);
      990    14659    6                  ELSE DO ;
      991    14660        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:37   
      992    14661        /*V*
      993    14662            REDEF_SUBJECT_FIRST_ELEM -- If this item is the subject of a redefines
      994    14663                                        clause, the storage counters are reset to the
      995    14664                                        object's storage location.  This is done
      996    14665                                        because the subject may start on a storage
      997    14666                                        location after the object but not before.
      998    14667
      999    14668                                        If the object is not the subject of a redefines
     1000    14669                                        and is nonelementary then a search is done to
     1001    14670                                        find the first elementary element of the
     1002    14671                                        structure.  This is done to find the proper
     1003    14672                                        aligned to the same location as the first
     1004    14673                                        elementary item.  Group items must start on at
     1005    14674                                        least a byte boundary as they are of type TYA.
     1006    14675                                        The loop starts with FIRST_ELEM$ set to NEXT$
     1007    14676                                        as the immediate son is checked.  Filler size
     1008    14677                                        is initialized to zero as we haven't allocated
     1009    14678                                        any data storage space yet.
     1010    14679        */
     1011    14680
     1012    14681    6                    FILLER_SIZE = 0 ;
     1013    14682    6                    FIRST_ELEM$ = NEXT$ ;
     1014    14683
     1015    14684    6                    IF SYM$ -> VARIABLE.B.REDEF_SUB THEN
     1016    14685    7                      DO ;
     1017    14686    7                        O1COM.NEXT_SA = LAST_SA;            /*#35497*/
     1018    14687    7                        O1COM.NEXT_BYTE = LAST_BYTE;        /*#35497*/
     1019    14688    7                        O1COM.NEXT_HALF_BYTE = LAST_HALF_BYTE;   /*#35497*/
     1020    14689    7                        O1COM.NEXT_CHAR = LAST_CHAR;
     1021    14690    7                        O1COM.LAST_ITEM_GBCD = LAST_ITEM_GBCD;
     1022    14691    7                      END ;
     1023    14692    6                    ELSE
     1024    14693    6                      IF NOT SYM$ -> VARIABLE.B.ELEMENTARY THEN
     1025    14694    7                        DO;
     1026    14695                               %NEXT_BYTE;
     1027    14731    7                          O1COM.LAST_ITEM_GBCD = FALSE ;
     1028    14732    7                          CALL GET_FIRST_ELEM (FIRST_ELEM$);
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:38   
     1029    14733    7                        END;
     1030    14734        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:39   
     1031    14735        /*V*
     1032    14736            ALIGN_VARIABLE_OFFSET -- Case statement to align variables to
     1033    14737                                     their boundaries: ie. double word, byte
     1034    14738        */
     1035    14739
     1036    14740    6   ALIGN_VAR_OFF:
     1037    14741    7                DO CASE (FIRST_ELEM$ -> QLT.ST$ -> VARIABLE.TYPE) ;
     1038    14742
     1039    14743    7                  CASE (%TYD) ;  /* PACKED DECIMAL */
     1040    14744    7                    IF FIRST_ELEM$ -> QLT.B.DIGIT THEN
     1041    14745    8                      DO ;
     1042    14746    8                        IF SYM$ -> VARIABLE.B.REDEF_OBJ THEN
     1043    14747    9                          DO ;
     1044    14748    9                            SUBJECT_QLT$ = NEXT$ -> QLT.BROTHER ;
     1045    14749   10                            DO UNTIL SUBJECT_QLT$ = ADDR (NIL) OR
     1046    14750   10                                NOT SUBJECT_QLT$ -> QLT.ST$ -> VARIABLE.B.REDEF_SUB ;
     1047    14751   10                              SUBJECT_ST$ = SUBJECT_QLT$ -> QLT.ST$ ;
     1048    14752   10                              IF NOT SUBJECT_ST$ -> VARIABLE.B.ELEMENTARY THEN
     1049    14753   11                                DO ;
     1050    14754                                       %NEXT_BYTE ;
     1051    14790   11                                  EXIT ALIGN_VAR_OFF ;
     1052    14791   11                                END ;
     1053    14792   10                              SUBJECT_QLT$ = SUBJECT_QLT$ -> QLT.BROTHER ;
     1054    14793   10                            END ; /* UNTIL */
     1055    14794    9                          END ;
     1056    14795                             %NEXT_HALF_BYTE;
     1057    14824    8                      END ;
     1058    14825    7                    ELSE
     1059    14826    8                      DO ;
     1060    14827                             %NEXT_BYTE ;
     1061    14863    8                      END ;
     1062    14864
     1063    14865    7                  CASE (%TYI,%TYR,%TYP) ; /* COMP-6,COMP-11, COMP-13, POINTER*/
     1064    14866                         %NEXT_WORD ;
     1065    14889
     1066    14890    7                  CASE (%TYB,%TYC) ; /* GBCD */
     1067    14891    7                    IF SYM$ -> VARIABLE.B.ELEMENTARY THEN
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:40   
     1068    14892                           %NEXT_CHAR ;
     1069    14925
     1070    14926    7                  CASE (%TYJ) ; /* COMP-1 */
     1071    14927    7                    IF FIRST_ELEM$ -> QLT.B.SYNC THEN
     1072    14928                           %NEXT_HALF_WORD ;
     1073    14964    7                    ELSE /* NON-SYNCHRONIZED */
     1074    14965                           %NEXT_BYTE ;
     1075    15001
     1076    15002    7                  CASE (%TYK) ; /* COMP-2 */
     1077    15003    7                    IF FIRST_ELEM$ -> QLT.B.SYNC THEN
     1078    15004                           %NEXT_WORD ;
     1079    15027    7                    ELSE /* NON-SYNCHRONIZED */
     1080    15028                           %NEXT_BYTE ;
     1081    15064
     1082    15065    7                  CASE (%TYQ,%TYX) ; /* COMP-12, COMP-14, INDEX */
     1083    15066                         %NEXT_DOUBLE_WORD ;
     1084    15093
     1085    15094    7                  CASE (%TYH) ; /* COMP-7 */
     1086    15095    7                    IF FIRST_ELEM$ -> QLT.B.SYNC THEN
     1087    15096                           %NEXT_WORD ;
     1088    15119    7                    ELSE /* NON-SYNCHRONIZED */
     1089    15120                           %NEXT_HALF_WORD ;
     1090    15156
     1091    15157    7                  CASE (%TYN,%TYO,%TYA,%TYY,%TYE,%TYF) ;
             15157                           /* KANJI,OVERPUNCHED,DISPLAY,PACKED INDEX,EBCDIC */
     1092    15158                         %NEXT_BYTE;
     1093    15194
     1094    15195    7                END ;
     1095    15196        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:41   
     1096    15197        /*V*
     1097    15198            REDEFINITION -- The item is handled differently if it is the subject or
     1098    15199                            object of a redefines clause.
     1099    15200
     1100    15201                            EXAMPLE:
     1101    15202                                       03 (subject) REDEFINES (object).
     1102    15203
     1103    15204                            The storage counters for the object are stored to be used
     1104    15205                            for the subject's storage location.  Due to different filler
     1105    15206                            space used for alignment, the subject and object might
     1106    15207                            not start on the same location in memory.
     1107    15208        */
     1108    15209
     1109    15210    6                IF SYM$ -> VARIABLE.B.REDEF_OBJ THEN
     1110    15211    7                  DO;
     1111    15212    7                    OBJECT_ST$ = SYM$ ;
     1112    15213    7                    LAST_SA = O1COM.NEXT_SA;                 /*#35497*/
     1113    15214    7                    LAST_BYTE = O1COM.NEXT_BYTE;             /*#35497*/
     1114    15215    7                    LAST_HALF_BYTE = O1COM.NEXT_HALF_BYTE;   /*#35497*/
     1115    15216    7                    LAST_CHAR = O1COM.NEXT_CHAR;
     1116    15217    7                    LAST_ITEM_GBCD = O1COM.LAST_ITEM_GBCD;
     1117    15218    7                  END;
     1118    15219        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:42   
     1119    15220        /*V*
     1120    15221            ASSIGN_SA -- Assign the item's storage offset within the structure to the
     1121    15222                         SA field.  The byte position within the word (or digit if
     1122    15223                         the item is packed decimal and is in term of digits) are
     1123    15224                         stored in VARIABLE.ADSC.CN or VARIABLE.NDSC.CN depending on the
     1124    15225                         item being alphabetic or numeric.
     1125    15226
     1126    15227                         The storage counter is first checked against the data
     1127    15228                         storage limit.  If the limit is exceeded then the counter
     1128    15229                         is set to zero.  No error is produced as Phase 2 will catch
     1129    15230                         this and print the error to eliminate duplicate error messages.
     1130    15231        */
     1131    15232
     1132    15233    6                IF O1COM.NEXT_SA > %#256K THEN
     1133    15234    6                  O1COM.NEXT_SA = 0 ;
     1134    15235
     1135    15236    6                SYM$ -> VARIABLE.SA = O1COM.NEXT_SA ;
     1136    15237    6                IF  SYM$ -> VARIABLE.TYPE = %TYD
     1137    15238    6                AND SYM$ -> VARIABLE.NDSC.TN = %NDSC4 THEN
     1138    15239                           /* Store offset in terms of digits */
     1139    15240    6                  SYM$ -> VARIABLE.NDSC.CN = O1COM.NEXT_BYTE * 2 + O1COM.NEXT_HALF_BYTE
             15240                           ;
     1140    15241    6                ELSE
     1141    15242    6                  IF SYM$ -> VARIABLE.TYPE = %TYB OR
     1142    15243    6                      SYM$ -> VARIABLE.TYPE = %TYC THEN
     1143    15244                             /* Store offset in terms of 6-bit characters */
     1144    15245    6                    SYM$ -> VARIABLE.NDSC.CN = O1COM.NEXT_CHAR ;
     1145    15246    6                  ELSE /* Store offset in terms of bytes */
     1146    15247    6                    SYM$ -> VARIABLE.ADSC.CN = O1COM.NEXT_BYTE ;
     1147    15248        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:43   
     1148    15249        /*V*
     1149    15250            GET_SIZE_ELEMENTARY -- If elementary item, get size from VARIABLE.NDSC.N or
     1150    15251                                   VARIABLE.ADSC.N depending on the item being numeric
     1151    15252                                   or GBCD or alphabetic.
     1152    15253
     1153    15254                                   If the item is packed decimal and has byte alignment
     1154    15255                                   the item is right justified. If the item takes up an
     1155    15256                                   odd number of digits the item is shifted one digit.
     1156    15257
     1157    15258                                   example:
     1158    15259                                       01 A.
     1159    15260                                          02 B USAGE IS COMP PIC 999.
     1160    15261
     1161    15262                                       instead of B occupying digits 0,1, and 2 with
     1162    15263                                       the third digit being filler it is right
     1163    15264                                       justified so the 0 digit is filler.
     1164    15265        */
     1165    15266
     1166    15267    6            IF SYM$ -> VARIABLE.B.ELEMENTARY THEN
     1167    15268    7              DO;
     1168    15269    7                IF SYM$ -> VARIABLE.B.NON_STORAGE THEN
     1169    15270    7                    MY_SIZE = 0;
     1170    15271    7                ELSE
     1171    15272    8                  DO CASE (SYM$ -> VARIABLE.TYPE);
     1172    15273    8                    CASE (%TYD, %TYO, %TYF, %TYC);
     1173    15274    8                      MY_SIZE = SYM$ -> VARIABLE.NDSC.N;
     1174    15275
     1175    15276    8                      IF  SYM$ -> VARIABLE.NDSC.TN = %NDSC4
     1176    15277    8                      AND SYM$ -> VARIABLE.TYPE = %TYD
     1177    15278    8                      AND (NOT NEXT$ -> QLT.B.DIGIT)   THEN
     1178    15279    9                        DO;
     1179    15280    9                          IF MOD (MY_SIZE, 2) = 1 THEN /* Right Justify */
     1180    15281    9                            SYM$ -> VARIABLE.NDSC.CN = SYM$ -> VARIABLE.NDSC.CN + 1;
     1181    15282
     1182    15283    9                          MY_SIZE = (MY_SIZE + 1) / 2;
     1183    15284    9                        END;
     1184    15285    8                      IF SYM$ -> VARIABLE.TYPE = %TYC
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:44   
     1185    15286    8                        THEN O1COM.LAST_ITEM_GBCD = TRUE;
     1186    15287    8                        ELSE O1COM.LAST_ITEM_GBCD = FALSE;
     1187    15288
     1188    15289    8                    CASE (ELSE);
     1189    15290                           %GET_ADSC_LEN (ST$ = SYM$,
     1190    15291                                          RTN = MY_SIZE);
     1191    15302    8                      IF SYM$ -> VARIABLE.TYPE = %TYB
     1192    15303    8                        THEN O1COM.LAST_ITEM_GBCD = TRUE;
     1193    15304    8                        ELSE O1COM.LAST_ITEM_GBCD = FALSE;
     1194    15305
     1195    15306    8                  END; /* Case */
     1196    15307    7                CONDITION$ = NEXT$ -> QLT.SON;
             15307                         /* Condition chain for elementary items */
     1197    15308    8                DO WHILE CONDITION$ ~= ADDR (NIL);
     1198    15309    8                  CONDITION$ -> QLT.ST$ -> CONDITION.B.GLOBAL = QUAL$ -> QLT.ST$ ->
             15309                           VARIABLE.B.GLOBAL;
     1199    15310    8                  CONDITION$ = CONDITION$ -> QLT.BROTHER;
     1200    15311    8                END;
     1201    15312    7              END; /* IF */
     1202    15313    6            ELSE  /* SON is non-ELEMENTARY */
     1203    15314        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:45   
     1204    15315        /*V*
     1205    15316            GET_SIZE_NONELEMENTARY -- Call Z8DC to get the size of the item's
     1206    15317                                      structure and the maximum alignment needed
     1207    15318                                      for it.  The current structure's alignment
     1208    15319                                      is the greater of the previous alignment
     1209    15320                                      for the outside structure and the alignment
     1210    15321                                      needed for this item.  The length of the item is
     1211    15322                                      extracted from VARIABLE.ADSC.N if it is not greater
     1212    15323                                      than 4095 bytes (largest number that will fit there)
     1213    15324                                      otherwise it is retrieved from LONG.LENGTH.
     1214    15325        */
     1215    15326    7                  DO ;
     1216    15327    7                    SYM$ -> VARIABLE.SA      = O1COM.NEXT_SA ;
     1217    15328    7                    SYM$ -> VARIABLE.ADSC.CN = O1COM.NEXT_BYTE ;
     1218    15329
     1219    15330    7                    CALL Z8DC$SIZE_CALC (NEXT$,MAX_BOUND_SON) ;
     1220    15331
     1221    15332
     1222    15333    7                    IF MAX_BOUND < MAX_BOUND_SON THEN
     1223    15334    7                      MAX_BOUND = MAX_BOUND_SON ;
     1224    15335
     1225    15336                         %GET_ADSC_LEN (ST$ = SYM$,
     1226    15337                                        RTN = MY_SIZE);
     1227    15348    7                  END ;
     1228    15349
     1229    15350        /*V*
     1230    15351            COMP7_SYNC -- If the item is COMP-7 and synchronized then it
     1231    15352                          uses a full word of storage and is right justified.
     1232    15353        */
     1233    15354
     1234    15355    6                IF SYM$ -> VARIABLE.TYPE = %TYH
     1235    15356    6                AND NEXT$ -> QLT.B.SYNC  THEN
     1236    15357    7                  DO ;
     1237    15358    7                    MY_SIZE = %(BYTE * 4) ;  /* Fill COMP-7 out to full word */
     1238    15359    7                    SYM$ -> VARIABLE.NDSC.CN = %(BYTE * 2) ; /* Right justify */
     1239    15360    7                  END ;
     1240    15361        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:46   
     1241    15362        /*V*
     1242    15363            EXPAND_SIZE_IF_OCCURS -- Expands size of variable to include all dimensions.
     1243    15364                                     The total size of the item is the size of one
     1244    15365                                     element multiplied by the number of elements
     1245    15366                                     in the array.
     1246    15367                                     Because of the multiply the size of the item could
     1247    15368                                     become larger than 256k words.  To prevent this
     1248    15369                                     a check is made using the maximum storage
     1249    15370                                     limit to make prevent this.
     1250    15371        */
     1251    15372
     1252    15373    6                IF NEXT$ -> QLT.B.OCCURS THEN
     1253    15374    7                  DO ;
     1254    15375                         %GET_LTS (@ID = %DIMS,
     1255    15376                                   @ST$ = SYM$,
     1256    15377                                   @RETURN$ = LTS$);
     1257    15420
     1258    15421                         %FIND_LAST_DIM(POINTER=LTS$, VARIABLE=LAST_DIM) ;
     1259    15426
     1260    15427    7                    MY_SIZE = MY_SIZE * LTS$ -> DIMS.D.DIM (LAST_DIM);
     1261    15428
     1262    15429    7                    IF (SYM$ -> VARIABLE.TYPE = %TYB OR
     1263    15430    7                        SYM$ -> VARIABLE.TYPE = %TYC) AND
     1264    15431    7                        MY_SIZE > %(BYTE_STORAGE_LIMIT * 3 / 2) THEN
     1265    15432    7                      MY_SIZE = %(BYTE_STORAGE_LIMIT * 3 / 2 + 1);
     1266    15433    7                    ELSE IF SYM$ -> VARIABLE.B.DIGIT AND
     1267    15434    7                        MY_SIZE > %(BYTE_STORAGE_LIMIT * 2) THEN
     1268    15435    7                      MY_SIZE = %(BYTE_STORAGE_LIMIT * 2 + 1);
     1269    15436    7                    ELSE IF MY_SIZE > %BYTE_STORAGE_LIMIT THEN
     1270    15437    7                      MY_SIZE = %(BYTE_STORAGE_LIMIT + 1);
     1271    15438
     1272    15439
     1273    15440    7                END ;
     1274    15441        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:47   
     1275    15442        /*V*
     1276    15443            INCREMENT_OFFSET -- The storage counters (O1COM.NEXT_SA, etc.) are incremented
     1277    15444                                up to the next available location.
     1278    15445
     1279    15446                                If the item is in digits a check is made to see if the
     1280    15447                                item started on a half-byte boundary and ends on a half-
     1281    15448                                byte boundary.  If this occurred, the size will be
     1282    15449                                incremented by one byte because 2 half-bytes were not
     1283    15450                                included in MY-SIZE. The half-byte counter is incremented
     1284    15451                                and the byte counter is incremented if needed.
     1285    15452
     1286    15453                                For elementary items, the byte and word counters are
     1287    15454                                incremented by their size.  For non-elementary items the
     1288    15455                                new storage locations are calculated using the item's
     1289    15456                                descriptor instead of the current state of the storage
     1290    15457                                counters.  This is done because the storage counters are
     1291    15458                                incremented and changed inside of the structure.
     1292    15459
     1293    15460                                The size of the outer structure is then incremented by
     1294    15461                                the size of the variable and the amount of filler used.
     1295    15462                                Filler is in terms of digits so it is converted to
     1296    15463                                bytes in the calculation.  If the size goes beyond
     1297    15464                                the storage limit (256K words), the size is set to the
     1298    15465                                the storage limit plus 1.
     1299    15466        */
     1300    15467        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:48   
     1301    15468    6                MY_SIZE1 = MY_SIZE ; /* In case of REDEFINES */
     1302    15469    6                IF SYM$ -> VARIABLE.B.ELEMENTARY THEN
     1303    15470    7                  DO ;
     1304    15471    7                    IF SYM$ -> VARIABLE.ID = %ARRAY AND
     1305    15472    7                        SYM$ -> VARIABLE.B.GLOBAL THEN
     1306    15473    8                      DO;
             15473                             /* If INDEXED BY phrase on a GLOBAL array, make index GLOBAL */
     1307    15474                             %GET_LTS (@ID  = %DIMS,
     1308    15475                                       @ST$ = SYM$);
     1309    15518    8                        LTS$ = LTS$ -> DIMS.D.INDEX$ ((LTS$ -> DIMS.N - 5) / 3);
     1310    15519    9                        DO WHILE LTS$ ~= ADDR (NIL);
     1311    15520    9                          LTS$ -> INDEXES.INDEX_ST$ -> VARIABLE.B.GLOBAL = TRUE;
     1312    15521    9                          LTS$ = LTS$ -> INDEXES.LINK;
     1313    15522    9                        END;
     1314    15523    8                      END;
     1315    15524    7                    IF NEXT$ -> QLT.B.DIGIT THEN
     1316    15525    8                      DO ;
     1317    15526    8                        MY_SIZE1 = (MY_SIZE + 1) / 2 ;
     1318    15527    8                        O1COM.NEXT_HALF_BYTE = O1COM.NEXT_HALF_BYTE + MY_SIZE ;
     1319    15528    8                        O1COM.NEXT_BYTE = O1COM.NEXT_BYTE + O1COM.NEXT_HALF_BYTE / 2 ;
     1320    15529    8                        O1COM.NEXT_SA = O1COM.NEXT_SA + O1COM.NEXT_BYTE / 4 ;
     1321    15530    8                        O1COM.NEXT_BYTE = MOD (O1COM.NEXT_BYTE, 4) ;
     1322    15531    8                        O1COM.NEXT_HALF_BYTE = MOD (O1COM.NEXT_HALF_BYTE, 2) ;
     1323    15532    8                        MY_SIZE = (O1COM.NEXT_HALF_BYTE + 9 * MY_SIZE) / 2 ;
     1324    15533    8                      END ;
     1325    15534    7                    ELSE IF SYM$ -> VARIABLE.TYPE = %TYB OR
     1326    15535    7                        SYM$ -> VARIABLE.TYPE = %TYC THEN
     1327    15536    8                      DO ;
     1328    15537    8                        O1COM.NEXT_CHAR = O1COM.NEXT_CHAR + MY_SIZE ;
     1329    15538    8                        O1COM.NEXT_SA = O1COM.NEXT_SA + O1COM.NEXT_CHAR / 6 ;
     1330    15539    8                        O1COM.NEXT_CHAR = MOD (O1COM.NEXT_CHAR,6) ;
     1331    15540    8                        MY_SIZE = MY_SIZE * 6 ;
     1332    15541    8                      END ;
     1333    15542    7                    ELSE
     1334    15543    8                      DO ;
     1335    15544    8                        O1COM.NEXT_BYTE = O1COM.NEXT_BYTE + MY_SIZE ;
     1336    15545    8                        O1COM.NEXT_SA = O1COM.NEXT_SA + O1COM.NEXT_BYTE / 4 ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:49   
     1337    15546    8                        O1COM.NEXT_BYTE = MOD (O1COM.NEXT_BYTE,4) ;
     1338    15547    8                        MY_SIZE = MY_SIZE * 9 ;
     1339    15548    8                      END ;
     1340    15549    7                  END ;
     1341    15550    6                ELSE
     1342    15551    7                  DO ;
     1343    15552    7                    O1COM.NEXT_BYTE = SYM$ -> VARIABLE.ADSC.CN + MY_SIZE ;
     1344    15553    7                    O1COM.NEXT_SA = SYM$ -> VARIABLE.SA + O1COM.NEXT_BYTE / 4 ;
     1345    15554    7                    O1COM.NEXT_BYTE = MOD(O1COM.NEXT_BYTE,4) ;
     1346    15555    7                    MY_SIZE = MY_SIZE * 9 ;
     1347    15556    7                  END ;
     1348    15557
     1349    15558    6                DEP_SIZE = (SIZE + FILLER_SIZE + 8)/9;    /*#32767*/
     1350    15559    6                CALL CHECK_FOR_DEPENDING (DEP_SIZE, QUAL$, SYM$);  /*#32767*/
     1351    15560
     1352    15561    6                IF SYM$ -> ST.ID = %ARRAY
     1353    15562    6                AND (MY_SIZE > %(BYTE_STORAGE_LIMIT*9/8) OR
     1354    15563    6                     SYM$ -> VARIABLE.NDSC.TN = %NDSC4 AND
     1355    15564    6                     SYM$ -> ST.TYPE = %TYD AND
     1356    15565    6                     MY_SIZE > %(BYTE_STORAGE_LIMIT*9/16)) THEN
     1357    15566    7                  DO CASE (SYM$ -> ST.TYPE);
     1358    15567    7                    CASE (%TYD, %TYJ, %TYO, %TYE, %TYF, %TYH, %TYA, %TYN, %TYK, %TYB, %
             15567                             TYC);
     1359    15568    7                      SYM$ -> ARRAY.B.GREATER_256K = TRUE;
             15568                               /* Byte offsets used for indexing */
     1360    15569    7                  END; /* Else use word offsets, Xn OK */
     1361    15570
     1362    15571    6                IF NOT SYM$ -> VARIABLE.B.REDEF_SUB THEN
     1363    15572    7                  DO;
     1364    15573    7                    SIZE = SIZE + MY_SIZE  + FILLER_SIZE ;
     1365    15574    7                    IF SIZE > %(BYTE_STORAGE_LIMIT*9) THEN
     1366    15575    7                      SIZE = %(BYTE_STORAGE_LIMIT * 9 + 1) ;
     1367    15576    7                  END;
     1368    15577
     1369    15578    6                CALL REDEF_SIZE_CHECKS (SYM$);
     1370    15579
     1371    15580        /*V*
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:50   
     1372    15581            DATA_STRUCTURE_LOOP_WRAPUP -- If the current data item contains a variable
     1373    15582                                          occurs clause then the father is marked as
     1374    15583                                          containing one also.  The data item's brother
     1375    15584                                          (if one exists) is assigned to NEXT$ to be
     1376    15585                                          processed in the next iteration of the loop.
     1377    15586        */
     1378    15587
     1379    15588    6                    IF SYM$ -> VARIABLE.B.OCCURS_DEPENDING THEN
     1380    15589    6                      QUAL$ -> QLT.ST$ -> VARIABLE.B.OCCURS_DEPENDING = TRUE ;
     1381    15590
     1382    15591    6                  END ; /* Else Do (It's not Renames) */
     1383    15592
     1384    15593    5                END /* Level # ~= 88 */ ;
     1385    15594
     1386    15595    4                ELSE /* Condition for group item */
     1387    15596    4                  SYM$ -> CONDITION.B.GLOBAL = QUAL$ -> QLT.ST$ -> VARIABLE.B.GLOBAL;
     1388    15597
     1389    15598    4                NEXT$ = NEXT$ -> QLT.BROTHER ;
     1390    15599
     1391    15600    4              END /* While NEXT$ ~= Nil */ ;
     1392    15601
     1393    15602        /*V*
     1394    15603            FINAL_STRUCTURE_SIZE -- If the structure is an array, then the
     1395    15604                                    total structure size must be a multiple
     1396    15605                                    of the maximum boundary needed within the structure.
     1397    15606                                    If this requirement isn't satisfied then filler
     1398    15607                                    is allocated to meet it.
     1399    15608        */
     1400    15609
     1401    15610    3              IF O1COM.NEXT_HALF_BYTE = 1 THEN
     1402    15611    4                DO;
     1403    15612    4                  SIZE = SIZE + 4;
     1404    15613    4                  O1COM.NEXT_HALF_BYTE = 0;
     1405    15614    4                  O1COM.NEXT_BYTE = O1COM.NEXT_BYTE + 1;
     1406    15615    4                  IF O1COM.NEXT_BYTE = 4 THEN
     1407    15616    5                    DO;
     1408    15617    5                      O1COM.NEXT_BYTE = 0;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:51   
     1409    15618    5                      O1COM.NEXT_SA   = O1COM.NEXT_SA + 1;
     1410    15619    5                    END;
     1411    15620    4                END;
     1412    15621
     1413    15622    3              SYM$ = QUAL$ -> QLT.ST$ ;
     1414    15623    3              IF SYM$ -> VARIABLE.ID = %ARRAY THEN
     1415    15624    4                DO; /* Array of group items */
     1416    15625    4                  IF SYM$ -> VARIABLE.B.GLOBAL THEN
     1417    15626    5                    DO; /* If INDEXED BY phrase on a GLOBAL array, make index GLOBAL */
     1418    15627                           %GET_LTS (@ID  = %DIMS,
     1419    15628                                     @ST$ = SYM$);
     1420    15671    5                      LTS$ = LTS$ -> DIMS.D.INDEX$ ((LTS$ -> DIMS.N - 5) / 3);
     1421    15672    6                      DO WHILE LTS$ ~= ADDR (NIL);
     1422    15673    6                        LTS$ -> INDEXES.INDEX_ST$ -> VARIABLE.B.GLOBAL = TRUE;
     1423    15674    6                        LTS$ = LTS$ -> INDEXES.LINK;
     1424    15675    6                      END;
     1425    15676    5                    END;
     1426    15677    4                  MAX_BOUND1 = MAX_BOUND * 9 ;
     1427    15678    4                  SIZE = (SIZE + MAX_BOUND1 - 1) / MAX_BOUND1 * MAX_BOUND1 ;
     1428    15679    4                END;
     1429    15680
     1430    15681    3              SIZE = (SIZE + 8) / 9 ; /* Convert group item size to bytes */
     1431    15682
     1432    15683    3              CALL STRUCTURE_SIZE_CHECK(SIZE, SYM$);
     1433    15684
     1434    15685    4              DO CASE (SYM$ -> ST.ID);
     1435    15686    4                CASE (
     1436    15687    4                      %FD, %SD
     1437    15688    4                     );
     1438    15689    4                  CALL LINAGE_COUNT_KLUDGE (SIZE, SYM$);
     1439    15690
     1440    15691    4                CASE (ELSE);
     1441    15692    4                  /* Peachy */;
     1442    15693
     1443    15694    4              END; /* Case */
     1444    15695    3            END ;
     1445    15696    2   END CALC_SIZE;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:52   
     1446    15697        %EJECT;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:53   
     1447    15698
     1448    15699    2        DO CASE (QUAL$ -> QLT.ST$ -> ST.ID);
     1449    15700
     1450    15701    2          CASE (
     1451    15702                     %ST_ITEMS_WITH_STORAGE;
     1452    15714    2               );
     1453    15715    2            CALL CALC_SIZE (QUAL$);
     1454    15716
     1455    15717    2          CASE (ELSE);
     1456    15718    2            RETURN;
     1457    15719
     1458    15720    2        END; /* Case of id's */
     1459    15721
     1460    15722
     1461    15723    1   END Z8DC$SIZE_CALC ;
     1462    15724        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:54   

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:55   
--  Include file information  --

   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_MKCN.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8DC$SIZE_CALC.

   Procedure Z8DC$SIZE_CALC requires 2760 words for executable code.
   Procedure Z8DC$SIZE_CALC requires 70 words of local(AUTO) storage.

    No errors detected in file Z8DC.:Z8A6TSI    .

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:56   

 Object Unit name= Z8DC$SIZE_CALC                             File name= Z8DC.:Z8A6TOU
 UTS= AUG 09 '97 11:02:37.56 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  ST$
    2  LblCom even  none     5      5  ST_
    3  LblCom even  none     1      1  QLT$
    4  LblCom even  none     1      1  PREV_01_QLT$
    5  LblCom even  none     5      5  QLT_
    6  LblCom even  none     1      1  LTS$
    7  LblCom even  none     5      5  LTS_
    8  LblCom even  none     2      2  MKCN
    9  LblCom even  none     1      1  ETT$
   10  LblCom even  none     1      1  HEAD_ETT$
   11  LblCom even  none   512   1000  ETT_BUCKETS
   12  LblCom even  none     5      5  ETT_
   13  LblCom even  none    90    132  LEX_SYMBOL
   14  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
   15  LblCom even  none    90    132  TEMP_LEX_SYMBOL
   16  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
   17  RoData even  UTS      1      1  Z8DC$SIZE_CALC
   18   Proc  even  none  2760   5310  Z8DC$SIZE_CALC
   19  RoData even  none    36     44  Z8DC$SIZE_CALC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    18      0   yes            yes      Std        2  Z8DC$SIZE_CALC
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:57   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 Z8AR$RESERVER
         yes           Std       2 Z8DO$LINK_WITH_LTS
         yes           Std      12 Z8AE$ERROR
         yes           Std       1 Z8AC$MAKE_CONST
         yes           Std       2 Z8AU$LENGTH_ETT
         yes           Std       4 Z8AF$FORME
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    LTS_STEP                              COMCOM                                O1COM
     HIER_STK_PTR                          HIER_STK                              PAGE_FORMAT
     REP_STK_PTR                           REP_STK

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:58   


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        Z8DC$SIZE_CALC: PROC (QUAL$,MAX_BOUND) ; /* RECURSIVE */

      6 18 000000   000000 700200 xent  Z8DC$SIZE_C* TSX0  ! X66_AUTO_2
        18 000001   000106 000002                    ZERO    70,2
        18 000002   005233 710000 18                 TRA     s:15699

        7        7
        8        8        /*M* Z8DC$SIZE_CALC  Recursive, calculates size of variable     */
        9        9
       10       10        /*P*
       11       11               NAME:  Z8DC$SIZE_CALC
       12       12             AUTHOR:  Greg Myers
       13       13            PURPOSE:  Calculates size of 01 structure and sets the SA field.
       14       14                      This is called recursively to calculate 02's, 03's, etc.
       15       15        */
       16       16
       17       17        /*D*
       18       18               NAME:  Z8DC$SIZE_CALC
       19       19               CALL:  CALL Z8DC$SIZE_CALC (QUAL$,MAX_BOUND);
       20       20          INTERFACE:  This routine only calls itself as it is recursive.
       21       21
       22       22              INPUT:      QUAL$  pointer to QLT entry for top level of structure.
       23       23                      MAX_BOUND  maximum alignment boundary for group item.
       24       24                      The Symbol Table, LTS, and QLT are accessed.
       25       25             OUTPUT:  QUAL$ -> QLT.ST$ -> VARIABLE.ADSC.N  Length of structure
       26       26                      QUAL$ -> QLT.ST$ -> VARIABLE.SA     Word position for storage address
       27       27                      QUAL$ -> QLT.ST$ -> VARIABLE.ADSC.CN Byte position within word
       28       28                      Computes ST.SA and ST.NDSC.n for all ELEMENTARY sons
       29       29            SCRATCH:  LTS$
       30       30                      O1COM.NEXT_SA
       31       31                      O1COM.NEXT_BYTE
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:59   
       32       32                      O1COM.NEXT_HALF_BYTE
       33       33                      O1COM.NEXT_CHAR (CHAR refers to BCD characters)
       34       34                      O1COM.LAST_ITEM_GBCD
       35       35
       36       36        DESCRIPTION:  This procedure uses a case statement to align each data item
       37       37                      to its correct boundary.  It calculates the size of the
       38       38                      variable and its son using the type of item and size of its
       39       39                      dimensions.  Storage allocation variables (O1COM.NEXT_SA)
       40       40                      are incremented and are checked for boundary conditions.
       41       41                      The size is raised to the nearest multiple of its maximum
       42       42                      interior alignment: ie. double word,half_word, etc.,
       43       43                      with the minimum boundary type being a byte.  The size of the
       44       44                      item is then stored in ST.ADSC.N unless it is greater than 4095
       45       45                      bytes then it is stored in LONG.LENGTH.
       46       46
       47       47        */
       48       48        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:60   
       49       49        /*V*
       50       50            INCLUDE_AND_EQU'S -- The include files and preprocessor variables
       51       51                                 are set up here.
       52       52        */
       53       53
       54       54        %EQU PHASE = 1 ;
       55       55
       56       56        %INCLUDE Z8A_DEFC ;
       57      124        %INCLUDE Z8A_SUPP_MAC ;
       58     2524        %INCLUDE Z8A_ERR_NUMS ;
       59     3288        %INCLUDE Z8A_ST ;
       60     6947        %INCLUDE Z8A_QLT ;
       61     7053        %INCLUDE Z8A_LTS ;
       62     9130        %INCLUDE Z8A_COMCOM ;
       63     9780        %INCLUDE Z8A_MKCN;
       64     9797        %INCLUDE Z8A_ETT;
       65    10098        %INCLUDE Z8A_TYPES;
       66    10272        %INCLUDE Z8E_STACKS;
       67    12538        %INCLUDE Z8E_O1COM ;
       68    13299
       69    13300        %EQU BYTE_STORAGE_LIMIT = %(#256K * 4) ; /* Storage limit in bytes */
       70    13301        %EQU ST_STORAGE_LIMIT = BITBIN('007777'O) ;
             13301            /* Symbol table  ADSC.N or NDSC.N size limitation */
       71    13302        %EQU CHARS_PER_WORD = 6 ;
       72    13303        %EQU BYTE = 1 ;
       73    13304        %EQU NON_DOUBLE_WORD_ALIGNED = 1 ;
       74    13305        %EQU HALF_BYTE_VAR = TRUE ;
       75    13306        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:61   
       76    13307    1   DCL   QUAL$         PTR ;
       77    13308    1   DCL   CONDITION$    PTR;
       78    13309    1   DCL   MAX_BOUND     SBIN HALF ; /* Maximum boundary requirement */
       79    13310    1   DCL   MAX_BOUND_SON SBIN HALF AUTO ;  /* Used for recursive call */
       80    13311    1   DCL   MAX_BOUND1    SBIN WORD AUTO ;  /* MAX_BOUND in bits */
       81    13312    1   DCL   SYM$          PTR AUTO ;       /* Ptr to ST item */
       82    13313    1   DCL   SIZE          SBIN WORD AUTO ;
       83    13314    1   DCL   NEXT$         PTR AUTO ;
       84    13315    1   DCL   MY_SIZE       UBIN WORD AUTO ;
       85    13316    1   DCL   MY_SIZE1      UBIN WORD AUTO ;
       86    13317    1   DCL   LAST_DIM      SBIN WORD AUTO ;
       87    13318    1   DCL   DEP_SIZE      SBIN WORD;            /*#32767*/
       88    13319    1   DCL   DIGIT_POS     SBIN HALF AUTO ;  /* Digit pos in word   */
       89    13320    1   DCL   DIGIT_POS_IN_BITS SBIN WORD ;
       90    13321    1   DCL   FILLER_SIZE   UBIN WORD AUTO ;  /* Amount of filler in bits */
       91    13322    1   DCL   FIRST_ELEM$   PTR AUTO ;        /* Pointer to first ELEMENTARY element */
       92    13323    1   DCL   OBJECT_ST$   PTR AUTO ;        /* Ptr to object of REDEFINES         */
       93    13324    1   DCL   SUBJECT_QLT$ PTR ;
       94    13325    1   DCL   SUBJECT_ST$  PTR ;
       95    13326    1   DCL   LAST_SA         SBIN WORD;     /*#35497*/
       96    13327    1   DCL   LAST_BYTE       UBIN WORD;     /*#35497*/
       97    13328    1   DCL   LAST_HALF_BYTE  UBIN WORD;     /*#35497*/
       98    13329    1   DCL   LAST_CHAR       UBIN WORD ;
       99    13330    1   DCL   LAST_ITEM_GBCD  BOOLEAN ;
      100    13331    1   DCL   REDEF_OBJ_SIZE        SBIN WORD AUTO ;
             13331            /* Size of object of REDEFINES        */
      101    13332    1   DCL   REDEF_OBJ_SIZE2       SBIN WORD AUTO ;
      102    13333    1   DCL   REDEF_OBJ_FILLER_SIZE SBIN WORD AUTO;
      103    13334    1   DCL   REDEF_FINAL_SA        SBIN WORD AUTO ; /* Ending word pos for REDEFINES    */
      104    13335    1   DCL   REDEF_FINAL_BYTE      SBIN WORD AUTO ; /* Ending byte pos for REDEFINES    */
      105    13336    1   DCL   REDEF_FINAL_HALF_BYTE SBIN WORD AUTO ; /* Ending digit pos for REDEFINES   */
      106    13337    1   DCL   REDEF_FINAL_CHAR      SBIN WORD AUTO ;
             13337            /* Ending character pos for REDEFINES */
      107    13338    1   DCL   REDEF_FINAL_ITEM_GBCD BOOLEAN   AUTO ; /* REDEFINES end with GBCD */
      108    13339    1   DCL   REDEF_OBJ_SA          SBIN WORD AUTO ;
             13339            /* Ending word pos for object of REDEFINES  */
      109    13340    1   DCL   REDEF_OBJ_BYTE        SBIN WORD AUTO ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:62   
             13340            /* Ending byte pos for object of REDEFINES  */
      110    13341    1   DCL   REDEF_OBJ_HALF_BYTE   SBIN WORD AUTO ;
             13341            /* Ending digit pos for object of REDEFINES */
      111    13342    1   DCL   REDEF_OBJ_CHAR        SBIN WORD AUTO ;
             13342            /* Ending char pos for REDEFINES object */
      112    13343    1   DCL   REDEF_OBJ_ITEM_GBCD   BOOLEAN   AUTO ; /* REDEFINES object end with GBCD */
      113    13344    1   DCL   NEG6                  SBIN      CONSTANT INIT (-6) ;
      114    13345    1   DCL   Z8AE$ERROR            ENTRY (12) ;
             13345            /* Call for error message for REDEFINES    */
      115    13346    1   DCL   Z8AU$LENGTH_ETT       ENTRY (2);
      116    13347    1   DCL   Z8DO$LINK_WITH_LTS    ENTRY (2);
      117    13348    1   DCL   Z8AC$MAKE_CONST       ENTRY (1);
      118    13349    1   DCL   Z8AF$FORME            ENTRY (4);
      119    13350
      120    13351        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:63   
      121    13352        /*V*
      122    13353            ALIGNMENT_MACROS -- These macros are used to increment storage counters
      123    13354                                to certain boundaries (double-word, word, half-word,
      124    13355                                or byte).  This is done to satisfy storage alignment
      125    13356                                requirements.  Filler is incremented to account for the
      126    13357                                storage used to align the variable.
      127    13358
      128    13359                                MAX_BOUND is set to the alignment so that the outer
      129    13360                                structure can be set to a size divisible by the
      130    13361                                MAX_BOUND.
      131    13362
      132    13363                                EXAMPLE:
      133    13364                                   O1 A.
      134    13365                                      02 B OCCURS 5 TIMES.
      135    13366                                         03 C USAGE IS COMP-12.
      136    13367                                         03 D USAGE IS COMP-6.
      137    13368
      138    13369                                The MAX_BOUND would be set to double word alignment
      139    13370                                due to COMP-12 but the length required by C and D is
      140    13371                                3 words.  B is incremented to a size of 4 words so
      141    13372                                that it will have a span of 4 words and C is ensured
      142    13373                                of being double word aligned independent of its
      143    13374                                subscript.
      144    13375        */
      145    13376        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:64   
      146    13377          %MACRO NEXT_DOUBLE_WORD ;
      147    13378                 DO ;
      148    13379                   IF O1COM.LAST_ITEM_GBCD THEN
      149    13380                     DO ;
      150    13381                       IF O1COM.NEXT_CHAR ~= 0 THEN
      151    13382                         DO ;
      152    13383                           FILLER_SIZE = FILLER_SIZE + 36 + O1COM.NEXT_CHAR * NEG6 ;
      153    13384                           O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      154    13385                           O1COM.NEXT_CHAR = 0 ;
      155    13386                         END ;
      156    13387                     END ;
      157    13388                   ELSE IF O1COM.NEXT_BYTE ~= 0 OR O1COM.NEXT_HALF_BYTE ~= 0 THEN
      158    13389                     DO ;
      159    13390                       DIGIT_POS = O1COM.NEXT_BYTE * 9 + O1COM.NEXT_HALF_BYTE * 5 ;
      160    13391                       FILLER_SIZE = FILLER_SIZE + 36 - DIGIT_POS ;
      161    13392                       O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      162    13393                     END ;
      163    13394                   O1COM.NEXT_BYTE = 0 ;
      164    13395                   O1COM.NEXT_HALF_BYTE = 0 ;
      165    13396
      166    13397                   IF MOD(O1COM.NEXT_SA,2) = %NON_DOUBLE_WORD_ALIGNED THEN
      167    13398                     DO ;
      168    13399                       O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      169    13400                       FILLER_SIZE = FILLER_SIZE + 36 ;
      170    13401                     END ;
      171    13402
      172    13403                   MAX_BOUND = %(BYTE * 8) ;
      173    13404                 END ;
      174    13405          %MEND ;
      175    13406
      176    13407          %MACRO NEXT_WORD ;
      177    13408                 DO ;
      178    13409                   IF O1COM.LAST_ITEM_GBCD THEN
      179    13410                     DO ;
      180    13411                       IF O1COM.NEXT_CHAR ~= 0 THEN
      181    13412                         DO ;
      182    13413                           FILLER_SIZE = FILLER_SIZE + 36 + O1COM.NEXT_CHAR * NEG6 ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:65   
      183    13414                           O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      184    13415                           O1COM.NEXT_CHAR = 0 ;
      185    13416                         END ;
      186    13417                     END ;
      187    13418                   ELSE IF O1COM.NEXT_BYTE ~= 0 OR O1COM.NEXT_HALF_BYTE ~= 0 THEN
      188    13419                     DO ;
      189    13420                       DIGIT_POS = O1COM.NEXT_BYTE * 9 + O1COM.NEXT_HALF_BYTE * 5 ;
      190    13421                       FILLER_SIZE = FILLER_SIZE + 36 - DIGIT_POS ;
      191    13422                       O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      192    13423                     END ;
      193    13424                   O1COM.NEXT_BYTE = 0 ;
      194    13425                   O1COM.NEXT_HALF_BYTE = 0 ;
      195    13426
      196    13427                   IF MAX_BOUND < %(BYTE * 4) THEN
      197    13428                     MAX_BOUND = %(BYTE * 4) ;
      198    13429                 END ;
      199    13430          %MEND ;
      200    13431        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:66   
      201    13432          %MACRO NEXT_HALF_WORD ;
      202    13433                 DO ;
      203    13434                   IF O1COM.LAST_ITEM_GBCD THEN
      204    13435                     DO CASE (O1COM.NEXT_CHAR) ;
      205    13436                       CASE (0,3) ;
      206    13437                         /* Already at half word or full word */
      207    13438                       CASE (1,2) ;
      208    13439                         FILLER_SIZE = FILLER_SIZE + 18 + O1COM.NEXT_CHAR * NEG6 ;
      209    13440                         O1COM.NEXT_CHAR = 3 ;
      210    13441                       CASE (4,5) ;
      211    13442                         FILLER_SIZE = FILLER_SIZE + 36 + O1COM.NEXT_CHAR * NEG6 ;
      212    13443                         O1COM.NEXT_CHAR = 0 ;
      213    13444                         O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      214    13445                     END ; /* CASE */
      215    13446                   ELSE
      216    13447                     DO ;
      217    13448                       DIGIT_POS = O1COM.NEXT_BYTE * 2 + O1COM.NEXT_HALF_BYTE ;
      218    13449                       DIGIT_POS_IN_BITS = O1COM.NEXT_BYTE * 9 + O1COM.NEXT_HALF_BYTE * 5 ;
      219    13450
      220    13451                       DO CASE (DIGIT_POS) ;
      221    13452                         CASE (0,4) ;
      222    13453                           /* ALREADY AT HALF WORD OR FULL WORD */
      223    13454                         CASE (1,2,3) ;  /* FILLER UNTIL AT HALF WORD */
      224    13455                           O1COM.NEXT_BYTE = 2 ;
      225    13456                           O1COM.NEXT_HALF_BYTE = 0 ;
      226    13457                           FILLER_SIZE = FILLER_SIZE + 18 - DIGIT_POS_IN_BITS ;
      227    13458                         CASE (5,6,7) ;  /* FILLER UNTIL AT WORD */
      228    13459                           O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      229    13460                           O1COM.NEXT_BYTE = 0 ;
      230    13461                           O1COM.NEXT_HALF_BYTE = 0 ;
      231    13462                           FILLER_SIZE = FILLER_SIZE + 36 - DIGIT_POS_IN_BITS ;
      232    13463                       END ;
      233    13464                   END ;
      234    13465
      235    13466                   IF MAX_BOUND < %(BYTE * 2) THEN
      236    13467                     MAX_BOUND = %(BYTE * 2) ;
      237    13468
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:67   
      238    13469                 END ;
      239    13470          %MEND ;
      240    13471
      241    13472          %MACRO NEXT_BYTE ;
      242    13473                 DO ;
      243    13474                   IF O1COM.LAST_ITEM_GBCD THEN
      244    13475                     DO ;
      245    13476                       DO CASE (O1COM.NEXT_CHAR) ;
      246    13477                         CASE (0) ;
      247    13478                           O1COM.NEXT_BYTE = 0 ;
      248    13479                         CASE (1) ;
      249    13480                           O1COM.NEXT_BYTE = 1 ;
      250    13481                           FILLER_SIZE = FILLER_SIZE + 3 ;
      251    13482                         CASE (2) ;
      252    13483                           O1COM.NEXT_BYTE = 2 ;
      253    13484                           FILLER_SIZE = FILLER_SIZE + 6 ;
      254    13485                         CASE (3) ;
      255    13486                           O1COM.NEXT_BYTE = 2 ;
      256    13487                         CASE (4) ;
      257    13488                           O1COM.NEXT_BYTE = 3 ;
      258    13489                           FILLER_SIZE = FILLER_SIZE + 3 ;
      259    13490                         CASE (5) ;
      260    13491                           O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      261    13492                           O1COM.NEXT_BYTE = 0 ;
      262    13493                           O1COM.NEXT_HALF_BYTE = 0 ;
      263    13494                           FILLER_SIZE = FILLER_SIZE + 6 ;
      264    13495                       END ;
      265    13496                       O1COM.NEXT_HALF_BYTE = 0 ;
      266    13497                     END ;
      267    13498                   ELSE IF O1COM.NEXT_HALF_BYTE = 1 THEN
      268    13499                     DO ;
      269    13500                       FILLER_SIZE = FILLER_SIZE + 4 ;
      270    13501                       O1COM.NEXT_BYTE = O1COM.NEXT_BYTE + 1 ;
      271    13502                       O1COM.NEXT_HALF_BYTE = 0 ;
      272    13503                       O1COM.NEXT_SA = O1COM.NEXT_SA + O1COM.NEXT_BYTE / 4 ;
      273    13504                       O1COM.NEXT_BYTE = MOD (O1COM.NEXT_BYTE,4) ;
      274    13505                     END ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:68   
      275    13506                 END ;
      276    13507          %MEND ;
      277    13508
      278    13509          %MACRO NEXT_CHAR ;
      279    13510                 DO ; /* Position to next BCD character boundary */
      280    13511                   IF NOT O1COM.LAST_ITEM_GBCD THEN
      281    13512                     DO ;
      282    13513                       DIGIT_POS = O1COM.NEXT_BYTE * 2 + O1COM.NEXT_HALF_BYTE ;
      283    13514                       DO CASE (DIGIT_POS) ;
      284    13515                         CASE (0) ;
      285    13516                           O1COM.NEXT_CHAR = 0 ;
      286    13517                         CASE (1) ;
      287    13518                           O1COM.NEXT_CHAR = 1 ;
      288    13519                           FILLER_SIZE = FILLER_SIZE + 1 ;
      289    13520                         CASE (2) ;
      290    13521                           O1COM.NEXT_CHAR = 2 ;
      291    13522                           FILLER_SIZE = FILLER_SIZE + 3 ;
      292    13523                         CASE (3) ;
      293    13524                           O1COM.NEXT_CHAR = 3 ;
      294    13525                           FILLER_SIZE = FILLER_SIZE + 4 ;
      295    13526                         CASE (4) ;
      296    13527                           O1COM.NEXT_CHAR = 3 ;
      297    13528                         CASE (5) ;
      298    13529                           O1COM.NEXT_CHAR = 4 ;
      299    13530                           FILLER_SIZE = FILLER_SIZE + 1 ;
      300    13531                         CASE (6) ;
      301    13532                           O1COM.NEXT_CHAR = 5 ;
      302    13533                           FILLER_SIZE = FILLER_SIZE + 3 ;
      303    13534                         CASE (7) ;
      304    13535                           O1COM.NEXT_SA = O1COM.NEXT_SA + 1 ;
      305    13536                           O1COM.NEXT_CHAR = 0 ;
      306    13537                           FILLER_SIZE = FILLER_SIZE + 4 ;
      307    13538                       END ;
      308    13539                     END ;
      309    13540                 END ;
      310    13541          %MEND ;
      311    13542
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:69   
      312    13543          %MACRO NEXT_HALF_BYTE ;
      313    13544                 DO ; /* Position to next packed decimal digit boundary */
      314    13545                   IF O1COM.LAST_ITEM_GBCD THEN
      315    13546                     DO CASE (O1COM.NEXT_CHAR) ;
      316    13547                       CASE (0) ;
      317    13548                         O1COM.NEXT_BYTE = 0 ;
      318    13549                         O1COM.NEXT_HALF_BYTE = 0 ;
      319    13550                       CASE (1) ;
      320    13551                         O1COM.NEXT_BYTE = 1 ;
      321    13552                         O1COM.NEXT_HALF_BYTE = 0 ;
      322    13553                         FILLER_SIZE = FILLER_SIZE + 3 ;
      323    13554                       CASE (2) ;
      324    13555                         O1COM.NEXT_BYTE = 1 ;
      325    13556                         O1COM.NEXT_HALF_BYTE = 1 ;
      326    13557                         FILLER_SIZE = FILLER_SIZE + 2 ;
      327    13558                       CASE (3) ;
      328    13559                         O1COM.NEXT_BYTE = 2 ;
      329    13560                         O1COM.NEXT_HALF_BYTE = 0 ;
      330    13561                       CASE (4) ;
      331    13562                         O1COM.NEXT_BYTE = 3 ;
      332    13563                         O1COM.NEXT_HALF_BYTE = 0 ;
      333    13564                         FILLER_SIZE = FILLER_SIZE + 3 ;
      334    13565                       CASE (5) ;
      335    13566                         O1COM.NEXT_BYTE = 3 ;
      336    13567                         O1COM.NEXT_HALF_BYTE = 1 ;
      337    13568                         FILLER_SIZE = FILLER_SIZE + 2 ;
      338    13569                     END ;
      339    13570                 END ;
      340    13571          %MEND ;
      341    13572        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:70   
      342    13573    1   STRUCTURE_SIZE_CHECK: PROC (SIZE_VALUE, SYM$) ;

  13573 18 000003   200064 741300       STRUCTURE_S* STX1  ! @RETURN$+1,,AUTO

      343    13574
      344    13575
      345    13576        /*I*
      346    13577               NAME:  STRUCTURE_SIZE_CHECK
      347    13578               CALL:  CALL STRUCTURE_SIZE_CHECK(SIZE_VALUE) ;
      348    13579
      349    13580              INPUT:  SIZE_VALUE -- Size of variable to be checked and stored.
      350    13581             OUTPUT:  The symbol table entry is updated to contain the size.
      351    13582
      352    13583        DESCRIPTION:  This procedure receives the size of the data item.  The size is
      353    13584                      checked to see if it will fit in the ST.ADSC.N field.  If it will
      354    13585                      the size is stored there otherwise a LONG item will be created
      355    13586                      in the LTS table.  The LONG item is then linked directly to the
      356    13587                      ST by ST.LTS$ or indirectly through LTSS.LONG$.
      357    13588
      358    13589                      Size <= 4095 bytes.
      359    13590                           ST$ -> VARIABLE.ADSC.N = SIZE_VALUE
      360    13591
      361    13592                      Size > 4095 bytes, no prior LTS items created(ST.LTS$=ADDR(NIL))
      362    13593                           ST$ -> VARIABLE.LTS$ -> LONG.LENGTH = SIZE_VALUE
      363    13594
      364    13595                      Size > 4095 bytes, prior LTS items(ST.LTS$~=ADDR(NIL))
      365    13596                           ST$ -> VARIABLE.LTS$ -> LTSS.LONG$ -> LONG.LENGTH= SIZE_VALUE
      366    13597
      367    13598        */
      368    13599
      369    13600    2   DCL NEW_LONG$          PTR;
      370    13601    2   DCL SIZE_VALUE         UBIN WORD ; /* Size of variable to be checked */
      371    13602    2   DCL SYM$               PTR;
      372    13603
      373    13604        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:71   
      374    13605    2          IF SYM$ -> VARIABLE.B.NON_STORAGE THEN

  13605 18 000004   200066 470500                    LDP0    @SYM$,,AUTO
        18 000005   000000 471500                    LDP1    0,,PR0
        18 000006   100003 236100                    LDQ     3,,PR1
        18 000007   000040 316007                    CANQ    32,DL
        18 000010   000012 600000 18                 TZE     s:13608

      375    13606    2              RETURN;

  13606 18 000011   000001 702211                    TSX2  ! 1,X1

      376    13607
      377    13608    2          IF SIZE_VALUE <= %ST_STORAGE_LIMIT THEN

  13608 18 000012   200065 473500                    LDP3    @SIZE_VALUE,,AUTO
        18 000013   300000 235100                    LDA     0,,PR3
        18 000014   010000 115007                    CMPA    4096,DL
        18 000015   000021 603000 18                 TRC     s:13612

      378    13609    2            SYM$ -> VARIABLE.ADSC.N = SIZE_VALUE ;

  13609 18 000016   300000 236100                    LDQ     0,,PR3
        18 000017   100001 752103                    STCQ    1,'03'O,PR1
        18 000020   000076 710000 18                 TRA     s:13714

      379    13610    2          ELSE    /* SIZE > 4095, Must be stored in LONG.LENGTH */
      380    13611    3            DO ;

      381    13612    3              SYM$ -> SCALAR.B.LENGTH_4096 = TRUE;

  13612 18 000021   004000 236003                    LDQ     2048,DU
        18 000022   100003 256100                    ORSQ    3,,PR1

      382    13613
      383    13614                   %NEW_LONG (@POINTER = NEW_LONG$,
      384    13615                              @LENGTH  = SIZE_VALUE);
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:72   

  13694 18 000023   000002 236000 7                  LDQ     LTS_+2
        18 000024   000002 036007                    ADLQ    2,DL
        18 000025   000003 116000 7                  CMPQ    LTS_+3
        18 000026   000037 604000 18                 TMI     s:13696

  13695 18 000027   000002 236000 19                 LDQ     2
        18 000030   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000031   200072 631500                    EPPR1   NEW_DEP$+1,,AUTO
        18 000032   200073 451500                    STP1    NEW_DEP$+2,,AUTO
        18 000033   200073 630500                    EPPR0   NEW_DEP$+2,,AUTO
        18 000034   000001 631400 19                 EPPR1   1
        18 000035   000000 701000 xent               TSX1    Z8AR$RESERVER
        18 000036   000000 011000                    NOP     0

  13696 18 000037   000002 236000 7                  LDQ     LTS_+2
        18 000040   000022 736000                    QLS     18
        18 000041   000001 036000 7                  ADLQ    LTS_+1
        18 000042   200067 756100                    STQ     NEW_LONG$,,AUTO

  13697 18 000043   000002 236007                    LDQ     2,DL
        18 000044   000002 056000 7                  ASQ     LTS_+2

  13698 18 000045   001110 220003                    LDX0    584,DU
        18 000046   200067 470500                    LDP0    NEW_LONG$,,AUTO
        18 000047   000000 740100                    STX0    0,,PR0

  13704 18 000050   200065 470500                    LDP0    @SIZE_VALUE,,AUTO
        18 000051   200067 471500                    LDP1    NEW_LONG$,,AUTO
        18 000052   000000 235100                    LDA     0,,PR0
        18 000053   100001 755100                    STA     1,,PR1

      385    13707
      386    13708    3              CALL Z8DO$LINK_WITH_LTS (SYM$ -> VARIABLE.LTS$, NEW_LONG$);

  13708 18 000054   200066 471500                    LDP1    @SYM$,,AUTO
        18 000055   100000 473500                    LDP3    0,,PR1
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:73   
        18 000056   200067 634500                    EPPR4   NEW_LONG$,,AUTO
        18 000057   200073 454500                    STP4    NEW_DEP$+2,,AUTO
        18 000060   300005 635500                    EPPR5   5,,PR3
        18 000061   200072 455500                    STP5    NEW_DEP$+1,,AUTO
        18 000062   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
        18 000063   000003 631400 19                 EPPR1   3
        18 000064   000000 701000 xent               TSX1    Z8DO$LINK_WITH_LTS
        18 000065   000000 011000                    NOP     0

      387    13709
      388    13710    3              IF SIZE_VALUE > %(BYTE_STORAGE_LIMIT / 8) THEN

  13710 18 000066   200065 470500                    LDP0    @SIZE_VALUE,,AUTO
        18 000067   000000 235100                    LDA     0,,PR0
        18 000070   400001 115007                    CMPA    -131071,DL
        18 000071   000076 602000 18                 TNC     s:13714

      389    13711    3                SYM$ -> VARIABLE.B.GREATER_256K = TRUE;

  13711 18 000072   200066 471500                    LDP1    @SYM$,,AUTO
        18 000073   100000 473500                    LDP3    0,,PR1
        18 000074   020000 236003                    LDQ     8192,DU
        18 000075   300003 256100                    ORSQ    3,,PR3

      390    13712
      391    13713    3            END ;

      392    13714    2   END STRUCTURE_SIZE_CHECK ;

  13714 18 000076   200064 221300                    LDX1  ! @RETURN$+1,,AUTO
        18 000077   000001 702211                    TSX2  ! 1,X1

      393    13715        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:74   
      394    13716    1   SET_RENAMES_ITEM: PROC (SYM$);

  13716 18 000100   200052 741300       SET_RENAMES* STX1  ! @QUAL$+1,,AUTO

      395    13717
      396    13718        /*I*
      397    13719               NAME:  SET_RENAMES_ITEM
      398    13720               CALL:  CALL SET_RENAMES_ITEM ;
      399    13721
      400    13722              INPUT:  SYM$ -- pointer to ST  entry for Renames variable.
      401    13723                      NEXT$ - pointer to QLT entry for Renames variable.
      402    13724             OUTPUT:  The Rename variable's descriptor is set up ie. ADSC.N, ADSC.CN.
      403    13725            SCRATCH:  LTS$ -- Used to point to RENAMES item in LTS table.
      404    13726
      405    13727        DESCRIPTION:  This procedure sets up the RENAMES variable.  It flags errors
      406    13728                      involving variable occurs clauses as neither the beginning or
      407    13729                      ending data name of the RENAMES clause may contain one.
      408    13730
      409    13731                      If the RENAMES clause contains no THROUGH phrase ie. (A RENAMES B)
      410    13732                      then the descriptor for A is copied directly from B and the
      411    13733                      RENAMES clause is handled like a REDEFINES.
      412    13734
      413    13735                      If a THROUGH clause exists, the beginning and ending data items
      414    13736                      are checked to see if the clause starts or ends on a digit
      415    13737                      boundary.  If it does then a warning is flagged because some
      416    13738                      garbage data may be contained in the RENAMES variable.
      417    13739                      This is because the RENAMES variable is of type TYA and TYA's
      418    13740                      require byte alignment and their length is in terms of bytes.
      419    13741        */
      420    13742        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:75   
      421    13743        /*B*
      422    13744            RENAMES_VARS
      423    13745               START_BYTE_POS -- The byte position of the starting data item in the
      424    13746                                 Renames clause.
      425    13747               END_BYTE_POS   -- The byte position of the ending data item in the
      426    13748                                 Renames clause.
      427    13749               END_ST_SIZE    -- The size of the ending data entry in the Renames
      428    13750                                 clause.
      429    13751        */
      430    13752
      431    13753    2   DCL  SYM$           PTR;
      432    13754    2   DCL  START_BYTE_POS UBIN WORD ;
      433    13755    2   DCL  END_BYTE_POS   UBIN WORD ;
      434    13756    2   DCL  START_ST$      PTR;
      435    13757    2   DCL  START_CN       SBIN WORD;
      436    13758    2   DCL  END_ST$        PTR;
      437    13759    2   DCL  END_CN         SBIN WORD;
      438    13760    2   DCL  END_ST_SIZE    UBIN WORD ;
      439    13761    2   DCL  LTS$$          PTR;
      440    13762        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:76   
      441    13763        /*V*
      442    13764            PRESET_RENAMES -- The pointer is set to the RENAMES entry in the LTS
      443    13765                              which contains pointers to the start and end subjects.
      444    13766        */
      445    13767
      446    13768    2      LTS$$ = NEXT$ -> QLT.RENAMES_LTS$ ;

  13768 18 000101   200012 470500                    LDP0    NEXT$,,AUTO
        18 000102   000003 236100                    LDQ     3,,PR0
        18 000103   200063 756100                    STQ     LTS$$,,AUTO

      447    13769
      448    13770    2      START_ST$ = LTS$$ -> RENAMES.START_ST$;

  13770 18 000104   200063 471500                    LDP1    LTS$$,,AUTO
        18 000105   100001 236100                    LDQ     1,,PR1
        18 000106   200056 756100                    STQ     START_ST$,,AUTO

      449    13771    2      END_ST$   = LTS$$ -> RENAMES.END_ST$;

  13771 18 000107   100002 236100                    LDQ     2,,PR1
        18 000110   200060 756100                    STQ     END_ST$,,AUTO

      450    13772
      451    13773    2      IF START_ST$ -> VARIABLE.B.OCCURS_DEPENDING THEN

  13773 18 000111   200056 473500                    LDP3    START_ST$,,AUTO
        18 000112   300003 236100                    LDQ     3,,PR3
        18 000113   000200 316003                    CANQ    128,DU
        18 000114   000136 600000 18                 TZE     s:13785

      452    13774    2        CALL Z8AE$ERROR (%E$RENAMES_VAR_OCCR_ERR,

  13774 18 000115   200053 474500                    LDP4    @SYM$,,AUTO
        18 000116   400000 475500                    LDP5    0,,PR4
        18 000117   500002 236100                    LDQ     2,,PR5
        18 000120   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:77   
        18 000121   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000122   200056 236100                    LDQ     START_ST$,,AUTO
        18 000123   000006 036003                    ADLQ    6,DU
        18 000124   000007 235000 19                 LDA     7
        18 000125   200076 757100                    STAQ    NEW_DEP$+5,,AUTO
        18 000126   200072 635500                    EPPR5   NEW_DEP$+1,,AUTO
        18 000127   200075 455500                    STP5    NEW_DEP$+4,,AUTO
        18 000130   000010 236000 19                 LDQ     8
        18 000131   200074 756100                    STQ     NEW_DEP$+3,,AUTO
        18 000132   200074 630500                    EPPR0   NEW_DEP$+3,,AUTO
        18 000133   000004 631400 19                 EPPR1   4
        18 000134   000000 701000 xent               TSX1    Z8AE$ERROR
        18 000135   000000 011000                    NOP     0

      453    13775    2                         BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      454    13776    2                         1,
      455    13777    2                         START_ST$ -> VARIABLE.DNT$);
      456    13778
      457    13779        /*V*
      458    13780            RENAMES_NON_THRU -- There is no thru phrase so the RENAMES is handled
      459    13781                                like a REDEFINES with the descriptor copied from the
      460    13782                                start item.
      461    13783        */
      462    13784
      463    13785    2      IF END_ST$ = ADDR(NIL) THEN

  13785 18 000136   200060 236100                    LDQ     END_ST$,,AUTO
        18 000137   000000 116000 19                 CMPQ    0
        18 000140   000152 601000 18                 TNZ     s:13802

      464    13786    3        DO ;

      465    13787    3          SYM$ -> VARIABLE.SA = START_ST$ -> VARIABLE.SA ;

  13787 18 000141   200053 470500                    LDP0    @SYM$,,AUTO
        18 000142   000000 471500                    LDP1    0,,PR0
        18 000143   200056 473500                    LDP3    START_ST$,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:78   
        18 000144   300001 220100                    LDX0    1,,PR3
        18 000145   100001 740100                    STX0    1,,PR1

      466    13788    3          SYM$ -> VARIABLE.NDSC = START_ST$ -> VARIABLE.NDSC ;

  13788 18 000146   000000 471500                    LDP1    0,,PR0
        18 000147   300001 720100                    LXL0    1,,PR3
        18 000150   100001 440100                    SXL0    1,,PR1

      467    13789    3        END ;

  13789 18 000151   000640 710000 18                 TRA     s:13937

      468    13790        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:79   
      469    13791        /*V*
      470    13792            RENAMES_THRU_PHRASE -- The starting and ending positions are checked for
      471    13793                                   digit boundaries. The descriptor is set up with
      472    13794                                   the character offset and SA copied from the
      473    13795                                   starting data item.  The size is calculated and
      474    13796                                   stored after being check for length maximums.
      475    13797
      476    13798        */
      477    13799        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:80   
      478    13800    2      ELSE
      479    13801    3        DO ;

      480    13802    3          SYM$ -> VARIABLE.SA = START_ST$ -> VARIABLE.SA;

  13802 18 000152   200053 470500                    LDP0    @SYM$,,AUTO
        18 000153   000000 471500                    LDP1    0,,PR0
        18 000154   200056 473500                    LDP3    START_ST$,,AUTO
        18 000155   300001 220100                    LDX0    1,,PR3
        18 000156   100001 740100                    STX0    1,,PR1

      481    13803
      482    13804               %GET_CN   (@ST$ = START_ST$,
      483    13805                          @ST1$ = START_ST$,
      484    13806                          @RTN = START_CN);

  13808 18 000157   300002 220100                    LDX0    2,,PR3
        18 000160   000014 100003                    CMPX0   12,DU
        18 000161   000171 600000 18                 TZE     s:13812
        18 000162   000023 100003                    CMPX0   19,DU
        18 000163   000171 600000 18                 TZE     s:13812
        18 000164   000000 100003                    CMPX0   0,DU
        18 000165   000176 601000 18                 TNZ     s:13814
        18 000166   300001 236100                    LDQ     1,,PR3
        18 000167   040000 316007                    CANQ    16384,DL
        18 000170   000176 600000 18                 TZE     s:13814

  13812 18 000171   300001 236100                    LDQ     1,,PR3
        18 000172   000017 772000                    QRL     15
        18 000173   000007 376007                    ANQ     7,DL
        18 000174   200057 756100                    STQ     START_CN,,AUTO
        18 000175   000202 710000 18                 TRA     s:13822

  13814 18 000176   300001 236100                    LDQ     1,,PR3
        18 000177   000020 772000                    QRL     16
        18 000200   000003 376007                    ANQ     3,DL
        18 000201   200057 756100                    STQ     START_CN,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:81   

      485    13817
      486    13818               %GET_CN   (@ST$ = END_ST$,
      487    13819                          @ST1$ = END_ST$,
      488    13820                          @RTN = END_CN);

  13822 18 000202   200060 471500                    LDP1    END_ST$,,AUTO
        18 000203   100002 221100                    LDX1    2,,PR1
        18 000204   000014 101003                    CMPX1   12,DU
        18 000205   000215 600000 18                 TZE     s:13826
        18 000206   000023 101003                    CMPX1   19,DU
        18 000207   000215 600000 18                 TZE     s:13826
        18 000210   000000 101003                    CMPX1   0,DU
        18 000211   000222 601000 18                 TNZ     s:13828
        18 000212   100001 236100                    LDQ     1,,PR1
        18 000213   040000 316007                    CANQ    16384,DL
        18 000214   000222 600000 18                 TZE     s:13828

  13826 18 000215   100001 236100                    LDQ     1,,PR1
        18 000216   000017 772000                    QRL     15
        18 000217   000007 376007                    ANQ     7,DL
        18 000220   200061 756100                    STQ     END_CN,,AUTO
        18 000221   000226 710000 18                 TRA     s:13832

  13828 18 000222   100001 236100                    LDQ     1,,PR1
        18 000223   000020 772000                    QRL     16
        18 000224   000003 376007                    ANQ     3,DL
        18 000225   200061 756100                    STQ     END_CN,,AUTO

      489    13831
      490    13832    3          IF START_ST$ -> VARIABLE.TYPE = %TYD

  13832 18 000226   000000 100003                    CMPX0   0,DU
        18 000227   000270 601000 18                 TNZ     s:13843
        18 000230   300001 236100                    LDQ     1,,PR3
        18 000231   040000 316007                    CANQ    16384,DL
        18 000232   000270 600000 18                 TZE     s:13843
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:82   

      491    13833    3          AND START_ST$ -> VARIABLE.NDSC.TN = %NDSC4 THEN
      492    13834    4            DO;

      493    13835    4              SYM$ -> VARIABLE.ADSC.CN = START_CN / 2;

  13835 18 000233   000000 474500                    LDP4    0,,PR0
        18 000234   200057 236100                    LDQ     START_CN,,AUTO
        18 000235   000002 506007                    DIV     2,DL
        18 000236   000020 736000                    QLS     16
        18 000237   400001 676100                    ERQ     1,,PR4
        18 000240   600000 376007                    ANQ     -65536,DL
        18 000241   400001 656100                    ERSQ    1,,PR4

      494    13836
      495    13837    4              IF MOD (START_CN, %DIGITS_PER_BYTE) ~= 0 THEN

  13837 18 000242   200057 236100                    LDQ     START_CN,,AUTO
        18 000243   000002 506007                    DIV     2,DL
        18 000244   000044 733000                    LRS     36
        18 000245   000000 116003                    CMPQ    0,DU
        18 000246   000346 600000 18                 TZE     s:13862

      496    13838    4                CALL Z8AE$ERROR (%E$RENAMES_DIGIT_BOUND_WARN,

  13838 18 000247   000000 474500                    LDP4    0,,PR0
        18 000250   400002 236100                    LDQ     2,,PR4
        18 000251   777777 376007                    ANQ     -1,DL
        18 000252   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000253   200056 236100                    LDQ     START_ST$,,AUTO
        18 000254   000006 036003                    ADLQ    6,DU
        18 000255   000013 235000 19                 LDA     11
        18 000256   200076 757100                    STAQ    NEW_DEP$+5,,AUTO
        18 000257   200072 634500                    EPPR4   NEW_DEP$+1,,AUTO
        18 000260   200075 454500                    STP4    NEW_DEP$+4,,AUTO
        18 000261   000014 236000 19                 LDQ     12
        18 000262   200074 756100                    STQ     NEW_DEP$+3,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:83   
        18 000263   200074 630500                    EPPR0   NEW_DEP$+3,,AUTO
        18 000264   000004 631400 19                 EPPR1   4
        18 000265   000000 701000 xent               TSX1    Z8AE$ERROR
        18 000266   000000 011000                    NOP     0

      497    13839    4                                 BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      498    13840    4                                 0,
      499    13841    4                                 START_ST$ -> VARIABLE.DNT$);
      500    13842    4            END;

  13842 18 000267   000346 710000 18                 TRA     s:13862

      501    13843    3          ELSE IF START_ST$ -> VARIABLE.TYPE = %TYB OR

  13843 18 000270   000014 100003                    CMPX0   12,DU
        18 000271   000274 600000 18                 TZE     s:13846
        18 000272   000023 100003                    CMPX0   19,DU
        18 000273   000336 601000 18                 TNZ     s:13857

      502    13844    3              START_ST$ -> VARIABLE.TYPE = %TYC THEN
      503    13845    4            DO ;

      504    13846    4              SYM$ -> VARIABLE.ADSC.CN = START_CN * 2 / 3 ;

  13846 18 000274   000000 474500                    LDP4    0,,PR0
        18 000275   200057 236100                    LDQ     START_CN,,AUTO
        18 000276   000001 736000                    QLS     1
        18 000277   000003 506007                    DIV     3,DL
        18 000300   000020 736000                    QLS     16
        18 000301   400001 676100                    ERQ     1,,PR4
        18 000302   600000 376007                    ANQ     -65536,DL
        18 000303   400001 656100                    ERSQ    1,,PR4

      505    13847    4              IF MOD (START_CN, 3) ~= 0 THEN

  13847 18 000304   200057 236100                    LDQ     START_CN,,AUTO
        18 000305   000003 506007                    DIV     3,DL
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:84   
        18 000306   000044 733000                    LRS     36
        18 000307   000000 116003                    CMPQ    0,DU
        18 000310   000331 600000 18                 TZE     s:13852

      506    13848    4                CALL Z8AE$ERROR (%E$RENAMES_DIGIT_BOUND_WARN,

  13848 18 000311   000000 474500                    LDP4    0,,PR0
        18 000312   400002 236100                    LDQ     2,,PR4
        18 000313   777777 376007                    ANQ     -1,DL
        18 000314   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000315   200056 236100                    LDQ     START_ST$,,AUTO
        18 000316   000006 036003                    ADLQ    6,DU
        18 000317   000013 235000 19                 LDA     11
        18 000320   200076 757100                    STAQ    NEW_DEP$+5,,AUTO
        18 000321   200072 634500                    EPPR4   NEW_DEP$+1,,AUTO
        18 000322   200075 454500                    STP4    NEW_DEP$+4,,AUTO
        18 000323   000014 236000 19                 LDQ     12
        18 000324   200074 756100                    STQ     NEW_DEP$+3,,AUTO
        18 000325   200074 630500                    EPPR0   NEW_DEP$+3,,AUTO
        18 000326   000004 631400 19                 EPPR1   4
        18 000327   000000 701000 xent               TSX1    Z8AE$ERROR
        18 000330   000000 011000                    NOP     0

      507    13849    4                                 BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      508    13850    4                                 0,
      509    13851    4                                 START_ST$ -> VARIABLE.DNT$);
      510    13852    4              IF START_CN > 2
             13852                  /* Convert BCD character position to packed decimal character position */

  13852 18 000331   200057 235100                    LDA     START_CN,,AUTO
        18 000332   000002 115007                    CMPA    2,DL
        18 000333   000346 604400 18                 TMOZ    s:13862

      511    13853    4                THEN START_CN = START_CN + 1 ;

  13853 18 000334   200057 054100                    AOS     START_CN,,AUTO

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:85   
      512    13854    4            END ;

  13854 18 000335   000346 710000 18                 TRA     s:13862

      513    13855    3          ELSE
      514    13856    4            DO;

      515    13857    4              SYM$ -> VARIABLE.ADSC.CN = START_CN;

  13857 18 000336   000000 474500                    LDP4    0,,PR0
        18 000337   200057 236100                    LDQ     START_CN,,AUTO
        18 000340   000020 736000                    QLS     16
        18 000341   400001 676100                    ERQ     1,,PR4
        18 000342   600000 376007                    ANQ     -65536,DL
        18 000343   400001 656100                    ERSQ    1,,PR4

      516    13858    4              START_CN = START_CN * 2;

  13858 18 000344   200057 236100                    LDQ     START_CN,,AUTO
        18 000345   200057 056100                    ASQ     START_CN,,AUTO

      517    13859    4            END;

      518    13860
      519    13861               /* Digit units */
      520    13862    3          START_BYTE_POS = SYM$ -> VARIABLE.SA * 8 + START_CN;

  13862 18 000346   200053 470500                    LDP0    @SYM$,,AUTO
        18 000347   000000 471500                    LDP1    0,,PR0
        18 000350   100001 236100                    LDQ     1,,PR1
        18 000351   000017 772000                    QRL     15
        18 000352   000015 376000 19                 ANQ     13
        18 000353   200057 036100                    ADLQ    START_CN,,AUTO
        18 000354   200054 756100                    STQ     START_BYTE_POS,,AUTO

      521    13863
      522    13864    3          IF END_ST$ -> VARIABLE.TYPE = %TYD
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:86   

  13864 18 000355   200060 473500                    LDP3    END_ST$,,AUTO
        18 000356   300002 220100                    LDX0    2,,PR3
        18 000357   000437 601000 18                 TNZ     s:13880
        18 000360   300001 236100                    LDQ     1,,PR3
        18 000361   040000 316007                    CANQ    16384,DL
        18 000362   000437 600000 18                 TZE     s:13880

      523    13865    3          AND END_ST$ -> VARIABLE.NDSC.TN = %NDSC4 THEN
      524    13866    4            DO;

      525    13867    4              END_BYTE_POS = END_ST$ -> VARIABLE.SA * 8 + END_CN;

  13867 18 000363   300001 236100                    LDQ     1,,PR3
        18 000364   000017 772000                    QRL     15
        18 000365   000015 376000 19                 ANQ     13
        18 000366   200061 036100                    ADLQ    END_CN,,AUTO
        18 000367   200055 756100                    STQ     END_BYTE_POS,,AUTO

      526    13868
      527    13869    4              END_ST_SIZE = END_ST$ -> VARIABLE.NDSC.N;

  13869 18 000370   300001 236100                    LDQ     1,,PR3
        18 000371   000077 376007                    ANQ     63,DL
        18 000372   200062 756100                    STQ     END_ST_SIZE,,AUTO

      528    13870
      529    13871    4              IF MOD ((END_ST_SIZE + END_BYTE_POS), %DIGITS_PER_BYTE) ~= 0 THEN

  13871 18 000373   200055 036100                    ADLQ    END_BYTE_POS,,AUTO
        18 000374   000001 376007                    ANQ     1,DL
        18 000375   000415 600000 18                 TZE     s:13877

      530    13872    4                CALL Z8AE$ERROR (%E$RENAMES_DIGIT_BOUND_WARN,

  13872 18 000376   100002 236100                    LDQ     2,,PR1
        18 000377   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:87   
        18 000400   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000401   200060 236100                    LDQ     END_ST$,,AUTO
        18 000402   000006 036003                    ADLQ    6,DU
        18 000403   000013 235000 19                 LDA     11
        18 000404   200076 757100                    STAQ    NEW_DEP$+5,,AUTO
        18 000405   200072 631500                    EPPR1   NEW_DEP$+1,,AUTO
        18 000406   200075 451500                    STP1    NEW_DEP$+4,,AUTO
        18 000407   000014 236000 19                 LDQ     12
        18 000410   200074 756100                    STQ     NEW_DEP$+3,,AUTO
        18 000411   200074 630500                    EPPR0   NEW_DEP$+3,,AUTO
        18 000412   000004 631400 19                 EPPR1   4
        18 000413   000000 701000 xent               TSX1    Z8AE$ERROR
        18 000414   000000 011000                    NOP     0

      531    13873    4                                 BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      532    13874    4                                 0,
      533    13875    4                                 END_ST$ -> VARIABLE.DNT$);
      534    13876
      535    13877    4              CALL STRUCTURE_SIZE_CHECK (((END_ST_SIZE + END_BYTE_POS + 1) / 2) -

  13877 18 000415   200062 236100                    LDQ     END_ST_SIZE,,AUTO
        18 000416   200055 036100                    ADLQ    END_BYTE_POS,,AUTO
        18 000417   000001 036007                    ADLQ    1,DL
        18 000420   000001 772000                    QRL     1
        18 000421   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000422   200054 236100                    LDQ     START_BYTE_POS,,AUTO
        18 000423   000001 772000                    QRL     1
        18 000424   200073 756100                    STQ     NEW_DEP$+2,,AUTO
        18 000425   200072 236100                    LDQ     NEW_DEP$+1,,AUTO
        18 000426   200073 136100                    SBLQ    NEW_DEP$+2,,AUTO
        18 000427   200101 756100                    STQ     NEW_DEP$+8,,AUTO
        18 000430   200053 236100                    LDQ     @SYM$,,AUTO
        18 000431   200066 756100                    STQ     @SYM$,,AUTO
        18 000432   200101 630500                    EPPR0   NEW_DEP$+8,,AUTO
        18 000433   200065 450500                    STP0    @SIZE_VALUE,,AUTO
        18 000434   000003 701000 18                 TSX1    STRUCTURE_SIZE_CHECK
        18 000435   000000 011000                    NOP     0
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:88   

      536    13878    4                                         (START_BYTE_POS / 2), SYM$);
      537    13879    4            END;

  13879 18 000436   000640 710000 18                 TRA     s:13937

      538    13880    3          ELSE IF END_ST$ -> VARIABLE.TYPE = %TYB OR

  13880 18 000437   000014 100003                    CMPX0   12,DU
        18 000440   000443 600000 18                 TZE     s:13883
        18 000441   000023 100003                    CMPX0   19,DU
        18 000442   000550 601000 18                 TNZ     s:13911

      539    13881    3              END_ST$ -> VARIABLE.TYPE = %TYC THEN
      540    13882    4            DO ;

      541    13883    4              END_BYTE_POS = END_ST$ -> VARIABLE.SA * 6 + END_CN ;

  13883 18 000443   300001 236100                    LDQ     1,,PR3
        18 000444   000022 772000                    QRL     18
        18 000445   000006 402007                    MPY     6,DL
        18 000446   200061 036100                    ADLQ    END_CN,,AUTO
        18 000447   200055 756100                    STQ     END_BYTE_POS,,AUTO

      542    13884
      543    13885    4              IF END_ST$ -> VARIABLE.TYPE = %TYB THEN

  13885 18 000450   000014 100003                    CMPX0   12,DU
        18 000451   000474 601000 18                 TNZ     s:13899

      544    13886                     %GET_ADSC_LEN (ST$ = END_ST$,
      545    13887                                    RTN = END_ST_SIZE) ;

  13889 18 000452   300003 236100                    LDQ     3,,PR3
        18 000453   004000 316003                    CANQ    2048,DU
        18 000454   000470 600000 18                 TZE     s:13895

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:89   
  13890 18 000455   300005 474500                    LDP4    5,,PR3
        18 000456   400000 221100                    LDX1    0,,PR4
        18 000457   001105 101003                    CMPX1   581,DU
        18 000460   000465 601000 18                 TNZ     s:13893

  13891 18 000461   400003 475500                    LDP5    3,,PR4
        18 000462   500001 235100                    LDA     1,,PR5
        18 000463   200062 755100                    STA     END_ST_SIZE,,AUTO
        18 000464   000477 710000 18                 TRA     s:13901

  13893 18 000465   400001 235100                    LDA     1,,PR4
        18 000466   200062 755100                    STA     END_ST_SIZE,,AUTO
        18 000467   000477 710000 18                 TRA     s:13901

  13895 18 000470   300001 236100                    LDQ     1,,PR3
        18 000471   007777 376007                    ANQ     4095,DL
        18 000472   200062 756100                    STQ     END_ST_SIZE,,AUTO

  13896 18 000473   000477 710000 18                 TRA     s:13901

      546    13898    4              ELSE /* %TYC */
      547    13899    4                END_ST_SIZE = END_ST$ -> VARIABLE.NDSC.N;

  13899 18 000474   300001 236100                    LDQ     1,,PR3
        18 000475   000077 376007                    ANQ     63,DL
        18 000476   200062 756100                    STQ     END_ST_SIZE,,AUTO

      548    13900
      549    13901    4              IF MOD ((END_ST_SIZE + END_BYTE_POS), %(CHARS_PER_WORD / 2)) ~= 0 THEN

  13901 18 000477   200062 236100                    LDQ     END_ST_SIZE,,AUTO
        18 000500   200055 036100                    ADLQ    END_BYTE_POS,,AUTO
        18 000501   000044 737000                    LLS     36
        18 000502   000043 773000                    LRL     35
        18 000503   000003 507007                    DVF     3,DL
        18 000504   000000 116003                    CMPQ    0,DU
        18 000505   000525 600000 18                 TZE     s:13906
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:90   

      550    13902    4                CALL Z8AE$ERROR (%E$RENAMES_DIGIT_BOUND_WARN,

  13902 18 000506   100002 236100                    LDQ     2,,PR1
        18 000507   777777 376007                    ANQ     -1,DL
        18 000510   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000511   200060 236100                    LDQ     END_ST$,,AUTO
        18 000512   000006 036003                    ADLQ    6,DU
        18 000513   000013 235000 19                 LDA     11
        18 000514   200076 757100                    STAQ    NEW_DEP$+5,,AUTO
        18 000515   200072 631500                    EPPR1   NEW_DEP$+1,,AUTO
        18 000516   200075 451500                    STP1    NEW_DEP$+4,,AUTO
        18 000517   000014 236000 19                 LDQ     12
        18 000520   200074 756100                    STQ     NEW_DEP$+3,,AUTO
        18 000521   200074 630500                    EPPR0   NEW_DEP$+3,,AUTO
        18 000522   000004 631400 19                 EPPR1   4
        18 000523   000000 701000 xent               TSX1    Z8AE$ERROR
        18 000524   000000 011000                    NOP     0

      551    13903    4                                 BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      552    13904    4                                 0,
      553    13905    4                                 END_ST$ -> VARIABLE.DNT$) ;
      554    13906    4              CALL STRUCTURE_SIZE_CHECK ((END_ST_SIZE + END_BYTE_POS + 1) * 2 / 3

  13906 18 000525   200062 236100                    LDQ     END_ST_SIZE,,AUTO
        18 000526   200055 036100                    ADLQ    END_BYTE_POS,,AUTO
        18 000527   000001 036007                    ADLQ    1,DL
        18 000530   000045 737000                    LLS     37
        18 000531   000043 773000                    LRL     35
        18 000532   000003 507007                    DVF     3,DL
        18 000533   200054 236100                    LDQ     START_BYTE_POS,,AUTO
        18 000534   000001 772000                    QRL     1
        18 000535   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000536   000044 733000                    LRS     36
        18 000537   200072 136100                    SBLQ    NEW_DEP$+1,,AUTO
        18 000540   200102 756100                    STQ     NEW_DEP$+9,,AUTO
        18 000541   200053 236100                    LDQ     @SYM$,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:91   
        18 000542   200066 756100                    STQ     @SYM$,,AUTO
        18 000543   200102 630500                    EPPR0   NEW_DEP$+9,,AUTO
        18 000544   200065 450500                    STP0    @SIZE_VALUE,,AUTO
        18 000545   000003 701000 18                 TSX1    STRUCTURE_SIZE_CHECK
        18 000546   000000 011000                    NOP     0

      555    13907    4                  - START_BYTE_POS / 2, SYM$) ;
      556    13908    4            END ;

  13908 18 000547   000640 710000 18                 TRA     s:13937

      557    13909    3          ELSE
      558    13910    4            DO;

      559    13911    4              END_BYTE_POS = END_ST$ -> VARIABLE.SA * 4 + END_CN;

  13911 18 000550   300001 236100                    LDQ     1,,PR3
        18 000551   000020 772000                    QRL     16
        18 000552   000016 376000 19                 ANQ     14
        18 000553   200061 036100                    ADLQ    END_CN,,AUTO
        18 000554   200055 756100                    STQ     END_BYTE_POS,,AUTO

      560    13912
      561    13913    5              DO CASE (END_ST$ -> VARIABLE.TYPE) ;

  13913 18 000555   300002 236100                    LDQ     2,,PR3
        18 000556   000022 772000                    QRL     18
        18 000557   000006 136007                    SBLQ    6,DL
        18 000560   000011 116007                    CMPQ    9,DL
        18 000561   000563 602006 18                 TNC     s:13913+6,QL
        18 000562   000616 710000 18                 TRA     s:13928
        18 000563   000574 710000 18                 TRA     s:13918
        18 000564   000616 710000 18                 TRA     s:13928
        18 000565   000574 710000 18                 TRA     s:13918
        18 000566   000616 710000 18                 TRA     s:13928
        18 000567   000616 710000 18                 TRA     s:13928
        18 000570   000616 710000 18                 TRA     s:13928
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:92   
        18 000571   000616 710000 18                 TRA     s:13928
        18 000572   000616 710000 18                 TRA     s:13928
        18 000573   000574 710000 18                 TRA     s:13918

      562    13914    5                CASE (%TYA, %TYN, %TYE) ;

      563    13915                       %GET_ADSC_LEN (ST$ = END_ST$,
      564    13916                                      RTN = END_ST_SIZE);

  13918 18 000574   300003 236100                    LDQ     3,,PR3
        18 000575   004000 316003                    CANQ    2048,DU
        18 000576   000612 600000 18                 TZE     s:13924

  13919 18 000577   300005 474500                    LDP4    5,,PR3
        18 000600   400000 221100                    LDX1    0,,PR4
        18 000601   001105 101003                    CMPX1   581,DU
        18 000602   000607 601000 18                 TNZ     s:13922

  13920 18 000603   400003 475500                    LDP5    3,,PR4
        18 000604   500001 235100                    LDA     1,,PR5
        18 000605   200062 755100                    STA     END_ST_SIZE,,AUTO
        18 000606   000621 710000 18                 TRA     s:13931

  13922 18 000607   400001 235100                    LDA     1,,PR4
        18 000610   200062 755100                    STA     END_ST_SIZE,,AUTO
        18 000611   000621 710000 18                 TRA     s:13931

  13924 18 000612   300001 236100                    LDQ     1,,PR3
        18 000613   007777 376007                    ANQ     4095,DL
        18 000614   200062 756100                    STQ     END_ST_SIZE,,AUTO

  13925 18 000615   000621 710000 18                 TRA     s:13931

      565    13927    5                CASE (ELSE) ;

      566    13928    5                  END_ST_SIZE = END_ST$ -> VARIABLE.NDSC.N;

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:93   
  13928 18 000616   300001 236100                    LDQ     1,,PR3
        18 000617   000077 376007                    ANQ     63,DL
        18 000620   200062 756100                    STQ     END_ST_SIZE,,AUTO

      567    13929    5              END ;

      568    13930
      569    13931    4              CALL STRUCTURE_SIZE_CHECK (END_ST_SIZE + END_BYTE_POS -

  13931 18 000621   200062 236100                    LDQ     END_ST_SIZE,,AUTO
        18 000622   200055 036100                    ADLQ    END_BYTE_POS,,AUTO
        18 000623   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000624   200054 236100                    LDQ     START_BYTE_POS,,AUTO
        18 000625   000001 772000                    QRL     1
        18 000626   200073 756100                    STQ     NEW_DEP$+2,,AUTO
        18 000627   200072 236100                    LDQ     NEW_DEP$+1,,AUTO
        18 000630   200073 136100                    SBLQ    NEW_DEP$+2,,AUTO
        18 000631   200103 756100                    STQ     NEW_DEP$+10,,AUTO
        18 000632   200053 236100                    LDQ     @SYM$,,AUTO
        18 000633   200066 756100                    STQ     @SYM$,,AUTO
        18 000634   200103 631500                    EPPR1   NEW_DEP$+10,,AUTO
        18 000635   200065 451500                    STP1    @SIZE_VALUE,,AUTO
        18 000636   000003 701000 18                 TSX1    STRUCTURE_SIZE_CHECK
        18 000637   000000 011000                    NOP     0

      570    13932    4                                         (START_BYTE_POS / 2), SYM$);
      571    13933    4            END;

      572    13934
      573    13935    3        END ;

      574    13936
      575    13937    2   END SET_RENAMES_ITEM ;

  13937 18 000640   200052 221300                    LDX1  ! @QUAL$+1,,AUTO
        18 000641   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:94   
      576    13938        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:95   
      577    13939    1   NEW_DEPENDING_SIZE: PROC (CURRENT_SIZE, DIMS$, SYM$, RETURN$);

  13939 18 000642   200060 741300       NEW_DEPENDI* STX1  ! END_ST$,,AUTO

      578    13940
      579    13941    2   DCL CURRENT_SIZE              SBIN WORD;
      580    13942    2   DCL DIMS$                     PTR;
      581    13943    2   DCL SYM$               PTR;
      582    13944    2   DCL RETURN$                   PTR;
      583    13945
      584    13946    2   DCL CURRENT_SIZE$             PTR;
      585    13947    2   DCL ITEM_SIZE$                 PTR;
      586    13948    2   DCL DN2$                      PTR;
      587    13949    2   DCL SIZE$                     PTR;
      588    13950    2   DCL NEW_DEP$                  PTR;
      589    13951
      590    13952    2      MKCN.CON = CURRENT_SIZE;

  13952 18 000643   200061 470500                    LDP0    @CURRENT_SIZE,,AUTO
        18 000644   000000 235100                    LDA     0,,PR0
        18 000645   000000 755000 8                  STA     MKCN

      591    13953    2      CALL Z8AC$MAKE_CONST (CURRENT_SIZE$);

  13953 18 000646   200065 631500                    EPPR1   CURRENT_SIZE$,,AUTO
        18 000647   200072 451500                    STP1    NEW_DEP$+1,,AUTO
        18 000650   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
        18 000651   000001 631400 19                 EPPR1   1
        18 000652   000000 701000 xent               TSX1    Z8AC$MAKE_CONST
        18 000653   000000 011000                    NOP     0

      592    13954
      593    13955    2      CALL Z8AU$LENGTH_ETT (SYM$, ITEM_SIZE$);

  13955 18 000654   200066 630500                    EPPR0   ITEM_SIZE$,,AUTO
        18 000655   200073 450500                    STP0    NEW_DEP$+2,,AUTO
        18 000656   200063 236100                    LDQ     @SYM$,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:96   
        18 000657   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000660   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
        18 000661   000003 631400 19                 EPPR1   3
        18 000662   000000 701000 xent               TSX1    Z8AU$LENGTH_ETT
        18 000663   000000 011000                    NOP     0

      594    13956
      595    13957    2      DN2$ = DIMS$ -> DIMS.DN2;

  13957 18 000664   200062 470500                    LDP0    @DIMS$,,AUTO
        18 000665   000000 471500                    LDP1    0,,PR0
        18 000666   100001 236100                    LDQ     1,,PR1
        18 000667   200067 756100                    STQ     DN2$,,AUTO

      596    13958
      597    13959    2      CALL Z8AF$FORME    (%MPI, DN2$, ITEM_SIZE$, DN2$);

  13959 18 000670   200067 631500                    EPPR1   DN2$,,AUTO
        18 000671   200075 451500                    STP1    NEW_DEP$+4,,AUTO
        18 000672   200066 633500                    EPPR3   ITEM_SIZE$,,AUTO
        18 000673   200074 453500                    STP3    NEW_DEP$+3,,AUTO
        18 000674   200067 634500                    EPPR4   DN2$,,AUTO
        18 000675   200073 454500                    STP4    NEW_DEP$+2,,AUTO
        18 000676   000020 236000 19                 LDQ     16
        18 000677   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000700   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
        18 000701   000004 631400 19                 EPPR1   4
        18 000702   000000 701000 xent               TSX1    Z8AF$FORME
        18 000703   000000 011000                    NOP     0

      598    13960
      599    13961    2      IF SYM$ -> VARIABLE.TYPE = %TYD

  13961 18 000704   200063 470500                    LDP0    @SYM$,,AUTO
        18 000705   000000 471500                    LDP1    0,,PR0
        18 000706   100002 220100                    LDX0    2,,PR1
        18 000707   000727 601000 18                 TNZ     s:13965
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:97   
        18 000710   100001 236100                    LDQ     1,,PR1
        18 000711   040000 316007                    CANQ    16384,DL
        18 000712   000727 600000 18                 TZE     s:13965

      600    13962    2      AND SYM$ -> VARIABLE.NDSC.TN = %NDSC4 THEN
      601    13963    2        CALL Z8AF$FORME  (%DVI2, DN2$, 1, DN2$);

  13963 18 000713   200067 633500                    EPPR3   DN2$,,AUTO
        18 000714   200075 453500                    STP3    NEW_DEP$+4,,AUTO
        18 000715   000007 236000 19                 LDQ     7
        18 000716   200074 756100                    STQ     NEW_DEP$+3,,AUTO
        18 000717   200067 631500                    EPPR1   DN2$,,AUTO
        18 000720   200073 451500                    STP1    NEW_DEP$+2,,AUTO
        18 000721   000022 236000 19                 LDQ     18
        18 000722   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000723   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
        18 000724   000004 631400 19                 EPPR1   4
        18 000725   000000 701000 xent               TSX1    Z8AF$FORME
        18 000726   000000 011000                    NOP     0

      602    13964
      603    13965    2      CALL Z8AF$FORME    (%ADI, DN2$, CURRENT_SIZE$, SIZE$);

  13965 18 000727   200070 630500                    EPPR0   SIZE$,,AUTO
        18 000730   200075 450500                    STP0    NEW_DEP$+4,,AUTO
        18 000731   200065 631500                    EPPR1   CURRENT_SIZE$,,AUTO
        18 000732   200074 451500                    STP1    NEW_DEP$+3,,AUTO
        18 000733   200067 633500                    EPPR3   DN2$,,AUTO
        18 000734   200073 453500                    STP3    NEW_DEP$+2,,AUTO
        18 000735   000024 236000 19                 LDQ     20
        18 000736   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000737   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
        18 000740   000004 631400 19                 EPPR1   4
        18 000741   000000 701000 xent               TSX1    Z8AF$FORME
        18 000742   000000 011000                    NOP     0

      604    13966
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:98   
      605    13967           %NEW_DEPENDING_SIZE (@POINTER = NEW_DEP$,
      606    13968                                @SIZE    = CURRENT_SIZE,
      607    13969                                @DIMS$   = DIMS$,
      608    13970                                @SIZE$   = SIZE$);

  14049 18 000743   000002 236000 7                  LDQ     LTS_+2
        18 000744   000003 036007                    ADLQ    3,DL
        18 000745   000003 116000 7                  CMPQ    LTS_+3
        18 000746   000757 604000 18                 TMI     s:14051

  14050 18 000747   000002 236000 19                 LDQ     2
        18 000750   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 000751   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
        18 000752   200073 450500                    STP0    NEW_DEP$+2,,AUTO
        18 000753   200073 630500                    EPPR0   NEW_DEP$+2,,AUTO
        18 000754   000001 631400 19                 EPPR1   1
        18 000755   000000 701000 xent               TSX1    Z8AR$RESERVER
        18 000756   000000 011000                    NOP     0

  14051 18 000757   000002 236000 7                  LDQ     LTS_+2
        18 000760   000022 736000                    QLS     18
        18 000761   000001 036000 7                  ADLQ    LTS_+1
        18 000762   200071 756100                    STQ     NEW_DEP$,,AUTO

  14052 18 000763   000003 236007                    LDQ     3,DL
        18 000764   000002 056000 7                  ASQ     LTS_+2

  14053 18 000765   001120 220003                    LDX0    592,DU
        18 000766   200071 470500                    LDP0    NEW_DEP$,,AUTO
        18 000767   000000 740100                    STX0    0,,PR0

  14059 18 000770   200070 236100                    LDQ     SIZE$,,AUTO
        18 000771   200071 470500                    LDP0    NEW_DEP$,,AUTO
        18 000772   000001 756100                    STQ     1,,PR0

  14060 18 000773   200061 470500                    LDP0    @CURRENT_SIZE,,AUTO
        18 000774   000000 721100                    LXL1    0,,PR0
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:99   
        18 000775   200071 471500                    LDP1    NEW_DEP$,,AUTO
        18 000776   100000 441100                    SXL1    0,,PR1

  14061 18 000777   200062 471500                    LDP1    @DIMS$,,AUTO
        18 001000   100000 236100                    LDQ     0,,PR1
        18 001001   200071 473500                    LDP3    NEW_DEP$,,AUTO
        18 001002   300002 756100                    STQ     2,,PR3

      609    14064
      610    14065    2      CALL Z8DO$LINK_WITH_LTS (RETURN$, NEW_DEP$);

  14065 18 001003   200071 633500                    EPPR3   NEW_DEP$,,AUTO
        18 001004   200073 453500                    STP3    NEW_DEP$+2,,AUTO
        18 001005   200064 236100                    LDQ     @RETURN$,,AUTO
        18 001006   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 001007   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
        18 001010   000003 631400 19                 EPPR1   3
        18 001011   000000 701000 xent               TSX1    Z8DO$LINK_WITH_LTS
        18 001012   000000 011000                    NOP     0

      611    14066
      612    14067
      613    14068    2   END NEW_DEPENDING_SIZE;

  14068 18 001013   200060 221300                    LDX1  ! END_ST$,,AUTO
        18 001014   000001 702211                    TSX2  ! 1,X1

      614    14069        %EJECT;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:100  
      615    14070    1   ADD_TO_DEPENDING_SIZE: PROC (CURRENT_SIZE, DEPEND_ST$, RETURN$);

  14070 18 001015   200060 741300       ADD_TO_DEPE* STX1  ! END_ST$,,AUTO

      616    14071
      617    14072    2   DCL CURRENT_SIZE              SBIN WORD;
      618    14073    2   DCL DEPEND_ST$                PTR;
      619    14074    2   DCL RETURN$                   PTR;
      620    14075
      621    14076    2   DCL SIZE$                     PTR;
      622    14077    2   DCL DEPEND_SIZE$              PTR;
      623    14078    2   DCL NEW_DPS$                  PTR;
      624    14079    2   DCL NEW_SIZE$                 PTR;
      625    14080
      626    14081           %GET_LTS (@ID       = %DEPENDING_SIZE,
      627    14082                     @ST$      = DEPEND_ST$,
      628    14083                     @RETURN$  = DEPEND_SIZE$);

  14085 18 001016   200062 470500                    LDP0    @DEPEND_ST$,,AUTO
        18 001017   000000 471500                    LDP1    0,,PR0
        18 001020   100005 236100                    LDQ     5,,PR1
        18 001021   000000 116000 19                 CMPQ    0
        18 001022   001032 600000 18                 TZE     s:14119
        18 001023   100005 473500                    LDP3    5,,PR1
        18 001024   300000 220100                    LDX0    0,,PR3
        18 001025   001105 100003                    CMPX0   581,DU
        18 001026   001032 601000 18                 TNZ     s:14119

  14097 18 001027   300004 236100                    LDQ     4,,PR3
        18 001030   200065 756100                    STQ     DEPEND_SIZE$,,AUTO

  14117 18 001031   001044 710000 18                 TRA     s:14127

  14119 18 001032   000000 116000 19                 CMPQ    0
        18 001033   001042 600000 18                 TZE     s:14123
        18 001034   100005 473500                    LDP3    5,,PR1
        18 001035   300000 220100                    LDX0    0,,PR3
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:101  
        18 001036   001120 100003                    CMPX0   592,DU
        18 001037   001042 601000 18                 TNZ     s:14123

  14121 18 001040   200065 756100                    STQ     DEPEND_SIZE$,,AUTO
        18 001041   001044 710000 18                 TRA     s:14127

  14123 18 001042   000000 236000 19                 LDQ     0
        18 001043   200065 756100                    STQ     DEPEND_SIZE$,,AUTO

      629    14126
      630    14127    2      MKCN.CON = CURRENT_SIZE;

  14127 18 001044   200061 473500                    LDP3    @CURRENT_SIZE,,AUTO
        18 001045   300000 235100                    LDA     0,,PR3
        18 001046   000000 755000 8                  STA     MKCN

      631    14128    2      CALL Z8AC$MAKE_CONST (SIZE$);

  14128 18 001047   200064 631500                    EPPR1   SIZE$,,AUTO
        18 001050   200072 451500                    STP1    NEW_DEP$+1,,AUTO
        18 001051   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
        18 001052   000001 631400 19                 EPPR1   1
        18 001053   000000 701000 xent               TSX1    Z8AC$MAKE_CONST
        18 001054   000000 011000                    NOP     0

      632    14129
      633    14130    2      CALL Z8AF$FORME (%ADI, DEPEND_SIZE$ -> DEPENDING_SIZE.SIZE$, SIZE$, NEW_SIZE$);

  14130 18 001055   200067 630500                    EPPR0   NEW_SIZE$,,AUTO
        18 001056   200075 450500                    STP0    NEW_DEP$+4,,AUTO
        18 001057   200064 631500                    EPPR1   SIZE$,,AUTO
        18 001060   200074 451500                    STP1    NEW_DEP$+3,,AUTO
        18 001061   200065 236100                    LDQ     DEPEND_SIZE$,,AUTO
        18 001062   000001 036003                    ADLQ    1,DU
        18 001063   000024 235000 19                 LDA     20
        18 001064   200072 757100                    STAQ    NEW_DEP$+1,,AUTO
        18 001065   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:102  
        18 001066   000004 631400 19                 EPPR1   4
        18 001067   000000 701000 xent               TSX1    Z8AF$FORME
        18 001070   000000 011000                    NOP     0

      634    14131
      635    14132           %NEW_DEPENDING_SIZE (@POINTER = NEW_DPS$,
      636    14133                                @SIZE    = DEPEND_SIZE$ -> DEPENDING_SIZE.MIN_SIZE,
      637    14134                                @DIMS$   = DEPEND_SIZE$ -> DEPENDING_SIZE.DIMS$,
      638    14135                                @SIZE$   = NEW_SIZE$);

  14214 18 001071   000002 236000 7                  LDQ     LTS_+2
        18 001072   000003 036007                    ADLQ    3,DL
        18 001073   000003 116000 7                  CMPQ    LTS_+3
        18 001074   001105 604000 18                 TMI     s:14216

  14215 18 001075   000002 236000 19                 LDQ     2
        18 001076   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 001077   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
        18 001100   200073 450500                    STP0    NEW_DEP$+2,,AUTO
        18 001101   200073 630500                    EPPR0   NEW_DEP$+2,,AUTO
        18 001102   000001 631400 19                 EPPR1   1
        18 001103   000000 701000 xent               TSX1    Z8AR$RESERVER
        18 001104   000000 011000                    NOP     0

  14216 18 001105   000002 236000 7                  LDQ     LTS_+2
        18 001106   000022 736000                    QLS     18
        18 001107   000001 036000 7                  ADLQ    LTS_+1
        18 001110   200066 756100                    STQ     NEW_DPS$,,AUTO

  14217 18 001111   000003 236007                    LDQ     3,DL
        18 001112   000002 056000 7                  ASQ     LTS_+2

  14218 18 001113   001120 220003                    LDX0    592,DU
        18 001114   200066 470500                    LDP0    NEW_DPS$,,AUTO
        18 001115   000000 740100                    STX0    0,,PR0

  14224 18 001116   200067 236100                    LDQ     NEW_SIZE$,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:103  
        18 001117   200066 470500                    LDP0    NEW_DPS$,,AUTO
        18 001120   000001 756100                    STQ     1,,PR0

  14225 18 001121   200065 470500                    LDP0    DEPEND_SIZE$,,AUTO
        18 001122   000000 721100                    LXL1    0,,PR0
        18 001123   200066 471500                    LDP1    NEW_DPS$,,AUTO
        18 001124   100000 441100                    SXL1    0,,PR1

  14226 18 001125   000002 236100                    LDQ     2,,PR0
        18 001126   200066 471500                    LDP1    NEW_DPS$,,AUTO
        18 001127   100002 756100                    STQ     2,,PR1

      639    14229
      640    14230    2      CALL Z8DO$LINK_WITH_LTS (RETURN$, NEW_DPS$);

  14230 18 001130   200066 631500                    EPPR1   NEW_DPS$,,AUTO
        18 001131   200073 451500                    STP1    NEW_DEP$+2,,AUTO
        18 001132   200063 236100                    LDQ     @RETURN$,,AUTO
        18 001133   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 001134   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
        18 001135   000003 631400 19                 EPPR1   3
        18 001136   000000 701000 xent               TSX1    Z8DO$LINK_WITH_LTS
        18 001137   000000 011000                    NOP     0

      641    14231
      642    14232    2   END ADD_TO_DEPENDING_SIZE;

  14232 18 001140   200060 221300                    LDX1  ! END_ST$,,AUTO
        18 001141   000001 702211                    TSX2  ! 1,X1

      643    14233        %EJECT;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:104  
      644    14234    1   LINAGE_COUNT_KLUDGE: PROC (SIZE, SYM$);

  14234 18 001142   200052 741300       LINAGE_COUN* STX1  ! @QUAL$+1,,AUTO

      645    14235
      646    14236    2        DCL SIZE          SBIN;
      647    14237    2        DCL SYM$          PTR;
      648    14238    2        DCL QLT$$         PTR;
      649    14239
      650    14240
      651    14241    2        QLT$$ = SYM$ -> VARIABLE.QLT$ -> QLT.SON;

  14241 18 001143   200054 470500                    LDP0    @SYM$,,AUTO
        18 001144   000000 471500                    LDP1    0,,PR0
        18 001145   100007 473500                    LDP3    7,,PR1
        18 001146   300003 236100                    LDQ     3,,PR3
        18 001147   200055 756100                    STQ     QLT$$,,AUTO

      652    14242
      653    14243    3        DO WHILE (QLT$$ -> QLT.BROTHER ~= ADDR(NIL));

  14243 18 001150   001154 710000 18                 TRA     s:14245

      654    14244    3          QLT$$ = QLT$$ -> QLT.BROTHER;

  14244 18 001151   200055 470500                    LDP0    QLT$$,,AUTO
        18 001152   000002 236100                    LDQ     2,,PR0
        18 001153   200055 756100                    STQ     QLT$$,,AUTO

      655    14245    3        END; /* While */

  14245 18 001154   200055 470500                    LDP0    QLT$$,,AUTO
        18 001155   000002 236100                    LDQ     2,,PR0
        18 001156   000000 116000 19                 CMPQ    0
        18 001157   001151 601000 18                 TNZ     s:14244

      656    14246
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:105  
      657    14247    2        IF NOT QLT$$ -> QLT.ST$ -> VARIABLE.B.REDEF_SUB

  14247 18 001160   000004 471500                    LDP1    4,,PR0
        18 001161   100003 430100                    FSZN    3,,PR1
        18 001162   001205 604000 18                 TMI     s:14253
        18 001163   100003 236100                    LDQ     3,,PR1
        18 001164   000400 316003                    CANQ    256,DU
        18 001165   001205 601000 18                 TNZ     s:14253

      658    14248    2        AND NOT QLT$$ -> QLT.ST$ -> VARIABLE.B.REDEF_OBJ THEN
      659    14249    2          CALL STRUCTURE_SIZE_CHECK (SIZE - 4,

  14249 18 001166   200054 473500                    LDP3    @SYM$,,AUTO
        18 001167   300000 474500                    LDP4    0,,PR3
        18 001170   400007 475500                    LDP5    7,,PR4
        18 001171   500003 476500                    LDP6    3,,PR5
        18 001172   200053 477500                    LDP7    @SIZE,,AUTO
        18 001173   700000 235100                    LDA     0,,PR7
        18 001174   000004 135007                    SBLA    4,DL
        18 001175   200104 755100                    STA     NEW_DEP$+11,,AUTO
        18 001176   600004 631500                    EPPR1   4,,PR6
        18 001177   200066 451500                    STP1    NEW_DPS$,,AUTO
        18 001200   200104 634500                    EPPR4   NEW_DEP$+11,,AUTO
        18 001201   200065 454500                    STP4    DEPEND_SIZE$,,AUTO
        18 001202   000003 701000 18                 TSX1    STRUCTURE_SIZE_CHECK
        18 001203   000000 011000                    NOP     0
        18 001204   001217 710000 18                 TRA     s:14257

      660    14250    2                                     SYM$ -> VARIABLE.QLT$ ->
      661    14251    2                                     QLT.SON -> QLT.ST$);
      662    14252    2        ELSE
      663    14253    2          CALL STRUCTURE_SIZE_CHECK (SIZE,

  14253 18 001205   200054 473500                    LDP3    @SYM$,,AUTO
        18 001206   300000 474500                    LDP4    0,,PR3
        18 001207   400007 475500                    LDP5    7,,PR4
        18 001210   500003 476500                    LDP6    3,,PR5
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:106  
        18 001211   600004 637500                    EPPR7   4,,PR6
        18 001212   200066 457500                    STP7    NEW_DPS$,,AUTO
        18 001213   200053 236100                    LDQ     @SIZE,,AUTO
        18 001214   200065 756100                    STQ     DEPEND_SIZE$,,AUTO
        18 001215   000003 701000 18                 TSX1    STRUCTURE_SIZE_CHECK
        18 001216   000000 011000                    NOP     0

      664    14254    2                                     SYM$ -> VARIABLE.QLT$ ->
      665    14255    2                                     QLT.SON -> QLT.ST$);
      666    14256
      667    14257    2   END LINAGE_COUNT_KLUDGE;

  14257 18 001217   200052 221300                    LDX1  ! @QUAL$+1,,AUTO
        18 001220   000001 702211                    TSX2  ! 1,X1

      668    14258        %EJECT;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:107  
      669    14259    1   REDEF_SIZE_CHECKS: PROC (SYM$);

  14259 18 001221   200052 741300       REDEF_SIZE_* STX1  ! @QUAL$+1,,AUTO

      670    14260
      671    14261    2        DCL SYM$          PTR;
      672    14262    2        DCL DIFF          SBIN;
      673    14263             /*
      674    14264               DCL ALL SORTS OF GLOBAL DATA SUCH AS REDEF_?
      675    14265             */
      676    14266
      677    14267        /*V*
      678    14268            REDEF_FINAL_SIZE -- Check to make sure that the size of the object of
      679    14269                                the REDEFINES is greater than or equal to each subject.
      680    14270                                The final positioning (SA,BYTE,HALF_BYTE) may be
      681    14271                                greater due to filler but a warning is flagged.
      682    14272
      683    14273                                If we are encountering the object of the redefines,
      684    14274                                the object's location counters are assigned so that
      685    14275                                warnings will be caught when the subject exceeds those
      686    14276                                location counters.  Also the final location counters
      687    14277                                are set to the storage counters, these may be modified
      688    14278                                by the subjects.
      689    14279
      690    14280                                If we are looking at a subject entry then we check to
      691    14281                                see if the size exceeds the object item.  If this
      692    14282                                occurs, a fatal error is flagged.  If the size with
      693    14283                                filler exceeds the object item a warning is printed.
      694    14284                                The final storage counts may be altered if the subject
      695    14285                                exceeds them.
      696    14286
      697    14287                                When we have encountered the final item redefining
      698    14288                                the object we assign the next available locations
      699    14289                                to the maximum storage used by any of the items.
      700    14290        */
      701    14291        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:108  
      702    14292    2        IF SYM$ -> VARIABLE.B.REDEF_OBJ THEN

  14292 18 001222   200053 470500                    LDP0    @SYM$,,AUTO
        18 001223   000000 471500                    LDP1    0,,PR0
        18 001224   100003 236100                    LDQ     3,,PR1
        18 001225   000400 316003                    CANQ    256,DU
        18 001226   001275 600000 18                 TZE     s:14318

      703    14293    3          DO ;

      704    14294    3            REDEF_OBJ_SIZE         = MY_SIZE1 ;

  14294 18 001227   200014 235100                    LDA     MY_SIZE1,,AUTO
        18 001230   200033 755100                    STA     REDEF_OBJ_SIZE,,AUTO

      705    14295    3            REDEF_FINAL_SA         = O1COM.NEXT_SA ;

  14295 18 001231   000001 235000 xsym               LDA     O1COM+1
        18 001232   200036 755100                    STA     REDEF_FINAL_SA,,AUTO

      706    14296    3            REDEF_OBJ_SA           = O1COM.NEXT_SA ;

  14296 18 001233   200043 755100                    STA     REDEF_OBJ_SA,,AUTO

      707    14297    3            REDEF_FINAL_ITEM_GBCD  = O1COM.LAST_ITEM_GBCD ;

  14297 18 001234   001337 236000 xsym               LDQ     O1COM+735
        18 001235   400000 376003                    ANQ     -131072,DU
        18 001236   200042 756100                    STQ     REDEF_FINAL_ITEM_GBCD,,AUTO

      708    14298    3            REDEF_OBJ_ITEM_GBCD    = O1COM.LAST_ITEM_GBCD ;

  14298 18 001237   200047 756100                    STQ     REDEF_OBJ_ITEM_GBCD,,AUTO

      709    14299    3            REDEF_OBJ_FILLER_SIZE  = FILLER_SIZE ;

  14299 18 001240   200021 235100                    LDA     FILLER_SIZE,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:109  
        18 001241   200035 755100                    STA     REDEF_OBJ_FILLER_SIZE,,AUTO

      710    14300    3            IF O1COM.LAST_ITEM_GBCD THEN

  14300 18 001242   001337 234000 xsym               SZN     O1COM+735
        18 001243   001250 605000 18                 TPL     s:14307

      711    14301    4              DO ;

      712    14302    4                REDEF_FINAL_CHAR       = O1COM.NEXT_CHAR ;

  14302 18 001244   001336 235000 xsym               LDA     O1COM+734
        18 001245   200041 755100                    STA     REDEF_FINAL_CHAR,,AUTO

      713    14303    4                REDEF_OBJ_CHAR         = O1COM.NEXT_CHAR ;

  14303 18 001246   200046 755100                    STA     REDEF_OBJ_CHAR,,AUTO

      714    14304    4              END ;

  14304 18 001247   001260 710000 18                 TRA     s:14312

      715    14305    3            ELSE
      716    14306    4              DO ;

      717    14307    4                REDEF_FINAL_BYTE       = O1COM.NEXT_BYTE ;

  14307 18 001250   000002 235000 xsym               LDA     O1COM+2
        18 001251   200037 755100                    STA     REDEF_FINAL_BYTE,,AUTO

      718    14308    4                REDEF_FINAL_HALF_BYTE  = O1COM.NEXT_HALF_BYTE ;

  14308 18 001252   000003 235000 xsym               LDA     O1COM+3
        18 001253   200040 755100                    STA     REDEF_FINAL_HALF_BYTE,,AUTO

      719    14309    4                REDEF_OBJ_BYTE         = O1COM.NEXT_BYTE ;

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:110  
  14309 18 001254   000002 235000 xsym               LDA     O1COM+2
        18 001255   200044 755100                    STA     REDEF_OBJ_BYTE,,AUTO

      720    14310    4                REDEF_OBJ_HALF_BYTE    = O1COM.NEXT_HALF_BYTE ;

  14310 18 001256   000003 235000 xsym               LDA     O1COM+3
        18 001257   200045 755100                    STA     REDEF_OBJ_HALF_BYTE,,AUTO

      721    14311    4              END ;

      722    14312    3            IF SYM$ -> VARIABLE.TYPE = %TYB OR SYM$ -> VARIABLE.TYPE = %TYC

  14312 18 001260   100002 220100                    LDX0    2,,PR1
        18 001261   000014 100003                    CMPX0   12,DU
        18 001262   001265 600000 18                 TZE     s:14313
        18 001263   000023 100003                    CMPX0   19,DU
        18 001264   001271 601000 18                 TNZ     s:14314

      723    14313    3              THEN REDEF_OBJ_SIZE2     = REDEF_OBJ_SIZE * 6 ;

  14313 18 001265   200033 236100                    LDQ     REDEF_OBJ_SIZE,,AUTO
        18 001266   000006 402007                    MPY     6,DL
        18 001267   200034 756100                    STQ     REDEF_OBJ_SIZE2,,AUTO
        18 001270   001731 710000 18                 TRA     s:14466

      724    14314    3              ELSE REDEF_OBJ_SIZE2     = REDEF_OBJ_SIZE * 9 ;

  14314 18 001271   200033 236100                    LDQ     REDEF_OBJ_SIZE,,AUTO
        18 001272   000011 402007                    MPY     9,DL
        18 001273   200034 756100                    STQ     REDEF_OBJ_SIZE2,,AUTO

      725    14315    3          END ; /* REDEF_OBJ */

  14315 18 001274   001731 710000 18                 TRA     s:14466

      726    14316    2        ELSE
      727    14317    3          DO ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:111  

      728    14318    3            IF SYM$ -> VARIABLE.B.REDEF_SUB THEN

  14318 18 001275   100003 430100                    FSZN    3,,PR1
        18 001276   001731 605000 18                 TPL     s:14466

      729    14319    4              DO ;

      730    14320    4                IF MY_SIZE > REDEF_OBJ_SIZE2 THEN

  14320 18 001277   200013 236100                    LDQ     MY_SIZE,,AUTO
        18 001300   001303 604000 18                 TMI     s:14323
        18 001301   200034 116100                    CMPQ    REDEF_OBJ_SIZE2,,AUTO
        18 001302   001433 604400 18                 TMOZ    s:14385

      731    14321    5                  DO ;

      732    14322
      733    14323    6                    DO CASE (SYM$ -> VARIABLE.QLT$ -> QLT.FATHER ->

  14323 18 001303   100007 473500                    LDP3    7,,PR1
        18 001304   300001 474500                    LDP4    1,,PR3
        18 001305   400004 475500                    LDP5    4,,PR4
        18 001306   500000 236100                    LDQ     0,,PR5
        18 001307   000022 772000                    QRL     18
        18 001310   001002 136007                    SBLQ    514,DL
        18 001311   000004 116007                    CMPQ    4,DL
        18 001312   001314 602006 18                 TNC     s:14323+9,QL
        18 001313   001320 710000 18                 TRA     s:14335
        18 001314   001355 710000 18                 TRA     s:14347
        18 001315   001355 710000 18                 TRA     s:14347
        18 001316   001355 710000 18                 TRA     s:14347
        18 001317   001355 710000 18                 TRA     s:14347

      734    14324    6                             QLT.ST$ -> ST.ID);
      735    14325    6                      CASE ( %CD,

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:112  
      736    14326                                 %SET_OF_FILE_DESCRIPTIONS;
      737    14331    6                            );
      738    14332    6                        /* All Ok */;
      739    14333
      740    14334    6                      CASE (ELSE);

      741    14335    6                        IF SYM$ -> VARIABLE.B.COMPILER_CREATED = '0'B AND

  14335 18 001320   100003 236100                    LDQ     3,,PR1
        18 001321   100000 316003                    CANQ    32768,DU
        18 001322   001355 601000 18                 TNZ     s:14347
        18 001323   400001 236100                    LDQ     1,,PR4
        18 001324   000000 116000 19                 CMPQ    0
        18 001325   001333 600000 18                 TZE     s:14339
        18 001326   400001 476500                    LDP6    1,,PR4
        18 001327   600004 477500                    LDP7    4,,PR6
        18 001330   700000 220100                    LDX0    0,,PR7
        18 001331   001004 100003                    CMPX0   516,DU
        18 001332   001355 600000 18                 TZE     s:14347

      742    14336    6                           (SYM$ -> VARIABLE.QLT$ -> QLT.FATHER -> QLT.FATHER = ADDR (
             14336                                     NIL) OR
      743    14337    6                             SYM$ -> VARIABLE.QLT$ -> QLT.FATHER -> QLT.FATHER ->
      744    14338    6                                 QLT.ST$ -> ST.ID ~= %CD) THEN
      745    14339    6                          CALL Z8AE$ERROR (%E$REDEFINES_OVERFLOW,

  14339 18 001333   100002 236100                    LDQ     2,,PR1
        18 001334   777777 376007                    ANQ     -1,DL
        18 001335   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 001336   200023 236100                    LDQ     OBJECT_ST$,,AUTO
        18 001337   000006 036003                    ADLQ    6,DU
        18 001340   200100 756100                    STQ     NEW_DEP$+7,,AUTO
        18 001341   100006 633500                    EPPR3   6,,PR1
        18 001342   200077 453500                    STP3    NEW_DEP$+6,,AUTO
        18 001343   000013 236000 19                 LDQ     11
        18 001344   200076 756100                    STQ     NEW_DEP$+5,,AUTO
        18 001345   200072 631500                    EPPR1   NEW_DEP$+1,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:113  
        18 001346   200075 451500                    STP1    NEW_DEP$+4,,AUTO
        18 001347   000027 236000 19                 LDQ     23
        18 001350   200074 756100                    STQ     NEW_DEP$+3,,AUTO
        18 001351   200074 630500                    EPPR0   NEW_DEP$+3,,AUTO
        18 001352   000025 631400 19                 EPPR1   21
        18 001353   000000 701000 xent               TSX1    Z8AE$ERROR
        18 001354   000000 011000                    NOP     0

      746    14340    6                                         BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      747    14341    6                                         0,
      748    14342    6                                         SYM$ -> VARIABLE.DNT$,
      749    14343    6                                         OBJECT_ST$ -> VARIABLE.DNT$);
      750    14344
      751    14345    6                    END; /* Case */

      752    14346
      753    14347    5                    DIFF = MY_SIZE + FILLER_SIZE

  14347 18 001355   200013 236100                    LDQ     MY_SIZE,,AUTO
        18 001356   200021 036100                    ADLQ    FILLER_SIZE,,AUTO
        18 001357   200034 136100                    SBLQ    REDEF_OBJ_SIZE2,,AUTO
        18 001360   200035 136100                    SBLQ    REDEF_OBJ_FILLER_SIZE,,AUTO
        18 001361   200054 756100                    STQ     DIFF,,AUTO

      754    14348    5                         - REDEF_OBJ_SIZE2 - REDEF_OBJ_FILLER_SIZE ;
      755    14349
      756    14350    5                    IF DIFF > 0 THEN

  14350 18 001362   001705 604400 18                 TMOZ    s:14453

      757    14351    6                      DO;

      758    14352    6                        SIZE = SIZE + DIFF ;

  14352 18 001363   200011 036100                    ADLQ    SIZE,,AUTO
        18 001364   200011 756100                    STQ     SIZE,,AUTO

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:114  
      759    14353    6                        IF O1COM.LAST_ITEM_GBCD THEN

  14353 18 001365   001337 234000 xsym               SZN     O1COM+735
        18 001366   001411 605000 18                 TPL     s:14366

      760    14354    7                          DO ;

      761    14355    7                            DIFF = (DIFF + 5) / 6 ;

  14355 18 001367   200054 236100                    LDQ     DIFF,,AUTO
        18 001370   000005 036007                    ADLQ    5,DL
        18 001371   000006 506007                    DIV     6,DL
        18 001372   200054 756100                    STQ     DIFF,,AUTO

      762    14356    7                            REDEF_OBJ_SIZE = REDEF_OBJ_SIZE + DIFF ;

  14356 18 001373   200033 036100                    ADLQ    REDEF_OBJ_SIZE,,AUTO
        18 001374   200033 756100                    STQ     REDEF_OBJ_SIZE,,AUTO

      763    14357    7                            REDEF_FINAL_CHAR = REDEF_FINAL_CHAR + DIFF ;

  14357 18 001375   200041 236100                    LDQ     REDEF_FINAL_CHAR,,AUTO
        18 001376   200054 036100                    ADLQ    DIFF,,AUTO
        18 001377   200041 756100                    STQ     REDEF_FINAL_CHAR,,AUTO

      764    14358    7                            IF REDEF_FINAL_CHAR > 6 THEN

  14358 18 001400   000006 116007                    CMPQ    6,DL
        18 001401   001705 604400 18                 TMOZ    s:14453

      765    14359    8                              DO ;

      766    14360    8                                REDEF_FINAL_SA = REDEF_FINAL_SA + REDEF_FINAL_CHAR / 6
             14360                                         ;

  14360 18 001402   000006 506007                    DIV     6,DL
        18 001403   200036 036100                    ADLQ    REDEF_FINAL_SA,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:115  
        18 001404   200036 756100                    STQ     REDEF_FINAL_SA,,AUTO

      767    14361    8                                REDEF_FINAL_CHAR = MOD (REDEF_FINAL_CHAR, 6) ;

  14361 18 001405   200041 236100                    LDQ     REDEF_FINAL_CHAR,,AUTO
        18 001406   000006 506007                    DIV     6,DL
        18 001407   200041 755100                    STA     REDEF_FINAL_CHAR,,AUTO

      768    14362    8                              END ;

      769    14363    7                          END ;

  14363 18 001410   001705 710000 18                 TRA     s:14453

      770    14364    6                        ELSE
      771    14365    7                          DO ;

      772    14366    7                            DIFF = (DIFF + 8) / 9 ;

  14366 18 001411   200054 236100                    LDQ     DIFF,,AUTO
        18 001412   000010 036007                    ADLQ    8,DL
        18 001413   000011 506007                    DIV     9,DL
        18 001414   200054 756100                    STQ     DIFF,,AUTO

      773    14367    7                            REDEF_OBJ_SIZE = REDEF_OBJ_SIZE + DIFF;

  14367 18 001415   200033 036100                    ADLQ    REDEF_OBJ_SIZE,,AUTO
        18 001416   200033 756100                    STQ     REDEF_OBJ_SIZE,,AUTO

      774    14368    7                            REDEF_FINAL_BYTE = REDEF_FINAL_BYTE + DIFF;

  14368 18 001417   200037 236100                    LDQ     REDEF_FINAL_BYTE,,AUTO
        18 001420   200054 036100                    ADLQ    DIFF,,AUTO
        18 001421   200037 756100                    STQ     REDEF_FINAL_BYTE,,AUTO

      775    14369
      776    14370    7                            IF REDEF_FINAL_BYTE > 4 THEN
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:116  

  14370 18 001422   000004 116007                    CMPQ    4,DL
        18 001423   001705 604400 18                 TMOZ    s:14453

      777    14371    8                              DO;

      778    14372    8                                REDEF_FINAL_SA = REDEF_FINAL_SA +

  14372 18 001424   000004 506007                    DIV     4,DL
        18 001425   200036 036100                    ADLQ    REDEF_FINAL_SA,,AUTO
        18 001426   200036 756100                    STQ     REDEF_FINAL_SA,,AUTO

      779    14373    8                                                 REDEF_FINAL_BYTE / 4;
      780    14374    8                                REDEF_FINAL_BYTE = MOD (REDEF_FINAL_BYTE, 4);

  14374 18 001427   200037 236100                    LDQ     REDEF_FINAL_BYTE,,AUTO
        18 001430   000004 506007                    DIV     4,DL
        18 001431   200037 755100                    STA     REDEF_FINAL_BYTE,,AUTO

      781    14375    8                              END;

      782    14376    7                          END ;

      783    14377    6                      END; /* DIFF > 0 */

      784    14378
      785    14379    5                  END ; /* MY_SIZE > REDEF_OBJ_SIZE2 */

  14379 18 001432   001705 710000 18                 TRA     s:14453

      786    14380    4                ELSE
      787    14381    5                  DO ; /* MY_SIZE <= REDEF_OBJ_SIZE2 */

      788    14382        /*BUMMER* -- Many complications are needed here because of the
      789    14383                     possibility that the subject and/or the object may
      790    14384                     end with a data item of type USAGE GBCD. */
      791    14385    5                    IF ((O1COM.NEXT_SA > REDEF_OBJ_SA) OR
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:117  

  14385 18 001433   000001 236000 xsym               LDQ     O1COM+1
        18 001434   200043 116100                    CMPQ    REDEF_OBJ_SA,,AUTO
        18 001435   001532 605400 18                 TPNZ    s:14398
        18 001436   001705 601000 18                 TNZ     s:14453
        18 001437   001337 234000 xsym               SZN     O1COM+735
        18 001440   001447 605000 18                 TPL     s:14385+12
        18 001441   200047 234100                    SZN     REDEF_OBJ_ITEM_GBCD,,AUTO
        18 001442   001447 605000 18                 TPL     s:14385+12
        18 001443   001336 236000 xsym               LDQ     O1COM+734
        18 001444   001532 604000 18                 TMI     s:14398
        18 001445   200046 116100                    CMPQ    REDEF_OBJ_CHAR,,AUTO
        18 001446   001532 605400 18                 TPNZ    s:14398
        18 001447   001337 234000 xsym               SZN     O1COM+735
        18 001450   001470 605000 18                 TPL     s:14385+29
        18 001451   200047 234100                    SZN     REDEF_OBJ_ITEM_GBCD,,AUTO
        18 001452   001470 604000 18                 TMI     s:14385+29
        18 001453   200044 236100                    LDQ     REDEF_OBJ_BYTE,,AUTO
        18 001454   000011 402007                    MPY     9,DL
        18 001455   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 001456   200045 236100                    LDQ     REDEF_OBJ_HALF_BYTE,,AUTO
        18 001457   000005 402007                    MPY     5,DL
        18 001460   200072 036100                    ADLQ    NEW_DEP$+1,,AUTO
        18 001461   200073 756100                    STQ     NEW_DEP$+2,,AUTO
        18 001462   001336 236000 xsym               LDQ     O1COM+734
        18 001463   000006 402007                    MPY     6,DL
        18 001464   000000 116003                    CMPQ    0,DU
        18 001465   001532 604000 18                 TMI     s:14398
        18 001466   200073 116100                    CMPQ    NEW_DEP$+2,,AUTO
        18 001467   001532 605400 18                 TPNZ    s:14398
        18 001470   001337 234000 xsym               SZN     O1COM+735
        18 001471   001512 604000 18                 TMI     s:14385+47
        18 001472   200047 234100                    SZN     REDEF_OBJ_ITEM_GBCD,,AUTO
        18 001473   001512 605000 18                 TPL     s:14385+47
        18 001474   000002 236000 xsym               LDQ     O1COM+2
        18 001475   000011 402007                    MPY     9,DL
        18 001476   200074 756100                    STQ     NEW_DEP$+3,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:118  
        18 001477   000003 236000 xsym               LDQ     O1COM+3
        18 001500   000005 402007                    MPY     5,DL
        18 001501   200074 036100                    ADLQ    NEW_DEP$+3,,AUTO
        18 001502   200075 756100                    STQ     NEW_DEP$+4,,AUTO
        18 001503   200046 236100                    LDQ     REDEF_OBJ_CHAR,,AUTO
        18 001504   000006 402007                    MPY     6,DL
        18 001505   200076 756100                    STQ     NEW_DEP$+5,,AUTO
        18 001506   200075 236100                    LDQ     NEW_DEP$+4,,AUTO
        18 001507   001532 604000 18                 TMI     s:14398
        18 001510   200076 116100                    CMPQ    NEW_DEP$+5,,AUTO
        18 001511   001532 605400 18                 TPNZ    s:14398
        18 001512   001337 234000 xsym               SZN     O1COM+735
        18 001513   001705 604000 18                 TMI     s:14453
        18 001514   200047 234100                    SZN     REDEF_OBJ_ITEM_GBCD,,AUTO
        18 001515   001705 604000 18                 TMI     s:14453
        18 001516   000002 236000 xsym               LDQ     O1COM+2
        18 001517   001532 604000 18                 TMI     s:14398
        18 001520   200044 116100                    CMPQ    REDEF_OBJ_BYTE,,AUTO
        18 001521   001532 605400 18                 TPNZ    s:14398
        18 001522   000000 116003                    CMPQ    0,DU
        18 001523   001705 604000 18                 TMI     s:14453
        18 001524   200044 116100                    CMPQ    REDEF_OBJ_BYTE,,AUTO
        18 001525   001705 601000 18                 TNZ     s:14453
        18 001526   000003 236000 xsym               LDQ     O1COM+3
        18 001527   001532 604000 18                 TMI     s:14398
        18 001530   200045 116100                    CMPQ    REDEF_OBJ_HALF_BYTE,,AUTO
        18 001531   001705 604400 18                 TMOZ    s:14453

      792    14386    5                        (O1COM.NEXT_SA = REDEF_OBJ_SA AND
      793    14387    5                         ((O1COM.LAST_ITEM_GBCD AND REDEF_OBJ_ITEM_GBCD AND
      794    14388    5                           O1COM.NEXT_CHAR > REDEF_OBJ_CHAR) OR
      795    14389    5                          (O1COM.LAST_ITEM_GBCD AND NOT REDEF_OBJ_ITEM_GBCD AND
      796    14390    5                           O1COM.NEXT_CHAR * 6 > REDEF_OBJ_HALF_BYTE * 5 +
             14390                                    REDEF_OBJ_BYTE * 9) OR
      797    14391    5                          (NOT O1COM.LAST_ITEM_GBCD AND REDEF_OBJ_ITEM_GBCD AND
      798    14392    5                           O1COM.NEXT_HALF_BYTE * 5 + O1COM.NEXT_BYTE * 9 >
             14392                                    REDEF_OBJ_CHAR * 6) OR
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:119  
      799    14393    5                          (NOT O1COM.LAST_ITEM_GBCD AND NOT REDEF_OBJ_ITEM_GBCD AND
      800    14394    5                           (O1COM.NEXT_BYTE > REDEF_OBJ_BYTE OR (O1COM.NEXT_BYTE =
             14394                                    REDEF_OBJ_BYTE AND
      801    14395    5                            O1COM.NEXT_HALF_BYTE > REDEF_OBJ_HALF_BYTE)))))) THEN
      802    14396    6                      DO ;

      803    14397
      804    14398    7                        DO CASE (SYM$ -> VARIABLE.QLT$ -> QLT.FATHER ->

  14398 18 001532   000000 471500                    LDP1    0,,PR0
        18 001533   100007 473500                    LDP3    7,,PR1
        18 001534   300001 474500                    LDP4    1,,PR3
        18 001535   400004 475500                    LDP5    4,,PR4
        18 001536   500000 236100                    LDQ     0,,PR5
        18 001537   000022 772000                    QRL     18
        18 001540   001002 136007                    SBLQ    514,DL
        18 001541   000004 116007                    CMPQ    4,DL
        18 001542   001544 602006 18                 TNC     s:14398+10,QL
        18 001543   001550 710000 18                 TRA     s:14410
        18 001544   001572 710000 18                 TRA     s:14418
        18 001545   001572 710000 18                 TRA     s:14418
        18 001546   001550 710000 18                 TRA     s:14410
        18 001547   001572 710000 18                 TRA     s:14418

      805    14399    7                                 QLT.ST$ -> ST.ID);
      806    14400    7                          CASE (

      807    14401                                     %SET_OF_FILE_DESCRIPTIONS;
      808    14406    7                                );
      809    14407    7                            /* All Ok */;
      810    14408
      811    14409    7                          CASE (ELSE);

      812    14410    7                            CALL Z8AE$ERROR (%E$REDEF_SIZE_WARN,

  14410 18 001550   100002 236100                    LDQ     2,,PR1
        18 001551   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:120  
        18 001552   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 001553   200023 236100                    LDQ     OBJECT_ST$,,AUTO
        18 001554   000006 036003                    ADLQ    6,DU
        18 001555   200100 756100                    STQ     NEW_DEP$+7,,AUTO
        18 001556   100006 633500                    EPPR3   6,,PR1
        18 001557   200077 453500                    STP3    NEW_DEP$+6,,AUTO
        18 001560   000013 236000 19                 LDQ     11
        18 001561   200076 756100                    STQ     NEW_DEP$+5,,AUTO
        18 001562   200072 631500                    EPPR1   NEW_DEP$+1,,AUTO
        18 001563   200075 451500                    STP1    NEW_DEP$+4,,AUTO
        18 001564   000031 236000 19                 LDQ     25
        18 001565   200074 756100                    STQ     NEW_DEP$+3,,AUTO
        18 001566   200074 630500                    EPPR0   NEW_DEP$+3,,AUTO
        18 001567   000025 631400 19                 EPPR1   21
        18 001570   000000 701000 xent               TSX1    Z8AE$ERROR
        18 001571   000000 011000                    NOP     0

      813    14411    7                                             BINBIT(SYM$ -> VARIABLE.LINE_NO,36),
      814    14412    7                                             0,
      815    14413    7                                             SYM$ -> VARIABLE.DNT$,
      816    14414    7                                             OBJECT_ST$ -> VARIABLE.DNT$);
      817    14415
      818    14416    7                        END; /* Case */

      819    14417
      820    14418    6                        IF O1COM.LAST_ITEM_GBCD THEN

  14418 18 001572   001337 234000 xsym               SZN     O1COM+735
        18 001573   001634 605000 18                 TPL     s:14433

      821    14419    7                          DO ;

      822    14420    7                            IF ((O1COM.NEXT_SA > REDEF_FINAL_SA)

  14420 18 001574   000001 236000 xsym               LDQ     O1COM+1
        18 001575   200036 116100                    CMPQ    REDEF_FINAL_SA,,AUTO
        18 001576   001625 605400 18                 TPNZ    s:14427
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:121  
        18 001577   001705 601000 18                 TNZ     s:14453
        18 001600   200042 234100                    SZN     REDEF_FINAL_ITEM_GBCD,,AUTO
        18 001601   001606 605000 18                 TPL     s:14420+10
        18 001602   001336 236000 xsym               LDQ     O1COM+734
        18 001603   001625 604000 18                 TMI     s:14427
        18 001604   200041 116100                    CMPQ    REDEF_FINAL_CHAR,,AUTO
        18 001605   001625 605400 18                 TPNZ    s:14427
        18 001606   200042 234100                    SZN     REDEF_FINAL_ITEM_GBCD,,AUTO
        18 001607   001705 604000 18                 TMI     s:14453
        18 001610   200037 236100                    LDQ     REDEF_FINAL_BYTE,,AUTO
        18 001611   000011 402007                    MPY     9,DL
        18 001612   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 001613   200040 236100                    LDQ     REDEF_FINAL_HALF_BYTE,,AUTO
        18 001614   000005 402007                    MPY     5,DL
        18 001615   200072 036100                    ADLQ    NEW_DEP$+1,,AUTO
        18 001616   200073 756100                    STQ     NEW_DEP$+2,,AUTO
        18 001617   001336 236000 xsym               LDQ     O1COM+734
        18 001620   000006 402007                    MPY     6,DL
        18 001621   000000 116003                    CMPQ    0,DU
        18 001622   001625 604000 18                 TMI     s:14427
        18 001623   200073 116100                    CMPQ    NEW_DEP$+2,,AUTO
        18 001624   001705 604400 18                 TMOZ    s:14453

      823    14421    7                                OR (O1COM.NEXT_SA = REDEF_FINAL_SA
      824    14422    7                                   AND ((REDEF_FINAL_ITEM_GBCD AND O1COM.NEXT_CHAR >
             14422                                            REDEF_FINAL_CHAR)
      825    14423    7                                        OR (NOT REDEF_FINAL_ITEM_GBCD
      826    14424    7                                           AND O1COM.NEXT_CHAR * 6 >
      827    14425    7                                               REDEF_FINAL_HALF_BYTE * 5 +
             14425                                                        REDEF_FINAL_BYTE * 9)))) THEN
      828    14426    8                              DO ;

      829    14427    8                                REDEF_FINAL_SA = O1COM.NEXT_SA ;

  14427 18 001625   000001 235000 xsym               LDA     O1COM+1
        18 001626   200036 755100                    STA     REDEF_FINAL_SA,,AUTO

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:122  
      830    14428    8                                REDEF_FINAL_CHAR = O1COM.NEXT_CHAR ;

  14428 18 001627   001336 236000 xsym               LDQ     O1COM+734
        18 001630   200041 756100                    STQ     REDEF_FINAL_CHAR,,AUTO

      831    14429    8                                REDEF_FINAL_ITEM_GBCD = TRUE ;

  14429 18 001631   400000 236003                    LDQ     -131072,DU
        18 001632   200042 756100                    STQ     REDEF_FINAL_ITEM_GBCD,,AUTO

      832    14430    8                              END ;

      833    14431    7                          END ;

  14431 18 001633   001705 710000 18                 TRA     s:14453

      834    14432    6                        ELSE
      835    14433    6                          IF ((O1COM.NEXT_SA > REDEF_FINAL_SA)

  14433 18 001634   000001 236000 xsym               LDQ     O1COM+1
        18 001635   200036 116100                    CMPQ    REDEF_FINAL_SA,,AUTO
        18 001636   001676 605400 18                 TPNZ    s:14444
        18 001637   001705 601000 18                 TNZ     s:14453
        18 001640   200042 234100                    SZN     REDEF_FINAL_ITEM_GBCD,,AUTO
        18 001641   001660 605000 18                 TPL     s:14433+20
        18 001642   000002 236000 xsym               LDQ     O1COM+2
        18 001643   000011 402007                    MPY     9,DL
        18 001644   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 001645   000003 236000 xsym               LDQ     O1COM+3
        18 001646   000005 402007                    MPY     5,DL
        18 001647   200072 036100                    ADLQ    NEW_DEP$+1,,AUTO
        18 001650   200073 756100                    STQ     NEW_DEP$+2,,AUTO
        18 001651   200041 236100                    LDQ     REDEF_FINAL_CHAR,,AUTO
        18 001652   000006 402007                    MPY     6,DL
        18 001653   200074 756100                    STQ     NEW_DEP$+3,,AUTO
        18 001654   200073 236100                    LDQ     NEW_DEP$+2,,AUTO
        18 001655   001676 604000 18                 TMI     s:14444
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:123  
        18 001656   200074 116100                    CMPQ    NEW_DEP$+3,,AUTO
        18 001657   001676 605400 18                 TPNZ    s:14444
        18 001660   200042 234100                    SZN     REDEF_FINAL_ITEM_GBCD,,AUTO
        18 001661   001705 604000 18                 TMI     s:14453
        18 001662   000002 236000 xsym               LDQ     O1COM+2
        18 001663   001676 604000 18                 TMI     s:14444
        18 001664   200037 116100                    CMPQ    REDEF_FINAL_BYTE,,AUTO
        18 001665   001676 605400 18                 TPNZ    s:14444
        18 001666   000000 116003                    CMPQ    0,DU
        18 001667   001705 604000 18                 TMI     s:14453
        18 001670   200037 116100                    CMPQ    REDEF_FINAL_BYTE,,AUTO
        18 001671   001705 601000 18                 TNZ     s:14453
        18 001672   000003 236000 xsym               LDQ     O1COM+3
        18 001673   001676 604000 18                 TMI     s:14444
        18 001674   200040 116100                    CMPQ    REDEF_FINAL_HALF_BYTE,,AUTO
        18 001675   001705 604400 18                 TMOZ    s:14453

      836    14434    6                              OR (O1COM.NEXT_SA = REDEF_FINAL_SA
      837    14435    6                                AND ((REDEF_FINAL_ITEM_GBCD AND
      838    14436    6                                      O1COM.NEXT_HALF_BYTE * 5 + O1COM.NEXT_BYTE * 9 >
      839    14437    6                                        REDEF_FINAL_CHAR * 6)
      840    14438    6                                     OR (NOT REDEF_FINAL_ITEM_GBCD
      841    14439    6                                         AND (O1COM.NEXT_BYTE > REDEF_FINAL_BYTE
      842    14440    6                                              OR (O1COM.NEXT_BYTE = REDEF_FINAL_BYTE
      843    14441    6                                                  AND O1COM.NEXT_HALF_BYTE >
      844    14442    6                                                      REDEF_FINAL_HALF_BYTE)))))) THEN
      845    14443    7                            DO ;

      846    14444    7                              REDEF_FINAL_SA        = O1COM.NEXT_SA ;

  14444 18 001676   000001 235000 xsym               LDA     O1COM+1
        18 001677   200036 755100                    STA     REDEF_FINAL_SA,,AUTO

      847    14445    7                              REDEF_FINAL_BYTE      = O1COM.NEXT_BYTE ;

  14445 18 001700   000002 236000 xsym               LDQ     O1COM+2
        18 001701   200037 756100                    STQ     REDEF_FINAL_BYTE,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:124  

      848    14446    7                              REDEF_FINAL_HALF_BYTE = O1COM.NEXT_HALF_BYTE ;

  14446 18 001702   000003 235000 xsym               LDA     O1COM+3
        18 001703   200040 755100                    STA     REDEF_FINAL_HALF_BYTE,,AUTO

      849    14447    7                              REDEF_FINAL_ITEM_GBCD = FALSE ;

  14447 18 001704   200042 450100                    STZ     REDEF_FINAL_ITEM_GBCD,,AUTO

      850    14448    7                            END ;

      851    14449    6                      END ;

      852    14450
      853    14451    5                  END ; /* MY_SIZE <= REDEF_OBJ_SIZE2 */

      854    14452
      855    14453    4                  IF NEXT$ -> QLT.BROTHER ~= ADDR(NIL) THEN

  14453 18 001705   200012 470500                    LDP0    NEXT$,,AUTO
        18 001706   000002 236100                    LDQ     2,,PR0
        18 001707   000000 116000 19                 CMPQ    0
        18 001710   001731 600000 18                 TZE     s:14466

      856    14454    4                    IF NOT (NEXT$ -> QLT.BROTHER -> QLT.ST$ -> VARIABLE.B.REDEF_SUB)
             14454                             THEN

  14454 18 001711   000002 471500                    LDP1    2,,PR0
        18 001712   100004 473500                    LDP3    4,,PR1
        18 001713   300003 430100                    FSZN    3,,PR3
        18 001714   001731 604000 18                 TMI     s:14466

      857    14455    5                      DO ;

      858    14456    5                        O1COM.NEXT_SA        = REDEF_FINAL_SA ;

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:125  
  14456 18 001715   200036 235100                    LDA     REDEF_FINAL_SA,,AUTO
        18 001716   000001 755000 xsym               STA     O1COM+1

      859    14457    5                        O1COM.NEXT_BYTE      = REDEF_FINAL_BYTE ;

  14457 18 001717   200037 235100                    LDA     REDEF_FINAL_BYTE,,AUTO
        18 001720   000002 755000 xsym               STA     O1COM+2

      860    14458    5                        O1COM.NEXT_HALF_BYTE = REDEF_FINAL_HALF_BYTE ;

  14458 18 001721   200040 236100                    LDQ     REDEF_FINAL_HALF_BYTE,,AUTO
        18 001722   000003 756000 xsym               STQ     O1COM+3

      861    14459    5                        O1COM.NEXT_CHAR = REDEF_FINAL_CHAR ;

  14459 18 001723   200041 235100                    LDA     REDEF_FINAL_CHAR,,AUTO
        18 001724   001336 755000 xsym               STA     O1COM+734

      862    14460    5                        O1COM.LAST_ITEM_GBCD = REDEF_FINAL_ITEM_GBCD ;

  14460 18 001725   200042 236100                    LDQ     REDEF_FINAL_ITEM_GBCD,,AUTO
        18 001726   001337 676000 xsym               ERQ     O1COM+735
        18 001727   400000 376003                    ANQ     -131072,DU
        18 001730   001337 656000 xsym               ERSQ    O1COM+735

      863    14461    5                      END ;

      864    14462
      865    14463    4                END ; /* REDEF_SUB */

      866    14464
      867    14465    3            END ;

      868    14466    2   END REDEF_SIZE_CHECKS;

  14466 18 001731   200052 221300                    LDX1  ! @QUAL$+1,,AUTO
        18 001732   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:126  

      869    14467        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:127  
      870    14468    1   CHECK_FOR_DEPENDING: PROC (SIZE, QUAL$, SYM$);

  14468 18 001733   200052 741300       CHECK_FOR_D* STX1  ! @QUAL$+1,,AUTO

      871    14469
      872    14470    2   DCL QUAL$              PTR;
      873    14471    2   DCL SYM$               PTR;
      874    14472    2   DCL SIZE               SBIN WORD;
      875    14473    2   DCL LTS$$              PTR;
      876    14474
      877    14475    2      IF NEXT$ -> QLT.B.OCCURS THEN

  14475 18 001734   200012 470500                    LDP0    NEXT$,,AUTO
        18 001735   000000 236100                    LDQ     0,,PR0
        18 001736   400000 316007                    CANQ    -131072,DL
        18 001737   002031 600000 18                 TZE     s:14542

      878    14476    3        DO;

      879    14477               %GET_LTS (@ID    = %DIMS,
      880    14478                         @ST$   = SYM$,
      881    14479                         @RETURN$= LTS$$);

  14481 18 001740   200055 471500                    LDP1    @SYM$,,AUTO
        18 001741   100000 473500                    LDP3    0,,PR1
        18 001742   300005 236100                    LDQ     5,,PR3
        18 001743   000000 116000 19                 CMPQ    0
        18 001744   001754 600000 18                 TZE     s:14515
        18 001745   300005 474500                    LDP4    5,,PR3
        18 001746   400000 220100                    LDX0    0,,PR4
        18 001747   001105 100003                    CMPX0   581,DU
        18 001750   001754 601000 18                 TNZ     s:14515

  14485 18 001751   400001 236100                    LDQ     1,,PR4
        18 001752   200056 756100                    STQ     LTS$$,,AUTO

  14513 18 001753   001766 710000 18                 TRA     s:14523
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:128  

  14515 18 001754   000000 116000 19                 CMPQ    0
        18 001755   001764 600000 18                 TZE     s:14519
        18 001756   300005 474500                    LDP4    5,,PR3
        18 001757   400000 220100                    LDX0    0,,PR4
        18 001760   001104 100003                    CMPX0   580,DU
        18 001761   001764 601000 18                 TNZ     s:14519

  14517 18 001762   200056 756100                    STQ     LTS$$,,AUTO
        18 001763   001766 710000 18                 TRA     s:14523

  14519 18 001764   000000 236000 19                 LDQ     0
        18 001765   200056 756100                    STQ     LTS$$,,AUTO

      882    14522
      883    14523    3          IF LTS$$ -> DIMS.DN2 ~= ADDR(NIL) THEN

  14523 18 001766   200056 473500                    LDP3    LTS$$,,AUTO
        18 001767   300001 236100                    LDQ     1,,PR3
        18 001770   000000 116000 19                 CMPQ    0
        18 001771   002051 600000 18                 TZE     s:14548

      884    14524    4            DO;

      885    14525    4              CALL NEW_DEPENDING_SIZE (SIZE,

  14525 18 001772   200054 474500                    LDP4    @QUAL$,,AUTO
        18 001773   400000 475500                    LDP5    0,,PR4
        18 001774   500004 476500                    LDP6    4,,PR5
        18 001775   600005 637500                    EPPR7   5,,PR6
        18 001776   200064 457500                    STP7    SIZE$,,AUTO
        18 001777   200055 236100                    LDQ     @SYM$,,AUTO
        18 002000   200063 756100                    STQ     @RETURN$,,AUTO
        18 002001   200056 635500                    EPPR5   LTS$$,,AUTO
        18 002002   200062 455500                    STP5    @DEPEND_ST$,,AUTO
        18 002003   200053 236100                    LDQ     @SIZE,,AUTO
        18 002004   200061 756100                    STQ     @CURRENT_SIZE,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:129  
        18 002005   000642 701000 18                 TSX1    NEW_DEPENDING_SIZE
        18 002006   000000 011000                    NOP     0

      886    14526    4                                       LTS$$,
      887    14527    4                                       SYM$,
      888    14528    4                                       QUAL$ -> QLT.ST$ ->
      889    14529    4                                       VARIABLE.LTS$);
      890    14530                   %FISH (TRIAD = LTS$$ -> DIMS.DN2,
      891    14531                          RTN   = LTS$$ -> DIMS.DN2);

  14533 18 002007   200056 470500                    LDP0    LTS$$,,AUTO
        18 002010   000001 236100                    LDQ     1,,PR0
        18 002011   000001 756100                    STQ     1,,PR0

  14534 18 002012   200056 470500                    LDP0    LTS$$,,AUTO
        18 002013   000001 471500                    LDP1    1,,PR0
        18 002014   100000 220100                    LDX0    0,,PR1
        18 002015   000751 100003                    CMPX0   489,DU
        18 002016   002051 603000 18                 TRC     s:14548

  14535 18 002017   200056 470500                    LDP0    LTS$$,,AUTO
        18 002020   000001 471500                    LDP1    1,,PR0
        18 002021   100001 236100                    LDQ     1,,PR1
        18 002022   000001 756100                    STQ     1,,PR0

  14536 18 002023   200056 470500                    LDP0    LTS$$,,AUTO
        18 002024   000001 471500                    LDP1    1,,PR0
        18 002025   100000 220100                    LDX0    0,,PR1
        18 002026   000751 100003                    CMPX0   489,DU
        18 002027   002017 602000 18                 TNC     s:14535

      892    14539    4            END;

      893    14540    3        END;

  14540 18 002030   002051 710000 18                 TRA     s:14548

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:130  
      894    14541    2      ELSE
      895    14542    2        IF SYM$ -> VARIABLE.B.OCCURS_DEPENDING THEN

  14542 18 002031   200055 471500                    LDP1    @SYM$,,AUTO
        18 002032   100000 473500                    LDP3    0,,PR1
        18 002033   300003 236100                    LDQ     3,,PR3
        18 002034   000200 316003                    CANQ    128,DU
        18 002035   002051 600000 18                 TZE     s:14548

      896    14543    2          CALL ADD_TO_DEPENDING_SIZE (SIZE,

  14543 18 002036   200054 474500                    LDP4    @QUAL$,,AUTO
        18 002037   400000 475500                    LDP5    0,,PR4
        18 002040   500004 476500                    LDP6    4,,PR5
        18 002041   600005 637500                    EPPR7   5,,PR6
        18 002042   200063 457500                    STP7    @RETURN$,,AUTO
        18 002043   200055 236100                    LDQ     @SYM$,,AUTO
        18 002044   200062 756100                    STQ     @DEPEND_ST$,,AUTO
        18 002045   200053 236100                    LDQ     @SIZE,,AUTO
        18 002046   200061 756100                    STQ     @CURRENT_SIZE,,AUTO
        18 002047   001015 701000 18                 TSX1    ADD_TO_DEPENDING_SIZE
        18 002050   000000 011000                    NOP     0

      897    14544    2                                      SYM$,
      898    14545    2                                      QUAL$ -> QLT.ST$ ->
      899    14546    2                                      VARIABLE.LTS$);
      900    14547
      901    14548    2   END CHECK_FOR_DEPENDING;

  14548 18 002051   200052 221300                    LDX1  ! @QUAL$+1,,AUTO
        18 002052   000001 702211                    TSX2  ! 1,X1

      902    14549        %EJECT;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:131  
      903    14550    1   GET_FIRST_ELEM: PROC (QLT$$);

  14550 18 002053   200052 741300       GET_FIRST_E* STX1  ! @QUAL$+1,,AUTO

      904    14551
      905    14552    2        DCL QLT$$         PTR;
      906    14553    2        DCL BRO$$         PTR;
      907    14554
      908    14555
      909    14556    2   SRCH:
      910    14557    3        DO WHILE (QLT$$ ~= ADDR(NIL));

  14557 18 002054   002223 710000 18    SRCH         TRA     s:14615

      911    14558    4          DO CASE (QLT$$ -> QLT.ST$ -> ST.ID);

  14558 18 002055   200053 470500                    LDP0    @QLT$$,,AUTO
        18 002056   000000 471500                    LDP1    0,,PR0
        18 002057   100004 473500                    LDP3    4,,PR1
        18 002060   300000 236100                    LDQ     0,,PR3
        18 002061   000022 772000                    QRL     18
        18 002062   000751 136007                    SBLQ    489,DL
        18 002063   000035 116007                    CMPQ    29,DL
        18 002064   002066 602006 18                 TNC     s:14558+9,QL
        18 002065   002133 710000 18                 TRA     s:14580
        18 002066   002123 710000 18                 TRA     s:14574
        18 002067   002133 710000 18                 TRA     s:14580
        18 002070   002133 710000 18                 TRA     s:14580
        18 002071   002133 710000 18                 TRA     s:14580
        18 002072   002133 710000 18                 TRA     s:14580
        18 002073   002133 710000 18                 TRA     s:14580
        18 002074   002133 710000 18                 TRA     s:14580
        18 002075   002123 710000 18                 TRA     s:14574
        18 002076   002133 710000 18                 TRA     s:14580
        18 002077   002133 710000 18                 TRA     s:14580
        18 002100   002133 710000 18                 TRA     s:14580
        18 002101   002133 710000 18                 TRA     s:14580
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:132  
        18 002102   002123 710000 18                 TRA     s:14574
        18 002103   002123 710000 18                 TRA     s:14574
        18 002104   002123 710000 18                 TRA     s:14574
        18 002105   002133 710000 18                 TRA     s:14580
        18 002106   002133 710000 18                 TRA     s:14580
        18 002107   002133 710000 18                 TRA     s:14580
        18 002110   002133 710000 18                 TRA     s:14580
        18 002111   002133 710000 18                 TRA     s:14580
        18 002112   002133 710000 18                 TRA     s:14580
        18 002113   002133 710000 18                 TRA     s:14580
        18 002114   002123 710000 18                 TRA     s:14574
        18 002115   002133 710000 18                 TRA     s:14580
        18 002116   002133 710000 18                 TRA     s:14580
        18 002117   002123 710000 18                 TRA     s:14574
        18 002120   002123 710000 18                 TRA     s:14574
        18 002121   002123 710000 18                 TRA     s:14574
        18 002122   002123 710000 18                 TRA     s:14574

      912    14559
      913    14560    4            CASE (

      914    14561                       %ST_ITEMS_WITH_STORAGE;
      915    14573    4                 );
      916    14574    4              IF QLT$$ -> QLT.ST$ -> VARIABLE.B.ELEMENTARY THEN

  14574 18 002123   300003 236100                    LDQ     3,,PR3
        18 002124   010000 316003                    CANQ    4096,DU
        18 002125   002130 600000 18                 TZE     s:14577

      917    14575    4                RETURN;

  14575 18 002126   200052 221300                    LDX1  ! @QUAL$+1,,AUTO
        18 002127   000001 702211                    TSX2  ! 1,X1

      918    14576    4              ELSE
      919    14577    4                QLT$$ = QLT$$ -> QLT.SON;

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:133  
  14577 18 002130   100003 236100                    LDQ     3,,PR1
        18 002131   000000 756100                    STQ     0,,PR0
        18 002132   002223 710000 18                 TRA     s:14615

      920    14578
      921    14579    4            CASE (ELSE);

      922    14580    4              BRO$$ = QLT$$;

  14580 18 002133   000000 236100                    LDQ     0,,PR0
        18 002134   200054 756100                    STQ     BRO$$,,AUTO

      923    14581
      924    14582    5   BRO_SRCH:  DO WHILE (BRO$$ ~= ADDR(NIL));

  14582 18 002135   002211 710000 18    BRO_SRCH     TRA     s:14606

      925    14583    6                DO CASE (BRO$$ -> QLT.ST$ -> ST.ID);

  14583 18 002136   200054 470500                    LDP0    BRO$$,,AUTO
        18 002137   000004 471500                    LDP1    4,,PR0
        18 002140   100000 236100                    LDQ     0,,PR1
        18 002141   000022 772000                    QRL     18
        18 002142   000751 136007                    SBLQ    489,DL
        18 002143   000035 116007                    CMPQ    29,DL
        18 002144   002146 602006 18                 TNC     s:14583+8,QL
        18 002145   002207 710000 18                 TRA     s:14603
        18 002146   002203 710000 18                 TRA     s:14599
        18 002147   002207 710000 18                 TRA     s:14603
        18 002150   002207 710000 18                 TRA     s:14603
        18 002151   002207 710000 18                 TRA     s:14603
        18 002152   002207 710000 18                 TRA     s:14603
        18 002153   002207 710000 18                 TRA     s:14603
        18 002154   002207 710000 18                 TRA     s:14603
        18 002155   002203 710000 18                 TRA     s:14599
        18 002156   002207 710000 18                 TRA     s:14603
        18 002157   002207 710000 18                 TRA     s:14603
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:134  
        18 002160   002207 710000 18                 TRA     s:14603
        18 002161   002207 710000 18                 TRA     s:14603
        18 002162   002203 710000 18                 TRA     s:14599
        18 002163   002203 710000 18                 TRA     s:14599
        18 002164   002203 710000 18                 TRA     s:14599
        18 002165   002207 710000 18                 TRA     s:14603
        18 002166   002207 710000 18                 TRA     s:14603
        18 002167   002207 710000 18                 TRA     s:14603
        18 002170   002207 710000 18                 TRA     s:14603
        18 002171   002207 710000 18                 TRA     s:14603
        18 002172   002207 710000 18                 TRA     s:14603
        18 002173   002207 710000 18                 TRA     s:14603
        18 002174   002203 710000 18                 TRA     s:14599
        18 002175   002207 710000 18                 TRA     s:14603
        18 002176   002207 710000 18                 TRA     s:14603
        18 002177   002203 710000 18                 TRA     s:14599
        18 002200   002203 710000 18                 TRA     s:14599
        18 002201   002203 710000 18                 TRA     s:14599
        18 002202   002203 710000 18                 TRA     s:14599

      926    14584
      927    14585    6                  CASE (

      928    14586                             %ST_ITEMS_WITH_STORAGE;
      929    14598    6                       );
      930    14599    6                    QLT$$ = BRO$$;

  14599 18 002203   200054 236100                    LDQ     BRO$$,,AUTO
        18 002204   200053 473500                    LDP3    @QLT$$,,AUTO
        18 002205   300000 756100                    STQ     0,,PR3

      931    14600    6                    EXIT BRO_SRCH;

  14600 18 002206   002213 710000 18                 TRA     s:14608

      932    14601
      933    14602    6                  CASE (ELSE);
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:135  

      934    14603    6                    BRO$$ = BRO$$ -> QLT.BROTHER;

  14603 18 002207   000002 236100                    LDQ     2,,PR0
        18 002210   200054 756100                    STQ     BRO$$,,AUTO

      935    14604
      936    14605    6                END; /* Case */

      937    14606    5              END; /* While */

  14606 18 002211   000000 116000 19                 CMPQ    0
        18 002212   002136 601000 18                 TNZ     s:14583

      938    14607
      939    14608    4              IF BRO$$ = ADDR(NIL) THEN

  14608 18 002213   000000 116000 19                 CMPQ    0
        18 002214   002223 601000 18                 TNZ     s:14615

      940    14609    5                DO;

      941    14610    5                  CALL Z8AE$ERROR (%E$UNEXPECTED_CASE);

  14610 18 002215   000033 630400 19                 EPPR0   27
        18 002216   000001 631400 19                 EPPR1   1
        18 002217   000000 701000 xent               TSX1    Z8AE$ERROR
        18 002220   000000 011000                    NOP     0

      942    14611    5                  RETURN;

  14611 18 002221   200052 221300                    LDX1  ! @QUAL$+1,,AUTO
        18 002222   000001 702211                    TSX2  ! 1,X1

      943    14612    5                END;
      944    14613
      945    14614    4          END; /* Case */
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:136  

      946    14615    3        END; /* While */

  14615 18 002223   200053 470500                    LDP0    @QLT$$,,AUTO
        18 002224   000000 236100                    LDQ     0,,PR0
        18 002225   000000 116000 19                 CMPQ    0
        18 002226   002055 601000 18                 TNZ     s:14558

      947    14616
      948    14617    2   END GET_FIRST_ELEM;

  14617 18 002227   200052 221300                    LDX1  ! @QUAL$+1,,AUTO
        18 002230   000001 702211                    TSX2  ! 1,X1

      949    14618        %EJECT;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:137  
      950    14619    1   CALC_SIZE: PROC (QUAL$);

  14619 18 002231   200050 741300       CALC_SIZE    STX1  ! REDEF_OBJ_ITEM_GBCD+1,,AUTO

      951    14620
      952    14621    2        DCL QUAL$                PTR;
      953    14622
      954    14623        /*V*
      955    14624            Z8DC_LOOP_PRESET -- The variables are set up to go through the loop.
      956    14625                                If the data item passed as the parameter is elementary
      957    14626                                then nothing is done as the size is already set.  This
      958    14627                                won't happen but the IF statement is used for clarity.
      959    14628                                The size of the structure is preset to zero and the
      960    14629                                QLT pointer to the immediate son is assigned(NEXT$).
      961    14630                                The maximum boundary alignment is set to byte as a group
      962    14631                                item requires byte alignment.
      963    14632
      964    14633                                The loop is started and the symbol table pointer is
      965    14634                                assigned for the data item. If the item has a renames
      966    14635                                clause then a procedure is called to handle the clause.
      967    14636        */
      968    14637    2          IF QUAL$ -> QLT.ST$ -> VARIABLE.B.ELEMENTARY THEN

  14637 18 002232   200051 470500                    LDP0    @QUAL$,,AUTO
        18 002233   000000 471500                    LDP1    0,,PR0
        18 002234   100004 473500                    LDP3    4,,PR1
        18 002235   300003 236100                    LDQ     3,,PR3
        18 002236   010000 316003                    CANQ    4096,DU
        18 002237   005231 601000 18                 TNZ     s:15696

      969    14638    2            /* Size already set */ ;
      970    14639    2          ELSE  /* non-ELEMENTARY */
      971    14640    3            DO ;

      972    14641    3              SIZE = 0 ;

  14641 18 002240   200011 450100                    STZ     SIZE,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:138  

      973    14642    3              NEXT$ = QUAL$ -> QLT.SON ;

  14642 18 002241   000000 471500                    LDP1    0,,PR0
        18 002242   100003 236100                    LDQ     3,,PR1
        18 002243   200012 756100                    STQ     NEXT$,,AUTO

      974    14643    3              MAX_BOUND = %BYTE ;

  14643 18 002244   000001 220003                    LDX0    1,DU
        18 002245   200004 471500                    LDP1    @MAX_BOUND,,AUTO
        18 002246   100000 740100                    STX0    0,,PR1

      975    14644    3              MAX_BOUND_SON = 0 ;

  14644 18 002247   000000 221003                    LDX1    0,DU
        18 002250   200006 741100                    STX1    MAX_BOUND_SON,,AUTO

      976    14645
      977    14646    4              DO WHILE (NEXT$ ~= ADDR(NIL)) ;

  14646 18 002251   005065 710000 18                 TRA     s:15600

      978    14647    4                SYM$ = NEXT$ -> QLT.ST$ ;

  14647 18 002252   200012 470500                    LDP0    NEXT$,,AUTO
        18 002253   000004 236100                    LDQ     4,,PR0
        18 002254   200010 756100                    STQ     SYM$,,AUTO

      979    14648    4                SYM$ -> VARIABLE.COUNT = QUAL$ -> QLT.ST$ -> VARIABLE.COUNT;

  14648 18 002255   200051 471500                    LDP1    @QUAL$,,AUTO
        18 002256   100000 473500                    LDP3    0,,PR1
        18 002257   300004 474500                    LDP4    4,,PR3
        18 002260   200010 475500                    LDP5    SYM$,,AUTO
        18 002261   400000 236100                    LDQ     0,,PR4
        18 002262   500000 552104                    STBQ    0,'04'O,PR5
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:139  

      980    14649
      981    14650
      982    14651    5                IF NEXT$ -> QLT.LEVEL_NO ~= 88 THEN DO ;

  14651 18 002263   200012 470500                    LDP0    NEXT$,,AUTO
        18 002264   000000 236100                    LDQ     0,,PR0
        18 002265   000777 376007                    ANQ     511,DL
        18 002266   000130 116007                    CMPQ    88,DL
        18 002267   005052 600000 18                 TZE     s:15596

      983    14652
      984    14653    5                 SYM$ -> VARIABLE.B.EXTERNAL = QUAL$ -> QLT.ST$ -> VARIABLE.B.EXTERNAL
             14653                           ;

  14653 18 002270   100000 473500                    LDP3    0,,PR1
        18 002271   300004 474500                    LDP4    4,,PR3
        18 002272   200010 475500                    LDP5    SYM$,,AUTO
        18 002273   400003 236100                    LDQ     3,,PR4
        18 002274   500003 676100                    ERQ     3,,PR5
        18 002275   000004 376003                    ANQ     4,DU
        18 002276   500003 656100                    ERSQ    3,,PR5

      985    14654    5                  SYM$ -> VARIABLE.B.LINKAGE = QUAL$ -> QLT.ST$ -> VARIABLE.B.LINKAGE;

  14654 18 002277   100000 470500                    LDP0    0,,PR1
        18 002300   000004 473500                    LDP3    4,,PR0
        18 002301   200010 474500                    LDP4    SYM$,,AUTO
        18 002302   300003 236100                    LDQ     3,,PR3
        18 002303   400003 676100                    ERQ     3,,PR4
        18 002304   000002 376003                    ANQ     2,DU
        18 002305   400003 656100                    ERSQ    3,,PR4

      986    14655    5                  SYM$ -> VARIABLE.B.GLOBAL = QUAL$ -> QLT.ST$ -> VARIABLE.B.GLOBAL;

  14655 18 002306   100000 470500                    LDP0    0,,PR1
        18 002307   000004 473500                    LDP3    4,,PR0
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:140  
        18 002310   200010 474500                    LDP4    SYM$,,AUTO
        18 002311   300003 236100                    LDQ     3,,PR3
        18 002312   400003 676100                    ERQ     3,,PR4
        18 002313   000010 376003                    ANQ     8,DU
        18 002314   400003 656100                    ERSQ    3,,PR4

      987    14656
      988    14657    5                  IF NEXT$ -> QLT.B.RENAMES THEN

  14657 18 002315   200012 470500                    LDP0    NEXT$,,AUTO
        18 002316   000000 236100                    LDQ     0,,PR0
        18 002317   040000 316007                    CANQ    16384,DL
        18 002320   002326 600000 18                 TZE     s:14681

      989    14658    5                    CALL SET_RENAMES_ITEM (SYM$);

  14658 18 002321   200010 633500                    EPPR3   SYM$,,AUTO
        18 002322   200053 453500                    STP3    @QLT$$,,AUTO
        18 002323   000100 701000 18                 TSX1    SET_RENAMES_ITEM
        18 002324   000000 011000                    NOP     0
        18 002325   005062 710000 18                 TRA     s:15598

      990    14659    6                  ELSE DO ;

      991    14660        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:141  
      992    14661        /*V*
      993    14662            REDEF_SUBJECT_FIRST_ELEM -- If this item is the subject of a redefines
      994    14663                                        clause, the storage counters are reset to the
      995    14664                                        object's storage location.  This is done
      996    14665                                        because the subject may start on a storage
      997    14666                                        location after the object but not before.
      998    14667
      999    14668                                        If the object is not the subject of a redefines
     1000    14669                                        and is nonelementary then a search is done to
     1001    14670                                        find the first elementary element of the
     1002    14671                                        structure.  This is done to find the proper
     1003    14672                                        aligned to the same location as the first
     1004    14673                                        elementary item.  Group items must start on at
     1005    14674                                        least a byte boundary as they are of type TYA.
     1006    14675                                        The loop starts with FIRST_ELEM$ set to NEXT$
     1007    14676                                        as the immediate son is checked.  Filler size
     1008    14677                                        is initialized to zero as we haven't allocated
     1009    14678                                        any data storage space yet.
     1010    14679        */
     1011    14680
     1012    14681    6                    FILLER_SIZE = 0 ;

  14681 18 002326   200021 450100                    STZ     FILLER_SIZE,,AUTO

     1013    14682    6                    FIRST_ELEM$ = NEXT$ ;

  14682 18 002327   200012 236100                    LDQ     NEXT$,,AUTO
        18 002330   200022 756100                    STQ     FIRST_ELEM$,,AUTO

     1014    14683
     1015    14684    6                    IF SYM$ -> VARIABLE.B.REDEF_SUB THEN

  14684 18 002331   200010 473500                    LDP3    SYM$,,AUTO
        18 002332   300003 430100                    FSZN    3,,PR3
        18 002333   002351 605000 18                 TPL     s:14693

     1016    14685    7                      DO ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:142  

     1017    14686    7                        O1COM.NEXT_SA = LAST_SA;            /*#35497*/

  14686 18 002334   200026 235100                    LDA     LAST_SA,,AUTO
        18 002335   000001 755000 xsym               STA     O1COM+1

     1018    14687    7                        O1COM.NEXT_BYTE = LAST_BYTE;        /*#35497*/

  14687 18 002336   200027 235100                    LDA     LAST_BYTE,,AUTO
        18 002337   000002 755000 xsym               STA     O1COM+2

     1019    14688    7                        O1COM.NEXT_HALF_BYTE = LAST_HALF_BYTE;   /*#35497*/

  14688 18 002340   200030 235100                    LDA     LAST_HALF_BYTE,,AUTO
        18 002341   000003 755000 xsym               STA     O1COM+3

     1020    14689    7                        O1COM.NEXT_CHAR = LAST_CHAR;

  14689 18 002342   200031 235100                    LDA     LAST_CHAR,,AUTO
        18 002343   001336 755000 xsym               STA     O1COM+734

     1021    14690    7                        O1COM.LAST_ITEM_GBCD = LAST_ITEM_GBCD;

  14690 18 002344   200032 236100                    LDQ     LAST_ITEM_GBCD,,AUTO
        18 002345   001337 676000 xsym               ERQ     O1COM+735
        18 002346   400000 376003                    ANQ     -131072,DU
        18 002347   001337 656000 xsym               ERSQ    O1COM+735

     1022    14691    7                      END ;

  14691 18 002350   002456 710000 18                 TRA     ALIGN_VAR_OFF

     1023    14692    6                    ELSE
     1024    14693    6                      IF NOT SYM$ -> VARIABLE.B.ELEMENTARY THEN

  14693 18 002351   300003 236100                    LDQ     3,,PR3
        18 002352   010000 316003                    CANQ    4096,DU
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:143  
        18 002353   002456 601000 18                 TNZ     ALIGN_VAR_OFF

     1025    14694    7                        DO;

     1026    14695                               %NEXT_BYTE;

  14697 18 002354   001337 234000 xsym               SZN     O1COM+735
        18 002355   002427 605000 18                 TPL     s:14721

  14699 18 002356   001336 235000 xsym               LDA     O1COM+734
        18 002357   000006 115007                    CMPA    6,DL
        18 002360   002362 602005 18                 TNC     s:14699+4,AL
        18 002361   002425 710000 18                 TRA     s:14719
        18 002362   002370 710000 18                 TRA     s:14701
        18 002363   002372 710000 18                 TRA     s:14703
        18 002364   002400 710000 18                 TRA     s:14706
        18 002365   002406 710000 18                 TRA     s:14709
        18 002366   002411 710000 18                 TRA     s:14711
        18 002367   002417 710000 18                 TRA     s:14714

  14701 18 002370   000002 450000 xsym               STZ     O1COM+2
        18 002371   002425 710000 18                 TRA     s:14719

  14703 18 002372   000001 235007                    LDA     1,DL
        18 002373   000002 755000 xsym               STA     O1COM+2

  14704 18 002374   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002375   000003 035007                    ADLA    3,DL
        18 002376   200021 755100                    STA     FILLER_SIZE,,AUTO
        18 002377   002425 710000 18                 TRA     s:14719

  14706 18 002400   000002 235007                    LDA     2,DL
        18 002401   000002 755000 xsym               STA     O1COM+2

  14707 18 002402   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002403   000006 035007                    ADLA    6,DL
        18 002404   200021 755100                    STA     FILLER_SIZE,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:144  
        18 002405   002425 710000 18                 TRA     s:14719

  14709 18 002406   000002 235007                    LDA     2,DL
        18 002407   000002 755000 xsym               STA     O1COM+2
        18 002410   002425 710000 18                 TRA     s:14719

  14711 18 002411   000003 235007                    LDA     3,DL
        18 002412   000002 755000 xsym               STA     O1COM+2

  14712 18 002413   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002414   000003 035007                    ADLA    3,DL
        18 002415   200021 755100                    STA     FILLER_SIZE,,AUTO
        18 002416   002425 710000 18                 TRA     s:14719

  14714 18 002417   000001 054000 xsym               AOS     O1COM+1

  14715 18 002420   000002 450000 xsym               STZ     O1COM+2

  14716 18 002421   000003 450000 xsym               STZ     O1COM+3

  14717 18 002422   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 002423   000006 036007                    ADLQ    6,DL
        18 002424   200021 756100                    STQ     FILLER_SIZE,,AUTO

  14719 18 002425   000003 450000 xsym               STZ     O1COM+3

  14720 18 002426   002450 710000 18                 TRA     s:14731

  14721 18 002427   000003 235000 xsym               LDA     O1COM+3
        18 002430   000001 115007                    CMPA    1,DL
        18 002431   002450 601000 18                 TNZ     s:14731

  14723 18 002432   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002433   000004 035007                    ADLA    4,DL
        18 002434   200021 755100                    STA     FILLER_SIZE,,AUTO

  14724 18 002435   000002 235000 xsym               LDA     O1COM+2
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:145  
        18 002436   000001 035007                    ADLA    1,DL
        18 002437   000002 755000 xsym               STA     O1COM+2

  14725 18 002440   000003 450000 xsym               STZ     O1COM+3

  14726 18 002441   000002 236000 xsym               LDQ     O1COM+2
        18 002442   000002 772000                    QRL     2
        18 002443   000001 036000 xsym               ADLQ    O1COM+1
        18 002444   000001 756000 xsym               STQ     O1COM+1

  14727 18 002445   000002 236000 xsym               LDQ     O1COM+2
        18 002446   000003 376007                    ANQ     3,DL
        18 002447   000002 756000 xsym               STQ     O1COM+2

     1027    14731    7                          O1COM.LAST_ITEM_GBCD = FALSE ;

  14731 18 002450   000034 236000 19                 LDQ     28
        18 002451   001337 356000 xsym               ANSQ    O1COM+735

     1028    14732    7                          CALL GET_FIRST_ELEM (FIRST_ELEM$);

  14732 18 002452   200022 634500                    EPPR4   FIRST_ELEM$,,AUTO
        18 002453   200053 454500                    STP4    @QLT$$,,AUTO
        18 002454   002053 701000 18                 TSX1    GET_FIRST_ELEM
        18 002455   000000 011000                    NOP     0

     1029    14733    7                        END;

     1030    14734        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:146  
     1031    14735        /*V*
     1032    14736            ALIGN_VARIABLE_OFFSET -- Case statement to align variables to
     1033    14737                                     their boundaries: ie. double word, byte
     1034    14738        */
     1035    14739
     1036    14740    6   ALIGN_VAR_OFF:
     1037    14741    7                DO CASE (FIRST_ELEM$ -> QLT.ST$ -> VARIABLE.TYPE) ;

  14741 18 002456   200022 470500       ALIGN_VAR_O* LDP0    FIRST_ELEM$,,AUTO
        18 002457   000004 471500                    LDP1    4,,PR0
        18 002460   100002 220100                    LDX0    2,,PR1
        18 002461   000024 100003                    CMPX0   20,DU
        18 002462   002464 602010 18                 TNC     ALIGN_VAR_OFF+6,X0
        18 002463   004105 710000 18                 TRA     s:15210
        18 002464   002510 710000 18                 TRA     s:14744
        18 002465   003013 710000 18                 TRA     s:14868
        18 002466   003163 710000 18                 TRA     s:14927
        18 002467   004011 710000 18                 TRA     s:15160
        18 002470   003013 710000 18                 TRA     s:14868
        18 002471   003545 710000 18                 TRA     s:15068
        18 002472   004011 710000 18                 TRA     s:15160
        18 002473   003624 710000 18                 TRA     s:15095
        18 002474   004011 710000 18                 TRA     s:15160
        18 002475   003545 710000 18                 TRA     s:15068
        18 002476   004011 710000 18                 TRA     s:15160
        18 002477   004011 710000 18                 TRA     s:15160
        18 002500   003064 710000 18                 TRA     s:14891
        18 002501   004105 710000 18                 TRA     s:15210
        18 002502   004011 710000 18                 TRA     s:15160
        18 002503   003374 710000 18                 TRA     s:15003
        18 002504   004105 710000 18                 TRA     s:15210
        18 002505   004105 710000 18                 TRA     s:15210
        18 002506   003013 710000 18                 TRA     s:14868
        18 002507   003064 710000 18                 TRA     s:14891

     1038    14742
     1039    14743    7                  CASE (%TYD) ;  /* PACKED DECIMAL */
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:147  

     1040    14744    7                    IF FIRST_ELEM$ -> QLT.B.DIGIT THEN

  14744 18 002510   000000 236100                    LDQ     0,,PR0
        18 002511   100000 316007                    CANQ    32768,DL
        18 002512   002716 600000 18                 TZE     s:14829

     1041    14745    8                      DO ;

     1042    14746    8                        IF SYM$ -> VARIABLE.B.REDEF_OBJ THEN

  14746 18 002513   200010 473500                    LDP3    SYM$,,AUTO
        18 002514   300003 236100                    LDQ     3,,PR3
        18 002515   000400 316003                    CANQ    256,DU
        18 002516   002636 600000 18                 TZE     s:14797

     1043    14747    9                          DO ;

     1044    14748    9                            SUBJECT_QLT$ = NEXT$ -> QLT.BROTHER ;

  14748 18 002517   200012 474500                    LDP4    NEXT$,,AUTO
        18 002520   400002 236100                    LDQ     2,,PR4
        18 002521   200024 756100                    STQ     SUBJECT_QLT$,,AUTO

     1045    14749   10                            DO UNTIL SUBJECT_QLT$ = ADDR (NIL) OR

     1046    14750   10                                NOT SUBJECT_QLT$ -> QLT.ST$ -> VARIABLE.B.REDEF_SUB ;
     1047    14751   10                              SUBJECT_ST$ = SUBJECT_QLT$ -> QLT.ST$ ;

  14751 18 002522   200024 470500                    LDP0    SUBJECT_QLT$,,AUTO
        18 002523   000004 236100                    LDQ     4,,PR0
        18 002524   200025 756100                    STQ     SUBJECT_ST$,,AUTO

     1048    14752   10                              IF NOT SUBJECT_ST$ -> VARIABLE.B.ELEMENTARY THEN

  14752 18 002525   200025 471500                    LDP1    SUBJECT_ST$,,AUTO
        18 002526   100003 236100                    LDQ     3,,PR1
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:148  
        18 002527   010000 316003                    CANQ    4096,DU
        18 002530   002626 601000 18                 TNZ     s:14792

     1049    14753   11                                DO ;

     1050    14754                                       %NEXT_BYTE ;

  14756 18 002531   001337 234000 xsym               SZN     O1COM+735
        18 002532   002604 605000 18                 TPL     s:14780

  14758 18 002533   001336 235000 xsym               LDA     O1COM+734
        18 002534   000006 115007                    CMPA    6,DL
        18 002535   002537 602005 18                 TNC     s:14758+4,AL
        18 002536   002602 710000 18                 TRA     s:14778
        18 002537   002545 710000 18                 TRA     s:14760
        18 002540   002547 710000 18                 TRA     s:14762
        18 002541   002555 710000 18                 TRA     s:14765
        18 002542   002563 710000 18                 TRA     s:14768
        18 002543   002566 710000 18                 TRA     s:14770
        18 002544   002574 710000 18                 TRA     s:14773

  14760 18 002545   000002 450000 xsym               STZ     O1COM+2
        18 002546   002602 710000 18                 TRA     s:14778

  14762 18 002547   000001 235007                    LDA     1,DL
        18 002550   000002 755000 xsym               STA     O1COM+2

  14763 18 002551   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002552   000003 035007                    ADLA    3,DL
        18 002553   200021 755100                    STA     FILLER_SIZE,,AUTO
        18 002554   002602 710000 18                 TRA     s:14778

  14765 18 002555   000002 235007                    LDA     2,DL
        18 002556   000002 755000 xsym               STA     O1COM+2

  14766 18 002557   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002560   000006 035007                    ADLA    6,DL
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:149  
        18 002561   200021 755100                    STA     FILLER_SIZE,,AUTO
        18 002562   002602 710000 18                 TRA     s:14778

  14768 18 002563   000002 235007                    LDA     2,DL
        18 002564   000002 755000 xsym               STA     O1COM+2
        18 002565   002602 710000 18                 TRA     s:14778

  14770 18 002566   000003 235007                    LDA     3,DL
        18 002567   000002 755000 xsym               STA     O1COM+2

  14771 18 002570   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002571   000003 035007                    ADLA    3,DL
        18 002572   200021 755100                    STA     FILLER_SIZE,,AUTO
        18 002573   002602 710000 18                 TRA     s:14778

  14773 18 002574   000001 054000 xsym               AOS     O1COM+1

  14774 18 002575   000002 450000 xsym               STZ     O1COM+2

  14775 18 002576   000003 450000 xsym               STZ     O1COM+3

  14776 18 002577   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 002600   000006 036007                    ADLQ    6,DL
        18 002601   200021 756100                    STQ     FILLER_SIZE,,AUTO

  14778 18 002602   000003 450000 xsym               STZ     O1COM+3

  14779 18 002603   002625 710000 18                 TRA     s:14790

  14780 18 002604   000003 235000 xsym               LDA     O1COM+3
        18 002605   000001 115007                    CMPA    1,DL
        18 002606   002625 601000 18                 TNZ     s:14790

  14782 18 002607   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002610   000004 035007                    ADLA    4,DL
        18 002611   200021 755100                    STA     FILLER_SIZE,,AUTO

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:150  
  14783 18 002612   000002 235000 xsym               LDA     O1COM+2
        18 002613   000001 035007                    ADLA    1,DL
        18 002614   000002 755000 xsym               STA     O1COM+2

  14784 18 002615   000003 450000 xsym               STZ     O1COM+3

  14785 18 002616   000002 236000 xsym               LDQ     O1COM+2
        18 002617   000002 772000                    QRL     2
        18 002620   000001 036000 xsym               ADLQ    O1COM+1
        18 002621   000001 756000 xsym               STQ     O1COM+1

  14786 18 002622   000002 236000 xsym               LDQ     O1COM+2
        18 002623   000003 376007                    ANQ     3,DL
        18 002624   000002 756000 xsym               STQ     O1COM+2

     1051    14790   11                                  EXIT ALIGN_VAR_OFF ;

  14790 18 002625   004105 710000 18                 TRA     s:15210

     1052    14791   11                                END ;
     1053    14792   10                              SUBJECT_QLT$ = SUBJECT_QLT$ -> QLT.BROTHER ;

  14792 18 002626   000002 236100                    LDQ     2,,PR0
        18 002627   200024 756100                    STQ     SUBJECT_QLT$,,AUTO

     1054    14793   10                            END ; /* UNTIL */

  14793 18 002630   000000 116000 19                 CMPQ    0
        18 002631   002636 600000 18                 TZE     s:14797
        18 002632   200024 470500                    LDP0    SUBJECT_QLT$,,AUTO
        18 002633   000004 473500                    LDP3    4,,PR0
        18 002634   300003 430100                    FSZN    3,,PR3
        18 002635   002522 604000 18                 TMI     s:14751

     1055    14794    9                          END ;

     1056    14795                             %NEXT_HALF_BYTE;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:151  

  14797 18 002636   001337 234000 xsym               SZN     O1COM+735
        18 002637   004105 605000 18                 TPL     s:15210

  14798 18 002640   001336 235000 xsym               LDA     O1COM+734
        18 002641   000006 115007                    CMPA    6,DL
        18 002642   002644 602005 18                 TNC     s:14798+4,AL
        18 002643   004105 710000 18                 TRA     s:15210
        18 002644   002652 710000 18                 TRA     s:14800
        18 002645   002655 710000 18                 TRA     s:14803
        18 002646   002664 710000 18                 TRA     s:14807
        18 002647   002673 710000 18                 TRA     s:14811
        18 002650   002677 710000 18                 TRA     s:14814
        18 002651   002706 710000 18                 TRA     s:14818

  14800 18 002652   000002 450000 xsym               STZ     O1COM+2

  14801 18 002653   000003 450000 xsym               STZ     O1COM+3
        18 002654   004105 710000 18                 TRA     s:15210

  14803 18 002655   000001 236007                    LDQ     1,DL
        18 002656   000002 756000 xsym               STQ     O1COM+2

  14804 18 002657   000003 450000 xsym               STZ     O1COM+3

  14805 18 002660   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002661   000003 035007                    ADLA    3,DL
        18 002662   200021 755100                    STA     FILLER_SIZE,,AUTO
        18 002663   004105 710000 18                 TRA     s:15210

  14807 18 002664   000001 236007                    LDQ     1,DL
        18 002665   000002 756000 xsym               STQ     O1COM+2

  14808 18 002666   000003 756000 xsym               STQ     O1COM+3

  14809 18 002667   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002670   000002 035007                    ADLA    2,DL
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:152  
        18 002671   200021 755100                    STA     FILLER_SIZE,,AUTO
        18 002672   004105 710000 18                 TRA     s:15210

  14811 18 002673   000002 236007                    LDQ     2,DL
        18 002674   000002 756000 xsym               STQ     O1COM+2

  14812 18 002675   000003 450000 xsym               STZ     O1COM+3
        18 002676   004105 710000 18                 TRA     s:15210

  14814 18 002677   000003 236007                    LDQ     3,DL
        18 002700   000002 756000 xsym               STQ     O1COM+2

  14815 18 002701   000003 450000 xsym               STZ     O1COM+3

  14816 18 002702   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002703   000003 035007                    ADLA    3,DL
        18 002704   200021 755100                    STA     FILLER_SIZE,,AUTO
        18 002705   004105 710000 18                 TRA     s:15210

  14818 18 002706   000003 236007                    LDQ     3,DL
        18 002707   000002 756000 xsym               STQ     O1COM+2

  14819 18 002710   000001 235007                    LDA     1,DL
        18 002711   000003 755000 xsym               STA     O1COM+3

  14820 18 002712   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002713   000002 035007                    ADLA    2,DL
        18 002714   200021 755100                    STA     FILLER_SIZE,,AUTO

     1057    14824    8                      END ;

  14824 18 002715   004105 710000 18                 TRA     s:15210

     1058    14825    7                    ELSE
     1059    14826    8                      DO ;

     1060    14827                             %NEXT_BYTE ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:153  

  14829 18 002716   001337 234000 xsym               SZN     O1COM+735
        18 002717   002771 605000 18                 TPL     s:14853

  14831 18 002720   001336 235000 xsym               LDA     O1COM+734
        18 002721   000006 115007                    CMPA    6,DL
        18 002722   002724 602005 18                 TNC     s:14831+4,AL
        18 002723   002767 710000 18                 TRA     s:14851
        18 002724   002732 710000 18                 TRA     s:14833
        18 002725   002734 710000 18                 TRA     s:14835
        18 002726   002742 710000 18                 TRA     s:14838
        18 002727   002750 710000 18                 TRA     s:14841
        18 002730   002753 710000 18                 TRA     s:14843
        18 002731   002761 710000 18                 TRA     s:14846

  14833 18 002732   000002 450000 xsym               STZ     O1COM+2
        18 002733   002767 710000 18                 TRA     s:14851

  14835 18 002734   000001 235007                    LDA     1,DL
        18 002735   000002 755000 xsym               STA     O1COM+2

  14836 18 002736   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 002737   000003 036007                    ADLQ    3,DL
        18 002740   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 002741   002767 710000 18                 TRA     s:14851

  14838 18 002742   000002 235007                    LDA     2,DL
        18 002743   000002 755000 xsym               STA     O1COM+2

  14839 18 002744   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 002745   000006 036007                    ADLQ    6,DL
        18 002746   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 002747   002767 710000 18                 TRA     s:14851

  14841 18 002750   000002 235007                    LDA     2,DL
        18 002751   000002 755000 xsym               STA     O1COM+2
        18 002752   002767 710000 18                 TRA     s:14851
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:154  

  14843 18 002753   000003 235007                    LDA     3,DL
        18 002754   000002 755000 xsym               STA     O1COM+2

  14844 18 002755   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 002756   000003 036007                    ADLQ    3,DL
        18 002757   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 002760   002767 710000 18                 TRA     s:14851

  14846 18 002761   000001 054000 xsym               AOS     O1COM+1

  14847 18 002762   000002 450000 xsym               STZ     O1COM+2

  14848 18 002763   000003 450000 xsym               STZ     O1COM+3

  14849 18 002764   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 002765   000006 036007                    ADLQ    6,DL
        18 002766   200021 756100                    STQ     FILLER_SIZE,,AUTO

  14851 18 002767   000003 450000 xsym               STZ     O1COM+3

  14852 18 002770   004105 710000 18                 TRA     s:15210

  14853 18 002771   000003 235000 xsym               LDA     O1COM+3
        18 002772   000001 115007                    CMPA    1,DL
        18 002773   004105 601000 18                 TNZ     s:15210

  14855 18 002774   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 002775   000004 035007                    ADLA    4,DL
        18 002776   200021 755100                    STA     FILLER_SIZE,,AUTO

  14856 18 002777   000002 235000 xsym               LDA     O1COM+2
        18 003000   000001 035007                    ADLA    1,DL
        18 003001   000002 755000 xsym               STA     O1COM+2

  14857 18 003002   000003 450000 xsym               STZ     O1COM+3

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:155  
  14858 18 003003   000002 236000 xsym               LDQ     O1COM+2
        18 003004   000002 772000                    QRL     2
        18 003005   000001 036000 xsym               ADLQ    O1COM+1
        18 003006   000001 756000 xsym               STQ     O1COM+1

  14859 18 003007   000002 236000 xsym               LDQ     O1COM+2
        18 003010   000003 376007                    ANQ     3,DL
        18 003011   000002 756000 xsym               STQ     O1COM+2

     1061    14863    8                      END ;

  14863 18 003012   004105 710000 18                 TRA     s:15210

     1062    14864
     1063    14865    7                  CASE (%TYI,%TYR,%TYP) ; /* COMP-6,COMP-11, COMP-13, POINTER*/

     1064    14866                         %NEXT_WORD ;

  14868 18 003013   001337 234000 xsym               SZN     O1COM+735
        18 003014   003027 605000 18                 TPL     s:14877

  14870 18 003015   001336 235000 xsym               LDA     O1COM+734
        18 003016   003053 600000 18                 TZE     s:14883

  14872 18 003017   001336 236000 xsym               LDQ     O1COM+734
        18 003020   000000 402000 17                 MPY     NEG6
        18 003021   200021 036100                    ADLQ    FILLER_SIZE,,AUTO
        18 003022   000044 036007                    ADLQ    36,DL
        18 003023   200021 756100                    STQ     FILLER_SIZE,,AUTO

  14873 18 003024   000001 054000 xsym               AOS     O1COM+1

  14874 18 003025   001336 450000 xsym               STZ     O1COM+734

  14876 18 003026   003053 710000 18                 TRA     s:14883

  14877 18 003027   000002 235000 xsym               LDA     O1COM+2
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:156  
        18 003030   003033 601000 18                 TNZ     s:14879
        18 003031   000003 236000 xsym               LDQ     O1COM+3
        18 003032   003053 600000 18                 TZE     s:14883

  14879 18 003033   000003 236000 xsym               LDQ     O1COM+3
        18 003034   000005 402007                    MPY     5,DL
        18 003035   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 003036   000002 236000 xsym               LDQ     O1COM+2
        18 003037   000011 402007                    MPY     9,DL
        18 003040   200072 036100                    ADLQ    NEW_DEP$+1,,AUTO
        18 003041   000000 620006                    EAX0    0,QL
        18 003042   200017 740100                    STX0    DIGIT_POS,,AUTO

  14880 18 003043   200017 235100                    LDA     DIGIT_POS,,AUTO
        18 003044   000022 731000                    ARS     18
        18 003045   200072 755100                    STA     NEW_DEP$+1,,AUTO
        18 003046   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003047   200072 136100                    SBLQ    NEW_DEP$+1,,AUTO
        18 003050   000044 036007                    ADLQ    36,DL
        18 003051   200021 756100                    STQ     FILLER_SIZE,,AUTO

  14881 18 003052   000001 054000 xsym               AOS     O1COM+1

  14883 18 003053   000002 450000 xsym               STZ     O1COM+2

  14884 18 003054   000003 450000 xsym               STZ     O1COM+3

  14885 18 003055   200004 471500                    LDP1    @MAX_BOUND,,AUTO
        18 003056   100000 220100                    LDX0    0,,PR1
        18 003057   000004 100003                    CMPX0   4,DU
        18 003060   004105 605000 18                 TPL     s:15210

  14886 18 003061   000004 221003                    LDX1    4,DU
        18 003062   100000 741100                    STX1    0,,PR1

  14887 18 003063   004105 710000 18                 TRA     s:15210

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:157  
     1065    14889
     1066    14890    7                  CASE (%TYB,%TYC) ; /* GBCD */

     1067    14891    7                    IF SYM$ -> VARIABLE.B.ELEMENTARY THEN

  14891 18 003064   200010 473500                    LDP3    SYM$,,AUTO
        18 003065   300003 236100                    LDQ     3,,PR3
        18 003066   010000 316003                    CANQ    4096,DU
        18 003067   004105 600000 18                 TZE     s:15210

     1068    14892                           %NEXT_CHAR ;

  14894 18 003070   001337 234000 xsym               SZN     O1COM+735
        18 003071   004105 604000 18                 TMI     s:15210

  14896 18 003072   000002 236000 xsym               LDQ     O1COM+2
        18 003073   000001 736000                    QLS     1
        18 003074   000003 036000 xsym               ADLQ    O1COM+3
        18 003075   000000 621006                    EAX1    0,QL
        18 003076   200017 741100                    STX1    DIGIT_POS,,AUTO

  14897 18 003077   000010 101003                    CMPX1   8,DU
        18 003100   003102 602011 18                 TNC     s:14897+3,X1
        18 003101   004105 710000 18                 TRA     s:15210
        18 003102   003112 710000 18                 TRA     s:14899
        18 003103   003114 710000 18                 TRA     s:14901
        18 003104   003122 710000 18                 TRA     s:14904
        18 003105   003130 710000 18                 TRA     s:14907
        18 003106   003136 710000 18                 TRA     s:14910
        18 003107   003141 710000 18                 TRA     s:14912
        18 003110   003147 710000 18                 TRA     s:14915
        18 003111   003155 710000 18                 TRA     s:14918

  14899 18 003112   001336 450000 xsym               STZ     O1COM+734
        18 003113   004105 710000 18                 TRA     s:15210

  14901 18 003114   000001 235007                    LDA     1,DL
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:158  
        18 003115   001336 755000 xsym               STA     O1COM+734

  14902 18 003116   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003117   000001 036007                    ADLQ    1,DL
        18 003120   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003121   004105 710000 18                 TRA     s:15210

  14904 18 003122   000002 235007                    LDA     2,DL
        18 003123   001336 755000 xsym               STA     O1COM+734

  14905 18 003124   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003125   000003 036007                    ADLQ    3,DL
        18 003126   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003127   004105 710000 18                 TRA     s:15210

  14907 18 003130   000003 235007                    LDA     3,DL
        18 003131   001336 755000 xsym               STA     O1COM+734

  14908 18 003132   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003133   000004 036007                    ADLQ    4,DL
        18 003134   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003135   004105 710000 18                 TRA     s:15210

  14910 18 003136   000003 235007                    LDA     3,DL
        18 003137   001336 755000 xsym               STA     O1COM+734
        18 003140   004105 710000 18                 TRA     s:15210

  14912 18 003141   000004 235007                    LDA     4,DL
        18 003142   001336 755000 xsym               STA     O1COM+734

  14913 18 003143   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003144   000001 036007                    ADLQ    1,DL
        18 003145   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003146   004105 710000 18                 TRA     s:15210

  14915 18 003147   000005 235007                    LDA     5,DL
        18 003150   001336 755000 xsym               STA     O1COM+734
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:159  

  14916 18 003151   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003152   000003 036007                    ADLQ    3,DL
        18 003153   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003154   004105 710000 18                 TRA     s:15210

  14918 18 003155   000001 054000 xsym               AOS     O1COM+1

  14919 18 003156   001336 450000 xsym               STZ     O1COM+734

  14920 18 003157   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 003160   000004 035007                    ADLA    4,DL
        18 003161   200021 755100                    STA     FILLER_SIZE,,AUTO

  14923 18 003162   004105 710000 18                 TRA     s:15210

     1069    14925
     1070    14926    7                  CASE (%TYJ) ; /* COMP-1 */

     1071    14927    7                    IF FIRST_ELEM$ -> QLT.B.SYNC THEN

  14927 18 003163   000000 236100                    LDQ     0,,PR0
        18 003164   200000 316007                    CANQ    65536,DL
        18 003165   003277 600000 18                 TZE     s:14967

     1072    14928                           %NEXT_HALF_WORD ;

  14930 18 003166   001337 234000 xsym               SZN     O1COM+735
        18 003167   003222 605000 18                 TPL     s:14944

  14931 18 003170   001336 235000 xsym               LDA     O1COM+734
        18 003171   000006 115007                    CMPA    6,DL
        18 003172   003174 602005 18                 TNC     s:14931+4,AL
        18 003173   003270 710000 18                 TRA     s:14960
        18 003174   003221 710000 18                 TRA     s:14941
        18 003175   003202 710000 18                 TRA     s:14935
        18 003176   003202 710000 18                 TRA     s:14935
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:160  
        18 003177   003221 710000 18                 TRA     s:14941
        18 003200   003212 710000 18                 TRA     s:14938
        18 003201   003212 710000 18                 TRA     s:14938

  14935 18 003202   001336 236000 xsym               LDQ     O1COM+734
        18 003203   000000 402000 17                 MPY     NEG6
        18 003204   200021 036100                    ADLQ    FILLER_SIZE,,AUTO
        18 003205   000022 036007                    ADLQ    18,DL
        18 003206   200021 756100                    STQ     FILLER_SIZE,,AUTO

  14936 18 003207   000003 235007                    LDA     3,DL
        18 003210   001336 755000 xsym               STA     O1COM+734
        18 003211   003270 710000 18                 TRA     s:14960

  14938 18 003212   001336 236000 xsym               LDQ     O1COM+734
        18 003213   000000 402000 17                 MPY     NEG6
        18 003214   200021 036100                    ADLQ    FILLER_SIZE,,AUTO
        18 003215   000044 036007                    ADLQ    36,DL
        18 003216   200021 756100                    STQ     FILLER_SIZE,,AUTO

  14939 18 003217   001336 450000 xsym               STZ     O1COM+734

  14940 18 003220   000001 054000 xsym               AOS     O1COM+1

  14941 18 003221   003270 710000 18                 TRA     s:14960

  14944 18 003222   000002 236000 xsym               LDQ     O1COM+2
        18 003223   000001 736000                    QLS     1
        18 003224   000003 036000 xsym               ADLQ    O1COM+3
        18 003225   000000 621006                    EAX1    0,QL
        18 003226   200017 741100                    STX1    DIGIT_POS,,AUTO

  14945 18 003227   000003 236000 xsym               LDQ     O1COM+3
        18 003230   000005 402007                    MPY     5,DL
        18 003231   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 003232   000002 236000 xsym               LDQ     O1COM+2
        18 003233   000011 402007                    MPY     9,DL
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:161  
        18 003234   200072 036100                    ADLQ    NEW_DEP$+1,,AUTO
        18 003235   200020 756100                    STQ     DIGIT_POS_IN_BITS,,AUTO

  14946 18 003236   000010 101003                    CMPX1   8,DU
        18 003237   003241 602011 18                 TNC     s:14946+3,X1
        18 003240   003270 710000 18                 TRA     s:14960
        18 003241   003270 710000 18                 TRA     s:14960
        18 003242   003251 710000 18                 TRA     s:14950
        18 003243   003251 710000 18                 TRA     s:14950
        18 003244   003251 710000 18                 TRA     s:14950
        18 003245   003270 710000 18                 TRA     s:14960
        18 003246   003261 710000 18                 TRA     s:14954
        18 003247   003261 710000 18                 TRA     s:14954
        18 003250   003261 710000 18                 TRA     s:14954

  14950 18 003251   000002 235007                    LDA     2,DL
        18 003252   000002 755000 xsym               STA     O1COM+2

  14951 18 003253   000003 450000 xsym               STZ     O1COM+3

  14952 18 003254   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003255   200020 136100                    SBLQ    DIGIT_POS_IN_BITS,,AUTO
        18 003256   000022 036007                    ADLQ    18,DL
        18 003257   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003260   003270 710000 18                 TRA     s:14960

  14954 18 003261   000001 054000 xsym               AOS     O1COM+1

  14955 18 003262   000002 450000 xsym               STZ     O1COM+2

  14956 18 003263   000003 450000 xsym               STZ     O1COM+3

  14957 18 003264   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003265   200020 136100                    SBLQ    DIGIT_POS_IN_BITS,,AUTO
        18 003266   000044 036007                    ADLQ    36,DL
        18 003267   200021 756100                    STQ     FILLER_SIZE,,AUTO

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:162  
  14960 18 003270   200004 471500                    LDP1    @MAX_BOUND,,AUTO
        18 003271   100000 220100                    LDX0    0,,PR1
        18 003272   000002 100003                    CMPX0   2,DU
        18 003273   004105 605000 18                 TPL     s:15210

  14961 18 003274   000002 221003                    LDX1    2,DU
        18 003275   100000 741100                    STX1    0,,PR1

  14962 18 003276   004105 710000 18                 TRA     s:15210

     1073    14964    7                    ELSE /* NON-SYNCHRONIZED */
     1074    14965                           %NEXT_BYTE ;

  14967 18 003277   001337 234000 xsym               SZN     O1COM+735
        18 003300   003352 605000 18                 TPL     s:14991

  14969 18 003301   001336 235000 xsym               LDA     O1COM+734
        18 003302   000006 115007                    CMPA    6,DL
        18 003303   003305 602005 18                 TNC     s:14969+4,AL
        18 003304   003350 710000 18                 TRA     s:14989
        18 003305   003313 710000 18                 TRA     s:14971
        18 003306   003315 710000 18                 TRA     s:14973
        18 003307   003323 710000 18                 TRA     s:14976
        18 003310   003331 710000 18                 TRA     s:14979
        18 003311   003334 710000 18                 TRA     s:14981
        18 003312   003342 710000 18                 TRA     s:14984

  14971 18 003313   000002 450000 xsym               STZ     O1COM+2
        18 003314   003350 710000 18                 TRA     s:14989

  14973 18 003315   000001 235007                    LDA     1,DL
        18 003316   000002 755000 xsym               STA     O1COM+2

  14974 18 003317   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003320   000003 036007                    ADLQ    3,DL
        18 003321   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003322   003350 710000 18                 TRA     s:14989
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:163  

  14976 18 003323   000002 235007                    LDA     2,DL
        18 003324   000002 755000 xsym               STA     O1COM+2

  14977 18 003325   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003326   000006 036007                    ADLQ    6,DL
        18 003327   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003330   003350 710000 18                 TRA     s:14989

  14979 18 003331   000002 235007                    LDA     2,DL
        18 003332   000002 755000 xsym               STA     O1COM+2
        18 003333   003350 710000 18                 TRA     s:14989

  14981 18 003334   000003 235007                    LDA     3,DL
        18 003335   000002 755000 xsym               STA     O1COM+2

  14982 18 003336   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003337   000003 036007                    ADLQ    3,DL
        18 003340   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003341   003350 710000 18                 TRA     s:14989

  14984 18 003342   000001 054000 xsym               AOS     O1COM+1

  14985 18 003343   000002 450000 xsym               STZ     O1COM+2

  14986 18 003344   000003 450000 xsym               STZ     O1COM+3

  14987 18 003345   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003346   000006 036007                    ADLQ    6,DL
        18 003347   200021 756100                    STQ     FILLER_SIZE,,AUTO

  14989 18 003350   000003 450000 xsym               STZ     O1COM+3

  14990 18 003351   004105 710000 18                 TRA     s:15210

  14991 18 003352   000003 235000 xsym               LDA     O1COM+3
        18 003353   000001 115007                    CMPA    1,DL
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:164  
        18 003354   004105 601000 18                 TNZ     s:15210

  14993 18 003355   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 003356   000004 035007                    ADLA    4,DL
        18 003357   200021 755100                    STA     FILLER_SIZE,,AUTO

  14994 18 003360   000002 235000 xsym               LDA     O1COM+2
        18 003361   000001 035007                    ADLA    1,DL
        18 003362   000002 755000 xsym               STA     O1COM+2

  14995 18 003363   000003 450000 xsym               STZ     O1COM+3

  14996 18 003364   000002 236000 xsym               LDQ     O1COM+2
        18 003365   000002 772000                    QRL     2
        18 003366   000001 036000 xsym               ADLQ    O1COM+1
        18 003367   000001 756000 xsym               STQ     O1COM+1

  14997 18 003370   000002 236000 xsym               LDQ     O1COM+2
        18 003371   000003 376007                    ANQ     3,DL
        18 003372   000002 756000 xsym               STQ     O1COM+2

  14999 18 003373   004105 710000 18                 TRA     s:15210

     1075    15001
     1076    15002    7                  CASE (%TYK) ; /* COMP-2 */

     1077    15003    7                    IF FIRST_ELEM$ -> QLT.B.SYNC THEN

  15003 18 003374   000000 236100                    LDQ     0,,PR0
        18 003375   200000 316007                    CANQ    65536,DL
        18 003376   003450 600000 18                 TZE     s:15030

     1078    15004                           %NEXT_WORD ;

  15006 18 003377   001337 234000 xsym               SZN     O1COM+735
        18 003400   003413 605000 18                 TPL     s:15015

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:165  
  15008 18 003401   001336 235000 xsym               LDA     O1COM+734
        18 003402   003437 600000 18                 TZE     s:15021

  15010 18 003403   001336 236000 xsym               LDQ     O1COM+734
        18 003404   000000 402000 17                 MPY     NEG6
        18 003405   200021 036100                    ADLQ    FILLER_SIZE,,AUTO
        18 003406   000044 036007                    ADLQ    36,DL
        18 003407   200021 756100                    STQ     FILLER_SIZE,,AUTO

  15011 18 003410   000001 054000 xsym               AOS     O1COM+1

  15012 18 003411   001336 450000 xsym               STZ     O1COM+734

  15014 18 003412   003437 710000 18                 TRA     s:15021

  15015 18 003413   000002 235000 xsym               LDA     O1COM+2
        18 003414   003417 601000 18                 TNZ     s:15017
        18 003415   000003 235000 xsym               LDA     O1COM+3
        18 003416   003437 600000 18                 TZE     s:15021

  15017 18 003417   000003 236000 xsym               LDQ     O1COM+3
        18 003420   000005 402007                    MPY     5,DL
        18 003421   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 003422   000002 236000 xsym               LDQ     O1COM+2
        18 003423   000011 402007                    MPY     9,DL
        18 003424   200072 036100                    ADLQ    NEW_DEP$+1,,AUTO
        18 003425   000000 620006                    EAX0    0,QL
        18 003426   200017 740100                    STX0    DIGIT_POS,,AUTO

  15018 18 003427   200017 235100                    LDA     DIGIT_POS,,AUTO
        18 003430   000022 731000                    ARS     18
        18 003431   200072 755100                    STA     NEW_DEP$+1,,AUTO
        18 003432   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003433   200072 136100                    SBLQ    NEW_DEP$+1,,AUTO
        18 003434   000044 036007                    ADLQ    36,DL
        18 003435   200021 756100                    STQ     FILLER_SIZE,,AUTO

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:166  
  15019 18 003436   000001 054000 xsym               AOS     O1COM+1

  15021 18 003437   000002 450000 xsym               STZ     O1COM+2

  15022 18 003440   000003 450000 xsym               STZ     O1COM+3

  15023 18 003441   200004 471500                    LDP1    @MAX_BOUND,,AUTO
        18 003442   100000 220100                    LDX0    0,,PR1
        18 003443   000004 100003                    CMPX0   4,DU
        18 003444   004105 605000 18                 TPL     s:15210

  15024 18 003445   000004 221003                    LDX1    4,DU
        18 003446   100000 741100                    STX1    0,,PR1

  15025 18 003447   004105 710000 18                 TRA     s:15210

     1079    15027    7                    ELSE /* NON-SYNCHRONIZED */
     1080    15028                           %NEXT_BYTE ;

  15030 18 003450   001337 234000 xsym               SZN     O1COM+735
        18 003451   003523 605000 18                 TPL     s:15054

  15032 18 003452   001336 235000 xsym               LDA     O1COM+734
        18 003453   000006 115007                    CMPA    6,DL
        18 003454   003456 602005 18                 TNC     s:15032+4,AL
        18 003455   003521 710000 18                 TRA     s:15052
        18 003456   003464 710000 18                 TRA     s:15034
        18 003457   003466 710000 18                 TRA     s:15036
        18 003460   003474 710000 18                 TRA     s:15039
        18 003461   003502 710000 18                 TRA     s:15042
        18 003462   003505 710000 18                 TRA     s:15044
        18 003463   003513 710000 18                 TRA     s:15047

  15034 18 003464   000002 450000 xsym               STZ     O1COM+2
        18 003465   003521 710000 18                 TRA     s:15052

  15036 18 003466   000001 235007                    LDA     1,DL
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:167  
        18 003467   000002 755000 xsym               STA     O1COM+2

  15037 18 003470   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003471   000003 036007                    ADLQ    3,DL
        18 003472   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003473   003521 710000 18                 TRA     s:15052

  15039 18 003474   000002 235007                    LDA     2,DL
        18 003475   000002 755000 xsym               STA     O1COM+2

  15040 18 003476   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003477   000006 036007                    ADLQ    6,DL
        18 003500   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003501   003521 710000 18                 TRA     s:15052

  15042 18 003502   000002 235007                    LDA     2,DL
        18 003503   000002 755000 xsym               STA     O1COM+2
        18 003504   003521 710000 18                 TRA     s:15052

  15044 18 003505   000003 235007                    LDA     3,DL
        18 003506   000002 755000 xsym               STA     O1COM+2

  15045 18 003507   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003510   000003 036007                    ADLQ    3,DL
        18 003511   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003512   003521 710000 18                 TRA     s:15052

  15047 18 003513   000001 054000 xsym               AOS     O1COM+1

  15048 18 003514   000002 450000 xsym               STZ     O1COM+2

  15049 18 003515   000003 450000 xsym               STZ     O1COM+3

  15050 18 003516   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003517   000006 036007                    ADLQ    6,DL
        18 003520   200021 756100                    STQ     FILLER_SIZE,,AUTO

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:168  
  15052 18 003521   000003 450000 xsym               STZ     O1COM+3

  15053 18 003522   004105 710000 18                 TRA     s:15210

  15054 18 003523   000003 235000 xsym               LDA     O1COM+3
        18 003524   000001 115007                    CMPA    1,DL
        18 003525   004105 601000 18                 TNZ     s:15210

  15056 18 003526   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 003527   000004 035007                    ADLA    4,DL
        18 003530   200021 755100                    STA     FILLER_SIZE,,AUTO

  15057 18 003531   000002 235000 xsym               LDA     O1COM+2
        18 003532   000001 035007                    ADLA    1,DL
        18 003533   000002 755000 xsym               STA     O1COM+2

  15058 18 003534   000003 450000 xsym               STZ     O1COM+3

  15059 18 003535   000002 236000 xsym               LDQ     O1COM+2
        18 003536   000002 772000                    QRL     2
        18 003537   000001 036000 xsym               ADLQ    O1COM+1
        18 003540   000001 756000 xsym               STQ     O1COM+1

  15060 18 003541   000002 236000 xsym               LDQ     O1COM+2
        18 003542   000003 376007                    ANQ     3,DL
        18 003543   000002 756000 xsym               STQ     O1COM+2

  15062 18 003544   004105 710000 18                 TRA     s:15210

     1081    15064
     1082    15065    7                  CASE (%TYQ,%TYX) ; /* COMP-12, COMP-14, INDEX */

     1083    15066                         %NEXT_DOUBLE_WORD ;

  15068 18 003545   001337 234000 xsym               SZN     O1COM+735
        18 003546   003561 605000 18                 TPL     s:15077

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:169  
  15070 18 003547   001336 235000 xsym               LDA     O1COM+734
        18 003550   003605 600000 18                 TZE     s:15083

  15072 18 003551   001336 236000 xsym               LDQ     O1COM+734
        18 003552   000000 402000 17                 MPY     NEG6
        18 003553   200021 036100                    ADLQ    FILLER_SIZE,,AUTO
        18 003554   000044 036007                    ADLQ    36,DL
        18 003555   200021 756100                    STQ     FILLER_SIZE,,AUTO

  15073 18 003556   000001 054000 xsym               AOS     O1COM+1

  15074 18 003557   001336 450000 xsym               STZ     O1COM+734

  15076 18 003560   003605 710000 18                 TRA     s:15083

  15077 18 003561   000002 235000 xsym               LDA     O1COM+2
        18 003562   003565 601000 18                 TNZ     s:15079
        18 003563   000003 236000 xsym               LDQ     O1COM+3
        18 003564   003605 600000 18                 TZE     s:15083

  15079 18 003565   000003 236000 xsym               LDQ     O1COM+3
        18 003566   000005 402007                    MPY     5,DL
        18 003567   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 003570   000002 236000 xsym               LDQ     O1COM+2
        18 003571   000011 402007                    MPY     9,DL
        18 003572   200072 036100                    ADLQ    NEW_DEP$+1,,AUTO
        18 003573   000000 620006                    EAX0    0,QL
        18 003574   200017 740100                    STX0    DIGIT_POS,,AUTO

  15080 18 003575   200017 235100                    LDA     DIGIT_POS,,AUTO
        18 003576   000022 731000                    ARS     18
        18 003577   200072 755100                    STA     NEW_DEP$+1,,AUTO
        18 003600   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003601   200072 136100                    SBLQ    NEW_DEP$+1,,AUTO
        18 003602   000044 036007                    ADLQ    36,DL
        18 003603   200021 756100                    STQ     FILLER_SIZE,,AUTO

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:170  
  15081 18 003604   000001 054000 xsym               AOS     O1COM+1

  15083 18 003605   000002 450000 xsym               STZ     O1COM+2

  15084 18 003606   000003 450000 xsym               STZ     O1COM+3

  15085 18 003607   000001 236000 xsym               LDQ     O1COM+1
        18 003610   000002 506007                    DIV     2,DL
        18 003611   000044 733000                    LRS     36
        18 003612   000001 116007                    CMPQ    1,DL
        18 003613   003620 601000 18                 TNZ     s:15090

  15087 18 003614   000001 054000 xsym               AOS     O1COM+1

  15088 18 003615   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 003616   000044 035007                    ADLA    36,DL
        18 003617   200021 755100                    STA     FILLER_SIZE,,AUTO

  15090 18 003620   000010 220003                    LDX0    8,DU
        18 003621   200004 471500                    LDP1    @MAX_BOUND,,AUTO
        18 003622   100000 740100                    STX0    0,,PR1

  15091 18 003623   004105 710000 18                 TRA     s:15210

     1084    15093
     1085    15094    7                  CASE (%TYH) ; /* COMP-7 */

     1086    15095    7                    IF FIRST_ELEM$ -> QLT.B.SYNC THEN

  15095 18 003624   000000 236100                    LDQ     0,,PR0
        18 003625   200000 316007                    CANQ    65536,DL
        18 003626   003700 600000 18                 TZE     s:15122

     1087    15096                           %NEXT_WORD ;

  15098 18 003627   001337 234000 xsym               SZN     O1COM+735
        18 003630   003643 605000 18                 TPL     s:15107
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:171  

  15100 18 003631   001336 235000 xsym               LDA     O1COM+734
        18 003632   003667 600000 18                 TZE     s:15113

  15102 18 003633   001336 236000 xsym               LDQ     O1COM+734
        18 003634   000000 402000 17                 MPY     NEG6
        18 003635   200021 036100                    ADLQ    FILLER_SIZE,,AUTO
        18 003636   000044 036007                    ADLQ    36,DL
        18 003637   200021 756100                    STQ     FILLER_SIZE,,AUTO

  15103 18 003640   000001 054000 xsym               AOS     O1COM+1

  15104 18 003641   001336 450000 xsym               STZ     O1COM+734

  15106 18 003642   003667 710000 18                 TRA     s:15113

  15107 18 003643   000002 235000 xsym               LDA     O1COM+2
        18 003644   003647 601000 18                 TNZ     s:15109
        18 003645   000003 235000 xsym               LDA     O1COM+3
        18 003646   003667 600000 18                 TZE     s:15113

  15109 18 003647   000003 236000 xsym               LDQ     O1COM+3
        18 003650   000005 402007                    MPY     5,DL
        18 003651   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 003652   000002 236000 xsym               LDQ     O1COM+2
        18 003653   000011 402007                    MPY     9,DL
        18 003654   200072 036100                    ADLQ    NEW_DEP$+1,,AUTO
        18 003655   000000 620006                    EAX0    0,QL
        18 003656   200017 740100                    STX0    DIGIT_POS,,AUTO

  15110 18 003657   200017 235100                    LDA     DIGIT_POS,,AUTO
        18 003660   000022 731000                    ARS     18
        18 003661   200072 755100                    STA     NEW_DEP$+1,,AUTO
        18 003662   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003663   200072 136100                    SBLQ    NEW_DEP$+1,,AUTO
        18 003664   000044 036007                    ADLQ    36,DL
        18 003665   200021 756100                    STQ     FILLER_SIZE,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:172  

  15111 18 003666   000001 054000 xsym               AOS     O1COM+1

  15113 18 003667   000002 450000 xsym               STZ     O1COM+2

  15114 18 003670   000003 450000 xsym               STZ     O1COM+3

  15115 18 003671   200004 471500                    LDP1    @MAX_BOUND,,AUTO
        18 003672   100000 220100                    LDX0    0,,PR1
        18 003673   000004 100003                    CMPX0   4,DU
        18 003674   004105 605000 18                 TPL     s:15210

  15116 18 003675   000004 221003                    LDX1    4,DU
        18 003676   100000 741100                    STX1    0,,PR1

  15117 18 003677   004105 710000 18                 TRA     s:15210

     1088    15119    7                    ELSE /* NON-SYNCHRONIZED */
     1089    15120                           %NEXT_HALF_WORD ;

  15122 18 003700   001337 234000 xsym               SZN     O1COM+735
        18 003701   003734 605000 18                 TPL     s:15136

  15123 18 003702   001336 235000 xsym               LDA     O1COM+734
        18 003703   000006 115007                    CMPA    6,DL
        18 003704   003706 602005 18                 TNC     s:15123+4,AL
        18 003705   004002 710000 18                 TRA     s:15152
        18 003706   003733 710000 18                 TRA     s:15133
        18 003707   003714 710000 18                 TRA     s:15127
        18 003710   003714 710000 18                 TRA     s:15127
        18 003711   003733 710000 18                 TRA     s:15133
        18 003712   003724 710000 18                 TRA     s:15130
        18 003713   003724 710000 18                 TRA     s:15130

  15127 18 003714   001336 236000 xsym               LDQ     O1COM+734
        18 003715   000000 402000 17                 MPY     NEG6
        18 003716   200021 036100                    ADLQ    FILLER_SIZE,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:173  
        18 003717   000022 036007                    ADLQ    18,DL
        18 003720   200021 756100                    STQ     FILLER_SIZE,,AUTO

  15128 18 003721   000003 235007                    LDA     3,DL
        18 003722   001336 755000 xsym               STA     O1COM+734
        18 003723   004002 710000 18                 TRA     s:15152

  15130 18 003724   001336 236000 xsym               LDQ     O1COM+734
        18 003725   000000 402000 17                 MPY     NEG6
        18 003726   200021 036100                    ADLQ    FILLER_SIZE,,AUTO
        18 003727   000044 036007                    ADLQ    36,DL
        18 003730   200021 756100                    STQ     FILLER_SIZE,,AUTO

  15131 18 003731   001336 450000 xsym               STZ     O1COM+734

  15132 18 003732   000001 054000 xsym               AOS     O1COM+1

  15133 18 003733   004002 710000 18                 TRA     s:15152

  15136 18 003734   000002 236000 xsym               LDQ     O1COM+2
        18 003735   000001 736000                    QLS     1
        18 003736   000003 036000 xsym               ADLQ    O1COM+3
        18 003737   000000 621006                    EAX1    0,QL
        18 003740   200017 741100                    STX1    DIGIT_POS,,AUTO

  15137 18 003741   000003 236000 xsym               LDQ     O1COM+3
        18 003742   000005 402007                    MPY     5,DL
        18 003743   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 003744   000002 236000 xsym               LDQ     O1COM+2
        18 003745   000011 402007                    MPY     9,DL
        18 003746   200072 036100                    ADLQ    NEW_DEP$+1,,AUTO
        18 003747   200020 756100                    STQ     DIGIT_POS_IN_BITS,,AUTO

  15138 18 003750   000010 101003                    CMPX1   8,DU
        18 003751   003753 602011 18                 TNC     s:15138+3,X1
        18 003752   004002 710000 18                 TRA     s:15152
        18 003753   004002 710000 18                 TRA     s:15152
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:174  
        18 003754   003763 710000 18                 TRA     s:15142
        18 003755   003763 710000 18                 TRA     s:15142
        18 003756   003763 710000 18                 TRA     s:15142
        18 003757   004002 710000 18                 TRA     s:15152
        18 003760   003773 710000 18                 TRA     s:15146
        18 003761   003773 710000 18                 TRA     s:15146
        18 003762   003773 710000 18                 TRA     s:15146

  15142 18 003763   000002 235007                    LDA     2,DL
        18 003764   000002 755000 xsym               STA     O1COM+2

  15143 18 003765   000003 450000 xsym               STZ     O1COM+3

  15144 18 003766   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003767   200020 136100                    SBLQ    DIGIT_POS_IN_BITS,,AUTO
        18 003770   000022 036007                    ADLQ    18,DL
        18 003771   200021 756100                    STQ     FILLER_SIZE,,AUTO
        18 003772   004002 710000 18                 TRA     s:15152

  15146 18 003773   000001 054000 xsym               AOS     O1COM+1

  15147 18 003774   000002 450000 xsym               STZ     O1COM+2

  15148 18 003775   000003 450000 xsym               STZ     O1COM+3

  15149 18 003776   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 003777   200020 136100                    SBLQ    DIGIT_POS_IN_BITS,,AUTO
        18 004000   000044 036007                    ADLQ    36,DL
        18 004001   200021 756100                    STQ     FILLER_SIZE,,AUTO

  15152 18 004002   200004 471500                    LDP1    @MAX_BOUND,,AUTO
        18 004003   100000 220100                    LDX0    0,,PR1
        18 004004   000002 100003                    CMPX0   2,DU
        18 004005   004105 605000 18                 TPL     s:15210

  15153 18 004006   000002 221003                    LDX1    2,DU
        18 004007   100000 741100                    STX1    0,,PR1
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:175  

  15154 18 004010   004105 710000 18                 TRA     s:15210

     1090    15156
     1091    15157    7                  CASE (%TYN,%TYO,%TYA,%TYY,%TYE,%TYF) ;
             15157                           /* KANJI,OVERPUNCHED,DISPLAY,PACKED INDEX,EBCDIC */

     1092    15158                         %NEXT_BYTE;

  15160 18 004011   001337 234000 xsym               SZN     O1COM+735
        18 004012   004064 605000 18                 TPL     s:15184

  15162 18 004013   001336 235000 xsym               LDA     O1COM+734
        18 004014   000006 115007                    CMPA    6,DL
        18 004015   004017 602005 18                 TNC     s:15162+4,AL
        18 004016   004062 710000 18                 TRA     s:15182
        18 004017   004025 710000 18                 TRA     s:15164
        18 004020   004027 710000 18                 TRA     s:15166
        18 004021   004035 710000 18                 TRA     s:15169
        18 004022   004043 710000 18                 TRA     s:15172
        18 004023   004046 710000 18                 TRA     s:15174
        18 004024   004054 710000 18                 TRA     s:15177

  15164 18 004025   000002 450000 xsym               STZ     O1COM+2
        18 004026   004062 710000 18                 TRA     s:15182

  15166 18 004027   000001 236007                    LDQ     1,DL
        18 004030   000002 756000 xsym               STQ     O1COM+2

  15167 18 004031   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 004032   000003 035007                    ADLA    3,DL
        18 004033   200021 755100                    STA     FILLER_SIZE,,AUTO
        18 004034   004062 710000 18                 TRA     s:15182

  15169 18 004035   000002 236007                    LDQ     2,DL
        18 004036   000002 756000 xsym               STQ     O1COM+2

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:176  
  15170 18 004037   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 004040   000006 035007                    ADLA    6,DL
        18 004041   200021 755100                    STA     FILLER_SIZE,,AUTO
        18 004042   004062 710000 18                 TRA     s:15182

  15172 18 004043   000002 236007                    LDQ     2,DL
        18 004044   000002 756000 xsym               STQ     O1COM+2
        18 004045   004062 710000 18                 TRA     s:15182

  15174 18 004046   000003 236007                    LDQ     3,DL
        18 004047   000002 756000 xsym               STQ     O1COM+2

  15175 18 004050   200021 235100                    LDA     FILLER_SIZE,,AUTO
        18 004051   000003 035007                    ADLA    3,DL
        18 004052   200021 755100                    STA     FILLER_SIZE,,AUTO
        18 004053   004062 710000 18                 TRA     s:15182

  15177 18 004054   000001 054000 xsym               AOS     O1COM+1

  15178 18 004055   000002 450000 xsym               STZ     O1COM+2

  15179 18 004056   000003 450000 xsym               STZ     O1COM+3

  15180 18 004057   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 004060   000006 036007                    ADLQ    6,DL
        18 004061   200021 756100                    STQ     FILLER_SIZE,,AUTO

  15182 18 004062   000003 450000 xsym               STZ     O1COM+3

  15183 18 004063   004105 710000 18                 TRA     s:15210

  15184 18 004064   000003 235000 xsym               LDA     O1COM+3
        18 004065   000001 115007                    CMPA    1,DL
        18 004066   004105 601000 18                 TNZ     s:15210

  15186 18 004067   200021 236100                    LDQ     FILLER_SIZE,,AUTO
        18 004070   000004 036007                    ADLQ    4,DL
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:177  
        18 004071   200021 756100                    STQ     FILLER_SIZE,,AUTO

  15187 18 004072   000002 235000 xsym               LDA     O1COM+2
        18 004073   000001 035007                    ADLA    1,DL
        18 004074   000002 755000 xsym               STA     O1COM+2

  15188 18 004075   000003 450000 xsym               STZ     O1COM+3

  15189 18 004076   000002 236000 xsym               LDQ     O1COM+2
        18 004077   000002 772000                    QRL     2
        18 004100   000001 036000 xsym               ADLQ    O1COM+1
        18 004101   000001 756000 xsym               STQ     O1COM+1

  15190 18 004102   000002 236000 xsym               LDQ     O1COM+2
        18 004103   000003 376007                    ANQ     3,DL
        18 004104   000002 756000 xsym               STQ     O1COM+2

     1093    15194
     1094    15195    7                END ;

     1095    15196        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:178  
     1096    15197        /*V*
     1097    15198            REDEFINITION -- The item is handled differently if it is the subject or
     1098    15199                            object of a redefines clause.
     1099    15200
     1100    15201                            EXAMPLE:
     1101    15202                                       03 (subject) REDEFINES (object).
     1102    15203
     1103    15204                            The storage counters for the object are stored to be used
     1104    15205                            for the subject's storage location.  Due to different filler
     1105    15206                            space used for alignment, the subject and object might
     1106    15207                            not start on the same location in memory.
     1107    15208        */
     1108    15209
     1109    15210    6                IF SYM$ -> VARIABLE.B.REDEF_OBJ THEN

  15210 18 004105   200010 470500                    LDP0    SYM$,,AUTO
        18 004106   000003 236100                    LDQ     3,,PR0
        18 004107   000400 316003                    CANQ    256,DU
        18 004110   004126 600000 18                 TZE     s:15233

     1110    15211    7                  DO;

     1111    15212    7                    OBJECT_ST$ = SYM$ ;

  15212 18 004111   200010 236100                    LDQ     SYM$,,AUTO
        18 004112   200023 756100                    STQ     OBJECT_ST$,,AUTO

     1112    15213    7                    LAST_SA = O1COM.NEXT_SA;                 /*#35497*/

  15213 18 004113   000001 235000 xsym               LDA     O1COM+1
        18 004114   200026 755100                    STA     LAST_SA,,AUTO

     1113    15214    7                    LAST_BYTE = O1COM.NEXT_BYTE;             /*#35497*/

  15214 18 004115   000002 235000 xsym               LDA     O1COM+2
        18 004116   200027 755100                    STA     LAST_BYTE,,AUTO

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:179  
     1114    15215    7                    LAST_HALF_BYTE = O1COM.NEXT_HALF_BYTE;   /*#35497*/

  15215 18 004117   000003 235000 xsym               LDA     O1COM+3
        18 004120   200030 755100                    STA     LAST_HALF_BYTE,,AUTO

     1115    15216    7                    LAST_CHAR = O1COM.NEXT_CHAR;

  15216 18 004121   001336 235000 xsym               LDA     O1COM+734
        18 004122   200031 755100                    STA     LAST_CHAR,,AUTO

     1116    15217    7                    LAST_ITEM_GBCD = O1COM.LAST_ITEM_GBCD;

  15217 18 004123   001337 236000 xsym               LDQ     O1COM+735
        18 004124   400000 376003                    ANQ     -131072,DU
        18 004125   200032 756100                    STQ     LAST_ITEM_GBCD,,AUTO

     1117    15218    7                  END;

     1118    15219        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:180  
     1119    15220        /*V*
     1120    15221            ASSIGN_SA -- Assign the item's storage offset within the structure to the
     1121    15222                         SA field.  The byte position within the word (or digit if
     1122    15223                         the item is packed decimal and is in term of digits) are
     1123    15224                         stored in VARIABLE.ADSC.CN or VARIABLE.NDSC.CN depending on the
     1124    15225                         item being alphabetic or numeric.
     1125    15226
     1126    15227                         The storage counter is first checked against the data
     1127    15228                         storage limit.  If the limit is exceeded then the counter
     1128    15229                         is set to zero.  No error is produced as Phase 2 will catch
     1129    15230                         this and print the error to eliminate duplicate error messages.
     1130    15231        */
     1131    15232
     1132    15233    6                IF O1COM.NEXT_SA > %#256K THEN

  15233 18 004126   000001 235000 xsym               LDA     O1COM+1
        18 004127   000001 115003                    CMPA    1,DU
        18 004130   004132 604400 18                 TMOZ    s:15236

     1133    15234    6                  O1COM.NEXT_SA = 0 ;

  15234 18 004131   000001 450000 xsym               STZ     O1COM+1

     1134    15235
     1135    15236    6                SYM$ -> VARIABLE.SA = O1COM.NEXT_SA ;

  15236 18 004132   000001 720000 xsym               LXL0    O1COM+1
        18 004133   000001 740100                    STX0    1,,PR0

     1136    15237    6                IF  SYM$ -> VARIABLE.TYPE = %TYD

  15237 18 004134   200010 470500                    LDP0    SYM$,,AUTO
        18 004135   000002 220100                    LDX0    2,,PR0
        18 004136   004152 601000 18                 TNZ     s:15242
        18 004137   000001 236100                    LDQ     1,,PR0
        18 004140   040000 316007                    CANQ    16384,DL
        18 004141   004152 600000 18                 TZE     s:15242
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:181  

     1137    15238    6                AND SYM$ -> VARIABLE.NDSC.TN = %NDSC4 THEN
     1138    15239                           /* Store offset in terms of digits */
     1139    15240    6                 SYM$ -> VARIABLE.NDSC.CN = O1COM.NEXT_BYTE * 2 + O1COM.NEXT_HALF_BYTE
             15240                           ;

  15240 18 004142   000002 236000 xsym               LDQ     O1COM+2
        18 004143   000001 736000                    QLS     1
        18 004144   000003 036000 xsym               ADLQ    O1COM+3
        18 004145   000017 736000                    QLS     15
        18 004146   000001 676100                    ERQ     1,,PR0
        18 004147   700000 376007                    ANQ     -32768,DL
        18 004150   000001 656100                    ERSQ    1,,PR0
        18 004151   004171 710000 18                 TRA     s:15267

     1140    15241    6                ELSE
     1141    15242    6                  IF SYM$ -> VARIABLE.TYPE = %TYB OR

  15242 18 004152   000014 100003                    CMPX0   12,DU
        18 004153   004156 600000 18                 TZE     s:15245
        18 004154   000023 100003                    CMPX0   19,DU
        18 004155   004164 601000 18                 TNZ     s:15247

     1142    15243    6                      SYM$ -> VARIABLE.TYPE = %TYC THEN
     1143    15244                             /* Store offset in terms of 6-bit characters */
     1144    15245    6                    SYM$ -> VARIABLE.NDSC.CN = O1COM.NEXT_CHAR ;

  15245 18 004156   001336 236000 xsym               LDQ     O1COM+734
        18 004157   000017 736000                    QLS     15
        18 004160   000001 676100                    ERQ     1,,PR0
        18 004161   700000 376007                    ANQ     -32768,DL
        18 004162   000001 656100                    ERSQ    1,,PR0
        18 004163   004171 710000 18                 TRA     s:15267

     1145    15246    6                  ELSE /* Store offset in terms of bytes */
     1146    15247    6                    SYM$ -> VARIABLE.ADSC.CN = O1COM.NEXT_BYTE ;

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:182  
  15247 18 004164   000002 236000 xsym               LDQ     O1COM+2
        18 004165   000020 736000                    QLS     16
        18 004166   000001 676100                    ERQ     1,,PR0
        18 004167   600000 376007                    ANQ     -65536,DL
        18 004170   000001 656100                    ERSQ    1,,PR0

     1147    15248        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:183  
     1148    15249        /*V*
     1149    15250            GET_SIZE_ELEMENTARY -- If elementary item, get size from VARIABLE.NDSC.N or
     1150    15251                                   VARIABLE.ADSC.N depending on the item being numeric
     1151    15252                                   or GBCD or alphabetic.
     1152    15253
     1153    15254                                   If the item is packed decimal and has byte alignment
     1154    15255                                   the item is right justified. If the item takes up an
     1155    15256                                   odd number of digits the item is shifted one digit.
     1156    15257
     1157    15258                                   example:
     1158    15259                                       01 A.
     1159    15260                                          02 B USAGE IS COMP PIC 999.
     1160    15261
     1161    15262                                       instead of B occupying digits 0,1, and 2 with
     1162    15263                                       the third digit being filler it is right
     1163    15264                                       justified so the 0 digit is filler.
     1164    15265        */
     1165    15266
     1166    15267    6            IF SYM$ -> VARIABLE.B.ELEMENTARY THEN

  15267 18 004171   200010 470500                    LDP0    SYM$,,AUTO
        18 004172   000003 236100                    LDQ     3,,PR0
        18 004173   010000 316003                    CANQ    4096,DU
        18 004174   004351 600000 18                 TZE     s:15327

     1167    15268    7              DO;

     1168    15269    7                IF SYM$ -> VARIABLE.B.NON_STORAGE THEN

  15269 18 004175   000040 316007                    CANQ    32,DL
        18 004176   004201 600000 18                 TZE     s:15272

     1169    15270    7                    MY_SIZE = 0;

  15270 18 004177   200013 450100                    STZ     MY_SIZE,,AUTO
        18 004200   004326 710000 18                 TRA     s:15307

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:184  
     1170    15271    7                ELSE
     1171    15272    8                  DO CASE (SYM$ -> VARIABLE.TYPE);

  15272 18 004201   000002 220100                    LDX0    2,,PR0
        18 004202   000024 100003                    CMPX0   20,DU
        18 004203   004205 602010 18                 TNC     s:15272+4,X0
        18 004204   004277 710000 18                 TRA     s:15293
        18 004205   004231 710000 18                 TRA     s:15274
        18 004206   004277 710000 18                 TRA     s:15293
        18 004207   004277 710000 18                 TRA     s:15293
        18 004210   004231 710000 18                 TRA     s:15274
        18 004211   004277 710000 18                 TRA     s:15293
        18 004212   004277 710000 18                 TRA     s:15293
        18 004213   004277 710000 18                 TRA     s:15293
        18 004214   004277 710000 18                 TRA     s:15293
        18 004215   004277 710000 18                 TRA     s:15293
        18 004216   004277 710000 18                 TRA     s:15293
        18 004217   004277 710000 18                 TRA     s:15293
        18 004220   004231 710000 18                 TRA     s:15274
        18 004221   004277 710000 18                 TRA     s:15293
        18 004222   004277 710000 18                 TRA     s:15293
        18 004223   004277 710000 18                 TRA     s:15293
        18 004224   004277 710000 18                 TRA     s:15293
        18 004225   004277 710000 18                 TRA     s:15293
        18 004226   004277 710000 18                 TRA     s:15293
        18 004227   004277 710000 18                 TRA     s:15293
        18 004230   004231 710000 18                 TRA     s:15274

     1172    15273    8                    CASE (%TYD, %TYO, %TYF, %TYC);

     1173    15274    8                      MY_SIZE = SYM$ -> VARIABLE.NDSC.N;

  15274 18 004231   000001 236100                    LDQ     1,,PR0
        18 004232   000077 376007                    ANQ     63,DL
        18 004233   200013 756100                    STQ     MY_SIZE,,AUTO

     1174    15275
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:185  
     1175    15276    8                      IF  SYM$ -> VARIABLE.NDSC.TN = %NDSC4

  15276 18 004234   000001 236100                    LDQ     1,,PR0
        18 004235   040000 316007                    CANQ    16384,DL
        18 004236   004265 600000 18                 TZE     s:15285
        18 004237   000000 100003                    CMPX0   0,DU
        18 004240   004265 601000 18                 TNZ     s:15285
        18 004241   200012 471500                    LDP1    NEXT$,,AUTO
        18 004242   100000 236100                    LDQ     0,,PR1
        18 004243   100000 316007                    CANQ    32768,DL
        18 004244   004265 601000 18                 TNZ     s:15285

     1176    15277    8                      AND SYM$ -> VARIABLE.TYPE = %TYD
     1177    15278    8                      AND (NOT NEXT$ -> QLT.B.DIGIT)   THEN
     1178    15279    9                        DO;

     1179    15280    9                          IF MOD (MY_SIZE, 2) = 1 THEN /* Right Justify */

  15280 18 004245   200013 236100                    LDQ     MY_SIZE,,AUTO
        18 004246   000001 376007                    ANQ     1,DL
        18 004247   000001 116007                    CMPQ    1,DL
        18 004250   004261 601000 18                 TNZ     s:15283

     1180    15281    9                            SYM$ -> VARIABLE.NDSC.CN = SYM$ -> VARIABLE.NDSC.CN + 1;

  15281 18 004251   000001 236100                    LDQ     1,,PR0
        18 004252   000017 772000                    QRL     15
        18 004253   000007 376007                    ANQ     7,DL
        18 004254   000001 036007                    ADLQ    1,DL
        18 004255   000017 736000                    QLS     15
        18 004256   000001 676100                    ERQ     1,,PR0
        18 004257   700000 376007                    ANQ     -32768,DL
        18 004260   000001 656100                    ERSQ    1,,PR0

     1181    15282
     1182    15283    9                          MY_SIZE = (MY_SIZE + 1) / 2;

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:186  
  15283 18 004261   200013 236100                    LDQ     MY_SIZE,,AUTO
        18 004262   000001 036007                    ADLQ    1,DL
        18 004263   000001 772000                    QRL     1
        18 004264   200013 756100                    STQ     MY_SIZE,,AUTO

     1183    15284    9                        END;

     1184    15285    8                      IF SYM$ -> VARIABLE.TYPE = %TYC

  15285 18 004265   200010 470500                    LDP0    SYM$,,AUTO
        18 004266   000002 220100                    LDX0    2,,PR0
        18 004267   000023 100003                    CMPX0   19,DU
        18 004270   004274 601000 18                 TNZ     s:15287

     1185    15286    8                        THEN O1COM.LAST_ITEM_GBCD = TRUE;

  15286 18 004271   400000 236003                    LDQ     -131072,DU
        18 004272   001337 256000 xsym               ORSQ    O1COM+735
        18 004273   004326 710000 18                 TRA     s:15307

     1186    15287    8                        ELSE O1COM.LAST_ITEM_GBCD = FALSE;

  15287 18 004274   000034 236000 19                 LDQ     28
        18 004275   001337 356000 xsym               ANSQ    O1COM+735
        18 004276   004326 710000 18                 TRA     s:15307

     1187    15288
     1188    15289    8                    CASE (ELSE);

     1189    15290                           %GET_ADSC_LEN (ST$ = SYM$,
     1190    15291                                          RTN = MY_SIZE);

  15293 18 004277   004000 316003                    CANQ    2048,DU
        18 004300   004314 600000 18                 TZE     s:15299

  15294 18 004301   000005 471500                    LDP1    5,,PR0
        18 004302   100000 221100                    LDX1    0,,PR1
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:187  
        18 004303   001105 101003                    CMPX1   581,DU
        18 004304   004311 601000 18                 TNZ     s:15297

  15295 18 004305   100003 473500                    LDP3    3,,PR1
        18 004306   300001 235100                    LDA     1,,PR3
        18 004307   200013 755100                    STA     MY_SIZE,,AUTO
        18 004310   004317 710000 18                 TRA     s:15302

  15297 18 004311   100001 235100                    LDA     1,,PR1
        18 004312   200013 755100                    STA     MY_SIZE,,AUTO
        18 004313   004317 710000 18                 TRA     s:15302

  15299 18 004314   000001 236100                    LDQ     1,,PR0
        18 004315   007777 376007                    ANQ     4095,DL
        18 004316   200013 756100                    STQ     MY_SIZE,,AUTO

     1191    15302    8                      IF SYM$ -> VARIABLE.TYPE = %TYB

  15302 18 004317   000014 100003                    CMPX0   12,DU
        18 004320   004324 601000 18                 TNZ     s:15304

     1192    15303    8                        THEN O1COM.LAST_ITEM_GBCD = TRUE;

  15303 18 004321   400000 236003                    LDQ     -131072,DU
        18 004322   001337 256000 xsym               ORSQ    O1COM+735
        18 004323   004326 710000 18                 TRA     s:15307

     1193    15304    8                        ELSE O1COM.LAST_ITEM_GBCD = FALSE;

  15304 18 004324   000034 236000 19                 LDQ     28
        18 004325   001337 356000 xsym               ANSQ    O1COM+735

     1194    15305
     1195    15306    8                  END; /* Case */

     1196    15307    7                CONDITION$ = NEXT$ -> QLT.SON;
             15307                         /* Condition chain for elementary items */
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:188  

  15307 18 004326   200012 471500                    LDP1    NEXT$,,AUTO
        18 004327   100003 236100                    LDQ     3,,PR1
        18 004330   200005 756100                    STQ     CONDITION$,,AUTO

     1197    15308    8                DO WHILE CONDITION$ ~= ADDR (NIL);

  15308 18 004331   004346 710000 18                 TRA     s:15311

     1198    15309    8                  CONDITION$ -> QLT.ST$ -> CONDITION.B.GLOBAL = QUAL$ -> QLT.ST$ ->
             15309                           VARIABLE.B.GLOBAL;

  15309 18 004332   200005 470500                    LDP0    CONDITION$,,AUTO
        18 004333   000004 471500                    LDP1    4,,PR0
        18 004334   200051 473500                    LDP3    @QUAL$,,AUTO
        18 004335   300000 474500                    LDP4    0,,PR3
        18 004336   400004 475500                    LDP5    4,,PR4
        18 004337   500003 236100                    LDQ     3,,PR5
        18 004340   000014 736000                    QLS     12
        18 004341   100003 676100                    ERQ     3,,PR1
        18 004342   100000 376003                    ANQ     32768,DU
        18 004343   100003 656100                    ERSQ    3,,PR1

     1199    15310    8                  CONDITION$ = CONDITION$ -> QLT.BROTHER;

  15310 18 004344   000002 236100                    LDQ     2,,PR0
        18 004345   200005 756100                    STQ     CONDITION$,,AUTO

     1200    15311    8                END;

  15311 18 004346   000000 116000 19                 CMPQ    0
        18 004347   004332 601000 18                 TNZ     s:15309

     1201    15312    7              END; /* IF */

  15312 18 004350   004421 710000 18                 TRA     s:15355

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:189  
     1202    15313    6            ELSE  /* SON is non-ELEMENTARY */
     1203    15314        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:190  
     1204    15315        /*V*
     1205    15316            GET_SIZE_NONELEMENTARY -- Call Z8DC to get the size of the item's
     1206    15317                                      structure and the maximum alignment needed
     1207    15318                                      for it.  The current structure's alignment
     1208    15319                                      is the greater of the previous alignment
     1209    15320                                      for the outside structure and the alignment
     1210    15321                                      needed for this item.  The length of the item is
     1211    15322                                      extracted from VARIABLE.ADSC.N if it is not greater
     1212    15323                                      than 4095 bytes (largest number that will fit there)
     1213    15324                                      otherwise it is retrieved from LONG.LENGTH.
     1214    15325        */
     1215    15326    7                  DO ;

     1216    15327    7                    SYM$ -> VARIABLE.SA      = O1COM.NEXT_SA ;

  15327 18 004351   000001 720000 xsym               LXL0    O1COM+1
        18 004352   000001 740100                    STX0    1,,PR0

     1217    15328    7                    SYM$ -> VARIABLE.ADSC.CN = O1COM.NEXT_BYTE ;

  15328 18 004353   200010 470500                    LDP0    SYM$,,AUTO
        18 004354   000002 236000 xsym               LDQ     O1COM+2
        18 004355   000020 736000                    QLS     16
        18 004356   000001 676100                    ERQ     1,,PR0
        18 004357   600000 376007                    ANQ     -65536,DL
        18 004360   000001 656100                    ERSQ    1,,PR0

     1218    15329
     1219    15330    7                    CALL Z8DC$SIZE_CALC (NEXT$,MAX_BOUND_SON) ;

  15330 18 004361   200006 630500                    EPPR0   MAX_BOUND_SON,,AUTO
        18 004362   200073 450500                    STP0    NEW_DEP$+2,,AUTO
        18 004363   200012 631500                    EPPR1   NEXT$,,AUTO
        18 004364   200072 451500                    STP1    NEW_DEP$+1,,AUTO
        18 004365   200072 630500                    EPPR0   NEW_DEP$+1,,AUTO
        18 004366   000003 631400 19                 EPPR1   3
        18 004367   000000 701000 18                 TSX1    s:6
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:191  
        18 004370   000000 011000                    NOP     0

     1220    15331
     1221    15332
     1222    15333    7                    IF MAX_BOUND < MAX_BOUND_SON THEN

  15333 18 004371   200004 470500                    LDP0    @MAX_BOUND,,AUTO
        18 004372   000000 220100                    LDX0    0,,PR0
        18 004373   200006 100100                    CMPX0   MAX_BOUND_SON,,AUTO
        18 004374   004377 605000 18                 TPL     s:15339

     1223    15334    7                      MAX_BOUND = MAX_BOUND_SON ;

  15334 18 004375   200006 221100                    LDX1    MAX_BOUND_SON,,AUTO
        18 004376   000000 741100                    STX1    0,,PR0

     1224    15335
     1225    15336                         %GET_ADSC_LEN (ST$ = SYM$,
     1226    15337                                        RTN = MY_SIZE);

  15339 18 004377   200010 471500                    LDP1    SYM$,,AUTO
        18 004400   100003 236100                    LDQ     3,,PR1
        18 004401   004000 316003                    CANQ    2048,DU
        18 004402   004416 600000 18                 TZE     s:15345

  15340 18 004403   100005 473500                    LDP3    5,,PR1
        18 004404   300000 220100                    LDX0    0,,PR3
        18 004405   001105 100003                    CMPX0   581,DU
        18 004406   004413 601000 18                 TNZ     s:15343

  15341 18 004407   300003 474500                    LDP4    3,,PR3
        18 004410   400001 235100                    LDA     1,,PR4
        18 004411   200013 755100                    STA     MY_SIZE,,AUTO
        18 004412   004421 710000 18                 TRA     s:15355

  15343 18 004413   300001 235100                    LDA     1,,PR3
        18 004414   200013 755100                    STA     MY_SIZE,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:192  
        18 004415   004421 710000 18                 TRA     s:15355

  15345 18 004416   100001 236100                    LDQ     1,,PR1
        18 004417   007777 376007                    ANQ     4095,DL
        18 004420   200013 756100                    STQ     MY_SIZE,,AUTO

     1227    15348    7                  END ;

     1228    15349
     1229    15350        /*V*
     1230    15351            COMP7_SYNC -- If the item is COMP-7 and synchronized then it
     1231    15352                          uses a full word of storage and is right justified.
     1232    15353        */
     1233    15354
     1234    15355    6                IF SYM$ -> VARIABLE.TYPE = %TYH

  15355 18 004421   200010 470500                    LDP0    SYM$,,AUTO
        18 004422   000002 220100                    LDX0    2,,PR0
        18 004423   000007 100003                    CMPX0   7,DU
        18 004424   004437 601000 18                 TNZ     s:15373
        18 004425   200012 471500                    LDP1    NEXT$,,AUTO
        18 004426   100000 236100                    LDQ     0,,PR1
        18 004427   200000 316007                    CANQ    65536,DL
        18 004430   004437 600000 18                 TZE     s:15373

     1235    15356    6                AND NEXT$ -> QLT.B.SYNC  THEN
     1236    15357    7                  DO ;

     1237    15358    7                    MY_SIZE = %(BYTE * 4) ;  /* Fill COMP-7 out to full word */

  15358 18 004431   000004 235007                    LDA     4,DL
        18 004432   200013 755100                    STA     MY_SIZE,,AUTO

     1238    15359    7                    SYM$ -> VARIABLE.NDSC.CN = %(BYTE * 2) ; /* Right justify */

  15359 18 004433   000001 236100                    LDQ     1,,PR0
        18 004434   000035 376000 19                 ANQ     29
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:193  
        18 004435   200000 276007                    ORQ     65536,DL
        18 004436   000001 756100                    STQ     1,,PR0

     1239    15360    7                  END ;

     1240    15361        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:194  
     1241    15362        /*V*
     1242    15363            EXPAND_SIZE_IF_OCCURS -- Expands size of variable to include all dimensions.
     1243    15364                                     The total size of the item is the size of one
     1244    15365                                     element multiplied by the number of elements
     1245    15366                                     in the array.
     1246    15367                                     Because of the multiply the size of the item could
     1247    15368                                     become larger than 256k words.  To prevent this
     1248    15369                                     a check is made using the maximum storage
     1249    15370                                     limit to make prevent this.
     1250    15371        */
     1251    15372
     1252    15373    6                IF NEXT$ -> QLT.B.OCCURS THEN

  15373 18 004437   200012 470500                    LDP0    NEXT$,,AUTO
        18 004440   000000 236100                    LDQ     0,,PR0
        18 004441   400000 316007                    CANQ    -131072,DL
        18 004442   004532 600000 18                 TZE     s:15468

     1253    15374    7                  DO ;

     1254    15375                         %GET_LTS (@ID = %DIMS,
     1255    15376                                   @ST$ = SYM$,
     1256    15377                                   @RETURN$ = LTS$);

  15379 18 004443   200010 471500                    LDP1    SYM$,,AUTO
        18 004444   100005 236100                    LDQ     5,,PR1
        18 004445   000000 116000 19                 CMPQ    0
        18 004446   004456 600000 18                 TZE     s:15413
        18 004447   100005 473500                    LDP3    5,,PR1
        18 004450   300000 220100                    LDX0    0,,PR3
        18 004451   001105 100003                    CMPX0   581,DU
        18 004452   004456 601000 18                 TNZ     s:15413

  15383 18 004453   300001 236100                    LDQ     1,,PR3
        18 004454   000000 756000 6                  STQ     LTS$

  15411 18 004455   004470 710000 18                 TRA     s:15423
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:195  

  15413 18 004456   000000 116000 19                 CMPQ    0
        18 004457   004466 600000 18                 TZE     s:15417
        18 004460   100005 473500                    LDP3    5,,PR1
        18 004461   300000 220100                    LDX0    0,,PR3
        18 004462   001104 100003                    CMPX0   580,DU
        18 004463   004466 601000 18                 TNZ     s:15417

  15415 18 004464   000000 756000 6                  STQ     LTS$
        18 004465   004470 710000 18                 TRA     s:15423

  15417 18 004466   000000 236000 19                 LDQ     0
        18 004467   000000 756000 6                  STQ     LTS$

     1257    15420
     1258    15421                         %FIND_LAST_DIM(POINTER=LTS$, VARIABLE=LAST_DIM) ;

  15423 18 004470   000000 473400 6                  LDP3    LTS$
        18 004471   300000 236100                    LDQ     0,,PR3
        18 004472   777777 376007                    ANQ     -1,DL
        18 004473   000005 136007                    SBLQ    5,DL
        18 004474   000003 506007                    DIV     3,DL
        18 004475   200015 756100                    STQ     LAST_DIM,,AUTO

     1259    15426
     1260    15427    7                    MY_SIZE = MY_SIZE * LTS$ -> DIMS.D.DIM (LAST_DIM);

  15427 18 004476   000003 402007                    MPY     3,DL
        18 004477   300003 236106                    LDQ     3,QL,PR3
        18 004500   200013 402100                    MPY     MY_SIZE,,AUTO
        18 004501   200013 756100                    STQ     MY_SIZE,,AUTO

     1261    15428
     1262    15429    7                    IF (SYM$ -> VARIABLE.TYPE = %TYB OR

  15429 18 004502   100002 220100                    LDX0    2,,PR1
        18 004503   000014 100003                    CMPX0   12,DU
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:196  
        18 004504   004507 600000 18                 TZE     s:15429+5
        18 004505   000023 100003                    CMPX0   19,DU
        18 004506   004514 601000 18                 TNZ     s:15433
        18 004507   000036 116000 19                 CMPQ    30
        18 004510   004514 602000 18                 TNC     s:15433

     1263    15430    7                        SYM$ -> VARIABLE.TYPE = %TYC) AND
     1264    15431    7                        MY_SIZE > %(BYTE_STORAGE_LIMIT * 3 / 2) THEN
     1265    15432    7                      MY_SIZE = %(BYTE_STORAGE_LIMIT * 3 / 2 + 1);

  15432 18 004511   000036 235000 19                 LDA     30
        18 004512   200013 755100                    STA     MY_SIZE,,AUTO
        18 004513   004532 710000 18                 TRA     s:15468

     1266    15433    7                    ELSE IF SYM$ -> VARIABLE.B.DIGIT AND

  15433 18 004514   100003 236100                    LDQ     3,,PR1
        18 004515   000200 316007                    CANQ    128,DL
        18 004516   004525 600000 18                 TZE     s:15436
        18 004517   200013 235100                    LDA     MY_SIZE,,AUTO
        18 004520   000037 115000 19                 CMPA    31
        18 004521   004525 602000 18                 TNC     s:15436

     1267    15434    7                        MY_SIZE > %(BYTE_STORAGE_LIMIT * 2) THEN
     1268    15435    7                      MY_SIZE = %(BYTE_STORAGE_LIMIT * 2 + 1);

  15435 18 004522   000037 235000 19                 LDA     31
        18 004523   200013 755100                    STA     MY_SIZE,,AUTO
        18 004524   004532 710000 18                 TRA     s:15468

     1269    15436    7                    ELSE IF MY_SIZE > %BYTE_STORAGE_LIMIT THEN

  15436 18 004525   200013 235100                    LDA     MY_SIZE,,AUTO
        18 004526   000040 115000 19                 CMPA    32
        18 004527   004532 602000 18                 TNC     s:15468

     1270    15437    7                      MY_SIZE = %(BYTE_STORAGE_LIMIT + 1);
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:197  

  15437 18 004530   000040 235000 19                 LDA     32
        18 004531   200013 755100                    STA     MY_SIZE,,AUTO

     1271    15438
     1272    15439
     1273    15440    7                END ;

     1274    15441        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:198  
     1275    15442        /*V*
     1276    15443            INCREMENT_OFFSET -- The storage counters (O1COM.NEXT_SA, etc.) are incremented
     1277    15444                                up to the next available location.
     1278    15445
     1279    15446                                If the item is in digits a check is made to see if the
     1280    15447                                item started on a half-byte boundary and ends on a half-
     1281    15448                                byte boundary.  If this occurred, the size will be
     1282    15449                                incremented by one byte because 2 half-bytes were not
     1283    15450                                included in MY-SIZE. The half-byte counter is incremented
     1284    15451                                and the byte counter is incremented if needed.
     1285    15452
     1286    15453                                For elementary items, the byte and word counters are
     1287    15454                                incremented by their size.  For non-elementary items the
     1288    15455                                new storage locations are calculated using the item's
     1289    15456                                descriptor instead of the current state of the storage
     1290    15457                                counters.  This is done because the storage counters are
     1291    15458                                incremented and changed inside of the structure.
     1292    15459
     1293    15460                                The size of the outer structure is then incremented by
     1294    15461                                the size of the variable and the amount of filler used.
     1295    15462                                Filler is in terms of digits so it is converted to
     1296    15463                                bytes in the calculation.  If the size goes beyond
     1297    15464                                the storage limit (256K words), the size is set to the
     1298    15465                                the storage limit plus 1.
     1299    15466        */
     1300    15467        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:199  
     1301    15468    6                MY_SIZE1 = MY_SIZE ; /* In case of REDEFINES */

  15468 18 004532   200013 235100                    LDA     MY_SIZE,,AUTO
        18 004533   200014 755100                    STA     MY_SIZE1,,AUTO

     1302    15469    6                IF SYM$ -> VARIABLE.B.ELEMENTARY THEN

  15469 18 004534   200010 471500                    LDP1    SYM$,,AUTO
        18 004535   100003 236100                    LDQ     3,,PR1
        18 004536   010000 316003                    CANQ    4096,DU
        18 004537   004711 600000 18                 TZE     s:15552

     1303    15470    7                  DO ;

     1304    15471    7                    IF SYM$ -> VARIABLE.ID = %ARRAY AND

  15471 18 004540   100000 220100                    LDX0    0,,PR1
        18 004541   000765 100003                    CMPX0   501,DU
        18 004542   004612 601000 18                 TNZ     s:15524
        18 004543   000010 316003                    CANQ    8,DU
        18 004544   004612 600000 18                 TZE     s:15524

     1305    15472    7                        SYM$ -> VARIABLE.B.GLOBAL THEN
     1306    15473    8                      DO;
             15473                            /* If INDEXED BY phrase on a GLOBAL array, make index GLOBAL */

     1307    15474                             %GET_LTS (@ID  = %DIMS,
     1308    15475                                       @ST$ = SYM$);

  15477 18 004545   100005 236100                    LDQ     5,,PR1
        18 004546   000000 116000 19                 CMPQ    0
        18 004547   004557 600000 18                 TZE     s:15511
        18 004550   100005 473500                    LDP3    5,,PR1
        18 004551   300000 221100                    LDX1    0,,PR3
        18 004552   001105 101003                    CMPX1   581,DU
        18 004553   004557 601000 18                 TNZ     s:15511

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:200  
  15481 18 004554   300001 236100                    LDQ     1,,PR3
        18 004555   000000 756000 6                  STQ     LTS$

  15509 18 004556   004571 710000 18                 TRA     s:15518

  15511 18 004557   000000 116000 19                 CMPQ    0
        18 004560   004567 600000 18                 TZE     s:15515
        18 004561   100005 473500                    LDP3    5,,PR1
        18 004562   300000 221100                    LDX1    0,,PR3
        18 004563   001104 101003                    CMPX1   580,DU
        18 004564   004567 601000 18                 TNZ     s:15515

  15513 18 004565   000000 756000 6                  STQ     LTS$
        18 004566   004571 710000 18                 TRA     s:15518

  15515 18 004567   000000 236000 19                 LDQ     0
        18 004570   000000 756000 6                  STQ     LTS$

     1309    15518    8                        LTS$ = LTS$ -> DIMS.D.INDEX$ ((LTS$ -> DIMS.N - 5) / 3);

  15518 18 004571   000000 473400 6                  LDP3    LTS$
        18 004572   300000 236100                    LDQ     0,,PR3
        18 004573   777777 376007                    ANQ     -1,DL
        18 004574   000005 136007                    SBLQ    5,DL
        18 004575   000003 506007                    DIV     3,DL
        18 004576   000003 402007                    MPY     3,DL
        18 004577   300004 236106                    LDQ     4,QL,PR3
        18 004600   000000 756000 6                  STQ     LTS$

     1310    15519    9                        DO WHILE LTS$ ~= ADDR (NIL);

  15519 18 004601   004610 710000 18                 TRA     s:15522

     1311    15520    9                          LTS$ -> INDEXES.INDEX_ST$ -> VARIABLE.B.GLOBAL = TRUE;

  15520 18 004602   000000 470400 6                  LDP0    LTS$
        18 004603   000001 471500                    LDP1    1,,PR0
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:201  
        18 004604   000010 236003                    LDQ     8,DU
        18 004605   100003 256100                    ORSQ    3,,PR1

     1312    15521    9                          LTS$ = LTS$ -> INDEXES.LINK;

  15521 18 004606   000002 236100                    LDQ     2,,PR0
        18 004607   000000 756000 6                  STQ     LTS$

     1313    15522    9                        END;

  15522 18 004610   000000 116000 19                 CMPQ    0
        18 004611   004602 601000 18                 TNZ     s:15520

     1314    15523    8                      END;

     1315    15524    7                    IF NEXT$ -> QLT.B.DIGIT THEN

  15524 18 004612   200012 470500                    LDP0    NEXT$,,AUTO
        18 004613   000000 236100                    LDQ     0,,PR0
        18 004614   100000 316007                    CANQ    32768,DL
        18 004615   004647 600000 18                 TZE     s:15534

     1316    15525    8                      DO ;

     1317    15526    8                        MY_SIZE1 = (MY_SIZE + 1) / 2 ;

  15526 18 004616   200013 236100                    LDQ     MY_SIZE,,AUTO
        18 004617   000001 036007                    ADLQ    1,DL
        18 004620   000001 772000                    QRL     1
        18 004621   200014 756100                    STQ     MY_SIZE1,,AUTO

     1318    15527    8                        O1COM.NEXT_HALF_BYTE = O1COM.NEXT_HALF_BYTE + MY_SIZE ;

  15527 18 004622   000003 236000 xsym               LDQ     O1COM+3
        18 004623   200013 036100                    ADLQ    MY_SIZE,,AUTO
        18 004624   000003 756000 xsym               STQ     O1COM+3

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:202  
     1319    15528    8                        O1COM.NEXT_BYTE = O1COM.NEXT_BYTE + O1COM.NEXT_HALF_BYTE / 2 ;

  15528 18 004625   000001 772000                    QRL     1
        18 004626   000002 036000 xsym               ADLQ    O1COM+2
        18 004627   000002 756000 xsym               STQ     O1COM+2

     1320    15529    8                        O1COM.NEXT_SA = O1COM.NEXT_SA + O1COM.NEXT_BYTE / 4 ;

  15529 18 004630   000002 772000                    QRL     2
        18 004631   000001 036000 xsym               ADLQ    O1COM+1
        18 004632   000001 756000 xsym               STQ     O1COM+1

     1321    15530    8                        O1COM.NEXT_BYTE = MOD (O1COM.NEXT_BYTE, 4) ;

  15530 18 004633   000002 236000 xsym               LDQ     O1COM+2
        18 004634   000003 376007                    ANQ     3,DL
        18 004635   000002 756000 xsym               STQ     O1COM+2

     1322    15531    8                        O1COM.NEXT_HALF_BYTE = MOD (O1COM.NEXT_HALF_BYTE, 2) ;

  15531 18 004636   000003 236000 xsym               LDQ     O1COM+3
        18 004637   000001 376007                    ANQ     1,DL
        18 004640   000003 756000 xsym               STQ     O1COM+3

     1323    15532    8                        MY_SIZE = (O1COM.NEXT_HALF_BYTE + 9 * MY_SIZE) / 2 ;

  15532 18 004641   200013 236100                    LDQ     MY_SIZE,,AUTO
        18 004642   000011 402007                    MPY     9,DL
        18 004643   000003 036000 xsym               ADLQ    O1COM+3
        18 004644   000001 772000                    QRL     1
        18 004645   200013 756100                    STQ     MY_SIZE,,AUTO

     1324    15533    8                      END ;

  15533 18 004646   004734 710000 18                 TRA     s:15558

     1325    15534    7                    ELSE IF SYM$ -> VARIABLE.TYPE = %TYB OR
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:203  

  15534 18 004647   200010 471500                    LDP1    SYM$,,AUTO
        18 004650   100002 220100                    LDX0    2,,PR1
        18 004651   000014 100003                    CMPX0   12,DU
        18 004652   004655 600000 18                 TZE     s:15537
        18 004653   000023 100003                    CMPX0   19,DU
        18 004654   004674 601000 18                 TNZ     s:15544

     1326    15535    7                        SYM$ -> VARIABLE.TYPE = %TYC THEN
     1327    15536    8                      DO ;

     1328    15537    8                        O1COM.NEXT_CHAR = O1COM.NEXT_CHAR + MY_SIZE ;

  15537 18 004655   001336 236000 xsym               LDQ     O1COM+734
        18 004656   200013 036100                    ADLQ    MY_SIZE,,AUTO
        18 004657   001336 756000 xsym               STQ     O1COM+734

     1329    15538    8                        O1COM.NEXT_SA = O1COM.NEXT_SA + O1COM.NEXT_CHAR / 6 ;

  15538 18 004660   000001 772000                    QRL     1
        18 004661   000003 506007                    DIV     3,DL
        18 004662   000001 036000 xsym               ADLQ    O1COM+1
        18 004663   000001 756000 xsym               STQ     O1COM+1

     1330    15539    8                        O1COM.NEXT_CHAR = MOD (O1COM.NEXT_CHAR,6) ;

  15539 18 004664   001336 235000 xsym               LDA     O1COM+734
        18 004665   000043 773000                    LRL     35
        18 004666   000006 507007                    DVF     6,DL
        18 004667   001336 756000 xsym               STQ     O1COM+734

     1331    15540    8                        MY_SIZE = MY_SIZE * 6 ;

  15540 18 004670   200013 236100                    LDQ     MY_SIZE,,AUTO
        18 004671   000006 402007                    MPY     6,DL
        18 004672   200013 756100                    STQ     MY_SIZE,,AUTO

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:204  
     1332    15541    8                      END ;

  15541 18 004673   004734 710000 18                 TRA     s:15558

     1333    15542    7                    ELSE
     1334    15543    8                      DO ;

     1335    15544    8                        O1COM.NEXT_BYTE = O1COM.NEXT_BYTE + MY_SIZE ;

  15544 18 004674   000002 236000 xsym               LDQ     O1COM+2
        18 004675   200013 036100                    ADLQ    MY_SIZE,,AUTO
        18 004676   000002 756000 xsym               STQ     O1COM+2

     1336    15545    8                        O1COM.NEXT_SA = O1COM.NEXT_SA + O1COM.NEXT_BYTE / 4 ;

  15545 18 004677   000002 772000                    QRL     2
        18 004700   000001 036000 xsym               ADLQ    O1COM+1
        18 004701   000001 756000 xsym               STQ     O1COM+1

     1337    15546    8                        O1COM.NEXT_BYTE = MOD (O1COM.NEXT_BYTE,4) ;

  15546 18 004702   000002 236000 xsym               LDQ     O1COM+2
        18 004703   000003 376007                    ANQ     3,DL
        18 004704   000002 756000 xsym               STQ     O1COM+2

     1338    15547    8                        MY_SIZE = MY_SIZE * 9 ;

  15547 18 004705   200013 236100                    LDQ     MY_SIZE,,AUTO
        18 004706   000011 402007                    MPY     9,DL
        18 004707   200013 756100                    STQ     MY_SIZE,,AUTO

     1339    15548    8                      END ;

     1340    15549    7                  END ;

  15549 18 004710   004734 710000 18                 TRA     s:15558

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:205  
     1341    15550    6                ELSE
     1342    15551    7                  DO ;

     1343    15552    7                    O1COM.NEXT_BYTE = SYM$ -> VARIABLE.ADSC.CN + MY_SIZE ;

  15552 18 004711   100001 236100                    LDQ     1,,PR1
        18 004712   000020 772000                    QRL     16
        18 004713   000003 376007                    ANQ     3,DL
        18 004714   200013 036100                    ADLQ    MY_SIZE,,AUTO
        18 004715   000002 756000 xsym               STQ     O1COM+2

     1344    15553    7                    O1COM.NEXT_SA = SYM$ -> VARIABLE.SA + O1COM.NEXT_BYTE / 4 ;

  15553 18 004716   000002 772000                    QRL     2
        18 004717   200072 756100                    STQ     NEW_DEP$+1,,AUTO
        18 004720   100001 236100                    LDQ     1,,PR1
        18 004721   000022 772000                    QRL     18
        18 004722   200073 756100                    STQ     NEW_DEP$+2,,AUTO
        18 004723   200072 236100                    LDQ     NEW_DEP$+1,,AUTO
        18 004724   200073 036100                    ADLQ    NEW_DEP$+2,,AUTO
        18 004725   000001 756000 xsym               STQ     O1COM+1

     1345    15554    7                    O1COM.NEXT_BYTE = MOD(O1COM.NEXT_BYTE,4) ;

  15554 18 004726   000002 236000 xsym               LDQ     O1COM+2
        18 004727   000003 376007                    ANQ     3,DL
        18 004730   000002 756000 xsym               STQ     O1COM+2

     1346    15555    7                    MY_SIZE = MY_SIZE * 9 ;

  15555 18 004731   200013 236100                    LDQ     MY_SIZE,,AUTO
        18 004732   000011 402007                    MPY     9,DL
        18 004733   200013 756100                    STQ     MY_SIZE,,AUTO

     1347    15556    7                  END ;

     1348    15557
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:206  
     1349    15558    6                DEP_SIZE = (SIZE + FILLER_SIZE + 8)/9;    /*#32767*/

  15558 18 004734   200011 236100                    LDQ     SIZE,,AUTO
        18 004735   200021 036100                    ADLQ    FILLER_SIZE,,AUTO
        18 004736   000010 036007                    ADLQ    8,DL
        18 004737   000011 506007                    DIV     9,DL
        18 004740   200016 756100                    STQ     DEP_SIZE,,AUTO

     1350    15559    6                CALL CHECK_FOR_DEPENDING (DEP_SIZE, QUAL$, SYM$);  /*#32767*/

  15559 18 004741   200010 631500                    EPPR1   SYM$,,AUTO
        18 004742   200055 451500                    STP1    @SYM$,,AUTO
        18 004743   200051 236100                    LDQ     @QUAL$,,AUTO
        18 004744   200054 756100                    STQ     BRO$$,,AUTO
        18 004745   200016 633500                    EPPR3   DEP_SIZE,,AUTO
        18 004746   200053 453500                    STP3    @QLT$$,,AUTO
        18 004747   001733 701000 18                 TSX1    CHECK_FOR_DEPENDING
        18 004750   000000 011000                    NOP     0

     1351    15560
     1352    15561    6                IF SYM$ -> ST.ID = %ARRAY

  15561 18 004751   200010 470500                    LDP0    SYM$,,AUTO
        18 004752   000000 220100                    LDX0    0,,PR0
        18 004753   000765 100003                    CMPX0   501,DU
        18 004754   005021 601000 18                 TNZ     s:15571
        18 004755   200013 235100                    LDA     MY_SIZE,,AUTO
        18 004756   000041 115000 19                 CMPA    33
        18 004757   004767 603000 18                 TRC     s:15566
        18 004760   000001 236100                    LDQ     1,,PR0
        18 004761   040000 316007                    CANQ    16384,DL
        18 004762   005021 600000 18                 TZE     s:15571
        18 004763   000002 221100                    LDX1    2,,PR0
        18 004764   005021 601000 18                 TNZ     s:15571
        18 004765   000042 115000 19                 CMPA    34
        18 004766   005021 602000 18                 TNC     s:15571

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:207  
     1353    15562    6                AND (MY_SIZE > %(BYTE_STORAGE_LIMIT*9/8) OR
     1354    15563    6                     SYM$ -> VARIABLE.NDSC.TN = %NDSC4 AND
     1355    15564    6                     SYM$ -> ST.TYPE = %TYD AND
     1356    15565    6                     MY_SIZE > %(BYTE_STORAGE_LIMIT*9/16)) THEN
     1357    15566    7                  DO CASE (SYM$ -> ST.TYPE);

  15566 18 004767   000002 221100                    LDX1    2,,PR0
        18 004770   000024 101003                    CMPX1   20,DU
        18 004771   004773 602011 18                 TNC     s:15566+4,X1
        18 004772   005021 710000 18                 TRA     s:15571
        18 004773   005017 710000 18                 TRA     s:15568
        18 004774   005021 710000 18                 TRA     s:15571
        18 004775   005017 710000 18                 TRA     s:15568
        18 004776   005017 710000 18                 TRA     s:15568
        18 004777   005021 710000 18                 TRA     s:15571
        18 005000   005021 710000 18                 TRA     s:15571
        18 005001   005017 710000 18                 TRA     s:15568
        18 005002   005017 710000 18                 TRA     s:15568
        18 005003   005017 710000 18                 TRA     s:15568
        18 005004   005021 710000 18                 TRA     s:15571
        18 005005   005021 710000 18                 TRA     s:15571
        18 005006   005017 710000 18                 TRA     s:15568
        18 005007   005017 710000 18                 TRA     s:15568
        18 005010   005021 710000 18                 TRA     s:15571
        18 005011   005017 710000 18                 TRA     s:15568
        18 005012   005017 710000 18                 TRA     s:15568
        18 005013   005021 710000 18                 TRA     s:15571
        18 005014   005021 710000 18                 TRA     s:15571
        18 005015   005021 710000 18                 TRA     s:15571
        18 005016   005017 710000 18                 TRA     s:15568

     1358    15567    7                   CASE (%TYD, %TYJ, %TYO, %TYE, %TYF, %TYH, %TYA, %TYN, %TYK, %TYB, %
             15567                             TYC);

     1359    15568    7                      SYM$ -> ARRAY.B.GREATER_256K = TRUE;
             15568                               /* Byte offsets used for indexing */

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:208  
  15568 18 005017   020000 236003                    LDQ     8192,DU
        18 005020   000003 256100                    ORSQ    3,,PR0

     1360    15569    7                  END; /* Else use word offsets, Xn OK */

     1361    15570
     1362    15571    6                IF NOT SYM$ -> VARIABLE.B.REDEF_SUB THEN

  15571 18 005021   200010 470500                    LDP0    SYM$,,AUTO
        18 005022   000003 430100                    FSZN    3,,PR0
        18 005023   005034 604000 18                 TMI     s:15578

     1363    15572    7                  DO;

     1364    15573    7                    SIZE = SIZE + MY_SIZE  + FILLER_SIZE ;

  15573 18 005024   200011 236100                    LDQ     SIZE,,AUTO
        18 005025   200013 036100                    ADLQ    MY_SIZE,,AUTO
        18 005026   200021 036100                    ADLQ    FILLER_SIZE,,AUTO
        18 005027   200011 756100                    STQ     SIZE,,AUTO

     1365    15574    7                    IF SIZE > %(BYTE_STORAGE_LIMIT*9) THEN

  15574 18 005030   000044 116003                    CMPQ    36,DU
        18 005031   005034 604400 18                 TMOZ    s:15578

     1366    15575    7                      SIZE = %(BYTE_STORAGE_LIMIT * 9 + 1) ;

  15575 18 005032   000043 235000 19                 LDA     35
        18 005033   200011 755100                    STA     SIZE,,AUTO

     1367    15576    7                  END;

     1368    15577
     1369    15578    6                CALL REDEF_SIZE_CHECKS (SYM$);

  15578 18 005034   200010 631500                    EPPR1   SYM$,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:209  
        18 005035   200053 451500                    STP1    @QLT$$,,AUTO
        18 005036   001221 701000 18                 TSX1    REDEF_SIZE_CHECKS
        18 005037   000000 011000                    NOP     0

     1370    15579
     1371    15580        /*V*
     1372    15581            DATA_STRUCTURE_LOOP_WRAPUP -- If the current data item contains a variable
     1373    15582                                          occurs clause then the father is marked as
     1374    15583                                          containing one also.  The data item's brother
     1375    15584                                          (if one exists) is assigned to NEXT$ to be
     1376    15585                                          processed in the next iteration of the loop.
     1377    15586        */
     1378    15587
     1379    15588    6                    IF SYM$ -> VARIABLE.B.OCCURS_DEPENDING THEN

  15588 18 005040   200010 470500                    LDP0    SYM$,,AUTO
        18 005041   000003 236100                    LDQ     3,,PR0
        18 005042   000200 316003                    CANQ    128,DU
        18 005043   005062 600000 18                 TZE     s:15598

     1380    15589    6                      QUAL$ -> QLT.ST$ -> VARIABLE.B.OCCURS_DEPENDING = TRUE ;

  15589 18 005044   200051 471500                    LDP1    @QUAL$,,AUTO
        18 005045   100000 473500                    LDP3    0,,PR1
        18 005046   300004 474500                    LDP4    4,,PR3
        18 005047   000200 236003                    LDQ     128,DU
        18 005050   400003 256100                    ORSQ    3,,PR4

     1381    15590
     1382    15591    6                  END ; /* Else Do (It's not Renames) */

     1383    15592
     1384    15593    5                END /* Level # ~= 88 */ ;

  15593 18 005051   005062 710000 18                 TRA     s:15598

     1385    15594
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:210  
     1386    15595    4                ELSE /* Condition for group item */
     1387    15596    4                  SYM$ -> CONDITION.B.GLOBAL = QUAL$ -> QLT.ST$ -> VARIABLE.B.GLOBAL;

  15596 18 005052   100000 473500                    LDP3    0,,PR1
        18 005053   300004 474500                    LDP4    4,,PR3
        18 005054   200010 475500                    LDP5    SYM$,,AUTO
        18 005055   400003 236100                    LDQ     3,,PR4
        18 005056   000014 736000                    QLS     12
        18 005057   500003 676100                    ERQ     3,,PR5
        18 005060   100000 376003                    ANQ     32768,DU
        18 005061   500003 656100                    ERSQ    3,,PR5

     1388    15597
     1389    15598    4                NEXT$ = NEXT$ -> QLT.BROTHER ;

  15598 18 005062   200012 470500                    LDP0    NEXT$,,AUTO
        18 005063   000002 236100                    LDQ     2,,PR0
        18 005064   200012 756100                    STQ     NEXT$,,AUTO

     1390    15599
     1391    15600    4              END /* While NEXT$ ~= Nil */ ;

  15600 18 005065   200012 236100                    LDQ     NEXT$,,AUTO
        18 005066   000000 116000 19                 CMPQ    0
        18 005067   002252 601000 18                 TNZ     s:14647

     1392    15601
     1393    15602        /*V*
     1394    15603            FINAL_STRUCTURE_SIZE -- If the structure is an array, then the
     1395    15604                                    total structure size must be a multiple
     1396    15605                                    of the maximum boundary needed within the structure.
     1397    15606                                    If this requirement isn't satisfied then filler
     1398    15607                                    is allocated to meet it.
     1399    15608        */
     1400    15609
     1401    15610    3              IF O1COM.NEXT_HALF_BYTE = 1 THEN

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:211  
  15610 18 005070   000003 235000 xsym               LDA     O1COM+3
        18 005071   000001 115007                    CMPA    1,DL
        18 005072   005105 601000 18                 TNZ     s:15622

     1402    15611    4                DO;

     1403    15612    4                  SIZE = SIZE + 4;

  15612 18 005073   000004 236007                    LDQ     4,DL
        18 005074   200011 056100                    ASQ     SIZE,,AUTO

     1404    15613    4                  O1COM.NEXT_HALF_BYTE = 0;

  15613 18 005075   000003 450000 xsym               STZ     O1COM+3

     1405    15614    4                  O1COM.NEXT_BYTE = O1COM.NEXT_BYTE + 1;

  15614 18 005076   000002 235000 xsym               LDA     O1COM+2
        18 005077   000001 035007                    ADLA    1,DL
        18 005100   000002 755000 xsym               STA     O1COM+2

     1406    15615    4                  IF O1COM.NEXT_BYTE = 4 THEN

  15615 18 005101   000004 115007                    CMPA    4,DL
        18 005102   005105 601000 18                 TNZ     s:15622

     1407    15616    5                    DO;

     1408    15617    5                      O1COM.NEXT_BYTE = 0;

  15617 18 005103   000002 450000 xsym               STZ     O1COM+2

     1409    15618    5                      O1COM.NEXT_SA   = O1COM.NEXT_SA + 1;

  15618 18 005104   000001 054000 xsym               AOS     O1COM+1

     1410    15619    5                    END;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:212  

     1411    15620    4                END;

     1412    15621
     1413    15622    3              SYM$ = QUAL$ -> QLT.ST$ ;

  15622 18 005105   200051 470500                    LDP0    @QUAL$,,AUTO
        18 005106   000000 471500                    LDP1    0,,PR0
        18 005107   100004 236100                    LDQ     4,,PR1
        18 005110   200010 756100                    STQ     SYM$,,AUTO

     1414    15623    3              IF SYM$ -> VARIABLE.ID = %ARRAY THEN

  15623 18 005111   200010 471500                    LDP1    SYM$,,AUTO
        18 005112   100000 220100                    LDX0    0,,PR1
        18 005113   000765 100003                    CMPX0   501,DU
        18 005114   005177 601000 18                 TNZ     s:15681

     1415    15624    4                DO; /* Array of group items */

     1416    15625    4                  IF SYM$ -> VARIABLE.B.GLOBAL THEN

  15625 18 005115   100003 236100                    LDQ     3,,PR1
        18 005116   000010 316003                    CANQ    8,DU
        18 005117   005165 600000 18                 TZE     s:15677

     1417    15626    5                   DO; /* If INDEXED BY phrase on a GLOBAL array, make index GLOBAL */

     1418    15627                           %GET_LTS (@ID  = %DIMS,
     1419    15628                                     @ST$ = SYM$);

  15630 18 005120   100005 236100                    LDQ     5,,PR1
        18 005121   000000 116000 19                 CMPQ    0
        18 005122   005132 600000 18                 TZE     s:15664
        18 005123   100005 473500                    LDP3    5,,PR1
        18 005124   300000 221100                    LDX1    0,,PR3
        18 005125   001105 101003                    CMPX1   581,DU
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:213  
        18 005126   005132 601000 18                 TNZ     s:15664

  15634 18 005127   300001 236100                    LDQ     1,,PR3
        18 005130   000000 756000 6                  STQ     LTS$

  15662 18 005131   005144 710000 18                 TRA     s:15671

  15664 18 005132   000000 116000 19                 CMPQ    0
        18 005133   005142 600000 18                 TZE     s:15668
        18 005134   100005 473500                    LDP3    5,,PR1
        18 005135   300000 221100                    LDX1    0,,PR3
        18 005136   001104 101003                    CMPX1   580,DU
        18 005137   005142 601000 18                 TNZ     s:15668

  15666 18 005140   000000 756000 6                  STQ     LTS$
        18 005141   005144 710000 18                 TRA     s:15671

  15668 18 005142   000000 236000 19                 LDQ     0
        18 005143   000000 756000 6                  STQ     LTS$

     1420    15671    5                      LTS$ = LTS$ -> DIMS.D.INDEX$ ((LTS$ -> DIMS.N - 5) / 3);

  15671 18 005144   000000 473400 6                  LDP3    LTS$
        18 005145   300000 236100                    LDQ     0,,PR3
        18 005146   777777 376007                    ANQ     -1,DL
        18 005147   000005 136007                    SBLQ    5,DL
        18 005150   000003 506007                    DIV     3,DL
        18 005151   000003 402007                    MPY     3,DL
        18 005152   300004 236106                    LDQ     4,QL,PR3
        18 005153   000000 756000 6                  STQ     LTS$

     1421    15672    6                      DO WHILE LTS$ ~= ADDR (NIL);

  15672 18 005154   005163 710000 18                 TRA     s:15675

     1422    15673    6                        LTS$ -> INDEXES.INDEX_ST$ -> VARIABLE.B.GLOBAL = TRUE;

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:214  
  15673 18 005155   000000 470400 6                  LDP0    LTS$
        18 005156   000001 471500                    LDP1    1,,PR0
        18 005157   000010 236003                    LDQ     8,DU
        18 005160   100003 256100                    ORSQ    3,,PR1

     1423    15674    6                        LTS$ = LTS$ -> INDEXES.LINK;

  15674 18 005161   000002 236100                    LDQ     2,,PR0
        18 005162   000000 756000 6                  STQ     LTS$

     1424    15675    6                      END;

  15675 18 005163   000000 116000 19                 CMPQ    0
        18 005164   005155 601000 18                 TNZ     s:15673

     1425    15676    5                    END;

     1426    15677    4                  MAX_BOUND1 = MAX_BOUND * 9 ;

  15677 18 005165   200004 470500                    LDP0    @MAX_BOUND,,AUTO
        18 005166   000000 236100                    LDQ     0,,PR0
        18 005167   000022 732000                    QRS     18
        18 005170   000011 402007                    MPY     9,DL
        18 005171   200007 756100                    STQ     MAX_BOUND1,,AUTO

     1427    15678    4                  SIZE = (SIZE + MAX_BOUND1 - 1) / MAX_BOUND1 * MAX_BOUND1 ;

  15678 18 005172   200011 036100                    ADLQ    SIZE,,AUTO
        18 005173   000001 136007                    SBLQ    1,DL
        18 005174   200007 506100                    DIV     MAX_BOUND1,,AUTO
        18 005175   200007 402100                    MPY     MAX_BOUND1,,AUTO
        18 005176   200011 756100                    STQ     SIZE,,AUTO

     1428    15679    4                END;

     1429    15680
     1430    15681    3              SIZE = (SIZE + 8) / 9 ; /* Convert group item size to bytes */
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:215  

  15681 18 005177   200011 236100                    LDQ     SIZE,,AUTO
        18 005200   000010 036007                    ADLQ    8,DL
        18 005201   000011 506007                    DIV     9,DL
        18 005202   200011 756100                    STQ     SIZE,,AUTO

     1431    15682
     1432    15683    3              CALL STRUCTURE_SIZE_CHECK(SIZE, SYM$);

  15683 18 005203   200010 630500                    EPPR0   SYM$,,AUTO
        18 005204   200066 450500                    STP0    NEW_DPS$,,AUTO
        18 005205   200011 631500                    EPPR1   SIZE,,AUTO
        18 005206   200065 451500                    STP1    DEPEND_SIZE$,,AUTO
        18 005207   000003 701000 18                 TSX1    STRUCTURE_SIZE_CHECK
        18 005210   000000 011000                    NOP     0

     1433    15684
     1434    15685    4              DO CASE (SYM$ -> ST.ID);

  15685 18 005211   200010 470500                    LDP0    SYM$,,AUTO
        18 005212   000000 236100                    LDQ     0,,PR0
        18 005213   000022 772000                    QRL     18
        18 005214   001002 136007                    SBLQ    514,DL
        18 005215   000002 116007                    CMPQ    2,DL
        18 005216   005220 602006 18                 TNC     s:15685+7,QL
        18 005217   005231 710000 18                 TRA     s:15696
        18 005220   005222 710000 18                 TRA     s:15689
        18 005221   005222 710000 18                 TRA     s:15689

     1435    15686    4                CASE (

     1436    15687    4                      %FD, %SD
     1437    15688    4                     );
     1438    15689    4                  CALL LINAGE_COUNT_KLUDGE (SIZE, SYM$);

  15689 18 005222   200010 631500                    EPPR1   SYM$,,AUTO
        18 005223   200054 451500                    STP1    BRO$$,,AUTO
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:216  
        18 005224   200011 633500                    EPPR3   SIZE,,AUTO
        18 005225   200053 453500                    STP3    @QLT$$,,AUTO
        18 005226   001142 701000 18                 TSX1    LINAGE_COUNT_KLUDGE
        18 005227   000000 011000                    NOP     0
        18 005230   005231 710000 18                 TRA     s:15696

     1439    15690
     1440    15691    4                CASE (ELSE);

     1441    15692    4                  /* Peachy */;
     1442    15693
     1443    15694    4              END; /* Case */

     1444    15695    3            END ;
     1445    15696    2   END CALC_SIZE;

  15696 18 005231   200050 221300                    LDX1  ! REDEF_OBJ_ITEM_GBCD+1,,AUTO
        18 005232   000001 702211                    TSX2  ! 1,X1

     1446    15697        %EJECT;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:217  
     1447    15698
     1448    15699    2        DO CASE (QUAL$ -> QLT.ST$ -> ST.ID);

  15699 18 005233   200003 470500                    LDP0    @QUAL$,,AUTO
        18 005234   000000 471500                    LDP1    0,,PR0
        18 005235   100004 473500                    LDP3    4,,PR1
        18 005236   300000 236100                    LDQ     0,,PR3
        18 005237   000022 772000                    QRL     18
        18 005240   000751 136007                    SBLQ    489,DL
        18 005241   000035 116007                    CMPQ    29,DL
        18 005242   005244 602006 18                 TNC     s:15699+9,QL
        18 005243   005306 710000 18                 TRA     s:15718
        18 005244   005301 710000 18                 TRA     s:15715
        18 005245   005306 710000 18                 TRA     s:15718
        18 005246   005306 710000 18                 TRA     s:15718
        18 005247   005306 710000 18                 TRA     s:15718
        18 005250   005306 710000 18                 TRA     s:15718
        18 005251   005306 710000 18                 TRA     s:15718
        18 005252   005306 710000 18                 TRA     s:15718
        18 005253   005301 710000 18                 TRA     s:15715
        18 005254   005306 710000 18                 TRA     s:15718
        18 005255   005306 710000 18                 TRA     s:15718
        18 005256   005306 710000 18                 TRA     s:15718
        18 005257   005306 710000 18                 TRA     s:15718
        18 005260   005301 710000 18                 TRA     s:15715
        18 005261   005301 710000 18                 TRA     s:15715
        18 005262   005301 710000 18                 TRA     s:15715
        18 005263   005306 710000 18                 TRA     s:15718
        18 005264   005306 710000 18                 TRA     s:15718
        18 005265   005306 710000 18                 TRA     s:15718
        18 005266   005306 710000 18                 TRA     s:15718
        18 005267   005306 710000 18                 TRA     s:15718
        18 005270   005306 710000 18                 TRA     s:15718
        18 005271   005306 710000 18                 TRA     s:15718
        18 005272   005301 710000 18                 TRA     s:15715
        18 005273   005306 710000 18                 TRA     s:15718
        18 005274   005306 710000 18                 TRA     s:15718
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:218  
        18 005275   005301 710000 18                 TRA     s:15715
        18 005276   005301 710000 18                 TRA     s:15715
        18 005277   005301 710000 18                 TRA     s:15715
        18 005300   005301 710000 18                 TRA     s:15715

     1449    15700
     1450    15701    2          CASE (

     1451    15702                     %ST_ITEMS_WITH_STORAGE;
     1452    15714    2               );
     1453    15715    2            CALL CALC_SIZE (QUAL$);

  15715 18 005301   200003 236100                    LDQ     @QUAL$,,AUTO
        18 005302   200051 756100                    STQ     REDEF_OBJ_ITEM_GBCD+2,,AUTO
        18 005303   002231 701000 18                 TSX1    CALC_SIZE
        18 005304   000000 011000                    NOP     0
        18 005305   005307 710000 18                 TRA     s:15723

     1454    15716
     1455    15717    2          CASE (ELSE);

     1456    15718    2            RETURN;

  15718 18 005306   000000 702200 xent               TSX2  ! X66_ARET

     1457    15719
     1458    15720    2        END; /* Case of id's */

     1459    15721
     1460    15722
     1461    15723    1   END Z8DC$SIZE_CALC ;

  15723 18 005307   000000 702200 xent               TSX2  ! X66_ARET
     1462    15724        %EJECT ;
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:219  

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:220  
--  Include file information  --

   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_MKCN.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8DC$SIZE_CALC.
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:221  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 002 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 003 LblCom QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 QLT$

  ****  Section 004 LblCom PREV_01_QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 PREV_01_QLT$

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:222  
  ****  Section 005 LblCom QLT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 QLT_

  ****  Section 006 LblCom LTS$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LONG_ITEM$                 0-0-0/w PTR         r     1 LTS$

  ****  Section 007 LblCom LTS_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 LTS_

  ****  Section 008 LblCom MKCN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 MKCN

  ****  Section 009 LblCom ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ETT$

  ****  Section 010 LblCom HEAD_ETT$

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:223  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAD_ETT$

  ****  Section 011 LblCom ETT_BUCKETS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ETT_BUCKETS(0:511)

  ****  Section 012 LblCom ETT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ETT_

  ****  Section 013 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 014 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 015 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:224  

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 016 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Section 017 RoData Z8DC$SIZE_CALC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 NEG6

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    61-0-0/w PTR         r     1 @CURRENT_SIZE             61-0-0/w PTR         r     1 @CURRENT_SIZE
    62-0-0/w PTR         r     1 @DEPEND_ST$               62-0-0/w PTR         r     1 @DIMS$
     4-0-0/w PTR         r     1 @MAX_BOUND                53-0-0/w PTR         r     1 @QLT$$
     3-0-0/w PTR         r     1 @QUAL$                    54-0-0/w PTR         r     1 @QUAL$
    51-0-0/w PTR         r     1 @QUAL$                    64-0-0/w PTR         r     1 @RETURN$
    63-0-0/w PTR         r     1 @RETURN$                  53-0-0/w PTR         r     1 @SIZE
    53-0-0/w PTR         r     1 @SIZE                     65-0-0/w PTR         r     1 @SIZE_VALUE
    66-0-0/w PTR         r     1 @SYM$                     53-0-0/w PTR         r     1 @SYM$
    63-0-0/w PTR         r     1 @SYM$                     54-0-0/w PTR         r     1 @SYM$
    53-0-0/w PTR         r     1 @SYM$                     55-0-0/w PTR         r     1 @SYM$
    54-0-0/w PTR         r     1 BRO$$                      5-0-0/w PTR         r     1 CONDITION$
    *0-0-0/w SBIN        r     1 CURRENT_SIZE              *0-0-0/w SBIN        r     1 CURRENT_SIZE
    65-0-0/w PTR         r     1 CURRENT_SIZE$             65-0-0/w PTR         r     1 DEPEND_SIZE$
    *0-0-0/w PTR         r     1 DEPEND_ST$                16-0-0/w SBIN        r     1 DEP_SIZE
    54-0-0/w SBIN        r     1 DIFF                      17-0-0/w SBIN(18)    r     1 DIGIT_POS
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:225  
    20-0-0/w SBIN        r     1 DIGIT_POS_IN_BITS         *0-0-0/w PTR         r     1 DIMS$
    67-0-0/w PTR         r     1 DN2$                      55-0-0/w UBIN        r     1 END_BYTE_POS
    61-0-0/w SBIN        r     1 END_CN                    60-0-0/w PTR         r     1 END_ST$
    62-0-0/w UBIN        r     1 END_ST_SIZE               21-0-0/w UBIN        r     1 FILLER_SIZE
    22-0-0/w PTR         r     1 FIRST_ELEM$               66-0-0/w PTR         r     1 ITEM_SIZE$
    27-0-0/w UBIN        r     1 LAST_BYTE                 31-0-0/w UBIN        r     1 LAST_CHAR
    15-0-0/w SBIN        r     1 LAST_DIM                  30-0-0/w UBIN        r     1 LAST_HALF_BYTE
    32-0-0/b BIT         r     1 LAST_ITEM_GBCD            26-0-0/w SBIN        r     1 LAST_SA
    63-0-0/w PTR         r     1 LTS$$                     56-0-0/w PTR         r     1 LTS$$
    *0-0-0/w SBIN(18)    r     1 MAX_BOUND                  7-0-0/w SBIN        r     1 MAX_BOUND1
     6-0-0/w SBIN(18)    r     1 MAX_BOUND_SON             13-0-0/w UBIN        r     1 MY_SIZE
    14-0-0/w UBIN        r     1 MY_SIZE1                  71-0-0/w PTR         r     1 NEW_DEP$
    66-0-0/w PTR         r     1 NEW_DPS$                  67-0-0/w PTR         r     1 NEW_LONG$
    67-0-0/w PTR         r     1 NEW_SIZE$                 12-0-0/w PTR         r     1 NEXT$
    23-0-0/w PTR         r     1 OBJECT_ST$                55-0-0/w PTR         r     1 QLT$$
    *0-0-0/w PTR         r     1 QLT$$                     *0-0-0/w PTR         r     1 QUAL$
    *0-0-0/w PTR         r     1 QUAL$                     *0-0-0/w PTR         r     1 QUAL$
    37-0-0/w SBIN        r     1 REDEF_FINAL_BYTE          41-0-0/w SBIN        r     1 REDEF_FINAL_CHAR
    40-0-0/w SBIN        r     1 REDEF_FINAL_HALF_BYTE
    42-0-0/b BIT         r     1 REDEF_FINAL_ITEM_GBCD
    36-0-0/w SBIN        r     1 REDEF_FINAL_SA            44-0-0/w SBIN        r     1 REDEF_OBJ_BYTE
    46-0-0/w SBIN        r     1 REDEF_OBJ_CHAR
    35-0-0/w SBIN        r     1 REDEF_OBJ_FILLER_SIZE
    45-0-0/w SBIN        r     1 REDEF_OBJ_HALF_BYTE       47-0-0/b BIT         r     1 REDEF_OBJ_ITEM_GBCD
    43-0-0/w SBIN        r     1 REDEF_OBJ_SA              33-0-0/w SBIN        r     1 REDEF_OBJ_SIZE
    34-0-0/w SBIN        r     1 REDEF_OBJ_SIZE2           *0-0-0/w PTR         r     1 RETURN$
    *0-0-0/w PTR         r     1 RETURN$                   11-0-0/w SBIN        r     1 SIZE
    *0-0-0/w SBIN        r     1 SIZE                      *0-0-0/w SBIN        r     1 SIZE
    70-0-0/w PTR         r     1 SIZE$                     64-0-0/w PTR         r     1 SIZE$
    *0-0-0/w UBIN        r     1 SIZE_VALUE                54-0-0/w UBIN        r     1 START_BYTE_POS
    57-0-0/w SBIN        r     1 START_CN                  56-0-0/w PTR         r     1 START_ST$
    24-0-0/w PTR         r     1 SUBJECT_QLT$              25-0-0/w PTR         r     1 SUBJECT_ST$
    10-0-0/w PTR         r     1 SYM$                      *0-0-0/w PTR         r     1 SYM$
    *0-0-0/w PTR         r     1 SYM$                      *0-0-0/w PTR         r     1 SYM$
    *0-0-0/w PTR         r     1 SYM$                      *0-0-0/w PTR         r     1 SYM$
    *0-0-0/w PTR         r     1 SYM$

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:226  
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248)       1 COMCOM
     0-0-0/w STRC(180)         1 HIER_STK(0:50)
     0-0-0/w SBIN              1 HIER_STK_PTR
     0-0-0/w UBIN              1 LTS_STEP(0:37)
     0-0-0/d STRC(11580) r     1 O1COM                      0-0-0/w STRC(144)         1 PAGE_FORMAT
     0-0-0/w STRC(153)         1 REP_STK(0:50)              0-0-0/w SBIN              1 REP_STK_PTR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w STRC(396)         1 ALPHABET
     0-0-0/w STRC(144)         1 ALTER_LTS                  0-0-0/w STRC(3672)        1 ALT_KEY
     0-0-0/w STRC(36864)       1 ARGLIST                    0-0-0/w STRC(396)   r     1 ARRAY
     0-0-0/w STRC(180)         1 ARRAY_PRESET_LTS           0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BASE_LTS                   0-0-0/w STRC(288)         1 BINARY_OP
     0-0-0/w STRC(396)         1 BLOCK                      0-0-0/w STRC(144)         1 BT
     0-0-0/w STRC(288)         1 CALL_STMT                  0-0-0/w STRC(396)         1 CD
     0-0-0/w STRC(288)         1 CD_LTS                     0-0-0/w CHAR(4096)        1 CHARS
     0-0-0/w STRC(396)         1 CLASS                      0-0-0/w STRC(288)         1 COMPUTE_STMT
     0-0-0/w STRC(396)   r     1 CONDITION                  0-0-0/w STRC(396)         1 CONST
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(540)         1 CONTROL_NAME_LTS
     0-0-0/w STRC(1872)        1 COPY_FILE                  0-0-0/w STRC(396)         1 DB
     0-0-0/w STRC(396)         1 DCB_                       0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER
     0-0-0/w STRC(252)         1 DEFERED_ID_TREE            0-0-0/w STRC(288)         1 DEFERED_QUAL_ID
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(108)   r     1 DEPENDING_SIZE
     0-0-0/w STRC(5472)  r     1 DIMS                       0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w STRC(216)         1 DML_REC
PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:227  
     0-0-0/w STRC(180)   r     1 ETT                        0-0-0/w STRC(73836)       1 EVALUATE
     0-0-0/w STRC(396)         1 FD                         0-0-0/w STRC(1692)        1 FILE_LTS
     0-0-0/w STRC(288)         1 ILS_LIST                   0-0-0/w STRC(108)   r     1 INDEXES
     0-0-0/w STRC(360)         1 INIT_LTS                   0-0-0/w STRC(288)         1 INSPECT_1_STMT
     0-0-0/w STRC(288)         1 INSPECT_2_STMT             0-0-0/w STRC(288)         1 INSPECT_4_STMT
     0-0-0/w STRC(396)         1 INTDEF                     0-0-0/w STRC(180)         1 IO_RESTORE_CHAIN
     0-0-0/w STRC(144)         1 KEY                        0-0-0/w STRC(396)         1 LABEL
     0-0-0/w STRC(288)         1 LA_ITEM                    0-0-0/w STRC(36864)       1 LCNST
     0-0-0/w STRC(72)    r     1 LONG                       0-0-0/w STRC        r     1 LTS
     0-0-0/w STRC(360)   r     1 LTSS                       0-0-0/w STRC(36936)       1 LTS_PTR_ARRAY
     0-0-0/w STRC(504)         1 LX_CD_INPUT                0-0-0/w STRC(324)         1 LX_CD_I_O
     0-0-0/w STRC(396)         1 LX_CD_OUTPUT               0-0-0/w STRC(288)         1 LX_ETT_ITEM
     0-0-0/w STRC(288)         1 LX_ITEM                    0-0-0/w STRC(288)         1 LX_LARGE
     0-0-0/w STRC(288)         1 LX_LIST                    0-0-0/w STRC(1224)        1 LX_REC_DECL
     0-0-0/w STRC(864)         1 LX_REPORT_REC              0-0-0/w STRC(288)         1 LX_TERMINAL
     0-0-0/w STRC(396)         1 MNEMONIC                   0-0-0/w STRC(288)         1 MULTIPLY_STMT
     0-0-0/w STRC(144)         1 NEL                        0-0-0/w STRC(216)         1 OPEN_LTS
     0-0-0/w STRC(36864)       1 PAGE                       0-0-0/w STRC(396)         1 PARA
     0-0-0/w STRC(144)         1 PRIME                      0-0-0/w STRC(396)         1 PROC_
     0-0-0/w STRC(396)         1 PROC_DEF                   0-0-0/w STRC(900)         1 PROC_SUPP
     0-0-0/w STRC(216)   r     1 QLT                        0-0-0/w STRC(396)         1 RD
     0-0-0/w STRC(288)         1 READ_STMT                  0-0-0/w STRC(216)         1 REF
     0-0-0/w STRC(108)   r     1 RENAMES                    0-0-0/w STRC(720)         1 REPORT_01_LTS
     0-0-0/w STRC(432)         1 REPORT_ELEM_LTS            0-0-0/w STRC(252)         1 REPORT_GRP_LTS
     0-0-0/w STRC(1332)        1 REPORT_LTS                 0-0-0/w STRC(288)         1 REWRITE_STMT
     0-0-0/w STRC(144)         1 RVA_LTS                    0-0-0/w STRC(396)   r     1 SCALAR
     0-0-0/w STRC(396)         1 SD                         0-0-0/w STRC(396)         1 SECTION
     0-0-0/w STRC(396)         1 SEGMENT                    0-0-0/w STRC(360)         1 SEGMENT_LTS
     0-0-0/w STRC(396)   r     1 ST                         0-0-0/w STRC(288)         1 START_STMT
     0-0-0/w STRC(252)         1 STRING_STMT                0-0-0/w STRC(288)         1 SUBTRACT_STMT
     0-0-0/w STRC(252)         1 SUM_LTS                    0-0-0/w STRC(396)         1 SWITCH
     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR              0-0-0/w STRC(396)         1 SYMDEF_
     0-0-0/w STRC(396)         1 SYMREF_                    0-0-0/w STRC(396)         1 TEMP
     0-0-0/w STRC(288)         1 UNARY_OP                   0-0-0/w STRC(288)         1 UNSTRING_STMT
     0-0-0/d STRC(612)         1 USE                        0-0-0/w STRC(252)         1 USE_SUPP
     0-0-0/w STRC(396)   r     1 VARIABLE                   0-0-0/w STRC(288)         1 WRITE_STMT

PL6.E3A0      #001=Z8DC$SIZE_CALC File=Z8DC.:Z8A6TSI                             SAT 08/09/97 11:02 Page:228  

   Procedure Z8DC$SIZE_CALC requires 2760 words for executable code.
   Procedure Z8DC$SIZE_CALC requires 70 words of local(AUTO) storage.

    No errors detected in file Z8DC.:Z8A6TSI    .
