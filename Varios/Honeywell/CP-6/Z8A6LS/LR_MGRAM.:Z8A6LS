VERSION A06

PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:1    
        1        1        /*M* MGRAM => MEMORY MANAGEMENT ROUTINES */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9
       10       10
       11       11
       12       12        GETNEW: PROC(NEW$,NEWLEN);
       13       13
       14       14        /*D*
       15       15               NAME: GETNEW
       16       16            PURPOSE:
       17       17
       18       18
       19       19           GET NEWLEN WORDS OF MEMORY & RETURN A POINTER TO THE WORDS IN
       20       20           NEW$. NEW$ IS ADDR(NIL) IF MEMORY IS EXHAUSTED */
       21       21
       22       22    1   DCL NEW$ PTR;
       23       23    1   DCL NEWLEN UBIN;
       24       24
       25       25        %INCLUDE CP_6;
       26     5585        %INCLUDE B_SEGIDS_C;
       27     6124
       28     6125        /* The DCB's defined below are not used within  this module;
       29     6126           but the defaults are set up for other modules */
       30     6127
       31     6128         %M$DCB(ACS=SEQUEN,CTG=YES,DCBN=M$LO,EXIST=NEWFILE,FUN=CREATE,ORG=UR);
       32     6202
       33     6203         %M$DCB(DCBN=M$SO,CTG=YES,FUN=CREATE,ORG=CONSEC,EXIST=NEWFILE);
       34     6277
       35     6278           %M$DCB(DCBN=M$OU,CTG=YES,FUN=CREATE,ORG=CONSEC,EXIST=NEWFILE);
       36     6352
       37     6353        %VLP_VECTOR(FPTN=GDS_VECTOR,STCLASS=STATIC,SEGID=%DS3SID);
PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:2    
       38     6368
       39     6369    1   DCL FREEMEM$ PTR STATIC INIT(ADDR(NIL));
       40     6370    1   DCL FREEMEMS$ PTR STATIC INIT(ADDR(NIL));
       41     6371    1   DCL FREEMEM UBIN STATIC INIT(0); /* NUMBER OF WORDS FREE */
       42     6372    1   DCL WORDS_GOTTEN UBIN STATIC INIT(0);
       43     6373    1   DCL BNDB BIT(36);
       44     6374    1   DCL BNDS REDEF BNDB SBIN;
       45     6375    1   DCL OFFS SBIN;
       46     6376    1   DCL GDS BIT(1) STATIC INIT('1'B);
       47     6377
       48     6378        %FPT_GDS(RESULTS=GDS_VECTOR,SEGSIZE=1024,STCLASS=CONSTANT);
       49     6394        %FPT_GDP(RESULTS=GDS_VECTOR,STCLASS=CONSTANT,PAGES=1);
       50     6408
       51     6409    1   DCL DIAG ENTRY(6);
       52     6410    1   DCL ALLOCATE_PAGE ENTRY(2);
       53     6411
       54     6412
       55     6413    1           BNDS=0;
       56     6414    1           GOTO BND_SET;
       57     6415
       58     6416    1   MEM_TRUNC: ENTRY (NEW$,NEWLEN);
       59     6417
       60     6418        /*D*
       61     6419               NAME: MEM_TRUNC
       62     6420            PURPOSE:
       63     6421
       64     6422           The original call to GETNEW just specified
       65     6423           how much memory to make available. Now some
       66     6424           is not going to be used. Adjust FREEMEM$
       67     6425           and FREEMEM accordingly.
       68     6426         */
       69     6427    1           IF FREEMEM$ >= NEW$     /* check if FREEMEM$ wrapped around */
       70     6428    1              THEN FREEMEM=FREEMEM+POFFW(FREEMEM$,NEW$);
       71     6429    1              ELSE FREEMEM=FREEMEM+POFFW(FREEMEM$,NEW$)+BITBIN('1000000'O);
       72     6430    1           FREEMEM$=NEW$;
       73     6431    1           IF ADDR(NEWLEN)=ADDR(NIL) THEN
       74     6432    1              RETURN;
PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:3    
       75     6433
       76     6434    1           BNDS=0;
       77     6435    1           GOTO BND_SET;
       78     6436
       79     6437
       80     6438    1   GETNEW2 : ENTRY(NEW$,NEWLEN);
       81     6439        /* DOUBLEWORD BOUND VERSION OF GETNEW */
       82     6440    1           BNDS=1;
       83     6441
       84     6442    1   BND_SET:;
       85     6443    2           DO WHILE (FREEMEM<NEWLEN+BNDS);
       86     6444
       87     6445         /* Next 12 lines is commemted out because it the real memory
       88     6446            is not always large enough, even with 1 mega real memory
       89     6447            Z8E_PROC_DIV still won't run. So the virtual memory will
       90     6448            be used from now on, any comment -- see Min Lee..
       91     6449
       92     6450                   IF GDS THEN
       93     6451                      CALL M$GDS(FPT_GDS) ALTRET(GDS_GONE);
       94     6452                   ELSE
       95     6453                      CALL M$GDP(FPT_GDP) ALTRET(ISR_GONE);
       96     6454                   FREEMEM=FREEMEM+1024;
       97     6455                   WORDS_GOTTEN=WORDS_GOTTEN+1024;
       98     6456                   IF FREEMEM$=ADDR(NIL) THEN
       99     6457                   DO;
      100     6458                      FREEMEM$=GDS_VECTOR.PTR$;
      101     6459                      FREEMEMS$=GDS_VECTOR.PTR$;
      102     6460                    END;
      103     6461
      104     6462         */
      105     6463
      106     6464    2            CALL ALLOCATE_PAGE (FREEMEM$, FREEMEM);
      107     6465
      108     6466    2            FREEMEM=FREEMEM+1024;
      109     6467    2            WORDS_GOTTEN=WORDS_GOTTEN+1024;
      110     6468    2          END;  /* DO WHILE */
      111     6469
PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:4    
      112     6470    1           OFFS=BITBIN(BINBIT(POFFW(FREEMEM$,FREEMEMS$),36)&BNDB);
      113     6471    1           OFFS=BITBIN(BINBIT(1+BNDS-OFFS,36)&BNDB);
      114     6472    1           FREEMEM$=PINCRW(FREEMEM$,OFFS);
      115     6473    1           NEW$=FREEMEM$;
      116     6474    1           FREEMEM$=PINCRW(FREEMEM$,NEWLEN);
      117     6475    1           FREEMEM=FREEMEM-NEWLEN-OFFS;
      118     6476
      119     6477    1           RETURN;
      120     6478
      121     6479         /*  next few lines are commented out because virtual memory is used.
      122     6480
      123     6481        GDS_GONE:;
      124     6482                GDS='0'B;
      125     6483                FREEMEM$=ADDR(NIL);
      126     6484                FREEMEM=0;
      127     6485                GOTO BND_SET;
      128     6486
      129     6487        ISR_GONE:;
      130     6488                CALL DIAG(15,'ERROR => Memory has just been exhausted%%');
      131     6489                NEW$=ADDR(NIL);
      132     6490          .... */
      133     6491
      134     6492    1   END GETNEW;
      135     6493        %EOD;

PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:5    
--  Include file information  --

   B_SEGIDS_C.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GETNEW.

   Procedure GETNEW requires 88 words for executable code.
   Procedure GETNEW requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:6    

 Object Unit name= GETNEW                                     File name= LR_MGRAM.:Z8A6TOU
 UTS= AUG 09 '97 09:33:51.60 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none    98    142  M$LO
    2   DCB   even  none    98    142  M$SO
    3   DCB   even  none    98    142  M$OU
    4   Data  even  none     7      7  GETNEW
    5  RoData even  UTS     13     15  GETNEW
    6   Proc  even  none    88    130  GETNEW
    7  RoData even  none     4      4  GETNEW

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes            yes      Std        2  GETNEW
     6      4                  yes      Std        2  MEM_TRUNC
     6     47                  yes      Std        2  GETNEW2

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 ALLOCATE_PAGE
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  M$SO
     M$OU

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:8    


        1        1        /*M* MGRAM => MEMORY MANAGEMENT ROUTINES */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9
       10       10
       11       11
       12       12        GETNEW: PROC(NEW$,NEWLEN);

     12  6 000000   000000 700200 xent  GETNEW       TSX0  ! X66_AUTO_2
         6 000001   000012 000002                    ZERO    10,2

       13       13
       14       14        /*D*
       15       15               NAME: GETNEW
       16       16            PURPOSE:
       17       17
       18       18
       19       19           GET NEWLEN WORDS OF MEMORY & RETURN A POINTER TO THE WORDS IN
       20       20           NEW$. NEW$ IS ADDR(NIL) IF MEMORY IS EXHAUSTED */
       21       21
       22       22    1   DCL NEW$ PTR;
       23       23    1   DCL NEWLEN UBIN;
       24       24
       25       25        %INCLUDE CP_6;
       26     5585        %INCLUDE B_SEGIDS_C;
       27     6124
       28     6125        /* The DCB's defined below are not used within  this module;
       29     6126           but the defaults are set up for other modules */
       30     6127
       31     6128         %M$DCB(ACS=SEQUEN,CTG=YES,DCBN=M$LO,EXIST=NEWFILE,FUN=CREATE,ORG=UR);
       32     6202
PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:9    
       33     6203         %M$DCB(DCBN=M$SO,CTG=YES,FUN=CREATE,ORG=CONSEC,EXIST=NEWFILE);
       34     6277
       35     6278           %M$DCB(DCBN=M$OU,CTG=YES,FUN=CREATE,ORG=CONSEC,EXIST=NEWFILE);
       36     6352
       37     6353        %VLP_VECTOR(FPTN=GDS_VECTOR,STCLASS=STATIC,SEGID=%DS3SID);
       38     6368
       39     6369    1   DCL FREEMEM$ PTR STATIC INIT(ADDR(NIL));
       40     6370    1   DCL FREEMEMS$ PTR STATIC INIT(ADDR(NIL));
       41     6371    1   DCL FREEMEM UBIN STATIC INIT(0); /* NUMBER OF WORDS FREE */
       42     6372    1   DCL WORDS_GOTTEN UBIN STATIC INIT(0);
       43     6373    1   DCL BNDB BIT(36);
       44     6374    1   DCL BNDS REDEF BNDB SBIN;
       45     6375    1   DCL OFFS SBIN;
       46     6376    1   DCL GDS BIT(1) STATIC INIT('1'B);
       47     6377
       48     6378        %FPT_GDS(RESULTS=GDS_VECTOR,SEGSIZE=1024,STCLASS=CONSTANT);
       49     6394        %FPT_GDP(RESULTS=GDS_VECTOR,STCLASS=CONSTANT,PAGES=1);
       50     6408
       51     6409    1   DCL DIAG ENTRY(6);
       52     6410    1   DCL ALLOCATE_PAGE ENTRY(2);
       53     6411
       54     6412
       55     6413    1           BNDS=0;

   6413  6 000002   200005 450100                    STZ     BNDB,,AUTO

       56     6414    1           GOTO BND_SET;

   6414  6 000003   000053 710000 6                  TRA     BND_SET

       57     6415
       58     6416    1   MEM_TRUNC: ENTRY (NEW$,NEWLEN);

   6416  6 000004   000000 700200 xent  MEM_TRUNC    TSX0  ! X66_AUTO_2
         6 000005   000012 000002                    ZERO    10,2

       59     6417
PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:10   
       60     6418        /*D*
       61     6419               NAME: MEM_TRUNC
       62     6420            PURPOSE:
       63     6421
       64     6422           The original call to GETNEW just specified
       65     6423           how much memory to make available. Now some
       66     6424           is not going to be used. Adjust FREEMEM$
       67     6425           and FREEMEM accordingly.
       68     6426         */
       69     6427    1           IF FREEMEM$ >= NEW$     /* check if FREEMEM$ wrapped around */

   6427  6 000006   200003 470500                    LDP0    @NEW$,,AUTO
         6 000007   000002 236000 4                  LDQ     FREEMEM$
         6 000010   000000 116100                    CMPQ    0,,PR0
         6 000011   000023 602000 6                  TNC     s:6429

       70     6428    1              THEN FREEMEM=FREEMEM+POFFW(FREEMEM$,NEW$);

   6428  6 000012   000000 236100                    LDQ     0,,PR0
         6 000013   000022 772000                    QRL     18
         6 000014   200010 756100                    STQ     OFFS+2,,AUTO
         6 000015   000002 236000 4                  LDQ     FREEMEM$
         6 000016   000022 772000                    QRL     18
         6 000017   200010 136100                    SBLQ    OFFS+2,,AUTO
         6 000020   000004 036000 4                  ADLQ    FREEMEM
         6 000021   000004 756000 4                  STQ     FREEMEM
         6 000022   000037 710000 6                  TRA     s:6430

       71     6429    1              ELSE FREEMEM=FREEMEM+POFFW(FREEMEM$,NEW$)+BITBIN('1000000'O);

   6429  6 000023   000000 236100                    LDQ     0,,PR0
         6 000024   000022 772000                    QRL     18
         6 000025   200010 756100                    STQ     OFFS+2,,AUTO
         6 000026   000002 236000 4                  LDQ     FREEMEM$
         6 000027   000022 772000                    QRL     18
         6 000030   200010 136100                    SBLQ    OFFS+2,,AUTO
         6 000031   000004 036000 4                  ADLQ    FREEMEM
PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:11   
         6 000032   200011 756100                    STQ     OFFS+3,,AUTO
         6 000033   000014 236000 5                  LDQ     FPT_GDP+6
         6 000034   000017 772000                    QRL     15
         6 000035   200011 036100                    ADLQ    OFFS+3,,AUTO
         6 000036   000004 756000 4                  STQ     FREEMEM

       72     6430    1           FREEMEM$=NEW$;

   6430  6 000037   000000 236100                    LDQ     0,,PR0
         6 000040   000002 756000 4                  STQ     FREEMEM$

       73     6431    1           IF ADDR(NEWLEN)=ADDR(NIL) THEN

   6431  6 000041   200004 236100                    LDQ     @NEWLEN,,AUTO
         6 000042   000000 116000 7                  CMPQ    0
         6 000043   000045 601000 6                  TNZ     s:6434

       74     6432    1              RETURN;

   6432  6 000044   000000 702200 xent               TSX2  ! X66_ARET

       75     6433
       76     6434    1           BNDS=0;

   6434  6 000045   200005 450100                    STZ     BNDB,,AUTO

       77     6435    1           GOTO BND_SET;

   6435  6 000046   000053 710000 6                  TRA     BND_SET

       78     6436
       79     6437
       80     6438    1   GETNEW2 : ENTRY(NEW$,NEWLEN);

   6438  6 000047   000000 700200 xent  GETNEW2      TSX0  ! X66_AUTO_2
         6 000050   000012 000002                    ZERO    10,2

PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:12   
       81     6439        /* DOUBLEWORD BOUND VERSION OF GETNEW */
       82     6440    1           BNDS=1;

   6440  6 000051   000001 235007                    LDA     1,DL
         6 000052   200005 755100                    STA     BNDB,,AUTO

   6440  6 000053                       BND_SET      null
       83     6441
       84     6442    1   BND_SET:;
       85     6443    2           DO WHILE (FREEMEM<NEWLEN+BNDS);

   6443  6 000053   000066 710000 6                  TRA     s:6468

       86     6444
       87     6445         /* Next 12 lines is commemted out because it the real memory
       88     6446            is not always large enough, even with 1 mega real memory
       89     6447            Z8E_PROC_DIV still won't run. So the virtual memory will
       90     6448            be used from now on, any comment -- see Min Lee..
       91     6449
       92     6450                   IF GDS THEN
       93     6451                      CALL M$GDS(FPT_GDS) ALTRET(GDS_GONE);
       94     6452                   ELSE
       95     6453                      CALL M$GDP(FPT_GDP) ALTRET(ISR_GONE);
       96     6454                   FREEMEM=FREEMEM+1024;
       97     6455                   WORDS_GOTTEN=WORDS_GOTTEN+1024;
       98     6456                   IF FREEMEM$=ADDR(NIL) THEN
       99     6457                   DO;
      100     6458                      FREEMEM$=GDS_VECTOR.PTR$;
      101     6459                      FREEMEMS$=GDS_VECTOR.PTR$;
      102     6460                    END;
      103     6461
      104     6462         */
      105     6463
      106     6464    2            CALL ALLOCATE_PAGE (FREEMEM$, FREEMEM);

   6464  6 000054   000002 630400 7                  EPPR0   2
         6 000055   000001 631400 7                  EPPR1   1
PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:13   
         6 000056   000000 701000 xent               TSX1    ALLOCATE_PAGE
         6 000057   000000 011000                    NOP     0

      107     6465
      108     6466    2            FREEMEM=FREEMEM+1024;

   6466  6 000060   000004 235000 4                  LDA     FREEMEM
         6 000061   002000 035007                    ADLA    1024,DL
         6 000062   000004 755000 4                  STA     FREEMEM

      109     6467    2            WORDS_GOTTEN=WORDS_GOTTEN+1024;

   6467  6 000063   000005 236000 4                  LDQ     WORDS_GOTTEN
         6 000064   002000 036007                    ADLQ    1024,DL
         6 000065   000005 756000 4                  STQ     WORDS_GOTTEN

      110     6468    2          END;  /* DO WHILE */

   6468  6 000066   200004 470500                    LDP0    @NEWLEN,,AUTO
         6 000067   000000 236100                    LDQ     0,,PR0
         6 000070   200005 036100                    ADLQ    BNDB,,AUTO
         6 000071   000075 604000 6                  TMI     s:6470
         6 000072   000004 116000 4                  CMPQ    FREEMEM
         6 000073   000075 600000 6                  TZE     s:6470
         6 000074   000054 603000 6                  TRC     s:6464

      111     6469
      112     6470    1           OFFS=BITBIN(BINBIT(POFFW(FREEMEM$,FREEMEMS$),36)&BNDB);

   6470  6 000075   000003 235000 4                  LDA     FREEMEMS$
         6 000076   000022 771000                    ARL     18
         6 000077   200010 755100                    STA     OFFS+2,,AUTO
         6 000100   000002 236000 4                  LDQ     FREEMEM$
         6 000101   000022 772000                    QRL     18
         6 000102   200010 136100                    SBLQ    OFFS+2,,AUTO
         6 000103   200005 376100                    ANQ     BNDB,,AUTO
         6 000104   200006 756100                    STQ     OFFS,,AUTO
PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:14   

      113     6471    1           OFFS=BITBIN(BINBIT(1+BNDS-OFFS,36)&BNDB);

   6471  6 000105   200005 236100                    LDQ     BNDB,,AUTO
         6 000106   200006 136100                    SBLQ    OFFS,,AUTO
         6 000107   000001 036007                    ADLQ    1,DL
         6 000110   200005 376100                    ANQ     BNDB,,AUTO
         6 000111   200006 756100                    STQ     OFFS,,AUTO

      114     6472    1           FREEMEM$=PINCRW(FREEMEM$,OFFS);

   6472  6 000112   000022 736000                    QLS     18
         6 000113   000002 036000 4                  ADLQ    FREEMEM$
         6 000114   000002 756000 4                  STQ     FREEMEM$

      115     6473    1           NEW$=FREEMEM$;

   6473  6 000115   200003 471500                    LDP1    @NEW$,,AUTO
         6 000116   100000 756100                    STQ     0,,PR1

      116     6474    1           FREEMEM$=PINCRW(FREEMEM$,NEWLEN);

   6474  6 000117   000000 720100                    LXL0    0,,PR0
         6 000120   000000 636010                    EAQ     0,X0
         6 000121   000002 036000 4                  ADLQ    FREEMEM$
         6 000122   000002 756000 4                  STQ     FREEMEM$

      117     6475    1           FREEMEM=FREEMEM-NEWLEN-OFFS;

   6475  6 000123   000004 236000 4                  LDQ     FREEMEM
         6 000124   000000 136100                    SBLQ    0,,PR0
         6 000125   200006 136100                    SBLQ    OFFS,,AUTO
         6 000126   000004 756000 4                  STQ     FREEMEM

      118     6476
      119     6477    1           RETURN;

PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:15   
   6477  6 000127   000000 702200 xent               TSX2  ! X66_ARET
      120     6478
      121     6479         /*  next few lines are commented out because virtual memory is used.
      122     6480
      123     6481        GDS_GONE:;
      124     6482                GDS='0'B;
      125     6483                FREEMEM$=ADDR(NIL);
      126     6484                FREEMEM=0;
      127     6485                GOTO BND_SET;
      128     6486
      129     6487        ISR_GONE:;
      130     6488                CALL DIAG(15,'ERROR => Memory has just been exhausted%%');
      131     6489                NEW$=ADDR(NIL);
      132     6490          .... */
      133     6491
      134     6492    1   END GETNEW;
      135     6493        %EOD;

PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:16   
--  Include file information  --

   B_SEGIDS_C.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GETNEW.
PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:17   

 **** Variables and constants ****

  ****  Section 004  Data  GETNEW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w UBIN        r     1 FREEMEM                    2-0-0/w PTR         r     1 FREEMEM$
     3-0-0/w PTR         r     1 FREEMEMS$                  6-0-0/b BIT               1 GDS
     0-0-0/d STRC(72)    r     1 GDS_VECTOR                 5-0-0/w UBIN        r     1 WORDS_GOTTEN

  ****  Section 005 RoData GETNEW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/d STRC(216)   r     1 FPT_GDP                    0-0-0/d STRC(216)   r     1 FPT_GDS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @NEW$                      4-0-0/w PTR         r     1 @NEWLEN
     5-0-0/b BIT         r     1 BNDB                       5-0-0/w SBIN        r     1 BNDS
    *0-0-0/w PTR         r     1 NEW$                      *0-0-0/w UBIN        r     1 NEWLEN
     6-0-0/w SBIN        r     1 OFFS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 M$LO                       0-0-0/d ASTR(3528)  r     1 M$OU
     0-0-0/d ASTR(3528)  r     1 M$SO                       0-0-0N  NULL        r     1 M$UC

PL6.E3A0      #001=GETNEW File=LR_MGRAM.:Z8A6TSI                                 SAT 08/09/97 09:33 Page:18   

   Procedure GETNEW requires 88 words for executable code.
   Procedure GETNEW requires 10 words of local(AUTO) storage.

PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:19   
      136        1        /*T***********************************************************/
      137        2        /*T*                                                         */
      138        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      139        4        /*T*                                                         */
      140        5        /*T***********************************************************/
      141        6        COLLECT_GARBAGE : PROC (PSTR);
      142        7
      143        8        /*D*
      144        9               NAME: COLLECT_GARBAGE
      145       10           PURPOSE:
      146       11
      147       12
      148       13           Collect the garbage pointed to by PSTR.  The first
      149       14           half byte of PSTR contains the  length in half words,
      150       15           exclusive of the length half word itself.  All strings
      151       16           will be word aligned.
      152       17        */
      153       18
      154       19    1   DCL PSTR PTR;
      155       20
      156       21
      157       22        %INCLUDE LR_GRAM_EXT;
      158      561        %INCLUDE LR_CNFG_EXT;
      159      714        %INCLUDE LR_ERR_EXT;
      160      857
      161      858
      162      859
      163      860    1   DCL TLEN UBIN WORD;
      164      861
      165      862
      166      863        /* Calculate words being returned */
      167      864
      168      865    1   TLEN = (PSTR -> STRING.LEN_IN_H + 2) /2;
      169      866
      170      867    1   PSTR -> CELL.LINK = GARBAGE (MINIMUM(%MAX_GARBAGE_SIZE, TLEN));
      171      868    1   IF TLEN > 1 THEN
      172      869    1     PSTR -> CELL.LEN_IN_W = TLEN;
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:20   
      173      870    1   GARBAGE(MINIMUM(%MAX_GARBAGE_SIZE, TLEN)) = PSTR;
      174      871    1   AMT_GARBAGE = AMT_GARBAGE + TLEN;
      175      872
      176      873    1   END COLLECT_GARBAGE;
      177      874        %EOD;

PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:21   
--  Include file information  --

   LR_ERR_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_CNFG_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure COLLECT_GARBAGE.

   Procedure COLLECT_GARBAGE requires 33 words for executable code.
   Procedure COLLECT_GARBAGE requires 8 words of local(AUTO) storage.

PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:22   

 Object Unit name= COLLECT_GARBAGE                            File name= LR_MGRAM.:Z8A6TOU
 UTS= AUG 09 '97 09:35:06.68 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  OUT_DCBN
    1   DCB   even  none     0      0  M$OU
    2   DCB   even  none     0      0  M$SO
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$SI
    5   DCB   even  none     0      0  M$UI
    6  LblCom even  none  1401   2571  SYM_PTRS
    7  LblCom even  none  4001   7641  RIGHT_PARTS
    8  LblCom even  none  3002   5672  PROD
    9  LblCom even  none     1      1  NR_PROD
   10  LblCom even  none     1      1  NR_SYMS
   11  LblCom even  none     1      1  NR_TERM
   12  LblCom even  none     1      1  LAST_ACT
   13  LblCom even  none     1      1  LAST_NULL
   14  LblCom even  none     1      1  NR_ONRIGHT
   15  LblCom even  none     1      1  NR_NT
   16  LblCom even  none     1      1  PROD_LEN_MAX_EVER
   17  LblCom even  none     1      1  LAST_ORDER_SPECIFIED
   18  LblCom even  none     1      1  SEMANTIC_ORDERING
   19  LblCom even  none     1      1  ERR_SEV
   20  LblCom even  none     1      1  SET_LENGTHB
   21  LblCom even  none     1      1  SET_LENGTHW
   22  LblCom even  none     1      1  EOF_SYMBOL_PTR
   23  LblCom even  none     1      1  ERROR_SYMBOL_PTR
   24  LblCom even  none     1      1  BOF_SYMBOL_PTR
   25  LblCom even  none     1      1  OPTIONS
   26  LblCom even  none    26     32  OPTIONS_TEXT
   27  LblCom even  none   128    200  INSTR
   28  LblCom even  none     1      1  INSTR_LISTED
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:23   
   29  LblCom even  none     1      1  INSTR_LEN
   30  LblCom even  none     1      1  INSTR_INDX
   31  LblCom even  none     1      1  EOF_FLAG
   32  LblCom even  none     3      3  KEY_REC
   33  LblCom even  none    28     34  LINE
   34  LblCom even  none     1      1  LINELEN
   35  LblCom even  none   205    315  TSTATS
   36  LblCom even  none  2201   4231  C#_TO_$
   37  LblCom even  none     1      1  NR_CONFIG
   38  LblCom even  none     1      1  INIT_CONFIG
   39  LblCom even  none     1      1  MAX_BASIS_ITEMS
   40  LblCom even  none     1      1  MAX_TOTAL_ITEMS
   41  LblCom even  none     1      1  LAST_BINSRCH_ONLY
   42  LblCom even  none     1      1  LAST_BOTH_BITBIN
   43  LblCom even  none   101    145  GARBAGE
   44  LblCom even  none     1      1  AMT_GARBAGE
   45  LblCom even  none  1401   2571  LEAST_COST_STRING
   46  LblCom even  none  1401   2571  LEAST_COST_PREFIX
   47  LblCom even  none  5604  12744  CURRE
   48  LblCom even  none   701   1275  LCP_INDX
   49  LblCom even  none     1      1  COM_STRSP_LEN
   50  LblCom even  none     1      1  COM_SEARCH_STRING
   51  LblCom even  none     1      1  COM_SEARCH_STRING_LEN
   52  LblCom even  none     1      1  COM_STRING_SPACE_LEN
   53  LblCom even  none 12500  30324  COM_STRING_SPACE_H
   54  LblCom even  none     1      1  COM_STRING_SPACE$
   55  LblCom even  none     1      1  COM_STRING_PTR
   56  LblCom even  none     1      1  COM_STRING_INDX
   57  LblCom even  none     1      1  LCP_TABLE_LEN
   58  LblCom even  none  2201   4231  STATE_ITEM_INDEX
   59  LblCom even  none 17601  42301  PATH
   60  LblCom even  none     1      1  PATH_STRINGS_LEN
   61  LblCom even  none     1      1  PATH_ADDR$
   62  LblCom even  none     1      1  PATH_TABLE_LEN
   63  LblCom even  none   401    621  EDGECOST
   64  LblCom even  none     1      1  ITEM_TABLE_LEN
   65  LblCom even  none   401    621  ORDERED_ITEM
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:24   
   66  LblCom even  none   401    621  NEIGHBOR
   67  LblCom even  none   802   1442  PATH_INFO
   68  LblCom even  none   401    621  CHOSEN
   69  LblCom even  none    12     14  REACHED
   70  LblCom even  none     1      1  EXP_PATH_INDX
   71   Proc  even  none    33     41  COLLECT_GARBAGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    71      0   yes            yes      Std        1  COLLECT_GARBAGE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:25   


      136        1        /*T***********************************************************/
      137        2        /*T*                                                         */
      138        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      139        4        /*T*                                                         */
      140        5        /*T***********************************************************/
      141        6        COLLECT_GARBAGE : PROC (PSTR);

      6 71 000000   000000 700200 xent  COLLECT_GAR* TSX0  ! X66_AUTO_1
        71 000001   000010 000001                    ZERO    8,1

      142        7
      143        8        /*D*
      144        9               NAME: COLLECT_GARBAGE
      145       10           PURPOSE:
      146       11
      147       12
      148       13           Collect the garbage pointed to by PSTR.  The first
      149       14           half byte of PSTR contains the  length in half words,
      150       15           exclusive of the length half word itself.  All strings
      151       16           will be word aligned.
      152       17        */
      153       18
      154       19    1   DCL PSTR PTR;
      155       20
      156       21
      157       22        %INCLUDE LR_GRAM_EXT;
      158      561        %INCLUDE LR_CNFG_EXT;
      159      714        %INCLUDE LR_ERR_EXT;
      160      857
      161      858
      162      859
      163      860    1   DCL TLEN UBIN WORD;
      164      861
      165      862
      166      863        /* Calculate words being returned */
      167      864
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:26   
      168      865    1   TLEN = (PSTR -> STRING.LEN_IN_H + 2) /2;

    865 71 000002   200003 470500                    LDP0    @PSTR,,AUTO
        71 000003   000000 471500                    LDP1    0,,PR0
        71 000004   100000 236100                    LDQ     0,,PR1
        71 000005   000022 772000                    QRL     18
        71 000006   000002 036007                    ADLQ    2,DL
        71 000007   000001 772000                    QRL     1
        71 000010   200004 756100                    STQ     TLEN,,AUTO

      169      866
      170      867    1   PSTR -> CELL.LINK = GARBAGE (MINIMUM(%MAX_GARBAGE_SIZE, TLEN));

    867 71 000011   000144 116007                    CMPQ    100,DL
        71 000012   000015 602000 71                 TNC     s:867+4
        71 000013   000015 600000 71                 TZE     s:867+4
        71 000014   000144 236007                    LDQ     100,DL
        71 000015   000000 236006 43                 LDQ     GARBAGE,QL
        71 000016   100000 756100                    STQ     0,,PR1

      171      868    1   IF TLEN > 1 THEN

    868 71 000017   200004 235100                    LDA     TLEN,,AUTO
        71 000020   000002 115007                    CMPA    2,DL
        71 000021   000024 602000 71                 TNC     s:870

      172      869    1     PSTR -> CELL.LEN_IN_W = TLEN;

    869 71 000022   000000 471500                    LDP1    0,,PR0
        71 000023   100001 755100                    STA     1,,PR1

      173      870    1   GARBAGE(MINIMUM(%MAX_GARBAGE_SIZE, TLEN)) = PSTR;

    870 71 000024   200004 236100                    LDQ     TLEN,,AUTO
        71 000025   000144 116007                    CMPQ    100,DL
        71 000026   000031 602000 71                 TNC     s:870+5
        71 000027   000031 600000 71                 TZE     s:870+5
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:27   
        71 000030   000144 236007                    LDQ     100,DL
        71 000031   200006 756100                    STQ     TLEN+2,,AUTO
        71 000032   000000 236100                    LDQ     0,,PR0
        71 000033   200006 720100                    LXL0    TLEN+2,,AUTO
        71 000034   000000 756010 43                 STQ     GARBAGE,X0

      174      871    1   AMT_GARBAGE = AMT_GARBAGE + TLEN;

    871 71 000035   000000 236000 44                 LDQ     AMT_GARBAGE
        71 000036   200004 036100                    ADLQ    TLEN,,AUTO
        71 000037   000000 756000 44                 STQ     AMT_GARBAGE

      175      872
      176      873    1   END COLLECT_GARBAGE;

    873 71 000040   000000 702200 xent               TSX2  ! X66_ARET
      177      874        %EOD;

PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:28   
--  Include file information  --

   LR_ERR_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_CNFG_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure COLLECT_GARBAGE.
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:29   

 **** Variables and constants ****

  ****  Section 000 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 006 LblCom SYM_PTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 SYM_PTRS(0:1400)

  ****  Section 007 LblCom RIGHT_PARTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 RIGHT_PARTS(0:8000)

  ****  Section 008 LblCom PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC(72)          1 PROD(0:1500)

  ****  Section 009 LblCom NR_PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_PROD

PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:30   
  ****  Section 010 LblCom NR_SYMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_SYMS

  ****  Section 011 LblCom NR_TERM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_TERM

  ****  Section 012 LblCom LAST_ACT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ACT

  ****  Section 013 LblCom LAST_NULL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_NULL

  ****  Section 014 LblCom NR_ONRIGHT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_ONRIGHT

  ****  Section 015 LblCom NR_NT

PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:31   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_NT

  ****  Section 016 LblCom PROD_LEN_MAX_EVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PROD_LEN_MAX_EVER

  ****  Section 017 LblCom LAST_ORDER_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ORDER_SPECIFIED

  ****  Section 018 LblCom SEMANTIC_ORDERING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 SEMANTIC_ORDERING

  ****  Section 019 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 020 LblCom SET_LENGTHB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:32   

     0-0-0/w SBIN              1 SET_LENGTHB

  ****  Section 021 LblCom SET_LENGTHW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHW

  ****  Section 022 LblCom EOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 EOF_SYMBOL_PTR

  ****  Section 023 LblCom ERROR_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERROR_SYMBOL_PTR

  ****  Section 024 LblCom BOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 BOF_SYMBOL_PTR

  ****  Section 025 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:33   

  ****  Section 026 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 027 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 028 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 029 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 030 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 031 LblCom EOF_FLAG
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:34   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 032 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 KEY_REC

  ****  Section 033 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 034 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINELEN

  ****  Section 035 LblCom TSTATS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(7380)        1 TSTATS

  ****  Section 036 LblCom C#_TO_$

  ****  Scalars and arrays  ****
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:35   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 C#_TO_$(0:2200)

  ****  Section 037 LblCom NR_CONFIG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_CONFIG

  ****  Section 038 LblCom INIT_CONFIG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INIT_CONFIG

  ****  Section 039 LblCom MAX_BASIS_ITEMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 MAX_BASIS_ITEMS

  ****  Section 040 LblCom MAX_TOTAL_ITEMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 MAX_TOTAL_ITEMS

  ****  Section 041 LblCom LAST_BINSRCH_ONLY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:36   
     0-0-0/w SBIN              1 LAST_BINSRCH_ONLY

  ****  Section 042 LblCom LAST_BOTH_BITBIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_BOTH_BITBIN

  ****  Section 043 LblCom GARBAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GARBAGE(0:100)

  ****  Section 044 LblCom AMT_GARBAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 AMT_GARBAGE

  ****  Section 045 LblCom LEAST_COST_STRING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LEAST_COST_STRING(0:1400)

  ****  Section 046 LblCom LEAST_COST_PREFIX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LEAST_COST_PREFIX(0:1400)

PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:37   
  ****  Section 047 LblCom CURRE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(126)         1 CURRE(0:1400)

  ****  Section 048 LblCom LCP_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 LCP_INDX(0:1400)

  ****  Section 049 LblCom COM_STRSP_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 COM_STRSP_LEN

  ****  Section 050 LblCom COM_SEARCH_STRING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 COM_SEARCH_STRING

  ****  Section 051 LblCom COM_SEARCH_STRING_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 COM_SEARCH_STRING_LEN

  ****  Section 052 LblCom COM_STRING_SPACE_LEN

PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:38   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 COM_STRING_SPACE_LEN

  ****  Section 053 LblCom COM_STRING_SPACE_H

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)    r     1 COM_STRING_SPACE_H(0:24999)

  ****  Section 054 LblCom COM_STRING_SPACE$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 COM_STRING_SPACE$

  ****  Section 055 LblCom COM_STRING_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 COM_STRING_PTR

  ****  Section 056 LblCom COM_STRING_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 COM_STRING_INDX

  ****  Section 057 LblCom LCP_TABLE_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:39   

     0-0-0/w SBIN              1 LCP_TABLE_LEN

  ****  Section 058 LblCom STATE_ITEM_INDEX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC              1 STATE_ITEM_INDEX(0:2200)

  ****  Section 059 LblCom PATH

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC        r     1 PATH(0:17600)

  ****  Section 060 LblCom PATH_STRINGS_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 PATH_STRINGS_LEN

  ****  Section 061 LblCom PATH_ADDR$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 PATH_ADDR$

  ****  Section 062 LblCom PATH_TABLE_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PATH_TABLE_LEN
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:40   

  ****  Section 063 LblCom EDGECOST

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 EDGECOST(0:400)

  ****  Section 064 LblCom ITEM_TABLE_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITEM_TABLE_LEN

  ****  Section 065 LblCom ORDERED_ITEM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC              1 ORDERED_ITEM(0:400)

  ****  Section 066 LblCom NEIGHBOR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NEIGHBOR(0:400)

  ****  Section 067 LblCom PATH_INFO

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(28872)       1 PATH_INFO

  ****  Section 068 LblCom CHOSEN
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:41   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT               1 CHOSEN(0:400)

  ****  Section 069 LblCom REACHED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 REACHED(0:400)

  ****  Section 070 LblCom EXP_PATH_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 EXP_PATH_INDX

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PSTR                     *0-0-0/w PTR         r     1 PSTR
     4-0-0/w UBIN        r     1 TLEN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 CELL                       0-0-0/c ACHR              1 COM_STRINGS
     0-0-0/c ACHR              1 COM_STRING_SPACE           0-0-0/c ACHR              1 CSEARCH_STRING
     0-0-0/w STRC(57888)       1 C_SET_B                    0-0-0/w STRC(72)          1 INCLUDES_B
     0-0-0/w STRC(144)         1 INCL_B                     0-0-0/w STRC(5436)        1 ITEM_B
PL6.E3A0      #002=COLLECT_GARBAGE File=LR_MGRAM.:Z8A6TSI                        SAT 08/09/97 09:35 Page:42   
     0-0-0/w STRC(5652)        1 KEY_B                      0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OU                       0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$SO                       0-0-0N  NULL        r     1 M$UI
     0-0-0/c ACHR              1 PATH_STRINGS               0-0-0/w STRC(90)          1 PREFIX
     0-0-0/w ASTR(72)    r     1 PREFIXCHR                  0-0-0/w STRC        r     1 STRING
     0-0-0/w ASTR(18)    r     1 STRINGCHR                  0-0-0/w STRC(351)         1 SYMBOL


   Procedure COLLECT_GARBAGE requires 33 words for executable code.
   Procedure COLLECT_GARBAGE requires 8 words of local(AUTO) storage.

PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:43   
      178        1        /*T***********************************************************/
      179        2        /*T*                                                         */
      180        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      181        4        /*T*                                                         */
      182        5        /*T***********************************************************/
      183        6        GET_STRING_MEM : PROC (PSTR,PLEN);
      184        7
      185        8        /*D*
      186        9               NAME: GET_STRING_MEM
      187       10            PURPOSE:
      188       11
      189       12           Get a string of length PLEN (halfwords), plus an extra
      190       13           halfword for the length.
      191       14           The actual number of words obtained will be a minimum
      192       15           of one, so that the length may be maintained.  Null strings are okay.
      193       16        */
      194       17
      195       18    1   DCL PSTR PTR;   /* Pointer to area returned */
      196       19    1   DCL PLEN UBIN WORD;   /* String length required */
      197       20
      198       21        %INCLUDE LR_GRAM_EXT;
      199      560        %INCLUDE LR_CNFG_EXT;
      200      713        %INCLUDE LR_ERR_EXT;
      201      856
      202      857    1   DCL COLLECT_GARBAGE ENTRY(1);
      203      858
      204      859    1   DCL LEN UBIN WORD;  /* Cell length in words */
      205      860    1   DCL ORIG_LEN UBIN WORD;
      206      861    1   DCL EXTSP PTR;   /* Temporary string pointer */
      207      862
      208      863
      209      864
      210      865        %EJECT;
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:44   
      211      866    1   GET_LARGE_STRING : PROC;  /* OF GET_STRING_MEM */
      212      867
      213      868        /* A string that is as large or large than MAX_GARBAGE_SIZE
      214      869           has been requested.  We need to search the last garbage list
      215      870           for an element of this size or greater.
      216      871        */
      217      872
      218      873
      219      874    2   EXTSP = ADDR(GARBAGE(%MAX_GARBAGE_SIZE));
      220      875
      221      876    3   DO WHILE ((EXTSP -> CELL.LINK ~= ADDR(NIL))
      222      877    3              AND (EXTSP -> CELL.LINK -> CELL.LEN_IN_W < ORIG_LEN));
      223      878    3     EXTSP = EXTSP -> CELL.LINK;
      224      879    3   END;
      225      880
      226      881    2   IF EXTSP -> CELL.LINK = ADDR(NIL) THEN
      227      882    2     CALL GETNEW (PSTR, ORIG_LEN);
      228      883    2   ELSE
      229      884    3     DO;
      230      885    3       PSTR = EXTSP -> CELL.LINK;
      231      886    3       EXTSP -> CELL.LINK = EXTSP -> CELL.LINK -> CELL.LINK;
      232      887    3       AMT_GARBAGE = AMT_GARBAGE - EXTSP -> CELL.LEN_IN_W;
      233      888    3       IF PSTR -> CELL.LEN_IN_W > ORIG_LEN THEN
      234      889    4         DO;
      235      890    4           EXTSP = PINCRW (PSTR, PSTR -> CELL.LEN_IN_W - ORIG_LEN);
      236      891    4           EXTSP -> STRING.LEN_IN_H = (PSTR -> CELL.LEN_IN_W - ORIG_LEN) * 2 - 1;
      237      892    4           CALL COLLECT_GARBAGE (EXTSP);
      238      893    4         END;
      239      894    3     END;
      240      895
      241      896    2   END GET_LARGE_STRING;
      242      897
      243      898
      244      899        %EJECT;
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:45   
      245      900        /* Main body of GET_STRING_MEM */
      246      901
      247      902    1   ORIG_LEN = (PLEN+2)/2;
      248      903    1   LEN = ORIG_LEN;
      249      904
      250      905        /* Find previous garbaged cell, if available */
      251      906    2   DO WHILE ((LEN < %MAX_GARBAGE_SIZE)
      252      907    2                AND (GARBAGE(LEN) = ADDR(NIL)));
      253      908    2     LEN = LEN + 1;
      254      909    2   END;
      255      910
      256      911         /* Check size of cell found */
      257      912    1   IF LEN >= %MAX_GARBAGE_SIZE THEN
      258      913    1     CALL GET_LARGE_STRING;
      259      914    1   ELSE
      260      915    2     DO;
      261      916    2       PSTR = GARBAGE (LEN);
      262      917    2       GARBAGE (LEN) = PSTR -> CELL.LINK;
      263      918    2       AMT_GARBAGE = AMT_GARBAGE - LEN;
      264      919    2       IF LEN > ORIG_LEN THEN
      265      920    3         DO;
      266      921                /* Release additional space */
      267      922    3           EXTSP = PINCRW (PSTR, ORIG_LEN);
      268      923    3           EXTSP -> STRING.LEN_IN_H = (LEN - ORIG_LEN) * 2 - 1;
      269      924    3           CALL COLLECT_GARBAGE (EXTSP);
      270      925    3         END;
      271      926    2     END;
      272      927    1   PSTR -> STRING.LEN_IN_H = PLEN;
      273      928
      274      929    1   END GET_STRING_MEM;

PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:46   
--  Include file information  --

   LR_ERR_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_CNFG_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GET_STRING_MEM.

   Procedure GET_STRING_MEM requires 117 words for executable code.
   Procedure GET_STRING_MEM requires 12 words of local(AUTO) storage.

    No errors detected in file LR_MGRAM.:Z8A6TSI    .

PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:47   

 Object Unit name= GET_STRING_MEM                             File name= LR_MGRAM.:Z8A6TOU
 UTS= AUG 09 '97 09:35:26.12 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  OUT_DCBN
    1   DCB   even  none     0      0  M$OU
    2   DCB   even  none     0      0  M$SO
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$SI
    5   DCB   even  none     0      0  M$UI
    6  LblCom even  none  1401   2571  SYM_PTRS
    7  LblCom even  none  4001   7641  RIGHT_PARTS
    8  LblCom even  none  3002   5672  PROD
    9  LblCom even  none     1      1  NR_PROD
   10  LblCom even  none     1      1  NR_SYMS
   11  LblCom even  none     1      1  NR_TERM
   12  LblCom even  none     1      1  LAST_ACT
   13  LblCom even  none     1      1  LAST_NULL
   14  LblCom even  none     1      1  NR_ONRIGHT
   15  LblCom even  none     1      1  NR_NT
   16  LblCom even  none     1      1  PROD_LEN_MAX_EVER
   17  LblCom even  none     1      1  LAST_ORDER_SPECIFIED
   18  LblCom even  none     1      1  SEMANTIC_ORDERING
   19  LblCom even  none     1      1  ERR_SEV
   20  LblCom even  none     1      1  SET_LENGTHB
   21  LblCom even  none     1      1  SET_LENGTHW
   22  LblCom even  none     1      1  EOF_SYMBOL_PTR
   23  LblCom even  none     1      1  ERROR_SYMBOL_PTR
   24  LblCom even  none     1      1  BOF_SYMBOL_PTR
   25  LblCom even  none     1      1  OPTIONS
   26  LblCom even  none    26     32  OPTIONS_TEXT
   27  LblCom even  none   128    200  INSTR
   28  LblCom even  none     1      1  INSTR_LISTED
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:48   
   29  LblCom even  none     1      1  INSTR_LEN
   30  LblCom even  none     1      1  INSTR_INDX
   31  LblCom even  none     1      1  EOF_FLAG
   32  LblCom even  none     3      3  KEY_REC
   33  LblCom even  none    28     34  LINE
   34  LblCom even  none     1      1  LINELEN
   35  LblCom even  none   205    315  TSTATS
   36  LblCom even  none  2201   4231  C#_TO_$
   37  LblCom even  none     1      1  NR_CONFIG
   38  LblCom even  none     1      1  INIT_CONFIG
   39  LblCom even  none     1      1  MAX_BASIS_ITEMS
   40  LblCom even  none     1      1  MAX_TOTAL_ITEMS
   41  LblCom even  none     1      1  LAST_BINSRCH_ONLY
   42  LblCom even  none     1      1  LAST_BOTH_BITBIN
   43  LblCom even  none   101    145  GARBAGE
   44  LblCom even  none     1      1  AMT_GARBAGE
   45  LblCom even  none  1401   2571  LEAST_COST_STRING
   46  LblCom even  none  1401   2571  LEAST_COST_PREFIX
   47  LblCom even  none  5604  12744  CURRE
   48  LblCom even  none   701   1275  LCP_INDX
   49  LblCom even  none     1      1  COM_STRSP_LEN
   50  LblCom even  none     1      1  COM_SEARCH_STRING
   51  LblCom even  none     1      1  COM_SEARCH_STRING_LEN
   52  LblCom even  none     1      1  COM_STRING_SPACE_LEN
   53  LblCom even  none 12500  30324  COM_STRING_SPACE_H
   54  LblCom even  none     1      1  COM_STRING_SPACE$
   55  LblCom even  none     1      1  COM_STRING_PTR
   56  LblCom even  none     1      1  COM_STRING_INDX
   57  LblCom even  none     1      1  LCP_TABLE_LEN
   58  LblCom even  none  2201   4231  STATE_ITEM_INDEX
   59  LblCom even  none 17601  42301  PATH
   60  LblCom even  none     1      1  PATH_STRINGS_LEN
   61  LblCom even  none     1      1  PATH_ADDR$
   62  LblCom even  none     1      1  PATH_TABLE_LEN
   63  LblCom even  none   401    621  EDGECOST
   64  LblCom even  none     1      1  ITEM_TABLE_LEN
   65  LblCom even  none   401    621  ORDERED_ITEM
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:49   
   66  LblCom even  none   401    621  NEIGHBOR
   67  LblCom even  none   802   1442  PATH_INFO
   68  LblCom even  none   401    621  CHOSEN
   69  LblCom even  none    12     14  REACHED
   70  LblCom even  none     1      1  EXP_PATH_INDX
   71   Proc  even  none   117    165  GET_STRING_MEM
   72  RoData even  none     4      4  GET_STRING_MEM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    71      0   yes            yes      Std        2  GET_STRING_MEM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 COLLECT_GARBAGE
         yes           Std       2 GETNEW
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:50   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:51   


      178        1        /*T***********************************************************/
      179        2        /*T*                                                         */
      180        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      181        4        /*T*                                                         */
      182        5        /*T***********************************************************/
      183        6        GET_STRING_MEM : PROC (PSTR,PLEN);

      6 71 000000   000000 700200 xent  GET_STRING_* TSX0  ! X66_AUTO_2
        71 000001   000014 000002                    ZERO    12,2
        71 000002   000076 710000 71                 TRA     s:902

      184        7
      185        8        /*D*
      186        9               NAME: GET_STRING_MEM
      187       10            PURPOSE:
      188       11
      189       12           Get a string of length PLEN (halfwords), plus an extra
      190       13           halfword for the length.
      191       14           The actual number of words obtained will be a minimum
      192       15           of one, so that the length may be maintained.  Null strings are okay.
      193       16        */
      194       17
      195       18    1   DCL PSTR PTR;   /* Pointer to area returned */
      196       19    1   DCL PLEN UBIN WORD;   /* String length required */
      197       20
      198       21        %INCLUDE LR_GRAM_EXT;
      199      560        %INCLUDE LR_CNFG_EXT;
      200      713        %INCLUDE LR_ERR_EXT;
      201      856
      202      857    1   DCL COLLECT_GARBAGE ENTRY(1);
      203      858
      204      859    1   DCL LEN UBIN WORD;  /* Cell length in words */
      205      860    1   DCL ORIG_LEN UBIN WORD;
      206      861    1   DCL EXTSP PTR;   /* Temporary string pointer */
      207      862
      208      863
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:52   
      209      864
      210      865        %EJECT;
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:53   
      211      866    1   GET_LARGE_STRING : PROC;  /* OF GET_STRING_MEM */

    866 71 000003   200010 741300       GET_LARGE_S* STX1  ! EXTSP+1,,AUTO

      212      867
      213      868        /* A string that is as large or large than MAX_GARBAGE_SIZE
      214      869           has been requested.  We need to search the last garbage list
      215      870           for an element of this size or greater.
      216      871        */
      217      872
      218      873
      219      874    2   EXTSP = ADDR(GARBAGE(%MAX_GARBAGE_SIZE));

    874 71 000004   000000 236000 72                 LDQ     0
        71 000005   200007 756100                    STQ     EXTSP,,AUTO

      220      875
      221      876    3   DO WHILE ((EXTSP -> CELL.LINK ~= ADDR(NIL))

    876 71 000006   000012 710000 71                 TRA     s:879

      222      877    3              AND (EXTSP -> CELL.LINK -> CELL.LEN_IN_W < ORIG_LEN));
      223      878    3     EXTSP = EXTSP -> CELL.LINK;

    878 71 000007   200007 470500                    LDP0    EXTSP,,AUTO
        71 000010   000000 236100                    LDQ     0,,PR0
        71 000011   200007 756100                    STQ     EXTSP,,AUTO

      224      879    3   END;

    879 71 000012   200007 470500                    LDP0    EXTSP,,AUTO
        71 000013   000000 236100                    LDQ     0,,PR0
        71 000014   000001 116000 72                 CMPQ    1
        71 000015   000022 600000 71                 TZE     s:881
        71 000016   000000 471500                    LDP1    0,,PR0
        71 000017   100001 236100                    LDQ     1,,PR1
        71 000020   200006 116100                    CMPQ    ORIG_LEN,,AUTO
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:54   
        71 000021   000007 602000 71                 TNC     s:878

      225      880
      226      881    2   IF EXTSP -> CELL.LINK = ADDR(NIL) THEN

    881 71 000022   000000 236100                    LDQ     0,,PR0
        71 000023   000001 116000 72                 CMPQ    1
        71 000024   000036 601000 71                 TNZ     s:885

      227      882    2     CALL GETNEW (PSTR, ORIG_LEN);

    882 71 000025   200006 631500                    EPPR1   ORIG_LEN,,AUTO
        71 000026   200013 451500                    STP1    EXTSP+4,,AUTO
        71 000027   200003 236100                    LDQ     @PSTR,,AUTO
        71 000030   200012 756100                    STQ     EXTSP+3,,AUTO
        71 000031   200012 630500                    EPPR0   EXTSP+3,,AUTO
        71 000032   000002 631400 72                 EPPR1   2
        71 000033   000000 701000 xent               TSX1    GETNEW
        71 000034   000000 011000                    NOP     0
        71 000035   000074 710000 71                 TRA     s:896

      228      883    2   ELSE
      229      884    3     DO;

      230      885    3       PSTR = EXTSP -> CELL.LINK;

    885 71 000036   200003 471500                    LDP1    @PSTR,,AUTO
        71 000037   100000 756100                    STQ     0,,PR1

      231      886    3       EXTSP -> CELL.LINK = EXTSP -> CELL.LINK -> CELL.LINK;

    886 71 000040   200007 470500                    LDP0    EXTSP,,AUTO
        71 000041   000000 473500                    LDP3    0,,PR0
        71 000042   300000 236100                    LDQ     0,,PR3
        71 000043   000000 756100                    STQ     0,,PR0

      232      887    3       AMT_GARBAGE = AMT_GARBAGE - EXTSP -> CELL.LEN_IN_W;
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:55   

    887 71 000044   200007 470500                    LDP0    EXTSP,,AUTO
        71 000045   000000 236000 44                 LDQ     AMT_GARBAGE
        71 000046   000001 136100                    SBLQ    1,,PR0
        71 000047   000000 756000 44                 STQ     AMT_GARBAGE

      233      888    3       IF PSTR -> CELL.LEN_IN_W > ORIG_LEN THEN

    888 71 000050   100000 473500                    LDP3    0,,PR1
        71 000051   200006 236100                    LDQ     ORIG_LEN,,AUTO
        71 000052   300001 116100                    CMPQ    1,,PR3
        71 000053   000074 603000 71                 TRC     s:896

      234      889    4         DO;

      235      890    4           EXTSP = PINCRW (PSTR, PSTR -> CELL.LEN_IN_W - ORIG_LEN);

    890 71 000054   300001 236100                    LDQ     1,,PR3
        71 000055   200006 136100                    SBLQ    ORIG_LEN,,AUTO
        71 000056   300000 634506                    EPPR4   0,QL,PR3
        71 000057   200007 454500                    STP4    EXTSP,,AUTO

      236      891    4           EXTSP -> STRING.LEN_IN_H = (PSTR -> CELL.LEN_IN_W - ORIG_LEN) * 2 - 1;

    891 71 000060   100000 470500                    LDP0    0,,PR1
        71 000061   000001 236100                    LDQ     1,,PR0
        71 000062   200006 136100                    SBLQ    ORIG_LEN,,AUTO
        71 000063   000001 736000                    QLS     1
        71 000064   777777 620006                    EAX0    -1,QL
        71 000065   400000 740100                    STX0    0,,PR4

      237      892    4           CALL COLLECT_GARBAGE (EXTSP);

    892 71 000066   200007 630500                    EPPR0   EXTSP,,AUTO
        71 000067   200012 450500                    STP0    EXTSP+3,,AUTO
        71 000070   200012 630500                    EPPR0   EXTSP+3,,AUTO
        71 000071   000003 631400 72                 EPPR1   3
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:56   
        71 000072   000000 701000 xent               TSX1    COLLECT_GARBAGE
        71 000073   000000 011000                    NOP     0

      238      893    4         END;

      239      894    3     END;

      240      895
      241      896    2   END GET_LARGE_STRING;

    896 71 000074   200010 221300                    LDX1  ! EXTSP+1,,AUTO
        71 000075   000001 702211                    TSX2  ! 1,X1

      242      897
      243      898
      244      899        %EJECT;
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:57   
      245      900        /* Main body of GET_STRING_MEM */
      246      901
      247      902    1   ORIG_LEN = (PLEN+2)/2;

    902 71 000076   200004 470500                    LDP0    @PLEN,,AUTO
        71 000077   000000 236100                    LDQ     0,,PR0
        71 000100   000002 036007                    ADLQ    2,DL
        71 000101   000001 772000                    QRL     1
        71 000102   200006 756100                    STQ     ORIG_LEN,,AUTO

      248      903    1   LEN = ORIG_LEN;

    903 71 000103   200005 756100                    STQ     LEN,,AUTO

      249      904
      250      905        /* Find previous garbaged cell, if available */
      251      906    2   DO WHILE ((LEN < %MAX_GARBAGE_SIZE)

    906 71 000104   000110 710000 71                 TRA     s:909

      252      907    2                AND (GARBAGE(LEN) = ADDR(NIL)));
      253      908    2     LEN = LEN + 1;

    908 71 000105   200005 235100                    LDA     LEN,,AUTO
        71 000106   000001 035007                    ADLA    1,DL
        71 000107   200005 755100                    STA     LEN,,AUTO

      254      909    2   END;

    909 71 000110   200005 235100                    LDA     LEN,,AUTO
        71 000111   000144 115007                    CMPA    100,DL
        71 000112   000116 603000 71                 TRC     s:912
        71 000113   000000 236005 43                 LDQ     GARBAGE,AL
        71 000114   000001 116000 72                 CMPQ    1
        71 000115   000105 600000 71                 TZE     s:908

      255      910
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:58   
      256      911         /* Check size of cell found */
      257      912    1   IF LEN >= %MAX_GARBAGE_SIZE THEN

    912 71 000116   200005 235100                    LDA     LEN,,AUTO
        71 000117   000144 115007                    CMPA    100,DL
        71 000120   000124 602000 71                 TNC     s:916

      258      913    1     CALL GET_LARGE_STRING;

    913 71 000121   000003 701000 71                 TSX1    GET_LARGE_STRING
        71 000122   000000 011000                    NOP     0
        71 000123   000157 710000 71                 TRA     s:927

      259      914    1   ELSE
      260      915    2     DO;

      261      916    2       PSTR = GARBAGE (LEN);

    916 71 000124   000000 236005 43                 LDQ     GARBAGE,AL
        71 000125   200003 470500                    LDP0    @PSTR,,AUTO
        71 000126   000000 756100                    STQ     0,,PR0

      262      917    2       GARBAGE (LEN) = PSTR -> CELL.LINK;

    917 71 000127   000000 471500                    LDP1    0,,PR0
        71 000130   100000 236100                    LDQ     0,,PR1
        71 000131   200005 720100                    LXL0    LEN,,AUTO
        71 000132   000000 756010 43                 STQ     GARBAGE,X0

      263      918    2       AMT_GARBAGE = AMT_GARBAGE - LEN;

    918 71 000133   000000 236000 44                 LDQ     AMT_GARBAGE
        71 000134   200005 136100                    SBLQ    LEN,,AUTO
        71 000135   000000 756000 44                 STQ     AMT_GARBAGE

      264      919    2       IF LEN > ORIG_LEN THEN

PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:59   
    919 71 000136   200006 236100                    LDQ     ORIG_LEN,,AUTO
        71 000137   200005 116100                    CMPQ    LEN,,AUTO
        71 000140   000157 603000 71                 TRC     s:927

      265      920    3         DO;

      266      921                /* Release additional space */
      267      922    3           EXTSP = PINCRW (PSTR, ORIG_LEN);

    922 71 000141   000000 471500                    LDP1    0,,PR0
        71 000142   100000 633506                    EPPR3   0,QL,PR1
        71 000143   200007 453500                    STP3    EXTSP,,AUTO

      268      923    3           EXTSP -> STRING.LEN_IN_H = (LEN - ORIG_LEN) * 2 - 1;

    923 71 000144   200005 236100                    LDQ     LEN,,AUTO
        71 000145   200006 136100                    SBLQ    ORIG_LEN,,AUTO
        71 000146   000001 736000                    QLS     1
        71 000147   777777 621006                    EAX1    -1,QL
        71 000150   300000 741100                    STX1    0,,PR3

      269      924    3           CALL COLLECT_GARBAGE (EXTSP);

    924 71 000151   200007 631500                    EPPR1   EXTSP,,AUTO
        71 000152   200012 451500                    STP1    EXTSP+3,,AUTO
        71 000153   200012 630500                    EPPR0   EXTSP+3,,AUTO
        71 000154   000003 631400 72                 EPPR1   3
        71 000155   000000 701000 xent               TSX1    COLLECT_GARBAGE
        71 000156   000000 011000                    NOP     0

      270      925    3         END;

      271      926    2     END;

      272      927    1   PSTR -> STRING.LEN_IN_H = PLEN;

    927 71 000157   200003 470500                    LDP0    @PSTR,,AUTO
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:60   
        71 000160   000000 471500                    LDP1    0,,PR0
        71 000161   200004 473500                    LDP3    @PLEN,,AUTO
        71 000162   300000 720100                    LXL0    0,,PR3
        71 000163   100000 740100                    STX0    0,,PR1

      273      928
      274      929    1   END GET_STRING_MEM;

    929 71 000164   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:61   
--  Include file information  --

   LR_ERR_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_CNFG_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GET_STRING_MEM.
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:62   

 **** Variables and constants ****

  ****  Section 000 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 006 LblCom SYM_PTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 SYM_PTRS(0:1400)

  ****  Section 007 LblCom RIGHT_PARTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 RIGHT_PARTS(0:8000)

  ****  Section 008 LblCom PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC(72)          1 PROD(0:1500)

  ****  Section 009 LblCom NR_PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_PROD

PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:63   
  ****  Section 010 LblCom NR_SYMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_SYMS

  ****  Section 011 LblCom NR_TERM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_TERM

  ****  Section 012 LblCom LAST_ACT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ACT

  ****  Section 013 LblCom LAST_NULL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_NULL

  ****  Section 014 LblCom NR_ONRIGHT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_ONRIGHT

  ****  Section 015 LblCom NR_NT

PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:64   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_NT

  ****  Section 016 LblCom PROD_LEN_MAX_EVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PROD_LEN_MAX_EVER

  ****  Section 017 LblCom LAST_ORDER_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ORDER_SPECIFIED

  ****  Section 018 LblCom SEMANTIC_ORDERING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 SEMANTIC_ORDERING

  ****  Section 019 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 020 LblCom SET_LENGTHB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:65   

     0-0-0/w SBIN              1 SET_LENGTHB

  ****  Section 021 LblCom SET_LENGTHW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHW

  ****  Section 022 LblCom EOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 EOF_SYMBOL_PTR

  ****  Section 023 LblCom ERROR_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERROR_SYMBOL_PTR

  ****  Section 024 LblCom BOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 BOF_SYMBOL_PTR

  ****  Section 025 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:66   

  ****  Section 026 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 027 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 028 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 029 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 030 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 031 LblCom EOF_FLAG
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:67   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 032 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 KEY_REC

  ****  Section 033 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 034 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINELEN

  ****  Section 035 LblCom TSTATS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(7380)        1 TSTATS

  ****  Section 036 LblCom C#_TO_$

  ****  Scalars and arrays  ****
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:68   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 C#_TO_$(0:2200)

  ****  Section 037 LblCom NR_CONFIG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_CONFIG

  ****  Section 038 LblCom INIT_CONFIG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INIT_CONFIG

  ****  Section 039 LblCom MAX_BASIS_ITEMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 MAX_BASIS_ITEMS

  ****  Section 040 LblCom MAX_TOTAL_ITEMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 MAX_TOTAL_ITEMS

  ****  Section 041 LblCom LAST_BINSRCH_ONLY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:69   
     0-0-0/w SBIN              1 LAST_BINSRCH_ONLY

  ****  Section 042 LblCom LAST_BOTH_BITBIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_BOTH_BITBIN

  ****  Section 043 LblCom GARBAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GARBAGE(0:100)

  ****  Section 044 LblCom AMT_GARBAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 AMT_GARBAGE

  ****  Section 045 LblCom LEAST_COST_STRING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LEAST_COST_STRING(0:1400)

  ****  Section 046 LblCom LEAST_COST_PREFIX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LEAST_COST_PREFIX(0:1400)

PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:70   
  ****  Section 047 LblCom CURRE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(126)         1 CURRE(0:1400)

  ****  Section 048 LblCom LCP_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 LCP_INDX(0:1400)

  ****  Section 049 LblCom COM_STRSP_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 COM_STRSP_LEN

  ****  Section 050 LblCom COM_SEARCH_STRING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 COM_SEARCH_STRING

  ****  Section 051 LblCom COM_SEARCH_STRING_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 COM_SEARCH_STRING_LEN

  ****  Section 052 LblCom COM_STRING_SPACE_LEN

PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:71   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 COM_STRING_SPACE_LEN

  ****  Section 053 LblCom COM_STRING_SPACE_H

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)    r     1 COM_STRING_SPACE_H(0:24999)

  ****  Section 054 LblCom COM_STRING_SPACE$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 COM_STRING_SPACE$

  ****  Section 055 LblCom COM_STRING_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 COM_STRING_PTR

  ****  Section 056 LblCom COM_STRING_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 COM_STRING_INDX

  ****  Section 057 LblCom LCP_TABLE_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:72   

     0-0-0/w SBIN              1 LCP_TABLE_LEN

  ****  Section 058 LblCom STATE_ITEM_INDEX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC              1 STATE_ITEM_INDEX(0:2200)

  ****  Section 059 LblCom PATH

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC        r     1 PATH(0:17600)

  ****  Section 060 LblCom PATH_STRINGS_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 PATH_STRINGS_LEN

  ****  Section 061 LblCom PATH_ADDR$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 PATH_ADDR$

  ****  Section 062 LblCom PATH_TABLE_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PATH_TABLE_LEN
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:73   

  ****  Section 063 LblCom EDGECOST

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 EDGECOST(0:400)

  ****  Section 064 LblCom ITEM_TABLE_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITEM_TABLE_LEN

  ****  Section 065 LblCom ORDERED_ITEM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC              1 ORDERED_ITEM(0:400)

  ****  Section 066 LblCom NEIGHBOR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NEIGHBOR(0:400)

  ****  Section 067 LblCom PATH_INFO

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(28872)       1 PATH_INFO

  ****  Section 068 LblCom CHOSEN
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:74   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT               1 CHOSEN(0:400)

  ****  Section 069 LblCom REACHED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 REACHED(0:400)

  ****  Section 070 LblCom EXP_PATH_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 EXP_PATH_INDX

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PLEN                      3-0-0/w PTR         r     1 @PSTR
     7-0-0/w PTR         r     1 EXTSP                      5-0-0/w UBIN        r     1 LEN
     6-0-0/w UBIN        r     1 ORIG_LEN                  *0-0-0/w UBIN        r     1 PLEN
    *0-0-0/w PTR         r     1 PSTR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 CELL                       0-0-0/c ACHR              1 COM_STRINGS
     0-0-0/c ACHR              1 COM_STRING_SPACE           0-0-0/c ACHR              1 CSEARCH_STRING
PL6.E3A0      #003=GET_STRING_MEM File=LR_MGRAM.:Z8A6TSI                         SAT 08/09/97 09:35 Page:75   
     0-0-0/w STRC(57888)       1 C_SET_B                    0-0-0/w STRC(72)          1 INCLUDES_B
     0-0-0/w STRC(144)         1 INCL_B                     0-0-0/w STRC(5436)        1 ITEM_B
     0-0-0/w STRC(5652)        1 KEY_B                      0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OU                       0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$SO                       0-0-0N  NULL        r     1 M$UI
     0-0-0/c ACHR              1 PATH_STRINGS               0-0-0/w STRC(90)          1 PREFIX
     0-0-0/w ASTR(72)    r     1 PREFIXCHR                  0-0-0/w STRC        r     1 STRING
     0-0-0/w ASTR(18)    r     1 STRINGCHR                  0-0-0/w STRC(351)         1 SYMBOL


   Procedure GET_STRING_MEM requires 117 words for executable code.
   Procedure GET_STRING_MEM requires 12 words of local(AUTO) storage.

    No errors detected in file LR_MGRAM.:Z8A6TSI    .
