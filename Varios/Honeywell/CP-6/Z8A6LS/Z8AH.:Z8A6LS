VERSION A06

PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:1    
        1        1        /*M* Z8AH$SEARCH_ -- Search an item into the DNT  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        Z8AH$SEARCH_: PROC NOAUTO ;
        8        8
        9        9        /*P*
       10       10               NAME:  Z8AH$SEARCH_
       11       11            PURPOSE:  Search a name or literal into the data name table.  "NAME"
       12       12                      may be a reserved word, user name, or system name.  "LITERAL"
       13       13                      may be numeric or alphanumeric.
       14       14        */
       15       15
       16       16        /*D*
       17       17               NAME:  Z8AH$SEARCH_
       18       18               CALL:  CALL Z8AH$SEARCH_ ;
       19       19
       20       20              INPUT:  LEX_SYMBOL.SYMBOL - Symbol to be stored in DNT.
       21       21                      LEX_SYMBOL.SIZE - Size of symbol to be stored.
       22       22             OUTPUT:  DNT$ - Pointer to entry in DNT for symbol.
       23       23
       24       24        DESCRIPTION:  This program searches the DNT to see if an identical DNT entry
       25       25                      has already been created.  If an entry has been created then
       26       26                      DNT$ is assigned the pointer of that item otherwise a DNT
       27       27                      item is created.
       28       28        */
       29       29        %EJECT ;
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:2    
       30       30
       31       31        %EQU PHASE = 1 ;
       32       32        %INCLUDE Z8A_DEFC ;
       33      100        %INCLUDE Z8A_SUPP_MAC ;
       34     2500        %INCLUDE Z8A_COMCOM ;
       35     3150        %INCLUDE Z8A_DNT ;
       36     3371        %INCLUDE Z8E_STACKS;
       37     5637
       38     5638    1   DCL    HASH_VALUE        UBIN WORD;
       39     5639    1   DCL    HASH_VALUE_CHARS  REDEF HASH_VALUE CHAR(4);
       40     5640    1   DCL 1  HASH_VALUE_TRUNC  REDEF HASH_VALUE,
       41     5641    1        2 *                 BIT(1) UNAL,
       42     5642    1        2 LOWER35BITS       UBIN(35) UNAL;
       43     5643
       44     5644    1   DCL    NUMBER_WORDS      UBIN WORD;
       45     5645    1   DCL    NUMBER_ODD_CHARS  UBIN WORD;
       46     5646
       47     5647        %MACRO HASH;
       48     5648               DO;
       49     5649
       50     5650                  NUMBER_ODD_CHARS = MOD(LEX_SYMBOL.SIZE, 4);
       51     5651                  HASH_VALUE = 0;
       52     5652                  SUBSTR(HASH_VALUE_CHARS, 4 - NUMBER_ODD_CHARS, NUMBER_ODD_CHARS)
       53     5653                              = SUBSTR(LEX_SYMBOL.SYMBOL,
       54     5654                                       LEX_SYMBOL.SIZE - NUMBER_ODD_CHARS,
       55     5655                                       NUMBER_ODD_CHARS);
       56     5656                  NUMBER_WORDS = LEX_SYMBOL.SIZE / 4;
       57     5657                  IF NUMBER_WORDS > 0 THEN
       58     5658                    HASH_VALUE = HASH_VALUE
       59     5659                           + LEX_SYMBOL_WORDS.SYMBOL(0)
       60     5660                           + LEX_SYMBOL_WORDS.SYMBOL(NUMBER_WORDS-1)
       61     5661                           + LEX_SYMBOL_WORDS.SYMBOL(NUMBER_WORDS/2);
       62     5662                 DNT_BUCKET_NUMBER = MOD(HASH_VALUE_TRUNC.LOWER35BITS, %NUMBER_DNT_BUCKETS);
       63     5663
       64     5664               END;
       65     5665        %MEND;
       66     5666
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:3    
       67     5667
       68     5668        %DEF_BUCKETS;
       69     5671        %EJECT;
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:4    
       70     5672               /* Calculate hash value for efficient lookup */
       71     5673
       72     5674               %HASH;
       73     5691    1          DNT$ = DNT_BUCKETS (DNT_BUCKET_NUMBER) ;
       74     5692
       75     5693        /*V*
       76     5694            DNT_SEARCH -- Search the DNT item to see if an identical DNT entry
       77     5695                          has already been created.  This is true if the symbol
       78     5696                          name is the same as DNT.TEXT.NAME and the sizes are the same.
       79     5697                          If either of these tests fail then DNT$ is assigned to the
       80     5698                          next DNT item.
       81     5699
       82     5700                          This loop continues until an identical DNT entry is found
       83     5701                          in which case the program returns to the caller or if the
       84     5702                          the end of the chain is reached (DNT$ = ADDR(NIL)) then
       85     5703                          a DNT item must be created.
       86     5704        */
       87     5705    2          DO WHILE (DNT$ ~= ADDR(NIL)) ;
       88     5706    2            IF LEX_SYMBOL.SIZE = DNT$->DNT.TEXT.LENGTH AND
       89     5707    2               SUBSTR(LEX_SYMBOL.SYMBOL, 0, LEX_SYMBOL.SIZE)
       90     5708    2                      = DNT$ -> DNT.TEXT.NAME THEN
       91     5709    2              RETURN ; /* I FOUND IT */
       92     5710    2            ELSE
       93     5711    2              DNT$ = DNT$->DNT.NEXT ;
       94     5712    2          END ;
       95     5713
       96     5714        /*V*
       97     5715            CREATE_DNT_ITEM -- Reserve a DNT entry and assign the symbol size to the
       98     5716                               length field of the DNT.  Insert the entry into the
       99     5717                               hash table either PICTURE_BUCKETS or BUCKETS depending
      100     5718                               on the symbol type.  Assign the symbol to the name
      101     5719                               field then assign the ST pointer to ADDR(NIL).
      102     5720        */
      103     5721
      104     5722
      105     5723               %NEW_DNT ( @SIZE = LEX_SYMBOL.SIZE,
      106     5724                             @NAME = LEX_SYMBOL.SYMBOL,
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:5    
      107     5725                             @NEXT = "DNT_BUCKETS(DNT_BUCKET_NUMBER)");
      108     5783    1          DNT_BUCKETS(DNT_BUCKET_NUMBER) = DNT$ ;
      109     5784
      110     5785    1   END Z8AH$SEARCH_ ;   /* Z8AH */
      111     5786        %EOD;

PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:6    
--  Include file information  --

   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8AH$SEARCH_.

   Procedure Z8AH$SEARCH_ requires 101 words for executable code.
   Procedure Z8AH$SEARCH_ is declared NOAUTO and requires 6 words of local(STATIC) storage.

PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:7    

 Object Unit name= Z8AH$SEARCH_                               File name= Z8AH.:Z8A6TOU
 UTS= AUG 09 '97 09:37:19.56 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     6      6  Z8AH$SEARCH_
    1  LblCom even  none     1      1  ITERATION
    2  LblCom even  none     1      1  DNT$
    3  LblCom even  none     5      5  DNT_
    4  LblCom even  none     1      1  DNT_BUCKET_NUMBER
    5  LblCom even  none     1      1  DNT_OF_1$
    6  LblCom even  none    90    132  LEX_SYMBOL
    7  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
    8  LblCom even  none    90    132  TEMP_LEX_SYMBOL
    9  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
   10   Proc  even  none   101    145  Z8AH$SEARCH_
   11  RoData even  none     5      5  Z8AH$SEARCH_

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    10      0   yes            yes      Std        0  Z8AH$SEARCH_

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 Z8AR$RESERVER
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:8    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM                                DNT_BUCKETS

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:9    


        1        1        /*M* Z8AH$SEARCH_ -- Search an item into the DNT  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        Z8AH$SEARCH_: PROC NOAUTO ;

      7 10 000000   000000 741200 0     Z8AH$SEARCH_ STX1  ! 0

        8        8
        9        9        /*P*
       10       10               NAME:  Z8AH$SEARCH_
       11       11            PURPOSE:  Search a name or literal into the data name table.  "NAME"
       12       12                      may be a reserved word, user name, or system name.  "LITERAL"
       13       13                      may be numeric or alphanumeric.
       14       14        */
       15       15
       16       16        /*D*
       17       17               NAME:  Z8AH$SEARCH_
       18       18               CALL:  CALL Z8AH$SEARCH_ ;
       19       19
       20       20              INPUT:  LEX_SYMBOL.SYMBOL - Symbol to be stored in DNT.
       21       21                      LEX_SYMBOL.SIZE - Size of symbol to be stored.
       22       22             OUTPUT:  DNT$ - Pointer to entry in DNT for symbol.
       23       23
       24       24        DESCRIPTION:  This program searches the DNT to see if an identical DNT entry
       25       25                      has already been created.  If an entry has been created then
       26       26                      DNT$ is assigned the pointer of that item otherwise a DNT
       27       27                      item is created.
       28       28        */
       29       29        %EJECT ;
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:10   
       30       30
       31       31        %EQU PHASE = 1 ;
       32       32        %INCLUDE Z8A_DEFC ;
       33      100        %INCLUDE Z8A_SUPP_MAC ;
       34     2500        %INCLUDE Z8A_COMCOM ;
       35     3150        %INCLUDE Z8A_DNT ;
       36     3371        %INCLUDE Z8E_STACKS;
       37     5637
       38     5638    1   DCL    HASH_VALUE        UBIN WORD;
       39     5639    1   DCL    HASH_VALUE_CHARS  REDEF HASH_VALUE CHAR(4);
       40     5640    1   DCL 1  HASH_VALUE_TRUNC  REDEF HASH_VALUE,
       41     5641    1        2 *                 BIT(1) UNAL,
       42     5642    1        2 LOWER35BITS       UBIN(35) UNAL;
       43     5643
       44     5644    1   DCL    NUMBER_WORDS      UBIN WORD;
       45     5645    1   DCL    NUMBER_ODD_CHARS  UBIN WORD;
       46     5646
       47     5647        %MACRO HASH;
       48     5648               DO;
       49     5649
       50     5650                  NUMBER_ODD_CHARS = MOD(LEX_SYMBOL.SIZE, 4);
       51     5651                  HASH_VALUE = 0;
       52     5652                  SUBSTR(HASH_VALUE_CHARS, 4 - NUMBER_ODD_CHARS, NUMBER_ODD_CHARS)
       53     5653                              = SUBSTR(LEX_SYMBOL.SYMBOL,
       54     5654                                       LEX_SYMBOL.SIZE - NUMBER_ODD_CHARS,
       55     5655                                       NUMBER_ODD_CHARS);
       56     5656                  NUMBER_WORDS = LEX_SYMBOL.SIZE / 4;
       57     5657                  IF NUMBER_WORDS > 0 THEN
       58     5658                    HASH_VALUE = HASH_VALUE
       59     5659                           + LEX_SYMBOL_WORDS.SYMBOL(0)
       60     5660                           + LEX_SYMBOL_WORDS.SYMBOL(NUMBER_WORDS-1)
       61     5661                           + LEX_SYMBOL_WORDS.SYMBOL(NUMBER_WORDS/2);
       62     5662                DNT_BUCKET_NUMBER = MOD(HASH_VALUE_TRUNC.LOWER35BITS, %NUMBER_DNT_BUCKETS);
       63     5663
       64     5664               END;
       65     5665        %MEND;
       66     5666
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:11   
       67     5667
       68     5668        %DEF_BUCKETS;
       69     5671        %EJECT;
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:12   
       70     5672               /* Calculate hash value for efficient lookup */
       71     5673
       72     5674               %HASH;

   5676 10 000001   000010 236000 6                  LDQ     LEX_SYMBOL+8
        10 000002   000004 506007                    DIV     4,DL
        10 000003   000003 755000 0                  STA     NUMBER_ODD_CHARS

   5677 10 000004   000001 450000 0                  STZ     HASH_VALUE

   5678 10 000005   000010 236000 6                  LDQ     LEX_SYMBOL+8
        10 000006   000003 136000 0                  SBLQ    NUMBER_ODD_CHARS
        10 000007   000000 675000 11                 ERA     0
        10 000010   000001 035007                    ADLA    1,DL
        10 000011   000003 720000 0                  LXL0    NUMBER_ODD_CHARS
        10 000012   040045 100446                    MLR     fill='040'O
        10 000013   000011 000010 6                  ADSC9   LEX_SYMBOL+9,Q           cn=0,n=*X0
        10 000014   000002 000010 0                  ADSC9   NUMBER_WORDS,A           cn=0,n=*X0

   5682 10 000015   000010 236000 6                  LDQ     LEX_SYMBOL+8
        10 000016   000004 506007                    DIV     4,DL
        10 000017   000002 756000 0                  STQ     NUMBER_WORDS

   5683 10 000020   000000 116003                    CMPQ    0,DU
        10 000021   000035 600000 10                 TZE     s:5688

   5684 10 000022   000001 236000 0                  LDQ     HASH_VALUE
        10 000023   000011 036000 6                  ADLQ    LEX_SYMBOL+9
        10 000024   000002 721000 0                  LXL1    NUMBER_WORDS
        10 000025   000010 036011 6                  ADLQ    LEX_SYMBOL+8,X1
        10 000026   000004 756000 0                  STQ     NUMBER_ODD_CHARS+1
        10 000027   000002 236000 0                  LDQ     NUMBER_WORDS
        10 000030   000001 772000                    QRL     1
        10 000031   000000 622006                    EAX2    0,QL
        10 000032   000004 236000 0                  LDQ     NUMBER_ODD_CHARS+1
        10 000033   000011 036012 6                  ADLQ    LEX_SYMBOL+9,X2
        10 000034   000001 756000 0                  STQ     HASH_VALUE
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:13   

   5688 10 000035   000001 236000 0                  LDQ     HASH_VALUE
        10 000036   000001 376000 11                 ANQ     1
        10 000037   002151 506007                    DIV     1129,DL
        10 000040   000000 755000 4                  STA     DNT_BUCKET_NUMBER

       73     5691    1          DNT$ = DNT_BUCKETS (DNT_BUCKET_NUMBER) ;

   5691 10 000041   000000 236005 xsym               LDQ     DNT_BUCKETS,AL
        10 000042   000000 756000 2                  STQ     DNT$

       74     5692
       75     5693        /*V*
       76     5694            DNT_SEARCH -- Search the DNT item to see if an identical DNT entry
       77     5695                          has already been created.  This is true if the symbol
       78     5696                          name is the same as DNT.TEXT.NAME and the sizes are the same.
       79     5697                          If either of these tests fail then DNT$ is assigned to the
       80     5698                          next DNT item.
       81     5699
       82     5700                          This loop continues until an identical DNT entry is found
       83     5701                          in which case the program returns to the caller or if the
       84     5702                          the end of the chain is reached (DNT$ = ADDR(NIL)) then
       85     5703                          a DNT item must be created.
       86     5704        */
       87     5705    2          DO WHILE (DNT$ ~= ADDR(NIL)) ;

   5705 10 000043   000063 710000 10                 TRA     s:5712

       88     5706    2            IF LEX_SYMBOL.SIZE = DNT$->DNT.TEXT.LENGTH AND

   5706 10 000044   000000 470400 2                  LDP0    DNT$
        10 000045   000004 236100                    LDQ     4,,PR0
        10 000046   000022 772000                    QRL     18
        10 000047   000010 116000 6                  CMPQ    LEX_SYMBOL+8
        10 000050   000061 601000 10                 TNZ     s:5711
        10 000051   000004 220100                    LDX0    4,,PR0
        10 000052   000010 721000 6                  LXL1    LEX_SYMBOL+8
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:14   
        10 000053   040140 106440                    CMPC    fill='040'O
        10 000054   000011 000011 6                  ADSC9   LEX_SYMBOL+9             cn=0,n=*X1
        10 000055   000004 400010                    ADSC9   4,,PR0                   cn=2,n=*X0
        10 000056   000061 601000 10                 TNZ     s:5711

       89     5707    2               SUBSTR(LEX_SYMBOL.SYMBOL, 0, LEX_SYMBOL.SIZE)
       90     5708    2                      = DNT$ -> DNT.TEXT.NAME THEN
       91     5709    2              RETURN ; /* I FOUND IT */

   5709 10 000057   000000 221200 0                  LDX1  ! 0
        10 000060   000001 702211                    TSX2  ! 1,X1

       92     5710    2            ELSE
       93     5711    2              DNT$ = DNT$->DNT.NEXT ;

   5711 10 000061   000002 236100                    LDQ     2,,PR0
        10 000062   000000 756000 2                  STQ     DNT$

       94     5712    2          END ;

   5712 10 000063   000002 116000 11                 CMPQ    2
        10 000064   000044 601000 10                 TNZ     s:5706

       95     5713
       96     5714        /*V*
       97     5715            CREATE_DNT_ITEM -- Reserve a DNT entry and assign the symbol size to the
       98     5716                               length field of the DNT.  Insert the entry into the
       99     5717                               hash table either PICTURE_BUCKETS or BUCKETS depending
      100     5718                               on the symbol type.  Assign the symbol to the name
      101     5719                               field then assign the ST pointer to ADDR(NIL).
      102     5720        */
      103     5721
      104     5722
      105     5723               %NEW_DNT ( @SIZE = LEX_SYMBOL.SIZE,
      106     5724                             @NAME = LEX_SYMBOL.SYMBOL,
      107     5725                             @NEXT = "DNT_BUCKETS(DNT_BUCKET_NUMBER)");

PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:15   
   5728 10 000065   000010 236000 6                  LDQ     LEX_SYMBOL+8
        10 000066   000025 036007                    ADLQ    21,DL
        10 000067   000004 506007                    DIV     4,DL
        10 000070   000000 756000 1                  STQ     ITERATION

   5729 10 000071   000002 036000 3                  ADLQ    DNT_+2
        10 000072   000105 604000 10                 TMI     s:5731
        10 000073   000003 116000 3                  CMPQ    DNT_+3
        10 000074   000105 602000 10                 TNC     s:5731

   5730 10 000075   000004 236000 11                 LDQ     4
        10 000076   000004 756000 0                  STQ     NUMBER_ODD_CHARS+1
        10 000077   000004 630400 0                  EPPR0   NUMBER_ODD_CHARS+1
        10 000100   000005 450400 0                  STP0    NUMBER_ODD_CHARS+2
        10 000101   000005 630400 0                  EPPR0   NUMBER_ODD_CHARS+2
        10 000102   000003 631400 11                 EPPR1   3
        10 000103   000000 701000 xent               TSX1    Z8AR$RESERVER
        10 000104   000000 011000                    NOP     0

   5731 10 000105   000002 236000 3                  LDQ     DNT_+2
        10 000106   000022 736000                    QLS     18
        10 000107   000001 036000 3                  ADLQ    DNT_+1
        10 000110   000000 756000 2                  STQ     DNT$

   5732 10 000111   000002 236000 3                  LDQ     DNT_+2
        10 000112   000000 036000 1                  ADLQ    ITERATION
        10 000113   000002 756000 3                  STQ     DNT_+2

   5733 10 000114   001046 220003                    LDX0    550,DU
        10 000115   000000 470400 2                  LDP0    DNT$
        10 000116   000000 740100                    STX0    0,,PR0

   5734 10 000117   000000 721000 1                  LXL1    ITERATION
        10 000120   000000 470400 2                  LDP0    DNT$
        10 000121   000000 441100                    SXL1    0,,PR0

   5735 10 000122   000010 721000 6                  LXL1    LEX_SYMBOL+8
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:16   
        10 000123   000000 470400 2                  LDP0    DNT$
        10 000124   000004 741100                    STX1    4,,PR0

   5738 10 000125   000002 236000 11                 LDQ     2
        10 000126   000001 756100                    STQ     1,,PR0

   5739 10 000127   000000 722000 4                  LXL2    DNT_BUCKET_NUMBER
        10 000130   000000 236012 xsym               LDQ     DNT_BUCKETS,X2
        10 000131   000002 756100                    STQ     2,,PR0

   5740 10 000132   000000 223003                    LDX3    0,DU
        10 000133   000003 743100                    STX3    3,,PR0

   5741 10 000134   000000 224003                    LDX4    0,DU
        10 000135   000003 444100                    SXL4    3,,PR0

   5742 10 000136   040140 100400                    MLR     fill='040'O
        10 000137   000011 000504 6                  ADSC9   LEX_SYMBOL+9             cn=0,n=324
        10 000140   000004 400011                    ADSC9   4,,PR0                   cn=2,n=*X1

      108     5783    1          DNT_BUCKETS(DNT_BUCKET_NUMBER) = DNT$ ;

   5783 10 000141   000000 236000 2                  LDQ     DNT$
        10 000142   000000 756012 xsym               STQ     DNT_BUCKETS,X2

      109     5784
      110     5785    1   END Z8AH$SEARCH_ ;   /* Z8AH */

   5785 10 000143   000000 221200 0                  LDX1  ! 0
        10 000144   000001 702211                    TSX2  ! 1,X1
      111     5786        %EOD;

PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:17   
--  Include file information  --

   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8AH$SEARCH_.
PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:18   

 **** Variables and constants ****

  ****  Section 000  Data  Z8AH$SEARCH_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w UBIN        r     1 HASH_VALUE                 1-0-0/w CHAR(4)     r     1 HASH_VALUE_CHARS
     1-0-0/w STRC        r     1 HASH_VALUE_TRUNC           3-0-0/w UBIN        r     1 NUMBER_ODD_CHARS
     2-0-0/w UBIN        r     1 NUMBER_WORDS

  ****  Section 001 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 ITERATION

  ****  Section 002 LblCom DNT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DNT$

  ****  Section 003 LblCom DNT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 DNT_

  ****  Section 004 LblCom DNT_BUCKET_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:19   
     0-0-0/w UBIN        r     1 DNT_BUCKET_NUMBER

  ****  Section 005 LblCom DNT_OF_1$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 DNT_OF_1$

  ****  Section 006 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)  r     1 LEX_SYMBOL_WORDS

  ****  Section 007 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 008 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 009 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:20   
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248)       1 COMCOM
     0-0-0/w PTR         r     1 DNT_BUCKETS(0:1128)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BINARY_OP                  0-0-0/w STRC(288)         1 CALL_STMT
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(288)         1 COMPUTE_STMT
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER
     0-0-0/w STRC(252)         1 DEFERED_ID_TREE            0-0-0/w STRC(288)         1 DEFERED_QUAL_ID
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w ASTR(180)   r     1 DNT                        0-0-0/w STRC(288)         1 ILS_LIST
     0-0-0/w STRC(288)         1 INSPECT_1_STMT             0-0-0/w STRC(288)         1 INSPECT_2_STMT
     0-0-0/w STRC(288)         1 INSPECT_4_STMT             0-0-0/w STRC(288)         1 LA_ITEM
     0-0-0/w STRC(504)         1 LX_CD_INPUT                0-0-0/w STRC(324)         1 LX_CD_I_O
     0-0-0/w STRC(396)         1 LX_CD_OUTPUT               0-0-0/w STRC(288)         1 LX_ETT_ITEM
     0-0-0/w STRC(288)         1 LX_ITEM                    0-0-0/w STRC(288)         1 LX_LARGE
     0-0-0/w STRC(288)         1 LX_LIST                    0-0-0/w STRC(1224)        1 LX_REC_DECL
     0-0-0/w STRC(864)         1 LX_REPORT_REC              0-0-0/w STRC(288)         1 LX_TERMINAL
     0-0-0/w STRC(288)         1 MULTIPLY_STMT              0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(288)         1 READ_STMT                  0-0-0/w STRC(288)         1 REWRITE_STMT
     0-0-0/w STRC(288)         1 START_STMT                 0-0-0/w STRC(252)         1 STRING_STMT
     0-0-0/w STRC(288)         1 SUBTRACT_STMT              0-0-0/w STRC(288)         1 UNARY_OP
     0-0-0/w STRC(288)         1 UNSTRING_STMT              0-0-0/w STRC(288)         1 WRITE_STMT

PL6.E3A0      #001=Z8AH$SEARCH_ File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:37 Page:21   

   Procedure Z8AH$SEARCH_ requires 101 words for executable code.
   Procedure Z8AH$SEARCH_ is declared NOAUTO and requires 6 words of local(STATIC) storage.

PL6.E3A0      #002=Z8AH$NEW_DNT File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:38 Page:22   
      112        1        /*T***********************************************************/
      113        2        /*T*                                                         */
      114        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      115        4        /*T*                                                         */
      116        5        /*T***********************************************************/
      117        6        Z8AH$NEW_DNT : PROC (STRING, STRING_LEN, STRING$);
      118        7
      119        8    1     DCL STRING_LEN SBIN;
      120        9    1     DCL STRING CHAR(STRING_LEN);
      121       10    1     DCL STRING$ PTR;
      122       11
      123       12        %EQU PHASE = 1;
      124       13        %INCLUDE Z8A_DEFC;
      125       81        %INCLUDE Z8A_SUPP_MAC;
      126     2481        %INCLUDE Z8A_COMCOM;
      127     3131        %INCLUDE Z8A_DNT;
      128     3352        %INCLUDE Z8E_STACKS;
      129     5618
      130     5619    1   DCL Z8AH$SEARCH_ ENTRY;
      131     5620
      132     5621    1     LEX_SYMBOL.SIZE = STRING_LEN;
      133     5622    1     LEX_SYMBOL.SYMBOL = STRING;
      134     5623    1     CALL Z8AH$SEARCH_;
      135     5624    1     STRING$ = DNT$;
      136     5625
      137     5626    1   END Z8AH$NEW_DNT;

PL6.E3A0      #002=Z8AH$NEW_DNT File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:38 Page:23   
--  Include file information  --

   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8AH$NEW_DNT.

   Procedure Z8AH$NEW_DNT requires 17 words for executable code.
   Procedure Z8AH$NEW_DNT requires 6 words of local(AUTO) storage.

    No errors detected in file Z8AH.:Z8A6TSI    .

PL6.E3A0      #002=Z8AH$NEW_DNT File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:38 Page:24   

 Object Unit name= Z8AH$NEW_DNT                               File name= Z8AH.:Z8A6TOU
 UTS= AUG 09 '97 09:38:03.20 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  DNT$
    2  LblCom even  none     5      5  DNT_
    3  LblCom even  none     1      1  DNT_BUCKET_NUMBER
    4  LblCom even  none     1      1  DNT_OF_1$
    5  LblCom even  none    90    132  LEX_SYMBOL
    6  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
    7  LblCom even  none    90    132  TEMP_LEX_SYMBOL
    8  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
    9   Proc  even  none    17     21  Z8AH$NEW_DNT
   10  RoData even  none     1      1  Z8AH$NEW_DNT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     9      0   yes            yes      Std        3  Z8AH$NEW_DNT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 Z8AH$SEARCH_
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
PL6.E3A0      #002=Z8AH$NEW_DNT File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:38 Page:25   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=Z8AH$NEW_DNT File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:38 Page:26   


      112        1        /*T***********************************************************/
      113        2        /*T*                                                         */
      114        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      115        4        /*T*                                                         */
      116        5        /*T***********************************************************/
      117        6        Z8AH$NEW_DNT : PROC (STRING, STRING_LEN, STRING$);

      6  9 000000   000000 700200 xent  Z8AH$NEW_DNT TSX0  ! X66_AUTO_3
         9 000001   000006 000003                    ZERO    6,3

      118        7
      119        8    1     DCL STRING_LEN SBIN;
      120        9    1     DCL STRING CHAR(STRING_LEN);
      121       10    1     DCL STRING$ PTR;
      122       11
      123       12        %EQU PHASE = 1;
      124       13        %INCLUDE Z8A_DEFC;
      125       81        %INCLUDE Z8A_SUPP_MAC;
      126     2481        %INCLUDE Z8A_COMCOM;
      127     3131        %INCLUDE Z8A_DNT;
      128     3352        %INCLUDE Z8E_STACKS;
      129     5618
      130     5619    1   DCL Z8AH$SEARCH_ ENTRY;
      131     5620
      132     5621    1     LEX_SYMBOL.SIZE = STRING_LEN;

   5621  9 000002   200004 470500                    LDP0    @STRING_LEN,,AUTO
         9 000003   000000 235100                    LDA     0,,PR0
         9 000004   000010 755000 5                  STA     LEX_SYMBOL+8

      133     5622    1     LEX_SYMBOL.SYMBOL = STRING;

   5622  9 000005   000000 720100                    LXL0    0,,PR0
         9 000006   200003 471500                    LDP1    @STRING,,AUTO
         9 000007   040000 100540                    MLR     fill='040'O
         9 000010   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
PL6.E3A0      #002=Z8AH$NEW_DNT File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:38 Page:27   
         9 000011   000011 000504 5                  ADSC9   LEX_SYMBOL+9             cn=0,n=324

      134     5623    1     CALL Z8AH$SEARCH_;

   5623  9 000012   000000 631400 10                 EPPR1   0
         9 000013   000000 701000 xent               TSX1    Z8AH$SEARCH_
         9 000014   000000 011000                    NOP     0

      135     5624    1     STRING$ = DNT$;

   5624  9 000015   000000 236000 1                  LDQ     DNT$
         9 000016   200005 470500                    LDP0    @STRING$,,AUTO
         9 000017   000000 756100                    STQ     0,,PR0

      136     5625
      137     5626    1   END Z8AH$NEW_DNT;

   5626  9 000020   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #002=Z8AH$NEW_DNT File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:38 Page:28   
--  Include file information  --

   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8AH$NEW_DNT.
PL6.E3A0      #002=Z8AH$NEW_DNT File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:38 Page:29   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom DNT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DNT$

  ****  Section 002 LblCom DNT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 DNT_

  ****  Section 003 LblCom DNT_BUCKET_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 DNT_BUCKET_NUMBER

  ****  Section 004 LblCom DNT_OF_1$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 DNT_OF_1$

PL6.E3A0      #002=Z8AH$NEW_DNT File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:38 Page:30   
  ****  Section 005 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 006 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 007 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 008 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @STRING                    5-0-0/w PTR         r     1 @STRING$
     4-0-0/w PTR         r     1 @STRING_LEN               *0-0-0/c ACHR        r     1 STRING
    *0-0-0/w PTR         r     1 STRING$                   *0-0-0/w SBIN        r     1 STRING_LEN

PL6.E3A0      #002=Z8AH$NEW_DNT File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:38 Page:31   
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248)       1 COMCOM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BINARY_OP                  0-0-0/w STRC(288)         1 CALL_STMT
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(288)         1 COMPUTE_STMT
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER
     0-0-0/w STRC(252)         1 DEFERED_ID_TREE            0-0-0/w STRC(288)         1 DEFERED_QUAL_ID
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w ASTR(180)   r     1 DNT                        0-0-0/w STRC(288)         1 ILS_LIST
     0-0-0/w STRC(288)         1 INSPECT_1_STMT             0-0-0/w STRC(288)         1 INSPECT_2_STMT
     0-0-0/w STRC(288)         1 INSPECT_4_STMT             0-0-0/w STRC(288)         1 LA_ITEM
     0-0-0/w STRC(504)         1 LX_CD_INPUT                0-0-0/w STRC(324)         1 LX_CD_I_O
     0-0-0/w STRC(396)         1 LX_CD_OUTPUT               0-0-0/w STRC(288)         1 LX_ETT_ITEM
     0-0-0/w STRC(288)         1 LX_ITEM                    0-0-0/w STRC(288)         1 LX_LARGE
     0-0-0/w STRC(288)         1 LX_LIST                    0-0-0/w STRC(1224)        1 LX_REC_DECL
     0-0-0/w STRC(864)         1 LX_REPORT_REC              0-0-0/w STRC(288)         1 LX_TERMINAL
     0-0-0/w STRC(288)         1 MULTIPLY_STMT              0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(288)         1 READ_STMT                  0-0-0/w STRC(288)         1 REWRITE_STMT
     0-0-0/w STRC(288)         1 START_STMT                 0-0-0/w STRC(252)         1 STRING_STMT
     0-0-0/w STRC(288)         1 SUBTRACT_STMT              0-0-0/w STRC(288)         1 UNARY_OP
     0-0-0/w STRC(288)         1 UNSTRING_STMT              0-0-0/w STRC(288)         1 WRITE_STMT

PL6.E3A0      #002=Z8AH$NEW_DNT File=Z8AH.:Z8A6TSI                               SAT 08/09/97 09:38 Page:32   

   Procedure Z8AH$NEW_DNT requires 17 words for executable code.
   Procedure Z8AH$NEW_DNT requires 6 words of local(AUTO) storage.

    No errors detected in file Z8AH.:Z8A6TSI    .
