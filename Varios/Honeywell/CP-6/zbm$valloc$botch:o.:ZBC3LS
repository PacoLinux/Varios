

CC.C03    File=zbm$valloc$botch:c.:ZBC3TSI                                          Fri Aug 22 1997  Page=1  
        1         1             /* $Header: botch.c,v 1.3 87/03/10 09:05:34 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             /*  botch - write garbage over a chunk of memory, useful if you want
        7         7                 to check if freed memory is used inappopriately.
        8         8             */
        9         9
       10        10             #include "ASSERT:h"
       11        11             #include "valloc$in_all:h"
       12        12
       13        13             EXPORT
       14        14             botch(ptr, n)
       15        15              char *ptr;
       16        16              int n;
       17        17             {
       18        18    1         assert((double)ptr % sizeof (double) == 0);
       19        19    1         while (n >= sizeof (long)) {
       20        20    2               /* high-speed botch loop */
       21        21    2            *(long *)ptr = 025252525252L;
       22        22    2            ptr += sizeof (long), n -= sizeof (long);
       23        23    2         }
       24        24    1         while (n--) *ptr++ = '\252';
       25        25    1        }
       26        26
---  Include file information  ---

   ASSERT:h.:ZBC3TOU. is referenced
   zbm$valloc$in_all:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbm$valloc$botch:c.:ZBC3TSI
