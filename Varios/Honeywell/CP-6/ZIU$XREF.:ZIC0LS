
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:1    
        1        1        /*M* ZIU$XREF     IDS UTILITIES       BUILDS REC/SET TBLS FROM SCHEMA */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8           NAME: ZIU$XREF
        9        9        PURPOSE: This procedure builds a set of cross reference tables of
       10       10                 set to record and record to set schema information (including
       11       11                 set EIS descriptors) from the supplied schema.
       12       12                                                                               */
       13       13        ZIU$XREF: PROC NOAUTO ALTRET;
       14       14
       15       15    1   DCL INDX SBIN WORD STATIC ALIGNED;
       16       16    1   DCL TEMP_INDX SBIN WORD STATIC ALIGNED;
       17       17    1   DCL RECTYP SBIN WORD STATIC ALIGNED;
       18       18    1   DCL LAST SBIN WORD STATIC ALIGNED;
       19       19    1   DCL REC_LOC SBIN WORD STATIC ALIGNED;
       20       20    1   DCL PR7 SBIN WORD STATIC ALIGNED INIT(%BITBIN('377777777777'O));
       21       21    1   DCL FTIME BIT(1) STATIC ALIGNED INIT('1'B);
       22       22    1   DCL SETTYPE SBIN WORD STATIC ALIGNED INIT(4999);
       23       23    1   DCL KEYVAL UBIN WORD STATIC ALIGNED;
       24       24    1   DCL TEMP SBIN ALIGNED;
       25       25    1   DCL WR_DCB SBIN STATIC SYMDEF;
       26       26
       27       27    1   DCL CREATE_TBL_SEG ENTRY(2) ALTRET;
       28       28    1   DCL EXPAND_TBL_SEG ENTRY(2) ALTRET;
       29       29    1   DCL FIND_MSTR_ENTRY ENTRY(2);
       30       30    1   DCL HASHENTRY ENTRY(2);
       31       31    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET;
       32       32    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET;
       33       33    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
       34       34    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET;
       35       35    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
       36       36    1   DCL INIT_TABLES ENTRY;
       37       37
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:2    
       38       38
       39       39         %INCLUDE CP_6;
       40      120         %F$DCB;
       41      177         %B$TCB;
       42      180         %INCLUDE CP_6_SUBS;
       43      720         %INCLUDE ZI_ERRORS_C;
       44     1046         %INCLUDE ZI_RVA_C;
       45     1727         %CAN_RVA_REF;
       46     2046         %INCLUDE ZI_UWA_C;
       47     2736         %ZI$UWAB;
       48     3076         %INCLUDE ZI_GLOBAL_DBUTIL;
       49     3254         %SYS_FUNC;
       50     3346         %MISC_DCLS;
       51     3399         %INCLUDE ZI_DBU_XREF;
       52     3566         %XREF_TBLS(STCLASS="STATIC SYMDEF");
       53     3641
       54     3642         %SUB UNTIL_END_OF_REALM = "WHILE(UWA.DB_STATUS ~= '02100')";
       55     3643         %SUB END_OF_REALM = "UWA.DB_STATUS = '02100'";
       56     3644         %SUB MSTRTBL# = 2;
       57     3645         %SUB SETTBL# = 3;
       58     3646         %SUB RECTBL# = 4;
       59     3647
       60     3648         %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:3    
       61     3649    1   BUILD_MSTR_TBL: ENTRY ALTRET;
       62     3650         /*
       63     3651              Build the master cross reference table (list of rec and set names)
       64     3652        */
       65     3653    1       CALL INIT_VARS; /* Initialize table variables */
       66     3654    1       GLBL_PTR_SZ = UWA.OA_REC.GLBL + 1;
       67     3655    1       CALL CREATE_TBL_SEG(MSTR$,MSTRTBL#) ALTRET(ALTRTN);
       68     3656    1       MAX_MSLOT = 1024/SIZEW(MSTR_REF(0));
       69     3657         /* Get dyn mem for the table */
       70     3658         /* and start by inserting record entries */
       71     3659    1       CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC) ALTRET(DBALT);
       72     3660    2       DO UNTIL_END_OF_REALM;
       73     3661
       74     3662    2           CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC) ALTRET(DBALT);
       75     3663    2           CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(DBALT);
       76     3664    2           CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(DBALT);
       77     3665
       78     3666    2           NO_RECS = NO_RECS + 1;
       79     3667    2           CALL GET_MSLOT ALTRET(ALTRTN);
       80     3668    2           MSTR_REF.NAME(NXT_MSLOT) = UWA.SN_REC.SENAME;
       81     3669    2           MSTR_REF.TYPE(NXT_MSLOT) = UWA.RC_REC.RTYPE;
       82     3670    2           MSTR_REF.PSMODE(NXT_MSLOT) = UWA.RC_REC.PSMODE;
       83     3671    2           MSTR_REF.NEXT(NXT_MSLOT) = -1;
       84     3672    2           MSTR_REF.NXTHSH(NXT_MSLOT) = -1;
       85     3673    2           MSTR_REF.PAOFF(NXT_MSLOT) = UWA.RC_REC.PA_OFFSET;
       86     3674    2           MSTR_REF.PAENT(NXT_MSLOT) = UWA.RC_REC.PA_ENTRY;
       87     3675         /* NOW, LINK TYPE TABLE TO MSTR_REF TABLE */
       88     3676         /* SO THAT NO NEED OF SEARCH FOR RECORD ON ITS TYPE */
       89     3677    2           TYPE.MSTRINDX(UWA.RC_REC.RTYPE)=NXT_MSLOT;
       90     3678    2           CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC) ALTRET(DBALT);
       91     3679    2           END;
       92     3680    1       IF TYPE.MSTRINDX(4000)<0 THEN /* IF SCHEMA HAS NO *CALC.RC */
       93     3681    2       DO; /* WE WILL MAKE A DUMMY ENTRY FOR IT */
       94     3682    2           NO_RECS = NO_RECS + 1;
       95     3683    2           CALL GET_MSLOT ALTRET(ALTRTN);
       96     3684    2           TYPE.MSTRINDX(4000) = NXT_MSLOT;
       97     3685    2           MSTR_REF.NAME(NXT_MSLOT)='*CALC.RC';
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:4    
       98     3686    2           MSTR_REF.TYPE(NXT_MSLOT)=4000;
       99     3687    2           MSTR_REF.NEXT(NXT_MSLOT)=-1;
      100     3688    2           MSTR_REF.PAOFF(NXT_MSLOT)=0;
      101     3689    2           MSTR_REF.PAENT(NXT_MSLOT)=0;
      102     3690    2           END;
      103     3691        %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:5    
      104     3692         /*
      105     3693            Put set entries into the master table.
      106     3694         */
      107     3695    1       FIRST_SET = NXT_MSLOT+1;
      108     3696    1       CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(DBALT);
      109     3697    2       DO UNTIL_END_OF_REALM;
      110     3698
      111     3699    2           CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ALTRET(DBALT);
      112     3700    2           CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(DBALT);
      113     3701    2           CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(DBALT);
      114     3702
      115     3703    2           NO_SETS = NO_SETS + 1;
      116     3704    2           CALL GET_MSLOT ALTRET(ALTRTN);
      117     3705    2           SETTYPE = SETTYPE + 1;
      118     3706    2           MSTR_REF.NAME(NXT_MSLOT) = UWA.SN_REC.SENAME;
      119     3707    2           MSTR_REF.TYPE(NXT_MSLOT) = SETTYPE;
      120     3708    2           MSTR_REF.NEXT(NXT_MSLOT) = -1;
      121     3709    2           MSTR_REF.NXTHSH(NXT_MSLOT) = -1;
      122     3710    2           MSTR_REF.PAOFF(NXT_MSLOT) = 0;
      123     3711    2           MSTR_REF.PAENT(NXT_MSLOT) = 0;
      124     3712    2           MSTR_REF.SET.INMODE(NXT_MSLOT) = '0'B; /* INIT INSERTION MODE */
      125     3713    2           MSTR_REF.SET.RETYPE(NXT_MSLOT) = '0'B; /* INIT RETENTION TYPE */
      126     3714    2           MSTR_REF.GLOBAL(NXT_MSLOT) = UWA.SC_REC.SETGLO;
      127     3715    2           MSTR_REF.SET.ORDER(NXT_MSLOT) = UWA.SC_REC.SETORD;
      128     3716    2           MSTR_REF.SET.SETYPE(NXT_MSLOT) = UWA.SC_REC.SETTYPE;
      129     3717    2           IF UWA.SC_REC.SETMODE = 2 THEN /* PA set type */
      130     3718    2               MSTR_REF.SET.PATYPE(NXT_MSLOT) = %YES#;
      131     3719    2           ELSE
      132     3720    2               MSTR_REF.SET.PATYPE(NXT_MSLOT) = %NO#;
      133     3721
      134     3722
      135     3723    2           CALL HASHENTRY(UWA.SN_REC.SENAME,INDX);
      136     3724    2           IF HASHTBL(INDX) = -1 THEN
      137     3725    2               HASHTBL(INDX) = NXT_MSLOT; /* Store entry loc in hashtbl */
      138     3726    3           ELSE DO; /* Else handle collosion */
      139     3727    3               INDX = HASHTBL(INDX);
      140     3728    4               DO WHILE(INDX ~= -1);
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:6    
      141     3729    4                   TEMP_INDX = INDX;
      142     3730    4                   INDX = MSTR_REF.NXTHSH(INDX);
      143     3731    4                   END;
      144     3732    3               MSTR_REF.NXTHSH(TEMP_INDX) = NXT_MSLOT;
      145     3733    3               END;
      146     3734
      147     3735    2           CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(DBALT);
      148     3736    2           END;
      149     3737    1       CALL BUILD_AREA_KEY_XREF ALTRET(DBALT);
      150     3738    1       XREF_BUILT = %YES#;
      151     3739
      152     3740    1       RETURN;
      153     3741        %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:7    
      154     3742        /* Assure space for the next MSTRTBL entry.  MSTR_REF then AREA_KEY_REF
      155     3743           go in this space.  It is assumed that both are the same SIZEW.  */
      156     3744
      157     3745    1   GET_MSLOT: PROC ALTRET;
      158     3746
      159     3747    2       NXT_MSLOT = NXT_MSLOT + 1;
      160     3748    2       IF NXT_MSLOT >= MAX_MSLOT THEN
      161     3749    3       DO;
      162     3750    3           CALL EXPAND_TBL_SEG(,MSTRTBL#)
      163     3751    4           WHENALTRETURN DO; ALTRETURN; END;
      164     3752    3           MAX_MSLOT = MAX_MSLOT + 1024/SIZEW(MSTR_REF(0));
      165     3753    3           END;
      166     3754
      167     3755    2   END GET_MSLOT;
      168     3756        %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:8    
      169     3757        /*
      170     3758              Build a cross reference of area names and max DB keys.
      171     3759        */
      172     3760    1   BUILD_AREA_KEY_XREF: PROC ALTRET;
      173     3761
      174     3762    2       AREA_KEY$ = ADDR(MSTR_REF(NXT_MSLOT + 1));
      175     3763    2       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA) ALTRET(ALTRTN);
      176     3764    2       CALL DB_FUNC_FRS(CAN_RVA.ACREC.SEC,CAN_RVA.OAAC.SEC) ALTRET(ALTRTN);
      177     3765    3       DO UNTIL_END_OF_REALM;
      178     3766    3           NO_AREAS = NO_AREAS + 1;
      179     3767    3           CALL GET_MSLOT ALTRET(ALTRTN);
      180     3768    3           CALL DB_FUNC_GET(CAN_RVA.ACREC.SEC) ALTRET(ALTRTN);
      181     3769    3           CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(ALTRTN);
      182     3770    3           CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(ALTRTN);
      183     3771
      184     3772    3           AREA_KEY_XREF.CHECKED(NO_AREAS-1) = 0;
      185     3773    3           AREA_KEY_XREF.NAME(NO_AREAS-1) = UWA.SN_REC.SENAME;
      186     3774    3           AREA_KEY_XREF.MAX_KEY(NO_AREAS-1) = UWA.AC_REC.MAX_DBK +
      187     3775    3              UWA.AC_REC.KEYS_RESER;
      188     3776    3           AREA_KEY_XREF.PERMTYPE(NO_AREAS-1) = UWA.AC_REC.PERMTYPE;
      189     3777    3           KEYVAL = UWA.AC_REC.KEY_ALLOC + UWA.AC_REC.KEYS_RESER;
      190     3778    3           IF KEYVAL <= BITBIN('777777'O) THEN
      191     3779    3               AREA_KEY_XREF.LOC_KSZ(NO_AREAS-1) = 2;
      192     3780    3           ELSE
      193     3781    3               IF KEYVAL <= BITBIN('777777777'O) THEN
      194     3782    3                   AREA_KEY_XREF.LOC_KSZ(NO_AREAS-1) = 3;
      195     3783    3               ELSE
      196     3784    3                   AREA_KEY_XREF.LOC_KSZ(NO_AREAS-1) = 4;
      197     3785
      198     3786    3           CALL DB_FUNC_FRS(CAN_RVA.ACREC.SEC,CAN_RVA.OAAC.SEC) ALTRET(ALTRTN);
      199     3787    3           END;
      200     3788    2       RETURN;
      201     3789
      202     3790    2   ALTRTN:
      203     3791    2       ALTRETURN;
      204     3792    2   END BUILD_AREA_KEY_XREF;
      205     3793        %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:9    
      206     3794        /*
      207     3795           Build set xref - this table is used to store set eis descriptors
      208     3796                            for any given record.
      209     3797        */
      210     3798    1   BUILD_SETXREF: ENTRY ALTRET;
      211     3799
      212     3800    1       CALL CREATE_TBL_SEG(SET_XREF$,SETTBL#) ALTRET(ALTRTN);
      213     3801    1       IF FTIME THEN
      214     3802    2       DO;
      215     3803    2           FTIME = '0'B;
      216     3804    2           PR7 = PR7 + 1;
      217     3805    2           END;
      218     3806    1       MAX_SSLOT = 204; /* Init size of table to 1024 wrds/ 5 wrd entres*/
      219     3807    1       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA) ALTRET(DBALT);
      220     3808    1       CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC) ALTRET(DBALT);
      221     3809    2       DO UNTIL_END_OF_REALM;
      222     3810
      223     3811    2           CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC) ALTRET(DBALT);
      224     3812    2           REC_LOC = TYPE.MSTRINDX(UWA.RC_REC.RTYPE); /* INDX IN MSTR_REF */
      225     3813    2           LAST = REC_LOC;
      226     3814    2           CALL DB_FUNC_FRS(CAN_RVA.NULL,CAN_RVA.RCSOSM.SEC) ALTRET(DBALT);
      227     3815
      228     3816    3           DO UNTIL_END_OF_REALM;
      229     3817
      230     3818    3               CALL DB_FUNC_GET(CAN_RVA.NULL) ALTRET(DBALT);
      231     3819    3               IF UWA.DB_RECORD_NAME='SO' THEN
      232     3820    3                   RECTYP = 0; /* SET A FLAG */
      233     3821    3               ELSE
      234     3822    3                   RECTYP = 1; /* SM */
      235     3823
      236     3824    3               CALL DB_FUNC_FOR(CAN_RVA.SCSOSM.SEC) ALTRET(DBALT);
      237     3825    3               CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ALTRET(DBALT);
      238     3826    3               CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(DBALT);
      239     3827    3               CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(DBALT);
      240     3828
      241     3829    3               IF UWA.SC_REC.SETTYPE ~= 3 THEN /* 3 = ALTERNATE KEY */
      242     3830    4               DO;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:10   
      243     3831    4                   NXT_SSLOT = NXT_SSLOT + 1;
      244     3832    4                   IF NXT_SSLOT >= MAX_SSLOT THEN
      245     3833    5                   DO;
      246     3834    5                       CALL EXPAND_TBL_SEG(,SETTBL#) ALTRET(ALTRTN);
      247     3835    5                       MAX_SSLOT = MAX_SSLOT + 204;
      248     3836    5                       END;
      249     3837    4                   CALL FIND_MSTR_ENTRY(UWA.SN_REC.SENAME,MSTR_INDX);
      250     3838    4                   SET_XREF.MSTRINDX(NXT_SSLOT) = MSTR_INDX;
      251     3839    4                   SET_XREF.NEXT(NXT_SSLOT) = -1;
      252     3840    5                   DO CASE(RECTYP);
      253     3841    5                   CASE(0); /* SET OWNER (SO) */
      254     3842    5                       SET_XREF.EIS.PRIOR(NXT_SSLOT)=UWA.SO_REC.PRIPNT+PR7;
      255     3843    5                       SET_XREF.EIS.NEXT(NXT_SSLOT)=UWA.SO_REC.NXTPNT+PR7;
      256     3844    5                       SET_XREF.EIS.OWNR(NXT_SSLOT) = 0;
      257     3845
      258     3846    5                   CASE(1); /* SET MEMBER (SM) */
      259     3847    5                       IF UWA.SM_REC.INSTYPE = 1 THEN
      260     3848    5                           MSTR_REF.SET.INMODE(MSTR_INDX) = %YES#;
      261     3849    5                       IF UWA.SM_REC.RETTYPE = 1 THEN
      262     3850    5                           MSTR_REF.SET.RETYPE(MSTR_INDX) = %YES#;
      263     3851    5                       IF UWA.SM_REC.PSMOD = 1 THEN
      264     3852    5                           MSTR_REF.SET.SMMODE(MSTR_INDX) = %YES#;
      265     3853    5                       ELSE
      266     3854    5                           MSTR_REF.SET.SMMODE(MSTR_INDX) = %NO#;
      267     3855    5                       SET_XREF.EIS.NEXT(NXT_SSLOT)=UWA.SM_REC.NXTPNT+PR7;
      268     3856    5                       IF UWA.SM_REC.HDPNT=0 THEN /* NO HDR POINTER */
      269     3857    5                           SET_XREF.EIS.OWNR(NXT_SSLOT)=0;
      270     3858    5                       ELSE
      271     3859    5                           SET_XREF.EIS.OWNR(NXT_SSLOT)=UWA.SM_REC.HDPNT+PR7;
      272     3860    5                       IF UWA.SM_REC.PRIPNT=0 THEN
      273     3861    5                           SET_XREF.EIS.PRIOR(NXT_SSLOT)=0;
      274     3862    5                       ELSE
      275     3863    5                           SET_XREF.EIS.PRIOR(NXT_SSLOT)=UWA.SM_REC.PRIPNT+PR7;
      276     3864    5                       END;
      277     3865    4                   IF MSTR_REF.NEXT(REC_LOC) = -1 THEN
      278     3866    4                       MSTR_REF.NEXT(REC_LOC) = NXT_SSLOT;
      279     3867    4                   ELSE
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:11   
      280     3868    4                       SET_XREF.NEXT(LAST) = NXT_SSLOT;
      281     3869    4                   LAST = NXT_SSLOT;
      282     3870    4                   END;
      283     3871
      284     3872    3               CALL DB_FUNC_FRS(CAN_RVA.NULL,CAN_RVA.RCSOSM.SEC) ALTRET(DBALT);
      285     3873    3               END;
      286     3874    2           CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC) ALTRET(DBALT);
      287     3875    2           END;
      288     3876    1       RETURN;
      289     3877        %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:12   
      290     3878        /*
      291     3879              Build record xfer - provides links for what records are members
      292     3880                                  of which sets.
      293     3881        */
      294     3882    1   BUILD_RECXREF: ENTRY ALTRET;
      295     3883
      296     3884    1       CALL CREATE_TBL_SEG(REC_XREF$,RECTBL#) ALTRET(ALTRTN);
      297     3885    1       MAX_RSLOT = 1024;
      298     3886
      299     3887    1       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA) ALTRET(DBALT);
      300     3888    1       CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(DBALT);
      301     3889    2       DO UNTIL_END_OF_REALM;
      302     3890
      303     3891    2           CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ALTRET(DBALT);
      304     3892    2           CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(DBALT);
      305     3893    2           CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(DBALT);
      306     3894
      307     3895    2           CALL FIND_MSTR_ENTRY(UWA.SN_REC.SENAME,MSTR_INDX);
      308     3896    2           REC_LOC = MSTR_INDX;
      309     3897    2           CALL DB_FUNC_FRS(CAN_RVA.NULL,CAN_RVA.SCSOSM.SEC) ALTRET(DBALT);
      310     3898    3           DO UNTIL_END_OF_REALM;
      311     3899
      312     3900    3               CALL DB_FUNC_GET(CAN_RVA.NULL) ALTRET(DBALT);
      313     3901    3               NXT_RSLOT = NXT_RSLOT + 1;
      314     3902    3               IF NXT_RSLOT >= MAX_RSLOT THEN
      315     3903    4               DO;
      316     3904    4                   CALL EXPAND_TBL_SEG(,RECTBL#) ALTRET(ALTRTN);
      317     3905    4                   NXT_RSLOT = NXT_RSLOT + 1024;
      318     3906    4                   END;
      319     3907    3               IF UWA.DB_RECORD_NAME='SO' THEN
      320     3908    3                   RECTYP = 0; /* REMEMBER THIS RS RECORD TYPE */
      321     3909    3               ELSE
      322     3910    3                   RECTYP = 1;
      323     3911    3               CALL DB_FUNC_FOR(CAN_RVA.RCSOSM.SEC) ALTRET(DBALT);
      324     3912    3               CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC) ALTRET(DBALT);
      325     3913    3               IF RECTYP = 0 THEN /* SO */
      326     3914    4               DO;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:13   
      327     3915    4                   REC_XREF.OWNR(NXT_RSLOT)=%YES#;
      328     3916    4                   MSTR_REF.SET.OWNER_TYPE(MSTR_INDX)=UWA.RC_REC.RTYPE;
      329     3917    4                   END;
      330     3918    3               ELSE
      331     3919    3                   REC_XREF.OWNR(NXT_RSLOT)=%NO#;
      332     3920    3               REC_XREF.MSTRINDX(NXT_RSLOT)=TYPE.MSTRINDX(UWA.RC_REC.RTYPE);
      333     3921    3               REC_XREF.NEXT(NXT_RSLOT) = -1;
      334     3922
      335     3923    3               IF MSTR_REF.NEXT(REC_LOC) = -1 THEN
      336     3924    3                   MSTR_REF.NEXT(REC_LOC) = NXT_RSLOT;
      337     3925    3               ELSE
      338     3926    3                   REC_XREF.NEXT(LAST) = NXT_RSLOT;
      339     3927    3               LAST = NXT_RSLOT;
      340     3928
      341     3929    3               CALL DB_FUNC_FRS(CAN_RVA.NULL,CAN_RVA.SCSOSM.SEC) ALTRET(DBALT);
      342     3930    3               END;
      343     3931    2           CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(DBALT);
      344     3932    2           END;
      345     3933    1       RETURN;
      346     3934
      347     3935        %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:14   
      348     3936        /*
      349     3937                 INIT TABLE VARIABLES
      350     3938        */
      351     3939    1   INIT_VARS: PROC;
      352     3940    2       NXT_MSLOT = -1;
      353     3941    2       NXT_SSLOT = -1;
      354     3942    2       NXT_RSLOT = -1;
      355     3943    2       MAX_MSLOT = 0;
      356     3944    2       MAX_SSLOT = 0;
      357     3945    2       MAX_RSLOT = 0;
      358     3946    2       NO_AREAS = 0;
      359     3947    2       NO_RECS = 0;
      360     3948    2       NO_SETS = 0;
      361     3949    2       SETTYPE = 4999;
      362     3950         /* CALL INIT_TABLES TO INIT HASHTBL(0:808) TO ALL -1 */
      363     3951         /* AND INIT TYPE TABLE (0:4000) TO ALL -1, CAREFUL OF CHANGE SIZE */
      364     3952    2       CALL INIT_TABLES; /* IT IS BMAP, DEFINED IN ZIU$MRL */
      365     3953    2       RETURN;
      366     3954    2   END INIT_VARS;
      367     3955
      368     3956
      369     3957    1   ALTRTN:
      370     3958    1       ALTRETURN;
      371     3959    1   DBALT:
      372     3960    1       ERR_INSERT.CNT(0) = 5;
      373     3961    1       ERR_INSERT.TEXT(0) = UWA.DB_STATUS;
      374     3962    1       ERRCODESF.ERR# = 3002; /* Unsuccessful DB call */
      375     3963    1       MSGCODE = ERRCODE_RDEF;
      376     3964    1       CALL SYS_FUNC_ERRMSG;
      377     3965    1       ALTRETURN;
      378     3966
      379     3967    1   END ZIU$XREF;
      380     3968        %EOD;

PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:15   
--  Include file information  --

   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   ZI_ERRORS_C.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$XREF.

   Procedure ZIU$XREF requires 845 words for executable code.
   Procedure ZIU$XREF is declared NOAUTO and requires 290 words of local(STATIC) storage.

PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:16   

 Object Unit name= ZIU$XREF                                   File name= ZIU$XREF.:ZIC0TOU
 UTS= SEP 05 '97 13:35:22.88 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   290    442  ZIU$XREF
    1   DCB   even  none     0      0  M$UC
    2   DCB   even  none     0      0  M$LO
    3  RoData even  UTS      6      6  ZIU$XREF
    4   Proc  even  none   845   1515  ZIU$XREF
    5  RoData even  none    43     53  ZIU$XREF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        0  ZIU$XREF
     4      2          yes     yes      Std        0  BUILD_MSTR_TBL
     4    656          yes     yes      Std        0  BUILD_SETXREF
     4   1223          yes     yes      Std        0  BUILD_RECXREF
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:17   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0     13  WR_DCB                             0     14  MSTR$
    0     15  NXT_MSLOT                          0     16  MAX_MSLOT
    0     17  MSTR_INDX                          0     20  HASHTBL
    0    412  HASHINDX                           0    413  LOC_MODE
    0    417  AREA_KEY$                          0    420  NO_AREAS
    0    421  GLBL_PTR_SZ                        0    422  SET_XREF$
    0    423  NXT_SSLOT                          0    424  MAX_SSLOT
    0    425  REC_XREF$                          0    426  NXT_RSLOT
    0    427  MAX_RSLOT                          0    430  NO_RECS
    0    431  NO_SETS                            0    432  XREF_BUILT
    0    433  TYPESET                            0    434  TYPEREC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 FIND_MSTR_ENTRY
 yes     yes           Std       2 CREATE_TBL_SEG
 yes     yes           Std       1 DB_FUNC_GET
         yes           Std       2 HASHENTRY
 yes     yes           Std       2 DB_FUNC_FDR
 yes     yes           Std       2 DB_FUNC_FRS
 yes     yes           Std       1 DB_FUNC_FOR
 yes     yes           Std       2 EXPAND_TBL_SEG
 yes     yes           Std       0 SYS_FUNC_ERRMSG
         yes           Std       0 INIT_TABLES
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:18   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CAN_RVA                               UWA
     BLKLSF                                KEYLSF                                KEYXSF
     DCBSF                                 ORGSF                                 KEYSF
     KEYVSF                                ACSSF                                 NOTIMESF
     FUNSF                                 ASNSF                                 TESTSF
     XTENSIZESF                            DISPSF                                WAITSF
     VFCSF                                 FULLSF                                BKUPSF
     BUFLNSF                               BUFSF                                 SOURCESF
     DESTSF                                DATESF                                TIMESF
     UTSSF                                 DAYSF                                 TSTAMPSF
     ENCRP_SEEDSF                          ERRCODESF                             MSGCODE
     INCL_ERR                              ERR_INSERT                            FIDSF_RD
     ACNT                                  EXISTSF                               SHARESF
     DCBNMSF                               KEYRSF                                NO_KEYSF
     REASGNSF                              CARRY_ATTRIBUTESF                     SUBMESSF
     SPKY_OPNSF                            POSSF                                 ERRFLGSF
     MERGESF                               FSA_FLAG                              RELGSF
     UNUSED                                HELPCODE                              COUNTSF
     INDEXSF                               GAP                                   PSNSF
     ACNTSF                                KEY_SHADWSF                           REC$
     RB                                    RE                                    IE
     IB                                    CNT                                   ICNT
     RCNT                                  SCNT                                  FIRST_SET
     RETCNT                                DMPCNT                                KCNT
     ACNT_IDX                              I                                     J
     K                                     X                                     STEPCC
     I_O_BUF$                              OUT_INDX                              I_O_SIZE
     REC_DATA_LN                           M$LO                                  B$TCB$
     B$ROS$                                B$JIT$                                KEYFID
     I_O_KEY                               RESTART                               BREAK_FLAG
     ICHKSUM                               ITMCNT                                GAP1
     TYPE
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:19   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:20   


        1        1        /*M* ZIU$XREF     IDS UTILITIES       BUILDS REC/SET TBLS FROM SCHEMA */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8           NAME: ZIU$XREF
        9        9        PURPOSE: This procedure builds a set of cross reference tables of
       10       10                 set to record and record to set schema information (including
       11       11                 set EIS descriptors) from the supplied schema.
       12       12                                                                               */
       13       13        ZIU$XREF: PROC NOAUTO ALTRET;

     13  4 000000   000000 741200 0     ZIU$XREF     STX1  ! 0
         4 000001   000003 710000 4                  TRA     s:3653

       14       14
       15       15    1   DCL INDX SBIN WORD STATIC ALIGNED;
       16       16    1   DCL TEMP_INDX SBIN WORD STATIC ALIGNED;
       17       17    1   DCL RECTYP SBIN WORD STATIC ALIGNED;
       18       18    1   DCL LAST SBIN WORD STATIC ALIGNED;
       19       19    1   DCL REC_LOC SBIN WORD STATIC ALIGNED;
       20       20    1   DCL PR7 SBIN WORD STATIC ALIGNED INIT(%BITBIN('377777777777'O));
       21       21    1   DCL FTIME BIT(1) STATIC ALIGNED INIT('1'B);
       22       22    1   DCL SETTYPE SBIN WORD STATIC ALIGNED INIT(4999);
       23       23    1   DCL KEYVAL UBIN WORD STATIC ALIGNED;
       24       24    1   DCL TEMP SBIN ALIGNED;
       25       25    1   DCL WR_DCB SBIN STATIC SYMDEF;
       26       26
       27       27    1   DCL CREATE_TBL_SEG ENTRY(2) ALTRET;
       28       28    1   DCL EXPAND_TBL_SEG ENTRY(2) ALTRET;
       29       29    1   DCL FIND_MSTR_ENTRY ENTRY(2);
       30       30    1   DCL HASHENTRY ENTRY(2);
       31       31    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET;
       32       32    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:21   
       33       33    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
       34       34    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET;
       35       35    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
       36       36    1   DCL INIT_TABLES ENTRY;
       37       37
       38       38
       39       39         %INCLUDE CP_6;
       40      120         %F$DCB;
       41      177         %B$TCB;
       42      180         %INCLUDE CP_6_SUBS;
       43      720         %INCLUDE ZI_ERRORS_C;
       44     1046         %INCLUDE ZI_RVA_C;
       45     1727         %CAN_RVA_REF;
       46     2046         %INCLUDE ZI_UWA_C;
       47     2736         %ZI$UWAB;
       48     3076         %INCLUDE ZI_GLOBAL_DBUTIL;
       49     3254         %SYS_FUNC;
       50     3346         %MISC_DCLS;
       51     3399         %INCLUDE ZI_DBU_XREF;
       52     3566         %XREF_TBLS(STCLASS="STATIC SYMDEF");
       53     3641
       54     3642         %SUB UNTIL_END_OF_REALM = "WHILE(UWA.DB_STATUS ~= '02100')";
       55     3643         %SUB END_OF_REALM = "UWA.DB_STATUS = '02100'";
       56     3644         %SUB MSTRTBL# = 2;
       57     3645         %SUB SETTBL# = 3;
       58     3646         %SUB RECTBL# = 4;
       59     3647
       60     3648         %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:22   
       61     3649    1   BUILD_MSTR_TBL: ENTRY ALTRET;

   3649  4 000002   000000 741200 0     BUILD_MSTR_* STX1  ! 0

       62     3650         /*
       63     3651              Build the master cross reference table (list of rec and set names)
       64     3652        */
       65     3653    1       CALL INIT_VARS; /* Initialize table variables */

   3653  4 000003   001452 701000 4                  TSX1    INIT_VARS
         4 000004   000000 011000                    NOP     0

       66     3654    1       GLBL_PTR_SZ = UWA.OA_REC.GLBL + 1;

   3654  4 000005   000226 235000 xsym               LDA     UWA+150
         4 000006   000001 035007                    ADLA    1,DL
         4 000007   000421 755000 0                  STA     GLBL_PTR_SZ

       67     3655    1       CALL CREATE_TBL_SEG(MSTR$,MSTRTBL#) ALTRET(ALTRTN);

   3655  4 000010   000002 630400 5                  EPPR0   2
         4 000011   000000 631400 5                  EPPR1   0
         4 000012   000000 701000 xent               TSX1    CREATE_TBL_SEG
         4 000013   001474 702000 4                  TSX2    ALTRTN

       68     3656    1       MAX_MSLOT = 1024/SIZEW(MSTR_REF(0));

   3656  4 000014   000146 235007                    LDA     102,DL
         4 000015   000016 755000 0                  STA     MAX_MSLOT

       69     3657         /* Get dyn mem for the table */
       70     3658         /* and start by inserting record entries */
       71     3659    1       CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC) ALTRET(DBALT);

   3659  4 000016   000005 630400 5                  EPPR0   5
         4 000017   000000 631400 5                  EPPR1   0
         4 000020   000000 701000 xent               TSX1    DB_FUNC_FRS
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:23   
         4 000021   001476 702000 4                  TSX2    DBALT

       72     3660    2       DO UNTIL_END_OF_REALM;

   3660  4 000022   040000 106400                    CMPC    fill='040'O
         4 000023   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000024   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 000025   000140 600000 4                  TZE     s:3680

       73     3661
       74     3662    2           CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC) ALTRET(DBALT);

   3662  4 000026   000005 630400 5                  EPPR0   5
         4 000027   000007 631400 5                  EPPR1   7
         4 000030   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000031   001476 702000 4                  TSX2    DBALT

       75     3663    2           CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(DBALT);

   3663  4 000032   000010 630400 5                  EPPR0   8
         4 000033   000007 631400 5                  EPPR1   7
         4 000034   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 000035   001476 702000 4                  TSX2    DBALT

       76     3664    2           CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(DBALT);

   3664  4 000036   000011 630400 5                  EPPR0   9
         4 000037   000007 631400 5                  EPPR1   7
         4 000040   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000041   001476 702000 4                  TSX2    DBALT

       77     3665
       78     3666    2           NO_RECS = NO_RECS + 1;

   3666  4 000042   000430 054000 0                  AOS     NO_RECS

       79     3667    2           CALL GET_MSLOT ALTRET(ALTRTN);
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:24   

   3667  4 000043   000452 701000 4                  TSX1    GET_MSLOT
         4 000044   001474 702000 4                  TSX2    ALTRTN

       80     3668    2           MSTR_REF.NAME(NXT_MSLOT) = UWA.SN_REC.SENAME;

   3668  4 000045   000015 236000 0                  LDQ     NXT_MSLOT
         4 000046   000050 402007                    MPY     40,DL
         4 000047   000014 470400 0                  LDP0    MSTR$
         4 000050   040106 100400                    MLR     fill='040'O
         4 000051   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         4 000052   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30

       81     3669    2           MSTR_REF.TYPE(NXT_MSLOT) = UWA.RC_REC.RTYPE;

   3669  4 000053   000015 236000 0                  LDQ     NXT_MSLOT
         4 000054   000012 402007                    MPY     10,DL
         4 000055   000270 720000 xsym               LXL0    UWA+184
         4 000056   000014 470400 0                  LDP0    MSTR$
         4 000057   000000 740106                    STX0    0,QL,PR0

       82     3670    2           MSTR_REF.PSMODE(NXT_MSLOT) = UWA.RC_REC.PSMODE;

   3670  4 000060   000015 236000 0                  LDQ     NXT_MSLOT
         4 000061   000012 402007                    MPY     10,DL
         4 000062   000014 470400 0                  LDP0    MSTR$
         4 000063   000000 620006                    EAX0    0,QL
         4 000064   000271 236000 xsym               LDQ     UWA+185
         4 000065   000030 736000                    QLS     24
         4 000066   000011 676110                    ERQ     9,X0,PR0
         4 000067   000700 376003                    ANQ     448,DU
         4 000070   000011 656110                    ERSQ    9,X0,PR0

       83     3671    2           MSTR_REF.NEXT(NXT_MSLOT) = -1;

   3671  4 000071   000015 236000 0                  LDQ     NXT_MSLOT
         4 000072   000012 402007                    MPY     10,DL
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:25   
         4 000073   777777 220003                    LDX0    -1,DU
         4 000074   000014 470400 0                  LDP0    MSTR$
         4 000075   000000 440106                    SXL0    0,QL,PR0

       84     3672    2           MSTR_REF.NXTHSH(NXT_MSLOT) = -1;

   3672  4 000076   000015 236000 0                  LDQ     NXT_MSLOT
         4 000077   000012 402007                    MPY     10,DL
         4 000100   000014 470400 0                  LDP0    MSTR$
         4 000101   000001 740106                    STX0    1,QL,PR0

       85     3673    2           MSTR_REF.PAOFF(NXT_MSLOT) = UWA.RC_REC.PA_OFFSET;

   3673  4 000102   000015 236000 0                  LDQ     NXT_MSLOT
         4 000103   000012 402007                    MPY     10,DL
         4 000104   000014 470400 0                  LDP0    MSTR$
         4 000105   000000 621006                    EAX1    0,QL
         4 000106   000303 236000 xsym               LDQ     UWA+195
         4 000107   000033 736000                    QLS     27
         4 000110   000011 676111                    ERQ     9,X1,PR0
         4 000111   777000 376003                    ANQ     -512,DU
         4 000112   000011 656111                    ERSQ    9,X1,PR0

       86     3674    2           MSTR_REF.PAENT(NXT_MSLOT) = UWA.RC_REC.PA_ENTRY;

   3674  4 000113   000015 236000 0                  LDQ     NXT_MSLOT
         4 000114   000012 402007                    MPY     10,DL
         4 000115   000014 470400 0                  LDP0    MSTR$
         4 000116   000000 621006                    EAX1    0,QL
         4 000117   000304 236000 xsym               LDQ     UWA+196
         4 000120   000011 676111                    ERQ     9,X1,PR0
         4 000121   000012 376000 5                  ANQ     10
         4 000122   000011 656111                    ERSQ    9,X1,PR0

       87     3675         /* NOW, LINK TYPE TABLE TO MSTR_REF TABLE */
       88     3676         /* SO THAT NO NEED OF SEARCH FOR RECORD ON ITS TYPE */
       89     3677    2           TYPE.MSTRINDX(UWA.RC_REC.RTYPE)=NXT_MSLOT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:26   

   3677  4 000123   000270 235000 xsym               LDA     UWA+184
         4 000124   000001 735000                    ALS     1
         4 000125   000005 101400                    MRL     fill='000'O
         4 000126   000015 000004 0                  ADSC9   NXT_MSLOT                cn=0,n=4
         4 000127   000000 000002 xsym               ADSC9   TYPE,A                   cn=0,n=2

       90     3678    2           CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC) ALTRET(DBALT);

   3678  4 000130   000005 630400 5                  EPPR0   5
         4 000131   000000 631400 5                  EPPR1   0
         4 000132   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000133   001476 702000 4                  TSX2    DBALT

       91     3679    2           END;

   3679  4 000134   040000 106400                    CMPC    fill='040'O
         4 000135   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000136   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 000137   000026 601000 4                  TNZ     s:3662

       92     3680    1       IF TYPE.MSTRINDX(4000)<0 THEN /* IF SCHEMA HAS NO *CALC.RC */

   3680  4 000140   003720 220000 xsym               LDX0    TYPE+2000
         4 000141   000203 605000 4                  TPL     s:3695

       93     3681    2       DO; /* WE WILL MAKE A DUMMY ENTRY FOR IT */

       94     3682    2           NO_RECS = NO_RECS + 1;

   3682  4 000142   000430 054000 0                  AOS     NO_RECS

       95     3683    2           CALL GET_MSLOT ALTRET(ALTRTN);

   3683  4 000143   000452 701000 4                  TSX1    GET_MSLOT
         4 000144   001474 702000 4                  TSX2    ALTRTN

PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:27   
       96     3684    2           TYPE.MSTRINDX(4000) = NXT_MSLOT;

   3684  4 000145   000015 720000 0                  LXL0    NXT_MSLOT
         4 000146   003720 740000 xsym               STX0    TYPE+2000

       97     3685    2           MSTR_REF.NAME(NXT_MSLOT)='*CALC.RC';

   3685  4 000147   000015 236000 0                  LDQ     NXT_MSLOT
         4 000150   000050 402007                    MPY     40,DL
         4 000151   000014 470400 0                  LDP0    MSTR$
         4 000152   040106 100400                    MLR     fill='040'O
         4 000153   000002 000010 3                  ADSC9   2                        cn=0,n=8
         4 000154   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30

       98     3686    2           MSTR_REF.TYPE(NXT_MSLOT)=4000;

   3686  4 000155   000015 236000 0                  LDQ     NXT_MSLOT
         4 000156   000012 402007                    MPY     10,DL
         4 000157   007640 220003                    LDX0    4000,DU
         4 000160   000014 470400 0                  LDP0    MSTR$
         4 000161   000000 740106                    STX0    0,QL,PR0

       99     3687    2           MSTR_REF.NEXT(NXT_MSLOT)=-1;

   3687  4 000162   000015 236000 0                  LDQ     NXT_MSLOT
         4 000163   000012 402007                    MPY     10,DL
         4 000164   777777 221003                    LDX1    -1,DU
         4 000165   000014 470400 0                  LDP0    MSTR$
         4 000166   000000 441106                    SXL1    0,QL,PR0

      100     3688    2           MSTR_REF.PAOFF(NXT_MSLOT)=0;

   3688  4 000167   000015 236000 0                  LDQ     NXT_MSLOT
         4 000170   000012 402007                    MPY     10,DL
         4 000171   000014 470400 0                  LDP0    MSTR$
         4 000172   000000 622006                    EAX2    0,QL
         4 000173   000013 236000 5                  LDQ     11
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:28   
         4 000174   000011 356112                    ANSQ    9,X2,PR0

      101     3689    2           MSTR_REF.PAENT(NXT_MSLOT)=0;

   3689  4 000175   000015 236000 0                  LDQ     NXT_MSLOT
         4 000176   000012 402007                    MPY     10,DL
         4 000177   000014 470400 0                  LDP0    MSTR$
         4 000200   000000 622006                    EAX2    0,QL
         4 000201   777700 236003                    LDQ     -64,DU
         4 000202   000011 356112                    ANSQ    9,X2,PR0

      102     3690    2           END;

      103     3691        %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:29   
      104     3692         /*
      105     3693            Put set entries into the master table.
      106     3694         */
      107     3695    1       FIRST_SET = NXT_MSLOT+1;

   3695  4 000203   000015 235000 0                  LDA     NXT_MSLOT
         4 000204   000001 035007                    ADLA    1,DL
         4 000205   000000 755000 xsym               STA     FIRST_SET

      108     3696    1       CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(DBALT);

   3696  4 000206   000014 630400 5                  EPPR0   12
         4 000207   000000 631400 5                  EPPR1   0
         4 000210   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000211   001476 702000 4                  TSX2    DBALT

      109     3697    2       DO UNTIL_END_OF_REALM;

   3697  4 000212   040000 106400                    CMPC    fill='040'O
         4 000213   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000214   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 000215   000444 600000 4                  TZE     s:3737

      110     3698
      111     3699    2           CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ALTRET(DBALT);

   3699  4 000216   000014 630400 5                  EPPR0   12
         4 000217   000007 631400 5                  EPPR1   7
         4 000220   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000221   001476 702000 4                  TSX2    DBALT

      112     3700    2           CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(DBALT);

   3700  4 000222   000010 630400 5                  EPPR0   8
         4 000223   000007 631400 5                  EPPR1   7
         4 000224   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 000225   001476 702000 4                  TSX2    DBALT
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:30   

      113     3701    2           CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(DBALT);

   3701  4 000226   000011 630400 5                  EPPR0   9
         4 000227   000007 631400 5                  EPPR1   7
         4 000230   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000231   001476 702000 4                  TSX2    DBALT

      114     3702
      115     3703    2           NO_SETS = NO_SETS + 1;

   3703  4 000232   000431 054000 0                  AOS     NO_SETS

      116     3704    2           CALL GET_MSLOT ALTRET(ALTRTN);

   3704  4 000233   000452 701000 4                  TSX1    GET_MSLOT
         4 000234   001474 702000 4                  TSX2    ALTRTN

      117     3705    2           SETTYPE = SETTYPE + 1;

   3705  4 000235   000010 054000 0                  AOS     SETTYPE

      118     3706    2           MSTR_REF.NAME(NXT_MSLOT) = UWA.SN_REC.SENAME;

   3706  4 000236   000015 236000 0                  LDQ     NXT_MSLOT
         4 000237   000050 402007                    MPY     40,DL
         4 000240   000014 470400 0                  LDP0    MSTR$
         4 000241   040106 100400                    MLR     fill='040'O
         4 000242   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         4 000243   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30

      119     3707    2           MSTR_REF.TYPE(NXT_MSLOT) = SETTYPE;

   3707  4 000244   000015 236000 0                  LDQ     NXT_MSLOT
         4 000245   000012 402007                    MPY     10,DL
         4 000246   000010 720000 0                  LXL0    SETTYPE
         4 000247   000014 470400 0                  LDP0    MSTR$
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:31   
         4 000250   000000 740106                    STX0    0,QL,PR0

      120     3708    2           MSTR_REF.NEXT(NXT_MSLOT) = -1;

   3708  4 000251   000015 236000 0                  LDQ     NXT_MSLOT
         4 000252   000012 402007                    MPY     10,DL
         4 000253   777777 221003                    LDX1    -1,DU
         4 000254   000014 470400 0                  LDP0    MSTR$
         4 000255   000000 441106                    SXL1    0,QL,PR0

      121     3709    2           MSTR_REF.NXTHSH(NXT_MSLOT) = -1;

   3709  4 000256   000015 236000 0                  LDQ     NXT_MSLOT
         4 000257   000012 402007                    MPY     10,DL
         4 000260   000014 470400 0                  LDP0    MSTR$
         4 000261   000001 741106                    STX1    1,QL,PR0

      122     3710    2           MSTR_REF.PAOFF(NXT_MSLOT) = 0;

   3710  4 000262   000015 236000 0                  LDQ     NXT_MSLOT
         4 000263   000012 402007                    MPY     10,DL
         4 000264   000014 470400 0                  LDP0    MSTR$
         4 000265   000000 622006                    EAX2    0,QL
         4 000266   000013 236000 5                  LDQ     11
         4 000267   000011 356112                    ANSQ    9,X2,PR0

      123     3711    2           MSTR_REF.PAENT(NXT_MSLOT) = 0;

   3711  4 000270   000015 236000 0                  LDQ     NXT_MSLOT
         4 000271   000012 402007                    MPY     10,DL
         4 000272   000014 470400 0                  LDP0    MSTR$
         4 000273   000000 622006                    EAX2    0,QL
         4 000274   777700 236003                    LDQ     -64,DU
         4 000275   000011 356112                    ANSQ    9,X2,PR0

      124     3712    2           MSTR_REF.SET.INMODE(NXT_MSLOT) = '0'B; /* INIT INSERTION MODE */

PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:32   
   3712  4 000276   000015 236000 0                  LDQ     NXT_MSLOT
         4 000277   000012 402007                    MPY     10,DL
         4 000300   000014 470400 0                  LDP0    MSTR$
         4 000301   000000 622006                    EAX2    0,QL
         4 000302   000016 236000 5                  LDQ     14
         4 000303   000011 356112                    ANSQ    9,X2,PR0

      125     3713    2           MSTR_REF.SET.RETYPE(NXT_MSLOT) = '0'B; /* INIT RETENTION TYPE */

   3713  4 000304   000015 236000 0                  LDQ     NXT_MSLOT
         4 000305   000012 402007                    MPY     10,DL
         4 000306   000014 470400 0                  LDP0    MSTR$
         4 000307   000000 622006                    EAX2    0,QL
         4 000310   000017 236000 5                  LDQ     15
         4 000311   000011 356112                    ANSQ    9,X2,PR0

      126     3714    2           MSTR_REF.GLOBAL(NXT_MSLOT) = UWA.SC_REC.SETGLO;

   3714  4 000312   000015 236000 0                  LDQ     NXT_MSLOT
         4 000313   000012 402007                    MPY     10,DL
         4 000314   000014 470400 0                  LDP0    MSTR$
         4 000315   000000 622006                    EAX2    0,QL
         4 000316   000313 236000 xsym               LDQ     UWA+203
         4 000317   000033 736000                    QLS     27
         4 000320   000011 676112                    ERQ     9,X2,PR0
         4 000321   777000 376003                    ANQ     -512,DU
         4 000322   000011 656112                    ERSQ    9,X2,PR0

      127     3715    2           MSTR_REF.SET.ORDER(NXT_MSLOT) = UWA.SC_REC.SETORD;

   3715  4 000323   000015 236000 0                  LDQ     NXT_MSLOT
         4 000324   000012 402007                    MPY     10,DL
         4 000325   000014 470400 0                  LDP0    MSTR$
         4 000326   000000 622006                    EAX2    0,QL
         4 000327   000312 236000 xsym               LDQ     UWA+202
         4 000330   000020 736000                    QLS     16
         4 000331   000011 676112                    ERQ     9,X2,PR0
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:33   
         4 000332   000020 376000 5                  ANQ     16
         4 000333   000011 656112                    ERSQ    9,X2,PR0

      128     3716    2           MSTR_REF.SET.SETYPE(NXT_MSLOT) = UWA.SC_REC.SETTYPE;

   3716  4 000334   000015 236000 0                  LDQ     NXT_MSLOT
         4 000335   000012 402007                    MPY     10,DL
         4 000336   000014 470400 0                  LDP0    MSTR$
         4 000337   000000 622006                    EAX2    0,QL
         4 000340   000310 236000 xsym               LDQ     UWA+200
         4 000341   000016 736000                    QLS     14
         4 000342   000011 676112                    ERQ     9,X2,PR0
         4 000343   140000 376007                    ANQ     49152,DL
         4 000344   000011 656112                    ERSQ    9,X2,PR0

      129     3717    2           IF UWA.SC_REC.SETMODE = 2 THEN /* PA set type */

   3717  4 000345   000311 235000 xsym               LDA     UWA+201
         4 000346   000002 115007                    CMPA    2,DL
         4 000347   000357 601000 4                  TNZ     s:3720

      130     3718    2               MSTR_REF.SET.PATYPE(NXT_MSLOT) = %YES#;

   3718  4 000350   000015 236000 0                  LDQ     NXT_MSLOT
         4 000351   000012 402007                    MPY     10,DL
         4 000352   000014 470400 0                  LDP0    MSTR$
         4 000353   000000 622006                    EAX2    0,QL
         4 000354   000002 236003                    LDQ     2,DU
         4 000355   000011 256112                    ORSQ    9,X2,PR0
         4 000356   000365 710000 4                  TRA     s:3723

      131     3719    2           ELSE
      132     3720    2               MSTR_REF.SET.PATYPE(NXT_MSLOT) = %NO#;

   3720  4 000357   000015 236000 0                  LDQ     NXT_MSLOT
         4 000360   000012 402007                    MPY     10,DL
         4 000361   000014 470400 0                  LDP0    MSTR$
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:34   
         4 000362   000000 622006                    EAX2    0,QL
         4 000363   000021 236000 5                  LDQ     17
         4 000364   000011 356112                    ANSQ    9,X2,PR0

      133     3721
      134     3722
      135     3723    2           CALL HASHENTRY(UWA.SN_REC.SENAME,INDX);

   3723  4 000365   000022 630400 5                  EPPR0   18
         4 000366   000000 631400 5                  EPPR1   0
         4 000367   000000 701000 xent               TSX1    HASHENTRY
         4 000370   000000 011000                    NOP     0

      136     3724    2           IF HASHTBL(INDX) = -1 THEN

   3724  4 000371   000001 235000 0                  LDA     INDX
         4 000372   000001 735000                    ALS     1
         4 000373   000000 100405                    MLR     fill='000'O
         4 000374   000020 000002 0                  ADSC9   HASHTBL,A                cn=0,n=2
         4 000375   000440 000004 0                  ADSC9   TYPEREC+4                cn=0,n=4
         4 000376   000440 236000 0                  LDQ     TYPEREC+4
         4 000377   000022 732000                    QRS     18
         4 000400   000024 116000 5                  CMPQ    20
         4 000401   000406 601000 4                  TNZ     s:3727

      137     3725    2               HASHTBL(INDX) = NXT_MSLOT; /* Store entry loc in hashtbl */

   3725  4 000402   000005 101400                    MRL     fill='000'O
         4 000403   000015 000004 0                  ADSC9   NXT_MSLOT                cn=0,n=4
         4 000404   000020 000002 0                  ADSC9   HASHTBL,A                cn=0,n=2
         4 000405   000434 710000 4                  TRA     s:3735

      138     3726    3           ELSE DO; /* Else handle collosion */

      139     3727    3               INDX = HASHTBL(INDX);

   3727  4 000406   000000 100405                    MLR     fill='000'O
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:35   
         4 000407   000020 000002 0                  ADSC9   HASHTBL,A                cn=0,n=2
         4 000410   000440 000004 0                  ADSC9   TYPEREC+4                cn=0,n=4
         4 000411   000440 236000 0                  LDQ     TYPEREC+4
         4 000412   000022 732000                    QRS     18
         4 000413   000001 756000 0                  STQ     INDX

      140     3728    4               DO WHILE(INDX ~= -1);

   3728  4 000414   000425 710000 4                  TRA     s:3731

      141     3729    4                   TEMP_INDX = INDX;

   3729  4 000415   000001 235000 0                  LDA     INDX
         4 000416   000002 755000 0                  STA     TEMP_INDX

      142     3730    4                   INDX = MSTR_REF.NXTHSH(INDX);

   3730  4 000417   000001 236000 0                  LDQ     INDX
         4 000420   000012 402007                    MPY     10,DL
         4 000421   000014 470400 0                  LDP0    MSTR$
         4 000422   000001 236106                    LDQ     1,QL,PR0
         4 000423   000022 732000                    QRS     18
         4 000424   000001 756000 0                  STQ     INDX

      143     3731    4                   END;

   3731  4 000425   000024 116000 5                  CMPQ    20
         4 000426   000415 601000 4                  TNZ     s:3729

      144     3732    3               MSTR_REF.NXTHSH(TEMP_INDX) = NXT_MSLOT;

   3732  4 000427   000002 236000 0                  LDQ     TEMP_INDX
         4 000430   000012 402007                    MPY     10,DL
         4 000431   000015 720000 0                  LXL0    NXT_MSLOT
         4 000432   000014 470400 0                  LDP0    MSTR$
         4 000433   000001 740106                    STX0    1,QL,PR0

PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:36   
      145     3733    3               END;

      146     3734
      147     3735    2           CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(DBALT);

   3735  4 000434   000014 630400 5                  EPPR0   12
         4 000435   000000 631400 5                  EPPR1   0
         4 000436   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000437   001476 702000 4                  TSX2    DBALT

      148     3736    2           END;

   3736  4 000440   040000 106400                    CMPC    fill='040'O
         4 000441   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000442   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 000443   000216 601000 4                  TNZ     s:3699

      149     3737    1       CALL BUILD_AREA_KEY_XREF ALTRET(DBALT);

   3737  4 000444   000475 701000 4                  TSX1    BUILD_AREA_KEY_XREF
         4 000445   001476 702000 4                  TSX2    DBALT

      150     3738    1       XREF_BUILT = %YES#;

   3738  4 000446   400000 236003                    LDQ     -131072,DU
         4 000447   000432 756000 0                  STQ     XREF_BUILT

      151     3739
      152     3740    1       RETURN;

   3740  4 000450   000000 221200 0                  LDX1  ! 0
         4 000451   000001 702211                    TSX2  ! 1,X1

      153     3741        %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:37   
      154     3742        /* Assure space for the next MSTRTBL entry.  MSTR_REF then AREA_KEY_REF
      155     3743           go in this space.  It is assumed that both are the same SIZEW.  */
      156     3744
      157     3745    1   GET_MSLOT: PROC ALTRET;

   3745  4 000452   000435 741200 0     GET_MSLOT    STX1  ! TYPEREC+1

      158     3746
      159     3747    2       NXT_MSLOT = NXT_MSLOT + 1;

   3747  4 000453   000015 054000 0                  AOS     NXT_MSLOT

      160     3748    2       IF NXT_MSLOT >= MAX_MSLOT THEN

   3748  4 000454   000015 236000 0                  LDQ     NXT_MSLOT
         4 000455   000016 116000 0                  CMPQ    MAX_MSLOT
         4 000456   000473 604000 4                  TMI     s:3755

      161     3749    3       DO;

      162     3750    3           CALL EXPAND_TBL_SEG(,MSTRTBL#)

   3750  4 000457   000003 236000 5                  LDQ     3
         4 000460   000004 235000 5                  LDA     4
         4 000461   000440 757000 0                  STAQ    TYPEREC+4
         4 000462   000440 630400 0                  EPPR0   TYPEREC+4
         4 000463   000000 631400 5                  EPPR1   0
         4 000464   000000 701000 xent               TSX1    EXPAND_TBL_SEG
         4 000465   000467 702000 4                  TSX2    s:3751
         4 000466   000471 710000 4                  TRA     s:3752

      163     3751    4           WHENALTRETURN DO; ALTRETURN; END;

   3751  4 000467   000435 221200 0                  LDX1  ! TYPEREC+1
         4 000470   000000 702211                    TSX2  ! 0,X1

      164     3752    3           MAX_MSLOT = MAX_MSLOT + 1024/SIZEW(MSTR_REF(0));
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:38   

   3752  4 000471   000146 236007                    LDQ     102,DL
         4 000472   000016 056000 0                  ASQ     MAX_MSLOT

      165     3753    3           END;

      166     3754
      167     3755    2   END GET_MSLOT;

   3755  4 000473   000435 221200 0                  LDX1  ! TYPEREC+1
         4 000474   000001 702211                    TSX2  ! 1,X1

      168     3756        %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:39   
      169     3757        /*
      170     3758              Build a cross reference of area names and max DB keys.
      171     3759        */
      172     3760    1   BUILD_AREA_KEY_XREF: PROC ALTRET;

   3760  4 000475   000436 741200 0     BUILD_AREA_* STX1  ! TYPEREC+2

      173     3761
      174     3762    2       AREA_KEY$ = ADDR(MSTR_REF(NXT_MSLOT + 1));

   3762  4 000476   000015 236000 0                  LDQ     NXT_MSLOT
         4 000477   000012 402003                    MPY     10,DU
         4 000500   000012 036003                    ADLQ    10,DU
         4 000501   000014 036000 0                  ADLQ    MSTR$
         4 000502   000417 756000 0                  STQ     AREA_KEY$

      175     3763    2       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA) ALTRET(ALTRTN);

   3763  4 000503   000025 630400 5                  EPPR0   21
         4 000504   000000 631400 5                  EPPR1   0
         4 000505   000000 701000 xent               TSX1    DB_FUNC_FDR
         4 000506   000654 702000 4                  TSX2    ALTRTN

      176     3764    2       CALL DB_FUNC_FRS(CAN_RVA.ACREC.SEC,CAN_RVA.OAAC.SEC) ALTRET(ALTRTN);

   3764  4 000507   000027 630400 5                  EPPR0   23
         4 000510   000000 631400 5                  EPPR1   0
         4 000511   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000512   000654 702000 4                  TSX2    ALTRTN

      177     3765    3       DO UNTIL_END_OF_REALM;

   3765  4 000513   040000 106400                    CMPC    fill='040'O
         4 000514   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000515   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 000516   000652 600000 4                  TZE     s:3788

PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:40   
      178     3766    3           NO_AREAS = NO_AREAS + 1;

   3766  4 000517   000420 054000 0                  AOS     NO_AREAS

      179     3767    3           CALL GET_MSLOT ALTRET(ALTRTN);

   3767  4 000520   000452 701000 4                  TSX1    GET_MSLOT
         4 000521   000654 702000 4                  TSX2    ALTRTN

      180     3768    3           CALL DB_FUNC_GET(CAN_RVA.ACREC.SEC) ALTRET(ALTRTN);

   3768  4 000522   000027 630400 5                  EPPR0   23
         4 000523   000007 631400 5                  EPPR1   7
         4 000524   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000525   000654 702000 4                  TSX2    ALTRTN

      181     3769    3           CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(ALTRTN);

   3769  4 000526   000010 630400 5                  EPPR0   8
         4 000527   000007 631400 5                  EPPR1   7
         4 000530   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 000531   000654 702000 4                  TSX2    ALTRTN

      182     3770    3           CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(ALTRTN);

   3770  4 000532   000011 630400 5                  EPPR0   9
         4 000533   000007 631400 5                  EPPR1   7
         4 000534   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000535   000654 702000 4                  TSX2    ALTRTN

      183     3771
      184     3772    3           AREA_KEY_XREF.CHECKED(NO_AREAS-1) = 0;

   3772  4 000536   000420 236000 0                  LDQ     NO_AREAS
         4 000537   000012 402007                    MPY     10,DL
         4 000540   000417 470400 0                  LDP0    AREA_KEY$
         4 000541   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:41   
         4 000542   000031 236000 5                  LDQ     25
         4 000543   077777 356110                    ANSQ    -1,X0,PR0

      185     3773    3           AREA_KEY_XREF.NAME(NO_AREAS-1) = UWA.SN_REC.SENAME;

   3773  4 000544   000420 236000 0                  LDQ     NO_AREAS
         4 000545   000050 402007                    MPY     40,DL
         4 000546   000417 470400 0                  LDP0    AREA_KEY$
         4 000547   040106 100400                    MLR     fill='040'O
         4 000550   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         4 000551   077767 400036                    ADSC9   -9,Q,PR0                 cn=2,n=30

      186     3774    3           AREA_KEY_XREF.MAX_KEY(NO_AREAS-1) = UWA.AC_REC.MAX_DBK +

   3774  4 000552   000420 236000 0                  LDQ     NO_AREAS
         4 000553   000012 402007                    MPY     10,DL
         4 000554   000000 620006                    EAX0    0,QL
         4 000555   000246 236000 xsym               LDQ     UWA+166
         4 000556   000244 036000 xsym               ADLQ    UWA+164
         4 000557   000440 756000 0                  STQ     TYPEREC+4
         4 000560   000000 635010                    EAA     0,X0
         4 000561   000020 731000                    ARS     16
         4 000562   000417 470400 0                  LDP0    AREA_KEY$
         4 000563   000105 100400                    MLR     fill='000'O
         4 000564   000440 000004 0                  ADSC9   TYPEREC+4                cn=0,n=4
         4 000565   077766 400004                    ADSC9   -10,A,PR0                cn=2,n=4

      187     3775    3              UWA.AC_REC.KEYS_RESER;
      188     3776    3           AREA_KEY_XREF.PERMTYPE(NO_AREAS-1) = UWA.AC_REC.PERMTYPE;

   3776  4 000566   000420 236000 0                  LDQ     NO_AREAS
         4 000567   000012 402007                    MPY     10,DL
         4 000570   000417 470400 0                  LDP0    AREA_KEY$
         4 000571   000000 620006                    EAX0    0,QL
         4 000572   000236 236000 xsym               LDQ     UWA+158
         4 000573   000011 736000                    QLS     9
         4 000574   077777 676110                    ERQ     -1,X0,PR0
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:42   
         4 000575   777000 376007                    ANQ     -512,DL
         4 000576   077777 656110                    ERSQ    -1,X0,PR0

      189     3777    3           KEYVAL = UWA.AC_REC.KEY_ALLOC + UWA.AC_REC.KEYS_RESER;

   3777  4 000577   000243 236000 xsym               LDQ     UWA+163
         4 000600   000244 036000 xsym               ADLQ    UWA+164
         4 000601   000011 756000 0                  STQ     KEYVAL

      190     3778    3           IF KEYVAL <= BITBIN('777777'O) THEN

   3778  4 000602   000001 116003                    CMPQ    1,DU
         4 000603   000615 603000 4                  TRC     s:3781

      191     3779    3               AREA_KEY_XREF.LOC_KSZ(NO_AREAS-1) = 2;

   3779  4 000604   000420 236000 0                  LDQ     NO_AREAS
         4 000605   000012 402007                    MPY     10,DL
         4 000606   000417 470400 0                  LDP0    AREA_KEY$
         4 000607   000000 620006                    EAX0    0,QL
         4 000610   077777 236106                    LDQ     -1,QL,PR0
         4 000611   000013 376000 5                  ANQ     11
         4 000612   002000 276003                    ORQ     1024,DU
         4 000613   077777 756110                    STQ     -1,X0,PR0
         4 000614   000642 710000 4                  TRA     s:3786

      192     3780    3           ELSE
      193     3781    3               IF KEYVAL <= BITBIN('777777777'O) THEN

   3781  4 000615   000004 236000 3                  LDQ     4
         4 000616   000011 772000                    QRL     9
         4 000617   000011 116000 0                  CMPQ    KEYVAL
         4 000620   000632 602000 4                  TNC     s:3784

      194     3782    3                   AREA_KEY_XREF.LOC_KSZ(NO_AREAS-1) = 3;

   3782  4 000621   000420 236000 0                  LDQ     NO_AREAS
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:43   
         4 000622   000012 402007                    MPY     10,DL
         4 000623   000417 470400 0                  LDP0    AREA_KEY$
         4 000624   000000 620006                    EAX0    0,QL
         4 000625   077777 236106                    LDQ     -1,QL,PR0
         4 000626   000013 376000 5                  ANQ     11
         4 000627   003000 276003                    ORQ     1536,DU
         4 000630   077777 756110                    STQ     -1,X0,PR0
         4 000631   000642 710000 4                  TRA     s:3786

      195     3783    3               ELSE
      196     3784    3                   AREA_KEY_XREF.LOC_KSZ(NO_AREAS-1) = 4;

   3784  4 000632   000420 236000 0                  LDQ     NO_AREAS
         4 000633   000012 402007                    MPY     10,DL
         4 000634   000417 470400 0                  LDP0    AREA_KEY$
         4 000635   000000 620006                    EAX0    0,QL
         4 000636   077777 236106                    LDQ     -1,QL,PR0
         4 000637   000013 376000 5                  ANQ     11
         4 000640   004000 276003                    ORQ     2048,DU
         4 000641   077777 756110                    STQ     -1,X0,PR0

      197     3785
      198     3786    3           CALL DB_FUNC_FRS(CAN_RVA.ACREC.SEC,CAN_RVA.OAAC.SEC) ALTRET(ALTRTN);

   3786  4 000642   000027 630400 5                  EPPR0   23
         4 000643   000000 631400 5                  EPPR1   0
         4 000644   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000645   000654 702000 4                  TSX2    ALTRTN

      199     3787    3           END;

   3787  4 000646   040000 106400                    CMPC    fill='040'O
         4 000647   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000650   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 000651   000517 601000 4                  TNZ     s:3766

      200     3788    2       RETURN;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:44   

   3788  4 000652   000436 221200 0                  LDX1  ! TYPEREC+2
         4 000653   000001 702211                    TSX2  ! 1,X1

      201     3789
      202     3790    2   ALTRTN:
      203     3791    2       ALTRETURN;

   3791  4 000654   000436 221200 0     ALTRTN       LDX1  ! TYPEREC+2
         4 000655   000000 702211                    TSX2  ! 0,X1

      204     3792    2   END BUILD_AREA_KEY_XREF;
      205     3793        %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:45   
      206     3794        /*
      207     3795           Build set xref - this table is used to store set eis descriptors
      208     3796                            for any given record.
      209     3797        */
      210     3798    1   BUILD_SETXREF: ENTRY ALTRET;

   3798  4 000656   000000 741200 0     BUILD_SETXR* STX1  ! 0

      211     3799
      212     3800    1       CALL CREATE_TBL_SEG(SET_XREF$,SETTBL#) ALTRET(ALTRTN);

   3800  4 000657   000033 630400 5                  EPPR0   27
         4 000660   000000 631400 5                  EPPR1   0
         4 000661   000000 701000 xent               TSX1    CREATE_TBL_SEG
         4 000662   001474 702000 4                  TSX2    ALTRTN

      213     3801    1       IF FTIME THEN

   3801  4 000663   000007 234000 0                  SZN     FTIME
         4 000664   000667 605000 4                  TPL     s:3806

      214     3802    2       DO;

      215     3803    2           FTIME = '0'B;

   3803  4 000665   000007 450000 0                  STZ     FTIME

      216     3804    2           PR7 = PR7 + 1;

   3804  4 000666   000006 054000 0                  AOS     PR7

      217     3805    2           END;

      218     3806    1       MAX_SSLOT = 204; /* Init size of table to 1024 wrds/ 5 wrd entres*/

   3806  4 000667   000314 235007                    LDA     204,DL
         4 000670   000424 755000 0                  STA     MAX_SSLOT
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:46   

      219     3807    1       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA) ALTRET(DBALT);

   3807  4 000671   000025 630400 5                  EPPR0   21
         4 000672   000000 631400 5                  EPPR1   0
         4 000673   000000 701000 xent               TSX1    DB_FUNC_FDR
         4 000674   001476 702000 4                  TSX2    DBALT

      220     3808    1       CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC) ALTRET(DBALT);

   3808  4 000675   000005 630400 5                  EPPR0   5
         4 000676   000000 631400 5                  EPPR1   0
         4 000677   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000700   001476 702000 4                  TSX2    DBALT

      221     3809    2       DO UNTIL_END_OF_REALM;

   3809  4 000701   040000 106400                    CMPC    fill='040'O
         4 000702   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000703   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 000704   001221 600000 4                  TZE     s:3876

      222     3810
      223     3811    2           CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC) ALTRET(DBALT);

   3811  4 000705   000005 630400 5                  EPPR0   5
         4 000706   000007 631400 5                  EPPR1   7
         4 000707   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000710   001476 702000 4                  TSX2    DBALT

      224     3812    2           REC_LOC = TYPE.MSTRINDX(UWA.RC_REC.RTYPE); /* INDX IN MSTR_REF */

   3812  4 000711   000270 235000 xsym               LDA     UWA+184
         4 000712   000001 735000                    ALS     1
         4 000713   000000 100405                    MLR     fill='000'O
         4 000714   000000 000002 xsym               ADSC9   TYPE,A                   cn=0,n=2
         4 000715   000440 000004 0                  ADSC9   TYPEREC+4                cn=0,n=4
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:47   
         4 000716   000440 236000 0                  LDQ     TYPEREC+4
         4 000717   000022 732000                    QRS     18
         4 000720   000005 756000 0                  STQ     REC_LOC

      225     3813    2           LAST = REC_LOC;

   3813  4 000721   000004 756000 0                  STQ     LAST

      226     3814    2           CALL DB_FUNC_FRS(CAN_RVA.NULL,CAN_RVA.RCSOSM.SEC) ALTRET(DBALT);

   3814  4 000722   000035 630400 5                  EPPR0   29
         4 000723   000000 631400 5                  EPPR1   0
         4 000724   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000725   001476 702000 4                  TSX2    DBALT

      227     3815
      228     3816    3           DO UNTIL_END_OF_REALM;

   3816  4 000726   040000 106400                    CMPC    fill='040'O
         4 000727   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000730   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 000731   001211 600000 4                  TZE     s:3874

      229     3817
      230     3818    3               CALL DB_FUNC_GET(CAN_RVA.NULL) ALTRET(DBALT);

   3818  4 000732   000035 630400 5                  EPPR0   29
         4 000733   000007 631400 5                  EPPR1   7
         4 000734   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000735   001476 702000 4                  TSX2    DBALT

      231     3819    3               IF UWA.DB_RECORD_NAME='SO' THEN

   3819  4 000736   040000 106400                    CMPC    fill='040'O
         4 000737   000023 000036 xsym               ADSC9   UWA+19                   cn=0,n=30
         4 000740   000005 000002 3                  ADSC9   5                        cn=0,n=2
         4 000741   000744 601000 4                  TNZ     s:3822
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:48   

      232     3820    3                   RECTYP = 0; /* SET A FLAG */

   3820  4 000742   000003 450000 0                  STZ     RECTYP
         4 000743   000746 710000 4                  TRA     s:3824

      233     3821    3               ELSE
      234     3822    3                   RECTYP = 1; /* SM */

   3822  4 000744   000001 235007                    LDA     1,DL
         4 000745   000003 755000 0                  STA     RECTYP

      235     3823
      236     3824    3               CALL DB_FUNC_FOR(CAN_RVA.SCSOSM.SEC) ALTRET(DBALT);

   3824  4 000746   000037 630400 5                  EPPR0   31
         4 000747   000007 631400 5                  EPPR1   7
         4 000750   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 000751   001476 702000 4                  TSX2    DBALT

      237     3825    3               CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ALTRET(DBALT);

   3825  4 000752   000014 630400 5                  EPPR0   12
         4 000753   000007 631400 5                  EPPR1   7
         4 000754   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000755   001476 702000 4                  TSX2    DBALT

      238     3826    3               CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(DBALT);

   3826  4 000756   000010 630400 5                  EPPR0   8
         4 000757   000007 631400 5                  EPPR1   7
         4 000760   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 000761   001476 702000 4                  TSX2    DBALT

      239     3827    3               CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(DBALT);

   3827  4 000762   000011 630400 5                  EPPR0   9
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:49   
         4 000763   000007 631400 5                  EPPR1   7
         4 000764   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000765   001476 702000 4                  TSX2    DBALT

      240     3828
      241     3829    3               IF UWA.SC_REC.SETTYPE ~= 3 THEN /* 3 = ALTERNATE KEY */

   3829  4 000766   000310 235000 xsym               LDA     UWA+200
         4 000767   000003 115007                    CMPA    3,DL
         4 000770   001201 600000 4                  TZE     s:3872

      242     3830    4               DO;

      243     3831    4                   NXT_SSLOT = NXT_SSLOT + 1;

   3831  4 000771   000423 054000 0                  AOS     NXT_SSLOT

      244     3832    4                   IF NXT_SSLOT >= MAX_SSLOT THEN

   3832  4 000772   000423 236000 0                  LDQ     NXT_SSLOT
         4 000773   000424 116000 0                  CMPQ    MAX_SSLOT
         4 000774   001006 604000 4                  TMI     s:3837

      245     3833    5                   DO;

      246     3834    5                       CALL EXPAND_TBL_SEG(,SETTBL#) ALTRET(ALTRTN);

   3834  4 000775   000034 236000 5                  LDQ     28
         4 000776   000004 235000 5                  LDA     4
         4 000777   000440 757000 0                  STAQ    TYPEREC+4
         4 001000   000440 630400 0                  EPPR0   TYPEREC+4
         4 001001   000000 631400 5                  EPPR1   0
         4 001002   000000 701000 xent               TSX1    EXPAND_TBL_SEG
         4 001003   001474 702000 4                  TSX2    ALTRTN

      247     3835    5                       MAX_SSLOT = MAX_SSLOT + 204;

PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:50   
   3835  4 001004   000314 236007                    LDQ     204,DL
         4 001005   000424 056000 0                  ASQ     MAX_SSLOT

      248     3836    5                       END;

      249     3837    4                   CALL FIND_MSTR_ENTRY(UWA.SN_REC.SENAME,MSTR_INDX);

   3837  4 001006   000040 630400 5                  EPPR0   32
         4 001007   000000 631400 5                  EPPR1   0
         4 001010   000000 701000 xent               TSX1    FIND_MSTR_ENTRY
         4 001011   000000 011000                    NOP     0

      250     3838    4                   SET_XREF.MSTRINDX(NXT_SSLOT) = MSTR_INDX;

   3838  4 001012   000423 235000 0                  LDA     NXT_SSLOT
         4 001013   000002 735000                    ALS     2
         4 001014   000017 720000 0                  LXL0    MSTR_INDX
         4 001015   000422 470400 0                  LDP0    SET_XREF$
         4 001016   000000 740105                    STX0    0,AL,PR0

      251     3839    4                   SET_XREF.NEXT(NXT_SSLOT) = -1;

   3839  4 001017   000423 235000 0                  LDA     NXT_SSLOT
         4 001020   000002 735000                    ALS     2
         4 001021   777777 220003                    LDX0    -1,DU
         4 001022   000422 470400 0                  LDP0    SET_XREF$
         4 001023   000000 440105                    SXL0    0,AL,PR0

      252     3840    5                   DO CASE(RECTYP);

   3840  4 001024   000003 235000 0                  LDA     RECTYP
         4 001025   000002 115007                    CMPA    2,DL
         4 001026   001030 602005 4                  TNC     s:3840+4,AL
         4 001027   001161 710000 4                  TRA     s:3865
         4 001030   001032 710000 4                  TRA     s:3842
         4 001031   001055 710000 4                  TRA     s:3847

PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:51   
      253     3841    5                   CASE(0); /* SET OWNER (SO) */

      254     3842    5                       SET_XREF.EIS.PRIOR(NXT_SSLOT)=UWA.SO_REC.PRIPNT+PR7;

   3842  4 001032   000423 236000 0                  LDQ     NXT_SSLOT
         4 001033   000002 736000                    QLS     2
         4 001034   000000 621006                    EAX1    0,QL
         4 001035   000356 236000 xsym               LDQ     UWA+238
         4 001036   000006 036000 0                  ADLQ    PR7
         4 001037   000422 470400 0                  LDP0    SET_XREF$
         4 001040   000001 756111                    STQ     1,X1,PR0

      255     3843    5                       SET_XREF.EIS.NEXT(NXT_SSLOT)=UWA.SO_REC.NXTPNT+PR7;

   3843  4 001041   000423 236000 0                  LDQ     NXT_SSLOT
         4 001042   000002 736000                    QLS     2
         4 001043   000000 621006                    EAX1    0,QL
         4 001044   000355 236000 xsym               LDQ     UWA+237
         4 001045   000006 036000 0                  ADLQ    PR7
         4 001046   000422 470400 0                  LDP0    SET_XREF$
         4 001047   000003 756111                    STQ     3,X1,PR0

      256     3844    5                       SET_XREF.EIS.OWNR(NXT_SSLOT) = 0;

   3844  4 001050   000423 236000 0                  LDQ     NXT_SSLOT
         4 001051   000002 736000                    QLS     2
         4 001052   000422 470400 0                  LDP0    SET_XREF$
         4 001053   000002 450106                    STZ     2,QL,PR0
         4 001054   001161 710000 4                  TRA     s:3865

      257     3845
      258     3846    5                   CASE(1); /* SET MEMBER (SM) */

      259     3847    5                       IF UWA.SM_REC.INSTYPE = 1 THEN

   3847  4 001055   000360 236000 xsym               LDQ     UWA+240
         4 001056   000001 116007                    CMPQ    1,DL
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:52   
         4 001057   001066 601000 4                  TNZ     s:3849

      260     3848    5                           MSTR_REF.SET.INMODE(MSTR_INDX) = %YES#;

   3848  4 001060   000017 236000 0                  LDQ     MSTR_INDX
         4 001061   000012 402007                    MPY     10,DL
         4 001062   000014 470400 0                  LDP0    MSTR$
         4 001063   000000 621006                    EAX1    0,QL
         4 001064   000010 236003                    LDQ     8,DU
         4 001065   000011 256111                    ORSQ    9,X1,PR0

      261     3849    5                       IF UWA.SM_REC.RETTYPE = 1 THEN

   3849  4 001066   000361 235000 xsym               LDA     UWA+241
         4 001067   000001 115007                    CMPA    1,DL
         4 001070   001077 601000 4                  TNZ     s:3851

      262     3850    5                           MSTR_REF.SET.RETYPE(MSTR_INDX) = %YES#;

   3850  4 001071   000017 236000 0                  LDQ     MSTR_INDX
         4 001072   000012 402007                    MPY     10,DL
         4 001073   000014 470400 0                  LDP0    MSTR$
         4 001074   000000 621006                    EAX1    0,QL
         4 001075   000004 236003                    LDQ     4,DU
         4 001076   000011 256111                    ORSQ    9,X1,PR0

      263     3851    5                       IF UWA.SM_REC.PSMOD = 1 THEN

   3851  4 001077   000366 235000 xsym               LDA     UWA+246
         4 001100   000001 115007                    CMPA    1,DL
         4 001101   001111 601000 4                  TNZ     s:3854

      264     3852    5                           MSTR_REF.SET.SMMODE(MSTR_INDX) = %YES#;

   3852  4 001102   000017 236000 0                  LDQ     MSTR_INDX
         4 001103   000012 402007                    MPY     10,DL
         4 001104   000014 470400 0                  LDP0    MSTR$
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:53   
         4 001105   000000 621006                    EAX1    0,QL
         4 001106   020000 236007                    LDQ     8192,DL
         4 001107   000011 256111                    ORSQ    9,X1,PR0
         4 001110   001117 710000 4                  TRA     s:3855

      265     3853    5                       ELSE
      266     3854    5                           MSTR_REF.SET.SMMODE(MSTR_INDX) = %NO#;

   3854  4 001111   000017 236000 0                  LDQ     MSTR_INDX
         4 001112   000012 402007                    MPY     10,DL
         4 001113   000014 470400 0                  LDP0    MSTR$
         4 001114   000000 621006                    EAX1    0,QL
         4 001115   000042 236000 5                  LDQ     34
         4 001116   000011 356111                    ANSQ    9,X1,PR0

      267     3855    5                       SET_XREF.EIS.NEXT(NXT_SSLOT)=UWA.SM_REC.NXTPNT+PR7;

   3855  4 001117   000423 235000 0                  LDA     NXT_SSLOT
         4 001120   000002 735000                    ALS     2
         4 001121   000370 236000 xsym               LDQ     UWA+248
         4 001122   000006 036000 0                  ADLQ    PR7
         4 001123   000422 470400 0                  LDP0    SET_XREF$
         4 001124   000003 756105                    STQ     3,AL,PR0

      268     3856    5                       IF UWA.SM_REC.HDPNT=0 THEN /* NO HDR POINTER */

   3856  4 001125   000372 235000 xsym               LDA     UWA+250
         4 001126   001134 601000 4                  TNZ     s:3859

      269     3857    5                           SET_XREF.EIS.OWNR(NXT_SSLOT)=0;

   3857  4 001127   000423 236000 0                  LDQ     NXT_SSLOT
         4 001130   000002 736000                    QLS     2
         4 001131   000422 470400 0                  LDP0    SET_XREF$
         4 001132   000002 450106                    STZ     2,QL,PR0
         4 001133   001143 710000 4                  TRA     s:3860

PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:54   
      270     3858    5                       ELSE
      271     3859    5                           SET_XREF.EIS.OWNR(NXT_SSLOT)=UWA.SM_REC.HDPNT+PR7;

   3859  4 001134   000423 236000 0                  LDQ     NXT_SSLOT
         4 001135   000002 736000                    QLS     2
         4 001136   000000 621006                    EAX1    0,QL
         4 001137   000372 236000 xsym               LDQ     UWA+250
         4 001140   000006 036000 0                  ADLQ    PR7
         4 001141   000422 470400 0                  LDP0    SET_XREF$
         4 001142   000002 756111                    STQ     2,X1,PR0

      272     3860    5                       IF UWA.SM_REC.PRIPNT=0 THEN

   3860  4 001143   000371 235000 xsym               LDA     UWA+249
         4 001144   001152 601000 4                  TNZ     s:3863

      273     3861    5                           SET_XREF.EIS.PRIOR(NXT_SSLOT)=0;

   3861  4 001145   000423 236000 0                  LDQ     NXT_SSLOT
         4 001146   000002 736000                    QLS     2
         4 001147   000422 470400 0                  LDP0    SET_XREF$
         4 001150   000001 450106                    STZ     1,QL,PR0
         4 001151   001161 710000 4                  TRA     s:3865

      274     3862    5                       ELSE
      275     3863    5                           SET_XREF.EIS.PRIOR(NXT_SSLOT)=UWA.SM_REC.PRIPNT+PR7;

   3863  4 001152   000423 236000 0                  LDQ     NXT_SSLOT
         4 001153   000002 736000                    QLS     2
         4 001154   000000 621006                    EAX1    0,QL
         4 001155   000371 236000 xsym               LDQ     UWA+249
         4 001156   000006 036000 0                  ADLQ    PR7
         4 001157   000422 470400 0                  LDP0    SET_XREF$
         4 001160   000001 756111                    STQ     1,X1,PR0

      276     3864    5                       END;

PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:55   
      277     3865    4                   IF MSTR_REF.NEXT(REC_LOC) = -1 THEN

   3865  4 001161   000005 236000 0                  LDQ     REC_LOC
         4 001162   000012 402007                    MPY     10,DL
         4 001163   000014 470400 0                  LDP0    MSTR$
         4 001164   000000 721106                    LXL1    0,QL,PR0
         4 001165   777777 101003                    CMPX1   -1,DU
         4 001166   001172 601000 4                  TNZ     s:3868

      278     3866    4                       MSTR_REF.NEXT(REC_LOC) = NXT_SSLOT;

   3866  4 001167   000423 722000 0                  LXL2    NXT_SSLOT
         4 001170   000000 442106                    SXL2    0,QL,PR0
         4 001171   001177 710000 4                  TRA     s:3869

      279     3867    4                   ELSE
      280     3868    4                       SET_XREF.NEXT(LAST) = NXT_SSLOT;

   3868  4 001172   000004 235000 0                  LDA     LAST
         4 001173   000002 735000                    ALS     2
         4 001174   000423 722000 0                  LXL2    NXT_SSLOT
         4 001175   000422 471400 0                  LDP1    SET_XREF$
         4 001176   100000 442105                    SXL2    0,AL,PR1

      281     3869    4                   LAST = NXT_SSLOT;

   3869  4 001177   000423 235000 0                  LDA     NXT_SSLOT
         4 001200   000004 755000 0                  STA     LAST

      282     3870    4                   END;

      283     3871
      284     3872    3               CALL DB_FUNC_FRS(CAN_RVA.NULL,CAN_RVA.RCSOSM.SEC) ALTRET(DBALT);

   3872  4 001201   000035 630400 5                  EPPR0   29
         4 001202   000000 631400 5                  EPPR1   0
         4 001203   000000 701000 xent               TSX1    DB_FUNC_FRS
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:56   
         4 001204   001476 702000 4                  TSX2    DBALT

      285     3873    3               END;

   3873  4 001205   040000 106400                    CMPC    fill='040'O
         4 001206   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 001207   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 001210   000732 601000 4                  TNZ     s:3818

      286     3874    2           CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC) ALTRET(DBALT);

   3874  4 001211   000005 630400 5                  EPPR0   5
         4 001212   000000 631400 5                  EPPR1   0
         4 001213   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 001214   001476 702000 4                  TSX2    DBALT

      287     3875    2           END;

   3875  4 001215   040000 106400                    CMPC    fill='040'O
         4 001216   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 001217   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 001220   000705 601000 4                  TNZ     s:3811

      288     3876    1       RETURN;

   3876  4 001221   000000 221200 0                  LDX1  ! 0
         4 001222   000001 702211                    TSX2  ! 1,X1

      289     3877        %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:57   
      290     3878        /*
      291     3879              Build record xfer - provides links for what records are members
      292     3880                                  of which sets.
      293     3881        */
      294     3882    1   BUILD_RECXREF: ENTRY ALTRET;

   3882  4 001223   000000 741200 0     BUILD_RECXR* STX1  ! 0

      295     3883
      296     3884    1       CALL CREATE_TBL_SEG(REC_XREF$,RECTBL#) ALTRET(ALTRTN);

   3884  4 001224   000044 630400 5                  EPPR0   36
         4 001225   000000 631400 5                  EPPR1   0
         4 001226   000000 701000 xent               TSX1    CREATE_TBL_SEG
         4 001227   001474 702000 4                  TSX2    ALTRTN

      297     3885    1       MAX_RSLOT = 1024;

   3885  4 001230   002000 235007                    LDA     1024,DL
         4 001231   000427 755000 0                  STA     MAX_RSLOT

      298     3886
      299     3887    1       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA) ALTRET(DBALT);

   3887  4 001232   000025 630400 5                  EPPR0   21
         4 001233   000000 631400 5                  EPPR1   0
         4 001234   000000 701000 xent               TSX1    DB_FUNC_FDR
         4 001235   001476 702000 4                  TSX2    DBALT

      300     3888    1       CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(DBALT);

   3888  4 001236   000014 630400 5                  EPPR0   12
         4 001237   000000 631400 5                  EPPR1   0
         4 001240   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 001241   001476 702000 4                  TSX2    DBALT

      301     3889    2       DO UNTIL_END_OF_REALM;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:58   

   3889  4 001242   040000 106400                    CMPC    fill='040'O
         4 001243   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 001244   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 001245   001450 600000 4                  TZE     s:3933

      302     3890
      303     3891    2           CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ALTRET(DBALT);

   3891  4 001246   000014 630400 5                  EPPR0   12
         4 001247   000007 631400 5                  EPPR1   7
         4 001250   000000 701000 xent               TSX1    DB_FUNC_GET
         4 001251   001476 702000 4                  TSX2    DBALT

      304     3892    2           CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(DBALT);

   3892  4 001252   000010 630400 5                  EPPR0   8
         4 001253   000007 631400 5                  EPPR1   7
         4 001254   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 001255   001476 702000 4                  TSX2    DBALT

      305     3893    2           CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(DBALT);

   3893  4 001256   000011 630400 5                  EPPR0   9
         4 001257   000007 631400 5                  EPPR1   7
         4 001260   000000 701000 xent               TSX1    DB_FUNC_GET
         4 001261   001476 702000 4                  TSX2    DBALT

      306     3894
      307     3895    2           CALL FIND_MSTR_ENTRY(UWA.SN_REC.SENAME,MSTR_INDX);

   3895  4 001262   000040 630400 5                  EPPR0   32
         4 001263   000000 631400 5                  EPPR1   0
         4 001264   000000 701000 xent               TSX1    FIND_MSTR_ENTRY
         4 001265   000000 011000                    NOP     0

      308     3896    2           REC_LOC = MSTR_INDX;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:59   

   3896  4 001266   000017 235000 0                  LDA     MSTR_INDX
         4 001267   000005 755000 0                  STA     REC_LOC

      309     3897    2           CALL DB_FUNC_FRS(CAN_RVA.NULL,CAN_RVA.SCSOSM.SEC) ALTRET(DBALT);

   3897  4 001270   000046 630400 5                  EPPR0   38
         4 001271   000000 631400 5                  EPPR1   0
         4 001272   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 001273   001476 702000 4                  TSX2    DBALT

      310     3898    3           DO UNTIL_END_OF_REALM;

   3898  4 001274   040000 106400                    CMPC    fill='040'O
         4 001275   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 001276   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 001277   001440 600000 4                  TZE     s:3931

      311     3899
      312     3900    3               CALL DB_FUNC_GET(CAN_RVA.NULL) ALTRET(DBALT);

   3900  4 001300   000035 630400 5                  EPPR0   29
         4 001301   000007 631400 5                  EPPR1   7
         4 001302   000000 701000 xent               TSX1    DB_FUNC_GET
         4 001303   001476 702000 4                  TSX2    DBALT

      313     3901    3               NXT_RSLOT = NXT_RSLOT + 1;

   3901  4 001304   000426 054000 0                  AOS     NXT_RSLOT

      314     3902    3               IF NXT_RSLOT >= MAX_RSLOT THEN

   3902  4 001305   000426 236000 0                  LDQ     NXT_RSLOT
         4 001306   000427 116000 0                  CMPQ    MAX_RSLOT
         4 001307   001321 604000 4                  TMI     s:3907

      315     3903    4               DO;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:60   

      316     3904    4                   CALL EXPAND_TBL_SEG(,RECTBL#) ALTRET(ALTRTN);

   3904  4 001310   000045 236000 5                  LDQ     37
         4 001311   000004 235000 5                  LDA     4
         4 001312   000440 757000 0                  STAQ    TYPEREC+4
         4 001313   000440 630400 0                  EPPR0   TYPEREC+4
         4 001314   000000 631400 5                  EPPR1   0
         4 001315   000000 701000 xent               TSX1    EXPAND_TBL_SEG
         4 001316   001474 702000 4                  TSX2    ALTRTN

      317     3905    4                   NXT_RSLOT = NXT_RSLOT + 1024;

   3905  4 001317   002000 236007                    LDQ     1024,DL
         4 001320   000426 056000 0                  ASQ     NXT_RSLOT

      318     3906    4                   END;

      319     3907    3               IF UWA.DB_RECORD_NAME='SO' THEN

   3907  4 001321   040000 106400                    CMPC    fill='040'O
         4 001322   000023 000036 xsym               ADSC9   UWA+19                   cn=0,n=30
         4 001323   000005 000002 3                  ADSC9   5                        cn=0,n=2
         4 001324   001327 601000 4                  TNZ     s:3910

      320     3908    3                   RECTYP = 0; /* REMEMBER THIS RS RECORD TYPE */

   3908  4 001325   000003 450000 0                  STZ     RECTYP
         4 001326   001331 710000 4                  TRA     s:3911

      321     3909    3               ELSE
      322     3910    3                   RECTYP = 1;

   3910  4 001327   000001 235007                    LDA     1,DL
         4 001330   000003 755000 0                  STA     RECTYP

      323     3911    3               CALL DB_FUNC_FOR(CAN_RVA.RCSOSM.SEC) ALTRET(DBALT);
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:61   

   3911  4 001331   000036 630400 5                  EPPR0   30
         4 001332   000007 631400 5                  EPPR1   7
         4 001333   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 001334   001476 702000 4                  TSX2    DBALT

      324     3912    3               CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC) ALTRET(DBALT);

   3912  4 001335   000005 630400 5                  EPPR0   5
         4 001336   000007 631400 5                  EPPR1   7
         4 001337   000000 701000 xent               TSX1    DB_FUNC_GET
         4 001340   001476 702000 4                  TSX2    DBALT

      325     3913    3               IF RECTYP = 0 THEN /* SO */

   3913  4 001341   000003 235000 0                  LDA     RECTYP
         4 001342   001361 601000 4                  TNZ     s:3919

      326     3914    4               DO;

      327     3915    4                   REC_XREF.OWNR(NXT_RSLOT)=%YES#;

   3915  4 001343   000425 470400 0                  LDP0    REC_XREF$
         4 001344   000426 720000 0                  LXL0    NXT_RSLOT
         4 001345   000001 236007                    LDQ     1,DL
         4 001346   000000 256110                    ORSQ    0,X0,PR0

      328     3916    4                   MSTR_REF.SET.OWNER_TYPE(MSTR_INDX)=UWA.RC_REC.RTYPE;

   3916  4 001347   000017 236000 0                  LDQ     MSTR_INDX
         4 001350   000012 402007                    MPY     10,DL
         4 001351   000014 470400 0                  LDP0    MSTR$
         4 001352   000000 620006                    EAX0    0,QL
         4 001353   000270 236000 xsym               LDQ     UWA+184
         4 001354   000001 736000                    QLS     1
         4 001355   000011 676110                    ERQ     9,X0,PR0
         4 001356   017776 376007                    ANQ     8190,DL
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:62   
         4 001357   000011 656110                    ERSQ    9,X0,PR0

      329     3917    4                   END;

   3917  4 001360   001365 710000 4                  TRA     s:3920

      330     3918    3               ELSE
      331     3919    3                   REC_XREF.OWNR(NXT_RSLOT)=%NO#;

   3919  4 001361   000425 470400 0                  LDP0    REC_XREF$
         4 001362   000426 720000 0                  LXL0    NXT_RSLOT
         4 001363   000050 236000 5                  LDQ     40
         4 001364   000000 356110                    ANSQ    0,X0,PR0

      332     3920    3               REC_XREF.MSTRINDX(NXT_RSLOT)=TYPE.MSTRINDX(UWA.RC_REC.RTYPE);

   3920  4 001365   000270 236000 xsym               LDQ     UWA+184
         4 001366   000022 402007                    MPY     18,DL
         4 001367   000000 116003                    CMPQ    0,DU
         4 001370   001372 605000 4                  TPL     s:3920+5
         4 001371   000044 036003                    ADLQ    36,DU
         4 001372   000440 756000 0                  STQ     TYPEREC+4
         4 001373   000426 236000 0                  LDQ     NXT_RSLOT
         4 001374   000044 402007                    MPY     36,DL
         4 001375   000000 116003                    CMPQ    0,DU
         4 001376   001400 605000 4                  TPL     s:3920+11
         4 001377   000044 036003                    ADLQ    36,DU
         4 001400   000440 235000 0                  LDA     TYPEREC+4
         4 001401   000425 470400 0                  LDP0    REC_XREF$
         4 001402   003106 061405                    CSR     bolr='003'O
         4 001403   000000 000022 xsym               BDSC    TYPE,A                   by=0,bit=0,n=18
         4 001404   000000 400021                    BDSC    0,Q,PR0                  by=2,bit=0,n=17

      333     3921    3               REC_XREF.NEXT(NXT_RSLOT) = -1;

   3921  4 001405   777777 220003                    LDX0    -1,DU
         4 001406   000425 470400 0                  LDP0    REC_XREF$
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:63   
         4 001407   000426 721000 0                  LXL1    NXT_RSLOT
         4 001410   000000 740111                    STX0    0,X1,PR0

      334     3922
      335     3923    3               IF MSTR_REF.NEXT(REC_LOC) = -1 THEN

   3923  4 001411   000005 236000 0                  LDQ     REC_LOC
         4 001412   000012 402007                    MPY     10,DL
         4 001413   000014 470400 0                  LDP0    MSTR$
         4 001414   000000 721106                    LXL1    0,QL,PR0
         4 001415   777777 101003                    CMPX1   -1,DU
         4 001416   001422 601000 4                  TNZ     s:3926

      336     3924    3                   MSTR_REF.NEXT(REC_LOC) = NXT_RSLOT;

   3924  4 001417   000426 722000 0                  LXL2    NXT_RSLOT
         4 001420   000000 442106                    SXL2    0,QL,PR0
         4 001421   001426 710000 4                  TRA     s:3927

      337     3925    3               ELSE
      338     3926    3                   REC_XREF.NEXT(LAST) = NXT_RSLOT;

   3926  4 001422   000426 722000 0                  LXL2    NXT_RSLOT
         4 001423   000425 471400 0                  LDP1    REC_XREF$
         4 001424   000004 723000 0                  LXL3    LAST
         4 001425   100000 742113                    STX2    0,X3,PR1

      339     3927    3               LAST = NXT_RSLOT;

   3927  4 001426   000426 235000 0                  LDA     NXT_RSLOT
         4 001427   000004 755000 0                  STA     LAST

      340     3928
      341     3929    3               CALL DB_FUNC_FRS(CAN_RVA.NULL,CAN_RVA.SCSOSM.SEC) ALTRET(DBALT);

   3929  4 001430   000046 630400 5                  EPPR0   38
         4 001431   000000 631400 5                  EPPR1   0
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:64   
         4 001432   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 001433   001476 702000 4                  TSX2    DBALT

      342     3930    3               END;

   3930  4 001434   040000 106400                    CMPC    fill='040'O
         4 001435   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 001436   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 001437   001300 601000 4                  TNZ     s:3900

      343     3931    2           CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(DBALT);

   3931  4 001440   000014 630400 5                  EPPR0   12
         4 001441   000000 631400 5                  EPPR1   0
         4 001442   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 001443   001476 702000 4                  TSX2    DBALT

      344     3932    2           END;

   3932  4 001444   040000 106400                    CMPC    fill='040'O
         4 001445   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 001446   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 001447   001246 601000 4                  TNZ     s:3891

      345     3933    1       RETURN;

   3933  4 001450   000000 221200 0                  LDX1  ! 0
         4 001451   000001 702211                    TSX2  ! 1,X1

      346     3934
      347     3935        %EJECT;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:65   
      348     3936        /*
      349     3937                 INIT TABLE VARIABLES
      350     3938        */
      351     3939    1   INIT_VARS: PROC;

   3939  4 001452   000437 741200 0     INIT_VARS    STX1  ! TYPEREC+3

      352     3940    2       NXT_MSLOT = -1;

   3940  4 001453   000001 335007                    LCA     1,DL
         4 001454   000015 755000 0                  STA     NXT_MSLOT

      353     3941    2       NXT_SSLOT = -1;

   3941  4 001455   000423 755000 0                  STA     NXT_SSLOT

      354     3942    2       NXT_RSLOT = -1;

   3942  4 001456   000426 755000 0                  STA     NXT_RSLOT

      355     3943    2       MAX_MSLOT = 0;

   3943  4 001457   000016 450000 0                  STZ     MAX_MSLOT

      356     3944    2       MAX_SSLOT = 0;

   3944  4 001460   000424 450000 0                  STZ     MAX_SSLOT

      357     3945    2       MAX_RSLOT = 0;

   3945  4 001461   000427 450000 0                  STZ     MAX_RSLOT

      358     3946    2       NO_AREAS = 0;

   3946  4 001462   000420 450000 0                  STZ     NO_AREAS

      359     3947    2       NO_RECS = 0;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:66   

   3947  4 001463   000430 450000 0                  STZ     NO_RECS

      360     3948    2       NO_SETS = 0;

   3948  4 001464   000431 450000 0                  STZ     NO_SETS

      361     3949    2       SETTYPE = 4999;

   3949  4 001465   011607 236007                    LDQ     4999,DL
         4 001466   000010 756000 0                  STQ     SETTYPE

      362     3950         /* CALL INIT_TABLES TO INIT HASHTBL(0:808) TO ALL -1 */
      363     3951         /* AND INIT TYPE TABLE (0:4000) TO ALL -1, CAREFUL OF CHANGE SIZE */
      364     3952    2       CALL INIT_TABLES; /* IT IS BMAP, DEFINED IN ZIU$MRL */

   3952  4 001467   000051 631400 5                  EPPR1   41
         4 001470   000000 701000 xent               TSX1    INIT_TABLES
         4 001471   000000 011000                    NOP     0

      365     3953    2       RETURN;

   3953  4 001472   000437 221200 0                  LDX1  ! TYPEREC+3
         4 001473   000001 702211                    TSX2  ! 1,X1

      366     3954    2   END INIT_VARS;
      367     3955
      368     3956
      369     3957    1   ALTRTN:
      370     3958    1       ALTRETURN;

   3958  4 001474   000000 221200 0     ALTRTN       LDX1  ! 0
         4 001475   000000 702211                    TSX2  ! 0,X1

      371     3959    1   DBALT:
      372     3960    1       ERR_INSERT.CNT(0) = 5;

PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:67   
   3960  4 001476   005000 236003       DBALT        LDQ     2560,DU
         4 001477   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      373     3961    1       ERR_INSERT.TEXT(0) = UWA.DB_STATUS;

   3961  4 001500   040000 100400                    MLR     fill='040'O
         4 001501   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 001502   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      374     3962    1       ERRCODESF.ERR# = 3002; /* Unsuccessful DB call */

   3962  4 001503   000000 236000 xsym               LDQ     ERRCODESF
         4 001504   000052 376000 5                  ANQ     42
         4 001505   056720 276007                    ORQ     24016,DL
         4 001506   000000 756000 xsym               STQ     ERRCODESF

      375     3963    1       MSGCODE = ERRCODE_RDEF;

   3963  4 001507   000000 756000 xsym               STQ     MSGCODE

      376     3964    1       CALL SYS_FUNC_ERRMSG;

   3964  4 001510   000051 631400 5                  EPPR1   41
         4 001511   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 001512   000000 011000                    NOP     0

      377     3965    1       ALTRETURN;

   3965  4 001513   000000 221200 0                  LDX1  ! 0
         4 001514   000000 702211                    TSX2  ! 0,X1

PR7
 Sect OctLoc
   0     006   377777 777777                                                    ....

FTIME
 Sect OctLoc
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:68   
   0     007   4***** ******                                                    ....

SETTYPE
 Sect OctLoc
   0     010   000000 011607                                                    ....

NXT_MSLOT
 Sect OctLoc
   0     015   777777 777777                                                    ....

MAX_MSLOT
 Sect OctLoc
   0     016   000000 000000                                                    ....

HASHTBL
 Sect OctLoc
   0     020   ****** ******   ****** ******   ****** ******   ****** ******    ................

NO_AREAS
 Sect OctLoc
   0     420   000000 000000                                                    ....

NXT_SSLOT
 Sect OctLoc
   0     423   777777 777777                                                    ....

MAX_SSLOT
 Sect OctLoc
   0     424   000000 000000                                                    ....

NXT_RSLOT
 Sect OctLoc
   0     426   777777 777777                                                    ....

MAX_RSLOT
 Sect OctLoc
   0     427   000000 000000                                                    ....
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:69   

NO_RECS
 Sect OctLoc
   0     430   000000 000000                                                    ....

NO_SETS
 Sect OctLoc
   0     431   000000 000000                                                    ....

XREF_BUILT
 Sect OctLoc
   0     432   0***** ******                                                    ....

(unnamed)
 Sect OctLoc
   0     435   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   3     000   060062 061060   060040 040040   052103 101114   103056 122103    02100   *CALC.RC
   3     004   777777 777000   123117 040040                                    ....SO

(unnamed)
 Sect OctLoc
   5     000   000002 000000   000000 000002   000014 006000   000001 006000    ................
   5     004   000000 006014   000064 406000   000022 406000   000001 000000    .....4..........
   5     010   000047 406000   000075 406000   000077 777777   000777 777777    .'...=...?......
   5     014   000065 406000   000023 406000   777767 777777   777773 777777    .5..............
   5     020   000001 600000   777775 777777   000427 006000   000001 006000    ................
   5     024   777777 777777   000062 406000   000063 006000   000063 406000    .....2...3...3..
   5     030   000021 406000   777000 777777   000000 000003   000422 006000    ................
   5     034   000032 006000   000150 006000   000031 406000   000034 406000    .....h..........
   5     040   000427 006000   000017 006000   777777 757777   000000 000004    ................
   5     044   000425 006000   000043 006000   000150 006000   000034 406000    .....#...h......
   5     050   777777 777776   000000 000000   777777 400007                    ............
      378     3966
      379     3967    1   END ZIU$XREF;
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:70   
      380     3968        %EOD;

PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:71   
--  Include file information  --

   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   ZI_ERRORS_C.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$XREF.

   Procedure ZIU$XREF requires 845 words for executable code.
   Procedure ZIU$XREF is declared NOAUTO and requires 290 words of local(STATIC) storage.
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:72   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:73   
          MINI XREF LISTING

ALTRTN
      3958**LABEL    3655--CALLALT  3667--CALLALT  3683--CALLALT  3704--CALLALT  3800--CALLALT  3834--CALLALT
      3884--CALLALT  3904--CALLALT
ALTRTN IN PROCEDURE BUILD_AREA_KEY_XREF
      3791**LABEL    3763--CALLALT  3764--CALLALT  3767--CALLALT  3768--CALLALT  3769--CALLALT  3770--CALLALT
      3786--CALLALT
AREA_KEY$
      3604**DCL      3607--IMP-PTR  3762<<ASSIGN   3772>>ASSIGN   3773>>ASSIGN   3774>>ASSIGN   3776>>ASSIGN
      3779>>ASSIGN   3782>>ASSIGN   3784>>ASSIGN
AREA_KEY_XREF.CHECKED
      3612**DCL      3772<<ASSIGN
AREA_KEY_XREF.LOC_KSZ
      3611**DCL      3779<<ASSIGN   3782<<ASSIGN   3784<<ASSIGN
AREA_KEY_XREF.MAX_KEY
      3609**DCL      3774<<ASSIGN
AREA_KEY_XREF.NAME
      3610**DCL      3773<<ASSIGN
AREA_KEY_XREF.PERMTYPE
      3613**DCL      3776<<ASSIGN
BUILD_AREA_KEY_XREF
      3760**PROC     3737--CALL
CAN_RVA.ACREC.SEC
      1883**DCL      3764<>CALL     3768<>CALL     3786<>CALL
CAN_RVA.NULL
      2040**DCL      3814<>CALL     3818<>CALL     3872<>CALL     3897<>CALL     3900<>CALL     3929<>CALL
CAN_RVA.OAAC.SEC
      1781**DCL      3764<>CALL     3786<>CALL
CAN_RVA.OARC.SEC
      1784**DCL      3659<>CALL     3678<>CALL     3808<>CALL     3874<>CALL
CAN_RVA.OAREC.SEC
      1880**DCL      3763<>CALL     3807<>CALL     3887<>CALL
CAN_RVA.OASC.SEC
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:74   
      1787**DCL      3696<>CALL     3735<>CALL     3888<>CALL     3931<>CALL
CAN_RVA.RCREC.SEC
      1886**DCL      3659<>CALL     3662<>CALL     3678<>CALL     3808<>CALL     3811<>CALL     3874<>CALL
      3912<>CALL
CAN_RVA.RCSOSM.SEC
      1805**DCL      3814<>CALL     3872<>CALL     3911<>CALL
CAN_RVA.SCREC.SEC
      1889**DCL      3696<>CALL     3699<>CALL     3735<>CALL     3825<>CALL     3888<>CALL     3891<>CALL
      3931<>CALL
CAN_RVA.SCSOSM.SEC
      1814**DCL      3824<>CALL     3897<>CALL     3929<>CALL
CAN_RVA.SNREC.SEC
      1913**DCL      3664<>CALL     3701<>CALL     3770<>CALL     3827<>CALL     3893<>CALL
CAN_RVA.SNSE.SEC
      1847**DCL      3663<>CALL     3700<>CALL     3769<>CALL     3826<>CALL     3892<>CALL
COUNTSF
      3335**DCL      3336--REDEF
CREATE_TBL_SEG
        27**DCL-ENT  3655--CALL     3800--CALL     3884--CALL
DBALT
      3960**LABEL    3659--CALLALT  3662--CALLALT  3663--CALLALT  3664--CALLALT  3678--CALLALT  3696--CALLALT
      3699--CALLALT  3700--CALLALT  3701--CALLALT  3735--CALLALT  3737--CALLALT  3807--CALLALT  3808--CALLALT
      3811--CALLALT  3814--CALLALT  3818--CALLALT  3824--CALLALT  3825--CALLALT  3826--CALLALT  3827--CALLALT
      3872--CALLALT  3874--CALLALT  3887--CALLALT  3888--CALLALT  3891--CALLALT  3892--CALLALT  3893--CALLALT
      3897--CALLALT  3900--CALLALT  3911--CALLALT  3912--CALLALT  3929--CALLALT  3931--CALLALT
DB_FUNC_FDR
        31**DCL-ENT  3763--CALL     3807--CALL     3887--CALL
DB_FUNC_FOR
        34**DCL-ENT  3663--CALL     3700--CALL     3769--CALL     3824--CALL     3826--CALL     3892--CALL
      3911--CALL
DB_FUNC_FRS
        32**DCL-ENT  3659--CALL     3678--CALL     3696--CALL     3735--CALL     3764--CALL     3786--CALL
      3808--CALL     3814--CALL     3872--CALL     3874--CALL     3888--CALL     3897--CALL     3929--CALL
      3931--CALL
DB_FUNC_GET
        33**DCL-ENT  3662--CALL     3664--CALL     3699--CALL     3701--CALL     3768--CALL     3770--CALL
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:75   
      3811--CALL     3818--CALL     3825--CALL     3827--CALL     3891--CALL     3893--CALL     3900--CALL
      3912--CALL
ENCRP_SEEDSF
      3293**DCL      3294--REDEF
ERRCODESF
      3295**DCL      3300--REDEF
ERRCODESF.ERR#
      3298**DCL      3962<<ASSIGN
ERRCODE_RDEF
      3300**DCL      3963>>ASSIGN
ERR_INSERT.CNT
      3309**DCL      3960<<ASSIGN
ERR_INSERT.TEXT
      3310**DCL      3961<<ASSIGN
EXPAND_TBL_SEG
        28**DCL-ENT  3750--CALL     3834--CALL     3904--CALL
F$DCB.ACTPOS
       153**DCL       153--REDEF
F$DCB.ARS#
       127**DCL       127--REDEF
F$DCB.ATTR
       146**DCL       147--REDEF
F$DCB.BORROW
       161**DCL       161--REDEF     161--REDEF     161--REDEF
F$DCB.DCBNAME.L
       175**DCL       175--IMP-SIZ
F$DCB.EOMCHAR#
       131**DCL       131--REDEF
F$DCB.FLDID
       156**DCL       156--REDEF
F$DCB.FORM$
       150**DCL       150--REDEF
F$DCB.FSECT
       166**DCL       166--REDEF
F$DCB.FSN#
       143**DCL       143--REDEF     143--REDEF     144--REDEF
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:76   
F$DCB.HEADER$
       149**DCL       149--REDEF
F$DCB.IXTNSIZE#
       147**DCL       147--REDEF
F$DCB.LASTSTA$
       136**DCL       136--REDEF
F$DCB.LVL
       162**DCL       162--REDEF
F$DCB.NAME#.C
       137**DCL       137--REDEF
F$DCB.NOEOF
       159**DCL       159--REDEF
F$DCB.NRECS#
       148**DCL       148--REDEF
F$DCB.NRECX
       167**DCL       167--REDEF
F$DCB.OHDR
       159**DCL       159--REDEF
F$DCB.ORG#
       142**DCL       142--REDEF
F$DCB.PRECNO
       165**DCL       165--REDEF
F$DCB.RCSZ
       171**DCL       171--REDEF
F$DCB.RES#
       138**DCL       138--REDEF
F$DCB.SETX
       150**DCL       150--REDEF
F$DCB.TAB$
       150**DCL       150--REDEF
F$DCB.TDA
       164**DCL       165--REDEF
F$DCB.WSN#
       138**DCL       138--REDEF
FIDSF_RD
      3311**DCL      3312--REDEF
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:77   
FIND_MSTR_ENTRY
        29**DCL-ENT  3837--CALL     3895--CALL
FIRST_SET
      3362**DCL      3695<<ASSIGN
FTIME
        21**DCL      3801>>IF       3803<<ASSIGN
GET_MSLOT
      3745**PROC     3667--CALL     3683--CALL     3704--CALL     3767--CALL
GLBL_PTR_SZ
      3616**DCL      3654<<ASSIGN
HASHENTRY
        30**DCL-ENT  3723--CALL
HASHTBL
      3600**DCL      3724>>IF       3725<<ASSIGN   3727>>ASSIGN
HELPCODE
      3329**DCL      3334--REDEF
ICHKSUM
      3394**DCL      3395--REDEF
INDX
        15**DCL      3723<>CALL     3724>>IF       3725>>ASSIGN   3727<<ASSIGN   3727>>ASSIGN   3728>>DOWHILE
      3729>>ASSIGN   3730<<ASSIGN   3730>>ASSIGN
INIT_TABLES
        36**DCL-ENT  3952--CALL
INIT_VARS
      3939**PROC     3653--CALL
I_O_BUF$
      3372**DCL      3373--IMP-PTR
KEYVAL
        23**DCL      3777<<ASSIGN   3778>>IF       3781>>IF
KEYVSF
      3267**DCL      3272--REDEF
KEYVSF.WD_ONE
      3269**DCL      3270--REDEF
LAST
        18**DCL      3813<<ASSIGN   3868>>ASSIGN   3869<<ASSIGN   3926>>ASSIGN   3927<<ASSIGN
MAX_MSLOT
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:78   
      3598**DCL      3656<<ASSIGN   3748>>IF       3752<<ASSIGN   3752>>ASSIGN   3943<<ASSIGN
MAX_RSLOT
      3634**DCL      3885<<ASSIGN   3902>>IF       3945<<ASSIGN
MAX_SSLOT
      3626**DCL      3806<<ASSIGN   3832>>IF       3835<<ASSIGN   3835>>ASSIGN   3944<<ASSIGN
MSGCODE
      3301**DCL      3302--REDEF    3963<<ASSIGN
MSTR$
      3573**DCL      3576--IMP-PTR  3655<>CALL     3668>>ASSIGN   3669>>ASSIGN   3670>>ASSIGN   3671>>ASSIGN
      3672>>ASSIGN   3673>>ASSIGN   3674>>ASSIGN   3685>>ASSIGN   3686>>ASSIGN   3687>>ASSIGN   3688>>ASSIGN
      3689>>ASSIGN   3706>>ASSIGN   3707>>ASSIGN   3708>>ASSIGN   3709>>ASSIGN   3710>>ASSIGN   3711>>ASSIGN
      3712>>ASSIGN   3713>>ASSIGN   3714>>ASSIGN   3715>>ASSIGN   3716>>ASSIGN   3718>>ASSIGN   3720>>ASSIGN
      3730>>ASSIGN   3732>>ASSIGN   3762>>ASSIGN   3848>>ASSIGN   3850>>ASSIGN   3852>>ASSIGN   3854>>ASSIGN
      3865>>IF       3866>>ASSIGN   3916>>ASSIGN   3923>>IF       3924>>ASSIGN
MSTR_INDX
      3599**DCL      3837<>CALL     3838>>ASSIGN   3848>>ASSIGN   3850>>ASSIGN   3852>>ASSIGN   3854>>ASSIGN
      3895<>CALL     3896>>ASSIGN   3916>>ASSIGN
MSTR_REF
      3576**DCL      3656--ASSIGN   3752--ASSIGN   3762--ASSIGN
MSTR_REF.GLOBAL
      3583**DCL      3714<<ASSIGN
MSTR_REF.NAME
      3581**DCL      3668<<ASSIGN   3685<<ASSIGN   3706<<ASSIGN
MSTR_REF.NEXT
      3578**DCL      3671<<ASSIGN   3687<<ASSIGN   3708<<ASSIGN   3865>>IF       3866<<ASSIGN   3923>>IF
      3924<<ASSIGN
MSTR_REF.NXTHSH
      3579**DCL      3580--REDEF    3672<<ASSIGN   3709<<ASSIGN   3730>>ASSIGN   3732<<ASSIGN
MSTR_REF.PAENT
      3585**DCL      3586--REDEF    3674<<ASSIGN   3689<<ASSIGN   3711<<ASSIGN
MSTR_REF.PAOFF
      3582**DCL      3583--REDEF    3673<<ASSIGN   3688<<ASSIGN   3710<<ASSIGN
MSTR_REF.PSMODE
      3584**DCL      3670<<ASSIGN
MSTR_REF.SET.INMODE
      3589**DCL      3712<<ASSIGN   3848<<ASSIGN
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:79   
MSTR_REF.SET.ORDER
      3592**DCL      3715<<ASSIGN
MSTR_REF.SET.OWNER_TYPE
      3595**DCL      3916<<ASSIGN
MSTR_REF.SET.PATYPE
      3591**DCL      3718<<ASSIGN   3720<<ASSIGN
MSTR_REF.SET.RETYPE
      3590**DCL      3713<<ASSIGN   3850<<ASSIGN
MSTR_REF.SET.SETYPE
      3593**DCL      3716<<ASSIGN
MSTR_REF.SET.SMMODE
      3594**DCL      3852<<ASSIGN   3854<<ASSIGN
MSTR_REF.TYPE
      3577**DCL      3669<<ASSIGN   3686<<ASSIGN   3707<<ASSIGN
NO_AREAS
      3615**DCL      3766<<ASSIGN   3766>>ASSIGN   3772>>ASSIGN   3773>>ASSIGN   3774>>ASSIGN   3776>>ASSIGN
      3779>>ASSIGN   3782>>ASSIGN   3784>>ASSIGN   3946<<ASSIGN
NO_RECS
      3635**DCL      3666<<ASSIGN   3666>>ASSIGN   3682<<ASSIGN   3682>>ASSIGN   3947<<ASSIGN
NO_SETS
      3636**DCL      3703<<ASSIGN   3703>>ASSIGN   3948<<ASSIGN
NXT_MSLOT
      3597**DCL      3668>>ASSIGN   3669>>ASSIGN   3670>>ASSIGN   3671>>ASSIGN   3672>>ASSIGN   3673>>ASSIGN
      3674>>ASSIGN   3677>>ASSIGN   3684>>ASSIGN   3685>>ASSIGN   3686>>ASSIGN   3687>>ASSIGN   3688>>ASSIGN
      3689>>ASSIGN   3695>>ASSIGN   3706>>ASSIGN   3707>>ASSIGN   3708>>ASSIGN   3709>>ASSIGN   3710>>ASSIGN
      3711>>ASSIGN   3712>>ASSIGN   3713>>ASSIGN   3714>>ASSIGN   3715>>ASSIGN   3716>>ASSIGN   3718>>ASSIGN
      3720>>ASSIGN   3725>>ASSIGN   3732>>ASSIGN   3747<<ASSIGN   3747>>ASSIGN   3748>>IF       3762>>ASSIGN
      3940<<ASSIGN
NXT_RSLOT
      3633**DCL      3901<<ASSIGN   3901>>ASSIGN   3902>>IF       3905<<ASSIGN   3905>>ASSIGN   3915>>ASSIGN
      3919>>ASSIGN   3920>>ASSIGN   3921>>ASSIGN   3924>>ASSIGN   3926>>ASSIGN   3927>>ASSIGN   3942<<ASSIGN
NXT_SSLOT
      3625**DCL      3831<<ASSIGN   3831>>ASSIGN   3832>>IF       3838>>ASSIGN   3839>>ASSIGN   3842>>ASSIGN
      3843>>ASSIGN   3844>>ASSIGN   3855>>ASSIGN   3857>>ASSIGN   3859>>ASSIGN   3861>>ASSIGN   3863>>ASSIGN
      3866>>ASSIGN   3868>>ASSIGN   3869>>ASSIGN   3941<<ASSIGN
PR7
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:80   
        20**DCL      3804<<ASSIGN   3804>>ASSIGN   3842>>ASSIGN   3843>>ASSIGN   3855>>ASSIGN   3859>>ASSIGN
      3863>>ASSIGN
REC$
      3353**DCL      3376--IMP-PTR
RECTYP
        17**DCL      3820<<ASSIGN   3822<<ASSIGN   3840>>DOCASE   3908<<ASSIGN   3910<<ASSIGN   3913>>IF
REC_DATA_LN
      3381**DCL      3380--IMP-SIZ
REC_LOC
        19**DCL      3812<<ASSIGN   3813>>ASSIGN   3865>>IF       3866>>ASSIGN   3896<<ASSIGN   3923>>IF
      3924>>ASSIGN
REC_XREF.MSTRINDX
      3631**DCL      3920<<ASSIGN
REC_XREF.NEXT
      3630**DCL      3921<<ASSIGN   3926<<ASSIGN
REC_XREF.OWNR
      3632**DCL      3915<<ASSIGN   3919<<ASSIGN
REC_XREF$
      3628**DCL      3629--IMP-PTR  3884<>CALL     3915>>ASSIGN   3919>>ASSIGN   3920>>ASSIGN   3921>>ASSIGN
      3926>>ASSIGN
SETTYPE
        22**DCL      3705<<ASSIGN   3705>>ASSIGN   3707>>ASSIGN   3949<<ASSIGN
SET_XREF.EIS.NEXT
      3624**DCL      3843<<ASSIGN   3855<<ASSIGN
SET_XREF.EIS.OWNR
      3623**DCL      3844<<ASSIGN   3857<<ASSIGN   3859<<ASSIGN
SET_XREF.EIS.PRIOR
      3622**DCL      3842<<ASSIGN   3861<<ASSIGN   3863<<ASSIGN
SET_XREF.MSTRINDX
      3619**DCL      3838<<ASSIGN
SET_XREF.NEXT
      3620**DCL      3839<<ASSIGN   3868<<ASSIGN
SET_XREF$
      3617**DCL      3618--IMP-PTR  3800<>CALL     3838>>ASSIGN   3839>>ASSIGN   3842>>ASSIGN   3843>>ASSIGN
      3844>>ASSIGN   3855>>ASSIGN   3857>>ASSIGN   3859>>ASSIGN   3861>>ASSIGN   3863>>ASSIGN   3868>>ASSIGN
SYS_FUNC_ERRMSG
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:81   
        35**DCL-ENT  3964--CALL
TEMP_INDX
        16**DCL      3729<<ASSIGN   3732>>ASSIGN
TYPE.MSTRINDX
      3565**DCL      3677<<ASSIGN   3680>>IF       3684<<ASSIGN   3812>>ASSIGN   3920>>ASSIGN
UWA.AC_REC.CALC_NEXT
      2852**DCL      2853--REDEF
UWA.AC_REC.CALC_PRIOR
      2861**DCL      2862--REDEF
UWA.AC_REC.DEFAULTS
      2810**DCL      2811--REDEF
UWA.AC_REC.FILE_CODE
      2815**DCL      2816--REDEF
UWA.AC_REC.FLAG1.ERROR_TYPE
      2812**DCL      2813--REDEF
UWA.AC_REC.KEYS_RESER
      2835**DCL      3774>>ASSIGN   3777>>ASSIGN
UWA.AC_REC.KEY_ALLOC
      2834**DCL      3777>>ASSIGN
UWA.AC_REC.MAX_DBK
      2837**DCL      3774>>ASSIGN
UWA.AC_REC.PERMTYPE
      2826**DCL      3776>>ASSIGN
UWA.AC_REC.PG_TYPE
      2827**DCL      2828--REDEF
UWA.AD_REC.ADDATE
      2792**DCL      2793--REDEF
UWA.DB_RECORD_NAME
      2746**DCL      3819>>IF       3907>>IF
UWA.DB_STATUS
      2740**DCL      3660>>DOWHILE  3697>>DOWHILE  3765>>DOWHILE  3809>>DOWHILE  3816>>DOWHILE  3889>>DOWHILE
      3898>>DOWHILE  3961>>ASSIGN
UWA.OA_REC.GLBL
      2806**DCL      3654>>ASSIGN
UWA.RC_REC.PA_ENTRY
      2883**DCL      3674>>ASSIGN
PL6.E3A0      #001=ZIU$XREF File=ZIU$XREF.:ZIC0TSI                               FRI 09/05/97 13:35 Page:82   
UWA.RC_REC.PA_OFFSET
      2882**DCL      3673>>ASSIGN
UWA.RC_REC.PSMODE
      2872**DCL      3670>>ASSIGN
UWA.RC_REC.RTYPE
      2871**DCL      3669>>ASSIGN   3677>>ASSIGN   3812>>ASSIGN   3916>>ASSIGN   3920>>ASSIGN
UWA.SC_REC.SETGLO
      2891**DCL      3714>>ASSIGN
UWA.SC_REC.SETMODE
      2889**DCL      3717>>IF
UWA.SC_REC.SETORD
      2890**DCL      3715>>ASSIGN
UWA.SC_REC.SETTYPE
      2888**DCL      3716>>ASSIGN   3829>>IF
UWA.SF_REC.DBKOA
      2758**DCL      3763<>CALL     3807<>CALL     3887<>CALL
UWA.SM_REC.HDPNT
      2939**DCL      3856>>IF       3859>>ASSIGN
UWA.SM_REC.INSTYPE
      2929**DCL      3847>>IF
UWA.SM_REC.NXTPNT
      2937**DCL      3855>>ASSIGN
UWA.SM_REC.PRIPNT
      2938**DCL      3860>>IF       3863>>ASSIGN
UWA.SM_REC.PSMOD
      2935**DCL      3851>>IF
UWA.SM_REC.RETTYPE
      2930**DCL      3849>>IF
UWA.SN_REC.SENAME
      2971**DCL      3668>>ASSIGN   3706>>ASSIGN   3723<>CALL     3773>>ASSIGN   3837<>CALL     3895<>CALL
UWA.SO_REC.NXTPNT
      2926**DCL      3843>>ASSIGN
UWA.SO_REC.PRIPNT
      2927**DCL      3842>>ASSIGN
XREF_BUILT
      3637**DCL      3738<<ASSIGN

PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:83   
      381        1        /*T***********************************************************/
      382        2        /*T*                                                         */
      383        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      384        4        /*T*                                                         */
      385        5        /*T***********************************************************/
      386        6
      387        7        /*M* ZIU$HSHXRF   IDSII UTIL        HASH XREF TABLES               */
      388        8        ZIU$HSHXRF: PROC(NAME,INDX) NOAUTO;
      389        9
      390       10    1   DCL NAME CHAR(30) UNAL;
      391       11    1   DCL INDX SBIN;
      392       12    1   DCL XNAME CHAR(32) STATIC ALIGNED;
      393       13    1   DCL HASH(0:7) REDEF XNAME UBIN;
      394       14
      395       15         %INCLUDE ZI_DBU_XREF;
      396      182         %XREF_TBLS;
      397      257    1   FIND_MSTR_ENTRY: ENTRY(NAME,INDX);
      398      258
      399      259    1       CALL HASHNAME;
      400      260    1       INDX = HASHTBL(HASHINDX);
      401      261    2       DO WHILE(INDX >= 0 AND MSTR_REF.NAME(INDX) ~= NAME);
      402      262    2           INDX = MSTR_REF.NXTHSH(INDX);
      403      263    2           END;
      404      264    1       RETURN;
      405      265
      406      266    1   HASHENTRY: ENTRY(NAME,INDX);
      407      267
      408      268    1       CALL HASHNAME;
      409      269    1       INDX = HASHINDX;
      410      270    1       RETURN;
      411      271
      412      272
      413      273    1   HASHNAME: PROC;
      414      274    2       HASHINDX = 0;
      415      275    2       XNAME = NAME;
      416      276    2       HASHINDX = MOD(BITBIN(BINBIT(HASH(0)+HASH(1)+HASH(2)+HASH(3)+
      417      277    2          HASH(4)+HASH(5)+HASH(6)+HASH(7),36)
PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:84   
      418      278    2          & '377777777777'O),
      419      279    2          499); /* HASH TABLE (0:499) */
      420      280    2       RETURN;
      421      281    2   END HASHNAME;
      422      282    1   END ZIU$HSHXRF;
      423      283        %EOD;

PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:85   
--  Include file information  --

   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$HSHXRF.

   Procedure ZIU$HSHXRF requires 64 words for executable code.
   Procedure ZIU$HSHXRF is declared NOAUTO and requires 14 words of local(STATIC) storage.

PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:86   

 Object Unit name= ZIU$HSHXRF                                 File name= ZIU$XREF.:ZIC0TOU
 UTS= SEP 05 '97 13:35:44.12 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    14     16  ZIU$HSHXRF
    1  RoData even  UTS      1      1  ZIU$HSHXRF
    2   Proc  even  none    64    100  ZIU$HSHXRF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  ZIU$HSHXRF
     2      3                  yes      Std        2  FIND_MSTR_ENTRY
     2     43                  yes      Std        2  HASHENTRY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_STATIC_2
PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:87   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     TYPE                                  MSTR$                                 NXT_MSLOT
     MAX_MSLOT                             MSTR_INDX                             HASHTBL
     HASHINDX                              LOC_MODE                              AREA_KEY$
     NO_AREAS                              GLBL_PTR_SZ                           SET_XREF$
     NXT_SSLOT                             MAX_SSLOT                             REC_XREF$
     NXT_RSLOT                             MAX_RSLOT                             NO_RECS
     NO_SETS                               XREF_BUILT                            TYPESET
     TYPEREC
PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:88   


      381        1        /*T***********************************************************/
      382        2        /*T*                                                         */
      383        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      384        4        /*T*                                                         */
      385        5        /*T***********************************************************/
      386        6
      387        7        /*M* ZIU$HSHXRF   IDSII UTIL        HASH XREF TABLES               */
      388        8        ZIU$HSHXRF: PROC(NAME,INDX) NOAUTO;

      8  2 000000   000000 700200 xent  ZIU$HSHXRF   TSX0  ! X66_STATIC_2
         2 000001   000000 000002 0                  ZERO    0,2
         2 000002   000005 710000 2                  TRA     s:259

      389        9
      390       10    1   DCL NAME CHAR(30) UNAL;
      391       11    1   DCL INDX SBIN;
      392       12    1   DCL XNAME CHAR(32) STATIC ALIGNED;
      393       13    1   DCL HASH(0:7) REDEF XNAME UBIN;
      394       14
      395       15         %INCLUDE ZI_DBU_XREF;
      396      182         %XREF_TBLS;
      397      257    1   FIND_MSTR_ENTRY: ENTRY(NAME,INDX);

    257  2 000003   000000 700200 xent  FIND_MSTR_E* TSX0  ! X66_STATIC_2
         2 000004   000000 000002 0                  ZERO    0,2

      398      258
      399      259    1       CALL HASHNAME;

    259  2 000005   000054 701000 2                  TSX1    HASHNAME
         2 000006   000000 011000                    NOP     0

      400      260    1       INDX = HASHTBL(HASHINDX);

    260  2 000007   000000 235000 xsym               LDA     HASHINDX
         2 000010   000001 735000                    ALS     1
PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:89   
         2 000011   000000 100405                    MLR     fill='000'O
         2 000012   000000 000002 xsym               ADSC9   HASHTBL,A                cn=0,n=2
         2 000013   000014 000004 0                  ADSC9   XNAME+9                  cn=0,n=4
         2 000014   000014 236000 0                  LDQ     XNAME+9
         2 000015   000022 732000                    QRS     18
         2 000016   000002 470400 0                  LDP0    @INDX
         2 000017   000000 756100                    STQ     0,,PR0

      401      261    2       DO WHILE(INDX >= 0 AND MSTR_REF.NAME(INDX) ~= NAME);

    261  2 000020   000030 710000 2                  TRA     s:263

      402      262    2           INDX = MSTR_REF.NXTHSH(INDX);

    262  2 000021   000002 470400 0                  LDP0    @INDX
         2 000022   000000 236100                    LDQ     0,,PR0
         2 000023   000012 402007                    MPY     10,DL
         2 000024   000000 471400 xsym               LDP1    MSTR$
         2 000025   100001 236106                    LDQ     1,QL,PR1
         2 000026   000022 732000                    QRS     18
         2 000027   000000 756100                    STQ     0,,PR0

      403      263    2           END;

    263  2 000030   000041 604000 2                  TMI     s:264
         2 000031   000012 402007                    MPY     10,DL
         2 000032   000002 736000                    QLS     2
         2 000033   000000 471400 xsym               LDP1    MSTR$
         2 000034   000001 473400 0                  LDP3    @NAME
         2 000035   040100 106506                    CMPC    fill='040'O
         2 000036   100001 400036                    ADSC9   1,Q,PR1                  cn=2,n=30
         2 000037   300000 000036                    ADSC9   0,,PR3                   cn=0,n=30
         2 000040   000021 601000 2                  TNZ     s:262

      404      264    1       RETURN;

    264  2 000041   000000 221200 0                  LDX1  ! 0
PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:90   
         2 000042   000001 702211                    TSX2  ! 1,X1

      405      265
      406      266    1   HASHENTRY: ENTRY(NAME,INDX);

    266  2 000043   000000 700200 xent  HASHENTRY    TSX0  ! X66_STATIC_2
         2 000044   000000 000002 0                  ZERO    0,2

      407      267
      408      268    1       CALL HASHNAME;

    268  2 000045   000054 701000 2                  TSX1    HASHNAME
         2 000046   000000 011000                    NOP     0

      409      269    1       INDX = HASHINDX;

    269  2 000047   000002 470400 0                  LDP0    @INDX
         2 000050   000000 235000 xsym               LDA     HASHINDX
         2 000051   000000 755100                    STA     0,,PR0

      410      270    1       RETURN;

    270  2 000052   000000 221200 0                  LDX1  ! 0
         2 000053   000001 702211                    TSX2  ! 1,X1

      411      271
      412      272
      413      273    1   HASHNAME: PROC;

    273  2 000054   000013 741200 0     HASHNAME     STX1  ! XNAME+8

      414      274    2       HASHINDX = 0;

    274  2 000055   000000 450000 xsym               STZ     HASHINDX

      415      275    2       XNAME = NAME;

PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:91   
    275  2 000056   000001 470400 0                  LDP0    @NAME
         2 000057   040000 100500                    MLR     fill='040'O
         2 000060   000000 000036                    ADSC9   0,,PR0                   cn=0,n=30
         2 000061   000003 000040 0                  ADSC9   XNAME                    cn=0,n=32

      416      276    2       HASHINDX = MOD(BITBIN(BINBIT(HASH(0)+HASH(1)+HASH(2)+HASH(3)+

    276  2 000062   000003 236000 0                  LDQ     XNAME
         2 000063   000004 036000 0                  ADLQ    XNAME+1
         2 000064   000005 036000 0                  ADLQ    XNAME+2
         2 000065   000006 036000 0                  ADLQ    XNAME+3
         2 000066   000007 036000 0                  ADLQ    XNAME+4
         2 000067   000010 036000 0                  ADLQ    XNAME+5
         2 000070   000011 036000 0                  ADLQ    XNAME+6
         2 000071   000012 036000 0                  ADLQ    XNAME+7
         2 000072   000000 376000 1                  ANQ     0
         2 000073   000044 737000                    LLS     36
         2 000074   000043 773000                    LRL     35
         2 000075   000763 507007                    DVF     499,DL
         2 000076   000000 756000 xsym               STQ     HASHINDX

      417      277    2          HASH(4)+HASH(5)+HASH(6)+HASH(7),36)
      418      278    2          & '377777777777'O),
      419      279    2          499); /* HASH TABLE (0:499) */
      420      280    2       RETURN;

    280  2 000077   000001 702211                    TSX2  ! 1,X1

XNAME
 Sect OctLoc
   0     003   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   1     000   377777 777777                                                    ....
      421      281    2   END HASHNAME;
      422      282    1   END ZIU$HSHXRF;
PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:92   
      423      283        %EOD;

PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:93   
--  Include file information  --

   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$HSHXRF.

   Procedure ZIU$HSHXRF requires 64 words for executable code.
   Procedure ZIU$HSHXRF is declared NOAUTO and requires 14 words of local(STATIC) storage.
PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:94   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=ZIU$HSHXRF File=ZIU$XREF.:ZIC0TSI                             FRI 09/05/97 13:35 Page:95   
          MINI XREF LISTING

AREA_KEY$
       220**DCL       223--IMP-PTR
HASH
        13**DCL       276>>ASSIGN    276>>ASSIGN    276>>ASSIGN    276>>ASSIGN    276>>ASSIGN    276>>ASSIGN
       276>>ASSIGN    276>>ASSIGN
HASHINDX
       217**DCL       260>>ASSIGN    269>>ASSIGN    274<<ASSIGN    276<<ASSIGN
HASHNAME
       273**PROC      259--CALL      268--CALL
HASHTBL
       216**DCL       260>>ASSIGN
INDX
        11**DCL         8--PROC      257--ENTRY     260<<ASSIGN    261>>DOWHILE   261>>DOWHILE   262<<ASSIGN
       262>>ASSIGN    266--ENTRY     269<<ASSIGN
MSTR$
       189**DCL       192--IMP-PTR   261>>DOWHILE   262>>ASSIGN
MSTR_REF.NAME
       197**DCL       261>>DOWHILE
MSTR_REF.NXTHSH
       195**DCL       196--REDEF     262>>ASSIGN
MSTR_REF.PAENT
       201**DCL       202--REDEF
MSTR_REF.PAOFF
       198**DCL       199--REDEF
NAME
        10**DCL         8--PROC      257--ENTRY     261>>DOWHILE   266--ENTRY     275>>ASSIGN
REC_XREF$
       244**DCL       245--IMP-PTR
SET_XREF$
       233**DCL       234--IMP-PTR
XNAME
        12**DCL        13--REDEF     275<<ASSIGN

PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:96   
      424        1        /*M* ZIU$INTERACT   IDSII  UTILITIES  REC AND SET INTERACTION   */
      425        2        /*T***********************************************************/
      426        3        /*T*                                                         */
      427        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      428        5        /*T*                                                         */
      429        6        /*T***********************************************************/
      430        7        /*P*
      431        8           NAME: ZIU$INTERACT
      432        9        PURPOSE: A record and set type are passed and if the record and set
      433       10                 interact with each other the interact bit is turned on, in
      434       11                 addition if the record is the owner of the set the owner
      435       12                 flag is also turned on.                                 */
      436       13        ZIU$INTERACT: PROC(RECTYPE,SETTYPE,INTERACT,OWNER);
      437       14    1   DCL RECTYPE SBIN HALF CALIGNED;
      438       15    1   DCL SETTYPE SBIN HALF CALIGNED;
      439       16    1   DCL INTERACT BIT(1) UNAL;
      440       17    1   DCL OWNER BIT(1) UNAL;
      441       18
      442       19    1   DCL INDX SBIN STATIC ALIGNED;
      443       20    1   DCL TEMP SBIN STATIC ALIGNED;
      444       21
      445       22
      446       23         %INCLUDE ZI_DBU_XREF;
      447      190         %XREF_TBLS;
      448      265         %INCLUDE CP_6_SUBS;
      449      805
      450      806    1       INTERACT = %NO#;
      451      807    1       OWNER = %NO#;
      452      808
      453      809    1       MSTR_INDX = 0;
      454      810    2       DO WHILE(MSTR_REF.TYPE(MSTR_INDX) ~= RECTYPE AND MSTR_INDX < NO_RECS);
      455      811    2           MSTR_INDX = MSTR_INDX +1;
      456      812    2           END;
      457      813
      458      814    1       IF MSTR_INDX >= NO_RECS THEN
      459      815    1           RETURN;
      460      816
PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:97   
      461      817    1       INDX = MSTR_REF.NEXT(MSTR_INDX);
      462      818    2       DO WHILE(INDX ~= -1);
      463      819    2           IF MSTR_REF.TYPE(SET_XREF.MSTRINDX(INDX)) = SETTYPE THEN
      464      820    3           DO;
      465      821    3               INTERACT = %YES#;
      466      822    3               TEMP = MSTR_REF.NEXT(SET_XREF.MSTRINDX(INDX));
      467      823    3               IF REC_XREF.MSTRINDX(TEMP) = MSTR_INDX AND
      468      824    3                  REC_XREF.OWNR(TEMP) = '1'B THEN
      469      825    3                   OWNER = %YES#;
      470      826    3               END;
      471      827    2           INDX = SET_XREF.NEXT(INDX);
      472      828    2           END;
      473      829
      474      830    1       RETURN;
      475      831    1   END ZIU$INTERACT;

PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:98   
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$INTERACT.

   Procedure ZIU$INTERACT requires 98 words for executable code.
   Procedure ZIU$INTERACT requires 10 words of local(AUTO) storage.

    No errors detected in file ZIU$XREF.:ZIC0TSI    .

PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:99   

 Object Unit name= ZIU$INTERACT                               File name= ZIU$XREF.:ZIC0TOU
 UTS= SEP 05 '97 13:35:46.64 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     2      2  ZIU$INTERACT
    1   Proc  even  none    98    142  ZIU$INTERACT
    2  RoData even  none     3      3  ZIU$INTERACT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        4  ZIU$INTERACT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:100  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     TYPE                                  MSTR$                                 NXT_MSLOT
     MAX_MSLOT                             MSTR_INDX                             HASHTBL
     HASHINDX                              LOC_MODE                              AREA_KEY$
     NO_AREAS                              GLBL_PTR_SZ                           SET_XREF$
     NXT_SSLOT                             MAX_SSLOT                             REC_XREF$
     NXT_RSLOT                             MAX_RSLOT                             NO_RECS
     NO_SETS                               XREF_BUILT                            TYPESET
     TYPEREC
PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:101  


      424        1        /*M* ZIU$INTERACT   IDSII  UTILITIES  REC AND SET INTERACTION   */
      425        2        /*T***********************************************************/
      426        3        /*T*                                                         */
      427        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      428        5        /*T*                                                         */
      429        6        /*T***********************************************************/
      430        7        /*P*
      431        8           NAME: ZIU$INTERACT
      432        9        PURPOSE: A record and set type are passed and if the record and set
      433       10                 interact with each other the interact bit is turned on, in
      434       11                 addition if the record is the owner of the set the owner
      435       12                 flag is also turned on.                                 */
      436       13        ZIU$INTERACT: PROC(RECTYPE,SETTYPE,INTERACT,OWNER);

     13  1 000000   000000 700200 xent  ZIU$INTERACT TSX0  ! X66_AUTO_4
         1 000001   000012 000004                    ZERO    10,4

      437       14    1   DCL RECTYPE SBIN HALF CALIGNED;
      438       15    1   DCL SETTYPE SBIN HALF CALIGNED;
      439       16    1   DCL INTERACT BIT(1) UNAL;
      440       17    1   DCL OWNER BIT(1) UNAL;
      441       18
      442       19    1   DCL INDX SBIN STATIC ALIGNED;
      443       20    1   DCL TEMP SBIN STATIC ALIGNED;
      444       21
      445       22
      446       23         %INCLUDE ZI_DBU_XREF;
      447      190         %XREF_TBLS;
      448      265         %INCLUDE CP_6_SUBS;
      449      805
      450      806    1       INTERACT = %NO#;

    806  1 000002   200005 470500                    LDP0    @INTERACT,,AUTO
         1 000003   003100 060400                    CSL     bolr='003'O
         1 000004   000000 000001 2                  BDSC    0                        by=0,bit=0,n=1
         1 000005   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:102  

      451      807    1       OWNER = %NO#;

    807  1 000006   200006 471500                    LDP1    @OWNER,,AUTO
         1 000007   003100 060400                    CSL     bolr='003'O
         1 000010   000000 000001 2                  BDSC    0                        by=0,bit=0,n=1
         1 000011   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1

      452      808
      453      809    1       MSTR_INDX = 0;

    809  1 000012   000000 450000 xsym               STZ     MSTR_INDX

      454      810    2       DO WHILE(MSTR_REF.TYPE(MSTR_INDX) ~= RECTYPE AND MSTR_INDX < NO_RECS);

    810  1 000013   000015 710000 1                  TRA     s:812

      455      811    2           MSTR_INDX = MSTR_INDX +1;

    811  1 000014   000000 054000 xsym               AOS     MSTR_INDX

      456      812    2           END;

    812  1 000015   200003 470500                    LDP0    @RECTYPE,,AUTO
         1 000016   000100 100500                    MLR     fill='000'O
         1 000017   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         1 000020   200010 000004                    ADSC9   @OWNER+2,,AUTO           cn=0,n=4
         1 000021   200010 236100                    LDQ     @OWNER+2,,AUTO
         1 000022   000022 732000                    QRS     18
         1 000023   200011 756100                    STQ     @OWNER+3,,AUTO
         1 000024   000000 236000 xsym               LDQ     MSTR_INDX
         1 000025   000012 402007                    MPY     10,DL
         1 000026   000000 471400 xsym               LDP1    MSTR$
         1 000027   100000 236106                    LDQ     0,QL,PR1
         1 000030   000022 732000                    QRS     18
         1 000031   200011 116100                    CMPQ    @OWNER+3,,AUTO
         1 000032   000036 600000 1                  TZE     s:814
PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:103  
         1 000033   000000 236000 xsym               LDQ     MSTR_INDX
         1 000034   000000 116000 xsym               CMPQ    NO_RECS
         1 000035   000014 604000 1                  TMI     s:811

      457      813
      458      814    1       IF MSTR_INDX >= NO_RECS THEN

    814  1 000036   000000 236000 xsym               LDQ     MSTR_INDX
         1 000037   000000 116000 xsym               CMPQ    NO_RECS
         1 000040   000042 604000 1                  TMI     s:817

      459      815    1           RETURN;

    815  1 000041   000000 702200 xent               TSX2  ! X66_ARET

      460      816
      461      817    1       INDX = MSTR_REF.NEXT(MSTR_INDX);

    817  1 000042   000012 402007                    MPY     10,DL
         1 000043   100000 236106                    LDQ     0,QL,PR1
         1 000044   000022 736000                    QLS     18
         1 000045   000022 732000                    QRS     18
         1 000046   000000 756000 0                  STQ     INDX

      462      818    2       DO WHILE(INDX ~= -1);

    818  1 000047   000137 710000 1                  TRA     s:828

      463      819    2           IF MSTR_REF.TYPE(SET_XREF.MSTRINDX(INDX)) = SETTYPE THEN

    819  1 000050   000000 235000 0                  LDA     INDX
         1 000051   000002 735000                    ALS     2
         1 000052   000000 470400 xsym               LDP0    SET_XREF$
         1 000053   000000 236105                    LDQ     0,AL,PR0
         1 000054   000022 732000                    QRS     18
         1 000055   000012 402007                    MPY     10,DL
         1 000056   200004 471500                    LDP1    @SETTYPE,,AUTO
PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:104  
         1 000057   000100 100500                    MLR     fill='000'O
         1 000060   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         1 000061   200010 000004                    ADSC9   @OWNER+2,,AUTO           cn=0,n=4
         1 000062   000000 620006                    EAX0    0,QL
         1 000063   200010 236100                    LDQ     @OWNER+2,,AUTO
         1 000064   000022 732000                    QRS     18
         1 000065   200011 756100                    STQ     @OWNER+3,,AUTO
         1 000066   000000 473400 xsym               LDP3    MSTR$
         1 000067   300000 236110                    LDQ     0,X0,PR3
         1 000070   000022 732000                    QRS     18
         1 000071   200011 116100                    CMPQ    @OWNER+3,,AUTO
         1 000072   000130 601000 1                  TNZ     s:827

      464      820    3           DO;

      465      821    3               INTERACT = %YES#;

    821  1 000073   200005 474500                    LDP4    @INTERACT,,AUTO
         1 000074   003100 060400                    CSL     bolr='003'O
         1 000075   000001 000001 2                  BDSC    1                        by=0,bit=0,n=1
         1 000076   400000 000001                    BDSC    0,,PR4                   by=0,bit=0,n=1

      466      822    3               TEMP = MSTR_REF.NEXT(SET_XREF.MSTRINDX(INDX));

    822  1 000077   000000 235000 0                  LDA     INDX
         1 000100   000002 735000                    ALS     2
         1 000101   000000 470400 xsym               LDP0    SET_XREF$
         1 000102   000000 236105                    LDQ     0,AL,PR0
         1 000103   000022 732000                    QRS     18
         1 000104   000012 402007                    MPY     10,DL
         1 000105   000000 473400 xsym               LDP3    MSTR$
         1 000106   300000 236106                    LDQ     0,QL,PR3
         1 000107   000022 736000                    QLS     18
         1 000110   000022 732000                    QRS     18
         1 000111   000001 756000 0                  STQ     TEMP

      467      823    3               IF REC_XREF.MSTRINDX(TEMP) = MSTR_INDX AND
PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:105  

    823  1 000112   000000 475400 xsym               LDP5    REC_XREF$
         1 000113   500000 236106                    LDQ     0,QL,PR5
         1 000114   000001 772000                    QRL     1
         1 000115   377777 376007                    ANQ     131071,DL
         1 000116   000000 116000 xsym               CMPQ    MSTR_INDX
         1 000117   000130 601000 1                  TNZ     s:827
         1 000120   000001 720000 0                  LXL0    TEMP
         1 000121   500000 236110                    LDQ     0,X0,PR5
         1 000122   000001 316007                    CANQ    1,DL
         1 000123   000130 600000 1                  TZE     s:827

      468      824    3                  REC_XREF.OWNR(TEMP) = '1'B THEN
      469      825    3                   OWNER = %YES#;

    825  1 000124   200006 476500                    LDP6    @OWNER,,AUTO
         1 000125   003100 060400                    CSL     bolr='003'O
         1 000126   000001 000001 2                  BDSC    1                        by=0,bit=0,n=1
         1 000127   600000 000001                    BDSC    0,,PR6                   by=0,bit=0,n=1

      470      826    3               END;

      471      827    2           INDX = SET_XREF.NEXT(INDX);

    827  1 000130   000000 235000 0                  LDA     INDX
         1 000131   000002 735000                    ALS     2
         1 000132   000000 470400 xsym               LDP0    SET_XREF$
         1 000133   000000 236105                    LDQ     0,AL,PR0
         1 000134   000022 736000                    QLS     18
         1 000135   000022 732000                    QRS     18
         1 000136   000000 756000 0                  STQ     INDX

      472      828    2           END;

    828  1 000137   000002 116000 2                  CMPQ    2
         1 000140   000050 601000 1                  TNZ     s:819

PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:106  
      473      829
      474      830    1       RETURN;

    830  1 000141   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   2     000   000000 000000   400000 000000   777777 777777                    ............
      475      831    1   END ZIU$INTERACT;

PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:107  
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$INTERACT.

   Procedure ZIU$INTERACT requires 98 words for executable code.
   Procedure ZIU$INTERACT requires 10 words of local(AUTO) storage.

    No errors detected in file ZIU$XREF.:ZIC0TSI    .
PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:108  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:109  
          MINI XREF LISTING

AREA_KEY$
       228**DCL       231--IMP-PTR
INDX
        19**DCL       817<<ASSIGN    818>>DOWHILE   819>>IF        822>>ASSIGN    827<<ASSIGN    827>>ASSIGN
INTERACT
        16**DCL        13--PROC      806<<ASSIGN    821<<ASSIGN
MSTR$
       197**DCL       200--IMP-PTR   810>>DOWHILE   817>>ASSIGN    819>>IF        822>>ASSIGN
MSTR_INDX
       223**DCL       809<<ASSIGN    810>>DOWHILE   810>>DOWHILE   811<<ASSIGN    811>>ASSIGN    814>>IF
       817>>ASSIGN    823>>IF
MSTR_REF.NEXT
       202**DCL       817>>ASSIGN    822>>ASSIGN
MSTR_REF.NXTHSH
       203**DCL       204--REDEF
MSTR_REF.PAENT
       209**DCL       210--REDEF
MSTR_REF.PAOFF
       206**DCL       207--REDEF
MSTR_REF.TYPE
       201**DCL       810>>DOWHILE   819>>IF
NO_RECS
       259**DCL       810>>DOWHILE   814>>IF
OWNER
        17**DCL        13--PROC      807<<ASSIGN    825<<ASSIGN
RECTYPE
        14**DCL        13--PROC      810>>DOWHILE
REC_XREF.MSTRINDX
       255**DCL       823>>IF
REC_XREF.OWNR
       256**DCL       823>>IF
REC_XREF$
PL6.E3A0      #003=ZIU$INTERACT File=ZIU$XREF.:ZIC0TSI                           FRI 09/05/97 13:35 Page:110  
       252**DCL       253--IMP-PTR   823>>IF        823>>IF
SETTYPE
        15**DCL        13--PROC      819>>IF
SET_XREF.MSTRINDX
       243**DCL       819>>IF        822>>ASSIGN
SET_XREF.NEXT
       244**DCL       827>>ASSIGN
SET_XREF$
       241**DCL       242--IMP-PTR   819>>IF        822>>ASSIGN    827>>ASSIGN
TEMP
        20**DCL       822<<ASSIGN    823>>IF        823>>IF
